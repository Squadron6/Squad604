typedef char *__builtin_va_list;
typedef typeof (((int *)0) - ((int *)0)) ptrdiff_t;
typedef typeof (sizeof(int)) size_t;
extern "C" {
    union wait {
        union wait;
        int w_status;
        struct {
            unsigned int __w_termsig : (IntegerLiteral 0x999a250 </usr/include/i386-linux-gnu/bits/waitstatus.h:73:27> 'int' 7)
;
            unsigned int __w_coredump : (IntegerLiteral 0x999a2b0 </usr/include/i386-linux-gnu/bits/waitstatus.h:74:28> 'int' 1)
;
            unsigned int __w_retcode : (IntegerLiteral 0x999a310 </usr/include/i386-linux-gnu/bits/waitstatus.h:75:27> 'int' 8)
;
            unsigned int : (IntegerLiteral 0x999a370 </usr/include/i386-linux-gnu/bits/waitstatus.h:76:15> 'int' 16)
;
        };
        struct <anonymous struct at /usr/include/i386-linux-gnu/bits/waitstatus.h:70:5> __wait_terminated;
        struct {
            unsigned int __w_stopval : (IntegerLiteral 0x999a510 </usr/include/i386-linux-gnu/bits/waitstatus.h:88:27> 'int' 8)
;
            unsigned int __w_stopsig : (IntegerLiteral 0x999a570 </usr/include/i386-linux-gnu/bits/waitstatus.h:89:27> 'int' 8)
;
            unsigned int : (IntegerLiteral 0x999a5d0 </usr/include/i386-linux-gnu/bits/waitstatus.h:90:15> 'int' 16)
;
        };
        struct <anonymous struct at /usr/include/i386-linux-gnu/bits/waitstatus.h:85:5> __wait_stopped;
    };
    struct {
        int quot;
        int rem;
    };
    typedef struct div_t div_t;
    struct {
        long quot;
        long rem;
    };
    typedef struct ldiv_t ldiv_t;
    struct {
        long long quot;
        long long rem;
    };
    typedef struct lldiv_t lldiv_t;
    extern size_t __ctype_get_mb_cur_max() throw();
    extern double atof(const char *__nptr) throw();
    extern int atoi(const char *__nptr) throw();
    extern long atol(const char *__nptr) throw();
    extern long long atoll(const char *__nptr) throw();
    extern double strtod(const char *restrict __nptr, char **restrict __endptr) throw();
    extern float strtof(const char *restrict __nptr, char **restrict __endptr) throw();
    extern long double strtold(const char *restrict __nptr, char **restrict __endptr) throw();
    extern long strtol(const char *restrict __nptr, char **restrict __endptr, int __base) throw();
    extern unsigned long strtoul(const char *restrict __nptr, char **restrict __endptr, int __base) throw();
    extern long long strtoq(const char *restrict __nptr, char **restrict __endptr, int __base) throw();
    extern unsigned long long strtouq(const char *restrict __nptr, char **restrict __endptr, int __base) throw();
    extern long long strtoll(const char *restrict __nptr, char **restrict __endptr, int __base) throw();
    extern unsigned long long strtoull(const char *restrict __nptr, char **restrict __endptr, int __base) throw();
    struct __locale_struct {
        struct __locale_struct;
        struct __locale_data;
        struct __locale_data *__locales[13];
        const unsigned short *__ctype_b;
        const int *__ctype_tolower;
        const int *__ctype_toupper;
        const char *__names[13];
    };
    typedef struct __locale_struct *__locale_t;
    typedef __locale_t locale_t;
    extern long strtol_l(const char *restrict __nptr, char **restrict __endptr, int __base, __locale_t __loc) throw();
    extern unsigned long strtoul_l(const char *restrict __nptr, char **restrict __endptr, int __base, __locale_t __loc) throw();
    extern long long strtoll_l(const char *restrict __nptr, char **restrict __endptr, int __base, __locale_t __loc) throw();
    extern unsigned long long strtoull_l(const char *restrict __nptr, char **restrict __endptr, int __base, __locale_t __loc) throw();
    extern double strtod_l(const char *restrict __nptr, char **restrict __endptr, __locale_t __loc) throw();
    extern float strtof_l(const char *restrict __nptr, char **restrict __endptr, __locale_t __loc) throw();
    extern long double strtold_l(const char *restrict __nptr, char **restrict __endptr, __locale_t __loc) throw();
    extern char *l64a(long __n) throw();
    extern long a64l(const char *__s) throw();
    extern "C" {
        typedef unsigned char __u_char;
        typedef unsigned short __u_short;
        typedef unsigned int __u_int;
        typedef unsigned long __u_long;
        typedef signed char __int8_t;
        typedef unsigned char __uint8_t;
        typedef short __int16_t;
        typedef unsigned short __uint16_t;
        typedef int __int32_t;
        typedef unsigned int __uint32_t;
        typedef long long __int64_t;
        typedef unsigned long long __uint64_t;
        typedef long long __quad_t;
        typedef unsigned long long __u_quad_t;
        typedef __u_quad_t __dev_t;
        typedef unsigned int __uid_t;
        typedef unsigned int __gid_t;
        typedef unsigned long __ino_t;
        typedef __u_quad_t __ino64_t;
        typedef unsigned int __mode_t;
        typedef unsigned int __nlink_t;
        typedef long __off_t;
        typedef __quad_t __off64_t;
        typedef int __pid_t;
        struct {
            int __val[2];
        };
        typedef struct __fsid_t __fsid_t;
        typedef long __clock_t;
        typedef unsigned long __rlim_t;
        typedef __u_quad_t __rlim64_t;
        typedef unsigned int __id_t;
        typedef long __time_t;
        typedef unsigned int __useconds_t;
        typedef long __suseconds_t;
        typedef int __daddr_t;
        typedef long __swblk_t;
        typedef int __key_t;
        typedef int __clockid_t;
        typedef void *__timer_t;
        typedef long __blksize_t;
        typedef long __blkcnt_t;
        typedef __quad_t __blkcnt64_t;
        typedef unsigned long __fsblkcnt_t;
        typedef __u_quad_t __fsblkcnt64_t;
        typedef unsigned long __fsfilcnt_t;
        typedef __u_quad_t __fsfilcnt64_t;
        typedef int __ssize_t;
        typedef __off64_t __loff_t;
        typedef __quad_t *__qaddr_t;
        typedef char *__caddr_t;
        typedef int __intptr_t;
        typedef unsigned int __socklen_t;
        typedef __u_char u_char;
        typedef __u_short u_short;
        typedef __u_int u_int;
        typedef __u_long u_long;
        typedef __quad_t quad_t;
        typedef __u_quad_t u_quad_t;
        typedef __fsid_t fsid_t;
        typedef __loff_t loff_t;
        typedef __ino_t ino_t;
        typedef __ino64_t ino64_t;
        typedef __dev_t dev_t;
        typedef __gid_t gid_t;
        typedef __mode_t mode_t;
        typedef __nlink_t nlink_t;
        typedef __uid_t uid_t;
        typedef __off_t off_t;
        typedef __off64_t off64_t;
        typedef __pid_t pid_t;
        typedef __id_t id_t;
        typedef __ssize_t ssize_t;
        typedef __daddr_t daddr_t;
        typedef __caddr_t caddr_t;
        typedef __key_t key_t;
        typedef __clock_t clock_t;
        typedef __time_t time_t;
        typedef __clockid_t clockid_t;
        typedef __timer_t timer_t;
        typedef __useconds_t useconds_t;
        typedef __suseconds_t suseconds_t;
        typedef unsigned long ulong;
        typedef unsigned short ushort;
        typedef unsigned int uint;
        typedef signed char int8_t;
        typedef short int16_t;
        typedef int int32_t;
        typedef long long int64_t;
        typedef unsigned char u_int8_t;
        typedef unsigned short u_int16_t;
        typedef unsigned int u_int32_t;
        typedef unsigned long long u_int64_t;
        typedef int register_t;
        typedef int __sig_atomic_t;
        struct {
            unsigned long __val[32];
        };
        typedef struct __sigset_t __sigset_t;
        typedef __sigset_t sigset_t;
        struct timespec {
            struct timespec;
            __time_t tv_sec;
            long tv_nsec;
        };
        struct timeval {
            struct timeval;
            __time_t tv_sec;
            __suseconds_t tv_usec;
        };
        typedef long __fd_mask;
        struct {
            __fd_mask fds_bits[32];
        };
        typedef struct fd_set fd_set;
        typedef __fd_mask fd_mask;
        extern "C" {
            extern int select(int __nfds, fd_set *restrict __readfds, fd_set *restrict __writefds, fd_set *restrict __exceptfds, struct timeval *restrict __timeout);
            extern int pselect(int __nfds, fd_set *restrict __readfds, fd_set *restrict __writefds, fd_set *restrict __exceptfds, const struct timespec *restrict __timeout, const __sigset_t *restrict __sigmask);
        }
        extern "C" {
            extern unsigned int gnu_dev_major(unsigned long long __dev) throw();
            extern unsigned int gnu_dev_minor(unsigned long long __dev) throw();
            extern unsigned long long gnu_dev_makedev(unsigned int __major, unsigned int __minor) throw();
        }
        typedef __blksize_t blksize_t;
        typedef __blkcnt_t blkcnt_t;
        typedef __fsblkcnt_t fsblkcnt_t;
        typedef __fsfilcnt_t fsfilcnt_t;
        typedef __blkcnt64_t blkcnt64_t;
        typedef __fsblkcnt64_t fsblkcnt64_t;
        typedef __fsfilcnt64_t fsfilcnt64_t;
        typedef unsigned long pthread_t;
        union {
            char __size[36];
            long __align;
        };
        typedef union pthread_attr_t pthread_attr_t;
        struct __pthread_internal_slist {
            struct __pthread_internal_slist;
            struct __pthread_internal_slist *__next;
        };
        typedef struct __pthread_internal_slist __pthread_slist_t;
        union {
            struct __pthread_mutex_s {
                struct __pthread_mutex_s;
                int __lock;
                unsigned int __count;
                int __owner;
                int __kind;
                unsigned int __nusers;
                union {
                    int __spins;
                    __pthread_slist_t __list;
                } ;
                ;
                ;
            };
            struct __pthread_mutex_s __data;
            char __size[24];
            long __align;
        };
        typedef union pthread_mutex_t pthread_mutex_t;
        union {
            char __size[4];
            long __align;
        };
        typedef union pthread_mutexattr_t pthread_mutexattr_t;
        union {
            struct {
                int __lock;
                unsigned int __futex;
                unsigned long long __total_seq;
                unsigned long long __wakeup_seq;
                unsigned long long __woken_seq;
                void *__mutex;
                unsigned int __nwaiters;
                unsigned int __broadcast_seq;
            };
            struct <anonymous struct at /usr/include/i386-linux-gnu/bits/pthreadtypes.h:86:3> __data;
            char __size[48];
            long long __align;
        };
        typedef union pthread_cond_t pthread_cond_t;
        union {
            char __size[4];
            long __align;
        };
        typedef union pthread_condattr_t pthread_condattr_t;
        typedef unsigned int pthread_key_t;
        typedef int pthread_once_t;
        union {
            struct {
                int __lock;
                unsigned int __nr_readers;
                unsigned int __readers_wakeup;
                unsigned int __writer_wakeup;
                unsigned int __nr_readers_queued;
                unsigned int __nr_writers_queued;
                unsigned char __flags;
                unsigned char __shared;
                unsigned char __pad1;
                unsigned char __pad2;
                int __writer;
            };
            struct <anonymous struct at /usr/include/i386-linux-gnu/bits/pthreadtypes.h:121:3> __data;
            char __size[32];
            long __align;
        };
        typedef union pthread_rwlock_t pthread_rwlock_t;
        union {
            char __size[8];
            long __align;
        };
        typedef union pthread_rwlockattr_t pthread_rwlockattr_t;
        typedef volatile int pthread_spinlock_t;
        union {
            char __size[20];
            long __align;
        };
        typedef union pthread_barrier_t pthread_barrier_t;
        union {
            char __size[4];
            int __align;
        };
        typedef union pthread_barrierattr_t pthread_barrierattr_t;
    }
    extern long random() throw();
    extern void srandom(unsigned int __seed) throw();
    extern char *initstate(unsigned int __seed, char *__statebuf, size_t __statelen) throw();
    extern char *setstate(char *__statebuf) throw();
    struct random_data {
        struct random_data;
        int32_t *fptr;
        int32_t *rptr;
        int32_t *state;
        int rand_type;
        int rand_deg;
        int rand_sep;
        int32_t *end_ptr;
    };
    extern int random_r(struct random_data *restrict __buf, int32_t *restrict __result) throw();
    extern int srandom_r(unsigned int __seed, struct random_data *__buf) throw();
    extern int initstate_r(unsigned int __seed, char *restrict __statebuf, size_t __statelen, struct random_data *restrict __buf) throw();
    extern int setstate_r(char *restrict __statebuf, struct random_data *restrict __buf) throw();
    extern int rand() throw();
    extern void srand(unsigned int __seed) throw();
    extern int rand_r(unsigned int *__seed) throw();
    extern double drand48() throw();
    extern double erand48(unsigned short __xsubi[3]) throw();
    extern long lrand48() throw();
    extern long nrand48(unsigned short __xsubi[3]) throw();
    extern long mrand48() throw();
    extern long jrand48(unsigned short __xsubi[3]) throw();
    extern void srand48(long __seedval) throw();
    extern unsigned short *seed48(unsigned short __seed16v[3]) throw();
    extern void lcong48(unsigned short __param[7]) throw();
    struct drand48_data {
        struct drand48_data;
        unsigned short __x[3];
        unsigned short __old_x[3];
        unsigned short __c;
        unsigned short __init;
        unsigned long long __a;
    };
    extern int drand48_r(struct drand48_data *restrict __buffer, double *restrict __result) throw();
    extern int erand48_r(unsigned short __xsubi[3], struct drand48_data *restrict __buffer, double *restrict __result) throw();
    extern int lrand48_r(struct drand48_data *restrict __buffer, long *restrict __result) throw();
    extern int nrand48_r(unsigned short __xsubi[3], struct drand48_data *restrict __buffer, long *restrict __result) throw();
    extern int mrand48_r(struct drand48_data *restrict __buffer, long *restrict __result) throw();
    extern int jrand48_r(unsigned short __xsubi[3], struct drand48_data *restrict __buffer, long *restrict __result) throw();
    extern int srand48_r(long __seedval, struct drand48_data *__buffer) throw();
    extern int seed48_r(unsigned short __seed16v[3], struct drand48_data *__buffer) throw();
    extern int lcong48_r(unsigned short __param[7], struct drand48_data *__buffer) throw();
    extern void *malloc(size_t __size) throw();
    extern void *calloc(size_t __nmemb, size_t __size) throw();
    extern void *realloc(void *__ptr, size_t __size) throw();
    extern void free(void *__ptr) throw();
    extern void cfree(void *__ptr) throw();
    extern "C" {
        extern void *alloca(size_t __size) throw();
    }
    extern void *valloc(size_t __size) throw();
    extern int posix_memalign(void **__memptr, size_t __alignment, size_t __size) throw();
    extern void abort() throw();
    extern int atexit(void (*__func)()) throw();
    extern "C++" extern int at_quick_exit(void (*__func)()) throw()
    extern int on_exit(void (*__func)(int, void *), void *__arg) throw();
    extern void exit(int __status) throw();
    extern void quick_exit(int __status) throw();
    extern void _Exit(int __status) throw();
    extern char *getenv(const char *__name) throw();
    extern char *__secure_getenv(const char *__name) throw();
    extern int putenv(char *__string) throw();
    extern int setenv(const char *__name, const char *__value, int __replace) throw();
    extern int unsetenv(const char *__name) throw();
    extern int clearenv() throw();
    extern char *mktemp(char *__template) throw();
    extern int mkstemp(char *__template);
    extern int mkstemp64(char *__template);
    extern int mkstemps(char *__template, int __suffixlen);
    extern int mkstemps64(char *__template, int __suffixlen);
    extern char *mkdtemp(char *__template) throw();
    extern int mkostemp(char *__template, int __flags);
    extern int mkostemp64(char *__template, int __flags);
    extern int mkostemps(char *__template, int __suffixlen, int __flags);
    extern int mkostemps64(char *__template, int __suffixlen, int __flags);
    extern int system(const char *__command);
    extern char *canonicalize_file_name(const char *__name) throw();
    extern char *realpath(const char *restrict __name, char *restrict __resolved) throw();
    typedef int (*__compar_fn_t)(const void *, const void *);
    typedef __compar_fn_t comparison_fn_t;
    typedef int (*__compar_d_fn_t)(const void *, const void *, void *);
    extern void *bsearch(const void *__key, const void *__base, size_t __nmemb, size_t __size, __compar_fn_t __compar);
    extern void qsort(void *__base, size_t __nmemb, size_t __size, __compar_fn_t __compar);
    extern void qsort_r(void *__base, size_t __nmemb, size_t __size, __compar_d_fn_t __compar, void *__arg);
    extern int abs(int __x) throw();
    extern long labs(long __x) throw();
    extern long long llabs(long long __x) throw();
    extern div_t div(int __numer, int __denom) throw();
    extern ldiv_t ldiv(long __numer, long __denom) throw();
    extern lldiv_t lldiv(long long __numer, long long __denom) throw();
    extern char *ecvt(double __value, int __ndigit, int *restrict __decpt, int *restrict __sign) throw();
    extern char *fcvt(double __value, int __ndigit, int *restrict __decpt, int *restrict __sign) throw();
    extern char *gcvt(double __value, int __ndigit, char *__buf) throw();
    extern char *qecvt(long double __value, int __ndigit, int *restrict __decpt, int *restrict __sign) throw();
    extern char *qfcvt(long double __value, int __ndigit, int *restrict __decpt, int *restrict __sign) throw();
    extern char *qgcvt(long double __value, int __ndigit, char *__buf) throw();
    extern int ecvt_r(double __value, int __ndigit, int *restrict __decpt, int *restrict __sign, char *restrict __buf, size_t __len) throw();
    extern int fcvt_r(double __value, int __ndigit, int *restrict __decpt, int *restrict __sign, char *restrict __buf, size_t __len) throw();
    extern int qecvt_r(long double __value, int __ndigit, int *restrict __decpt, int *restrict __sign, char *restrict __buf, size_t __len) throw();
    extern int qfcvt_r(long double __value, int __ndigit, int *restrict __decpt, int *restrict __sign, char *restrict __buf, size_t __len) throw();
    extern int mblen(const char *__s, size_t __n) throw();
    extern int mbtowc(wchar_t *restrict __pwc, const char *restrict __s, size_t __n) throw();
    extern int wctomb(char *__s, wchar_t __wchar) throw();
    extern size_t mbstowcs(wchar_t *restrict __pwcs, const char *restrict __s, size_t __n) throw();
    extern size_t wcstombs(char *restrict __s, const wchar_t *restrict __pwcs, size_t __n) throw();
    extern int rpmatch(const char *__response) throw();
    extern int getsubopt(char **restrict __optionp, char *const *restrict __tokens, char **restrict __valuep) throw();
    extern void setkey(const char *__key) throw();
    extern int posix_openpt(int __oflag);
    extern int grantpt(int __fd) throw();
    extern int unlockpt(int __fd) throw();
    extern char *ptsname(int __fd) throw();
    extern int ptsname_r(int __fd, char *__buf, size_t __buflen) throw();
    extern int getpt();
    extern int getloadavg(double __loadavg[], int __nelem) throw();
}
extern "C" {
    struct _IO_FILE;
    typedef struct _IO_FILE FILE;
    typedef struct _IO_FILE __FILE;
    struct {
        int __count;
        union {
            unsigned int __wch;
            char __wchb[4];
        };
        union <anonymous union at /usr/include/wchar.h:86:3> __value;
    };
    typedef struct __mbstate_t __mbstate_t;
    struct {
        __off_t __pos;
        __mbstate_t __state;
    };
    typedef struct _G_fpos_t _G_fpos_t;
    struct {
        __off64_t __pos;
        __mbstate_t __state;
    };
    typedef struct _G_fpos64_t _G_fpos64_t;
    typedef short _G_int16_t;
    typedef int _G_int32_t;
    typedef unsigned short _G_uint16_t;
    typedef unsigned int _G_uint32_t;
    typedef __builtin_va_list va_list;
    typedef __builtin_va_list __gnuc_va_list;
    struct _IO_jump_t;
    struct _IO_FILE;
    typedef void _IO_lock_t;
    struct _IO_marker {
        struct _IO_marker;
        struct _IO_marker *_next;
        struct _IO_FILE *_sbuf;
        int _pos;
    };
    enum __codecvt_result {
        __codecvt_ok,
        __codecvt_partial,
        __codecvt_error,
        __codecvt_noconv
    };
    struct _IO_FILE {
        struct _IO_FILE;
        int _flags;
        char *_IO_read_ptr;
        char *_IO_read_end;
        char *_IO_read_base;
        char *_IO_write_base;
        char *_IO_write_ptr;
        char *_IO_write_end;
        char *_IO_buf_base;
        char *_IO_buf_end;
        char *_IO_save_base;
        char *_IO_backup_base;
        char *_IO_save_end;
        struct _IO_marker *_markers;
        struct _IO_FILE *_chain;
        int _fileno;
        int _flags2;
        __off_t _old_offset;
        unsigned short _cur_column;
        signed char _vtable_offset;
        char _shortbuf[1];
        _IO_lock_t *_lock;
        __off64_t _offset;
        void *__pad1;
        void *__pad2;
        void *__pad3;
        void *__pad4;
        size_t __pad5;
        int _mode;
        char _unused2[40];
    };
    struct _IO_FILE_plus;
    extern struct _IO_FILE_plus _IO_2_1_stdin_;
    extern struct _IO_FILE_plus _IO_2_1_stdout_;
    extern struct _IO_FILE_plus _IO_2_1_stderr_;
    typedef __ssize_t (__io_read_fn)(void *, char *, size_t);
    typedef __ssize_t (__io_write_fn)(void *, const char *, size_t);
    typedef int (__io_seek_fn)(void *, __off64_t *, int);
    typedef int (__io_close_fn)(void *);
    typedef __io_read_fn cookie_read_function_t;
    typedef __io_write_fn cookie_write_function_t;
    typedef __io_seek_fn cookie_seek_function_t;
    typedef __io_close_fn cookie_close_function_t;
    struct {
        __io_read_fn *read;
        __io_write_fn *write;
        __io_seek_fn *seek;
        __io_close_fn *close;
    };
    typedef struct _IO_cookie_io_functions_t _IO_cookie_io_functions_t;
    typedef _IO_cookie_io_functions_t cookie_io_functions_t;
    struct _IO_cookie_file;
    extern void _IO_cookie_init(struct _IO_cookie_file *__cfile, int __read_write, void *__cookie, _IO_cookie_io_functions_t __fns);
    extern "C" {
        extern int __underflow(_IO_FILE *);
        extern int __uflow(_IO_FILE *);
        extern int __overflow(_IO_FILE *, int);
        extern int _IO_getc(_IO_FILE *__fp);
        extern int _IO_putc(int __c, _IO_FILE *__fp);
        extern int _IO_feof(_IO_FILE *__fp) throw();
        extern int _IO_ferror(_IO_FILE *__fp) throw();
        extern int _IO_peekc_locked(_IO_FILE *__fp);
        extern void _IO_flockfile(_IO_FILE *) throw();
        extern void _IO_funlockfile(_IO_FILE *) throw();
        extern int _IO_ftrylockfile(_IO_FILE *) throw();
        extern int _IO_vfscanf(_IO_FILE *restrict, const char *restrict, __gnuc_va_list, int *restrict);
        extern int _IO_vfprintf(_IO_FILE *restrict, const char *restrict, __gnuc_va_list);
        extern __ssize_t _IO_padn(_IO_FILE *, int, __ssize_t);
        extern size_t _IO_sgetn(_IO_FILE *, void *, size_t);
        extern __off64_t _IO_seekoff(_IO_FILE *, __off64_t, int, int);
        extern __off64_t _IO_seekpos(_IO_FILE *, __off64_t, int);
        extern void _IO_free_backup_area(_IO_FILE *) throw();
    }
    typedef __gnuc_va_list va_list;
    typedef _G_fpos_t fpos_t;
    typedef _G_fpos64_t fpos64_t;
    extern struct _IO_FILE *stdin;
    extern struct _IO_FILE *stdout;
    extern struct _IO_FILE *stderr;
    extern int remove(const char *__filename) throw();
    extern int rename(const char *__old, const char *__new) throw();
    extern int renameat(int __oldfd, const char *__old, int __newfd, const char *__new) throw();
    extern FILE *tmpfile();
    extern FILE *tmpfile64();
    extern char *tmpnam(char *__s) throw();
    extern char *tmpnam_r(char *__s) throw();
    extern char *tempnam(const char *__dir, const char *__pfx) throw();
    extern int fclose(FILE *__stream);
    extern int fflush(FILE *__stream);
    extern int fflush_unlocked(FILE *__stream);
    extern int fcloseall();
    extern FILE *fopen(const char *restrict __filename, const char *restrict __modes);
    extern FILE *freopen(const char *restrict __filename, const char *restrict __modes, FILE *restrict __stream);
    extern FILE *fopen64(const char *restrict __filename, const char *restrict __modes);
    extern FILE *freopen64(const char *restrict __filename, const char *restrict __modes, FILE *restrict __stream);
    extern FILE *fdopen(int __fd, const char *__modes) throw();
    extern FILE *fopencookie(void *restrict __magic_cookie, const char *restrict __modes, _IO_cookie_io_functions_t __io_funcs) throw();
    extern FILE *fmemopen(void *__s, size_t __len, const char *__modes) throw();
    extern FILE *open_memstream(char **__bufloc, size_t *__sizeloc) throw();
    extern void setbuf(FILE *restrict __stream, char *restrict __buf) throw();
    extern int setvbuf(FILE *restrict __stream, char *restrict __buf, int __modes, size_t __n) throw();
    extern void setbuffer(FILE *restrict __stream, char *restrict __buf, size_t __size) throw();
    extern void setlinebuf(FILE *__stream) throw();
    extern int fprintf(FILE *restrict __stream, const char *restrict __format, ...);
    extern int printf(const char *restrict __format, ...);
    extern int sprintf(char *restrict __s, const char *restrict __format, ...) throw();
    extern int vfprintf(FILE *restrict __s, const char *restrict __format, __gnuc_va_list __arg);
    extern int vprintf(const char *restrict __format, __gnuc_va_list __arg);
    extern int vsprintf(char *restrict __s, const char *restrict __format, __gnuc_va_list __arg) throw();
    extern int snprintf(char *restrict __s, size_t __maxlen, const char *restrict __format, ...) throw();
    extern int vsnprintf(char *restrict __s, size_t __maxlen, const char *restrict __format, __gnuc_va_list __arg) throw();
    extern int vasprintf(char **restrict __ptr, const char *restrict __f, __gnuc_va_list __arg) throw();
    extern int __asprintf(char **restrict __ptr, const char *restrict __fmt, ...) throw();
    extern int asprintf(char **restrict __ptr, const char *restrict __fmt, ...) throw();
    extern int vdprintf(int __fd, const char *restrict __fmt, __gnuc_va_list __arg);
    extern int dprintf(int __fd, const char *restrict __fmt, ...);
    extern int fscanf(FILE *restrict __stream, const char *restrict __format, ...);
    extern int scanf(const char *restrict __format, ...);
    extern int sscanf(const char *restrict __s, const char *restrict __format, ...) throw();
    extern int vfscanf(FILE *restrict __s, const char *restrict __format, __gnuc_va_list __arg);
    extern int vscanf(const char *restrict __format, __gnuc_va_list __arg);
    extern int vsscanf(const char *restrict __s, const char *restrict __format, __gnuc_va_list __arg) throw();
    extern int fgetc(FILE *__stream);
    extern int getc(FILE *__stream);
    extern int getchar();
    extern int getc_unlocked(FILE *__stream);
    extern int getchar_unlocked();
    extern int fgetc_unlocked(FILE *__stream);
    extern int fputc(int __c, FILE *__stream);
    extern int putc(int __c, FILE *__stream);
    extern int putchar(int __c);
    extern int fputc_unlocked(int __c, FILE *__stream);
    extern int putc_unlocked(int __c, FILE *__stream);
    extern int putchar_unlocked(int __c);
    extern int getw(FILE *__stream);
    extern int putw(int __w, FILE *__stream);
    extern char *fgets(char *restrict __s, int __n, FILE *restrict __stream);
    extern char *gets(char *__s);
    extern char *fgets_unlocked(char *restrict __s, int __n, FILE *restrict __stream);
    extern __ssize_t __getdelim(char **restrict __lineptr, size_t *restrict __n, int __delimiter, FILE *restrict __stream);
    extern __ssize_t getdelim(char **restrict __lineptr, size_t *restrict __n, int __delimiter, FILE *restrict __stream);
    extern __ssize_t getline(char **restrict __lineptr, size_t *restrict __n, FILE *restrict __stream);
    extern int fputs(const char *restrict __s, FILE *restrict __stream);
    extern int puts(const char *__s);
    extern int ungetc(int __c, FILE *__stream);
    extern size_t fread(void *restrict __ptr, size_t __size, size_t __n, FILE *restrict __stream);
    extern size_t fwrite(const void *restrict __ptr, size_t __size, size_t __n, FILE *restrict __s);
    extern int fputs_unlocked(const char *restrict __s, FILE *restrict __stream);
    extern size_t fread_unlocked(void *restrict __ptr, size_t __size, size_t __n, FILE *restrict __stream);
    extern size_t fwrite_unlocked(const void *restrict __ptr, size_t __size, size_t __n, FILE *restrict __stream);
    extern int fseek(FILE *__stream, long __off, int __whence);
    extern long ftell(FILE *__stream);
    extern void rewind(FILE *__stream);
    extern int fseeko(FILE *__stream, __off_t __off, int __whence);
    extern __off_t ftello(FILE *__stream);
    extern int fgetpos(FILE *restrict __stream, fpos_t *restrict __pos);
    extern int fsetpos(FILE *__stream, const fpos_t *__pos);
    extern int fseeko64(FILE *__stream, __off64_t __off, int __whence);
    extern __off64_t ftello64(FILE *__stream);
    extern int fgetpos64(FILE *restrict __stream, fpos64_t *restrict __pos);
    extern int fsetpos64(FILE *__stream, const fpos64_t *__pos);
    extern void clearerr(FILE *__stream) throw();
    extern int feof(FILE *__stream) throw();
    extern int ferror(FILE *__stream) throw();
    extern void clearerr_unlocked(FILE *__stream) throw();
    extern int feof_unlocked(FILE *__stream) throw();
    extern int ferror_unlocked(FILE *__stream) throw();
    extern void perror(const char *__s);
    extern int sys_nerr;
    extern const char *const sys_errlist[];
    extern int _sys_nerr;
    extern const char *const _sys_errlist[];
    extern int fileno(FILE *__stream) throw();
    extern int fileno_unlocked(FILE *__stream) throw();
    extern FILE *popen(const char *__command, const char *__modes);
    extern int pclose(FILE *__stream);
    extern char *ctermid(char *__s) throw();
    extern char *cuserid(char *__s);
    struct obstack;
    extern int obstack_printf(struct obstack *restrict __obstack, const char *restrict __format, ...) throw();
    extern int obstack_vprintf(struct obstack *restrict __obstack, const char *restrict __format, __gnuc_va_list __args) throw();
    extern void flockfile(FILE *__stream) throw();
    extern int ftrylockfile(FILE *__stream) throw();
    extern void funlockfile(FILE *__stream) throw();
}
typedef unsigned int wint_t;
typedef __mbstate_t mbstate_t;
extern "C" {
    struct tm;
    extern wchar_t *wcscpy(wchar_t *restrict __dest, const wchar_t *restrict __src) throw();
    extern wchar_t *wcsncpy(wchar_t *restrict __dest, const wchar_t *restrict __src, size_t __n) throw();
    extern wchar_t *wcscat(wchar_t *restrict __dest, const wchar_t *restrict __src) throw();
    extern wchar_t *wcsncat(wchar_t *restrict __dest, const wchar_t *restrict __src, size_t __n) throw();
    extern int wcscmp(const wchar_t *__s1, const wchar_t *__s2) throw();
    extern int wcsncmp(const wchar_t *__s1, const wchar_t *__s2, size_t __n) throw();
    extern int wcscasecmp(const wchar_t *__s1, const wchar_t *__s2) throw();
    extern int wcsncasecmp(const wchar_t *__s1, const wchar_t *__s2, size_t __n) throw();
    extern int wcscasecmp_l(const wchar_t *__s1, const wchar_t *__s2, __locale_t __loc) throw();
    extern int wcsncasecmp_l(const wchar_t *__s1, const wchar_t *__s2, size_t __n, __locale_t __loc) throw();
    extern int wcscoll(const wchar_t *__s1, const wchar_t *__s2) throw();
    extern size_t wcsxfrm(wchar_t *restrict __s1, const wchar_t *restrict __s2, size_t __n) throw();
    extern int wcscoll_l(const wchar_t *__s1, const wchar_t *__s2, __locale_t __loc) throw();
    extern size_t wcsxfrm_l(wchar_t *__s1, const wchar_t *__s2, size_t __n, __locale_t __loc) throw();
    extern wchar_t *wcsdup(const wchar_t *__s) throw();
    extern wchar_t *wcschr(const wchar_t *__wcs, wchar_t __wc) throw();
    extern wchar_t *wcsrchr(const wchar_t *__wcs, wchar_t __wc) throw();
    extern wchar_t *wcschrnul(const wchar_t *__s, wchar_t __wc) throw();
    extern size_t wcscspn(const wchar_t *__wcs, const wchar_t *__reject) throw();
    extern size_t wcsspn(const wchar_t *__wcs, const wchar_t *__accept) throw();
    extern wchar_t *wcspbrk(const wchar_t *__wcs, const wchar_t *__accept) throw();
    extern wchar_t *wcsstr(const wchar_t *__haystack, const wchar_t *__needle) throw();
    extern wchar_t *wcstok(wchar_t *restrict __s, const wchar_t *restrict __delim, wchar_t **restrict __ptr) throw();
    extern size_t wcslen(const wchar_t *__s) throw();
    extern wchar_t *wcswcs(const wchar_t *__haystack, const wchar_t *__needle) throw();
    extern size_t wcsnlen(const wchar_t *__s, size_t __maxlen) throw();
    extern wchar_t *wmemchr(const wchar_t *__s, wchar_t __c, size_t __n) throw();
    extern int wmemcmp(const wchar_t *__s1, const wchar_t *__s2, size_t __n) throw();
    extern wchar_t *wmemcpy(wchar_t *restrict __s1, const wchar_t *restrict __s2, size_t __n) throw();
    extern wchar_t *wmemmove(wchar_t *__s1, const wchar_t *__s2, size_t __n) throw();
    extern wchar_t *wmemset(wchar_t *__s, wchar_t __c, size_t __n) throw();
    extern wchar_t *wmempcpy(wchar_t *restrict __s1, const wchar_t *restrict __s2, size_t __n) throw();
    extern wint_t btowc(int __c) throw();
    extern int wctob(wint_t __c) throw();
    extern int mbsinit(const mbstate_t *__ps) throw();
    extern size_t mbrtowc(wchar_t *restrict __pwc, const char *restrict __s, size_t __n, mbstate_t *__p) throw();
    extern size_t wcrtomb(char *restrict __s, wchar_t __wc, mbstate_t *restrict __ps) throw();
    extern size_t __mbrlen(const char *restrict __s, size_t __n, mbstate_t *restrict __ps) throw();
    extern size_t mbrlen(const char *restrict __s, size_t __n, mbstate_t *restrict __ps) throw();
    extern size_t mbsrtowcs(wchar_t *restrict __dst, const char **restrict __src, size_t __len, mbstate_t *restrict __ps) throw();
    extern size_t wcsrtombs(char *restrict __dst, const wchar_t **restrict __src, size_t __len, mbstate_t *restrict __ps) throw();
    extern size_t mbsnrtowcs(wchar_t *restrict __dst, const char **restrict __src, size_t __nmc, size_t __len, mbstate_t *restrict __ps) throw();
    extern size_t wcsnrtombs(char *restrict __dst, const wchar_t **restrict __src, size_t __nwc, size_t __len, mbstate_t *restrict __ps) throw();
    extern int wcwidth(wchar_t __c) throw();
    extern int wcswidth(const wchar_t *__s, size_t __n) throw();
    extern double wcstod(const wchar_t *restrict __nptr, wchar_t **restrict __endptr) throw();
    extern float wcstof(const wchar_t *restrict __nptr, wchar_t **restrict __endptr) throw();
    extern long double wcstold(const wchar_t *restrict __nptr, wchar_t **restrict __endptr) throw();
    extern long wcstol(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base) throw();
    extern unsigned long wcstoul(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base) throw();
    extern long long wcstoll(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base) throw();
    extern unsigned long long wcstoull(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base) throw();
    extern long long wcstoq(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base) throw();
    extern unsigned long long wcstouq(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base) throw();
    extern long wcstol_l(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base, __locale_t __loc) throw();
    extern unsigned long wcstoul_l(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base, __locale_t __loc) throw();
    extern long long wcstoll_l(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base, __locale_t __loc) throw();
    extern unsigned long long wcstoull_l(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base, __locale_t __loc) throw();
    extern double wcstod_l(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, __locale_t __loc) throw();
    extern float wcstof_l(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, __locale_t __loc) throw();
    extern long double wcstold_l(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, __locale_t __loc) throw();
    extern wchar_t *wcpcpy(wchar_t *restrict __dest, const wchar_t *restrict __src) throw();
    extern wchar_t *wcpncpy(wchar_t *restrict __dest, const wchar_t *restrict __src, size_t __n) throw();
    extern __FILE *open_wmemstream(wchar_t **__bufloc, size_t *__sizeloc) throw();
    extern int fwide(__FILE *__fp, int __mode) throw();
    extern int fwprintf(__FILE *restrict __stream, const wchar_t *restrict __format, ...);
    extern int wprintf(const wchar_t *restrict __format, ...);
    extern int swprintf(wchar_t *restrict __s, size_t __n, const wchar_t *restrict __format, ...) throw();
    extern int vfwprintf(__FILE *restrict __s, const wchar_t *restrict __format, __gnuc_va_list __arg);
    extern int vwprintf(const wchar_t *restrict __format, __gnuc_va_list __arg);
    extern int vswprintf(wchar_t *restrict __s, size_t __n, const wchar_t *restrict __format, __gnuc_va_list __arg) throw();
    extern int fwscanf(__FILE *restrict __stream, const wchar_t *restrict __format, ...);
    extern int wscanf(const wchar_t *restrict __format, ...);
    extern int swscanf(const wchar_t *restrict __s, const wchar_t *restrict __format, ...) throw();
    extern int vfwscanf(__FILE *restrict __s, const wchar_t *restrict __format, __gnuc_va_list __arg);
    extern int vwscanf(const wchar_t *restrict __format, __gnuc_va_list __arg);
    extern int vswscanf(const wchar_t *restrict __s, const wchar_t *restrict __format, __gnuc_va_list __arg) throw();
    extern wint_t fgetwc(__FILE *__stream);
    extern wint_t getwc(__FILE *__stream);
    extern wint_t getwchar();
    extern wint_t fputwc(wchar_t __wc, __FILE *__stream);
    extern wint_t putwc(wchar_t __wc, __FILE *__stream);
    extern wint_t putwchar(wchar_t __wc);
    extern wchar_t *fgetws(wchar_t *restrict __ws, int __n, __FILE *restrict __stream);
    extern int fputws(const wchar_t *restrict __ws, __FILE *restrict __stream);
    extern wint_t ungetwc(wint_t __wc, __FILE *__stream);
    extern wint_t getwc_unlocked(__FILE *__stream);
    extern wint_t getwchar_unlocked();
    extern wint_t fgetwc_unlocked(__FILE *__stream);
    extern wint_t fputwc_unlocked(wchar_t __wc, __FILE *__stream);
    extern wint_t putwc_unlocked(wchar_t __wc, __FILE *__stream);
    extern wint_t putwchar_unlocked(wchar_t __wc);
    extern wchar_t *fgetws_unlocked(wchar_t *restrict __ws, int __n, __FILE *restrict __stream);
    extern int fputws_unlocked(const wchar_t *restrict __ws, __FILE *restrict __stream);
    extern size_t wcsftime(wchar_t *restrict __s, size_t __maxsize, const wchar_t *restrict __format, const struct tm *restrict __tp) throw();
    extern size_t wcsftime_l(wchar_t *restrict __s, size_t __maxsize, const wchar_t *restrict __format, const struct tm *restrict __tp, __locale_t __loc) throw();
}
extern "C" {
    extern void *memcpy(void *restrict __dest, const void *restrict __src, size_t __n) throw();
    extern void *memmove(void *__dest, const void *__src, size_t __n) throw();
    extern void *memccpy(void *restrict __dest, const void *restrict __src, int __c, size_t __n) throw();
    extern void *memset(void *__s, int __c, size_t __n) throw();
    extern int memcmp(const void *__s1, const void *__s2, size_t __n) throw();
    extern void *memchr(const void *__s, int __c, size_t __n) throw();
    extern void *rawmemchr(const void *__s, int __c) throw();
    extern void *memrchr(const void *__s, int __c, size_t __n) throw();
    extern char *strcpy(char *restrict __dest, const char *restrict __src) throw();
    extern char *strncpy(char *restrict __dest, const char *restrict __src, size_t __n) throw();
    extern char *strcat(char *restrict __dest, const char *restrict __src) throw();
    extern char *strncat(char *restrict __dest, const char *restrict __src, size_t __n) throw();
    extern int strcmp(const char *__s1, const char *__s2) throw();
    extern int strncmp(const char *__s1, const char *__s2, size_t __n) throw();
    extern int strcoll(const char *__s1, const char *__s2) throw();
    extern size_t strxfrm(char *restrict __dest, const char *restrict __src, size_t __n) throw();
    extern int strcoll_l(const char *__s1, const char *__s2, __locale_t __l) throw();
    extern size_t strxfrm_l(char *__dest, const char *__src, size_t __n, __locale_t __l) throw();
    extern char *strdup(const char *__s) throw();
    extern char *strndup(const char *__string, size_t __n) throw();
    extern char *strchr(const char *__s, int __c) throw();
    extern char *strrchr(const char *__s, int __c) throw();
    extern char *strchrnul(const char *__s, int __c) throw();
    extern size_t strcspn(const char *__s, const char *__reject) throw();
    extern size_t strspn(const char *__s, const char *__accept) throw();
    extern char *strpbrk(const char *__s, const char *__accept) throw();
    extern char *strstr(const char *__haystack, const char *__needle) throw();
    extern char *strtok(char *restrict __s, const char *restrict __delim) throw();
    extern char *__strtok_r(char *restrict __s, const char *restrict __delim, char **restrict __save_ptr) throw();
    extern char *strtok_r(char *restrict __s, const char *restrict __delim, char **restrict __save_ptr) throw();
    extern char *strcasestr(const char *__haystack, const char *__needle) throw();
    extern void *memmem(const void *__haystack, size_t __haystacklen, const void *__needle, size_t __needlelen) throw();
    extern void *__mempcpy(void *restrict __dest, const void *restrict __src, size_t __n) throw();
    extern void *mempcpy(void *restrict __dest, const void *restrict __src, size_t __n) throw();
    extern size_t strlen(const char *__s) throw();
    extern size_t strnlen(const char *__string, size_t __maxlen) throw();
    extern char *strerror(int __errnum) throw();
    extern char *strerror_r(int __errnum, char *__buf, size_t __buflen) throw();
    extern char *strerror_l(int __errnum, __locale_t __l) throw();
    extern void __bzero(void *__s, size_t __n) throw();
    extern void bcopy(const void *__src, void *__dest, size_t __n) throw();
    extern void bzero(void *__s, size_t __n) throw();
    extern int bcmp(const void *__s1, const void *__s2, size_t __n) throw();
    extern char *index(const char *__s, int __c) throw();
    extern char *rindex(const char *__s, int __c) throw();
    extern int ffs(int __i) throw();
    extern int ffsl(long __l) throw();
    extern int ffsll(long long __ll) throw();
    extern int strcasecmp(const char *__s1, const char *__s2) throw();
    extern int strncasecmp(const char *__s1, const char *__s2, size_t __n) throw();
    extern int strcasecmp_l(const char *__s1, const char *__s2, __locale_t __loc) throw();
    extern int strncasecmp_l(const char *__s1, const char *__s2, size_t __n, __locale_t __loc) throw();
    extern char *strsep(char **restrict __stringp, const char *restrict __delim) throw();
    extern char *strsignal(int __sig) throw();
    extern char *__stpcpy(char *restrict __dest, const char *restrict __src) throw();
    extern char *stpcpy(char *restrict __dest, const char *restrict __src) throw();
    extern char *__stpncpy(char *restrict __dest, const char *restrict __src, size_t __n) throw();
    extern char *stpncpy(char *restrict __dest, const char *restrict __src, size_t __n) throw();
    extern int strverscmp(const char *__s1, const char *__s2) throw();
    extern char *strfry(char *__string) throw();
    extern void *memfrob(void *__s, size_t __n) throw();
    extern char *basename(const char *__filename) throw();
}
extern "C" {
    extern int *__errno_location() throw();
    extern char *program_invocation_name;
    extern char *program_invocation_short_name;
}
typedef int error_t;
extern "C" {
    typedef __intptr_t intptr_t;
    typedef __socklen_t socklen_t;
    extern int access(const char *__name, int __type) throw();
    extern int euidaccess(const char *__name, int __type) throw();
    extern int eaccess(const char *__name, int __type) throw();
    extern int faccessat(int __fd, const char *__file, int __type, int __flag) throw();
    extern __off_t lseek(int __fd, __off_t __offset, int __whence) throw();
    extern __off64_t lseek64(int __fd, __off64_t __offset, int __whence) throw();
    extern int close(int __fd);
    extern ssize_t read(int __fd, void *__buf, size_t __nbytes);
    extern ssize_t write(int __fd, const void *__buf, size_t __n);
    extern ssize_t pread(int __fd, void *__buf, size_t __nbytes, __off_t __offset);
    extern ssize_t pwrite(int __fd, const void *__buf, size_t __n, __off_t __offset);
    extern ssize_t pread64(int __fd, void *__buf, size_t __nbytes, __off64_t __offset);
    extern ssize_t pwrite64(int __fd, const void *__buf, size_t __n, __off64_t __offset);
    extern int pipe(int __pipedes[2]) throw();
    extern int pipe2(int __pipedes[2], int __flags) throw();
    extern unsigned int alarm(unsigned int __seconds) throw();
    extern unsigned int sleep(unsigned int __seconds);
    extern __useconds_t ualarm(__useconds_t __value, __useconds_t __interval) throw();
    extern int usleep(__useconds_t __useconds);
    extern int pause();
    extern int chown(const char *__file, __uid_t __owner, __gid_t __group) throw();
    extern int fchown(int __fd, __uid_t __owner, __gid_t __group) throw();
    extern int lchown(const char *__file, __uid_t __owner, __gid_t __group) throw();
    extern int fchownat(int __fd, const char *__file, __uid_t __owner, __gid_t __group, int __flag) throw();
    extern int chdir(const char *__path) throw();
    extern int fchdir(int __fd) throw();
    extern char *getcwd(char *__buf, size_t __size) throw();
    extern char *get_current_dir_name() throw();
    extern char *getwd(char *__buf) throw();
    extern int dup(int __fd) throw();
    extern int dup2(int __fd, int __fd2) throw();
    extern int dup3(int __fd, int __fd2, int __flags) throw();
    extern char **__environ;
    extern char **environ;
    extern int execve(const char *__path, char *const __argv[], char *const __envp[]) throw();
    extern int fexecve(int __fd, char *const __argv[], char *const __envp[]) throw();
    extern int execv(const char *__path, char *const __argv[]) throw();
    extern int execle(const char *__path, const char *__arg, ...) throw();
    extern int execl(const char *__path, const char *__arg, ...) throw();
    extern int execvp(const char *__file, char *const __argv[]) throw();
    extern int execlp(const char *__file, const char *__arg, ...) throw();
    extern int execvpe(const char *__file, char *const __argv[], char *const __envp[]) throw();
    extern int nice(int __inc) throw();
    extern void _exit(int __status);
    enum  {
        _PC_LINK_MAX,
        _PC_MAX_CANON,
        _PC_MAX_INPUT,
        _PC_NAME_MAX,
        _PC_PATH_MAX,
        _PC_PIPE_BUF,
        _PC_CHOWN_RESTRICTED,
        _PC_NO_TRUNC,
        _PC_VDISABLE,
        _PC_SYNC_IO,
        _PC_ASYNC_IO,
        _PC_PRIO_IO,
        _PC_SOCK_MAXBUF,
        _PC_FILESIZEBITS,
        _PC_REC_INCR_XFER_SIZE,
        _PC_REC_MAX_XFER_SIZE,
        _PC_REC_MIN_XFER_SIZE,
        _PC_REC_XFER_ALIGN,
        _PC_ALLOC_SIZE_MIN,
        _PC_SYMLINK_MAX,
        _PC_2_SYMLINKS
    };
    enum  {
        _SC_ARG_MAX,
        _SC_CHILD_MAX,
        _SC_CLK_TCK,
        _SC_NGROUPS_MAX,
        _SC_OPEN_MAX,
        _SC_STREAM_MAX,
        _SC_TZNAME_MAX,
        _SC_JOB_CONTROL,
        _SC_SAVED_IDS,
        _SC_REALTIME_SIGNALS,
        _SC_PRIORITY_SCHEDULING,
        _SC_TIMERS,
        _SC_ASYNCHRONOUS_IO,
        _SC_PRIORITIZED_IO,
        _SC_SYNCHRONIZED_IO,
        _SC_FSYNC,
        _SC_MAPPED_FILES,
        _SC_MEMLOCK,
        _SC_MEMLOCK_RANGE,
        _SC_MEMORY_PROTECTION,
        _SC_MESSAGE_PASSING,
        _SC_SEMAPHORES,
        _SC_SHARED_MEMORY_OBJECTS,
        _SC_AIO_LISTIO_MAX,
        _SC_AIO_MAX,
        _SC_AIO_PRIO_DELTA_MAX,
        _SC_DELAYTIMER_MAX,
        _SC_MQ_OPEN_MAX,
        _SC_MQ_PRIO_MAX,
        _SC_VERSION,
        _SC_PAGESIZE,
        _SC_RTSIG_MAX,
        _SC_SEM_NSEMS_MAX,
        _SC_SEM_VALUE_MAX,
        _SC_SIGQUEUE_MAX,
        _SC_TIMER_MAX,
        _SC_BC_BASE_MAX,
        _SC_BC_DIM_MAX,
        _SC_BC_SCALE_MAX,
        _SC_BC_STRING_MAX,
        _SC_COLL_WEIGHTS_MAX,
        _SC_EQUIV_CLASS_MAX,
        _SC_EXPR_NEST_MAX,
        _SC_LINE_MAX,
        _SC_RE_DUP_MAX,
        _SC_CHARCLASS_NAME_MAX,
        _SC_2_VERSION,
        _SC_2_C_BIND,
        _SC_2_C_DEV,
        _SC_2_FORT_DEV,
        _SC_2_FORT_RUN,
        _SC_2_SW_DEV,
        _SC_2_LOCALEDEF,
        _SC_PII,
        _SC_PII_XTI,
        _SC_PII_SOCKET,
        _SC_PII_INTERNET,
        _SC_PII_OSI,
        _SC_POLL,
        _SC_SELECT,
        _SC_UIO_MAXIOV,
        _SC_IOV_MAX = (ImplicitCastExpr 0x9a82bf8 </usr/include/i386-linux-gnu/bits/confname.h:202:26> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0x9a6f3e4 <col:26> 'int' EnumConstant 0x9a6f3b0 '_SC_UIO_MAXIOV' 'enum <anonymous at /usr/include/i386-linux-gnu/bits/confname.h:73:1>'))
,
        _SC_PII_INTERNET_STREAM,
        _SC_PII_INTERNET_DGRAM,
        _SC_PII_OSI_COTS,
        _SC_PII_OSI_CLTS,
        _SC_PII_OSI_M,
        _SC_T_IOV_MAX,
        _SC_THREADS,
        _SC_THREAD_SAFE_FUNCTIONS,
        _SC_GETGR_R_SIZE_MAX,
        _SC_GETPW_R_SIZE_MAX,
        _SC_LOGIN_NAME_MAX,
        _SC_TTY_NAME_MAX,
        _SC_THREAD_DESTRUCTOR_ITERATIONS,
        _SC_THREAD_KEYS_MAX,
        _SC_THREAD_STACK_MIN,
        _SC_THREAD_THREADS_MAX,
        _SC_THREAD_ATTR_STACKADDR,
        _SC_THREAD_ATTR_STACKSIZE,
        _SC_THREAD_PRIORITY_SCHEDULING,
        _SC_THREAD_PRIO_INHERIT,
        _SC_THREAD_PRIO_PROTECT,
        _SC_THREAD_PROCESS_SHARED,
        _SC_NPROCESSORS_CONF,
        _SC_NPROCESSORS_ONLN,
        _SC_PHYS_PAGES,
        _SC_AVPHYS_PAGES,
        _SC_ATEXIT_MAX,
        _SC_PASS_MAX,
        _SC_XOPEN_VERSION,
        _SC_XOPEN_XCU_VERSION,
        _SC_XOPEN_UNIX,
        _SC_XOPEN_CRYPT,
        _SC_XOPEN_ENH_I18N,
        _SC_XOPEN_SHM,
        _SC_2_CHAR_TERM,
        _SC_2_C_VERSION,
        _SC_2_UPE,
        _SC_XOPEN_XPG2,
        _SC_XOPEN_XPG3,
        _SC_XOPEN_XPG4,
        _SC_CHAR_BIT,
        _SC_CHAR_MAX,
        _SC_CHAR_MIN,
        _SC_INT_MAX,
        _SC_INT_MIN,
        _SC_LONG_BIT,
        _SC_WORD_BIT,
        _SC_MB_LEN_MAX,
        _SC_NZERO,
        _SC_SSIZE_MAX,
        _SC_SCHAR_MAX,
        _SC_SCHAR_MIN,
        _SC_SHRT_MAX,
        _SC_SHRT_MIN,
        _SC_UCHAR_MAX,
        _SC_UINT_MAX,
        _SC_ULONG_MAX,
        _SC_USHRT_MAX,
        _SC_NL_ARGMAX,
        _SC_NL_LANGMAX,
        _SC_NL_MSGMAX,
        _SC_NL_NMAX,
        _SC_NL_SETMAX,
        _SC_NL_TEXTMAX,
        _SC_XBS5_ILP32_OFF32,
        _SC_XBS5_ILP32_OFFBIG,
        _SC_XBS5_LP64_OFF64,
        _SC_XBS5_LPBIG_OFFBIG,
        _SC_XOPEN_LEGACY,
        _SC_XOPEN_REALTIME,
        _SC_XOPEN_REALTIME_THREADS,
        _SC_ADVISORY_INFO,
        _SC_BARRIERS,
        _SC_BASE,
        _SC_C_LANG_SUPPORT,
        _SC_C_LANG_SUPPORT_R,
        _SC_CLOCK_SELECTION,
        _SC_CPUTIME,
        _SC_THREAD_CPUTIME,
        _SC_DEVICE_IO,
        _SC_DEVICE_SPECIFIC,
        _SC_DEVICE_SPECIFIC_R,
        _SC_FD_MGMT,
        _SC_FIFO,
        _SC_PIPE,
        _SC_FILE_ATTRIBUTES,
        _SC_FILE_LOCKING,
        _SC_FILE_SYSTEM,
        _SC_MONOTONIC_CLOCK,
        _SC_MULTI_PROCESS,
        _SC_SINGLE_PROCESS,
        _SC_NETWORKING,
        _SC_READER_WRITER_LOCKS,
        _SC_SPIN_LOCKS,
        _SC_REGEXP,
        _SC_REGEX_VERSION,
        _SC_SHELL,
        _SC_SIGNALS,
        _SC_SPAWN,
        _SC_SPORADIC_SERVER,
        _SC_THREAD_SPORADIC_SERVER,
        _SC_SYSTEM_DATABASE,
        _SC_SYSTEM_DATABASE_R,
        _SC_TIMEOUTS,
        _SC_TYPED_MEMORY_OBJECTS,
        _SC_USER_GROUPS,
        _SC_USER_GROUPS_R,
        _SC_2_PBS,
        _SC_2_PBS_ACCOUNTING,
        _SC_2_PBS_LOCATE,
        _SC_2_PBS_MESSAGE,
        _SC_2_PBS_TRACK,
        _SC_SYMLOOP_MAX,
        _SC_STREAMS,
        _SC_2_PBS_CHECKPOINT,
        _SC_V6_ILP32_OFF32,
        _SC_V6_ILP32_OFFBIG,
        _SC_V6_LP64_OFF64,
        _SC_V6_LPBIG_OFFBIG,
        _SC_HOST_NAME_MAX,
        _SC_TRACE,
        _SC_TRACE_EVENT_FILTER,
        _SC_TRACE_INHERIT,
        _SC_TRACE_LOG,
        _SC_LEVEL1_ICACHE_SIZE,
        _SC_LEVEL1_ICACHE_ASSOC,
        _SC_LEVEL1_ICACHE_LINESIZE,
        _SC_LEVEL1_DCACHE_SIZE,
        _SC_LEVEL1_DCACHE_ASSOC,
        _SC_LEVEL1_DCACHE_LINESIZE,
        _SC_LEVEL2_CACHE_SIZE,
        _SC_LEVEL2_CACHE_ASSOC,
        _SC_LEVEL2_CACHE_LINESIZE,
        _SC_LEVEL3_CACHE_SIZE,
        _SC_LEVEL3_CACHE_ASSOC,
        _SC_LEVEL3_CACHE_LINESIZE,
        _SC_LEVEL4_CACHE_SIZE,
        _SC_LEVEL4_CACHE_ASSOC,
        _SC_LEVEL4_CACHE_LINESIZE,
        _SC_IPV6 = (ImplicitCastExpr 0x9a82c08 </usr/include/i386-linux-gnu/bits/confname.h:468:33, line:499:41> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9a7d7f8 <line:468:33, line:499:41> 'int' '+'
    (DeclRefExpr 0x9a7d7c4 <line:468:33> 'int' EnumConstant 0x9a7d410 '_SC_LEVEL1_ICACHE_SIZE' 'enum <anonymous at /usr/include/i386-linux-gnu/bits/confname.h:73:1>')
    (IntegerLiteral 0x9a7d7e0 <line:499:41> 'int' 50)))
,
        _SC_RAW_SOCKETS,
        _SC_V7_ILP32_OFF32,
        _SC_V7_ILP32_OFFBIG,
        _SC_V7_LP64_OFF64,
        _SC_V7_LPBIG_OFFBIG,
        _SC_SS_REPL_MAX,
        _SC_TRACE_EVENT_NAME_MAX,
        _SC_TRACE_NAME_MAX,
        _SC_TRACE_SYS_MAX,
        _SC_TRACE_USER_EVENT_MAX,
        _SC_XOPEN_STREAMS,
        _SC_THREAD_ROBUST_PRIO_INHERIT,
        _SC_THREAD_ROBUST_PRIO_PROTECT
    };
    enum  {
        _CS_PATH,
        _CS_V6_WIDTH_RESTRICTED_ENVS,
        _CS_GNU_LIBC_VERSION,
        _CS_GNU_LIBPTHREAD_VERSION,
        _CS_V5_WIDTH_RESTRICTED_ENVS,
        _CS_V7_WIDTH_RESTRICTED_ENVS,
        _CS_LFS_CFLAGS = (ImplicitCastExpr 0x9a87cd8 </usr/include/i386-linux-gnu/bits/confname.h:557:22> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9a82df8 <col:22> 'int' 1000))
,
        _CS_LFS_LDFLAGS,
        _CS_LFS_LIBS,
        _CS_LFS_LINTFLAGS,
        _CS_LFS64_CFLAGS,
        _CS_LFS64_LDFLAGS,
        _CS_LFS64_LIBS,
        _CS_LFS64_LINTFLAGS,
        _CS_XBS5_ILP32_OFF32_CFLAGS = (ImplicitCastExpr 0x9a87ce8 </usr/include/i386-linux-gnu/bits/confname.h:574:35> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9a83008 <col:35> 'int' 1100))
,
        _CS_XBS5_ILP32_OFF32_LDFLAGS,
        _CS_XBS5_ILP32_OFF32_LIBS,
        _CS_XBS5_ILP32_OFF32_LINTFLAGS,
        _CS_XBS5_ILP32_OFFBIG_CFLAGS,
        _CS_XBS5_ILP32_OFFBIG_LDFLAGS,
        _CS_XBS5_ILP32_OFFBIG_LIBS,
        _CS_XBS5_ILP32_OFFBIG_LINTFLAGS,
        _CS_XBS5_LP64_OFF64_CFLAGS,
        _CS_XBS5_LP64_OFF64_LDFLAGS,
        _CS_XBS5_LP64_OFF64_LIBS,
        _CS_XBS5_LP64_OFF64_LINTFLAGS,
        _CS_XBS5_LPBIG_OFFBIG_CFLAGS,
        _CS_XBS5_LPBIG_OFFBIG_LDFLAGS,
        _CS_XBS5_LPBIG_OFFBIG_LIBS,
        _CS_XBS5_LPBIG_OFFBIG_LINTFLAGS,
        _CS_POSIX_V6_ILP32_OFF32_CFLAGS,
        _CS_POSIX_V6_ILP32_OFF32_LDFLAGS,
        _CS_POSIX_V6_ILP32_OFF32_LIBS,
        _CS_POSIX_V6_ILP32_OFF32_LINTFLAGS,
        _CS_POSIX_V6_ILP32_OFFBIG_CFLAGS,
        _CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS,
        _CS_POSIX_V6_ILP32_OFFBIG_LIBS,
        _CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS,
        _CS_POSIX_V6_LP64_OFF64_CFLAGS,
        _CS_POSIX_V6_LP64_OFF64_LDFLAGS,
        _CS_POSIX_V6_LP64_OFF64_LIBS,
        _CS_POSIX_V6_LP64_OFF64_LINTFLAGS,
        _CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS,
        _CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS,
        _CS_POSIX_V6_LPBIG_OFFBIG_LIBS,
        _CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS,
        _CS_POSIX_V7_ILP32_OFF32_CFLAGS,
        _CS_POSIX_V7_ILP32_OFF32_LDFLAGS,
        _CS_POSIX_V7_ILP32_OFF32_LIBS,
        _CS_POSIX_V7_ILP32_OFF32_LINTFLAGS,
        _CS_POSIX_V7_ILP32_OFFBIG_CFLAGS,
        _CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS,
        _CS_POSIX_V7_ILP32_OFFBIG_LIBS,
        _CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS,
        _CS_POSIX_V7_LP64_OFF64_CFLAGS,
        _CS_POSIX_V7_LP64_OFF64_LDFLAGS,
        _CS_POSIX_V7_LP64_OFF64_LIBS,
        _CS_POSIX_V7_LP64_OFF64_LINTFLAGS,
        _CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS,
        _CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS,
        _CS_POSIX_V7_LPBIG_OFFBIG_LIBS,
        _CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS,
        _CS_V6_ENV,
        _CS_V7_ENV
    };
    extern long pathconf(const char *__path, int __name) throw();
    extern long fpathconf(int __fd, int __name) throw();
    extern long sysconf(int __name) throw();
    extern size_t confstr(int __name, char *__buf, size_t __len) throw();
    extern __pid_t getpid() throw();
    extern __pid_t getppid() throw();
    extern __pid_t getpgrp() throw();
    extern __pid_t __getpgid(__pid_t __pid) throw();
    extern __pid_t getpgid(__pid_t __pid) throw();
    extern int setpgid(__pid_t __pid, __pid_t __pgid) throw();
    extern int setpgrp() throw();
    extern __pid_t setsid() throw();
    extern __pid_t getsid(__pid_t __pid) throw();
    extern __uid_t getuid() throw();
    extern __uid_t geteuid() throw();
    extern __gid_t getgid() throw();
    extern __gid_t getegid() throw();
    extern int getgroups(int __size, __gid_t __list[]) throw();
    extern int group_member(__gid_t __gid) throw();
    extern int setuid(__uid_t __uid) throw();
    extern int setreuid(__uid_t __ruid, __uid_t __euid) throw();
    extern int seteuid(__uid_t __uid) throw();
    extern int setgid(__gid_t __gid) throw();
    extern int setregid(__gid_t __rgid, __gid_t __egid) throw();
    extern int setegid(__gid_t __gid) throw();
    extern int getresuid(__uid_t *__ruid, __uid_t *__euid, __uid_t *__suid) throw();
    extern int getresgid(__gid_t *__rgid, __gid_t *__egid, __gid_t *__sgid) throw();
    extern int setresuid(__uid_t __ruid, __uid_t __euid, __uid_t __suid) throw();
    extern int setresgid(__gid_t __rgid, __gid_t __egid, __gid_t __sgid) throw();
    extern __pid_t fork() throw();
    extern __pid_t vfork() throw() __attribute((returns_twice));
    extern char *ttyname(int __fd) throw();
    extern int ttyname_r(int __fd, char *__buf, size_t __buflen) throw();
    extern int isatty(int __fd) throw();
    extern int ttyslot() throw();
    extern int link(const char *__from, const char *__to) throw();
    extern int linkat(int __fromfd, const char *__from, int __tofd, const char *__to, int __flags) throw();
    extern int symlink(const char *__from, const char *__to) throw();
    extern ssize_t readlink(const char *restrict __path, char *restrict __buf, size_t __len) throw();
    extern int symlinkat(const char *__from, int __tofd, const char *__to) throw();
    extern ssize_t readlinkat(int __fd, const char *restrict __path, char *restrict __buf, size_t __len) throw();
    extern int unlink(const char *__name) throw();
    extern int unlinkat(int __fd, const char *__name, int __flag) throw();
    extern int rmdir(const char *__path) throw();
    extern __pid_t tcgetpgrp(int __fd) throw();
    extern int tcsetpgrp(int __fd, __pid_t __pgrp_id) throw();
    extern char *getlogin();
    extern int getlogin_r(char *__name, size_t __name_len);
    extern int setlogin(const char *__name) throw();
    extern "C" {
        extern char *optarg;
        extern int optind;
        extern int opterr;
        extern int optopt;
        extern int getopt(int ___argc, char *const *___argv, const char *__shortopts) throw();
    }
    extern int gethostname(char *__name, size_t __len) throw();
    extern int sethostname(const char *__name, size_t __len) throw();
    extern int sethostid(long __id) throw();
    extern int getdomainname(char *__name, size_t __len) throw();
    extern int setdomainname(const char *__name, size_t __len) throw();
    extern int vhangup() throw();
    extern int revoke(const char *__file) throw();
    extern int profil(unsigned short *__sample_buffer, size_t __size, size_t __offset, unsigned int __scale) throw();
    extern int acct(const char *__name) throw();
    extern char *getusershell() throw();
    extern void endusershell() throw();
    extern void setusershell() throw();
    extern int daemon(int __nochdir, int __noclose) throw();
    extern int chroot(const char *__path) throw();
    extern char *getpass(const char *__prompt);
    extern int fsync(int __fd);
    extern int syncfs(int __fd) throw();
    extern long gethostid();
    extern void sync() throw();
    extern int getpagesize() throw();
    extern int getdtablesize() throw();
    extern int truncate(const char *__file, __off_t __length) throw();
    extern int truncate64(const char *__file, __off64_t __length) throw();
    extern int ftruncate(int __fd, __off_t __length) throw();
    extern int ftruncate64(int __fd, __off64_t __length) throw();
    extern int brk(void *__addr) throw();
    extern void *sbrk(intptr_t __delta) throw();
    extern long syscall(long __sysno, ...) throw();
    extern int lockf(int __fd, int __cmd, __off_t __len);
    extern int lockf64(int __fd, int __cmd, __off64_t __len);
    extern int fdatasync(int __fildes);
    extern char *crypt(const char *__key, const char *__salt) throw();
    extern void encrypt(char *__libc_block, int __edflag) throw();
    extern void swab(const void *restrict __from, void *restrict __to, ssize_t __n) throw();
    extern char *ctermid(char *__s) throw();
}
extern "C" {
    extern char *optarg;
    extern int optind;
    extern int opterr;
    extern int optopt;
    struct option {
        struct option;
        const char *name;
        int has_arg;
        int *flag;
        int val;
    };
    extern int getopt(int ___argc, char *const *___argv, const char *__shortopts) throw();
    extern int getopt_long(int ___argc, char *const *___argv, const char *__shortopts, const struct option *__longopts, int *__longind) throw();
    extern int getopt_long_only(int ___argc, char *const *___argv, const char *__shortopts, const struct option *__longopts, int *__longind) throw();
}
enum  {
    __LC_CTYPE = (ImplicitCastExpr 0x9a935e8 </usr/include/i386-linux-gnu/bits/locale.h:29:16> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9a931d0 <col:16> 'int' 0))
,
    __LC_NUMERIC = (ImplicitCastExpr 0x9a935f8 </usr/include/i386-linux-gnu/bits/locale.h:30:18> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9a93228 <col:18> 'int' 1))
,
    __LC_TIME = (ImplicitCastExpr 0x9a93608 </usr/include/i386-linux-gnu/bits/locale.h:31:15> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9a93278 <col:15> 'int' 2))
,
    __LC_COLLATE = (ImplicitCastExpr 0x9a965c8 </usr/include/i386-linux-gnu/bits/locale.h:32:18> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9a932c8 <col:18> 'int' 3))
,
    __LC_MONETARY = (ImplicitCastExpr 0x9a965d8 </usr/include/i386-linux-gnu/bits/locale.h:33:19> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9a93318 <col:19> 'int' 4))
,
    __LC_MESSAGES = (ImplicitCastExpr 0x9a965e8 </usr/include/i386-linux-gnu/bits/locale.h:34:19> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9a93368 <col:19> 'int' 5))
,
    __LC_ALL = (ImplicitCastExpr 0x9a965f8 </usr/include/i386-linux-gnu/bits/locale.h:35:14> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9a933b8 <col:14> 'int' 6))
,
    __LC_PAPER = (ImplicitCastExpr 0x9a96608 </usr/include/i386-linux-gnu/bits/locale.h:36:16> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9a93408 <col:16> 'int' 7))
,
    __LC_NAME = (ImplicitCastExpr 0x9a96618 </usr/include/i386-linux-gnu/bits/locale.h:37:15> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9a93458 <col:15> 'int' 8))
,
    __LC_ADDRESS = (ImplicitCastExpr 0x9a96628 </usr/include/i386-linux-gnu/bits/locale.h:38:18> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9a934a8 <col:18> 'int' 9))
,
    __LC_TELEPHONE = (ImplicitCastExpr 0x9a96638 </usr/include/i386-linux-gnu/bits/locale.h:39:20> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9a934f8 <col:20> 'int' 10))
,
    __LC_MEASUREMENT = (ImplicitCastExpr 0x9a96648 </usr/include/i386-linux-gnu/bits/locale.h:40:22> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9a93548 <col:22> 'int' 11))
,
    __LC_IDENTIFICATION = (ImplicitCastExpr 0x9a96658 </usr/include/i386-linux-gnu/bits/locale.h:41:25> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9a93598 <col:25> 'int' 12))

};
extern "C" {
    struct lconv {
        struct lconv;
        char *decimal_point;
        char *thousands_sep;
        char *grouping;
        char *int_curr_symbol;
        char *currency_symbol;
        char *mon_decimal_point;
        char *mon_thousands_sep;
        char *mon_grouping;
        char *positive_sign;
        char *negative_sign;
        char int_frac_digits;
        char frac_digits;
        char p_cs_precedes;
        char p_sep_by_space;
        char n_cs_precedes;
        char n_sep_by_space;
        char p_sign_posn;
        char n_sign_posn;
        char int_p_cs_precedes;
        char int_p_sep_by_space;
        char int_n_cs_precedes;
        char int_n_sep_by_space;
        char int_p_sign_posn;
        char int_n_sign_posn;
    };
    extern char *setlocale(int __category, const char *__locale) throw();
    extern struct lconv *localeconv() throw();
    extern __locale_t newlocale(int __category_mask, const char *__locale, __locale_t __base) throw();
    extern __locale_t duplocale(__locale_t __dataset) throw();
    extern void freelocale(__locale_t __dataset) throw();
    extern __locale_t uselocale(__locale_t __dataset) throw();
}
typedef unsigned char uint8_t;
typedef unsigned short uint16_t;
typedef unsigned int uint32_t;
typedef unsigned long long uint64_t;
typedef signed char int_least8_t;
typedef short int_least16_t;
typedef int int_least32_t;
typedef long long int_least64_t;
typedef unsigned char uint_least8_t;
typedef unsigned short uint_least16_t;
typedef unsigned int uint_least32_t;
typedef unsigned long long uint_least64_t;
typedef signed char int_fast8_t;
typedef int int_fast16_t;
typedef int int_fast32_t;
typedef long long int_fast64_t;
typedef unsigned char uint_fast8_t;
typedef unsigned int uint_fast16_t;
typedef unsigned int uint_fast32_t;
typedef unsigned long long uint_fast64_t;
typedef unsigned int uintptr_t;
typedef long long intmax_t;
typedef unsigned long long uintmax_t;
typedef unsigned long wctype_t;
enum  {
    __ISwupper = (IntegerLiteral 0x9a9ecd0 </usr/include/wctype.h:74:16> 'int' 0)
,
    __ISwlower = (IntegerLiteral 0x9a9ed28 </usr/include/wctype.h:75:16> 'int' 1)
,
    __ISwalpha = (IntegerLiteral 0x9a9ed78 </usr/include/wctype.h:76:16> 'int' 2)
,
    __ISwdigit = (IntegerLiteral 0x9a9edc8 </usr/include/wctype.h:77:16> 'int' 3)
,
    __ISwxdigit = (IntegerLiteral 0x9a9ee18 </usr/include/wctype.h:78:17> 'int' 4)
,
    __ISwspace = (IntegerLiteral 0x9a9ee68 </usr/include/wctype.h:79:16> 'int' 5)
,
    __ISwprint = (IntegerLiteral 0x9a9eeb8 </usr/include/wctype.h:80:16> 'int' 6)
,
    __ISwgraph = (IntegerLiteral 0x9a9ef08 </usr/include/wctype.h:81:16> 'int' 7)
,
    __ISwblank = (IntegerLiteral 0x9a9ef58 </usr/include/wctype.h:82:16> 'int' 8)
,
    __ISwcntrl = (IntegerLiteral 0x9a9efa8 </usr/include/wctype.h:83:16> 'int' 9)
,
    __ISwpunct = (IntegerLiteral 0x9a9eff8 </usr/include/wctype.h:84:16> 'int' 10)
,
    __ISwalnum = (IntegerLiteral 0x9a9f048 </usr/include/wctype.h:85:16> 'int' 11)
,
    _ISwupper = (ParenExpr 0x9a9f628 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x9a9f608 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x9a9f0e0 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x9a9f0b0 <col:3, col:7> 'int'
        (DeclRefExpr 0x9a9f094 <line:87:24> 'int' EnumConstant 0x9a9ecf0 '__ISwupper' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x9a9f0c8 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x9a9f1d8 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x9a9f1c8 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x9a9f1a0 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x9a9f188 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x9a9f158 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x9a9f140 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x9a9f0f8 <col:23> 'unsigned long' 1)
                (ParenExpr 0x9a9f128 <col:30, col:34> 'int'
                  (DeclRefExpr 0x9a9f110 <line:87:24> 'int' EnumConstant 0x9a9ecf0 '__ISwupper' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x9a9f170 <line:66:40> 'int' 24)))))
    (ParenExpr 0x9a9f5f0 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x9a9f5d0 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x9a9f238 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x9a9f208 <col:6, col:10> 'int'
            (DeclRefExpr 0x9a9f1f0 <line:87:24> 'int' EnumConstant 0x9a9ecf0 '__ISwupper' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x9a9f220 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x9a9f330 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x9a9f320 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x9a9f2f8 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x9a9f2e0 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x9a9f2b0 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x9a9f298 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x9a9f250 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x9a9f280 <col:34, col:38> 'int'
                      (DeclRefExpr 0x9a9f268 <line:87:24> 'int' EnumConstant 0x9a9ecf0 '__ISwupper' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x9a9f2c8 <line:67:44> 'int' 8)))))
        (ParenExpr 0x9a9f5b8 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x9a9f598 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x9a9f390 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x9a9f360 <col:9, col:13> 'int'
                (DeclRefExpr 0x9a9f348 <line:87:24> 'int' EnumConstant 0x9a9ecf0 '__ISwupper' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x9a9f378 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x9a9f488 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x9a9f478 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x9a9f450 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x9a9f438 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x9a9f408 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x9a9f3f0 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x9a9f3a8 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x9a9f3d8 <col:37, col:41> 'int'
                          (DeclRefExpr 0x9a9f3c0 <line:87:24> 'int' EnumConstant 0x9a9ecf0 '__ISwupper' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9a9f420 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x9a9f580 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x9a9f570 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x9a9f548 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x9a9f530 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x9a9f500 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x9a9f4e8 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x9a9f4a0 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x9a9f4d0 <col:26, col:30> 'int'
                          (DeclRefExpr 0x9a9f4b8 <line:87:24> 'int' EnumConstant 0x9a9ecf0 '__ISwupper' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9a9f518 <line:69:36> 'int' 24)))))))))))
,
    _ISwlower = (ParenExpr 0x9aa4a70 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x9aa4a50 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x9aa4528 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x9a9f690 <col:3, col:7> 'int'
        (DeclRefExpr 0x9a9f674 <line:88:24> 'int' EnumConstant 0x9a9ed40 '__ISwlower' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x9aa4510 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x9aa4620 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x9aa4610 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x9aa45e8 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x9aa45d0 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x9aa45a0 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x9aa4588 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x9aa4540 <col:23> 'unsigned long' 1)
                (ParenExpr 0x9aa4570 <col:30, col:34> 'int'
                  (DeclRefExpr 0x9aa4558 <line:88:24> 'int' EnumConstant 0x9a9ed40 '__ISwlower' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x9aa45b8 <line:66:40> 'int' 24)))))
    (ParenExpr 0x9aa4a38 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x9aa4a18 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x9aa4680 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x9aa4650 <col:6, col:10> 'int'
            (DeclRefExpr 0x9aa4638 <line:88:24> 'int' EnumConstant 0x9a9ed40 '__ISwlower' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x9aa4668 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x9aa4778 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x9aa4768 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x9aa4740 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x9aa4728 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x9aa46f8 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x9aa46e0 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x9aa4698 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x9aa46c8 <col:34, col:38> 'int'
                      (DeclRefExpr 0x9aa46b0 <line:88:24> 'int' EnumConstant 0x9a9ed40 '__ISwlower' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x9aa4710 <line:67:44> 'int' 8)))))
        (ParenExpr 0x9aa4a00 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x9aa49e0 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x9aa47d8 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x9aa47a8 <col:9, col:13> 'int'
                (DeclRefExpr 0x9aa4790 <line:88:24> 'int' EnumConstant 0x9a9ed40 '__ISwlower' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x9aa47c0 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x9aa48d0 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x9aa48c0 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x9aa4898 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x9aa4880 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x9aa4850 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x9aa4838 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x9aa47f0 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x9aa4820 <col:37, col:41> 'int'
                          (DeclRefExpr 0x9aa4808 <line:88:24> 'int' EnumConstant 0x9a9ed40 '__ISwlower' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9aa4868 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x9aa49c8 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x9aa49b8 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x9aa4990 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x9aa4978 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x9aa4948 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x9aa4930 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x9aa48e8 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x9aa4918 <col:26, col:30> 'int'
                          (DeclRefExpr 0x9aa4900 <line:88:24> 'int' EnumConstant 0x9a9ed40 '__ISwlower' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9aa4960 <line:69:36> 'int' 24)))))))))))
,
    _ISwalpha = (ParenExpr 0x9aa5058 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x9aa5038 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x9aa4b10 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x9aa4ae0 <col:3, col:7> 'int'
        (DeclRefExpr 0x9aa4ac4 <line:89:24> 'int' EnumConstant 0x9a9ed90 '__ISwalpha' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x9aa4af8 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x9aa4c08 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x9aa4bf8 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x9aa4bd0 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x9aa4bb8 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x9aa4b88 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x9aa4b70 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x9aa4b28 <col:23> 'unsigned long' 1)
                (ParenExpr 0x9aa4b58 <col:30, col:34> 'int'
                  (DeclRefExpr 0x9aa4b40 <line:89:24> 'int' EnumConstant 0x9a9ed90 '__ISwalpha' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x9aa4ba0 <line:66:40> 'int' 24)))))
    (ParenExpr 0x9aa5020 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x9aa5000 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x9aa4c68 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x9aa4c38 <col:6, col:10> 'int'
            (DeclRefExpr 0x9aa4c20 <line:89:24> 'int' EnumConstant 0x9a9ed90 '__ISwalpha' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x9aa4c50 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x9aa4d60 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x9aa4d50 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x9aa4d28 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x9aa4d10 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x9aa4ce0 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x9aa4cc8 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x9aa4c80 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x9aa4cb0 <col:34, col:38> 'int'
                      (DeclRefExpr 0x9aa4c98 <line:89:24> 'int' EnumConstant 0x9a9ed90 '__ISwalpha' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x9aa4cf8 <line:67:44> 'int' 8)))))
        (ParenExpr 0x9aa4fe8 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x9aa4fc8 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x9aa4dc0 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x9aa4d90 <col:9, col:13> 'int'
                (DeclRefExpr 0x9aa4d78 <line:89:24> 'int' EnumConstant 0x9a9ed90 '__ISwalpha' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x9aa4da8 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x9aa4eb8 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x9aa4ea8 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x9aa4e80 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x9aa4e68 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x9aa4e38 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x9aa4e20 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x9aa4dd8 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x9aa4e08 <col:37, col:41> 'int'
                          (DeclRefExpr 0x9aa4df0 <line:89:24> 'int' EnumConstant 0x9a9ed90 '__ISwalpha' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9aa4e50 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x9aa4fb0 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x9aa4fa0 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x9aa4f78 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x9aa4f60 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x9aa4f30 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x9aa4f18 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x9aa4ed0 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x9aa4f00 <col:26, col:30> 'int'
                          (DeclRefExpr 0x9aa4ee8 <line:89:24> 'int' EnumConstant 0x9a9ed90 '__ISwalpha' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9aa4f48 <line:69:36> 'int' 24)))))))))))
,
    _ISwdigit = (ParenExpr 0x9aa5658 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x9aa5638 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x9aa50f0 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x9aa50c0 <col:3, col:7> 'int'
        (DeclRefExpr 0x9aa50a4 <line:90:24> 'int' EnumConstant 0x9a9ede0 '__ISwdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x9aa50d8 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x9aa51e8 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x9aa51d8 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x9aa51b0 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x9aa5198 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x9aa5168 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x9aa5150 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x9aa5108 <col:23> 'unsigned long' 1)
                (ParenExpr 0x9aa5138 <col:30, col:34> 'int'
                  (DeclRefExpr 0x9aa5120 <line:90:24> 'int' EnumConstant 0x9a9ede0 '__ISwdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x9aa5180 <line:66:40> 'int' 24)))))
    (ParenExpr 0x9aa5620 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x9aa5600 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x9aa5248 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x9aa5218 <col:6, col:10> 'int'
            (DeclRefExpr 0x9aa5200 <line:90:24> 'int' EnumConstant 0x9a9ede0 '__ISwdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x9aa5230 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x9aa5340 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x9aa5330 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x9aa5308 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x9aa52f0 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x9aa52c0 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x9aa52a8 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x9aa5260 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x9aa5290 <col:34, col:38> 'int'
                      (DeclRefExpr 0x9aa5278 <line:90:24> 'int' EnumConstant 0x9a9ede0 '__ISwdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x9aa52d8 <line:67:44> 'int' 8)))))
        (ParenExpr 0x9aa55e8 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x9aa55c8 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x9aa53a0 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x9aa5370 <col:9, col:13> 'int'
                (DeclRefExpr 0x9aa5358 <line:90:24> 'int' EnumConstant 0x9a9ede0 '__ISwdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x9aa5388 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x9aa5498 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x9aa5488 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x9aa5460 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x9aa5448 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x9aa5418 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x9aa5400 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x9aa53b8 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x9aa53e8 <col:37, col:41> 'int'
                          (DeclRefExpr 0x9aa53d0 <line:90:24> 'int' EnumConstant 0x9a9ede0 '__ISwdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9aa5430 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x9aa55b0 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x9aa55a0 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x9aa5578 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x9aa5560 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x9aa5530 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x9aa5518 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x9aa54b0 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x9aa54e0 <col:26, col:30> 'int'
                          (DeclRefExpr 0x9aa54c8 <line:90:24> 'int' EnumConstant 0x9a9ede0 '__ISwdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9aa5548 <line:69:36> 'int' 24)))))))))))
,
    _ISwxdigit = (ParenExpr 0x9aa5c38 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x9aa5c18 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x9aa56f0 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x9aa56c0 <col:3, col:7> 'int'
        (DeclRefExpr 0x9aa56a4 <line:91:25> 'int' EnumConstant 0x9a9ee30 '__ISwxdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x9aa56d8 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x9aa57e8 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x9aa57d8 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x9aa57b0 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x9aa5798 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x9aa5768 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x9aa5750 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x9aa5708 <col:23> 'unsigned long' 1)
                (ParenExpr 0x9aa5738 <col:30, col:34> 'int'
                  (DeclRefExpr 0x9aa5720 <line:91:25> 'int' EnumConstant 0x9a9ee30 '__ISwxdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x9aa5780 <line:66:40> 'int' 24)))))
    (ParenExpr 0x9aa5c00 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x9aa5be0 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x9aa5848 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x9aa5818 <col:6, col:10> 'int'
            (DeclRefExpr 0x9aa5800 <line:91:25> 'int' EnumConstant 0x9a9ee30 '__ISwxdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x9aa5830 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x9aa5940 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x9aa5930 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x9aa5908 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x9aa58f0 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x9aa58c0 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x9aa58a8 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x9aa5860 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x9aa5890 <col:34, col:38> 'int'
                      (DeclRefExpr 0x9aa5878 <line:91:25> 'int' EnumConstant 0x9a9ee30 '__ISwxdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x9aa58d8 <line:67:44> 'int' 8)))))
        (ParenExpr 0x9aa5bc8 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x9aa5ba8 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x9aa59a0 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x9aa5970 <col:9, col:13> 'int'
                (DeclRefExpr 0x9aa5958 <line:91:25> 'int' EnumConstant 0x9a9ee30 '__ISwxdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x9aa5988 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x9aa5a98 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x9aa5a88 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x9aa5a60 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x9aa5a48 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x9aa5a18 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x9aa5a00 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x9aa59b8 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x9aa59e8 <col:37, col:41> 'int'
                          (DeclRefExpr 0x9aa59d0 <line:91:25> 'int' EnumConstant 0x9a9ee30 '__ISwxdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9aa5a30 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x9aa5b90 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x9aa5b80 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x9aa5b58 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x9aa5b40 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x9aa5b10 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x9aa5af8 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x9aa5ab0 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x9aa5ae0 <col:26, col:30> 'int'
                          (DeclRefExpr 0x9aa5ac8 <line:91:25> 'int' EnumConstant 0x9a9ee30 '__ISwxdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9aa5b28 <line:69:36> 'int' 24)))))))))))
,
    _ISwspace = (ParenExpr 0x9aa6218 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x9aa61f8 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x9aa5cd0 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x9aa5ca0 <col:3, col:7> 'int'
        (DeclRefExpr 0x9aa5c84 <line:92:24> 'int' EnumConstant 0x9a9ee80 '__ISwspace' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x9aa5cb8 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x9aa5dc8 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x9aa5db8 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x9aa5d90 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x9aa5d78 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x9aa5d48 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x9aa5d30 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x9aa5ce8 <col:23> 'unsigned long' 1)
                (ParenExpr 0x9aa5d18 <col:30, col:34> 'int'
                  (DeclRefExpr 0x9aa5d00 <line:92:24> 'int' EnumConstant 0x9a9ee80 '__ISwspace' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x9aa5d60 <line:66:40> 'int' 24)))))
    (ParenExpr 0x9aa61e0 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x9aa61c0 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x9aa5e28 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x9aa5df8 <col:6, col:10> 'int'
            (DeclRefExpr 0x9aa5de0 <line:92:24> 'int' EnumConstant 0x9a9ee80 '__ISwspace' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x9aa5e10 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x9aa5f20 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x9aa5f10 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x9aa5ee8 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x9aa5ed0 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x9aa5ea0 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x9aa5e88 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x9aa5e40 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x9aa5e70 <col:34, col:38> 'int'
                      (DeclRefExpr 0x9aa5e58 <line:92:24> 'int' EnumConstant 0x9a9ee80 '__ISwspace' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x9aa5eb8 <line:67:44> 'int' 8)))))
        (ParenExpr 0x9aa61a8 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x9aa6188 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x9aa5f80 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x9aa5f50 <col:9, col:13> 'int'
                (DeclRefExpr 0x9aa5f38 <line:92:24> 'int' EnumConstant 0x9a9ee80 '__ISwspace' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x9aa5f68 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x9aa6078 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x9aa6068 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x9aa6040 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x9aa6028 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x9aa5ff8 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x9aa5fe0 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x9aa5f98 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x9aa5fc8 <col:37, col:41> 'int'
                          (DeclRefExpr 0x9aa5fb0 <line:92:24> 'int' EnumConstant 0x9a9ee80 '__ISwspace' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9aa6010 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x9aa6170 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x9aa6160 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x9aa6138 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x9aa6120 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x9aa60f0 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x9aa60d8 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x9aa6090 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x9aa60c0 <col:26, col:30> 'int'
                          (DeclRefExpr 0x9aa60a8 <line:92:24> 'int' EnumConstant 0x9a9ee80 '__ISwspace' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9aa6108 <line:69:36> 'int' 24)))))))))))
,
    _ISwprint = (ParenExpr 0x9aa6818 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x9aa67f8 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x9aa62b0 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x9aa6280 <col:3, col:7> 'int'
        (DeclRefExpr 0x9aa6264 <line:93:24> 'int' EnumConstant 0x9a9eed0 '__ISwprint' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x9aa6298 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x9aa63a8 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x9aa6398 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x9aa6370 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x9aa6358 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x9aa6328 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x9aa6310 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x9aa62c8 <col:23> 'unsigned long' 1)
                (ParenExpr 0x9aa62f8 <col:30, col:34> 'int'
                  (DeclRefExpr 0x9aa62e0 <line:93:24> 'int' EnumConstant 0x9a9eed0 '__ISwprint' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x9aa6340 <line:66:40> 'int' 24)))))
    (ParenExpr 0x9aa67e0 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x9aa67c0 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x9aa6408 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x9aa63d8 <col:6, col:10> 'int'
            (DeclRefExpr 0x9aa63c0 <line:93:24> 'int' EnumConstant 0x9a9eed0 '__ISwprint' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x9aa63f0 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x9aa6520 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x9aa64f0 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x9aa64c8 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x9aa64b0 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x9aa6480 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x9aa6468 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x9aa6420 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x9aa6450 <col:34, col:38> 'int'
                      (DeclRefExpr 0x9aa6438 <line:93:24> 'int' EnumConstant 0x9a9eed0 '__ISwprint' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x9aa6498 <line:67:44> 'int' 8)))))
        (ParenExpr 0x9aa67a8 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x9aa6788 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x9aa6580 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x9aa6550 <col:9, col:13> 'int'
                (DeclRefExpr 0x9aa6538 <line:93:24> 'int' EnumConstant 0x9a9eed0 '__ISwprint' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x9aa6568 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x9aa6678 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x9aa6668 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x9aa6640 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x9aa6628 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x9aa65f8 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x9aa65e0 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x9aa6598 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x9aa65c8 <col:37, col:41> 'int'
                          (DeclRefExpr 0x9aa65b0 <line:93:24> 'int' EnumConstant 0x9a9eed0 '__ISwprint' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9aa6610 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x9aa6770 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x9aa6760 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x9aa6738 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x9aa6720 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x9aa66f0 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x9aa66d8 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x9aa6690 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x9aa66c0 <col:26, col:30> 'int'
                          (DeclRefExpr 0x9aa66a8 <line:93:24> 'int' EnumConstant 0x9a9eed0 '__ISwprint' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9aa6708 <line:69:36> 'int' 24)))))))))))
,
    _ISwgraph = (ParenExpr 0x9aa6df8 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x9aa6dd8 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x9aa68b0 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x9aa6880 <col:3, col:7> 'int'
        (DeclRefExpr 0x9aa6864 <line:94:24> 'int' EnumConstant 0x9a9ef20 '__ISwgraph' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x9aa6898 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x9aa69a8 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x9aa6998 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x9aa6970 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x9aa6958 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x9aa6928 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x9aa6910 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x9aa68c8 <col:23> 'unsigned long' 1)
                (ParenExpr 0x9aa68f8 <col:30, col:34> 'int'
                  (DeclRefExpr 0x9aa68e0 <line:94:24> 'int' EnumConstant 0x9a9ef20 '__ISwgraph' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x9aa6940 <line:66:40> 'int' 24)))))
    (ParenExpr 0x9aa6dc0 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x9aa6da0 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x9aa6a08 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x9aa69d8 <col:6, col:10> 'int'
            (DeclRefExpr 0x9aa69c0 <line:94:24> 'int' EnumConstant 0x9a9ef20 '__ISwgraph' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x9aa69f0 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x9aa6b00 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x9aa6af0 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x9aa6ac8 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x9aa6ab0 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x9aa6a80 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x9aa6a68 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x9aa6a20 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x9aa6a50 <col:34, col:38> 'int'
                      (DeclRefExpr 0x9aa6a38 <line:94:24> 'int' EnumConstant 0x9a9ef20 '__ISwgraph' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x9aa6a98 <line:67:44> 'int' 8)))))
        (ParenExpr 0x9aa6d88 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x9aa6d68 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x9aa6b60 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x9aa6b30 <col:9, col:13> 'int'
                (DeclRefExpr 0x9aa6b18 <line:94:24> 'int' EnumConstant 0x9a9ef20 '__ISwgraph' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x9aa6b48 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x9aa6c58 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x9aa6c48 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x9aa6c20 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x9aa6c08 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x9aa6bd8 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x9aa6bc0 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x9aa6b78 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x9aa6ba8 <col:37, col:41> 'int'
                          (DeclRefExpr 0x9aa6b90 <line:94:24> 'int' EnumConstant 0x9a9ef20 '__ISwgraph' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9aa6bf0 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x9aa6d50 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x9aa6d40 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x9aa6d18 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x9aa6d00 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x9aa6cd0 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x9aa6cb8 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x9aa6c70 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x9aa6ca0 <col:26, col:30> 'int'
                          (DeclRefExpr 0x9aa6c88 <line:94:24> 'int' EnumConstant 0x9a9ef20 '__ISwgraph' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9aa6ce8 <line:69:36> 'int' 24)))))))))))
,
    _ISwblank = (ParenExpr 0x9aa73d8 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x9aa73b8 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x9aa6e90 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x9aa6e60 <col:3, col:7> 'int'
        (DeclRefExpr 0x9aa6e44 <line:95:24> 'int' EnumConstant 0x9a9ef70 '__ISwblank' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x9aa6e78 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x9aa6f88 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x9aa6f78 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x9aa6f50 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x9aa6f38 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x9aa6f08 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x9aa6ef0 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x9aa6ea8 <col:23> 'unsigned long' 1)
                (ParenExpr 0x9aa6ed8 <col:30, col:34> 'int'
                  (DeclRefExpr 0x9aa6ec0 <line:95:24> 'int' EnumConstant 0x9a9ef70 '__ISwblank' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x9aa6f20 <line:66:40> 'int' 24)))))
    (ParenExpr 0x9aa73a0 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x9aa7380 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x9aa6fe8 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x9aa6fb8 <col:6, col:10> 'int'
            (DeclRefExpr 0x9aa6fa0 <line:95:24> 'int' EnumConstant 0x9a9ef70 '__ISwblank' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x9aa6fd0 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x9aa70e0 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x9aa70d0 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x9aa70a8 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x9aa7090 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x9aa7060 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x9aa7048 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x9aa7000 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x9aa7030 <col:34, col:38> 'int'
                      (DeclRefExpr 0x9aa7018 <line:95:24> 'int' EnumConstant 0x9a9ef70 '__ISwblank' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x9aa7078 <line:67:44> 'int' 8)))))
        (ParenExpr 0x9aa7368 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x9aa7348 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x9aa7140 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x9aa7110 <col:9, col:13> 'int'
                (DeclRefExpr 0x9aa70f8 <line:95:24> 'int' EnumConstant 0x9a9ef70 '__ISwblank' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x9aa7128 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x9aa7238 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x9aa7228 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x9aa7200 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x9aa71e8 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x9aa71b8 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x9aa71a0 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x9aa7158 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x9aa7188 <col:37, col:41> 'int'
                          (DeclRefExpr 0x9aa7170 <line:95:24> 'int' EnumConstant 0x9a9ef70 '__ISwblank' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9aa71d0 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x9aa7330 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x9aa7320 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x9aa72f8 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x9aa72e0 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x9aa72b0 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x9aa7298 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x9aa7250 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x9aa7280 <col:26, col:30> 'int'
                          (DeclRefExpr 0x9aa7268 <line:95:24> 'int' EnumConstant 0x9a9ef70 '__ISwblank' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9aa72c8 <line:69:36> 'int' 24)))))))))))
,
    _ISwcntrl = (ParenExpr 0x9aa79c8 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x9aa79a8 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x9aa7470 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x9aa7440 <col:3, col:7> 'int'
        (DeclRefExpr 0x9aa7424 <line:96:24> 'int' EnumConstant 0x9a9efc0 '__ISwcntrl' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x9aa7458 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x9aa7578 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x9aa7568 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x9aa7540 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x9aa7528 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x9aa74e8 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x9aa74d0 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x9aa7488 <col:23> 'unsigned long' 1)
                (ParenExpr 0x9aa74b8 <col:30, col:34> 'int'
                  (DeclRefExpr 0x9aa74a0 <line:96:24> 'int' EnumConstant 0x9a9efc0 '__ISwcntrl' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x9aa7500 <line:66:40> 'int' 24)))))
    (ParenExpr 0x9aa7990 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x9aa7970 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x9aa75d8 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x9aa75a8 <col:6, col:10> 'int'
            (DeclRefExpr 0x9aa7590 <line:96:24> 'int' EnumConstant 0x9a9efc0 '__ISwcntrl' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x9aa75c0 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x9aa76d0 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x9aa76c0 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x9aa7698 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x9aa7680 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x9aa7650 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x9aa7638 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x9aa75f0 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x9aa7620 <col:34, col:38> 'int'
                      (DeclRefExpr 0x9aa7608 <line:96:24> 'int' EnumConstant 0x9a9efc0 '__ISwcntrl' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x9aa7668 <line:67:44> 'int' 8)))))
        (ParenExpr 0x9aa7958 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x9aa7938 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x9aa7730 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x9aa7700 <col:9, col:13> 'int'
                (DeclRefExpr 0x9aa76e8 <line:96:24> 'int' EnumConstant 0x9a9efc0 '__ISwcntrl' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x9aa7718 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x9aa7828 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x9aa7818 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x9aa77f0 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x9aa77d8 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x9aa77a8 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x9aa7790 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x9aa7748 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x9aa7778 <col:37, col:41> 'int'
                          (DeclRefExpr 0x9aa7760 <line:96:24> 'int' EnumConstant 0x9a9efc0 '__ISwcntrl' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9aa77c0 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x9aa7920 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x9aa7910 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x9aa78e8 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x9aa78d0 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x9aa78a0 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x9aa7888 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x9aa7840 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x9aa7870 <col:26, col:30> 'int'
                          (DeclRefExpr 0x9aa7858 <line:96:24> 'int' EnumConstant 0x9a9efc0 '__ISwcntrl' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9aa78b8 <line:69:36> 'int' 24)))))))))))
,
    _ISwpunct = (ParenExpr 0x9aa7fa8 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x9aa7f88 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x9aa7a60 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x9aa7a30 <col:3, col:7> 'int'
        (DeclRefExpr 0x9aa7a14 <line:97:24> 'int' EnumConstant 0x9a9f010 '__ISwpunct' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x9aa7a48 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x9aa7b58 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x9aa7b48 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x9aa7b20 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x9aa7b08 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x9aa7ad8 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x9aa7ac0 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x9aa7a78 <col:23> 'unsigned long' 1)
                (ParenExpr 0x9aa7aa8 <col:30, col:34> 'int'
                  (DeclRefExpr 0x9aa7a90 <line:97:24> 'int' EnumConstant 0x9a9f010 '__ISwpunct' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x9aa7af0 <line:66:40> 'int' 24)))))
    (ParenExpr 0x9aa7f70 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x9aa7f50 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x9aa7bb8 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x9aa7b88 <col:6, col:10> 'int'
            (DeclRefExpr 0x9aa7b70 <line:97:24> 'int' EnumConstant 0x9a9f010 '__ISwpunct' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x9aa7ba0 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x9aa7cb0 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x9aa7ca0 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x9aa7c78 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x9aa7c60 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x9aa7c30 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x9aa7c18 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x9aa7bd0 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x9aa7c00 <col:34, col:38> 'int'
                      (DeclRefExpr 0x9aa7be8 <line:97:24> 'int' EnumConstant 0x9a9f010 '__ISwpunct' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x9aa7c48 <line:67:44> 'int' 8)))))
        (ParenExpr 0x9aa7f38 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x9aa7f18 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x9aa7d10 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x9aa7ce0 <col:9, col:13> 'int'
                (DeclRefExpr 0x9aa7cc8 <line:97:24> 'int' EnumConstant 0x9a9f010 '__ISwpunct' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x9aa7cf8 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x9aa7e08 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x9aa7df8 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x9aa7dd0 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x9aa7db8 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x9aa7d88 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x9aa7d70 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x9aa7d28 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x9aa7d58 <col:37, col:41> 'int'
                          (DeclRefExpr 0x9aa7d40 <line:97:24> 'int' EnumConstant 0x9a9f010 '__ISwpunct' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9aa7da0 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x9aa7f00 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x9aa7ef0 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x9aa7ec8 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x9aa7eb0 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x9aa7e80 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x9aa7e68 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x9aa7e20 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x9aa7e50 <col:26, col:30> 'int'
                          (DeclRefExpr 0x9aa7e38 <line:97:24> 'int' EnumConstant 0x9a9f010 '__ISwpunct' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9aa7e98 <line:69:36> 'int' 24)))))))))))
,
    _ISwalnum = (ParenExpr 0x9aa85a0 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x9aa8580 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x9aa8040 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x9aa8010 <col:3, col:7> 'int'
        (DeclRefExpr 0x9aa7ff4 <line:98:24> 'int' EnumConstant 0x9a9f060 '__ISwalnum' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x9aa8028 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x9aa8138 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x9aa8128 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x9aa8100 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x9aa80e8 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x9aa80b8 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x9aa80a0 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x9aa8058 <col:23> 'unsigned long' 1)
                (ParenExpr 0x9aa8088 <col:30, col:34> 'int'
                  (DeclRefExpr 0x9aa8070 <line:98:24> 'int' EnumConstant 0x9a9f060 '__ISwalnum' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x9aa80d0 <line:66:40> 'int' 24)))))
    (ParenExpr 0x9aa8568 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x9aa8548 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x9aa8198 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x9aa8168 <col:6, col:10> 'int'
            (DeclRefExpr 0x9aa8150 <line:98:24> 'int' EnumConstant 0x9a9f060 '__ISwalnum' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x9aa8180 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x9aa8290 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x9aa8280 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x9aa8258 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x9aa8240 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x9aa8210 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x9aa81f8 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x9aa81b0 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x9aa81e0 <col:34, col:38> 'int'
                      (DeclRefExpr 0x9aa81c8 <line:98:24> 'int' EnumConstant 0x9a9f060 '__ISwalnum' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x9aa8228 <line:67:44> 'int' 8)))))
        (ParenExpr 0x9aa8530 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x9aa84f8 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x9aa82f0 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x9aa82c0 <col:9, col:13> 'int'
                (DeclRefExpr 0x9aa82a8 <line:98:24> 'int' EnumConstant 0x9a9f060 '__ISwalnum' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x9aa82d8 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x9aa83e8 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x9aa83d8 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x9aa83b0 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x9aa8398 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x9aa8368 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x9aa8350 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x9aa8308 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x9aa8338 <col:37, col:41> 'int'
                          (DeclRefExpr 0x9aa8320 <line:98:24> 'int' EnumConstant 0x9a9f060 '__ISwalnum' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9aa8380 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x9aa84e0 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x9aa84d0 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x9aa84a8 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x9aa8490 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x9aa8460 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x9aa8448 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x9aa8400 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x9aa8430 <col:26, col:30> 'int'
                          (DeclRefExpr 0x9aa8418 <line:98:24> 'int' EnumConstant 0x9a9f060 '__ISwalnum' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9aa8478 <line:69:36> 'int' 24)))))))))))

};
extern "C" {
    extern int iswalnum(wint_t __wc) throw();
    extern int iswalpha(wint_t __wc) throw();
    extern int iswcntrl(wint_t __wc) throw();
    extern int iswdigit(wint_t __wc) throw();
    extern int iswgraph(wint_t __wc) throw();
    extern int iswlower(wint_t __wc) throw();
    extern int iswprint(wint_t __wc) throw();
    extern int iswpunct(wint_t __wc) throw();
    extern int iswspace(wint_t __wc) throw();
    extern int iswupper(wint_t __wc) throw();
    extern int iswxdigit(wint_t __wc) throw();
    extern int iswblank(wint_t __wc) throw();
    extern wctype_t wctype(const char *__property) throw();
    extern int iswctype(wint_t __wc, wctype_t __desc) throw();
    typedef const __int32_t *wctrans_t;
    extern wint_t towlower(wint_t __wc) throw();
    extern wint_t towupper(wint_t __wc) throw();
}
extern "C" {
    extern wctrans_t wctrans(const char *__property) throw();
    extern wint_t towctrans(wint_t __wc, wctrans_t __desc) throw();
    extern int iswalnum_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswalpha_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswcntrl_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswdigit_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswgraph_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswlower_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswprint_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswpunct_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswspace_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswupper_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswxdigit_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswblank_l(wint_t __wc, __locale_t __locale) throw();
    extern wctype_t wctype_l(const char *__property, __locale_t __locale) throw();
    extern int iswctype_l(wint_t __wc, wctype_t __desc, __locale_t __locale) throw();
    extern wint_t towlower_l(wint_t __wc, __locale_t __locale) throw();
    extern wint_t towupper_l(wint_t __wc, __locale_t __locale) throw();
    extern wctrans_t wctrans_l(const char *__property, __locale_t __locale) throw();
    extern wint_t towctrans_l(wint_t __wc, wctrans_t __desc, __locale_t __locale) throw();
}
extern "C" {
    struct timezone {
        struct timezone;
        int tz_minuteswest;
        int tz_dsttime;
    };
    typedef struct timezone *restrict __timezone_ptr_t;
    extern int gettimeofday(struct timeval *restrict __tv, __timezone_ptr_t __tz) throw();
    extern int settimeofday(const struct timeval *__tv, const struct timezone *__tz) throw();
    extern int adjtime(const struct timeval *__delta, struct timeval *__olddelta) throw();
    enum __itimer_which {
        ITIMER_REAL = (ImplicitCastExpr 0x9ab0ea8 </usr/include/i386-linux-gnu/sys/time.h:96:19> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9ab0db0 <col:19> 'int' 0))
,
        ITIMER_VIRTUAL = (ImplicitCastExpr 0x9ab0eb8 </usr/include/i386-linux-gnu/sys/time.h:99:22> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9ab0e08 <col:22> 'int' 1))
,
        ITIMER_PROF = (ImplicitCastExpr 0x9ab0ec8 </usr/include/i386-linux-gnu/sys/time.h:103:19> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9ab0e58 <col:19> 'int' 2))

    };
    struct itimerval {
        struct itimerval;
        struct timeval it_interval;
        struct timeval it_value;
    };
    typedef int __itimer_which_t;
    extern int getitimer(__itimer_which_t __which, struct itimerval *__value) throw();
    extern int setitimer(__itimer_which_t __which, const struct itimerval *restrict __new, struct itimerval *restrict __old) throw();
    extern int utimes(const char *__file, const struct timeval __tvp[2]) throw();
    extern int lutimes(const char *__file, const struct timeval __tvp[2]) throw();
    extern int futimes(int __fd, const struct timeval __tvp[2]) throw();
    extern int futimesat(int __fd, const char *__file, const struct timeval __tvp[2]) throw();
}
extern "C" {
    extern int __sigismember(const __sigset_t *, int);
    extern int __sigaddset(__sigset_t *, int);
    extern int __sigdelset(__sigset_t *, int);
    typedef __sig_atomic_t sig_atomic_t;
    union sigval {
        union sigval;
        int sival_int;
        void *sival_ptr;
    };
    typedef union sigval sigval_t;
    struct siginfo {
        struct siginfo;
        int si_signo;
        int si_errno;
        int si_code;
        union {
            int _pad[29];
            struct {
                __pid_t si_pid;
                __uid_t si_uid;
            };
            struct <anonymous struct at /usr/include/i386-linux-gnu/bits/siginfo.h:63:2> _kill;
            struct {
                int si_tid;
                int si_overrun;
                sigval_t si_sigval;
            };
            struct <anonymous struct at /usr/include/i386-linux-gnu/bits/siginfo.h:70:2> _timer;
            struct {
                __pid_t si_pid;
                __uid_t si_uid;
                sigval_t si_sigval;
            };
            struct <anonymous struct at /usr/include/i386-linux-gnu/bits/siginfo.h:78:2> _rt;
            struct {
                __pid_t si_pid;
                __uid_t si_uid;
                int si_status;
                __clock_t si_utime;
                __clock_t si_stime;
            };
            struct <anonymous struct at /usr/include/i386-linux-gnu/bits/siginfo.h:86:2> _sigchld;
            struct {
                void *si_addr;
            };
            struct <anonymous struct at /usr/include/i386-linux-gnu/bits/siginfo.h:96:2> _sigfault;
            struct {
                long si_band;
                int si_fd;
            };
            struct <anonymous struct at /usr/include/i386-linux-gnu/bits/siginfo.h:102:2> _sigpoll;
        };
        union <anonymous union at /usr/include/i386-linux-gnu/bits/siginfo.h:58:5> _sifields;
    };
    typedef struct siginfo siginfo_t;
    enum  {
        SI_ASYNCNL = (UnaryOperator 0x9ac1a78 </usr/include/i386-linux-gnu/bits/siginfo.h:131:16, col:17> 'int' prefix '-'
  (IntegerLiteral 0x9ac1a60 <col:17> 'int' 60))
,
        SI_TKILL = (UnaryOperator 0x9ac1ae0 </usr/include/i386-linux-gnu/bits/siginfo.h:133:14, col:15> 'int' prefix '-'
  (IntegerLiteral 0x9ac1ac8 <col:15> 'int' 6))
,
        SI_SIGIO,
        SI_ASYNCIO,
        SI_MESGQ,
        SI_TIMER,
        SI_QUEUE,
        SI_USER,
        SI_KERNEL = (IntegerLiteral 0x9ac1cb8 </usr/include/i386-linux-gnu/bits/siginfo.h:147:15> 'int' 128)

    };
    enum  {
        ILL_ILLOPC = (ImplicitCastExpr 0x9ac1f88 </usr/include/i386-linux-gnu/bits/siginfo.h:155:16> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9ac1d70 <col:16> 'int' 1))
,
        ILL_ILLOPN,
        ILL_ILLADR,
        ILL_ILLTRP,
        ILL_PRVOPC,
        ILL_PRVREG,
        ILL_COPROC,
        ILL_BADSTK
    };
    enum  {
        FPE_INTDIV = (ImplicitCastExpr 0x9ac2218 </usr/include/i386-linux-gnu/bits/siginfo.h:176:16> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9ac2000 <col:16> 'int' 1))
,
        FPE_INTOVF,
        FPE_FLTDIV,
        FPE_FLTOVF,
        FPE_FLTUND,
        FPE_FLTRES,
        FPE_FLTINV,
        FPE_FLTSUB
    };
    enum  {
        SEGV_MAPERR = (ImplicitCastExpr 0x9ac57c8 </usr/include/i386-linux-gnu/bits/siginfo.h:197:17> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9ac5730 <col:17> 'int' 1))
,
        SEGV_ACCERR
    };
    enum  {
        BUS_ADRALN = (ImplicitCastExpr 0x9ac5918 </usr/include/i386-linux-gnu/bits/siginfo.h:206:16> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9ac5840 <col:16> 'int' 1))
,
        BUS_ADRERR,
        BUS_OBJERR
    };
    enum  {
        TRAP_BRKPT = (ImplicitCastExpr 0x9ac5a28 </usr/include/i386-linux-gnu/bits/siginfo.h:217:16> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9ac5990 <col:16> 'int' 1))
,
        TRAP_TRACE
    };
    enum  {
        CLD_EXITED = (ImplicitCastExpr 0x9ac5c38 </usr/include/i386-linux-gnu/bits/siginfo.h:226:16> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9ac5aa0 <col:16> 'int' 1))
,
        CLD_KILLED,
        CLD_DUMPED,
        CLD_TRAPPED,
        CLD_STOPPED,
        CLD_CONTINUED
    };
    enum  {
        POLL_IN = (ImplicitCastExpr 0x9ac5e48 </usr/include/i386-linux-gnu/bits/siginfo.h:243:13> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9ac5cb0 <col:13> 'int' 1))
,
        POLL_OUT,
        POLL_MSG,
        POLL_ERR,
        POLL_PRI,
        POLL_HUP
    };
    struct sigevent {
        struct sigevent;
        sigval_t sigev_value;
        int sigev_signo;
        int sigev_notify;
        union {
            int _pad[13];
            __pid_t _tid;
            struct {
                void (*_function)(sigval_t);
                void *_attribute;
            };
            struct <anonymous struct at /usr/include/i386-linux-gnu/bits/siginfo.h:287:2> _sigev_thread;
        };
        union <anonymous union at /usr/include/i386-linux-gnu/bits/siginfo.h:279:5> _sigev_un;
    };
    typedef struct sigevent sigevent_t;
    enum  {
        SIGEV_SIGNAL = (ImplicitCastExpr 0x9aca008 </usr/include/i386-linux-gnu/bits/siginfo.h:302:18> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9ac66b0 <col:18> 'int' 0))
,
        SIGEV_NONE,
        SIGEV_THREAD,
        SIGEV_THREAD_ID = (ImplicitCastExpr 0x9aca018 </usr/include/i386-linux-gnu/bits/siginfo.h:309:21> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9ac9fb8 <col:21> 'int' 4))

    };
    typedef void (*__sighandler_t)(int);
    extern __sighandler_t __sysv_signal(int __sig, __sighandler_t __handler) throw();
    extern __sighandler_t sysv_signal(int __sig, __sighandler_t __handler) throw();
    extern __sighandler_t signal(int __sig, __sighandler_t __handler) throw();
    extern __sighandler_t bsd_signal(int __sig, __sighandler_t __handler) throw();
    extern int kill(__pid_t __pid, int __sig) throw();
    extern int killpg(__pid_t __pgrp, int __sig) throw();
    extern int raise(int __sig) throw();
    extern __sighandler_t ssignal(int __sig, __sighandler_t __handler) throw();
    extern int gsignal(int __sig) throw();
    extern void psignal(int __sig, const char *__s);
    extern void psiginfo(const siginfo_t *__pinfo, const char *__s);
    extern int __sigpause(int __sig_or_mask, int __is_sig);
    extern int sigpause(int __sig);
    extern int sigblock(int __mask) throw();
    extern int sigsetmask(int __mask) throw();
    extern int siggetmask() throw();
    typedef __sighandler_t sighandler_t;
    typedef __sighandler_t sig_t;
    extern int sigemptyset(sigset_t *__set) throw();
    extern int sigfillset(sigset_t *__set) throw();
    extern int sigaddset(sigset_t *__set, int __signo) throw();
    extern int sigdelset(sigset_t *__set, int __signo) throw();
    extern int sigismember(const sigset_t *__set, int __signo) throw();
    extern int sigisemptyset(const sigset_t *__set) throw();
    extern int sigandset(sigset_t *__set, const sigset_t *__left, const sigset_t *__right) throw();
    extern int sigorset(sigset_t *__set, const sigset_t *__left, const sigset_t *__right) throw();
    struct sigaction {
        struct sigaction;
        union {
            __sighandler_t sa_handler;
            void (*sa_sigaction)(int, siginfo_t *, void *);
        };
        union <anonymous union at /usr/include/i386-linux-gnu/bits/sigaction.h:29:5> __sigaction_handler;
        __sigset_t sa_mask;
        int sa_flags;
        void (*sa_restorer)();
    };
    extern int sigprocmask(int __how, const sigset_t *restrict __set, sigset_t *restrict __oset) throw();
    extern int sigsuspend(const sigset_t *__set);
    extern int sigaction(int __sig, const struct sigaction *restrict __act, struct sigaction *restrict __oact) throw();
    extern int sigpending(sigset_t *__set) throw();
    extern int sigwait(const sigset_t *restrict __set, int *restrict __sig);
    extern int sigwaitinfo(const sigset_t *restrict __set, siginfo_t *restrict __info);
    extern int sigtimedwait(const sigset_t *restrict __set, siginfo_t *restrict __info, const struct timespec *restrict __timeout);
    extern int sigqueue(__pid_t __pid, int __sig, const union sigval __val) throw();
    extern const char *const _sys_siglist[65];
    extern const char *const sys_siglist[65];
    struct sigvec {
        struct sigvec;
        __sighandler_t sv_handler;
        int sv_mask;
        int sv_flags;
    };
    extern int sigvec(int __sig, const struct sigvec *__vec, struct sigvec *__ovec) throw();
    typedef signed char __s8;
    typedef unsigned char __u8;
    typedef short __s16;
    typedef unsigned short __u16;
    typedef int __s32;
    typedef unsigned int __u32;
    typedef long long __s64;
    typedef unsigned long long __u64;
    typedef unsigned short umode_t;
    struct {
        unsigned long fds_bits[32];
    };
    typedef struct __kernel_fd_set __kernel_fd_set;
    typedef void (*__kernel_sighandler_t)(int);
    typedef int __kernel_key_t;
    typedef int __kernel_mqd_t;
    typedef unsigned long __kernel_ino_t;
    typedef unsigned short __kernel_mode_t;
    typedef unsigned short __kernel_nlink_t;
    typedef long __kernel_off_t;
    typedef int __kernel_pid_t;
    typedef unsigned short __kernel_ipc_pid_t;
    typedef unsigned short __kernel_uid_t;
    typedef unsigned short __kernel_gid_t;
    typedef unsigned int __kernel_size_t;
    typedef int __kernel_ssize_t;
    typedef int __kernel_ptrdiff_t;
    typedef long __kernel_time_t;
    typedef long __kernel_suseconds_t;
    typedef long __kernel_clock_t;
    typedef int __kernel_timer_t;
    typedef int __kernel_clockid_t;
    typedef int __kernel_daddr_t;
    typedef char *__kernel_caddr_t;
    typedef unsigned short __kernel_uid16_t;
    typedef unsigned short __kernel_gid16_t;
    typedef unsigned int __kernel_uid32_t;
    typedef unsigned int __kernel_gid32_t;
    typedef unsigned short __kernel_old_uid_t;
    typedef unsigned short __kernel_old_gid_t;
    typedef unsigned short __kernel_old_dev_t;
    typedef long long __kernel_loff_t;
    struct {
        int val[2];
    };
    typedef struct __kernel_fsid_t __kernel_fsid_t;
    typedef __u16 __le16;
    typedef __u16 __be16;
    typedef __u32 __le32;
    typedef __u32 __be32;
    typedef __u64 __le64;
    typedef __u64 __be64;
    typedef __u16 __sum16;
    typedef __u32 __wsum;
    struct _fpx_sw_bytes {
        struct _fpx_sw_bytes;
        __u32 magic1;
        __u32 extended_size;
        __u64 xstate_bv;
        __u32 xstate_size;
        __u32 padding[7];
    };
    struct _fpreg {
        struct _fpreg;
        unsigned short significand[4];
        unsigned short exponent;
    };
    struct _fpxreg {
        struct _fpxreg;
        unsigned short significand[4];
        unsigned short exponent;
        unsigned short padding[3];
    };
    struct _xmmreg {
        struct _xmmreg;
        unsigned long element[4];
    };
    struct _fpstate {
        struct _fpstate;
        unsigned long cw;
        unsigned long sw;
        unsigned long tag;
        unsigned long ipoff;
        unsigned long cssel;
        unsigned long dataoff;
        unsigned long datasel;
        struct _fpreg _st[8];
        unsigned short status;
        unsigned short magic;
        unsigned long _fxsr_env[6];
        unsigned long mxcsr;
        unsigned long reserved;
        struct _fpxreg _fxsr_st[8];
        struct _xmmreg _xmm[8];
        unsigned long padding1[44];
        union {
            unsigned long padding2[12];
            struct _fpx_sw_bytes sw_reserved;
        } ;
        ;
        ;
    };
    struct sigcontext {
        struct sigcontext;
        unsigned short gs;
        unsigned short __gsh;
        unsigned short fs;
        unsigned short __fsh;
        unsigned short es;
        unsigned short __esh;
        unsigned short ds;
        unsigned short __dsh;
        unsigned long edi;
        unsigned long esi;
        unsigned long ebp;
        unsigned long esp;
        unsigned long ebx;
        unsigned long edx;
        unsigned long ecx;
        unsigned long eax;
        unsigned long trapno;
        unsigned long err;
        unsigned long eip;
        unsigned short cs;
        unsigned short __csh;
        unsigned long eflags;
        unsigned long esp_at_signal;
        unsigned short ss;
        unsigned short __ssh;
        struct _fpstate *fpstate;
        unsigned long oldmask;
        unsigned long cr2;
    };
    struct _xsave_hdr {
        struct _xsave_hdr;
        __u64 xstate_bv;
        __u64 reserved1[2];
        __u64 reserved2[5];
    };
    struct _ymmh_state {
        struct _ymmh_state;
        __u32 ymmh_space[64];
    };
    struct _xstate {
        struct _xstate;
        struct _fpstate fpstate;
        struct _xsave_hdr xstate_hdr;
        struct _ymmh_state ymmh;
    };
    extern int sigreturn(struct sigcontext *__scp) throw();
    extern int siginterrupt(int __sig, int __interrupt) throw();
    struct sigstack {
        struct sigstack;
        void *ss_sp;
        int ss_onstack;
    };
    enum  {
        SS_ONSTACK = (ImplicitCastExpr 0x9addbd8 </usr/include/i386-linux-gnu/bits/sigstack.h:36:16> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9addb40 <col:16> 'int' 1))
,
        SS_DISABLE
    };
    struct sigaltstack {
        struct sigaltstack;
        void *ss_sp;
        int ss_flags;
        size_t ss_size;
    };
    typedef struct sigaltstack stack_t;
    typedef int greg_t;
    typedef greg_t gregset_t[19];
    enum  {
        REG_GS = (ImplicitCastExpr 0x9ae0fc8 </usr/include/i386-linux-gnu/sys/ucontext.h:43:12> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9addfb0 <col:12> 'int' 0))
,
        REG_FS,
        REG_ES,
        REG_DS,
        REG_EDI,
        REG_ESI,
        REG_EBP,
        REG_ESP,
        REG_EBX,
        REG_EDX,
        REG_ECX,
        REG_EAX,
        REG_TRAPNO,
        REG_ERR,
        REG_EIP,
        REG_CS,
        REG_EFL,
        REG_UESP,
        REG_SS
    };
    struct _libc_fpreg {
        struct _libc_fpreg;
        unsigned short significand[4];
        unsigned short exponent;
    };
    struct _libc_fpstate {
        struct _libc_fpstate;
        unsigned long cw;
        unsigned long sw;
        unsigned long tag;
        unsigned long ipoff;
        unsigned long cssel;
        unsigned long dataoff;
        unsigned long datasel;
        struct _libc_fpreg _st[8];
        unsigned long status;
    };
    typedef struct _libc_fpstate *fpregset_t;
    struct {
        gregset_t gregs;
        fpregset_t fpregs;
        unsigned long oldmask;
        unsigned long cr2;
    };
    typedef struct mcontext_t mcontext_t;
    struct ucontext {
        struct ucontext;
        unsigned long uc_flags;
        struct ucontext *uc_link;
        stack_t uc_stack;
        mcontext_t uc_mcontext;
        __sigset_t uc_sigmask;
        struct _libc_fpstate __fpregs_mem;
    };
    typedef struct ucontext ucontext_t;
    extern int sigstack(struct sigstack *__ss, struct sigstack *__oss) throw();
    extern int sigaltstack(const struct sigaltstack *restrict __ss, struct sigaltstack *restrict __oss) throw();
    extern int sighold(int __sig) throw();
    extern int sigrelse(int __sig) throw();
    extern int sigignore(int __sig) throw();
    extern __sighandler_t sigset(int __sig, __sighandler_t __disp) throw();
    extern int pthread_sigmask(int __how, const __sigset_t *restrict __newmask, __sigset_t *restrict __oldmask) throw();
    extern int pthread_kill(pthread_t __threadid, int __signo) throw();
    extern int pthread_sigqueue(pthread_t __threadid, int __signo, const union sigval __value) throw();
    extern int __libc_current_sigrtmin() throw();
    extern int __libc_current_sigrtmax() throw();
}
int fish_wcwidth(wchar_t wc);
int fish_wcswidth(const wchar_t *str, size_t n);
typedef char tputs_arg_t;
wchar_t *wcsndup(const wchar_t *in, size_t c);
long convert_digit(wchar_t d, int base);
size_t wcslcat(wchar_t *dst, const wchar_t *src, size_t siz);
size_t wcslcpy(wchar_t *dst, const wchar_t *src, size_t siz);
char *fish_gettext(const char *msgid);
char *fish_bindtextdomain(const char *domainname, const char *dirname);
char *fish_textdomain(const char *domainname);
char *fish_dcgettext(const char *domainname, const char *msgid, int category);
extern int _nl_msg_cat_cntr;
template <typename T> static inline T maxi(T a, T b) (CompoundStmt 0x9ae6c18 <../codeBase/fish-shell-master/util.h:17:1, line:19:1>
  (ReturnStmt 0x9ae6c08 <line:18:5, col:18>
    (ConditionalOperator 0x9ae6be8 <col:12, col:18> '<dependent type>'
      (BinaryOperator 0x9ae6ba0 <col:12, col:14> '<dependent type>' '>'
        (DeclRefExpr 0x9ae6b70 <col:12> 'T' lvalue ParmVar 0x9ae6a00 'a' 'T')
        (DeclRefExpr 0x9ae6b88 <col:14> 'T' lvalue ParmVar 0x9ae6a40 'b' 'T'))
      (DeclRefExpr 0x9ae6bb8 <col:16> 'T' lvalue ParmVar 0x9ae6a00 'a' 'T')
      (DeclRefExpr 0x9ae6bd0 <col:18> 'T' lvalue ParmVar 0x9ae6a40 'b' 'T'))))

;
template <typename T> static inline T mini(T a, T b) (CompoundStmt 0x9ae6e88 <../codeBase/fish-shell-master/util.h:26:1, line:28:1>
  (ReturnStmt 0x9ae6e78 <line:27:5, col:18>
    (ConditionalOperator 0x9ae6e58 <col:12, col:18> '<dependent type>'
      (BinaryOperator 0x9ae6e10 <col:12, col:14> '<dependent type>' '<'
        (DeclRefExpr 0x9ae6de0 <col:12> 'T' lvalue ParmVar 0x9ae6c90 'a' 'T')
        (DeclRefExpr 0x9ae6df8 <col:14> 'T' lvalue ParmVar 0x9ae6cd0 'b' 'T'))
      (DeclRefExpr 0x9ae6e28 <col:16> 'T' lvalue ParmVar 0x9ae6c90 'a' 'T')
      (DeclRefExpr 0x9ae6e40 <col:18> 'T' lvalue ParmVar 0x9ae6cd0 'b' 'T'))))

;
int wcsfilecmp(const wchar_t *a, const wchar_t *b);
long long get_time();
extern "C" {
    typedef unsigned char cc_t;
    typedef unsigned int speed_t;
    typedef unsigned int tcflag_t;
    struct termios {
        struct termios;
        tcflag_t c_iflag;
        tcflag_t c_oflag;
        tcflag_t c_cflag;
        tcflag_t c_lflag;
        cc_t c_line;
        cc_t c_cc[32];
        speed_t c_ispeed;
        speed_t c_ospeed;
    };
    extern speed_t cfgetospeed(const struct termios *__termios_p) throw();
    extern speed_t cfgetispeed(const struct termios *__termios_p) throw();
    extern int cfsetospeed(struct termios *__termios_p, speed_t __speed) throw();
    extern int cfsetispeed(struct termios *__termios_p, speed_t __speed) throw();
    extern int cfsetspeed(struct termios *__termios_p, speed_t __speed) throw();
    extern int tcgetattr(int __fd, struct termios *__termios_p) throw();
    extern int tcsetattr(int __fd, int __optional_actions, const struct termios *__termios_p) throw();
    extern void cfmakeraw(struct termios *__termios_p) throw();
    extern int tcsendbreak(int __fd, int __duration) throw();
    extern int tcdrain(int __fd);
    extern int tcflush(int __fd, int __queue_selector) throw();
    extern int tcflow(int __fd, int __action) throw();
    extern __pid_t tcgetsid(int __fd) throw();
}
namespace std {
    typedef unsigned int size_t;
    typedef int ptrdiff_t;
}
namespace std {
    template <typename _Alloc = std::basic_string<wchar_t>> class allocator
template <typename _Alloc = wchar_t> class allocator : public __gnu_cxx::new_allocator<wchar_t> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef wchar_t *pointer;
        typedef const wchar_t *const_pointer;
        typedef wchar_t &reference;
        typedef const wchar_t &const_reference;
        typedef wchar_t value_type;
        template <typename _Tp1 = wchar_t> struct rebind {
            struct rebind;
            typedef allocator<wchar_t> other;
        }
template <typename _Tp1 = char> struct rebind {
            struct rebind;
            typedef allocator<char> other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw() : __gnu_cxx::new_allocator<wchar_t>() (CompoundStmt 0x9bc64c8 </usr/include/c++/4.6/bits/allocator.h:107:27, col:29>)


        allocator(const std::allocator<wchar_t> &__a) throw() : __gnu_cxx::new_allocator<wchar_t>((ImplicitCastExpr 0x9fcba60 </usr/include/c++/4.6/bits/allocator.h:110:39> 'const class __gnu_cxx::new_allocator<wchar_t>' lvalue <DerivedToBase (new_allocator)>
  (DeclRefExpr 0x9fcb7b4 <col:39> 'const class std::allocator<wchar_t>' lvalue ParmVar 0x9bcd4d0 '__a' 'const class std::allocator<wchar_t> &'))
) (CompoundStmt 0x9bc65e0 </usr/include/c++/4.6/bits/allocator.h:110:44, col:46>)


        template <typename _Tp1 = wchar_t> allocator(const allocator<wchar_t> &) throw()template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw() (CompoundStmt 0x9bc6600 </usr/include/c++/4.6/bits/allocator.h:115:28, col:30>)


    }
template <typename _Alloc = std::basic_string<char>> class allocator
template <typename _Alloc = void> class allocator {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef void *pointer;
        typedef const void *const_pointer;
        typedef void value_type;
        template <typename _Tp1> struct rebind {
            struct rebind;
            typedef allocator<_Tp1> other;
        };
    }
template <typename _Alloc = char> class allocator : public __gnu_cxx::new_allocator<char> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef char *pointer;
        typedef const char *const_pointer;
        typedef char &reference;
        typedef const char &const_reference;
        typedef char value_type;
        template <typename _Tp1 = char> struct rebind {
            struct rebind;
            typedef allocator<char> other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw();
        allocator(const std::allocator<char> &__a) throw();
        template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw();
    }
template <typename _Alloc> class allocator;
    template <class _CharT = wchar_t> struct char_traits {
        struct char_traits;
        typedef wchar_t char_type;
        typedef wint_t int_type;
        typedef streamoff off_type;
        typedef wstreampos pos_type;
        typedef mbstate_t state_type;
        static void assign(char_type &__c1, const char_type &__c2) (CompoundStmt 0x9bb5508 </usr/include/c++/4.6/bits/char_traits.h:315:7, col:22>
  (BinaryOperator 0x9bb54f0 <col:9, col:16> 'char_type':'wchar_t' lvalue '='
    (DeclRefExpr 0x9bb54b0 <col:9> 'char_type':'wchar_t' lvalue ParmVar 0x9bb4150 '__c1' 'char_type &')
    (ImplicitCastExpr 0x9bb54e0 <col:16> 'char_type':'wchar_t' <LValueToRValue>
      (DeclRefExpr 0x9bb54c8 <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0x9bb41e0 '__c2' 'const char_type &'))))


        static bool eq(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x9bb5598 </usr/include/c++/4.6/bits/char_traits.h:319:7, col:30>
  (ReturnStmt 0x9bb5588 <col:9, col:24>
    (BinaryOperator 0x9bb5570 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x9bb5550 <col:16> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9bb551c <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0x9bb4300 '__c1' 'const char_type &'))
      (ImplicitCastExpr 0x9bb5560 <col:24> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9bb5534 <col:24> 'const char_type':'const wchar_t' lvalue ParmVar 0x9bb4350 '__c2' 'const char_type &')))))


        static bool lt(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x9bb5628 </usr/include/c++/4.6/bits/char_traits.h:323:7, col:29>
  (ReturnStmt 0x9bb5618 <col:9, col:23>
    (BinaryOperator 0x9bb5600 <col:16, col:23> '_Bool' '<'
      (ImplicitCastExpr 0x9bb55e0 <col:16> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9bb55ac <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0x9bb4470 '__c1' 'const char_type &'))
      (ImplicitCastExpr 0x9bb55f0 <col:23> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9bb55c4 <col:23> 'const char_type':'const wchar_t' lvalue ParmVar 0x9bb44c0 '__c2' 'const char_type &')))))


        static int compare(const char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9bb5790 </usr/include/c++/4.6/bits/char_traits.h:327:7, col:42>
  (ReturnStmt 0x9bb5780 <col:9, col:39>
    (CallExpr 0x9bb5728 <col:16, col:39> 'int'
      (ImplicitCastExpr 0x9bb5718 <col:16> 'int (*)(const wchar_t *, const wchar_t *, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9bb56bc <col:16> 'int (const wchar_t *, const wchar_t *, size_t) throw()' lvalue Function 0x9a3b7d0 'wmemcmp' 'int (const wchar_t *, const wchar_t *, size_t) throw()' (UsingShadow 0x9ba0a20 'wmemcmp')))
      (ImplicitCastExpr 0x9bb5750 <col:24> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9bb5674 <col:24> 'const char_type *' lvalue ParmVar 0x9bb45c0 '__s1' 'const char_type *'))
      (ImplicitCastExpr 0x9bb5760 <col:30> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9bb568c <col:30> 'const char_type *' lvalue ParmVar 0x9bb4610 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0x9bb5770 <col:36> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9bb56a4 <col:36> 'size_t':'unsigned int' lvalue ParmVar 0x9bb4650 '__n' 'size_t':'unsigned int')))))


        static size_t length(const char_type *__s) (CompoundStmt 0x9bb5898 </usr/include/c++/4.6/bits/char_traits.h:331:7, col:29>
  (ReturnStmt 0x9bb5888 <col:9, col:26>
    (CallExpr 0x9bb5858 <col:16, col:26> 'size_t':'unsigned int'
      (ImplicitCastExpr 0x9bb5848 <col:16> 'size_t (*)(const wchar_t *) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9bb57f4 <col:16> 'size_t (const wchar_t *) throw()' lvalue Function 0x9a3b110 'wcslen' 'size_t (const wchar_t *) throw()' (UsingShadow 0x9ba0470 'wcslen')))
      (ImplicitCastExpr 0x9bb5878 <col:23> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9bb57dc <col:23> 'const char_type *' lvalue ParmVar 0x9bb4760 '__s' 'const char_type *')))))


        static const char_type *find(const char_type *__s, size_t __n, const char_type &__a) (CompoundStmt 0x9bb59d8 </usr/include/c++/4.6/bits/char_traits.h:335:7, col:40>
  (ReturnStmt 0x9bb59c8 <col:9, col:37>
    (ImplicitCastExpr 0x9bb59b8 <col:16, col:37> 'const char_type *' <NoOp>
      (CallExpr 0x9bb5960 <col:16, col:37> 'wchar_t *'
        (ImplicitCastExpr 0x9bb5950 <col:16> 'wchar_t *(*)(const wchar_t *, wchar_t, size_t) throw()' <FunctionToPointerDecay>
          (DeclRefExpr 0x9bb5930 <col:16> 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' lvalue Function 0x9a3b620 'wmemchr' 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' (UsingShadow 0x9ba0e80 'wmemchr')))
        (ImplicitCastExpr 0x9bb5988 <col:24> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9bb58e8 <col:24> 'const char_type *' lvalue ParmVar 0x9bb4860 '__s' 'const char_type *'))
        (ImplicitCastExpr 0x9bb5998 <col:29> 'char_type':'wchar_t' <LValueToRValue>
          (DeclRefExpr 0x9bb5900 <col:29> 'const char_type':'const wchar_t' lvalue ParmVar 0x9bb48f0 '__a' 'const char_type &'))
        (ImplicitCastExpr 0x9bb59a8 <col:34> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9bb5918 <col:34> 'size_t':'unsigned int' lvalue ParmVar 0x9bb48a0 '__n' 'size_t':'unsigned int'))))))


        static char_type *move(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9bb5b40 </usr/include/c++/4.6/bits/char_traits.h:339:7, col:43>
  (ReturnStmt 0x9bb5b30 <col:9, col:40>
    (CallExpr 0x9bb5ad8 <col:16, col:40> 'wchar_t *'
      (ImplicitCastExpr 0x9bb5ac8 <col:16> 'wchar_t *(*)(wchar_t *, const wchar_t *, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9bb5a6c <col:16> 'wchar_t *(wchar_t *, const wchar_t *, size_t) throw()' lvalue Function 0x9a3bb50 'wmemmove' 'wchar_t *(wchar_t *, const wchar_t *, size_t) throw()' (UsingShadow 0x9ba0b00 'wmemmove')))
      (ImplicitCastExpr 0x9bb5b00 <col:25> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9bb5a24 <col:25> 'char_type *' lvalue ParmVar 0x9bb4a50 '__s1' 'char_type *'))
      (ImplicitCastExpr 0x9bb5b10 <col:31> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9bb5a3c <col:31> 'const char_type *' lvalue ParmVar 0x9bb4aa0 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0x9bb5b20 <col:37> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9bb5a54 <col:37> 'size_t':'unsigned int' lvalue ParmVar 0x9bb4ae0 '__n' 'size_t':'unsigned int')))))


        static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9bb5c80 </usr/include/c++/4.6/bits/char_traits.h:343:7, col:42>
  (ReturnStmt 0x9bb5c70 <col:9, col:39>
    (CallExpr 0x9bb5c18 <col:16, col:39> 'wchar_t *'
      (ImplicitCastExpr 0x9bb5c08 <col:16> 'wchar_t *(*)(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9bb5bd4 <col:16> 'wchar_t *(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' lvalue Function 0x9a3b980 'wmemcpy' 'wchar_t *(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' (UsingShadow 0x9ba0a90 'wmemcpy')))
      (ImplicitCastExpr 0x9bb5c40 <col:24> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9bb5b8c <col:24> 'char_type *' lvalue ParmVar 0x9bb4bf0 '__s1' 'char_type *'))
      (ImplicitCastExpr 0x9bb5c50 <col:30> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9bb5ba4 <col:30> 'const char_type *' lvalue ParmVar 0x9bb4c40 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0x9bb5c60 <col:36> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9bb5bbc <col:36> 'size_t':'unsigned int' lvalue ParmVar 0x9bb4c80 '__n' 'size_t':'unsigned int')))))


        static char_type *assign(char_type *__s, size_t __n, char_type __a) (CompoundStmt 0x9bb6e00 </usr/include/c++/4.6/bits/char_traits.h:347:7, col:40>
  (ReturnStmt 0x9bb6df0 <col:9, col:37>
    (CallExpr 0x9bb6d98 <col:16, col:37> 'wchar_t *'
      (ImplicitCastExpr 0x9bb6d88 <col:16> 'wchar_t *(*)(wchar_t *, wchar_t, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9bb6d2c <col:16> 'wchar_t *(wchar_t *, wchar_t, size_t) throw()' lvalue Function 0x9a3bd10 'wmemset' 'wchar_t *(wchar_t *, wchar_t, size_t) throw()' (UsingShadow 0x9ba0b70 'wmemset')))
      (ImplicitCastExpr 0x9bb6dc0 <col:24> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9bb6ce4 <col:24> 'char_type *' lvalue ParmVar 0x9bb4d60 '__s' 'char_type *'))
      (ImplicitCastExpr 0x9bb6dd0 <col:29> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9bb6cfc <col:29> 'char_type':'wchar_t' lvalue ParmVar 0x9bb4de0 '__a' 'char_type':'wchar_t'))
      (ImplicitCastExpr 0x9bb6de0 <col:34> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9bb6d14 <col:34> 'size_t':'unsigned int' lvalue ParmVar 0x9bb4da0 '__n' 'size_t':'unsigned int')))))


        static char_type to_char_type(const int_type &__c) (CompoundStmt 0x9bb6e80 </usr/include/c++/4.6/bits/char_traits.h:351:7, col:32>
  (ReturnStmt 0x9bb6e70 <col:9, col:29>
    (CXXFunctionalCastExpr 0x9bb6e58 <col:16, col:29> 'char_type':'wchar_t' functional cast to char_type <NoOp>
      (ImplicitCastExpr 0x9bb6e48 <col:26> 'char_type':'wchar_t' <IntegralCast>
        (ImplicitCastExpr 0x9bb6e38 <col:26> 'int_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9bb6e20 <col:26> 'const int_type':'const unsigned int' lvalue ParmVar 0x9bb4f50 '__c' 'const int_type &'))))))


        static int_type to_int_type(const char_type &__c) (CompoundStmt 0x9bb6f00 </usr/include/c++/4.6/bits/char_traits.h:355:7, col:31>
  (ReturnStmt 0x9bb6ef0 <col:9, col:28>
    (CXXFunctionalCastExpr 0x9bb6ed8 <col:16, col:28> 'int_type':'unsigned int' functional cast to int_type <NoOp>
      (ImplicitCastExpr 0x9bb6ec8 <col:25> 'int_type':'unsigned int' <IntegralCast>
        (ImplicitCastExpr 0x9bb6eb8 <col:25> 'char_type':'wchar_t' <LValueToRValue>
          (DeclRefExpr 0x9bb6ea0 <col:25> 'const char_type':'const wchar_t' lvalue ParmVar 0x9bb5070 '__c' 'const char_type &'))))))


        static bool eq_int_type(const int_type &__c1, const int_type &__c2) (CompoundStmt 0x9bb6f90 </usr/include/c++/4.6/bits/char_traits.h:359:7, col:30>
  (ReturnStmt 0x9bb6f80 <col:9, col:24>
    (BinaryOperator 0x9bb6f68 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x9bb6f48 <col:16> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9bb6f14 <col:16> 'const int_type':'const unsigned int' lvalue ParmVar 0x9bb5190 '__c1' 'const int_type &'))
      (ImplicitCastExpr 0x9bb6f58 <col:24> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9bb6f2c <col:24> 'const int_type':'const unsigned int' lvalue ParmVar 0x9bb51e0 '__c2' 'const int_type &')))))


        static int_type eof() (CompoundStmt 0x9bb7008 </usr/include/c++/4.6/bits/char_traits.h:363:7, col:45>
  (ReturnStmt 0x9bb6ff8 <col:9, col:42>
    (CXXStaticCastExpr 0x9bb6fe0 <col:16, col:42> 'int_type':'unsigned int' static_cast<int_type> <NoOp>
      (ParenExpr 0x9bb6fc0 </usr/include/wchar.h:119:15, col:27> 'unsigned int'
        (IntegerLiteral 0x9bb6fa8 <col:16> 'unsigned int' 4294967295)))))


        static int_type not_eof(const int_type &__c) (CompoundStmt 0x9bb71e0 </usr/include/c++/4.6/bits/char_traits.h:367:7, col:51>
  (ReturnStmt 0x9bb71d0 <col:9, col:46>
    (ConditionalOperator 0x9bb71b0 <col:16, col:46> 'unsigned int'
      (CallExpr 0x9bb7128 <col:16, col:38> '_Bool'
        (ImplicitCastExpr 0x9bb7118 <col:16> '_Bool (*)(const int_type &, const int_type &)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9bb701c <col:16> '_Bool (const int_type &, const int_type &)' lvalue CXXMethod 0x9bb5280 'eq_int_type' '_Bool (const int_type &, const int_type &)'))
        (DeclRefExpr 0x9bb7034 <col:28> 'const int_type':'const unsigned int' lvalue ParmVar 0x9bb5390 '__c' 'const int_type &')
        (MaterializeTemporaryExpr 0x9bb7150 <col:33, col:37> 'const int_type':'const unsigned int' lvalue
          (CallExpr 0x9bb70b8 <col:33, col:37> 'int_type':'unsigned int'
            (ImplicitCastExpr 0x9bb70a8 <col:33> 'int_type (*)(void)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9bb704c <col:33> 'int_type (void)' lvalue CXXMethod 0x9bb5320 'eof' 'int_type (void)')))))
      (ImplicitCastExpr 0x9bb71a0 <col:42> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0x9bb7160 <col:42> 'int' 0))
      (ImplicitCastExpr 0x9bb7190 <col:46> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9bb7178 <col:46> 'const int_type':'const unsigned int' lvalue ParmVar 0x9bb5390 '__c' 'const int_type &')))))


    }
template <class _CharT = char> struct char_traits {
        struct char_traits;
        typedef char char_type;
        typedef int int_type;
        typedef streampos pos_type;
        typedef streamoff off_type;
        typedef mbstate_t state_type;
        static void assign(char_type &__c1, const char_type &__c2) (CompoundStmt 0x9bb0678 </usr/include/c++/4.6/bits/char_traits.h:244:7, col:22>
  (BinaryOperator 0x9bb0660 <col:9, col:16> 'char_type':'char' lvalue '='
    (DeclRefExpr 0x9bb0620 <col:9> 'char_type':'char' lvalue ParmVar 0x9baec40 '__c1' 'char_type &')
    (ImplicitCastExpr 0x9bb0650 <col:16> 'char_type':'char' <LValueToRValue>
      (DeclRefExpr 0x9bb0638 <col:16> 'const char_type':'const char' lvalue ParmVar 0x9baecd0 '__c2' 'const char_type &'))))


        static bool eq(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x9bb0728 </usr/include/c++/4.6/bits/char_traits.h:248:7, col:30>
  (ReturnStmt 0x9bb0718 <col:9, col:24>
    (BinaryOperator 0x9bb0700 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x9bb06d0 <col:16> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9bb06c0 <col:16> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9bb068c <col:16> 'const char_type':'const char' lvalue ParmVar 0x9baedf0 '__c1' 'const char_type &')))
      (ImplicitCastExpr 0x9bb06f0 <col:24> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9bb06e0 <col:24> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9bb06a4 <col:24> 'const char_type':'const char' lvalue ParmVar 0x9baee40 '__c2' 'const char_type &'))))))


        static bool lt(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x9bb07d8 </usr/include/c++/4.6/bits/char_traits.h:252:7, col:29>
  (ReturnStmt 0x9bb07c8 <col:9, col:23>
    (BinaryOperator 0x9bb07b0 <col:16, col:23> '_Bool' '<'
      (ImplicitCastExpr 0x9bb0780 <col:16> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9bb0770 <col:16> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9bb073c <col:16> 'const char_type':'const char' lvalue ParmVar 0x9baf5c0 '__c1' 'const char_type &')))
      (ImplicitCastExpr 0x9bb07a0 <col:23> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9bb0790 <col:23> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9bb0754 <col:23> 'const char_type':'const char' lvalue ParmVar 0x9baf610 '__c2' 'const char_type &'))))))


        static int compare(const char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9bb0900 </usr/include/c++/4.6/bits/char_traits.h:256:7, col:51>
  (ReturnStmt 0x9bb08f0 <col:9, col:48>
    (CallExpr 0x9bb0878 <col:16, col:48> 'int'
      (ImplicitCastExpr 0x9bb0868 <col:16> 'int (*)(const void *, const void *, unsigned int)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9bb07ec <col:16> 'int (const void *, const void *, unsigned int)' lvalue Function 0x9b8b850 '__builtin_memcmp' 'int (const void *, const void *, unsigned int)'))
      (ImplicitCastExpr 0x9bb08b0 <col:33> 'const void *' <BitCast>
        (ImplicitCastExpr 0x9bb08a0 <col:33> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9bb0804 <col:33> 'const char_type *' lvalue ParmVar 0x9baf710 '__s1' 'const char_type *')))
      (ImplicitCastExpr 0x9bb08d0 <col:39> 'const void *' <BitCast>
        (ImplicitCastExpr 0x9bb08c0 <col:39> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9bb081c <col:39> 'const char_type *' lvalue ParmVar 0x9baf760 '__s2' 'const char_type *')))
      (ImplicitCastExpr 0x9bb08e0 <col:45> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9bb0834 <col:45> 'size_t':'unsigned int' lvalue ParmVar 0x9baf7a0 '__n' 'size_t':'unsigned int')))))


        static size_t length(const char_type *__s) (CompoundStmt 0x9bb0a98 </usr/include/c++/4.6/bits/char_traits.h:260:7, col:39>
  (ReturnStmt 0x9bb0a88 <col:9, col:36>
    (CallExpr 0x9bb0a58 <col:16, col:36> 'unsigned int'
      (ImplicitCastExpr 0x9bb0a48 <col:16> 'unsigned int (*)(const char *)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9bb09f4 <col:16> 'unsigned int (const char *)' lvalue Function 0x9bb0920 '__builtin_strlen' 'unsigned int (const char *)'))
      (ImplicitCastExpr 0x9bb0a78 <col:33> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9bb0a0c <col:33> 'const char_type *' lvalue ParmVar 0x9baf8b0 '__s' 'const char_type *')))))


        static const char_type *find(const char_type *__s, size_t __n, const char_type &__a) (CompoundStmt 0x9bb0d58 </usr/include/c++/4.6/bits/char_traits.h:264:7, col:80>
  (ReturnStmt 0x9bb0d48 <col:9, col:77>
    (CXXStaticCastExpr 0x9bb0d30 <col:16, col:77> 'const char_type *' static_cast<const char_type *> <BitCast>
      (CallExpr 0x9bb0ca8 <col:46, col:76> 'void *'
        (ImplicitCastExpr 0x9bb0c98 <col:46> 'void *(*)(const void *, int, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9bb0c14 <col:46> 'void *(const void *, int, unsigned int)' lvalue Function 0x9bb0ab0 '__builtin_memchr' 'void *(const void *, int, unsigned int)'))
        (ImplicitCastExpr 0x9bb0ce0 <col:63> 'const void *' <BitCast>
          (ImplicitCastExpr 0x9bb0cd0 <col:63> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x9bb0c2c <col:63> 'const char_type *' lvalue ParmVar 0x9baf9b0 '__s' 'const char_type *')))
        (ImplicitCastExpr 0x9bb0d00 <col:68> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9bb0cf0 <col:68> 'char_type':'char' <LValueToRValue>
            (DeclRefExpr 0x9bb0c44 <col:68> 'const char_type':'const char' lvalue ParmVar 0x9bafa40 '__a' 'const char_type &')))
        (ImplicitCastExpr 0x9bb0d10 <col:73> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9bb0c5c <col:73> 'size_t':'unsigned int' lvalue ParmVar 0x9baf9f0 '__n' 'size_t':'unsigned int'))))))


        static char_type *move(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9bb0ea8 </usr/include/c++/4.6/bits/char_traits.h:268:7, col:77>
  (ReturnStmt 0x9bb0e98 <col:9, col:74>
    (CXXStaticCastExpr 0x9bb0e80 <col:16, col:74> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0x9bb0df8 <col:40, col:73> 'void *'
        (ImplicitCastExpr 0x9bb0de8 <col:40> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9bb0d6c <col:40> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9b7be40 '__builtin_memmove' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0x9bb0e30 <col:58> 'void *' <BitCast>
          (ImplicitCastExpr 0x9bb0e20 <col:58> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x9bb0d84 <col:58> 'char_type *' lvalue ParmVar 0x9bafba0 '__s1' 'char_type *')))
        (ImplicitCastExpr 0x9bb0e50 <col:64> 'const void *' <BitCast>
          (ImplicitCastExpr 0x9bb0e40 <col:64> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x9bb0d9c <col:64> 'const char_type *' lvalue ParmVar 0x9bafbf0 '__s2' 'const char_type *')))
        (ImplicitCastExpr 0x9bb0e60 <col:70> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9bb0db4 <col:70> 'size_t':'unsigned int' lvalue ParmVar 0x9bafc30 '__n' 'size_t':'unsigned int'))))))


        static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9bb1148 </usr/include/c++/4.6/bits/char_traits.h:272:7, col:76>
  (ReturnStmt 0x9bb1138 <col:9, col:73>
    (CXXStaticCastExpr 0x9bb1120 <col:16, col:73> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0x9bb1098 <col:40, col:72> 'void *'
        (ImplicitCastExpr 0x9bb1088 <col:40> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9bb1024 <col:40> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9bb0ec0 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0x9bb10d0 <col:57> 'void *' <BitCast>
          (ImplicitCastExpr 0x9bb10c0 <col:57> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x9bb103c <col:57> 'char_type *' lvalue ParmVar 0x9bafd40 '__s1' 'char_type *')))
        (ImplicitCastExpr 0x9bb10f0 <col:63> 'const void *' <BitCast>
          (ImplicitCastExpr 0x9bb10e0 <col:63> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x9bb1054 <col:63> 'const char_type *' lvalue ParmVar 0x9bafd90 '__s2' 'const char_type *')))
        (ImplicitCastExpr 0x9bb1100 <col:69> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9bb106c <col:69> 'size_t':'unsigned int' lvalue ParmVar 0x9bafdd0 '__n' 'size_t':'unsigned int'))))))


        static char_type *assign(char_type *__s, size_t __n, char_type __a) (CompoundStmt 0x9bb1298 </usr/include/c++/4.6/bits/char_traits.h:276:7, col:74>
  (ReturnStmt 0x9bb1288 <col:9, col:71>
    (CXXStaticCastExpr 0x9bb1270 <col:16, col:71> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0x9bb11e8 <col:40, col:70> 'void *'
        (ImplicitCastExpr 0x9bb11d8 <col:40> 'void *(*)(void *, int, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9bb115c <col:40> 'void *(void *, int, unsigned int)' lvalue Function 0x9b87bd0 '__builtin_memset' 'void *(void *, int, unsigned int)'))
        (ImplicitCastExpr 0x9bb1220 <col:57> 'void *' <BitCast>
          (ImplicitCastExpr 0x9bb1210 <col:57> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x9bb1174 <col:57> 'char_type *' lvalue ParmVar 0x9bafeb0 '__s' 'char_type *')))
        (ImplicitCastExpr 0x9bb1240 <col:62> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9bb1230 <col:62> 'char_type':'char' <LValueToRValue>
            (DeclRefExpr 0x9bb118c <col:62> 'char_type':'char' lvalue ParmVar 0x9baff30 '__a' 'char_type':'char')))
        (ImplicitCastExpr 0x9bb1250 <col:67> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9bb11a4 <col:67> 'size_t':'unsigned int' lvalue ParmVar 0x9bafef0 '__n' 'size_t':'unsigned int'))))))


        static char_type to_char_type(const int_type &__c) (CompoundStmt 0x9bb1318 </usr/include/c++/4.6/bits/char_traits.h:280:7, col:45>
  (ReturnStmt 0x9bb1308 <col:9, col:42>
    (CXXStaticCastExpr 0x9bb12f0 <col:16, col:42> 'char_type':'char' static_cast<char_type> <NoOp>
      (ImplicitCastExpr 0x9bb12e0 <col:39> 'char_type':'char' <IntegralCast>
        (ImplicitCastExpr 0x9bb12d0 <col:39> 'int_type':'int' <LValueToRValue>
          (DeclRefExpr 0x9bb12ac <col:39> 'const int_type':'const int' lvalue ParmVar 0x9bb00c0 '__c' 'const int_type &'))))))


        static int_type to_int_type(const char_type &__c) (CompoundStmt 0x9bb13d0 </usr/include/c++/4.6/bits/char_traits.h:286:7, col:72>
  (ReturnStmt 0x9bb13c0 <col:9, col:69>
    (CXXStaticCastExpr 0x9bb13a8 <col:16, col:69> 'int_type':'int' static_cast<int_type> <NoOp>
      (ImplicitCastExpr 0x9bb1398 <col:38, col:68> 'int_type':'int' <IntegralCast>
        (CXXStaticCastExpr 0x9bb1378 <col:38, col:68> 'unsigned char' static_cast<unsigned char> <NoOp>
          (ImplicitCastExpr 0x9bb1368 <col:65> 'unsigned char' <IntegralCast>
            (ImplicitCastExpr 0x9bb1358 <col:65> 'char_type':'char' <LValueToRValue>
              (DeclRefExpr 0x9bb132c <col:65> 'const char_type':'const char' lvalue ParmVar 0x9bb01e0 '__c' 'const char_type &'))))))))


        static bool eq_int_type(const int_type &__c1, const int_type &__c2) (CompoundStmt 0x9bb1460 </usr/include/c++/4.6/bits/char_traits.h:290:7, col:30>
  (ReturnStmt 0x9bb1450 <col:9, col:24>
    (BinaryOperator 0x9bb1438 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x9bb1418 <col:16> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0x9bb13e4 <col:16> 'const int_type':'const int' lvalue ParmVar 0x9bb0300 '__c1' 'const int_type &'))
      (ImplicitCastExpr 0x9bb1428 <col:24> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0x9bb13fc <col:24> 'const int_type':'const int' lvalue ParmVar 0x9bb0350 '__c2' 'const int_type &')))))


        static int_type eof() (CompoundStmt 0x9bb14d8 </usr/include/c++/4.6/bits/char_traits.h:294:7, col:59>
  (ReturnStmt 0x9bb14c8 <col:9, col:56>
    (CXXStaticCastExpr 0x9bb14b0 <col:16, col:56> 'int_type':'int' static_cast<int_type> <NoOp>
      (UnaryOperator 0x9bb1490 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:1149:28, col:29> 'int' prefix '-'
        (IntegerLiteral 0x9bb1478 <col:29> 'int' 1)))))


        static int_type not_eof(const int_type &__c) (CompoundStmt 0x9bb3d98 </usr/include/c++/4.6/bits/char_traits.h:298:7, col:42>
  (ReturnStmt 0x9bb3d88 <col:9, col:37>
    (ConditionalOperator 0x9bb3d68 <col:16, col:37> 'int'
      (ParenExpr 0x9bb3d10 <col:16, col:29> '_Bool'
        (BinaryOperator 0x9bb3cf8 <col:17, col:28> '_Bool' '=='
          (ImplicitCastExpr 0x9bb3ce8 <col:17> 'int_type':'int' <LValueToRValue>
            (DeclRefExpr 0x9bb14ec <col:17> 'const int_type':'const int' lvalue ParmVar 0x9bb0500 '__c' 'const int_type &'))
          (CallExpr 0x9bb3cc8 <col:24, col:28> 'int_type':'int'
            (ImplicitCastExpr 0x9bb3cb8 <col:24> 'int_type (*)(void)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9bb1504 <col:24> 'int_type (void)' lvalue CXXMethod 0x9bb0490 'eof' 'int_type (void)')))))
      (IntegerLiteral 0x9bb3d28 <col:33> 'int' 0)
      (ImplicitCastExpr 0x9bb3d58 <col:37> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0x9bb3d40 <col:37> 'const int_type':'const int' lvalue ParmVar 0x9bb0500 '__c' 'const int_type &')))))


    }
template <class _CharT> struct char_traits;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> class basic_string {
        class basic_string;
        typedef typename allocator<wchar_t>::rebind<wchar_t>::other _CharT_alloc_type;
    public:
    public:
        typedef std::char_traits<wchar_t> traits_type;
        typedef typename char_traits<wchar_t>::char_type value_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename _CharT_alloc_type::size_type size_type;
        typedef typename _CharT_alloc_type::difference_type difference_type;
        typedef typename _CharT_alloc_type::reference reference;
        typedef typename _CharT_alloc_type::const_reference const_reference;
        typedef typename _CharT_alloc_type::pointer pointer;
        typedef typename _CharT_alloc_type::const_pointer const_pointer;
        typedef __gnu_cxx::__normal_iterator<pointer, basic_string<wchar_t> > iterator;
        typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string<wchar_t> > const_iterator;
        typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
        typedef std::reverse_iterator<iterator> reverse_iterator;
    private:
    private:
        struct _Rep_base {
            struct _Rep_base;
            size_type _M_length;
            size_type _M_capacity;
            _Atomic_word _M_refcount;
        };
        struct _Rep :  std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep_base {
            struct _Rep;
            typedef typename allocator<wchar_t>::rebind<char>::other _Raw_bytes_alloc;
            static const size_type _S_max_size;
            static const wchar_t _S_terminal;
            static size_type _S_empty_rep_storage[];
            static std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep &_S_empty_rep() (CompoundStmt 0x9fcb5c8 </usr/include/c++/4.6/bits/basic_string.h:176:9, line:182:2>
  (DeclStmt 0x9fcb428 <line:180:4, col:62>
    0x9fcb250 "void *__p =
      (CXXReinterpretCastExpr 0x9fcb410 <col:16, col:61> 'void *' reinterpret_cast<void *> <BitCast>
        (UnaryOperator 0x9fcb3f8 <col:40, col:41> 'size_type (*)[]' prefix '&'
          (DeclRefExpr 0x9fcb3a0 <col:41> 'size_type []' lvalue Var 0x9d3e120 '_S_empty_rep_storage' 'size_type []')))")
  (ReturnStmt 0x9fcb5b8 <line:181:4, col:39>
    (UnaryOperator 0x9fcb5a0 <col:11, col:39> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue prefix '*'
      (CXXReinterpretCastExpr 0x9fcb588 <col:12, col:39> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' reinterpret_cast<struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *> <BitCast>
        (ImplicitCastExpr 0x9fcb578 <col:36> 'void *' <LValueToRValue>
          (DeclRefExpr 0x9fcb55c <col:36> 'void *' lvalue Var 0x9fcb250 '__p' 'void *'))))))


            bool _M_is_leaked() const;
            bool _M_is_shared() const (CompoundStmt 0x9fcee50 </usr/include/c++/4.6/bits/basic_string.h:190:9, col:41>
  (ReturnStmt 0x9fcee40 <col:11, col:38>
    (BinaryOperator 0x9fcee28 <col:18, col:38> '_Bool' '>'
      (ImplicitCastExpr 0x9fcee18 <col:18, col:24> '_Atomic_word':'int' <LValueToRValue>
        (MemberExpr 0x9fcedf8 <col:18, col:24> 'const _Atomic_word':'const int' lvalue ->_M_refcount 0x9d3d880
          (ImplicitCastExpr 0x9fcede8 <col:18> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
            (CXXThisExpr 0x9fcedd8 <col:18> 'const struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this))))
      (IntegerLiteral 0x9ca09d0 <col:38> 'int' 0))))


            void _M_set_leaked();
            void _M_set_sharable() (CompoundStmt 0x9fcf6d0 </usr/include/c++/4.6/bits/basic_string.h:198:9, col:34>
  (BinaryOperator 0x9fcf6b8 <col:11, col:31> '_Atomic_word':'int' lvalue '='
    (MemberExpr 0x9fcf698 <col:11, col:17> '_Atomic_word':'int' lvalue ->_M_refcount 0x9d3d880
      (ImplicitCastExpr 0x9fcf688 <col:11> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
        (CXXThisExpr 0x9fcf678 <col:11> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this)))
    (IntegerLiteral 0x9ca0b68 <col:31> 'int' 0)))


            void _M_set_length_and_sharable(size_type __n) (CompoundStmt 0x9fcf660 </usr/include/c++/4.6/bits/basic_string.h:202:2, line:213:2>
  (IfStmt 0x9fcf640 <line:204:4, line:212:6>
    <<<NULL>>>
    (ImplicitCastExpr 0x9fcf0a0 <line:204:8, col:55> '_Bool' <IntegralToBoolean>
      (CallExpr 0x9fcf058 <col:8, col:55> 'long'
        (ImplicitCastExpr 0x9fcf048 <col:8> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9ca0d00 <col:8> 'long (long, long)' lvalue Function 0x9ca0bd0 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0x9fcf080 <col:25, col:47> 'long' <IntegralCast>
          (BinaryOperator 0x9fcf030 <col:25, col:47> '_Bool' '!='
            (CXXThisExpr 0x9fceeb0 <col:25> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this)
            (UnaryOperator 0x9fcf018 <col:33, col:47> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' prefix '&'
              (CallExpr 0x9fceff8 <col:34, col:47> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
                (ImplicitCastExpr 0x9fcefe8 <col:34> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(*)(void)' <FunctionToPointerDecay>
                  (DeclRefExpr 0x9fcefd0 <col:34> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(void)' lvalue CXXMethod 0x9d3e2a0 '_S_empty_rep' 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(void)'))))))
        (ImplicitCastExpr 0x9fcf090 <col:50> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0x9ca0de8 <col:50> '_Bool' false))))
    (CompoundStmt 0x9fcf620 <line:206:6, line:212:6>
      (CXXMemberCallExpr 0x9fcf0e0 <line:207:8, col:30> 'void'
        (MemberExpr 0x9fcf0c0 <col:8, col:14> '<bound member function type>' ->_M_set_sharable 0x9d3e460
          (CXXThisExpr 0x9fcf0b0 <col:8> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this)))
      (BinaryOperator 0x9fcf168 <line:208:8, col:26> 'size_type':'unsigned int' lvalue '='
        (MemberExpr 0x9fcf120 <col:8, col:14> 'size_type':'unsigned int' lvalue ->_M_length 0x9d3d700
          (ImplicitCastExpr 0x9fcf110 <col:8> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
            (CXXThisExpr 0x9fcf100 <col:8> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this)))
        (ImplicitCastExpr 0x9fcf158 <col:26> 'size_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9fcf140 <col:26> 'size_type':'unsigned int' lvalue ParmVar 0x9d3e5f0 '__n' 'size_type':'unsigned int')))
      (CallExpr 0x9fcf5f8 <line:209:8, col:64> 'void'
        (ImplicitCastExpr 0x9fcf5e8 <col:8, col:21> 'void (*)(char_type &, const char_type &)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9fcf5c8 <col:8, col:21> 'void (char_type &, const char_type &)' lvalue CXXMethod 0x9bb4280 'assign' 'void (char_type &, const char_type &)'))
        (ArraySubscriptExpr 0x9fcf488 <col:28, col:50> 'wchar_t':'wchar_t' lvalue
          (CXXMemberCallExpr 0x9fcf440 <col:28, col:45> 'wchar_t *'
            (MemberExpr 0x9fcf420 <col:28, col:34> '<bound member function type>' ->_M_refdata 0x9d3e700
              (CXXThisExpr 0x9fcf410 <col:28> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this)))
          (ImplicitCastExpr 0x9fcf478 <col:47> 'size_type':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0x9fcf45c <col:47> 'size_type':'unsigned int' lvalue ParmVar 0x9d3e5f0 '__n' 'size_type':'unsigned int')))
        (DeclRefExpr 0x9fcf5b0 <col:53> 'const wchar_t':'const wchar_t' lvalue Var 0x9d3df90 '_S_terminal' 'const wchar_t':'const wchar_t')))
    <<<NULL>>>))


            wchar_t *_M_refdata() throw() (CompoundStmt 0x9fcf780 </usr/include/c++/4.6/bits/basic_string.h:217:2, col:48>
  (ReturnStmt 0x9fcf770 <col:4, col:45>
    (CXXReinterpretCastExpr 0x9fcf758 <col:11, col:45> 'wchar_t *' reinterpret_cast<wchar_t *> <BitCast>
      (BinaryOperator 0x9fcf740 <col:37, col:44> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' '+'
        (CXXThisExpr 0x9fcf730 <col:37> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this)
        (IntegerLiteral 0x9ca10c0 <col:44> 'int' 1)))))


            wchar_t *_M_grab(const std::allocator<wchar_t> &__alloc1, const std::allocator<wchar_t> &__alloc2);
            static std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep *_S_create(size_type, size_type, const std::allocator<wchar_t> &);
            void _M_dispose(const std::allocator<wchar_t> &__a) (CompoundStmt 0x9fcb238 </usr/include/c++/4.6/bits/basic_string.h:232:2, line:246:2>
  (IfStmt 0x9fcb218 <line:234:4, line:245:6>
    <<<NULL>>>
    (ImplicitCastExpr 0x9fcaf40 <line:234:8, col:55> '_Bool' <IntegralToBoolean>
      (CallExpr 0x9fcaef8 <col:8, col:55> 'long'
        (ImplicitCastExpr 0x9fcaee8 <col:8> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9ca13bc <col:8> 'long (long, long)' lvalue Function 0x9ca0bd0 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0x9fcaf20 <col:25, col:47> 'long' <IntegralCast>
          (BinaryOperator 0x9fcaed0 <col:25, col:47> '_Bool' '!='
            (CXXThisExpr 0x9fcad30 <col:25> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this)
            (UnaryOperator 0x9fcaeb8 <col:33, col:47> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' prefix '&'
              (CallExpr 0x9fcae98 <col:34, col:47> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
                (ImplicitCastExpr 0x9fcae88 <col:34> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(*)(void)' <FunctionToPointerDecay>
                  (DeclRefExpr 0x9fcae50 <col:34> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(void)' lvalue CXXMethod 0x9d3e2a0 '_S_empty_rep' 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(void)'))))))
        (ImplicitCastExpr 0x9fcaf30 <col:50> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0x9ca14a8 <col:50> '_Bool' false))))
    (CompoundStmt 0x9fcb200 <line:236:6, line:245:6>
      (NullStmt 0x9ca14e0 <line:238:67>)
      (IfStmt 0x9fcb1e0 <line:239:8, line:244:3>
        <<<NULL>>>
        (BinaryOperator 0x9fcb038 <line:239:12, line:240:16> '_Bool' '<='
          (CallExpr 0x9fcb010 <line:239:12, line:240:11> '_Atomic_word':'int'
            (ImplicitCastExpr 0x9fcb000 <line:239:12, col:23> '_Atomic_word (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9ca1510 <col:12, col:23> '_Atomic_word (_Atomic_word *, int)' lvalue Function 0x9c7a230 '__exchange_and_add_dispatch' '_Atomic_word (_Atomic_word *, int)'))
            (UnaryOperator 0x9fcafe8 <col:51, col:58> '_Atomic_word *' prefix '&'
              (MemberExpr 0x9fcafc8 <col:52, col:58> '_Atomic_word':'int' lvalue ->_M_refcount 0x9d3d880
                (ImplicitCastExpr 0x9fcafb8 <col:52> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
                  (CXXThisExpr 0x9fcaf90 <col:52> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this))))
            (UnaryOperator 0x9ca15a8 <line:240:9, col:10> 'int' prefix '-'
              (IntegerLiteral 0x9ca1590 <col:10> 'int' 1)))
          (IntegerLiteral 0x9ca15e8 <col:16> 'int' 0))
        (CompoundStmt 0x9fcb1c8 <line:241:3, line:244:3>
          (NullStmt 0x9ca1668 <line:242:63>)
          (CXXMemberCallExpr 0x9fcb1a8 <line:243:5, col:19> 'void'
            (MemberExpr 0x9fcb170 <col:5> '<bound member function type>' ->_M_destroy 0x9d3ef50
              (CXXThisExpr 0x9fcb050 <col:5> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this))
            (DeclRefExpr 0x9fcb190 <col:16> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue ParmVar 0x9d3ee30 '__a' 'const class std::allocator<wchar_t> &')))
        <<<NULL>>>))
    <<<NULL>>>))


            void _M_destroy(const std::allocator<wchar_t> &) throw();
            wchar_t *_M_refcopy() throw();
            wchar_t *_M_clone(const std::allocator<wchar_t> &, size_type __res);
        };
        struct _Alloc_hider :  std::allocator<wchar_t> {
            struct _Alloc_hider;
            _Alloc_hider(wchar_t *__dat, const std::allocator<wchar_t> &__a) : std::allocator<wchar_t>((DeclRefExpr 0x9fd18a4 </usr/include/c++/4.6/bits/basic_string.h:269:11> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue ParmVar 0x9d1b550 '__a' 'const class std::allocator<wchar_t> &')
), _M_p((ImplicitCastExpr 0x9fd1a60 </usr/include/c++/4.6/bits/basic_string.h:269:22> 'wchar_t *' <LValueToRValue>
  (DeclRefExpr 0x9fd1938 <col:22> 'wchar_t *' lvalue ParmVar 0x9d1b4e0 '__dat' 'wchar_t *'))
) (CompoundStmt 0x9ca1ab0 </usr/include/c++/4.6/bits/basic_string.h:269:29, col:31>)


            wchar_t *_M_p;
            inline void ~_Alloc_hider() throw() (CompoundStmt 0x9fca490 </usr/include/c++/4.6/bits/basic_string.h:266:14>)


            inline _Alloc_hider(const std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Alloc_hider &) throw();
        };
    public:
    public:
        static const size_type npos = (CXXStaticCastExpr 0x9d1b238 </usr/include/c++/4.6/bits/basic_string.h:279:37, col:62> 'size_type':'unsigned int' static_cast<size_type> <NoOp>
  (ImplicitCastExpr 0x9d1b228 <col:60, col:61> 'size_type':'unsigned int' <IntegralCast>
    (UnaryOperator 0x9c7f970 <col:60, col:61> 'int' prefix '-'
      (IntegerLiteral 0x9c7f958 <col:61> 'int' 1))))
;
    private:
    private:
        mutable std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Alloc_hider _M_dataplus;
        wchar_t *_M_data() const (CompoundStmt 0x9fcacd0 </usr/include/c++/4.6/bits/basic_string.h:287:7, col:35>
  (ReturnStmt 0x9fcacc0 <col:9, col:29>
    (ImplicitCastExpr 0x9fcacb0 <col:17, col:29> 'wchar_t *' <LValueToRValue>
      (MemberExpr 0x9fcac90 <col:17, col:29> 'wchar_t *' lvalue ._M_p 0x9d1b7c0
        (MemberExpr 0x9fcac70 <col:17> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Alloc_hider' lvalue ->_M_dataplus 0x9d1b7f0
          (CXXThisExpr 0x9fcab50 <col:17> 'const class std::basic_string<wchar_t> *' this))))))


        wchar_t *_M_data(wchar_t *__p);
        std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep *_M_rep() const (CompoundStmt 0x9fcab38 </usr/include/c++/4.6/bits/basic_string.h:295:7, col:62>
  (ReturnStmt 0x9fcab28 <col:9, col:59>
    (UnaryOperator 0x9fcab10 <col:16, col:59> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' prefix '&'
      (ParenExpr 0x9fcaaf8 <col:17, col:59> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
        (ArraySubscriptExpr 0x9fcaae0 <col:18, col:58> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
          (ParenExpr 0x9fcaac8 <col:18, col:54> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
            (CXXReinterpretCastExpr 0x9fcaab0 <col:19, col:53> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' reinterpret_cast<struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *> <BitCast>
              (CXXMemberCallExpr 0x9fcaa90 <col:44, col:52> 'wchar_t *'
                (MemberExpr 0x9fcaa70 <col:44> '<bound member function type>' ->_M_data 0x9d1b8e0
                  (CXXThisExpr 0x9fcaa60 <col:44> 'const class std::basic_string<wchar_t> *' this)))))
          (UnaryOperator 0x9ca1d28 <col:56, col:57> 'int' prefix '-'
            (IntegerLiteral 0x9ca1d10 <col:57> 'int' 1)))))))


        iterator _M_ibegin() const;
        iterator _M_iend() const;
        void _M_leak();
        size_type _M_check(size_type __pos, const char *__s) const (CompoundStmt 0x9fd0920 </usr/include/c++/4.6/bits/basic_string.h:316:7, line:320:7>
  (IfStmt 0x9fd08c8 <line:317:2, line:318:33>
    <<<NULL>>>
    (BinaryOperator 0x9fd0840 <line:317:6, col:25> '_Bool' '>'
      (ImplicitCastExpr 0x9fd0830 <col:6> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9fd07c4 <col:6> 'size_type':'unsigned int' lvalue ParmVar 0x9d1c250 '__pos' 'size_type':'unsigned int'))
      (CXXMemberCallExpr 0x9fd0810 <col:14, col:25> 'size_type':'unsigned int'
        (MemberExpr 0x9fd07f0 <col:14, col:20> '<bound member function type>' ->size 0x9d24ab0
          (CXXThisExpr 0x9fd07e0 <col:14> 'const class std::basic_string<wchar_t> *' this))))
    (CallExpr 0x9fd0898 <line:318:4, col:33> 'void'
      (ImplicitCastExpr 0x9fd0888 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x9ca228c <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9b0bd90 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0x9fd08b8 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <LValueToRValue>
        (ParenExpr 0x9fd0870 <col:24, col:30> 'const char *' lvalue
          (DeclRefExpr 0x9fd0858 </usr/include/c++/4.6/bits/basic_string.h:318:29> 'const char *' lvalue ParmVar 0x9d1c290 '__s' 'const char *'))))
    <<<NULL>>>)
  (ReturnStmt 0x9fd0910 <line:319:2, col:9>
    (ImplicitCastExpr 0x9fd0900 <col:9> 'size_type':'unsigned int' <LValueToRValue>
      (DeclRefExpr 0x9fd08e4 <col:9> 'size_type':'unsigned int' lvalue ParmVar 0x9d1c250 '__pos' 'size_type':'unsigned int'))))


        void _M_check_length(size_type __n1, size_type __n2, const char *__s) const;
        size_type _M_limit(size_type __pos, size_type __off) const (CompoundStmt 0x9fd0c18 </usr/include/c++/4.6/bits/basic_string.h:332:7, line:335:7>
  (DeclStmt 0x9fd0ac0 <line:333:2, col:54>
    0x9fd0940 "const bool __testoff =
      (BinaryOperator 0x9fd0aa8 <col:26, col:49> '_Bool' '<'
        (ImplicitCastExpr 0x9fd0a98 <col:26> 'size_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9fd09b4 <col:26> 'size_type':'unsigned int' lvalue ParmVar 0x9d1cae0 '__off' 'size_type':'unsigned int'))
        (BinaryOperator 0x9fd0a80 <col:34, col:49> 'unsigned int' '-'
          (CXXMemberCallExpr 0x9fd0a38 <col:34, col:45> 'size_type':'unsigned int'
            (MemberExpr 0x9fd0a18 <col:34, col:40> '<bound member function type>' ->size 0x9d24ab0
              (CXXThisExpr 0x9fd0a08 <col:34> 'const class std::basic_string<wchar_t> *' this)))
          (ImplicitCastExpr 0x9fd0a70 <col:49> 'size_type':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0x9fd0a54 <col:49> 'size_type':'unsigned int' lvalue ParmVar 0x9d1c980 '__pos' 'size_type':'unsigned int'))))")
  (ReturnStmt 0x9fd0c08 <line:334:2, col:44>
    (ConditionalOperator 0x9fd0be8 <col:9, col:44> 'size_type':'unsigned int'
      (ImplicitCastExpr 0x9fd0bc8 <col:9> '_Bool' <LValueToRValue>
        (DeclRefExpr 0x9fd0ad0 <col:9> 'const _Bool' lvalue Var 0x9fd0940 '__testoff' 'const _Bool'))
      (ImplicitCastExpr 0x9fd0bd8 <col:21> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9fd0ae8 <col:21> 'size_type':'unsigned int' lvalue ParmVar 0x9d1cae0 '__off' 'size_type':'unsigned int'))
      (BinaryOperator 0x9fd0bb0 <col:29, col:44> 'unsigned int' '-'
        (CXXMemberCallExpr 0x9fd0b68 <col:29, col:40> 'size_type':'unsigned int'
          (MemberExpr 0x9fd0b48 <col:29, col:35> '<bound member function type>' ->size 0x9d24ab0
            (CXXThisExpr 0x9fd0b38 <col:29> 'const class std::basic_string<wchar_t> *' this)))
        (ImplicitCastExpr 0x9fd0ba0 <col:44> 'size_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9fd0b84 <col:44> 'size_type':'unsigned int' lvalue ParmVar 0x9d1c980 '__pos' 'size_type':'unsigned int'))))))


        bool _M_disjunct(const wchar_t *__s) const;
        static void _M_copy(wchar_t *__d, const wchar_t *__s, size_type __n);
        static void _M_move(wchar_t *__d, const wchar_t *__s, size_type __n);
        static void _M_assign(wchar_t *__d, size_type __n, wchar_t __c);
        template <class _Iterator> static void _S_copy_chars(wchar_t *__p, _Iterator __k1, _Iterator __k2);
        static void _S_copy_chars(wchar_t *__p, iterator __k1, iterator __k2);
        static void _S_copy_chars(wchar_t *__p, const_iterator __k1, const_iterator __k2);
        static void _S_copy_chars(wchar_t *__p, wchar_t *__k1, wchar_t *__k2);
        static void _S_copy_chars(wchar_t *__p, const wchar_t *__k1, const wchar_t *__k2);
        static int _S_compare(size_type __n1, size_type __n2);
        void _M_mutate(size_type __pos, size_type __len1, size_type __len2);
        void _M_leak_hard();
        static std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep &_S_empty_rep() (CompoundStmt 0x9fd1890 </usr/include/c++/4.6/bits/basic_string.h:421:7, col:38>
  (ReturnStmt 0x9fd1880 <col:9, col:35>
    (CallExpr 0x9fd1860 <col:16, col:35> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
      (ImplicitCastExpr 0x9fd1850 <col:16, col:22> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(*)(void)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9fd182c <col:16, col:22> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(void)' lvalue CXXMethod 0x9d3e2a0 '_S_empty_rep' 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(void)')))))


    public:
    public:
        basic_string() : _M_dataplus((CXXMemberCallExpr 0x9fd1368 </usr/include/c++/4.6/bits/basic_string.h:433:21, col:47> 'wchar_t *'
  (MemberExpr 0x9fd1344 <col:21, col:36> '<bound member function type>' ._M_refdata 0x9d3e700
    (CallExpr 0x9fd1328 <col:21, col:34> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
      (ImplicitCastExpr 0x9fd1318 <col:21> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(*)(void)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9fd1300 <col:21> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(void)' lvalue CXXMethod 0x9d1ee40 '_S_empty_rep' 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(void)')))))
, (MaterializeTemporaryExpr 0x9fd1688 </usr/include/c++/4.6/bits/basic_string.h:433:50, col:57> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue
  (ImplicitCastExpr 0x9fd1678 <col:50, col:57> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' <NoOp>
    (CXXBindTemporaryExpr 0x9fd13c8 <col:50, col:57> 'class std::allocator<wchar_t>':'class std::allocator<wchar_t>' (CXXTemporary 0x9fd13c0)
      (CXXTemporaryObjectExpr 0x9fd1390 <col:50, col:57> 'class std::allocator<wchar_t>':'class std::allocator<wchar_t>''void (void) throw()'))))
) (CompoundStmt 0x9ca6950 </usr/include/c++/4.6/bits/basic_string.h:433:60, col:62>)


        basic_string(const std::allocator<wchar_t> &__a);
        basic_string(const std::basic_string<wchar_t> &__str);
        basic_string(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n);
        basic_string(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n, const std::allocator<wchar_t> &__a);
        basic_string(const wchar_t *__s, size_type __n, const std::allocator<wchar_t> &__a);
        basic_string(const wchar_t *__s, const std::allocator<wchar_t> &__a);
        basic_string(size_type __n, wchar_t __c, const std::allocator<wchar_t> &__a);
        template <class _InputIterator> basic_string(_InputIterator __beg, _InputIterator __end, const std::allocator<wchar_t> &__a);
        void ~basic_string() (CompoundStmt 0x9fca3e0 </usr/include/c++/4.6/bits/basic_string.h:533:7, col:54>
  (ExprWithCleanups 0x9fca3c0 <col:9, col:51> 'void'
    (CXXTemporary 0x9fca340)
    (CXXMemberCallExpr 0x9fca358 <col:9, col:51> 'void'
      (MemberExpr 0x9fca2bc <col:9, col:19> '<bound member function type>' ->_M_dispose 0x9d3ee80
        (CXXMemberCallExpr 0x9fca290 <col:9, col:16> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
          (MemberExpr 0x9fca270 <col:9> '<bound member function type>' ->_M_rep 0x9d1bbd0
            (ImplicitCastExpr 0x9fca2b0 <col:9> 'const class std::basic_string<wchar_t> *' <NoOp>
              (CXXThisExpr 0x9fca150 <col:9> 'class std::basic_string<wchar_t> *' this)))))
      (MaterializeTemporaryExpr 0x9fca3b0 <col:30, col:50> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue
        (ImplicitCastExpr 0x9fca3a0 <col:30, col:50> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' <NoOp>
          (CXXBindTemporaryExpr 0x9fca348 <col:30, col:50> 'allocator_type':'class std::allocator<wchar_t>' (CXXTemporary 0x9fca340)
            (CXXMemberCallExpr 0x9fca310 <col:30, col:50> 'allocator_type':'class std::allocator<wchar_t>'
              (MemberExpr 0x9fca2f0 <col:30, col:36> '<bound member function type>' ->get_allocator 0x9d35660
                (ImplicitCastExpr 0x9fca330 <col:30> 'const class std::basic_string<wchar_t> *' <NoOp>
                  (CXXThisExpr 0x9fca2e0 <col:30> 'class std::basic_string<wchar_t> *' this))))))))))


        std::basic_string<wchar_t> &operator=(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &operator=(const wchar_t *__s);
        std::basic_string<wchar_t> &operator=(wchar_t __c);
        iterator begin();
        const_iterator begin() const;
        iterator end();
        const_iterator end() const;
        reverse_iterator rbegin();
        const_reverse_iterator rbegin() const;
        reverse_iterator rend();
        const_reverse_iterator rend() const;
    public:
    public:
        size_type size() const (CompoundStmt 0x9fccf10 </usr/include/c++/4.6/bits/basic_string.h:710:7, col:37>
  (ReturnStmt 0x9fccf00 <col:9, col:26>
    (ImplicitCastExpr 0x9fccef0 <col:16, col:26> 'size_type':'unsigned int' <LValueToRValue>
      (MemberExpr 0x9fcced0 <col:16, col:26> 'size_type':'unsigned int' lvalue ->_M_length 0x9d3d700
        (ImplicitCastExpr 0x9fccec0 <col:16, col:23> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
          (CXXMemberCallExpr 0x9fccea0 <col:16, col:23> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
            (MemberExpr 0x9fcce80 <col:16> '<bound member function type>' ->_M_rep 0x9d1bbd0
              (CXXThisExpr 0x9fccd60 <col:16> 'const class std::basic_string<wchar_t> *' this))))))))


        size_type length() const (CompoundStmt 0x9fd11d0 </usr/include/c++/4.6/bits/basic_string.h:716:7, col:37>
  (ReturnStmt 0x9fd11c0 <col:9, col:26>
    (ImplicitCastExpr 0x9fd11b0 <col:16, col:26> 'size_type':'unsigned int' <LValueToRValue>
      (MemberExpr 0x9fd1190 <col:16, col:26> 'size_type':'unsigned int' lvalue ->_M_length 0x9d3d700
        (ImplicitCastExpr 0x9fd1180 <col:16, col:23> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
          (CXXMemberCallExpr 0x9fd1160 <col:16, col:23> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
            (MemberExpr 0x9fd1140 <col:16> '<bound member function type>' ->_M_rep 0x9d1bbd0
              (CXXThisExpr 0x9fd1018 <col:16> 'const class std::basic_string<wchar_t> *' this))))))))


        size_type max_size() const;
        void resize(size_type __n, wchar_t __c);
        void resize(size_type __n);
        size_type capacity() const (CompoundStmt 0x9fced80 </usr/include/c++/4.6/bits/basic_string.h:768:7, col:39>
  (ReturnStmt 0x9fced70 <col:9, col:26>
    (ImplicitCastExpr 0x9fced60 <col:16, col:26> 'size_type':'unsigned int' <LValueToRValue>
      (MemberExpr 0x9fced40 <col:16, col:26> 'size_type':'unsigned int' lvalue ->_M_capacity 0x9d3d850
        (ImplicitCastExpr 0x9fced30 <col:16, col:23> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
          (CXXMemberCallExpr 0x9fced10 <col:16, col:23> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
            (MemberExpr 0x9fcecf0 <col:16> '<bound member function type>' ->_M_rep 0x9d1bbd0
              (CXXThisExpr 0x9fcebc8 <col:16> 'const class std::basic_string<wchar_t> *' this))))))))


        void reserve(size_type __res_arg);
        void clear();
        bool empty() const (CompoundStmt 0x9fccd48 </usr/include/c++/4.6/bits/basic_string.h:803:7, col:35>
  (ReturnStmt 0x9fccd38 <col:9, col:32>
    (BinaryOperator 0x9fccd20 <col:16, col:32> '_Bool' '=='
      (CXXMemberCallExpr 0x9fcccf0 <col:16, col:27> 'size_type':'unsigned int'
        (MemberExpr 0x9fcccd0 <col:16, col:22> '<bound member function type>' ->size 0x9d24ab0
          (CXXThisExpr 0x9fcccc0 <col:16> 'const class std::basic_string<wchar_t> *' this)))
      (ImplicitCastExpr 0x9fccd10 <col:32> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0x9ca7998 <col:32> 'int' 0)))))


        const_reference operator[](size_type __pos) const;
        reference operator[](size_type __pos);
        const_reference at(size_type __n) const (CompoundStmt 0x9fcd5b0 </usr/include/c++/4.6/bits/basic_string.h:856:7, line:860:7>
  (IfStmt 0x9fcd038 <line:857:2, line:858:48>
    <<<NULL>>>
    (BinaryOperator 0x9fccfe0 <line:857:6, col:24> '_Bool' '>='
      (ImplicitCastExpr 0x9fccfd0 <col:6> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9fccf64 <col:6> 'size_type':'unsigned int' lvalue ParmVar 0x9d26030 '__n' 'size_type':'unsigned int'))
      (CXXMemberCallExpr 0x9fccfb0 <col:13, col:24> 'size_type':'unsigned int'
        (MemberExpr 0x9fccf90 <col:13, col:19> '<bound member function type>' ->size 0x9d24ab0
          (CXXThisExpr 0x9fccf80 <col:13> 'const class std::basic_string<wchar_t> *' this))))
    (CallExpr 0x9fcd008 <line:858:4, col:48> 'void'
      (ImplicitCastExpr 0x9fccff8 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x9caae34 <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9b0bd90 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0x9fcd028 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0x9caae20 <col:24, col:30> 'const char [17]' lvalue
          (StringLiteral 0x9caadf0 </usr/include/c++/4.6/bits/basic_string.h:858:29> 'const char [17]' lvalue "basic_string::at"))))
    <<<NULL>>>)
  (ReturnStmt 0x9fcd5a0 <line:859:2, col:22>
    (ImplicitCastExpr 0x9fcd590 <col:9, col:22> 'const wchar_t':'const wchar_t' lvalue <NoOp>
      (ArraySubscriptExpr 0x9fcd578 <col:9, col:22> 'wchar_t':'wchar_t' lvalue
        (CXXMemberCallExpr 0x9fcd530 <col:9, col:17> 'wchar_t *'
          (MemberExpr 0x9fcd510 <col:9> '<bound member function type>' ->_M_data 0x9d1b8e0
            (CXXThisExpr 0x9fcd500 <col:9> 'const class std::basic_string<wchar_t> *' this)))
        (ImplicitCastExpr 0x9fcd568 <col:19> 'size_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9fcd54c <col:19> 'size_type':'unsigned int' lvalue ParmVar 0x9d26030 '__n' 'size_type':'unsigned int'))))))


        reference at(size_type __n);
        std::basic_string<wchar_t> &operator+=(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &operator+=(const wchar_t *__s);
        std::basic_string<wchar_t> &operator+=(wchar_t __c);
        std::basic_string<wchar_t> &append(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &append(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n);
        std::basic_string<wchar_t> &append(const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &append(const wchar_t *__s) (CompoundStmt 0x9fcfd10 </usr/include/c++/4.6/bits/basic_string.h:997:7, line:1000:7>
  (NullStmt 0x9cab478 <line:998:32>)
  (ReturnStmt 0x9fcfd00 <line:999:2, col:51>
    (CXXMemberCallExpr 0x9fcfcc8 <col:9, col:51> 'class std::basic_string<wchar_t>' lvalue
      (MemberExpr 0x9fcfca4 <col:9, col:15> '<bound member function type>' ->append 0x9d27710
        (CXXThisExpr 0x9fcf900 <col:9> 'class std::basic_string<wchar_t> *' this))
      (ImplicitCastExpr 0x9fcfcf0 <col:22> 'const wchar_t *' <LValueToRValue>
        (DeclRefExpr 0x9fcf960 <col:22> 'const wchar_t *' lvalue ParmVar 0x9d278a0 '__s' 'const wchar_t *'))
      (CallExpr 0x9fcfc38 <col:27, col:50> 'size_t':'unsigned int'
        (ImplicitCastExpr 0x9fcfc28 <col:27, col:40> 'size_t (*)(const char_type *)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9fcfbd0 <col:27, col:40> 'size_t (const char_type *)' lvalue CXXMethod 0x9bb47e0 'length' 'size_t (const char_type *)'))
        (ImplicitCastExpr 0x9fcfc58 <col:47> 'const wchar_t *' <LValueToRValue>
          (DeclRefExpr 0x9fcfbf0 <col:47> 'const wchar_t *' lvalue ParmVar 0x9d278a0 '__s' 'const wchar_t *'))))))


        std::basic_string<wchar_t> &append(size_type __n, wchar_t __c);
        template <class _InputIterator> std::basic_string<wchar_t> &append(_InputIterator __first, _InputIterator __last);
        void push_back(wchar_t __c) (CompoundStmt 0x9fceba8 </usr/include/c++/4.6/bits/basic_string.h:1043:7, line:1049:7>
  (DeclStmt 0x9fcdd18 <line:1044:2, col:42>
    0x9fcdc20 "const size_type __len =
      (BinaryOperator 0x9fcdd00 <col:26, col:41> 'unsigned int' '+'
        (ImplicitCastExpr 0x9fcdcf0 <col:26> 'unsigned int' <IntegralCast>
          (IntegerLiteral 0x9cab778 <col:26> 'int' 1))
        (CXXMemberCallExpr 0x9fcdcc0 <col:30, col:41> 'size_type':'unsigned int'
          (MemberExpr 0x9fcdca0 <col:30, col:36> '<bound member function type>' ->size 0x9d24ab0
            (ImplicitCastExpr 0x9fcdce0 <col:30> 'const class std::basic_string<wchar_t> *' <NoOp>
              (CXXThisExpr 0x9fcdc90 <col:30> 'class std::basic_string<wchar_t> *' this)))))")
  (IfStmt 0x9fce0a8 <line:1045:2, line:1046:23>
    <<<NULL>>>
    (BinaryOperator 0x9fcdfe8 <line:1045:6, col:57> '_Bool' '||'
      (BinaryOperator 0x9fcddf0 <col:6, col:29> '_Bool' '>'
        (ImplicitCastExpr 0x9fcdde0 <col:6> 'size_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9fcdd64 <col:6> 'const size_type':'const unsigned int' lvalue Var 0x9fcdc20 '__len' 'const size_type':'const unsigned int'))
        (CXXMemberCallExpr 0x9fcddb0 <col:14, col:29> 'size_type':'unsigned int'
          (MemberExpr 0x9fcdd90 <col:14, col:20> '<bound member function type>' ->capacity 0x9d25410
            (ImplicitCastExpr 0x9fcddd0 <col:14> 'const class std::basic_string<wchar_t> *' <NoOp>
              (CXXThisExpr 0x9fcdd80 <col:14> 'class std::basic_string<wchar_t> *' this)))))
      (CXXMemberCallExpr 0x9fcdfa0 <col:34, col:57> '_Bool'
        (MemberExpr 0x9fcdf7c <col:34, col:44> '<bound member function type>' ->_M_is_shared 0x9d3e380
          (ImplicitCastExpr 0x9fcdfd8 <col:34, col:41> 'const struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' <NoOp>
            (CXXMemberCallExpr 0x9fcdf50 <col:34, col:41> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
              (MemberExpr 0x9fcdf30 <col:34> '<bound member function type>' ->_M_rep 0x9d1bbd0
                (ImplicitCastExpr 0x9fcdf70 <col:34> 'const class std::basic_string<wchar_t> *' <NoOp>
                  (CXXThisExpr 0x9fcde08 <col:34> 'class std::basic_string<wchar_t> *' this))))))))
    (CXXMemberCallExpr 0x9fce078 <line:1046:4, col:23> 'void'
      (MemberExpr 0x9fce040 <col:4, col:10> '<bound member function type>' ->reserve 0x9d255f0
        (CXXThisExpr 0x9fce030 <col:4> 'class std::basic_string<wchar_t> *' this))
      (ImplicitCastExpr 0x9fce098 <col:18> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9fce060 <col:18> 'const size_type':'const unsigned int' lvalue Var 0x9fcdc20 '__len' 'const size_type':'const unsigned int')))
    <<<NULL>>>)
  (CallExpr 0x9fce978 <line:1047:2, col:50> 'void'
    (ImplicitCastExpr 0x9fce968 <col:2, col:15> 'void (*)(char_type &, const char_type &)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9fce90c <col:2, col:15> 'void (char_type &, const char_type &)' lvalue CXXMethod 0x9bb4280 'assign' 'void (char_type &, const char_type &)'))
    (ArraySubscriptExpr 0x9fce8e0 <col:22, col:44> 'wchar_t':'wchar_t' lvalue
      (CXXMemberCallExpr 0x9fce850 <col:22, col:30> 'wchar_t *'
        (MemberExpr 0x9fce830 <col:22> '<bound member function type>' ->_M_data 0x9d1b8e0
          (ImplicitCastExpr 0x9fce870 <col:22> 'const class std::basic_string<wchar_t> *' <NoOp>
            (CXXThisExpr 0x9fce820 <col:22> 'class std::basic_string<wchar_t> *' this))))
      (CXXMemberCallExpr 0x9fce8b0 <col:32, col:43> 'size_type':'unsigned int'
        (MemberExpr 0x9fce890 <col:32, col:38> '<bound member function type>' ->size 0x9d24ab0
          (ImplicitCastExpr 0x9fce8d0 <col:32> 'const class std::basic_string<wchar_t> *' <NoOp>
            (CXXThisExpr 0x9fce880 <col:32> 'class std::basic_string<wchar_t> *' this)))))
    (ImplicitCastExpr 0x9fce9a0 <col:47> 'const char_type':'const wchar_t' lvalue <NoOp>
      (DeclRefExpr 0x9fce8f4 <col:47> 'wchar_t':'wchar_t' lvalue ParmVar 0x9d28010 '__c' 'wchar_t':'wchar_t')))
  (CXXMemberCallExpr 0x9fceb78 <line:1048:2, col:44> 'void'
    (MemberExpr 0x9fceb3c <col:2, col:12> '<bound member function type>' ->_M_set_length_and_sharable 0x9d3e640
      (CXXMemberCallExpr 0x9fceb10 <col:2, col:9> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
        (MemberExpr 0x9fceaf0 <col:2> '<bound member function type>' ->_M_rep 0x9d1bbd0
          (ImplicitCastExpr 0x9fceb30 <col:2> 'const class std::basic_string<wchar_t> *' <NoOp>
            (CXXThisExpr 0x9fce9b0 <col:2> 'class std::basic_string<wchar_t> *' this)))))
    (ImplicitCastExpr 0x9fceb98 <col:39> 'size_type':'unsigned int' <LValueToRValue>
      (DeclRefExpr 0x9fceb5c <col:39> 'const size_type':'const unsigned int' lvalue Var 0x9fcdc20 '__len' 'const size_type':'const unsigned int'))))


        std::basic_string<wchar_t> &assign(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &assign(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n);
        std::basic_string<wchar_t> &assign(const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &assign(const wchar_t *__s);
        std::basic_string<wchar_t> &assign(size_type __n, wchar_t __c);
        template <class _InputIterator> std::basic_string<wchar_t> &assign(_InputIterator __first, _InputIterator __last);
        void insert(iterator __p, size_type __n, wchar_t __c);
        template <class _InputIterator> void insert(iterator __p, _InputIterator __beg, _InputIterator __end);
        std::basic_string<wchar_t> &insert(size_type __pos1, const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &insert(size_type __pos1, const std::basic_string<wchar_t> &__str, size_type __pos2, size_type __n);
        std::basic_string<wchar_t> &insert(size_type __pos, const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &insert(size_type __pos, const wchar_t *__s);
        std::basic_string<wchar_t> &insert(size_type __pos, size_type __n, wchar_t __c);
        iterator insert(iterator __p, wchar_t __c);
        std::basic_string<wchar_t> &erase(size_type __pos, size_type __n) (CompoundStmt 0x9fd0770 </usr/include/c++/4.6/bits/basic_string.h:1347:7, line:1351:7>
  (CXXMemberCallExpr 0x9fd0710 <line:1348:2, line:1349:39> 'void'
    (MemberExpr 0x9fd0230 <line:1348:2> '<bound member function type>' ->_M_mutate 0x9d1ebf0
      (CXXThisExpr 0x9fd0108 <col:2> 'class std::basic_string<wchar_t> *' this))
    (CXXMemberCallExpr 0x9fd03a8 <col:12, col:49> 'size_type':'unsigned int'
      (MemberExpr 0x9fd0370 <col:12> '<bound member function type>' ->_M_check 0x9d1c310
        (ImplicitCastExpr 0x9fd03d0 <col:12> 'const class std::basic_string<wchar_t> *' <NoOp>
          (CXXThisExpr 0x9fd0250 <col:12> 'class std::basic_string<wchar_t> *' this)))
      (ImplicitCastExpr 0x9fd03e0 <col:21> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9fd0390 <col:21> 'size_type':'unsigned int' lvalue ParmVar 0x9d2bca0 '__pos' 'size_type':'unsigned int'))
      (ImplicitCastExpr 0x9fd03f0 <col:28> 'const char *' <ArrayToPointerDecay>
        (StringLiteral 0x9cad1f8 <col:28> 'const char [20]' lvalue "basic_string::erase")))
    (CXXMemberCallExpr 0x9fd0570 <line:1349:5, col:24> 'size_type':'unsigned int'
      (MemberExpr 0x9fd0520 <col:5> '<bound member function type>' ->_M_limit 0x9d1cb60
        (ImplicitCastExpr 0x9fd0598 <col:5> 'const class std::basic_string<wchar_t> *' <NoOp>
          (CXXThisExpr 0x9fd0400 <col:5> 'class std::basic_string<wchar_t> *' this)))
      (ImplicitCastExpr 0x9fd05a8 <col:14> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9fd0540 <col:14> 'size_type':'unsigned int' lvalue ParmVar 0x9d2bca0 '__pos' 'size_type':'unsigned int'))
      (ImplicitCastExpr 0x9fd05b8 <col:21> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9fd0558 <col:21> 'size_type':'unsigned int' lvalue ParmVar 0x9d2be00 '__n' 'size_type':'unsigned int')))
    (CXXFunctionalCastExpr 0x9fd06f8 <col:27, col:38> 'size_type':'unsigned int' functional cast to size_type <NoOp>
      (ImplicitCastExpr 0x9fd06e8 <col:37> 'size_type':'unsigned int' <IntegralCast>
        (IntegerLiteral 0x9cad2e0 <col:37> 'int' 0))))
  (ReturnStmt 0x9fd0760 <line:1350:2, col:10>
    (UnaryOperator 0x9fd0748 <col:9, col:10> 'class std::basic_string<wchar_t>' lvalue prefix '*'
      (CXXThisExpr 0x9fd0738 <col:10> 'class std::basic_string<wchar_t> *' this))))


        iterator erase(iterator __position);
        iterator erase(iterator __first, iterator __last);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n, const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &replace(size_type __pos1, size_type __n1, const std::basic_string<wchar_t> &__str, size_type __pos2, size_type __n2);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n1, const wchar_t *__s, size_type __n2);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n1, const wchar_t *__s);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n1, size_type __n2, wchar_t __c);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const wchar_t *__s);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, size_type __n, wchar_t __c);
        template <class _InputIterator> std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, wchar_t *__k1, wchar_t *__k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const wchar_t *__k1, const wchar_t *__k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const_iterator __k1, const_iterator __k2);
    private:
    private:
        template <class _Integer> std::basic_string<wchar_t> &_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n, _Integer __val, std::__true_type);
        template <class _InputIterator> std::basic_string<wchar_t> &_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2, std::__false_type);
        std::basic_string<wchar_t> &_M_replace_aux(size_type __pos1, size_type __n1, size_type __n2, wchar_t __c);
        std::basic_string<wchar_t> &_M_replace_safe(size_type __pos1, size_type __n1, const wchar_t *__s, size_type __n2);
        template <class _InIterator> static wchar_t *_S_construct_aux(_InIterator __beg, _InIterator __end, const std::allocator<wchar_t> &__a, std::__false_type);
        template <class _Integer> static wchar_t *_S_construct_aux(_Integer __beg, _Integer __end, const std::allocator<wchar_t> &__a, std::__true_type);
        static wchar_t *_S_construct_aux_2(size_type __req, wchar_t __c, const std::allocator<wchar_t> &__a);
        template <class _InIterator> static wchar_t *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<wchar_t> &__a);
        template <class _InIterator> static wchar_t *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<wchar_t> &__a, std::input_iterator_tag);
        template <class _FwdIterator> static wchar_t *_S_construct(_FwdIterator __beg, _FwdIterator __end, const std::allocator<wchar_t> &__a, std::forward_iterator_tag);
        static wchar_t *_S_construct(size_type __req, wchar_t __c, const std::allocator<wchar_t> &__a);
    public:
    public:
        size_type copy(wchar_t *__s, size_type __n, size_type __pos) const;
        void swap(std::basic_string<wchar_t> &__s);
        const wchar_t *c_str() const (CompoundStmt 0x9fcdae0 </usr/include/c++/4.6/bits/basic_string.h:1766:7, col:27>
  (ReturnStmt 0x9fcdad0 <col:9, col:24>
    (ImplicitCastExpr 0x9fcdac0 <col:16, col:24> 'const wchar_t *' <NoOp>
      (CXXMemberCallExpr 0x9fcdaa0 <col:16, col:24> 'wchar_t *'
        (MemberExpr 0x9fcda80 <col:16> '<bound member function type>' ->_M_data 0x9d1b8e0
          (CXXThisExpr 0x9fcda70 <col:16> 'const class std::basic_string<wchar_t> *' this))))))


        const wchar_t *data() const;
        allocator_type get_allocator() const (CompoundStmt 0x9fcb7a0 </usr/include/c++/4.6/bits/basic_string.h:1783:7, col:29>
  (ReturnStmt 0x9fcb790 <col:9, col:16>
    (CXXConstructExpr 0x9fcb768 <col:16> 'allocator_type':'class std::allocator<wchar_t>''void (const class std::allocator<wchar_t> &) throw()'
      (ImplicitCastExpr 0x9fcb758 <col:16> 'const class std::allocator<wchar_t>' lvalue <NoOp>
        (ImplicitCastExpr 0x9fcb748 <col:16> 'class std::allocator<wchar_t>' lvalue <DerivedToBase (allocator)>
          (MemberExpr 0x9fcb700 <col:16> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Alloc_hider' lvalue ->_M_dataplus 0x9d1b7f0
            (CXXThisExpr 0x9fcb5e0 <col:16> 'const class std::basic_string<wchar_t> *' this)))))))


        size_type find(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find(const wchar_t *__s, size_type __pos) const;
        size_type find(wchar_t __c, size_type __pos) const;
        size_type rfind(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type rfind(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type rfind(const wchar_t *__s, size_type __pos) const;
        size_type rfind(wchar_t __c, size_type __pos) const;
        size_type find_first_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_first_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_first_of(const wchar_t *__s, size_type __pos) const;
        size_type find_first_of(wchar_t __c, size_type __pos) const;
        size_type find_last_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_last_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_last_of(const wchar_t *__s, size_type __pos) const;
        size_type find_last_of(wchar_t __c, size_type __pos) const;
        size_type find_first_not_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_first_not_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_first_not_of(const wchar_t *__s, size_type __pos) const (CompoundStmt 0x9fd00f0 </usr/include/c++/4.6/bits/basic_string.h:2064:7, line:2067:7>
  (NullStmt 0x9cb32e0 <line:2065:32>)
  (ReturnStmt 0x9fd00e0 <line:2066:2, col:69>
    (CXXMemberCallExpr 0x9fd0098 <col:9, col:69> 'size_type':'unsigned int'
      (MemberExpr 0x9fd0074 <col:9, col:15> '<bound member function type>' ->find_first_not_of 0x9d39fe0
        (CXXThisExpr 0x9fcfd28 <col:9> 'const class std::basic_string<wchar_t> *' this))
      (ImplicitCastExpr 0x9fd00c0 <col:33> 'const wchar_t *' <LValueToRValue>
        (DeclRefExpr 0x9fcfd80 <col:33> 'const wchar_t *' lvalue ParmVar 0x9d3a180 '__s' 'const wchar_t *'))
      (ImplicitCastExpr 0x9fd00d0 <col:38> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9fcfd98 <col:38> 'size_type':'unsigned int' lvalue ParmVar 0x9d3a2e0 '__pos' 'size_type':'unsigned int'))
      (CallExpr 0x9fd0048 <col:45, col:68> 'size_t':'unsigned int'
        (ImplicitCastExpr 0x9fd0038 <col:45, col:58> 'size_t (*)(const char_type *)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9fd0000 <col:45, col:58> 'size_t (const char_type *)' lvalue CXXMethod 0x9bb47e0 'length' 'size_t (const char_type *)'))
        (ImplicitCastExpr 0x9fd0068 <col:65> 'const wchar_t *' <LValueToRValue>
          (DeclRefExpr 0x9fd0020 <col:65> 'const wchar_t *' lvalue ParmVar 0x9d3a180 '__s' 'const wchar_t *'))))))


        size_type find_first_not_of(wchar_t __c, size_type __pos) const;
        size_type find_last_not_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_last_not_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_last_not_of(const wchar_t *__s, size_type __pos) const (CompoundStmt 0x9fd1000 </usr/include/c++/4.6/bits/basic_string.h:2123:7, line:2126:7>
  (NullStmt 0x9cb35d8 <line:2124:32>)
  (ReturnStmt 0x9fd0ff0 <line:2125:2, col:68>
    (CXXMemberCallExpr 0x9fd0fa8 <col:9, col:68> 'size_type':'unsigned int'
      (MemberExpr 0x9fd0f84 <col:9, col:15> '<bound member function type>' ->find_last_not_of 0x9d3afa0
        (CXXThisExpr 0x9fd0c30 <col:9> 'const class std::basic_string<wchar_t> *' this))
      (ImplicitCastExpr 0x9fd0fd0 <col:32> 'const wchar_t *' <LValueToRValue>
        (DeclRefExpr 0x9fd0c88 <col:32> 'const wchar_t *' lvalue ParmVar 0x9d3b140 '__s' 'const wchar_t *'))
      (ImplicitCastExpr 0x9fd0fe0 <col:37> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9fd0ca0 <col:37> 'size_type':'unsigned int' lvalue ParmVar 0x9d3b2a0 '__pos' 'size_type':'unsigned int'))
      (CallExpr 0x9fd0f58 <col:44, col:67> 'size_t':'unsigned int'
        (ImplicitCastExpr 0x9fd0f48 <col:44, col:57> 'size_t (*)(const char_type *)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9fd0f10 <col:44, col:57> 'size_t (const char_type *)' lvalue CXXMethod 0x9bb47e0 'length' 'size_t (const char_type *)'))
        (ImplicitCastExpr 0x9fd0f78 <col:64> 'const wchar_t *' <LValueToRValue>
          (DeclRefExpr 0x9fd0f30 <col:64> 'const wchar_t *' lvalue ParmVar 0x9d3b140 '__s' 'const wchar_t *'))))))


        size_type find_last_not_of(wchar_t __c, size_type __pos) const;
        std::basic_string<wchar_t> substr(size_type __pos, size_type __n) const;
        int compare(const std::basic_string<wchar_t> &__str) const;
        int compare(size_type __pos, size_type __n, const std::basic_string<wchar_t> &__str) const;
        int compare(size_type __pos1, size_type __n1, const std::basic_string<wchar_t> &__str, size_type __pos2, size_type __n2) const;
        int compare(const wchar_t *__s) const;
        int compare(size_type __pos, size_type __n1, const wchar_t *__s) const;
        int compare(size_type __pos, size_type __n1, const wchar_t *__s, size_type __n2) const;
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> class basic_string {
        class basic_string;
        typedef typename allocator<char>::rebind<char>::other _CharT_alloc_type;
    public:
    public:
        typedef std::char_traits<char> traits_type;
        typedef typename char_traits<char>::char_type value_type;
        typedef std::allocator<char> allocator_type;
        typedef typename _CharT_alloc_type::size_type size_type;
        typedef typename _CharT_alloc_type::difference_type difference_type;
        typedef typename _CharT_alloc_type::reference reference;
        typedef typename _CharT_alloc_type::const_reference const_reference;
        typedef typename _CharT_alloc_type::pointer pointer;
        typedef typename _CharT_alloc_type::const_pointer const_pointer;
        typedef __gnu_cxx::__normal_iterator<pointer, basic_string<char> > iterator;
        typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string<char> > const_iterator;
        typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
        typedef std::reverse_iterator<iterator> reverse_iterator;
    private:
    private:
        struct _Rep_base {
            struct _Rep_base;
            size_type _M_length;
            size_type _M_capacity;
            _Atomic_word _M_refcount;
        };
        struct _Rep :  std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep_base {
            struct _Rep;
            typedef typename allocator<char>::rebind<char>::other _Raw_bytes_alloc;
            static const size_type _S_max_size;
            static const char _S_terminal;
            static size_type _S_empty_rep_storage[];
            static std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep &_S_empty_rep();
            bool _M_is_leaked() const;
            bool _M_is_shared() const;
            void _M_set_leaked();
            void _M_set_sharable();
            void _M_set_length_and_sharable(size_type __n);
            char *_M_refdata() throw();
            char *_M_grab(const std::allocator<char> &__alloc1, const std::allocator<char> &__alloc2);
            static std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep *_S_create(size_type, size_type, const std::allocator<char> &);
            void _M_dispose(const std::allocator<char> &__a);
            void _M_destroy(const std::allocator<char> &) throw();
            char *_M_refcopy() throw();
            char *_M_clone(const std::allocator<char> &, size_type __res);
        };
        struct _Alloc_hider :  std::allocator<char> {
            struct _Alloc_hider;
            _Alloc_hider(char *__dat, const std::allocator<char> &__a);
            char *_M_p;
        };
    public:
    public:
        static const size_type npos = (CXXStaticCastExpr 0x9cf5cc8 </usr/include/c++/4.6/bits/basic_string.h:279:37, col:62> 'size_type':'unsigned int' static_cast<size_type> <NoOp>
  (ImplicitCastExpr 0x9cf5cb8 <col:60, col:61> 'size_type':'unsigned int' <IntegralCast>
    (UnaryOperator 0x9c7f970 <col:60, col:61> 'int' prefix '-'
      (IntegerLiteral 0x9c7f958 <col:61> 'int' 1))))
;
    private:
    private:
        mutable std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider _M_dataplus;
        char *_M_data() const (CompoundStmt 0x9fcc5c0 </usr/include/c++/4.6/bits/basic_string.h:287:7, col:35>
  (ReturnStmt 0x9fcc5b0 <col:9, col:29>
    (ImplicitCastExpr 0x9fcc5a0 <col:17, col:29> 'char *' <LValueToRValue>
      (MemberExpr 0x9fcc580 <col:17, col:29> 'char *' lvalue ._M_p 0x9cf6250
        (MemberExpr 0x9fcc560 <col:17> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Alloc_hider' lvalue ->_M_dataplus 0x9cf6280
          (CXXThisExpr 0x9fcc440 <col:17> 'const class std::basic_string<char> *' this))))))


        char *_M_data(char *__p);
        std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep *_M_rep() const (CompoundStmt 0x9fcc428 </usr/include/c++/4.6/bits/basic_string.h:295:7, col:62>
  (ReturnStmt 0x9fcc418 <col:9, col:59>
    (UnaryOperator 0x9fcc400 <col:16, col:59> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *' prefix '&'
      (ParenExpr 0x9fcc3e8 <col:17, col:59> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep' lvalue
        (ArraySubscriptExpr 0x9fcc3d0 <col:18, col:58> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep' lvalue
          (ParenExpr 0x9fcc3b8 <col:18, col:54> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *'
            (CXXReinterpretCastExpr 0x9fcc3a0 <col:19, col:53> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *' reinterpret_cast<struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *> <BitCast>
              (CXXMemberCallExpr 0x9fcc380 <col:44, col:52> 'char *'
                (MemberExpr 0x9fcc360 <col:44> '<bound member function type>' ->_M_data 0x9cf6300
                  (CXXThisExpr 0x9fcc350 <col:44> 'const class std::basic_string<char> *' this)))))
          (UnaryOperator 0x9ca1d28 <col:56, col:57> 'int' prefix '-'
            (IntegerLiteral 0x9ca1d10 <col:57> 'int' 1)))))))


        iterator _M_ibegin() const;
        iterator _M_iend() const;
        void _M_leak();
        size_type _M_check(size_type __pos, const char *__s) const;
        void _M_check_length(size_type __n1, size_type __n2, const char *__s) const;
        size_type _M_limit(size_type __pos, size_type __off) const;
        bool _M_disjunct(const char *__s) const;
        static void _M_copy(char *__d, const char *__s, size_type __n);
        static void _M_move(char *__d, const char *__s, size_type __n);
        static void _M_assign(char *__d, size_type __n, char __c);
        template <class _Iterator> static void _S_copy_chars(char *__p, _Iterator __k1, _Iterator __k2);
        static void _S_copy_chars(char *__p, iterator __k1, iterator __k2);
        static void _S_copy_chars(char *__p, const_iterator __k1, const_iterator __k2);
        static void _S_copy_chars(char *__p, char *__k1, char *__k2);
        static void _S_copy_chars(char *__p, const char *__k1, const char *__k2);
        static int _S_compare(size_type __n1, size_type __n2);
        void _M_mutate(size_type __pos, size_type __len1, size_type __len2);
        void _M_leak_hard();
        static std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep &_S_empty_rep();
    public:
    public:
        basic_string();
        basic_string(const std::allocator<char> &__a);
        basic_string(const std::basic_string<char> &__str);
        basic_string(const std::basic_string<char> &__str, size_type __pos, size_type __n);
        basic_string(const std::basic_string<char> &__str, size_type __pos, size_type __n, const std::allocator<char> &__a);
        basic_string(const char *__s, size_type __n, const std::allocator<char> &__a);
        basic_string(const char *__s, const std::allocator<char> &__a);
        basic_string(size_type __n, char __c, const std::allocator<char> &__a);
        template <class _InputIterator> basic_string(_InputIterator __beg, _InputIterator __end, const std::allocator<char> &__a);
        void ~basic_string();
        std::basic_string<char> &operator=(const std::basic_string<char> &__str);
        std::basic_string<char> &operator=(const char *__s);
        std::basic_string<char> &operator=(char __c);
        iterator begin();
        const_iterator begin() const;
        iterator end();
        const_iterator end() const;
        reverse_iterator rbegin();
        const_reverse_iterator rbegin() const;
        reverse_iterator rend();
        const_reverse_iterator rend() const;
    public:
    public:
        size_type size() const (CompoundStmt 0x9fcbd78 </usr/include/c++/4.6/bits/basic_string.h:710:7, col:37>
  (ReturnStmt 0x9fcbd68 <col:9, col:26>
    (ImplicitCastExpr 0x9fcbd58 <col:16, col:26> 'size_type':'unsigned int' <LValueToRValue>
      (MemberExpr 0x9fcbd38 <col:16, col:26> 'size_type':'unsigned int' lvalue ->_M_length 0x9d161b0
        (ImplicitCastExpr 0x9fcbd28 <col:16, col:23> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
          (CXXMemberCallExpr 0x9fcbcf0 <col:16, col:23> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *'
            (MemberExpr 0x9fcbcd0 <col:16> '<bound member function type>' ->_M_rep 0x9cf65d0
              (CXXThisExpr 0x9fcbba8 <col:16> 'const class std::basic_string<char> *' this))))))))


        size_type length() const;
        size_type max_size() const;
        void resize(size_type __n, char __c);
        void resize(size_type __n);
        size_type capacity() const;
        void reserve(size_type __res_arg);
        void clear();
        bool empty() const (CompoundStmt 0x9fcbb90 </usr/include/c++/4.6/bits/basic_string.h:803:7, col:35>
  (ReturnStmt 0x9fcbb80 <col:9, col:32>
    (BinaryOperator 0x9fcbb68 <col:16, col:32> '_Bool' '=='
      (CXXMemberCallExpr 0x9fcbb38 <col:16, col:27> 'size_type':'unsigned int'
        (MemberExpr 0x9fcbb18 <col:16, col:22> '<bound member function type>' ->size 0x9cfd570
          (CXXThisExpr 0x9fcbb08 <col:16> 'const class std::basic_string<char> *' this)))
      (ImplicitCastExpr 0x9fcbb58 <col:32> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0x9ca7998 <col:32> 'int' 0)))))


        const_reference operator[](size_type __pos) const;
        reference operator[](size_type __pos);
        const_reference at(size_type __n) const (CompoundStmt 0x9fccc60 </usr/include/c++/4.6/bits/basic_string.h:856:7, line:860:7>
  (IfStmt 0x9fcc6e8 <line:857:2, line:858:48>
    <<<NULL>>>
    (BinaryOperator 0x9fcc690 <line:857:6, col:24> '_Bool' '>='
      (ImplicitCastExpr 0x9fcc680 <col:6> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9fcc614 <col:6> 'size_type':'unsigned int' lvalue ParmVar 0x9cfead0 '__n' 'size_type':'unsigned int'))
      (CXXMemberCallExpr 0x9fcc660 <col:13, col:24> 'size_type':'unsigned int'
        (MemberExpr 0x9fcc640 <col:13, col:19> '<bound member function type>' ->size 0x9cfd570
          (CXXThisExpr 0x9fcc630 <col:13> 'const class std::basic_string<char> *' this))))
    (CallExpr 0x9fcc6b8 <line:858:4, col:48> 'void'
      (ImplicitCastExpr 0x9fcc6a8 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x9caae34 <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9b0bd90 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0x9fcc6d8 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0x9caae20 <col:24, col:30> 'const char [17]' lvalue
          (StringLiteral 0x9caadf0 </usr/include/c++/4.6/bits/basic_string.h:858:29> 'const char [17]' lvalue "basic_string::at"))))
    <<<NULL>>>)
  (ReturnStmt 0x9fccc50 <line:859:2, col:22>
    (ImplicitCastExpr 0x9fccc40 <col:9, col:22> 'const char':'const char' lvalue <NoOp>
      (ArraySubscriptExpr 0x9fccc28 <col:9, col:22> 'char':'char' lvalue
        (CXXMemberCallExpr 0x9fccbe0 <col:9, col:17> 'char *'
          (MemberExpr 0x9fccbc0 <col:9> '<bound member function type>' ->_M_data 0x9cf6300
            (CXXThisExpr 0x9fccbb0 <col:9> 'const class std::basic_string<char> *' this)))
        (ImplicitCastExpr 0x9fccc18 <col:19> 'size_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9fccbfc <col:19> 'size_type':'unsigned int' lvalue ParmVar 0x9cfead0 '__n' 'size_type':'unsigned int'))))))


        reference at(size_type __n);
        std::basic_string<char> &operator+=(const std::basic_string<char> &__str);
        std::basic_string<char> &operator+=(const char *__s);
        std::basic_string<char> &operator+=(char __c);
        std::basic_string<char> &append(const std::basic_string<char> &__str);
        std::basic_string<char> &append(const std::basic_string<char> &__str, size_type __pos, size_type __n);
        std::basic_string<char> &append(const char *__s, size_type __n);
        std::basic_string<char> &append(const char *__s);
        std::basic_string<char> &append(size_type __n, char __c);
        template <class _InputIterator> std::basic_string<char> &append(_InputIterator __first, _InputIterator __last);
        void push_back(char __c);
        std::basic_string<char> &assign(const std::basic_string<char> &__str);
        std::basic_string<char> &assign(const std::basic_string<char> &__str, size_type __pos, size_type __n);
        std::basic_string<char> &assign(const char *__s, size_type __n);
        std::basic_string<char> &assign(const char *__s);
        std::basic_string<char> &assign(size_type __n, char __c);
        template <class _InputIterator> std::basic_string<char> &assign(_InputIterator __first, _InputIterator __last);
        void insert(iterator __p, size_type __n, char __c);
        template <class _InputIterator> void insert(iterator __p, _InputIterator __beg, _InputIterator __end);
        std::basic_string<char> &insert(size_type __pos1, const std::basic_string<char> &__str);
        std::basic_string<char> &insert(size_type __pos1, const std::basic_string<char> &__str, size_type __pos2, size_type __n);
        std::basic_string<char> &insert(size_type __pos, const char *__s, size_type __n);
        std::basic_string<char> &insert(size_type __pos, const char *__s);
        std::basic_string<char> &insert(size_type __pos, size_type __n, char __c);
        iterator insert(iterator __p, char __c);
        std::basic_string<char> &erase(size_type __pos, size_type __n);
        iterator erase(iterator __position);
        iterator erase(iterator __first, iterator __last);
        std::basic_string<char> &replace(size_type __pos, size_type __n, const std::basic_string<char> &__str);
        std::basic_string<char> &replace(size_type __pos1, size_type __n1, const std::basic_string<char> &__str, size_type __pos2, size_type __n2);
        std::basic_string<char> &replace(size_type __pos, size_type __n1, const char *__s, size_type __n2);
        std::basic_string<char> &replace(size_type __pos, size_type __n1, const char *__s);
        std::basic_string<char> &replace(size_type __pos, size_type __n1, size_type __n2, char __c);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const std::basic_string<char> &__str);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const char *__s, size_type __n);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const char *__s);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, size_type __n, char __c);
        template <class _InputIterator> std::basic_string<char> &replace(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, char *__k1, char *__k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const char *__k1, const char *__k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const_iterator __k1, const_iterator __k2);
    private:
    private:
        template <class _Integer> std::basic_string<char> &_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n, _Integer __val, std::__true_type);
        template <class _InputIterator> std::basic_string<char> &_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2, std::__false_type);
        std::basic_string<char> &_M_replace_aux(size_type __pos1, size_type __n1, size_type __n2, char __c);
        std::basic_string<char> &_M_replace_safe(size_type __pos1, size_type __n1, const char *__s, size_type __n2);
        template <class _InIterator> static char *_S_construct_aux(_InIterator __beg, _InIterator __end, const std::allocator<char> &__a, std::__false_type);
        template <class _Integer> static char *_S_construct_aux(_Integer __beg, _Integer __end, const std::allocator<char> &__a, std::__true_type);
        static char *_S_construct_aux_2(size_type __req, char __c, const std::allocator<char> &__a);
        template <class _InIterator> static char *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<char> &__a);
        template <class _InIterator> static char *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<char> &__a, std::input_iterator_tag);
        template <class _FwdIterator> static char *_S_construct(_FwdIterator __beg, _FwdIterator __end, const std::allocator<char> &__a, std::forward_iterator_tag);
        static char *_S_construct(size_type __req, char __c, const std::allocator<char> &__a);
    public:
    public:
        size_type copy(char *__s, size_type __n, size_type __pos) const;
        void swap(std::basic_string<char> &__s);
        const char *c_str() const;
        const char *data() const;
        allocator_type get_allocator() const;
        size_type find(const char *__s, size_type __pos, size_type __n) const;
        size_type find(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find(const char *__s, size_type __pos) const;
        size_type find(char __c, size_type __pos) const;
        size_type rfind(const std::basic_string<char> &__str, size_type __pos) const;
        size_type rfind(const char *__s, size_type __pos, size_type __n) const;
        size_type rfind(const char *__s, size_type __pos) const;
        size_type rfind(char __c, size_type __pos) const;
        size_type find_first_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_first_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_first_of(const char *__s, size_type __pos) const;
        size_type find_first_of(char __c, size_type __pos) const;
        size_type find_last_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_last_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_last_of(const char *__s, size_type __pos) const;
        size_type find_last_of(char __c, size_type __pos) const;
        size_type find_first_not_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_first_not_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_first_not_of(const char *__s, size_type __pos) const;
        size_type find_first_not_of(char __c, size_type __pos) const;
        size_type find_last_not_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_last_not_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_last_not_of(const char *__s, size_type __pos) const;
        size_type find_last_not_of(char __c, size_type __pos) const;
        std::basic_string<char> substr(size_type __pos, size_type __n) const;
        int compare(const std::basic_string<char> &__str) const;
        int compare(size_type __pos, size_type __n, const std::basic_string<char> &__str) const;
        int compare(size_type __pos1, size_type __n1, const std::basic_string<char> &__str, size_type __pos2, size_type __n2) const;
        int compare(const char *__s) const;
        int compare(size_type __pos, size_type __n1, const char *__s) const;
        int compare(size_type __pos, size_type __n1, const char *__s, size_type __n2) const;
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>, typename _Alloc = allocator<_CharT>> class basic_string;
    struct char_traits;
    typedef basic_string<char> string;
    struct char_traits;
    typedef basic_string<wchar_t> wstring;
}
namespace std {
    void __throw_bad_exception();
    void __throw_bad_alloc();
    void __throw_bad_cast();
    void __throw_bad_typeid();
    void __throw_logic_error(const char *);
    void __throw_domain_error(const char *);
    void __throw_invalid_argument(const char *);
    void __throw_length_error(const char *);
    void __throw_out_of_range(const char *);
    void __throw_runtime_error(const char *);
    void __throw_range_error(const char *);
    void __throw_overflow_error(const char *);
    void __throw_underflow_error(const char *);
    void __throw_ios_failure(const char *);
    void __throw_system_error(int);
    void __throw_future_error(int);
    void __throw_bad_function_call();
}
namespace __gnu_cxx {
    template <typename _Iterator = char *, typename _Container = std::basic_string<char>> class __normal_iterator
template <typename _Iterator = const char *, typename _Container = std::basic_string<char>> class __normal_iterator
template <typename _Iterator = wchar_t *, typename _Container = std::basic_string<wchar_t>> class __normal_iterator {
        class __normal_iterator;
    protected:
    protected:
        wchar_t *_M_current;
        typedef iterator_traits<wchar_t *> __traits_type;
    public:
    public:
        typedef wchar_t *iterator_type;
        typedef typename __traits_type::iterator_category iterator_category;
        typedef typename __traits_type::value_type value_type;
        typedef typename __traits_type::difference_type difference_type;
        typedef typename __traits_type::reference reference;
        typedef typename __traits_type::pointer pointer;
        __normal_iterator();
        __normal_iterator(wchar_t *const &__i);
        template <typename _Iter> __normal_iterator(const __normal_iterator<_Iter, typename __enable_if<(std::__are_same<_Iter, typename basic_string<wchar_t>::pointer>::__value), basic_string<wchar_t> >::__type> &__i);
        reference operator*() const;
        pointer operator->() const;
        __gnu_cxx::__normal_iterator<wchar_t *, std::basic_string<wchar_t> > &operator++();
        __gnu_cxx::__normal_iterator<wchar_t *, std::basic_string<wchar_t> > operator++(int);
        __gnu_cxx::__normal_iterator<wchar_t *, std::basic_string<wchar_t> > &operator--();
        __gnu_cxx::__normal_iterator<wchar_t *, std::basic_string<wchar_t> > operator--(int);
        reference operator[](const difference_type &__n) const;
        __gnu_cxx::__normal_iterator<wchar_t *, std::basic_string<wchar_t> > &operator+=(const difference_type &__n);
        __gnu_cxx::__normal_iterator<wchar_t *, std::basic_string<wchar_t> > operator+(const difference_type &__n) const;
        __gnu_cxx::__normal_iterator<wchar_t *, std::basic_string<wchar_t> > &operator-=(const difference_type &__n);
        __gnu_cxx::__normal_iterator<wchar_t *, std::basic_string<wchar_t> > operator-(const difference_type &__n) const;
        wchar_t *const &base() const;
        inline __normal_iterator(const __gnu_cxx::__normal_iterator<wchar_t *, std::basic_string<wchar_t> > &) throw();
    }
template <typename _Iterator = const wchar_t *, typename _Container = std::basic_string<wchar_t>> class __normal_iterator
template <typename _Iterator, typename _Container> class __normal_iterator;
}
namespace std {
    struct __true_type {
        struct __true_type;
    };
    struct __false_type {
        struct __false_type;
    };
    template <bool = true> struct __truth_type {
        struct __truth_type;
        typedef std::__true_type __type;
    }
template <bool> struct __truth_type {
        struct __truth_type;
        typedef std::__false_type __type;
    };
    struct __truth_type {
        struct __truth_type;
        typedef std::__true_type __type;
    };
    template <class _Sp = std::__is_arithmetic<int>, class _Tp = std::__is_pointer<int>> struct __traitor {
        struct __traitor;
        enum  {
            __value = (ImplicitCastExpr 0x9fc9108 </usr/include/c++/4.6/bits/cpp_type_traits.h:98:24, col:63> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9fc90b8 <col:24, col:63> '_Bool' '||'
    (CXXFunctionalCastExpr 0x9fc8e70 <col:24, col:41> '_Bool' functional cast to _Bool <NoOp>
      (ImplicitCastExpr 0x9fc8e60 <col:29, col:34> '_Bool' <IntegralToBoolean>
        (DeclRefExpr 0x9fc8e40 <col:29, col:34> 'enum std::__traitor<struct std::__is_integer<int>, struct std::__is_floating<int> >::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:98:7>' EnumConstant 0x9fc8ba0 '__value' 'enum std::__traitor<struct std::__is_integer<int>, struct std::__is_floating<int> >::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:98:7>')))
    (CXXFunctionalCastExpr 0x9fc90a0 <col:46, col:63> '_Bool' functional cast to _Bool <NoOp>
      (ImplicitCastExpr 0x9fc9090 <col:51, col:56> '_Bool' <IntegralToBoolean>
        (DeclRefExpr 0x9fc906c <col:51, col:56> 'enum std::__is_pointer<int>::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:292:7>' EnumConstant 0x9fc8ff0 '__value' 'enum std::__is_pointer<int>::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:292:7>')))))

        };
        typedef typename __truth_type<__value>::__type __type;
    }
template <class _Sp = std::__is_integer<int>, class _Tp = std::__is_floating<int>> struct __traitor {
        struct __traitor;
        enum  {
            __value = (ImplicitCastExpr 0x9fc8bd8 </usr/include/c++/4.6/bits/cpp_type_traits.h:98:24, col:63> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9fc8b88 <col:24, col:63> '_Bool' '||'
    (CXXFunctionalCastExpr 0x9fc8948 <col:24, col:41> '_Bool' functional cast to _Bool <NoOp>
      (ImplicitCastExpr 0x9fc8938 <col:29, col:34> '_Bool' <IntegralToBoolean>
        (DeclRefExpr 0x9fc8914 <col:29, col:34> 'enum std::__is_integer<int>::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:215:7>' EnumConstant 0x9b1ae60 '__value' 'enum std::__is_integer<int>::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:215:7>')))
    (CXXFunctionalCastExpr 0x9fc8b70 <col:46, col:63> '_Bool' functional cast to _Bool <NoOp>
      (ImplicitCastExpr 0x9fc8b60 <col:51, col:56> '_Bool' <IntegralToBoolean>
        (DeclRefExpr 0x9fc8b3c <col:51, col:56> 'enum std::__is_floating<int>::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:260:7>' EnumConstant 0x9fc8ac0 '__value' 'enum std::__is_floating<int>::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:260:7>')))))

        };
        typedef typename __truth_type<__value>::__type __type;
    }
template <class _Sp, class _Tp> struct __traitor {
        struct __traitor;
        enum  {
            __value = (BinaryOperator 0x9b14cf0 </usr/include/c++/4.6/bits/cpp_type_traits.h:98:24, col:63> '_Bool' '||'
  (CXXUnresolvedConstructExpr 0x9b14c58 <col:24, col:41> '_Bool'
    (DependentScopeDeclRefExpr 0x9b14c30 <col:29, col:34> '<dependent type>' lvalue))
  (CXXUnresolvedConstructExpr 0x9b14cd0 <col:46, col:63> '_Bool'
    (DependentScopeDeclRefExpr 0x9b14ca8 <col:51, col:56> '<dependent type>' lvalue)))

        };
        typedef typename __truth_type<__value>::__type __type;
    };
    template <typename , typename > struct __are_same {
        struct __are_same;
        enum  {
            __value = (IntegerLiteral 0x9b15220 </usr/include/c++/4.6/bits/cpp_type_traits.h:106:24> 'int' 0)

        };
        typedef std::__false_type __type;
    };
    struct __are_same {
        struct __are_same;
        enum  {
            __value = (IntegerLiteral 0x9b156b0 </usr/include/c++/4.6/bits/cpp_type_traits.h:113:24> 'int' 1)

        };
        typedef std::__true_type __type;
    };
    template <typename _Tp = void> struct __is_void {
        struct __is_void;
        enum  {
            __value = (ImplicitCastExpr 0x9b179a8 </usr/include/c++/4.6/bits/cpp_type_traits.h:128:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b17950 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp> struct __is_void {
        struct __is_void;
        enum  {
            __value = (IntegerLiteral 0x9b17650 </usr/include/c++/4.6/bits/cpp_type_traits.h:121:24> 'int' 0)

        };
        typedef std::__false_type __type;
    };
    struct __is_void {
        struct __is_void;
        enum  {
            __value = (ImplicitCastExpr 0x9b179a8 </usr/include/c++/4.6/bits/cpp_type_traits.h:128:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b17950 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    template <typename _Tp = unsigned int> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9b1b1a8 </usr/include/c++/4.6/bits/cpp_type_traits.h:222:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b1b150 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = long> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9b1b4b8 </usr/include/c++/4.6/bits/cpp_type_traits.h:229:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b1b460 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = wchar_t> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9b19ab8 </usr/include/c++/4.6/bits/cpp_type_traits.h:177:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b19a60 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = long long> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9b1bad8 </usr/include/c++/4.6/bits/cpp_type_traits.h:243:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b1ba80 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = bool> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9b18008 </usr/include/c++/4.6/bits/cpp_type_traits.h:148:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b17fb0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = unsigned long> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9b1b7c8 </usr/include/c++/4.6/bits/cpp_type_traits.h:236:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b1b770 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = double> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9b2ef78 </usr/include/c++/4.6/bits/cpp_type_traits.h:138:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b17cb0 <col:24> 'int' 0))

        };
        typedef std::__false_type __type;
    }
template <typename _Tp = short> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9b19dc8 </usr/include/c++/4.6/bits/cpp_type_traits.h:201:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b19d70 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = signed char> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9b19498 </usr/include/c++/4.6/bits/cpp_type_traits.h:162:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b19440 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = unsigned short> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9b1a0d8 </usr/include/c++/4.6/bits/cpp_type_traits.h:208:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b1a080 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = unsigned long long> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9b1c8c8 </usr/include/c++/4.6/bits/cpp_type_traits.h:250:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b1c870 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = int> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9b1ae98 </usr/include/c++/4.6/bits/cpp_type_traits.h:215:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b1ae40 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = long double> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9b2ea08 </usr/include/c++/4.6/bits/cpp_type_traits.h:138:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b17cb0 <col:24> 'int' 0))

        };
        typedef std::__false_type __type;
    }
template <typename _Tp = float> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9b2f4e8 </usr/include/c++/4.6/bits/cpp_type_traits.h:138:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b17cb0 <col:24> 'int' 0))

        };
        typedef std::__false_type __type;
    }
template <typename _Tp = unsigned char> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9b197a8 </usr/include/c++/4.6/bits/cpp_type_traits.h:169:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b19750 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = char> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9b18318 </usr/include/c++/4.6/bits/cpp_type_traits.h:155:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b182c0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (IntegerLiteral 0x9b17cb0 </usr/include/c++/4.6/bits/cpp_type_traits.h:138:24> 'int' 0)

        };
        typedef std::__false_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9b18008 </usr/include/c++/4.6/bits/cpp_type_traits.h:148:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b17fb0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9b18318 </usr/include/c++/4.6/bits/cpp_type_traits.h:155:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b182c0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9b19498 </usr/include/c++/4.6/bits/cpp_type_traits.h:162:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b19440 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9b197a8 </usr/include/c++/4.6/bits/cpp_type_traits.h:169:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b19750 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9b19ab8 </usr/include/c++/4.6/bits/cpp_type_traits.h:177:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b19a60 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9b19dc8 </usr/include/c++/4.6/bits/cpp_type_traits.h:201:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b19d70 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9b1a0d8 </usr/include/c++/4.6/bits/cpp_type_traits.h:208:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b1a080 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9b1ae98 </usr/include/c++/4.6/bits/cpp_type_traits.h:215:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b1ae40 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9b1b1a8 </usr/include/c++/4.6/bits/cpp_type_traits.h:222:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b1b150 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9b1b4b8 </usr/include/c++/4.6/bits/cpp_type_traits.h:229:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b1b460 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9b1b7c8 </usr/include/c++/4.6/bits/cpp_type_traits.h:236:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b1b770 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9b1bad8 </usr/include/c++/4.6/bits/cpp_type_traits.h:243:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b1ba80 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9b1c8c8 </usr/include/c++/4.6/bits/cpp_type_traits.h:250:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b1c870 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    template <typename _Tp = double> struct __is_floating {
        struct __is_floating;
        enum  {
            __value = (ImplicitCastExpr 0x9b1d238 </usr/include/c++/4.6/bits/cpp_type_traits.h:275:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b1d1e0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = int> struct __is_floating {
        struct __is_floating;
        enum  {
            __value = (ImplicitCastExpr 0x9fc8af8 </usr/include/c++/4.6/bits/cpp_type_traits.h:260:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b1cbd0 <col:24> 'int' 0))

        };
        typedef std::__false_type __type;
    }
template <typename _Tp = long double> struct __is_floating {
        struct __is_floating;
        enum  {
            __value = (ImplicitCastExpr 0x9b1d548 </usr/include/c++/4.6/bits/cpp_type_traits.h:282:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b1d4f0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = float> struct __is_floating {
        struct __is_floating;
        enum  {
            __value = (ImplicitCastExpr 0x9b1cf28 </usr/include/c++/4.6/bits/cpp_type_traits.h:268:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b1ced0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp> struct __is_floating {
        struct __is_floating;
        enum  {
            __value = (IntegerLiteral 0x9b1cbd0 </usr/include/c++/4.6/bits/cpp_type_traits.h:260:24> 'int' 0)

        };
        typedef std::__false_type __type;
    };
    struct __is_floating {
        struct __is_floating;
        enum  {
            __value = (ImplicitCastExpr 0x9b1cf28 </usr/include/c++/4.6/bits/cpp_type_traits.h:268:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b1ced0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_floating {
        struct __is_floating;
        enum  {
            __value = (ImplicitCastExpr 0x9b1d238 </usr/include/c++/4.6/bits/cpp_type_traits.h:275:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b1d1e0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_floating {
        struct __is_floating;
        enum  {
            __value = (ImplicitCastExpr 0x9b1d548 </usr/include/c++/4.6/bits/cpp_type_traits.h:282:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b1d4f0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    template <typename _Tp = int> struct __is_pointer {
        struct __is_pointer;
        enum  {
            __value = (ImplicitCastExpr 0x9fc9028 </usr/include/c++/4.6/bits/cpp_type_traits.h:292:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b1e740 <col:24> 'int' 0))

        };
        typedef std::__false_type __type;
    }
template <typename _Tp> struct __is_pointer {
        struct __is_pointer;
        enum  {
            __value = (IntegerLiteral 0x9b1e740 </usr/include/c++/4.6/bits/cpp_type_traits.h:292:24> 'int' 0)

        };
        typedef std::__false_type __type;
    };
    struct __is_pointer {
        struct __is_pointer;
        enum  {
            __value = (IntegerLiteral 0x9b1eb60 </usr/include/c++/4.6/bits/cpp_type_traits.h:299:24> 'int' 1)

        };
        typedef std::__true_type __type;
    };
    template <typename _Tp = unsigned long *> struct __is_normal_iterator {
        struct __is_normal_iterator;
        enum  {
            __value = (ImplicitCastExpr 0x9fc7548 </usr/include/c++/4.6/bits/cpp_type_traits.h:309:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b1eeb0 <col:24> 'int' 0))

        };
        typedef std::__false_type __type;
    }
template <typename _Tp> struct __is_normal_iterator {
        struct __is_normal_iterator;
        enum  {
            __value = (IntegerLiteral 0x9b1eeb0 </usr/include/c++/4.6/bits/cpp_type_traits.h:309:24> 'int' 0)

        };
        typedef std::__false_type __type;
    };
    struct __is_normal_iterator {
        struct __is_normal_iterator;
        enum  {
            __value = (IntegerLiteral 0x9b1f430 </usr/include/c++/4.6/bits/cpp_type_traits.h:317:24> 'int' 1)

        };
        typedef std::__true_type __type;
    };
    template <typename _Tp = int> struct __is_arithmetic : public __traitor<__is_integer<int>, __is_floating<int> > {
        struct __is_arithmetic;
    }
template <typename _Tp> struct __is_arithmetic : public __traitor<__is_integer<_Tp>, __is_floating<_Tp> > {
        struct __is_arithmetic;
    };
    template <typename _Tp> struct __is_fundamental : public __traitor<__is_void<_Tp>, __is_arithmetic<_Tp> > {
        struct __is_fundamental;
    };
    template <typename _Tp = int> struct __is_scalar : public __traitor<__is_arithmetic<int>, __is_pointer<int> > {
        struct __is_scalar;
    }
template <typename _Tp> struct __is_scalar : public __traitor<__is_arithmetic<_Tp>, __is_pointer<_Tp> > {
        struct __is_scalar;
    };
    template <typename _Tp = wchar_t> struct __is_char {
        struct __is_char;
        enum  {
            __value = (ImplicitCastExpr 0x9b22a28 </usr/include/c++/4.6/bits/cpp_type_traits.h:366:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b229d0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = char> struct __is_char {
        struct __is_char;
        enum  {
            __value = (ImplicitCastExpr 0x9b22718 </usr/include/c++/4.6/bits/cpp_type_traits.h:358:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b226c0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp> struct __is_char {
        struct __is_char;
        enum  {
            __value = (IntegerLiteral 0x9b223c0 </usr/include/c++/4.6/bits/cpp_type_traits.h:351:24> 'int' 0)

        };
        typedef std::__false_type __type;
    };
    struct __is_char {
        struct __is_char;
        enum  {
            __value = (ImplicitCastExpr 0x9b22718 </usr/include/c++/4.6/bits/cpp_type_traits.h:358:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b226c0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_char {
        struct __is_char;
        enum  {
            __value = (ImplicitCastExpr 0x9b22a28 </usr/include/c++/4.6/bits/cpp_type_traits.h:366:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b229d0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    template <typename _Tp = signed char> struct __is_byte {
        struct __is_byte;
        enum  {
            __value = (ImplicitCastExpr 0x9b240f8 </usr/include/c++/4.6/bits/cpp_type_traits.h:388:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b240a8 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = unsigned char> struct __is_byte {
        struct __is_byte;
        enum  {
            __value = (ImplicitCastExpr 0x9b24408 </usr/include/c++/4.6/bits/cpp_type_traits.h:395:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b243b0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = char> struct __is_byte {
        struct __is_byte;
        enum  {
            __value = (ImplicitCastExpr 0x9b23088 </usr/include/c++/4.6/bits/cpp_type_traits.h:381:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b23030 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp> struct __is_byte {
        struct __is_byte;
        enum  {
            __value = (IntegerLiteral 0x9b22d30 </usr/include/c++/4.6/bits/cpp_type_traits.h:374:24> 'int' 0)

        };
        typedef std::__false_type __type;
    };
    struct __is_byte {
        struct __is_byte;
        enum  {
            __value = (ImplicitCastExpr 0x9b23088 </usr/include/c++/4.6/bits/cpp_type_traits.h:381:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b23030 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_byte {
        struct __is_byte;
        enum  {
            __value = (ImplicitCastExpr 0x9b240f8 </usr/include/c++/4.6/bits/cpp_type_traits.h:388:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b240a8 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_byte {
        struct __is_byte;
        enum  {
            __value = (ImplicitCastExpr 0x9b24408 </usr/include/c++/4.6/bits/cpp_type_traits.h:395:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b243b0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    template <typename _Tp> struct __is_move_iterator {
        struct __is_move_iterator;
        enum  {
            __value = (IntegerLiteral 0x9b24710 </usr/include/c++/4.6/bits/cpp_type_traits.h:405:24> 'int' 0)

        };
        typedef std::__false_type __type;
    };
}
namespace __gnu_cxx {
    template <bool = true, typename  = void> struct __enable_if {
        struct __enable_if;
        typedef void __type;
    }
template <bool = false, typename  = void> struct __enable_if {
        struct __enable_if;
    }
template <bool, typename > struct __enable_if {
        struct __enable_if;
    };
    struct __enable_if {
        struct __enable_if;
        typedef _Tp __type;
    };
    template <bool _Cond = true, typename _Iftrue = __gnu_cxx::__numeric_traits_integer<unsigned long>, typename _Iffalse = __gnu_cxx::__numeric_traits_floating<unsigned long>> struct __conditional_type {
        struct __conditional_type;
        typedef __gnu_cxx::__numeric_traits_integer<unsigned long> __type;
    }
template <bool _Cond = true, typename _Iftrue = __gnu_cxx::__numeric_traits_integer<int>, typename _Iffalse = __gnu_cxx::__numeric_traits_floating<int>> struct __conditional_type {
        struct __conditional_type;
        typedef __gnu_cxx::__numeric_traits_integer<int> __type;
    }
template <bool _Cond = true, typename _Iftrue = __gnu_cxx::__numeric_traits_integer<short>, typename _Iffalse = __gnu_cxx::__numeric_traits_floating<short>> struct __conditional_type {
        struct __conditional_type;
        typedef __gnu_cxx::__numeric_traits_integer<short> __type;
    }
template <bool _Cond = true, typename _Iftrue = __gnu_cxx::__numeric_traits_integer<char>, typename _Iffalse = __gnu_cxx::__numeric_traits_floating<char>> struct __conditional_type {
        struct __conditional_type;
        typedef __gnu_cxx::__numeric_traits_integer<char> __type;
    }
template <bool _Cond = true, typename _Iftrue = unsigned long, typename _Iffalse = unsigned long long> struct __conditional_type {
        struct __conditional_type;
        typedef unsigned long __type;
    }
template <bool _Cond, typename _Iftrue, typename _Iffalse> struct __conditional_type {
        struct __conditional_type;
        typedef _Iftrue __type;
    };
    struct __conditional_type {
        struct __conditional_type;
        typedef _Iffalse __type;
    };
    template <typename _Tp = long> struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned long __type;
    }
template <typename _Tp = wchar_t> struct __add_unsigned
template <typename _Tp = long long> struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned long long __type;
    }
template <typename _Tp = bool> struct __add_unsigned
template <typename _Tp = short> struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned short __type;
    }
template <typename _Tp = signed char> struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned char __type;
    }
template <typename _Tp = int> struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned int __type;
    }
template <typename _Tp = char> struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned char __type;
    }
template <typename _Tp> struct __add_unsigned {
        struct __add_unsigned;
    private:
    private:
        typedef __enable_if<std::__is_integer<_Tp>::__value, _Tp> __if_type;
    public:
    public:
        typedef typename __if_type::__type __type;
    };
    struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned char __type;
    };
    struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned char __type;
    };
    struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned short __type;
    };
    struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned int __type;
    };
    struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned long __type;
    };
    struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned long long __type;
    };
    struct __add_unsigned;
    struct __add_unsigned;
    template <typename _Tp = unsigned int> struct __remove_unsigned {
        struct __remove_unsigned;
        typedef int __type;
    }
template <typename _Tp = wchar_t> struct __remove_unsigned
template <typename _Tp = bool> struct __remove_unsigned
template <typename _Tp = unsigned long> struct __remove_unsigned {
        struct __remove_unsigned;
        typedef long __type;
    }
template <typename _Tp = unsigned short> struct __remove_unsigned {
        struct __remove_unsigned;
        typedef short __type;
    }
template <typename _Tp = unsigned long long> struct __remove_unsigned {
        struct __remove_unsigned;
        typedef long long __type;
    }
template <typename _Tp = unsigned char> struct __remove_unsigned {
        struct __remove_unsigned;
        typedef signed char __type;
    }
template <typename _Tp = char> struct __remove_unsigned {
        struct __remove_unsigned;
        typedef signed char __type;
    }
template <typename _Tp> struct __remove_unsigned {
        struct __remove_unsigned;
    private:
    private:
        typedef __enable_if<std::__is_integer<_Tp>::__value, _Tp> __if_type;
    public:
    public:
        typedef typename __if_type::__type __type;
    };
    struct __remove_unsigned {
        struct __remove_unsigned;
        typedef signed char __type;
    };
    struct __remove_unsigned {
        struct __remove_unsigned;
        typedef signed char __type;
    };
    struct __remove_unsigned {
        struct __remove_unsigned;
        typedef short __type;
    };
    struct __remove_unsigned {
        struct __remove_unsigned;
        typedef int __type;
    };
    struct __remove_unsigned {
        struct __remove_unsigned;
        typedef long __type;
    };
    struct __remove_unsigned {
        struct __remove_unsigned;
        typedef long long __type;
    };
    struct __remove_unsigned;
    struct __remove_unsigned;
    template <typename _Type> inline bool __is_null_pointer(_Type *__ptr) (CompoundStmt 0x9b2d3e8 </usr/include/c++/4.6/ext/type_traits.h:151:5, col:26>
  (ReturnStmt 0x9b2d3d8 <col:7, col:23>
    (BinaryOperator 0x9b2d3c0 <col:14, col:23> '<dependent type>' '=='
      (DeclRefExpr 0x9b2d38c <col:14> '_Type *' lvalue ParmVar 0x9b2d260 '__ptr' '_Type *')
      (IntegerLiteral 0x9b2d3a8 <col:23> 'int' 0))))

;
    template <typename _Type> inline bool __is_null_pointer(_Type) (CompoundStmt 0x9b2d5b0 </usr/include/c++/4.6/ext/type_traits.h:156:5, col:21>
  (ReturnStmt 0x9b2d5a0 <col:7, col:14>
    (CXXBoolLiteralExpr 0x9b2d590 <col:14> '_Bool' false)))

;
    template <typename _Tp = double, bool = false> struct __promote {
        struct __promote;
        typedef double __type;
    }
template <typename _Tp = float, bool = false> struct __promote {
        struct __promote;
        typedef float __type;
    }
template <typename _Tp = long double, bool = false> struct __promote {
        struct __promote;
        typedef long double __type;
    }
template <typename _Tp, bool = (DependentScopeDeclRefExpr 0x9b2d6d0 </usr/include/c++/4.6/ext/type_traits.h:160:33, col:57> '<dependent type>' lvalue)
> struct __promote {
        struct __promote;
        typedef double __type;
    };
    struct __promote {
        struct __promote;
    };
    struct __promote {
        struct __promote;
        typedef long double __type;
    };
    struct __promote {
        struct __promote;
        typedef double __type;
    };
    struct __promote {
        struct __promote;
        typedef float __type;
    };
    template <typename _Tp, typename _Up, typename _Tp2 = typename __promote<_Tp>::__type, typename _Up2 = typename __promote<_Up>::__type> struct __promote_2 {
        struct __promote_2;
        typedef typeof (_Tp2() + _Up2()) __type;
    };
    template <typename _Tp, typename _Up, typename _Vp, typename _Tp2 = typename __promote<_Tp>::__type, typename _Up2 = typename __promote<_Up>::__type, typename _Vp2 = typename __promote<_Vp>::__type> struct __promote_3 {
        struct __promote_3;
        typedef typeof (_Tp2() + _Up2() + _Vp2()) __type;
    };
    template <typename _Tp, typename _Up, typename _Vp, typename _Wp, typename _Tp2 = typename __promote<_Tp>::__type, typename _Up2 = typename __promote<_Up>::__type, typename _Vp2 = typename __promote<_Vp>::__type, typename _Wp2 = typename __promote<_Wp>::__type> struct __promote_4 {
        struct __promote_4;
        typedef typeof (_Tp2() + _Up2() + _Vp2() + _Wp2()) __type;
    };
}
namespace __gnu_cxx {
    template <typename _Value = unsigned long> struct __numeric_traits_integer {
        struct __numeric_traits_integer;
        static const unsigned long __min = (ParenExpr 0x9d58308 </usr/include/c++/4.6/ext/numeric_traits.h:47:3, col:68> 'unsigned long':'unsigned long'
  (ConditionalOperator 0x9d582e8 <line:42:31, line:47:67> 'unsigned long':'unsigned long'
    (ParenExpr 0x9d58160 <line:42:31, col:45> '_Bool'
      (BinaryOperator 0x9d58148 <col:32, col:44> '_Bool' '<'
        (CStyleCastExpr 0x9d58120 <col:32, col:40> 'unsigned long':'unsigned long' <NoOp>
          (ImplicitCastExpr 0x9d58110 <col:37, col:40> 'unsigned long':'unsigned long' <IntegralCast>
            (ParenExpr 0x9b33a78 <col:37, col:40> 'int'
              (UnaryOperator 0x9b33a60 <col:38, col:39> 'int' prefix '-'
                (IntegerLiteral 0x9b33a48 <col:39> 'int' 1)))))
        (ImplicitCastExpr 0x9d58138 <col:44> 'unsigned long' <IntegralCast>
          (IntegerLiteral 0x9b33ab0 <col:44> 'int' 0))))
    (BinaryOperator 0x9d582a0 <line:47:28, line:44:54> 'unsigned long':'unsigned long' '<<'
      (CStyleCastExpr 0x9d58190 <line:47:28, col:33> 'unsigned long':'unsigned long' <NoOp>
        (ImplicitCastExpr 0x9d58180 <col:33> 'unsigned long':'unsigned long' <IntegralCast>
          (IntegerLiteral 0x9b33af8 <col:33> 'int' 1)))
      (ParenExpr 0x9d58288 <line:44:3, col:54> 'unsigned int'
        (BinaryOperator 0x9d58270 <col:4, line:42:45> 'unsigned int' '-'
          (BinaryOperator 0x9d581d8 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
            (UnaryExprOrTypeTraitExpr 0x9d581b0 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'unsigned long':'unsigned long')
            (ImplicitCastExpr 0x9d581c8 <<built-in>:17:22> 'unsigned int' <IntegralCast>
              (IntegerLiteral 0x9b33b50 <col:22> 'int' 8)))
          (ImplicitCastExpr 0x9d58260 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
            (ParenExpr 0x9d58248 <col:31, col:45> '_Bool'
              (BinaryOperator 0x9d58230 <col:32, col:44> '_Bool' '<'
                (CStyleCastExpr 0x9d58208 <col:32, col:40> 'unsigned long':'unsigned long' <NoOp>
                  (ImplicitCastExpr 0x9d581f8 <col:37, col:40> 'unsigned long':'unsigned long' <IntegralCast>
                    (ParenExpr 0x9b33bc0 <col:37, col:40> 'int'
                      (UnaryOperator 0x9b33ba8 <col:38, col:39> 'int' prefix '-'
                        (IntegerLiteral 0x9b33b90 <col:39> 'int' 1)))))
                (ImplicitCastExpr 0x9d58220 <col:44> 'unsigned long' <IntegralCast>
                  (IntegerLiteral 0x9b33bf8 <col:44> 'int' 0))))))))
    (CStyleCastExpr 0x9d582d0 <line:47:62, col:67> 'unsigned long':'unsigned long' <NoOp>
      (ImplicitCastExpr 0x9d582c0 <col:67> 'unsigned long':'unsigned long' <IntegralCast>
        (IntegerLiteral 0x9b33c88 <col:67> 'int' 0)))))
;
        static const unsigned long __max = (ParenExpr 0x9d58698 </usr/include/c++/4.6/ext/numeric_traits.h:50:3, line:51:72> 'unsigned long'
  (ConditionalOperator 0x9d58678 <line:42:31, line:51:71> 'unsigned long'
    (ParenExpr 0x9d583d0 <line:42:31, col:45> '_Bool'
      (BinaryOperator 0x9d583b8 <col:32, col:44> '_Bool' '<'
        (CStyleCastExpr 0x9d58390 <col:32, col:40> 'unsigned long':'unsigned long' <NoOp>
          (ImplicitCastExpr 0x9d58380 <col:37, col:40> 'unsigned long':'unsigned long' <IntegralCast>
            (ParenExpr 0x9b33d68 <col:37, col:40> 'int'
              (UnaryOperator 0x9b33d50 <col:38, col:39> 'int' prefix '-'
                (IntegerLiteral 0x9b33d38 <col:39> 'int' 1)))))
        (ImplicitCastExpr 0x9d583a8 <col:44> 'unsigned long' <IntegralCast>
          (IntegerLiteral 0x9b33da0 <col:44> 'int' 0))))
    (ParenExpr 0x9d58618 <line:51:4, col:61> 'unsigned long'
      (BinaryOperator 0x9d58600 <col:5, col:60> 'unsigned long' '+'
        (ParenExpr 0x9d585d8 <col:5, col:56> 'unsigned long'
          (BinaryOperator 0x9d585c0 <col:6, col:55> 'unsigned long' '<<'
            (ParenExpr 0x9d585a8 <col:6, col:50> 'unsigned long'
              (BinaryOperator 0x9d58590 <col:7, col:49> 'unsigned long' '-'
                (ParenExpr 0x9d58568 <col:7, col:45> 'unsigned long':'unsigned long'
                  (BinaryOperator 0x9d58550 <col:8, col:44> 'unsigned long':'unsigned long' '<<'
                    (CStyleCastExpr 0x9d58400 <col:8, col:13> 'unsigned long':'unsigned long' <NoOp>
                      (ImplicitCastExpr 0x9d583f0 <col:13> 'unsigned long':'unsigned long' <IntegralCast>
                        (IntegerLiteral 0x9b33de8 <col:13> 'int' 1)))
                    (ParenExpr 0x9d58538 <col:18, col:44> 'unsigned int'
                      (BinaryOperator 0x9d58520 <line:44:3, line:51:43> 'unsigned int' '-'
                        (ParenExpr 0x9d584f8 <line:44:3, col:54> 'unsigned int'
                          (BinaryOperator 0x9d584e0 <col:4, line:42:45> 'unsigned int' '-'
                            (BinaryOperator 0x9d58448 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
                              (UnaryExprOrTypeTraitExpr 0x9d58420 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'unsigned long':'unsigned long')
                              (ImplicitCastExpr 0x9d58438 <<built-in>:17:22> 'unsigned int' <IntegralCast>
                                (IntegerLiteral 0x9b33e40 <col:22> 'int' 8)))
                            (ImplicitCastExpr 0x9d584d0 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
                              (ParenExpr 0x9d584b8 <col:31, col:45> '_Bool'
                                (BinaryOperator 0x9d584a0 <col:32, col:44> '_Bool' '<'
                                  (CStyleCastExpr 0x9d58478 <col:32, col:40> 'unsigned long':'unsigned long' <NoOp>
                                    (ImplicitCastExpr 0x9d58468 <col:37, col:40> 'unsigned long':'unsigned long' <IntegralCast>
                                      (ParenExpr 0x9b33eb0 <col:37, col:40> 'int'
                                        (UnaryOperator 0x9b33e98 <col:38, col:39> 'int' prefix '-'
                                          (IntegerLiteral 0x9b33e80 <col:39> 'int' 1)))))
                                  (ImplicitCastExpr 0x9d58490 <col:44> 'unsigned long' <IntegralCast>
                                    (IntegerLiteral 0x9b33ee8 <col:44> 'int' 0)))))))
                        (ImplicitCastExpr 0x9d58510 <line:51:43> 'unsigned int' <IntegralCast>
                          (IntegerLiteral 0x9b362b8 <col:43> 'int' 1))))))
                (ImplicitCastExpr 0x9d58580 <col:49> 'unsigned long' <IntegralCast>
                  (IntegerLiteral 0x9b36330 <col:49> 'int' 1))))
            (IntegerLiteral 0x9b36378 <col:55> 'int' 1)))
        (ImplicitCastExpr 0x9d585f0 <col:60> 'unsigned long' <IntegralCast>
          (IntegerLiteral 0x9b363c0 <col:60> 'int' 1))))
    (UnaryOperator 0x9d58660 <col:65, col:71> 'unsigned long':'unsigned long' prefix '~'
      (CStyleCastExpr 0x9d58648 <col:66, col:71> 'unsigned long':'unsigned long' <NoOp>
        (ImplicitCastExpr 0x9d58638 <col:71> 'unsigned long':'unsigned long' <IntegralCast>
          (IntegerLiteral 0x9b36408 <col:71> 'int' 0))))))
;
        static const bool __is_signed = (ParenExpr 0x9d58750 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> '_Bool'
  (BinaryOperator 0x9d58738 <col:32, col:44> '_Bool' '<'
    (CStyleCastExpr 0x9d58710 <col:32, col:40> 'unsigned long':'unsigned long' <NoOp>
      (ImplicitCastExpr 0x9d58700 <col:37, col:40> 'unsigned long':'unsigned long' <IntegralCast>
        (ParenExpr 0x9b36508 <col:37, col:40> 'int'
          (UnaryOperator 0x9b364f0 <col:38, col:39> 'int' prefix '-'
            (IntegerLiteral 0x9b364d8 <col:39> 'int' 1)))))
    (ImplicitCastExpr 0x9d58728 <col:44> 'unsigned long' <IntegralCast>
      (IntegerLiteral 0x9b36540 <col:44> 'int' 0))))
;
        static const int __digits = (ImplicitCastExpr 0x9d588b0 </usr/include/c++/4.6/ext/numeric_traits.h:44:3, col:54> 'const int' <IntegralCast>
  (ParenExpr 0x9d58898 <col:3, col:54> 'unsigned int'
    (BinaryOperator 0x9d58880 <col:4, line:42:45> 'unsigned int' '-'
      (BinaryOperator 0x9d587e8 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
        (UnaryExprOrTypeTraitExpr 0x9d587c0 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'unsigned long':'unsigned long')
        (ImplicitCastExpr 0x9d587d8 <<built-in>:17:22> 'unsigned int' <IntegralCast>
          (IntegerLiteral 0x9b365f8 <col:22> 'int' 8)))
      (ImplicitCastExpr 0x9d58870 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
        (ParenExpr 0x9d58858 <col:31, col:45> '_Bool'
          (BinaryOperator 0x9d58840 <col:32, col:44> '_Bool' '<'
            (CStyleCastExpr 0x9d58818 <col:32, col:40> 'unsigned long':'unsigned long' <NoOp>
              (ImplicitCastExpr 0x9d58808 <col:37, col:40> 'unsigned long':'unsigned long' <IntegralCast>
                (ParenExpr 0x9b36668 <col:37, col:40> 'int'
                  (UnaryOperator 0x9b36650 <col:38, col:39> 'int' prefix '-'
                    (IntegerLiteral 0x9b36638 <col:39> 'int' 1)))))
            (ImplicitCastExpr 0x9d58830 <col:44> 'unsigned long' <IntegralCast>
              (IntegerLiteral 0x9b366a0 <col:44> 'int' 0))))))))
;
    }
template <typename _Value = short> struct __numeric_traits_integer {
        struct __numeric_traits_integer;
        static const short __min = (ImplicitCastExpr 0x9e9e9a0 </usr/include/c++/4.6/ext/numeric_traits.h:47:3, col:68> 'const short':'const short' <IntegralCast>
  (ParenExpr 0x9e9e988 <col:3, col:68> 'int'
    (ConditionalOperator 0x9e9e968 <line:42:31, line:47:67> 'int'
      (ParenExpr 0x9e9e7c0 <line:42:31, col:45> '_Bool'
        (BinaryOperator 0x9e9e7a8 <col:32, col:44> '_Bool' '<'
          (ImplicitCastExpr 0x9e9e798 <col:32, col:40> 'int' <IntegralCast>
            (CStyleCastExpr 0x9e9e780 <col:32, col:40> 'short':'short' <NoOp>
              (ImplicitCastExpr 0x9e9e770 <col:37, col:40> 'short':'short' <IntegralCast>
                (ParenExpr 0x9b33a78 <col:37, col:40> 'int'
                  (UnaryOperator 0x9b33a60 <col:38, col:39> 'int' prefix '-'
                    (IntegerLiteral 0x9b33a48 <col:39> 'int' 1))))))
          (IntegerLiteral 0x9b33ab0 <col:44> 'int' 0)))
      (BinaryOperator 0x9e9e910 <line:47:28, line:44:54> 'int' '<<'
        (ImplicitCastExpr 0x9e9e900 <line:47:28, col:33> 'int' <IntegralCast>
          (CStyleCastExpr 0x9e9e7f0 <col:28, col:33> 'short':'short' <NoOp>
            (ImplicitCastExpr 0x9e9e7e0 <col:33> 'short':'short' <IntegralCast>
              (IntegerLiteral 0x9b33af8 <col:33> 'int' 1))))
        (ParenExpr 0x9e9e8e8 <line:44:3, col:54> 'unsigned int'
          (BinaryOperator 0x9e9e8d0 <col:4, line:42:45> 'unsigned int' '-'
            (BinaryOperator 0x9e9e838 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
              (UnaryExprOrTypeTraitExpr 0x9e9e810 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'short':'short')
              (ImplicitCastExpr 0x9e9e828 <<built-in>:17:22> 'unsigned int' <IntegralCast>
                (IntegerLiteral 0x9b33b50 <col:22> 'int' 8)))
            (ImplicitCastExpr 0x9e9e8c0 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
              (ParenExpr 0x9e9e8a8 <col:31, col:45> '_Bool'
                (BinaryOperator 0x9e9e890 <col:32, col:44> '_Bool' '<'
                  (ImplicitCastExpr 0x9e9e880 <col:32, col:40> 'int' <IntegralCast>
                    (CStyleCastExpr 0x9e9e868 <col:32, col:40> 'short':'short' <NoOp>
                      (ImplicitCastExpr 0x9e9e858 <col:37, col:40> 'short':'short' <IntegralCast>
                        (ParenExpr 0x9b33bc0 <col:37, col:40> 'int'
                          (UnaryOperator 0x9b33ba8 <col:38, col:39> 'int' prefix '-'
                            (IntegerLiteral 0x9b33b90 <col:39> 'int' 1))))))
                  (IntegerLiteral 0x9b33bf8 <col:44> 'int' 0)))))))
      (ImplicitCastExpr 0x9e9e958 <line:47:62, col:67> 'int' <IntegralCast>
        (CStyleCastExpr 0x9e9e940 <col:62, col:67> 'short':'short' <NoOp>
          (ImplicitCastExpr 0x9e9e930 <col:67> 'short':'short' <IntegralCast>
            (IntegerLiteral 0x9b33c88 <col:67> 'int' 0)))))))
;
        static const short __max = (ImplicitCastExpr 0x9e9ed40 </usr/include/c++/4.6/ext/numeric_traits.h:50:3, line:51:72> 'const short':'const short' <IntegralCast>
  (ParenExpr 0x9e9ed28 <line:50:3, line:51:72> 'int'
    (ConditionalOperator 0x9e9ed08 <line:42:31, line:51:71> 'int'
      (ParenExpr 0x9e9ea60 <line:42:31, col:45> '_Bool'
        (BinaryOperator 0x9e9ea48 <col:32, col:44> '_Bool' '<'
          (ImplicitCastExpr 0x9e9ea38 <col:32, col:40> 'int' <IntegralCast>
            (CStyleCastExpr 0x9e9ea20 <col:32, col:40> 'short':'short' <NoOp>
              (ImplicitCastExpr 0x9e9ea10 <col:37, col:40> 'short':'short' <IntegralCast>
                (ParenExpr 0x9b33d68 <col:37, col:40> 'int'
                  (UnaryOperator 0x9b33d50 <col:38, col:39> 'int' prefix '-'
                    (IntegerLiteral 0x9b33d38 <col:39> 'int' 1))))))
          (IntegerLiteral 0x9b33da0 <col:44> 'int' 0)))
      (ParenExpr 0x9e9ec98 <line:51:4, col:61> 'int'
        (BinaryOperator 0x9e9ec80 <col:5, col:60> 'int' '+'
          (ParenExpr 0x9e9ec68 <col:5, col:56> 'int'
            (BinaryOperator 0x9e9ec50 <col:6, col:55> 'int' '<<'
              (ParenExpr 0x9e9ec38 <col:6, col:50> 'int'
                (BinaryOperator 0x9e9ec20 <col:7, col:49> 'int' '-'
                  (ParenExpr 0x9e9ec08 <col:7, col:45> 'int'
                    (BinaryOperator 0x9e9ebf0 <col:8, col:44> 'int' '<<'
                      (ImplicitCastExpr 0x9e9ebe0 <col:8, col:13> 'int' <IntegralCast>
                        (CStyleCastExpr 0x9e9ea90 <col:8, col:13> 'short':'short' <NoOp>
                          (ImplicitCastExpr 0x9e9ea80 <col:13> 'short':'short' <IntegralCast>
                            (IntegerLiteral 0x9b33de8 <col:13> 'int' 1))))
                      (ParenExpr 0x9e9ebc8 <col:18, col:44> 'unsigned int'
                        (BinaryOperator 0x9e9ebb0 <line:44:3, line:51:43> 'unsigned int' '-'
                          (ParenExpr 0x9e9eb88 <line:44:3, col:54> 'unsigned int'
                            (BinaryOperator 0x9e9eb70 <col:4, line:42:45> 'unsigned int' '-'
                              (BinaryOperator 0x9e9ead8 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
                                (UnaryExprOrTypeTraitExpr 0x9e9eab0 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'short':'short')
                                (ImplicitCastExpr 0x9e9eac8 <<built-in>:17:22> 'unsigned int' <IntegralCast>
                                  (IntegerLiteral 0x9b33e40 <col:22> 'int' 8)))
                              (ImplicitCastExpr 0x9e9eb60 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
                                (ParenExpr 0x9e9eb48 <col:31, col:45> '_Bool'
                                  (BinaryOperator 0x9e9eb30 <col:32, col:44> '_Bool' '<'
                                    (ImplicitCastExpr 0x9e9eb20 <col:32, col:40> 'int' <IntegralCast>
                                      (CStyleCastExpr 0x9e9eb08 <col:32, col:40> 'short':'short' <NoOp>
                                        (ImplicitCastExpr 0x9e9eaf8 <col:37, col:40> 'short':'short' <IntegralCast>
                                          (ParenExpr 0x9b33eb0 <col:37, col:40> 'int'
                                            (UnaryOperator 0x9b33e98 <col:38, col:39> 'int' prefix '-'
                                              (IntegerLiteral 0x9b33e80 <col:39> 'int' 1))))))
                                    (IntegerLiteral 0x9b33ee8 <col:44> 'int' 0))))))
                          (ImplicitCastExpr 0x9e9eba0 <line:51:43> 'unsigned int' <IntegralCast>
                            (IntegerLiteral 0x9b362b8 <col:43> 'int' 1))))))
                  (IntegerLiteral 0x9b36330 <col:49> 'int' 1)))
              (IntegerLiteral 0x9b36378 <col:55> 'int' 1)))
          (IntegerLiteral 0x9b363c0 <col:60> 'int' 1)))
      (UnaryOperator 0x9e9ecf0 <col:65, col:71> 'int' prefix '~'
        (ImplicitCastExpr 0x9e9ece0 <col:66, col:71> 'int' <IntegralCast>
          (CStyleCastExpr 0x9e9ecc8 <col:66, col:71> 'short':'short' <NoOp>
            (ImplicitCastExpr 0x9e9ecb8 <col:71> 'short':'short' <IntegralCast>
              (IntegerLiteral 0x9b36408 <col:71> 'int' 0))))))))
;
        static const bool __is_signed = (ParenExpr 0x9e9edf0 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> '_Bool'
  (BinaryOperator 0x9e9edd8 <col:32, col:44> '_Bool' '<'
    (ImplicitCastExpr 0x9e9edc8 <col:32, col:40> 'int' <IntegralCast>
      (CStyleCastExpr 0x9e9edb0 <col:32, col:40> 'short':'short' <NoOp>
        (ImplicitCastExpr 0x9e9eda0 <col:37, col:40> 'short':'short' <IntegralCast>
          (ParenExpr 0x9b36508 <col:37, col:40> 'int'
            (UnaryOperator 0x9b364f0 <col:38, col:39> 'int' prefix '-'
              (IntegerLiteral 0x9b364d8 <col:39> 'int' 1))))))
    (IntegerLiteral 0x9b36540 <col:44> 'int' 0)))
;
        static const int __digits = (ImplicitCastExpr 0x9ea3130 </usr/include/c++/4.6/ext/numeric_traits.h:44:3, col:54> 'const int' <IntegralCast>
  (ParenExpr 0x9ea3118 <col:3, col:54> 'unsigned int'
    (BinaryOperator 0x9ea3100 <col:4, line:42:45> 'unsigned int' '-'
      (BinaryOperator 0x9ea3068 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
        (UnaryExprOrTypeTraitExpr 0x9ea3040 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'short':'short')
        (ImplicitCastExpr 0x9ea3058 <<built-in>:17:22> 'unsigned int' <IntegralCast>
          (IntegerLiteral 0x9b365f8 <col:22> 'int' 8)))
      (ImplicitCastExpr 0x9ea30f0 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
        (ParenExpr 0x9ea30d8 <col:31, col:45> '_Bool'
          (BinaryOperator 0x9ea30c0 <col:32, col:44> '_Bool' '<'
            (ImplicitCastExpr 0x9ea30b0 <col:32, col:40> 'int' <IntegralCast>
              (CStyleCastExpr 0x9ea3098 <col:32, col:40> 'short':'short' <NoOp>
                (ImplicitCastExpr 0x9ea3088 <col:37, col:40> 'short':'short' <IntegralCast>
                  (ParenExpr 0x9b36668 <col:37, col:40> 'int'
                    (UnaryOperator 0x9b36650 <col:38, col:39> 'int' prefix '-'
                      (IntegerLiteral 0x9b36638 <col:39> 'int' 1))))))
            (IntegerLiteral 0x9b366a0 <col:44> 'int' 0)))))))
;
    }
template <typename _Value = int> struct __numeric_traits_integer {
        struct __numeric_traits_integer;
        static const int __min = (ParenExpr 0x9ca5e08 </usr/include/c++/4.6/ext/numeric_traits.h:47:3, col:68> 'int':'int'
  (ConditionalOperator 0x9ca5de8 <line:42:31, line:47:67> 'int':'int'
    (ParenExpr 0x9ca5ca0 <line:42:31, col:45> '_Bool'
      (BinaryOperator 0x9ca5c88 <col:32, col:44> '_Bool' '<'
        (CStyleCastExpr 0x9ca5c70 <col:32, col:40> 'int':'int' <NoOp>
          (ParenExpr 0x9b33a78 <col:37, col:40> 'int'
            (UnaryOperator 0x9b33a60 <col:38, col:39> 'int' prefix '-'
              (IntegerLiteral 0x9b33a48 <col:39> 'int' 1))))
        (IntegerLiteral 0x9b33ab0 <col:44> 'int' 0)))
    (BinaryOperator 0x9ca5db0 <line:47:28, line:44:54> 'int':'int' '<<'
      (CStyleCastExpr 0x9ca5cc0 <line:47:28, col:33> 'int':'int' <NoOp>
        (IntegerLiteral 0x9b33af8 <col:33> 'int' 1))
      (ParenExpr 0x9ca5d98 <line:44:3, col:54> 'unsigned int'
        (BinaryOperator 0x9ca5d80 <col:4, line:42:45> 'unsigned int' '-'
          (BinaryOperator 0x9ca5d08 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
            (UnaryExprOrTypeTraitExpr 0x9ca5ce0 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'int':'int')
            (ImplicitCastExpr 0x9ca5cf8 <<built-in>:17:22> 'unsigned int' <IntegralCast>
              (IntegerLiteral 0x9b33b50 <col:22> 'int' 8)))
          (ImplicitCastExpr 0x9ca5d70 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
            (ParenExpr 0x9ca5d58 <col:31, col:45> '_Bool'
              (BinaryOperator 0x9ca5d40 <col:32, col:44> '_Bool' '<'
                (CStyleCastExpr 0x9ca5d28 <col:32, col:40> 'int':'int' <NoOp>
                  (ParenExpr 0x9b33bc0 <col:37, col:40> 'int'
                    (UnaryOperator 0x9b33ba8 <col:38, col:39> 'int' prefix '-'
                      (IntegerLiteral 0x9b33b90 <col:39> 'int' 1))))
                (IntegerLiteral 0x9b33bf8 <col:44> 'int' 0)))))))
    (CStyleCastExpr 0x9ca5dd0 <line:47:62, col:67> 'int':'int' <NoOp>
      (IntegerLiteral 0x9b33c88 <col:67> 'int' 0))))
;
        static const int __max = (ParenExpr 0x9ca6118 </usr/include/c++/4.6/ext/numeric_traits.h:50:3, line:51:72> 'int'
  (ConditionalOperator 0x9ca60f8 <line:42:31, line:51:71> 'int'
    (ParenExpr 0x9ca5eb0 <line:42:31, col:45> '_Bool'
      (BinaryOperator 0x9ca5e98 <col:32, col:44> '_Bool' '<'
        (CStyleCastExpr 0x9ca5e80 <col:32, col:40> 'int':'int' <NoOp>
          (ParenExpr 0x9b33d68 <col:37, col:40> 'int'
            (UnaryOperator 0x9b33d50 <col:38, col:39> 'int' prefix '-'
              (IntegerLiteral 0x9b33d38 <col:39> 'int' 1))))
        (IntegerLiteral 0x9b33da0 <col:44> 'int' 0)))
    (ParenExpr 0x9ca60a8 <line:51:4, col:61> 'int'
      (BinaryOperator 0x9ca6090 <col:5, col:60> 'int' '+'
        (ParenExpr 0x9ca6078 <col:5, col:56> 'int'
          (BinaryOperator 0x9ca6060 <col:6, col:55> 'int' '<<'
            (ParenExpr 0x9ca6048 <col:6, col:50> 'int'
              (BinaryOperator 0x9ca6030 <col:7, col:49> 'int' '-'
                (ParenExpr 0x9ca6018 <col:7, col:45> 'int':'int'
                  (BinaryOperator 0x9ca6000 <col:8, col:44> 'int':'int' '<<'
                    (CStyleCastExpr 0x9ca5ed0 <col:8, col:13> 'int':'int' <NoOp>
                      (IntegerLiteral 0x9b33de8 <col:13> 'int' 1))
                    (ParenExpr 0x9ca5fe8 <col:18, col:44> 'unsigned int'
                      (BinaryOperator 0x9ca5fd0 <line:44:3, line:51:43> 'unsigned int' '-'
                        (ParenExpr 0x9ca5fa8 <line:44:3, col:54> 'unsigned int'
                          (BinaryOperator 0x9ca5f90 <col:4, line:42:45> 'unsigned int' '-'
                            (BinaryOperator 0x9ca5f18 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
                              (UnaryExprOrTypeTraitExpr 0x9ca5ef0 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'int':'int')
                              (ImplicitCastExpr 0x9ca5f08 <<built-in>:17:22> 'unsigned int' <IntegralCast>
                                (IntegerLiteral 0x9b33e40 <col:22> 'int' 8)))
                            (ImplicitCastExpr 0x9ca5f80 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
                              (ParenExpr 0x9ca5f68 <col:31, col:45> '_Bool'
                                (BinaryOperator 0x9ca5f50 <col:32, col:44> '_Bool' '<'
                                  (CStyleCastExpr 0x9ca5f38 <col:32, col:40> 'int':'int' <NoOp>
                                    (ParenExpr 0x9b33eb0 <col:37, col:40> 'int'
                                      (UnaryOperator 0x9b33e98 <col:38, col:39> 'int' prefix '-'
                                        (IntegerLiteral 0x9b33e80 <col:39> 'int' 1))))
                                  (IntegerLiteral 0x9b33ee8 <col:44> 'int' 0))))))
                        (ImplicitCastExpr 0x9ca5fc0 <line:51:43> 'unsigned int' <IntegralCast>
                          (IntegerLiteral 0x9b362b8 <col:43> 'int' 1))))))
                (IntegerLiteral 0x9b36330 <col:49> 'int' 1)))
            (IntegerLiteral 0x9b36378 <col:55> 'int' 1)))
        (IntegerLiteral 0x9b363c0 <col:60> 'int' 1)))
    (UnaryOperator 0x9ca60e0 <col:65, col:71> 'int':'int' prefix '~'
      (CStyleCastExpr 0x9ca60c8 <col:66, col:71> 'int':'int' <NoOp>
        (IntegerLiteral 0x9b36408 <col:71> 'int' 0)))))
;
        static const bool __is_signed = (ParenExpr 0x9ca61b0 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> '_Bool'
  (BinaryOperator 0x9ca6198 <col:32, col:44> '_Bool' '<'
    (CStyleCastExpr 0x9ca6180 <col:32, col:40> 'int':'int' <NoOp>
      (ParenExpr 0x9b36508 <col:37, col:40> 'int'
        (UnaryOperator 0x9b364f0 <col:38, col:39> 'int' prefix '-'
          (IntegerLiteral 0x9b364d8 <col:39> 'int' 1))))
    (IntegerLiteral 0x9b36540 <col:44> 'int' 0)))
;
        static const int __digits = (ImplicitCastExpr 0x9ca62f0 </usr/include/c++/4.6/ext/numeric_traits.h:44:3, col:54> 'const int' <IntegralCast>
  (ParenExpr 0x9ca62d8 <col:3, col:54> 'unsigned int'
    (BinaryOperator 0x9ca62c0 <col:4, line:42:45> 'unsigned int' '-'
      (BinaryOperator 0x9ca6248 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
        (UnaryExprOrTypeTraitExpr 0x9ca6220 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'int':'int')
        (ImplicitCastExpr 0x9ca6238 <<built-in>:17:22> 'unsigned int' <IntegralCast>
          (IntegerLiteral 0x9b365f8 <col:22> 'int' 8)))
      (ImplicitCastExpr 0x9ca62b0 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
        (ParenExpr 0x9ca6298 <col:31, col:45> '_Bool'
          (BinaryOperator 0x9ca6280 <col:32, col:44> '_Bool' '<'
            (CStyleCastExpr 0x9ca6268 <col:32, col:40> 'int':'int' <NoOp>
              (ParenExpr 0x9b36668 <col:37, col:40> 'int'
                (UnaryOperator 0x9b36650 <col:38, col:39> 'int' prefix '-'
                  (IntegerLiteral 0x9b36638 <col:39> 'int' 1))))
            (IntegerLiteral 0x9b366a0 <col:44> 'int' 0)))))))
;
    }
template <typename _Value = char> struct __numeric_traits_integer {
        struct __numeric_traits_integer;
        static const char __min = (ImplicitCastExpr 0x9deeea0 </usr/include/c++/4.6/ext/numeric_traits.h:47:3, col:68> 'const char':'const char' <IntegralCast>
  (ParenExpr 0x9deee88 <col:3, col:68> 'int'
    (ConditionalOperator 0x9deee68 <line:42:31, line:47:67> 'int'
      (ParenExpr 0x9deecc0 <line:42:31, col:45> '_Bool'
        (BinaryOperator 0x9deeca8 <col:32, col:44> '_Bool' '<'
          (ImplicitCastExpr 0x9deec98 <col:32, col:40> 'int' <IntegralCast>
            (CStyleCastExpr 0x9deec80 <col:32, col:40> 'char':'char' <NoOp>
              (ImplicitCastExpr 0x9deec70 <col:37, col:40> 'char':'char' <IntegralCast>
                (ParenExpr 0x9b33a78 <col:37, col:40> 'int'
                  (UnaryOperator 0x9b33a60 <col:38, col:39> 'int' prefix '-'
                    (IntegerLiteral 0x9b33a48 <col:39> 'int' 1))))))
          (IntegerLiteral 0x9b33ab0 <col:44> 'int' 0)))
      (BinaryOperator 0x9deee10 <line:47:28, line:44:54> 'int' '<<'
        (ImplicitCastExpr 0x9deee00 <line:47:28, col:33> 'int' <IntegralCast>
          (CStyleCastExpr 0x9deecf0 <col:28, col:33> 'char':'char' <NoOp>
            (ImplicitCastExpr 0x9deece0 <col:33> 'char':'char' <IntegralCast>
              (IntegerLiteral 0x9b33af8 <col:33> 'int' 1))))
        (ParenExpr 0x9deede8 <line:44:3, col:54> 'unsigned int'
          (BinaryOperator 0x9deedd0 <col:4, line:42:45> 'unsigned int' '-'
            (BinaryOperator 0x9deed38 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
              (UnaryExprOrTypeTraitExpr 0x9deed10 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'char':'char')
              (ImplicitCastExpr 0x9deed28 <<built-in>:17:22> 'unsigned int' <IntegralCast>
                (IntegerLiteral 0x9b33b50 <col:22> 'int' 8)))
            (ImplicitCastExpr 0x9deedc0 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
              (ParenExpr 0x9deeda8 <col:31, col:45> '_Bool'
                (BinaryOperator 0x9deed90 <col:32, col:44> '_Bool' '<'
                  (ImplicitCastExpr 0x9deed80 <col:32, col:40> 'int' <IntegralCast>
                    (CStyleCastExpr 0x9deed68 <col:32, col:40> 'char':'char' <NoOp>
                      (ImplicitCastExpr 0x9deed58 <col:37, col:40> 'char':'char' <IntegralCast>
                        (ParenExpr 0x9b33bc0 <col:37, col:40> 'int'
                          (UnaryOperator 0x9b33ba8 <col:38, col:39> 'int' prefix '-'
                            (IntegerLiteral 0x9b33b90 <col:39> 'int' 1))))))
                  (IntegerLiteral 0x9b33bf8 <col:44> 'int' 0)))))))
      (ImplicitCastExpr 0x9deee58 <line:47:62, col:67> 'int' <IntegralCast>
        (CStyleCastExpr 0x9deee40 <col:62, col:67> 'char':'char' <NoOp>
          (ImplicitCastExpr 0x9deee30 <col:67> 'char':'char' <IntegralCast>
            (IntegerLiteral 0x9b33c88 <col:67> 'int' 0)))))))
;
        static const char __max = (ImplicitCastExpr 0x9df2818 </usr/include/c++/4.6/ext/numeric_traits.h:50:3, line:51:72> 'const char':'const char' <IntegralCast>
  (ParenExpr 0x9df2800 <line:50:3, line:51:72> 'int'
    (ConditionalOperator 0x9df27e0 <line:42:31, line:51:71> 'int'
      (ParenExpr 0x9deef60 <line:42:31, col:45> '_Bool'
        (BinaryOperator 0x9deef48 <col:32, col:44> '_Bool' '<'
          (ImplicitCastExpr 0x9deef38 <col:32, col:40> 'int' <IntegralCast>
            (CStyleCastExpr 0x9deef20 <col:32, col:40> 'char':'char' <NoOp>
              (ImplicitCastExpr 0x9deef10 <col:37, col:40> 'char':'char' <IntegralCast>
                (ParenExpr 0x9b33d68 <col:37, col:40> 'int'
                  (UnaryOperator 0x9b33d50 <col:38, col:39> 'int' prefix '-'
                    (IntegerLiteral 0x9b33d38 <col:39> 'int' 1))))))
          (IntegerLiteral 0x9b33da0 <col:44> 'int' 0)))
      (ParenExpr 0x9df2770 <line:51:4, col:61> 'int'
        (BinaryOperator 0x9df2758 <col:5, col:60> 'int' '+'
          (ParenExpr 0x9df2740 <col:5, col:56> 'int'
            (BinaryOperator 0x9df2728 <col:6, col:55> 'int' '<<'
              (ParenExpr 0x9df2710 <col:6, col:50> 'int'
                (BinaryOperator 0x9df26f8 <col:7, col:49> 'int' '-'
                  (ParenExpr 0x9df26e0 <col:7, col:45> 'int'
                    (BinaryOperator 0x9df26c8 <col:8, col:44> 'int' '<<'
                      (ImplicitCastExpr 0x9def0e0 <col:8, col:13> 'int' <IntegralCast>
                        (CStyleCastExpr 0x9deef90 <col:8, col:13> 'char':'char' <NoOp>
                          (ImplicitCastExpr 0x9deef80 <col:13> 'char':'char' <IntegralCast>
                            (IntegerLiteral 0x9b33de8 <col:13> 'int' 1))))
                      (ParenExpr 0x9def0c8 <col:18, col:44> 'unsigned int'
                        (BinaryOperator 0x9def0b0 <line:44:3, line:51:43> 'unsigned int' '-'
                          (ParenExpr 0x9def088 <line:44:3, col:54> 'unsigned int'
                            (BinaryOperator 0x9def070 <col:4, line:42:45> 'unsigned int' '-'
                              (BinaryOperator 0x9deefd8 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
                                (UnaryExprOrTypeTraitExpr 0x9deefb0 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'char':'char')
                                (ImplicitCastExpr 0x9deefc8 <<built-in>:17:22> 'unsigned int' <IntegralCast>
                                  (IntegerLiteral 0x9b33e40 <col:22> 'int' 8)))
                              (ImplicitCastExpr 0x9def060 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
                                (ParenExpr 0x9def048 <col:31, col:45> '_Bool'
                                  (BinaryOperator 0x9def030 <col:32, col:44> '_Bool' '<'
                                    (ImplicitCastExpr 0x9def020 <col:32, col:40> 'int' <IntegralCast>
                                      (CStyleCastExpr 0x9def008 <col:32, col:40> 'char':'char' <NoOp>
                                        (ImplicitCastExpr 0x9deeff8 <col:37, col:40> 'char':'char' <IntegralCast>
                                          (ParenExpr 0x9b33eb0 <col:37, col:40> 'int'
                                            (UnaryOperator 0x9b33e98 <col:38, col:39> 'int' prefix '-'
                                              (IntegerLiteral 0x9b33e80 <col:39> 'int' 1))))))
                                    (IntegerLiteral 0x9b33ee8 <col:44> 'int' 0))))))
                          (ImplicitCastExpr 0x9def0a0 <line:51:43> 'unsigned int' <IntegralCast>
                            (IntegerLiteral 0x9b362b8 <col:43> 'int' 1))))))
                  (IntegerLiteral 0x9b36330 <col:49> 'int' 1)))
              (IntegerLiteral 0x9b36378 <col:55> 'int' 1)))
          (IntegerLiteral 0x9b363c0 <col:60> 'int' 1)))
      (UnaryOperator 0x9df27c8 <col:65, col:71> 'int' prefix '~'
        (ImplicitCastExpr 0x9df27b8 <col:66, col:71> 'int' <IntegralCast>
          (CStyleCastExpr 0x9df27a0 <col:66, col:71> 'char':'char' <NoOp>
            (ImplicitCastExpr 0x9df2790 <col:71> 'char':'char' <IntegralCast>
              (IntegerLiteral 0x9b36408 <col:71> 'int' 0))))))))
;
        static const bool __is_signed = (ParenExpr 0x9df28d0 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> '_Bool'
  (BinaryOperator 0x9df28b8 <col:32, col:44> '_Bool' '<'
    (ImplicitCastExpr 0x9df28a8 <col:32, col:40> 'int' <IntegralCast>
      (CStyleCastExpr 0x9df2890 <col:32, col:40> 'char':'char' <NoOp>
        (ImplicitCastExpr 0x9df2880 <col:37, col:40> 'char':'char' <IntegralCast>
          (ParenExpr 0x9b36508 <col:37, col:40> 'int'
            (UnaryOperator 0x9b364f0 <col:38, col:39> 'int' prefix '-'
              (IntegerLiteral 0x9b364d8 <col:39> 'int' 1))))))
    (IntegerLiteral 0x9b36540 <col:44> 'int' 0)))
;
        static const int __digits = (ImplicitCastExpr 0x9df2a30 </usr/include/c++/4.6/ext/numeric_traits.h:44:3, col:54> 'const int' <IntegralCast>
  (ParenExpr 0x9df2a18 <col:3, col:54> 'unsigned int'
    (BinaryOperator 0x9df2a00 <col:4, line:42:45> 'unsigned int' '-'
      (BinaryOperator 0x9df2968 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
        (UnaryExprOrTypeTraitExpr 0x9df2940 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'char':'char')
        (ImplicitCastExpr 0x9df2958 <<built-in>:17:22> 'unsigned int' <IntegralCast>
          (IntegerLiteral 0x9b365f8 <col:22> 'int' 8)))
      (ImplicitCastExpr 0x9df29f0 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
        (ParenExpr 0x9df29d8 <col:31, col:45> '_Bool'
          (BinaryOperator 0x9df29c0 <col:32, col:44> '_Bool' '<'
            (ImplicitCastExpr 0x9df29b0 <col:32, col:40> 'int' <IntegralCast>
              (CStyleCastExpr 0x9df2998 <col:32, col:40> 'char':'char' <NoOp>
                (ImplicitCastExpr 0x9df2988 <col:37, col:40> 'char':'char' <IntegralCast>
                  (ParenExpr 0x9b36668 <col:37, col:40> 'int'
                    (UnaryOperator 0x9b36650 <col:38, col:39> 'int' prefix '-'
                      (IntegerLiteral 0x9b36638 <col:39> 'int' 1))))))
            (IntegerLiteral 0x9b366a0 <col:44> 'int' 0)))))))
;
    }
template <typename _Value> struct __numeric_traits_integer {
        struct __numeric_traits_integer;
        static const _Value __min = (ParenExpr 0x9b33ce0 </usr/include/c++/4.6/ext/numeric_traits.h:47:3, col:68> '<dependent type>'
  (ConditionalOperator 0x9b33cc0 <line:42:31, line:47:67> '<dependent type>'
    (ParenExpr 0x9b33ae0 <line:42:31, col:45> '<dependent type>'
      (BinaryOperator 0x9b33ac8 <col:32, col:44> '<dependent type>' '<'
        (CStyleCastExpr 0x9b33a98 <col:32, col:40> '_Value' <Dependent>
          (ParenExpr 0x9b33a78 <col:37, col:40> 'int'
            (UnaryOperator 0x9b33a60 <col:38, col:39> 'int' prefix '-'
              (IntegerLiteral 0x9b33a48 <col:39> 'int' 1))))
        (IntegerLiteral 0x9b33ab0 <col:44> 'int' 0)))
    (BinaryOperator 0x9b33c70 <line:47:28, line:44:54> '<dependent type>' '<<'
      (CStyleCastExpr 0x9b33b18 <line:47:28, col:33> '_Value' <Dependent>
        (IntegerLiteral 0x9b33af8 <col:33> 'int' 1))
      (ParenExpr 0x9b33c58 <line:44:3, col:54> '<dependent type>'
        (BinaryOperator 0x9b33c40 <col:4, line:42:45> '<dependent type>' '-'
          (BinaryOperator 0x9b33b78 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
            (UnaryExprOrTypeTraitExpr 0x9b33b38 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof '_Value')
            (ImplicitCastExpr 0x9b33b68 <<built-in>:17:22> 'unsigned int' <IntegralCast>
              (IntegerLiteral 0x9b33b50 <col:22> 'int' 8)))
          (ParenExpr 0x9b33c28 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> '<dependent type>'
            (BinaryOperator 0x9b33c10 <col:32, col:44> '<dependent type>' '<'
              (CStyleCastExpr 0x9b33be0 <col:32, col:40> '_Value' <Dependent>
                (ParenExpr 0x9b33bc0 <col:37, col:40> 'int'
                  (UnaryOperator 0x9b33ba8 <col:38, col:39> 'int' prefix '-'
                    (IntegerLiteral 0x9b33b90 <col:39> 'int' 1))))
              (IntegerLiteral 0x9b33bf8 <col:44> 'int' 0))))))
    (CStyleCastExpr 0x9b33ca8 <line:47:62, col:67> '_Value' <Dependent>
      (IntegerLiteral 0x9b33c88 <col:67> 'int' 0))))
;
        static const _Value __max = (ParenExpr 0x9b36478 </usr/include/c++/4.6/ext/numeric_traits.h:50:3, line:51:72> '<dependent type>'
  (ConditionalOperator 0x9b36458 <line:42:31, line:51:71> '<dependent type>'
    (ParenExpr 0x9b33dd0 <line:42:31, col:45> '<dependent type>'
      (BinaryOperator 0x9b33db8 <col:32, col:44> '<dependent type>' '<'
        (CStyleCastExpr 0x9b33d88 <col:32, col:40> '_Value' <Dependent>
          (ParenExpr 0x9b33d68 <col:37, col:40> 'int'
            (UnaryOperator 0x9b33d50 <col:38, col:39> 'int' prefix '-'
              (IntegerLiteral 0x9b33d38 <col:39> 'int' 1))))
        (IntegerLiteral 0x9b33da0 <col:44> 'int' 0)))
    (ParenExpr 0x9b363f0 <line:51:4, col:61> '<dependent type>'
      (BinaryOperator 0x9b363d8 <col:5, col:60> '<dependent type>' '+'
        (ParenExpr 0x9b363a8 <col:5, col:56> '<dependent type>'
          (BinaryOperator 0x9b36390 <col:6, col:55> '<dependent type>' '<<'
            (ParenExpr 0x9b36360 <col:6, col:50> '<dependent type>'
              (BinaryOperator 0x9b36348 <col:7, col:49> '<dependent type>' '-'
                (ParenExpr 0x9b36318 <col:7, col:45> '<dependent type>'
                  (BinaryOperator 0x9b36300 <col:8, col:44> '<dependent type>' '<<'
                    (CStyleCastExpr 0x9b33e08 <col:8, col:13> '_Value' <Dependent>
                      (IntegerLiteral 0x9b33de8 <col:13> 'int' 1))
                    (ParenExpr 0x9b362e8 <col:18, col:44> '<dependent type>'
                      (BinaryOperator 0x9b362d0 <line:44:3, line:51:43> '<dependent type>' '-'
                        (ParenExpr 0x9b362a0 <line:44:3, col:54> '<dependent type>'
                          (BinaryOperator 0x9b36288 <col:4, line:42:45> '<dependent type>' '-'
                            (BinaryOperator 0x9b33e68 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
                              (UnaryExprOrTypeTraitExpr 0x9b33e28 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof '_Value')
                              (ImplicitCastExpr 0x9b33e58 <<built-in>:17:22> 'unsigned int' <IntegralCast>
                                (IntegerLiteral 0x9b33e40 <col:22> 'int' 8)))
                            (ParenExpr 0x9b36270 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> '<dependent type>'
                              (BinaryOperator 0x9b36258 <col:32, col:44> '<dependent type>' '<'
                                (CStyleCastExpr 0x9b33ed0 <col:32, col:40> '_Value' <Dependent>
                                  (ParenExpr 0x9b33eb0 <col:37, col:40> 'int'
                                    (UnaryOperator 0x9b33e98 <col:38, col:39> 'int' prefix '-'
                                      (IntegerLiteral 0x9b33e80 <col:39> 'int' 1))))
                                (IntegerLiteral 0x9b33ee8 <col:44> 'int' 0)))))
                        (IntegerLiteral 0x9b362b8 <line:51:43> 'int' 1)))))
                (IntegerLiteral 0x9b36330 <col:49> 'int' 1)))
            (IntegerLiteral 0x9b36378 <col:55> 'int' 1)))
        (IntegerLiteral 0x9b363c0 <col:60> 'int' 1)))
    (UnaryOperator 0x9b36440 <col:65, col:71> '<dependent type>' prefix '~'
      (CStyleCastExpr 0x9b36428 <col:66, col:71> '_Value' <Dependent>
        (IntegerLiteral 0x9b36408 <col:71> 'int' 0)))))
;
        static const bool __is_signed = (ParenExpr 0x9b36570 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> '<dependent type>'
  (BinaryOperator 0x9b36558 <col:32, col:44> '<dependent type>' '<'
    (CStyleCastExpr 0x9b36528 <col:32, col:40> '_Value' <Dependent>
      (ParenExpr 0x9b36508 <col:37, col:40> 'int'
        (UnaryOperator 0x9b364f0 <col:38, col:39> 'int' prefix '-'
          (IntegerLiteral 0x9b364d8 <col:39> 'int' 1))))
    (IntegerLiteral 0x9b36540 <col:44> 'int' 0)))
;
        static const int __digits = (ParenExpr 0x9b36700 </usr/include/c++/4.6/ext/numeric_traits.h:44:3, col:54> '<dependent type>'
  (BinaryOperator 0x9b366e8 <col:4, line:42:45> '<dependent type>' '-'
    (BinaryOperator 0x9b36620 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
      (UnaryExprOrTypeTraitExpr 0x9b365e0 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof '_Value')
      (ImplicitCastExpr 0x9b36610 <<built-in>:17:22> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0x9b365f8 <col:22> 'int' 8)))
    (ParenExpr 0x9b366d0 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> '<dependent type>'
      (BinaryOperator 0x9b366b8 <col:32, col:44> '<dependent type>' '<'
        (CStyleCastExpr 0x9b36688 <col:32, col:40> '_Value' <Dependent>
          (ParenExpr 0x9b36668 <col:37, col:40> 'int'
            (UnaryOperator 0x9b36650 <col:38, col:39> 'int' prefix '-'
              (IntegerLiteral 0x9b36638 <col:39> 'int' 1))))
        (IntegerLiteral 0x9b366a0 <col:44> 'int' 0)))))
;
    };
    static const _Value __min;
    static const _Value __max;
    static const bool __is_signed;
    static const int __digits;
    template <typename _Value = unsigned long> struct __numeric_traits_floating
template <typename _Value = short> struct __numeric_traits_floating
template <typename _Value = int> struct __numeric_traits_floating
template <typename _Value = char> struct __numeric_traits_floating
template <typename _Value> struct __numeric_traits_floating {
        struct __numeric_traits_floating;
        static const int __max_digits10 = (ImplicitCastExpr 0x9b37908 </usr/include/c++/4.6/ext/numeric_traits.h:88:3, line:89:38> 'const int' <IntegralCast>
  (ParenExpr 0x9b378f0 <line:88:3, line:89:38> 'long'
    (BinaryOperator 0x9b378d8 <line:88:4, line:89:34> 'long' '+'
      (ImplicitCastExpr 0x9b378c8 <line:88:4> 'long' <IntegralCast>
        (IntegerLiteral 0x9b37238 <col:4> 'int' 2))
      (BinaryOperator 0x9b378b0 <line:84:3, line:89:34> 'long' '/'
        (BinaryOperator 0x9b37870 <line:84:3, line:89:27> 'long' '*'
          (ImplicitCastExpr 0x9b37860 <line:84:3, line:85:60> 'long' <IntegralCast>
            (ParenExpr 0x9b37830 <line:84:3, line:85:60> 'int'
              (ConditionalOperator 0x9b37810 <line:84:4, <built-in>:85:27> 'int'
                (DependentScopeDeclRefExpr 0x9b375f0 </usr/include/c++/4.6/ext/numeric_traits.h:84:4, col:33> '<dependent type>' lvalue)
                (IntegerLiteral 0x9b37618 <<built-in>:59:26> 'int' 24)
                (ConditionalOperator 0x9b377f0 </usr/include/c++/4.6/ext/numeric_traits.h:85:6, <built-in>:85:27> 'int'
                  (DependentScopeDeclRefExpr 0x9b37798 </usr/include/c++/4.6/ext/numeric_traits.h:85:6, col:36> '<dependent type>' lvalue)
                  (IntegerLiteral 0x9b377c0 <<built-in>:72:26> 'int' 53)
                  (IntegerLiteral 0x9b377d8 <line:85:27> 'int' 64)))))
          (IntegerLiteral 0x9b37848 </usr/include/c++/4.6/ext/numeric_traits.h:89:27> 'long' 643))
        (ImplicitCastExpr 0x9b378a0 <col:34> 'long' <IntegralCast>
          (IntegerLiteral 0x9b37888 <col:34> 'int' 2136))))))
;
        static const bool __is_signed = (CXXBoolLiteralExpr 0x9b37958 </usr/include/c++/4.6/ext/numeric_traits.h:105:39> '_Bool' true)
;
        static const int __digits10 = (ParenExpr 0x9b37cd0 </usr/include/c++/4.6/ext/numeric_traits.h:84:3, line:85:60> 'int'
  (ConditionalOperator 0x9b37cb0 <line:84:4, <built-in>:81:22> 'int'
    (DependentScopeDeclRefExpr 0x9b37ae0 </usr/include/c++/4.6/ext/numeric_traits.h:84:4, col:33> '<dependent type>' lvalue)
    (IntegerLiteral 0x9b37b08 <<built-in>:55:21> 'int' 6)
    (ConditionalOperator 0x9b37c90 </usr/include/c++/4.6/ext/numeric_traits.h:85:6, <built-in>:81:22> 'int'
      (DependentScopeDeclRefExpr 0x9b37c38 </usr/include/c++/4.6/ext/numeric_traits.h:85:6, col:36> '<dependent type>' lvalue)
      (IntegerLiteral 0x9b37c60 <<built-in>:68:21> 'int' 15)
      (IntegerLiteral 0x9b37c78 <line:81:22> 'int' 18))))
;
        static const int __max_exponent10 = (ParenExpr 0x9b38050 </usr/include/c++/4.6/ext/numeric_traits.h:84:3, line:85:60> 'int'
  (ConditionalOperator 0x9b38030 <line:84:4, <built-in>:86:29> 'int'
    (DependentScopeDeclRefExpr 0x9b37e60 </usr/include/c++/4.6/ext/numeric_traits.h:84:4, col:33> '<dependent type>' lvalue)
    (IntegerLiteral 0x9b37e88 <<built-in>:60:28> 'int' 38)
    (ConditionalOperator 0x9b38010 </usr/include/c++/4.6/ext/numeric_traits.h:85:6, <built-in>:86:29> 'int'
      (DependentScopeDeclRefExpr 0x9b37fb8 </usr/include/c++/4.6/ext/numeric_traits.h:85:6, col:36> '<dependent type>' lvalue)
      (IntegerLiteral 0x9b37fe0 <<built-in>:73:28> 'int' 308)
      (IntegerLiteral 0x9b37ff8 <line:86:29> 'int' 4932))))
;
    };
    static const int __max_digits10;
    static const bool __is_signed;
    static const int __digits10;
    static const int __max_exponent10;
    template <typename _Value = unsigned long> struct __numeric_traits : public typename __conditional_type<std::__is_integer<unsigned long>::__value, __numeric_traits_integer<unsigned long>, __numeric_traits_floating<unsigned long> >::__type {
        struct __numeric_traits;
    }
template <typename _Value = short> struct __numeric_traits : public typename __conditional_type<std::__is_integer<short>::__value, __numeric_traits_integer<short>, __numeric_traits_floating<short> >::__type {
        struct __numeric_traits;
    }
template <typename _Value = int> struct __numeric_traits : public typename __conditional_type<std::__is_integer<int>::__value, __numeric_traits_integer<int>, __numeric_traits_floating<int> >::__type {
        struct __numeric_traits;
    }
template <typename _Value = char> struct __numeric_traits : public typename __conditional_type<std::__is_integer<char>::__value, __numeric_traits_integer<char>, __numeric_traits_floating<char> >::__type {
        struct __numeric_traits;
    }
template <typename _Value> struct __numeric_traits : public __conditional_type<std::__is_integer<_Value>::__value, __numeric_traits_integer<_Value>, __numeric_traits_floating<_Value> >::__type {
        struct __numeric_traits;
    };
}
namespace std {
    template <typename _Tp> inline _Tp *__addressof(_Tp &__r) (CompoundStmt 0x9b39620 </usr/include/c++/4.6/bits/move.h:44:5, line:47:5>
  (ReturnStmt 0x9b39610 <line:45:7, line:46:66>
    (CXXReinterpretCastExpr 0x9b395f8 <line:45:14, line:46:66> '_Tp *' reinterpret_cast<_Tp *> <Dependent>
      (UnaryOperator 0x9b395d0 <col:3, col:65> 'char *' prefix '&'
        (CXXConstCastExpr 0x9b395b8 <col:4, col:65> 'char' lvalue const_cast<char &> <NoOp>
          (CXXReinterpretCastExpr 0x9b39558 <col:22, col:64> 'const volatile char' lvalue reinterpret_cast<const volatile char &> <Dependent>
            (DeclRefExpr 0x9b3950c <col:61> '_Tp' lvalue ParmVar 0x9b393c0 '__r' '_Tp &')))))))

;
}
namespace std {
    template <typename _Tp> inline void swap(_Tp &__a, _Tp &__b) (CompoundStmt 0x9b3e9c8 </usr/include/c++/4.6/bits/move.h:123:5, line:130:5>
  (DeclStmt 0x9b3e8f8 <line:127:7, col:37>
    0x9b3e890 "_Tp __tmp =
      (ParenExpr 0x9b3e8e0 <line:105:30, col:36> '_Tp' lvalue
        (DeclRefExpr 0x9b3e8c4 <line:127:33> '_Tp' lvalue ParmVar 0x9b3e700 '__a' '_Tp &'))")
  (BinaryOperator 0x9b3e950 <line:128:7, line:105:36> '<dependent type>' '='
    (DeclRefExpr 0x9b3e908 <line:128:7> '_Tp' lvalue ParmVar 0x9b3e700 '__a' '_Tp &')
    (ParenExpr 0x9b3e938 <line:105:30, col:36> '_Tp' lvalue
      (DeclRefExpr 0x9b3e920 <line:128:27> '_Tp' lvalue ParmVar 0x9b3e750 '__b' '_Tp &')))
  (BinaryOperator 0x9b3e9b0 <line:129:7, line:105:36> '<dependent type>' '='
    (DeclRefExpr 0x9b3e968 <line:129:7> '_Tp' lvalue ParmVar 0x9b3e750 '__b' '_Tp &')
    (ParenExpr 0x9b3e998 <line:105:30, col:36> '_Tp' lvalue
      (DeclRefExpr 0x9b3e980 <line:129:27> '_Tp' lvalue Var 0x9b3e890 '__tmp' '_Tp'))))

;
    template <typename _Tp, size_t _Nm> inline void swap(_Tp (&__a)[_Nm], _Tp (&__b)[_Nm]) (CompoundStmt 0x9b3efe0 </usr/include/c++/4.6/bits/move.h:137:5, line:140:5>
  (ForStmt 0x9b3efb8 <line:138:7, line:139:25>
    (DeclStmt 0x9b3ee30 <line:138:12, col:26>
      0x9b3edd0 "size_t __n =
        (ImplicitCastExpr 0x9b3ee20 <col:25> 'size_t':'unsigned int' <IntegralCast>
          (IntegerLiteral 0x9b3ee08 <col:25> 'int' 0))")
    <<<NULL>>>
    (BinaryOperator 0x9b3ee80 <col:28, col:34> '_Bool' '<'
      (ImplicitCastExpr 0x9b3ee70 <col:28> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9b3ee40 <col:28> 'size_t':'unsigned int' lvalue Var 0x9b3edd0 '__n' 'size_t':'unsigned int'))
      (DeclRefExpr 0x9b3ee58 <col:34> 'size_t':'unsigned int' NonTypeTemplateParm 0x9b3ea60 '_Nm' 'size_t':'unsigned int'))
    (UnaryOperator 0x9b3eeb0 <col:39, col:41> 'size_t':'unsigned int' lvalue prefix '++'
      (DeclRefExpr 0x9b3ee98 <col:41> 'size_t':'unsigned int' lvalue Var 0x9b3edd0 '__n' 'size_t':'unsigned int'))
    (CallExpr 0x9b3ef90 <line:139:2, col:25> '<dependent type>'
      (UnresolvedLookupExpr 0x9b3eec8 <col:2> '<overloaded function type>' lvalue (ADL) = '1' 0x9b3ed90 0x9b3e850)
      (ArraySubscriptExpr 0x9b3ef30 <col:7, col:14> '<dependent type>' lvalue
        (DeclRefExpr 0x9b3ef00 <col:7> '_Tp [_Nm]':'_Tp [_Nm]' lvalue ParmVar 0x9b3ebb0 '__a' '_Tp (&)[_Nm]')
        (DeclRefExpr 0x9b3ef18 <col:11> 'size_t':'unsigned int' lvalue Var 0x9b3edd0 '__n' 'size_t':'unsigned int'))
      (ArraySubscriptExpr 0x9b3ef78 <col:17, col:24> '<dependent type>' lvalue
        (DeclRefExpr 0x9b3ef44 <col:17> '_Tp [_Nm]':'_Tp [_Nm]' lvalue ParmVar 0x9b3ec90 '__b' '_Tp (&)[_Nm]')
        (DeclRefExpr 0x9b3ef5c <col:21> 'size_t':'unsigned int' lvalue Var 0x9b3edd0 '__n' 'size_t':'unsigned int')))))

;
}
namespace std {
    template <class _T1 = unsigned long long, class _T2 = unsigned long> struct pair
template <class _T1, class _T2> struct pair {
        struct pair;
        typedef _T1 first_type;
        typedef _T2 second_type;
        _T1 first;
        _T2 second;
        pair<_T1, _T2>() : first(), second() (CompoundStmt 0x9b3fb90 </usr/include/c++/4.6/bits/stl_pair.h:100:27, col:29>)


        pair<_T1, _T2>(const _T1 &__a, const _T2 &__b) : first((DeclRefExpr 0x9b3fba0 </usr/include/c++/4.6/bits/stl_pair.h:104:15> 'const _T1' lvalue ParmVar 0x9b3f580 '__a' 'const _T1 &')
), second((DeclRefExpr 0x9b3fbf8 </usr/include/c++/4.6/bits/stl_pair.h:104:28> 'const _T2' lvalue ParmVar 0x9b3f640 '__b' 'const _T2 &')
) (CompoundStmt 0x9b3fc50 </usr/include/c++/4.6/bits/stl_pair.h:104:33, col:35>)


        template <class _U1, class _U2> pair<_T1, _T2>(const pair<_U1, _U2> &__p) : first((CXXDependentScopeMemberExpr 0x9b3fc78 </usr/include/c++/4.6/bits/stl_pair.h:109:10, col:14> '<dependent type>' lvalue
  (DeclRefExpr 0x9b3fc60 <col:10> 'const pair<_U1, _U2>' lvalue ParmVar 0x9b3f9e0 '__p' 'const pair<_U1, _U2> &'))
), second((CXXDependentScopeMemberExpr 0x9b3fd00 </usr/include/c++/4.6/bits/stl_pair.h:109:29, col:33> '<dependent type>' lvalue
  (DeclRefExpr 0x9b3fce8 <col:29> 'const pair<_U1, _U2>' lvalue ParmVar 0x9b3f9e0 '__p' 'const pair<_U1, _U2> &'))
) (CompoundStmt 0x9b3fd80 </usr/include/c++/4.6/bits/stl_pair.h:109:41, col:43>)

;
    };
    template <class _T1, class _T2> inline bool operator==(const pair<_T1, _T2> &__x, const pair<_T1, _T2> &__y) (CompoundStmt 0x9b40458 </usr/include/c++/4.6/bits/stl_pair.h:202:5, col:66>
  (ReturnStmt 0x9b40448 <col:7, col:58>
    (BinaryOperator 0x9b40430 <col:14, col:58> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x9b40308 <col:14, col:31> '<dependent type>'
        (UnresolvedLookupExpr 0x9b402d0 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200)
        (CXXDependentScopeMemberExpr 0x9b40248 <col:14, col:18> '<dependent type>' lvalue
          (DeclRefExpr 0x9b40230 <col:14> 'const pair<_T1, _T2>' lvalue ParmVar 0x9b3ff90 '__x' 'const pair<_T1, _T2> &'))
        (CXXDependentScopeMemberExpr 0x9b40298 <col:27, col:31> '<dependent type>' lvalue
          (DeclRefExpr 0x9b4027c <col:27> 'const pair<_T1, _T2>' lvalue ParmVar 0x9b40100 '__y' 'const pair<_T1, _T2> &')))
      (CXXOperatorCallExpr 0x9b40408 <col:40, col:58> '<dependent type>'
        (UnresolvedLookupExpr 0x9b403d0 <col:51, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200)
        (CXXDependentScopeMemberExpr 0x9b40348 <col:40, col:44> '<dependent type>' lvalue
          (DeclRefExpr 0x9b4032c <col:40> 'const pair<_T1, _T2>' lvalue ParmVar 0x9b3ff90 '__x' 'const pair<_T1, _T2> &'))
        (CXXDependentScopeMemberExpr 0x9b40398 <col:54, col:58> '<dependent type>' lvalue
          (DeclRefExpr 0x9b4037c <col:54> 'const pair<_T1, _T2>' lvalue ParmVar 0x9b40100 '__y' 'const pair<_T1, _T2> &'))))))

;
    template <class _T1, class _T2> inline bool operator<(const pair<_T1, _T2> &__x, const pair<_T1, _T2> &__y) (CompoundStmt 0x9b40e88 </usr/include/c++/4.6/bits/stl_pair.h:208:5, line:209:65>
  (ReturnStmt 0x9b40e78 <line:208:7, line:209:62>
    (BinaryOperator 0x9b40e60 <line:208:14, line:209:62> '<dependent type>' '||'
      (CXXOperatorCallExpr 0x9b40bd8 <line:208:14, col:30> '<dependent type>'
        (UnresolvedLookupExpr 0x9b40ba0 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40ad0)
        (CXXDependentScopeMemberExpr 0x9b40b18 <col:14, col:18> '<dependent type>' lvalue
          (DeclRefExpr 0x9b40b00 <col:14> 'const pair<_T1, _T2>' lvalue ParmVar 0x9b40880 '__x' 'const pair<_T1, _T2> &'))
        (CXXDependentScopeMemberExpr 0x9b40b68 <col:26, col:30> '<dependent type>' lvalue
          (DeclRefExpr 0x9b40b4c <col:26> 'const pair<_T1, _T2>' lvalue ParmVar 0x9b409f0 '__y' 'const pair<_T1, _T2> &')))
      (ParenExpr 0x9b40e48 <line:209:10, col:62> '<dependent type>'
        (BinaryOperator 0x9b40e30 <col:11, col:56> '<dependent type>' '&&'
          (UnaryOperator 0x9b40d18 <col:11, col:34> '<dependent type>' prefix '!'
            (ParenExpr 0x9b40d00 <col:12, col:34> '<dependent type>'
              (CXXOperatorCallExpr 0x9b40cd8 <col:13, col:29> '<dependent type>'
                (UnresolvedLookupExpr 0x9b40ca0 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40ad0)
                (CXXDependentScopeMemberExpr 0x9b40c18 <col:13, col:17> '<dependent type>' lvalue
                  (DeclRefExpr 0x9b40bfc <col:13> 'const pair<_T1, _T2>' lvalue ParmVar 0x9b409f0 '__y' 'const pair<_T1, _T2> &'))
                (CXXDependentScopeMemberExpr 0x9b40c68 <col:25, col:29> '<dependent type>' lvalue
                  (DeclRefExpr 0x9b40c4c <col:25> 'const pair<_T1, _T2>' lvalue ParmVar 0x9b40880 '__x' 'const pair<_T1, _T2> &')))))
          (CXXOperatorCallExpr 0x9b40e08 <col:39, col:56> '<dependent type>'
            (UnresolvedLookupExpr 0x9b40dd0 <col:50, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40ad0)
            (CXXDependentScopeMemberExpr 0x9b40d48 <col:39, col:43> '<dependent type>' lvalue
              (DeclRefExpr 0x9b40d2c <col:39> 'const pair<_T1, _T2>' lvalue ParmVar 0x9b40880 '__x' 'const pair<_T1, _T2> &'))
            (CXXDependentScopeMemberExpr 0x9b40d98 <col:52, col:56> '<dependent type>' lvalue
              (DeclRefExpr 0x9b40d7c <col:52> 'const pair<_T1, _T2>' lvalue ParmVar 0x9b409f0 '__y' 'const pair<_T1, _T2> &'))))))))

;
    template <class _T1, class _T2> inline bool operator!=(const pair<_T1, _T2> &__x, const pair<_T1, _T2> &__y) (CompoundStmt 0x9b413d0 </usr/include/c++/4.6/bits/stl_pair.h:215:5, col:29>
  (ReturnStmt 0x9b413c0 <col:7, col:26>
    (UnaryOperator 0x9b413a8 <col:14, col:26> '<dependent type>' prefix '!'
      (ParenExpr 0x9b41390 <col:15, col:26> '<dependent type>'
        (CXXOperatorCallExpr 0x9b41368 <col:16, col:23> '<dependent type>'
          (UnresolvedLookupExpr 0x9b41330 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200)
          (DeclRefExpr 0x9b41300 <col:16> 'const pair<_T1, _T2>' lvalue ParmVar 0x9b41080 '__x' 'const pair<_T1, _T2> &')
          (DeclRefExpr 0x9b41318 <col:23> 'const pair<_T1, _T2>' lvalue ParmVar 0x9b411f0 '__y' 'const pair<_T1, _T2> &'))))))

;
    template <class _T1, class _T2> inline bool operator>(const pair<_T1, _T2> &__x, const pair<_T1, _T2> &__y) (CompoundStmt 0x9b42d40 </usr/include/c++/4.6/bits/stl_pair.h:221:5, col:25>
  (ReturnStmt 0x9b42d30 <col:7, col:20>
    (CXXOperatorCallExpr 0x9b42d08 <col:14, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0x9b42cd0 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40ad0)
      (DeclRefExpr 0x9b42ca0 <col:14> 'const pair<_T1, _T2>' lvalue ParmVar 0x9b41740 '__y' 'const pair<_T1, _T2> &')
      (DeclRefExpr 0x9b42cb8 <col:20> 'const pair<_T1, _T2>' lvalue ParmVar 0x9b415d0 '__x' 'const pair<_T1, _T2> &'))))

;
    template <class _T1, class _T2> inline bool operator<=(const pair<_T1, _T2> &__x, const pair<_T1, _T2> &__y) (CompoundStmt 0x9b43290 </usr/include/c++/4.6/bits/stl_pair.h:227:5, col:28>
  (ReturnStmt 0x9b43280 <col:7, col:25>
    (UnaryOperator 0x9b43268 <col:14, col:25> '<dependent type>' prefix '!'
      (ParenExpr 0x9b43250 <col:15, col:25> '<dependent type>'
        (CXXOperatorCallExpr 0x9b43228 <col:16, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0x9b431f0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40ad0)
          (DeclRefExpr 0x9b431c0 <col:16> 'const pair<_T1, _T2>' lvalue ParmVar 0x9b430b0 '__y' 'const pair<_T1, _T2> &')
          (DeclRefExpr 0x9b431d8 <col:22> 'const pair<_T1, _T2>' lvalue ParmVar 0x9b42f40 '__x' 'const pair<_T1, _T2> &'))))))

;
    template <class _T1, class _T2> inline bool operator>=(const pair<_T1, _T2> &__x, const pair<_T1, _T2> &__y) (CompoundStmt 0x9b437e0 </usr/include/c++/4.6/bits/stl_pair.h:233:5, col:28>
  (ReturnStmt 0x9b437d0 <col:7, col:25>
    (UnaryOperator 0x9b437b8 <col:14, col:25> '<dependent type>' prefix '!'
      (ParenExpr 0x9b437a0 <col:15, col:25> '<dependent type>'
        (CXXOperatorCallExpr 0x9b43778 <col:16, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0x9b43740 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40ad0)
          (DeclRefExpr 0x9b43710 <col:16> 'const pair<_T1, _T2>' lvalue ParmVar 0x9b43490 '__x' 'const pair<_T1, _T2> &')
          (DeclRefExpr 0x9b43728 <col:22> 'const pair<_T1, _T2>' lvalue ParmVar 0x9b43600 '__y' 'const pair<_T1, _T2> &'))))))

;
    template <class _T1, class _T2> inline pair<_T1, _T2> make_pair(_T1 __x, _T2 __y) (CompoundStmt 0x9b446d8 </usr/include/c++/4.6/bits/stl_pair.h:273:5, col:40>
  (ReturnStmt 0x9b446c8 <col:7, col:37>
    (CXXUnresolvedConstructExpr 0x9b446a8 <col:14, col:37> 'pair<_T1, _T2>'
      (DeclRefExpr 0x9b43c38 <col:29> '_T1' lvalue ParmVar 0x9b43990 '__x' '_T1')
      (DeclRefExpr 0x9b44690 <col:34> '_T2' lvalue ParmVar 0x9b439d0 '__y' '_T2'))))

;
}
namespace std {
    struct input_iterator_tag {
        struct input_iterator_tag;
    };
    struct output_iterator_tag {
        struct output_iterator_tag;
    };
    struct forward_iterator_tag : public std::input_iterator_tag {
        struct forward_iterator_tag;
    };
    struct bidirectional_iterator_tag : public std::forward_iterator_tag {
        struct bidirectional_iterator_tag;
    };
    struct random_access_iterator_tag : public std::bidirectional_iterator_tag {
        struct random_access_iterator_tag;
    };
    template <typename _Category = std::random_access_iterator_tag, typename _Tp = bool, typename _Distance = int, typename _Pointer = bool *, typename _Reference = bool &> struct iterator {
        struct iterator;
        typedef std::random_access_iterator_tag iterator_category;
        typedef bool value_type;
        typedef int difference_type;
        typedef bool *pointer;
        typedef bool &reference;
        inline iterator() throw() (CompoundStmt 0x9f2aca0 </usr/include/c++/4.6/bits/stl_iterator_base_types.h:118:12>)


        inline iterator(const std::iterator<std::random_access_iterator_tag, bool, int, bool *, bool &> &) throw() (CompoundStmt 0x9f2edc0 </usr/include/c++/4.6/bits/stl_iterator_base_types.h:118:12>)


    }
template <typename _Category = std::random_access_iterator_tag, typename _Tp = bool, typename _Distance = int, typename _Pointer = std::_Bit_reference *, typename _Reference = std::_Bit_reference> struct iterator {
        struct iterator;
        typedef std::random_access_iterator_tag iterator_category;
        typedef bool value_type;
        typedef int difference_type;
        typedef std::_Bit_reference *pointer;
        typedef std::_Bit_reference reference;
    }
template <typename _Category = std::random_access_iterator_tag, typename _Tp = bool, typename _Distance = int, typename _Pointer = const bool *, typename _Reference = bool> struct iterator {
        struct iterator;
        typedef std::random_access_iterator_tag iterator_category;
        typedef bool value_type;
        typedef int difference_type;
        typedef const bool *pointer;
        typedef bool reference;
    }
template <typename _Category = std::output_iterator_tag, typename _Tp = void, typename _Distance = void, typename _Pointer = void, typename _Reference = void> struct iterator {
        struct iterator;
        typedef std::output_iterator_tag iterator_category;
        typedef void value_type;
        typedef void difference_type;
        typedef void pointer;
        typedef void reference;
    }
template <typename _Category, typename _Tp, typename _Distance = ptrdiff_t, typename _Pointer = _Tp *, typename _Reference = _Tp &> struct iterator {
        struct iterator;
        typedef _Category iterator_category;
        typedef _Tp value_type;
        typedef _Distance difference_type;
        typedef _Pointer pointer;
        typedef _Reference reference;
    };
    template <typename _Iterator = std::_Bit_const_iterator> struct iterator_traits {
        struct iterator_traits;
        typedef typename _Bit_const_iterator::iterator_category iterator_category;
        typedef typename _Bit_const_iterator::value_type value_type;
        typedef typename _Bit_const_iterator::difference_type difference_type;
        typedef typename _Bit_const_iterator::pointer pointer;
        typedef typename _Bit_const_iterator::reference reference;
    }
template <typename _Iterator = std::_Bit_iterator> struct iterator_traits {
        struct iterator_traits;
        typedef typename _Bit_iterator::iterator_category iterator_category;
        typedef typename _Bit_iterator::value_type value_type;
        typedef typename _Bit_iterator::difference_type difference_type;
        typedef typename _Bit_iterator::pointer pointer;
        typedef typename _Bit_iterator::reference reference;
    }
template <typename _Iterator = wchar_t *> struct iterator_traits {
        struct iterator_traits;
        typedef std::random_access_iterator_tag iterator_category;
        typedef wchar_t value_type;
        typedef ptrdiff_t difference_type;
        typedef wchar_t *pointer;
        typedef wchar_t &reference;
    }
template <typename _Iterator> struct iterator_traits {
        struct iterator_traits;
        typedef typename _Iterator::iterator_category iterator_category;
        typedef typename _Iterator::value_type value_type;
        typedef typename _Iterator::difference_type difference_type;
        typedef typename _Iterator::pointer pointer;
        typedef typename _Iterator::reference reference;
    };
    struct iterator_traits {
        struct iterator_traits;
        typedef std::random_access_iterator_tag iterator_category;
        typedef _Tp value_type;
        typedef ptrdiff_t difference_type;
        typedef _Tp *pointer;
        typedef _Tp &reference;
    };
    struct iterator_traits {
        struct iterator_traits;
        typedef std::random_access_iterator_tag iterator_category;
        typedef _Tp value_type;
        typedef ptrdiff_t difference_type;
        typedef const _Tp *pointer;
        typedef const _Tp &reference;
    };
    template <typename _Iter> inline typename iterator_traits<_Iter>::iterator_category __iterator_category(const _Iter &) (CompoundStmt 0x9b4b010 </usr/include/c++/4.6/bits/stl_iterator_base_types.h:202:5, col:68>
  (ReturnStmt 0x9b4b000 <col:7, col:65>
    (CXXUnresolvedConstructExpr 0x9b4afe8 <col:14, col:65> 'typename iterator_traits<_Iter>::iterator_category')))

;
    template <typename _Iterator = unsigned long *, bool _HasBase = false> struct _Iter_base {
        struct _Iter_base;
        typedef unsigned long *iterator_type;
        static iterator_type _S_base(unsigned long *__it) (CompoundStmt 0x9fc9e58 </usr/include/c++/4.6/bits/stl_iterator_base_types.h:213:7, col:22>
  (ReturnStmt 0x9fc9e48 <col:9, col:16>
    (ImplicitCastExpr 0x9fc9e38 <col:16> 'unsigned long *':'unsigned long *' <LValueToRValue>
      (DeclRefExpr 0x9fc9e1c <col:16> 'unsigned long *':'unsigned long *' lvalue ParmVar 0x9fc7920 '__it' 'unsigned long *':'unsigned long *'))))


    }
template <typename _Iterator, bool _HasBase> struct _Iter_base {
        struct _Iter_base;
        typedef _Iterator iterator_type;
        static iterator_type _S_base(_Iterator __it) (CompoundStmt 0x9b4b4d8 </usr/include/c++/4.6/bits/stl_iterator_base_types.h:213:7, col:22>
  (ReturnStmt 0x9b4b4c8 <col:9, col:16>
    (DeclRefExpr 0x9b4b4b0 <col:16> '_Iterator' lvalue ParmVar 0x9b4b390 '__it' '_Iterator')))


    };
    struct _Iter_base {
        struct _Iter_base;
        typedef typename _Iterator::iterator_type iterator_type;
        static iterator_type _S_base(_Iterator __it) (CompoundStmt 0x9b4bb00 </usr/include/c++/4.6/bits/stl_iterator_base_types.h:221:7, col:29>
  (ReturnStmt 0x9b4baf0 <col:9, col:26>
    (CallExpr 0x9b4bad0 <col:16, col:26> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9b4ba98 <col:16, col:21> '<dependent type>' lvalue
        (DeclRefExpr 0x9b4ba80 <col:16> '_Iterator' lvalue ParmVar 0x9b4b960 '__it' '_Iterator')))))


    };
}
namespace std {
    template <typename _InputIterator> inline typename iterator_traits<_InputIterator>::difference_type __distance(_InputIterator __first, _InputIterator __last, std::input_iterator_tag) (CompoundStmt 0x9b4e488 </usr/include/c++/4.6/bits/stl_iterator_base_funcs.h:74:5, line:85:5>
  (DeclStmt 0x9b4e330 <line:78:7, col:72>
    0x9b4e2e0 "typename iterator_traits<_InputIterator>::difference_type __n =
      (IntegerLiteral 0x9b4e318 <col:71> 'int' 0)")
  (WhileStmt 0x9b4e448 <line:79:7, line:83:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9b4e3a8 <line:79:14, col:25> '<dependent type>'
      (UnresolvedLookupExpr 0x9b4e370 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b412d0)
      (DeclRefExpr 0x9b4e340 <col:14> '_InputIterator' lvalue ParmVar 0x9b4bd20 '__first' '_InputIterator')
      (DeclRefExpr 0x9b4e358 <col:25> '_InputIterator' lvalue ParmVar 0x9b4bd60 '__last' '_InputIterator'))
    (CompoundStmt 0x9b4e430 <line:80:2, line:83:2>
      (UnaryOperator 0x9b4e3e8 <line:81:4, col:6> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9b4e3cc <col:6> '_InputIterator' lvalue ParmVar 0x9b4bd20 '__first' '_InputIterator'))
      (UnaryOperator 0x9b4e418 <line:82:4, col:6> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9b4e3fc <col:6> 'typename iterator_traits<_InputIterator>::difference_type' lvalue Var 0x9b4e2e0 '__n' 'typename iterator_traits<_InputIterator>::difference_type'))))
  (ReturnStmt 0x9b4e478 <line:84:7, col:14>
    (DeclRefExpr 0x9b4e45c <col:14> 'typename iterator_traits<_InputIterator>::difference_type' lvalue Var 0x9b4e2e0 '__n' 'typename iterator_traits<_InputIterator>::difference_type')))

;
    template <typename _RandomAccessIterator> inline typename iterator_traits<_RandomAccessIterator>::difference_type __distance(_RandomAccessIterator __first, _RandomAccessIterator __last, std::random_access_iterator_tag) (CompoundStmt 0x9b4e820 </usr/include/c++/4.6/bits/stl_iterator_base_funcs.h:91:5, line:96:5>
  (ReturnStmt 0x9b4e810 <line:95:7, col:23>
    (BinaryOperator 0x9b4e7f8 <col:14, col:23> '<dependent type>' '-'
      (DeclRefExpr 0x9b4e7c4 <col:14> '_RandomAccessIterator' lvalue ParmVar 0x9b4e620 '__last' '_RandomAccessIterator')
      (DeclRefExpr 0x9b4e7dc <col:23> '_RandomAccessIterator' lvalue ParmVar 0x9b4e5e0 '__first' '_RandomAccessIterator'))))

;
    template <typename _InputIterator> inline typename iterator_traits<_InputIterator>::difference_type distance(_InputIterator __first, _InputIterator __last) (CompoundStmt 0x9b4ec40 </usr/include/c++/4.6/bits/stl_iterator_base_funcs.h:113:5, line:117:5>
  (ReturnStmt 0x9b4ec30 <line:115:7, line:116:42>
    (CallExpr 0x9b4ec08 <line:115:14, line:116:42> '<dependent type>'
      (UnresolvedLookupExpr 0x9b4eb18 <line:115:14, col:19> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b4e1c0 0x9b4e790)
      (DeclRefExpr 0x9b4eb50 <col:30> '_InputIterator' lvalue ParmVar 0x9b4e970 '__first' '_InputIterator')
      (DeclRefExpr 0x9b4eb68 <col:39> '_InputIterator' lvalue ParmVar 0x9b4e9b0 '__last' '_InputIterator')
      (CallExpr 0x9b4ebe8 <line:116:9, col:41> '<dependent type>'
        (UnresolvedLookupExpr 0x9b4eb98 <col:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b4aed0)
        (DeclRefExpr 0x9b4ebcc <col:34> '_InputIterator' lvalue ParmVar 0x9b4e970 '__first' '_InputIterator')))))

;
    template <typename _InputIterator, typename _Distance> inline void __advance(_InputIterator &__i, _Distance __n, std::input_iterator_tag) (CompoundStmt 0x9b4efa8 </usr/include/c++/4.6/bits/stl_iterator_base_funcs.h:122:5, line:127:5>
  (WhileStmt 0x9b4ef90 <line:125:7, line:126:4>
    <<<NULL>>>
    (UnaryOperator 0x9b4ef48 <line:125:14, col:17> '<dependent type>' postfix '--'
      (DeclRefExpr 0x9b4ef14 <col:14> '_Distance' lvalue ParmVar 0x9b4ed80 '__n' '_Distance'))
    (UnaryOperator 0x9b4ef78 <line:126:2, col:4> '<dependent type>' prefix '++'
      (DeclRefExpr 0x9b4ef5c <col:4> '_InputIterator' lvalue ParmVar 0x9b4ed40 '__i' '_InputIterator &'))))

;
    template <typename _BidirectionalIterator, typename _Distance> inline void __advance(_BidirectionalIterator &__i, _Distance __n, std::bidirectional_iterator_tag) (CompoundStmt 0x9b50cf8 </usr/include/c++/4.6/bits/stl_iterator_base_funcs.h:133:5, line:143:5>
  (IfStmt 0x9b50cd8 <line:137:7, line:142:6>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9b50b90 <line:137:11, col:17> '<dependent type>'
      (UnresolvedLookupExpr 0x9b50b58 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b42c70)
      (DeclRefExpr 0x9b50b24 <col:11> '_Distance' lvalue ParmVar 0x9b4f0e0 '__n' '_Distance')
      (IntegerLiteral 0x9b50b40 <col:17> 'int' 0))
    (WhileStmt 0x9b50c30 <line:138:9, line:139:6>
      <<<NULL>>>
      (UnaryOperator 0x9b50be8 <line:138:16, col:19> '<dependent type>' postfix '--'
        (DeclRefExpr 0x9b50bb4 <col:16> '_Distance' lvalue ParmVar 0x9b4f0e0 '__n' '_Distance'))
      (UnaryOperator 0x9b50c18 <line:139:4, col:6> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9b50bfc <col:6> '_BidirectionalIterator' lvalue ParmVar 0x9b4f0a0 '__i' '_BidirectionalIterator &')))
    (WhileStmt 0x9b50cc0 <line:141:9, line:142:6>
      <<<NULL>>>
      (UnaryOperator 0x9b50c78 <line:141:16, col:19> '<dependent type>' postfix '++'
        (DeclRefExpr 0x9b50c44 <col:16> '_Distance' lvalue ParmVar 0x9b4f0e0 '__n' '_Distance'))
      (UnaryOperator 0x9b50ca8 <line:142:4, col:6> '<dependent type>' prefix '--'
        (DeclRefExpr 0x9b50c8c <col:6> '_BidirectionalIterator' lvalue ParmVar 0x9b4f0a0 '__i' '_BidirectionalIterator &')))))

;
    template <typename _RandomAccessIterator, typename _Distance> inline void __advance(_RandomAccessIterator &__i, _Distance __n, std::random_access_iterator_tag) (CompoundStmt 0x9b51018 </usr/include/c++/4.6/bits/stl_iterator_base_funcs.h:149:5, line:154:5>
  (CompoundAssignOperator 0x9b50ff8 <line:153:7, col:14> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (DeclRefExpr 0x9b50fc4 <col:7> '_RandomAccessIterator' lvalue ParmVar 0x9b50df0 '__i' '_RandomAccessIterator &')
    (DeclRefExpr 0x9b50fdc <col:14> '_Distance' lvalue ParmVar 0x9b50e30 '__n' '_Distance')))

;
    template <typename _InputIterator, typename _Distance> inline void advance(_InputIterator &__i, _Distance __n) (CompoundStmt 0x9b51518 </usr/include/c++/4.6/bits/stl_iterator_base_funcs.h:171:5, line:175:5>
  (DeclStmt 0x9b513c0 <line:173:7, col:74>
    0x9b51370 "typename iterator_traits<_InputIterator>::difference_type __d =
      (DeclRefExpr 0x9b513a4 <col:71> '_Distance' lvalue ParmVar 0x9b51150 '__n' '_Distance')")
  (CallExpr 0x9b514f0 <line:174:7, col:61> '<dependent type>'
    (UnresolvedLookupExpr 0x9b513f8 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b4eee0 0x9b50af0 0x9b50f90)
    (DeclRefExpr 0x9b51434 <col:22> '_InputIterator' lvalue ParmVar 0x9b51110 '__i' '_InputIterator &')
    (DeclRefExpr 0x9b5144c <col:27> 'typename iterator_traits<_InputIterator>::difference_type' lvalue Var 0x9b51370 '__d' 'typename iterator_traits<_InputIterator>::difference_type')
    (CallExpr 0x9b514d0 <col:32, col:60> '<dependent type>'
      (UnresolvedLookupExpr 0x9b51480 <col:32, col:37> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b4aed0)
      (DeclRefExpr 0x9b514b4 <col:57> '_InputIterator' lvalue ParmVar 0x9b51110 '__i' '_InputIterator &'))))

;
}
namespace std {
    template <typename _Iterator = __gnu_cxx::__normal_iterator<const wchar_t *, std::basic_string<wchar_t> >> class reverse_iterator
template <typename _Iterator = std::_Bit_const_iterator> class reverse_iterator : public iterator<typename iterator_traits<_Bit_const_iterator>::iterator_category, typename iterator_traits<_Bit_const_iterator>::value_type, typename iterator_traits<_Bit_const_iterator>::difference_type, typename iterator_traits<_Bit_const_iterator>::pointer, typename iterator_traits<_Bit_const_iterator>::reference> {
        class reverse_iterator;
    protected:
    protected:
        std::_Bit_const_iterator current;
        typedef iterator_traits<std::_Bit_const_iterator> __traits_type;
    public:
    public:
        typedef std::_Bit_const_iterator iterator_type;
        typedef typename __traits_type::difference_type difference_type;
        typedef typename __traits_type::pointer pointer;
        typedef typename __traits_type::reference reference;
        reverse_iterator();
        reverse_iterator(iterator_type __x);
        reverse_iterator(const std::reverse_iterator<std::_Bit_const_iterator> &__x);
        template <typename _Iter = std::_Bit_const_iterator> reverse_iterator(const reverse_iterator<std::_Bit_const_iterator> &__x)template <typename _Iter> reverse_iterator(const reverse_iterator<_Iter> &__x);
        iterator_type base() const;
        reference operator*() const;
        pointer operator->() const;
        std::reverse_iterator<std::_Bit_const_iterator> &operator++();
        std::reverse_iterator<std::_Bit_const_iterator> operator++(int);
        std::reverse_iterator<std::_Bit_const_iterator> &operator--();
        std::reverse_iterator<std::_Bit_const_iterator> operator--(int);
        std::reverse_iterator<std::_Bit_const_iterator> operator+(difference_type __n) const;
        std::reverse_iterator<std::_Bit_const_iterator> &operator+=(difference_type __n);
        std::reverse_iterator<std::_Bit_const_iterator> operator-(difference_type __n) const;
        std::reverse_iterator<std::_Bit_const_iterator> &operator-=(difference_type __n);
        reference operator[](difference_type __n) const;
    }
template <typename _Iterator = std::_Bit_iterator> class reverse_iterator : public iterator<typename iterator_traits<_Bit_iterator>::iterator_category, typename iterator_traits<_Bit_iterator>::value_type, typename iterator_traits<_Bit_iterator>::difference_type, typename iterator_traits<_Bit_iterator>::pointer, typename iterator_traits<_Bit_iterator>::reference> {
        class reverse_iterator;
    protected:
    protected:
        std::_Bit_iterator current;
        typedef iterator_traits<std::_Bit_iterator> __traits_type;
    public:
    public:
        typedef std::_Bit_iterator iterator_type;
        typedef typename __traits_type::difference_type difference_type;
        typedef typename __traits_type::pointer pointer;
        typedef typename __traits_type::reference reference;
        reverse_iterator();
        reverse_iterator(iterator_type __x);
        reverse_iterator(const std::reverse_iterator<std::_Bit_iterator> &__x);
        template <typename _Iter = std::_Bit_iterator> reverse_iterator(const reverse_iterator<std::_Bit_iterator> &__x)template <typename _Iter> reverse_iterator(const reverse_iterator<_Iter> &__x);
        iterator_type base() const;
        reference operator*() const;
        pointer operator->() const;
        std::reverse_iterator<std::_Bit_iterator> &operator++();
        std::reverse_iterator<std::_Bit_iterator> operator++(int);
        std::reverse_iterator<std::_Bit_iterator> &operator--();
        std::reverse_iterator<std::_Bit_iterator> operator--(int);
        std::reverse_iterator<std::_Bit_iterator> operator+(difference_type __n) const;
        std::reverse_iterator<std::_Bit_iterator> &operator+=(difference_type __n);
        std::reverse_iterator<std::_Bit_iterator> operator-(difference_type __n) const;
        std::reverse_iterator<std::_Bit_iterator> &operator-=(difference_type __n);
        reference operator[](difference_type __n) const;
    }
template <typename _Iterator = __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >> class reverse_iterator
template <typename _Iterator = __gnu_cxx::__normal_iterator<wchar_t *, std::basic_string<wchar_t> >> class reverse_iterator
template <typename _Iterator = __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >> class reverse_iterator
template <typename _Iterator> class reverse_iterator : public iterator<typename iterator_traits<_Iterator>::iterator_category, typename iterator_traits<_Iterator>::value_type, typename iterator_traits<_Iterator>::difference_type, typename iterator_traits<_Iterator>::pointer, typename iterator_traits<_Iterator>::reference> {
        class reverse_iterator;
    protected:
    protected:
        _Iterator current;
        typedef iterator_traits<_Iterator> __traits_type;
    public:
    public:
        typedef _Iterator iterator_type;
        typedef typename __traits_type::difference_type difference_type;
        typedef typename __traits_type::pointer pointer;
        typedef typename __traits_type::reference reference;
        reverse_iterator<_Iterator>() : current() (CompoundStmt 0x9b54b10 </usr/include/c++/4.6/bits/stl_iterator.h:121:38, col:40>)


        reverse_iterator<_Iterator>(iterator_type __x) : current((DeclRefExpr 0x9b54b20 </usr/include/c++/4.6/bits/stl_iterator.h:127:53> 'iterator_type':'_Iterator' lvalue ParmVar 0x9b530e0 '__x' 'iterator_type':'_Iterator')
) (CompoundStmt 0x9b54b80 </usr/include/c++/4.6/bits/stl_iterator.h:127:58, col:60>)


        reverse_iterator<_Iterator>(const reverse_iterator<_Iterator> &__x) : current((CXXDependentScopeMemberExpr 0x9b54ba8 </usr/include/c++/4.6/bits/stl_iterator.h:133:17, col:21> '<dependent type>' lvalue
  (DeclRefExpr 0x9b54b90 <col:17> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x9b53220 '__x' 'const reverse_iterator<_Iterator> &'))
) (CompoundStmt 0x9b54c20 </usr/include/c++/4.6/bits/stl_iterator.h:133:30, col:32>)


        template <typename _Iter> reverse_iterator<_Iterator>(const reverse_iterator<_Iter> &__x) : current((CallExpr 0x9b54c80 </usr/include/c++/4.6/bits/stl_iterator.h:141:12, col:21> '<dependent type>'
  (CXXDependentScopeMemberExpr 0x9b54c48 <col:12, col:16> '<dependent type>' lvalue
    (DeclRefExpr 0x9b54c30 <col:12> 'const reverse_iterator<_Iter>' lvalue ParmVar 0x9b53480 '__x' 'const reverse_iterator<_Iter> &')))
) (CompoundStmt 0x9b54ce0 </usr/include/c++/4.6/bits/stl_iterator.h:141:24, col:26>)

;
        iterator_type base() const (CompoundStmt 0x9b54d68 </usr/include/c++/4.6/bits/stl_iterator.h:148:7, col:25>
  (ReturnStmt 0x9b54d58 <col:9, col:16>
    (MemberExpr 0x9b54d34 <col:16> 'const _Iterator' lvalue ->current 0x9b52cc0
      (CXXThisExpr 0x9b54d08 <col:16> 'const reverse_iterator<_Iterator> *' this))))


        reference operator*() const (CompoundStmt 0x9b54e60 </usr/include/c++/4.6/bits/stl_iterator.h:157:7, line:160:7>
  (DeclStmt 0x9b54df8 <line:158:2, col:27>
    0x9b54d90 "_Iterator __tmp =
      (MemberExpr 0x9b54dd8 <col:20> 'const _Iterator' lvalue ->current 0x9b52cc0
        (CXXThisExpr 0x9b54dc8 <col:20> 'const reverse_iterator<_Iterator> *' this))")
  (ReturnStmt 0x9b54e50 <line:159:2, col:12>
    (UnaryOperator 0x9b54e38 <col:9, col:12> '<dependent type>' prefix '*'
      (UnaryOperator 0x9b54e20 <col:10, col:12> '<dependent type>' prefix '--'
        (DeclRefExpr 0x9b54e08 <col:12> '_Iterator' lvalue Var 0x9b54d90 '__tmp' '_Iterator')))))


        pointer operator->() const (CompoundStmt 0x9b54f08 </usr/include/c++/4.6/bits/stl_iterator.h:169:7, col:32>
  (ReturnStmt 0x9b54ef8 <col:9, col:29>
    (UnaryOperator 0x9b54ee0 <col:16, col:29> '<dependent type>' prefix '&'
      (ParenExpr 0x9b54ec8 <col:17, col:29> '<dependent type>'
        (CallExpr 0x9b54ea8 <col:18, col:28> '<dependent type>'
          (MemberExpr 0x9b54e88 <col:18, col:26> '<bound member function type>' ->operator* 0x9b541f0
            (CXXThisExpr 0x9b54e78 <col:18> 'const reverse_iterator<_Iterator> *' this)))))))


        reverse_iterator<_Iterator> &operator++() (CompoundStmt 0x9b54fa0 </usr/include/c++/4.6/bits/stl_iterator.h:178:7, line:181:7>
  (UnaryOperator 0x9b54f50 <line:179:2, col:4> '<dependent type>' prefix '--'
    (MemberExpr 0x9b54f30 <col:4> '_Iterator' lvalue ->current 0x9b52cc0
      (CXXThisExpr 0x9b54f20 <col:4> 'reverse_iterator<_Iterator> *' this)))
  (ReturnStmt 0x9b54f90 <line:180:2, col:10>
    (UnaryOperator 0x9b54f78 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9b54f68 <col:10> 'reverse_iterator<_Iterator> *' this))))


        reverse_iterator<_Iterator> operator++(int) (CompoundStmt 0x9b550a0 </usr/include/c++/4.6/bits/stl_iterator.h:190:7, line:194:7>
  (DeclStmt 0x9b55020 <line:191:2, col:32>
    0x9b54fc0 "reverse_iterator<_Iterator> __tmp =
      (UnaryOperator 0x9b55008 <col:27, col:28> '<dependent type>' prefix '*'
        (CXXThisExpr 0x9b54ff8 <col:28> 'reverse_iterator<_Iterator> *' this))")
  (UnaryOperator 0x9b55060 <line:192:2, col:4> '<dependent type>' prefix '--'
    (MemberExpr 0x9b55040 <col:4> '_Iterator' lvalue ->current 0x9b52cc0
      (CXXThisExpr 0x9b55030 <col:4> 'reverse_iterator<_Iterator> *' this)))
  (ReturnStmt 0x9b55090 <line:193:2, col:9>
    (DeclRefExpr 0x9b55074 <col:9> 'reverse_iterator<_Iterator>' lvalue Var 0x9b54fc0 '__tmp' 'reverse_iterator<_Iterator>')))


        reverse_iterator<_Iterator> &operator--() (CompoundStmt 0x9b55140 </usr/include/c++/4.6/bits/stl_iterator.h:203:7, line:206:7>
  (UnaryOperator 0x9b550f0 <line:204:2, col:4> '<dependent type>' prefix '++'
    (MemberExpr 0x9b550d0 <col:4> '_Iterator' lvalue ->current 0x9b52cc0
      (CXXThisExpr 0x9b550c0 <col:4> 'reverse_iterator<_Iterator> *' this)))
  (ReturnStmt 0x9b55130 <line:205:2, col:10>
    (UnaryOperator 0x9b55118 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9b55108 <col:10> 'reverse_iterator<_Iterator> *' this))))


        reverse_iterator<_Iterator> operator--(int) (CompoundStmt 0x9b570e8 </usr/include/c++/4.6/bits/stl_iterator.h:215:7, line:219:7>
  (DeclStmt 0x9b551c0 <line:216:2, col:32>
    0x9b55160 "reverse_iterator<_Iterator> __tmp =
      (UnaryOperator 0x9b551a8 <col:27, col:28> '<dependent type>' prefix '*'
        (CXXThisExpr 0x9b55198 <col:28> 'reverse_iterator<_Iterator> *' this))")
  (UnaryOperator 0x9b570a8 <line:217:2, col:4> '<dependent type>' prefix '++'
    (MemberExpr 0x9b57088 <col:4> '_Iterator' lvalue ->current 0x9b52cc0
      (CXXThisExpr 0x9b551d0 <col:4> 'reverse_iterator<_Iterator> *' this)))
  (ReturnStmt 0x9b570d8 <line:218:2, col:9>
    (DeclRefExpr 0x9b570bc <col:9> 'reverse_iterator<_Iterator>' lvalue Var 0x9b55160 '__tmp' 'reverse_iterator<_Iterator>')))


        reverse_iterator<_Iterator> operator+(difference_type __n) const (CompoundStmt 0x9b571a0 </usr/include/c++/4.6/bits/stl_iterator.h:228:7, col:49>
  (ReturnStmt 0x9b57190 <col:9, col:46>
    (CXXUnresolvedConstructExpr 0x9b57170 <col:16, col:46> 'reverse_iterator<_Iterator>'
      (BinaryOperator 0x9b57158 <col:33, col:43> '<dependent type>' '-'
        (MemberExpr 0x9b57120 <col:33> 'const _Iterator' lvalue ->current 0x9b52cc0
          (CXXThisExpr 0x9b57110 <col:33> 'const reverse_iterator<_Iterator> *' this))
        (DeclRefExpr 0x9b57140 <col:43> 'difference_type':'typename __traits_type::difference_type' lvalue ParmVar 0x9b54620 '__n' 'difference_type':'typename __traits_type::difference_type')))))


        reverse_iterator<_Iterator> &operator+=(difference_type __n) (CompoundStmt 0x9b57258 </usr/include/c++/4.6/bits/stl_iterator.h:237:7, line:240:7>
  (CompoundAssignOperator 0x9b57200 <line:238:2, col:13> '<dependent type>' lvalue '-=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (MemberExpr 0x9b571c8 <col:2> '_Iterator' lvalue ->current 0x9b52cc0
      (CXXThisExpr 0x9b571b8 <col:2> 'reverse_iterator<_Iterator> *' this))
    (DeclRefExpr 0x9b571e8 <col:13> 'difference_type':'typename __traits_type::difference_type' lvalue ParmVar 0x9b54730 '__n' 'difference_type':'typename __traits_type::difference_type'))
  (ReturnStmt 0x9b57248 <line:239:2, col:10>
    (UnaryOperator 0x9b57230 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9b57220 <col:10> 'reverse_iterator<_Iterator> *' this))))


        reverse_iterator<_Iterator> operator-(difference_type __n) const (CompoundStmt 0x9b57308 </usr/include/c++/4.6/bits/stl_iterator.h:249:7, col:49>
  (ReturnStmt 0x9b572f8 <col:9, col:46>
    (CXXUnresolvedConstructExpr 0x9b572d8 <col:16, col:46> 'reverse_iterator<_Iterator>'
      (BinaryOperator 0x9b572c0 <col:33, col:43> '<dependent type>' '+'
        (MemberExpr 0x9b57288 <col:33> 'const _Iterator' lvalue ->current 0x9b52cc0
          (CXXThisExpr 0x9b57278 <col:33> 'const reverse_iterator<_Iterator> *' this))
        (DeclRefExpr 0x9b572a8 <col:43> 'difference_type':'typename __traits_type::difference_type' lvalue ParmVar 0x9b54840 '__n' 'difference_type':'typename __traits_type::difference_type')))))


        reverse_iterator<_Iterator> &operator-=(difference_type __n) (CompoundStmt 0x9b573c0 </usr/include/c++/4.6/bits/stl_iterator.h:258:7, line:261:7>
  (CompoundAssignOperator 0x9b57368 <line:259:2, col:13> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (MemberExpr 0x9b57330 <col:2> '_Iterator' lvalue ->current 0x9b52cc0
      (CXXThisExpr 0x9b57320 <col:2> 'reverse_iterator<_Iterator> *' this))
    (DeclRefExpr 0x9b57350 <col:13> 'difference_type':'typename __traits_type::difference_type' lvalue ParmVar 0x9b54900 '__n' 'difference_type':'typename __traits_type::difference_type'))
  (ReturnStmt 0x9b573b0 <line:260:2, col:10>
    (UnaryOperator 0x9b57398 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9b57388 <col:10> 'reverse_iterator<_Iterator> *' this))))


        reference operator[](difference_type __n) const (CompoundStmt 0x9b57470 </usr/include/c++/4.6/bits/stl_iterator.h:270:7, col:32>
  (ReturnStmt 0x9b57460 <col:9, col:29>
    (UnaryOperator 0x9b57448 <col:16, col:29> '<dependent type>' prefix '*'
      (ParenExpr 0x9b57430 <col:17, col:29> '<dependent type>'
        (BinaryOperator 0x9b57418 <col:18, col:26> '<dependent type>' '+'
          (UnaryOperator 0x9b573e8 <col:18, col:19> '<dependent type>' prefix '*'
            (CXXThisExpr 0x9b573d8 <col:19> 'const reverse_iterator<_Iterator> *' this))
          (DeclRefExpr 0x9b573fc <col:26> 'difference_type':'typename __traits_type::difference_type' lvalue ParmVar 0x9b549d0 '__n' 'difference_type':'typename __traits_type::difference_type'))))))


    };
    template <typename _Iterator> inline bool operator==(const reverse_iterator<_Iterator> &__x, const reverse_iterator<_Iterator> &__y) (CompoundStmt 0x9b57950 </usr/include/c++/4.6/bits/stl_iterator.h:287:5, col:40>
  (ReturnStmt 0x9b57940 <col:7, col:37>
    (CXXOperatorCallExpr 0x9b57918 <col:14, col:37> '<dependent type>'
      (UnresolvedLookupExpr 0x9b578e0 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b577d0 0x9b40200)
      (CallExpr 0x9b57850 <col:14, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9b57818 <col:14, col:18> '<dependent type>' lvalue
          (DeclRefExpr 0x9b57800 <col:14> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x9b575d0 '__x' 'const reverse_iterator<_Iterator> &')))
      (CallExpr 0x9b578c0 <col:28, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9b57888 <col:28, col:32> '<dependent type>' lvalue
          (DeclRefExpr 0x9b5786c <col:28> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x9b576d0 '__y' 'const reverse_iterator<_Iterator> &'))))))

;
    template <typename _Iterator> inline bool operator<(const reverse_iterator<_Iterator> &__x, const reverse_iterator<_Iterator> &__y) (CompoundStmt 0x9b57df0 </usr/include/c++/4.6/bits/stl_iterator.h:293:5, col:39>
  (ReturnStmt 0x9b57de0 <col:7, col:36>
    (CXXOperatorCallExpr 0x9b57db8 <col:14, col:36> '<dependent type>'
      (UnresolvedLookupExpr 0x9b57d80 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b57c70 0x9b40ad0)
      (CallExpr 0x9b57cf0 <col:14, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9b57cb8 <col:14, col:18> '<dependent type>' lvalue
          (DeclRefExpr 0x9b57ca0 <col:14> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x9b57b90 '__y' 'const reverse_iterator<_Iterator> &')))
      (CallExpr 0x9b57d60 <col:27, col:36> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9b57d28 <col:27, col:31> '<dependent type>' lvalue
          (DeclRefExpr 0x9b57d0c <col:27> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x9b57a90 '__x' 'const reverse_iterator<_Iterator> &'))))))

;
    template <typename _Iterator> inline bool operator!=(const reverse_iterator<_Iterator> &__x, const reverse_iterator<_Iterator> &__y) (CompoundStmt 0x9ac80a0 </usr/include/c++/4.6/bits/stl_iterator.h:299:5, col:29>
  (ReturnStmt 0x9ac8090 <col:7, col:26>
    (UnaryOperator 0x9ac8078 <col:14, col:26> '<dependent type>' prefix '!'
      (ParenExpr 0x9ac8060 <col:15, col:26> '<dependent type>'
        (CXXOperatorCallExpr 0x9ac8038 <col:16, col:23> '<dependent type>'
          (UnresolvedLookupExpr 0x9ac8000 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b577d0 0x9b40200)
          (DeclRefExpr 0x9ac7fd0 <col:16> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x9b57f30 '__x' 'const reverse_iterator<_Iterator> &')
          (DeclRefExpr 0x9ac7fe8 <col:23> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x9b58030 '__y' 'const reverse_iterator<_Iterator> &'))))))

;
    template <typename _Iterator> inline bool operator>(const reverse_iterator<_Iterator> &__x, const reverse_iterator<_Iterator> &__y) (CompoundStmt 0x9ac8490 </usr/include/c++/4.6/bits/stl_iterator.h:305:5, col:25>
  (ReturnStmt 0x9ac8480 <col:7, col:20>
    (CXXOperatorCallExpr 0x9ac8458 <col:14, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0x9ac8420 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b57c70 0x9b40ad0)
      (DeclRefExpr 0x9ac83f0 <col:14> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x9ac82e0 '__y' 'const reverse_iterator<_Iterator> &')
      (DeclRefExpr 0x9ac8408 <col:20> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x9ac81e0 '__x' 'const reverse_iterator<_Iterator> &'))))

;
    template <typename _Iterator> inline bool operator<=(const reverse_iterator<_Iterator> &__x, const reverse_iterator<_Iterator> &__y) (CompoundStmt 0x9ac88b0 </usr/include/c++/4.6/bits/stl_iterator.h:311:5, col:28>
  (ReturnStmt 0x9ac88a0 <col:7, col:25>
    (UnaryOperator 0x9ac8888 <col:14, col:25> '<dependent type>' prefix '!'
      (ParenExpr 0x9ac8870 <col:15, col:25> '<dependent type>'
        (CXXOperatorCallExpr 0x9ac8848 <col:16, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0x9ac8810 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b57c70 0x9b40ad0)
          (DeclRefExpr 0x9ac87e0 <col:16> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x9ac86d0 '__y' 'const reverse_iterator<_Iterator> &')
          (DeclRefExpr 0x9ac87f8 <col:22> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x9ac85d0 '__x' 'const reverse_iterator<_Iterator> &'))))))

;
    template <typename _Iterator> inline bool operator>=(const reverse_iterator<_Iterator> &__x, const reverse_iterator<_Iterator> &__y) (CompoundStmt 0x9ac8cd0 </usr/include/c++/4.6/bits/stl_iterator.h:317:5, col:28>
  (ReturnStmt 0x9ac8cc0 <col:7, col:25>
    (UnaryOperator 0x9ac8ca8 <col:14, col:25> '<dependent type>' prefix '!'
      (ParenExpr 0x9ac8c90 <col:15, col:25> '<dependent type>'
        (CXXOperatorCallExpr 0x9ac8c68 <col:16, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0x9ac8c30 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b57c70 0x9b40ad0)
          (DeclRefExpr 0x9ac8c00 <col:16> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x9ac89f0 '__x' 'const reverse_iterator<_Iterator> &')
          (DeclRefExpr 0x9ac8c18 <col:22> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x9ac8af0 '__y' 'const reverse_iterator<_Iterator> &'))))))

;
    template <typename _Iterator> inline typename reverse_iterator<_Iterator>::difference_type operator-(const reverse_iterator<_Iterator> &__x, const reverse_iterator<_Iterator> &__y) (CompoundStmt 0x9b5cea0 </usr/include/c++/4.6/bits/stl_iterator.h:323:5, col:39>
  (ReturnStmt 0x9b5ce90 <col:7, col:36>
    (CXXOperatorCallExpr 0x9b5ce68 <col:14, col:36> '<dependent type>'
      (UnresolvedLookupExpr 0x9b5ce30 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20)
      (CallExpr 0x9b5cda0 <col:14, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9b5cd68 <col:14, col:18> '<dependent type>' lvalue
          (DeclRefExpr 0x9b5cd50 <col:14> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x9b5cc10 '__y' 'const reverse_iterator<_Iterator> &')))
      (CallExpr 0x9b5ce10 <col:27, col:36> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9b5cdd8 <col:27, col:31> '<dependent type>' lvalue
          (DeclRefExpr 0x9b5cdbc <col:27> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x9b5cb10 '__x' 'const reverse_iterator<_Iterator> &'))))))

;
    template <typename _Iterator> inline reverse_iterator<_Iterator> operator+(typename reverse_iterator<_Iterator>::difference_type __n, const reverse_iterator<_Iterator> &__x) (CompoundStmt 0x9b5d4a8 </usr/include/c++/4.6/bits/stl_iterator.h:329:5, col:61>
  (ReturnStmt 0x9b5d498 <col:7, col:58>
    (CXXUnresolvedConstructExpr 0x9b5d478 <col:14, col:58> 'reverse_iterator<_Iterator>'
      (CXXOperatorCallExpr 0x9b5d450 <col:42, col:55> '<dependent type>'
        (UnresolvedLookupExpr 0x9b5d418 <col:53, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20)
        (CallExpr 0x9b5d3e0 <col:42, col:51> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9b5d3a8 <col:42, col:46> '<dependent type>' lvalue
            (DeclRefExpr 0x9b5d390 <col:42> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x9b5d190 '__x' 'const reverse_iterator<_Iterator> &')))
        (DeclRefExpr 0x9b5d3fc <col:55> 'typename reverse_iterator<_Iterator>::difference_type' lvalue ParmVar 0x9b5d090 '__n' 'typename reverse_iterator<_Iterator>::difference_type')))))

;
    template <typename _IteratorL, typename _IteratorR> inline bool operator==(const reverse_iterator<_IteratorL> &__x, const reverse_iterator<_IteratorR> &__y) (CompoundStmt 0x9b5da18 </usr/include/c++/4.6/bits/stl_iterator.h:337:5, col:40>
  (ReturnStmt 0x9b5da08 <col:7, col:37>
    (CXXOperatorCallExpr 0x9b5d9e0 <col:14, col:37> '<dependent type>'
      (UnresolvedLookupExpr 0x9b5d9a0 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d890 0x9b577d0 0x9b40200)
      (CallExpr 0x9b5d910 <col:14, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9b5d8d8 <col:14, col:18> '<dependent type>' lvalue
          (DeclRefExpr 0x9b5d8c0 <col:14> 'const reverse_iterator<_IteratorL>' lvalue ParmVar 0x9b5d640 '__x' 'const reverse_iterator<_IteratorL> &')))
      (CallExpr 0x9b5d980 <col:28, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9b5d948 <col:28, col:32> '<dependent type>' lvalue
          (DeclRefExpr 0x9b5d92c <col:28> 'const reverse_iterator<_IteratorR>' lvalue ParmVar 0x9b5d790 '__y' 'const reverse_iterator<_IteratorR> &'))))))

;
    template <typename _IteratorL, typename _IteratorR> inline bool operator<(const reverse_iterator<_IteratorL> &__x, const reverse_iterator<_IteratorR> &__y) (CompoundStmt 0x9b5df38 </usr/include/c++/4.6/bits/stl_iterator.h:343:5, col:39>
  (ReturnStmt 0x9b5df28 <col:7, col:36>
    (CXXOperatorCallExpr 0x9b5df00 <col:14, col:36> '<dependent type>'
      (UnresolvedLookupExpr 0x9b5dec0 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5ddb0 0x9b57c70 0x9b40ad0)
      (CallExpr 0x9b5de30 <col:14, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9b5ddf8 <col:14, col:18> '<dependent type>' lvalue
          (DeclRefExpr 0x9b5dde0 <col:14> 'const reverse_iterator<_IteratorR>' lvalue ParmVar 0x9b5dcd0 '__y' 'const reverse_iterator<_IteratorR> &')))
      (CallExpr 0x9b5dea0 <col:27, col:36> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9b5de68 <col:27, col:31> '<dependent type>' lvalue
          (DeclRefExpr 0x9b5de4c <col:27> 'const reverse_iterator<_IteratorL>' lvalue ParmVar 0x9b5dbd0 '__x' 'const reverse_iterator<_IteratorL> &'))))))

;
    template <typename _IteratorL, typename _IteratorR> inline bool operator!=(const reverse_iterator<_IteratorL> &__x, const reverse_iterator<_IteratorR> &__y) (CompoundStmt 0x9b5e3b8 </usr/include/c++/4.6/bits/stl_iterator.h:349:5, col:29>
  (ReturnStmt 0x9b5e3a8 <col:7, col:26>
    (UnaryOperator 0x9b5e390 <col:14, col:26> '<dependent type>' prefix '!'
      (ParenExpr 0x9b5e378 <col:15, col:26> '<dependent type>'
        (CXXOperatorCallExpr 0x9b5e350 <col:16, col:23> '<dependent type>'
          (UnresolvedLookupExpr 0x9b5e310 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d890 0x9b577d0 0x9b40200)
          (DeclRefExpr 0x9b5e2e0 <col:16> 'const reverse_iterator<_IteratorL>' lvalue ParmVar 0x9b5e0d0 '__x' 'const reverse_iterator<_IteratorL> &')
          (DeclRefExpr 0x9b5e2f8 <col:23> 'const reverse_iterator<_IteratorR>' lvalue ParmVar 0x9b5e1d0 '__y' 'const reverse_iterator<_IteratorR> &'))))))

;
    template <typename _IteratorL, typename _IteratorR> inline bool operator>(const reverse_iterator<_IteratorL> &__x, const reverse_iterator<_IteratorR> &__y) (CompoundStmt 0x9b5e808 </usr/include/c++/4.6/bits/stl_iterator.h:355:5, col:25>
  (ReturnStmt 0x9b5e7f8 <col:7, col:20>
    (CXXOperatorCallExpr 0x9b5e7d0 <col:14, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0x9b5e790 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5ddb0 0x9b57c70 0x9b40ad0)
      (DeclRefExpr 0x9b5e760 <col:14> 'const reverse_iterator<_IteratorR>' lvalue ParmVar 0x9b5e650 '__y' 'const reverse_iterator<_IteratorR> &')
      (DeclRefExpr 0x9b5e778 <col:20> 'const reverse_iterator<_IteratorL>' lvalue ParmVar 0x9b5e550 '__x' 'const reverse_iterator<_IteratorL> &'))))

;
    template <typename _IteratorL, typename _IteratorR> inline bool operator<=(const reverse_iterator<_IteratorL> &__x, const reverse_iterator<_IteratorR> &__y) (CompoundStmt 0x9b5ec98 </usr/include/c++/4.6/bits/stl_iterator.h:361:5, col:28>
  (ReturnStmt 0x9b5ec88 <col:7, col:25>
    (UnaryOperator 0x9b5ec70 <col:14, col:25> '<dependent type>' prefix '!'
      (ParenExpr 0x9b5ec58 <col:15, col:25> '<dependent type>'
        (CXXOperatorCallExpr 0x9b5ec30 <col:16, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0x9b5ebf0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5ddb0 0x9b57c70 0x9b40ad0)
          (DeclRefExpr 0x9b5ebc0 <col:16> 'const reverse_iterator<_IteratorR>' lvalue ParmVar 0x9b5eaa0 '__y' 'const reverse_iterator<_IteratorR> &')
          (DeclRefExpr 0x9b5ebd8 <col:22> 'const reverse_iterator<_IteratorL>' lvalue ParmVar 0x9b5e9a0 '__x' 'const reverse_iterator<_IteratorL> &'))))))

;
    template <typename _IteratorL, typename _IteratorR> inline bool operator>=(const reverse_iterator<_IteratorL> &__x, const reverse_iterator<_IteratorR> &__y) (CompoundStmt 0x9b5f118 </usr/include/c++/4.6/bits/stl_iterator.h:367:5, col:28>
  (ReturnStmt 0x9b5f108 <col:7, col:25>
    (UnaryOperator 0x9b5f0f0 <col:14, col:25> '<dependent type>' prefix '!'
      (ParenExpr 0x9b5f0d8 <col:15, col:25> '<dependent type>'
        (CXXOperatorCallExpr 0x9b5f0b0 <col:16, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0x9b5f070 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5ddb0 0x9b57c70 0x9b40ad0)
          (DeclRefExpr 0x9b5f040 <col:16> 'const reverse_iterator<_IteratorL>' lvalue ParmVar 0x9b5ee30 '__x' 'const reverse_iterator<_IteratorL> &')
          (DeclRefExpr 0x9b5f058 <col:22> 'const reverse_iterator<_IteratorR>' lvalue ParmVar 0x9b5ef30 '__y' 'const reverse_iterator<_IteratorR> &'))))))

;
    template <typename _IteratorL, typename _IteratorR> inline typename reverse_iterator<_IteratorL>::difference_type operator-(const reverse_iterator<_IteratorL> &__x, const reverse_iterator<_IteratorR> &__y) (CompoundStmt 0x9b5f710 </usr/include/c++/4.6/bits/stl_iterator.h:381:5, col:39>
  (ReturnStmt 0x9b5f700 <col:7, col:36>
    (CXXOperatorCallExpr 0x9b5f6d8 <col:14, col:36> '<dependent type>'
      (UnresolvedLookupExpr 0x9b5f6a0 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5f590 0x9b5cd20)
      (CallExpr 0x9b5f610 <col:14, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9b5f5d8 <col:14, col:18> '<dependent type>' lvalue
          (DeclRefExpr 0x9b5f5c0 <col:14> 'const reverse_iterator<_IteratorR>' lvalue ParmVar 0x9b5f480 '__y' 'const reverse_iterator<_IteratorR> &')))
      (CallExpr 0x9b5f680 <col:27, col:36> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9b5f648 <col:27, col:31> '<dependent type>' lvalue
          (DeclRefExpr 0x9b5f62c <col:27> 'const reverse_iterator<_IteratorL>' lvalue ParmVar 0x9b5f380 '__x' 'const reverse_iterator<_IteratorL> &'))))))

;
    template <typename _Container> class back_insert_iterator : public iterator<std::output_iterator_tag, void, void, void, void> {
        class back_insert_iterator;
    protected:
    protected:
        _Container *container;
    public:
    public:
        typedef _Container container_type;
        back_insert_iterator<_Container>(_Container &__x) : container((UnaryOperator 0x9b60510 </usr/include/c++/4.6/bits/stl_iterator.h:408:57, col:58> '<dependent type>' prefix '&'
  (DeclRefExpr 0x9b604f4 <col:58> '_Container' lvalue ParmVar 0x9b60010 '__x' '_Container &'))
) (CompoundStmt 0x9b60570 </usr/include/c++/4.6/bits/stl_iterator.h:408:63, col:65>)


        back_insert_iterator<_Container> &operator=(typename _Container::const_reference __value) (CompoundStmt 0x9b60670 </usr/include/c++/4.6/bits/stl_iterator.h:424:7, line:427:7>
  (CallExpr 0x9b60618 <line:425:2, col:30> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9b605c8 <col:2, col:13> '<dependent type>' lvalue
      (MemberExpr 0x9b605a8 <col:2> '_Container *' lvalue ->container 0x9b5ff30
        (CXXThisExpr 0x9b60598 <col:2> 'back_insert_iterator<_Container> *' this)))
    (DeclRefExpr 0x9b605fc <col:23> 'typename _Container::const_reference' lvalue ParmVar 0x9b601c0 '__value' 'typename _Container::const_reference'))
  (ReturnStmt 0x9b60660 <line:426:2, col:10>
    (UnaryOperator 0x9b60648 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9b60638 <col:10> 'back_insert_iterator<_Container> *' this))))


        back_insert_iterator<_Container> &operator*() (CompoundStmt 0x9b606c0 </usr/include/c++/4.6/bits/stl_iterator.h:447:7, col:23>
  (ReturnStmt 0x9b606b0 <col:9, col:17>
    (UnaryOperator 0x9b60698 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9b60688 <col:17> 'back_insert_iterator<_Container> *' this))))


        back_insert_iterator<_Container> &operator++() (CompoundStmt 0x9b60710 </usr/include/c++/4.6/bits/stl_iterator.h:452:7, col:23>
  (ReturnStmt 0x9b60700 <col:9, col:17>
    (UnaryOperator 0x9b606e8 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9b606d8 <col:17> 'back_insert_iterator<_Container> *' this))))


        back_insert_iterator<_Container> operator++(int) (CompoundStmt 0x9b60760 </usr/include/c++/4.6/bits/stl_iterator.h:457:7, col:23>
  (ReturnStmt 0x9b60750 <col:9, col:17>
    (UnaryOperator 0x9b60738 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9b60728 <col:17> 'back_insert_iterator<_Container> *' this))))


    };
    template <typename _Container> inline back_insert_iterator<_Container> back_inserter(_Container &__x) (CompoundStmt 0x9b60ac8 </usr/include/c++/4.6/bits/stl_iterator.h:474:5, col:53>
  (ReturnStmt 0x9b60ab8 <col:7, col:50>
    (CXXUnresolvedConstructExpr 0x9b60a98 <col:14, col:50> 'back_insert_iterator<_Container>'
      (DeclRefExpr 0x9b60a80 <col:47> '_Container' lvalue ParmVar 0x9b60890 '__x' '_Container &'))))

;
    template <typename _Container> class front_insert_iterator : public iterator<std::output_iterator_tag, void, void, void, void> {
        class front_insert_iterator;
    protected:
    protected:
        _Container *container;
    public:
    public:
        typedef _Container container_type;
        front_insert_iterator<_Container>(_Container &__x) : container((UnaryOperator 0x9b61d70 </usr/include/c++/4.6/bits/stl_iterator.h:498:67, col:68> '<dependent type>' prefix '&'
  (DeclRefExpr 0x9b61d54 <col:68> '_Container' lvalue ParmVar 0x9b618b0 '__x' '_Container &'))
) (CompoundStmt 0x9b61dd0 </usr/include/c++/4.6/bits/stl_iterator.h:498:73, col:75>)


        front_insert_iterator<_Container> &operator=(typename _Container::const_reference __value) (CompoundStmt 0x9b61ed0 </usr/include/c++/4.6/bits/stl_iterator.h:514:7, line:517:7>
  (CallExpr 0x9b61e78 <line:515:2, col:31> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9b61e28 <col:2, col:13> '<dependent type>' lvalue
      (MemberExpr 0x9b61e08 <col:2> '_Container *' lvalue ->container 0x9b617d0
        (CXXThisExpr 0x9b61df8 <col:2> 'front_insert_iterator<_Container> *' this)))
    (DeclRefExpr 0x9b61e5c <col:24> 'typename _Container::const_reference' lvalue ParmVar 0x9b61a20 '__value' 'typename _Container::const_reference'))
  (ReturnStmt 0x9b61ec0 <line:516:2, col:10>
    (UnaryOperator 0x9b61ea8 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9b61e98 <col:10> 'front_insert_iterator<_Container> *' this))))


        front_insert_iterator<_Container> &operator*() (CompoundStmt 0x9b61f20 </usr/include/c++/4.6/bits/stl_iterator.h:537:7, col:23>
  (ReturnStmt 0x9b61f10 <col:9, col:17>
    (UnaryOperator 0x9b61ef8 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9b61ee8 <col:17> 'front_insert_iterator<_Container> *' this))))


        front_insert_iterator<_Container> &operator++() (CompoundStmt 0x9b61f70 </usr/include/c++/4.6/bits/stl_iterator.h:542:7, col:23>
  (ReturnStmt 0x9b61f60 <col:9, col:17>
    (UnaryOperator 0x9b61f48 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9b61f38 <col:17> 'front_insert_iterator<_Container> *' this))))


        front_insert_iterator<_Container> operator++(int) (CompoundStmt 0x9b61fc0 </usr/include/c++/4.6/bits/stl_iterator.h:547:7, col:23>
  (ReturnStmt 0x9b61fb0 <col:9, col:17>
    (UnaryOperator 0x9b61f98 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9b61f88 <col:17> 'front_insert_iterator<_Container> *' this))))


    };
    template <typename _Container> inline front_insert_iterator<_Container> front_inserter(_Container &__x) (CompoundStmt 0x9b62328 </usr/include/c++/4.6/bits/stl_iterator.h:564:5, col:54>
  (ReturnStmt 0x9b62318 <col:7, col:51>
    (CXXUnresolvedConstructExpr 0x9b622f8 <col:14, col:51> 'front_insert_iterator<_Container>'
      (DeclRefExpr 0x9b622e0 <col:48> '_Container' lvalue ParmVar 0x9b620f0 '__x' '_Container &'))))

;
    template <typename _Container> class insert_iterator : public iterator<std::output_iterator_tag, void, void, void, void> {
        class insert_iterator;
    protected:
    protected:
        _Container *container;
        typename _Container::iterator iter;
    public:
    public:
        typedef _Container container_type;
        insert_iterator<_Container>(_Container &__x, typename _Container::iterator __i) : container((UnaryOperator 0x9b63750 </usr/include/c++/4.6/bits/stl_iterator.h:597:19, col:20> '<dependent type>' prefix '&'
  (DeclRefExpr 0x9b63734 <col:20> '_Container' lvalue ParmVar 0x9b63200 '__x' '_Container &'))
), iter((DeclRefExpr 0x9b637a8 </usr/include/c++/4.6/bits/stl_iterator.h:597:31> 'typename _Container::iterator' lvalue ParmVar 0x9b63280 '__i' 'typename _Container::iterator')
) (CompoundStmt 0x9b63800 </usr/include/c++/4.6/bits/stl_iterator.h:597:36, col:37>)


        insert_iterator<_Container> &operator=(typename _Container::const_reference __value) (CompoundStmt 0x9b639c8 </usr/include/c++/4.6/bits/stl_iterator.h:625:7, line:629:7>
  (BinaryOperator 0x9b63930 <line:626:2, col:40> '<dependent type>' '='
    (MemberExpr 0x9b63838 <col:2> 'typename _Container::iterator' lvalue ->iter 0x9b63120
      (CXXThisExpr 0x9b63828 <col:2> 'insert_iterator<_Container> *' this))
    (CallExpr 0x9b63908 <col:9, col:40> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9b63888 <col:9, col:20> '<dependent type>' lvalue
        (MemberExpr 0x9b63868 <col:9> '_Container *' lvalue ->container 0x9b63060
          (CXXThisExpr 0x9b63858 <col:9> 'insert_iterator<_Container> *' this)))
      (MemberExpr 0x9b638d0 <col:27> 'typename _Container::iterator' lvalue ->iter 0x9b63120
        (CXXThisExpr 0x9b638c0 <col:27> 'insert_iterator<_Container> *' this))
      (DeclRefExpr 0x9b638f0 <col:33> 'typename _Container::const_reference' lvalue ParmVar 0x9b63400 '__value' 'typename _Container::const_reference')))
  (UnaryOperator 0x9b63978 <line:627:2, col:4> '<dependent type>' prefix '++'
    (MemberExpr 0x9b63958 <col:4> 'typename _Container::iterator' lvalue ->iter 0x9b63120
      (CXXThisExpr 0x9b63948 <col:4> 'insert_iterator<_Container> *' this)))
  (ReturnStmt 0x9b639b8 <line:628:2, col:10>
    (UnaryOperator 0x9b639a0 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9b63990 <col:10> 'insert_iterator<_Container> *' this))))


        insert_iterator<_Container> &operator*() (CompoundStmt 0x9b63a20 </usr/include/c++/4.6/bits/stl_iterator.h:651:7, col:23>
  (ReturnStmt 0x9b63a10 <col:9, col:17>
    (UnaryOperator 0x9b639f8 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9b639e8 <col:17> 'insert_iterator<_Container> *' this))))


        insert_iterator<_Container> &operator++() (CompoundStmt 0x9b63a70 </usr/include/c++/4.6/bits/stl_iterator.h:656:7, col:23>
  (ReturnStmt 0x9b63a60 <col:9, col:17>
    (UnaryOperator 0x9b63a48 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9b63a38 <col:17> 'insert_iterator<_Container> *' this))))


        insert_iterator<_Container> &operator++(int) (CompoundStmt 0x9b63ac0 </usr/include/c++/4.6/bits/stl_iterator.h:661:7, col:23>
  (ReturnStmt 0x9b63ab0 <col:9, col:17>
    (UnaryOperator 0x9b63a98 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9b63a88 <col:17> 'insert_iterator<_Container> *' this))))


    };
    template <typename _Container, typename _Iterator> inline insert_iterator<_Container> inserter(_Container &__x, _Iterator __i) (CompoundStmt 0x9b64c70 </usr/include/c++/4.6/bits/stl_iterator.h:678:5, line:681:5>
  (ReturnStmt 0x9b64c60 <line:679:7, line:680:41>
    (CXXUnresolvedConstructExpr 0x9b64c40 <line:679:14, line:680:41> 'insert_iterator<_Container>'
      (DeclRefExpr 0x9b64b90 <line:679:42> '_Container' lvalue ParmVar 0x9b63c50 '__x' '_Container &')
      (CXXUnresolvedConstructExpr 0x9b64c20 <line:680:7, col:40> 'typename _Container::iterator'
        (DeclRefExpr 0x9b64c04 <col:37> '_Iterator' lvalue ParmVar 0x9b64990 '__i' '_Iterator')))))

;
}
namespace __gnu_cxx {
    using std::iterator_traits;
    ;
    using std::iterator;
    ;
    template <typename _Iterator = char *, typename _Container = std::basic_string<char>> class __normal_iterator
template <typename _Iterator = const char *, typename _Container = std::basic_string<char>> class __normal_iterator
template <typename _Iterator = wchar_t *, typename _Container = std::basic_string<wchar_t>> class __normal_iterator {
        class __normal_iterator;
    protected:
    protected:
        wchar_t *_M_current;
        typedef iterator_traits<wchar_t *> __traits_type;
    public:
    public:
        typedef wchar_t *iterator_type;
        typedef typename __traits_type::iterator_category iterator_category;
        typedef typename __traits_type::value_type value_type;
        typedef typename __traits_type::difference_type difference_type;
        typedef typename __traits_type::reference reference;
        typedef typename __traits_type::pointer pointer;
        __normal_iterator();
        __normal_iterator(wchar_t *const &__i);
        template <typename _Iter> __normal_iterator(const __normal_iterator<_Iter, typename __enable_if<(std::__are_same<_Iter, typename basic_string<wchar_t>::pointer>::__value), basic_string<wchar_t> >::__type> &__i);
        reference operator*() const;
        pointer operator->() const;
        __gnu_cxx::__normal_iterator<wchar_t *, std::basic_string<wchar_t> > &operator++();
        __gnu_cxx::__normal_iterator<wchar_t *, std::basic_string<wchar_t> > operator++(int);
        __gnu_cxx::__normal_iterator<wchar_t *, std::basic_string<wchar_t> > &operator--();
        __gnu_cxx::__normal_iterator<wchar_t *, std::basic_string<wchar_t> > operator--(int);
        reference operator[](const difference_type &__n) const;
        __gnu_cxx::__normal_iterator<wchar_t *, std::basic_string<wchar_t> > &operator+=(const difference_type &__n);
        __gnu_cxx::__normal_iterator<wchar_t *, std::basic_string<wchar_t> > operator+(const difference_type &__n) const;
        __gnu_cxx::__normal_iterator<wchar_t *, std::basic_string<wchar_t> > &operator-=(const difference_type &__n);
        __gnu_cxx::__normal_iterator<wchar_t *, std::basic_string<wchar_t> > operator-(const difference_type &__n) const;
        wchar_t *const &base() const;
        inline __normal_iterator(const __gnu_cxx::__normal_iterator<wchar_t *, std::basic_string<wchar_t> > &) throw();
    }
template <typename _Iterator = const wchar_t *, typename _Container = std::basic_string<wchar_t>> class __normal_iterator
template <typename _Iterator, typename _Container> class __normal_iterator {
        class __normal_iterator;
    protected:
    protected:
        _Iterator _M_current;
        typedef iterator_traits<_Iterator> __traits_type;
    public:
    public:
        typedef _Iterator iterator_type;
        typedef typename __traits_type::iterator_category iterator_category;
        typedef typename __traits_type::value_type value_type;
        typedef typename __traits_type::difference_type difference_type;
        typedef typename __traits_type::reference reference;
        typedef typename __traits_type::pointer pointer;
        __normal_iterator<_Iterator, _Container>() : _M_current((CXXUnresolvedConstructExpr 0x9b66878 </usr/include/c++/4.6/bits/stl_iterator.h:717:59, col:69> '_Iterator')
) (CompoundStmt 0x9b668d0 </usr/include/c++/4.6/bits/stl_iterator.h:717:72, col:74>)


        __normal_iterator<_Iterator, _Container>(const _Iterator &__i) : _M_current((DeclRefExpr 0x9b668e0 </usr/include/c++/4.6/bits/stl_iterator.h:720:60> 'const _Iterator' lvalue ParmVar 0x9b655c0 '__i' 'const _Iterator &')
) (CompoundStmt 0x9b66940 </usr/include/c++/4.6/bits/stl_iterator.h:720:65, col:67>)


        template <typename _Iter> __normal_iterator<_Iterator, _Container>(const __normal_iterator<_Iter, typename __enable_if<(std::__are_same<_Iter, typename _Container::pointer>::__value), _Container>::__type> &__i) : _M_current((CallExpr 0x9b67c50 </usr/include/c++/4.6/bits/stl_iterator.h:728:22, col:31> '<dependent type>'
  (CXXDependentScopeMemberExpr 0x9b67c18 <col:22, col:26> '<dependent type>' lvalue
    (DeclRefExpr 0x9b66950 <col:22> 'const __normal_iterator<_Iter, typename __enable_if<(std::__are_same<_Iter, typename _Container::pointer>::__value), _Container>::__type>' lvalue ParmVar 0x9b65cf0 '__i' 'const __normal_iterator<_Iter, typename __enable_if<(std::__are_same<_Iter, typename _Container::pointer>::__value), _Container>::__type> &')))
) (CompoundStmt 0x9b67cb0 </usr/include/c++/4.6/bits/stl_iterator.h:728:34, col:36>)

;
        reference operator*() const (CompoundStmt 0x9b67d50 </usr/include/c++/4.6/bits/stl_iterator.h:733:7, col:29>
  (ReturnStmt 0x9b67d40 <col:9, col:17>
    (UnaryOperator 0x9b67d28 <col:16, col:17> '<dependent type>' prefix '*'
      (MemberExpr 0x9b67d04 <col:17> 'const _Iterator' lvalue ->_M_current 0x9b65070
        (CXXThisExpr 0x9b67cd8 <col:17> 'const __normal_iterator<_Iterator, _Container> *' this)))))


        pointer operator->() const (CompoundStmt 0x9b67da8 </usr/include/c++/4.6/bits/stl_iterator.h:737:7, col:28>
  (ReturnStmt 0x9b67d98 <col:9, col:16>
    (MemberExpr 0x9b67d78 <col:16> 'const _Iterator' lvalue ->_M_current 0x9b65070
      (CXXThisExpr 0x9b67d68 <col:16> 'const __normal_iterator<_Iterator, _Container> *' this))))


        __normal_iterator<_Iterator, _Container> &operator++() (CompoundStmt 0x9b67e40 </usr/include/c++/4.6/bits/stl_iterator.h:741:7, line:744:7>
  (UnaryOperator 0x9b67df0 <line:742:2, col:4> '<dependent type>' prefix '++'
    (MemberExpr 0x9b67dd0 <col:4> '_Iterator' lvalue ->_M_current 0x9b65070
      (CXXThisExpr 0x9b67dc0 <col:4> '__normal_iterator<_Iterator, _Container> *' this)))
  (ReturnStmt 0x9b67e30 <line:743:2, col:10>
    (UnaryOperator 0x9b67e18 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9b67e08 <col:10> '__normal_iterator<_Iterator, _Container> *' this))))


        __normal_iterator<_Iterator, _Container> operator++(int) (CompoundStmt 0x9b67ef0 </usr/include/c++/4.6/bits/stl_iterator.h:748:7, col:49>
  (ReturnStmt 0x9b67ee0 <col:9, col:46>
    (CXXUnresolvedConstructExpr 0x9b67ec0 <col:16, col:46> '__normal_iterator<_Iterator, _Container>'
      (UnaryOperator 0x9b67ea8 <col:34, col:44> '<dependent type>' postfix '++'
        (MemberExpr 0x9b67e70 <col:34> '_Iterator' lvalue ->_M_current 0x9b65070
          (CXXThisExpr 0x9b67e60 <col:34> '__normal_iterator<_Iterator, _Container> *' this))))))


        __normal_iterator<_Iterator, _Container> &operator--() (CompoundStmt 0x9b67f88 </usr/include/c++/4.6/bits/stl_iterator.h:753:7, line:756:7>
  (UnaryOperator 0x9b67f38 <line:754:2, col:4> '<dependent type>' prefix '--'
    (MemberExpr 0x9b67f18 <col:4> '_Iterator' lvalue ->_M_current 0x9b65070
      (CXXThisExpr 0x9b67f08 <col:4> '__normal_iterator<_Iterator, _Container> *' this)))
  (ReturnStmt 0x9b67f78 <line:755:2, col:10>
    (UnaryOperator 0x9b67f60 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9b67f50 <col:10> '__normal_iterator<_Iterator, _Container> *' this))))


        __normal_iterator<_Iterator, _Container> operator--(int) (CompoundStmt 0x9b68038 </usr/include/c++/4.6/bits/stl_iterator.h:760:7, col:49>
  (ReturnStmt 0x9b68028 <col:9, col:46>
    (CXXUnresolvedConstructExpr 0x9b68008 <col:16, col:46> '__normal_iterator<_Iterator, _Container>'
      (UnaryOperator 0x9b67ff0 <col:34, col:44> '<dependent type>' postfix '--'
        (MemberExpr 0x9b67fb8 <col:34> '_Iterator' lvalue ->_M_current 0x9b65070
          (CXXThisExpr 0x9b67fa8 <col:34> '__normal_iterator<_Iterator, _Container> *' this))))))


        reference operator[](const difference_type &__n) const (CompoundStmt 0x9b680c0 </usr/include/c++/4.6/bits/stl_iterator.h:765:7, col:33>
  (ReturnStmt 0x9b680b0 <col:9, col:30>
    (ArraySubscriptExpr 0x9b68098 <col:16, col:30> '<dependent type>' lvalue
      (MemberExpr 0x9b68060 <col:16> 'const _Iterator' lvalue ->_M_current 0x9b65070
        (CXXThisExpr 0x9b68050 <col:16> 'const __normal_iterator<_Iterator, _Container> *' this))
      (DeclRefExpr 0x9b68080 <col:27> 'const difference_type':'const typename __traits_type::difference_type' lvalue ParmVar 0x9b662c0 '__n' 'const difference_type &'))))


        __normal_iterator<_Iterator, _Container> &operator+=(const difference_type &__n) (CompoundStmt 0x9b68178 </usr/include/c++/4.6/bits/stl_iterator.h:769:7, col:42>
  (CompoundAssignOperator 0x9b68120 <col:9, col:23> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (MemberExpr 0x9b680e8 <col:9> '_Iterator' lvalue ->_M_current 0x9b65070
      (CXXThisExpr 0x9b680d8 <col:9> '__normal_iterator<_Iterator, _Container> *' this))
    (DeclRefExpr 0x9b68108 <col:23> 'const difference_type':'const typename __traits_type::difference_type' lvalue ParmVar 0x9b663e0 '__n' 'const difference_type &'))
  (ReturnStmt 0x9b68168 <col:28, col:36>
    (UnaryOperator 0x9b68150 <col:35, col:36> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9b68140 <col:36> '__normal_iterator<_Iterator, _Container> *' this))))


        __normal_iterator<_Iterator, _Container> operator+(const difference_type &__n) const (CompoundStmt 0x9b68228 </usr/include/c++/4.6/bits/stl_iterator.h:773:7, col:53>
  (ReturnStmt 0x9b68218 <col:9, col:50>
    (CXXUnresolvedConstructExpr 0x9b681f8 <col:16, col:50> '__normal_iterator<_Iterator, _Container>'
      (BinaryOperator 0x9b681e0 <col:34, col:47> '<dependent type>' '+'
        (MemberExpr 0x9b681a8 <col:34> 'const _Iterator' lvalue ->_M_current 0x9b65070
          (CXXThisExpr 0x9b68198 <col:34> 'const __normal_iterator<_Iterator, _Container> *' this))
        (DeclRefExpr 0x9b681c8 <col:47> 'const difference_type':'const typename __traits_type::difference_type' lvalue ParmVar 0x9b66500 '__n' 'const difference_type &')))))


        __normal_iterator<_Iterator, _Container> &operator-=(const difference_type &__n) (CompoundStmt 0x9b682e0 </usr/include/c++/4.6/bits/stl_iterator.h:777:7, col:42>
  (CompoundAssignOperator 0x9b68288 <col:9, col:23> '<dependent type>' lvalue '-=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (MemberExpr 0x9b68250 <col:9> '_Iterator' lvalue ->_M_current 0x9b65070
      (CXXThisExpr 0x9b68240 <col:9> '__normal_iterator<_Iterator, _Container> *' this))
    (DeclRefExpr 0x9b68270 <col:23> 'const difference_type':'const typename __traits_type::difference_type' lvalue ParmVar 0x9b66620 '__n' 'const difference_type &'))
  (ReturnStmt 0x9b682d0 <col:28, col:36>
    (UnaryOperator 0x9b682b8 <col:35, col:36> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9b682a8 <col:36> '__normal_iterator<_Iterator, _Container> *' this))))


        __normal_iterator<_Iterator, _Container> operator-(const difference_type &__n) const (CompoundStmt 0x9b68390 </usr/include/c++/4.6/bits/stl_iterator.h:781:7, col:53>
  (ReturnStmt 0x9b68380 <col:9, col:50>
    (CXXUnresolvedConstructExpr 0x9b68360 <col:16, col:50> '__normal_iterator<_Iterator, _Container>'
      (BinaryOperator 0x9b68348 <col:34, col:47> '<dependent type>' '-'
        (MemberExpr 0x9b68310 <col:34> 'const _Iterator' lvalue ->_M_current 0x9b65070
          (CXXThisExpr 0x9b68300 <col:34> 'const __normal_iterator<_Iterator, _Container> *' this))
        (DeclRefExpr 0x9b68330 <col:47> 'const difference_type':'const typename __traits_type::difference_type' lvalue ParmVar 0x9b66700 '__n' 'const difference_type &')))))


        const _Iterator &base() const (CompoundStmt 0x9b683e8 </usr/include/c++/4.6/bits/stl_iterator.h:785:7, col:28>
  (ReturnStmt 0x9b683d8 <col:9, col:16>
    (MemberExpr 0x9b683b8 <col:16> 'const _Iterator' lvalue ->_M_current 0x9b65070
      (CXXThisExpr 0x9b683a8 <col:16> 'const __normal_iterator<_Iterator, _Container> *' this))))


    };
    template <typename _IteratorL, typename _IteratorR, typename _Container> inline bool operator==(const __normal_iterator<_IteratorL, _Container> &__lhs, const __normal_iterator<_IteratorR, _Container> &__rhs) (CompoundStmt 0x9b68b00 </usr/include/c++/4.6/bits/stl_iterator.h:801:5, col:44>
  (ReturnStmt 0x9b68af0 <col:7, col:41>
    (CXXOperatorCallExpr 0x9b68ac8 <col:14, col:41> '<dependent type>'
      (UnresolvedLookupExpr 0x9b68a90 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b68980)
      (CallExpr 0x9b68a00 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9b689c8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9b689b0 <col:14> 'const __normal_iterator<_IteratorL, _Container>' lvalue ParmVar 0x9b686a0 '__lhs' 'const __normal_iterator<_IteratorL, _Container> &')))
      (CallExpr 0x9b68a70 <col:30, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9b68a38 <col:30, col:36> '<dependent type>' lvalue
          (DeclRefExpr 0x9b68a1c <col:30> 'const __normal_iterator<_IteratorR, _Container>' lvalue ParmVar 0x9b68880 '__rhs' 'const __normal_iterator<_IteratorR, _Container> &'))))))

;
    template <typename _Iterator, typename _Container> inline bool operator==(const __normal_iterator<_Iterator, _Container> &__lhs, const __normal_iterator<_Iterator, _Container> &__rhs) (CompoundStmt 0x9b69e50 </usr/include/c++/4.6/bits/stl_iterator.h:807:5, col:44>
  (ReturnStmt 0x9b69e40 <col:7, col:41>
    (CXXOperatorCallExpr 0x9b69e18 <col:14, col:41> '<dependent type>'
      (UnresolvedLookupExpr 0x9b69de0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b69cd0 0x9b68980)
      (CallExpr 0x9b69d50 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9b69d18 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9b69d00 <col:14> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x9b69a60 '__lhs' 'const __normal_iterator<_Iterator, _Container> &')))
      (CallExpr 0x9b69dc0 <col:30, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9b69d88 <col:30, col:36> '<dependent type>' lvalue
          (DeclRefExpr 0x9b69d6c <col:30> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x9b69bd0 '__rhs' 'const __normal_iterator<_Iterator, _Container> &'))))))

;
    template <typename _IteratorL, typename _IteratorR, typename _Container> inline bool operator!=(const __normal_iterator<_IteratorL, _Container> &__lhs, const __normal_iterator<_IteratorR, _Container> &__rhs) (CompoundStmt 0x9b6a470 </usr/include/c++/4.6/bits/stl_iterator.h:813:5, col:44>
  (ReturnStmt 0x9b6a460 <col:7, col:41>
    (CXXOperatorCallExpr 0x9b6a438 <col:14, col:41> '<dependent type>'
      (UnresolvedLookupExpr 0x9b6a400 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b6a2f0)
      (CallExpr 0x9b6a370 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9b6a338 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9b6a320 <col:14> 'const __normal_iterator<_IteratorL, _Container>' lvalue ParmVar 0x9b6a0a0 '__lhs' 'const __normal_iterator<_IteratorL, _Container> &')))
      (CallExpr 0x9b6a3e0 <col:30, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9b6a3a8 <col:30, col:36> '<dependent type>' lvalue
          (DeclRefExpr 0x9b6a38c <col:30> 'const __normal_iterator<_IteratorR, _Container>' lvalue ParmVar 0x9b6a210 '__rhs' 'const __normal_iterator<_IteratorR, _Container> &'))))))

;
    template <typename _Iterator, typename _Container> inline bool operator!=(const __normal_iterator<_Iterator, _Container> &__lhs, const __normal_iterator<_Iterator, _Container> &__rhs) (CompoundStmt 0x9b6aa60 </usr/include/c++/4.6/bits/stl_iterator.h:819:5, col:44>
  (ReturnStmt 0x9b6aa50 <col:7, col:41>
    (CXXOperatorCallExpr 0x9b6aa28 <col:14, col:41> '<dependent type>'
      (UnresolvedLookupExpr 0x9b6a9f0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b6a8c0 0x9b6a2f0)
      (CallExpr 0x9b6a960 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9b6a928 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9b6a8f0 <col:14> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x9b6a670 '__lhs' 'const __normal_iterator<_Iterator, _Container> &')))
      (CallExpr 0x9b6a9d0 <col:30, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9b6a998 <col:30, col:36> '<dependent type>' lvalue
          (DeclRefExpr 0x9b6a97c <col:30> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x9b6a7e0 '__rhs' 'const __normal_iterator<_Iterator, _Container> &'))))))

;
    template <typename _IteratorL, typename _IteratorR, typename _Container> inline bool operator<(const __normal_iterator<_IteratorL, _Container> &__lhs, const __normal_iterator<_IteratorR, _Container> &__rhs) (CompoundStmt 0x9b6b080 </usr/include/c++/4.6/bits/stl_iterator.h:826:5, col:43>
  (ReturnStmt 0x9b6b070 <col:7, col:40>
    (CXXOperatorCallExpr 0x9b6b048 <col:14, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0x9b6b010 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b6af00)
      (CallExpr 0x9b6af80 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9b6af48 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9b6af30 <col:14> 'const __normal_iterator<_IteratorL, _Container>' lvalue ParmVar 0x9b6acb0 '__lhs' 'const __normal_iterator<_IteratorL, _Container> &')))
      (CallExpr 0x9b6aff0 <col:29, col:40> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9b6afb8 <col:29, col:35> '<dependent type>' lvalue
          (DeclRefExpr 0x9b6af9c <col:29> 'const __normal_iterator<_IteratorR, _Container>' lvalue ParmVar 0x9b6ae20 '__rhs' 'const __normal_iterator<_IteratorR, _Container> &'))))))

;
    template <typename _Iterator, typename _Container> inline bool operator<(const __normal_iterator<_Iterator, _Container> &__lhs, const __normal_iterator<_Iterator, _Container> &__rhs) (CompoundStmt 0x9b6b650 </usr/include/c++/4.6/bits/stl_iterator.h:832:5, col:43>
  (ReturnStmt 0x9b6b640 <col:7, col:40>
    (CXXOperatorCallExpr 0x9b6b618 <col:14, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0x9b6b5e0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b6b4d0 0x9b6af00)
      (CallExpr 0x9b6b550 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9b6b518 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9b6b500 <col:14> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x9b6b280 '__lhs' 'const __normal_iterator<_Iterator, _Container> &')))
      (CallExpr 0x9b6b5c0 <col:29, col:40> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9b6b588 <col:29, col:35> '<dependent type>' lvalue
          (DeclRefExpr 0x9b6b56c <col:29> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x9b6b3f0 '__rhs' 'const __normal_iterator<_Iterator, _Container> &'))))))

;
    template <typename _IteratorL, typename _IteratorR, typename _Container> inline bool operator>(const __normal_iterator<_IteratorL, _Container> &__lhs, const __normal_iterator<_IteratorR, _Container> &__rhs) (CompoundStmt 0x9b6bcb0 </usr/include/c++/4.6/bits/stl_iterator.h:838:5, col:43>
  (ReturnStmt 0x9b6bca0 <col:7, col:40>
    (CXXOperatorCallExpr 0x9b6bc78 <col:14, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0x9b6bc40 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b6bb30)
      (CallExpr 0x9b6bbb0 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9b6bb78 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9b6bb60 <col:14> 'const __normal_iterator<_IteratorL, _Container>' lvalue ParmVar 0x9b6b8a0 '__lhs' 'const __normal_iterator<_IteratorL, _Container> &')))
      (CallExpr 0x9b6bc20 <col:29, col:40> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9b6bbe8 <col:29, col:35> '<dependent type>' lvalue
          (DeclRefExpr 0x9b6bbcc <col:29> 'const __normal_iterator<_IteratorR, _Container>' lvalue ParmVar 0x9b6ba50 '__rhs' 'const __normal_iterator<_IteratorR, _Container> &'))))))

;
    template <typename _Iterator, typename _Container> inline bool operator>(const __normal_iterator<_Iterator, _Container> &__lhs, const __normal_iterator<_Iterator, _Container> &__rhs) (CompoundStmt 0x9b6c280 </usr/include/c++/4.6/bits/stl_iterator.h:844:5, col:43>
  (ReturnStmt 0x9b6c270 <col:7, col:40>
    (CXXOperatorCallExpr 0x9b6c248 <col:14, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0x9b6c210 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b6c100 0x9b6bb30)
      (CallExpr 0x9b6c180 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9b6c148 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9b6c130 <col:14> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x9b6beb0 '__lhs' 'const __normal_iterator<_Iterator, _Container> &')))
      (CallExpr 0x9b6c1f0 <col:29, col:40> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9b6c1b8 <col:29, col:35> '<dependent type>' lvalue
          (DeclRefExpr 0x9b6c19c <col:29> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x9b6c020 '__rhs' 'const __normal_iterator<_Iterator, _Container> &'))))))

;
    template <typename _IteratorL, typename _IteratorR, typename _Container> inline bool operator<=(const __normal_iterator<_IteratorL, _Container> &__lhs, const __normal_iterator<_IteratorR, _Container> &__rhs) (CompoundStmt 0x9b6c8a0 </usr/include/c++/4.6/bits/stl_iterator.h:850:5, col:44>
  (ReturnStmt 0x9b6c890 <col:7, col:41>
    (CXXOperatorCallExpr 0x9b6c868 <col:14, col:41> '<dependent type>'
      (UnresolvedLookupExpr 0x9b6c830 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b6c720)
      (CallExpr 0x9b6c7a0 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9b6c768 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9b6c750 <col:14> 'const __normal_iterator<_IteratorL, _Container>' lvalue ParmVar 0x9b6c4d0 '__lhs' 'const __normal_iterator<_IteratorL, _Container> &')))
      (CallExpr 0x9b6c810 <col:30, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9b6c7d8 <col:30, col:36> '<dependent type>' lvalue
          (DeclRefExpr 0x9b6c7bc <col:30> 'const __normal_iterator<_IteratorR, _Container>' lvalue ParmVar 0x9b6c640 '__rhs' 'const __normal_iterator<_IteratorR, _Container> &'))))))

;
    template <typename _Iterator, typename _Container> inline bool operator<=(const __normal_iterator<_Iterator, _Container> &__lhs, const __normal_iterator<_Iterator, _Container> &__rhs) (CompoundStmt 0x9b6dea0 </usr/include/c++/4.6/bits/stl_iterator.h:856:5, col:44>
  (ReturnStmt 0x9b6de90 <col:7, col:41>
    (CXXOperatorCallExpr 0x9b6de68 <col:14, col:41> '<dependent type>'
      (UnresolvedLookupExpr 0x9b6de30 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b6dd20 0x9b6c720)
      (CallExpr 0x9b6dda0 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9b6dd68 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9b6dd50 <col:14> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x9b6dad0 '__lhs' 'const __normal_iterator<_Iterator, _Container> &')))
      (CallExpr 0x9b6de10 <col:30, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9b6ddd8 <col:30, col:36> '<dependent type>' lvalue
          (DeclRefExpr 0x9b6ddbc <col:30> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x9b6dc40 '__rhs' 'const __normal_iterator<_Iterator, _Container> &'))))))

;
    template <typename _IteratorL, typename _IteratorR, typename _Container> inline bool operator>=(const __normal_iterator<_IteratorL, _Container> &__lhs, const __normal_iterator<_IteratorR, _Container> &__rhs) (CompoundStmt 0x9b6e4c0 </usr/include/c++/4.6/bits/stl_iterator.h:862:5, col:44>
  (ReturnStmt 0x9b6e4b0 <col:7, col:41>
    (CXXOperatorCallExpr 0x9b6e488 <col:14, col:41> '<dependent type>'
      (UnresolvedLookupExpr 0x9b6e450 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b6e340)
      (CallExpr 0x9b6e3c0 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9b6e388 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9b6e370 <col:14> 'const __normal_iterator<_IteratorL, _Container>' lvalue ParmVar 0x9b6e0f0 '__lhs' 'const __normal_iterator<_IteratorL, _Container> &')))
      (CallExpr 0x9b6e430 <col:30, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9b6e3f8 <col:30, col:36> '<dependent type>' lvalue
          (DeclRefExpr 0x9b6e3dc <col:30> 'const __normal_iterator<_IteratorR, _Container>' lvalue ParmVar 0x9b6e260 '__rhs' 'const __normal_iterator<_IteratorR, _Container> &'))))))

;
    template <typename _Iterator, typename _Container> inline bool operator>=(const __normal_iterator<_Iterator, _Container> &__lhs, const __normal_iterator<_Iterator, _Container> &__rhs) (CompoundStmt 0x9b6eeb0 </usr/include/c++/4.6/bits/stl_iterator.h:868:5, col:44>
  (ReturnStmt 0x9b6eea0 <col:7, col:41>
    (CXXOperatorCallExpr 0x9b6ee78 <col:14, col:41> '<dependent type>'
      (UnresolvedLookupExpr 0x9b6ee40 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b6e910 0x9b6e340)
      (CallExpr 0x9b6edb0 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9b6ed78 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9b6ed60 <col:14> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x9b6e6c0 '__lhs' 'const __normal_iterator<_Iterator, _Container> &')))
      (CallExpr 0x9b6ee20 <col:30, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9b6ede8 <col:30, col:36> '<dependent type>' lvalue
          (DeclRefExpr 0x9b6edcc <col:30> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x9b6e830 '__rhs' 'const __normal_iterator<_Iterator, _Container> &'))))))

;
    template <typename _IteratorL, typename _IteratorR, typename _Container> inline typename __normal_iterator<_IteratorL, _Container>::difference_type operator-(const __normal_iterator<_IteratorL, _Container> &__lhs, const __normal_iterator<_IteratorR, _Container> &__rhs) (CompoundStmt 0x9b6f650 </usr/include/c++/4.6/bits/stl_iterator.h:886:5, col:43>
  (ReturnStmt 0x9b6f640 <col:7, col:40>
    (CXXOperatorCallExpr 0x9b6f618 <col:14, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0x9b6f5e0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b6f4d0)
      (CallExpr 0x9b6f550 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9b6f518 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9b6f500 <col:14> 'const __normal_iterator<_IteratorL, _Container>' lvalue ParmVar 0x9b6f250 '__lhs' 'const __normal_iterator<_IteratorL, _Container> &')))
      (CallExpr 0x9b6f5c0 <col:29, col:40> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9b6f588 <col:29, col:35> '<dependent type>' lvalue
          (DeclRefExpr 0x9b6f56c <col:29> 'const __normal_iterator<_IteratorR, _Container>' lvalue ParmVar 0x9b6f3c0 '__rhs' 'const __normal_iterator<_IteratorR, _Container> &'))))))

;
    template <typename _Iterator, typename _Container> inline typename __normal_iterator<_Iterator, _Container>::difference_type operator-(const __normal_iterator<_Iterator, _Container> &__lhs, const __normal_iterator<_Iterator, _Container> &__rhs) (CompoundStmt 0x9b703e8 </usr/include/c++/4.6/bits/stl_iterator.h:892:5, col:43>
  (ReturnStmt 0x9b703d8 <col:7, col:40>
    (CXXOperatorCallExpr 0x9b703b0 <col:14, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0x9b70378 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b6fc20 0x9b6f4d0)
      (CallExpr 0x9b6fca0 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9b6fc68 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9b6fc50 <col:14> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x9b6f9a0 '__lhs' 'const __normal_iterator<_Iterator, _Container> &')))
      (CallExpr 0x9b6fd10 <col:29, col:40> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9b6fcd8 <col:29, col:35> '<dependent type>' lvalue
          (DeclRefExpr 0x9b6fcbc <col:29> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x9b6fb10 '__rhs' 'const __normal_iterator<_Iterator, _Container> &'))))))

;
    template <typename _Iterator, typename _Container> inline __normal_iterator<_Iterator, _Container> operator+(typename __normal_iterator<_Iterator, _Container>::difference_type __n, const __normal_iterator<_Iterator, _Container> &__i) (CompoundStmt 0x9b70bc0 </usr/include/c++/4.6/bits/stl_iterator.h:898:5, col:74>
  (ReturnStmt 0x9b70bb0 <col:7, col:71>
    (CXXUnresolvedConstructExpr 0x9b70b90 <col:14, col:71> '__normal_iterator<_Iterator, _Container>'
      (CXXOperatorCallExpr 0x9b70b68 <col:55, col:68> '<dependent type>'
        (UnresolvedLookupExpr 0x9b70b30 <col:66, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b70970)
        (CallExpr 0x9b70af8 <col:55, col:64> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9b70ac0 <col:55, col:59> '<dependent type>' lvalue
            (DeclRefExpr 0x9b70aa8 <col:55> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x9b70840 '__i' 'const __normal_iterator<_Iterator, _Container> &')))
        (DeclRefExpr 0x9b70b14 <col:68> 'typename __normal_iterator<_Iterator, _Container>::difference_type' lvalue ParmVar 0x9b706d0 '__n' 'typename __normal_iterator<_Iterator, _Container>::difference_type')))))

;
}
namespace std {
    namespace __debug {
    }
}
namespace __gnu_debug {
    using namespace std::__debug;
}
namespace std {
    template <bool _BoolType = true> struct __iter_swap {
        struct __iter_swap;
        template <typename _ForwardIterator1, typename _ForwardIterator2> static void iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b) (CompoundStmt 0x9b74950 </usr/include/c++/4.6/bits/stl_algobase.h:101:9, line:103:9>
  (CallExpr 0x9b74928 <line:102:11, col:26> '<dependent type>'
    (UnresolvedLookupExpr 0x9b74890 <col:11> '<overloaded function type>' lvalue (ADL) = '1' 0x9b3e850 0x9b3ed90)
    (UnaryOperator 0x9b748e0 <col:16, col:17> '<dependent type>' prefix '*'
      (DeclRefExpr 0x9b748c8 <col:17> '_ForwardIterator1' lvalue ParmVar 0x9b74710 '__a' '_ForwardIterator1'))
    (UnaryOperator 0x9b74910 <col:22, col:23> '<dependent type>' prefix '*'
      (DeclRefExpr 0x9b748f4 <col:23> '_ForwardIterator2' lvalue ParmVar 0x9b74750 '__b' '_ForwardIterator2'))))

;
    }
template <bool _BoolType> struct __iter_swap {
        struct __iter_swap;
        template <typename _ForwardIterator1, typename _ForwardIterator2> static void iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b) (CompoundStmt 0x9b74428 </usr/include/c++/4.6/bits/stl_algobase.h:86:9, line:92:2>
  (DeclStmt 0x9b74260 <line:87:11, line:88:24>
    0x9b74230 "typedef typename iterator_traits<_ForwardIterator1>::value_type _ValueType1")
  (DeclStmt 0x9b74310 <line:89:11, col:50>
    0x9b74290 "_ValueType1 __tmp =
      (ParenExpr 0x9b742f8 </usr/include/c++/4.6/bits/move.h:105:30, col:36> '<dependent type>'
        (UnaryOperator 0x9b742e0 </usr/include/c++/4.6/bits/stl_algobase.h:89:45, col:46> '<dependent type>' prefix '*'
          (DeclRefExpr 0x9b742c4 <col:46> '_ForwardIterator1' lvalue ParmVar 0x9b71100 '__a' '_ForwardIterator1')))")
  (BinaryOperator 0x9b74398 <line:90:11, /usr/include/c++/4.6/bits/move.h:105:36> '<dependent type>' '='
    (UnaryOperator 0x9b74338 </usr/include/c++/4.6/bits/stl_algobase.h:90:11, col:12> '<dependent type>' prefix '*'
      (DeclRefExpr 0x9b74320 <col:12> '_ForwardIterator1' lvalue ParmVar 0x9b71100 '__a' '_ForwardIterator1'))
    (ParenExpr 0x9b74380 </usr/include/c++/4.6/bits/move.h:105:30, col:36> '<dependent type>'
      (UnaryOperator 0x9b74368 </usr/include/c++/4.6/bits/stl_algobase.h:90:32, col:33> '<dependent type>' prefix '*'
        (DeclRefExpr 0x9b7434c <col:33> '_ForwardIterator2' lvalue ParmVar 0x9b71140 '__b' '_ForwardIterator2'))))
  (BinaryOperator 0x9b74410 <line:91:11, /usr/include/c++/4.6/bits/move.h:105:36> '<dependent type>' '='
    (UnaryOperator 0x9b743c8 </usr/include/c++/4.6/bits/stl_algobase.h:91:11, col:12> '<dependent type>' prefix '*'
      (DeclRefExpr 0x9b743b0 <col:12> '_ForwardIterator2' lvalue ParmVar 0x9b71140 '__b' '_ForwardIterator2'))
    (ParenExpr 0x9b743f8 </usr/include/c++/4.6/bits/move.h:105:30, col:36> '_ValueType1':'typename iterator_traits<_ForwardIterator1>::value_type' lvalue
      (DeclRefExpr 0x9b743dc </usr/include/c++/4.6/bits/stl_algobase.h:91:32> '_ValueType1':'typename iterator_traits<_ForwardIterator1>::value_type' lvalue Var 0x9b74290 '__tmp' '_ValueType1':'typename iterator_traits<_ForwardIterator1>::value_type'))))

;
    };
    struct __iter_swap {
        struct __iter_swap;
        template <typename _ForwardIterator1, typename _ForwardIterator2> static void iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b) (CompoundStmt 0x9b74950 </usr/include/c++/4.6/bits/stl_algobase.h:101:9, line:103:9>
  (CallExpr 0x9b74928 <line:102:11, col:26> '<dependent type>'
    (UnresolvedLookupExpr 0x9b74890 <col:11> '<overloaded function type>' lvalue (ADL) = '1' 0x9b3e850 0x9b3ed90)
    (UnaryOperator 0x9b748e0 <col:16, col:17> '<dependent type>' prefix '*'
      (DeclRefExpr 0x9b748c8 <col:17> '_ForwardIterator1' lvalue ParmVar 0x9b74710 '__a' '_ForwardIterator1'))
    (UnaryOperator 0x9b74910 <col:22, col:23> '<dependent type>' prefix '*'
      (DeclRefExpr 0x9b748f4 <col:23> '_ForwardIterator2' lvalue ParmVar 0x9b74750 '__b' '_ForwardIterator2'))))

;
    };
    template <typename _ForwardIterator1, typename _ForwardIterator2> inline void iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b) (CompoundStmt 0x9b75d58 </usr/include/c++/4.6/bits/stl_algobase.h:119:5, line:143:5>
  (DeclStmt 0x9b74ca0 <line:120:7, line:121:13>
    0x9b74c70 "typedef typename iterator_traits<_ForwardIterator1>::value_type _ValueType1")
  (DeclStmt 0x9b74e30 <line:122:7, line:123:13>
    0x9b74e00 "typedef typename iterator_traits<_ForwardIterator2>::value_type _ValueType2")
  (DeclStmt 0x9b74f60 <line:135:7, line:136:17>
    0x9b74f30 "typedef typename iterator_traits<_ForwardIterator1>::reference _ReferenceType1")
  (DeclStmt 0x9b750b0 <line:137:7, line:138:17>
    0x9b75080 "typedef typename iterator_traits<_ForwardIterator2>::reference _ReferenceType2")
  (CallExpr 0x9b75d30 <line:139:7, line:142:20> '<dependent type>'
    (DependentScopeDeclRefExpr 0x9b75cd8 <line:139:7, line:142:2> '<dependent type>' lvalue)
    (DeclRefExpr 0x9b75cfc <col:12> '_ForwardIterator1' lvalue ParmVar 0x9b74a30 '__a' '_ForwardIterator1')
    (DeclRefExpr 0x9b75d14 <col:17> '_ForwardIterator2' lvalue ParmVar 0x9b74a70 '__b' '_ForwardIterator2')))

;
    template <typename _ForwardIterator1, typename _ForwardIterator2> _ForwardIterator2 swap_ranges(_ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2) (CompoundStmt 0x9b76240 </usr/include/c++/4.6/bits/stl_algobase.h:161:5, line:172:5>
  (NullStmt 0x9b76018 <line:167:56>)
  (ForStmt 0x9b761f0 <line:169:7, line:170:35>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9b76098 <line:169:14, col:26> '<dependent type>'
      (UnresolvedLookupExpr 0x9b76058 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b412d0 0x9ac7fa0 0x9b5e2b0)
      (DeclRefExpr 0x9b76024 <col:14> '_ForwardIterator1' lvalue ParmVar 0x9b75e40 '__first1' '_ForwardIterator1')
      (DeclRefExpr 0x9b7603c <col:26> '_ForwardIterator1' lvalue ParmVar 0x9b75e80 '__last1' '_ForwardIterator1'))
    (BinaryOperator 0x9b76120 <col:35, col:49> '<dependent type>' ','
      (UnaryOperator 0x9b760d8 <col:35, col:37> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9b760bc <col:37> '_ForwardIterator1' lvalue ParmVar 0x9b75e40 '__first1' '_ForwardIterator1'))
      (UnaryOperator 0x9b76108 <col:47, col:49> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9b760ec <col:49> '_ForwardIterator2' lvalue ParmVar 0x9b75ec0 '__first2' '_ForwardIterator2')))
    (CallExpr 0x9b761c8 <line:170:2, col:35> '<dependent type>'
      (UnresolvedLookupExpr 0x9b76160 <col:2, col:7> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b74b50)
      (DeclRefExpr 0x9b76194 <col:17> '_ForwardIterator1' lvalue ParmVar 0x9b75e40 '__first1' '_ForwardIterator1')
      (DeclRefExpr 0x9b761ac <col:27> '_ForwardIterator2' lvalue ParmVar 0x9b75ec0 '__first2' '_ForwardIterator2')))
  (ReturnStmt 0x9b76230 <line:171:7, col:14>
    (DeclRefExpr 0x9b76214 <col:14> '_ForwardIterator2' lvalue ParmVar 0x9b75ec0 '__first2' '_ForwardIterator2')))

;
    template <typename _Tp = unsigned int> inline const unsigned int &min(const unsigned int &__a, const unsigned int &__b)template <typename _Tp = int> inline const int &min(const int &__a, const int &__b)template <typename _Tp> inline const _Tp &min(const _Tp &__a, const _Tp &__b) (CompoundStmt 0x9b76578 </usr/include/c++/4.6/bits/stl_algobase.h:188:5, line:195:5>
  (IfStmt 0x9b76530 <line:192:7, line:193:9>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9b764e0 <line:192:11, col:17> '<dependent type>'
      (UnresolvedLookupExpr 0x9b764a0 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40ad0 0x9b57c70 0x9b5ddb0)
      (DeclRefExpr 0x9b76470 <col:11> 'const _Tp' lvalue ParmVar 0x9b76340 '__b' 'const _Tp &')
      (DeclRefExpr 0x9b76488 <col:17> 'const _Tp' lvalue ParmVar 0x9b762f0 '__a' 'const _Tp &'))
    (ReturnStmt 0x9b76520 <line:193:2, col:9>
      (DeclRefExpr 0x9b76504 <col:9> 'const _Tp' lvalue ParmVar 0x9b76340 '__b' 'const _Tp &'))
    <<<NULL>>>)
  (ReturnStmt 0x9b76568 <line:194:7, col:14>
    (DeclRefExpr 0x9b7654c <col:14> 'const _Tp' lvalue ParmVar 0x9b762f0 '__a' 'const _Tp &')))

;
    template <typename _Tp> inline const _Tp &max(const _Tp &__a, const _Tp &__b) (CompoundStmt 0x9b76888 </usr/include/c++/4.6/bits/stl_algobase.h:211:5, line:218:5>
  (IfStmt 0x9b76840 <line:215:7, line:216:9>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9b767f0 <line:215:11, col:17> '<dependent type>'
      (UnresolvedLookupExpr 0x9b767b0 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40ad0 0x9b57c70 0x9b5ddb0)
      (DeclRefExpr 0x9b76780 <col:11> 'const _Tp' lvalue ParmVar 0x9b76620 '__a' 'const _Tp &')
      (DeclRefExpr 0x9b76798 <col:17> 'const _Tp' lvalue ParmVar 0x9b76670 '__b' 'const _Tp &'))
    (ReturnStmt 0x9b76830 <line:216:2, col:9>
      (DeclRefExpr 0x9b76814 <col:9> 'const _Tp' lvalue ParmVar 0x9b76670 '__b' 'const _Tp &'))
    <<<NULL>>>)
  (ReturnStmt 0x9b76878 <line:217:7, col:14>
    (DeclRefExpr 0x9b7685c <col:14> 'const _Tp' lvalue ParmVar 0x9b76620 '__a' 'const _Tp &')))

;
    template <typename _Tp, typename _Compare> inline const _Tp &min(const _Tp &__a, const _Tp &__b, _Compare __comp) (CompoundStmt 0x9b76c48 </usr/include/c++/4.6/bits/stl_algobase.h:234:5, line:239:5>
  (IfStmt 0x9b76c00 <line:236:7, line:237:9>
    <<<NULL>>>
    (CallExpr 0x9b76bb0 <line:236:11, col:26> '<dependent type>'
      (DeclRefExpr 0x9b76b64 <col:11> '_Compare' lvalue ParmVar 0x9b76a10 '__comp' '_Compare')
      (DeclRefExpr 0x9b76b7c <col:18> 'const _Tp' lvalue ParmVar 0x9b769d0 '__b' 'const _Tp &')
      (DeclRefExpr 0x9b76b94 <col:23> 'const _Tp' lvalue ParmVar 0x9b76980 '__a' 'const _Tp &'))
    (ReturnStmt 0x9b76bf0 <line:237:2, col:9>
      (DeclRefExpr 0x9b76bd4 <col:9> 'const _Tp' lvalue ParmVar 0x9b769d0 '__b' 'const _Tp &'))
    <<<NULL>>>)
  (ReturnStmt 0x9b76c38 <line:238:7, col:14>
    (DeclRefExpr 0x9b76c1c <col:14> 'const _Tp' lvalue ParmVar 0x9b76980 '__a' 'const _Tp &')))

;
    template <typename _Tp, typename _Compare> inline const _Tp &max(const _Tp &__a, const _Tp &__b, _Compare __comp) (CompoundStmt 0x9b76fd8 </usr/include/c++/4.6/bits/stl_algobase.h:255:5, line:260:5>
  (IfStmt 0x9b76f90 <line:257:7, line:258:9>
    <<<NULL>>>
    (CallExpr 0x9b76f40 <line:257:11, col:26> '<dependent type>'
      (DeclRefExpr 0x9b76ef4 <col:11> '_Compare' lvalue ParmVar 0x9b76dd0 '__comp' '_Compare')
      (DeclRefExpr 0x9b76f0c <col:18> 'const _Tp' lvalue ParmVar 0x9b76d40 '__a' 'const _Tp &')
      (DeclRefExpr 0x9b76f24 <col:23> 'const _Tp' lvalue ParmVar 0x9b76d90 '__b' 'const _Tp &'))
    (ReturnStmt 0x9b76f80 <line:258:2, col:9>
      (DeclRefExpr 0x9b76f64 <col:9> 'const _Tp' lvalue ParmVar 0x9b76d90 '__b' 'const _Tp &'))
    <<<NULL>>>)
  (ReturnStmt 0x9b76fc8 <line:259:7, col:14>
    (DeclRefExpr 0x9b76fac <col:14> 'const _Tp' lvalue ParmVar 0x9b76d40 '__a' 'const _Tp &')))

;
    template <typename _Iterator = unsigned long *> struct _Niter_base :  _Iter_base<unsigned long *, __is_normal_iterator<unsigned long *>::__value> {
        struct _Niter_base;
    }
template <typename _Iterator> struct _Niter_base :  _Iter_base<_Iterator, __is_normal_iterator<_Iterator>::__value> {
        struct _Niter_base;
    };
    template <typename _Iterator = unsigned long *> inline typename _Niter_base<unsigned long *>::iterator_type __niter_base(unsigned long *__it) (CompoundStmt 0x9fc9e08 </usr/include/c++/4.6/bits/stl_algobase.h:272:5, col:58>
  (ReturnStmt 0x9fc9df8 <col:7, col:55>
    (CallExpr 0x9fc9dc8 <col:14, col:55> 'iterator_type':'unsigned long *'
      (ImplicitCastExpr 0x9fc9db8 <col:14, col:43> 'iterator_type (*)(unsigned long *)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9fc9d5c <col:14, col:43> 'iterator_type (unsigned long *)' lvalue CXXMethod 0x9fc79c0 '_S_base' 'iterator_type (unsigned long *)'))
      (ImplicitCastExpr 0x9fc9de8 <col:51> 'unsigned long *':'unsigned long *' <LValueToRValue>
        (DeclRefExpr 0x9fc9d7c <col:51> 'unsigned long *':'unsigned long *' lvalue ParmVar 0x9fc7ad0 '__it' 'unsigned long *':'unsigned long *')))))

template <typename _Iterator> inline typename _Niter_base<_Iterator>::iterator_type __niter_base(_Iterator __it) (CompoundStmt 0x9b781a0 </usr/include/c++/4.6/bits/stl_algobase.h:272:5, col:58>
  (ReturnStmt 0x9b78190 <col:7, col:55>
    (CallExpr 0x9b78170 <col:14, col:55> '<dependent type>'
      (DependentScopeDeclRefExpr 0x9b78130 <col:14, col:43> '<dependent type>' lvalue)
      (DeclRefExpr 0x9b78154 <col:51> '_Iterator' lvalue ParmVar 0x9b775f0 '__it' '_Iterator'))))

;
    template <typename _Iterator> struct _Miter_base :  _Iter_base<_Iterator, __is_move_iterator<_Iterator>::__value> {
        struct _Miter_base;
    };
    template <typename _Iterator> inline typename _Miter_base<_Iterator>::iterator_type __miter_base(_Iterator __it) (CompoundStmt 0x9b78a30 </usr/include/c++/4.6/bits/stl_algobase.h:283:5, col:58>
  (ReturnStmt 0x9b78a20 <col:7, col:55>
    (CallExpr 0x9b78a00 <col:14, col:55> '<dependent type>'
      (DependentScopeDeclRefExpr 0x9b789c0 <col:14, col:43> '<dependent type>' lvalue)
      (DeclRefExpr 0x9b789e4 <col:51> '_Iterator' lvalue ParmVar 0x9b787c0 '__it' '_Iterator'))))

;
    template <bool = false, bool = false, typename  = std::random_access_iterator_tag> struct __copy_move {
        struct __copy_move;
        template <typename _II, typename _OI> static _OI __copy_m(_II __first, _II __last, _OI __result) (CompoundStmt 0x9b79cd8 </usr/include/c++/4.6/bits/stl_algobase.h:325:9, line:334:2>
  (DeclStmt 0x9b798a0 <line:326:4, col:68>
    0x9b79870 "typedef typename iterator_traits<_II>::difference_type _Distance")
  (ForStmt 0x9b79c88 <line:327:4, line:332:6>
    (DeclStmt 0x9b79998 <line:327:8, col:40>
      0x9b798d0 "_Distance __n =
        (CXXOperatorCallExpr 0x9b79970 <col:24, col:33> '<dependent type>'
          (UnresolvedLookupExpr 0x9b79938 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
          (DeclRefExpr 0x9b79904 <col:24> '_II' lvalue ParmVar 0x9b79600 '__last' '_II')
          (DeclRefExpr 0x9b7991c <col:33> '_II' lvalue ParmVar 0x9b795c0 '__first' '_II'))")
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9b79a18 <col:42, col:48> '<dependent type>'
      (UnresolvedLookupExpr 0x9b799d8 <col:46, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b42c70 0x9ac83c0 0x9b5e730)
      (DeclRefExpr 0x9b799a8 <col:42> '_Distance':'typename iterator_traits<_II>::difference_type' lvalue Var 0x9b798d0 '__n' '_Distance':'typename iterator_traits<_II>::difference_type')
      (IntegerLiteral 0x9b799c0 <col:48> 'int' 0))
    (UnaryOperator 0x9b79a58 <col:51, col:53> '<dependent type>' prefix '--'
      (DeclRefExpr 0x9b79a3c <col:53> '_Distance':'typename iterator_traits<_II>::difference_type' lvalue Var 0x9b798d0 '__n' '_Distance':'typename iterator_traits<_II>::difference_type'))
    (CompoundStmt 0x9b79c68 <line:328:6, line:332:6>
      (BinaryOperator 0x9b79bf0 <line:329:8, col:21> '<dependent type>' '='
        (UnaryOperator 0x9b79a88 <col:8, col:9> '<dependent type>' prefix '*'
          (DeclRefExpr 0x9b79a6c <col:9> '_OI' lvalue ParmVar 0x9b79640 '__result' '_OI'))
        (UnaryOperator 0x9b79ab8 <col:20, col:21> '<dependent type>' prefix '*'
          (DeclRefExpr 0x9b79a9c <col:21> '_II' lvalue ParmVar 0x9b795c0 '__first' '_II')))
      (UnaryOperator 0x9b79c20 <line:330:8, col:10> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9b79c08 <col:10> '_II' lvalue ParmVar 0x9b795c0 '__first' '_II'))
      (UnaryOperator 0x9b79c50 <line:331:8, col:10> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9b79c34 <col:10> '_OI' lvalue ParmVar 0x9b79640 '__result' '_OI'))))
  (ReturnStmt 0x9b79cc8 <line:333:4, col:11>
    (DeclRefExpr 0x9b79cac <col:11> '_OI' lvalue ParmVar 0x9b79640 '__result' '_OI')))

;
        inline std::__copy_move<false, false, std::random_access_iterator_tag> &operator=(const std::__copy_move<false, false, std::random_access_iterator_tag> &) throw();
    }
template <bool, bool, typename > struct __copy_move {
        struct __copy_move;
        template <typename _II, typename _OI> static _OI __copy_m(_II __first, _II __last, _OI __result) (CompoundStmt 0x9b79248 </usr/include/c++/4.6/bits/stl_algobase.h:297:9, line:301:2>
  (ForStmt 0x9b791f8 <line:298:4, line:299:19>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9b790e0 <line:298:11, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0x9b790a0 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b412d0 0x9ac7fa0 0x9b5e2b0)
      (DeclRefExpr 0x9b79070 <col:11> '_II' lvalue ParmVar 0x9b78e80 '__first' '_II')
      (DeclRefExpr 0x9b79088 <col:22> '_II' lvalue ParmVar 0x9b78ec0 '__last' '_II'))
    (BinaryOperator 0x9b79168 <col:30, col:44> '<dependent type>' ','
      (UnaryOperator 0x9b79120 <col:30, col:32> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9b79104 <col:32> '_OI' lvalue ParmVar 0x9b78f00 '__result' '_OI'))
      (UnaryOperator 0x9b79150 <col:42, col:44> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9b79134 <col:44> '_II' lvalue ParmVar 0x9b78e80 '__first' '_II')))
    (BinaryOperator 0x9b791e0 <line:299:6, col:19> '<dependent type>' '='
      (UnaryOperator 0x9b79198 <col:6, col:7> '<dependent type>' prefix '*'
        (DeclRefExpr 0x9b79180 <col:7> '_OI' lvalue ParmVar 0x9b78f00 '__result' '_OI'))
      (UnaryOperator 0x9b791c8 <col:18, col:19> '<dependent type>' prefix '*'
        (DeclRefExpr 0x9b791ac <col:19> '_II' lvalue ParmVar 0x9b78e80 '__first' '_II'))))
  (ReturnStmt 0x9b79238 <line:300:4, col:11>
    (DeclRefExpr 0x9b7921c <col:11> '_OI' lvalue ParmVar 0x9b78f00 '__result' '_OI')))

;
    };
    struct __copy_move {
        struct __copy_move;
        template <typename _II, typename _OI> static _OI __copy_m(_II __first, _II __last, _OI __result) (CompoundStmt 0x9b79cd8 </usr/include/c++/4.6/bits/stl_algobase.h:325:9, line:334:2>
  (DeclStmt 0x9b798a0 <line:326:4, col:68>
    0x9b79870 "typedef typename iterator_traits<_II>::difference_type _Distance")
  (ForStmt 0x9b79c88 <line:327:4, line:332:6>
    (DeclStmt 0x9b79998 <line:327:8, col:40>
      0x9b798d0 "_Distance __n =
        (CXXOperatorCallExpr 0x9b79970 <col:24, col:33> '<dependent type>'
          (UnresolvedLookupExpr 0x9b79938 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
          (DeclRefExpr 0x9b79904 <col:24> '_II' lvalue ParmVar 0x9b79600 '__last' '_II')
          (DeclRefExpr 0x9b7991c <col:33> '_II' lvalue ParmVar 0x9b795c0 '__first' '_II'))")
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9b79a18 <col:42, col:48> '<dependent type>'
      (UnresolvedLookupExpr 0x9b799d8 <col:46, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b42c70 0x9ac83c0 0x9b5e730)
      (DeclRefExpr 0x9b799a8 <col:42> '_Distance':'typename iterator_traits<_II>::difference_type' lvalue Var 0x9b798d0 '__n' '_Distance':'typename iterator_traits<_II>::difference_type')
      (IntegerLiteral 0x9b799c0 <col:48> 'int' 0))
    (UnaryOperator 0x9b79a58 <col:51, col:53> '<dependent type>' prefix '--'
      (DeclRefExpr 0x9b79a3c <col:53> '_Distance':'typename iterator_traits<_II>::difference_type' lvalue Var 0x9b798d0 '__n' '_Distance':'typename iterator_traits<_II>::difference_type'))
    (CompoundStmt 0x9b79c68 <line:328:6, line:332:6>
      (BinaryOperator 0x9b79bf0 <line:329:8, col:21> '<dependent type>' '='
        (UnaryOperator 0x9b79a88 <col:8, col:9> '<dependent type>' prefix '*'
          (DeclRefExpr 0x9b79a6c <col:9> '_OI' lvalue ParmVar 0x9b79640 '__result' '_OI'))
        (UnaryOperator 0x9b79ab8 <col:20, col:21> '<dependent type>' prefix '*'
          (DeclRefExpr 0x9b79a9c <col:21> '_II' lvalue ParmVar 0x9b795c0 '__first' '_II')))
      (UnaryOperator 0x9b79c20 <line:330:8, col:10> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9b79c08 <col:10> '_II' lvalue ParmVar 0x9b795c0 '__first' '_II'))
      (UnaryOperator 0x9b79c50 <line:331:8, col:10> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9b79c34 <col:10> '_OI' lvalue ParmVar 0x9b79640 '__result' '_OI'))))
  (ReturnStmt 0x9b79cc8 <line:333:4, col:11>
    (DeclRefExpr 0x9b79cac <col:11> '_OI' lvalue ParmVar 0x9b79640 '__result' '_OI')))

;
        inline std::__copy_move<false, false, std::random_access_iterator_tag> &operator=(const std::__copy_move<false, false, std::random_access_iterator_tag> &) throw();
    };
    struct __copy_move {
        struct __copy_move;
        template <typename _Tp> static _Tp *__copy_m(const _Tp *__first, const _Tp *__last, _Tp *__result) (CompoundStmt 0x9b7c148 </usr/include/c++/4.6/bits/stl_algobase.h:363:9, line:368:2>
  (DeclStmt 0x9b7bdf8 <line:364:4, col:43>
    0x9b7bd30 "const ptrdiff_t _Num =
      (CXXOperatorCallExpr 0x9b7bdd0 <col:27, col:36> '<dependent type>'
        (UnresolvedLookupExpr 0x9b7bd98 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
        (DeclRefExpr 0x9b7bd64 <col:27> 'const _Tp *' lvalue ParmVar 0x9b7bb20 '__last' 'const _Tp *')
        (DeclRefExpr 0x9b7bd7c <col:36> 'const _Tp *' lvalue ParmVar 0x9b7bad0 '__first' 'const _Tp *'))")
  (IfStmt 0x9b7c088 <line:365:4, line:366:61>
    <<<NULL>>>
    (ImplicitCastExpr 0x9b7be30 <line:365:8> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x9b7be20 <col:8> 'ptrdiff_t':'int' <LValueToRValue>
        (DeclRefExpr 0x9b7be08 <col:8> 'const ptrdiff_t':'const int' lvalue Var 0x9b7bd30 '_Num' 'const ptrdiff_t':'const int')))
    (CallExpr 0x9b7c060 <line:366:6, col:61> '<dependent type>'
      (DeclRefExpr 0x9b7bfa4 <col:6> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9b7be40 '__builtin_memmove' 'void *(void *, const void *, unsigned int)')
      (DeclRefExpr 0x9b7bfbc <col:24> '_Tp *' lvalue ParmVar 0x9b7bbb0 '__result' '_Tp *')
      (DeclRefExpr 0x9b7bfd4 <col:34> 'const _Tp *' lvalue ParmVar 0x9b7bad0 '__first' 'const _Tp *')
      (BinaryOperator 0x9b7c048 <col:43, col:57> 'unsigned int' '*'
        (UnaryExprOrTypeTraitExpr 0x9b7bff8 <col:43, col:53> 'unsigned int' sizeof '_Tp')
        (ImplicitCastExpr 0x9b7c038 <col:57> 'unsigned int' <IntegralCast>
          (ImplicitCastExpr 0x9b7c028 <col:57> 'ptrdiff_t':'int' <LValueToRValue>
            (DeclRefExpr 0x9b7c010 <col:57> 'const ptrdiff_t':'const int' lvalue Var 0x9b7bd30 '_Num' 'const ptrdiff_t':'const int')))))
    <<<NULL>>>)
  (ReturnStmt 0x9b7c138 <line:367:4, col:22>
    (CXXOperatorCallExpr 0x9b7c110 <col:11, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0x9b7c0d8 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0)
      (DeclRefExpr 0x9b7c0a4 <col:11> '_Tp *' lvalue ParmVar 0x9b7bbb0 '__result' '_Tp *')
      (DeclRefExpr 0x9b7c0bc <col:22> 'const ptrdiff_t':'const int' lvalue Var 0x9b7bd30 '_Num' 'const ptrdiff_t':'const int'))))

;
    };
    template <bool _IsMove, typename _II, typename _OI> inline _OI __copy_move_a(_II __first, _II __last, _OI __result) (CompoundStmt 0x9b7cf78 </usr/include/c++/4.6/bits/stl_algobase.h:374:5, line:385:5>
  (DeclStmt 0x9b7c560 <line:375:7, col:68>
    0x9b7c530 "typedef typename iterator_traits<_II>::value_type _ValueTypeI")
  (DeclStmt 0x9b7c6f0 <line:376:7, col:68>
    0x9b7c6c0 "typedef typename iterator_traits<_OI>::value_type _ValueTypeO")
  (DeclStmt 0x9b7c840 <line:377:7, col:73>
    0x9b7c810 "typedef typename iterator_traits<_II>::iterator_category _Category")
  (DeclStmt 0x9b7ccd0 <line:378:7, line:381:58>
    0x9b7c860 "const bool __simple =
      (ParenExpr 0x9b7ccb8 <line:378:29, line:381:57> '<dependent type>'
        (BinaryOperator 0x9b7cca0 <line:378:30, line:381:50> '<dependent type>' '&&'
          (BinaryOperator 0x9b7caf8 <line:378:30, line:380:45> '<dependent type>' '&&'
            (BinaryOperator 0x9b7c9d8 <line:378:30, line:379:45> '<dependent type>' '&&'
              (UnaryTypeTraitExpr 0x9b7c8b8 <line:378:30, col:54> '_Bool')
              (DependentScopeDeclRefExpr 0x9b7c9b0 <line:379:26, col:45> '<dependent type>' lvalue))
            (DependentScopeDeclRefExpr 0x9b7cad0 <line:380:26, col:45> '<dependent type>' lvalue))
          (DependentScopeDeclRefExpr 0x9b7cc78 <line:381:12, col:50> '<dependent type>' lvalue)))")
  (ReturnStmt 0x9b7cf68 <line:383:7, line:384:70>
    (CallExpr 0x9b7cf40 <line:383:14, line:384:70> '<dependent type>'
      (DependentScopeDeclRefExpr 0x9b7ced0 <line:383:14, line:384:36> '<dependent type>' lvalue)
      (DeclRefExpr 0x9b7cef4 <col:45> '_II' lvalue ParmVar 0x9b7c270 '__first' '_II')
      (DeclRefExpr 0x9b7cf0c <col:54> '_II' lvalue ParmVar 0x9b7c2b0 '__last' '_II')
      (DeclRefExpr 0x9b7cf24 <col:62> '_OI' lvalue ParmVar 0x9b7c2f0 '__result' '_OI'))))

;
    template <typename _CharT = wchar_t> struct char_traits {
        struct char_traits;
        typedef wchar_t char_type;
        typedef wint_t int_type;
        typedef streamoff off_type;
        typedef wstreampos pos_type;
        typedef mbstate_t state_type;
        static void assign(char_type &__c1, const char_type &__c2) (CompoundStmt 0x9bb5508 </usr/include/c++/4.6/bits/char_traits.h:315:7, col:22>
  (BinaryOperator 0x9bb54f0 <col:9, col:16> 'char_type':'wchar_t' lvalue '='
    (DeclRefExpr 0x9bb54b0 <col:9> 'char_type':'wchar_t' lvalue ParmVar 0x9bb4150 '__c1' 'char_type &')
    (ImplicitCastExpr 0x9bb54e0 <col:16> 'char_type':'wchar_t' <LValueToRValue>
      (DeclRefExpr 0x9bb54c8 <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0x9bb41e0 '__c2' 'const char_type &'))))


        static bool eq(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x9bb5598 </usr/include/c++/4.6/bits/char_traits.h:319:7, col:30>
  (ReturnStmt 0x9bb5588 <col:9, col:24>
    (BinaryOperator 0x9bb5570 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x9bb5550 <col:16> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9bb551c <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0x9bb4300 '__c1' 'const char_type &'))
      (ImplicitCastExpr 0x9bb5560 <col:24> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9bb5534 <col:24> 'const char_type':'const wchar_t' lvalue ParmVar 0x9bb4350 '__c2' 'const char_type &')))))


        static bool lt(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x9bb5628 </usr/include/c++/4.6/bits/char_traits.h:323:7, col:29>
  (ReturnStmt 0x9bb5618 <col:9, col:23>
    (BinaryOperator 0x9bb5600 <col:16, col:23> '_Bool' '<'
      (ImplicitCastExpr 0x9bb55e0 <col:16> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9bb55ac <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0x9bb4470 '__c1' 'const char_type &'))
      (ImplicitCastExpr 0x9bb55f0 <col:23> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9bb55c4 <col:23> 'const char_type':'const wchar_t' lvalue ParmVar 0x9bb44c0 '__c2' 'const char_type &')))))


        static int compare(const char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9bb5790 </usr/include/c++/4.6/bits/char_traits.h:327:7, col:42>
  (ReturnStmt 0x9bb5780 <col:9, col:39>
    (CallExpr 0x9bb5728 <col:16, col:39> 'int'
      (ImplicitCastExpr 0x9bb5718 <col:16> 'int (*)(const wchar_t *, const wchar_t *, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9bb56bc <col:16> 'int (const wchar_t *, const wchar_t *, size_t) throw()' lvalue Function 0x9a3b7d0 'wmemcmp' 'int (const wchar_t *, const wchar_t *, size_t) throw()' (UsingShadow 0x9ba0a20 'wmemcmp')))
      (ImplicitCastExpr 0x9bb5750 <col:24> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9bb5674 <col:24> 'const char_type *' lvalue ParmVar 0x9bb45c0 '__s1' 'const char_type *'))
      (ImplicitCastExpr 0x9bb5760 <col:30> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9bb568c <col:30> 'const char_type *' lvalue ParmVar 0x9bb4610 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0x9bb5770 <col:36> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9bb56a4 <col:36> 'size_t':'unsigned int' lvalue ParmVar 0x9bb4650 '__n' 'size_t':'unsigned int')))))


        static size_t length(const char_type *__s) (CompoundStmt 0x9bb5898 </usr/include/c++/4.6/bits/char_traits.h:331:7, col:29>
  (ReturnStmt 0x9bb5888 <col:9, col:26>
    (CallExpr 0x9bb5858 <col:16, col:26> 'size_t':'unsigned int'
      (ImplicitCastExpr 0x9bb5848 <col:16> 'size_t (*)(const wchar_t *) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9bb57f4 <col:16> 'size_t (const wchar_t *) throw()' lvalue Function 0x9a3b110 'wcslen' 'size_t (const wchar_t *) throw()' (UsingShadow 0x9ba0470 'wcslen')))
      (ImplicitCastExpr 0x9bb5878 <col:23> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9bb57dc <col:23> 'const char_type *' lvalue ParmVar 0x9bb4760 '__s' 'const char_type *')))))


        static const char_type *find(const char_type *__s, size_t __n, const char_type &__a) (CompoundStmt 0x9bb59d8 </usr/include/c++/4.6/bits/char_traits.h:335:7, col:40>
  (ReturnStmt 0x9bb59c8 <col:9, col:37>
    (ImplicitCastExpr 0x9bb59b8 <col:16, col:37> 'const char_type *' <NoOp>
      (CallExpr 0x9bb5960 <col:16, col:37> 'wchar_t *'
        (ImplicitCastExpr 0x9bb5950 <col:16> 'wchar_t *(*)(const wchar_t *, wchar_t, size_t) throw()' <FunctionToPointerDecay>
          (DeclRefExpr 0x9bb5930 <col:16> 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' lvalue Function 0x9a3b620 'wmemchr' 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' (UsingShadow 0x9ba0e80 'wmemchr')))
        (ImplicitCastExpr 0x9bb5988 <col:24> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9bb58e8 <col:24> 'const char_type *' lvalue ParmVar 0x9bb4860 '__s' 'const char_type *'))
        (ImplicitCastExpr 0x9bb5998 <col:29> 'char_type':'wchar_t' <LValueToRValue>
          (DeclRefExpr 0x9bb5900 <col:29> 'const char_type':'const wchar_t' lvalue ParmVar 0x9bb48f0 '__a' 'const char_type &'))
        (ImplicitCastExpr 0x9bb59a8 <col:34> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9bb5918 <col:34> 'size_t':'unsigned int' lvalue ParmVar 0x9bb48a0 '__n' 'size_t':'unsigned int'))))))


        static char_type *move(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9bb5b40 </usr/include/c++/4.6/bits/char_traits.h:339:7, col:43>
  (ReturnStmt 0x9bb5b30 <col:9, col:40>
    (CallExpr 0x9bb5ad8 <col:16, col:40> 'wchar_t *'
      (ImplicitCastExpr 0x9bb5ac8 <col:16> 'wchar_t *(*)(wchar_t *, const wchar_t *, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9bb5a6c <col:16> 'wchar_t *(wchar_t *, const wchar_t *, size_t) throw()' lvalue Function 0x9a3bb50 'wmemmove' 'wchar_t *(wchar_t *, const wchar_t *, size_t) throw()' (UsingShadow 0x9ba0b00 'wmemmove')))
      (ImplicitCastExpr 0x9bb5b00 <col:25> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9bb5a24 <col:25> 'char_type *' lvalue ParmVar 0x9bb4a50 '__s1' 'char_type *'))
      (ImplicitCastExpr 0x9bb5b10 <col:31> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9bb5a3c <col:31> 'const char_type *' lvalue ParmVar 0x9bb4aa0 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0x9bb5b20 <col:37> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9bb5a54 <col:37> 'size_t':'unsigned int' lvalue ParmVar 0x9bb4ae0 '__n' 'size_t':'unsigned int')))))


        static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9bb5c80 </usr/include/c++/4.6/bits/char_traits.h:343:7, col:42>
  (ReturnStmt 0x9bb5c70 <col:9, col:39>
    (CallExpr 0x9bb5c18 <col:16, col:39> 'wchar_t *'
      (ImplicitCastExpr 0x9bb5c08 <col:16> 'wchar_t *(*)(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9bb5bd4 <col:16> 'wchar_t *(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' lvalue Function 0x9a3b980 'wmemcpy' 'wchar_t *(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' (UsingShadow 0x9ba0a90 'wmemcpy')))
      (ImplicitCastExpr 0x9bb5c40 <col:24> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9bb5b8c <col:24> 'char_type *' lvalue ParmVar 0x9bb4bf0 '__s1' 'char_type *'))
      (ImplicitCastExpr 0x9bb5c50 <col:30> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9bb5ba4 <col:30> 'const char_type *' lvalue ParmVar 0x9bb4c40 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0x9bb5c60 <col:36> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9bb5bbc <col:36> 'size_t':'unsigned int' lvalue ParmVar 0x9bb4c80 '__n' 'size_t':'unsigned int')))))


        static char_type *assign(char_type *__s, size_t __n, char_type __a) (CompoundStmt 0x9bb6e00 </usr/include/c++/4.6/bits/char_traits.h:347:7, col:40>
  (ReturnStmt 0x9bb6df0 <col:9, col:37>
    (CallExpr 0x9bb6d98 <col:16, col:37> 'wchar_t *'
      (ImplicitCastExpr 0x9bb6d88 <col:16> 'wchar_t *(*)(wchar_t *, wchar_t, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9bb6d2c <col:16> 'wchar_t *(wchar_t *, wchar_t, size_t) throw()' lvalue Function 0x9a3bd10 'wmemset' 'wchar_t *(wchar_t *, wchar_t, size_t) throw()' (UsingShadow 0x9ba0b70 'wmemset')))
      (ImplicitCastExpr 0x9bb6dc0 <col:24> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9bb6ce4 <col:24> 'char_type *' lvalue ParmVar 0x9bb4d60 '__s' 'char_type *'))
      (ImplicitCastExpr 0x9bb6dd0 <col:29> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9bb6cfc <col:29> 'char_type':'wchar_t' lvalue ParmVar 0x9bb4de0 '__a' 'char_type':'wchar_t'))
      (ImplicitCastExpr 0x9bb6de0 <col:34> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9bb6d14 <col:34> 'size_t':'unsigned int' lvalue ParmVar 0x9bb4da0 '__n' 'size_t':'unsigned int')))))


        static char_type to_char_type(const int_type &__c) (CompoundStmt 0x9bb6e80 </usr/include/c++/4.6/bits/char_traits.h:351:7, col:32>
  (ReturnStmt 0x9bb6e70 <col:9, col:29>
    (CXXFunctionalCastExpr 0x9bb6e58 <col:16, col:29> 'char_type':'wchar_t' functional cast to char_type <NoOp>
      (ImplicitCastExpr 0x9bb6e48 <col:26> 'char_type':'wchar_t' <IntegralCast>
        (ImplicitCastExpr 0x9bb6e38 <col:26> 'int_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9bb6e20 <col:26> 'const int_type':'const unsigned int' lvalue ParmVar 0x9bb4f50 '__c' 'const int_type &'))))))


        static int_type to_int_type(const char_type &__c) (CompoundStmt 0x9bb6f00 </usr/include/c++/4.6/bits/char_traits.h:355:7, col:31>
  (ReturnStmt 0x9bb6ef0 <col:9, col:28>
    (CXXFunctionalCastExpr 0x9bb6ed8 <col:16, col:28> 'int_type':'unsigned int' functional cast to int_type <NoOp>
      (ImplicitCastExpr 0x9bb6ec8 <col:25> 'int_type':'unsigned int' <IntegralCast>
        (ImplicitCastExpr 0x9bb6eb8 <col:25> 'char_type':'wchar_t' <LValueToRValue>
          (DeclRefExpr 0x9bb6ea0 <col:25> 'const char_type':'const wchar_t' lvalue ParmVar 0x9bb5070 '__c' 'const char_type &'))))))


        static bool eq_int_type(const int_type &__c1, const int_type &__c2) (CompoundStmt 0x9bb6f90 </usr/include/c++/4.6/bits/char_traits.h:359:7, col:30>
  (ReturnStmt 0x9bb6f80 <col:9, col:24>
    (BinaryOperator 0x9bb6f68 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x9bb6f48 <col:16> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9bb6f14 <col:16> 'const int_type':'const unsigned int' lvalue ParmVar 0x9bb5190 '__c1' 'const int_type &'))
      (ImplicitCastExpr 0x9bb6f58 <col:24> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9bb6f2c <col:24> 'const int_type':'const unsigned int' lvalue ParmVar 0x9bb51e0 '__c2' 'const int_type &')))))


        static int_type eof() (CompoundStmt 0x9bb7008 </usr/include/c++/4.6/bits/char_traits.h:363:7, col:45>
  (ReturnStmt 0x9bb6ff8 <col:9, col:42>
    (CXXStaticCastExpr 0x9bb6fe0 <col:16, col:42> 'int_type':'unsigned int' static_cast<int_type> <NoOp>
      (ParenExpr 0x9bb6fc0 </usr/include/wchar.h:119:15, col:27> 'unsigned int'
        (IntegerLiteral 0x9bb6fa8 <col:16> 'unsigned int' 4294967295)))))


        static int_type not_eof(const int_type &__c) (CompoundStmt 0x9bb71e0 </usr/include/c++/4.6/bits/char_traits.h:367:7, col:51>
  (ReturnStmt 0x9bb71d0 <col:9, col:46>
    (ConditionalOperator 0x9bb71b0 <col:16, col:46> 'unsigned int'
      (CallExpr 0x9bb7128 <col:16, col:38> '_Bool'
        (ImplicitCastExpr 0x9bb7118 <col:16> '_Bool (*)(const int_type &, const int_type &)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9bb701c <col:16> '_Bool (const int_type &, const int_type &)' lvalue CXXMethod 0x9bb5280 'eq_int_type' '_Bool (const int_type &, const int_type &)'))
        (DeclRefExpr 0x9bb7034 <col:28> 'const int_type':'const unsigned int' lvalue ParmVar 0x9bb5390 '__c' 'const int_type &')
        (MaterializeTemporaryExpr 0x9bb7150 <col:33, col:37> 'const int_type':'const unsigned int' lvalue
          (CallExpr 0x9bb70b8 <col:33, col:37> 'int_type':'unsigned int'
            (ImplicitCastExpr 0x9bb70a8 <col:33> 'int_type (*)(void)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9bb704c <col:33> 'int_type (void)' lvalue CXXMethod 0x9bb5320 'eof' 'int_type (void)')))))
      (ImplicitCastExpr 0x9bb71a0 <col:42> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0x9bb7160 <col:42> 'int' 0))
      (ImplicitCastExpr 0x9bb7190 <col:46> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9bb7178 <col:46> 'const int_type':'const unsigned int' lvalue ParmVar 0x9bb5390 '__c' 'const int_type &')))))


    }
template <typename _CharT = char> struct char_traits {
        struct char_traits;
        typedef char char_type;
        typedef int int_type;
        typedef streampos pos_type;
        typedef streamoff off_type;
        typedef mbstate_t state_type;
        static void assign(char_type &__c1, const char_type &__c2) (CompoundStmt 0x9bb0678 </usr/include/c++/4.6/bits/char_traits.h:244:7, col:22>
  (BinaryOperator 0x9bb0660 <col:9, col:16> 'char_type':'char' lvalue '='
    (DeclRefExpr 0x9bb0620 <col:9> 'char_type':'char' lvalue ParmVar 0x9baec40 '__c1' 'char_type &')
    (ImplicitCastExpr 0x9bb0650 <col:16> 'char_type':'char' <LValueToRValue>
      (DeclRefExpr 0x9bb0638 <col:16> 'const char_type':'const char' lvalue ParmVar 0x9baecd0 '__c2' 'const char_type &'))))


        static bool eq(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x9bb0728 </usr/include/c++/4.6/bits/char_traits.h:248:7, col:30>
  (ReturnStmt 0x9bb0718 <col:9, col:24>
    (BinaryOperator 0x9bb0700 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x9bb06d0 <col:16> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9bb06c0 <col:16> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9bb068c <col:16> 'const char_type':'const char' lvalue ParmVar 0x9baedf0 '__c1' 'const char_type &')))
      (ImplicitCastExpr 0x9bb06f0 <col:24> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9bb06e0 <col:24> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9bb06a4 <col:24> 'const char_type':'const char' lvalue ParmVar 0x9baee40 '__c2' 'const char_type &'))))))


        static bool lt(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x9bb07d8 </usr/include/c++/4.6/bits/char_traits.h:252:7, col:29>
  (ReturnStmt 0x9bb07c8 <col:9, col:23>
    (BinaryOperator 0x9bb07b0 <col:16, col:23> '_Bool' '<'
      (ImplicitCastExpr 0x9bb0780 <col:16> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9bb0770 <col:16> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9bb073c <col:16> 'const char_type':'const char' lvalue ParmVar 0x9baf5c0 '__c1' 'const char_type &')))
      (ImplicitCastExpr 0x9bb07a0 <col:23> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9bb0790 <col:23> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9bb0754 <col:23> 'const char_type':'const char' lvalue ParmVar 0x9baf610 '__c2' 'const char_type &'))))))


        static int compare(const char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9bb0900 </usr/include/c++/4.6/bits/char_traits.h:256:7, col:51>
  (ReturnStmt 0x9bb08f0 <col:9, col:48>
    (CallExpr 0x9bb0878 <col:16, col:48> 'int'
      (ImplicitCastExpr 0x9bb0868 <col:16> 'int (*)(const void *, const void *, unsigned int)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9bb07ec <col:16> 'int (const void *, const void *, unsigned int)' lvalue Function 0x9b8b850 '__builtin_memcmp' 'int (const void *, const void *, unsigned int)'))
      (ImplicitCastExpr 0x9bb08b0 <col:33> 'const void *' <BitCast>
        (ImplicitCastExpr 0x9bb08a0 <col:33> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9bb0804 <col:33> 'const char_type *' lvalue ParmVar 0x9baf710 '__s1' 'const char_type *')))
      (ImplicitCastExpr 0x9bb08d0 <col:39> 'const void *' <BitCast>
        (ImplicitCastExpr 0x9bb08c0 <col:39> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9bb081c <col:39> 'const char_type *' lvalue ParmVar 0x9baf760 '__s2' 'const char_type *')))
      (ImplicitCastExpr 0x9bb08e0 <col:45> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9bb0834 <col:45> 'size_t':'unsigned int' lvalue ParmVar 0x9baf7a0 '__n' 'size_t':'unsigned int')))))


        static size_t length(const char_type *__s) (CompoundStmt 0x9bb0a98 </usr/include/c++/4.6/bits/char_traits.h:260:7, col:39>
  (ReturnStmt 0x9bb0a88 <col:9, col:36>
    (CallExpr 0x9bb0a58 <col:16, col:36> 'unsigned int'
      (ImplicitCastExpr 0x9bb0a48 <col:16> 'unsigned int (*)(const char *)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9bb09f4 <col:16> 'unsigned int (const char *)' lvalue Function 0x9bb0920 '__builtin_strlen' 'unsigned int (const char *)'))
      (ImplicitCastExpr 0x9bb0a78 <col:33> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9bb0a0c <col:33> 'const char_type *' lvalue ParmVar 0x9baf8b0 '__s' 'const char_type *')))))


        static const char_type *find(const char_type *__s, size_t __n, const char_type &__a) (CompoundStmt 0x9bb0d58 </usr/include/c++/4.6/bits/char_traits.h:264:7, col:80>
  (ReturnStmt 0x9bb0d48 <col:9, col:77>
    (CXXStaticCastExpr 0x9bb0d30 <col:16, col:77> 'const char_type *' static_cast<const char_type *> <BitCast>
      (CallExpr 0x9bb0ca8 <col:46, col:76> 'void *'
        (ImplicitCastExpr 0x9bb0c98 <col:46> 'void *(*)(const void *, int, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9bb0c14 <col:46> 'void *(const void *, int, unsigned int)' lvalue Function 0x9bb0ab0 '__builtin_memchr' 'void *(const void *, int, unsigned int)'))
        (ImplicitCastExpr 0x9bb0ce0 <col:63> 'const void *' <BitCast>
          (ImplicitCastExpr 0x9bb0cd0 <col:63> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x9bb0c2c <col:63> 'const char_type *' lvalue ParmVar 0x9baf9b0 '__s' 'const char_type *')))
        (ImplicitCastExpr 0x9bb0d00 <col:68> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9bb0cf0 <col:68> 'char_type':'char' <LValueToRValue>
            (DeclRefExpr 0x9bb0c44 <col:68> 'const char_type':'const char' lvalue ParmVar 0x9bafa40 '__a' 'const char_type &')))
        (ImplicitCastExpr 0x9bb0d10 <col:73> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9bb0c5c <col:73> 'size_t':'unsigned int' lvalue ParmVar 0x9baf9f0 '__n' 'size_t':'unsigned int'))))))


        static char_type *move(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9bb0ea8 </usr/include/c++/4.6/bits/char_traits.h:268:7, col:77>
  (ReturnStmt 0x9bb0e98 <col:9, col:74>
    (CXXStaticCastExpr 0x9bb0e80 <col:16, col:74> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0x9bb0df8 <col:40, col:73> 'void *'
        (ImplicitCastExpr 0x9bb0de8 <col:40> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9bb0d6c <col:40> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9b7be40 '__builtin_memmove' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0x9bb0e30 <col:58> 'void *' <BitCast>
          (ImplicitCastExpr 0x9bb0e20 <col:58> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x9bb0d84 <col:58> 'char_type *' lvalue ParmVar 0x9bafba0 '__s1' 'char_type *')))
        (ImplicitCastExpr 0x9bb0e50 <col:64> 'const void *' <BitCast>
          (ImplicitCastExpr 0x9bb0e40 <col:64> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x9bb0d9c <col:64> 'const char_type *' lvalue ParmVar 0x9bafbf0 '__s2' 'const char_type *')))
        (ImplicitCastExpr 0x9bb0e60 <col:70> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9bb0db4 <col:70> 'size_t':'unsigned int' lvalue ParmVar 0x9bafc30 '__n' 'size_t':'unsigned int'))))))


        static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9bb1148 </usr/include/c++/4.6/bits/char_traits.h:272:7, col:76>
  (ReturnStmt 0x9bb1138 <col:9, col:73>
    (CXXStaticCastExpr 0x9bb1120 <col:16, col:73> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0x9bb1098 <col:40, col:72> 'void *'
        (ImplicitCastExpr 0x9bb1088 <col:40> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9bb1024 <col:40> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9bb0ec0 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0x9bb10d0 <col:57> 'void *' <BitCast>
          (ImplicitCastExpr 0x9bb10c0 <col:57> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x9bb103c <col:57> 'char_type *' lvalue ParmVar 0x9bafd40 '__s1' 'char_type *')))
        (ImplicitCastExpr 0x9bb10f0 <col:63> 'const void *' <BitCast>
          (ImplicitCastExpr 0x9bb10e0 <col:63> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x9bb1054 <col:63> 'const char_type *' lvalue ParmVar 0x9bafd90 '__s2' 'const char_type *')))
        (ImplicitCastExpr 0x9bb1100 <col:69> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9bb106c <col:69> 'size_t':'unsigned int' lvalue ParmVar 0x9bafdd0 '__n' 'size_t':'unsigned int'))))))


        static char_type *assign(char_type *__s, size_t __n, char_type __a) (CompoundStmt 0x9bb1298 </usr/include/c++/4.6/bits/char_traits.h:276:7, col:74>
  (ReturnStmt 0x9bb1288 <col:9, col:71>
    (CXXStaticCastExpr 0x9bb1270 <col:16, col:71> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0x9bb11e8 <col:40, col:70> 'void *'
        (ImplicitCastExpr 0x9bb11d8 <col:40> 'void *(*)(void *, int, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9bb115c <col:40> 'void *(void *, int, unsigned int)' lvalue Function 0x9b87bd0 '__builtin_memset' 'void *(void *, int, unsigned int)'))
        (ImplicitCastExpr 0x9bb1220 <col:57> 'void *' <BitCast>
          (ImplicitCastExpr 0x9bb1210 <col:57> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x9bb1174 <col:57> 'char_type *' lvalue ParmVar 0x9bafeb0 '__s' 'char_type *')))
        (ImplicitCastExpr 0x9bb1240 <col:62> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9bb1230 <col:62> 'char_type':'char' <LValueToRValue>
            (DeclRefExpr 0x9bb118c <col:62> 'char_type':'char' lvalue ParmVar 0x9baff30 '__a' 'char_type':'char')))
        (ImplicitCastExpr 0x9bb1250 <col:67> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9bb11a4 <col:67> 'size_t':'unsigned int' lvalue ParmVar 0x9bafef0 '__n' 'size_t':'unsigned int'))))))


        static char_type to_char_type(const int_type &__c) (CompoundStmt 0x9bb1318 </usr/include/c++/4.6/bits/char_traits.h:280:7, col:45>
  (ReturnStmt 0x9bb1308 <col:9, col:42>
    (CXXStaticCastExpr 0x9bb12f0 <col:16, col:42> 'char_type':'char' static_cast<char_type> <NoOp>
      (ImplicitCastExpr 0x9bb12e0 <col:39> 'char_type':'char' <IntegralCast>
        (ImplicitCastExpr 0x9bb12d0 <col:39> 'int_type':'int' <LValueToRValue>
          (DeclRefExpr 0x9bb12ac <col:39> 'const int_type':'const int' lvalue ParmVar 0x9bb00c0 '__c' 'const int_type &'))))))


        static int_type to_int_type(const char_type &__c) (CompoundStmt 0x9bb13d0 </usr/include/c++/4.6/bits/char_traits.h:286:7, col:72>
  (ReturnStmt 0x9bb13c0 <col:9, col:69>
    (CXXStaticCastExpr 0x9bb13a8 <col:16, col:69> 'int_type':'int' static_cast<int_type> <NoOp>
      (ImplicitCastExpr 0x9bb1398 <col:38, col:68> 'int_type':'int' <IntegralCast>
        (CXXStaticCastExpr 0x9bb1378 <col:38, col:68> 'unsigned char' static_cast<unsigned char> <NoOp>
          (ImplicitCastExpr 0x9bb1368 <col:65> 'unsigned char' <IntegralCast>
            (ImplicitCastExpr 0x9bb1358 <col:65> 'char_type':'char' <LValueToRValue>
              (DeclRefExpr 0x9bb132c <col:65> 'const char_type':'const char' lvalue ParmVar 0x9bb01e0 '__c' 'const char_type &'))))))))


        static bool eq_int_type(const int_type &__c1, const int_type &__c2) (CompoundStmt 0x9bb1460 </usr/include/c++/4.6/bits/char_traits.h:290:7, col:30>
  (ReturnStmt 0x9bb1450 <col:9, col:24>
    (BinaryOperator 0x9bb1438 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x9bb1418 <col:16> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0x9bb13e4 <col:16> 'const int_type':'const int' lvalue ParmVar 0x9bb0300 '__c1' 'const int_type &'))
      (ImplicitCastExpr 0x9bb1428 <col:24> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0x9bb13fc <col:24> 'const int_type':'const int' lvalue ParmVar 0x9bb0350 '__c2' 'const int_type &')))))


        static int_type eof() (CompoundStmt 0x9bb14d8 </usr/include/c++/4.6/bits/char_traits.h:294:7, col:59>
  (ReturnStmt 0x9bb14c8 <col:9, col:56>
    (CXXStaticCastExpr 0x9bb14b0 <col:16, col:56> 'int_type':'int' static_cast<int_type> <NoOp>
      (UnaryOperator 0x9bb1490 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:1149:28, col:29> 'int' prefix '-'
        (IntegerLiteral 0x9bb1478 <col:29> 'int' 1)))))


        static int_type not_eof(const int_type &__c) (CompoundStmt 0x9bb3d98 </usr/include/c++/4.6/bits/char_traits.h:298:7, col:42>
  (ReturnStmt 0x9bb3d88 <col:9, col:37>
    (ConditionalOperator 0x9bb3d68 <col:16, col:37> 'int'
      (ParenExpr 0x9bb3d10 <col:16, col:29> '_Bool'
        (BinaryOperator 0x9bb3cf8 <col:17, col:28> '_Bool' '=='
          (ImplicitCastExpr 0x9bb3ce8 <col:17> 'int_type':'int' <LValueToRValue>
            (DeclRefExpr 0x9bb14ec <col:17> 'const int_type':'const int' lvalue ParmVar 0x9bb0500 '__c' 'const int_type &'))
          (CallExpr 0x9bb3cc8 <col:24, col:28> 'int_type':'int'
            (ImplicitCastExpr 0x9bb3cb8 <col:24> 'int_type (*)(void)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9bb1504 <col:24> 'int_type (void)' lvalue CXXMethod 0x9bb0490 'eof' 'int_type (void)')))))
      (IntegerLiteral 0x9bb3d28 <col:33> 'int' 0)
      (ImplicitCastExpr 0x9bb3d58 <col:37> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0x9bb3d40 <col:37> 'const int_type':'const int' lvalue ParmVar 0x9bb0500 '__c' 'const int_type &')))))


    }
template <typename _CharT> struct char_traits;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class istreambuf_iterator
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class istreambuf_iterator
template <typename _CharT, typename _Traits> class istreambuf_iterator;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class ostreambuf_iterator
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class ostreambuf_iterator
template <typename _CharT, typename _Traits> class ostreambuf_iterator;
    template <bool _IsMove, typename _CharT> typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type __copy_move_a2(_CharT *, _CharT *, ostreambuf_iterator<_CharT, char_traits<_CharT> >);
    template <bool _IsMove, typename _CharT> typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type __copy_move_a2(const _CharT *, const _CharT *, ostreambuf_iterator<_CharT, char_traits<_CharT> >);
    template <bool _IsMove, typename _CharT> typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, _CharT *>::__type __copy_move_a2(istreambuf_iterator<_CharT, char_traits<_CharT> >, istreambuf_iterator<_CharT, char_traits<_CharT> >, _CharT *);
    template <bool _IsMove, typename _II, typename _OI> inline _OI __copy_move_a2(_II __first, _II __last, _OI __result) (CompoundStmt 0x9b7fbd8 </usr/include/c++/4.6/bits/stl_algobase.h:419:5, line:423:5>
  (ReturnStmt 0x9b7fbc8 <line:420:7, line:422:39>
    (CXXUnresolvedConstructExpr 0x9b7fba8 <line:420:14, line:422:39> '_OI'
      (CallExpr 0x9b7fb80 <line:420:18, line:422:38> '<dependent type>'
        (UnresolvedLookupExpr 0x9b7f980 <line:420:18, col:44> '<dependent type>' lvalue (no ADL) = '1' 0x9b7c410)
        (CallExpr 0x9b7fa50 <col:46, col:71> '<dependent type>'
          (UnresolvedLookupExpr 0x9b7fa00 <col:46, col:51> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b78040)
          (DeclRefExpr 0x9b7fa34 <col:64> '_II' lvalue ParmVar 0x9b7f790 '__first' '_II'))
        (CallExpr 0x9b7fad8 <line:421:11, col:35> '<dependent type>'
          (UnresolvedLookupExpr 0x9b7fa88 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b78040)
          (DeclRefExpr 0x9b7fabc <col:29> '_II' lvalue ParmVar 0x9b7f7d0 '__last' '_II'))
        (CallExpr 0x9b7fb60 <line:422:11, col:37> '<dependent type>'
          (UnresolvedLookupExpr 0x9b7fb10 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b78040)
          (DeclRefExpr 0x9b7fb44 <col:29> '_OI' lvalue ParmVar 0x9b7f810 '__result' '_OI'))))))

;
    template <typename _II = unsigned long *, typename _OI = unsigned long *> inline unsigned long *copy(unsigned long *__first, unsigned long *__last, unsigned long *__result)template <typename _II = std::_Bit_const_iterator, typename _OI = std::_Bit_iterator> inline std::_Bit_iterator copy(std::_Bit_const_iterator __first, std::_Bit_const_iterator __last, std::_Bit_iterator __result)template <typename _II, typename _OI> inline _OI copy(_II __first, _II __last, _OI __result) (CompoundStmt 0x9b806c8 </usr/include/c++/4.6/bits/stl_algobase.h:445:5, line:455:5>
  (NullStmt 0x9b7fe58 <line:450:54>)
  (ReturnStmt 0x9b806b8 <line:452:7, line:454:18>
    (ParenExpr 0x9b806a0 <line:452:14, line:454:18> '<dependent type>'
      (CallExpr 0x9b80678 <line:452:15, line:454:17> '<dependent type>'
        (UnresolvedLookupExpr 0x9b804d8 <line:452:15, col:67> '<dependent type>' lvalue (no ADL) = '1' 0x9b7e500 0x9b7ed50 0x9b7f650 0x9b7f900)
        (CallExpr 0x9b805b8 <line:453:9, col:34> '<dependent type>'
          (UnresolvedLookupExpr 0x9b80568 <col:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b788d0)
          (DeclRefExpr 0x9b8059c <col:27> '_II' lvalue ParmVar 0x9b7fcb0 '__first' '_II'))
        (CallExpr 0x9b80640 <col:37, col:61> '<dependent type>'
          (UnresolvedLookupExpr 0x9b805f0 <col:37, col:42> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b788d0)
          (DeclRefExpr 0x9b80624 <col:55> '_II' lvalue ParmVar 0x9b7fcf0 '__last' '_II'))
        (DeclRefExpr 0x9b80660 <line:454:9> '_OI' lvalue ParmVar 0x9b7fd30 '__result' '_OI')))))

;
    template <bool = false, bool = false, typename  = std::random_access_iterator_tag> struct __copy_move_backward {
        struct __copy_move_backward;
        template <typename _BI1, typename _BI2> static _BI2 __copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result) (CompoundStmt 0x9b81868 </usr/include/c++/4.6/bits/stl_algobase.h:528:9, line:533:2>
  (DeclStmt 0x9b814b8 <line:529:4, col:55>
    0x9b81480 "typename iterator_traits<_BI1>::difference_type __n")
  (ForStmt 0x9b81818 <line:530:4, line:531:23>
    (BinaryOperator 0x9b81690 <line:530:9, col:24> '<dependent type>' '='
      (DeclRefExpr 0x9b814c8 <col:9> 'typename iterator_traits<_BI1>::difference_type' lvalue Var 0x9b81480 '__n' 'typename iterator_traits<_BI1>::difference_type')
      (CXXOperatorCallExpr 0x9b81548 <col:15, col:24> '<dependent type>'
        (UnresolvedLookupExpr 0x9b81510 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
        (DeclRefExpr 0x9b814e0 <col:15> '_BI1' lvalue ParmVar 0x9b81210 '__last' '_BI1')
        (DeclRefExpr 0x9b814f8 <col:24> '_BI1' lvalue ParmVar 0x9b811d0 '__first' '_BI1')))
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9b81718 <col:33, col:39> '<dependent type>'
      (UnresolvedLookupExpr 0x9b816d8 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b42c70 0x9ac83c0 0x9b5e730)
      (DeclRefExpr 0x9b816a8 <col:33> 'typename iterator_traits<_BI1>::difference_type' lvalue Var 0x9b81480 '__n' 'typename iterator_traits<_BI1>::difference_type')
      (IntegerLiteral 0x9b816c0 <col:39> 'int' 0))
    (UnaryOperator 0x9b81758 <col:42, col:44> '<dependent type>' prefix '--'
      (DeclRefExpr 0x9b8173c <col:44> 'typename iterator_traits<_BI1>::difference_type' lvalue Var 0x9b81480 '__n' 'typename iterator_traits<_BI1>::difference_type'))
    (BinaryOperator 0x9b81800 <line:531:6, col:23> '<dependent type>' '='
      (UnaryOperator 0x9b817a0 <col:6, col:9> '<dependent type>' prefix '*'
        (UnaryOperator 0x9b81788 <col:7, col:9> '<dependent type>' prefix '--'
          (DeclRefExpr 0x9b8176c <col:9> '_BI2' lvalue ParmVar 0x9b81250 '__result' '_BI2')))
      (UnaryOperator 0x9b817e8 <col:20, col:23> '<dependent type>' prefix '*'
        (UnaryOperator 0x9b817d0 <col:21, col:23> '<dependent type>' prefix '--'
          (DeclRefExpr 0x9b817b4 <col:23> '_BI1' lvalue ParmVar 0x9b81210 '__last' '_BI1')))))
  (ReturnStmt 0x9b81858 <line:532:4, col:11>
    (DeclRefExpr 0x9b8183c <col:11> '_BI2' lvalue ParmVar 0x9b81250 '__result' '_BI2')))

;
        inline std::__copy_move_backward<false, false, std::random_access_iterator_tag> &operator=(const std::__copy_move_backward<false, false, std::random_access_iterator_tag> &) throw();
    }
template <bool, bool, typename > struct __copy_move_backward {
        struct __copy_move_backward;
        template <typename _BI1, typename _BI2> static _BI2 __copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result) (CompoundStmt 0x9b80e60 </usr/include/c++/4.6/bits/stl_algobase.h:500:9, line:504:2>
  (WhileStmt 0x9b80e20 <line:501:4, line:502:23>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9b80d50 <line:501:11, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0x9b80d10 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b412d0 0x9ac7fa0 0x9b5e2b0)
      (DeclRefExpr 0x9b80ce0 <col:11> '_BI1' lvalue ParmVar 0x9b80b20 '__first' '_BI1')
      (DeclRefExpr 0x9b80cf8 <col:22> '_BI1' lvalue ParmVar 0x9b80b60 '__last' '_BI1'))
    (BinaryOperator 0x9b80e08 <line:502:6, col:23> '<dependent type>' '='
      (UnaryOperator 0x9b80da8 <col:6, col:9> '<dependent type>' prefix '*'
        (UnaryOperator 0x9b80d90 <col:7, col:9> '<dependent type>' prefix '--'
          (DeclRefExpr 0x9b80d74 <col:9> '_BI2' lvalue ParmVar 0x9b80ba0 '__result' '_BI2')))
      (UnaryOperator 0x9b80df0 <col:20, col:23> '<dependent type>' prefix '*'
        (UnaryOperator 0x9b80dd8 <col:21, col:23> '<dependent type>' prefix '--'
          (DeclRefExpr 0x9b80dbc <col:23> '_BI1' lvalue ParmVar 0x9b80b60 '__last' '_BI1')))))
  (ReturnStmt 0x9b80e50 <line:503:4, col:11>
    (DeclRefExpr 0x9b80e34 <col:11> '_BI2' lvalue ParmVar 0x9b80ba0 '__result' '_BI2')))

;
    };
    struct __copy_move_backward {
        struct __copy_move_backward;
        template <typename _BI1, typename _BI2> static _BI2 __copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result) (CompoundStmt 0x9b81868 </usr/include/c++/4.6/bits/stl_algobase.h:528:9, line:533:2>
  (DeclStmt 0x9b814b8 <line:529:4, col:55>
    0x9b81480 "typename iterator_traits<_BI1>::difference_type __n")
  (ForStmt 0x9b81818 <line:530:4, line:531:23>
    (BinaryOperator 0x9b81690 <line:530:9, col:24> '<dependent type>' '='
      (DeclRefExpr 0x9b814c8 <col:9> 'typename iterator_traits<_BI1>::difference_type' lvalue Var 0x9b81480 '__n' 'typename iterator_traits<_BI1>::difference_type')
      (CXXOperatorCallExpr 0x9b81548 <col:15, col:24> '<dependent type>'
        (UnresolvedLookupExpr 0x9b81510 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
        (DeclRefExpr 0x9b814e0 <col:15> '_BI1' lvalue ParmVar 0x9b81210 '__last' '_BI1')
        (DeclRefExpr 0x9b814f8 <col:24> '_BI1' lvalue ParmVar 0x9b811d0 '__first' '_BI1')))
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9b81718 <col:33, col:39> '<dependent type>'
      (UnresolvedLookupExpr 0x9b816d8 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b42c70 0x9ac83c0 0x9b5e730)
      (DeclRefExpr 0x9b816a8 <col:33> 'typename iterator_traits<_BI1>::difference_type' lvalue Var 0x9b81480 '__n' 'typename iterator_traits<_BI1>::difference_type')
      (IntegerLiteral 0x9b816c0 <col:39> 'int' 0))
    (UnaryOperator 0x9b81758 <col:42, col:44> '<dependent type>' prefix '--'
      (DeclRefExpr 0x9b8173c <col:44> 'typename iterator_traits<_BI1>::difference_type' lvalue Var 0x9b81480 '__n' 'typename iterator_traits<_BI1>::difference_type'))
    (BinaryOperator 0x9b81800 <line:531:6, col:23> '<dependent type>' '='
      (UnaryOperator 0x9b817a0 <col:6, col:9> '<dependent type>' prefix '*'
        (UnaryOperator 0x9b81788 <col:7, col:9> '<dependent type>' prefix '--'
          (DeclRefExpr 0x9b8176c <col:9> '_BI2' lvalue ParmVar 0x9b81250 '__result' '_BI2')))
      (UnaryOperator 0x9b817e8 <col:20, col:23> '<dependent type>' prefix '*'
        (UnaryOperator 0x9b817d0 <col:21, col:23> '<dependent type>' prefix '--'
          (DeclRefExpr 0x9b817b4 <col:23> '_BI1' lvalue ParmVar 0x9b81210 '__last' '_BI1')))))
  (ReturnStmt 0x9b81858 <line:532:4, col:11>
    (DeclRefExpr 0x9b8183c <col:11> '_BI2' lvalue ParmVar 0x9b81250 '__result' '_BI2')))

;
        inline std::__copy_move_backward<false, false, std::random_access_iterator_tag> &operator=(const std::__copy_move_backward<false, false, std::random_access_iterator_tag> &) throw();
    };
    struct __copy_move_backward {
        struct __copy_move_backward;
        template <typename _Tp> static _Tp *__copy_move_b(const _Tp *__first, const _Tp *__last, _Tp *__result) (CompoundStmt 0x9b82278 </usr/include/c++/4.6/bits/stl_algobase.h:558:9, line:563:2>
  (DeclStmt 0x9b82018 <line:559:4, col:43>
    0x9b81f50 "const ptrdiff_t _Num =
      (CXXOperatorCallExpr 0x9b81ff0 <col:27, col:36> '<dependent type>'
        (UnresolvedLookupExpr 0x9b81fb8 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
        (DeclRefExpr 0x9b81f84 <col:27> 'const _Tp *' lvalue ParmVar 0x9b81d90 '__last' 'const _Tp *')
        (DeclRefExpr 0x9b81f9c <col:36> 'const _Tp *' lvalue ParmVar 0x9b81d40 '__first' 'const _Tp *'))")
  (IfStmt 0x9b821b8 <line:560:4, line:561:68>
    <<<NULL>>>
    (ImplicitCastExpr 0x9b82050 <line:560:8> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x9b82040 <col:8> 'ptrdiff_t':'int' <LValueToRValue>
        (DeclRefExpr 0x9b82028 <col:8> 'const ptrdiff_t':'const int' lvalue Var 0x9b81f50 '_Num' 'const ptrdiff_t':'const int')))
    (CallExpr 0x9b82190 <line:561:6, col:68> '<dependent type>'
      (DeclRefExpr 0x9b8205c <col:6> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9b7be40 '__builtin_memmove' 'void *(void *, const void *, unsigned int)')
      (CXXOperatorCallExpr 0x9b820e0 <col:24, col:35> '<dependent type>'
        (UnresolvedLookupExpr 0x9b820a8 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
        (DeclRefExpr 0x9b82074 <col:24> '_Tp *' lvalue ParmVar 0x9b81e00 '__result' '_Tp *')
        (DeclRefExpr 0x9b8208c <col:35> 'const ptrdiff_t':'const int' lvalue Var 0x9b81f50 '_Num' 'const ptrdiff_t':'const int'))
      (DeclRefExpr 0x9b82104 <col:41> 'const _Tp *' lvalue ParmVar 0x9b81d40 '__first' 'const _Tp *')
      (BinaryOperator 0x9b82178 <col:50, col:64> 'unsigned int' '*'
        (UnaryExprOrTypeTraitExpr 0x9b82128 <col:50, col:60> 'unsigned int' sizeof '_Tp')
        (ImplicitCastExpr 0x9b82168 <col:64> 'unsigned int' <IntegralCast>
          (ImplicitCastExpr 0x9b82158 <col:64> 'ptrdiff_t':'int' <LValueToRValue>
            (DeclRefExpr 0x9b82140 <col:64> 'const ptrdiff_t':'const int' lvalue Var 0x9b81f50 '_Num' 'const ptrdiff_t':'const int')))))
    <<<NULL>>>)
  (ReturnStmt 0x9b82268 <line:562:4, col:22>
    (CXXOperatorCallExpr 0x9b82240 <col:11, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0x9b82208 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
      (DeclRefExpr 0x9b821d4 <col:11> '_Tp *' lvalue ParmVar 0x9b81e00 '__result' '_Tp *')
      (DeclRefExpr 0x9b821ec <col:22> 'const ptrdiff_t':'const int' lvalue Var 0x9b81f50 '_Num' 'const ptrdiff_t':'const int'))))

;
    };
    template <bool _IsMove, typename _BI1, typename _BI2> inline _BI2 __copy_move_backward_a(_BI1 __first, _BI1 __last, _BI2 __result) (CompoundStmt 0x9b84438 </usr/include/c++/4.6/bits/stl_algobase.h:569:5, line:582:5>
  (DeclStmt 0x9b83b50 <line:570:7, col:69>
    0x9b83b20 "typedef typename iterator_traits<_BI1>::value_type _ValueType1")
  (DeclStmt 0x9b83c80 <line:571:7, col:69>
    0x9b83c50 "typedef typename iterator_traits<_BI2>::value_type _ValueType2")
  (DeclStmt 0x9b83db0 <line:572:7, col:74>
    0x9b83d80 "typedef typename iterator_traits<_BI1>::iterator_category _Category")
  (DeclStmt 0x9b84190 <line:573:7, line:576:58>
    0x9b83dd0 "const bool __simple =
      (ParenExpr 0x9b84178 <line:573:29, line:576:57> '<dependent type>'
        (BinaryOperator 0x9b84160 <line:573:30, line:576:50> '<dependent type>' '&&'
          (BinaryOperator 0x9b84008 <line:573:30, line:575:46> '<dependent type>' '&&'
            (BinaryOperator 0x9b83f18 <line:573:30, line:574:46> '<dependent type>' '&&'
              (UnaryTypeTraitExpr 0x9b83e28 <line:573:30, col:54> '_Bool')
              (DependentScopeDeclRefExpr 0x9b83ef0 <line:574:26, col:46> '<dependent type>' lvalue))
            (DependentScopeDeclRefExpr 0x9b83fe0 <line:575:26, col:46> '<dependent type>' lvalue))
          (DependentScopeDeclRefExpr 0x9b84138 <line:576:12, col:50> '<dependent type>' lvalue)))")
  (ReturnStmt 0x9b84428 <line:578:7, line:581:18>
    (CallExpr 0x9b84400 <line:578:14, line:581:18> '<dependent type>'
      (DependentScopeDeclRefExpr 0x9b84390 <line:578:14, line:579:45> '<dependent type>' lvalue)
      (DeclRefExpr 0x9b843b4 <col:59> '_BI1' lvalue ParmVar 0x9b823a0 '__first' '_BI1')
      (DeclRefExpr 0x9b843cc <line:580:10> '_BI1' lvalue ParmVar 0x9b823e0 '__last' '_BI1')
      (DeclRefExpr 0x9b843e4 <line:581:10> '_BI2' lvalue ParmVar 0x9b82420 '__result' '_BI2'))))

;
    template <bool _IsMove, typename _BI1, typename _BI2> inline _BI2 __copy_move_backward_a2(_BI1 __first, _BI1 __last, _BI2 __result) (CompoundStmt 0x9b849b8 </usr/include/c++/4.6/bits/stl_algobase.h:587:5, line:591:5>
  (ReturnStmt 0x9b849a8 <line:588:7, line:590:34>
    (CXXUnresolvedConstructExpr 0x9b84988 <line:588:14, line:590:34> '_BI2'
      (CallExpr 0x9b84960 <line:588:19, line:590:33> '<dependent type>'
        (UnresolvedLookupExpr 0x9b84760 <line:588:19, col:54> '<dependent type>' lvalue (no ADL) = '1' 0x9b83a00)
        (CallExpr 0x9b84830 <line:589:6, col:31> '<dependent type>'
          (UnresolvedLookupExpr 0x9b847e0 <col:6, col:11> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b78040)
          (DeclRefExpr 0x9b84814 <col:24> '_BI1' lvalue ParmVar 0x9b84570 '__first' '_BI1'))
        (CallExpr 0x9b848b8 <col:34, col:58> '<dependent type>'
          (UnresolvedLookupExpr 0x9b84868 <col:34, col:39> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b78040)
          (DeclRefExpr 0x9b8489c <col:52> '_BI1' lvalue ParmVar 0x9b845b0 '__last' '_BI1'))
        (CallExpr 0x9b84940 <line:590:6, col:32> '<dependent type>'
          (UnresolvedLookupExpr 0x9b848f0 <col:6, col:11> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b78040)
          (DeclRefExpr 0x9b84924 <col:24> '_BI2' lvalue ParmVar 0x9b845f0 '__result' '_BI2'))))))

;
    template <typename _BI1, typename _BI2> inline _BI2 copy_backward(_BI1 __first, _BI1 __last, _BI2 __result) (CompoundStmt 0x9b84f38 </usr/include/c++/4.6/bits/stl_algobase.h:614:5, line:626:5>
  (NullStmt 0x9b84c38 <line:621:54>)
  (ReturnStmt 0x9b84f28 <line:623:7, line:625:18>
    (ParenExpr 0x9b84f10 <line:623:14, line:625:18> '<dependent type>'
      (CallExpr 0x9b84ee8 <line:623:15, line:625:17> '<dependent type>'
        (UnresolvedLookupExpr 0x9b84d58 <line:623:15, col:77> '<dependent type>' lvalue (no ADL) = '1' 0x9b846e0)
        (CallExpr 0x9b84e28 <line:624:9, col:34> '<dependent type>'
          (UnresolvedLookupExpr 0x9b84dd8 <col:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b788d0)
          (DeclRefExpr 0x9b84e0c <col:27> '_BI1' lvalue ParmVar 0x9b84a90 '__first' '_BI1'))
        (CallExpr 0x9b84eb0 <col:37, col:61> '<dependent type>'
          (UnresolvedLookupExpr 0x9b84e60 <col:37, col:42> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b788d0)
          (DeclRefExpr 0x9b84e94 <col:55> '_BI1' lvalue ParmVar 0x9b84ad0 '__last' '_BI1'))
        (DeclRefExpr 0x9b84ed0 <line:625:9> '_BI2' lvalue ParmVar 0x9b84b10 '__result' '_BI2')))))

;
    template <typename _ForwardIterator, typename _Tp> inline typename __gnu_cxx::__enable_if<!__is_scalar<_Tp>::__value, void>::__type __fill_a(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__value) (CompoundStmt 0x9b85648 </usr/include/c++/4.6/bits/stl_algobase.h:674:5, line:677:5>
  (ForStmt 0x9b85620 <line:675:7, line:676:13>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9b85568 <line:675:14, col:25> '<dependent type>'
      (UnresolvedLookupExpr 0x9b85528 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b412d0 0x9ac7fa0 0x9b5e2b0)
      (DeclRefExpr 0x9b854f4 <col:14> '_ForwardIterator' lvalue ParmVar 0x9b852e0 '__first' '_ForwardIterator')
      (DeclRefExpr 0x9b8550c <col:25> '_ForwardIterator' lvalue ParmVar 0x9b85320 '__last' '_ForwardIterator'))
    (UnaryOperator 0x9b855a8 <col:33, col:35> '<dependent type>' prefix '++'
      (DeclRefExpr 0x9b8558c <col:35> '_ForwardIterator' lvalue ParmVar 0x9b852e0 '__first' '_ForwardIterator'))
    (BinaryOperator 0x9b85608 <line:676:2, col:13> '<dependent type>' '='
      (UnaryOperator 0x9b855d8 <col:2, col:3> '<dependent type>' prefix '*'
        (DeclRefExpr 0x9b855bc <col:3> '_ForwardIterator' lvalue ParmVar 0x9b852e0 '__first' '_ForwardIterator'))
      (DeclRefExpr 0x9b855ec <col:13> 'const _Tp' lvalue ParmVar 0x9b85390 '__value' 'const _Tp &'))))

;
    template <typename _ForwardIterator = unsigned long *, typename _Tp = int> inline typename __gnu_cxx::__enable_if<__is_scalar<int>::__value, void>::__type __fill_a(unsigned long *__first, unsigned long *__last, const int &__value) (CompoundStmt 0x9fca0b8 </usr/include/c++/4.6/bits/stl_algobase.h:684:5, line:688:5>
  (DeclStmt 0x9fc9ee0 <line:685:7, col:32>
    0x9fc9e80 "const int __tmp =
      (ImplicitCastExpr 0x9fc9ed0 <col:25> 'int':'int' <LValueToRValue>
        (DeclRefExpr 0x9fc9eb4 <col:25> 'const int':'const int' lvalue ParmVar 0x9fc9ac0 '__value' 'const int &'))")
  (ForStmt 0x9fca090 <line:686:7, line:687:13>
    <<<NULL>>>
    <<<NULL>>>
    (BinaryOperator 0x9fc9f80 <line:686:14, col:25> '_Bool' '!='
      (ImplicitCastExpr 0x9fc9f60 <col:14> 'unsigned long *':'unsigned long *' <LValueToRValue>
        (DeclRefExpr 0x9fc9f2c <col:14> 'unsigned long *':'unsigned long *' lvalue ParmVar 0x9fc9a10 '__first' 'unsigned long *':'unsigned long *'))
      (ImplicitCastExpr 0x9fc9f70 <col:25> 'unsigned long *':'unsigned long *' <LValueToRValue>
        (DeclRefExpr 0x9fc9f44 <col:25> 'unsigned long *':'unsigned long *' lvalue ParmVar 0x9fc9a50 '__last' 'unsigned long *':'unsigned long *')))
    (UnaryOperator 0x9fc9fb0 <col:33, col:35> 'unsigned long *':'unsigned long *' lvalue prefix '++'
      (DeclRefExpr 0x9fc9f98 <col:35> 'unsigned long *':'unsigned long *' lvalue ParmVar 0x9fc9a10 '__first' 'unsigned long *':'unsigned long *'))
    (BinaryOperator 0x9fca040 <line:687:2, col:13> 'unsigned long' lvalue '='
      (UnaryOperator 0x9fc9ff0 <col:2, col:3> 'unsigned long' lvalue prefix '*'
        (ImplicitCastExpr 0x9fc9fe0 <col:3> 'unsigned long *':'unsigned long *' <LValueToRValue>
          (DeclRefExpr 0x9fc9fc4 <col:3> 'unsigned long *':'unsigned long *' lvalue ParmVar 0x9fc9a10 '__first' 'unsigned long *':'unsigned long *')))
      (ImplicitCastExpr 0x9fca030 <col:13> 'unsigned long' <IntegralCast>
        (ImplicitCastExpr 0x9fca020 <col:13> 'int':'int' <LValueToRValue>
          (DeclRefExpr 0x9fca004 <col:13> 'const int':'const int' lvalue Var 0x9fc9e80 '__tmp' 'const int':'const int'))))))

template <typename _ForwardIterator, typename _Tp> inline typename __gnu_cxx::__enable_if<__is_scalar<_Tp>::__value, void>::__type __fill_a(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__value) (CompoundStmt 0x9b87610 </usr/include/c++/4.6/bits/stl_algobase.h:684:5, line:688:5>
  (DeclStmt 0x9b874b0 <line:685:7, col:32>
    0x9b87460 "const _Tp __tmp =
      (DeclRefExpr 0x9b87494 <col:25> 'const _Tp' lvalue ParmVar 0x9b872f0 '__value' 'const _Tp &')")
  (ForStmt 0x9b875e8 <line:686:7, line:687:13>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9b87530 <line:686:14, col:25> '<dependent type>'
      (UnresolvedLookupExpr 0x9b874f0 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b412d0 0x9ac7fa0 0x9b5e2b0)
      (DeclRefExpr 0x9b874c0 <col:14> '_ForwardIterator' lvalue ParmVar 0x9b87240 '__first' '_ForwardIterator')
      (DeclRefExpr 0x9b874d8 <col:25> '_ForwardIterator' lvalue ParmVar 0x9b87280 '__last' '_ForwardIterator'))
    (UnaryOperator 0x9b87570 <col:33, col:35> '<dependent type>' prefix '++'
      (DeclRefExpr 0x9b87554 <col:35> '_ForwardIterator' lvalue ParmVar 0x9b87240 '__first' '_ForwardIterator'))
    (BinaryOperator 0x9b875d0 <line:687:2, col:13> '<dependent type>' '='
      (UnaryOperator 0x9b875a0 <col:2, col:3> '<dependent type>' prefix '*'
        (DeclRefExpr 0x9b87584 <col:3> '_ForwardIterator' lvalue ParmVar 0x9b87240 '__first' '_ForwardIterator'))
      (DeclRefExpr 0x9b875b4 <col:13> 'const _Tp' lvalue Var 0x9b87460 '__tmp' 'const _Tp'))))

;
    template <typename _Tp> inline typename __gnu_cxx::__enable_if<__is_byte<_Tp>::__value, void>::__type __fill_a(_Tp *__first, _Tp *__last, const _Tp &__c) (CompoundStmt 0x9b87e60 </usr/include/c++/4.6/bits/stl_algobase.h:695:5, line:699:5>
  (DeclStmt 0x9b87bc0 <line:696:7, col:28>
    0x9b87b70 "const _Tp __tmp =
      (DeclRefExpr 0x9b87ba4 <col:25> 'const _Tp' lvalue ParmVar 0x9b87a00 '__c' 'const _Tp &')")
  (CallExpr 0x9b87e38 <line:697:7, line:698:26> '<dependent type>'
    (DeclRefExpr 0x9b87d34 <line:697:7> 'void *(void *, int, unsigned int)' lvalue Function 0x9b87bd0 '__builtin_memset' 'void *(void *, int, unsigned int)')
    (DeclRefExpr 0x9b87d4c <col:24> '_Tp *' lvalue ParmVar 0x9b87940 '__first' '_Tp *')
    (CXXStaticCastExpr 0x9b87d90 <col:33, col:65> 'unsigned char' static_cast<unsigned char> <Dependent>
      (DeclRefExpr 0x9b87d64 <col:60> 'const _Tp' lvalue Var 0x9b87b70 '__tmp' 'const _Tp'))
    (CXXOperatorCallExpr 0x9b87e10 <line:698:10, col:19> '<dependent type>'
      (UnresolvedLookupExpr 0x9b87dd8 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
      (DeclRefExpr 0x9b87da8 <col:10> '_Tp *' lvalue ParmVar 0x9b87990 '__last' '_Tp *')
      (DeclRefExpr 0x9b87dc0 <col:19> '_Tp *' lvalue ParmVar 0x9b87940 '__first' '_Tp *'))))

;
    template <typename _ForwardIterator = unsigned long *, typename _Tp = int> inline void fill(unsigned long *__first, unsigned long *__last, const int &__value) (CompoundStmt 0x9fc9cd0 </usr/include/c++/4.6/bits/stl_algobase.h:716:5, line:724:5>
  (NullStmt 0x9b88148 <line:720:54>)
  (CallExpr 0x9fc9ca8 <line:722:7, line:723:14> 'typename __gnu_cxx::__enable_if<__is_scalar<int>::__value, void>::__type':'void'
    (ImplicitCastExpr 0x9fc9c98 <line:722:7, col:12> 'typename __gnu_cxx::__enable_if<__is_scalar<int>::__value, void>::__type (*)(unsigned long *, unsigned long *, const int &)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9fc9c54 <col:7, col:12> 'typename __gnu_cxx::__enable_if<__is_scalar<int>::__value, void>::__type (unsigned long *, unsigned long *, const int &)' lvalue Function 0x9fc9b50 '__fill_a' 'typename __gnu_cxx::__enable_if<__is_scalar<int>::__value, void>::__type (unsigned long *, unsigned long *, const int &)' (FunctionTemplate 0x9b87420 '__fill_a')))
    (CallExpr 0x9fc7c68 <col:21, col:46> 'typename _Niter_base<unsigned long *>::iterator_type':'unsigned long *'
      (ImplicitCastExpr 0x9fc7c58 <col:21, col:26> 'typename _Niter_base<unsigned long *>::iterator_type (*)(unsigned long *)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9fc7bf8 <col:21, col:26> 'typename _Niter_base<unsigned long *>::iterator_type (unsigned long *)' lvalue Function 0x9fc7b50 '__niter_base' 'typename _Niter_base<unsigned long *>::iterator_type (unsigned long *)' (FunctionTemplate 0x9b78040 '__niter_base')))
      (ImplicitCastExpr 0x9fc7c88 <col:39> 'unsigned long *':'unsigned long *' <LValueToRValue>
        (DeclRefExpr 0x9fc707c <col:39> 'unsigned long *':'unsigned long *' lvalue ParmVar 0x9f32700 '__first' 'unsigned long *':'unsigned long *')))
    (CallExpr 0x9fc7d50 <col:49, col:73> 'typename _Niter_base<unsigned long *>::iterator_type':'unsigned long *'
      (ImplicitCastExpr 0x9fc7d40 <col:49, col:54> 'typename _Niter_base<unsigned long *>::iterator_type (*)(unsigned long *)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9fc7d18 <col:49, col:54> 'typename _Niter_base<unsigned long *>::iterator_type (unsigned long *)' lvalue Function 0x9fc7b50 '__niter_base' 'typename _Niter_base<unsigned long *>::iterator_type (unsigned long *)' (FunctionTemplate 0x9b78040 '__niter_base')))
      (ImplicitCastExpr 0x9fc7d70 <col:67> 'unsigned long *':'unsigned long *' <LValueToRValue>
        (DeclRefExpr 0x9fc7ccc <col:67> 'unsigned long *':'unsigned long *' lvalue ParmVar 0x9f32740 '__last' 'unsigned long *':'unsigned long *')))
    (DeclRefExpr 0x9fc7d7c <line:723:7> 'const int':'const int' lvalue ParmVar 0x9f327d0 '__value' 'const int &')))

template <typename _ForwardIterator = std::_Bit_iterator, typename _Tp = bool> inline void fill(std::_Bit_iterator __first, std::_Bit_iterator __last, const bool &__value)template <typename _ForwardIterator, typename _Tp> inline void fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__value) (CompoundStmt 0x9b88308 </usr/include/c++/4.6/bits/stl_algobase.h:716:5, line:724:5>
  (NullStmt 0x9b88148 <line:720:54>)
  (CallExpr 0x9b882e0 <line:722:7, line:723:14> '<dependent type>'
    (UnresolvedLookupExpr 0x9b88178 <line:722:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b854c0 0x9b87420 0x9b87b30)
    (CallExpr 0x9b88220 <col:21, col:46> '<dependent type>'
      (UnresolvedLookupExpr 0x9b881d0 <col:21, col:26> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b78040)
      (DeclRefExpr 0x9b88204 <col:39> '_ForwardIterator' lvalue ParmVar 0x9b87f40 '__first' '_ForwardIterator'))
    (CallExpr 0x9b882a8 <col:49, col:73> '<dependent type>'
      (UnresolvedLookupExpr 0x9b88258 <col:49, col:54> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b78040)
      (DeclRefExpr 0x9b8828c <col:67> '_ForwardIterator' lvalue ParmVar 0x9b87f80 '__last' '_ForwardIterator'))
    (DeclRefExpr 0x9b882c8 <line:723:7> 'const _Tp' lvalue ParmVar 0x9b87ff0 '__value' 'const _Tp &')))

;
    template <typename _OutputIterator, typename _Size, typename _Tp> inline typename __gnu_cxx::__enable_if<!__is_scalar<_Tp>::__value, _OutputIterator>::__type __fill_n_a(_OutputIterator __first, _Size __n, const _Tp &__value) (CompoundStmt 0x9b88c20 </usr/include/c++/4.6/bits/stl_algobase.h:730:5, line:735:5>
  (ForStmt 0x9b88bd0 <line:731:7, line:733:13>
    (DeclStmt 0x9b88a50 <line:731:12, col:45>
      0x9b88a00 "decltype(__n + 0) __niter =
        (DeclRefExpr 0x9b88a34 <col:42> '_Size' lvalue ParmVar 0x9b88740 '__n' '_Size')")
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9b88ad0 <line:732:5, col:15> '<dependent type>'
      (UnresolvedLookupExpr 0x9b88a90 <col:13, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b42c70 0x9ac83c0 0x9b5e730)
      (DeclRefExpr 0x9b88a60 <col:5> 'decltype(__n + 0)' lvalue Var 0x9b88a00 '__niter' 'decltype(__n + 0)')
      (IntegerLiteral 0x9b88a78 <col:15> 'int' 0))
    (BinaryOperator 0x9b88b58 <col:18, col:31> '<dependent type>' ','
      (UnaryOperator 0x9b88b10 <col:18, col:20> '<dependent type>' prefix '--'
        (DeclRefExpr 0x9b88af4 <col:20> 'decltype(__n + 0)' lvalue Var 0x9b88a00 '__niter' 'decltype(__n + 0)'))
      (UnaryOperator 0x9b88b40 <col:29, col:31> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9b88b24 <col:31> '_OutputIterator' lvalue ParmVar 0x9b88700 '__first' '_OutputIterator')))
    (BinaryOperator 0x9b88bb8 <line:733:2, col:13> '<dependent type>' '='
      (UnaryOperator 0x9b88b88 <col:2, col:3> '<dependent type>' prefix '*'
        (DeclRefExpr 0x9b88b70 <col:3> '_OutputIterator' lvalue ParmVar 0x9b88700 '__first' '_OutputIterator'))
      (DeclRefExpr 0x9b88b9c <col:13> 'const _Tp' lvalue ParmVar 0x9b887d0 '__value' 'const _Tp &')))
  (ReturnStmt 0x9b88c10 <line:734:7, col:14>
    (DeclRefExpr 0x9b88bf4 <col:14> '_OutputIterator' lvalue ParmVar 0x9b88700 '__first' '_OutputIterator')))

;
    template <typename _OutputIterator, typename _Size, typename _Tp> inline typename __gnu_cxx::__enable_if<__is_scalar<_Tp>::__value, _OutputIterator>::__type __fill_n_a(_OutputIterator __first, _Size __n, const _Tp &__value) (CompoundStmt 0x9b89f60 </usr/include/c++/4.6/bits/stl_algobase.h:741:5, line:747:5>
  (DeclStmt 0x9b89c78 <line:742:7, col:32>
    0x9b891f0 "const _Tp __tmp =
      (DeclRefExpr 0x9b89c60 <col:25> 'const _Tp' lvalue ParmVar 0x9b89080 '__value' 'const _Tp &')")
  (ForStmt 0x9b89f10 <line:743:7, line:745:13>
    (DeclStmt 0x9b89d90 <line:743:12, col:45>
      0x9b89d40 "decltype(__n + 0) __niter =
        (DeclRefExpr 0x9b89d74 <col:42> '_Size' lvalue ParmVar 0x9b89010 '__n' '_Size')")
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9b89e10 <line:744:5, col:15> '<dependent type>'
      (UnresolvedLookupExpr 0x9b89dd0 <col:13, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b42c70 0x9ac83c0 0x9b5e730)
      (DeclRefExpr 0x9b89da0 <col:5> 'decltype(__n + 0)' lvalue Var 0x9b89d40 '__niter' 'decltype(__n + 0)')
      (IntegerLiteral 0x9b89db8 <col:15> 'int' 0))
    (BinaryOperator 0x9b89e98 <col:18, col:31> '<dependent type>' ','
      (UnaryOperator 0x9b89e50 <col:18, col:20> '<dependent type>' prefix '--'
        (DeclRefExpr 0x9b89e34 <col:20> 'decltype(__n + 0)' lvalue Var 0x9b89d40 '__niter' 'decltype(__n + 0)'))
      (UnaryOperator 0x9b89e80 <col:29, col:31> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9b89e64 <col:31> '_OutputIterator' lvalue ParmVar 0x9b88fd0 '__first' '_OutputIterator')))
    (BinaryOperator 0x9b89ef8 <line:745:2, col:13> '<dependent type>' '='
      (UnaryOperator 0x9b89ec8 <col:2, col:3> '<dependent type>' prefix '*'
        (DeclRefExpr 0x9b89eb0 <col:3> '_OutputIterator' lvalue ParmVar 0x9b88fd0 '__first' '_OutputIterator'))
      (DeclRefExpr 0x9b89edc <col:13> 'const _Tp' lvalue Var 0x9b891f0 '__tmp' 'const _Tp')))
  (ReturnStmt 0x9b89f50 <line:746:7, col:14>
    (DeclRefExpr 0x9b89f34 <col:14> '_OutputIterator' lvalue ParmVar 0x9b88fd0 '__first' '_OutputIterator')))

;
    template <typename _Size, typename _Tp> inline typename __gnu_cxx::__enable_if<__is_byte<_Tp>::__value, _Tp *>::__type __fill_n_a(_Tp *__first, _Size __n, const _Tp &__c) (CompoundStmt 0x9b8a720 </usr/include/c++/4.6/bits/stl_algobase.h:753:5, line:756:5>
  (CallExpr 0x9b8a658 <line:754:7, col:48> '<dependent type>'
    (UnresolvedLookupExpr 0x9b8a558 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b854c0 0x9b87420 0x9b87b30)
    (DeclRefExpr 0x9b8a594 <col:21> '_Tp *' lvalue ParmVar 0x9b8a320 '__first' '_Tp *')
    (CXXOperatorCallExpr 0x9b8a618 <col:30, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0x9b8a5e0 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0)
      (DeclRefExpr 0x9b8a5ac <col:30> '_Tp *' lvalue ParmVar 0x9b8a320 '__first' '_Tp *')
      (DeclRefExpr 0x9b8a5c4 <col:40> '_Size' lvalue ParmVar 0x9b8a360 '__n' '_Size'))
    (DeclRefExpr 0x9b8a63c <col:45> 'const _Tp' lvalue ParmVar 0x9b8a3d0 '__c' 'const _Tp &'))
  (ReturnStmt 0x9b8a710 <line:755:7, col:24>
    (CXXOperatorCallExpr 0x9b8a6e8 <col:14, col:24> '<dependent type>'
      (UnresolvedLookupExpr 0x9b8a6b0 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0)
      (DeclRefExpr 0x9b8a680 <col:14> '_Tp *' lvalue ParmVar 0x9b8a320 '__first' '_Tp *')
      (DeclRefExpr 0x9b8a698 <col:24> '_Size' lvalue ParmVar 0x9b8a360 '__n' '_Size'))))

;
    template <typename _OI, typename _Size, typename _Tp> inline _OI fill_n(_OI __first, _Size __n, const _Tp &__value) (CompoundStmt 0x9b8abc8 </usr/include/c++/4.6/bits/stl_algobase.h:776:5, line:781:5>
  (ReturnStmt 0x9b8abb8 <line:780:7, col:75>
    (CXXUnresolvedConstructExpr 0x9b8ab98 <col:14, col:75> '_OI'
      (CallExpr 0x9b8ab70 <col:18, col:74> '<dependent type>'
        (UnresolvedLookupExpr 0x9b8aa78 <col:18, col:23> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b88900 0x9b891b0 0x9b8a500)
        (CallExpr 0x9b8ab20 <col:34, col:59> '<dependent type>'
          (UnresolvedLookupExpr 0x9b8aad0 <col:34, col:39> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b78040)
          (DeclRefExpr 0x9b8ab04 <col:52> '_OI' lvalue ParmVar 0x9b8a850 '__first' '_OI'))
        (DeclRefExpr 0x9b8ab40 <col:62> '_Size' lvalue ParmVar 0x9b8a890 '__n' '_Size')
        (DeclRefExpr 0x9b8ab58 <col:67> 'const _Tp' lvalue ParmVar 0x9b8a900 '__value' 'const _Tp &')))))

;
    template <bool _BoolType = true> struct __equal {
        struct __equal;
        template <typename _Tp> static bool equal(const _Tp *__first1, const _Tp *__last1, const _Tp *__first2) (CompoundStmt 0x9b8bb30 </usr/include/c++/4.6/bits/stl_algobase.h:803:9, line:806:2>
  (ReturnStmt 0x9b8bb20 <line:804:4, line:805:30>
    (UnaryOperator 0x9b8bb08 <line:804:11, line:805:30> '<dependent type>' prefix '!'
      (CallExpr 0x9b8bae0 <line:804:12, line:805:30> '<dependent type>'
        (DeclRefExpr 0x9b8b9b4 <line:804:12> 'int (const void *, const void *, unsigned int)' lvalue Function 0x9b8b850 '__builtin_memcmp' 'int (const void *, const void *, unsigned int)')
        (DeclRefExpr 0x9b8b9cc <col:29> 'const _Tp *' lvalue ParmVar 0x9b8b640 '__first1' 'const _Tp *')
        (DeclRefExpr 0x9b8b9e4 <col:39> 'const _Tp *' lvalue ParmVar 0x9b8b6e0 '__first2' 'const _Tp *')
        (BinaryOperator 0x9b8bac8 <col:49, line:805:29> '<dependent type>' '*'
          (UnaryExprOrTypeTraitExpr 0x9b8ba08 <line:804:49, col:59> 'unsigned int' sizeof '_Tp')
          (ParenExpr 0x9b8bab0 <line:805:10, col:29> '<dependent type>'
            (CXXOperatorCallExpr 0x9b8ba88 <col:11, col:21> '<dependent type>'
              (UnresolvedLookupExpr 0x9b8ba50 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
              (DeclRefExpr 0x9b8ba20 <col:11> 'const _Tp *' lvalue ParmVar 0x9b8b690 '__last1' 'const _Tp *')
              (DeclRefExpr 0x9b8ba38 <col:21> 'const _Tp *' lvalue ParmVar 0x9b8b640 '__first1' 'const _Tp *'))))))))

;
    }
template <bool _BoolType> struct __equal {
        struct __equal;
        template <typename _II1, typename _II2> static bool equal(_II1 __first1, _II1 __last1, _II2 __first2) (CompoundStmt 0x9b8b390 </usr/include/c++/4.6/bits/stl_algobase.h:789:9, line:794:2>
  (ForStmt 0x9b8b348 <line:790:4, line:792:15>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9b8b170 <line:790:11, col:23> '<dependent type>'
      (UnresolvedLookupExpr 0x9b8b130 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b412d0 0x9ac7fa0 0x9b5e2b0)
      (DeclRefExpr 0x9b8b100 <col:11> '_II1' lvalue ParmVar 0x9b8af10 '__first1' '_II1')
      (DeclRefExpr 0x9b8b118 <col:23> '_II1' lvalue ParmVar 0x9b8af50 '__last1' '_II1'))
    (BinaryOperator 0x9b8b1f8 <col:32, col:46> '<dependent type>' ','
      (UnaryOperator 0x9b8b1b0 <col:32, col:34> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9b8b194 <col:34> '_II1' lvalue ParmVar 0x9b8af10 '__first1' '_II1'))
      (UnaryOperator 0x9b8b1e0 <col:44, col:46> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9b8b1c4 <col:46> '_II2' lvalue ParmVar 0x9b8af90 '__first2' '_II2')))
    (IfStmt 0x9b8b328 <line:791:6, line:792:15>
      <<<NULL>>>
      (UnaryOperator 0x9b8b2f0 <line:791:10, col:34> '<dependent type>' prefix '!'
        (ParenExpr 0x9b8b2d8 <col:11, col:34> '<dependent type>'
          (CXXOperatorCallExpr 0x9b8b2b0 <col:12, col:26> '<dependent type>'
            (UnresolvedLookupExpr 0x9b8b270 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890)
            (UnaryOperator 0x9b8b228 <col:12, col:13> '<dependent type>' prefix '*'
              (DeclRefExpr 0x9b8b210 <col:13> '_II1' lvalue ParmVar 0x9b8af10 '__first1' '_II1'))
            (UnaryOperator 0x9b8b258 <col:25, col:26> '<dependent type>' prefix '*'
              (DeclRefExpr 0x9b8b23c <col:26> '_II2' lvalue ParmVar 0x9b8af90 '__first2' '_II2')))))
      (ReturnStmt 0x9b8b318 <line:792:8, col:15>
        (CXXBoolLiteralExpr 0x9b8b308 <col:15> '_Bool' false))
      <<<NULL>>>))
  (ReturnStmt 0x9b8b380 <line:793:4, col:11>
    (CXXBoolLiteralExpr 0x9b8b370 <col:11> '_Bool' true)))

;
    };
    struct __equal {
        struct __equal;
        template <typename _Tp> static bool equal(const _Tp *__first1, const _Tp *__last1, const _Tp *__first2) (CompoundStmt 0x9b8bb30 </usr/include/c++/4.6/bits/stl_algobase.h:803:9, line:806:2>
  (ReturnStmt 0x9b8bb20 <line:804:4, line:805:30>
    (UnaryOperator 0x9b8bb08 <line:804:11, line:805:30> '<dependent type>' prefix '!'
      (CallExpr 0x9b8bae0 <line:804:12, line:805:30> '<dependent type>'
        (DeclRefExpr 0x9b8b9b4 <line:804:12> 'int (const void *, const void *, unsigned int)' lvalue Function 0x9b8b850 '__builtin_memcmp' 'int (const void *, const void *, unsigned int)')
        (DeclRefExpr 0x9b8b9cc <col:29> 'const _Tp *' lvalue ParmVar 0x9b8b640 '__first1' 'const _Tp *')
        (DeclRefExpr 0x9b8b9e4 <col:39> 'const _Tp *' lvalue ParmVar 0x9b8b6e0 '__first2' 'const _Tp *')
        (BinaryOperator 0x9b8bac8 <col:49, line:805:29> '<dependent type>' '*'
          (UnaryExprOrTypeTraitExpr 0x9b8ba08 <line:804:49, col:59> 'unsigned int' sizeof '_Tp')
          (ParenExpr 0x9b8bab0 <line:805:10, col:29> '<dependent type>'
            (CXXOperatorCallExpr 0x9b8ba88 <col:11, col:21> '<dependent type>'
              (UnresolvedLookupExpr 0x9b8ba50 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
              (DeclRefExpr 0x9b8ba20 <col:11> 'const _Tp *' lvalue ParmVar 0x9b8b690 '__last1' 'const _Tp *')
              (DeclRefExpr 0x9b8ba38 <col:21> 'const _Tp *' lvalue ParmVar 0x9b8b640 '__first1' 'const _Tp *'))))))))

;
    };
    template <typename _II1, typename _II2> inline bool __equal_aux(_II1 __first1, _II1 __last1, _II2 __first2) (CompoundStmt 0x9b8dfe8 </usr/include/c++/4.6/bits/stl_algobase.h:812:5, line:821:5>
  (DeclStmt 0x9b8d820 <line:813:7, col:69>
    0x9b8d7f0 "typedef typename iterator_traits<_II1>::value_type _ValueType1")
  (DeclStmt 0x9b8d950 <line:814:7, col:69>
    0x9b8d920 "typedef typename iterator_traits<_II2>::value_type _ValueType2")
  (DeclStmt 0x9b8de20 <line:815:7, line:818:58>
    0x9b8d970 "const bool __simple =
      (ParenExpr 0x9b8de08 <line:815:29, line:818:57> '<dependent type>'
        (BinaryOperator 0x9b8ddf0 <line:815:30, line:818:50> '<dependent type>' '&&'
          (BinaryOperator 0x9b8dc98 <line:815:30, line:817:46> '<dependent type>' '&&'
            (BinaryOperator 0x9b8dba8 <line:815:30, line:816:46> '<dependent type>' '&&'
              (DependentScopeDeclRefExpr 0x9b8dab0 <line:815:30, col:57> '<dependent type>' lvalue)
              (DependentScopeDeclRefExpr 0x9b8db80 <line:816:26, col:46> '<dependent type>' lvalue))
            (DependentScopeDeclRefExpr 0x9b8dc70 <line:817:26, col:46> '<dependent type>' lvalue))
          (DependentScopeDeclRefExpr 0x9b8ddc8 <line:818:12, col:50> '<dependent type>' lvalue)))")
  (ReturnStmt 0x9b8dfd8 <line:820:7, col:71>
    (CallExpr 0x9b8dfb0 <col:14, col:71> '<dependent type>'
      (DependentScopeDeclRefExpr 0x9b8df40 <col:14, col:38> '<dependent type>' lvalue)
      (DeclRefExpr 0x9b8df64 <col:44> '_II1' lvalue ParmVar 0x9b8bc10 '__first1' '_II1')
      (DeclRefExpr 0x9b8df7c <col:54> '_II1' lvalue ParmVar 0x9b8d570 '__last1' '_II1')
      (DeclRefExpr 0x9b8df94 <col:63> '_II2' lvalue ParmVar 0x9b8d5b0 '__first2' '_II2'))))

;
    template <typename  = std::random_access_iterator_tag, typename  = std::random_access_iterator_tag> struct __lc_rai {
        struct __lc_rai;
        template <typename _RAI1, typename _RAI2> static _RAI1 __newlast1(_RAI1 __first1, _RAI1 __last1, _RAI2 __first2, _RAI2 __last2) (CompoundStmt 0x9b8f4c8 </usr/include/c++/4.6/bits/stl_algobase.h:845:9, line:851:2>
  (DeclStmt 0x9b8f168 <line:846:4, line:847:34>
    0x9b8f0a0 "const typename iterator_traits<_RAI1>::difference_type __diff1 =
      (CXXOperatorCallExpr 0x9b8f140 <col:16, col:26> '<dependent type>'
        (UnresolvedLookupExpr 0x9b8f108 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
        (DeclRefExpr 0x9b8f0d4 <col:16> '_RAI1' lvalue ParmVar 0x9b8ebf0 '__last1' '_RAI1')
        (DeclRefExpr 0x9b8f0ec <col:26> '_RAI1' lvalue ParmVar 0x9b8ebb0 '__first1' '_RAI1'))")
  (DeclStmt 0x9b8f348 <line:848:4, line:849:34>
    0x9b8f280 "const typename iterator_traits<_RAI2>::difference_type __diff2 =
      (CXXOperatorCallExpr 0x9b8f320 <col:16, col:26> '<dependent type>'
        (UnresolvedLookupExpr 0x9b8f2e8 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
        (DeclRefExpr 0x9b8f2b4 <col:16> '_RAI2' lvalue ParmVar 0x9b8ec70 '__last2' '_RAI2')
        (DeclRefExpr 0x9b8f2cc <col:26> '_RAI2' lvalue ParmVar 0x9b8ec30 '__first2' '_RAI2'))")
  (ReturnStmt 0x9b8f4b8 <line:850:4, col:52>
    (ConditionalOperator 0x9b8f498 <col:11, col:52> '<dependent type>'
      (CXXOperatorCallExpr 0x9b8f3c8 <col:11, col:21> '<dependent type>'
        (UnresolvedLookupExpr 0x9b8f388 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40ad0 0x9b57c70 0x9b5ddb0)
        (DeclRefExpr 0x9b8f358 <col:11> 'const typename iterator_traits<_RAI2>::difference_type' lvalue Var 0x9b8f280 '__diff2' 'const typename iterator_traits<_RAI2>::difference_type')
        (DeclRefExpr 0x9b8f370 <col:21> 'const typename iterator_traits<_RAI1>::difference_type' lvalue Var 0x9b8f0a0 '__diff1' 'const typename iterator_traits<_RAI1>::difference_type'))
      (CXXOperatorCallExpr 0x9b8f458 <col:31, col:42> '<dependent type>'
        (UnresolvedLookupExpr 0x9b8f420 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0)
        (DeclRefExpr 0x9b8f3ec <col:31> '_RAI1' lvalue ParmVar 0x9b8ebb0 '__first1' '_RAI1')
        (DeclRefExpr 0x9b8f404 <col:42> 'const typename iterator_traits<_RAI2>::difference_type' lvalue Var 0x9b8f280 '__diff2' 'const typename iterator_traits<_RAI2>::difference_type'))
      (DeclRefExpr 0x9b8f47c <col:52> '_RAI1' lvalue ParmVar 0x9b8ebf0 '__last1' '_RAI1'))))

;
        template <typename _RAI> static bool __cnd2(_RAI, _RAI) (CompoundStmt 0x9b8f508 </usr/include/c++/4.6/bits/stl_algobase.h:856:9, col:24>
  (ReturnStmt 0x9b8f4f8 <col:11, col:18>
    (CXXBoolLiteralExpr 0x9b8f4e8 <col:18> '_Bool' true)))

;
    }
template <typename , typename > struct __lc_rai {
        struct __lc_rai;
        template <typename _II1, typename _II2> static _II1 __newlast1(_II1, _II1 __last1, _II2, _II2) (CompoundStmt 0x9b8e7d8 </usr/include/c++/4.6/bits/stl_algobase.h:830:9, col:27>
  (ReturnStmt 0x9b8e7c8 <col:11, col:18>
    (DeclRefExpr 0x9b8e7b0 <col:18> '_II1' lvalue ParmVar 0x9b8e3f0 '__last1' '_II1')))

;
        template <typename _II> static bool __cnd2(_II __first, _II __last) (CompoundStmt 0x9b8e898 </usr/include/c++/4.6/bits/stl_algobase.h:835:9, col:37>
  (ReturnStmt 0x9b8e888 <col:11, col:29>
    (CXXOperatorCallExpr 0x9b8e860 <col:18, col:29> '<dependent type>'
      (UnresolvedLookupExpr 0x9b8e820 <col:26, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b412d0 0x9ac7fa0 0x9b5e2b0)
      (DeclRefExpr 0x9b8e7ec <col:18> '_II' lvalue ParmVar 0x9b8e630 '__first' '_II')
      (DeclRefExpr 0x9b8e804 <col:29> '_II' lvalue ParmVar 0x9b8e670 '__last' '_II'))))

;
    };
    struct __lc_rai {
        struct __lc_rai;
        template <typename _RAI1, typename _RAI2> static _RAI1 __newlast1(_RAI1 __first1, _RAI1 __last1, _RAI2 __first2, _RAI2 __last2) (CompoundStmt 0x9b8f4c8 </usr/include/c++/4.6/bits/stl_algobase.h:845:9, line:851:2>
  (DeclStmt 0x9b8f168 <line:846:4, line:847:34>
    0x9b8f0a0 "const typename iterator_traits<_RAI1>::difference_type __diff1 =
      (CXXOperatorCallExpr 0x9b8f140 <col:16, col:26> '<dependent type>'
        (UnresolvedLookupExpr 0x9b8f108 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
        (DeclRefExpr 0x9b8f0d4 <col:16> '_RAI1' lvalue ParmVar 0x9b8ebf0 '__last1' '_RAI1')
        (DeclRefExpr 0x9b8f0ec <col:26> '_RAI1' lvalue ParmVar 0x9b8ebb0 '__first1' '_RAI1'))")
  (DeclStmt 0x9b8f348 <line:848:4, line:849:34>
    0x9b8f280 "const typename iterator_traits<_RAI2>::difference_type __diff2 =
      (CXXOperatorCallExpr 0x9b8f320 <col:16, col:26> '<dependent type>'
        (UnresolvedLookupExpr 0x9b8f2e8 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
        (DeclRefExpr 0x9b8f2b4 <col:16> '_RAI2' lvalue ParmVar 0x9b8ec70 '__last2' '_RAI2')
        (DeclRefExpr 0x9b8f2cc <col:26> '_RAI2' lvalue ParmVar 0x9b8ec30 '__first2' '_RAI2'))")
  (ReturnStmt 0x9b8f4b8 <line:850:4, col:52>
    (ConditionalOperator 0x9b8f498 <col:11, col:52> '<dependent type>'
      (CXXOperatorCallExpr 0x9b8f3c8 <col:11, col:21> '<dependent type>'
        (UnresolvedLookupExpr 0x9b8f388 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40ad0 0x9b57c70 0x9b5ddb0)
        (DeclRefExpr 0x9b8f358 <col:11> 'const typename iterator_traits<_RAI2>::difference_type' lvalue Var 0x9b8f280 '__diff2' 'const typename iterator_traits<_RAI2>::difference_type')
        (DeclRefExpr 0x9b8f370 <col:21> 'const typename iterator_traits<_RAI1>::difference_type' lvalue Var 0x9b8f0a0 '__diff1' 'const typename iterator_traits<_RAI1>::difference_type'))
      (CXXOperatorCallExpr 0x9b8f458 <col:31, col:42> '<dependent type>'
        (UnresolvedLookupExpr 0x9b8f420 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0)
        (DeclRefExpr 0x9b8f3ec <col:31> '_RAI1' lvalue ParmVar 0x9b8ebb0 '__first1' '_RAI1')
        (DeclRefExpr 0x9b8f404 <col:42> 'const typename iterator_traits<_RAI2>::difference_type' lvalue Var 0x9b8f280 '__diff2' 'const typename iterator_traits<_RAI2>::difference_type'))
      (DeclRefExpr 0x9b8f47c <col:52> '_RAI1' lvalue ParmVar 0x9b8ebf0 '__last1' '_RAI1'))))

;
        template <typename _RAI> static bool __cnd2(_RAI, _RAI) (CompoundStmt 0x9b8f508 </usr/include/c++/4.6/bits/stl_algobase.h:856:9, col:24>
  (ReturnStmt 0x9b8f4f8 <col:11, col:18>
    (CXXBoolLiteralExpr 0x9b8f4e8 <col:18> '_Bool' true)))

;
    };
    template <bool _BoolType = true> struct __lexicographical_compare {
        struct __lexicographical_compare;
        template <typename _Tp, typename _Up> static bool __lc(const _Tp *__first1, const _Tp *__last1, const _Up *__first2, const _Up *__last2) (CompoundStmt 0x9b93730 </usr/include/c++/4.6/bits/stl_algobase.h:896:2, line:902:2>
  (DeclStmt 0x9b92148 <line:897:4, col:44>
    0x9b92080 "const size_t __len1 =
      (CXXOperatorCallExpr 0x9b92120 <col:26, col:36> '<dependent type>'
        (UnresolvedLookupExpr 0x9b920e8 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
        (DeclRefExpr 0x9b920b4 <col:26> 'const _Tp *' lvalue ParmVar 0x9b91e40 '__last1' 'const _Tp *')
        (DeclRefExpr 0x9b920cc <col:36> 'const _Tp *' lvalue ParmVar 0x9b91df0 '__first1' 'const _Tp *'))")
  (DeclStmt 0x9b92228 <line:898:4, col:44>
    0x9b92160 "const size_t __len2 =
      (CXXOperatorCallExpr 0x9b92200 <col:26, col:36> '<dependent type>'
        (UnresolvedLookupExpr 0x9b921c8 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
        (DeclRefExpr 0x9b92194 <col:26> 'const _Up *' lvalue ParmVar 0x9b91f00 '__last2' 'const _Up *')
        (DeclRefExpr 0x9b921ac <col:36> 'const _Up *' lvalue ParmVar 0x9b91eb0 '__first2' 'const _Up *'))")
  (DeclStmt 0x9b935d8 <line:899:4, line:900:32>
    0x9b92250 "const int __result =
      (CallExpr 0x9b935b0 <line:899:25, line:900:31> '<dependent type>'
        (DeclRefExpr 0x9b92284 <line:899:25> 'int (const void *, const void *, unsigned int)' lvalue Function 0x9b8b850 '__builtin_memcmp' 'int (const void *, const void *, unsigned int)')
        (DeclRefExpr 0x9b9229c <col:42> 'const _Tp *' lvalue ParmVar 0x9b91df0 '__first1' 'const _Tp *')
        (DeclRefExpr 0x9b922b4 <col:52> 'const _Up *' lvalue ParmVar 0x9b91eb0 '__first2' 'const _Up *')
        (CallExpr 0x9b93588 <line:900:7, col:30> 'const unsigned int':'const unsigned int' lvalue
          (ImplicitCastExpr 0x9b93578 <col:7, col:12> 'const unsigned int &(*)(const unsigned int &, const unsigned int &)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9b93518 <col:7, col:12> 'const unsigned int &(const unsigned int &, const unsigned int &)' lvalue Function 0x9b93470 'min' 'const unsigned int &(const unsigned int &, const unsigned int &)' (FunctionTemplate 0x9b76440 'min')))
          (DeclRefExpr 0x9b92320 <col:16> 'const size_t':'const unsigned int' lvalue Var 0x9b92080 '__len1' 'const size_t':'const unsigned int')
          (DeclRefExpr 0x9b92338 <col:24> 'const size_t':'const unsigned int' lvalue Var 0x9b92160 '__len2' 'const size_t':'const unsigned int')))")
  (ReturnStmt 0x9b93720 <line:901:4, col:51>
    (ConditionalOperator 0x9b93700 <col:11, col:51> '_Bool'
      (BinaryOperator 0x9b93628 <col:11, col:23> '_Bool' '!='
        (ImplicitCastExpr 0x9b93618 <col:11> 'int' <LValueToRValue>
          (DeclRefExpr 0x9b935e8 <col:11> 'const int' lvalue Var 0x9b92250 '__result' 'const int'))
        (IntegerLiteral 0x9b93600 <col:23> 'int' 0))
      (BinaryOperator 0x9b93680 <col:27, col:38> '_Bool' '<'
        (ImplicitCastExpr 0x9b93670 <col:27> 'int' <LValueToRValue>
          (DeclRefExpr 0x9b93640 <col:27> 'const int' lvalue Var 0x9b92250 '__result' 'const int'))
        (IntegerLiteral 0x9b93658 <col:38> 'int' 0))
      (BinaryOperator 0x9b936e8 <col:42, col:51> '_Bool' '<'
        (ImplicitCastExpr 0x9b936c8 <col:42> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9b93698 <col:42> 'const size_t':'const unsigned int' lvalue Var 0x9b92080 '__len1' 'const size_t':'const unsigned int'))
        (ImplicitCastExpr 0x9b936d8 <col:51> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9b936b0 <col:51> 'const size_t':'const unsigned int' lvalue Var 0x9b92160 '__len2' 'const size_t':'const unsigned int'))))))

;
    }
template <bool _BoolType> struct __lexicographical_compare {
        struct __lexicographical_compare;
        template <typename _II1, typename _II2> static bool __lc(_II1, _II1, _II2, _II2);
    };
    template <typename _II1, typename _II2> static bool __lc(_II1 __first1, _II1 __last1, _II2 __first2, _II2 __last2) (CompoundStmt 0x9b91ae8 </usr/include/c++/4.6/bits/stl_algobase.h:871:7, line:887:7>
  (DeclStmt 0x9b91090 <line:872:2, col:70>
    0x9b91060 "typedef typename iterator_traits<_II1>::iterator_category _Category1")
  (DeclStmt 0x9b91220 <line:873:2, col:70>
    0x9b911f0 "typedef typename iterator_traits<_II2>::iterator_category _Category2")
  (DeclStmt 0x9b91440 <line:874:2, col:59>
    0x9b91410 "typedef std::__lc_rai<_Category1, _Category2> __rai_type")
  (BinaryOperator 0x9b91560 <line:876:2, line:877:24> '<dependent type>' '='
    (DeclRefExpr 0x9b91450 <line:876:2> '_II1' lvalue ParmVar 0x9b90d40 '__last1' '_II1')
    (CallExpr 0x9b91530 <col:12, line:877:24> '<dependent type>'
      (DependentScopeDeclRefExpr 0x9b914a8 <line:876:12, col:24> '<dependent type>' lvalue)
      (DeclRefExpr 0x9b914cc <col:35> '_II1' lvalue ParmVar 0x9b90d00 '__first1' '_II1')
      (DeclRefExpr 0x9b914e4 <col:45> '_II1' lvalue ParmVar 0x9b90d40 '__last1' '_II1')
      (DeclRefExpr 0x9b914fc <line:877:7> '_II2' lvalue ParmVar 0x9b90d80 '__first2' '_II2')
      (DeclRefExpr 0x9b91514 <col:17> '_II2' lvalue ParmVar 0x9b90dc0 '__last2' '_II2')))
  (ForStmt 0x9b91968 <line:878:2, line:885:4>
    <<<NULL>>>
    <<<NULL>>>
    (BinaryOperator 0x9b916b0 <line:878:9, col:68> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x9b915e8 <col:9, col:21> '<dependent type>'
        (UnresolvedLookupExpr 0x9b915a8 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b412d0 0x9ac7fa0 0x9b5e2b0)
        (DeclRefExpr 0x9b91578 <col:9> '_II1' lvalue ParmVar 0x9b90d00 '__first1' '_II1')
        (DeclRefExpr 0x9b91590 <col:21> '_II1' lvalue ParmVar 0x9b90d40 '__last1' '_II1'))
      (CallExpr 0x9b91688 <col:32, col:68> '<dependent type>'
        (DependentScopeDeclRefExpr 0x9b91630 <col:32, col:44> '<dependent type>' lvalue)
        (DeclRefExpr 0x9b91654 <col:51> '_II2' lvalue ParmVar 0x9b90d80 '__first2' '_II2')
        (DeclRefExpr 0x9b9166c <col:61> '_II2' lvalue ParmVar 0x9b90dc0 '__last2' '_II2')))
    (BinaryOperator 0x9b91728 <line:879:7, col:21> '<dependent type>' ','
      (UnaryOperator 0x9b916e0 <col:7, col:9> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9b916c8 <col:9> '_II1' lvalue ParmVar 0x9b90d00 '__first1' '_II1'))
      (UnaryOperator 0x9b91710 <col:19, col:21> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9b916f4 <col:21> '_II2' lvalue ParmVar 0x9b90d80 '__first2' '_II2')))
    (CompoundStmt 0x9b91950 <line:880:4, line:885:4>
      (IfStmt 0x9b91828 <line:881:6, line:882:15>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9b917e0 <line:881:10, col:23> '<dependent type>'
          (UnresolvedLookupExpr 0x9b917a0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40ad0 0x9b57c70 0x9b5ddb0)
          (UnaryOperator 0x9b91758 <col:10, col:11> '<dependent type>' prefix '*'
            (DeclRefExpr 0x9b91740 <col:11> '_II1' lvalue ParmVar 0x9b90d00 '__first1' '_II1'))
          (UnaryOperator 0x9b91788 <col:22, col:23> '<dependent type>' prefix '*'
            (DeclRefExpr 0x9b9176c <col:23> '_II2' lvalue ParmVar 0x9b90d80 '__first2' '_II2')))
        (ReturnStmt 0x9b91818 <line:882:8, col:15>
          (CXXBoolLiteralExpr 0x9b91808 <col:15> '_Bool' true))
        <<<NULL>>>)
      (IfStmt 0x9b91930 <line:883:6, line:884:15>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9b918e8 <line:883:10, col:23> '<dependent type>'
          (UnresolvedLookupExpr 0x9b918a8 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40ad0 0x9b57c70 0x9b5ddb0)
          (UnaryOperator 0x9b91860 <col:10, col:11> '<dependent type>' prefix '*'
            (DeclRefExpr 0x9b91844 <col:11> '_II2' lvalue ParmVar 0x9b90d80 '__first2' '_II2'))
          (UnaryOperator 0x9b91890 <col:22, col:23> '<dependent type>' prefix '*'
            (DeclRefExpr 0x9b91874 <col:23> '_II1' lvalue ParmVar 0x9b90d00 '__first1' '_II1')))
        (ReturnStmt 0x9b91920 <line:884:8, col:15>
          (CXXBoolLiteralExpr 0x9b91910 <col:15> '_Bool' false))
        <<<NULL>>>)))
  (ReturnStmt 0x9b91ad8 <line:886:2, col:44>
    (BinaryOperator 0x9b91ac0 <col:9, col:44> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x9b91a00 <col:9, col:21> '<dependent type>'
        (UnresolvedLookupExpr 0x9b919c0 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890)
        (DeclRefExpr 0x9b9198c <col:9> '_II1' lvalue ParmVar 0x9b90d00 '__first1' '_II1')
        (DeclRefExpr 0x9b919a4 <col:21> '_II1' lvalue ParmVar 0x9b90d40 '__last1' '_II1'))
      (CXXOperatorCallExpr 0x9b91a98 <col:32, col:44> '<dependent type>'
        (UnresolvedLookupExpr 0x9b91a58 <col:41, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b412d0 0x9ac7fa0 0x9b5e2b0)
        (DeclRefExpr 0x9b91a24 <col:32> '_II2' lvalue ParmVar 0x9b90d80 '__first2' '_II2')
        (DeclRefExpr 0x9b91a3c <col:44> '_II2' lvalue ParmVar 0x9b90dc0 '__last2' '_II2')))))

;
    struct __lexicographical_compare {
        struct __lexicographical_compare;
        template <typename _Tp, typename _Up> static bool __lc(const _Tp *__first1, const _Tp *__last1, const _Up *__first2, const _Up *__last2) (CompoundStmt 0x9b93730 </usr/include/c++/4.6/bits/stl_algobase.h:896:2, line:902:2>
  (DeclStmt 0x9b92148 <line:897:4, col:44>
    0x9b92080 "const size_t __len1 =
      (CXXOperatorCallExpr 0x9b92120 <col:26, col:36> '<dependent type>'
        (UnresolvedLookupExpr 0x9b920e8 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
        (DeclRefExpr 0x9b920b4 <col:26> 'const _Tp *' lvalue ParmVar 0x9b91e40 '__last1' 'const _Tp *')
        (DeclRefExpr 0x9b920cc <col:36> 'const _Tp *' lvalue ParmVar 0x9b91df0 '__first1' 'const _Tp *'))")
  (DeclStmt 0x9b92228 <line:898:4, col:44>
    0x9b92160 "const size_t __len2 =
      (CXXOperatorCallExpr 0x9b92200 <col:26, col:36> '<dependent type>'
        (UnresolvedLookupExpr 0x9b921c8 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
        (DeclRefExpr 0x9b92194 <col:26> 'const _Up *' lvalue ParmVar 0x9b91f00 '__last2' 'const _Up *')
        (DeclRefExpr 0x9b921ac <col:36> 'const _Up *' lvalue ParmVar 0x9b91eb0 '__first2' 'const _Up *'))")
  (DeclStmt 0x9b935d8 <line:899:4, line:900:32>
    0x9b92250 "const int __result =
      (CallExpr 0x9b935b0 <line:899:25, line:900:31> '<dependent type>'
        (DeclRefExpr 0x9b92284 <line:899:25> 'int (const void *, const void *, unsigned int)' lvalue Function 0x9b8b850 '__builtin_memcmp' 'int (const void *, const void *, unsigned int)')
        (DeclRefExpr 0x9b9229c <col:42> 'const _Tp *' lvalue ParmVar 0x9b91df0 '__first1' 'const _Tp *')
        (DeclRefExpr 0x9b922b4 <col:52> 'const _Up *' lvalue ParmVar 0x9b91eb0 '__first2' 'const _Up *')
        (CallExpr 0x9b93588 <line:900:7, col:30> 'const unsigned int':'const unsigned int' lvalue
          (ImplicitCastExpr 0x9b93578 <col:7, col:12> 'const unsigned int &(*)(const unsigned int &, const unsigned int &)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9b93518 <col:7, col:12> 'const unsigned int &(const unsigned int &, const unsigned int &)' lvalue Function 0x9b93470 'min' 'const unsigned int &(const unsigned int &, const unsigned int &)' (FunctionTemplate 0x9b76440 'min')))
          (DeclRefExpr 0x9b92320 <col:16> 'const size_t':'const unsigned int' lvalue Var 0x9b92080 '__len1' 'const size_t':'const unsigned int')
          (DeclRefExpr 0x9b92338 <col:24> 'const size_t':'const unsigned int' lvalue Var 0x9b92160 '__len2' 'const size_t':'const unsigned int')))")
  (ReturnStmt 0x9b93720 <line:901:4, col:51>
    (ConditionalOperator 0x9b93700 <col:11, col:51> '_Bool'
      (BinaryOperator 0x9b93628 <col:11, col:23> '_Bool' '!='
        (ImplicitCastExpr 0x9b93618 <col:11> 'int' <LValueToRValue>
          (DeclRefExpr 0x9b935e8 <col:11> 'const int' lvalue Var 0x9b92250 '__result' 'const int'))
        (IntegerLiteral 0x9b93600 <col:23> 'int' 0))
      (BinaryOperator 0x9b93680 <col:27, col:38> '_Bool' '<'
        (ImplicitCastExpr 0x9b93670 <col:27> 'int' <LValueToRValue>
          (DeclRefExpr 0x9b93640 <col:27> 'const int' lvalue Var 0x9b92250 '__result' 'const int'))
        (IntegerLiteral 0x9b93658 <col:38> 'int' 0))
      (BinaryOperator 0x9b936e8 <col:42, col:51> '_Bool' '<'
        (ImplicitCastExpr 0x9b936c8 <col:42> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9b93698 <col:42> 'const size_t':'const unsigned int' lvalue Var 0x9b92080 '__len1' 'const size_t':'const unsigned int'))
        (ImplicitCastExpr 0x9b936d8 <col:51> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9b936b0 <col:51> 'const size_t':'const unsigned int' lvalue Var 0x9b92160 '__len2' 'const size_t':'const unsigned int'))))))

;
    };
    template <typename _II1, typename _II2> inline bool __lexicographical_compare_aux(_II1 __first1, _II1 __last1, _II2 __first2, _II2 __last2) (CompoundStmt 0x9b94598 </usr/include/c++/4.6/bits/stl_algobase.h:909:5, line:921:5>
  (DeclStmt 0x9b93b40 <line:910:7, col:69>
    0x9b93b10 "typedef typename iterator_traits<_II1>::value_type _ValueType1")
  (DeclStmt 0x9b93c70 <line:911:7, col:69>
    0x9b93c40 "typedef typename iterator_traits<_II2>::value_type _ValueType2")
  (DeclStmt 0x9b943b8 <line:912:7, line:917:34>
    0x9b93c90 "const bool __simple =
      (ParenExpr 0x9b943a0 <line:913:2, line:917:33> '<dependent type>'
        (BinaryOperator 0x9b94388 <line:913:3, line:917:26> '<dependent type>' '&&'
          (BinaryOperator 0x9b94298 <line:913:3, line:916:26> '<dependent type>' '&&'
            (BinaryOperator 0x9b941b0 <line:913:3, line:915:49> '<dependent type>' '&&'
              (BinaryOperator 0x9b94070 <line:913:3, line:914:49> '<dependent type>' '&&'
                (BinaryOperator 0x9b93f18 <line:913:3, col:62> '<dependent type>' '&&'
                  (DependentScopeDeclRefExpr 0x9b93dd0 <col:3, col:27> '<dependent type>' lvalue)
                  (DependentScopeDeclRefExpr 0x9b93ef0 <col:38, col:62> '<dependent type>' lvalue))
                (UnaryOperator 0x9b94058 <line:914:6, col:49> '<dependent type>' prefix '!'
                  (DependentScopeDeclRefExpr 0x9b94030 <col:7, col:49> '<dependent type>' lvalue)))
              (UnaryOperator 0x9b94198 <line:915:6, col:49> '<dependent type>' prefix '!'
                (DependentScopeDeclRefExpr 0x9b94170 <col:7, col:49> '<dependent type>' lvalue)))
            (DependentScopeDeclRefExpr 0x9b94270 <line:916:6, col:26> '<dependent type>' lvalue))
          (DependentScopeDeclRefExpr 0x9b94360 <line:917:6, col:26> '<dependent type>' lvalue)))")
  (ReturnStmt 0x9b94588 <line:919:7, line:920:29>
    (CallExpr 0x9b94558 <line:919:14, line:920:29> '<dependent type>'
      (DependentScopeDeclRefExpr 0x9b944d0 <line:919:14, col:56> '<dependent type>' lvalue)
      (DeclRefExpr 0x9b944f4 <col:61> '_II1' lvalue ParmVar 0x9b93810 '__first1' '_II1')
      (DeclRefExpr 0x9b9450c <col:71> '_II1' lvalue ParmVar 0x9b93850 '__last1' '_II1')
      (DeclRefExpr 0x9b94524 <line:920:12> '_II2' lvalue ParmVar 0x9b93890 '__first2' '_II2')
      (DeclRefExpr 0x9b9453c <col:22> '_II2' lvalue ParmVar 0x9b938d0 '__last2' '_II2'))))

;
    template <typename _ForwardIterator, typename _Tp> _ForwardIterator lower_bound(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__val) (CompoundStmt 0x9b951a0 </usr/include/c++/4.6/bits/stl_algobase.h:938:5, line:966:5>
  (DeclStmt 0x9b949a0 <line:939:7, line:940:12>
    0x9b94970 "typedef typename iterator_traits<_ForwardIterator>::value_type _ValueType")
  (DeclStmt 0x9b94ad0 <line:941:7, line:942:15>
    0x9b94aa0 "typedef typename iterator_traits<_ForwardIterator>::difference_type _DistanceType")
  (NullStmt 0x9b94ae0 <line:947:67>)
  (DeclStmt 0x9b94bf0 <line:949:7, col:59>
    0x9b94b10 "_DistanceType __len =
      (CallExpr 0x9b94bc8 <col:29, col:58> '<dependent type>'
        (UnresolvedLookupExpr 0x9b94b60 <col:29, col:34> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b4eac0)
        (DeclRefExpr 0x9b94b94 <col:43> '_ForwardIterator' lvalue ParmVar 0x9b94680 '__first' '_ForwardIterator')
        (DeclRefExpr 0x9b94bac <col:52> '_ForwardIterator' lvalue ParmVar 0x9b946c0 '__last' '_ForwardIterator'))")
  (WhileStmt 0x9b95160 <line:951:7, line:964:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9b94c70 <line:951:14, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0x9b94c30 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b42c70 0x9ac83c0 0x9b5e730)
      (DeclRefExpr 0x9b94c00 <col:14> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0x9b94b10 '__len' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type')
      (IntegerLiteral 0x9b94c18 <col:22> 'int' 0))
    (CompoundStmt 0x9b95140 <line:952:2, line:964:2>
      (DeclStmt 0x9b94d20 <line:953:4, col:37>
        0x9b94ca0 "_DistanceType __half =
          (BinaryOperator 0x9b94d08 <col:27, col:36> '<dependent type>' '>>'
            (DeclRefExpr 0x9b94cd4 <col:27> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0x9b94b10 '__len' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type')
            (IntegerLiteral 0x9b94cf0 <col:36> 'int' 1))")
      (DeclStmt 0x9b94d90 <line:954:4, col:39>
        0x9b94d40 "_ForwardIterator __middle =
          (DeclRefExpr 0x9b94d74 <col:32> '_ForwardIterator' lvalue ParmVar 0x9b94680 '__first' '_ForwardIterator')")
      (CallExpr 0x9b94e30 <line:955:4, col:33> '<dependent type>'
        (UnresolvedLookupExpr 0x9b94dc8 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b51250)
        (DeclRefExpr 0x9b94dfc <col:17> '_ForwardIterator' lvalue Var 0x9b94d40 '__middle' '_ForwardIterator')
        (DeclRefExpr 0x9b94e14 <col:27> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0x9b94ca0 '__half' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type'))
      (IfStmt 0x9b95120 <line:956:4, line:963:14>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9b94ee0 <line:956:8, col:20> '<dependent type>'
          (UnresolvedLookupExpr 0x9b94ea0 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40ad0 0x9b57c70 0x9b5ddb0)
          (UnaryOperator 0x9b94e70 <col:8, col:9> '<dependent type>' prefix '*'
            (DeclRefExpr 0x9b94e54 <col:9> '_ForwardIterator' lvalue Var 0x9b94d40 '__middle' '_ForwardIterator'))
          (DeclRefExpr 0x9b94e84 <col:20> 'const _Tp' lvalue ParmVar 0x9b94730 '__val' 'const _Tp &'))
        (CompoundStmt 0x9b950b8 <line:957:6, line:961:6>
          (BinaryOperator 0x9b94f38 <line:958:8, col:18> '<dependent type>' '='
            (DeclRefExpr 0x9b94f04 <col:8> '_ForwardIterator' lvalue ParmVar 0x9b94680 '__first' '_ForwardIterator')
            (DeclRefExpr 0x9b94f1c <col:18> '_ForwardIterator' lvalue Var 0x9b94d40 '__middle' '_ForwardIterator'))
          (UnaryOperator 0x9b94f68 <line:959:8, col:10> '<dependent type>' prefix '++'
            (DeclRefExpr 0x9b94f50 <col:10> '_ForwardIterator' lvalue ParmVar 0x9b94680 '__first' '_ForwardIterator'))
          (BinaryOperator 0x9b950a0 <line:960:8, col:33> '<dependent type>' '='
            (DeclRefExpr 0x9b94f7c <col:8> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0x9b94b10 '__len' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type')
            (CXXOperatorCallExpr 0x9b95078 <col:16, col:33> '<dependent type>'
              (UnresolvedLookupExpr 0x9b95040 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
              (CXXOperatorCallExpr 0x9b95000 <col:16, col:24> '<dependent type>'
                (UnresolvedLookupExpr 0x9b94fc8 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
                (DeclRefExpr 0x9b94f94 <col:16> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0x9b94b10 '__len' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type')
                (DeclRefExpr 0x9b94fac <col:24> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0x9b94ca0 '__half' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type'))
              (IntegerLiteral 0x9b95028 <col:33> 'int' 1))))
        (BinaryOperator 0x9b95108 <line:963:6, col:14> '<dependent type>' '='
          (DeclRefExpr 0x9b950d4 <col:6> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0x9b94b10 '__len' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type')
          (DeclRefExpr 0x9b950ec <col:14> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0x9b94ca0 '__half' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type')))))
  (ReturnStmt 0x9b95190 <line:965:7, col:14>
    (DeclRefExpr 0x9b95174 <col:14> '_ForwardIterator' lvalue ParmVar 0x9b94680 '__first' '_ForwardIterator')))

;
    template <typename _Size> inline _Size __lg(_Size __n) (CompoundStmt 0x9b957e8 </usr/include/c++/4.6/bits/stl_algobase.h:973:5, line:978:5>
  (DeclStmt 0x9b95388 <line:974:7, col:16>
    0x9b95350 "_Size __k")
  (ForStmt 0x9b95720 <line:975:7, line:976:4>
    (BinaryOperator 0x9b953c8 <line:975:12, col:18> '<dependent type>' '='
      (DeclRefExpr 0x9b95398 <col:12> '_Size' lvalue Var 0x9b95350 '__k' '_Size')
      (IntegerLiteral 0x9b953b0 <col:18> 'int' 0))
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9b95678 <col:21, col:28> '<dependent type>'
      (UnresolvedLookupExpr 0x9b95410 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b412d0 0x9ac7fa0 0x9b5e2b0)
      (DeclRefExpr 0x9b953e0 <col:21> '_Size' lvalue ParmVar 0x9b95230 '__n' '_Size')
      (IntegerLiteral 0x9b953f8 <col:28> 'int' 0))
    (CompoundAssignOperator 0x9b956d0 <col:31, col:39> '<dependent type>' lvalue '>>=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
      (DeclRefExpr 0x9b9569c <col:31> '_Size' lvalue ParmVar 0x9b95230 '__n' '_Size')
      (IntegerLiteral 0x9b956b8 <col:39> 'int' 1))
    (UnaryOperator 0x9b95708 <line:976:2, col:4> '<dependent type>' prefix '++'
      (DeclRefExpr 0x9b956f0 <col:4> '_Size' lvalue Var 0x9b95350 '__k' '_Size')))
  (ReturnStmt 0x9b957d8 <line:977:7, col:20>
    (CXXOperatorCallExpr 0x9b957b0 <col:14, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0x9b95778 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
      (DeclRefExpr 0x9b95744 <col:14> '_Size' lvalue Var 0x9b95350 '__k' '_Size')
      (IntegerLiteral 0x9b95760 <col:20> 'int' 1))))

;
    inline int __lg(int __n) (CompoundStmt 0x9b95b60 </usr/include/c++/4.6/bits/stl_algobase.h:982:3, col:66>
  (ReturnStmt 0x9b95b50 <col:5, col:63>
    (ImplicitCastExpr 0x9b95b40 <col:12, col:63> 'int' <IntegralCast>
      (BinaryOperator 0x9b95b28 <col:12, col:63> 'unsigned int' '-'
        (BinaryOperator 0x9b95978 <col:12, col:42> 'unsigned int' '-'
          (BinaryOperator 0x9b95938 <col:12, <built-in>:17:22> 'unsigned int' '*'
            (UnaryExprOrTypeTraitExpr 0x9b958f8 </usr/include/c++/4.6/bits/stl_algobase.h:982:12, col:22> 'unsigned int' sizeof 'int')
            (ImplicitCastExpr 0x9b95928 <<built-in>:17:22> 'unsigned int' <IntegralCast>
              (IntegerLiteral 0x9b95910 <col:22> 'int' 8)))
          (ImplicitCastExpr 0x9b95968 </usr/include/c++/4.6/bits/stl_algobase.h:982:42> 'unsigned int' <IntegralCast>
            (IntegerLiteral 0x9b95950 <col:42> 'int' 1)))
        (ImplicitCastExpr 0x9b95b18 <col:46, col:63> 'unsigned int' <IntegralCast>
          (CallExpr 0x9b95ad8 <col:46, col:63> 'int'
            (ImplicitCastExpr 0x9b95ac8 <col:46> 'int (*)(unsigned int)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9b95a80 <col:46> 'int (unsigned int)' lvalue Function 0x9b95990 '__builtin_clz' 'int (unsigned int)'))
            (ImplicitCastExpr 0x9b95b08 <col:60> 'unsigned int' <IntegralCast>
              (ImplicitCastExpr 0x9b95af8 <col:60> 'int' <LValueToRValue>
                (DeclRefExpr 0x9b95a98 <col:60> 'int' lvalue ParmVar 0x9b95820 '__n' 'int')))))))))


    inline long __lg(long __n) (CompoundStmt 0x9b95ef0 </usr/include/c++/4.6/bits/stl_algobase.h:986:3, col:67>
  (ReturnStmt 0x9b95ee0 <col:5, col:64>
    (ImplicitCastExpr 0x9b95ed0 <col:12, col:64> 'long' <IntegralCast>
      (BinaryOperator 0x9b95eb8 <col:12, col:64> 'unsigned int' '-'
        (BinaryOperator 0x9b95ce8 <col:12, col:42> 'unsigned int' '-'
          (BinaryOperator 0x9b95ca8 <col:12, <built-in>:17:22> 'unsigned int' '*'
            (UnaryExprOrTypeTraitExpr 0x9b95c68 </usr/include/c++/4.6/bits/stl_algobase.h:986:12, col:23> 'unsigned int' sizeof 'long')
            (ImplicitCastExpr 0x9b95c98 <<built-in>:17:22> 'unsigned int' <IntegralCast>
              (IntegerLiteral 0x9b95c80 <col:22> 'int' 8)))
          (ImplicitCastExpr 0x9b95cd8 </usr/include/c++/4.6/bits/stl_algobase.h:986:42> 'unsigned int' <IntegralCast>
            (IntegerLiteral 0x9b95cc0 <col:42> 'int' 1)))
        (ImplicitCastExpr 0x9b95ea8 <col:46, col:64> 'unsigned int' <IntegralCast>
          (CallExpr 0x9b95e68 <col:46, col:64> 'int'
            (ImplicitCastExpr 0x9b95e58 <col:46> 'int (*)(unsigned long)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9b95e10 <col:46> 'int (unsigned long)' lvalue Function 0x9b95d20 '__builtin_clzl' 'int (unsigned long)'))
            (ImplicitCastExpr 0x9b95e98 <col:61> 'unsigned long' <IntegralCast>
              (ImplicitCastExpr 0x9b95e88 <col:61> 'long' <LValueToRValue>
                (DeclRefExpr 0x9b95e28 <col:61> 'long' lvalue ParmVar 0x9b95b90 '__n' 'long')))))))))


    inline long long __lg(long long __n) (CompoundStmt 0x9b96280 </usr/include/c++/4.6/bits/stl_algobase.h:990:3, col:73>
  (ReturnStmt 0x9b96270 <col:5, col:70>
    (ImplicitCastExpr 0x9b96260 <col:12, col:70> 'long long' <IntegralCast>
      (BinaryOperator 0x9b96248 <col:12, col:70> 'unsigned int' '-'
        (BinaryOperator 0x9b96078 <col:12, col:47> 'unsigned int' '-'
          (BinaryOperator 0x9b96038 <col:12, <built-in>:17:22> 'unsigned int' '*'
            (UnaryExprOrTypeTraitExpr 0x9b95ff8 </usr/include/c++/4.6/bits/stl_algobase.h:990:12, col:28> 'unsigned int' sizeof 'long long')
            (ImplicitCastExpr 0x9b96028 <<built-in>:17:22> 'unsigned int' <IntegralCast>
              (IntegerLiteral 0x9b96010 <col:22> 'int' 8)))
          (ImplicitCastExpr 0x9b96068 </usr/include/c++/4.6/bits/stl_algobase.h:990:47> 'unsigned int' <IntegralCast>
            (IntegerLiteral 0x9b96050 <col:47> 'int' 1)))
        (ImplicitCastExpr 0x9b96238 <col:51, col:70> 'unsigned int' <IntegralCast>
          (CallExpr 0x9b961f8 <col:51, col:70> 'int'
            (ImplicitCastExpr 0x9b961e8 <col:51> 'int (*)(unsigned long long)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9b961a0 <col:51> 'int (unsigned long long)' lvalue Function 0x9b960b0 '__builtin_clzll' 'int (unsigned long long)'))
            (ImplicitCastExpr 0x9b96228 <col:67> 'unsigned long long' <IntegralCast>
              (ImplicitCastExpr 0x9b96218 <col:67> 'long long' <LValueToRValue>
                (DeclRefExpr 0x9b961b8 <col:67> 'long long' lvalue ParmVar 0x9b95f20 '__n' 'long long')))))))))


    template <typename _II1, typename _II2> inline bool equal(_II1 __first1, _II1 __last1, _II2 __first2) (CompoundStmt 0x9b96738 </usr/include/c++/4.6/bits/stl_algobase.h:1011:5, line:1023:5>
  (NullStmt 0x9b96508 <line:1018:56>)
  (ReturnStmt 0x9b96728 <line:1020:7, line:1022:37>
    (CallExpr 0x9b96700 <line:1020:14, line:1022:37> '<dependent type>'
      (UnresolvedLookupExpr 0x9b96530 <line:1020:14, col:19> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b8d6d0)
      (CallExpr 0x9b965d0 <col:31, col:57> '<dependent type>'
        (UnresolvedLookupExpr 0x9b96580 <col:31, col:36> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b78040)
        (DeclRefExpr 0x9b965b4 <col:49> '_II1' lvalue ParmVar 0x9b96360 '__first1' '_II1'))
      (CallExpr 0x9b96658 <line:1021:10, col:35> '<dependent type>'
        (UnresolvedLookupExpr 0x9b96608 <col:10, col:15> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b78040)
        (DeclRefExpr 0x9b9663c <col:28> '_II1' lvalue ParmVar 0x9b963a0 '__last1' '_II1'))
      (CallExpr 0x9b966e0 <line:1022:10, col:36> '<dependent type>'
        (UnresolvedLookupExpr 0x9b96690 <col:10, col:15> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b78040)
        (DeclRefExpr 0x9b966c4 <col:28> '_II2' lvalue ParmVar 0x9b963e0 '__first2' '_II2')))))

;
    template <typename _IIter1, typename _IIter2, typename _BinaryPredicate> inline bool equal(_IIter1 __first1, _IIter1 __last1, _IIter2 __first2, _BinaryPredicate __binary_pred) (CompoundStmt 0x9b96d00 </usr/include/c++/4.6/bits/stl_algobase.h:1044:5, line:1054:5>
  (NullStmt 0x9b96a78 <line:1048:56>)
  (ForStmt 0x9b96cb8 <line:1050:7, line:1052:11>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9b96af8 <line:1050:14, col:26> '<dependent type>'
      (UnresolvedLookupExpr 0x9b96ab8 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b412d0 0x9ac7fa0 0x9b5e2b0)
      (DeclRefExpr 0x9b96a84 <col:14> '_IIter1' lvalue ParmVar 0x9b96860 '__first1' '_IIter1')
      (DeclRefExpr 0x9b96a9c <col:26> '_IIter1' lvalue ParmVar 0x9b968a0 '__last1' '_IIter1'))
    (BinaryOperator 0x9b96b80 <col:35, col:49> '<dependent type>' ','
      (UnaryOperator 0x9b96b38 <col:35, col:37> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9b96b1c <col:37> '_IIter1' lvalue ParmVar 0x9b96860 '__first1' '_IIter1'))
      (UnaryOperator 0x9b96b68 <col:47, col:49> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9b96b4c <col:49> '_IIter2' lvalue ParmVar 0x9b968e0 '__first2' '_IIter2')))
    (IfStmt 0x9b96c98 <line:1051:2, line:1052:11>
      <<<NULL>>>
      (UnaryOperator 0x9b96c60 <line:1051:6, col:47> '_Bool' prefix '!'
        (CXXUnresolvedConstructExpr 0x9b96c40 <col:7, col:47> '_Bool'
          (CallExpr 0x9b96c18 <col:12, col:46> '<dependent type>'
            (DeclRefExpr 0x9b96ba0 <col:12> '_BinaryPredicate' lvalue ParmVar 0x9b96920 '__binary_pred' '_BinaryPredicate')
            (UnaryOperator 0x9b96bd0 <col:26, col:27> '<dependent type>' prefix '*'
              (DeclRefExpr 0x9b96bb8 <col:27> '_IIter1' lvalue ParmVar 0x9b96860 '__first1' '_IIter1'))
            (UnaryOperator 0x9b96c00 <col:37, col:38> '<dependent type>' prefix '*'
              (DeclRefExpr 0x9b96be4 <col:38> '_IIter2' lvalue ParmVar 0x9b968e0 '__first2' '_IIter2')))))
      (ReturnStmt 0x9b96c88 <line:1052:4, col:11>
        (CXXBoolLiteralExpr 0x9b96c78 <col:11> '_Bool' false))
      <<<NULL>>>))
  (ReturnStmt 0x9b96cf0 <line:1053:7, col:14>
    (CXXBoolLiteralExpr 0x9b96ce0 <col:14> '_Bool' true)))

;
    template <typename _II1, typename _II2> inline bool lexicographical_compare(_II1 __first1, _II1 __last1, _II2 __first2, _II2 __last2) (CompoundStmt 0x9b974f0 </usr/include/c++/4.6/bits/stl_algobase.h:1075:5, line:1090:5>
  (DeclStmt 0x9b970e0 <line:1077:7, col:69>
    0x9b970b0 "typedef typename iterator_traits<_II1>::value_type _ValueType1")
  (DeclStmt 0x9b97210 <line:1078:7, col:69>
    0x9b971e0 "typedef typename iterator_traits<_II2>::value_type _ValueType2")
  (NullStmt 0x9b97220 <line:1083:56>)
  (NullStmt 0x9b97230 <line:1084:56>)
  (ReturnStmt 0x9b974e0 <line:1086:7, line:1089:33>
    (CallExpr 0x9b974b0 <line:1086:14, line:1089:33> '<dependent type>'
      (UnresolvedLookupExpr 0x9b97258 <line:1086:14, col:19> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b939f0)
      (CallExpr 0x9b972f8 <col:49, col:75> '<dependent type>'
        (UnresolvedLookupExpr 0x9b972a8 <col:49, col:54> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b78040)
        (DeclRefExpr 0x9b972dc <col:67> '_II1' lvalue ParmVar 0x9b96de0 '__first1' '_II1'))
      (CallExpr 0x9b97380 <line:1087:7, col:32> '<dependent type>'
        (UnresolvedLookupExpr 0x9b97330 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b78040)
        (DeclRefExpr 0x9b97364 <col:25> '_II1' lvalue ParmVar 0x9b96e20 '__last1' '_II1'))
      (CallExpr 0x9b97408 <line:1088:7, col:33> '<dependent type>'
        (UnresolvedLookupExpr 0x9b973b8 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b78040)
        (DeclRefExpr 0x9b973ec <col:25> '_II2' lvalue ParmVar 0x9b96e60 '__first2' '_II2'))
      (CallExpr 0x9b97490 <line:1089:7, col:32> '<dependent type>'
        (UnresolvedLookupExpr 0x9b97440 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b78040)
        (DeclRefExpr 0x9b97474 <col:25> '_II2' lvalue ParmVar 0x9b96ea0 '__last2' '_II2')))))

;
    template <typename _II1, typename _II2, typename _Compare> bool lexicographical_compare(_II1 __first1, _II1 __last1, _II2 __first2, _II2 __last2, _Compare __comp) (CompoundStmt 0x9b991c8 </usr/include/c++/4.6/bits/stl_algobase.h:1109:5, line:1130:5>
  (DeclStmt 0x9b98810 <line:1110:7, col:75>
    0x9b987e0 "typedef typename iterator_traits<_II1>::iterator_category _Category1")
  (DeclStmt 0x9b98940 <line:1111:7, col:75>
    0x9b98910 "typedef typename iterator_traits<_II2>::iterator_category _Category2")
  (DeclStmt 0x9b98b50 <line:1112:7, col:64>
    0x9b98b20 "typedef std::__lc_rai<_Category1, _Category2> __rai_type")
  (NullStmt 0x9b98b60 <line:1117:56>)
  (NullStmt 0x9b98b70 <line:1118:56>)
  (BinaryOperator 0x9b98c90 <line:1120:7, col:76> '<dependent type>' '='
    (DeclRefExpr 0x9b98b7c <col:7> '_II1' lvalue ParmVar 0x9b984c0 '__last1' '_II1')
    (CallExpr 0x9b98c60 <col:17, col:76> '<dependent type>'
      (DependentScopeDeclRefExpr 0x9b98bd8 <col:17, col:29> '<dependent type>' lvalue)
      (DeclRefExpr 0x9b98bfc <col:40> '_II1' lvalue ParmVar 0x9b97630 '__first1' '_II1')
      (DeclRefExpr 0x9b98c14 <col:50> '_II1' lvalue ParmVar 0x9b984c0 '__last1' '_II1')
      (DeclRefExpr 0x9b98c2c <col:59> '_II2' lvalue ParmVar 0x9b98500 '__first2' '_II2')
      (DeclRefExpr 0x9b98c44 <col:69> '_II2' lvalue ParmVar 0x9b98540 '__last2' '_II2')))
  (ForStmt 0x9b99048 <line:1121:7, line:1128:2>
    <<<NULL>>>
    <<<NULL>>>
    (BinaryOperator 0x9b98de0 <line:1121:14, col:73> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x9b98d18 <col:14, col:26> '<dependent type>'
        (UnresolvedLookupExpr 0x9b98cd8 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b412d0 0x9ac7fa0 0x9b5e2b0)
        (DeclRefExpr 0x9b98ca8 <col:14> '_II1' lvalue ParmVar 0x9b97630 '__first1' '_II1')
        (DeclRefExpr 0x9b98cc0 <col:26> '_II1' lvalue ParmVar 0x9b984c0 '__last1' '_II1'))
      (CallExpr 0x9b98db8 <col:37, col:73> '<dependent type>'
        (DependentScopeDeclRefExpr 0x9b98d60 <col:37, col:49> '<dependent type>' lvalue)
        (DeclRefExpr 0x9b98d84 <col:56> '_II2' lvalue ParmVar 0x9b98500 '__first2' '_II2')
        (DeclRefExpr 0x9b98d9c <col:66> '_II2' lvalue ParmVar 0x9b98540 '__last2' '_II2')))
    (BinaryOperator 0x9b98e58 <line:1122:5, col:19> '<dependent type>' ','
      (UnaryOperator 0x9b98e10 <col:5, col:7> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9b98df8 <col:7> '_II1' lvalue ParmVar 0x9b97630 '__first1' '_II1'))
      (UnaryOperator 0x9b98e40 <col:17, col:19> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9b98e24 <col:19> '_II2' lvalue ParmVar 0x9b98500 '__first2' '_II2')))
    (CompoundStmt 0x9b99030 <line:1123:2, line:1128:2>
      (IfStmt 0x9b98f30 <line:1124:4, line:1125:13>
        <<<NULL>>>
        (CallExpr 0x9b98ee8 <line:1124:8, col:35> '<dependent type>'
          (DeclRefExpr 0x9b98e70 <col:8> '_Compare' lvalue ParmVar 0x9b98580 '__comp' '_Compare')
          (UnaryOperator 0x9b98ea0 <col:15, col:16> '<dependent type>' prefix '*'
            (DeclRefExpr 0x9b98e88 <col:16> '_II1' lvalue ParmVar 0x9b97630 '__first1' '_II1'))
          (UnaryOperator 0x9b98ed0 <col:26, col:27> '<dependent type>' prefix '*'
            (DeclRefExpr 0x9b98eb4 <col:27> '_II2' lvalue ParmVar 0x9b98500 '__first2' '_II2')))
        (ReturnStmt 0x9b98f20 <line:1125:6, col:13>
          (CXXBoolLiteralExpr 0x9b98f10 <col:13> '_Bool' true))
        <<<NULL>>>)
      (IfStmt 0x9b99010 <line:1126:4, line:1127:13>
        <<<NULL>>>
        (CallExpr 0x9b98fc8 <line:1126:8, col:35> '<dependent type>'
          (DeclRefExpr 0x9b98f4c <col:8> '_Compare' lvalue ParmVar 0x9b98580 '__comp' '_Compare')
          (UnaryOperator 0x9b98f80 <col:15, col:16> '<dependent type>' prefix '*'
            (DeclRefExpr 0x9b98f64 <col:16> '_II2' lvalue ParmVar 0x9b98500 '__first2' '_II2'))
          (UnaryOperator 0x9b98fb0 <col:26, col:27> '<dependent type>' prefix '*'
            (DeclRefExpr 0x9b98f94 <col:27> '_II1' lvalue ParmVar 0x9b97630 '__first1' '_II1')))
        (ReturnStmt 0x9b99000 <line:1127:6, col:13>
          (CXXBoolLiteralExpr 0x9b98ff0 <col:13> '_Bool' false))
        <<<NULL>>>)))
  (ReturnStmt 0x9b991b8 <line:1129:7, col:49>
    (BinaryOperator 0x9b991a0 <col:14, col:49> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x9b990e0 <col:14, col:26> '<dependent type>'
        (UnresolvedLookupExpr 0x9b990a0 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890)
        (DeclRefExpr 0x9b9906c <col:14> '_II1' lvalue ParmVar 0x9b97630 '__first1' '_II1')
        (DeclRefExpr 0x9b99084 <col:26> '_II1' lvalue ParmVar 0x9b984c0 '__last1' '_II1'))
      (CXXOperatorCallExpr 0x9b99178 <col:37, col:49> '<dependent type>'
        (UnresolvedLookupExpr 0x9b99138 <col:46, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b412d0 0x9ac7fa0 0x9b5e2b0)
        (DeclRefExpr 0x9b99104 <col:37> '_II2' lvalue ParmVar 0x9b98500 '__first2' '_II2')
        (DeclRefExpr 0x9b9911c <col:49> '_II2' lvalue ParmVar 0x9b98540 '__last2' '_II2')))))

;
    template <typename _InputIterator1, typename _InputIterator2> pair<_InputIterator1, _InputIterator2> mismatch(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2) (CompoundStmt 0x9b99908 </usr/include/c++/4.6/bits/stl_algobase.h:1149:5, line:1164:5>
  (NullStmt 0x9b99588 <line:1156:56>)
  (WhileStmt 0x9b99788 <line:1158:7, line:1162:9>
    <<<NULL>>>
    (BinaryOperator 0x9b996f8 <line:1158:14, col:51> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x9b99608 <col:14, col:26> '<dependent type>'
        (UnresolvedLookupExpr 0x9b995c8 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b412d0 0x9ac7fa0 0x9b5e2b0)
        (DeclRefExpr 0x9b99594 <col:14> '_InputIterator1' lvalue ParmVar 0x9b99390 '__first1' '_InputIterator1')
        (DeclRefExpr 0x9b995ac <col:26> '_InputIterator1' lvalue ParmVar 0x9b993d0 '__last1' '_InputIterator1'))
      (CXXOperatorCallExpr 0x9b996d0 <col:37, col:51> '<dependent type>'
        (UnresolvedLookupExpr 0x9b99690 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890)
        (UnaryOperator 0x9b99648 <col:37, col:38> '<dependent type>' prefix '*'
          (DeclRefExpr 0x9b9962c <col:38> '_InputIterator1' lvalue ParmVar 0x9b99390 '__first1' '_InputIterator1'))
        (UnaryOperator 0x9b99678 <col:50, col:51> '<dependent type>' prefix '*'
          (DeclRefExpr 0x9b9965c <col:51> '_InputIterator2' lvalue ParmVar 0x9b99410 '__first2' '_InputIterator2'))))
    (CompoundStmt 0x9b99770 <line:1159:9, line:1162:9>
      (UnaryOperator 0x9b99728 <line:1160:4, col:6> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9b99710 <col:6> '_InputIterator1' lvalue ParmVar 0x9b99390 '__first1' '_InputIterator1'))
      (UnaryOperator 0x9b99758 <line:1161:4, col:6> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9b9973c <col:6> '_InputIterator2' lvalue ParmVar 0x9b99410 '__first2' '_InputIterator2'))))
  (ReturnStmt 0x9b998f8 <line:1163:7, col:71>
    (CXXUnresolvedConstructExpr 0x9b998d8 <col:14, col:71> 'pair<_InputIterator1, _InputIterator2>'
      (DeclRefExpr 0x9b998a8 <col:53> '_InputIterator1' lvalue ParmVar 0x9b99390 '__first1' '_InputIterator1')
      (DeclRefExpr 0x9b998c0 <col:63> '_InputIterator2' lvalue ParmVar 0x9b99410 '__first2' '_InputIterator2'))))

;
    template <typename _InputIterator1, typename _InputIterator2, typename _BinaryPredicate> pair<_InputIterator1, _InputIterator2> mismatch(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _BinaryPredicate __binary_pred) (CompoundStmt 0x9b9a0d8 </usr/include/c++/4.6/bits/stl_algobase.h:1187:5, line:1199:5>
  (NullStmt 0x9b99d58 <line:1191:56>)
  (WhileStmt 0x9b99f58 <line:1193:7, line:1197:9>
    <<<NULL>>>
    (BinaryOperator 0x9b99ec8 <line:1193:14, col:77> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x9b99dd8 <col:14, col:26> '<dependent type>'
        (UnresolvedLookupExpr 0x9b99d98 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b412d0 0x9ac7fa0 0x9b5e2b0)
        (DeclRefExpr 0x9b99d64 <col:14> '_InputIterator1' lvalue ParmVar 0x9b99b10 '__first1' '_InputIterator1')
        (DeclRefExpr 0x9b99d7c <col:26> '_InputIterator1' lvalue ParmVar 0x9b99b50 '__last1' '_InputIterator1'))
      (CXXUnresolvedConstructExpr 0x9b99ea8 <col:37, col:77> '_Bool'
        (CallExpr 0x9b99e80 <col:42, col:76> '<dependent type>'
          (DeclRefExpr 0x9b99e08 <col:42> '_BinaryPredicate' lvalue ParmVar 0x9b99bd0 '__binary_pred' '_BinaryPredicate')
          (UnaryOperator 0x9b99e38 <col:56, col:57> '<dependent type>' prefix '*'
            (DeclRefExpr 0x9b99e20 <col:57> '_InputIterator1' lvalue ParmVar 0x9b99b10 '__first1' '_InputIterator1'))
          (UnaryOperator 0x9b99e68 <col:67, col:68> '<dependent type>' prefix '*'
            (DeclRefExpr 0x9b99e4c <col:68> '_InputIterator2' lvalue ParmVar 0x9b99b90 '__first2' '_InputIterator2')))))
    (CompoundStmt 0x9b99f40 <line:1194:9, line:1197:9>
      (UnaryOperator 0x9b99ef8 <line:1195:4, col:6> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9b99ee0 <col:6> '_InputIterator1' lvalue ParmVar 0x9b99b10 '__first1' '_InputIterator1'))
      (UnaryOperator 0x9b99f28 <line:1196:4, col:6> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9b99f0c <col:6> '_InputIterator2' lvalue ParmVar 0x9b99b90 '__first2' '_InputIterator2'))))
  (ReturnStmt 0x9b9a0c8 <line:1198:7, col:71>
    (CXXUnresolvedConstructExpr 0x9b9a0a8 <col:14, col:71> 'pair<_InputIterator1, _InputIterator2>'
      (DeclRefExpr 0x9b9a078 <col:53> '_InputIterator1' lvalue ParmVar 0x9b99b10 '__first1' '_InputIterator1')
      (DeclRefExpr 0x9b9a090 <col:63> '_InputIterator2' lvalue ParmVar 0x9b99b90 '__first2' '_InputIterator2'))))

;
}
extern void *__builtin_memmove(void *, const void *, unsigned int);
extern void *__builtin_memset(void *, int, unsigned int);
extern int __builtin_memcmp(const void *, const void *, unsigned int);
extern int __builtin_clz(unsigned int);
extern int __builtin_clzl(unsigned long);
extern int __builtin_clzll(unsigned long long);
namespace std {
    using ::mbstate_t;
    ;
}
namespace std {
    using ::wint_t;
    ;
    using ::btowc;
    ;
    using ::fgetwc;
    ;
    using ::fgetws;
    ;
    using ::fputwc;
    ;
    using ::fputws;
    ;
    using ::fwide;
    ;
    using ::fwprintf;
    ;
    using ::fwscanf;
    ;
    using ::getwc;
    ;
    using ::getwchar;
    ;
    using ::mbrlen;
    ;
    using ::mbrtowc;
    ;
    using ::mbsinit;
    ;
    using ::mbsrtowcs;
    ;
    using ::putwc;
    ;
    using ::putwchar;
    ;
    using ::swprintf;
    ;
    using ::swscanf;
    ;
    using ::ungetwc;
    ;
    using ::vfwprintf;
    ;
    using ::vfwscanf;
    ;
    using ::vswprintf;
    ;
    using ::vswscanf;
    ;
    using ::vwprintf;
    ;
    using ::vwscanf;
    ;
    using ::wcrtomb;
    ;
    using ::wcscat;
    ;
    using ::wcscmp;
    ;
    using ::wcscoll;
    ;
    using ::wcscpy;
    ;
    using ::wcscspn;
    ;
    using ::wcsftime;
    ;
    using ::wcslen;
    ;
    using ::wcsncat;
    ;
    using ::wcsncmp;
    ;
    using ::wcsncpy;
    ;
    using ::wcsrtombs;
    ;
    using ::wcsspn;
    ;
    using ::wcstod;
    ;
    using ::wcstof;
    ;
    using ::wcstok;
    ;
    using ::wcstol;
    ;
    using ::wcstoul;
    ;
    using ::wcsxfrm;
    ;
    using ::wctob;
    ;
    using ::wmemcmp;
    ;
    using ::wmemcpy;
    ;
    using ::wmemmove;
    ;
    using ::wmemset;
    ;
    using ::wprintf;
    ;
    using ::wscanf;
    ;
    using ::wcschr;
    ;
    using ::wcspbrk;
    ;
    using ::wcsrchr;
    ;
    using ::wcsstr;
    ;
    using ::wmemchr;
    ;
    inline wchar_t *wcschr(wchar_t *__p, wchar_t __c) (CompoundStmt 0x9ba1140 </usr/include/c++/4.6/cwchar:214:3, col:58>
  (ReturnStmt 0x9ba1130 <col:5, col:55>
    (CallExpr 0x9ba10f8 <col:12, col:55> 'wchar_t *'
      (ImplicitCastExpr 0x9ba10e8 <col:12> 'wchar_t *(*)(const wchar_t *, wchar_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9ba1088 <col:12> 'wchar_t *(const wchar_t *, wchar_t) throw()' lvalue Function 0x9a3a480 'wcschr' 'wchar_t *(const wchar_t *, wchar_t) throw()' (UsingShadow 0x9ba0cc0 'wcschr')))
      (CXXConstCastExpr 0x9ba1058 <col:19, col:49> 'const wchar_t *' const_cast<const wchar_t *> <NoOp>
        (ImplicitCastExpr 0x9ba1048 <col:46> 'wchar_t *' <LValueToRValue>
          (DeclRefExpr 0x9ba1020 <col:46> 'wchar_t *' lvalue ParmVar 0x9ba0ec0 '__p' 'wchar_t *')))
      (ImplicitCastExpr 0x9ba1120 <col:52> 'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9ba1070 <col:52> 'wchar_t' lvalue ParmVar 0x9ba0f00 '__c' 'wchar_t')))))


    inline wchar_t *wcspbrk(wchar_t *__s1, const wchar_t *__s2) (CompoundStmt 0x9ba13e0 </usr/include/c++/4.6/cwchar:218:3, col:61>
  (ReturnStmt 0x9ba13d0 <col:5, col:58>
    (CallExpr 0x9ba1398 <col:12, col:58> 'wchar_t *'
      (ImplicitCastExpr 0x9ba1388 <col:12> 'wchar_t *(*)(const wchar_t *, const wchar_t *) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9ba1328 <col:12> 'wchar_t *(const wchar_t *, const wchar_t *) throw()' lvalue Function 0x9a3ac40 'wcspbrk' 'wchar_t *(const wchar_t *, const wchar_t *) throw()' (UsingShadow 0x9ba0d30 'wcspbrk')))
      (CXXConstCastExpr 0x9ba12f8 <col:20, col:51> 'const wchar_t *' const_cast<const wchar_t *> <NoOp>
        (ImplicitCastExpr 0x9ba12e8 <col:47> 'wchar_t *' <LValueToRValue>
          (DeclRefExpr 0x9ba12c0 <col:47> 'wchar_t *' lvalue ParmVar 0x9ba1170 '__s1' 'wchar_t *')))
      (ImplicitCastExpr 0x9ba13c0 <col:54> 'const wchar_t *' <LValueToRValue>
        (DeclRefExpr 0x9ba1310 <col:54> 'const wchar_t *' lvalue ParmVar 0x9ba11c0 '__s2' 'const wchar_t *')))))


    inline wchar_t *wcsrchr(wchar_t *__p, wchar_t __c) (CompoundStmt 0x9ba1630 </usr/include/c++/4.6/cwchar:222:3, col:59>
  (ReturnStmt 0x9ba1620 <col:5, col:56>
    (CallExpr 0x9ba15e8 <col:12, col:56> 'wchar_t *'
      (ImplicitCastExpr 0x9ba15d8 <col:12> 'wchar_t *(*)(const wchar_t *, wchar_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9ba15b8 <col:12> 'wchar_t *(const wchar_t *, wchar_t) throw()' lvalue Function 0x9a3a5e0 'wcsrchr' 'wchar_t *(const wchar_t *, wchar_t) throw()' (UsingShadow 0x9ba0da0 'wcsrchr')))
      (CXXConstCastExpr 0x9ba1588 <col:20, col:50> 'const wchar_t *' const_cast<const wchar_t *> <NoOp>
        (ImplicitCastExpr 0x9ba1578 <col:47> 'wchar_t *' <LValueToRValue>
          (DeclRefExpr 0x9ba1550 <col:47> 'wchar_t *' lvalue ParmVar 0x9ba1410 '__p' 'wchar_t *')))
      (ImplicitCastExpr 0x9ba1610 <col:53> 'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9ba15a0 <col:53> 'wchar_t' lvalue ParmVar 0x9ba1450 '__c' 'wchar_t')))))


    inline wchar_t *wcsstr(wchar_t *__s1, const wchar_t *__s2) (CompoundStmt 0x9ba2a70 </usr/include/c++/4.6/cwchar:226:3, col:60>
  (ReturnStmt 0x9ba2a60 <col:5, col:57>
    (CallExpr 0x9ba2a28 <col:12, col:57> 'wchar_t *'
      (ImplicitCastExpr 0x9ba2a18 <col:12> 'wchar_t *(*)(const wchar_t *, const wchar_t *) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9ba29f8 <col:12> 'wchar_t *(const wchar_t *, const wchar_t *) throw()' lvalue Function 0x9a3adb0 'wcsstr' 'wchar_t *(const wchar_t *, const wchar_t *) throw()' (UsingShadow 0x9ba0e10 'wcsstr')))
      (CXXConstCastExpr 0x9ba29c8 <col:19, col:50> 'const wchar_t *' const_cast<const wchar_t *> <NoOp>
        (ImplicitCastExpr 0x9ba29b8 <col:46> 'wchar_t *' <LValueToRValue>
          (DeclRefExpr 0x9ba17b0 <col:46> 'wchar_t *' lvalue ParmVar 0x9ba1660 '__s1' 'wchar_t *')))
      (ImplicitCastExpr 0x9ba2a50 <col:53> 'const wchar_t *' <LValueToRValue>
        (DeclRefExpr 0x9ba29e0 <col:53> 'const wchar_t *' lvalue ParmVar 0x9ba16b0 '__s2' 'const wchar_t *')))))


    inline wchar_t *wmemchr(wchar_t *__p, wchar_t __c, size_t __n) (CompoundStmt 0x9ba2da0 </usr/include/c++/4.6/cwchar:230:3, col:64>
  (ReturnStmt 0x9ba2d90 <col:5, col:61>
    (CallExpr 0x9ba2d48 <col:12, col:61> 'wchar_t *'
      (ImplicitCastExpr 0x9ba2d38 <col:12> 'wchar_t *(*)(const wchar_t *, wchar_t, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9ba2cd8 <col:12> 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' lvalue Function 0x9a3b620 'wmemchr' 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' (UsingShadow 0x9ba0e80 'wmemchr')))
      (CXXConstCastExpr 0x9ba2c90 <col:20, col:50> 'const wchar_t *' const_cast<const wchar_t *> <NoOp>
        (ImplicitCastExpr 0x9ba2c80 <col:47> 'wchar_t *' <LValueToRValue>
          (DeclRefExpr 0x9ba2c58 <col:47> 'wchar_t *' lvalue ParmVar 0x9ba2aa0 '__p' 'wchar_t *')))
      (ImplicitCastExpr 0x9ba2d70 <col:53> 'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9ba2ca8 <col:53> 'wchar_t' lvalue ParmVar 0x9ba2ae0 '__c' 'wchar_t'))
      (ImplicitCastExpr 0x9ba2d80 <col:58> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9ba2cc0 <col:58> 'size_t':'unsigned int' lvalue ParmVar 0x9ba2b20 '__n' 'size_t':'unsigned int')))))


}
namespace __gnu_cxx {
    using ::wcstold;
    ;
    using ::wcstoll;
    ;
    using ::wcstoull;
    ;
}
namespace std {
    using ::__gnu_cxx::wcstold;
    ;
    using ::__gnu_cxx::wcstoll;
    ;
    using ::__gnu_cxx::wcstoull;
    ;
}
namespace std {
    typedef long long streamoff;
    typedef ptrdiff_t streamsize;
    template <typename _StateT = __mbstate_t> class fpos
template <typename _StateT> class fpos {
        class fpos;
    private:
    private:
        streamoff _M_off;
        _StateT _M_state;
    public:
    public:
        fpos<_StateT>() : _M_off((IntegerLiteral 0x9ba3ec8 </usr/include/c++/4.6/bits/postypes.h:125:16> 'int' 0)
), _M_state() (CompoundStmt 0x9ba3f60 </usr/include/c++/4.6/bits/postypes.h:125:31, col:33>)


        fpos<_StateT>(streamoff __off) : _M_off((DeclRefExpr 0x9ba3f70 </usr/include/c++/4.6/bits/postypes.h:135:16> 'streamoff':'long long' lvalue ParmVar 0x9ba3640 '__off' 'streamoff':'long long')
), _M_state() (CompoundStmt 0x9ba4010 </usr/include/c++/4.6/bits/postypes.h:135:35, col:37>)


        streamoff operator streamoff() const (CompoundStmt 0x9ba4098 </usr/include/c++/4.6/bits/postypes.h:138:34, col:51>
  (ReturnStmt 0x9ba4088 <col:36, col:43>
    (MemberExpr 0x9ba4064 <col:43> 'const streamoff':'const long long' lvalue ->_M_off 0x9ba34f0
      (CXXThisExpr 0x9ba4038 <col:43> 'const fpos<_StateT> *' this))))


        void state(_StateT __st) (CompoundStmt 0x9ba4110 </usr/include/c++/4.6/bits/postypes.h:143:7, col:26>
  (BinaryOperator 0x9ba40f8 <col:9, col:20> '<dependent type>' '='
    (MemberExpr 0x9ba40c0 <col:9> '_StateT' lvalue ->_M_state 0x9ba3530
      (CXXThisExpr 0x9ba40b0 <col:9> 'fpos<_StateT> *' this))
    (DeclRefExpr 0x9ba40e0 <col:20> '_StateT' lvalue ParmVar 0x9ba3830 '__st' '_StateT')))


        _StateT state() const (CompoundStmt 0x9ba4168 </usr/include/c++/4.6/bits/postypes.h:148:7, col:26>
  (ReturnStmt 0x9ba4158 <col:9, col:16>
    (MemberExpr 0x9ba4138 <col:16> 'const _StateT' lvalue ->_M_state 0x9ba3530
      (CXXThisExpr 0x9ba4128 <col:16> 'const fpos<_StateT> *' this))))


        fpos<_StateT> &operator+=(streamoff __off) (CompoundStmt 0x9ba4220 </usr/include/c++/4.6/bits/postypes.h:156:7, line:159:7>
  (CompoundAssignOperator 0x9ba41c8 <line:157:2, col:12> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (MemberExpr 0x9ba4190 <col:2> 'streamoff':'long long' lvalue ->_M_off 0x9ba34f0
      (CXXThisExpr 0x9ba4180 <col:2> 'fpos<_StateT> *' this))
    (DeclRefExpr 0x9ba41b0 <col:12> 'streamoff':'long long' lvalue ParmVar 0x9ba39c0 '__off' 'streamoff':'long long'))
  (ReturnStmt 0x9ba4210 <line:158:2, col:10>
    (UnaryOperator 0x9ba41f8 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9ba41e8 <col:10> 'fpos<_StateT> *' this))))


        fpos<_StateT> &operator-=(streamoff __off) (CompoundStmt 0x9ba42d8 </usr/include/c++/4.6/bits/postypes.h:167:7, line:170:7>
  (CompoundAssignOperator 0x9ba4280 <line:168:2, col:12> '<dependent type>' lvalue '-=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (MemberExpr 0x9ba4248 <col:2> 'streamoff':'long long' lvalue ->_M_off 0x9ba34f0
      (CXXThisExpr 0x9ba4238 <col:2> 'fpos<_StateT> *' this))
    (DeclRefExpr 0x9ba4268 <col:12> 'streamoff':'long long' lvalue ParmVar 0x9ba3af0 '__off' 'streamoff':'long long'))
  (ReturnStmt 0x9ba42c8 <line:169:2, col:10>
    (UnaryOperator 0x9ba42b0 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9ba42a0 <col:10> 'fpos<_StateT> *' this))))


        fpos<_StateT> operator+(streamoff __off) const (CompoundStmt 0x9ba4408 </usr/include/c++/4.6/bits/postypes.h:180:7, line:184:7>
  (DeclStmt 0x9ba4380 <line:181:2, col:19>
    0x9ba4300 "fpos<_StateT> __pos =
      (ParenListExpr 0x9ba4360 <col:12, col:18> 'fpos<_StateT>'
        (UnaryOperator 0x9ba4348 <col:13, col:14> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9ba4338 <col:14> 'const fpos<_StateT> *' this)))")
  (CompoundAssignOperator 0x9ba43c0 <line:182:2, col:11> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (DeclRefExpr 0x9ba4390 <col:2> 'fpos<_StateT>' lvalue Var 0x9ba4300 '__pos' 'fpos<_StateT>')
    (DeclRefExpr 0x9ba43a8 <col:11> 'streamoff':'long long' lvalue ParmVar 0x9ba3bc0 '__off' 'streamoff':'long long'))
  (ReturnStmt 0x9ba43f8 <line:183:2, col:9>
    (DeclRefExpr 0x9ba43e0 <col:9> 'fpos<_StateT>' lvalue Var 0x9ba4300 '__pos' 'fpos<_StateT>')))


        fpos<_StateT> operator-(streamoff __off) const (CompoundStmt 0x9ba4538 </usr/include/c++/4.6/bits/postypes.h:194:7, line:198:7>
  (DeclStmt 0x9ba44b0 <line:195:2, col:19>
    0x9ba4430 "fpos<_StateT> __pos =
      (ParenListExpr 0x9ba4490 <col:12, col:18> 'fpos<_StateT>'
        (UnaryOperator 0x9ba4478 <col:13, col:14> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9ba4468 <col:14> 'const fpos<_StateT> *' this)))")
  (CompoundAssignOperator 0x9ba44f0 <line:196:2, col:11> '<dependent type>' lvalue '-=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (DeclRefExpr 0x9ba44c0 <col:2> 'fpos<_StateT>' lvalue Var 0x9ba4430 '__pos' 'fpos<_StateT>')
    (DeclRefExpr 0x9ba44d8 <col:11> 'streamoff':'long long' lvalue ParmVar 0x9ba3cd0 '__off' 'streamoff':'long long'))
  (ReturnStmt 0x9ba4528 <line:197:2, col:9>
    (DeclRefExpr 0x9ba4510 <col:9> 'fpos<_StateT>' lvalue Var 0x9ba4430 '__pos' 'fpos<_StateT>')))


        streamoff operator-(const fpos<_StateT> &__other) const (CompoundStmt 0x9ba4648 </usr/include/c++/4.6/bits/postypes.h:207:7, col:41>
  (ReturnStmt 0x9ba4638 <col:9, col:33>
    (CXXOperatorCallExpr 0x9ba4610 <col:16, col:33> '<dependent type>'
      (UnresolvedLookupExpr 0x9ba45d8 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
      (MemberExpr 0x9ba4568 <col:16> 'const streamoff':'const long long' lvalue ->_M_off 0x9ba34f0
        (CXXThisExpr 0x9ba4558 <col:16> 'const fpos<_StateT> *' this))
      (CXXDependentScopeMemberExpr 0x9ba45a0 <col:25, col:33> '<dependent type>' lvalue
        (DeclRefExpr 0x9ba4588 <col:25> 'const fpos<_StateT>' lvalue ParmVar 0x9ba3dc0 '__other' 'const fpos<_StateT> &')))))


    };
    template <typename _StateT> inline bool operator==(const fpos<_StateT> &__lhs, const fpos<_StateT> &__rhs) (CompoundStmt 0x9ba7a08 </usr/include/c++/4.6/bits/postypes.h:218:5, col:52>
  (ReturnStmt 0x9ba79f8 <col:7, col:49>
    (BinaryOperator 0x9ba79e0 <col:14, col:49> '_Bool' '=='
      (CXXUnresolvedConstructExpr 0x9ba7980 <col:14, col:29> 'streamoff':'long long'
        (DeclRefExpr 0x9ba7968 <col:24> 'const fpos<_StateT>' lvalue ParmVar 0x9ba47a0 '__lhs' 'const fpos<_StateT> &'))
      (CXXUnresolvedConstructExpr 0x9ba79c0 <col:34, col:49> 'streamoff':'long long'
        (DeclRefExpr 0x9ba79a8 <col:44> 'const fpos<_StateT>' lvalue ParmVar 0x9ba48a0 '__rhs' 'const fpos<_StateT> &')))))

;
    template <typename _StateT> inline bool operator!=(const fpos<_StateT> &__lhs, const fpos<_StateT> &__rhs) (CompoundStmt 0x9ba7df8 </usr/include/c++/4.6/bits/postypes.h:223:5, col:52>
  (ReturnStmt 0x9ba7de8 <col:7, col:49>
    (BinaryOperator 0x9ba7dd0 <col:14, col:49> '_Bool' '!='
      (CXXUnresolvedConstructExpr 0x9ba7d70 <col:14, col:29> 'streamoff':'long long'
        (DeclRefExpr 0x9ba7d58 <col:24> 'const fpos<_StateT>' lvalue ParmVar 0x9ba7b40 '__lhs' 'const fpos<_StateT> &'))
      (CXXUnresolvedConstructExpr 0x9ba7db0 <col:34, col:49> 'streamoff':'long long'
        (DeclRefExpr 0x9ba7d98 <col:44> 'const fpos<_StateT>' lvalue ParmVar 0x9ba7c40 '__rhs' 'const fpos<_StateT> &')))))

;
    typedef fpos<mbstate_t> streampos;
    typedef fpos<mbstate_t> wstreampos;
}
namespace __gnu_cxx {
    template <typename _CharT> struct _Char_types {
        struct _Char_types;
        typedef unsigned long int_type;
        typedef std::streampos pos_type;
        typedef std::streamoff off_type;
        typedef std::mbstate_t state_type;
    };
    template <typename _CharT> struct char_traits {
        struct char_traits;
        typedef _CharT char_type;
        typedef typename _Char_types<_CharT>::int_type int_type;
        typedef typename _Char_types<_CharT>::pos_type pos_type;
        typedef typename _Char_types<_CharT>::off_type off_type;
        typedef typename _Char_types<_CharT>::state_type state_type;
        static void assign(char_type &__c1, const char_type &__c2) (CompoundStmt 0x9baa4b8 </usr/include/c++/4.6/bits/char_traits.h:94:7, col:22>
  (BinaryOperator 0x9baa4a0 <col:9, col:16> '<dependent type>' '='
    (DeclRefExpr 0x9baa470 <col:9> 'char_type':'_CharT' lvalue ParmVar 0x9ba8ce0 '__c1' 'char_type &')
    (DeclRefExpr 0x9baa488 <col:16> 'const char_type':'const _CharT' lvalue ParmVar 0x9ba8d50 '__c2' 'const char_type &')))


        static bool eq(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x9baa570 </usr/include/c++/4.6/bits/char_traits.h:98:7, col:30>
  (ReturnStmt 0x9baa560 <col:9, col:24>
    (CXXOperatorCallExpr 0x9baa538 <col:16, col:24> '<dependent type>'
      (UnresolvedLookupExpr 0x9baa500 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b68980 0x9b69cd0)
      (DeclRefExpr 0x9baa4cc <col:16> 'const char_type':'const _CharT' lvalue ParmVar 0x9ba8e70 '__c1' 'const char_type &')
      (DeclRefExpr 0x9baa4e4 <col:24> 'const char_type':'const _CharT' lvalue ParmVar 0x9ba8ec0 '__c2' 'const char_type &'))))


        static bool lt(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x9baa628 </usr/include/c++/4.6/bits/char_traits.h:102:7, col:29>
  (ReturnStmt 0x9baa618 <col:9, col:23>
    (CXXOperatorCallExpr 0x9baa5f0 <col:16, col:23> '<dependent type>'
      (UnresolvedLookupExpr 0x9baa5b8 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b6af00 0x9b6b4d0)
      (DeclRefExpr 0x9baa584 <col:16> 'const char_type':'const _CharT' lvalue ParmVar 0x9ba8fe0 '__c1' 'const char_type &')
      (DeclRefExpr 0x9baa59c <col:23> 'const char_type':'const _CharT' lvalue ParmVar 0x9ba9030 '__c2' 'const char_type &'))))


        static int compare(const char_type *__s1, const char_type *__s2, std::size_t __n);
        static std::size_t length(const char_type *__s);
        static const char_type *find(const char_type *__s, std::size_t __n, const char_type &__a);
        static char_type *move(char_type *__s1, const char_type *__s2, std::size_t __n);
        static char_type *copy(char_type *__s1, const char_type *__s2, std::size_t __n);
        static char_type *assign(char_type *__s, std::size_t __n, char_type __a);
        static char_type to_char_type(const int_type &__c) (CompoundStmt 0x9baa688 </usr/include/c++/4.6/bits/char_traits.h:124:7, col:45>
  (ReturnStmt 0x9baa678 <col:9, col:42>
    (CXXStaticCastExpr 0x9baa660 <col:16, col:42> 'char_type':'_CharT' static_cast<char_type> <Dependent>
      (DeclRefExpr 0x9baa63c <col:39> 'const int_type':'const typename _Char_types<_CharT>::int_type' lvalue ParmVar 0x9ba9ef0 '__c' 'const int_type &'))))


        static int_type to_int_type(const char_type &__c) (CompoundStmt 0x9baa6e8 </usr/include/c++/4.6/bits/char_traits.h:128:7, col:44>
  (ReturnStmt 0x9baa6d8 <col:9, col:41>
    (CXXStaticCastExpr 0x9baa6c0 <col:16, col:41> 'int_type':'typename _Char_types<_CharT>::int_type' static_cast<int_type> <Dependent>
      (DeclRefExpr 0x9baa69c <col:38> 'const char_type':'const _CharT' lvalue ParmVar 0x9baa010 '__c' 'const char_type &'))))


        static bool eq_int_type(const int_type &__c1, const int_type &__c2) (CompoundStmt 0x9baa7a0 </usr/include/c++/4.6/bits/char_traits.h:132:7, col:30>
  (ReturnStmt 0x9baa790 <col:9, col:24>
    (CXXOperatorCallExpr 0x9baa768 <col:16, col:24> '<dependent type>'
      (UnresolvedLookupExpr 0x9baa730 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b68980 0x9b69cd0)
      (DeclRefExpr 0x9baa6fc <col:16> 'const int_type':'const typename _Char_types<_CharT>::int_type' lvalue ParmVar 0x9baa130 '__c1' 'const int_type &')
      (DeclRefExpr 0x9baa714 <col:24> 'const int_type':'const typename _Char_types<_CharT>::int_type' lvalue ParmVar 0x9baa180 '__c2' 'const int_type &'))))


        static int_type eof() (CompoundStmt 0x9baa818 </usr/include/c++/4.6/bits/char_traits.h:136:7, col:59>
  (ReturnStmt 0x9baa808 <col:9, col:56>
    (CXXStaticCastExpr 0x9baa7f0 <col:16, col:56> 'int_type':'typename _Char_types<_CharT>::int_type' static_cast<int_type> <Dependent>
      (UnaryOperator 0x9baa7d0 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:1149:28, col:29> 'int' prefix '-'
        (IntegerLiteral 0x9baa7b8 <col:29> 'int' 1)))))


        static int_type not_eof(const int_type &__c) (CompoundStmt 0x9baa978 </usr/include/c++/4.6/bits/char_traits.h:140:7, col:75>
  (ReturnStmt 0x9baa968 <col:9, col:72>
    (ConditionalOperator 0x9baa948 <col:16, col:72> '<dependent type>'
      (UnaryOperator 0x9baa8c0 <col:16, col:39> '<dependent type>' prefix '!'
        (CallExpr 0x9baa898 <col:17, col:39> '<dependent type>'
          (DeclRefExpr 0x9baa82c <col:17> '_Bool (const int_type &, const int_type &)' lvalue CXXMethod 0x9baa220 'eq_int_type' '_Bool (const int_type &, const int_type &)')
          (DeclRefExpr 0x9baa844 <col:29> 'const int_type':'const typename _Char_types<_CharT>::int_type' lvalue ParmVar 0x9baa350 '__c' 'const int_type &')
          (CallExpr 0x9baa878 <col:34, col:38> '<dependent type>'
            (DeclRefExpr 0x9baa85c <col:34> 'int_type (void)' lvalue CXXMethod 0x9baa2e0 'eof' 'int_type (void)'))))
      (DeclRefExpr 0x9baa8d4 <col:43> 'const int_type':'const typename _Char_types<_CharT>::int_type' lvalue ParmVar 0x9baa350 '__c' 'const int_type &')
      (CallExpr 0x9baa928 <col:49, col:72> '<dependent type>'
        (DeclRefExpr 0x9baa8ec <col:49> 'int_type (const char_type &)' lvalue CXXMethod 0x9baa0b0 'to_int_type' 'int_type (const char_type &)')
        (CXXUnresolvedConstructExpr 0x9baa910 <col:61, col:71> 'char_type':'_CharT')))))


    };
    static int compare(const char_type *__s1, const char_type *__s2, std::size_t __n) (CompoundStmt 0x9bab0c0 </usr/include/c++/4.6/bits/char_traits.h:147:5, line:154:5>
  (ForStmt 0x9bab070 <line:148:7, line:152:11>
    (DeclStmt 0x9baad80 <line:148:12, col:31>
      0x9baad20 "std::size_t __i =
        (ImplicitCastExpr 0x9baad70 <col:30> 'std::size_t':'unsigned int' <IntegralCast>
          (IntegerLiteral 0x9baad58 <col:30> 'int' 0))")
    <<<NULL>>>
    (BinaryOperator 0x9baade0 <col:33, col:39> '_Bool' '<'
      (ImplicitCastExpr 0x9baadc0 <col:33> 'std::size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9baad90 <col:33> 'std::size_t':'unsigned int' lvalue Var 0x9baad20 '__i' 'std::size_t':'unsigned int'))
      (ImplicitCastExpr 0x9baadd0 <col:39> 'std::size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9baada8 <col:39> 'std::size_t':'unsigned int' lvalue ParmVar 0x9baabf0 '__n' 'std::size_t':'unsigned int')))
    (UnaryOperator 0x9baae10 <col:44, col:46> 'std::size_t':'unsigned int' lvalue prefix '++'
      (DeclRefExpr 0x9baadf8 <col:46> 'std::size_t':'unsigned int' lvalue Var 0x9baad20 '__i' 'std::size_t':'unsigned int'))
    (IfStmt 0x9bab050 <line:149:2, line:152:11>
      <<<NULL>>>
      (CallExpr 0x9baaed0 <line:149:6, col:29> '<dependent type>'
        (DeclRefExpr 0x9baae24 <col:6> '_Bool (const char_type &, const char_type &)' lvalue CXXMethod 0x9ba9090 'lt' '_Bool (const char_type &, const char_type &)')
        (ArraySubscriptExpr 0x9baae70 <col:9, col:17> '<dependent type>' lvalue
          (DeclRefExpr 0x9baae3c <col:9> 'const char_type *' lvalue ParmVar 0x9baab40 '__s1' 'const char_type *')
          (DeclRefExpr 0x9baae54 <col:14> 'std::size_t':'unsigned int' lvalue Var 0x9baad20 '__i' 'std::size_t':'unsigned int'))
        (ArraySubscriptExpr 0x9baaeb8 <col:20, col:28> '<dependent type>' lvalue
          (DeclRefExpr 0x9baae84 <col:20> 'const char_type *' lvalue ParmVar 0x9baab90 '__s2' 'const char_type *')
          (DeclRefExpr 0x9baae9c <col:25> 'std::size_t':'unsigned int' lvalue Var 0x9baad20 '__i' 'std::size_t':'unsigned int')))
      (ReturnStmt 0x9baaf28 <line:150:4, col:12>
        (UnaryOperator 0x9baaf10 <col:11, col:12> 'int' prefix '-'
          (IntegerLiteral 0x9baaef8 <col:12> 'int' 1)))
      (IfStmt 0x9bab030 <line:151:7, line:152:11>
        <<<NULL>>>
        (CallExpr 0x9baafe0 <line:151:11, col:34> '<dependent type>'
          (DeclRefExpr 0x9baaf38 <col:11> '_Bool (const char_type &, const char_type &)' lvalue CXXMethod 0x9ba9090 'lt' '_Bool (const char_type &, const char_type &)')
          (ArraySubscriptExpr 0x9baaf80 <col:14, col:22> '<dependent type>' lvalue
            (DeclRefExpr 0x9baaf50 <col:14> 'const char_type *' lvalue ParmVar 0x9baab90 '__s2' 'const char_type *')
            (DeclRefExpr 0x9baaf68 <col:19> 'std::size_t':'unsigned int' lvalue Var 0x9baad20 '__i' 'std::size_t':'unsigned int'))
          (ArraySubscriptExpr 0x9baafc8 <col:25, col:33> '<dependent type>' lvalue
            (DeclRefExpr 0x9baaf94 <col:25> 'const char_type *' lvalue ParmVar 0x9baab40 '__s1' 'const char_type *')
            (DeclRefExpr 0x9baafac <col:30> 'std::size_t':'unsigned int' lvalue Var 0x9baad20 '__i' 'std::size_t':'unsigned int')))
        (ReturnStmt 0x9bab020 <line:152:4, col:11>
          (IntegerLiteral 0x9bab008 <col:11> 'int' 1))
        <<<NULL>>>)))
  (ReturnStmt 0x9bab0b0 <line:153:7, col:14>
    (IntegerLiteral 0x9bab098 <col:14> 'int' 0)))


    static std::size_t length(const char_type *__p) (CompoundStmt 0x9bab580 </usr/include/c++/4.6/bits/char_traits.h:160:5, line:165:5>
  (DeclStmt 0x9bab430 <line:161:7, col:26>
    0x9bab3d0 "std::size_t __i =
      (ImplicitCastExpr 0x9bab420 <col:25> 'std::size_t':'unsigned int' <IntegralCast>
        (IntegerLiteral 0x9bab408 <col:25> 'int' 0))")
  (WhileStmt 0x9bab530 <line:162:7, line:163:11>
    <<<NULL>>>
    (UnaryOperator 0x9bab4e8 <line:162:14, col:39> '<dependent type>' prefix '!'
      (CallExpr 0x9bab4c0 <col:15, col:39> '<dependent type>'
        (DeclRefExpr 0x9bab440 <col:15> '_Bool (const char_type &, const char_type &)' lvalue CXXMethod 0x9ba8f60 'eq' '_Bool (const char_type &, const char_type &)')
        (ArraySubscriptExpr 0x9bab488 <col:18, col:25> '<dependent type>' lvalue
          (DeclRefExpr 0x9bab458 <col:18> 'const char_type *' lvalue ParmVar 0x9bab2b0 '__p' 'const char_type *')
          (DeclRefExpr 0x9bab470 <col:22> 'std::size_t':'unsigned int' lvalue Var 0x9bab3d0 '__i' 'std::size_t':'unsigned int'))
        (CXXUnresolvedConstructExpr 0x9bab4a8 <col:28, col:38> 'char_type':'_CharT')))
    (UnaryOperator 0x9bab518 <line:163:9, col:11> 'std::size_t':'unsigned int' lvalue prefix '++'
      (DeclRefExpr 0x9bab4fc <col:11> 'std::size_t':'unsigned int' lvalue Var 0x9bab3d0 '__i' 'std::size_t':'unsigned int')))
  (ReturnStmt 0x9bab570 <line:164:7, col:14>
    (ImplicitCastExpr 0x9bab560 <col:14> 'std::size_t':'unsigned int' <LValueToRValue>
      (DeclRefExpr 0x9bab544 <col:14> 'std::size_t':'unsigned int' lvalue Var 0x9bab3d0 '__i' 'std::size_t':'unsigned int'))))


    static const typename char_traits<_CharT>::char_type *find(const char_type *__s, std::size_t __n, const char_type &__a) (CompoundStmt 0x9bad178 </usr/include/c++/4.6/bits/char_traits.h:171:5, line:176:5>
  (ForStmt 0x9bad128 <line:172:7, line:174:24>
    (DeclStmt 0x9bacf20 <line:172:12, col:31>
      0x9babb60 "std::size_t __i =
        (ImplicitCastExpr 0x9babbb0 <col:30> 'std::size_t':'unsigned int' <IntegralCast>
          (IntegerLiteral 0x9babb98 <col:30> 'int' 0))")
    <<<NULL>>>
    (BinaryOperator 0x9bacf80 <col:33, col:39> '_Bool' '<'
      (ImplicitCastExpr 0x9bacf60 <col:33> 'std::size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9bacf30 <col:33> 'std::size_t':'unsigned int' lvalue Var 0x9babb60 '__i' 'std::size_t':'unsigned int'))
      (ImplicitCastExpr 0x9bacf70 <col:39> 'std::size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9bacf48 <col:39> 'std::size_t':'unsigned int' lvalue ParmVar 0x9bab8b0 '__n' 'std::size_t':'unsigned int')))
    (UnaryOperator 0x9bacfb0 <col:44, col:46> 'std::size_t':'unsigned int' lvalue prefix '++'
      (DeclRefExpr 0x9bacf98 <col:46> 'std::size_t':'unsigned int' lvalue Var 0x9babb60 '__i' 'std::size_t':'unsigned int'))
    (IfStmt 0x9bad108 <line:173:9, line:174:24>
      <<<NULL>>>
      (CallExpr 0x9bad040 <line:173:13, col:29> '<dependent type>'
        (DeclRefExpr 0x9bacfc4 <col:13> '_Bool (const char_type &, const char_type &)' lvalue CXXMethod 0x9ba8f60 'eq' '_Bool (const char_type &, const char_type &)')
        (ArraySubscriptExpr 0x9bad010 <col:16, col:23> '<dependent type>' lvalue
          (DeclRefExpr 0x9bacfdc <col:16> 'const char_type *' lvalue ParmVar 0x9bab850 '__s' 'const char_type *')
          (DeclRefExpr 0x9bacff4 <col:20> 'std::size_t':'unsigned int' lvalue Var 0x9babb60 '__i' 'std::size_t':'unsigned int'))
        (DeclRefExpr 0x9bad024 <col:26> 'const char_type':'const _CharT' lvalue ParmVar 0x9bab900 '__a' 'const char_type &'))
      (ReturnStmt 0x9bad0f8 <line:174:11, col:24>
        (CXXOperatorCallExpr 0x9bad0d0 <col:18, col:24> '<dependent type>'
          (UnresolvedLookupExpr 0x9bad098 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b70970)
          (DeclRefExpr 0x9bad064 <col:18> 'const char_type *' lvalue ParmVar 0x9bab850 '__s' 'const char_type *')
          (DeclRefExpr 0x9bad07c <col:24> 'std::size_t':'unsigned int' lvalue Var 0x9babb60 '__i' 'std::size_t':'unsigned int')))
      <<<NULL>>>))
  (ReturnStmt 0x9bad168 <line:175:7, col:14>
    (IntegerLiteral 0x9bad150 <col:14> 'int' 0)))


    static typename char_traits<_CharT>::char_type *move(char_type *__s1, const char_type *__s2, std::size_t __n) (CompoundStmt 0x9bad810 </usr/include/c++/4.6/bits/char_traits.h:182:5, line:185:5>
  (ReturnStmt 0x9bad800 <line:183:7, line:184:35>
    (CXXStaticCastExpr 0x9bad7e8 <line:183:14, line:184:35> '_CharT *' static_cast<_CharT *> <Dependent>
      (CallExpr 0x9bad798 <line:183:35, line:184:34> '<dependent type>'
        (DeclRefExpr 0x9bad6ec <line:183:35> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9b7be40 '__builtin_memmove' 'void *(void *, const void *, unsigned int)')
        (DeclRefExpr 0x9bad704 <col:53> 'char_type *' lvalue ParmVar 0x9bad410 '__s1' 'char_type *')
        (DeclRefExpr 0x9bad71c <col:59> 'const char_type *' lvalue ParmVar 0x9bad460 '__s2' 'const char_type *')
        (BinaryOperator 0x9bad780 <line:184:11, col:33> 'unsigned int' '*'
          (ImplicitCastExpr 0x9bad770 <col:11> 'std::size_t':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0x9bad734 <col:11> 'std::size_t':'unsigned int' lvalue ParmVar 0x9bad4c0 '__n' 'std::size_t':'unsigned int'))
          (UnaryExprOrTypeTraitExpr 0x9bad758 <col:17, col:33> 'unsigned int' sizeof 'char_type':'_CharT'))))))


    static typename char_traits<_CharT>::char_type *copy(char_type *__s1, const char_type *__s2, std::size_t __n) (CompoundStmt 0x9badef8 </usr/include/c++/4.6/bits/char_traits.h:191:5, line:195:5>
  (CallExpr 0x9badea8 <line:193:7, col:39> '<dependent type>'
    (UnresolvedLookupExpr 0x9baddb0 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b7fe20)
    (DeclRefExpr 0x9badde4 <col:17> 'const char_type *' lvalue ParmVar 0x9badb00 '__s2' 'const char_type *')
    (CXXOperatorCallExpr 0x9bade68 <col:23, col:30> '<dependent type>'
      (UnresolvedLookupExpr 0x9bade30 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b70970)
      (DeclRefExpr 0x9baddfc <col:23> 'const char_type *' lvalue ParmVar 0x9badb00 '__s2' 'const char_type *')
      (DeclRefExpr 0x9bade14 <col:30> 'std::size_t':'unsigned int' lvalue ParmVar 0x9badb60 '__n' 'std::size_t':'unsigned int'))
    (DeclRefExpr 0x9bade8c <col:35> 'char_type *' lvalue ParmVar 0x9badab0 '__s1' 'char_type *'))
  (ReturnStmt 0x9badee8 <line:194:7, col:14>
    (DeclRefExpr 0x9baded0 <col:14> 'char_type *' lvalue ParmVar 0x9badab0 '__s1' 'char_type *')))


    static typename char_traits<_CharT>::char_type *assign(char_type *__s, std::size_t __n, char_type __a) (CompoundStmt 0x9bae550 </usr/include/c++/4.6/bits/char_traits.h:201:5, line:205:5>
  (CallExpr 0x9bae500 <line:203:7, col:32> '<dependent type>'
    (UnresolvedLookupExpr 0x9bae480 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b8aa20)
    (DeclRefExpr 0x9bae4b4 <col:19> 'char_type *' lvalue ParmVar 0x9bae190 '__s' 'char_type *')
    (DeclRefExpr 0x9bae4cc <col:24> 'std::size_t':'unsigned int' lvalue ParmVar 0x9bae1f0 '__n' 'std::size_t':'unsigned int')
    (DeclRefExpr 0x9bae4e4 <col:29> 'char_type':'_CharT' lvalue ParmVar 0x9bae230 '__a' 'char_type':'_CharT'))
  (ReturnStmt 0x9bae540 <line:204:7, col:14>
    (DeclRefExpr 0x9bae528 <col:14> 'char_type *' lvalue ParmVar 0x9bae190 '__s' 'char_type *')))


}
namespace std {
    template <class _CharT = wchar_t> struct char_traits {
        struct char_traits;
        typedef wchar_t char_type;
        typedef wint_t int_type;
        typedef streamoff off_type;
        typedef wstreampos pos_type;
        typedef mbstate_t state_type;
        static void assign(char_type &__c1, const char_type &__c2) (CompoundStmt 0x9bb5508 </usr/include/c++/4.6/bits/char_traits.h:315:7, col:22>
  (BinaryOperator 0x9bb54f0 <col:9, col:16> 'char_type':'wchar_t' lvalue '='
    (DeclRefExpr 0x9bb54b0 <col:9> 'char_type':'wchar_t' lvalue ParmVar 0x9bb4150 '__c1' 'char_type &')
    (ImplicitCastExpr 0x9bb54e0 <col:16> 'char_type':'wchar_t' <LValueToRValue>
      (DeclRefExpr 0x9bb54c8 <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0x9bb41e0 '__c2' 'const char_type &'))))


        static bool eq(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x9bb5598 </usr/include/c++/4.6/bits/char_traits.h:319:7, col:30>
  (ReturnStmt 0x9bb5588 <col:9, col:24>
    (BinaryOperator 0x9bb5570 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x9bb5550 <col:16> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9bb551c <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0x9bb4300 '__c1' 'const char_type &'))
      (ImplicitCastExpr 0x9bb5560 <col:24> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9bb5534 <col:24> 'const char_type':'const wchar_t' lvalue ParmVar 0x9bb4350 '__c2' 'const char_type &')))))


        static bool lt(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x9bb5628 </usr/include/c++/4.6/bits/char_traits.h:323:7, col:29>
  (ReturnStmt 0x9bb5618 <col:9, col:23>
    (BinaryOperator 0x9bb5600 <col:16, col:23> '_Bool' '<'
      (ImplicitCastExpr 0x9bb55e0 <col:16> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9bb55ac <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0x9bb4470 '__c1' 'const char_type &'))
      (ImplicitCastExpr 0x9bb55f0 <col:23> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9bb55c4 <col:23> 'const char_type':'const wchar_t' lvalue ParmVar 0x9bb44c0 '__c2' 'const char_type &')))))


        static int compare(const char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9bb5790 </usr/include/c++/4.6/bits/char_traits.h:327:7, col:42>
  (ReturnStmt 0x9bb5780 <col:9, col:39>
    (CallExpr 0x9bb5728 <col:16, col:39> 'int'
      (ImplicitCastExpr 0x9bb5718 <col:16> 'int (*)(const wchar_t *, const wchar_t *, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9bb56bc <col:16> 'int (const wchar_t *, const wchar_t *, size_t) throw()' lvalue Function 0x9a3b7d0 'wmemcmp' 'int (const wchar_t *, const wchar_t *, size_t) throw()' (UsingShadow 0x9ba0a20 'wmemcmp')))
      (ImplicitCastExpr 0x9bb5750 <col:24> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9bb5674 <col:24> 'const char_type *' lvalue ParmVar 0x9bb45c0 '__s1' 'const char_type *'))
      (ImplicitCastExpr 0x9bb5760 <col:30> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9bb568c <col:30> 'const char_type *' lvalue ParmVar 0x9bb4610 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0x9bb5770 <col:36> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9bb56a4 <col:36> 'size_t':'unsigned int' lvalue ParmVar 0x9bb4650 '__n' 'size_t':'unsigned int')))))


        static size_t length(const char_type *__s) (CompoundStmt 0x9bb5898 </usr/include/c++/4.6/bits/char_traits.h:331:7, col:29>
  (ReturnStmt 0x9bb5888 <col:9, col:26>
    (CallExpr 0x9bb5858 <col:16, col:26> 'size_t':'unsigned int'
      (ImplicitCastExpr 0x9bb5848 <col:16> 'size_t (*)(const wchar_t *) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9bb57f4 <col:16> 'size_t (const wchar_t *) throw()' lvalue Function 0x9a3b110 'wcslen' 'size_t (const wchar_t *) throw()' (UsingShadow 0x9ba0470 'wcslen')))
      (ImplicitCastExpr 0x9bb5878 <col:23> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9bb57dc <col:23> 'const char_type *' lvalue ParmVar 0x9bb4760 '__s' 'const char_type *')))))


        static const char_type *find(const char_type *__s, size_t __n, const char_type &__a) (CompoundStmt 0x9bb59d8 </usr/include/c++/4.6/bits/char_traits.h:335:7, col:40>
  (ReturnStmt 0x9bb59c8 <col:9, col:37>
    (ImplicitCastExpr 0x9bb59b8 <col:16, col:37> 'const char_type *' <NoOp>
      (CallExpr 0x9bb5960 <col:16, col:37> 'wchar_t *'
        (ImplicitCastExpr 0x9bb5950 <col:16> 'wchar_t *(*)(const wchar_t *, wchar_t, size_t) throw()' <FunctionToPointerDecay>
          (DeclRefExpr 0x9bb5930 <col:16> 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' lvalue Function 0x9a3b620 'wmemchr' 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' (UsingShadow 0x9ba0e80 'wmemchr')))
        (ImplicitCastExpr 0x9bb5988 <col:24> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9bb58e8 <col:24> 'const char_type *' lvalue ParmVar 0x9bb4860 '__s' 'const char_type *'))
        (ImplicitCastExpr 0x9bb5998 <col:29> 'char_type':'wchar_t' <LValueToRValue>
          (DeclRefExpr 0x9bb5900 <col:29> 'const char_type':'const wchar_t' lvalue ParmVar 0x9bb48f0 '__a' 'const char_type &'))
        (ImplicitCastExpr 0x9bb59a8 <col:34> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9bb5918 <col:34> 'size_t':'unsigned int' lvalue ParmVar 0x9bb48a0 '__n' 'size_t':'unsigned int'))))))


        static char_type *move(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9bb5b40 </usr/include/c++/4.6/bits/char_traits.h:339:7, col:43>
  (ReturnStmt 0x9bb5b30 <col:9, col:40>
    (CallExpr 0x9bb5ad8 <col:16, col:40> 'wchar_t *'
      (ImplicitCastExpr 0x9bb5ac8 <col:16> 'wchar_t *(*)(wchar_t *, const wchar_t *, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9bb5a6c <col:16> 'wchar_t *(wchar_t *, const wchar_t *, size_t) throw()' lvalue Function 0x9a3bb50 'wmemmove' 'wchar_t *(wchar_t *, const wchar_t *, size_t) throw()' (UsingShadow 0x9ba0b00 'wmemmove')))
      (ImplicitCastExpr 0x9bb5b00 <col:25> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9bb5a24 <col:25> 'char_type *' lvalue ParmVar 0x9bb4a50 '__s1' 'char_type *'))
      (ImplicitCastExpr 0x9bb5b10 <col:31> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9bb5a3c <col:31> 'const char_type *' lvalue ParmVar 0x9bb4aa0 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0x9bb5b20 <col:37> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9bb5a54 <col:37> 'size_t':'unsigned int' lvalue ParmVar 0x9bb4ae0 '__n' 'size_t':'unsigned int')))))


        static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9bb5c80 </usr/include/c++/4.6/bits/char_traits.h:343:7, col:42>
  (ReturnStmt 0x9bb5c70 <col:9, col:39>
    (CallExpr 0x9bb5c18 <col:16, col:39> 'wchar_t *'
      (ImplicitCastExpr 0x9bb5c08 <col:16> 'wchar_t *(*)(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9bb5bd4 <col:16> 'wchar_t *(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' lvalue Function 0x9a3b980 'wmemcpy' 'wchar_t *(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' (UsingShadow 0x9ba0a90 'wmemcpy')))
      (ImplicitCastExpr 0x9bb5c40 <col:24> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9bb5b8c <col:24> 'char_type *' lvalue ParmVar 0x9bb4bf0 '__s1' 'char_type *'))
      (ImplicitCastExpr 0x9bb5c50 <col:30> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9bb5ba4 <col:30> 'const char_type *' lvalue ParmVar 0x9bb4c40 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0x9bb5c60 <col:36> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9bb5bbc <col:36> 'size_t':'unsigned int' lvalue ParmVar 0x9bb4c80 '__n' 'size_t':'unsigned int')))))


        static char_type *assign(char_type *__s, size_t __n, char_type __a) (CompoundStmt 0x9bb6e00 </usr/include/c++/4.6/bits/char_traits.h:347:7, col:40>
  (ReturnStmt 0x9bb6df0 <col:9, col:37>
    (CallExpr 0x9bb6d98 <col:16, col:37> 'wchar_t *'
      (ImplicitCastExpr 0x9bb6d88 <col:16> 'wchar_t *(*)(wchar_t *, wchar_t, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9bb6d2c <col:16> 'wchar_t *(wchar_t *, wchar_t, size_t) throw()' lvalue Function 0x9a3bd10 'wmemset' 'wchar_t *(wchar_t *, wchar_t, size_t) throw()' (UsingShadow 0x9ba0b70 'wmemset')))
      (ImplicitCastExpr 0x9bb6dc0 <col:24> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9bb6ce4 <col:24> 'char_type *' lvalue ParmVar 0x9bb4d60 '__s' 'char_type *'))
      (ImplicitCastExpr 0x9bb6dd0 <col:29> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9bb6cfc <col:29> 'char_type':'wchar_t' lvalue ParmVar 0x9bb4de0 '__a' 'char_type':'wchar_t'))
      (ImplicitCastExpr 0x9bb6de0 <col:34> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9bb6d14 <col:34> 'size_t':'unsigned int' lvalue ParmVar 0x9bb4da0 '__n' 'size_t':'unsigned int')))))


        static char_type to_char_type(const int_type &__c) (CompoundStmt 0x9bb6e80 </usr/include/c++/4.6/bits/char_traits.h:351:7, col:32>
  (ReturnStmt 0x9bb6e70 <col:9, col:29>
    (CXXFunctionalCastExpr 0x9bb6e58 <col:16, col:29> 'char_type':'wchar_t' functional cast to char_type <NoOp>
      (ImplicitCastExpr 0x9bb6e48 <col:26> 'char_type':'wchar_t' <IntegralCast>
        (ImplicitCastExpr 0x9bb6e38 <col:26> 'int_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9bb6e20 <col:26> 'const int_type':'const unsigned int' lvalue ParmVar 0x9bb4f50 '__c' 'const int_type &'))))))


        static int_type to_int_type(const char_type &__c) (CompoundStmt 0x9bb6f00 </usr/include/c++/4.6/bits/char_traits.h:355:7, col:31>
  (ReturnStmt 0x9bb6ef0 <col:9, col:28>
    (CXXFunctionalCastExpr 0x9bb6ed8 <col:16, col:28> 'int_type':'unsigned int' functional cast to int_type <NoOp>
      (ImplicitCastExpr 0x9bb6ec8 <col:25> 'int_type':'unsigned int' <IntegralCast>
        (ImplicitCastExpr 0x9bb6eb8 <col:25> 'char_type':'wchar_t' <LValueToRValue>
          (DeclRefExpr 0x9bb6ea0 <col:25> 'const char_type':'const wchar_t' lvalue ParmVar 0x9bb5070 '__c' 'const char_type &'))))))


        static bool eq_int_type(const int_type &__c1, const int_type &__c2) (CompoundStmt 0x9bb6f90 </usr/include/c++/4.6/bits/char_traits.h:359:7, col:30>
  (ReturnStmt 0x9bb6f80 <col:9, col:24>
    (BinaryOperator 0x9bb6f68 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x9bb6f48 <col:16> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9bb6f14 <col:16> 'const int_type':'const unsigned int' lvalue ParmVar 0x9bb5190 '__c1' 'const int_type &'))
      (ImplicitCastExpr 0x9bb6f58 <col:24> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9bb6f2c <col:24> 'const int_type':'const unsigned int' lvalue ParmVar 0x9bb51e0 '__c2' 'const int_type &')))))


        static int_type eof() (CompoundStmt 0x9bb7008 </usr/include/c++/4.6/bits/char_traits.h:363:7, col:45>
  (ReturnStmt 0x9bb6ff8 <col:9, col:42>
    (CXXStaticCastExpr 0x9bb6fe0 <col:16, col:42> 'int_type':'unsigned int' static_cast<int_type> <NoOp>
      (ParenExpr 0x9bb6fc0 </usr/include/wchar.h:119:15, col:27> 'unsigned int'
        (IntegerLiteral 0x9bb6fa8 <col:16> 'unsigned int' 4294967295)))))


        static int_type not_eof(const int_type &__c) (CompoundStmt 0x9bb71e0 </usr/include/c++/4.6/bits/char_traits.h:367:7, col:51>
  (ReturnStmt 0x9bb71d0 <col:9, col:46>
    (ConditionalOperator 0x9bb71b0 <col:16, col:46> 'unsigned int'
      (CallExpr 0x9bb7128 <col:16, col:38> '_Bool'
        (ImplicitCastExpr 0x9bb7118 <col:16> '_Bool (*)(const int_type &, const int_type &)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9bb701c <col:16> '_Bool (const int_type &, const int_type &)' lvalue CXXMethod 0x9bb5280 'eq_int_type' '_Bool (const int_type &, const int_type &)'))
        (DeclRefExpr 0x9bb7034 <col:28> 'const int_type':'const unsigned int' lvalue ParmVar 0x9bb5390 '__c' 'const int_type &')
        (MaterializeTemporaryExpr 0x9bb7150 <col:33, col:37> 'const int_type':'const unsigned int' lvalue
          (CallExpr 0x9bb70b8 <col:33, col:37> 'int_type':'unsigned int'
            (ImplicitCastExpr 0x9bb70a8 <col:33> 'int_type (*)(void)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9bb704c <col:33> 'int_type (void)' lvalue CXXMethod 0x9bb5320 'eof' 'int_type (void)')))))
      (ImplicitCastExpr 0x9bb71a0 <col:42> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0x9bb7160 <col:42> 'int' 0))
      (ImplicitCastExpr 0x9bb7190 <col:46> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9bb7178 <col:46> 'const int_type':'const unsigned int' lvalue ParmVar 0x9bb5390 '__c' 'const int_type &')))))


    }
template <class _CharT = char> struct char_traits {
        struct char_traits;
        typedef char char_type;
        typedef int int_type;
        typedef streampos pos_type;
        typedef streamoff off_type;
        typedef mbstate_t state_type;
        static void assign(char_type &__c1, const char_type &__c2) (CompoundStmt 0x9bb0678 </usr/include/c++/4.6/bits/char_traits.h:244:7, col:22>
  (BinaryOperator 0x9bb0660 <col:9, col:16> 'char_type':'char' lvalue '='
    (DeclRefExpr 0x9bb0620 <col:9> 'char_type':'char' lvalue ParmVar 0x9baec40 '__c1' 'char_type &')
    (ImplicitCastExpr 0x9bb0650 <col:16> 'char_type':'char' <LValueToRValue>
      (DeclRefExpr 0x9bb0638 <col:16> 'const char_type':'const char' lvalue ParmVar 0x9baecd0 '__c2' 'const char_type &'))))


        static bool eq(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x9bb0728 </usr/include/c++/4.6/bits/char_traits.h:248:7, col:30>
  (ReturnStmt 0x9bb0718 <col:9, col:24>
    (BinaryOperator 0x9bb0700 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x9bb06d0 <col:16> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9bb06c0 <col:16> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9bb068c <col:16> 'const char_type':'const char' lvalue ParmVar 0x9baedf0 '__c1' 'const char_type &')))
      (ImplicitCastExpr 0x9bb06f0 <col:24> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9bb06e0 <col:24> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9bb06a4 <col:24> 'const char_type':'const char' lvalue ParmVar 0x9baee40 '__c2' 'const char_type &'))))))


        static bool lt(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x9bb07d8 </usr/include/c++/4.6/bits/char_traits.h:252:7, col:29>
  (ReturnStmt 0x9bb07c8 <col:9, col:23>
    (BinaryOperator 0x9bb07b0 <col:16, col:23> '_Bool' '<'
      (ImplicitCastExpr 0x9bb0780 <col:16> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9bb0770 <col:16> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9bb073c <col:16> 'const char_type':'const char' lvalue ParmVar 0x9baf5c0 '__c1' 'const char_type &')))
      (ImplicitCastExpr 0x9bb07a0 <col:23> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9bb0790 <col:23> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9bb0754 <col:23> 'const char_type':'const char' lvalue ParmVar 0x9baf610 '__c2' 'const char_type &'))))))


        static int compare(const char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9bb0900 </usr/include/c++/4.6/bits/char_traits.h:256:7, col:51>
  (ReturnStmt 0x9bb08f0 <col:9, col:48>
    (CallExpr 0x9bb0878 <col:16, col:48> 'int'
      (ImplicitCastExpr 0x9bb0868 <col:16> 'int (*)(const void *, const void *, unsigned int)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9bb07ec <col:16> 'int (const void *, const void *, unsigned int)' lvalue Function 0x9b8b850 '__builtin_memcmp' 'int (const void *, const void *, unsigned int)'))
      (ImplicitCastExpr 0x9bb08b0 <col:33> 'const void *' <BitCast>
        (ImplicitCastExpr 0x9bb08a0 <col:33> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9bb0804 <col:33> 'const char_type *' lvalue ParmVar 0x9baf710 '__s1' 'const char_type *')))
      (ImplicitCastExpr 0x9bb08d0 <col:39> 'const void *' <BitCast>
        (ImplicitCastExpr 0x9bb08c0 <col:39> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9bb081c <col:39> 'const char_type *' lvalue ParmVar 0x9baf760 '__s2' 'const char_type *')))
      (ImplicitCastExpr 0x9bb08e0 <col:45> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9bb0834 <col:45> 'size_t':'unsigned int' lvalue ParmVar 0x9baf7a0 '__n' 'size_t':'unsigned int')))))


        static size_t length(const char_type *__s) (CompoundStmt 0x9bb0a98 </usr/include/c++/4.6/bits/char_traits.h:260:7, col:39>
  (ReturnStmt 0x9bb0a88 <col:9, col:36>
    (CallExpr 0x9bb0a58 <col:16, col:36> 'unsigned int'
      (ImplicitCastExpr 0x9bb0a48 <col:16> 'unsigned int (*)(const char *)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9bb09f4 <col:16> 'unsigned int (const char *)' lvalue Function 0x9bb0920 '__builtin_strlen' 'unsigned int (const char *)'))
      (ImplicitCastExpr 0x9bb0a78 <col:33> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9bb0a0c <col:33> 'const char_type *' lvalue ParmVar 0x9baf8b0 '__s' 'const char_type *')))))


        static const char_type *find(const char_type *__s, size_t __n, const char_type &__a) (CompoundStmt 0x9bb0d58 </usr/include/c++/4.6/bits/char_traits.h:264:7, col:80>
  (ReturnStmt 0x9bb0d48 <col:9, col:77>
    (CXXStaticCastExpr 0x9bb0d30 <col:16, col:77> 'const char_type *' static_cast<const char_type *> <BitCast>
      (CallExpr 0x9bb0ca8 <col:46, col:76> 'void *'
        (ImplicitCastExpr 0x9bb0c98 <col:46> 'void *(*)(const void *, int, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9bb0c14 <col:46> 'void *(const void *, int, unsigned int)' lvalue Function 0x9bb0ab0 '__builtin_memchr' 'void *(const void *, int, unsigned int)'))
        (ImplicitCastExpr 0x9bb0ce0 <col:63> 'const void *' <BitCast>
          (ImplicitCastExpr 0x9bb0cd0 <col:63> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x9bb0c2c <col:63> 'const char_type *' lvalue ParmVar 0x9baf9b0 '__s' 'const char_type *')))
        (ImplicitCastExpr 0x9bb0d00 <col:68> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9bb0cf0 <col:68> 'char_type':'char' <LValueToRValue>
            (DeclRefExpr 0x9bb0c44 <col:68> 'const char_type':'const char' lvalue ParmVar 0x9bafa40 '__a' 'const char_type &')))
        (ImplicitCastExpr 0x9bb0d10 <col:73> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9bb0c5c <col:73> 'size_t':'unsigned int' lvalue ParmVar 0x9baf9f0 '__n' 'size_t':'unsigned int'))))))


        static char_type *move(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9bb0ea8 </usr/include/c++/4.6/bits/char_traits.h:268:7, col:77>
  (ReturnStmt 0x9bb0e98 <col:9, col:74>
    (CXXStaticCastExpr 0x9bb0e80 <col:16, col:74> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0x9bb0df8 <col:40, col:73> 'void *'
        (ImplicitCastExpr 0x9bb0de8 <col:40> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9bb0d6c <col:40> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9b7be40 '__builtin_memmove' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0x9bb0e30 <col:58> 'void *' <BitCast>
          (ImplicitCastExpr 0x9bb0e20 <col:58> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x9bb0d84 <col:58> 'char_type *' lvalue ParmVar 0x9bafba0 '__s1' 'char_type *')))
        (ImplicitCastExpr 0x9bb0e50 <col:64> 'const void *' <BitCast>
          (ImplicitCastExpr 0x9bb0e40 <col:64> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x9bb0d9c <col:64> 'const char_type *' lvalue ParmVar 0x9bafbf0 '__s2' 'const char_type *')))
        (ImplicitCastExpr 0x9bb0e60 <col:70> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9bb0db4 <col:70> 'size_t':'unsigned int' lvalue ParmVar 0x9bafc30 '__n' 'size_t':'unsigned int'))))))


        static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9bb1148 </usr/include/c++/4.6/bits/char_traits.h:272:7, col:76>
  (ReturnStmt 0x9bb1138 <col:9, col:73>
    (CXXStaticCastExpr 0x9bb1120 <col:16, col:73> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0x9bb1098 <col:40, col:72> 'void *'
        (ImplicitCastExpr 0x9bb1088 <col:40> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9bb1024 <col:40> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9bb0ec0 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0x9bb10d0 <col:57> 'void *' <BitCast>
          (ImplicitCastExpr 0x9bb10c0 <col:57> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x9bb103c <col:57> 'char_type *' lvalue ParmVar 0x9bafd40 '__s1' 'char_type *')))
        (ImplicitCastExpr 0x9bb10f0 <col:63> 'const void *' <BitCast>
          (ImplicitCastExpr 0x9bb10e0 <col:63> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x9bb1054 <col:63> 'const char_type *' lvalue ParmVar 0x9bafd90 '__s2' 'const char_type *')))
        (ImplicitCastExpr 0x9bb1100 <col:69> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9bb106c <col:69> 'size_t':'unsigned int' lvalue ParmVar 0x9bafdd0 '__n' 'size_t':'unsigned int'))))))


        static char_type *assign(char_type *__s, size_t __n, char_type __a) (CompoundStmt 0x9bb1298 </usr/include/c++/4.6/bits/char_traits.h:276:7, col:74>
  (ReturnStmt 0x9bb1288 <col:9, col:71>
    (CXXStaticCastExpr 0x9bb1270 <col:16, col:71> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0x9bb11e8 <col:40, col:70> 'void *'
        (ImplicitCastExpr 0x9bb11d8 <col:40> 'void *(*)(void *, int, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9bb115c <col:40> 'void *(void *, int, unsigned int)' lvalue Function 0x9b87bd0 '__builtin_memset' 'void *(void *, int, unsigned int)'))
        (ImplicitCastExpr 0x9bb1220 <col:57> 'void *' <BitCast>
          (ImplicitCastExpr 0x9bb1210 <col:57> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x9bb1174 <col:57> 'char_type *' lvalue ParmVar 0x9bafeb0 '__s' 'char_type *')))
        (ImplicitCastExpr 0x9bb1240 <col:62> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9bb1230 <col:62> 'char_type':'char' <LValueToRValue>
            (DeclRefExpr 0x9bb118c <col:62> 'char_type':'char' lvalue ParmVar 0x9baff30 '__a' 'char_type':'char')))
        (ImplicitCastExpr 0x9bb1250 <col:67> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9bb11a4 <col:67> 'size_t':'unsigned int' lvalue ParmVar 0x9bafef0 '__n' 'size_t':'unsigned int'))))))


        static char_type to_char_type(const int_type &__c) (CompoundStmt 0x9bb1318 </usr/include/c++/4.6/bits/char_traits.h:280:7, col:45>
  (ReturnStmt 0x9bb1308 <col:9, col:42>
    (CXXStaticCastExpr 0x9bb12f0 <col:16, col:42> 'char_type':'char' static_cast<char_type> <NoOp>
      (ImplicitCastExpr 0x9bb12e0 <col:39> 'char_type':'char' <IntegralCast>
        (ImplicitCastExpr 0x9bb12d0 <col:39> 'int_type':'int' <LValueToRValue>
          (DeclRefExpr 0x9bb12ac <col:39> 'const int_type':'const int' lvalue ParmVar 0x9bb00c0 '__c' 'const int_type &'))))))


        static int_type to_int_type(const char_type &__c) (CompoundStmt 0x9bb13d0 </usr/include/c++/4.6/bits/char_traits.h:286:7, col:72>
  (ReturnStmt 0x9bb13c0 <col:9, col:69>
    (CXXStaticCastExpr 0x9bb13a8 <col:16, col:69> 'int_type':'int' static_cast<int_type> <NoOp>
      (ImplicitCastExpr 0x9bb1398 <col:38, col:68> 'int_type':'int' <IntegralCast>
        (CXXStaticCastExpr 0x9bb1378 <col:38, col:68> 'unsigned char' static_cast<unsigned char> <NoOp>
          (ImplicitCastExpr 0x9bb1368 <col:65> 'unsigned char' <IntegralCast>
            (ImplicitCastExpr 0x9bb1358 <col:65> 'char_type':'char' <LValueToRValue>
              (DeclRefExpr 0x9bb132c <col:65> 'const char_type':'const char' lvalue ParmVar 0x9bb01e0 '__c' 'const char_type &'))))))))


        static bool eq_int_type(const int_type &__c1, const int_type &__c2) (CompoundStmt 0x9bb1460 </usr/include/c++/4.6/bits/char_traits.h:290:7, col:30>
  (ReturnStmt 0x9bb1450 <col:9, col:24>
    (BinaryOperator 0x9bb1438 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x9bb1418 <col:16> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0x9bb13e4 <col:16> 'const int_type':'const int' lvalue ParmVar 0x9bb0300 '__c1' 'const int_type &'))
      (ImplicitCastExpr 0x9bb1428 <col:24> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0x9bb13fc <col:24> 'const int_type':'const int' lvalue ParmVar 0x9bb0350 '__c2' 'const int_type &')))))


        static int_type eof() (CompoundStmt 0x9bb14d8 </usr/include/c++/4.6/bits/char_traits.h:294:7, col:59>
  (ReturnStmt 0x9bb14c8 <col:9, col:56>
    (CXXStaticCastExpr 0x9bb14b0 <col:16, col:56> 'int_type':'int' static_cast<int_type> <NoOp>
      (UnaryOperator 0x9bb1490 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:1149:28, col:29> 'int' prefix '-'
        (IntegerLiteral 0x9bb1478 <col:29> 'int' 1)))))


        static int_type not_eof(const int_type &__c) (CompoundStmt 0x9bb3d98 </usr/include/c++/4.6/bits/char_traits.h:298:7, col:42>
  (ReturnStmt 0x9bb3d88 <col:9, col:37>
    (ConditionalOperator 0x9bb3d68 <col:16, col:37> 'int'
      (ParenExpr 0x9bb3d10 <col:16, col:29> '_Bool'
        (BinaryOperator 0x9bb3cf8 <col:17, col:28> '_Bool' '=='
          (ImplicitCastExpr 0x9bb3ce8 <col:17> 'int_type':'int' <LValueToRValue>
            (DeclRefExpr 0x9bb14ec <col:17> 'const int_type':'const int' lvalue ParmVar 0x9bb0500 '__c' 'const int_type &'))
          (CallExpr 0x9bb3cc8 <col:24, col:28> 'int_type':'int'
            (ImplicitCastExpr 0x9bb3cb8 <col:24> 'int_type (*)(void)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9bb1504 <col:24> 'int_type (void)' lvalue CXXMethod 0x9bb0490 'eof' 'int_type (void)')))))
      (IntegerLiteral 0x9bb3d28 <col:33> 'int' 0)
      (ImplicitCastExpr 0x9bb3d58 <col:37> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0x9bb3d40 <col:37> 'const int_type':'const int' lvalue ParmVar 0x9bb0500 '__c' 'const int_type &')))))


    }
template <class _CharT> struct char_traits : public __gnu_cxx::char_traits<_CharT> {
        struct char_traits;
    };
    struct char_traits {
        struct char_traits;
        typedef char char_type;
        typedef int int_type;
        typedef streampos pos_type;
        typedef streamoff off_type;
        typedef mbstate_t state_type;
        static void assign(char_type &__c1, const char_type &__c2) (CompoundStmt 0x9bb0678 </usr/include/c++/4.6/bits/char_traits.h:244:7, col:22>
  (BinaryOperator 0x9bb0660 <col:9, col:16> 'char_type':'char' lvalue '='
    (DeclRefExpr 0x9bb0620 <col:9> 'char_type':'char' lvalue ParmVar 0x9baec40 '__c1' 'char_type &')
    (ImplicitCastExpr 0x9bb0650 <col:16> 'char_type':'char' <LValueToRValue>
      (DeclRefExpr 0x9bb0638 <col:16> 'const char_type':'const char' lvalue ParmVar 0x9baecd0 '__c2' 'const char_type &'))))


        static bool eq(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x9bb0728 </usr/include/c++/4.6/bits/char_traits.h:248:7, col:30>
  (ReturnStmt 0x9bb0718 <col:9, col:24>
    (BinaryOperator 0x9bb0700 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x9bb06d0 <col:16> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9bb06c0 <col:16> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9bb068c <col:16> 'const char_type':'const char' lvalue ParmVar 0x9baedf0 '__c1' 'const char_type &')))
      (ImplicitCastExpr 0x9bb06f0 <col:24> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9bb06e0 <col:24> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9bb06a4 <col:24> 'const char_type':'const char' lvalue ParmVar 0x9baee40 '__c2' 'const char_type &'))))))


        static bool lt(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x9bb07d8 </usr/include/c++/4.6/bits/char_traits.h:252:7, col:29>
  (ReturnStmt 0x9bb07c8 <col:9, col:23>
    (BinaryOperator 0x9bb07b0 <col:16, col:23> '_Bool' '<'
      (ImplicitCastExpr 0x9bb0780 <col:16> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9bb0770 <col:16> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9bb073c <col:16> 'const char_type':'const char' lvalue ParmVar 0x9baf5c0 '__c1' 'const char_type &')))
      (ImplicitCastExpr 0x9bb07a0 <col:23> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9bb0790 <col:23> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9bb0754 <col:23> 'const char_type':'const char' lvalue ParmVar 0x9baf610 '__c2' 'const char_type &'))))))


        static int compare(const char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9bb0900 </usr/include/c++/4.6/bits/char_traits.h:256:7, col:51>
  (ReturnStmt 0x9bb08f0 <col:9, col:48>
    (CallExpr 0x9bb0878 <col:16, col:48> 'int'
      (ImplicitCastExpr 0x9bb0868 <col:16> 'int (*)(const void *, const void *, unsigned int)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9bb07ec <col:16> 'int (const void *, const void *, unsigned int)' lvalue Function 0x9b8b850 '__builtin_memcmp' 'int (const void *, const void *, unsigned int)'))
      (ImplicitCastExpr 0x9bb08b0 <col:33> 'const void *' <BitCast>
        (ImplicitCastExpr 0x9bb08a0 <col:33> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9bb0804 <col:33> 'const char_type *' lvalue ParmVar 0x9baf710 '__s1' 'const char_type *')))
      (ImplicitCastExpr 0x9bb08d0 <col:39> 'const void *' <BitCast>
        (ImplicitCastExpr 0x9bb08c0 <col:39> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9bb081c <col:39> 'const char_type *' lvalue ParmVar 0x9baf760 '__s2' 'const char_type *')))
      (ImplicitCastExpr 0x9bb08e0 <col:45> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9bb0834 <col:45> 'size_t':'unsigned int' lvalue ParmVar 0x9baf7a0 '__n' 'size_t':'unsigned int')))))


        static size_t length(const char_type *__s) (CompoundStmt 0x9bb0a98 </usr/include/c++/4.6/bits/char_traits.h:260:7, col:39>
  (ReturnStmt 0x9bb0a88 <col:9, col:36>
    (CallExpr 0x9bb0a58 <col:16, col:36> 'unsigned int'
      (ImplicitCastExpr 0x9bb0a48 <col:16> 'unsigned int (*)(const char *)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9bb09f4 <col:16> 'unsigned int (const char *)' lvalue Function 0x9bb0920 '__builtin_strlen' 'unsigned int (const char *)'))
      (ImplicitCastExpr 0x9bb0a78 <col:33> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9bb0a0c <col:33> 'const char_type *' lvalue ParmVar 0x9baf8b0 '__s' 'const char_type *')))))


        static const char_type *find(const char_type *__s, size_t __n, const char_type &__a) (CompoundStmt 0x9bb0d58 </usr/include/c++/4.6/bits/char_traits.h:264:7, col:80>
  (ReturnStmt 0x9bb0d48 <col:9, col:77>
    (CXXStaticCastExpr 0x9bb0d30 <col:16, col:77> 'const char_type *' static_cast<const char_type *> <BitCast>
      (CallExpr 0x9bb0ca8 <col:46, col:76> 'void *'
        (ImplicitCastExpr 0x9bb0c98 <col:46> 'void *(*)(const void *, int, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9bb0c14 <col:46> 'void *(const void *, int, unsigned int)' lvalue Function 0x9bb0ab0 '__builtin_memchr' 'void *(const void *, int, unsigned int)'))
        (ImplicitCastExpr 0x9bb0ce0 <col:63> 'const void *' <BitCast>
          (ImplicitCastExpr 0x9bb0cd0 <col:63> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x9bb0c2c <col:63> 'const char_type *' lvalue ParmVar 0x9baf9b0 '__s' 'const char_type *')))
        (ImplicitCastExpr 0x9bb0d00 <col:68> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9bb0cf0 <col:68> 'char_type':'char' <LValueToRValue>
            (DeclRefExpr 0x9bb0c44 <col:68> 'const char_type':'const char' lvalue ParmVar 0x9bafa40 '__a' 'const char_type &')))
        (ImplicitCastExpr 0x9bb0d10 <col:73> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9bb0c5c <col:73> 'size_t':'unsigned int' lvalue ParmVar 0x9baf9f0 '__n' 'size_t':'unsigned int'))))))


        static char_type *move(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9bb0ea8 </usr/include/c++/4.6/bits/char_traits.h:268:7, col:77>
  (ReturnStmt 0x9bb0e98 <col:9, col:74>
    (CXXStaticCastExpr 0x9bb0e80 <col:16, col:74> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0x9bb0df8 <col:40, col:73> 'void *'
        (ImplicitCastExpr 0x9bb0de8 <col:40> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9bb0d6c <col:40> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9b7be40 '__builtin_memmove' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0x9bb0e30 <col:58> 'void *' <BitCast>
          (ImplicitCastExpr 0x9bb0e20 <col:58> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x9bb0d84 <col:58> 'char_type *' lvalue ParmVar 0x9bafba0 '__s1' 'char_type *')))
        (ImplicitCastExpr 0x9bb0e50 <col:64> 'const void *' <BitCast>
          (ImplicitCastExpr 0x9bb0e40 <col:64> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x9bb0d9c <col:64> 'const char_type *' lvalue ParmVar 0x9bafbf0 '__s2' 'const char_type *')))
        (ImplicitCastExpr 0x9bb0e60 <col:70> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9bb0db4 <col:70> 'size_t':'unsigned int' lvalue ParmVar 0x9bafc30 '__n' 'size_t':'unsigned int'))))))


        static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9bb1148 </usr/include/c++/4.6/bits/char_traits.h:272:7, col:76>
  (ReturnStmt 0x9bb1138 <col:9, col:73>
    (CXXStaticCastExpr 0x9bb1120 <col:16, col:73> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0x9bb1098 <col:40, col:72> 'void *'
        (ImplicitCastExpr 0x9bb1088 <col:40> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9bb1024 <col:40> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9bb0ec0 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0x9bb10d0 <col:57> 'void *' <BitCast>
          (ImplicitCastExpr 0x9bb10c0 <col:57> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x9bb103c <col:57> 'char_type *' lvalue ParmVar 0x9bafd40 '__s1' 'char_type *')))
        (ImplicitCastExpr 0x9bb10f0 <col:63> 'const void *' <BitCast>
          (ImplicitCastExpr 0x9bb10e0 <col:63> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x9bb1054 <col:63> 'const char_type *' lvalue ParmVar 0x9bafd90 '__s2' 'const char_type *')))
        (ImplicitCastExpr 0x9bb1100 <col:69> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9bb106c <col:69> 'size_t':'unsigned int' lvalue ParmVar 0x9bafdd0 '__n' 'size_t':'unsigned int'))))))


        static char_type *assign(char_type *__s, size_t __n, char_type __a) (CompoundStmt 0x9bb1298 </usr/include/c++/4.6/bits/char_traits.h:276:7, col:74>
  (ReturnStmt 0x9bb1288 <col:9, col:71>
    (CXXStaticCastExpr 0x9bb1270 <col:16, col:71> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0x9bb11e8 <col:40, col:70> 'void *'
        (ImplicitCastExpr 0x9bb11d8 <col:40> 'void *(*)(void *, int, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9bb115c <col:40> 'void *(void *, int, unsigned int)' lvalue Function 0x9b87bd0 '__builtin_memset' 'void *(void *, int, unsigned int)'))
        (ImplicitCastExpr 0x9bb1220 <col:57> 'void *' <BitCast>
          (ImplicitCastExpr 0x9bb1210 <col:57> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x9bb1174 <col:57> 'char_type *' lvalue ParmVar 0x9bafeb0 '__s' 'char_type *')))
        (ImplicitCastExpr 0x9bb1240 <col:62> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9bb1230 <col:62> 'char_type':'char' <LValueToRValue>
            (DeclRefExpr 0x9bb118c <col:62> 'char_type':'char' lvalue ParmVar 0x9baff30 '__a' 'char_type':'char')))
        (ImplicitCastExpr 0x9bb1250 <col:67> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9bb11a4 <col:67> 'size_t':'unsigned int' lvalue ParmVar 0x9bafef0 '__n' 'size_t':'unsigned int'))))))


        static char_type to_char_type(const int_type &__c) (CompoundStmt 0x9bb1318 </usr/include/c++/4.6/bits/char_traits.h:280:7, col:45>
  (ReturnStmt 0x9bb1308 <col:9, col:42>
    (CXXStaticCastExpr 0x9bb12f0 <col:16, col:42> 'char_type':'char' static_cast<char_type> <NoOp>
      (ImplicitCastExpr 0x9bb12e0 <col:39> 'char_type':'char' <IntegralCast>
        (ImplicitCastExpr 0x9bb12d0 <col:39> 'int_type':'int' <LValueToRValue>
          (DeclRefExpr 0x9bb12ac <col:39> 'const int_type':'const int' lvalue ParmVar 0x9bb00c0 '__c' 'const int_type &'))))))


        static int_type to_int_type(const char_type &__c) (CompoundStmt 0x9bb13d0 </usr/include/c++/4.6/bits/char_traits.h:286:7, col:72>
  (ReturnStmt 0x9bb13c0 <col:9, col:69>
    (CXXStaticCastExpr 0x9bb13a8 <col:16, col:69> 'int_type':'int' static_cast<int_type> <NoOp>
      (ImplicitCastExpr 0x9bb1398 <col:38, col:68> 'int_type':'int' <IntegralCast>
        (CXXStaticCastExpr 0x9bb1378 <col:38, col:68> 'unsigned char' static_cast<unsigned char> <NoOp>
          (ImplicitCastExpr 0x9bb1368 <col:65> 'unsigned char' <IntegralCast>
            (ImplicitCastExpr 0x9bb1358 <col:65> 'char_type':'char' <LValueToRValue>
              (DeclRefExpr 0x9bb132c <col:65> 'const char_type':'const char' lvalue ParmVar 0x9bb01e0 '__c' 'const char_type &'))))))))


        static bool eq_int_type(const int_type &__c1, const int_type &__c2) (CompoundStmt 0x9bb1460 </usr/include/c++/4.6/bits/char_traits.h:290:7, col:30>
  (ReturnStmt 0x9bb1450 <col:9, col:24>
    (BinaryOperator 0x9bb1438 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x9bb1418 <col:16> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0x9bb13e4 <col:16> 'const int_type':'const int' lvalue ParmVar 0x9bb0300 '__c1' 'const int_type &'))
      (ImplicitCastExpr 0x9bb1428 <col:24> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0x9bb13fc <col:24> 'const int_type':'const int' lvalue ParmVar 0x9bb0350 '__c2' 'const int_type &')))))


        static int_type eof() (CompoundStmt 0x9bb14d8 </usr/include/c++/4.6/bits/char_traits.h:294:7, col:59>
  (ReturnStmt 0x9bb14c8 <col:9, col:56>
    (CXXStaticCastExpr 0x9bb14b0 <col:16, col:56> 'int_type':'int' static_cast<int_type> <NoOp>
      (UnaryOperator 0x9bb1490 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:1149:28, col:29> 'int' prefix '-'
        (IntegerLiteral 0x9bb1478 <col:29> 'int' 1)))))


        static int_type not_eof(const int_type &__c) (CompoundStmt 0x9bb3d98 </usr/include/c++/4.6/bits/char_traits.h:298:7, col:42>
  (ReturnStmt 0x9bb3d88 <col:9, col:37>
    (ConditionalOperator 0x9bb3d68 <col:16, col:37> 'int'
      (ParenExpr 0x9bb3d10 <col:16, col:29> '_Bool'
        (BinaryOperator 0x9bb3cf8 <col:17, col:28> '_Bool' '=='
          (ImplicitCastExpr 0x9bb3ce8 <col:17> 'int_type':'int' <LValueToRValue>
            (DeclRefExpr 0x9bb14ec <col:17> 'const int_type':'const int' lvalue ParmVar 0x9bb0500 '__c' 'const int_type &'))
          (CallExpr 0x9bb3cc8 <col:24, col:28> 'int_type':'int'
            (ImplicitCastExpr 0x9bb3cb8 <col:24> 'int_type (*)(void)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9bb1504 <col:24> 'int_type (void)' lvalue CXXMethod 0x9bb0490 'eof' 'int_type (void)')))))
      (IntegerLiteral 0x9bb3d28 <col:33> 'int' 0)
      (ImplicitCastExpr 0x9bb3d58 <col:37> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0x9bb3d40 <col:37> 'const int_type':'const int' lvalue ParmVar 0x9bb0500 '__c' 'const int_type &')))))


    };
    struct char_traits {
        struct char_traits;
        typedef wchar_t char_type;
        typedef wint_t int_type;
        typedef streamoff off_type;
        typedef wstreampos pos_type;
        typedef mbstate_t state_type;
        static void assign(char_type &__c1, const char_type &__c2) (CompoundStmt 0x9bb5508 </usr/include/c++/4.6/bits/char_traits.h:315:7, col:22>
  (BinaryOperator 0x9bb54f0 <col:9, col:16> 'char_type':'wchar_t' lvalue '='
    (DeclRefExpr 0x9bb54b0 <col:9> 'char_type':'wchar_t' lvalue ParmVar 0x9bb4150 '__c1' 'char_type &')
    (ImplicitCastExpr 0x9bb54e0 <col:16> 'char_type':'wchar_t' <LValueToRValue>
      (DeclRefExpr 0x9bb54c8 <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0x9bb41e0 '__c2' 'const char_type &'))))


        static bool eq(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x9bb5598 </usr/include/c++/4.6/bits/char_traits.h:319:7, col:30>
  (ReturnStmt 0x9bb5588 <col:9, col:24>
    (BinaryOperator 0x9bb5570 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x9bb5550 <col:16> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9bb551c <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0x9bb4300 '__c1' 'const char_type &'))
      (ImplicitCastExpr 0x9bb5560 <col:24> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9bb5534 <col:24> 'const char_type':'const wchar_t' lvalue ParmVar 0x9bb4350 '__c2' 'const char_type &')))))


        static bool lt(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x9bb5628 </usr/include/c++/4.6/bits/char_traits.h:323:7, col:29>
  (ReturnStmt 0x9bb5618 <col:9, col:23>
    (BinaryOperator 0x9bb5600 <col:16, col:23> '_Bool' '<'
      (ImplicitCastExpr 0x9bb55e0 <col:16> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9bb55ac <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0x9bb4470 '__c1' 'const char_type &'))
      (ImplicitCastExpr 0x9bb55f0 <col:23> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9bb55c4 <col:23> 'const char_type':'const wchar_t' lvalue ParmVar 0x9bb44c0 '__c2' 'const char_type &')))))


        static int compare(const char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9bb5790 </usr/include/c++/4.6/bits/char_traits.h:327:7, col:42>
  (ReturnStmt 0x9bb5780 <col:9, col:39>
    (CallExpr 0x9bb5728 <col:16, col:39> 'int'
      (ImplicitCastExpr 0x9bb5718 <col:16> 'int (*)(const wchar_t *, const wchar_t *, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9bb56bc <col:16> 'int (const wchar_t *, const wchar_t *, size_t) throw()' lvalue Function 0x9a3b7d0 'wmemcmp' 'int (const wchar_t *, const wchar_t *, size_t) throw()' (UsingShadow 0x9ba0a20 'wmemcmp')))
      (ImplicitCastExpr 0x9bb5750 <col:24> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9bb5674 <col:24> 'const char_type *' lvalue ParmVar 0x9bb45c0 '__s1' 'const char_type *'))
      (ImplicitCastExpr 0x9bb5760 <col:30> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9bb568c <col:30> 'const char_type *' lvalue ParmVar 0x9bb4610 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0x9bb5770 <col:36> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9bb56a4 <col:36> 'size_t':'unsigned int' lvalue ParmVar 0x9bb4650 '__n' 'size_t':'unsigned int')))))


        static size_t length(const char_type *__s) (CompoundStmt 0x9bb5898 </usr/include/c++/4.6/bits/char_traits.h:331:7, col:29>
  (ReturnStmt 0x9bb5888 <col:9, col:26>
    (CallExpr 0x9bb5858 <col:16, col:26> 'size_t':'unsigned int'
      (ImplicitCastExpr 0x9bb5848 <col:16> 'size_t (*)(const wchar_t *) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9bb57f4 <col:16> 'size_t (const wchar_t *) throw()' lvalue Function 0x9a3b110 'wcslen' 'size_t (const wchar_t *) throw()' (UsingShadow 0x9ba0470 'wcslen')))
      (ImplicitCastExpr 0x9bb5878 <col:23> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9bb57dc <col:23> 'const char_type *' lvalue ParmVar 0x9bb4760 '__s' 'const char_type *')))))


        static const char_type *find(const char_type *__s, size_t __n, const char_type &__a) (CompoundStmt 0x9bb59d8 </usr/include/c++/4.6/bits/char_traits.h:335:7, col:40>
  (ReturnStmt 0x9bb59c8 <col:9, col:37>
    (ImplicitCastExpr 0x9bb59b8 <col:16, col:37> 'const char_type *' <NoOp>
      (CallExpr 0x9bb5960 <col:16, col:37> 'wchar_t *'
        (ImplicitCastExpr 0x9bb5950 <col:16> 'wchar_t *(*)(const wchar_t *, wchar_t, size_t) throw()' <FunctionToPointerDecay>
          (DeclRefExpr 0x9bb5930 <col:16> 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' lvalue Function 0x9a3b620 'wmemchr' 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' (UsingShadow 0x9ba0e80 'wmemchr')))
        (ImplicitCastExpr 0x9bb5988 <col:24> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9bb58e8 <col:24> 'const char_type *' lvalue ParmVar 0x9bb4860 '__s' 'const char_type *'))
        (ImplicitCastExpr 0x9bb5998 <col:29> 'char_type':'wchar_t' <LValueToRValue>
          (DeclRefExpr 0x9bb5900 <col:29> 'const char_type':'const wchar_t' lvalue ParmVar 0x9bb48f0 '__a' 'const char_type &'))
        (ImplicitCastExpr 0x9bb59a8 <col:34> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9bb5918 <col:34> 'size_t':'unsigned int' lvalue ParmVar 0x9bb48a0 '__n' 'size_t':'unsigned int'))))))


        static char_type *move(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9bb5b40 </usr/include/c++/4.6/bits/char_traits.h:339:7, col:43>
  (ReturnStmt 0x9bb5b30 <col:9, col:40>
    (CallExpr 0x9bb5ad8 <col:16, col:40> 'wchar_t *'
      (ImplicitCastExpr 0x9bb5ac8 <col:16> 'wchar_t *(*)(wchar_t *, const wchar_t *, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9bb5a6c <col:16> 'wchar_t *(wchar_t *, const wchar_t *, size_t) throw()' lvalue Function 0x9a3bb50 'wmemmove' 'wchar_t *(wchar_t *, const wchar_t *, size_t) throw()' (UsingShadow 0x9ba0b00 'wmemmove')))
      (ImplicitCastExpr 0x9bb5b00 <col:25> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9bb5a24 <col:25> 'char_type *' lvalue ParmVar 0x9bb4a50 '__s1' 'char_type *'))
      (ImplicitCastExpr 0x9bb5b10 <col:31> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9bb5a3c <col:31> 'const char_type *' lvalue ParmVar 0x9bb4aa0 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0x9bb5b20 <col:37> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9bb5a54 <col:37> 'size_t':'unsigned int' lvalue ParmVar 0x9bb4ae0 '__n' 'size_t':'unsigned int')))))


        static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9bb5c80 </usr/include/c++/4.6/bits/char_traits.h:343:7, col:42>
  (ReturnStmt 0x9bb5c70 <col:9, col:39>
    (CallExpr 0x9bb5c18 <col:16, col:39> 'wchar_t *'
      (ImplicitCastExpr 0x9bb5c08 <col:16> 'wchar_t *(*)(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9bb5bd4 <col:16> 'wchar_t *(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' lvalue Function 0x9a3b980 'wmemcpy' 'wchar_t *(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' (UsingShadow 0x9ba0a90 'wmemcpy')))
      (ImplicitCastExpr 0x9bb5c40 <col:24> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9bb5b8c <col:24> 'char_type *' lvalue ParmVar 0x9bb4bf0 '__s1' 'char_type *'))
      (ImplicitCastExpr 0x9bb5c50 <col:30> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9bb5ba4 <col:30> 'const char_type *' lvalue ParmVar 0x9bb4c40 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0x9bb5c60 <col:36> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9bb5bbc <col:36> 'size_t':'unsigned int' lvalue ParmVar 0x9bb4c80 '__n' 'size_t':'unsigned int')))))


        static char_type *assign(char_type *__s, size_t __n, char_type __a) (CompoundStmt 0x9bb6e00 </usr/include/c++/4.6/bits/char_traits.h:347:7, col:40>
  (ReturnStmt 0x9bb6df0 <col:9, col:37>
    (CallExpr 0x9bb6d98 <col:16, col:37> 'wchar_t *'
      (ImplicitCastExpr 0x9bb6d88 <col:16> 'wchar_t *(*)(wchar_t *, wchar_t, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9bb6d2c <col:16> 'wchar_t *(wchar_t *, wchar_t, size_t) throw()' lvalue Function 0x9a3bd10 'wmemset' 'wchar_t *(wchar_t *, wchar_t, size_t) throw()' (UsingShadow 0x9ba0b70 'wmemset')))
      (ImplicitCastExpr 0x9bb6dc0 <col:24> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9bb6ce4 <col:24> 'char_type *' lvalue ParmVar 0x9bb4d60 '__s' 'char_type *'))
      (ImplicitCastExpr 0x9bb6dd0 <col:29> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9bb6cfc <col:29> 'char_type':'wchar_t' lvalue ParmVar 0x9bb4de0 '__a' 'char_type':'wchar_t'))
      (ImplicitCastExpr 0x9bb6de0 <col:34> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9bb6d14 <col:34> 'size_t':'unsigned int' lvalue ParmVar 0x9bb4da0 '__n' 'size_t':'unsigned int')))))


        static char_type to_char_type(const int_type &__c) (CompoundStmt 0x9bb6e80 </usr/include/c++/4.6/bits/char_traits.h:351:7, col:32>
  (ReturnStmt 0x9bb6e70 <col:9, col:29>
    (CXXFunctionalCastExpr 0x9bb6e58 <col:16, col:29> 'char_type':'wchar_t' functional cast to char_type <NoOp>
      (ImplicitCastExpr 0x9bb6e48 <col:26> 'char_type':'wchar_t' <IntegralCast>
        (ImplicitCastExpr 0x9bb6e38 <col:26> 'int_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9bb6e20 <col:26> 'const int_type':'const unsigned int' lvalue ParmVar 0x9bb4f50 '__c' 'const int_type &'))))))


        static int_type to_int_type(const char_type &__c) (CompoundStmt 0x9bb6f00 </usr/include/c++/4.6/bits/char_traits.h:355:7, col:31>
  (ReturnStmt 0x9bb6ef0 <col:9, col:28>
    (CXXFunctionalCastExpr 0x9bb6ed8 <col:16, col:28> 'int_type':'unsigned int' functional cast to int_type <NoOp>
      (ImplicitCastExpr 0x9bb6ec8 <col:25> 'int_type':'unsigned int' <IntegralCast>
        (ImplicitCastExpr 0x9bb6eb8 <col:25> 'char_type':'wchar_t' <LValueToRValue>
          (DeclRefExpr 0x9bb6ea0 <col:25> 'const char_type':'const wchar_t' lvalue ParmVar 0x9bb5070 '__c' 'const char_type &'))))))


        static bool eq_int_type(const int_type &__c1, const int_type &__c2) (CompoundStmt 0x9bb6f90 </usr/include/c++/4.6/bits/char_traits.h:359:7, col:30>
  (ReturnStmt 0x9bb6f80 <col:9, col:24>
    (BinaryOperator 0x9bb6f68 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x9bb6f48 <col:16> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9bb6f14 <col:16> 'const int_type':'const unsigned int' lvalue ParmVar 0x9bb5190 '__c1' 'const int_type &'))
      (ImplicitCastExpr 0x9bb6f58 <col:24> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9bb6f2c <col:24> 'const int_type':'const unsigned int' lvalue ParmVar 0x9bb51e0 '__c2' 'const int_type &')))))


        static int_type eof() (CompoundStmt 0x9bb7008 </usr/include/c++/4.6/bits/char_traits.h:363:7, col:45>
  (ReturnStmt 0x9bb6ff8 <col:9, col:42>
    (CXXStaticCastExpr 0x9bb6fe0 <col:16, col:42> 'int_type':'unsigned int' static_cast<int_type> <NoOp>
      (ParenExpr 0x9bb6fc0 </usr/include/wchar.h:119:15, col:27> 'unsigned int'
        (IntegerLiteral 0x9bb6fa8 <col:16> 'unsigned int' 4294967295)))))


        static int_type not_eof(const int_type &__c) (CompoundStmt 0x9bb71e0 </usr/include/c++/4.6/bits/char_traits.h:367:7, col:51>
  (ReturnStmt 0x9bb71d0 <col:9, col:46>
    (ConditionalOperator 0x9bb71b0 <col:16, col:46> 'unsigned int'
      (CallExpr 0x9bb7128 <col:16, col:38> '_Bool'
        (ImplicitCastExpr 0x9bb7118 <col:16> '_Bool (*)(const int_type &, const int_type &)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9bb701c <col:16> '_Bool (const int_type &, const int_type &)' lvalue CXXMethod 0x9bb5280 'eq_int_type' '_Bool (const int_type &, const int_type &)'))
        (DeclRefExpr 0x9bb7034 <col:28> 'const int_type':'const unsigned int' lvalue ParmVar 0x9bb5390 '__c' 'const int_type &')
        (MaterializeTemporaryExpr 0x9bb7150 <col:33, col:37> 'const int_type':'const unsigned int' lvalue
          (CallExpr 0x9bb70b8 <col:33, col:37> 'int_type':'unsigned int'
            (ImplicitCastExpr 0x9bb70a8 <col:33> 'int_type (*)(void)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9bb704c <col:33> 'int_type (void)' lvalue CXXMethod 0x9bb5320 'eof' 'int_type (void)')))))
      (ImplicitCastExpr 0x9bb71a0 <col:42> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0x9bb7160 <col:42> 'int' 0))
      (ImplicitCastExpr 0x9bb7190 <col:46> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9bb7178 <col:46> 'const int_type':'const unsigned int' lvalue ParmVar 0x9bb5390 '__c' 'const int_type &')))))


    };
}
extern unsigned int __builtin_strlen(const char *);
extern void *__builtin_memchr(const void *, int, unsigned int);
extern void *__builtin_memcpy(void *, const void *, unsigned int);
extern "C++" {
    namespace std {
        class exception {
            class exception;
        public:
        public:
            exception() throw() (CompoundStmt 0x9bb7700 </usr/include/c++/4.6/exception:63:25, col:27>)


            virtual void ~exception() throw();
            virtual const char *what() const throw();
            inline std::exception &operator=(const std::exception &) throw();
            inline exception(const std::exception &) throw();
        };
        class bad_exception : public std::exception {
            class bad_exception;
        public:
        public:
            bad_exception() throw() : std::exception() (CompoundStmt 0x9bb7ce0 </usr/include/c++/4.6/exception:76:29, col:31>)


            virtual void ~bad_exception() throw();
            virtual const char *what() const throw();
            inline std::bad_exception &operator=(const std::bad_exception &) throw();
        };
        typedef void (*terminate_handler)();
        typedef void (*unexpected_handler)();
        terminate_handler set_terminate(terminate_handler) throw();
        void terminate() throw();
        unexpected_handler set_unexpected(unexpected_handler) throw();
        void unexpected();
        bool uncaught_exception() throw();
    }
    namespace __gnu_cxx {
        void __verbose_terminate_handler();
    }
}
extern "C++" {
    namespace std {
        class bad_alloc : public std::exception {
            class bad_alloc;
        public:
        public:
            bad_alloc() throw() : std::exception() (CompoundStmt 0x9bb87f0 </usr/include/c++/4.6/new:58:25, col:27>)


            virtual void ~bad_alloc() throw();
            virtual const char *what() const throw();
            inline std::bad_alloc &operator=(const std::bad_alloc &) throw();
        };
        struct nothrow_t {
            struct nothrow_t;
        };
        extern const std::nothrow_t nothrow;
        typedef void (*new_handler)();
        new_handler set_new_handler(new_handler) throw();
    }
    void *operator new(std::size_t) throw(std::bad_alloc);
    void *operator new[](std::size_t) throw(std::bad_alloc);
    void operator delete(void *) throw();
    void operator delete[](void *) throw();
    void *operator new(std::size_t, const std::nothrow_t &) throw();
    void *operator new[](std::size_t, const std::nothrow_t &) throw();
    void operator delete(void *, const std::nothrow_t &) throw();
    void operator delete[](void *, const std::nothrow_t &) throw();
    inline void *operator new(std::size_t, void *__p) throw() (CompoundStmt 0x9bc05d8 </usr/include/c++/4.6/new:102:59, col:73>
  (ReturnStmt 0x9bc05c8 <col:61, col:68>
    (ImplicitCastExpr 0x9bc05b8 <col:68> 'void *' <LValueToRValue>
      (DeclRefExpr 0x9bc059c <col:68> 'void *' lvalue ParmVar 0x9bc0450 '__p' 'void *'))))


    inline void *operator new[](std::size_t, void *__p) throw() (CompoundStmt 0x9bc07b8 </usr/include/c++/4.6/new:103:61, col:75>
  (ReturnStmt 0x9bc07a8 <col:63, col:70>
    (ImplicitCastExpr 0x9bc0798 <col:70> 'void *' <LValueToRValue>
      (DeclRefExpr 0x9bc077c <col:70> 'void *' lvalue ParmVar 0x9bc0670 '__p' 'void *'))))


    inline void operator delete(void *, void *) throw() (CompoundStmt 0x9bc0980 </usr/include/c++/4.6/new:106:54, col:56>)


    inline void operator delete[](void *, void *) throw() (CompoundStmt 0x9bc0b00 </usr/include/c++/4.6/new:107:54, col:56>)


}
namespace __gnu_cxx {
    using std::size_t;
    ;
    using std::ptrdiff_t;
    ;
    template <typename _Tp = wchar_t> class new_allocator {
        class new_allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef wchar_t *pointer;
        typedef const wchar_t *const_pointer;
        typedef wchar_t &reference;
        typedef const wchar_t &const_reference;
        typedef wchar_t value_type;
        template <typename _Tp1> struct rebind;
        new_allocator() throw() (CompoundStmt 0x9bc29e0 </usr/include/c++/4.6/ext/new_allocator.h:69:31, col:33>)


        new_allocator(const __gnu_cxx::new_allocator<wchar_t> &) throw() (CompoundStmt 0x9bc29f0 </usr/include/c++/4.6/ext/new_allocator.h:71:51, col:53>)


        template <typename _Tp1 = wchar_t> new_allocator(const new_allocator<wchar_t> &) throw()template <typename _Tp1> new_allocator(const new_allocator<_Tp1> &) throw();
        void ~new_allocator() throw() (CompoundStmt 0x9bc2a10 </usr/include/c++/4.6/ext/new_allocator.h:76:32, col:34>)


        pointer address(reference __x) const;
        const_pointer address(const_reference __x) const;
        pointer allocate(size_type __n, const void *);
        void deallocate(pointer __p, size_type);
        size_type max_size() const throw();
        void construct(pointer __p, const wchar_t &__val);
        void destroy(pointer __p);
    }
template <typename _Tp = char> class new_allocator {
        class new_allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef char *pointer;
        typedef const char *const_pointer;
        typedef char &reference;
        typedef const char &const_reference;
        typedef char value_type;
        template <typename _Tp1> struct rebind;
        new_allocator() throw();
        new_allocator(const __gnu_cxx::new_allocator<char> &) throw();
        template <typename _Tp1> new_allocator(const new_allocator<_Tp1> &) throw();
        void ~new_allocator() throw();
        pointer address(reference __x) const;
        const_pointer address(const_reference __x) const;
        pointer allocate(size_type __n, const void *);
        void deallocate(pointer __p, size_type);
        size_type max_size() const throw();
        void construct(pointer __p, const char &__val);
        void destroy(pointer __p);
    }
template <typename _Tp> class new_allocator {
        class new_allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef _Tp *pointer;
        typedef const _Tp *const_pointer;
        typedef _Tp &reference;
        typedef const _Tp &const_reference;
        typedef _Tp value_type;
        template <typename _Tp1> struct rebind {
            struct rebind;
            typedef new_allocator<_Tp1> other;
        };
        new_allocator<_Tp>() throw() (CompoundStmt 0x9bc29e0 </usr/include/c++/4.6/ext/new_allocator.h:69:31, col:33>)


        new_allocator<_Tp>(const new_allocator<_Tp> &) throw() (CompoundStmt 0x9bc29f0 </usr/include/c++/4.6/ext/new_allocator.h:71:51, col:53>)


        template <typename _Tp1> new_allocator<_Tp>(const new_allocator<_Tp1> &) throw() (CompoundStmt 0x9bc2a00 </usr/include/c++/4.6/ext/new_allocator.h:74:59, col:61>)

;
        void ~new_allocator<_Tp>() throw() (CompoundStmt 0x9bc2a10 </usr/include/c++/4.6/ext/new_allocator.h:76:32, col:34>)


        pointer address(reference __x) const (CompoundStmt 0x9bc2ab8 </usr/include/c++/4.6/ext/new_allocator.h:79:36, col:68>
  (ReturnStmt 0x9bc2aa8 <col:38, col:65>
    (CallExpr 0x9bc2a88 <col:45, col:65> '<dependent type>'
      (UnresolvedLookupExpr 0x9bc2a38 <col:45, col:50> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b394e0)
      (DeclRefExpr 0x9bc2a6c <col:62> '_Tp' lvalue ParmVar 0x9bc2170 '__x' 'reference':'_Tp &'))))


        const_pointer address(const_reference __x) const (CompoundStmt 0x9bc2b68 </usr/include/c++/4.6/ext/new_allocator.h:82:42, col:74>
  (ReturnStmt 0x9bc2b58 <col:44, col:71>
    (CallExpr 0x9bc2b38 <col:51, col:71> '<dependent type>'
      (UnresolvedLookupExpr 0x9bc2ae8 <col:51, col:56> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b394e0)
      (DeclRefExpr 0x9bc2b1c <col:68> 'const _Tp' lvalue ParmVar 0x9bc22b0 '__x' 'const_reference':'const _Tp &'))))


        pointer allocate(size_type __n, const void * = (ImplicitCastExpr 0x9bc29d0 </usr/include/c++/4.6/ext/new_allocator.h:87:45> 'const void *' <NullToPointer>
  (IntegerLiteral 0x9bc29b8 <col:45> 'int' 0))
) (CompoundStmt 0x9bc2ec0 </usr/include/c++/4.6/ext/new_allocator.h:88:7, line:93:7>
  (IfStmt 0x9bc2d08 <line:89:2, line:90:27>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9bc2c58 <line:89:6, col:27> '<dependent type>'
      (UnresolvedLookupExpr 0x9bc2c20 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b6bb30 0x9b6c100)
      (DeclRefExpr 0x9bc2b7c <col:6> 'size_type':'unsigned int' lvalue ParmVar 0x9bc23e0 '__n' 'size_type':'unsigned int')
      (CallExpr 0x9bc2c00 <col:12, col:27> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9bc2bc8 <col:12, col:18> '<dependent type>' lvalue
          (CXXThisExpr 0x9bc2bb8 <col:12> 'new_allocator<_Tp> *' this))))
    (CallExpr 0x9bc2ce8 <line:90:4, col:27> 'void'
      (ImplicitCastExpr 0x9bc2cd8 <col:4, col:9> 'void (*)(void) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x9bc2ca0 <col:4, col:9> 'void (void) __attribute__((noreturn))' lvalue Function 0x9b0b7e0 '__throw_bad_alloc' 'void (void) __attribute__((noreturn))')))
    <<<NULL>>>)
  (ReturnStmt 0x9bc2eb0 <line:92:2, col:60>
    (CXXStaticCastExpr 0x9bc2e98 <col:9, col:60> '_Tp *' static_cast<_Tp *> <Dependent>
      (CallExpr 0x9bc2e68 <col:27, col:59> 'void *'
        (ImplicitCastExpr 0x9bc2e58 <col:27, <invalid sloc>> 'void *(*)(std::size_t) throw(std::bad_alloc)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9bc2e00 <col:27, <invalid sloc>> 'void *(std::size_t) throw(std::bad_alloc)' lvalue Function 0x9bbf850 'operator new' 'void *(std::size_t) throw(std::bad_alloc)'))
        (BinaryOperator 0x9bc2de8 <col:42, col:58> 'unsigned int' '*'
          (ImplicitCastExpr 0x9bc2dd8 <col:42> 'size_type':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0x9bc2d9c <col:42> 'size_type':'unsigned int' lvalue ParmVar 0x9bc23e0 '__n' 'size_type':'unsigned int'))
          (UnaryExprOrTypeTraitExpr 0x9bc2dc0 <col:48, col:58> 'unsigned int' sizeof '_Tp'))))))


        void deallocate(pointer __p, size_type) (CompoundStmt 0x9bc2f68 </usr/include/c++/4.6/ext/new_allocator.h:98:7, col:33>
  (CallExpr 0x9bc2f48 <col:9, col:30> '<dependent type>'
    (UnresolvedLookupExpr 0x9bc2ef0 <col:9, col:20> '<overloaded function type>' lvalue (no ADL) = '1' 0x9bbfac0 0x9bc0190 0x9bc08d0)
    (DeclRefExpr 0x9bc2f2c <col:27> 'pointer':'_Tp *' lvalue ParmVar 0x9bc2540 '__p' 'pointer':'_Tp *')))


        size_type max_size() const throw() (CompoundStmt 0x9bc3028 </usr/include/c++/4.6/ext/new_allocator.h:102:7, col:42>
  (ReturnStmt 0x9bc3018 <col:9, col:39>
    (BinaryOperator 0x9bc3000 <col:16, col:39> 'unsigned int' '/'
      (CXXFunctionalCastExpr 0x9bc2fc8 <col:16, col:25> 'size_t':'unsigned int' functional cast to size_t <NoOp>
        (ImplicitCastExpr 0x9bc2fb8 <col:23, col:24> 'size_t':'unsigned int' <IntegralCast>
          (UnaryOperator 0x9bc2fa0 <col:23, col:24> 'int' prefix '-'
            (IntegerLiteral 0x9bc2f88 <col:24> 'int' 1))))
      (UnaryExprOrTypeTraitExpr 0x9bc2fe8 <col:29, col:39> 'unsigned int' sizeof '_Tp'))))


        void construct(pointer __p, const _Tp &__val) (CompoundStmt 0x9bc30e0 </usr/include/c++/4.6/ext/new_allocator.h:108:7, col:40>
  (CXXNewExpr 0x9bc30a0 <col:9, col:37> '_Tp *'
    (CStyleCastExpr 0x9bc3068 <col:15, col:23> 'void *' <Dependent>
      (DeclRefExpr 0x9bc303c <col:23> 'pointer':'_Tp *' lvalue ParmVar 0x9bc2750 '__p' 'pointer':'_Tp *'))
    (DeclRefExpr 0x9bc3080 <col:32> 'const _Tp' lvalue ParmVar 0x9bc27a0 '__val' 'const _Tp &')))


        void destroy(pointer __p) (CompoundStmt 0x9bc3168 </usr/include/c++/4.6/ext/new_allocator.h:118:28, col:43>
  (CallExpr 0x9bc3148 <col:30, col:40> 'void'
    (CXXPseudoDestructorExpr 0x9bc3118 <col:30, col:36> 'void (*)(void)'
      (DeclRefExpr 0x9bc30f4 <col:30> 'pointer':'_Tp *' lvalue ParmVar 0x9bc28b0 '__p' 'pointer':'_Tp *'))))


    };
    template <typename _Tp> inline bool operator==(const new_allocator<_Tp> &, const new_allocator<_Tp> &) (CompoundStmt 0x9bc3510 </usr/include/c++/4.6/ext/new_allocator.h:124:5, col:20>
  (ReturnStmt 0x9bc3500 <col:7, col:14>
    (CXXBoolLiteralExpr 0x9bc34f0 <col:14> '_Bool' true)))

;
    template <typename _Tp> inline bool operator!=(const new_allocator<_Tp> &, const new_allocator<_Tp> &) (CompoundStmt 0x9bc3880 </usr/include/c++/4.6/ext/new_allocator.h:129:5, col:21>
  (ReturnStmt 0x9bc3870 <col:7, col:14>
    (CXXBoolLiteralExpr 0x9bc3860 <col:14> '_Bool' false)))

;
}
namespace std {
    template <typename _Tp = std::basic_string<wchar_t>> class allocator
template <typename _Tp = wchar_t> class allocator : public __gnu_cxx::new_allocator<wchar_t> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef wchar_t *pointer;
        typedef const wchar_t *const_pointer;
        typedef wchar_t &reference;
        typedef const wchar_t &const_reference;
        typedef wchar_t value_type;
        template <typename _Tp1 = wchar_t> struct rebind {
            struct rebind;
            typedef allocator<wchar_t> other;
        }
template <typename _Tp1 = char> struct rebind {
            struct rebind;
            typedef allocator<char> other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw() : __gnu_cxx::new_allocator<wchar_t>() (CompoundStmt 0x9bc64c8 </usr/include/c++/4.6/bits/allocator.h:107:27, col:29>)


        allocator(const std::allocator<wchar_t> &__a) throw() : __gnu_cxx::new_allocator<wchar_t>((ImplicitCastExpr 0x9fcba60 </usr/include/c++/4.6/bits/allocator.h:110:39> 'const class __gnu_cxx::new_allocator<wchar_t>' lvalue <DerivedToBase (new_allocator)>
  (DeclRefExpr 0x9fcb7b4 <col:39> 'const class std::allocator<wchar_t>' lvalue ParmVar 0x9bcd4d0 '__a' 'const class std::allocator<wchar_t> &'))
) (CompoundStmt 0x9bc65e0 </usr/include/c++/4.6/bits/allocator.h:110:44, col:46>)


        template <typename _Tp1 = wchar_t> allocator(const allocator<wchar_t> &) throw()template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw() (CompoundStmt 0x9bc6600 </usr/include/c++/4.6/bits/allocator.h:115:28, col:30>)


    }
template <typename _Tp = std::basic_string<char>> class allocator
template <typename _Tp = void> class allocator {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef void *pointer;
        typedef const void *const_pointer;
        typedef void value_type;
        template <typename _Tp1> struct rebind {
            struct rebind;
            typedef allocator<_Tp1> other;
        };
    }
template <typename _Tp = char> class allocator : public __gnu_cxx::new_allocator<char> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef char *pointer;
        typedef const char *const_pointer;
        typedef char &reference;
        typedef const char &const_reference;
        typedef char value_type;
        template <typename _Tp1 = char> struct rebind {
            struct rebind;
            typedef allocator<char> other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw();
        allocator(const std::allocator<char> &__a) throw();
        template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw();
    }
template <typename _Tp> class allocator;
    class allocator {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef void *pointer;
        typedef const void *const_pointer;
        typedef void value_type;
        template <typename _Tp1> struct rebind {
            struct rebind;
            typedef allocator<_Tp1> other;
        };
    };
    template <typename _Tp = std::basic_string<wchar_t>> class allocator
template <typename _Tp = wchar_t> class allocator : public __gnu_cxx::new_allocator<wchar_t> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef wchar_t *pointer;
        typedef const wchar_t *const_pointer;
        typedef wchar_t &reference;
        typedef const wchar_t &const_reference;
        typedef wchar_t value_type;
        template <typename _Tp1 = wchar_t> struct rebind {
            struct rebind;
            typedef allocator<wchar_t> other;
        }
template <typename _Tp1 = char> struct rebind {
            struct rebind;
            typedef allocator<char> other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw() : __gnu_cxx::new_allocator<wchar_t>() (CompoundStmt 0x9bc64c8 </usr/include/c++/4.6/bits/allocator.h:107:27, col:29>)


        allocator(const std::allocator<wchar_t> &__a) throw() : __gnu_cxx::new_allocator<wchar_t>((ImplicitCastExpr 0x9fcba60 </usr/include/c++/4.6/bits/allocator.h:110:39> 'const class __gnu_cxx::new_allocator<wchar_t>' lvalue <DerivedToBase (new_allocator)>
  (DeclRefExpr 0x9fcb7b4 <col:39> 'const class std::allocator<wchar_t>' lvalue ParmVar 0x9bcd4d0 '__a' 'const class std::allocator<wchar_t> &'))
) (CompoundStmt 0x9bc65e0 </usr/include/c++/4.6/bits/allocator.h:110:44, col:46>)


        template <typename _Tp1 = wchar_t> allocator(const allocator<wchar_t> &) throw()template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw() (CompoundStmt 0x9bc6600 </usr/include/c++/4.6/bits/allocator.h:115:28, col:30>)


    }
template <typename _Tp = std::basic_string<char>> class allocator
template <typename _Tp = void> class allocator {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef void *pointer;
        typedef const void *const_pointer;
        typedef void value_type;
        template <typename _Tp1> struct rebind {
            struct rebind;
            typedef allocator<_Tp1> other;
        };
    }
template <typename _Tp = char> class allocator : public __gnu_cxx::new_allocator<char> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef char *pointer;
        typedef const char *const_pointer;
        typedef char &reference;
        typedef const char &const_reference;
        typedef char value_type;
        template <typename _Tp1 = char> struct rebind {
            struct rebind;
            typedef allocator<char> other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw();
        allocator(const std::allocator<char> &__a) throw();
        template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw();
    }
template <typename _Tp> class allocator : public __gnu_cxx::new_allocator<_Tp> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef _Tp *pointer;
        typedef const _Tp *const_pointer;
        typedef _Tp &reference;
        typedef const _Tp &const_reference;
        typedef _Tp value_type;
        template <typename _Tp1> struct rebind {
            struct rebind;
            typedef allocator<_Tp1> other;
        };
        allocator<_Alloc>() throw() (CompoundStmt 0x9bc64c8 </usr/include/c++/4.6/bits/allocator.h:107:27, col:29>)


        allocator<_Alloc>(const allocator<_Alloc> &__a) throw() : __gnu_cxx::new_allocator<_Tp>((DeclRefExpr 0x9bc6588 </usr/include/c++/4.6/bits/allocator.h:110:39> 'const allocator<_Alloc>' lvalue ParmVar 0x9bc60a0 '__a' 'const allocator<_Alloc> &')
) (CompoundStmt 0x9bc65e0 </usr/include/c++/4.6/bits/allocator.h:110:44, col:46>)


        template <typename _Tp1> allocator<_Alloc>(const allocator<_Tp1> &) throw() (CompoundStmt 0x9bc65f0 </usr/include/c++/4.6/bits/allocator.h:113:51, col:53>)

;
        void ~allocator<_Alloc>() throw() (CompoundStmt 0x9bc6600 </usr/include/c++/4.6/bits/allocator.h:115:28, col:30>)


    };
    template <typename _T1, typename _T2> inline bool operator==(const allocator<_T1> &, const allocator<_T2> &) (CompoundStmt 0x9bc6a50 </usr/include/c++/4.6/bits/allocator.h:123:5, col:20>
  (ReturnStmt 0x9bc6a40 <col:7, col:14>
    (CXXBoolLiteralExpr 0x9bc6a30 <col:14> '_Bool' true)))

;
    template <typename _Tp> inline bool operator==(const allocator<_Tp> &, const allocator<_Tp> &) (CompoundStmt 0x9bc6de0 </usr/include/c++/4.6/bits/allocator.h:128:5, col:20>
  (ReturnStmt 0x9bc6dd0 <col:7, col:14>
    (CXXBoolLiteralExpr 0x9bc6dc0 <col:14> '_Bool' true)))

;
    template <typename _T1, typename _T2> inline bool operator!=(const allocator<_T1> &, const allocator<_T2> &) (CompoundStmt 0x9bc71b0 </usr/include/c++/4.6/bits/allocator.h:133:5, col:21>
  (ReturnStmt 0x9bc71a0 <col:7, col:14>
    (CXXBoolLiteralExpr 0x9bc7190 <col:14> '_Bool' false)))

;
    template <typename _Tp> inline bool operator!=(const allocator<_Tp> &, const allocator<_Tp> &) (CompoundStmt 0x9bc7520 </usr/include/c++/4.6/bits/allocator.h:138:5, col:21>
  (ReturnStmt 0x9bc7510 <col:7, col:14>
    (CXXBoolLiteralExpr 0x9bc7500 <col:14> '_Bool' false)))

;
    class allocator : public __gnu_cxx::new_allocator<char> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef char *pointer;
        typedef const char *const_pointer;
        typedef char &reference;
        typedef const char &const_reference;
        typedef char value_type;
        template <typename _Tp1 = char> struct rebind {
            struct rebind;
            typedef allocator<char> other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw();
        allocator(const std::allocator<char> &__a) throw();
        template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw();
    };
    class allocator : public __gnu_cxx::new_allocator<wchar_t> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef wchar_t *pointer;
        typedef const wchar_t *const_pointer;
        typedef wchar_t &reference;
        typedef const wchar_t &const_reference;
        typedef wchar_t value_type;
        template <typename _Tp1 = wchar_t> struct rebind {
            struct rebind;
            typedef allocator<wchar_t> other;
        }
template <typename _Tp1 = char> struct rebind {
            struct rebind;
            typedef allocator<char> other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw() : __gnu_cxx::new_allocator<wchar_t>() (CompoundStmt 0x9bc64c8 </usr/include/c++/4.6/bits/allocator.h:107:27, col:29>)


        allocator(const std::allocator<wchar_t> &__a) throw() : __gnu_cxx::new_allocator<wchar_t>((ImplicitCastExpr 0x9fcba60 </usr/include/c++/4.6/bits/allocator.h:110:39> 'const class __gnu_cxx::new_allocator<wchar_t>' lvalue <DerivedToBase (new_allocator)>
  (DeclRefExpr 0x9fcb7b4 <col:39> 'const class std::allocator<wchar_t>' lvalue ParmVar 0x9bcd4d0 '__a' 'const class std::allocator<wchar_t> &'))
) (CompoundStmt 0x9bc65e0 </usr/include/c++/4.6/bits/allocator.h:110:44, col:46>)


        template <typename _Tp1 = wchar_t> allocator(const allocator<wchar_t> &) throw()template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw() (CompoundStmt 0x9bc6600 </usr/include/c++/4.6/bits/allocator.h:115:28, col:30>)


    };
    template <typename _Alloc, bool = (UnaryTypeTraitExpr 0x9bcdaf0 </usr/include/c++/4.6/bits/allocator.h:151:36, col:53> '_Bool')
> struct __alloc_swap {
        struct __alloc_swap;
        static void _S_do_it(_Alloc &, _Alloc &) (CompoundStmt 0x9bcdf40 </usr/include/c++/4.6/bits/allocator.h:153:46, col:48>)


    };
    struct __alloc_swap {
        struct __alloc_swap;
        static void _S_do_it(_Alloc &__one, _Alloc &__two) (CompoundStmt 0x9bce5b0 </usr/include/c++/4.6/bits/allocator.h:160:7, line:164:7>
  (IfStmt 0x9bce590 <line:162:2, line:163:21>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9bce4d8 <line:162:6, col:15> '<dependent type>'
      (UnresolvedLookupExpr 0x9bce490 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc74d0 0x9bc7160 0x9b412d0 0x9ac7fa0 0x9b5e2b0 0x9ba7d20)
      (DeclRefExpr 0x9bce460 <col:6> '_Alloc' lvalue ParmVar 0x9bce310 '__one' '_Alloc &')
      (DeclRefExpr 0x9bce478 <col:15> '_Alloc' lvalue ParmVar 0x9bce360 '__two' '_Alloc &'))
    (CallExpr 0x9bce568 <line:163:4, col:21> '<dependent type>'
      (UnresolvedLookupExpr 0x9bce500 <col:4> '<overloaded function type>' lvalue (ADL) = '1' 0x9b3e850 0x9b3ed90)
      (DeclRefExpr 0x9bce538 <col:9> '_Alloc' lvalue ParmVar 0x9bce310 '__one' '_Alloc &')
      (DeclRefExpr 0x9bce550 <col:16> '_Alloc' lvalue ParmVar 0x9bce360 '__two' '_Alloc &'))
    <<<NULL>>>))


    };
    template <typename _Alloc, bool = (UnaryTypeTraitExpr 0x9bce620 </usr/include/c++/4.6/bits/allocator.h:168:36, col:53> '_Bool')
> struct __alloc_neq {
        struct __alloc_neq;
        static bool _S_do_it(const _Alloc &, const _Alloc &) (CompoundStmt 0x9bcea90 </usr/include/c++/4.6/bits/allocator.h:173:7, col:23>
  (ReturnStmt 0x9bcea80 <col:9, col:16>
    (CXXBoolLiteralExpr 0x9bcea70 <col:16> '_Bool' false)))


    };
    struct __alloc_neq {
        struct __alloc_neq;
        static bool _S_do_it(const _Alloc &__one, const _Alloc &__two) (CompoundStmt 0x9bd1150 </usr/include/c++/4.6/bits/allocator.h:181:7, col:32>
  (ReturnStmt 0x9bd1140 <col:9, col:25>
    (CXXOperatorCallExpr 0x9bd1118 <col:16, col:25> '<dependent type>'
      (UnresolvedLookupExpr 0x9bd10d0 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc74d0 0x9bc7160 0x9b412d0 0x9ac7fa0 0x9b5e2b0 0x9ba7d20)
      (DeclRefExpr 0x9bd10a0 <col:16> 'const _Alloc' lvalue ParmVar 0x9bd0f50 '__one' 'const _Alloc &')
      (DeclRefExpr 0x9bd10b8 <col:25> 'const _Alloc' lvalue ParmVar 0x9bd0fa0 '__two' 'const _Alloc &'))))


    };
}
namespace std {
    using ::lconv;
    ;
    using ::setlocale;
    ;
    using ::localeconv;
    ;
}
namespace __gnu_cxx {
    extern "C" extern typeof (uselocale) __uselocale
}
namespace std {
    typedef __locale_t __c_locale;
    inline int __convert_from_v(const __c_locale &__cloc, char *__out, const int __size, const char *__fmt, ...) (CompoundStmt 0x9bd2290 </usr/include/c++/4.6//i686-linux-gnu/bits/c++locale.h:73:3, line:109:3>
  (DeclStmt 0x9bd1a08 <line:75:5, col:54>
    0x9bd1900 "__c_locale __old =
      (CallExpr 0x9bd19d8 <col:24, col:53> '__locale_t':'struct __locale_struct *'
        (ImplicitCastExpr 0x9bd19c8 <col:24, col:35> 'typeof (uselocale) *' <FunctionToPointerDecay>
          (DeclRefExpr 0x9bd1958 <col:24, col:35> 'typeof (uselocale)':'__locale_t (__locale_t) throw()' lvalue Function 0x9bd1450 '__uselocale' 'typeof (uselocale)':'__locale_t (__locale_t) throw()'))
        (ImplicitCastExpr 0x9bd19f8 <col:47> '__c_locale':'struct __locale_struct *' <LValueToRValue>
          (DeclRefExpr 0x9bd1978 <col:47> 'const __c_locale':'struct __locale_struct *const' lvalue ParmVar 0x9bd1650 '__cloc' 'const __c_locale &')))")
  (DeclStmt 0x9bd1a58 <line:88:5, col:29>
    0x9bd1a20 "__builtin_va_list __args")
  (CallExpr 0x9bd1c58 <line:89:5, col:37> '_Bool'
    (ImplicitCastExpr 0x9bd1c48 <col:5> 'void (*)(__builtin_va_list &, ...)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9bd1bc4 <col:5> 'void (__builtin_va_list &, ...)' lvalue Function 0x9bd1af0 '__builtin_va_start' 'void (__builtin_va_list &, ...)'))
    (DeclRefExpr 0x9bd1bdc <col:24> '__builtin_va_list':'char *' lvalue Var 0x9bd1a20 '__args' '__builtin_va_list':'char *')
    (DeclRefExpr 0x9bd1bf4 <col:32> 'const char *' lvalue ParmVar 0x9bd17c0 '__fmt' 'const char *'))
  (DeclStmt 0x9bd1fe8 <line:92:5, col:72>
    0x9bd1c90 "const int __ret =
      (CallExpr 0x9bd1f68 <col:23, col:71> 'int'
        (ImplicitCastExpr 0x9bd1f58 <col:23> 'int (*)(char *, unsigned int, const char *, __builtin_va_list)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9bd1ea0 <col:23> 'int (char *, unsigned int, const char *, __builtin_va_list)' lvalue Function 0x9bd1cd0 '__builtin_vsnprintf' 'int (char *, unsigned int, const char *, __builtin_va_list)'))
        (ImplicitCastExpr 0x9bd1f98 <col:43> 'char *' <LValueToRValue>
          (DeclRefExpr 0x9bd1eb8 <col:43> 'char *' lvalue ParmVar 0x9bd16e0 '__out' 'char *'))
        (ImplicitCastExpr 0x9bd1fb8 <col:50> 'unsigned int' <IntegralCast>
          (ImplicitCastExpr 0x9bd1fa8 <col:50> 'int' <LValueToRValue>
            (DeclRefExpr 0x9bd1ed0 <col:50> 'const int' lvalue ParmVar 0x9bd1730 '__size' 'const int')))
        (ImplicitCastExpr 0x9bd1fc8 <col:58> 'const char *' <LValueToRValue>
          (DeclRefExpr 0x9bd1ee8 <col:58> 'const char *' lvalue ParmVar 0x9bd17c0 '__fmt' 'const char *'))
        (ImplicitCastExpr 0x9bd1fd8 <col:65> '__builtin_va_list':'char *' <LValueToRValue>
          (DeclRefExpr 0x9bd1f00 <col:65> '__builtin_va_list':'char *' lvalue Var 0x9bd1a20 '__args' '__builtin_va_list':'char *')))")
  (CallExpr 0x9bd2198 <line:97:5, col:28> 'void'
    (ImplicitCastExpr 0x9bd2188 <col:5> 'void (*)(__builtin_va_list &)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9bd2114 <col:5> 'void (__builtin_va_list &)' lvalue Function 0x9bd2040 '__builtin_va_end' 'void (__builtin_va_list &)'))
    (DeclRefExpr 0x9bd212c <col:22> '__builtin_va_list':'char *' lvalue Var 0x9bd1a20 '__args' '__builtin_va_list':'char *'))
  (CallExpr 0x9bd2228 <line:100:5, col:33> '__locale_t':'struct __locale_struct *'
    (ImplicitCastExpr 0x9bd2218 <col:5, col:16> 'typeof (uselocale) *' <FunctionToPointerDecay>
      (DeclRefExpr 0x9bd21dc <col:5, col:16> 'typeof (uselocale)':'__locale_t (__locale_t) throw()' lvalue Function 0x9bd1450 '__uselocale' 'typeof (uselocale)':'__locale_t (__locale_t) throw()'))
    (ImplicitCastExpr 0x9bd2248 <col:28> '__c_locale':'struct __locale_struct *' <LValueToRValue>
      (DeclRefExpr 0x9bd21fc <col:28> '__c_locale':'struct __locale_struct *' lvalue Var 0x9bd1900 '__old' '__c_locale':'struct __locale_struct *')))
  (ReturnStmt 0x9bd2280 <line:108:5, col:12>
    (ImplicitCastExpr 0x9bd2270 <col:12> 'int' <LValueToRValue>
      (DeclRefExpr 0x9bd2254 <col:12> 'const int' lvalue Var 0x9bd1c90 '__ret' 'const int'))))


}
extern void __builtin_va_start(__builtin_va_list &, ...);
extern int __builtin_vsnprintf(char *, unsigned int, const char *, __builtin_va_list);
extern void __builtin_va_end(__builtin_va_list &);
namespace std {
    class ios_base;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_ios : public std::ios_base {
        class basic_ios;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef ctype<char> __ctype_type;
        typedef num_put<char, ostreambuf_iterator<char, std::char_traits<char> > > __num_put_type;
        typedef num_get<char, istreambuf_iterator<char, std::char_traits<char> > > __num_get_type;
    protected:
    protected:
        basic_ostream<char, std::char_traits<char> > *_M_tie;
        mutable char_type _M_fill;
        mutable bool _M_fill_init;
        basic_streambuf<char, std::char_traits<char> > *_M_streambuf;
        const __ctype_type *_M_ctype;
        const __num_put_type *_M_num_put;
        const __num_get_type *_M_num_get;
    public:
    public:
        void *operator void *() const;
        bool operator!() const;
        iostate rdstate() const;
        void clear(iostate __state);
        void setstate(iostate __state);
        void _M_setstate(iostate __state);
        bool good() const;
        bool eof() const;
        bool fail() const;
        bool bad() const;
        iostate exceptions() const;
        void exceptions(iostate __except);
        basic_ios(basic_streambuf<char, std::char_traits<char> > *__sb);
        virtual void ~basic_ios();
        basic_ostream<char, std::char_traits<char> > *tie() const;
        basic_ostream<char, std::char_traits<char> > *tie(basic_ostream<char, std::char_traits<char> > *__tiestr);
        basic_streambuf<char, std::char_traits<char> > *rdbuf() const;
        basic_streambuf<char, std::char_traits<char> > *rdbuf(basic_streambuf<char, std::char_traits<char> > *__sb);
        std::basic_ios<char> &copyfmt(const std::basic_ios<char> &__rhs);
        char_type fill() const;
        char_type fill(char_type __ch);
        std::locale imbue(const std::locale &__loc);
        char narrow(char_type __c, char __dfault) const;
        char_type widen(char __c) const;
    protected:
    protected:
        basic_ios();
        void init(basic_streambuf<char, std::char_traits<char> > *__sb);
        void _M_cache_locale(const std::locale &__loc);
        inline std::basic_ios<char> &operator=(const std::basic_ios<char> &);
        inline basic_ios(const std::basic_ios<char> &);
    }
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_ios : public std::ios_base {
        class basic_ios;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef ctype<wchar_t> __ctype_type;
        typedef num_put<wchar_t, ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_put_type;
        typedef num_get<wchar_t, istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_get_type;
    protected:
    protected:
        basic_ostream<wchar_t, std::char_traits<wchar_t> > *_M_tie;
        mutable char_type _M_fill;
        mutable bool _M_fill_init;
        basic_streambuf<wchar_t, std::char_traits<wchar_t> > *_M_streambuf;
        const __ctype_type *_M_ctype;
        const __num_put_type *_M_num_put;
        const __num_get_type *_M_num_get;
    public:
    public:
        void *operator void *() const;
        bool operator!() const;
        iostate rdstate() const;
        void clear(iostate __state);
        void setstate(iostate __state);
        void _M_setstate(iostate __state);
        bool good() const;
        bool eof() const;
        bool fail() const;
        bool bad() const;
        iostate exceptions() const;
        void exceptions(iostate __except);
        basic_ios(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        virtual void ~basic_ios();
        basic_ostream<wchar_t, std::char_traits<wchar_t> > *tie() const;
        basic_ostream<wchar_t, std::char_traits<wchar_t> > *tie(basic_ostream<wchar_t, std::char_traits<wchar_t> > *__tiestr);
        basic_streambuf<wchar_t, std::char_traits<wchar_t> > *rdbuf() const;
        basic_streambuf<wchar_t, std::char_traits<wchar_t> > *rdbuf(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        std::basic_ios<wchar_t> &copyfmt(const std::basic_ios<wchar_t> &__rhs);
        char_type fill() const;
        char_type fill(char_type __ch);
        std::locale imbue(const std::locale &__loc);
        char narrow(char_type __c, char __dfault) const;
        char_type widen(char __c) const;
    protected:
    protected:
        basic_ios();
        void init(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        void _M_cache_locale(const std::locale &__loc);
        inline std::basic_ios<wchar_t> &operator=(const std::basic_ios<wchar_t> &);
        inline basic_ios(const std::basic_ios<wchar_t> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_ios;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_streambuf {
        class basic_streambuf;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
    protected:
    protected:
        char_type *_M_in_beg;
        char_type *_M_in_cur;
        char_type *_M_in_end;
        char_type *_M_out_beg;
        char_type *_M_out_cur;
        char_type *_M_out_end;
        std::locale _M_buf_locale;
    public:
    public:
        virtual void ~basic_streambuf();
        std::locale pubimbue(const std::locale &__loc);
        std::locale getloc() const;
        __streambuf_type *pubsetbuf(char_type *__s, streamsize __n);
        pos_type pubseekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        pos_type pubseekpos(pos_type __sp, ios_base::openmode __mode);
        int pubsync();
        streamsize in_avail();
        int_type snextc();
        int_type sbumpc();
        int_type sgetc();
        streamsize sgetn(char_type *__s, streamsize __n);
        int_type sputbackc(char_type __c);
        int_type sungetc();
        int_type sputc(char_type __c);
        streamsize sputn(const char_type *__s, streamsize __n);
    protected:
    protected:
        basic_streambuf();
        char_type *eback() const;
        char_type *gptr() const;
        char_type *egptr() const;
        void gbump(int __n);
        void setg(char_type *__gbeg, char_type *__gnext, char_type *__gend);
        char_type *pbase() const;
        char_type *pptr() const;
        char_type *epptr() const;
        void pbump(int __n);
        void setp(char_type *__pbeg, char_type *__pend);
        virtual void imbue(const std::locale &);
        virtual basic_streambuf<char_type, std::char_traits<char> > *setbuf(char_type *, streamsize);
        virtual pos_type seekoff(off_type, ios_base::seekdir, ios_base::openmode);
        virtual pos_type seekpos(pos_type, ios_base::openmode);
        virtual int sync();
        virtual streamsize showmanyc();
        virtual streamsize xsgetn(char_type *__s, streamsize __n);
        virtual int_type underflow();
        virtual int_type uflow();
        virtual int_type pbackfail(int_type);
        virtual streamsize xsputn(const char_type *__s, streamsize __n);
        virtual int_type overflow(int_type);
    public:
    public:
        void stossc();
        void __safe_gbump(streamsize __n);
        void __safe_pbump(streamsize __n);
    private:
    private:
        basic_streambuf(const __streambuf_type &__sb);
        __streambuf_type &operator=(const __streambuf_type &);
    }
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_streambuf {
        class basic_streambuf;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
    protected:
    protected:
        char_type *_M_in_beg;
        char_type *_M_in_cur;
        char_type *_M_in_end;
        char_type *_M_out_beg;
        char_type *_M_out_cur;
        char_type *_M_out_end;
        std::locale _M_buf_locale;
    public:
    public:
        virtual void ~basic_streambuf();
        std::locale pubimbue(const std::locale &__loc);
        std::locale getloc() const;
        __streambuf_type *pubsetbuf(char_type *__s, streamsize __n);
        pos_type pubseekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        pos_type pubseekpos(pos_type __sp, ios_base::openmode __mode);
        int pubsync();
        streamsize in_avail();
        int_type snextc();
        int_type sbumpc();
        int_type sgetc();
        streamsize sgetn(char_type *__s, streamsize __n);
        int_type sputbackc(char_type __c);
        int_type sungetc();
        int_type sputc(char_type __c);
        streamsize sputn(const char_type *__s, streamsize __n);
    protected:
    protected:
        basic_streambuf();
        char_type *eback() const;
        char_type *gptr() const;
        char_type *egptr() const;
        void gbump(int __n);
        void setg(char_type *__gbeg, char_type *__gnext, char_type *__gend);
        char_type *pbase() const;
        char_type *pptr() const;
        char_type *epptr() const;
        void pbump(int __n);
        void setp(char_type *__pbeg, char_type *__pend);
        virtual void imbue(const std::locale &);
        virtual basic_streambuf<char_type, std::char_traits<wchar_t> > *setbuf(char_type *, streamsize);
        virtual pos_type seekoff(off_type, ios_base::seekdir, ios_base::openmode);
        virtual pos_type seekpos(pos_type, ios_base::openmode);
        virtual int sync();
        virtual streamsize showmanyc();
        virtual streamsize xsgetn(char_type *__s, streamsize __n);
        virtual int_type underflow();
        virtual int_type uflow();
        virtual int_type pbackfail(int_type);
        virtual streamsize xsputn(const char_type *__s, streamsize __n);
        virtual int_type overflow(int_type);
    public:
    public:
        void stossc();
        void __safe_gbump(streamsize __n);
        void __safe_pbump(streamsize __n);
    private:
    private:
        basic_streambuf(const __streambuf_type &__sb);
        __streambuf_type &operator=(const __streambuf_type &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_streambuf;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_istream : virtual public basic_ios<char, std::char_traits<char> > {
        class basic_istream;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef basic_streambuf<char, std::char_traits<char> > __streambuf_type;
        typedef basic_ios<char, std::char_traits<char> > __ios_type;
        typedef basic_istream<char, std::char_traits<char> > __istream_type;
        typedef num_get<char, istreambuf_iterator<char, std::char_traits<char> > > __num_get_type;
        typedef ctype<char> __ctype_type;
    protected:
    protected:
        streamsize _M_gcount;
    public:
    public:
        basic_istream(__streambuf_type *__sb);
        virtual void ~basic_istream();
        class sentry {
            class sentry;
            bool _M_ok;
        public:
        public:
            typedef std::char_traits<char> traits_type;
            typedef basic_streambuf<char, std::char_traits<char> > __streambuf_type;
            typedef basic_istream<char, std::char_traits<char> > __istream_type;
            typedef typename __istream_type::__ctype_type __ctype_type;
            typedef typename char_traits<char>::int_type __int_type;
            sentry(basic_istream<char, std::char_traits<char> > &__is, bool __noskipws);
            bool operator _Bool() const;
        };
        ;
        __istream_type &operator>>(__istream_type &(*__pf)(__istream_type &));
        __istream_type &operator>>(__ios_type &(*__pf)(__ios_type &));
        __istream_type &operator>>(std::ios_base &(*__pf)(std::ios_base &));
        __istream_type &operator>>(bool &__n);
        __istream_type &operator>>(short &__n);
        __istream_type &operator>>(unsigned short &__n);
        __istream_type &operator>>(int &__n);
        __istream_type &operator>>(unsigned int &__n);
        __istream_type &operator>>(long &__n);
        __istream_type &operator>>(unsigned long &__n);
        __istream_type &operator>>(long long &__n);
        __istream_type &operator>>(unsigned long long &__n);
        __istream_type &operator>>(float &__f);
        __istream_type &operator>>(double &__f);
        __istream_type &operator>>(long double &__f);
        __istream_type &operator>>(void *&__p);
        __istream_type &operator>>(__streambuf_type *__sb);
        streamsize gcount() const;
        int_type get();
        __istream_type &get(char_type &__c);
        __istream_type &get(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &get(char_type *__s, streamsize __n);
        __istream_type &get(__streambuf_type &__sb, char_type __delim);
        __istream_type &get(__streambuf_type &__sb);
        __istream_type &getline(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &getline(char_type *__s, streamsize __n);
        __istream_type &ignore();
        __istream_type &ignore(streamsize __n);
        __istream_type &ignore(streamsize __n, int_type __delim);
        int_type peek();
        __istream_type &read(char_type *__s, streamsize __n);
        streamsize readsome(char_type *__s, streamsize __n);
        __istream_type &putback(char_type __c);
        __istream_type &unget();
        int sync();
        pos_type tellg();
        __istream_type &seekg(pos_type);
        __istream_type &seekg(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_istream();
        template <typename _ValueT = unsigned int> __istream_type &_M_extract(unsigned int &__v)template <typename _ValueT = long> __istream_type &_M_extract(long &__v)template <typename _ValueT = long long> __istream_type &_M_extract(long long &__v)template <typename _ValueT = void *> __istream_type &_M_extract(void *&__v)template <typename _ValueT = bool> __istream_type &_M_extract(bool &__v)template <typename _ValueT = unsigned long> __istream_type &_M_extract(unsigned long &__v)template <typename _ValueT = double> __istream_type &_M_extract(double &__v)template <typename _ValueT = unsigned short> __istream_type &_M_extract(unsigned short &__v)template <typename _ValueT = unsigned long long> __istream_type &_M_extract(unsigned long long &__v)template <typename _ValueT = long double> __istream_type &_M_extract(long double &__v)template <typename _ValueT = float> __istream_type &_M_extract(float &__v)template <typename _ValueT> __istream_type &_M_extract(_ValueT &__v);
        inline std::basic_istream<char> &operator=(const std::basic_istream<char> &);
        inline basic_istream(const std::basic_istream<char> &);
    }
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_istream : virtual public basic_ios<wchar_t, std::char_traits<wchar_t> > {
        class basic_istream;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef basic_streambuf<wchar_t, std::char_traits<wchar_t> > __streambuf_type;
        typedef basic_ios<wchar_t, std::char_traits<wchar_t> > __ios_type;
        typedef basic_istream<wchar_t, std::char_traits<wchar_t> > __istream_type;
        typedef num_get<wchar_t, istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_get_type;
        typedef ctype<wchar_t> __ctype_type;
    protected:
    protected:
        streamsize _M_gcount;
    public:
    public:
        basic_istream(__streambuf_type *__sb);
        virtual void ~basic_istream();
        class sentry {
            class sentry;
            bool _M_ok;
        public:
        public:
            typedef std::char_traits<wchar_t> traits_type;
            typedef basic_streambuf<wchar_t, std::char_traits<wchar_t> > __streambuf_type;
            typedef basic_istream<wchar_t, std::char_traits<wchar_t> > __istream_type;
            typedef typename __istream_type::__ctype_type __ctype_type;
            typedef typename char_traits<wchar_t>::int_type __int_type;
            sentry(basic_istream<wchar_t, std::char_traits<wchar_t> > &__is, bool __noskipws);
            bool operator _Bool() const;
        };
        ;
        __istream_type &operator>>(__istream_type &(*__pf)(__istream_type &));
        __istream_type &operator>>(__ios_type &(*__pf)(__ios_type &));
        __istream_type &operator>>(std::ios_base &(*__pf)(std::ios_base &));
        __istream_type &operator>>(bool &__n);
        __istream_type &operator>>(short &__n);
        __istream_type &operator>>(unsigned short &__n);
        __istream_type &operator>>(int &__n);
        __istream_type &operator>>(unsigned int &__n);
        __istream_type &operator>>(long &__n);
        __istream_type &operator>>(unsigned long &__n);
        __istream_type &operator>>(long long &__n);
        __istream_type &operator>>(unsigned long long &__n);
        __istream_type &operator>>(float &__f);
        __istream_type &operator>>(double &__f);
        __istream_type &operator>>(long double &__f);
        __istream_type &operator>>(void *&__p);
        __istream_type &operator>>(__streambuf_type *__sb);
        streamsize gcount() const;
        int_type get();
        __istream_type &get(char_type &__c);
        __istream_type &get(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &get(char_type *__s, streamsize __n);
        __istream_type &get(__streambuf_type &__sb, char_type __delim);
        __istream_type &get(__streambuf_type &__sb);
        __istream_type &getline(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &getline(char_type *__s, streamsize __n);
        __istream_type &ignore();
        __istream_type &ignore(streamsize __n);
        __istream_type &ignore(streamsize __n, int_type __delim);
        int_type peek();
        __istream_type &read(char_type *__s, streamsize __n);
        streamsize readsome(char_type *__s, streamsize __n);
        __istream_type &putback(char_type __c);
        __istream_type &unget();
        int sync();
        pos_type tellg();
        __istream_type &seekg(pos_type);
        __istream_type &seekg(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_istream();
        template <typename _ValueT = unsigned int> __istream_type &_M_extract(unsigned int &__v)template <typename _ValueT = long> __istream_type &_M_extract(long &__v)template <typename _ValueT = long long> __istream_type &_M_extract(long long &__v)template <typename _ValueT = void *> __istream_type &_M_extract(void *&__v)template <typename _ValueT = bool> __istream_type &_M_extract(bool &__v)template <typename _ValueT = unsigned long> __istream_type &_M_extract(unsigned long &__v)template <typename _ValueT = double> __istream_type &_M_extract(double &__v)template <typename _ValueT = unsigned short> __istream_type &_M_extract(unsigned short &__v)template <typename _ValueT = unsigned long long> __istream_type &_M_extract(unsigned long long &__v)template <typename _ValueT = long double> __istream_type &_M_extract(long double &__v)template <typename _ValueT = float> __istream_type &_M_extract(float &__v)template <typename _ValueT> __istream_type &_M_extract(_ValueT &__v);
        inline std::basic_istream<wchar_t> &operator=(const std::basic_istream<wchar_t> &);
        inline basic_istream(const std::basic_istream<wchar_t> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_istream;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_ostream : virtual public basic_ios<char, std::char_traits<char> > {
        class basic_ostream;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef basic_streambuf<char, std::char_traits<char> > __streambuf_type;
        typedef basic_ios<char, std::char_traits<char> > __ios_type;
        typedef basic_ostream<char, std::char_traits<char> > __ostream_type;
        typedef num_put<char, ostreambuf_iterator<char, std::char_traits<char> > > __num_put_type;
        typedef ctype<char> __ctype_type;
        basic_ostream(__streambuf_type *__sb);
        virtual void ~basic_ostream();
        class sentry {
            class sentry;
            bool _M_ok;
            basic_ostream<char, std::char_traits<char> > &_M_os;
        public:
        public:
            sentry(basic_ostream<char, std::char_traits<char> > &__os);
            void ~sentry();
            bool operator _Bool() const;
        };
        ;
        __ostream_type &operator<<(__ostream_type &(*__pf)(__ostream_type &));
        __ostream_type &operator<<(__ios_type &(*__pf)(__ios_type &));
        __ostream_type &operator<<(std::ios_base &(*__pf)(std::ios_base &));
        __ostream_type &operator<<(long __n);
        __ostream_type &operator<<(unsigned long __n);
        __ostream_type &operator<<(bool __n);
        __ostream_type &operator<<(short __n);
        __ostream_type &operator<<(unsigned short __n);
        __ostream_type &operator<<(int __n);
        __ostream_type &operator<<(unsigned int __n);
        __ostream_type &operator<<(long long __n);
        __ostream_type &operator<<(unsigned long long __n);
        __ostream_type &operator<<(double __f);
        __ostream_type &operator<<(float __f);
        __ostream_type &operator<<(long double __f);
        __ostream_type &operator<<(const void *__p);
        __ostream_type &operator<<(__streambuf_type *__sb);
        __ostream_type &put(char_type __c);
        void _M_write(const char_type *__s, streamsize __n);
        __ostream_type &write(const char_type *__s, streamsize __n);
        __ostream_type &flush();
        pos_type tellp();
        __ostream_type &seekp(pos_type);
        __ostream_type &seekp(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_ostream();
        template <typename _ValueT = long> __ostream_type &_M_insert(long __v)template <typename _ValueT = long long> __ostream_type &_M_insert(long long __v)template <typename _ValueT = bool> __ostream_type &_M_insert(bool __v)template <typename _ValueT = unsigned long> __ostream_type &_M_insert(unsigned long __v)template <typename _ValueT = double> __ostream_type &_M_insert(double __v)template <typename _ValueT = unsigned long long> __ostream_type &_M_insert(unsigned long long __v)template <typename _ValueT = long double> __ostream_type &_M_insert(long double __v)template <typename _ValueT = const void *> __ostream_type &_M_insert(const void *__v)template <typename _ValueT> __ostream_type &_M_insert(_ValueT __v);
        inline std::basic_ostream<char> &operator=(const std::basic_ostream<char> &);
        inline basic_ostream(const std::basic_ostream<char> &);
    }
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_ostream : virtual public basic_ios<wchar_t, std::char_traits<wchar_t> > {
        class basic_ostream;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef basic_streambuf<wchar_t, std::char_traits<wchar_t> > __streambuf_type;
        typedef basic_ios<wchar_t, std::char_traits<wchar_t> > __ios_type;
        typedef basic_ostream<wchar_t, std::char_traits<wchar_t> > __ostream_type;
        typedef num_put<wchar_t, ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_put_type;
        typedef ctype<wchar_t> __ctype_type;
        basic_ostream(__streambuf_type *__sb);
        virtual void ~basic_ostream();
        class sentry {
            class sentry;
            bool _M_ok;
            basic_ostream<wchar_t, std::char_traits<wchar_t> > &_M_os;
        public:
        public:
            sentry(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__os);
            void ~sentry();
            bool operator _Bool() const;
        };
        ;
        __ostream_type &operator<<(__ostream_type &(*__pf)(__ostream_type &));
        __ostream_type &operator<<(__ios_type &(*__pf)(__ios_type &));
        __ostream_type &operator<<(std::ios_base &(*__pf)(std::ios_base &));
        __ostream_type &operator<<(long __n);
        __ostream_type &operator<<(unsigned long __n);
        __ostream_type &operator<<(bool __n);
        __ostream_type &operator<<(short __n);
        __ostream_type &operator<<(unsigned short __n);
        __ostream_type &operator<<(int __n);
        __ostream_type &operator<<(unsigned int __n);
        __ostream_type &operator<<(long long __n);
        __ostream_type &operator<<(unsigned long long __n);
        __ostream_type &operator<<(double __f);
        __ostream_type &operator<<(float __f);
        __ostream_type &operator<<(long double __f);
        __ostream_type &operator<<(const void *__p);
        __ostream_type &operator<<(__streambuf_type *__sb);
        __ostream_type &put(char_type __c);
        void _M_write(const char_type *__s, streamsize __n);
        __ostream_type &write(const char_type *__s, streamsize __n);
        __ostream_type &flush();
        pos_type tellp();
        __ostream_type &seekp(pos_type);
        __ostream_type &seekp(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_ostream();
        template <typename _ValueT = long> __ostream_type &_M_insert(long __v)template <typename _ValueT = long long> __ostream_type &_M_insert(long long __v)template <typename _ValueT = bool> __ostream_type &_M_insert(bool __v)template <typename _ValueT = unsigned long> __ostream_type &_M_insert(unsigned long __v)template <typename _ValueT = double> __ostream_type &_M_insert(double __v)template <typename _ValueT = unsigned long long> __ostream_type &_M_insert(unsigned long long __v)template <typename _ValueT = long double> __ostream_type &_M_insert(long double __v)template <typename _ValueT = const void *> __ostream_type &_M_insert(const void *__v)template <typename _ValueT> __ostream_type &_M_insert(_ValueT __v);
        inline std::basic_ostream<wchar_t> &operator=(const std::basic_ostream<wchar_t> &);
        inline basic_ostream(const std::basic_ostream<wchar_t> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_ostream;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_iostream : public basic_istream<char, std::char_traits<char> >, public basic_ostream<char, std::char_traits<char> > {
        class basic_iostream;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef basic_istream<char, std::char_traits<char> > __istream_type;
        typedef basic_ostream<char, std::char_traits<char> > __ostream_type;
        basic_iostream(basic_streambuf<char, std::char_traits<char> > *__sb);
        virtual void ~basic_iostream();
    protected:
    protected:
        basic_iostream();
        inline std::basic_iostream<char> &operator=(const std::basic_iostream<char> &);
        inline basic_iostream(const std::basic_iostream<char> &);
    }
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_iostream : public basic_istream<wchar_t, std::char_traits<wchar_t> >, public basic_ostream<wchar_t, std::char_traits<wchar_t> > {
        class basic_iostream;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef basic_istream<wchar_t, std::char_traits<wchar_t> > __istream_type;
        typedef basic_ostream<wchar_t, std::char_traits<wchar_t> > __ostream_type;
        basic_iostream(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        virtual void ~basic_iostream();
    protected:
    protected:
        basic_iostream();
        inline std::basic_iostream<wchar_t> &operator=(const std::basic_iostream<wchar_t> &);
        inline basic_iostream(const std::basic_iostream<wchar_t> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_iostream;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> class basic_stringbuf : public basic_streambuf<wchar_t, std::char_traits<wchar_t> > {
        class basic_stringbuf;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        typedef basic_string<char_type, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef typename __string_type::size_type __size_type;
    protected:
    protected:
        ios_base::openmode _M_mode;
        __string_type _M_string;
    public:
    public:
        basic_stringbuf(ios_base::openmode __mode);
        basic_stringbuf(const __string_type &__str, ios_base::openmode __mode);
        __string_type str() const;
        void str(const __string_type &__s);
    protected:
    protected:
        void _M_stringbuf_init(ios_base::openmode __mode);
        virtual streamsize showmanyc();
        virtual int_type underflow();
        virtual int_type pbackfail(int_type __c);
        virtual int_type overflow(int_type __c);
        virtual __streambuf_type *setbuf(char_type *__s, streamsize __n);
        virtual pos_type seekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        virtual pos_type seekpos(pos_type __sp, ios_base::openmode __mode);
        void _M_sync(char_type *__base, __size_type __i, __size_type __o);
        void _M_update_egptr();
        void _M_pbump(char_type *__pbeg, char_type *__pend, off_type __off);
        inline std::basic_stringbuf<wchar_t> &operator=(const std::basic_stringbuf<wchar_t> &);
        inline void ~basic_stringbuf();
        inline basic_stringbuf(const std::basic_stringbuf<wchar_t> &);
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> class basic_stringbuf : public basic_streambuf<char, std::char_traits<char> > {
        class basic_stringbuf;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        typedef basic_string<char_type, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef typename __string_type::size_type __size_type;
    protected:
    protected:
        ios_base::openmode _M_mode;
        __string_type _M_string;
    public:
    public:
        basic_stringbuf(ios_base::openmode __mode);
        basic_stringbuf(const __string_type &__str, ios_base::openmode __mode);
        __string_type str() const;
        void str(const __string_type &__s);
    protected:
    protected:
        void _M_stringbuf_init(ios_base::openmode __mode);
        virtual streamsize showmanyc();
        virtual int_type underflow();
        virtual int_type pbackfail(int_type __c);
        virtual int_type overflow(int_type __c);
        virtual __streambuf_type *setbuf(char_type *__s, streamsize __n);
        virtual pos_type seekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        virtual pos_type seekpos(pos_type __sp, ios_base::openmode __mode);
        void _M_sync(char_type *__base, __size_type __i, __size_type __o);
        void _M_update_egptr();
        void _M_pbump(char_type *__pbeg, char_type *__pend, off_type __off);
        inline std::basic_stringbuf<char> &operator=(const std::basic_stringbuf<char> &);
        inline void ~basic_stringbuf();
        inline basic_stringbuf(const std::basic_stringbuf<char> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>, typename _Alloc = allocator<_CharT>> class basic_stringbuf;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> class basic_istringstream : public basic_istream<wchar_t, std::char_traits<wchar_t> > {
        class basic_istringstream;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __stringbuf_type;
        typedef basic_istream<char_type, traits_type> __istream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_istringstream(ios_base::openmode __mode);
        basic_istringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_istringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_istringstream<wchar_t> &operator=(const std::basic_istringstream<wchar_t> &);
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> class basic_istringstream : public basic_istream<char, std::char_traits<char> > {
        class basic_istringstream;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<char, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef basic_stringbuf<char, std::char_traits<char>, std::allocator<char> > __stringbuf_type;
        typedef basic_istream<char_type, traits_type> __istream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_istringstream(ios_base::openmode __mode);
        basic_istringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_istringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_istringstream<char> &operator=(const std::basic_istringstream<char> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>, typename _Alloc = allocator<_CharT>> class basic_istringstream;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> class basic_ostringstream : public basic_ostream<wchar_t, std::char_traits<wchar_t> > {
        class basic_ostringstream;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __stringbuf_type;
        typedef basic_ostream<char_type, traits_type> __ostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_ostringstream(ios_base::openmode __mode);
        basic_ostringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_ostringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_ostringstream<wchar_t> &operator=(const std::basic_ostringstream<wchar_t> &);
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> class basic_ostringstream : public basic_ostream<char, std::char_traits<char> > {
        class basic_ostringstream;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<char, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef basic_stringbuf<char, std::char_traits<char>, std::allocator<char> > __stringbuf_type;
        typedef basic_ostream<char_type, traits_type> __ostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_ostringstream(ios_base::openmode __mode);
        basic_ostringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_ostringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_ostringstream<char> &operator=(const std::basic_ostringstream<char> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>, typename _Alloc = allocator<_CharT>> class basic_ostringstream;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> class basic_stringstream : public basic_iostream<wchar_t, std::char_traits<wchar_t> > {
        class basic_stringstream;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __stringbuf_type;
        typedef basic_iostream<char_type, traits_type> __iostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_stringstream(ios_base::openmode __m);
        basic_stringstream(const __string_type &__str, ios_base::openmode __m);
        void ~basic_stringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_stringstream<wchar_t> &operator=(const std::basic_stringstream<wchar_t> &);
        inline basic_stringstream(const std::basic_stringstream<wchar_t> &);
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> class basic_stringstream : public basic_iostream<char, std::char_traits<char> > {
        class basic_stringstream;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<char, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef basic_stringbuf<char, std::char_traits<char>, std::allocator<char> > __stringbuf_type;
        typedef basic_iostream<char_type, traits_type> __iostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_stringstream(ios_base::openmode __m);
        basic_stringstream(const __string_type &__str, ios_base::openmode __m);
        void ~basic_stringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_stringstream<char> &operator=(const std::basic_stringstream<char> &);
        inline basic_stringstream(const std::basic_stringstream<char> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>, typename _Alloc = allocator<_CharT>> class basic_stringstream;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_filebuf
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_filebuf
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_filebuf;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_ifstream
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_ifstream
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_ifstream;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_ofstream
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_ofstream
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_ofstream;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_fstream
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_fstream
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_fstream;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class istreambuf_iterator
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class istreambuf_iterator
template <typename _CharT, typename _Traits = char_traits<_CharT>> class istreambuf_iterator;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class ostreambuf_iterator
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class ostreambuf_iterator
template <typename _CharT, typename _Traits = char_traits<_CharT>> class ostreambuf_iterator;
    typedef basic_ios<char> ios;
    typedef basic_streambuf<char> streambuf;
    typedef basic_istream<char> istream;
    typedef basic_ostream<char> ostream;
    typedef basic_iostream<char> iostream;
    typedef basic_stringbuf<char> stringbuf;
    typedef basic_istringstream<char> istringstream;
    typedef basic_ostringstream<char> ostringstream;
    typedef basic_stringstream<char> stringstream;
    typedef basic_filebuf<char> filebuf;
    typedef basic_ifstream<char> ifstream;
    typedef basic_ofstream<char> ofstream;
    typedef basic_fstream<char> fstream;
    typedef basic_ios<wchar_t> wios;
    typedef basic_streambuf<wchar_t> wstreambuf;
    typedef basic_istream<wchar_t> wistream;
    typedef basic_ostream<wchar_t> wostream;
    typedef basic_iostream<wchar_t> wiostream;
    typedef basic_stringbuf<wchar_t> wstringbuf;
    typedef basic_istringstream<wchar_t> wistringstream;
    typedef basic_ostringstream<wchar_t> wostringstream;
    typedef basic_stringstream<wchar_t> wstringstream;
    typedef basic_filebuf<wchar_t> wfilebuf;
    typedef basic_ifstream<wchar_t> wifstream;
    typedef basic_ofstream<wchar_t> wofstream;
    typedef basic_fstream<wchar_t> wfstream;
}
extern "C" {
    enum  {
        _ISupper = (ImplicitCastExpr 0x9be5d98 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0x9bdf6e0 <col:23, col:77> 'int'
    (ConditionalOperator 0x9bdf6c0 <col:24, col:76> 'int'
      (BinaryOperator 0x9bdf528 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0x9bdf4f8 <col:24, col:28> 'int'
          (IntegerLiteral 0x9bdf4e0 <line:50:22> 'int' 0))
        (IntegerLiteral 0x9bdf510 <line:45:32> 'int' 8))
      (ParenExpr 0x9bdf5e8 <col:36, col:54> 'int'
        (BinaryOperator 0x9bdf5d0 <col:37, col:53> 'int' '<<'
          (ParenExpr 0x9bdf5a0 <col:37, col:48> 'int'
            (BinaryOperator 0x9bdf588 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0x9bdf540 <col:38> 'int' 1)
              (ParenExpr 0x9bdf570 <col:43, col:47> 'int'
                (IntegerLiteral 0x9bdf558 <line:50:22> 'int' 0))))
          (IntegerLiteral 0x9bdf5b8 <line:45:53> 'int' 8)))
      (ParenExpr 0x9bdf6a8 <col:58, col:76> 'int'
        (BinaryOperator 0x9bdf690 <col:59, col:75> 'int' '>>'
          (ParenExpr 0x9bdf660 <col:59, col:70> 'int'
            (BinaryOperator 0x9bdf648 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0x9bdf600 <col:60> 'int' 1)
              (ParenExpr 0x9bdf630 <col:65, col:69> 'int'
                (IntegerLiteral 0x9bdf618 <line:50:22> 'int' 0))))
          (IntegerLiteral 0x9bdf678 <line:45:75> 'int' 8))))))
,
        _ISlower = (ImplicitCastExpr 0x9be5da8 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0x9bdf938 <col:23, col:77> 'int'
    (ConditionalOperator 0x9bdf918 <col:24, col:76> 'int'
      (BinaryOperator 0x9bdf780 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0x9bdf750 <col:24, col:28> 'int'
          (IntegerLiteral 0x9bdf738 <line:51:22> 'int' 1))
        (IntegerLiteral 0x9bdf768 <line:45:32> 'int' 8))
      (ParenExpr 0x9bdf840 <col:36, col:54> 'int'
        (BinaryOperator 0x9bdf828 <col:37, col:53> 'int' '<<'
          (ParenExpr 0x9bdf7f8 <col:37, col:48> 'int'
            (BinaryOperator 0x9bdf7e0 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0x9bdf798 <col:38> 'int' 1)
              (ParenExpr 0x9bdf7c8 <col:43, col:47> 'int'
                (IntegerLiteral 0x9bdf7b0 <line:51:22> 'int' 1))))
          (IntegerLiteral 0x9bdf810 <line:45:53> 'int' 8)))
      (ParenExpr 0x9bdf900 <col:58, col:76> 'int'
        (BinaryOperator 0x9bdf8e8 <col:59, col:75> 'int' '>>'
          (ParenExpr 0x9bdf8b8 <col:59, col:70> 'int'
            (BinaryOperator 0x9bdf8a0 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0x9bdf858 <col:60> 'int' 1)
              (ParenExpr 0x9bdf888 <col:65, col:69> 'int'
                (IntegerLiteral 0x9bdf870 <line:51:22> 'int' 1))))
          (IntegerLiteral 0x9bdf8d0 <line:45:75> 'int' 8))))))
,
        _ISalpha = (ImplicitCastExpr 0x9be5db8 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0x9bdfb88 <col:23, col:77> 'int'
    (ConditionalOperator 0x9bdfb68 <col:24, col:76> 'int'
      (BinaryOperator 0x9bdf9d0 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0x9bdf9a0 <col:24, col:28> 'int'
          (IntegerLiteral 0x9bdf988 <line:52:22> 'int' 2))
        (IntegerLiteral 0x9bdf9b8 <line:45:32> 'int' 8))
      (ParenExpr 0x9bdfa90 <col:36, col:54> 'int'
        (BinaryOperator 0x9bdfa78 <col:37, col:53> 'int' '<<'
          (ParenExpr 0x9bdfa48 <col:37, col:48> 'int'
            (BinaryOperator 0x9bdfa30 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0x9bdf9e8 <col:38> 'int' 1)
              (ParenExpr 0x9bdfa18 <col:43, col:47> 'int'
                (IntegerLiteral 0x9bdfa00 <line:52:22> 'int' 2))))
          (IntegerLiteral 0x9bdfa60 <line:45:53> 'int' 8)))
      (ParenExpr 0x9bdfb50 <col:58, col:76> 'int'
        (BinaryOperator 0x9bdfb38 <col:59, col:75> 'int' '>>'
          (ParenExpr 0x9bdfb08 <col:59, col:70> 'int'
            (BinaryOperator 0x9bdfaf0 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0x9bdfaa8 <col:60> 'int' 1)
              (ParenExpr 0x9bdfad8 <col:65, col:69> 'int'
                (IntegerLiteral 0x9bdfac0 <line:52:22> 'int' 2))))
          (IntegerLiteral 0x9bdfb20 <line:45:75> 'int' 8))))))
,
        _ISdigit = (ImplicitCastExpr 0x9be5dc8 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0x9bdfdd8 <col:23, col:77> 'int'
    (ConditionalOperator 0x9bdfdb8 <col:24, col:76> 'int'
      (BinaryOperator 0x9bdfc20 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0x9bdfbf0 <col:24, col:28> 'int'
          (IntegerLiteral 0x9bdfbd8 <line:53:22> 'int' 3))
        (IntegerLiteral 0x9bdfc08 <line:45:32> 'int' 8))
      (ParenExpr 0x9bdfce0 <col:36, col:54> 'int'
        (BinaryOperator 0x9bdfcc8 <col:37, col:53> 'int' '<<'
          (ParenExpr 0x9bdfc98 <col:37, col:48> 'int'
            (BinaryOperator 0x9bdfc80 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0x9bdfc38 <col:38> 'int' 1)
              (ParenExpr 0x9bdfc68 <col:43, col:47> 'int'
                (IntegerLiteral 0x9bdfc50 <line:53:22> 'int' 3))))
          (IntegerLiteral 0x9bdfcb0 <line:45:53> 'int' 8)))
      (ParenExpr 0x9bdfda0 <col:58, col:76> 'int'
        (BinaryOperator 0x9bdfd88 <col:59, col:75> 'int' '>>'
          (ParenExpr 0x9bdfd58 <col:59, col:70> 'int'
            (BinaryOperator 0x9bdfd40 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0x9bdfcf8 <col:60> 'int' 1)
              (ParenExpr 0x9bdfd28 <col:65, col:69> 'int'
                (IntegerLiteral 0x9bdfd10 <line:53:22> 'int' 3))))
          (IntegerLiteral 0x9bdfd70 <line:45:75> 'int' 8))))))
,
        _ISxdigit = (ImplicitCastExpr 0x9be5dd8 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0x9be4d10 <col:23, col:77> 'int'
    (ConditionalOperator 0x9be4cf0 <col:24, col:76> 'int'
      (BinaryOperator 0x9be4b58 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0x9bdfe40 <col:24, col:28> 'int'
          (IntegerLiteral 0x9bdfe28 <line:54:23> 'int' 4))
        (IntegerLiteral 0x9be4b40 <line:45:32> 'int' 8))
      (ParenExpr 0x9be4c18 <col:36, col:54> 'int'
        (BinaryOperator 0x9be4c00 <col:37, col:53> 'int' '<<'
          (ParenExpr 0x9be4bd0 <col:37, col:48> 'int'
            (BinaryOperator 0x9be4bb8 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0x9be4b70 <col:38> 'int' 1)
              (ParenExpr 0x9be4ba0 <col:43, col:47> 'int'
                (IntegerLiteral 0x9be4b88 <line:54:23> 'int' 4))))
          (IntegerLiteral 0x9be4be8 <line:45:53> 'int' 8)))
      (ParenExpr 0x9be4cd8 <col:58, col:76> 'int'
        (BinaryOperator 0x9be4cc0 <col:59, col:75> 'int' '>>'
          (ParenExpr 0x9be4c90 <col:59, col:70> 'int'
            (BinaryOperator 0x9be4c78 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0x9be4c30 <col:60> 'int' 1)
              (ParenExpr 0x9be4c60 <col:65, col:69> 'int'
                (IntegerLiteral 0x9be4c48 <line:54:23> 'int' 4))))
          (IntegerLiteral 0x9be4ca8 <line:45:75> 'int' 8))))))
,
        _ISspace = (ImplicitCastExpr 0x9be5de8 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0x9be4f68 <col:23, col:77> 'int'
    (ConditionalOperator 0x9be4f48 <col:24, col:76> 'int'
      (BinaryOperator 0x9be4db0 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0x9be4d80 <col:24, col:28> 'int'
          (IntegerLiteral 0x9be4d68 <line:55:22> 'int' 5))
        (IntegerLiteral 0x9be4d98 <line:45:32> 'int' 8))
      (ParenExpr 0x9be4e70 <col:36, col:54> 'int'
        (BinaryOperator 0x9be4e58 <col:37, col:53> 'int' '<<'
          (ParenExpr 0x9be4e28 <col:37, col:48> 'int'
            (BinaryOperator 0x9be4e10 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0x9be4dc8 <col:38> 'int' 1)
              (ParenExpr 0x9be4df8 <col:43, col:47> 'int'
                (IntegerLiteral 0x9be4de0 <line:55:22> 'int' 5))))
          (IntegerLiteral 0x9be4e40 <line:45:53> 'int' 8)))
      (ParenExpr 0x9be4f30 <col:58, col:76> 'int'
        (BinaryOperator 0x9be4f18 <col:59, col:75> 'int' '>>'
          (ParenExpr 0x9be4ee8 <col:59, col:70> 'int'
            (BinaryOperator 0x9be4ed0 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0x9be4e88 <col:60> 'int' 1)
              (ParenExpr 0x9be4eb8 <col:65, col:69> 'int'
                (IntegerLiteral 0x9be4ea0 <line:55:22> 'int' 5))))
          (IntegerLiteral 0x9be4f00 <line:45:75> 'int' 8))))))
,
        _ISprint = (ImplicitCastExpr 0x9be5df8 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0x9be51b8 <col:23, col:77> 'int'
    (ConditionalOperator 0x9be5198 <col:24, col:76> 'int'
      (BinaryOperator 0x9be5000 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0x9be4fd0 <col:24, col:28> 'int'
          (IntegerLiteral 0x9be4fb8 <line:56:22> 'int' 6))
        (IntegerLiteral 0x9be4fe8 <line:45:32> 'int' 8))
      (ParenExpr 0x9be50c0 <col:36, col:54> 'int'
        (BinaryOperator 0x9be50a8 <col:37, col:53> 'int' '<<'
          (ParenExpr 0x9be5078 <col:37, col:48> 'int'
            (BinaryOperator 0x9be5060 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0x9be5018 <col:38> 'int' 1)
              (ParenExpr 0x9be5048 <col:43, col:47> 'int'
                (IntegerLiteral 0x9be5030 <line:56:22> 'int' 6))))
          (IntegerLiteral 0x9be5090 <line:45:53> 'int' 8)))
      (ParenExpr 0x9be5180 <col:58, col:76> 'int'
        (BinaryOperator 0x9be5168 <col:59, col:75> 'int' '>>'
          (ParenExpr 0x9be5138 <col:59, col:70> 'int'
            (BinaryOperator 0x9be5120 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0x9be50d8 <col:60> 'int' 1)
              (ParenExpr 0x9be5108 <col:65, col:69> 'int'
                (IntegerLiteral 0x9be50f0 <line:56:22> 'int' 6))))
          (IntegerLiteral 0x9be5150 <line:45:75> 'int' 8))))))
,
        _ISgraph = (ImplicitCastExpr 0x9be5e08 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0x9be5408 <col:23, col:77> 'int'
    (ConditionalOperator 0x9be53e8 <col:24, col:76> 'int'
      (BinaryOperator 0x9be5250 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0x9be5220 <col:24, col:28> 'int'
          (IntegerLiteral 0x9be5208 <line:57:22> 'int' 7))
        (IntegerLiteral 0x9be5238 <line:45:32> 'int' 8))
      (ParenExpr 0x9be5310 <col:36, col:54> 'int'
        (BinaryOperator 0x9be52f8 <col:37, col:53> 'int' '<<'
          (ParenExpr 0x9be52c8 <col:37, col:48> 'int'
            (BinaryOperator 0x9be52b0 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0x9be5268 <col:38> 'int' 1)
              (ParenExpr 0x9be5298 <col:43, col:47> 'int'
                (IntegerLiteral 0x9be5280 <line:57:22> 'int' 7))))
          (IntegerLiteral 0x9be52e0 <line:45:53> 'int' 8)))
      (ParenExpr 0x9be53d0 <col:58, col:76> 'int'
        (BinaryOperator 0x9be53b8 <col:59, col:75> 'int' '>>'
          (ParenExpr 0x9be5388 <col:59, col:70> 'int'
            (BinaryOperator 0x9be5370 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0x9be5328 <col:60> 'int' 1)
              (ParenExpr 0x9be5358 <col:65, col:69> 'int'
                (IntegerLiteral 0x9be5340 <line:57:22> 'int' 7))))
          (IntegerLiteral 0x9be53a0 <line:45:75> 'int' 8))))))
,
        _ISblank = (ImplicitCastExpr 0x9be5e18 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0x9be5658 <col:23, col:77> 'int'
    (ConditionalOperator 0x9be5638 <col:24, col:76> 'int'
      (BinaryOperator 0x9be54a0 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0x9be5470 <col:24, col:28> 'int'
          (IntegerLiteral 0x9be5458 <line:58:22> 'int' 8))
        (IntegerLiteral 0x9be5488 <line:45:32> 'int' 8))
      (ParenExpr 0x9be5560 <col:36, col:54> 'int'
        (BinaryOperator 0x9be5548 <col:37, col:53> 'int' '<<'
          (ParenExpr 0x9be5518 <col:37, col:48> 'int'
            (BinaryOperator 0x9be5500 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0x9be54b8 <col:38> 'int' 1)
              (ParenExpr 0x9be54e8 <col:43, col:47> 'int'
                (IntegerLiteral 0x9be54d0 <line:58:22> 'int' 8))))
          (IntegerLiteral 0x9be5530 <line:45:53> 'int' 8)))
      (ParenExpr 0x9be5620 <col:58, col:76> 'int'
        (BinaryOperator 0x9be5608 <col:59, col:75> 'int' '>>'
          (ParenExpr 0x9be55d8 <col:59, col:70> 'int'
            (BinaryOperator 0x9be55c0 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0x9be5578 <col:60> 'int' 1)
              (ParenExpr 0x9be55a8 <col:65, col:69> 'int'
                (IntegerLiteral 0x9be5590 <line:58:22> 'int' 8))))
          (IntegerLiteral 0x9be55f0 <line:45:75> 'int' 8))))))
,
        _IScntrl = (ImplicitCastExpr 0x9be5e28 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0x9be58a8 <col:23, col:77> 'int'
    (ConditionalOperator 0x9be5888 <col:24, col:76> 'int'
      (BinaryOperator 0x9be56f0 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0x9be56c0 <col:24, col:28> 'int'
          (IntegerLiteral 0x9be56a8 <line:59:22> 'int' 9))
        (IntegerLiteral 0x9be56d8 <line:45:32> 'int' 8))
      (ParenExpr 0x9be57b0 <col:36, col:54> 'int'
        (BinaryOperator 0x9be5798 <col:37, col:53> 'int' '<<'
          (ParenExpr 0x9be5768 <col:37, col:48> 'int'
            (BinaryOperator 0x9be5750 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0x9be5708 <col:38> 'int' 1)
              (ParenExpr 0x9be5738 <col:43, col:47> 'int'
                (IntegerLiteral 0x9be5720 <line:59:22> 'int' 9))))
          (IntegerLiteral 0x9be5780 <line:45:53> 'int' 8)))
      (ParenExpr 0x9be5870 <col:58, col:76> 'int'
        (BinaryOperator 0x9be5858 <col:59, col:75> 'int' '>>'
          (ParenExpr 0x9be5828 <col:59, col:70> 'int'
            (BinaryOperator 0x9be5810 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0x9be57c8 <col:60> 'int' 1)
              (ParenExpr 0x9be57f8 <col:65, col:69> 'int'
                (IntegerLiteral 0x9be57e0 <line:59:22> 'int' 9))))
          (IntegerLiteral 0x9be5840 <line:45:75> 'int' 8))))))
,
        _ISpunct = (ImplicitCastExpr 0x9be5e38 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0x9be5af8 <col:23, col:77> 'int'
    (ConditionalOperator 0x9be5ad8 <col:24, col:76> 'int'
      (BinaryOperator 0x9be5940 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0x9be5910 <col:24, col:28> 'int'
          (IntegerLiteral 0x9be58f8 <line:60:22> 'int' 10))
        (IntegerLiteral 0x9be5928 <line:45:32> 'int' 8))
      (ParenExpr 0x9be5a00 <col:36, col:54> 'int'
        (BinaryOperator 0x9be59e8 <col:37, col:53> 'int' '<<'
          (ParenExpr 0x9be59b8 <col:37, col:48> 'int'
            (BinaryOperator 0x9be59a0 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0x9be5958 <col:38> 'int' 1)
              (ParenExpr 0x9be5988 <col:43, col:47> 'int'
                (IntegerLiteral 0x9be5970 <line:60:22> 'int' 10))))
          (IntegerLiteral 0x9be59d0 <line:45:53> 'int' 8)))
      (ParenExpr 0x9be5ac0 <col:58, col:76> 'int'
        (BinaryOperator 0x9be5aa8 <col:59, col:75> 'int' '>>'
          (ParenExpr 0x9be5a78 <col:59, col:70> 'int'
            (BinaryOperator 0x9be5a60 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0x9be5a18 <col:60> 'int' 1)
              (ParenExpr 0x9be5a48 <col:65, col:69> 'int'
                (IntegerLiteral 0x9be5a30 <line:60:22> 'int' 10))))
          (IntegerLiteral 0x9be5a90 <line:45:75> 'int' 8))))))
,
        _ISalnum = (ImplicitCastExpr 0x9be5e48 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0x9be5d48 <col:23, col:77> 'int'
    (ConditionalOperator 0x9be5d28 <col:24, col:76> 'int'
      (BinaryOperator 0x9be5b90 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0x9be5b60 <col:24, col:28> 'int'
          (IntegerLiteral 0x9be5b48 <line:61:22> 'int' 11))
        (IntegerLiteral 0x9be5b78 <line:45:32> 'int' 8))
      (ParenExpr 0x9be5c50 <col:36, col:54> 'int'
        (BinaryOperator 0x9be5c38 <col:37, col:53> 'int' '<<'
          (ParenExpr 0x9be5c08 <col:37, col:48> 'int'
            (BinaryOperator 0x9be5bf0 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0x9be5ba8 <col:38> 'int' 1)
              (ParenExpr 0x9be5bd8 <col:43, col:47> 'int'
                (IntegerLiteral 0x9be5bc0 <line:61:22> 'int' 11))))
          (IntegerLiteral 0x9be5c20 <line:45:53> 'int' 8)))
      (ParenExpr 0x9be5d10 <col:58, col:76> 'int'
        (BinaryOperator 0x9be5cf8 <col:59, col:75> 'int' '>>'
          (ParenExpr 0x9be5cc8 <col:59, col:70> 'int'
            (BinaryOperator 0x9be5cb0 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0x9be5c68 <col:60> 'int' 1)
              (ParenExpr 0x9be5c98 <col:65, col:69> 'int'
                (IntegerLiteral 0x9be5c80 <line:61:22> 'int' 11))))
          (IntegerLiteral 0x9be5ce0 <line:45:75> 'int' 8))))))

    };
    extern const unsigned short **__ctype_b_loc() throw();
    extern const __int32_t **__ctype_tolower_loc() throw();
    extern const __int32_t **__ctype_toupper_loc() throw();
    extern int isalnum(int) throw();
    extern int isalpha(int) throw();
    extern int iscntrl(int) throw();
    extern int isdigit(int) throw();
    extern int islower(int) throw();
    extern int isgraph(int) throw();
    extern int isprint(int) throw();
    extern int ispunct(int) throw();
    extern int isspace(int) throw();
    extern int isupper(int) throw();
    extern int isxdigit(int) throw();
    extern int tolower(int __c) throw();
    extern int toupper(int __c) throw();
    extern int isblank(int) throw();
    extern int isctype(int __c, int __mask) throw();
    extern int isascii(int __c) throw();
    extern int toascii(int __c) throw();
    extern int _toupper(int) throw();
    extern int _tolower(int) throw();
    extern int isalnum_l(int, __locale_t) throw();
    extern int isalpha_l(int, __locale_t) throw();
    extern int iscntrl_l(int, __locale_t) throw();
    extern int isdigit_l(int, __locale_t) throw();
    extern int islower_l(int, __locale_t) throw();
    extern int isgraph_l(int, __locale_t) throw();
    extern int isprint_l(int, __locale_t) throw();
    extern int ispunct_l(int, __locale_t) throw();
    extern int isspace_l(int, __locale_t) throw();
    extern int isupper_l(int, __locale_t) throw();
    extern int isxdigit_l(int, __locale_t) throw();
    extern int isblank_l(int, __locale_t) throw();
    extern int __tolower_l(int __c, __locale_t __l) throw();
    extern int tolower_l(int __c, __locale_t __l) throw();
    extern int __toupper_l(int __c, __locale_t __l) throw();
    extern int toupper_l(int __c, __locale_t __l) throw();
}
namespace std {
    using ::isalnum;
    ;
    using ::isalpha;
    ;
    using ::iscntrl;
    ;
    using ::isdigit;
    ;
    using ::isgraph;
    ;
    using ::islower;
    ;
    using ::isprint;
    ;
    using ::ispunct;
    ;
    using ::isspace;
    ;
    using ::isupper;
    ;
    using ::isxdigit;
    ;
    using ::tolower;
    ;
    using ::toupper;
    ;
}
namespace std {
    class locale;
    template <typename _Facet = std::collate<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::ctype<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_get<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_put<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_get<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::numpunct<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_put<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::numpunct<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::ctype<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::collate<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet> bool has_facet(const std::locale &) throw();
    template <typename _Facet = std::collate<wchar_t>> const std::collate<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::ctype<char>> const std::ctype<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_get<wchar_t>> const std::num_get<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_put<char>> const std::num_put<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_get<char>> const std::num_get<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::numpunct<wchar_t>> const std::numpunct<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_put<wchar_t>> const std::num_put<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::numpunct<char>> const std::numpunct<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::ctype<wchar_t>> const std::ctype<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::collate<char>> const std::collate<char> &use_facet(const std::locale &__loc)template <typename _Facet> const _Facet &use_facet(const std::locale &);
    template <typename _CharT> bool isspace(_CharT, const std::locale &);
    template <typename _CharT> bool isprint(_CharT, const std::locale &);
    template <typename _CharT> bool iscntrl(_CharT, const std::locale &);
    template <typename _CharT> bool isupper(_CharT, const std::locale &);
    template <typename _CharT> bool islower(_CharT, const std::locale &);
    template <typename _CharT> bool isalpha(_CharT, const std::locale &);
    template <typename _CharT> bool isdigit(_CharT, const std::locale &);
    template <typename _CharT> bool ispunct(_CharT, const std::locale &);
    template <typename _CharT> bool isxdigit(_CharT, const std::locale &);
    template <typename _CharT> bool isalnum(_CharT, const std::locale &);
    template <typename _CharT> bool isgraph(_CharT, const std::locale &);
    template <typename _CharT> _CharT toupper(_CharT, const std::locale &);
    template <typename _CharT> _CharT tolower(_CharT, const std::locale &);
    class ctype_base;
    template <typename _CharT = wchar_t> class ctype : public __ctype_abstract_base<wchar_t> {
        class ctype;
    public:
    public:
        typedef wchar_t char_type;
        typedef wctype_t __wmask_type;
    protected:
    protected:
        __c_locale _M_c_locale_ctype;
        bool _M_narrow_ok;
        char _M_narrow[128];
        wint_t _M_widen[256];
        mask _M_bit[16];
        __wmask_type _M_wmask[16];
    public:
    public:
        static locale::id id;
        ctype(size_t __refs = (ImplicitCastExpr 0x9dcde78 </usr/include/c++/4.6/bits/locale_facets.h:1208:29> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9dcde60 <col:29> 'int' 0))
);
        ctype(__c_locale __cloc, size_t __refs = (ImplicitCastExpr 0x9dcdea0 </usr/include/c++/4.6/bits/locale_facets.h:1219:48> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9dcde88 <col:48> 'int' 0))
);
    protected:
    protected:
        __wmask_type _M_convert_to_wmask(const mask __m) const throw();
        virtual void ~ctype();
        virtual bool do_is(mask __m, char_type __c) const;
        virtual const char_type *do_is(const char_type *__lo, const char_type *__hi, mask *__vec) const;
        virtual const char_type *do_scan_is(mask __m, const char_type *__lo, const char_type *__hi) const;
        virtual const char_type *do_scan_not(mask __m, const char_type *__lo, const char_type *__hi) const;
        virtual char_type do_toupper(char_type) const;
        virtual const char_type *do_toupper(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_tolower(char_type) const;
        virtual const char_type *do_tolower(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_widen(char) const;
        virtual const char *do_widen(const char *__lo, const char *__hi, char_type *__dest) const;
        virtual char do_narrow(char_type, char __dfault) const;
        virtual const char_type *do_narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__dest) const;
        void _M_initialize_ctype() throw();
        inline std::ctype<wchar_t> &operator=(const std::ctype<wchar_t> &);
    }
template <typename _CharT = char> class ctype : public locale::facet, public std::ctype_base {
        class ctype;
    public:
    public:
        typedef char char_type;
    protected:
    protected:
        __c_locale _M_c_locale_ctype;
        bool _M_del;
        __to_type _M_toupper;
        __to_type _M_tolower;
        const mask *_M_table;
        mutable char _M_widen_ok;
        mutable char _M_widen[256];
        mutable char _M_narrow[256];
        mutable char _M_narrow_ok;
    public:
    public:
        static locale::id id;
        static const size_t table_size = (ImplicitCastExpr 0x9dc1760 </usr/include/c++/4.6/bits/locale_facets.h:698:45, col:78> 'const size_t':'const unsigned int' <IntegralCast>
  (BinaryOperator 0x9dc1748 <col:45, col:78> 'int' '+'
    (IntegerLiteral 0x9dc16b8 <col:45> 'int' 1)
    (ImplicitCastExpr 0x9dc1738 <col:49, col:78> 'int' <IntegralCast>
      (CXXStaticCastExpr 0x9dc1720 <col:49, col:78> 'unsigned char' static_cast<unsigned char> <NoOp>
        (ImplicitCastExpr 0x9dc1710 <col:76, col:77> 'unsigned char' <IntegralCast>
          (UnaryOperator 0x9dc16e8 <col:76, col:77> 'int' prefix '-'
            (IntegerLiteral 0x9dc16d0 <col:77> 'int' 1)))))))
;
        ctype(const mask *__table = (ImplicitCastExpr 0x9dc5788 </usr/include/c++/4.6/bits/locale_facets.h:711:35> 'const mask *' <NullToPointer>
  (IntegerLiteral 0x9dc5770 <col:35> 'int' 0))
, bool __del = (CXXBoolLiteralExpr 0x9dc5798 </usr/include/c++/4.6/bits/locale_facets.h:711:51> '_Bool' false)
, size_t __refs = (ImplicitCastExpr 0x9dc57c0 </usr/include/c++/4.6/bits/locale_facets.h:711:74> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9dc57a8 <col:74> 'int' 0))
);
        ctype(__c_locale __cloc, const mask *__table = (ImplicitCastExpr 0x9dc57e8 </usr/include/c++/4.6/bits/locale_facets.h:724:54> 'const mask *' <NullToPointer>
  (IntegerLiteral 0x9dc57d0 <col:54> 'int' 0))
, bool __del = (CXXBoolLiteralExpr 0x9dc57f8 </usr/include/c++/4.6/bits/locale_facets.h:724:70> '_Bool' false)
, size_t __refs = (ImplicitCastExpr 0x9dc5820 </usr/include/c++/4.6/bits/locale_facets.h:725:22> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9dc5808 <col:22> 'int' 0))
);
        inline bool is(mask __m, char __c) const;
        inline const char *is(const char *__lo, const char *__hi, mask *__vec) const;
        inline const char *scan_is(mask __m, const char *__lo, const char *__hi) const;
        inline const char *scan_not(mask __m, const char *__lo, const char *__hi) const;
        char_type toupper(char_type __c) const (CompoundStmt 0x9dc5910 </usr/include/c++/4.6/bits/locale_facets.h:796:7, col:39>
  (ReturnStmt 0x9dc5900 <col:9, col:36>
    (CXXMemberCallExpr 0x9dc58d0 <col:16, col:36> 'char_type':'char'
      (MemberExpr 0x9dc58b0 <col:16, col:22> '<bound member function type>' ->do_toupper 0x9dc2fa0
        (CXXThisExpr 0x9dc5848 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9dc58f0 <col:33> 'char_type':'char' <LValueToRValue>
        (DeclRefExpr 0x9dc5898 <col:33> 'char_type':'char' lvalue ParmVar 0x9dc2210 '__c' 'char_type':'char')))))


        const char_type *toupper(char_type *__lo, const char_type *__hi) const (CompoundStmt 0x9dc5a20 </usr/include/c++/4.6/bits/locale_facets.h:813:7, col:46>
  (ReturnStmt 0x9dc5a10 <col:9, col:43>
    (CXXMemberCallExpr 0x9dc59c8 <col:16, col:43> 'const char_type *'
      (MemberExpr 0x9dc59a8 <col:16, col:22> '<bound member function type>' ->do_toupper 0x9dc30d0
        (CXXThisExpr 0x9dc5928 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9dc59f0 <col:33> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9dc5978 <col:33> 'char_type *' lvalue ParmVar 0x9dc2350 '__lo' 'char_type *'))
      (ImplicitCastExpr 0x9dc5a00 <col:39> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9dc5990 <col:39> 'const char_type *' lvalue ParmVar 0x9dc23c0 '__hi' 'const char_type *')))))


        char_type tolower(char_type __c) const (CompoundStmt 0x9dc5b00 </usr/include/c++/4.6/bits/locale_facets.h:829:7, col:39>
  (ReturnStmt 0x9dc5af0 <col:9, col:36>
    (CXXMemberCallExpr 0x9dc5ac0 <col:16, col:36> 'char_type':'char'
      (MemberExpr 0x9dc5aa0 <col:16, col:22> '<bound member function type>' ->do_tolower 0x9dc3190
        (CXXThisExpr 0x9dc5a38 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9dc5ae0 <col:33> 'char_type':'char' <LValueToRValue>
        (DeclRefExpr 0x9dc5a88 <col:33> 'char_type':'char' lvalue ParmVar 0x9dc24d0 '__c' 'char_type':'char')))))


        const char_type *tolower(char_type *__lo, const char_type *__hi) const (CompoundStmt 0x9dc5c10 </usr/include/c++/4.6/bits/locale_facets.h:846:7, col:46>
  (ReturnStmt 0x9dc5c00 <col:9, col:43>
    (CXXMemberCallExpr 0x9dc5bb8 <col:16, col:43> 'const char_type *'
      (MemberExpr 0x9dc5b98 <col:16, col:22> '<bound member function type>' ->do_tolower 0x9dc32c0
        (CXXThisExpr 0x9dc5b18 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9dc5be0 <col:33> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9dc5b68 <col:33> 'char_type *' lvalue ParmVar 0x9dc25a0 '__lo' 'char_type *'))
      (ImplicitCastExpr 0x9dc5bf0 <col:39> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9dc5b80 <col:39> 'const char_type *' lvalue ParmVar 0x9dc25f0 '__hi' 'const char_type *')))))


        char_type widen(char __c) const (CompoundStmt 0x9dc5ea8 </usr/include/c++/4.6/bits/locale_facets.h:866:7, line:871:7>
  (IfStmt 0x9dc5d70 <line:867:2, line:868:51>
    <<<NULL>>>
    (ImplicitCastExpr 0x9dc5c88 <line:867:6> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x9dc5c78 <col:6> 'char' <LValueToRValue>
        (MemberExpr 0x9dc5c54 <col:6> 'char' lvalue ->_M_widen_ok 0x9dc1350
          (CXXThisExpr 0x9dc5c28 <col:6> 'const class std::ctype<char> *' this))))
    (ReturnStmt 0x9dc5d60 <line:868:4, col:51>
      (ImplicitCastExpr 0x9dc5d50 <col:11, col:51> 'char' <LValueToRValue>
        (ArraySubscriptExpr 0x9dc5d38 <col:11, col:51> 'char' lvalue
          (ImplicitCastExpr 0x9dc5d28 <col:11> 'char *' <ArrayToPointerDecay>
            (MemberExpr 0x9dc5ca8 <col:11> 'char [256]' lvalue ->_M_widen 0x9dc1470
              (CXXThisExpr 0x9dc5c98 <col:11> 'const class std::ctype<char> *' this)))
          (CXXStaticCastExpr 0x9dc5d10 <col:20, col:50> 'unsigned char' static_cast<unsigned char> <NoOp>
            (ImplicitCastExpr 0x9dc5d00 <col:47> 'unsigned char' <IntegralCast>
              (ImplicitCastExpr 0x9dc5cf0 <col:47> 'char' <LValueToRValue>
                (DeclRefExpr 0x9dc5cc8 <col:47> 'char' lvalue ParmVar 0x9dc26c0 '__c' 'char')))))))
    <<<NULL>>>)
  (CXXMemberCallExpr 0x9dc5dc0 <line:869:2, col:22> 'void'
    (MemberExpr 0x9dc5da0 <col:2, col:8> '<bound member function type>' ->_M_widen_init 0x9dc54d0
      (CXXThisExpr 0x9dc5d90 <col:2> 'const class std::ctype<char> *' this)))
  (ReturnStmt 0x9dc5e98 <line:870:2, col:27>
    (CXXMemberCallExpr 0x9dc5e68 <col:9, col:27> 'char_type':'char'
      (MemberExpr 0x9dc5e48 <col:9, col:15> '<bound member function type>' ->do_widen 0x9dc3380
        (CXXThisExpr 0x9dc5de0 <col:9> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9dc5e88 <col:24> 'char' <LValueToRValue>
        (DeclRefExpr 0x9dc5e30 <col:24> 'char' lvalue ParmVar 0x9dc26c0 '__c' 'char')))))


        const char *widen(const char *__lo, const char *__hi, char_type *__to) const (CompoundStmt 0x9dc62e8 </usr/include/c++/4.6/bits/locale_facets.h:893:7, line:902:7>
  (IfStmt 0x9dc60d0 <line:894:2, line:898:4>
    <<<NULL>>>
    (BinaryOperator 0x9dc5f30 <line:894:6, col:21> '_Bool' '=='
      (ImplicitCastExpr 0x9dc5f20 <col:6> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9dc5f10 <col:6> 'char' <LValueToRValue>
          (MemberExpr 0x9dc5ed8 <col:6> 'char' lvalue ->_M_widen_ok 0x9dc1350
            (CXXThisExpr 0x9dc5ec8 <col:6> 'const class std::ctype<char> *' this))))
      (IntegerLiteral 0x9dc5ef8 <col:21> 'int' 1))
    (CompoundStmt 0x9dc60b8 <line:895:4, line:898:4>
      (CallExpr 0x9dc6008 <line:896:6, col:46> 'void *'
        (ImplicitCastExpr 0x9dc5ff8 <col:6> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9dc5f48 <col:6> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9bb0ec0 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0x9dc6040 <col:23> 'void *' <BitCast>
          (ImplicitCastExpr 0x9dc6030 <col:23> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x9dc5f60 <col:23> 'char_type *' lvalue ParmVar 0x9dc2860 '__to' 'char_type *')))
        (ImplicitCastExpr 0x9dc6060 <col:29> 'const void *' <BitCast>
          (ImplicitCastExpr 0x9dc6050 <col:29> 'const char *' <LValueToRValue>
            (DeclRefExpr 0x9dc5f78 <col:29> 'const char *' lvalue ParmVar 0x9dc27c0 '__lo' 'const char *')))
        (ImplicitCastExpr 0x9dc6070 <col:35, col:42> 'unsigned int' <IntegralCast>
          (BinaryOperator 0x9dc5fe0 <col:35, col:42> 'int' '-'
            (ImplicitCastExpr 0x9dc5fc0 <col:35> 'const char *' <LValueToRValue>
              (DeclRefExpr 0x9dc5f90 <col:35> 'const char *' lvalue ParmVar 0x9dc2810 '__hi' 'const char *'))
            (ImplicitCastExpr 0x9dc5fd0 <col:42> 'const char *' <LValueToRValue>
              (DeclRefExpr 0x9dc5fa8 <col:42> 'const char *' lvalue ParmVar 0x9dc27c0 '__lo' 'const char *')))))
      (ReturnStmt 0x9dc60a8 <line:897:6, col:13>
        (ImplicitCastExpr 0x9dc6098 <col:13> 'const char *' <LValueToRValue>
          (DeclRefExpr 0x9dc607c <col:13> 'const char *' lvalue ParmVar 0x9dc2810 '__hi' 'const char *'))))
    <<<NULL>>>)
  (IfStmt 0x9dc61a8 <line:899:2, line:900:18>
    <<<NULL>>>
    (UnaryOperator 0x9dc6140 <line:899:6, col:7> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9dc6130 <col:7> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0x9dc6120 <col:7> 'char' <LValueToRValue>
          (MemberExpr 0x9dc6100 <col:7> 'char' lvalue ->_M_widen_ok 0x9dc1350
            (CXXThisExpr 0x9dc60f0 <col:7> 'const class std::ctype<char> *' this)))))
    (CXXMemberCallExpr 0x9dc6188 <line:900:4, col:18> 'void'
      (MemberExpr 0x9dc6168 <col:4> '<bound member function type>' ->_M_widen_init 0x9dc54d0
        (CXXThisExpr 0x9dc6158 <col:4> 'const class std::ctype<char> *' this)))
    <<<NULL>>>)
  (ReturnStmt 0x9dc62d8 <line:901:2, col:40>
    (CXXMemberCallExpr 0x9dc6280 <col:9, col:40> 'const char *'
      (MemberExpr 0x9dc6260 <col:9, col:15> '<bound member function type>' ->do_widen 0x9dc3500
        (CXXThisExpr 0x9dc61c8 <col:9> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9dc62a8 <col:24> 'const char *' <LValueToRValue>
        (DeclRefExpr 0x9dc6218 <col:24> 'const char *' lvalue ParmVar 0x9dc27c0 '__lo' 'const char *'))
      (ImplicitCastExpr 0x9dc62b8 <col:30> 'const char *' <LValueToRValue>
        (DeclRefExpr 0x9dc6230 <col:30> 'const char *' lvalue ParmVar 0x9dc2810 '__hi' 'const char *'))
      (ImplicitCastExpr 0x9dc62c8 <col:36> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9dc6248 <col:36> 'char_type *' lvalue ParmVar 0x9dc2860 '__to' 'char_type *')))))


        char narrow(char_type __c, char __dfault) const (CompoundStmt 0x9dc6830 </usr/include/c++/4.6/bits/locale_facets.h:924:7, line:931:7>
  (IfStmt 0x9dc64b8 <line:925:2, line:926:52>
    <<<NULL>>>
    (ImplicitCastExpr 0x9dc63d0 <line:925:6, col:47> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x9dc63c0 <col:6, col:47> 'char' <LValueToRValue>
        (ArraySubscriptExpr 0x9dc63a8 <col:6, col:47> 'char' lvalue
          (ImplicitCastExpr 0x9dc6398 <col:6> 'char *' <ArrayToPointerDecay>
            (MemberExpr 0x9dc6318 <col:6> 'char [256]' lvalue ->_M_narrow 0x9dc1560
              (CXXThisExpr 0x9dc6308 <col:6> 'const class std::ctype<char> *' this)))
          (CXXStaticCastExpr 0x9dc6380 <col:16, col:46> 'unsigned char' static_cast<unsigned char> <NoOp>
            (ImplicitCastExpr 0x9dc6370 <col:43> 'unsigned char' <IntegralCast>
              (ImplicitCastExpr 0x9dc6360 <col:43> 'char_type':'char' <LValueToRValue>
                (DeclRefExpr 0x9dc6338 <col:43> 'char_type':'char' lvalue ParmVar 0x9dc29a0 '__c' 'char_type':'char')))))))
    (ReturnStmt 0x9dc64a8 <line:926:4, col:52>
      (ImplicitCastExpr 0x9dc6498 <col:11, col:52> 'char' <LValueToRValue>
        (ArraySubscriptExpr 0x9dc6480 <col:11, col:52> 'char' lvalue
          (ImplicitCastExpr 0x9dc6470 <col:11> 'char *' <ArrayToPointerDecay>
            (MemberExpr 0x9dc63f0 <col:11> 'char [256]' lvalue ->_M_narrow 0x9dc1560
              (CXXThisExpr 0x9dc63e0 <col:11> 'const class std::ctype<char> *' this)))
          (CXXStaticCastExpr 0x9dc6458 <col:21, col:51> 'unsigned char' static_cast<unsigned char> <NoOp>
            (ImplicitCastExpr 0x9dc6448 <col:48> 'unsigned char' <IntegralCast>
              (ImplicitCastExpr 0x9dc6438 <col:48> 'char_type':'char' <LValueToRValue>
                (DeclRefExpr 0x9dc6410 <col:48> 'char_type':'char' lvalue ParmVar 0x9dc29a0 '__c' 'char_type':'char')))))))
    <<<NULL>>>)
  (DeclStmt 0x9dc6610 <line:927:2, col:43>
    0x9dc64e0 "const char __t =
      (CXXMemberCallExpr 0x9dc65c8 <col:19, col:42> 'char'
        (MemberExpr 0x9dc65a8 <col:19> '<bound member function type>' ->do_narrow 0x9dc51c0
          (CXXThisExpr 0x9dc6598 <col:19> 'const class std::ctype<char> *' this))
        (ImplicitCastExpr 0x9dc65f0 <col:29> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9dc6568 <col:29> 'char_type':'char' lvalue ParmVar 0x9dc29a0 '__c' 'char_type':'char'))
        (ImplicitCastExpr 0x9dc6600 <col:34> 'char' <LValueToRValue>
          (DeclRefExpr 0x9dc6580 <col:34> 'char' lvalue ParmVar 0x9dc29e0 '__dfault' 'char')))")
  (IfStmt 0x9dc67d8 <line:928:2, line:929:49>
    <<<NULL>>>
    (BinaryOperator 0x9dc6690 <line:928:6, col:13> '_Bool' '!='
      (ImplicitCastExpr 0x9dc6660 <col:6> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9dc6650 <col:6> 'char' <LValueToRValue>
          (DeclRefExpr 0x9dc6620 <col:6> 'const char' lvalue Var 0x9dc64e0 '__t' 'const char')))
      (ImplicitCastExpr 0x9dc6680 <col:13> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9dc6670 <col:13> 'char' <LValueToRValue>
          (DeclRefExpr 0x9dc6638 <col:13> 'char' lvalue ParmVar 0x9dc29e0 '__dfault' 'char'))))
    (BinaryOperator 0x9dc67c0 <line:929:4, col:49> 'char' lvalue '='
      (ArraySubscriptExpr 0x9dc6780 <col:4, col:45> 'char' lvalue
        (ImplicitCastExpr 0x9dc6770 <col:4> 'char *' <ArrayToPointerDecay>
          (MemberExpr 0x9dc66f0 <col:4> 'char [256]' lvalue ->_M_narrow 0x9dc1560
            (CXXThisExpr 0x9dc66e0 <col:4> 'const class std::ctype<char> *' this)))
        (CXXStaticCastExpr 0x9dc6758 <col:14, col:44> 'unsigned char' static_cast<unsigned char> <NoOp>
          (ImplicitCastExpr 0x9dc6748 <col:41> 'unsigned char' <IntegralCast>
            (ImplicitCastExpr 0x9dc6738 <col:41> 'char_type':'char' <LValueToRValue>
              (DeclRefExpr 0x9dc6710 <col:41> 'char_type':'char' lvalue ParmVar 0x9dc29a0 '__c' 'char_type':'char')))))
      (ImplicitCastExpr 0x9dc67b0 <col:49> 'char' <LValueToRValue>
        (DeclRefExpr 0x9dc6794 <col:49> 'const char' lvalue Var 0x9dc64e0 '__t' 'const char')))
    <<<NULL>>>)
  (ReturnStmt 0x9dc6820 <line:930:2, col:9>
    (ImplicitCastExpr 0x9dc6810 <col:9> 'char' <LValueToRValue>
      (DeclRefExpr 0x9dc67f4 <col:9> 'const char' lvalue Var 0x9dc64e0 '__t' 'const char'))))


        const char_type *narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__to) const (CompoundStmt 0x9dc6d30 </usr/include/c++/4.6/bits/locale_facets.h:958:7, line:967:7>
  (IfStmt 0x9dc6ae8 <line:959:2, line:963:4>
    <<<NULL>>>
    (ImplicitCastExpr 0x9dc6950 <line:959:6, col:46> '_Bool' <IntegralToBoolean>
      (CallExpr 0x9dc6908 <col:6, col:46> 'long'
        (ImplicitCastExpr 0x9dc68f8 <col:6> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9dc6850 <col:6> 'long (long, long)' lvalue Function 0x9ca0bd0 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0x9dc6930 <col:23, col:39> 'long' <IntegralCast>
          (BinaryOperator 0x9dc68d0 <col:23, col:39> '_Bool' '=='
            (ImplicitCastExpr 0x9dc68c0 <col:23> 'int' <IntegralCast>
              (ImplicitCastExpr 0x9dc68b0 <col:23> 'char' <LValueToRValue>
                (MemberExpr 0x9dc6878 <col:23> 'char' lvalue ->_M_narrow_ok 0x9dc15a0
                  (CXXThisExpr 0x9dc6868 <col:23> 'const class std::ctype<char> *' this))))
            (IntegerLiteral 0x9dc6898 <col:39> 'int' 1)))
        (ImplicitCastExpr 0x9dc6940 <col:42> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0x9dc68e8 <col:42> '_Bool' true))))
    (CompoundStmt 0x9dc6ad0 <line:960:4, line:963:4>
      (CallExpr 0x9dc6a20 <line:961:6, col:46> 'void *'
        (ImplicitCastExpr 0x9dc6a10 <col:6> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9dc695c <col:6> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9bb0ec0 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0x9dc6a58 <col:23> 'void *' <BitCast>
          (ImplicitCastExpr 0x9dc6a48 <col:23> 'char *' <LValueToRValue>
            (DeclRefExpr 0x9dc6974 <col:23> 'char *' lvalue ParmVar 0x9dc2be0 '__to' 'char *')))
        (ImplicitCastExpr 0x9dc6a78 <col:29> 'const void *' <BitCast>
          (ImplicitCastExpr 0x9dc6a68 <col:29> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x9dc698c <col:29> 'const char_type *' lvalue ParmVar 0x9dc2b00 '__lo' 'const char_type *')))
        (ImplicitCastExpr 0x9dc6a88 <col:35, col:42> 'unsigned int' <IntegralCast>
          (BinaryOperator 0x9dc69f8 <col:35, col:42> 'int' '-'
            (ImplicitCastExpr 0x9dc69d8 <col:35> 'const char_type *' <LValueToRValue>
              (DeclRefExpr 0x9dc69a4 <col:35> 'const char_type *' lvalue ParmVar 0x9dc2b50 '__hi' 'const char_type *'))
            (ImplicitCastExpr 0x9dc69e8 <col:42> 'const char_type *' <LValueToRValue>
              (DeclRefExpr 0x9dc69bc <col:42> 'const char_type *' lvalue ParmVar 0x9dc2b00 '__lo' 'const char_type *')))))
      (ReturnStmt 0x9dc6ac0 <line:962:6, col:13>
        (ImplicitCastExpr 0x9dc6ab0 <col:13> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9dc6a94 <col:13> 'const char_type *' lvalue ParmVar 0x9dc2b50 '__hi' 'const char_type *'))))
    <<<NULL>>>)
  (IfStmt 0x9dc6bc0 <line:964:2, line:965:19>
    <<<NULL>>>
    (UnaryOperator 0x9dc6b58 <line:964:6, col:7> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9dc6b48 <col:7> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0x9dc6b38 <col:7> 'char' <LValueToRValue>
          (MemberExpr 0x9dc6b18 <col:7> 'char' lvalue ->_M_narrow_ok 0x9dc15a0
            (CXXThisExpr 0x9dc6b08 <col:7> 'const class std::ctype<char> *' this)))))
    (CXXMemberCallExpr 0x9dc6ba0 <line:965:4, col:19> 'void'
      (MemberExpr 0x9dc6b80 <col:4> '<bound member function type>' ->_M_narrow_init 0x9dc5450
        (CXXThisExpr 0x9dc6b70 <col:4> 'const class std::ctype<char> *' this)))
    <<<NULL>>>)
  (ReturnStmt 0x9dc6d20 <line:966:2, col:51>
    (CXXMemberCallExpr 0x9dc6cb0 <col:9, col:51> 'const char_type *'
      (MemberExpr 0x9dc6c90 <col:9, col:15> '<bound member function type>' ->do_narrow 0x9dc5380
        (CXXThisExpr 0x9dc6be0 <col:9> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9dc6ce0 <col:25> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9dc6c30 <col:25> 'const char_type *' lvalue ParmVar 0x9dc2b00 '__lo' 'const char_type *'))
      (ImplicitCastExpr 0x9dc6cf0 <col:31> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9dc6c48 <col:31> 'const char_type *' lvalue ParmVar 0x9dc2b50 '__hi' 'const char_type *'))
      (ImplicitCastExpr 0x9dc6d00 <col:37> 'char' <LValueToRValue>
        (DeclRefExpr 0x9dc6c60 <col:37> 'char' lvalue ParmVar 0x9dc2b90 '__dfault' 'char'))
      (ImplicitCastExpr 0x9dc6d10 <col:47> 'char *' <LValueToRValue>
        (DeclRefExpr 0x9dc6c78 <col:47> 'char *' lvalue ParmVar 0x9dc2be0 '__to' 'char *')))))


        const mask *table() const throw() (CompoundStmt 0x9dc6da0 </usr/include/c++/4.6/bits/locale_facets.h:975:7, col:26>
  (ReturnStmt 0x9dc6d90 <col:9, col:16>
    (ImplicitCastExpr 0x9dc6d80 <col:16> 'const mask *' <LValueToRValue>
      (MemberExpr 0x9dc6d60 <col:16> 'const mask *const' lvalue ->_M_table 0x9dc1310
        (CXXThisExpr 0x9dc6d50 <col:16> 'const class std::ctype<char> *' this)))))


        static const mask *classic_table() throw();
    protected:
    protected:
        virtual void ~ctype();
        virtual char_type do_toupper(char_type) const;
        virtual const char_type *do_toupper(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_tolower(char_type) const;
        virtual const char_type *do_tolower(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_widen(char __c) const (CompoundStmt 0x9dc6df0 </usr/include/c++/4.6/bits/locale_facets.h:1076:7, col:21>
  (ReturnStmt 0x9dc6de0 <col:9, col:16>
    (ImplicitCastExpr 0x9dc6dd0 <col:16> 'char' <LValueToRValue>
      (DeclRefExpr 0x9dc6db4 <col:16> 'char' lvalue ParmVar 0x9dc3330 '__c' 'char'))))


        virtual const char *do_widen(const char *__lo, const char *__hi, char_type *__dest) const (CompoundStmt 0x9dc6f78 </usr/include/c++/4.6/bits/locale_facets.h:1099:7, line:1102:7>
  (CallExpr 0x9dc6ec8 <line:1100:2, col:44> 'void *'
    (ImplicitCastExpr 0x9dc6eb8 <col:2> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9dc6e04 <col:2> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9bb0ec0 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
    (ImplicitCastExpr 0x9dc6f00 <col:19> 'void *' <BitCast>
      (ImplicitCastExpr 0x9dc6ef0 <col:19> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9dc6e1c <col:19> 'char_type *' lvalue ParmVar 0x9dc34a0 '__dest' 'char_type *')))
    (ImplicitCastExpr 0x9dc6f20 <col:27> 'const void *' <BitCast>
      (ImplicitCastExpr 0x9dc6f10 <col:27> 'const char *' <LValueToRValue>
        (DeclRefExpr 0x9dc6e34 <col:27> 'const char *' lvalue ParmVar 0x9dc3400 '__lo' 'const char *')))
    (ImplicitCastExpr 0x9dc6f30 <col:33, col:40> 'unsigned int' <IntegralCast>
      (BinaryOperator 0x9dc6ea0 <col:33, col:40> 'int' '-'
        (ImplicitCastExpr 0x9dc6e80 <col:33> 'const char *' <LValueToRValue>
          (DeclRefExpr 0x9dc6e4c <col:33> 'const char *' lvalue ParmVar 0x9dc3450 '__hi' 'const char *'))
        (ImplicitCastExpr 0x9dc6e90 <col:40> 'const char *' <LValueToRValue>
          (DeclRefExpr 0x9dc6e64 <col:40> 'const char *' lvalue ParmVar 0x9dc3400 '__lo' 'const char *')))))
  (ReturnStmt 0x9dc6f68 <line:1101:2, col:9>
    (ImplicitCastExpr 0x9dc6f58 <col:9> 'const char *' <LValueToRValue>
      (DeclRefExpr 0x9dc6f3c <col:9> 'const char *' lvalue ParmVar 0x9dc3450 '__hi' 'const char *'))))


        virtual char do_narrow(char_type __c, char) const (CompoundStmt 0x9dc6fc8 </usr/include/c++/4.6/bits/locale_facets.h:1125:7, col:21>
  (ReturnStmt 0x9dc6fb8 <col:9, col:16>
    (ImplicitCastExpr 0x9dc6fa8 <col:16> 'char_type':'char' <LValueToRValue>
      (DeclRefExpr 0x9dc6f90 <col:16> 'char_type':'char' lvalue ParmVar 0x9dc3580 '__c' 'char_type':'char'))))


        virtual const char_type *do_narrow(const char_type *__lo, const char_type *__hi, char, char *__dest) const (CompoundStmt 0x9dc7150 </usr/include/c++/4.6/bits/locale_facets.h:1152:7, line:1155:7>
  (CallExpr 0x9dc70a0 <line:1153:2, col:44> 'void *'
    (ImplicitCastExpr 0x9dc7090 <col:2> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9dc6fdc <col:2> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9bb0ec0 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
    (ImplicitCastExpr 0x9dc70d8 <col:19> 'void *' <BitCast>
      (ImplicitCastExpr 0x9dc70c8 <col:19> 'char *' <LValueToRValue>
        (DeclRefExpr 0x9dc6ff4 <col:19> 'char *' lvalue ParmVar 0x9dc5320 '__dest' 'char *')))
    (ImplicitCastExpr 0x9dc70f8 <col:27> 'const void *' <BitCast>
      (ImplicitCastExpr 0x9dc70e8 <col:27> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9dc700c <col:27> 'const char_type *' lvalue ParmVar 0x9dc5240 '__lo' 'const char_type *')))
    (ImplicitCastExpr 0x9dc7108 <col:33, col:40> 'unsigned int' <IntegralCast>
      (BinaryOperator 0x9dc7078 <col:33, col:40> 'int' '-'
        (ImplicitCastExpr 0x9dc7058 <col:33> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9dc7024 <col:33> 'const char_type *' lvalue ParmVar 0x9dc5290 '__hi' 'const char_type *'))
        (ImplicitCastExpr 0x9dc7068 <col:40> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9dc703c <col:40> 'const char_type *' lvalue ParmVar 0x9dc5240 '__lo' 'const char_type *')))))
  (ReturnStmt 0x9dc7140 <line:1154:2, col:9>
    (ImplicitCastExpr 0x9dc7130 <col:9> 'const char_type *' <LValueToRValue>
      (DeclRefExpr 0x9dc7114 <col:9> 'const char_type *' lvalue ParmVar 0x9dc5290 '__hi' 'const char_type *'))))


    private:
    private:
        void _M_narrow_init() const;
        void _M_widen_init() const;
        inline std::ctype<char> &operator=(const std::ctype<char> &);
    }
template <typename _CharT> class ctype;
    class ctype;
    class ctype;
    template <typename _CharT = wchar_t> class ctype_byname
template <typename _CharT = char> class ctype_byname
template <typename _CharT> class ctype_byname;
    class codecvt_base;
    template <typename _InternT = wchar_t, typename _ExternT = char, typename _StateT = __mbstate_t> class codecvt
template <typename _InternT = char, typename _ExternT = char, typename _StateT = __mbstate_t> class codecvt
template <typename _InternT, typename _ExternT, typename _StateT> class codecvt;
    class codecvt;
    class codecvt;
    template <typename _InternT, typename _ExternT, typename _StateT> class codecvt_byname;
    template <typename _CharT = char, typename _InIter = std::istreambuf_iterator<char, std::char_traits<char> >> class num_get : public locale::facet {
        class num_get;
    public:
    public:
        typedef char char_type;
        typedef std::istreambuf_iterator<char, std::char_traits<char> > iter_type;
        static locale::id id;
        num_get(size_t __refs);
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, bool &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, float &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, void *&__v) const;
    protected:
    protected:
        virtual void ~num_get();
        iter_type _M_extract_float(iter_type, iter_type, std::ios_base &, ios_base::iostate &, string &) const;
        template <typename _ValueT> iter_type _M_extract_int(iter_type, iter_type, std::ios_base &, ios_base::iostate &, _ValueT &) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *, size_t __len, _CharT2 __c) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<!__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *__zero, size_t __len, _CharT2 __c) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &, bool &) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, float &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, long double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, void *&) const;
        inline std::num_get<char> &operator=(const std::num_get<char> &);
    }
template <typename _CharT = wchar_t, typename _InIter = std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >> class num_get : public locale::facet {
        class num_get;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > iter_type;
        static locale::id id;
        num_get(size_t __refs);
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, bool &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, float &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, void *&__v) const;
    protected:
    protected:
        virtual void ~num_get();
        iter_type _M_extract_float(iter_type, iter_type, std::ios_base &, ios_base::iostate &, string &) const;
        template <typename _ValueT> iter_type _M_extract_int(iter_type, iter_type, std::ios_base &, ios_base::iostate &, _ValueT &) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *, size_t __len, _CharT2 __c) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<!__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *__zero, size_t __len, _CharT2 __c) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &, bool &) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, float &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, long double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, void *&) const;
        inline std::num_get<wchar_t> &operator=(const std::num_get<wchar_t> &);
    }
template <typename _CharT, typename _InIter = istreambuf_iterator<_CharT>> class num_get;
    template <typename _CharT = wchar_t, typename _OutIter = std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >> class num_put : public locale::facet {
        class num_put;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > iter_type;
        static locale::id id;
        num_put(size_t __refs);
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, bool __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, const void *__v) const;
    protected:
    protected:
        template <typename _ValueT> iter_type _M_insert_float(iter_type, std::ios_base &__io, char_type __fill, char __mod, _ValueT __v) const;
        void _M_group_float(const char *__grouping, size_t __grouping_size, char_type __sep, const char_type *__p, char_type *__new, char_type *__cs, int &__len) const;
        template <typename _ValueT> iter_type _M_insert_int(iter_type, std::ios_base &__io, char_type __fill, _ValueT __v) const;
        void _M_group_int(const char *__grouping, size_t __grouping_size, char_type __sep, std::ios_base &__io, char_type *__new, char_type *__cs, int &__len) const;
        void _M_pad(char_type __fill, streamsize __w, std::ios_base &__io, char_type *__new, const char_type *__cs, int &__len) const;
        virtual void ~num_put();
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, bool __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long long __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, long double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, const void *__v) const;
        inline std::num_put<wchar_t> &operator=(const std::num_put<wchar_t> &);
    }
template <typename _CharT = char, typename _OutIter = std::ostreambuf_iterator<char, std::char_traits<char> >> class num_put : public locale::facet {
        class num_put;
    public:
    public:
        typedef char char_type;
        typedef std::ostreambuf_iterator<char, std::char_traits<char> > iter_type;
        static locale::id id;
        num_put(size_t __refs);
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, bool __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, const void *__v) const;
    protected:
    protected:
        template <typename _ValueT> iter_type _M_insert_float(iter_type, std::ios_base &__io, char_type __fill, char __mod, _ValueT __v) const;
        void _M_group_float(const char *__grouping, size_t __grouping_size, char_type __sep, const char_type *__p, char_type *__new, char_type *__cs, int &__len) const;
        template <typename _ValueT> iter_type _M_insert_int(iter_type, std::ios_base &__io, char_type __fill, _ValueT __v) const;
        void _M_group_int(const char *__grouping, size_t __grouping_size, char_type __sep, std::ios_base &__io, char_type *__new, char_type *__cs, int &__len) const;
        void _M_pad(char_type __fill, streamsize __w, std::ios_base &__io, char_type *__new, const char_type *__cs, int &__len) const;
        virtual void ~num_put();
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, bool __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long long __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, long double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, const void *__v) const;
        inline std::num_put<char> &operator=(const std::num_put<char> &);
    }
template <typename _CharT, typename _OutIter = ostreambuf_iterator<_CharT>> class num_put;
    template <typename _CharT = wchar_t> class numpunct : public locale::facet {
        class numpunct;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
        typedef __numpunct_cache<wchar_t> __cache_type;
    protected:
    protected:
        __cache_type *_M_data;
    public:
    public:
        static locale::id id;
        numpunct(size_t __refs);
        numpunct(__cache_type *__cache, size_t __refs);
        numpunct(__c_locale __cloc, size_t __refs);
        char_type decimal_point() const;
        char_type thousands_sep() const;
        string grouping() const;
        string_type truename() const;
        string_type falsename() const;
    protected:
    protected:
        virtual void ~numpunct();
        virtual char_type do_decimal_point() const;
        virtual char_type do_thousands_sep() const;
        virtual string do_grouping() const;
        virtual string_type do_truename() const;
        virtual string_type do_falsename() const;
        void _M_initialize_numpunct(__c_locale __cloc);
        inline std::numpunct<wchar_t> &operator=(const std::numpunct<wchar_t> &);
    }
template <typename _CharT = char> class numpunct : public locale::facet {
        class numpunct;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
        typedef __numpunct_cache<char> __cache_type;
    protected:
    protected:
        __cache_type *_M_data;
    public:
    public:
        static locale::id id;
        numpunct(size_t __refs);
        numpunct(__cache_type *__cache, size_t __refs);
        numpunct(__c_locale __cloc, size_t __refs);
        char_type decimal_point() const;
        char_type thousands_sep() const;
        string grouping() const;
        string_type truename() const;
        string_type falsename() const;
    protected:
    protected:
        virtual void ~numpunct();
        virtual char_type do_decimal_point() const;
        virtual char_type do_thousands_sep() const;
        virtual string do_grouping() const;
        virtual string_type do_truename() const;
        virtual string_type do_falsename() const;
        void _M_initialize_numpunct(__c_locale __cloc);
        inline std::numpunct<char> &operator=(const std::numpunct<char> &);
    }
template <typename _CharT> class numpunct;
    template <typename _CharT = wchar_t> class numpunct_byname : public numpunct<wchar_t> {
        class numpunct_byname;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
        numpunct_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~numpunct_byname();
        inline std::numpunct_byname<wchar_t> &operator=(const std::numpunct_byname<wchar_t> &);
    }
template <typename _CharT = char> class numpunct_byname : public numpunct<char> {
        class numpunct_byname;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
        numpunct_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~numpunct_byname();
        inline std::numpunct_byname<char> &operator=(const std::numpunct_byname<char> &);
    }
template <typename _CharT> class numpunct_byname;
    template <typename _CharT = wchar_t> class collate : public locale::facet {
        class collate;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
    protected:
    protected:
        __c_locale _M_c_locale_collate;
    public:
    public:
        static locale::id id;
        collate(size_t __refs);
        collate(__c_locale __cloc, size_t __refs);
        int compare(const wchar_t *__lo1, const wchar_t *__hi1, const wchar_t *__lo2, const wchar_t *__hi2) const;
        string_type transform(const wchar_t *__lo, const wchar_t *__hi) const;
        long hash(const wchar_t *__lo, const wchar_t *__hi) const;
        int _M_compare(const wchar_t *, const wchar_t *) const throw();
        size_t _M_transform(wchar_t *, const wchar_t *, size_t) const throw();
    protected:
    protected:
        virtual void ~collate();
        virtual int do_compare(const wchar_t *__lo1, const wchar_t *__hi1, const wchar_t *__lo2, const wchar_t *__hi2) const;
        virtual string_type do_transform(const wchar_t *__lo, const wchar_t *__hi) const;
        virtual long do_hash(const wchar_t *__lo, const wchar_t *__hi) const;
        inline std::collate<wchar_t> &operator=(const std::collate<wchar_t> &);
    }
template <typename _CharT = char> class collate : public locale::facet {
        class collate;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
    protected:
    protected:
        __c_locale _M_c_locale_collate;
    public:
    public:
        static locale::id id;
        collate(size_t __refs);
        collate(__c_locale __cloc, size_t __refs);
        int compare(const char *__lo1, const char *__hi1, const char *__lo2, const char *__hi2) const;
        string_type transform(const char *__lo, const char *__hi) const;
        long hash(const char *__lo, const char *__hi) const;
        int _M_compare(const char *, const char *) const throw();
        size_t _M_transform(char *, const char *, size_t) const throw();
    protected:
    protected:
        virtual void ~collate();
        virtual int do_compare(const char *__lo1, const char *__hi1, const char *__lo2, const char *__hi2) const;
        virtual string_type do_transform(const char *__lo, const char *__hi) const;
        virtual long do_hash(const char *__lo, const char *__hi) const;
        inline std::collate<char> &operator=(const std::collate<char> &);
    }
template <typename _CharT> class collate;
    template <typename _CharT = wchar_t> class collate_byname : public collate<wchar_t> {
        class collate_byname;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
        collate_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~collate_byname();
        inline std::collate_byname<wchar_t> &operator=(const std::collate_byname<wchar_t> &);
    }
template <typename _CharT = char> class collate_byname : public collate<char> {
        class collate_byname;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
        collate_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~collate_byname();
        inline std::collate_byname<char> &operator=(const std::collate_byname<char> &);
    }
template <typename _CharT> class collate_byname;
    class time_base;
    template <typename _CharT, typename _InIter = istreambuf_iterator<_CharT>> class time_get;
    template <typename _CharT, typename _InIter = istreambuf_iterator<_CharT>> class time_get_byname;
    template <typename _CharT, typename _OutIter = ostreambuf_iterator<_CharT>> class time_put;
    template <typename _CharT, typename _OutIter = ostreambuf_iterator<_CharT>> class time_put_byname;
    class money_base;
    template <typename _CharT, typename _InIter = istreambuf_iterator<_CharT>> class money_get;
    template <typename _CharT, typename _OutIter = ostreambuf_iterator<_CharT>> class money_put;
    template <typename _CharT, bool _Intl = (CXXBoolLiteralExpr 0x9bf1518 </usr/include/c++/4.6/bits/localefwd.h:176:42> '_Bool' false)
> class moneypunct;
    template <typename _CharT, bool _Intl = (CXXBoolLiteralExpr 0x9bf1768 </usr/include/c++/4.6/bits/localefwd.h:178:42> '_Bool' false)
> class moneypunct_byname;
    class messages_base;
    template <typename _CharT> class messages;
    template <typename _CharT> class messages_byname;
}
namespace __cxxabiv1 {
    class __forced_unwind {
        class __forced_unwind;
        virtual void ~__forced_unwind() throw();
        virtual void __pure_dummy() = 0;
        inline __cxxabiv1::__forced_unwind &operator=(const __cxxabiv1::__forced_unwind &) throw();
    };
}
namespace std {
    template <typename _CharT, typename _Traits> inline void __ostream_write(basic_ostream<_CharT, _Traits> &__out, const _CharT *__s, streamsize __n) (CompoundStmt 0x9bfbac0 </usr/include/c++/4.6/bits/ostream_insert.h:45:5, line:52:5>
  (DeclStmt 0x9bfb710 <line:46:7, col:66>
    0x9bfb6e0 "typedef basic_ostream<_CharT, _Traits> __ostream_type")
  (DeclStmt 0x9bfb800 <line:47:7, col:62>
    0x9bfb7d0 "typedef typename __ostream_type::ios_base __ios_base")
  (DeclStmt 0x9bfb958 <line:49:7, col:62>
    0x9bfb820 "const streamsize __put =
      (CallExpr 0x9bfb930 <col:32, col:61> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9bfb8c8 <col:32, col:47> '<dependent type>' lvalue
          (CallExpr 0x9bfb8a8 <col:32, col:44> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9bfb870 <col:32, col:38> '<dependent type>' lvalue
              (DeclRefExpr 0x9bfb854 <col:32> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9bf2380 '__out' 'basic_ostream<_CharT, _Traits> &'))))
        (DeclRefExpr 0x9bfb8fc <col:53> 'const _CharT *' lvalue ParmVar 0x9bf23f0 '__s' 'const _CharT *')
        (DeclRefExpr 0x9bfb914 <col:58> 'streamsize':'int' lvalue ParmVar 0x9bf2450 '__n' 'streamsize':'int'))")
  (IfStmt 0x9bfbaa0 <line:50:7, line:51:35>
    <<<NULL>>>
    (BinaryOperator 0x9bfb9b8 <line:50:11, col:20> '_Bool' '!='
      (ImplicitCastExpr 0x9bfb998 <col:11> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0x9bfb968 <col:11> 'const streamsize':'const int' lvalue Var 0x9bfb820 '__put' 'const streamsize':'const int'))
      (ImplicitCastExpr 0x9bfb9a8 <col:20> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0x9bfb980 <col:20> 'streamsize':'int' lvalue ParmVar 0x9bf2450 '__n' 'streamsize':'int')))
    (CallExpr 0x9bfba80 <line:51:2, col:35> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9bfb9e8 <col:2, col:8> '<dependent type>' lvalue
        (DeclRefExpr 0x9bfb9d0 <col:2> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9bf2380 '__out' 'basic_ostream<_CharT, _Traits> &'))
      (DependentScopeDeclRefExpr 0x9bfba58 <col:17, col:29> '<dependent type>' lvalue))
    <<<NULL>>>))

;
    template <typename _CharT, typename _Traits> inline void __ostream_fill(basic_ostream<_CharT, _Traits> &__out, streamsize __n) (CompoundStmt 0x9bfc590 </usr/include/c++/4.6/bits/ostream_insert.h:57:5, line:71:5>
  (DeclStmt 0x9bfbf70 <line:58:7, col:66>
    0x9bfbf40 "typedef basic_ostream<_CharT, _Traits> __ostream_type")
  (DeclStmt 0x9bfc030 <line:59:7, col:62>
    0x9bfc000 "typedef typename __ostream_type::ios_base __ios_base")
  (DeclStmt 0x9bfc0f8 <line:61:7, col:38>
    0x9bfc050 "const _CharT __c =
      (CallExpr 0x9bfc0d8 <col:26, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9bfc0a0 <col:26, col:32> '<dependent type>' lvalue
          (DeclRefExpr 0x9bfc084 <col:26> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9bfbcc0 '__out' 'basic_ostream<_CharT, _Traits> &')))")
  (ForStmt 0x9bfc568 <line:62:7, line:70:2>
    <<<NULL>>>
    <<<NULL>>>
    (BinaryOperator 0x9bfc148 <line:62:14, col:20> '_Bool' '>'
      (ImplicitCastExpr 0x9bfc138 <col:14> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0x9bfc108 <col:14> 'streamsize':'int' lvalue ParmVar 0x9bfbd00 '__n' 'streamsize':'int'))
      (IntegerLiteral 0x9bfc120 <col:20> 'int' 0))
    (UnaryOperator 0x9bfc178 <col:23, col:25> 'streamsize':'int' lvalue prefix '--'
      (DeclRefExpr 0x9bfc160 <col:25> 'streamsize':'int' lvalue ParmVar 0x9bfbd00 '__n' 'streamsize':'int'))
    (CompoundStmt 0x9bfc550 <line:63:2, line:70:2>
      (DeclStmt 0x9bfc338 <line:64:4, col:70>
        0x9bfc220 "const typename _Traits::int_type __put =
          (CallExpr 0x9bfc318 <col:45, col:69> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9bfc2c8 <col:45, col:60> '<dependent type>' lvalue
              (CallExpr 0x9bfc2a8 <col:45, col:57> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9bfc270 <col:45, col:51> '<dependent type>' lvalue
                  (DeclRefExpr 0x9bfc254 <col:45> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9bfbcc0 '__out' 'basic_ostream<_CharT, _Traits> &'))))
            (DeclRefExpr 0x9bfc2fc <col:66> 'const _CharT' lvalue Var 0x9bfc050 '__c' 'const _CharT'))")
      (IfStmt 0x9bfc530 <line:65:4, line:69:6>
        <<<NULL>>>
        (CallExpr 0x9bfc418 <line:65:8, col:50> '<dependent type>'
          (DependentScopeDeclRefExpr 0x9bfc370 <col:8, col:17> '<dependent type>' lvalue)
          (DeclRefExpr 0x9bfc394 <col:29> 'const typename _Traits::int_type' lvalue Var 0x9bfc220 '__put' 'const typename _Traits::int_type')
          (CallExpr 0x9bfc3f8 <col:36, col:49> '<dependent type>'
            (DependentScopeDeclRefExpr 0x9bfc3d0 <col:36, col:45> '<dependent type>' lvalue)))
        (CompoundStmt 0x9bfc518 <line:66:6, line:69:6>
          (CallExpr 0x9bfc4f0 <line:67:8, col:41> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9bfc458 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0x9bfc43c <col:8> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9bfbcc0 '__out' 'basic_ostream<_CharT, _Traits> &'))
            (DependentScopeDeclRefExpr 0x9bfc4c8 <col:23, col:35> '<dependent type>' lvalue))
          (BreakStmt 0x9bfc510 <line:68:8>))
        <<<NULL>>>))))

;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> basic_ostream<char, std::char_traits<char> > &__ostream_insert(basic_ostream<char, std::char_traits<char> > &__out, const char *__s, streamsize __n)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> basic_ostream<wchar_t, std::char_traits<wchar_t> > &__ostream_insert(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__out, const wchar_t *__s, streamsize __n)template <typename _CharT, typename _Traits> basic_ostream<_CharT, _Traits> &__ostream_insert(basic_ostream<_CharT, _Traits> &__out, const _CharT *__s, streamsize __n) (CompoundStmt 0x9bfddd0 </usr/include/c++/4.6/bits/ostream_insert.h:77:5, line:112:5>
  (DeclStmt 0x9bfcc10 <line:78:7, col:66>
    0x9bfcbe0 "typedef basic_ostream<_CharT, _Traits> __ostream_type")
  (DeclStmt 0x9bfccd0 <line:79:7, col:62>
    0x9bfcca0 "typedef typename __ostream_type::ios_base __ios_base")
  (DeclStmt 0x9bfcdd0 <line:81:7, col:52>
    0x9bfcd60 "typename __ostream_type::sentry __cerb =
      (ParenListExpr 0x9bfcdb0 <col:45, col:51> 'typename __ostream_type::sentry'
        (DeclRefExpr 0x9bfcd94 <col:46> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9bfc870 '__out' 'basic_ostream<_CharT, _Traits> &'))")
  (IfStmt 0x9bfdd88 <line:82:7, line:110:2>
    <<<NULL>>>
    (DeclRefExpr 0x9bfcde0 <line:82:11> 'typename __ostream_type::sentry' lvalue Var 0x9bfcd60 '__cerb' 'typename __ostream_type::sentry')
    (CompoundStmt 0x9bfdd68 <line:83:2, line:110:2>
      (IfStmt 0x9bfdb38 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/ostream_insert.h:102:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9bfcdf8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9bfdb18 </usr/include/c++/4.6/bits/ostream_insert.h:85:6, line:102:6>
          (DeclStmt 0x9bfceb8 <line:86:8, col:44>
            0x9bfce10 "const streamsize __w =
              (CallExpr 0x9bfce98 <col:31, col:43> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9bfce60 <col:31, col:37> '<dependent type>' lvalue
                  (DeclRefExpr 0x9bfce44 <col:31> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9bfc870 '__out' 'basic_ostream<_CharT, _Traits> &')))")
          (IfStmt 0x9bfd640 <line:87:8, line:100:34>
            <<<NULL>>>
            (BinaryOperator 0x9bfcf18 <line:87:12, col:18> '_Bool' '>'
              (ImplicitCastExpr 0x9bfcef8 <col:12> 'streamsize':'int' <LValueToRValue>
                (DeclRefExpr 0x9bfcec8 <col:12> 'const streamsize':'const int' lvalue Var 0x9bfce10 '__w' 'const streamsize':'const int'))
              (ImplicitCastExpr 0x9bfcf08 <col:18> 'streamsize':'int' <LValueToRValue>
                (DeclRefExpr 0x9bfcee0 <col:18> 'streamsize':'int' lvalue ParmVar 0x9bfc920 '__n' 'streamsize':'int')))
            (CompoundStmt 0x9bfd578 <line:88:3, line:98:3>
              (DeclStmt 0x9bfd150 <line:89:5, line:91:32>
                0x9bfcf40 "const bool __left =
                  (ParenExpr 0x9bfd138 <line:89:25, line:91:31> '<dependent type>'
                    (CXXOperatorCallExpr 0x9bfd110 <line:89:26, line:91:27> '<dependent type>'
                      (UnresolvedLookupExpr 0x9bfd0c8 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90)
                      (ParenExpr 0x9bfd068 <line:89:26, line:90:31> '<dependent type>'
                        (BinaryOperator 0x9bfd050 <line:89:27, line:90:20> '<dependent type>' '&'
                          (CallExpr 0x9bfcfc8 <line:89:27, col:39> '<dependent type>'
                            (CXXDependentScopeMemberExpr 0x9bfcf90 <col:27, col:33> '<dependent type>' lvalue
                              (DeclRefExpr 0x9bfcf74 <col:27> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9bfc870 '__out' 'basic_ostream<_CharT, _Traits> &')))
                          (DependentScopeDeclRefExpr 0x9bfd028 <line:90:8, col:20> '<dependent type>' lvalue)))
                      (DependentScopeDeclRefExpr 0x9bfd0a0 <line:91:15, col:27> '<dependent type>' lvalue)))")
              (IfStmt 0x9bfd280 <line:92:5, line:93:38>
                <<<NULL>>>
                (UnaryOperator 0x9bfd188 <line:92:9, col:10> '_Bool' prefix '!'
                  (ImplicitCastExpr 0x9bfd178 <col:10> '_Bool' <LValueToRValue>
                    (DeclRefExpr 0x9bfd160 <col:10> 'const _Bool' lvalue Var 0x9bfcf40 '__left' 'const _Bool')))
                (CallExpr 0x9bfd258 <line:93:7, col:38> '<dependent type>'
                  (UnresolvedLookupExpr 0x9bfd1a0 <col:7> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfbe00)
                  (DeclRefExpr 0x9bfd1d4 <col:22> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9bfc870 '__out' 'basic_ostream<_CharT, _Traits> &')
                  (BinaryOperator 0x9bfd240 <col:29, col:35> 'int' '-'
                    (ImplicitCastExpr 0x9bfd220 <col:29> 'streamsize':'int' <LValueToRValue>
                      (DeclRefExpr 0x9bfd1ec <col:29> 'const streamsize':'const int' lvalue Var 0x9bfce10 '__w' 'const streamsize':'const int'))
                    (ImplicitCastExpr 0x9bfd230 <col:35> 'streamsize':'int' <LValueToRValue>
                      (DeclRefExpr 0x9bfd204 <col:35> 'streamsize':'int' lvalue ParmVar 0x9bfc920 '__n' 'streamsize':'int'))))
                <<<NULL>>>)
              (IfStmt 0x9bfd3b8 <line:94:5, line:95:38>
                <<<NULL>>>
                (CallExpr 0x9bfd2f0 <line:94:9, col:20> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9bfd2b8 <col:9, col:15> '<dependent type>' lvalue
                    (DeclRefExpr 0x9bfd29c <col:9> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9bfc870 '__out' 'basic_ostream<_CharT, _Traits> &')))
                (CallExpr 0x9bfd390 <line:95:7, col:38> '<dependent type>'
                  (UnresolvedLookupExpr 0x9bfd310 <col:7> '<overloaded function type>' lvalue (ADL) = '1' 0x9bf2570)
                  (DeclRefExpr 0x9bfd344 <col:23> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9bfc870 '__out' 'basic_ostream<_CharT, _Traits> &')
                  (DeclRefExpr 0x9bfd35c <col:30> 'const _CharT *' lvalue ParmVar 0x9bfc8e0 '__s' 'const _CharT *')
                  (DeclRefExpr 0x9bfd374 <col:35> 'streamsize':'int' lvalue ParmVar 0x9bfc920 '__n' 'streamsize':'int'))
                <<<NULL>>>)
              (IfStmt 0x9bfd558 <line:96:5, line:97:38>
                <<<NULL>>>
                (BinaryOperator 0x9bfd460 <line:96:9, col:30> '<dependent type>' '&&'
                  (DeclRefExpr 0x9bfd3d4 <col:9> 'const _Bool' lvalue Var 0x9bfcf40 '__left' 'const _Bool')
                  (CallExpr 0x9bfd440 <col:19, col:30> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9bfd408 <col:19, col:25> '<dependent type>' lvalue
                      (DeclRefExpr 0x9bfd3ec <col:19> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9bfc870 '__out' 'basic_ostream<_CharT, _Traits> &'))))
                (CallExpr 0x9bfd530 <line:97:7, col:38> '<dependent type>'
                  (UnresolvedLookupExpr 0x9bfd478 <col:7> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfbe00)
                  (DeclRefExpr 0x9bfd4ac <col:22> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9bfc870 '__out' 'basic_ostream<_CharT, _Traits> &')
                  (BinaryOperator 0x9bfd518 <col:29, col:35> 'int' '-'
                    (ImplicitCastExpr 0x9bfd4f8 <col:29> 'streamsize':'int' <LValueToRValue>
                      (DeclRefExpr 0x9bfd4c4 <col:29> 'const streamsize':'const int' lvalue Var 0x9bfce10 '__w' 'const streamsize':'const int'))
                    (ImplicitCastExpr 0x9bfd508 <col:35> 'streamsize':'int' <LValueToRValue>
                      (DeclRefExpr 0x9bfd4dc <col:35> 'streamsize':'int' lvalue ParmVar 0x9bfc920 '__n' 'streamsize':'int'))))
                <<<NULL>>>))
            (CallExpr 0x9bfd618 <line:100:3, col:34> '<dependent type>'
              (UnresolvedLookupExpr 0x9bfd598 <col:3> '<overloaded function type>' lvalue (ADL) = '1' 0x9bf2570)
              (DeclRefExpr 0x9bfd5cc <col:19> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9bfc870 '__out' 'basic_ostream<_CharT, _Traits> &')
              (DeclRefExpr 0x9bfd5e4 <col:26> 'const _CharT *' lvalue ParmVar 0x9bfc8e0 '__s' 'const _CharT *')
              (DeclRefExpr 0x9bfd5fc <col:31> 'streamsize':'int' lvalue ParmVar 0x9bfc920 '__n' 'streamsize':'int')))
          (CallExpr 0x9bfdaf8 <line:101:8, col:21> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9bfdaa8 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0x9bfd65c <col:8> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9bfc870 '__out' 'basic_ostream<_CharT, _Traits> &'))
            (IntegerLiteral 0x9bfdae0 <col:20> 'int' 0)))
        <<<NULL>>>)
      (IfStmt 0x9bfdc48 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream_insert.h:107:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9bfdb58 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9bfdc30 </usr/include/c++/4.6/bits/ostream_insert.h:104:6, line:107:6>
          (CallExpr 0x9bfdc00 <line:105:8, col:44> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9bfdb80 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0x9bfdb68 <col:8> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9bfc870 '__out' 'basic_ostream<_CharT, _Traits> &'))
            (DependentScopeDeclRefExpr 0x9bfdbd8 <col:26, col:38> '<dependent type>' lvalue))
          (NullStmt 0x9bfdc20 <line:106:31>))
        <<<NULL>>>)
      (IfStmt 0x9bfdd48 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream_insert.h:109:47>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9bfdc68 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9bfdd30 </usr/include/c++/4.6/bits/ostream_insert.h:109:6, col:47>
          (CallExpr 0x9bfdd10 <col:8, col:44> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9bfdc90 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0x9bfdc78 <col:8> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9bfc870 '__out' 'basic_ostream<_CharT, _Traits> &'))
            (DependentScopeDeclRefExpr 0x9bfdce8 <col:26, col:38> '<dependent type>' lvalue)))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9bfddc0 <line:111:7, col:14>
    (DeclRefExpr 0x9bfdda4 <col:14> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9bfc870 '__out' 'basic_ostream<_CharT, _Traits> &')))

;
}
namespace std {
    template <typename _Arg, typename _Result> struct unary_function {
        struct unary_function;
        typedef _Arg argument_type;
        typedef _Result result_type;
    };
    template <typename _Arg1, typename _Arg2, typename _Result> struct binary_function {
        struct binary_function;
        typedef _Arg1 first_argument_type;
        typedef _Arg2 second_argument_type;
        typedef _Result result_type;
    };
    template <typename _Tp> struct plus : public binary_function<_Tp, _Tp, _Tp> {
        struct plus;
        _Tp operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x9bff7e0 </usr/include/c++/4.6/bits/stl_function.h:145:7, col:27>
  (ReturnStmt 0x9bff7d0 <col:9, col:22>
    (CXXOperatorCallExpr 0x9bff7a8 <col:16, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0x9bff770 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0)
      (DeclRefExpr 0x9bff740 <col:16> 'const _Tp' lvalue ParmVar 0x9bff5d0 '__x' 'const _Tp &')
      (DeclRefExpr 0x9bff758 <col:22> 'const _Tp' lvalue ParmVar 0x9bff620 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct minus : public binary_function<_Tp, _Tp, _Tp> {
        struct minus;
        _Tp operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x9c01090 </usr/include/c++/4.6/bits/stl_function.h:154:7, col:27>
  (ReturnStmt 0x9c01080 <col:9, col:22>
    (CXXOperatorCallExpr 0x9c01058 <col:16, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0x9c01020 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
      (DeclRefExpr 0x9c00ff0 <col:16> 'const _Tp' lvalue ParmVar 0x9c00ea0 '__x' 'const _Tp &')
      (DeclRefExpr 0x9c01008 <col:22> 'const _Tp' lvalue ParmVar 0x9c00ef0 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct multiplies : public binary_function<_Tp, _Tp, _Tp> {
        struct multiplies;
        _Tp operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x9c01628 </usr/include/c++/4.6/bits/stl_function.h:163:7, col:27>
  (ReturnStmt 0x9c01618 <col:9, col:22>
    (BinaryOperator 0x9c01600 <col:16, col:22> '<dependent type>' '*'
      (DeclRefExpr 0x9c015d0 <col:16> 'const _Tp' lvalue ParmVar 0x9c01480 '__x' 'const _Tp &')
      (DeclRefExpr 0x9c015e8 <col:22> 'const _Tp' lvalue ParmVar 0x9c014d0 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct divides : public binary_function<_Tp, _Tp, _Tp> {
        struct divides;
        _Tp operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x9c01bb8 </usr/include/c++/4.6/bits/stl_function.h:172:7, col:27>
  (ReturnStmt 0x9c01ba8 <col:9, col:22>
    (BinaryOperator 0x9c01b90 <col:16, col:22> '<dependent type>' '/'
      (DeclRefExpr 0x9c01b60 <col:16> 'const _Tp' lvalue ParmVar 0x9c01a10 '__x' 'const _Tp &')
      (DeclRefExpr 0x9c01b78 <col:22> 'const _Tp' lvalue ParmVar 0x9c01a60 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct modulus : public binary_function<_Tp, _Tp, _Tp> {
        struct modulus;
        _Tp operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x9c02148 </usr/include/c++/4.6/bits/stl_function.h:181:7, col:27>
  (ReturnStmt 0x9c02138 <col:9, col:22>
    (BinaryOperator 0x9c02120 <col:16, col:22> '<dependent type>' '%'
      (DeclRefExpr 0x9c020f0 <col:16> 'const _Tp' lvalue ParmVar 0x9c01fa0 '__x' 'const _Tp &')
      (DeclRefExpr 0x9c02108 <col:22> 'const _Tp' lvalue ParmVar 0x9c01ff0 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct negate : public unary_function<_Tp, _Tp> {
        struct negate;
        _Tp operator()(const _Tp &__x) const (CompoundStmt 0x9c026e0 </usr/include/c++/4.6/bits/stl_function.h:190:7, col:22>
  (ReturnStmt 0x9c026d0 <col:9, col:17>
    (CXXOperatorCallExpr 0x9c026b0 <col:16, col:17> '<dependent type>'
      (UnresolvedLookupExpr 0x9c02678 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
      (DeclRefExpr 0x9c02660 <col:17> 'const _Tp' lvalue ParmVar 0x9c02540 '__x' 'const _Tp &'))))


    };
    template <typename _Tp> struct equal_to : public binary_function<_Tp, _Tp, bool> {
        struct equal_to;
        bool operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x9c051d8 </usr/include/c++/4.6/bits/stl_function.h:209:7, col:28>
  (ReturnStmt 0x9c051c8 <col:9, col:23>
    (CXXOperatorCallExpr 0x9c02d18 <col:16, col:23> '<dependent type>'
      (UnresolvedLookupExpr 0x9c02cd0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90)
      (DeclRefExpr 0x9c02ca0 <col:16> 'const _Tp' lvalue ParmVar 0x9c02b30 '__x' 'const _Tp &')
      (DeclRefExpr 0x9c02cb8 <col:23> 'const _Tp' lvalue ParmVar 0x9c02b80 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct not_equal_to : public binary_function<_Tp, _Tp, bool> {
        struct not_equal_to;
        bool operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x9c057c0 </usr/include/c++/4.6/bits/stl_function.h:218:7, col:28>
  (ReturnStmt 0x9c057b0 <col:9, col:23>
    (CXXOperatorCallExpr 0x9c05788 <col:16, col:23> '<dependent type>'
      (UnresolvedLookupExpr 0x9c05740 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b412d0 0x9ac7fa0 0x9b5e2b0 0x9ba7d20 0x9bc7160 0x9bc74d0)
      (DeclRefExpr 0x9c05710 <col:16> 'const _Tp' lvalue ParmVar 0x9c055c0 '__x' 'const _Tp &')
      (DeclRefExpr 0x9c05728 <col:23> 'const _Tp' lvalue ParmVar 0x9c05610 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct greater : public binary_function<_Tp, _Tp, bool> {
        struct greater;
        bool operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x9c05da8 </usr/include/c++/4.6/bits/stl_function.h:227:7, col:27>
  (ReturnStmt 0x9c05d98 <col:9, col:22>
    (CXXOperatorCallExpr 0x9c05d70 <col:16, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0x9c05d30 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b42c70 0x9ac83c0 0x9b5e730)
      (DeclRefExpr 0x9c05d00 <col:16> 'const _Tp' lvalue ParmVar 0x9c05bb0 '__x' 'const _Tp &')
      (DeclRefExpr 0x9c05d18 <col:22> 'const _Tp' lvalue ParmVar 0x9c05c00 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct less : public binary_function<_Tp, _Tp, bool> {
        struct less;
        bool operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x9c06388 </usr/include/c++/4.6/bits/stl_function.h:236:7, col:27>
  (ReturnStmt 0x9c06378 <col:9, col:22>
    (CXXOperatorCallExpr 0x9c06350 <col:16, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0x9c06310 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40ad0 0x9b57c70 0x9b5ddb0)
      (DeclRefExpr 0x9c062e0 <col:16> 'const _Tp' lvalue ParmVar 0x9c06190 '__x' 'const _Tp &')
      (DeclRefExpr 0x9c062f8 <col:22> 'const _Tp' lvalue ParmVar 0x9c061e0 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct greater_equal : public binary_function<_Tp, _Tp, bool> {
        struct greater_equal;
        bool operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x9c06968 </usr/include/c++/4.6/bits/stl_function.h:245:7, col:28>
  (ReturnStmt 0x9c06958 <col:9, col:23>
    (CXXOperatorCallExpr 0x9c06930 <col:16, col:23> '<dependent type>'
      (UnresolvedLookupExpr 0x9c068f0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b436e0 0x9ac8bd0 0x9b5f010)
      (DeclRefExpr 0x9c068c0 <col:16> 'const _Tp' lvalue ParmVar 0x9c06770 '__x' 'const _Tp &')
      (DeclRefExpr 0x9c068d8 <col:23> 'const _Tp' lvalue ParmVar 0x9c067c0 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct less_equal : public binary_function<_Tp, _Tp, bool> {
        struct less_equal;
        bool operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x9c06f48 </usr/include/c++/4.6/bits/stl_function.h:254:7, col:28>
  (ReturnStmt 0x9c06f38 <col:9, col:23>
    (CXXOperatorCallExpr 0x9c06f10 <col:16, col:23> '<dependent type>'
      (UnresolvedLookupExpr 0x9c06ed0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b43190 0x9ac87b0 0x9b5eb90)
      (DeclRefExpr 0x9c06ea0 <col:16> 'const _Tp' lvalue ParmVar 0x9c06d50 '__x' 'const _Tp &')
      (DeclRefExpr 0x9c06eb8 <col:23> 'const _Tp' lvalue ParmVar 0x9c06da0 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct logical_and : public binary_function<_Tp, _Tp, bool> {
        struct logical_and;
        bool operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x9c097a8 </usr/include/c++/4.6/bits/stl_function.h:273:7, col:28>
  (ReturnStmt 0x9c09798 <col:9, col:23>
    (BinaryOperator 0x9c09780 <col:16, col:23> '<dependent type>' '&&'
      (DeclRefExpr 0x9c09750 <col:16> 'const _Tp' lvalue ParmVar 0x9c09600 '__x' 'const _Tp &')
      (DeclRefExpr 0x9c09768 <col:23> 'const _Tp' lvalue ParmVar 0x9c09650 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct logical_or : public binary_function<_Tp, _Tp, bool> {
        struct logical_or;
        bool operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x9c09d38 </usr/include/c++/4.6/bits/stl_function.h:282:7, col:28>
  (ReturnStmt 0x9c09d28 <col:9, col:23>
    (BinaryOperator 0x9c09d10 <col:16, col:23> '<dependent type>' '||'
      (DeclRefExpr 0x9c09ce0 <col:16> 'const _Tp' lvalue ParmVar 0x9c09b90 '__x' 'const _Tp &')
      (DeclRefExpr 0x9c09cf8 <col:23> 'const _Tp' lvalue ParmVar 0x9c09be0 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct logical_not : public unary_function<_Tp, bool> {
        struct logical_not;
        bool operator()(const _Tp &__x) const (CompoundStmt 0x9c0a290 </usr/include/c++/4.6/bits/stl_function.h:291:7, col:22>
  (ReturnStmt 0x9c0a280 <col:9, col:17>
    (UnaryOperator 0x9c0a268 <col:16, col:17> '<dependent type>' prefix '!'
      (DeclRefExpr 0x9c0a250 <col:17> 'const _Tp' lvalue ParmVar 0x9c0a130 '__x' 'const _Tp &'))))


    };
    template <typename _Tp> struct bit_and : public binary_function<_Tp, _Tp, _Tp> {
        struct bit_and;
        _Tp operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x9c0a828 </usr/include/c++/4.6/bits/stl_function.h:302:7, col:27>
  (ReturnStmt 0x9c0a818 <col:9, col:22>
    (BinaryOperator 0x9c0a800 <col:16, col:22> '<dependent type>' '&'
      (DeclRefExpr 0x9c0a7d0 <col:16> 'const _Tp' lvalue ParmVar 0x9c0a680 '__x' 'const _Tp &')
      (DeclRefExpr 0x9c0a7e8 <col:22> 'const _Tp' lvalue ParmVar 0x9c0a6d0 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct bit_or : public binary_function<_Tp, _Tp, _Tp> {
        struct bit_or;
        _Tp operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x9c0adb8 </usr/include/c++/4.6/bits/stl_function.h:310:7, col:27>
  (ReturnStmt 0x9c0ada8 <col:9, col:22>
    (BinaryOperator 0x9c0ad90 <col:16, col:22> '<dependent type>' '|'
      (DeclRefExpr 0x9c0ad60 <col:16> 'const _Tp' lvalue ParmVar 0x9c0ac10 '__x' 'const _Tp &')
      (DeclRefExpr 0x9c0ad78 <col:22> 'const _Tp' lvalue ParmVar 0x9c0ac60 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct bit_xor : public binary_function<_Tp, _Tp, _Tp> {
        struct bit_xor;
        _Tp operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x9c0b348 </usr/include/c++/4.6/bits/stl_function.h:318:7, col:27>
  (ReturnStmt 0x9c0b338 <col:9, col:22>
    (BinaryOperator 0x9c0b320 <col:16, col:22> '<dependent type>' '^'
      (DeclRefExpr 0x9c0b2f0 <col:16> 'const _Tp' lvalue ParmVar 0x9c0b1a0 '__x' 'const _Tp &')
      (DeclRefExpr 0x9c0b308 <col:22> 'const _Tp' lvalue ParmVar 0x9c0b1f0 '__y' 'const _Tp &'))))


    };
    template <typename _Predicate> class unary_negate : public unary_function<typename _Predicate::argument_type, bool> {
        class unary_negate;
    protected:
    protected:
        _Predicate _M_pred;
    public:
    public:
        unary_negate<_Predicate>(const _Predicate &__x) : _M_pred((DeclRefExpr 0x9c0df34 </usr/include/c++/4.6/bits/stl_function.h:360:53> 'const _Predicate' lvalue ParmVar 0x9c0dcb0 '__x' 'const _Predicate &')
) (CompoundStmt 0x9c0df90 </usr/include/c++/4.6/bits/stl_function.h:360:58, col:60>)


        bool operator()(const typename _Predicate::argument_type &__x) const (CompoundStmt 0x9c0e068 </usr/include/c++/4.6/bits/stl_function.h:364:7, col:31>
  (ReturnStmt 0x9c0e058 <col:9, col:28>
    (UnaryOperator 0x9c0e040 <col:16, col:28> '<dependent type>' prefix '!'
      (CallExpr 0x9c0e020 <col:17, col:28> '<dependent type>'
        (MemberExpr 0x9c0dfe4 <col:17> 'const _Predicate' lvalue ->_M_pred 0x9c0dc10
          (CXXThisExpr 0x9c0dfb8 <col:17> 'const unary_negate<_Predicate> *' this))
        (DeclRefExpr 0x9c0e004 <col:25> 'const typename _Predicate::argument_type' lvalue ParmVar 0x9c0de30 '__x' 'const typename _Predicate::argument_type &')))))


    };
    template <typename _Predicate> inline unary_negate<_Predicate> not1(const _Predicate &__pred) (CompoundStmt 0x9c0e3c8 </usr/include/c++/4.6/bits/stl_function.h:371:5, col:48>
  (ReturnStmt 0x9c0e3b8 <col:7, col:45>
    (CXXUnresolvedConstructExpr 0x9c0e398 <col:14, col:45> 'unary_negate<_Predicate>'
      (DeclRefExpr 0x9c0e380 <col:39> 'const _Predicate' lvalue ParmVar 0x9c0e190 '__pred' 'const _Predicate &'))))

;
    template <typename _Predicate> class binary_negate : public binary_function<typename _Predicate::first_argument_type, typename _Predicate::second_argument_type, bool> {
        class binary_negate;
    protected:
    protected:
        _Predicate _M_pred;
    public:
    public:
        binary_negate<_Predicate>(const _Predicate &__x) : _M_pred((DeclRefExpr 0x9c0ecf8 </usr/include/c++/4.6/bits/stl_function.h:384:54> 'const _Predicate' lvalue ParmVar 0x9c0e9c0 '__x' 'const _Predicate &')
) (CompoundStmt 0x9c0ed50 </usr/include/c++/4.6/bits/stl_function.h:384:59, col:61>)


        bool operator()(const typename _Predicate::first_argument_type &__x, const typename _Predicate::second_argument_type &__y) const (CompoundStmt 0x9c0ee48 </usr/include/c++/4.6/bits/stl_function.h:389:7, col:36>
  (ReturnStmt 0x9c0ee38 <col:9, col:33>
    (UnaryOperator 0x9c0ee20 <col:16, col:33> '<dependent type>' prefix '!'
      (CallExpr 0x9c0edf8 <col:17, col:33> '<dependent type>'
        (MemberExpr 0x9c0eda4 <col:17> 'const _Predicate' lvalue ->_M_pred 0x9c0e920
          (CXXThisExpr 0x9c0ed78 <col:17> 'const binary_negate<_Predicate> *' this))
        (DeclRefExpr 0x9c0edc4 <col:25> 'const typename _Predicate::first_argument_type' lvalue ParmVar 0x9c0eb40 '__x' 'const typename _Predicate::first_argument_type &')
        (DeclRefExpr 0x9c0eddc <col:30> 'const typename _Predicate::second_argument_type' lvalue ParmVar 0x9c0ebf0 '__y' 'const typename _Predicate::second_argument_type &')))))


    };
    template <typename _Predicate> inline binary_negate<_Predicate> not2(const _Predicate &__pred) (CompoundStmt 0x9c0f1a8 </usr/include/c++/4.6/bits/stl_function.h:396:5, col:49>
  (ReturnStmt 0x9c0f198 <col:7, col:46>
    (CXXUnresolvedConstructExpr 0x9c0f178 <col:14, col:46> 'binary_negate<_Predicate>'
      (DeclRefExpr 0x9c0f160 <col:40> 'const _Predicate' lvalue ParmVar 0x9c0ef70 '__pred' 'const _Predicate &'))))

;
    template <typename _Arg, typename _Result> class pointer_to_unary_function : public unary_function<_Arg, _Result> {
        class pointer_to_unary_function;
    protected:
    protected:
        _Result (*_M_ptr)(_Arg);
    public:
    public:
        pointer_to_unary_function<_Arg, _Result>() (CompoundStmt 0x9c112b8 </usr/include/c++/4.6/bits/stl_function.h:429:35, col:37>)


        pointer_to_unary_function<_Arg, _Result>(_Result (*__x)(_Arg)) : _M_ptr((DeclRefExpr 0x9c112c8 </usr/include/c++/4.6/bits/stl_function.h:433:16> '_Result (*)(_Arg)' lvalue ParmVar 0x9c11090 '__x' '_Result (*)(_Arg)')
) (CompoundStmt 0x9c11320 </usr/include/c++/4.6/bits/stl_function.h:433:21, col:23>)


        _Result operator()(_Arg __x) const (CompoundStmt 0x9c113e0 </usr/include/c++/4.6/bits/stl_function.h:437:7, col:29>
  (ReturnStmt 0x9c113d0 <col:9, col:26>
    (CallExpr 0x9c113b0 <col:16, col:26> '<dependent type>'
      (MemberExpr 0x9c11374 <col:16> '_Result (*const)(_Arg)' lvalue ->_M_ptr 0x9c0f700
        (CXXThisExpr 0x9c11348 <col:16> 'const pointer_to_unary_function<_Arg, _Result> *' this))
      (DeclRefExpr 0x9c11394 <col:23> '_Arg' lvalue ParmVar 0x9c111b0 '__x' '_Arg'))))


    };
    template <typename _Arg, typename _Result> inline pointer_to_unary_function<_Arg, _Result> ptr_fun(_Result (*__x)(_Arg)) (CompoundStmt 0x9c118f0 </usr/include/c++/4.6/bits/stl_function.h:444:5, col:61>
  (ReturnStmt 0x9c118e0 <col:7, col:58>
    (CXXUnresolvedConstructExpr 0x9c118c0 <col:14, col:58> 'pointer_to_unary_function<_Arg, _Result>'
      (DeclRefExpr 0x9c118a8 <col:55> '_Result (*)(_Arg)' lvalue ParmVar 0x9c11650 '__x' '_Result (*)(_Arg)'))))

;
    template <typename _Arg1, typename _Arg2, typename _Result> class pointer_to_binary_function : public binary_function<_Arg1, _Arg2, _Result> {
        class pointer_to_binary_function;
    protected:
    protected:
        _Result (*_M_ptr)(_Arg1, _Arg2);
    public:
    public:
        pointer_to_binary_function<_Arg1, _Arg2, _Result>() (CompoundStmt 0x9c12358 </usr/include/c++/4.6/bits/stl_function.h:455:36, col:38>)


        pointer_to_binary_function<_Arg1, _Arg2, _Result>(_Result (*__x)(_Arg1, _Arg2)) : _M_ptr((DeclRefExpr 0x9c12368 </usr/include/c++/4.6/bits/stl_function.h:459:16> '_Result (*)(_Arg1, _Arg2)' lvalue ParmVar 0x9c120f0 '__x' '_Result (*)(_Arg1, _Arg2)')
) (CompoundStmt 0x9c123c0 </usr/include/c++/4.6/bits/stl_function.h:459:21, col:23>)


        _Result operator()(_Arg1 __x, _Arg2 __y) const (CompoundStmt 0x9c124a0 </usr/include/c++/4.6/bits/stl_function.h:463:7, col:34>
  (ReturnStmt 0x9c12490 <col:9, col:31>
    (CallExpr 0x9c12468 <col:16, col:31> '<dependent type>'
      (MemberExpr 0x9c12414 <col:16> '_Result (*const)(_Arg1, _Arg2)' lvalue ->_M_ptr 0x9c11f40
        (CXXThisExpr 0x9c123e8 <col:16> 'const pointer_to_binary_function<_Arg1, _Arg2, _Result> *' this))
      (DeclRefExpr 0x9c12434 <col:23> '_Arg1' lvalue ParmVar 0x9c12210 '__x' '_Arg1')
      (DeclRefExpr 0x9c1244c <col:28> '_Arg2' lvalue ParmVar 0x9c12250 '__y' '_Arg2'))))


    };
    template <typename _Arg1, typename _Arg2, typename _Result> inline pointer_to_binary_function<_Arg1, _Arg2, _Result> ptr_fun(_Result (*__x)(_Arg1, _Arg2)) (CompoundStmt 0x9c12af8 </usr/include/c++/4.6/bits/stl_function.h:470:5, col:70>
  (ReturnStmt 0x9c12ae8 <col:7, col:67>
    (CXXUnresolvedConstructExpr 0x9c12ac8 <col:14, col:67> 'pointer_to_binary_function<_Arg1, _Arg2, _Result>'
      (DeclRefExpr 0x9c12ab0 <col:64> '_Result (*)(_Arg1, _Arg2)' lvalue ParmVar 0x9c127f0 '__x' '_Result (*)(_Arg1, _Arg2)'))))

;
    template <typename _Tp> struct _Identity : public unary_function<_Tp, _Tp> {
        struct _Identity;
        _Tp &operator()(_Tp &__x) const (CompoundStmt 0x9c14028 </usr/include/c++/4.6/bits/stl_function.h:478:7, col:21>
  (ReturnStmt 0x9c14018 <col:9, col:16>
    (DeclRefExpr 0x9c14000 <col:16> '_Tp' lvalue ParmVar 0x9c12ea0 '__x' '_Tp &')))


        const _Tp &operator()(const _Tp &__x) const (CompoundStmt 0x9c14068 </usr/include/c++/4.6/bits/stl_function.h:482:7, col:21>
  (ReturnStmt 0x9c14058 <col:9, col:16>
    (DeclRefExpr 0x9c1403c <col:16> 'const _Tp' lvalue ParmVar 0x9c12fe0 '__x' 'const _Tp &')))


    };
    template <typename _Pair> struct _Select1st : public unary_function<_Pair, typename _Pair::first_type> {
        struct _Select1st;
        typename _Pair::first_type &operator()(_Pair &__x) const (CompoundStmt 0x9c14890 </usr/include/c++/4.6/bits/stl_function.h:491:7, col:27>
  (ReturnStmt 0x9c14880 <col:9, col:20>
    (CXXDependentScopeMemberExpr 0x9c14848 <col:16, col:20> '<dependent type>' lvalue
      (DeclRefExpr 0x9c14830 <col:16> '_Pair' lvalue ParmVar 0x9c14510 '__x' '_Pair &'))))


        const typename _Pair::first_type &operator()(const _Pair &__x) const (CompoundStmt 0x9c14908 </usr/include/c++/4.6/bits/stl_function.h:495:7, col:27>
  (ReturnStmt 0x9c148f8 <col:9, col:20>
    (CXXDependentScopeMemberExpr 0x9c148c0 <col:16, col:20> '<dependent type>' lvalue
      (DeclRefExpr 0x9c148a4 <col:16> 'const _Pair' lvalue ParmVar 0x9c146c0 '__x' 'const _Pair &'))))


    };
    template <typename _Pair> struct _Select2nd : public unary_function<_Pair, typename _Pair::second_type> {
        struct _Select2nd;
        typename _Pair::second_type &operator()(_Pair &__x) const (CompoundStmt 0x9c15130 </usr/include/c++/4.6/bits/stl_function.h:516:7, col:28>
  (ReturnStmt 0x9c15120 <col:9, col:20>
    (CXXDependentScopeMemberExpr 0x9c150e8 <col:16, col:20> '<dependent type>' lvalue
      (DeclRefExpr 0x9c150d0 <col:16> '_Pair' lvalue ParmVar 0x9c14db0 '__x' '_Pair &'))))


        const typename _Pair::second_type &operator()(const _Pair &__x) const (CompoundStmt 0x9c151a8 </usr/include/c++/4.6/bits/stl_function.h:520:7, col:28>
  (ReturnStmt 0x9c15198 <col:9, col:20>
    (CXXDependentScopeMemberExpr 0x9c15160 <col:16, col:20> '<dependent type>' lvalue
      (DeclRefExpr 0x9c15144 <col:16> 'const _Pair' lvalue ParmVar 0x9c14f60 '__x' 'const _Pair &'))))


    };
    template <typename _Ret, typename _Tp> class mem_fun_t : public unary_function<_Tp *, _Ret> {
        class mem_fun_t;
    public:
    public:
        mem_fun_t<_Ret, _Tp>(_Ret (_Tp::*__pf)()) : _M_f((DeclRefExpr 0x9c15a40 </usr/include/c++/4.6/bits/stl_function.h:547:14> '_Ret (_Tp::*)(void)' lvalue ParmVar 0x9c15750 '__pf' '_Ret (_Tp::*)(void)')
) (CompoundStmt 0x9c15aa0 </usr/include/c++/4.6/bits/stl_function.h:547:20, col:22>)


        _Ret operator()(_Tp *__p) const (CompoundStmt 0x9c15b98 </usr/include/c++/4.6/bits/stl_function.h:551:7, col:32>
  (ReturnStmt 0x9c15b88 <col:9, col:29>
    (CallExpr 0x9c15b68 <col:16, col:29> '<dependent type>'
      (ParenExpr 0x9c15b50 <col:16, col:27> '<dependent type>'
        (BinaryOperator 0x9c15b38 <col:17, col:23> '<dependent type>' '->*'
          (DeclRefExpr 0x9c15ab0 <col:17> '_Tp *' lvalue ParmVar 0x9c15880 '__p' '_Tp *')
          (MemberExpr 0x9c15b14 <col:23> '_Ret (_Tp::*const)(void)' lvalue ->_M_f 0x9c15a10
            (CXXThisExpr 0x9c15ae8 <col:23> 'const mem_fun_t<_Ret, _Tp> *' this)))))))


    private:
    private:
        _Ret (_Tp::*_M_f)();
    };
    template <typename _Ret, typename _Tp> class const_mem_fun_t : public unary_function<const _Tp *, _Ret> {
        class const_mem_fun_t;
    public:
    public:
        const_mem_fun_t<_Ret, _Tp>(_Ret (_Tp::*__pf)() const) : _M_f((DeclRefExpr 0x9c17760 </usr/include/c++/4.6/bits/stl_function.h:565:14> '_Ret (_Tp::*)(void) const' lvalue ParmVar 0x9c17470 '__pf' '_Ret (_Tp::*)(void) const')
) (CompoundStmt 0x9c177c0 </usr/include/c++/4.6/bits/stl_function.h:565:20, col:22>)


        _Ret operator()(const _Tp *__p) const (CompoundStmt 0x9c178b8 </usr/include/c++/4.6/bits/stl_function.h:569:7, col:32>
  (ReturnStmt 0x9c178a8 <col:9, col:29>
    (CallExpr 0x9c17888 <col:16, col:29> '<dependent type>'
      (ParenExpr 0x9c17870 <col:16, col:27> '<dependent type>'
        (BinaryOperator 0x9c17858 <col:17, col:23> '<dependent type>' '->*'
          (DeclRefExpr 0x9c177d0 <col:17> 'const _Tp *' lvalue ParmVar 0x9c175a0 '__p' 'const _Tp *')
          (MemberExpr 0x9c17834 <col:23> '_Ret (_Tp::*const)(void) const' lvalue ->_M_f 0x9c17730
            (CXXThisExpr 0x9c17808 <col:23> 'const const_mem_fun_t<_Ret, _Tp> *' this)))))))


    private:
    private:
        _Ret (_Tp::*_M_f)() const;
    };
    template <typename _Ret, typename _Tp> class mem_fun_ref_t : public unary_function<_Tp, _Ret> {
        class mem_fun_ref_t;
    public:
    public:
        mem_fun_ref_t<_Ret, _Tp>(_Ret (_Tp::*__pf)()) : _M_f((DeclRefExpr 0x9c180f0 </usr/include/c++/4.6/bits/stl_function.h:583:14> '_Ret (_Tp::*)(void)' lvalue ParmVar 0x9c17e00 '__pf' '_Ret (_Tp::*)(void)')
) (CompoundStmt 0x9c18150 </usr/include/c++/4.6/bits/stl_function.h:583:20, col:22>)


        _Ret operator()(_Tp &__r) const (CompoundStmt 0x9c18248 </usr/include/c++/4.6/bits/stl_function.h:587:7, col:31>
  (ReturnStmt 0x9c18238 <col:9, col:28>
    (CallExpr 0x9c18218 <col:16, col:28> '<dependent type>'
      (ParenExpr 0x9c18200 <col:16, col:26> '<dependent type>'
        (BinaryOperator 0x9c181e8 <col:17, col:22> '<dependent type>' '.*'
          (DeclRefExpr 0x9c18160 <col:17> '_Tp' lvalue ParmVar 0x9c17f30 '__r' '_Tp &')
          (MemberExpr 0x9c181c4 <col:22> '_Ret (_Tp::*const)(void)' lvalue ->_M_f 0x9c180c0
            (CXXThisExpr 0x9c18198 <col:22> 'const mem_fun_ref_t<_Ret, _Tp> *' this)))))))


    private:
    private:
        _Ret (_Tp::*_M_f)();
    };
    template <typename _Ret, typename _Tp> class const_mem_fun_ref_t : public unary_function<_Tp, _Ret> {
        class const_mem_fun_ref_t;
    public:
    public:
        const_mem_fun_ref_t<_Ret, _Tp>(_Ret (_Tp::*__pf)() const) : _M_f((DeclRefExpr 0x9c18a30 </usr/include/c++/4.6/bits/stl_function.h:601:14> '_Ret (_Tp::*)(void) const' lvalue ParmVar 0x9c18740 '__pf' '_Ret (_Tp::*)(void) const')
) (CompoundStmt 0x9c18a90 </usr/include/c++/4.6/bits/stl_function.h:601:20, col:22>)


        _Ret operator()(const _Tp &__r) const (CompoundStmt 0x9c18b88 </usr/include/c++/4.6/bits/stl_function.h:605:7, col:31>
  (ReturnStmt 0x9c18b78 <col:9, col:28>
    (CallExpr 0x9c18b58 <col:16, col:28> '<dependent type>'
      (ParenExpr 0x9c18b40 <col:16, col:26> '<dependent type>'
        (BinaryOperator 0x9c18b28 <col:17, col:22> '<dependent type>' '.*'
          (DeclRefExpr 0x9c18aa0 <col:17> 'const _Tp' lvalue ParmVar 0x9c18870 '__r' 'const _Tp &')
          (MemberExpr 0x9c18b04 <col:22> '_Ret (_Tp::*const)(void) const' lvalue ->_M_f 0x9c18a00
            (CXXThisExpr 0x9c18ad8 <col:22> 'const const_mem_fun_ref_t<_Ret, _Tp> *' this)))))))


    private:
    private:
        _Ret (_Tp::*_M_f)() const;
    };
    template <typename _Ret, typename _Tp, typename _Arg> class mem_fun1_t : public binary_function<_Tp *, _Arg, _Ret> {
        class mem_fun1_t;
    public:
    public:
        mem_fun1_t<_Ret, _Tp, _Arg>(_Ret (_Tp::*__pf)(_Arg)) : _M_f((DeclRefExpr 0x9c1a710 </usr/include/c++/4.6/bits/stl_function.h:619:14> '_Ret (_Tp::*)(_Arg)' lvalue ParmVar 0x9c1a3a0 '__pf' '_Ret (_Tp::*)(_Arg)')
) (CompoundStmt 0x9c1a770 </usr/include/c++/4.6/bits/stl_function.h:619:20, col:22>)


        _Ret operator()(_Tp *__p, _Arg __x) const (CompoundStmt 0x9c1a880 </usr/include/c++/4.6/bits/stl_function.h:623:7, col:35>
  (ReturnStmt 0x9c1a870 <col:9, col:32>
    (CallExpr 0x9c1a850 <col:16, col:32> '<dependent type>'
      (ParenExpr 0x9c1a820 <col:16, col:27> '<dependent type>'
        (BinaryOperator 0x9c1a808 <col:17, col:23> '<dependent type>' '->*'
          (DeclRefExpr 0x9c1a780 <col:17> '_Tp *' lvalue ParmVar 0x9c1a4d0 '__p' '_Tp *')
          (MemberExpr 0x9c1a7e4 <col:23> '_Ret (_Tp::*const)(_Arg)' lvalue ->_M_f 0x9c1a6e0
            (CXXThisExpr 0x9c1a7b8 <col:23> 'const mem_fun1_t<_Ret, _Tp, _Arg> *' this))))
      (DeclRefExpr 0x9c1a834 <col:29> '_Arg' lvalue ParmVar 0x9c1a510 '__x' '_Arg'))))


    private:
    private:
        _Ret (_Tp::*_M_f)(_Arg);
    };
    template <typename _Ret, typename _Tp, typename _Arg> class const_mem_fun1_t : public binary_function<const _Tp *, _Arg, _Ret> {
        class const_mem_fun1_t;
    public:
    public:
        const_mem_fun1_t<_Ret, _Tp, _Arg>(_Ret (_Tp::*__pf)(_Arg) const) : _M_f((DeclRefExpr 0x9c1b2b0 </usr/include/c++/4.6/bits/stl_function.h:637:14> '_Ret (_Tp::*)(_Arg) const' lvalue ParmVar 0x9c1af40 '__pf' '_Ret (_Tp::*)(_Arg) const')
) (CompoundStmt 0x9c1b310 </usr/include/c++/4.6/bits/stl_function.h:637:20, col:22>)


        _Ret operator()(const _Tp *__p, _Arg __x) const (CompoundStmt 0x9c1b420 </usr/include/c++/4.6/bits/stl_function.h:641:7, col:35>
  (ReturnStmt 0x9c1b410 <col:9, col:32>
    (CallExpr 0x9c1b3f0 <col:16, col:32> '<dependent type>'
      (ParenExpr 0x9c1b3c0 <col:16, col:27> '<dependent type>'
        (BinaryOperator 0x9c1b3a8 <col:17, col:23> '<dependent type>' '->*'
          (DeclRefExpr 0x9c1b320 <col:17> 'const _Tp *' lvalue ParmVar 0x9c1b070 '__p' 'const _Tp *')
          (MemberExpr 0x9c1b384 <col:23> '_Ret (_Tp::*const)(_Arg) const' lvalue ->_M_f 0x9c1b280
            (CXXThisExpr 0x9c1b358 <col:23> 'const const_mem_fun1_t<_Ret, _Tp, _Arg> *' this))))
      (DeclRefExpr 0x9c1b3d4 <col:29> '_Arg' lvalue ParmVar 0x9c1b0b0 '__x' '_Arg'))))


    private:
    private:
        _Ret (_Tp::*_M_f)(_Arg) const;
    };
    template <typename _Ret, typename _Tp, typename _Arg> class mem_fun1_ref_t : public binary_function<_Tp, _Arg, _Ret> {
        class mem_fun1_ref_t;
    public:
    public:
        mem_fun1_ref_t<_Ret, _Tp, _Arg>(_Ret (_Tp::*__pf)(_Arg)) : _M_f((DeclRefExpr 0x9c1bdf0 </usr/include/c++/4.6/bits/stl_function.h:655:14> '_Ret (_Tp::*)(_Arg)' lvalue ParmVar 0x9c1ba80 '__pf' '_Ret (_Tp::*)(_Arg)')
) (CompoundStmt 0x9c1be50 </usr/include/c++/4.6/bits/stl_function.h:655:20, col:22>)


        _Ret operator()(_Tp &__r, _Arg __x) const (CompoundStmt 0x9c1bf60 </usr/include/c++/4.6/bits/stl_function.h:659:7, col:34>
  (ReturnStmt 0x9c1bf50 <col:9, col:31>
    (CallExpr 0x9c1bf30 <col:16, col:31> '<dependent type>'
      (ParenExpr 0x9c1bf00 <col:16, col:26> '<dependent type>'
        (BinaryOperator 0x9c1bee8 <col:17, col:22> '<dependent type>' '.*'
          (DeclRefExpr 0x9c1be60 <col:17> '_Tp' lvalue ParmVar 0x9c1bbb0 '__r' '_Tp &')
          (MemberExpr 0x9c1bec4 <col:22> '_Ret (_Tp::*const)(_Arg)' lvalue ->_M_f 0x9c1bdc0
            (CXXThisExpr 0x9c1be98 <col:22> 'const mem_fun1_ref_t<_Ret, _Tp, _Arg> *' this))))
      (DeclRefExpr 0x9c1bf14 <col:28> '_Arg' lvalue ParmVar 0x9c1bbf0 '__x' '_Arg'))))


    private:
    private:
        _Ret (_Tp::*_M_f)(_Arg);
    };
    template <typename _Ret, typename _Tp, typename _Arg> class const_mem_fun1_ref_t : public binary_function<_Tp, _Arg, _Ret> {
        class const_mem_fun1_ref_t;
    public:
    public:
        const_mem_fun1_ref_t<_Ret, _Tp, _Arg>(_Ret (_Tp::*__pf)(_Arg) const) : _M_f((DeclRefExpr 0x9c1d7b0 </usr/include/c++/4.6/bits/stl_function.h:673:14> '_Ret (_Tp::*)(_Arg) const' lvalue ParmVar 0x9c1d440 '__pf' '_Ret (_Tp::*)(_Arg) const')
) (CompoundStmt 0x9c1d810 </usr/include/c++/4.6/bits/stl_function.h:673:20, col:22>)


        _Ret operator()(const _Tp &__r, _Arg __x) const (CompoundStmt 0x9c1d920 </usr/include/c++/4.6/bits/stl_function.h:677:7, col:34>
  (ReturnStmt 0x9c1d910 <col:9, col:31>
    (CallExpr 0x9c1d8f0 <col:16, col:31> '<dependent type>'
      (ParenExpr 0x9c1d8c0 <col:16, col:26> '<dependent type>'
        (BinaryOperator 0x9c1d8a8 <col:17, col:22> '<dependent type>' '.*'
          (DeclRefExpr 0x9c1d820 <col:17> 'const _Tp' lvalue ParmVar 0x9c1d570 '__r' 'const _Tp &')
          (MemberExpr 0x9c1d884 <col:22> '_Ret (_Tp::*const)(_Arg) const' lvalue ->_M_f 0x9c1d780
            (CXXThisExpr 0x9c1d858 <col:22> 'const const_mem_fun1_ref_t<_Ret, _Tp, _Arg> *' this))))
      (DeclRefExpr 0x9c1d8d4 <col:28> '_Arg' lvalue ParmVar 0x9c1d5b0 '__x' '_Arg'))))


    private:
    private:
        _Ret (_Tp::*_M_f)(_Arg) const;
    };
    template <typename _Ret, typename _Tp> inline mem_fun_t<_Ret, _Tp> mem_fun(_Ret (_Tp::*__f)()) (CompoundStmt 0x9c1de20 </usr/include/c++/4.6/bits/stl_function.h:688:5, col:41>
  (ReturnStmt 0x9c1de10 <col:7, col:38>
    (CXXUnresolvedConstructExpr 0x9c1ddf0 <col:14, col:38> 'mem_fun_t<_Ret, _Tp>'
      (DeclRefExpr 0x9c1ddd8 <col:35> '_Ret (_Tp::*)(void)' lvalue ParmVar 0x9c1db80 '__f' '_Ret (_Tp::*)(void)'))))

;
    template <typename _Ret, typename _Tp> inline const_mem_fun_t<_Ret, _Tp> mem_fun(_Ret (_Tp::*__f)() const) (CompoundStmt 0x9c1e320 </usr/include/c++/4.6/bits/stl_function.h:693:5, col:47>
  (ReturnStmt 0x9c1e310 <col:7, col:44>
    (CXXUnresolvedConstructExpr 0x9c1e2f0 <col:14, col:44> 'const_mem_fun_t<_Ret, _Tp>'
      (DeclRefExpr 0x9c1e2d8 <col:41> '_Ret (_Tp::*)(void) const' lvalue ParmVar 0x9c1e080 '__f' '_Ret (_Tp::*)(void) const'))))

;
    template <typename _Ret, typename _Tp> inline mem_fun_ref_t<_Ret, _Tp> mem_fun_ref(_Ret (_Tp::*__f)()) (CompoundStmt 0x9c1e820 </usr/include/c++/4.6/bits/stl_function.h:698:5, col:45>
  (ReturnStmt 0x9c1e810 <col:7, col:42>
    (CXXUnresolvedConstructExpr 0x9c1e7f0 <col:14, col:42> 'mem_fun_ref_t<_Ret, _Tp>'
      (DeclRefExpr 0x9c1e7d8 <col:39> '_Ret (_Tp::*)(void)' lvalue ParmVar 0x9c1e580 '__f' '_Ret (_Tp::*)(void)'))))

;
    template <typename _Ret, typename _Tp> inline const_mem_fun_ref_t<_Ret, _Tp> mem_fun_ref(_Ret (_Tp::*__f)() const) (CompoundStmt 0x9c1ed20 </usr/include/c++/4.6/bits/stl_function.h:703:5, col:51>
  (ReturnStmt 0x9c1ed10 <col:7, col:48>
    (CXXUnresolvedConstructExpr 0x9c1ecf0 <col:14, col:48> 'const_mem_fun_ref_t<_Ret, _Tp>'
      (DeclRefExpr 0x9c1ecd8 <col:45> '_Ret (_Tp::*)(void) const' lvalue ParmVar 0x9c1ea80 '__f' '_Ret (_Tp::*)(void) const'))))

;
    template <typename _Ret, typename _Tp, typename _Arg> inline mem_fun1_t<_Ret, _Tp, _Arg> mem_fun(_Ret (_Tp::*__f)(_Arg)) (CompoundStmt 0x9c21198 </usr/include/c++/4.6/bits/stl_function.h:708:5, col:48>
  (ReturnStmt 0x9c21188 <col:7, col:45>
    (CXXUnresolvedConstructExpr 0x9c21168 <col:14, col:45> 'mem_fun1_t<_Ret, _Tp, _Arg>'
      (DeclRefExpr 0x9c21150 <col:42> '_Ret (_Tp::*)(_Arg)' lvalue ParmVar 0x9c1f060 '__f' '_Ret (_Tp::*)(_Arg)'))))

;
    template <typename _Ret, typename _Tp, typename _Arg> inline const_mem_fun1_t<_Ret, _Tp, _Arg> mem_fun(_Ret (_Tp::*__f)(_Arg) const) (CompoundStmt 0x9c217d8 </usr/include/c++/4.6/bits/stl_function.h:713:5, col:54>
  (ReturnStmt 0x9c217c8 <col:7, col:51>
    (CXXUnresolvedConstructExpr 0x9c217a8 <col:14, col:51> 'const_mem_fun1_t<_Ret, _Tp, _Arg>'
      (DeclRefExpr 0x9c21790 <col:48> '_Ret (_Tp::*)(_Arg) const' lvalue ParmVar 0x9c214d0 '__f' '_Ret (_Tp::*)(_Arg) const'))))

;
    template <typename _Ret, typename _Tp, typename _Arg> inline mem_fun1_ref_t<_Ret, _Tp, _Arg> mem_fun_ref(_Ret (_Tp::*__f)(_Arg)) (CompoundStmt 0x9c21e18 </usr/include/c++/4.6/bits/stl_function.h:718:5, col:52>
  (ReturnStmt 0x9c21e08 <col:7, col:49>
    (CXXUnresolvedConstructExpr 0x9c21de8 <col:14, col:49> 'mem_fun1_ref_t<_Ret, _Tp, _Arg>'
      (DeclRefExpr 0x9c21dd0 <col:46> '_Ret (_Tp::*)(_Arg)' lvalue ParmVar 0x9c21b10 '__f' '_Ret (_Tp::*)(_Arg)'))))

;
    template <typename _Ret, typename _Tp, typename _Arg> inline const_mem_fun1_ref_t<_Ret, _Tp, _Arg> mem_fun_ref(_Ret (_Tp::*__f)(_Arg) const) (CompoundStmt 0x9c22458 </usr/include/c++/4.6/bits/stl_function.h:723:5, col:58>
  (ReturnStmt 0x9c22448 <col:7, col:55>
    (CXXUnresolvedConstructExpr 0x9c22428 <col:14, col:55> 'const_mem_fun1_ref_t<_Ret, _Tp, _Arg>'
      (DeclRefExpr 0x9c22410 <col:52> '_Ret (_Tp::*)(_Arg) const' lvalue ParmVar 0x9c22150 '__f' '_Ret (_Tp::*)(_Arg) const'))))

;
}
namespace std {
    template <typename _Operation> class binder1st : public unary_function<typename _Operation::second_argument_type, typename _Operation::result_type> {
        class binder1st;
    protected:
    protected:
        _Operation op;
        typename _Operation::first_argument_type value;
    public:
    public:
        binder1st<_Operation>(const _Operation &__x, const typename _Operation::first_argument_type &__y) : op((DeclRefExpr 0x9c25d24 </usr/include/c++/4.6/backward/binders.h:111:12> 'const _Operation' lvalue ParmVar 0x9c22b30 '__x' 'const _Operation &')
), value((DeclRefExpr 0x9c25d78 </usr/include/c++/4.6/backward/binders.h:111:24> 'const typename _Operation::first_argument_type' lvalue ParmVar 0x9c22bc0 '__y' 'const typename _Operation::first_argument_type &')
) (CompoundStmt 0x9c25dd0 </usr/include/c++/4.6/backward/binders.h:111:29, col:31>)


        typename _Operation::result_type operator()(const typename _Operation::second_argument_type &__x) const (CompoundStmt 0x9c25ec8 </usr/include/c++/4.6/backward/binders.h:115:7, col:32>
  (ReturnStmt 0x9c25eb8 <col:9, col:29>
    (CallExpr 0x9c25e90 <col:16, col:29> '<dependent type>'
      (MemberExpr 0x9c25e24 <col:16> 'const _Operation' lvalue ->op 0x9c22a00
        (CXXThisExpr 0x9c25df8 <col:16> 'const binder1st<_Operation> *' this))
      (MemberExpr 0x9c25e58 <col:19> 'const typename _Operation::first_argument_type' lvalue ->value 0x9c22a90
        (CXXThisExpr 0x9c25e48 <col:19> 'const binder1st<_Operation> *' this))
      (DeclRefExpr 0x9c25e78 <col:26> 'const typename _Operation::second_argument_type' lvalue ParmVar 0x9c22d60 '__x' 'const typename _Operation::second_argument_type &'))))


        typename _Operation::result_type operator()(typename _Operation::second_argument_type &__x) const (CompoundStmt 0x9c25f90 </usr/include/c++/4.6/backward/binders.h:121:7, col:32>
  (ReturnStmt 0x9c25f80 <col:9, col:29>
    (CallExpr 0x9c25f58 <col:16, col:29> '<dependent type>'
      (MemberExpr 0x9c25ef0 <col:16> 'const _Operation' lvalue ->op 0x9c22a00
        (CXXThisExpr 0x9c25ee0 <col:16> 'const binder1st<_Operation> *' this))
      (MemberExpr 0x9c25f20 <col:19> 'const typename _Operation::first_argument_type' lvalue ->value 0x9c22a90
        (CXXThisExpr 0x9c25f10 <col:19> 'const binder1st<_Operation> *' this))
      (DeclRefExpr 0x9c25f40 <col:26> 'typename _Operation::second_argument_type' lvalue ParmVar 0x9c22f20 '__x' 'typename _Operation::second_argument_type &'))))


    };
    template <typename _Operation, typename _Tp> inline binder1st<_Operation> bind1st(const _Operation &__fn, const _Tp &__x) (CompoundStmt 0x9c264e0 </usr/include/c++/4.6/backward/binders.h:128:5, line:131:5>
  (DeclStmt 0x9c26380 <line:129:7, col:66>
    0x9c26350 "typedef typename _Operation::first_argument_type _Arg1_type")
  (ReturnStmt 0x9c264d0 <line:130:7, col:57>
    (CXXUnresolvedConstructExpr 0x9c264b0 <col:14, col:57> 'binder1st<_Operation>'
      (DeclRefExpr 0x9c26440 <col:36> 'const _Operation' lvalue ParmVar 0x9c26120 '__fn' 'const _Operation &')
      (CXXUnresolvedConstructExpr 0x9c26490 <col:42, col:56> '_Arg1_type':'typename _Operation::first_argument_type'
        (DeclRefExpr 0x9c26478 <col:53> 'const _Tp' lvalue ParmVar 0x9c26190 '__x' 'const _Tp &')))))

;
    template <typename _Operation> class binder2nd : public unary_function<typename _Operation::first_argument_type, typename _Operation::result_type> {
        class binder2nd;
    protected:
    protected:
        _Operation op;
        typename _Operation::second_argument_type value;
    public:
    public:
        binder2nd<_Operation>(const _Operation &__x, const typename _Operation::second_argument_type &__y) : op((DeclRefExpr 0x9c26ff4 </usr/include/c++/4.6/backward/binders.h:146:12> 'const _Operation' lvalue ParmVar 0x9c26af0 '__x' 'const _Operation &')
), value((DeclRefExpr 0x9c27048 </usr/include/c++/4.6/backward/binders.h:146:24> 'const typename _Operation::second_argument_type' lvalue ParmVar 0x9c26b80 '__y' 'const typename _Operation::second_argument_type &')
) (CompoundStmt 0x9c270a0 </usr/include/c++/4.6/backward/binders.h:146:29, col:31>)


        typename _Operation::result_type operator()(const typename _Operation::first_argument_type &__x) const (CompoundStmt 0x9c27198 </usr/include/c++/4.6/backward/binders.h:150:7, col:32>
  (ReturnStmt 0x9c27188 <col:9, col:29>
    (CallExpr 0x9c27160 <col:16, col:29> '<dependent type>'
      (MemberExpr 0x9c270f4 <col:16> 'const _Operation' lvalue ->op 0x9c269c0
        (CXXThisExpr 0x9c270c8 <col:16> 'const binder2nd<_Operation> *' this))
      (DeclRefExpr 0x9c27114 <col:19> 'const typename _Operation::first_argument_type' lvalue ParmVar 0x9c26d20 '__x' 'const typename _Operation::first_argument_type &')
      (MemberExpr 0x9c27140 <col:24> 'const typename _Operation::second_argument_type' lvalue ->value 0x9c26a50
        (CXXThisExpr 0x9c27130 <col:24> 'const binder2nd<_Operation> *' this)))))


        typename _Operation::result_type operator()(typename _Operation::first_argument_type &__x) const (CompoundStmt 0x9c27260 </usr/include/c++/4.6/backward/binders.h:156:7, col:32>
  (ReturnStmt 0x9c27250 <col:9, col:29>
    (CallExpr 0x9c27228 <col:16, col:29> '<dependent type>'
      (MemberExpr 0x9c271c0 <col:16> 'const _Operation' lvalue ->op 0x9c269c0
        (CXXThisExpr 0x9c271b0 <col:16> 'const binder2nd<_Operation> *' this))
      (DeclRefExpr 0x9c271e0 <col:19> 'typename _Operation::first_argument_type' lvalue ParmVar 0x9c26ee0 '__x' 'typename _Operation::first_argument_type &')
      (MemberExpr 0x9c27208 <col:24> 'const typename _Operation::second_argument_type' lvalue ->value 0x9c26a50
        (CXXThisExpr 0x9c271f8 <col:24> 'const binder2nd<_Operation> *' this)))))


    };
    template <typename _Operation, typename _Tp> inline binder2nd<_Operation> bind2nd(const _Operation &__fn, const _Tp &__x) (CompoundStmt 0x9c277b0 </usr/include/c++/4.6/backward/binders.h:163:5, line:166:5>
  (DeclStmt 0x9c27650 <line:164:7, col:67>
    0x9c27620 "typedef typename _Operation::second_argument_type _Arg2_type")
  (ReturnStmt 0x9c277a0 <line:165:7, col:57>
    (CXXUnresolvedConstructExpr 0x9c27780 <col:14, col:57> 'binder2nd<_Operation>'
      (DeclRefExpr 0x9c27710 <col:36> 'const _Operation' lvalue ParmVar 0x9c273f0 '__fn' 'const _Operation &')
      (CXXUnresolvedConstructExpr 0x9c27760 <col:42, col:56> '_Arg2_type':'typename _Operation::second_argument_type'
        (DeclRefExpr 0x9c27748 <col:53> 'const _Tp' lvalue ParmVar 0x9c27460 '__x' 'const _Tp &')))))

;
}
struct sched_param {
    struct sched_param;
    int __sched_priority;
};
extern "C" {
    extern int clone(int (*__fn)(void *), void *__child_stack, int __flags, void *__arg, ...) throw();
    extern int unshare(int __flags) throw();
    extern int sched_getcpu() throw();
    extern int setns(int __fd, int __nstype) throw();
}
struct __sched_param {
    struct __sched_param;
    int __sched_priority;
};
typedef unsigned long __cpu_mask;
struct {
    __cpu_mask __bits[32];
};
typedef struct cpu_set_t cpu_set_t;
extern "C" {
    extern int __sched_cpucount(size_t __setsize, const cpu_set_t *__setp) throw();
    extern cpu_set_t *__sched_cpualloc(size_t __count) throw();
    extern void __sched_cpufree(cpu_set_t *__set) throw();
}
extern "C" {
    extern int sched_setparam(__pid_t __pid, const struct sched_param *__param) throw();
    extern int sched_getparam(__pid_t __pid, struct sched_param *__param) throw();
    extern int sched_setscheduler(__pid_t __pid, int __policy, const struct sched_param *__param) throw();
    extern int sched_getscheduler(__pid_t __pid) throw();
    extern int sched_yield() throw();
    extern int sched_get_priority_max(int __algorithm) throw();
    extern int sched_get_priority_min(int __algorithm) throw();
    extern int sched_rr_get_interval(__pid_t __pid, struct timespec *__t) throw();
    extern int sched_setaffinity(__pid_t __pid, size_t __cpusetsize, const cpu_set_t *__cpuset) throw();
    extern int sched_getaffinity(__pid_t __pid, size_t __cpusetsize, cpu_set_t *__cpuset) throw();
}
extern "C" {
    struct timex {
        struct timex;
        unsigned int modes;
        long offset;
        long freq;
        long maxerror;
        long esterror;
        int status;
        long constant;
        long precision;
        long tolerance;
        struct timeval time;
        long tick;
        long ppsfreq;
        long jitter;
        int shift;
        long stabil;
        long jitcnt;
        long calcnt;
        long errcnt;
        long stbcnt;
        int tai;
        int : (IntegerLiteral 0x9c375d0 </usr/include/i386-linux-gnu/bits/timex.h:50:9> 'int' 32)
;
        int : (IntegerLiteral 0x9c37630 </usr/include/i386-linux-gnu/bits/timex.h:50:19> 'int' 32)
;
        int : (IntegerLiteral 0x9c3fc70 </usr/include/i386-linux-gnu/bits/timex.h:50:29> 'int' 32)
;
        int : (IntegerLiteral 0x9c3fcd0 </usr/include/i386-linux-gnu/bits/timex.h:50:39> 'int' 32)
;
        int : (IntegerLiteral 0x9c3fd30 </usr/include/i386-linux-gnu/bits/timex.h:51:9> 'int' 32)
;
        int : (IntegerLiteral 0x9c3fd90 </usr/include/i386-linux-gnu/bits/timex.h:51:19> 'int' 32)
;
        int : (IntegerLiteral 0x9c3fdf0 </usr/include/i386-linux-gnu/bits/timex.h:51:29> 'int' 32)
;
        int : (IntegerLiteral 0x9c3fe50 </usr/include/i386-linux-gnu/bits/timex.h:51:39> 'int' 32)
;
        int : (IntegerLiteral 0x9c3feb0 </usr/include/i386-linux-gnu/bits/timex.h:52:9> 'int' 32)
;
        int : (IntegerLiteral 0x9c3ff10 </usr/include/i386-linux-gnu/bits/timex.h:52:19> 'int' 32)
;
        int : (IntegerLiteral 0x9c3ff70 </usr/include/i386-linux-gnu/bits/timex.h:52:29> 'int' 32)
;
    };
    extern "C" {
        extern int clock_adjtime(__clockid_t __clock_id, struct timex *__utx) throw();
    }
    struct tm {
        struct tm;
        int tm_sec;
        int tm_min;
        int tm_hour;
        int tm_mday;
        int tm_mon;
        int tm_year;
        int tm_wday;
        int tm_yday;
        int tm_isdst;
        long tm_gmtoff;
        const char *tm_zone;
    };
    struct itimerspec {
        struct itimerspec;
        struct timespec it_interval;
        struct timespec it_value;
    };
    struct sigevent;
    extern clock_t clock() throw();
    extern time_t time(time_t *__timer) throw();
    extern double difftime(time_t __time1, time_t __time0) throw();
    extern time_t mktime(struct tm *__tp) throw();
    extern size_t strftime(char *restrict __s, size_t __maxsize, const char *restrict __format, const struct tm *restrict __tp) throw();
    extern char *strptime(const char *restrict __s, const char *restrict __fmt, struct tm *__tp) throw();
    extern size_t strftime_l(char *restrict __s, size_t __maxsize, const char *restrict __format, const struct tm *restrict __tp, __locale_t __loc) throw();
    extern char *strptime_l(const char *restrict __s, const char *restrict __fmt, struct tm *__tp, __locale_t __loc) throw();
    extern struct tm *gmtime(const time_t *__timer) throw();
    extern struct tm *localtime(const time_t *__timer) throw();
    extern struct tm *gmtime_r(const time_t *restrict __timer, struct tm *restrict __tp) throw();
    extern struct tm *localtime_r(const time_t *restrict __timer, struct tm *restrict __tp) throw();
    extern char *asctime(const struct tm *__tp) throw();
    extern char *ctime(const time_t *__timer) throw();
    extern char *asctime_r(const struct tm *restrict __tp, char *restrict __buf) throw();
    extern char *ctime_r(const time_t *restrict __timer, char *restrict __buf) throw();
    extern char *__tzname[2];
    extern int __daylight;
    extern long __timezone;
    extern char *tzname[2];
    extern void tzset() throw();
    extern int daylight;
    extern long timezone;
    extern int stime(const time_t *__when) throw();
    extern time_t timegm(struct tm *__tp) throw();
    extern time_t timelocal(struct tm *__tp) throw();
    extern int dysize(int __year) throw();
    extern int nanosleep(const struct timespec *__requested_time, struct timespec *__remaining);
    extern int clock_getres(clockid_t __clock_id, struct timespec *__res) throw();
    extern int clock_gettime(clockid_t __clock_id, struct timespec *__tp) throw();
    extern int clock_settime(clockid_t __clock_id, const struct timespec *__tp) throw();
    extern int clock_nanosleep(clockid_t __clock_id, int __flags, const struct timespec *__req, struct timespec *__rem);
    extern int clock_getcpuclockid(pid_t __pid, clockid_t *__clock_id) throw();
    extern int timer_create(clockid_t __clock_id, struct sigevent *restrict __evp, timer_t *restrict __timerid) throw();
    extern int timer_delete(timer_t __timerid) throw();
    extern int timer_settime(timer_t __timerid, int __flags, const struct itimerspec *restrict __value, struct itimerspec *restrict __ovalue) throw();
    extern int timer_gettime(timer_t __timerid, struct itimerspec *__value) throw();
    extern int timer_getoverrun(timer_t __timerid) throw();
    extern int getdate_err;
    extern struct tm *getdate(const char *__string);
    extern int getdate_r(const char *restrict __string, struct tm *restrict __resbufp);
}
typedef int __jmp_buf[6];
enum  {
    PTHREAD_CREATE_JOINABLE,
    PTHREAD_CREATE_DETACHED
};
enum  {
    PTHREAD_MUTEX_TIMED_NP,
    PTHREAD_MUTEX_RECURSIVE_NP,
    PTHREAD_MUTEX_ERRORCHECK_NP,
    PTHREAD_MUTEX_ADAPTIVE_NP,
    PTHREAD_MUTEX_NORMAL = (ImplicitCastExpr 0x9c47be8 </usr/include/pthread.h:52:26> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0x9c47a54 <col:26> 'int' EnumConstant 0x9c47960 'PTHREAD_MUTEX_TIMED_NP' 'enum <anonymous at /usr/include/pthread.h:44:1>'))
,
    PTHREAD_MUTEX_RECURSIVE = (ImplicitCastExpr 0x9c47bf8 </usr/include/pthread.h:53:29> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0x9c47aa4 <col:29> 'int' EnumConstant 0x9c479a0 'PTHREAD_MUTEX_RECURSIVE_NP' 'enum <anonymous at /usr/include/pthread.h:44:1>'))
,
    PTHREAD_MUTEX_ERRORCHECK = (ImplicitCastExpr 0x9c47c08 </usr/include/pthread.h:54:30> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0x9c47af4 <col:30> 'int' EnumConstant 0x9c479e0 'PTHREAD_MUTEX_ERRORCHECK_NP' 'enum <anonymous at /usr/include/pthread.h:44:1>'))
,
    PTHREAD_MUTEX_DEFAULT = (ImplicitCastExpr 0x9c47c18 </usr/include/pthread.h:55:27> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0x9c47b44 <col:27> 'int' EnumConstant 0x9c47a70 'PTHREAD_MUTEX_NORMAL' 'enum <anonymous at /usr/include/pthread.h:44:1>'))
,
    PTHREAD_MUTEX_FAST_NP = (ImplicitCastExpr 0x9c47c28 </usr/include/pthread.h:59:29> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0x9c47b94 <col:29> 'int' EnumConstant 0x9c47960 'PTHREAD_MUTEX_TIMED_NP' 'enum <anonymous at /usr/include/pthread.h:44:1>'))

};
enum  {
    PTHREAD_MUTEX_STALLED,
    PTHREAD_MUTEX_STALLED_NP = (ImplicitCastExpr 0x9c47db8 </usr/include/pthread.h:69:30> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0x9c47cd4 <col:30> 'int' EnumConstant 0x9c47ca0 'PTHREAD_MUTEX_STALLED' 'enum <anonymous at /usr/include/pthread.h:66:1>'))
,
    PTHREAD_MUTEX_ROBUST,
    PTHREAD_MUTEX_ROBUST_NP = (ImplicitCastExpr 0x9c47dc8 </usr/include/pthread.h:71:29> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0x9c47d64 <col:29> 'int' EnumConstant 0x9c47d30 'PTHREAD_MUTEX_ROBUST' 'enum <anonymous at /usr/include/pthread.h:66:1>'))

};
enum  {
    PTHREAD_PRIO_NONE,
    PTHREAD_PRIO_INHERIT,
    PTHREAD_PRIO_PROTECT
};
enum  {
    PTHREAD_RWLOCK_PREFER_READER_NP,
    PTHREAD_RWLOCK_PREFER_WRITER_NP,
    PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP,
    PTHREAD_RWLOCK_DEFAULT_NP = (ImplicitCastExpr 0x9c48068 </usr/include/pthread.h:120:31> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0x9c48014 <col:31> 'int' EnumConstant 0x9c47f60 'PTHREAD_RWLOCK_PREFER_READER_NP' 'enum <anonymous at /usr/include/pthread.h:115:1>'))

};
enum  {
    PTHREAD_INHERIT_SCHED,
    PTHREAD_EXPLICIT_SCHED
};
enum  {
    PTHREAD_SCOPE_SYSTEM,
    PTHREAD_SCOPE_PROCESS
};
enum  {
    PTHREAD_PROCESS_PRIVATE,
    PTHREAD_PROCESS_SHARED
};
struct _pthread_cleanup_buffer {
    struct _pthread_cleanup_buffer;
    void (*__routine)(void *);
    void *__arg;
    int __canceltype;
    struct _pthread_cleanup_buffer *__prev;
};
enum  {
    PTHREAD_CANCEL_ENABLE,
    PTHREAD_CANCEL_DISABLE
};
enum  {
    PTHREAD_CANCEL_DEFERRED,
    PTHREAD_CANCEL_ASYNCHRONOUS
};
extern "C" {
    extern int pthread_create(pthread_t *restrict __newthread, const pthread_attr_t *restrict __attr, void *(*__start_routine)(void *), void *restrict __arg) throw();
    extern void pthread_exit(void *__retval);
    extern int pthread_join(pthread_t __th, void **__thread_return);
    extern int pthread_tryjoin_np(pthread_t __th, void **__thread_return) throw();
    extern int pthread_timedjoin_np(pthread_t __th, void **__thread_return, const struct timespec *__abstime);
    extern int pthread_detach(pthread_t __th) throw();
    extern pthread_t pthread_self() throw();
    extern int pthread_equal(pthread_t __thread1, pthread_t __thread2) throw();
    extern int pthread_attr_init(pthread_attr_t *__attr) throw();
    extern int pthread_attr_destroy(pthread_attr_t *__attr) throw();
    extern int pthread_attr_getdetachstate(const pthread_attr_t *__attr, int *__detachstate) throw();
    extern int pthread_attr_setdetachstate(pthread_attr_t *__attr, int __detachstate) throw();
    extern int pthread_attr_getguardsize(const pthread_attr_t *__attr, size_t *__guardsize) throw();
    extern int pthread_attr_setguardsize(pthread_attr_t *__attr, size_t __guardsize) throw();
    extern int pthread_attr_getschedparam(const pthread_attr_t *restrict __attr, struct sched_param *restrict __param) throw();
    extern int pthread_attr_setschedparam(pthread_attr_t *restrict __attr, const struct sched_param *restrict __param) throw();
    extern int pthread_attr_getschedpolicy(const pthread_attr_t *restrict __attr, int *restrict __policy) throw();
    extern int pthread_attr_setschedpolicy(pthread_attr_t *__attr, int __policy) throw();
    extern int pthread_attr_getinheritsched(const pthread_attr_t *restrict __attr, int *restrict __inherit) throw();
    extern int pthread_attr_setinheritsched(pthread_attr_t *__attr, int __inherit) throw();
    extern int pthread_attr_getscope(const pthread_attr_t *restrict __attr, int *restrict __scope) throw();
    extern int pthread_attr_setscope(pthread_attr_t *__attr, int __scope) throw();
    extern int pthread_attr_getstackaddr(const pthread_attr_t *restrict __attr, void **restrict __stackaddr) throw();
    extern int pthread_attr_setstackaddr(pthread_attr_t *__attr, void *__stackaddr) throw();
    extern int pthread_attr_getstacksize(const pthread_attr_t *restrict __attr, size_t *restrict __stacksize) throw();
    extern int pthread_attr_setstacksize(pthread_attr_t *__attr, size_t __stacksize) throw();
    extern int pthread_attr_getstack(const pthread_attr_t *restrict __attr, void **restrict __stackaddr, size_t *restrict __stacksize) throw();
    extern int pthread_attr_setstack(pthread_attr_t *__attr, void *__stackaddr, size_t __stacksize) throw();
    extern int pthread_attr_setaffinity_np(pthread_attr_t *__attr, size_t __cpusetsize, const cpu_set_t *__cpuset) throw();
    extern int pthread_attr_getaffinity_np(const pthread_attr_t *__attr, size_t __cpusetsize, cpu_set_t *__cpuset) throw();
    extern int pthread_getattr_np(pthread_t __th, pthread_attr_t *__attr) throw();
    extern int pthread_setschedparam(pthread_t __target_thread, int __policy, const struct sched_param *__param) throw();
    extern int pthread_getschedparam(pthread_t __target_thread, int *restrict __policy, struct sched_param *restrict __param) throw();
    extern int pthread_setschedprio(pthread_t __target_thread, int __prio) throw();
    extern int pthread_getname_np(pthread_t __target_thread, char *__buf, size_t __buflen) throw();
    extern int pthread_setname_np(pthread_t __target_thread, const char *__name) throw();
    extern int pthread_getconcurrency() throw();
    extern int pthread_setconcurrency(int __level) throw();
    extern int pthread_yield() throw();
    extern int pthread_setaffinity_np(pthread_t __th, size_t __cpusetsize, const cpu_set_t *__cpuset) throw();
    extern int pthread_getaffinity_np(pthread_t __th, size_t __cpusetsize, cpu_set_t *__cpuset) throw();
    extern int pthread_once(pthread_once_t *__once_control, void (*__init_routine)());
    extern int pthread_setcancelstate(int __state, int *__oldstate);
    extern int pthread_setcanceltype(int __type, int *__oldtype);
    extern int pthread_cancel(pthread_t __th);
    extern void pthread_testcancel();
    struct {
        struct {
            __jmp_buf __cancel_jmp_buf;
            int __mask_was_saved;
        };
        struct <anonymous struct at /usr/include/pthread.h:509:3> __cancel_jmp_buf[1];
        void *__pad[4];
    };
    typedef struct __pthread_unwind_buf_t __pthread_unwind_buf_t;
    struct __pthread_cleanup_frame {
        struct __pthread_cleanup_frame;
        void (*__cancel_routine)(void *);
        void *__cancel_arg;
        int __do_it;
        int __cancel_type;
    };
    extern void __pthread_register_cancel(__pthread_unwind_buf_t *__buf);
    extern void __pthread_unregister_cancel(__pthread_unwind_buf_t *__buf);
    extern void __pthread_register_cancel_defer(__pthread_unwind_buf_t *__buf);
    extern void __pthread_unregister_cancel_restore(__pthread_unwind_buf_t *__buf);
    extern void __pthread_unwind_next(__pthread_unwind_buf_t *__buf);
    struct __jmp_buf_tag;
    extern int __sigsetjmp(struct __jmp_buf_tag *__env, int __savemask) throw() __attribute((returns_twice));
    extern int pthread_mutex_init(pthread_mutex_t *__mutex, const pthread_mutexattr_t *__mutexattr) throw();
    extern int pthread_mutex_destroy(pthread_mutex_t *__mutex) throw();
    extern int pthread_mutex_trylock(pthread_mutex_t *__mutex) throw();
    extern int pthread_mutex_lock(pthread_mutex_t *__mutex) throw();
    extern int pthread_mutex_timedlock(pthread_mutex_t *restrict __mutex, const struct timespec *restrict __abstime) throw();
    extern int pthread_mutex_unlock(pthread_mutex_t *__mutex) throw();
    extern int pthread_mutex_getprioceiling(const pthread_mutex_t *restrict __mutex, int *restrict __prioceiling) throw();
    extern int pthread_mutex_setprioceiling(pthread_mutex_t *restrict __mutex, int __prioceiling, int *restrict __old_ceiling) throw();
    extern int pthread_mutex_consistent(pthread_mutex_t *__mutex) throw();
    extern int pthread_mutex_consistent_np(pthread_mutex_t *__mutex) throw();
    extern int pthread_mutexattr_init(pthread_mutexattr_t *__attr) throw();
    extern int pthread_mutexattr_destroy(pthread_mutexattr_t *__attr) throw();
    extern int pthread_mutexattr_getpshared(const pthread_mutexattr_t *restrict __attr, int *restrict __pshared) throw();
    extern int pthread_mutexattr_setpshared(pthread_mutexattr_t *__attr, int __pshared) throw();
    extern int pthread_mutexattr_gettype(const pthread_mutexattr_t *restrict __attr, int *restrict __kind) throw();
    extern int pthread_mutexattr_settype(pthread_mutexattr_t *__attr, int __kind) throw();
    extern int pthread_mutexattr_getprotocol(const pthread_mutexattr_t *restrict __attr, int *restrict __protocol) throw();
    extern int pthread_mutexattr_setprotocol(pthread_mutexattr_t *__attr, int __protocol) throw();
    extern int pthread_mutexattr_getprioceiling(const pthread_mutexattr_t *restrict __attr, int *restrict __prioceiling) throw();
    extern int pthread_mutexattr_setprioceiling(pthread_mutexattr_t *__attr, int __prioceiling) throw();
    extern int pthread_mutexattr_getrobust(const pthread_mutexattr_t *__attr, int *__robustness) throw();
    extern int pthread_mutexattr_getrobust_np(const pthread_mutexattr_t *__attr, int *__robustness) throw();
    extern int pthread_mutexattr_setrobust(pthread_mutexattr_t *__attr, int __robustness) throw();
    extern int pthread_mutexattr_setrobust_np(pthread_mutexattr_t *__attr, int __robustness) throw();
    extern int pthread_rwlock_init(pthread_rwlock_t *restrict __rwlock, const pthread_rwlockattr_t *restrict __attr) throw();
    extern int pthread_rwlock_destroy(pthread_rwlock_t *__rwlock) throw();
    extern int pthread_rwlock_rdlock(pthread_rwlock_t *__rwlock) throw();
    extern int pthread_rwlock_tryrdlock(pthread_rwlock_t *__rwlock) throw();
    extern int pthread_rwlock_timedrdlock(pthread_rwlock_t *restrict __rwlock, const struct timespec *restrict __abstime) throw();
    extern int pthread_rwlock_wrlock(pthread_rwlock_t *__rwlock) throw();
    extern int pthread_rwlock_trywrlock(pthread_rwlock_t *__rwlock) throw();
    extern int pthread_rwlock_timedwrlock(pthread_rwlock_t *restrict __rwlock, const struct timespec *restrict __abstime) throw();
    extern int pthread_rwlock_unlock(pthread_rwlock_t *__rwlock) throw();
    extern int pthread_rwlockattr_init(pthread_rwlockattr_t *__attr) throw();
    extern int pthread_rwlockattr_destroy(pthread_rwlockattr_t *__attr) throw();
    extern int pthread_rwlockattr_getpshared(const pthread_rwlockattr_t *restrict __attr, int *restrict __pshared) throw();
    extern int pthread_rwlockattr_setpshared(pthread_rwlockattr_t *__attr, int __pshared) throw();
    extern int pthread_rwlockattr_getkind_np(const pthread_rwlockattr_t *restrict __attr, int *restrict __pref) throw();
    extern int pthread_rwlockattr_setkind_np(pthread_rwlockattr_t *__attr, int __pref) throw();
    extern int pthread_cond_init(pthread_cond_t *restrict __cond, const pthread_condattr_t *restrict __cond_attr) throw();
    extern int pthread_cond_destroy(pthread_cond_t *__cond) throw();
    extern int pthread_cond_signal(pthread_cond_t *__cond) throw();
    extern int pthread_cond_broadcast(pthread_cond_t *__cond) throw();
    extern int pthread_cond_wait(pthread_cond_t *restrict __cond, pthread_mutex_t *restrict __mutex);
    extern int pthread_cond_timedwait(pthread_cond_t *restrict __cond, pthread_mutex_t *restrict __mutex, const struct timespec *restrict __abstime);
    extern int pthread_condattr_init(pthread_condattr_t *__attr) throw();
    extern int pthread_condattr_destroy(pthread_condattr_t *__attr) throw();
    extern int pthread_condattr_getpshared(const pthread_condattr_t *restrict __attr, int *restrict __pshared) throw();
    extern int pthread_condattr_setpshared(pthread_condattr_t *__attr, int __pshared) throw();
    extern int pthread_condattr_getclock(const pthread_condattr_t *restrict __attr, __clockid_t *restrict __clock_id) throw();
    extern int pthread_condattr_setclock(pthread_condattr_t *__attr, __clockid_t __clock_id) throw();
    extern int pthread_spin_init(pthread_spinlock_t *__lock, int __pshared) throw();
    extern int pthread_spin_destroy(pthread_spinlock_t *__lock) throw();
    extern int pthread_spin_lock(pthread_spinlock_t *__lock) throw();
    extern int pthread_spin_trylock(pthread_spinlock_t *__lock) throw();
    extern int pthread_spin_unlock(pthread_spinlock_t *__lock) throw();
    extern int pthread_barrier_init(pthread_barrier_t *restrict __barrier, const pthread_barrierattr_t *restrict __attr, unsigned int __count) throw();
    extern int pthread_barrier_destroy(pthread_barrier_t *__barrier) throw();
    extern int pthread_barrier_wait(pthread_barrier_t *__barrier) throw();
    extern int pthread_barrierattr_init(pthread_barrierattr_t *__attr) throw();
    extern int pthread_barrierattr_destroy(pthread_barrierattr_t *__attr) throw();
    extern int pthread_barrierattr_getpshared(const pthread_barrierattr_t *restrict __attr, int *restrict __pshared) throw();
    extern int pthread_barrierattr_setpshared(pthread_barrierattr_t *__attr, int __pshared) throw();
    extern int pthread_key_create(pthread_key_t *__key, void (*__destr_function)(void *)) throw();
    extern int pthread_key_delete(pthread_key_t __key) throw();
    extern void *pthread_getspecific(pthread_key_t __key) throw();
    extern int pthread_setspecific(pthread_key_t __key, const void *__pointer) throw();
    extern int pthread_getcpuclockid(pthread_t __thread_id, __clockid_t *__clock_id) throw();
    extern int pthread_atfork(void (*__prepare)(), void (*__parent)(), void (*__child)()) throw();
}
typedef pthread_t __gthread_t;
typedef pthread_key_t __gthread_key_t;
typedef pthread_once_t __gthread_once_t;
typedef pthread_mutex_t __gthread_mutex_t;
typedef pthread_mutex_t __gthread_recursive_mutex_t;
typedef pthread_cond_t __gthread_cond_t;
typedef struct timespec __gthread_time_t;
static typeof (pthread_once) __gthrw_pthread_once;
static typeof (pthread_getspecific) __gthrw_pthread_getspecific;
static typeof (pthread_setspecific) __gthrw_pthread_setspecific;
static typeof (pthread_create) __gthrw_pthread_create;
static typeof (pthread_join) __gthrw_pthread_join;
static typeof (pthread_equal) __gthrw_pthread_equal;
static typeof (pthread_self) __gthrw_pthread_self;
static typeof (pthread_detach) __gthrw_pthread_detach;
static typeof (pthread_cancel) __gthrw_pthread_cancel;
static typeof (sched_yield) __gthrw_sched_yield;
static typeof (pthread_mutex_lock) __gthrw_pthread_mutex_lock;
static typeof (pthread_mutex_trylock) __gthrw_pthread_mutex_trylock;
static typeof (pthread_mutex_timedlock) __gthrw_pthread_mutex_timedlock;
static typeof (pthread_mutex_unlock) __gthrw_pthread_mutex_unlock;
static typeof (pthread_mutex_init) __gthrw_pthread_mutex_init;
static typeof (pthread_mutex_destroy) __gthrw_pthread_mutex_destroy;
static typeof (pthread_cond_broadcast) __gthrw_pthread_cond_broadcast;
static typeof (pthread_cond_signal) __gthrw_pthread_cond_signal;
static typeof (pthread_cond_wait) __gthrw_pthread_cond_wait;
static typeof (pthread_cond_timedwait) __gthrw_pthread_cond_timedwait;
static typeof (pthread_cond_destroy) __gthrw_pthread_cond_destroy;
static typeof (pthread_key_create) __gthrw_pthread_key_create;
static typeof (pthread_key_delete) __gthrw_pthread_key_delete;
static typeof (pthread_mutexattr_init) __gthrw_pthread_mutexattr_init;
static typeof (pthread_mutexattr_settype) __gthrw_pthread_mutexattr_settype;
static typeof (pthread_mutexattr_destroy) __gthrw_pthread_mutexattr_destroy;
static inline int __gthread_active_p() (CompoundStmt 0x9c701c8 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:241:1, line:253:1>
  (DeclStmt 0x9c70130 <line:242:3, line:251:13>
    0x9c70070 "static void *const __gthread_active_ptr =
      (UnaryOperator 0x9c70118 <line:243:7, <scratch space>:99:1> 'void *' prefix '__extension__'
        (CStyleCastExpr 0x9c70100 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:243:21, <scratch space>:99:1> 'void *' <BitCast>
          (UnaryOperator 0x9c700d8 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:243:30, <scratch space>:99:1> 'typeof (pthread_cancel) *' prefix '&'
            (DeclRefExpr 0x9c700a4 <col:1> 'typeof (pthread_cancel)':'int (pthread_t)' lvalue Function 0x9c6deb0 '__gthrw_pthread_cancel' 'typeof (pthread_cancel)':'int (pthread_t)'))))")
  (ReturnStmt 0x9c701b8 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:252:3, col:34>
    (ImplicitCastExpr 0x9c701a8 <col:10, col:34> 'int' <IntegralCast>
      (BinaryOperator 0x9c70190 <col:10, col:34> '_Bool' '!='
        (ImplicitCastExpr 0x9c70170 <col:10> 'void *' <LValueToRValue>
          (DeclRefExpr 0x9c70140 <col:10> 'void *const' lvalue Var 0x9c70070 '__gthread_active_ptr' 'void *const'))
        (ImplicitCastExpr 0x9c70180 <col:34> 'void *' <NullToPointer>
          (IntegerLiteral 0x9c70158 <col:34> 'int' 0))))))


static inline int __gthread_create(__gthread_t *__threadid, void *(*__func)(void *), void *__args) (CompoundStmt 0x9c705c8 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:662:1, line:664:1>
  (ReturnStmt 0x9c705b8 <line:663:3, col:68>
    (CallExpr 0x9c70548 <<scratch space>:100:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:663:68> 'int'
      (ImplicitCastExpr 0x9c70538 <<scratch space>:100:1> 'typeof (pthread_create) *' <FunctionToPointerDecay>
        (DeclRefExpr 0x9c704e8 <col:1> 'typeof (pthread_create)':'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict) throw()' lvalue Function 0x9c6d590 '__gthrw_pthread_create' 'typeof (pthread_create)':'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict) throw()'))
      (ImplicitCastExpr 0x9c70578 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:663:36> '__gthread_t *' <LValueToRValue>
        (DeclRefExpr 0x9c70484 <col:36> '__gthread_t *' lvalue ParmVar 0x9c70220 '__threadid' '__gthread_t *'))
      (ImplicitCastExpr 0x9c70588 </usr/include/linux/stddef.h:8:14> 'const pthread_attr_t *' <NullToPointer>
        (IntegerLiteral 0x9c704a0 <col:14> 'int' 0))
      (ImplicitCastExpr 0x9c70598 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:663:54> 'void *(*)(void *)' <LValueToRValue>
        (DeclRefExpr 0x9c704b8 <col:54> 'void *(*)(void *)' lvalue ParmVar 0x9c702d0 '__func' 'void *(*)(void *)'))
      (ImplicitCastExpr 0x9c705a8 <col:62> 'void *' <LValueToRValue>
        (DeclRefExpr 0x9c704d0 <col:62> 'void *' lvalue ParmVar 0x9c70320 '__args' 'void *')))))


static inline int __gthread_join(__gthread_t __threadid, void **__value_ptr) (CompoundStmt 0x9c70850 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:668:1, line:670:1>
  (ReturnStmt 0x9c70840 <line:669:3, col:57>
    (CallExpr 0x9c707f8 <<scratch space>:101:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:669:57> 'int'
      (ImplicitCastExpr 0x9c707e8 <<scratch space>:101:1> 'typeof (pthread_join) *' <FunctionToPointerDecay>
        (DeclRefExpr 0x9c7078c <col:1> 'typeof (pthread_join)':'int (pthread_t, void **)' lvalue Function 0x9c6d830 '__gthrw_pthread_join' 'typeof (pthread_join)':'int (pthread_t, void **)'))
      (ImplicitCastExpr 0x9c70820 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:669:34> '__gthread_t':'unsigned long' <LValueToRValue>
        (DeclRefExpr 0x9c7075c <col:34> '__gthread_t':'unsigned long' lvalue ParmVar 0x9c705f0 '__threadid' '__gthread_t':'unsigned long'))
      (ImplicitCastExpr 0x9c70830 <col:46> 'void **' <LValueToRValue>
        (DeclRefExpr 0x9c70774 <col:46> 'void **' lvalue ParmVar 0x9c70640 '__value_ptr' 'void **')))))


static inline int __gthread_detach(__gthread_t __threadid) (CompoundStmt 0x9c70a28 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:674:1, line:676:1>
  (ReturnStmt 0x9c70a18 <line:675:3, col:46>
    (CallExpr 0x9c709e8 <<scratch space>:102:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:675:46> 'int'
      (ImplicitCastExpr 0x9c709d8 <<scratch space>:102:1> 'typeof (pthread_detach) *' <FunctionToPointerDecay>
        (DeclRefExpr 0x9c709a4 <col:1> 'typeof (pthread_detach)':'int (pthread_t) throw()' lvalue Function 0x9c6dd20 '__gthrw_pthread_detach' 'typeof (pthread_detach)':'int (pthread_t) throw()'))
      (ImplicitCastExpr 0x9c70a08 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:675:36> '__gthread_t':'unsigned long' <LValueToRValue>
        (DeclRefExpr 0x9c7098c <col:36> '__gthread_t':'unsigned long' lvalue ParmVar 0x9c70870 '__threadid' '__gthread_t':'unsigned long')))))


static inline int __gthread_equal(__gthread_t __t1, __gthread_t __t2) (CompoundStmt 0x9c714e0 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:680:1, line:682:1>
  (ReturnStmt 0x9c714d0 <line:681:3, col:45>
    (CallExpr 0x9c71488 <<scratch space>:103:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:681:45> 'int'
      (ImplicitCastExpr 0x9c71478 <<scratch space>:103:1> 'typeof (pthread_equal) *' <FunctionToPointerDecay>
        (DeclRefExpr 0x9c7141c <col:1> 'typeof (pthread_equal)':'int (pthread_t, pthread_t) throw()' lvalue Function 0x9c6da10 '__gthrw_pthread_equal' 'typeof (pthread_equal)':'int (pthread_t, pthread_t) throw()'))
      (ImplicitCastExpr 0x9c714b0 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:681:35> '__gthread_t':'unsigned long' <LValueToRValue>
        (DeclRefExpr 0x9c713ec <col:35> '__gthread_t':'unsigned long' lvalue ParmVar 0x9c70a50 '__t1' '__gthread_t':'unsigned long'))
      (ImplicitCastExpr 0x9c714c0 <col:41> '__gthread_t':'unsigned long' <LValueToRValue>
        (DeclRefExpr 0x9c71404 <col:41> '__gthread_t':'unsigned long' lvalue ParmVar 0x9c70a90 '__t2' '__gthread_t':'unsigned long')))))


static inline __gthread_t __gthread_self() (CompoundStmt 0x9c71698 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:686:1, line:688:1>
  (ReturnStmt 0x9c71688 <line:687:3, col:34>
    (CallExpr 0x9c71668 <<scratch space>:104:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:687:34> 'pthread_t':'unsigned long'
      (ImplicitCastExpr 0x9c71658 <<scratch space>:104:1> 'typeof (pthread_self) *' <FunctionToPointerDecay>
        (DeclRefExpr 0x9c71604 <col:1> 'typeof (pthread_self)':'pthread_t (void) throw()' lvalue Function 0x9c6dbe0 '__gthrw_pthread_self' 'typeof (pthread_self)':'pthread_t (void) throw()')))))


static inline int __gthread_yield() (CompoundStmt 0x9c71818 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:692:1, line:694:1>
  (ReturnStmt 0x9c71808 <line:693:3, col:33>
    (CallExpr 0x9c717e8 <<scratch space>:105:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:693:33> 'int'
      (ImplicitCastExpr 0x9c717d8 <<scratch space>:105:1> 'typeof (sched_yield) *' <FunctionToPointerDecay>
        (DeclRefExpr 0x9c717a4 <col:1> 'typeof (sched_yield)':'int (void) throw()' lvalue Function 0x9c6e080 '__gthrw_sched_yield' 'typeof (sched_yield)':'int (void) throw()')))))


static inline int __gthread_once(__gthread_once_t *__once, void (*__func)()) (CompoundStmt 0x9c71c10 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:698:1, line:703:1>
  (IfStmt 0x9c71bf0 <line:699:3, line:702:13>
    <<<NULL>>>
    (ImplicitCastExpr 0x9c71a78 <line:699:7, col:27> '_Bool' <IntegralToBoolean>
      (CallExpr 0x9c71a58 <col:7, col:27> 'int'
        (ImplicitCastExpr 0x9c71a48 <col:7> 'int (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9c71a2c <col:7> 'int (void)' lvalue Function 0x9c70000 '__gthread_active_p' 'int (void)'))))
    (ReturnStmt 0x9c71ba0 <line:700:5, col:50>
      (CallExpr 0x9c71b58 <<scratch space>:106:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:700:50> 'int'
        (ImplicitCastExpr 0x9c71b48 <<scratch space>:106:1> 'typeof (pthread_once) *' <FunctionToPointerDecay>
          (DeclRefExpr 0x9c71aec <col:1> 'typeof (pthread_once)':'int (pthread_once_t *, void (*)(void))' lvalue Function 0x9c6cff0 '__gthrw_pthread_once' 'typeof (pthread_once)':'int (pthread_once_t *, void (*)(void))'))
        (ImplicitCastExpr 0x9c71b80 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:700:36> '__gthread_once_t *' <LValueToRValue>
          (DeclRefExpr 0x9c71abc <col:36> '__gthread_once_t *' lvalue ParmVar 0x9c71870 '__once' '__gthread_once_t *'))
        (ImplicitCastExpr 0x9c71b90 <col:44> 'void (*)(void)' <LValueToRValue>
          (DeclRefExpr 0x9c71ad4 <col:44> 'void (*)(void)' lvalue ParmVar 0x9c71910 '__func' 'void (*)(void)'))))
    (ReturnStmt 0x9c71be0 <line:702:5, col:13>
      (UnaryOperator 0x9c71bc8 <col:12, col:13> 'int' prefix '-'
        (IntegerLiteral 0x9c71bb0 <col:13> 'int' 1)))))


static inline int __gthread_key_create(__gthread_key_t *__key, void (*__dtor)(void *)) (CompoundStmt 0x9c71f30 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:707:1, line:709:1>
  (ReturnStmt 0x9c71f20 <line:708:3, col:53>
    (CallExpr 0x9c71ed8 <<scratch space>:107:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:708:53> 'int'
      (ImplicitCastExpr 0x9c71ec8 <<scratch space>:107:1> 'typeof (pthread_key_create) *' <FunctionToPointerDecay>
        (DeclRefExpr 0x9c71e6c <col:1> 'typeof (pthread_key_create)':'int (pthread_key_t *, void (*)(void *)) throw()' lvalue Function 0x9c6f6f0 '__gthrw_pthread_key_create' 'typeof (pthread_key_create)':'int (pthread_key_t *, void (*)(void *)) throw()'))
      (ImplicitCastExpr 0x9c71f00 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:708:40> '__gthread_key_t *' <LValueToRValue>
        (DeclRefExpr 0x9c71e3c <col:40> '__gthread_key_t *' lvalue ParmVar 0x9c71c70 '__key' '__gthread_key_t *'))
      (ImplicitCastExpr 0x9c71f10 <col:47> 'void (*)(void *)' <LValueToRValue>
        (DeclRefExpr 0x9c71e54 <col:47> 'void (*)(void *)' lvalue ParmVar 0x9c71d20 '__dtor' 'void (*)(void *)')))))


static inline int __gthread_key_delete(__gthread_key_t __key) (CompoundStmt 0x9c72108 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:713:1, line:715:1>
  (ReturnStmt 0x9c720f8 <line:714:3, col:45>
    (CallExpr 0x9c720c8 <<scratch space>:108:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:714:45> 'int'
      (ImplicitCastExpr 0x9c720b8 <<scratch space>:108:1> 'typeof (pthread_key_delete) *' <FunctionToPointerDecay>
        (DeclRefExpr 0x9c72084 <col:1> 'typeof (pthread_key_delete)':'int (pthread_key_t) throw()' lvalue Function 0x9c6f8f0 '__gthrw_pthread_key_delete' 'typeof (pthread_key_delete)':'int (pthread_key_t) throw()'))
      (ImplicitCastExpr 0x9c720e8 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:714:40> '__gthread_key_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9c7206c <col:40> '__gthread_key_t':'unsigned int' lvalue ParmVar 0x9c71f50 '__key' '__gthread_key_t':'unsigned int')))))


static inline void *__gthread_getspecific(__gthread_key_t __key) (CompoundStmt 0x9c722e8 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:719:1, line:721:1>
  (ReturnStmt 0x9c722d8 <line:720:3, col:46>
    (CallExpr 0x9c722a8 <<scratch space>:109:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:720:46> 'void *'
      (ImplicitCastExpr 0x9c72298 <<scratch space>:109:1> 'typeof (pthread_getspecific) *' <FunctionToPointerDecay>
        (DeclRefExpr 0x9c72264 <col:1> 'typeof (pthread_getspecific)':'void *(pthread_key_t) throw()' lvalue Function 0x9c6d200 '__gthrw_pthread_getspecific' 'typeof (pthread_getspecific)':'void *(pthread_key_t) throw()'))
      (ImplicitCastExpr 0x9c722c8 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:720:41> '__gthread_key_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9c7224c <col:41> '__gthread_key_t':'unsigned int' lvalue ParmVar 0x9c72130 '__key' '__gthread_key_t':'unsigned int')))))


static inline int __gthread_setspecific(__gthread_key_t __key, const void *__ptr) (CompoundStmt 0x9c72570 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:725:1, line:727:1>
  (ReturnStmt 0x9c72560 <line:726:3, col:53>
    (CallExpr 0x9c72518 <<scratch space>:110:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:726:53> 'int'
      (ImplicitCastExpr 0x9c72508 <<scratch space>:110:1> 'typeof (pthread_setspecific) *' <FunctionToPointerDecay>
        (DeclRefExpr 0x9c724ac <col:1> 'typeof (pthread_setspecific)':'int (pthread_key_t, const void *) throw()' lvalue Function 0x9c6d3a0 '__gthrw_pthread_setspecific' 'typeof (pthread_setspecific)':'int (pthread_key_t, const void *) throw()'))
      (ImplicitCastExpr 0x9c72540 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:726:41> '__gthread_key_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9c7247c <col:41> '__gthread_key_t':'unsigned int' lvalue ParmVar 0x9c72310 '__key' '__gthread_key_t':'unsigned int'))
      (ImplicitCastExpr 0x9c72550 <col:48> 'const void *' <LValueToRValue>
        (DeclRefExpr 0x9c72494 <col:48> 'const void *' lvalue ParmVar 0x9c72360 '__ptr' 'const void *')))))


static inline int __gthread_mutex_destroy(__gthread_mutex_t *__mutex) (CompoundStmt 0x9c72880 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:731:1, line:736:1>
  (IfStmt 0x9c72860 <line:732:3, line:735:12>
    <<<NULL>>>
    (ImplicitCastExpr 0x9c72738 <line:732:7, col:27> '_Bool' <IntegralToBoolean>
      (CallExpr 0x9c72718 <col:7, col:27> 'int'
        (ImplicitCastExpr 0x9c72708 <col:7> 'int (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9c726ec <col:7> 'int (void)' lvalue Function 0x9c70000 '__gthread_active_p' 'int (void)'))))
    (ReturnStmt 0x9c72828 <line:733:5, col:52>
      (CallExpr 0x9c727f8 <<scratch space>:111:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:733:52> 'int'
        (ImplicitCastExpr 0x9c727e8 <<scratch space>:111:1> 'typeof (pthread_mutex_destroy) *' <FunctionToPointerDecay>
          (DeclRefExpr 0x9c72794 <col:1> 'typeof (pthread_mutex_destroy)':'int (pthread_mutex_t *) throw()' lvalue Function 0x9c6eba0 '__gthrw_pthread_mutex_destroy' 'typeof (pthread_mutex_destroy)':'int (pthread_mutex_t *) throw()'))
        (ImplicitCastExpr 0x9c72818 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:733:45> '__gthread_mutex_t *' <LValueToRValue>
          (DeclRefExpr 0x9c7277c <col:45> '__gthread_mutex_t *' lvalue ParmVar 0x9c725d0 '__mutex' '__gthread_mutex_t *'))))
    (ReturnStmt 0x9c72850 <line:735:5, col:12>
      (IntegerLiteral 0x9c72838 <col:12> 'int' 0))))


static inline int __gthread_mutex_lock(__gthread_mutex_t *__mutex) (CompoundStmt 0x9c72b20 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:740:1, line:745:1>
  (IfStmt 0x9c72b00 <line:741:3, line:744:12>
    <<<NULL>>>
    (ImplicitCastExpr 0x9c729f8 <line:741:7, col:27> '_Bool' <IntegralToBoolean>
      (CallExpr 0x9c729d8 <col:7, col:27> 'int'
        (ImplicitCastExpr 0x9c729c8 <col:7> 'int (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9c729ac <col:7> 'int (void)' lvalue Function 0x9c70000 '__gthread_active_p' 'int (void)'))))
    (ReturnStmt 0x9c72ac8 <line:742:5, col:49>
      (CallExpr 0x9c72a98 <<scratch space>:112:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:742:49> 'int'
        (ImplicitCastExpr 0x9c72a88 <<scratch space>:112:1> 'typeof (pthread_mutex_lock) *' <FunctionToPointerDecay>
          (DeclRefExpr 0x9c72a54 <col:1> 'typeof (pthread_mutex_lock)':'int (pthread_mutex_t *) throw()' lvalue Function 0x9c6e200 '__gthrw_pthread_mutex_lock' 'typeof (pthread_mutex_lock)':'int (pthread_mutex_t *) throw()'))
        (ImplicitCastExpr 0x9c72ab8 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:742:42> '__gthread_mutex_t *' <LValueToRValue>
          (DeclRefExpr 0x9c72a3c <col:42> '__gthread_mutex_t *' lvalue ParmVar 0x9c728b0 '__mutex' '__gthread_mutex_t *'))))
    (ReturnStmt 0x9c72af0 <line:744:5, col:12>
      (IntegerLiteral 0x9c72ad8 <col:12> 'int' 0))))


static inline int __gthread_mutex_trylock(__gthread_mutex_t *__mutex) (CompoundStmt 0x9c72dc0 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:749:1, line:754:1>
  (IfStmt 0x9c72da0 <line:750:3, line:753:12>
    <<<NULL>>>
    (ImplicitCastExpr 0x9c72c98 <line:750:7, col:27> '_Bool' <IntegralToBoolean>
      (CallExpr 0x9c72c78 <col:7, col:27> 'int'
        (ImplicitCastExpr 0x9c72c68 <col:7> 'int (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9c72c4c <col:7> 'int (void)' lvalue Function 0x9c70000 '__gthread_active_p' 'int (void)'))))
    (ReturnStmt 0x9c72d68 <line:751:5, col:52>
      (CallExpr 0x9c72d38 <<scratch space>:113:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:751:52> 'int'
        (ImplicitCastExpr 0x9c72d28 <<scratch space>:113:1> 'typeof (pthread_mutex_trylock) *' <FunctionToPointerDecay>
          (DeclRefExpr 0x9c72cf4 <col:1> 'typeof (pthread_mutex_trylock)':'int (pthread_mutex_t *) throw()' lvalue Function 0x9c6e3f0 '__gthrw_pthread_mutex_trylock' 'typeof (pthread_mutex_trylock)':'int (pthread_mutex_t *) throw()'))
        (ImplicitCastExpr 0x9c72d58 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:751:45> '__gthread_mutex_t *' <LValueToRValue>
          (DeclRefExpr 0x9c72cdc <col:45> '__gthread_mutex_t *' lvalue ParmVar 0x9c72b50 '__mutex' '__gthread_mutex_t *'))))
    (ReturnStmt 0x9c72d90 <line:753:5, col:12>
      (IntegerLiteral 0x9c72d78 <col:12> 'int' 0))))


static inline int __gthread_mutex_timedlock(__gthread_mutex_t *__mutex, const __gthread_time_t *__abs_timeout) (CompoundStmt 0x9c73158 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:761:1, line:766:1>
  (IfStmt 0x9c73138 <line:762:3, line:765:12>
    <<<NULL>>>
    (ImplicitCastExpr 0x9c72fd8 <line:762:7, col:27> '_Bool' <IntegralToBoolean>
      (CallExpr 0x9c72fb8 <col:7, col:27> 'int'
        (ImplicitCastExpr 0x9c72fa8 <col:7> 'int (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9c72f8c <col:7> 'int (void)' lvalue Function 0x9c70000 '__gthread_active_p' 'int (void)'))))
    (ReturnStmt 0x9c73100 <line:763:5, col:69>
      (CallExpr 0x9c730b8 <<scratch space>:114:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:763:69> 'int'
        (ImplicitCastExpr 0x9c730a8 <<scratch space>:114:1> 'typeof (pthread_mutex_timedlock) *' <FunctionToPointerDecay>
          (DeclRefExpr 0x9c7304c <col:1> 'typeof (pthread_mutex_timedlock)':'int (pthread_mutex_t *restrict, const struct timespec *restrict) throw()' lvalue Function 0x9c6e5c0 '__gthrw_pthread_mutex_timedlock' 'typeof (pthread_mutex_timedlock)':'int (pthread_mutex_t *restrict, const struct timespec *restrict) throw()'))
        (ImplicitCastExpr 0x9c730e0 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:763:47> '__gthread_mutex_t *' <LValueToRValue>
          (DeclRefExpr 0x9c7301c <col:47> '__gthread_mutex_t *' lvalue ParmVar 0x9c72df0 '__mutex' '__gthread_mutex_t *'))
        (ImplicitCastExpr 0x9c730f0 <col:56> 'const __gthread_time_t *' <LValueToRValue>
          (DeclRefExpr 0x9c73034 <col:56> 'const __gthread_time_t *' lvalue ParmVar 0x9c72e70 '__abs_timeout' 'const __gthread_time_t *'))))
    (ReturnStmt 0x9c73128 <line:765:5, col:12>
      (IntegerLiteral 0x9c73110 <col:12> 'int' 0))))


static inline int __gthread_mutex_unlock(__gthread_mutex_t *__mutex) (CompoundStmt 0x9c74a60 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:772:1, line:777:1>
  (IfStmt 0x9c74a40 <line:773:3, line:776:12>
    <<<NULL>>>
    (ImplicitCastExpr 0x9c732c8 <line:773:7, col:27> '_Bool' <IntegralToBoolean>
      (CallExpr 0x9c732a8 <col:7, col:27> 'int'
        (ImplicitCastExpr 0x9c73298 <col:7> 'int (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9c7327c <col:7> 'int (void)' lvalue Function 0x9c70000 '__gthread_active_p' 'int (void)'))))
    (ReturnStmt 0x9c74a08 <line:774:5, col:51>
      (CallExpr 0x9c749d8 <<scratch space>:115:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:774:51> 'int'
        (ImplicitCastExpr 0x9c749c8 <<scratch space>:115:1> 'typeof (pthread_mutex_unlock) *' <FunctionToPointerDecay>
          (DeclRefExpr 0x9c74990 <col:1> 'typeof (pthread_mutex_unlock)':'int (pthread_mutex_t *) throw()' lvalue Function 0x9c6e7f0 '__gthrw_pthread_mutex_unlock' 'typeof (pthread_mutex_unlock)':'int (pthread_mutex_t *) throw()'))
        (ImplicitCastExpr 0x9c749f8 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:774:44> '__gthread_mutex_t *' <LValueToRValue>
          (DeclRefExpr 0x9c7330c <col:44> '__gthread_mutex_t *' lvalue ParmVar 0x9c73180 '__mutex' '__gthread_mutex_t *'))))
    (ReturnStmt 0x9c74a30 <line:776:5, col:12>
      (IntegerLiteral 0x9c74a18 <col:12> 'int' 0))))


static inline int __gthread_recursive_mutex_lock(__gthread_recursive_mutex_t *__mutex) (CompoundStmt 0x9c74c78 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:804:1, line:806:1>
  (ReturnStmt 0x9c74c68 <line:805:3, col:39>
    (CallExpr 0x9c74c38 <col:10, col:39> 'int'
      (ImplicitCastExpr 0x9c74c28 <col:10> 'int (*)(__gthread_mutex_t *)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9c74bf4 <col:10> 'int (__gthread_mutex_t *)' lvalue Function 0x9c72910 '__gthread_mutex_lock' 'int (__gthread_mutex_t *)'))
      (ImplicitCastExpr 0x9c74c58 <col:32> '__gthread_recursive_mutex_t *' <LValueToRValue>
        (DeclRefExpr 0x9c74bdc <col:32> '__gthread_recursive_mutex_t *' lvalue ParmVar 0x9c74ac0 '__mutex' '__gthread_recursive_mutex_t *')))))


static inline int __gthread_recursive_mutex_trylock(__gthread_recursive_mutex_t *__mutex) (CompoundStmt 0x9c74e20 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:810:1, line:812:1>
  (ReturnStmt 0x9c74e10 <line:811:3, col:42>
    (CallExpr 0x9c74de0 <col:10, col:42> 'int'
      (ImplicitCastExpr 0x9c74dd0 <col:10> 'int (*)(__gthread_mutex_t *)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9c74db4 <col:10> 'int (__gthread_mutex_t *)' lvalue Function 0x9c72bb0 '__gthread_mutex_trylock' 'int (__gthread_mutex_t *)'))
      (ImplicitCastExpr 0x9c74e00 <col:35> '__gthread_recursive_mutex_t *' <LValueToRValue>
        (DeclRefExpr 0x9c74d9c <col:35> '__gthread_recursive_mutex_t *' lvalue ParmVar 0x9c74ca0 '__mutex' '__gthread_recursive_mutex_t *')))))


static inline int __gthread_recursive_mutex_timedlock(__gthread_recursive_mutex_t *__mutex, const __gthread_time_t *__abs_timeout) (CompoundStmt 0x9c75090 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:819:1, line:821:1>
  (ReturnStmt 0x9c75080 <line:820:3, col:59>
    (CallExpr 0x9c75038 <col:10, col:59> 'int'
      (ImplicitCastExpr 0x9c75028 <col:10> 'int (*)(__gthread_mutex_t *, const __gthread_time_t *)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9c74fec <col:10> 'int (__gthread_mutex_t *, const __gthread_time_t *)' lvalue Function 0x9c72ef0 '__gthread_mutex_timedlock' 'int (__gthread_mutex_t *, const __gthread_time_t *)'))
      (ImplicitCastExpr 0x9c75060 <col:37> '__gthread_recursive_mutex_t *' <LValueToRValue>
        (DeclRefExpr 0x9c74fbc <col:37> '__gthread_recursive_mutex_t *' lvalue ParmVar 0x9c74e50 '__mutex' '__gthread_recursive_mutex_t *'))
      (ImplicitCastExpr 0x9c75070 <col:46> 'const __gthread_time_t *' <LValueToRValue>
        (DeclRefExpr 0x9c74fd4 <col:46> 'const __gthread_time_t *' lvalue ParmVar 0x9c74ea0 '__abs_timeout' 'const __gthread_time_t *')))))


static inline int __gthread_recursive_mutex_unlock(__gthread_recursive_mutex_t *__mutex) (CompoundStmt 0x9c75240 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:827:1, line:829:1>
  (ReturnStmt 0x9c75230 <line:828:3, col:41>
    (CallExpr 0x9c75200 <col:10, col:41> 'int'
      (ImplicitCastExpr 0x9c751f0 <col:10> 'int (*)(__gthread_mutex_t *)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9c751d4 <col:10> 'int (__gthread_mutex_t *)' lvalue Function 0x9c731e0 '__gthread_mutex_unlock' 'int (__gthread_mutex_t *)'))
      (ImplicitCastExpr 0x9c75220 <col:34> '__gthread_recursive_mutex_t *' <LValueToRValue>
        (DeclRefExpr 0x9c751bc <col:34> '__gthread_recursive_mutex_t *' lvalue ParmVar 0x9c750c0 '__mutex' '__gthread_recursive_mutex_t *')))))


static inline int __gthread_cond_broadcast(__gthread_cond_t *__cond) (CompoundStmt 0x9c75478 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:833:1, line:835:1>
  (ReturnStmt 0x9c75468 <line:834:3, col:50>
    (CallExpr 0x9c75438 <<scratch space>:116:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:834:50> 'int'
      (ImplicitCastExpr 0x9c75428 <<scratch space>:116:1> 'typeof (pthread_cond_broadcast) *' <FunctionToPointerDecay>
        (DeclRefExpr 0x9c753d4 <col:1> 'typeof (pthread_cond_broadcast)':'int (pthread_cond_t *) throw()' lvalue Function 0x9c6ed90 '__gthrw_pthread_cond_broadcast' 'typeof (pthread_cond_broadcast)':'int (pthread_cond_t *) throw()'))
      (ImplicitCastExpr 0x9c75458 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:834:44> '__gthread_cond_t *' <LValueToRValue>
        (DeclRefExpr 0x9c753bc <col:44> '__gthread_cond_t *' lvalue ParmVar 0x9c752a0 '__cond' '__gthread_cond_t *')))))


static inline int __gthread_cond_signal(__gthread_cond_t *__cond) (CompoundStmt 0x9c75638 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:839:1, line:841:1>
  (ReturnStmt 0x9c75628 <line:840:3, col:47>
    (CallExpr 0x9c755f8 <<scratch space>:117:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:840:47> 'int'
      (ImplicitCastExpr 0x9c755e8 <<scratch space>:117:1> 'typeof (pthread_cond_signal) *' <FunctionToPointerDecay>
        (DeclRefExpr 0x9c755b4 <col:1> 'typeof (pthread_cond_signal)':'int (pthread_cond_t *) throw()' lvalue Function 0x9c6ef30 '__gthrw_pthread_cond_signal' 'typeof (pthread_cond_signal)':'int (pthread_cond_t *) throw()'))
      (ImplicitCastExpr 0x9c75618 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:840:41> '__gthread_cond_t *' <LValueToRValue>
        (DeclRefExpr 0x9c7559c <col:41> '__gthread_cond_t *' lvalue ParmVar 0x9c754a0 '__cond' '__gthread_cond_t *')))))


static inline int __gthread_cond_wait(__gthread_cond_t *__cond, __gthread_mutex_t *__mutex) (CompoundStmt 0x9c758c0 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:845:1, line:847:1>
  (ReturnStmt 0x9c758b0 <line:846:3, col:54>
    (CallExpr 0x9c75868 <<scratch space>:118:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:846:54> 'int'
      (ImplicitCastExpr 0x9c75858 <<scratch space>:118:1> 'typeof (pthread_cond_wait) *' <FunctionToPointerDecay>
        (DeclRefExpr 0x9c757fc <col:1> 'typeof (pthread_cond_wait)':'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' lvalue Function 0x9c6f110 '__gthrw_pthread_cond_wait' 'typeof (pthread_cond_wait)':'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)'))
      (ImplicitCastExpr 0x9c75890 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:846:39> '__gthread_cond_t *' <LValueToRValue>
        (DeclRefExpr 0x9c757cc <col:39> '__gthread_cond_t *' lvalue ParmVar 0x9c75660 '__cond' '__gthread_cond_t *'))
      (ImplicitCastExpr 0x9c758a0 <col:47> '__gthread_mutex_t *' <LValueToRValue>
        (DeclRefExpr 0x9c757e4 <col:47> '__gthread_mutex_t *' lvalue ParmVar 0x9c756b0 '__mutex' '__gthread_mutex_t *')))))


static inline int __gthread_cond_timedwait(__gthread_cond_t *__cond, __gthread_mutex_t *__mutex, const __gthread_time_t *__abs_timeout) (CompoundStmt 0x9c75be0 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:852:1, line:854:1>
  (ReturnStmt 0x9c75bd0 <line:853:3, col:74>
    (CallExpr 0x9c75b78 <<scratch space>:119:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:853:74> 'int'
      (ImplicitCastExpr 0x9c75b68 <<scratch space>:119:1> 'typeof (pthread_cond_timedwait) *' <FunctionToPointerDecay>
        (DeclRefExpr 0x9c75b0c <col:1> 'typeof (pthread_cond_timedwait)':'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' lvalue Function 0x9c6f300 '__gthrw_pthread_cond_timedwait' 'typeof (pthread_cond_timedwait)':'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)'))
      (ImplicitCastExpr 0x9c75ba0 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:853:44> '__gthread_cond_t *' <LValueToRValue>
        (DeclRefExpr 0x9c75ac4 <col:44> '__gthread_cond_t *' lvalue ParmVar 0x9c758f0 '__cond' '__gthread_cond_t *'))
      (ImplicitCastExpr 0x9c75bb0 <col:52> '__gthread_mutex_t *' <LValueToRValue>
        (DeclRefExpr 0x9c75adc <col:52> '__gthread_mutex_t *' lvalue ParmVar 0x9c75940 '__mutex' '__gthread_mutex_t *'))
      (ImplicitCastExpr 0x9c75bc0 <col:61> 'const __gthread_time_t *' <LValueToRValue>
        (DeclRefExpr 0x9c75af4 <col:61> 'const __gthread_time_t *' lvalue ParmVar 0x9c75990 '__abs_timeout' 'const __gthread_time_t *')))))


static inline int __gthread_cond_wait_recursive(__gthread_cond_t *__cond, __gthread_recursive_mutex_t *__mutex) (CompoundStmt 0x9c75e50 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:859:1, line:861:1>
  (ReturnStmt 0x9c75e40 <line:860:3, col:46>
    (CallExpr 0x9c75df8 <col:10, col:46> 'int'
      (ImplicitCastExpr 0x9c75de8 <col:10> 'int (*)(__gthread_cond_t *, __gthread_mutex_t *)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9c75dac <col:10> 'int (__gthread_cond_t *, __gthread_mutex_t *)' lvalue Function 0x9c75730 '__gthread_cond_wait' 'int (__gthread_cond_t *, __gthread_mutex_t *)'))
      (ImplicitCastExpr 0x9c75e20 <col:31> '__gthread_cond_t *' <LValueToRValue>
        (DeclRefExpr 0x9c75d7c <col:31> '__gthread_cond_t *' lvalue ParmVar 0x9c75c10 '__cond' '__gthread_cond_t *'))
      (ImplicitCastExpr 0x9c75e30 <col:39> '__gthread_recursive_mutex_t *' <LValueToRValue>
        (DeclRefExpr 0x9c75d94 <col:39> '__gthread_recursive_mutex_t *' lvalue ParmVar 0x9c75c60 '__mutex' '__gthread_recursive_mutex_t *')))))


static inline int __gthread_cond_timedwait_recursive(__gthread_cond_t *__cond, __gthread_recursive_mutex_t *__mutex, const __gthread_time_t *__abs_timeout) (CompoundStmt 0x9c76150 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:867:1, line:869:1>
  (ReturnStmt 0x9c76140 <line:868:3, col:66>
    (CallExpr 0x9c760e8 <col:10, col:66> 'int'
      (ImplicitCastExpr 0x9c760d8 <col:10> 'int (*)(__gthread_cond_t *, __gthread_mutex_t *, const __gthread_time_t *)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9c7609c <col:10> 'int (__gthread_cond_t *, __gthread_mutex_t *, const __gthread_time_t *)' lvalue Function 0x9c75a20 '__gthread_cond_timedwait' 'int (__gthread_cond_t *, __gthread_mutex_t *, const __gthread_time_t *)'))
      (ImplicitCastExpr 0x9c76110 <col:36> '__gthread_cond_t *' <LValueToRValue>
        (DeclRefExpr 0x9c76054 <col:36> '__gthread_cond_t *' lvalue ParmVar 0x9c75e80 '__cond' '__gthread_cond_t *'))
      (ImplicitCastExpr 0x9c76120 <col:44> '__gthread_recursive_mutex_t *' <LValueToRValue>
        (DeclRefExpr 0x9c7606c <col:44> '__gthread_recursive_mutex_t *' lvalue ParmVar 0x9c75ed0 '__mutex' '__gthread_recursive_mutex_t *'))
      (ImplicitCastExpr 0x9c76130 <col:53> 'const __gthread_time_t *' <LValueToRValue>
        (DeclRefExpr 0x9c76084 <col:53> 'const __gthread_time_t *' lvalue ParmVar 0x9c75f20 '__abs_timeout' 'const __gthread_time_t *')))))


static inline int __gthread_cond_destroy(__gthread_cond_t *__cond) (CompoundStmt 0x9c76318 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:873:1, line:875:1>
  (ReturnStmt 0x9c76308 <line:874:3, col:48>
    (CallExpr 0x9c762d8 <<scratch space>:120:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:874:48> 'int'
      (ImplicitCastExpr 0x9c762c8 <<scratch space>:120:1> 'typeof (pthread_cond_destroy) *' <FunctionToPointerDecay>
        (DeclRefExpr 0x9c76294 <col:1> 'typeof (pthread_cond_destroy)':'int (pthread_cond_t *) throw()' lvalue Function 0x9c6f550 '__gthrw_pthread_cond_destroy' 'typeof (pthread_cond_destroy)':'int (pthread_cond_t *) throw()'))
      (ImplicitCastExpr 0x9c762f8 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:874:42> '__gthread_cond_t *' <LValueToRValue>
        (DeclRefExpr 0x9c7627c <col:42> '__gthread_cond_t *' lvalue ParmVar 0x9c76180 '__cond' '__gthread_cond_t *')))))


typedef int _Atomic_word;
namespace __gnu_cxx {
    static inline _Atomic_word __exchange_and_add(volatile _Atomic_word *__mem, int __val) (CompoundStmt 0x9c76878 </usr/include/c++/4.6/ext/atomicity.h:48:3, col:48>
  (ReturnStmt 0x9c76868 <col:5, col:45>
    (CallExpr 0x9c76698 <col:12, col:45> '_Atomic_word':'int'
      (ImplicitCastExpr 0x9c76858 <col:12> 'int (*)(volatile int *, int, ...)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9c76824 <col:12> 'int (volatile int *, int, ...)' lvalue Function 0x9c76700 '__sync_fetch_and_add_4' 'int (volatile int *, int, ...)'))
      (ImplicitCastExpr 0x9c766c0 <col:33> 'volatile _Atomic_word *' <LValueToRValue>
        (DeclRefExpr 0x9c76634 <col:33> 'volatile _Atomic_word *' lvalue ParmVar 0x9c76460 '__mem' 'volatile _Atomic_word *'))
      (ImplicitCastExpr 0x9c76818 <col:40> 'int' <LValueToRValue>
        (DeclRefExpr 0x9c7664c <col:40> 'int' lvalue ParmVar 0x9c764b0 '__val' 'int')))))


    static inline void __atomic_add(volatile _Atomic_word *__mem, int __val) (CompoundStmt 0x9c79c50 </usr/include/c++/4.6/ext/atomicity.h:52:3, col:41>
  (CallExpr 0x9c79ab0 <col:5, col:38> '_Atomic_word':'int'
    (ImplicitCastExpr 0x9c79c40 <col:5> 'int (*)(volatile int *, int, ...)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9c79c24 <col:5> 'int (volatile int *, int, ...)' lvalue Function 0x9c79b00 '__sync_fetch_and_add_4' 'int (volatile int *, int, ...)'))
    (ImplicitCastExpr 0x9c79ad8 <col:26> 'volatile _Atomic_word *' <LValueToRValue>
      (DeclRefExpr 0x9c79a70 <col:26> 'volatile _Atomic_word *' lvalue ParmVar 0x9c768a0 '__mem' 'volatile _Atomic_word *'))
    (ImplicitCastExpr 0x9c79c18 <col:33> 'int' <LValueToRValue>
      (DeclRefExpr 0x9c79a88 <col:33> 'int' lvalue ParmVar 0x9c768f0 '__val' 'int'))))


    static inline _Atomic_word __exchange_and_add_single(_Atomic_word *__mem, int __val) (CompoundStmt 0x9c79f38 </usr/include/c++/4.6/ext/atomicity.h:65:3, line:69:3>
  (DeclStmt 0x9c79e68 <line:66:5, col:35>
    0x9c79de0 "_Atomic_word __result =
      (ImplicitCastExpr 0x9c79e58 <col:29, col:30> '_Atomic_word':'int' <LValueToRValue>
        (UnaryOperator 0x9c79e40 <col:29, col:30> '_Atomic_word':'int' lvalue prefix '*'
          (ImplicitCastExpr 0x9c79e30 <col:30> '_Atomic_word *' <LValueToRValue>
            (DeclRefExpr 0x9c79e14 <col:30> '_Atomic_word *' lvalue ParmVar 0x9c79ca0 '__mem' '_Atomic_word *'))))")
  (CompoundAssignOperator 0x9c79ee0 <line:67:5, col:15> '_Atomic_word':'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
    (UnaryOperator 0x9c79ea0 <col:5, col:6> '_Atomic_word':'int' lvalue prefix '*'
      (ImplicitCastExpr 0x9c79e90 <col:6> '_Atomic_word *' <LValueToRValue>
        (DeclRefExpr 0x9c79e78 <col:6> '_Atomic_word *' lvalue ParmVar 0x9c79ca0 '__mem' '_Atomic_word *')))
    (ImplicitCastExpr 0x9c79ed0 <col:15> 'int' <LValueToRValue>
      (DeclRefExpr 0x9c79eb4 <col:15> 'int' lvalue ParmVar 0x9c79cf0 '__val' 'int')))
  (ReturnStmt 0x9c79f28 <line:68:5, col:12>
    (ImplicitCastExpr 0x9c79f18 <col:12> '_Atomic_word':'int' <LValueToRValue>
      (DeclRefExpr 0x9c79f00 <col:12> '_Atomic_word':'int' lvalue Var 0x9c79de0 '__result' '_Atomic_word':'int'))))


    static inline void __atomic_add_single(_Atomic_word *__mem, int __val) (CompoundStmt 0x9c7a150 </usr/include/c++/4.6/ext/atomicity.h:73:3, col:22>
  (CompoundAssignOperator 0x9c7a130 <col:5, col:15> '_Atomic_word':'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
    (UnaryOperator 0x9c7a0f0 <col:5, col:6> '_Atomic_word':'int' lvalue prefix '*'
      (ImplicitCastExpr 0x9c7a0e0 <col:6> '_Atomic_word *' <LValueToRValue>
        (DeclRefExpr 0x9c7a0c8 <col:6> '_Atomic_word *' lvalue ParmVar 0x9c79f70 '__mem' '_Atomic_word *')))
    (ImplicitCastExpr 0x9c7a120 <col:15> 'int' <LValueToRValue>
      (DeclRefExpr 0x9c7a104 <col:15> 'int' lvalue ParmVar 0x9c79fc0 '__val' 'int'))))


    static inline _Atomic_word __exchange_and_add_dispatch(_Atomic_word *__mem, int __val) (CompoundStmt 0x9c7a5e0 </usr/include/c++/4.6/ext/atomicity.h:78:3, line:87:3>
  (IfStmt 0x9c7a5c0 <line:80:5, line:83:52>
    <<<NULL>>>
    (ImplicitCastExpr 0x9c7a358 <line:80:9, col:28> '_Bool' <IntegralToBoolean>
      (CallExpr 0x9c7a338 <col:9, col:28> 'int'
        (ImplicitCastExpr 0x9c7a328 <col:9> 'int (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9c7a30c <col:9> 'int (void)' lvalue Function 0x9c70000 '__gthread_active_p' 'int (void)'))))
    (ReturnStmt 0x9c7a490 <line:81:7, col:45>
      (CallExpr 0x9c7a438 <col:14, col:45> '_Atomic_word':'int'
        (ImplicitCastExpr 0x9c7a428 <col:14> '_Atomic_word (*)(volatile _Atomic_word *, int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9c7a3cc <col:14> '_Atomic_word (volatile _Atomic_word *, int)' lvalue Function 0x9c76530 '__exchange_and_add' '_Atomic_word (volatile _Atomic_word *, int)'))
        (ImplicitCastExpr 0x9c7a470 <col:33> 'volatile _Atomic_word *' <NoOp>
          (ImplicitCastExpr 0x9c7a460 <col:33> '_Atomic_word *' <LValueToRValue>
            (DeclRefExpr 0x9c7a39c <col:33> '_Atomic_word *' lvalue ParmVar 0x9c7a180 '__mem' '_Atomic_word *')))
        (ImplicitCastExpr 0x9c7a480 <col:40> 'int' <LValueToRValue>
          (DeclRefExpr 0x9c7a3b4 <col:40> 'int' lvalue ParmVar 0x9c7a1d0 '__val' 'int'))))
    (ReturnStmt 0x9c7a5b0 <line:83:7, col:52>
      (CallExpr 0x9c7a568 <col:14, col:52> '_Atomic_word':'int'
        (ImplicitCastExpr 0x9c7a558 <col:14> '_Atomic_word (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9c7a504 <col:14> '_Atomic_word (_Atomic_word *, int)' lvalue Function 0x9c79d70 '__exchange_and_add_single' '_Atomic_word (_Atomic_word *, int)'))
        (ImplicitCastExpr 0x9c7a590 <col:40> '_Atomic_word *' <LValueToRValue>
          (DeclRefExpr 0x9c7a4d4 <col:40> '_Atomic_word *' lvalue ParmVar 0x9c7a180 '__mem' '_Atomic_word *'))
        (ImplicitCastExpr 0x9c7a5a0 <col:47> 'int' <LValueToRValue>
          (DeclRefExpr 0x9c7a4ec <col:47> 'int' lvalue ParmVar 0x9c7a1d0 '__val' 'int'))))))


    static inline void __atomic_add_dispatch(_Atomic_word *__mem, int __val) (CompoundStmt 0x9c7aa50 </usr/include/c++/4.6/ext/atomicity.h:92:3, line:101:3>
  (IfStmt 0x9c7aa30 <line:94:5, line:97:39>
    <<<NULL>>>
    (ImplicitCastExpr 0x9c7a7e8 <line:94:9, col:28> '_Bool' <IntegralToBoolean>
      (CallExpr 0x9c7a7c8 <col:9, col:28> 'int'
        (ImplicitCastExpr 0x9c7a7b8 <col:9> 'int (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9c7a79c <col:9> 'int (void)' lvalue Function 0x9c70000 '__gthread_active_p' 'int (void)'))))
    (CallExpr 0x9c7a8c8 <line:95:7, col:32> 'void'
      (ImplicitCastExpr 0x9c7a8b8 <col:7> 'void (*)(volatile _Atomic_word *, int)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9c7a85c <col:7> 'void (volatile _Atomic_word *, int)' lvalue Function 0x9c799f0 '__atomic_add' 'void (volatile _Atomic_word *, int)'))
      (ImplicitCastExpr 0x9c7a900 <col:20> 'volatile _Atomic_word *' <NoOp>
        (ImplicitCastExpr 0x9c7a8f0 <col:20> '_Atomic_word *' <LValueToRValue>
          (DeclRefExpr 0x9c7a82c <col:20> '_Atomic_word *' lvalue ParmVar 0x9c7a610 '__mem' '_Atomic_word *')))
      (ImplicitCastExpr 0x9c7a910 <col:27> 'int' <LValueToRValue>
        (DeclRefExpr 0x9c7a844 <col:27> 'int' lvalue ParmVar 0x9c7a660 '__val' 'int')))
    (CallExpr 0x9c7a9e8 <line:97:7, col:39> 'void'
      (ImplicitCastExpr 0x9c7a9d8 <col:7> 'void (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9c7a984 <col:7> 'void (_Atomic_word *, int)' lvalue Function 0x9c7a060 '__atomic_add_single' 'void (_Atomic_word *, int)'))
      (ImplicitCastExpr 0x9c7aa10 <col:27> '_Atomic_word *' <LValueToRValue>
        (DeclRefExpr 0x9c7a954 <col:27> '_Atomic_word *' lvalue ParmVar 0x9c7a610 '__mem' '_Atomic_word *'))
      (ImplicitCastExpr 0x9c7aa20 <col:34> 'int' <LValueToRValue>
        (DeclRefExpr 0x9c7a96c <col:34> 'int' lvalue ParmVar 0x9c7a660 '__val' 'int')))))


}
extern void __sync_fetch_and_add();
extern int __sync_fetch_and_add_4(volatile int *, int, ...);
extern int __sync_fetch_and_add_4(volatile int *, int, ...);
namespace std {
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> class basic_string {
        class basic_string;
        typedef typename allocator<wchar_t>::rebind<wchar_t>::other _CharT_alloc_type;
    public:
    public:
        typedef std::char_traits<wchar_t> traits_type;
        typedef typename char_traits<wchar_t>::char_type value_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename _CharT_alloc_type::size_type size_type;
        typedef typename _CharT_alloc_type::difference_type difference_type;
        typedef typename _CharT_alloc_type::reference reference;
        typedef typename _CharT_alloc_type::const_reference const_reference;
        typedef typename _CharT_alloc_type::pointer pointer;
        typedef typename _CharT_alloc_type::const_pointer const_pointer;
        typedef __gnu_cxx::__normal_iterator<pointer, basic_string<wchar_t> > iterator;
        typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string<wchar_t> > const_iterator;
        typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
        typedef std::reverse_iterator<iterator> reverse_iterator;
    private:
    private:
        struct _Rep_base {
            struct _Rep_base;
            size_type _M_length;
            size_type _M_capacity;
            _Atomic_word _M_refcount;
        };
        struct _Rep :  std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep_base {
            struct _Rep;
            typedef typename allocator<wchar_t>::rebind<char>::other _Raw_bytes_alloc;
            static const size_type _S_max_size;
            static const wchar_t _S_terminal;
            static size_type _S_empty_rep_storage[];
            static std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep &_S_empty_rep() (CompoundStmt 0x9fcb5c8 </usr/include/c++/4.6/bits/basic_string.h:176:9, line:182:2>
  (DeclStmt 0x9fcb428 <line:180:4, col:62>
    0x9fcb250 "void *__p =
      (CXXReinterpretCastExpr 0x9fcb410 <col:16, col:61> 'void *' reinterpret_cast<void *> <BitCast>
        (UnaryOperator 0x9fcb3f8 <col:40, col:41> 'size_type (*)[]' prefix '&'
          (DeclRefExpr 0x9fcb3a0 <col:41> 'size_type []' lvalue Var 0x9d3e120 '_S_empty_rep_storage' 'size_type []')))")
  (ReturnStmt 0x9fcb5b8 <line:181:4, col:39>
    (UnaryOperator 0x9fcb5a0 <col:11, col:39> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue prefix '*'
      (CXXReinterpretCastExpr 0x9fcb588 <col:12, col:39> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' reinterpret_cast<struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *> <BitCast>
        (ImplicitCastExpr 0x9fcb578 <col:36> 'void *' <LValueToRValue>
          (DeclRefExpr 0x9fcb55c <col:36> 'void *' lvalue Var 0x9fcb250 '__p' 'void *'))))))


            bool _M_is_leaked() const;
            bool _M_is_shared() const (CompoundStmt 0x9fcee50 </usr/include/c++/4.6/bits/basic_string.h:190:9, col:41>
  (ReturnStmt 0x9fcee40 <col:11, col:38>
    (BinaryOperator 0x9fcee28 <col:18, col:38> '_Bool' '>'
      (ImplicitCastExpr 0x9fcee18 <col:18, col:24> '_Atomic_word':'int' <LValueToRValue>
        (MemberExpr 0x9fcedf8 <col:18, col:24> 'const _Atomic_word':'const int' lvalue ->_M_refcount 0x9d3d880
          (ImplicitCastExpr 0x9fcede8 <col:18> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
            (CXXThisExpr 0x9fcedd8 <col:18> 'const struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this))))
      (IntegerLiteral 0x9ca09d0 <col:38> 'int' 0))))


            void _M_set_leaked();
            void _M_set_sharable() (CompoundStmt 0x9fcf6d0 </usr/include/c++/4.6/bits/basic_string.h:198:9, col:34>
  (BinaryOperator 0x9fcf6b8 <col:11, col:31> '_Atomic_word':'int' lvalue '='
    (MemberExpr 0x9fcf698 <col:11, col:17> '_Atomic_word':'int' lvalue ->_M_refcount 0x9d3d880
      (ImplicitCastExpr 0x9fcf688 <col:11> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
        (CXXThisExpr 0x9fcf678 <col:11> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this)))
    (IntegerLiteral 0x9ca0b68 <col:31> 'int' 0)))


            void _M_set_length_and_sharable(size_type __n) (CompoundStmt 0x9fcf660 </usr/include/c++/4.6/bits/basic_string.h:202:2, line:213:2>
  (IfStmt 0x9fcf640 <line:204:4, line:212:6>
    <<<NULL>>>
    (ImplicitCastExpr 0x9fcf0a0 <line:204:8, col:55> '_Bool' <IntegralToBoolean>
      (CallExpr 0x9fcf058 <col:8, col:55> 'long'
        (ImplicitCastExpr 0x9fcf048 <col:8> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9ca0d00 <col:8> 'long (long, long)' lvalue Function 0x9ca0bd0 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0x9fcf080 <col:25, col:47> 'long' <IntegralCast>
          (BinaryOperator 0x9fcf030 <col:25, col:47> '_Bool' '!='
            (CXXThisExpr 0x9fceeb0 <col:25> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this)
            (UnaryOperator 0x9fcf018 <col:33, col:47> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' prefix '&'
              (CallExpr 0x9fceff8 <col:34, col:47> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
                (ImplicitCastExpr 0x9fcefe8 <col:34> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(*)(void)' <FunctionToPointerDecay>
                  (DeclRefExpr 0x9fcefd0 <col:34> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(void)' lvalue CXXMethod 0x9d3e2a0 '_S_empty_rep' 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(void)'))))))
        (ImplicitCastExpr 0x9fcf090 <col:50> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0x9ca0de8 <col:50> '_Bool' false))))
    (CompoundStmt 0x9fcf620 <line:206:6, line:212:6>
      (CXXMemberCallExpr 0x9fcf0e0 <line:207:8, col:30> 'void'
        (MemberExpr 0x9fcf0c0 <col:8, col:14> '<bound member function type>' ->_M_set_sharable 0x9d3e460
          (CXXThisExpr 0x9fcf0b0 <col:8> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this)))
      (BinaryOperator 0x9fcf168 <line:208:8, col:26> 'size_type':'unsigned int' lvalue '='
        (MemberExpr 0x9fcf120 <col:8, col:14> 'size_type':'unsigned int' lvalue ->_M_length 0x9d3d700
          (ImplicitCastExpr 0x9fcf110 <col:8> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
            (CXXThisExpr 0x9fcf100 <col:8> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this)))
        (ImplicitCastExpr 0x9fcf158 <col:26> 'size_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9fcf140 <col:26> 'size_type':'unsigned int' lvalue ParmVar 0x9d3e5f0 '__n' 'size_type':'unsigned int')))
      (CallExpr 0x9fcf5f8 <line:209:8, col:64> 'void'
        (ImplicitCastExpr 0x9fcf5e8 <col:8, col:21> 'void (*)(char_type &, const char_type &)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9fcf5c8 <col:8, col:21> 'void (char_type &, const char_type &)' lvalue CXXMethod 0x9bb4280 'assign' 'void (char_type &, const char_type &)'))
        (ArraySubscriptExpr 0x9fcf488 <col:28, col:50> 'wchar_t':'wchar_t' lvalue
          (CXXMemberCallExpr 0x9fcf440 <col:28, col:45> 'wchar_t *'
            (MemberExpr 0x9fcf420 <col:28, col:34> '<bound member function type>' ->_M_refdata 0x9d3e700
              (CXXThisExpr 0x9fcf410 <col:28> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this)))
          (ImplicitCastExpr 0x9fcf478 <col:47> 'size_type':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0x9fcf45c <col:47> 'size_type':'unsigned int' lvalue ParmVar 0x9d3e5f0 '__n' 'size_type':'unsigned int')))
        (DeclRefExpr 0x9fcf5b0 <col:53> 'const wchar_t':'const wchar_t' lvalue Var 0x9d3df90 '_S_terminal' 'const wchar_t':'const wchar_t')))
    <<<NULL>>>))


            wchar_t *_M_refdata() throw() (CompoundStmt 0x9fcf780 </usr/include/c++/4.6/bits/basic_string.h:217:2, col:48>
  (ReturnStmt 0x9fcf770 <col:4, col:45>
    (CXXReinterpretCastExpr 0x9fcf758 <col:11, col:45> 'wchar_t *' reinterpret_cast<wchar_t *> <BitCast>
      (BinaryOperator 0x9fcf740 <col:37, col:44> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' '+'
        (CXXThisExpr 0x9fcf730 <col:37> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this)
        (IntegerLiteral 0x9ca10c0 <col:44> 'int' 1)))))


            wchar_t *_M_grab(const std::allocator<wchar_t> &__alloc1, const std::allocator<wchar_t> &__alloc2);
            static std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep *_S_create(size_type, size_type, const std::allocator<wchar_t> &);
            void _M_dispose(const std::allocator<wchar_t> &__a) (CompoundStmt 0x9fcb238 </usr/include/c++/4.6/bits/basic_string.h:232:2, line:246:2>
  (IfStmt 0x9fcb218 <line:234:4, line:245:6>
    <<<NULL>>>
    (ImplicitCastExpr 0x9fcaf40 <line:234:8, col:55> '_Bool' <IntegralToBoolean>
      (CallExpr 0x9fcaef8 <col:8, col:55> 'long'
        (ImplicitCastExpr 0x9fcaee8 <col:8> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9ca13bc <col:8> 'long (long, long)' lvalue Function 0x9ca0bd0 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0x9fcaf20 <col:25, col:47> 'long' <IntegralCast>
          (BinaryOperator 0x9fcaed0 <col:25, col:47> '_Bool' '!='
            (CXXThisExpr 0x9fcad30 <col:25> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this)
            (UnaryOperator 0x9fcaeb8 <col:33, col:47> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' prefix '&'
              (CallExpr 0x9fcae98 <col:34, col:47> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
                (ImplicitCastExpr 0x9fcae88 <col:34> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(*)(void)' <FunctionToPointerDecay>
                  (DeclRefExpr 0x9fcae50 <col:34> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(void)' lvalue CXXMethod 0x9d3e2a0 '_S_empty_rep' 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(void)'))))))
        (ImplicitCastExpr 0x9fcaf30 <col:50> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0x9ca14a8 <col:50> '_Bool' false))))
    (CompoundStmt 0x9fcb200 <line:236:6, line:245:6>
      (NullStmt 0x9ca14e0 <line:238:67>)
      (IfStmt 0x9fcb1e0 <line:239:8, line:244:3>
        <<<NULL>>>
        (BinaryOperator 0x9fcb038 <line:239:12, line:240:16> '_Bool' '<='
          (CallExpr 0x9fcb010 <line:239:12, line:240:11> '_Atomic_word':'int'
            (ImplicitCastExpr 0x9fcb000 <line:239:12, col:23> '_Atomic_word (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9ca1510 <col:12, col:23> '_Atomic_word (_Atomic_word *, int)' lvalue Function 0x9c7a230 '__exchange_and_add_dispatch' '_Atomic_word (_Atomic_word *, int)'))
            (UnaryOperator 0x9fcafe8 <col:51, col:58> '_Atomic_word *' prefix '&'
              (MemberExpr 0x9fcafc8 <col:52, col:58> '_Atomic_word':'int' lvalue ->_M_refcount 0x9d3d880
                (ImplicitCastExpr 0x9fcafb8 <col:52> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
                  (CXXThisExpr 0x9fcaf90 <col:52> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this))))
            (UnaryOperator 0x9ca15a8 <line:240:9, col:10> 'int' prefix '-'
              (IntegerLiteral 0x9ca1590 <col:10> 'int' 1)))
          (IntegerLiteral 0x9ca15e8 <col:16> 'int' 0))
        (CompoundStmt 0x9fcb1c8 <line:241:3, line:244:3>
          (NullStmt 0x9ca1668 <line:242:63>)
          (CXXMemberCallExpr 0x9fcb1a8 <line:243:5, col:19> 'void'
            (MemberExpr 0x9fcb170 <col:5> '<bound member function type>' ->_M_destroy 0x9d3ef50
              (CXXThisExpr 0x9fcb050 <col:5> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this))
            (DeclRefExpr 0x9fcb190 <col:16> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue ParmVar 0x9d3ee30 '__a' 'const class std::allocator<wchar_t> &')))
        <<<NULL>>>))
    <<<NULL>>>))


            void _M_destroy(const std::allocator<wchar_t> &) throw();
            wchar_t *_M_refcopy() throw();
            wchar_t *_M_clone(const std::allocator<wchar_t> &, size_type __res);
        };
        struct _Alloc_hider :  std::allocator<wchar_t> {
            struct _Alloc_hider;
            _Alloc_hider(wchar_t *__dat, const std::allocator<wchar_t> &__a) : std::allocator<wchar_t>((DeclRefExpr 0x9fd18a4 </usr/include/c++/4.6/bits/basic_string.h:269:11> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue ParmVar 0x9d1b550 '__a' 'const class std::allocator<wchar_t> &')
), _M_p((ImplicitCastExpr 0x9fd1a60 </usr/include/c++/4.6/bits/basic_string.h:269:22> 'wchar_t *' <LValueToRValue>
  (DeclRefExpr 0x9fd1938 <col:22> 'wchar_t *' lvalue ParmVar 0x9d1b4e0 '__dat' 'wchar_t *'))
) (CompoundStmt 0x9ca1ab0 </usr/include/c++/4.6/bits/basic_string.h:269:29, col:31>)


            wchar_t *_M_p;
            inline void ~_Alloc_hider() throw() (CompoundStmt 0x9fca490 </usr/include/c++/4.6/bits/basic_string.h:266:14>)


            inline _Alloc_hider(const std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Alloc_hider &) throw();
        };
    public:
    public:
        static const size_type npos = (CXXStaticCastExpr 0x9d1b238 </usr/include/c++/4.6/bits/basic_string.h:279:37, col:62> 'size_type':'unsigned int' static_cast<size_type> <NoOp>
  (ImplicitCastExpr 0x9d1b228 <col:60, col:61> 'size_type':'unsigned int' <IntegralCast>
    (UnaryOperator 0x9c7f970 <col:60, col:61> 'int' prefix '-'
      (IntegerLiteral 0x9c7f958 <col:61> 'int' 1))))
;
    private:
    private:
        mutable std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Alloc_hider _M_dataplus;
        wchar_t *_M_data() const (CompoundStmt 0x9fcacd0 </usr/include/c++/4.6/bits/basic_string.h:287:7, col:35>
  (ReturnStmt 0x9fcacc0 <col:9, col:29>
    (ImplicitCastExpr 0x9fcacb0 <col:17, col:29> 'wchar_t *' <LValueToRValue>
      (MemberExpr 0x9fcac90 <col:17, col:29> 'wchar_t *' lvalue ._M_p 0x9d1b7c0
        (MemberExpr 0x9fcac70 <col:17> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Alloc_hider' lvalue ->_M_dataplus 0x9d1b7f0
          (CXXThisExpr 0x9fcab50 <col:17> 'const class std::basic_string<wchar_t> *' this))))))


        wchar_t *_M_data(wchar_t *__p);
        std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep *_M_rep() const (CompoundStmt 0x9fcab38 </usr/include/c++/4.6/bits/basic_string.h:295:7, col:62>
  (ReturnStmt 0x9fcab28 <col:9, col:59>
    (UnaryOperator 0x9fcab10 <col:16, col:59> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' prefix '&'
      (ParenExpr 0x9fcaaf8 <col:17, col:59> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
        (ArraySubscriptExpr 0x9fcaae0 <col:18, col:58> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
          (ParenExpr 0x9fcaac8 <col:18, col:54> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
            (CXXReinterpretCastExpr 0x9fcaab0 <col:19, col:53> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' reinterpret_cast<struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *> <BitCast>
              (CXXMemberCallExpr 0x9fcaa90 <col:44, col:52> 'wchar_t *'
                (MemberExpr 0x9fcaa70 <col:44> '<bound member function type>' ->_M_data 0x9d1b8e0
                  (CXXThisExpr 0x9fcaa60 <col:44> 'const class std::basic_string<wchar_t> *' this)))))
          (UnaryOperator 0x9ca1d28 <col:56, col:57> 'int' prefix '-'
            (IntegerLiteral 0x9ca1d10 <col:57> 'int' 1)))))))


        iterator _M_ibegin() const;
        iterator _M_iend() const;
        void _M_leak();
        size_type _M_check(size_type __pos, const char *__s) const (CompoundStmt 0x9fd0920 </usr/include/c++/4.6/bits/basic_string.h:316:7, line:320:7>
  (IfStmt 0x9fd08c8 <line:317:2, line:318:33>
    <<<NULL>>>
    (BinaryOperator 0x9fd0840 <line:317:6, col:25> '_Bool' '>'
      (ImplicitCastExpr 0x9fd0830 <col:6> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9fd07c4 <col:6> 'size_type':'unsigned int' lvalue ParmVar 0x9d1c250 '__pos' 'size_type':'unsigned int'))
      (CXXMemberCallExpr 0x9fd0810 <col:14, col:25> 'size_type':'unsigned int'
        (MemberExpr 0x9fd07f0 <col:14, col:20> '<bound member function type>' ->size 0x9d24ab0
          (CXXThisExpr 0x9fd07e0 <col:14> 'const class std::basic_string<wchar_t> *' this))))
    (CallExpr 0x9fd0898 <line:318:4, col:33> 'void'
      (ImplicitCastExpr 0x9fd0888 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x9ca228c <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9b0bd90 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0x9fd08b8 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <LValueToRValue>
        (ParenExpr 0x9fd0870 <col:24, col:30> 'const char *' lvalue
          (DeclRefExpr 0x9fd0858 </usr/include/c++/4.6/bits/basic_string.h:318:29> 'const char *' lvalue ParmVar 0x9d1c290 '__s' 'const char *'))))
    <<<NULL>>>)
  (ReturnStmt 0x9fd0910 <line:319:2, col:9>
    (ImplicitCastExpr 0x9fd0900 <col:9> 'size_type':'unsigned int' <LValueToRValue>
      (DeclRefExpr 0x9fd08e4 <col:9> 'size_type':'unsigned int' lvalue ParmVar 0x9d1c250 '__pos' 'size_type':'unsigned int'))))


        void _M_check_length(size_type __n1, size_type __n2, const char *__s) const;
        size_type _M_limit(size_type __pos, size_type __off) const (CompoundStmt 0x9fd0c18 </usr/include/c++/4.6/bits/basic_string.h:332:7, line:335:7>
  (DeclStmt 0x9fd0ac0 <line:333:2, col:54>
    0x9fd0940 "const bool __testoff =
      (BinaryOperator 0x9fd0aa8 <col:26, col:49> '_Bool' '<'
        (ImplicitCastExpr 0x9fd0a98 <col:26> 'size_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9fd09b4 <col:26> 'size_type':'unsigned int' lvalue ParmVar 0x9d1cae0 '__off' 'size_type':'unsigned int'))
        (BinaryOperator 0x9fd0a80 <col:34, col:49> 'unsigned int' '-'
          (CXXMemberCallExpr 0x9fd0a38 <col:34, col:45> 'size_type':'unsigned int'
            (MemberExpr 0x9fd0a18 <col:34, col:40> '<bound member function type>' ->size 0x9d24ab0
              (CXXThisExpr 0x9fd0a08 <col:34> 'const class std::basic_string<wchar_t> *' this)))
          (ImplicitCastExpr 0x9fd0a70 <col:49> 'size_type':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0x9fd0a54 <col:49> 'size_type':'unsigned int' lvalue ParmVar 0x9d1c980 '__pos' 'size_type':'unsigned int'))))")
  (ReturnStmt 0x9fd0c08 <line:334:2, col:44>
    (ConditionalOperator 0x9fd0be8 <col:9, col:44> 'size_type':'unsigned int'
      (ImplicitCastExpr 0x9fd0bc8 <col:9> '_Bool' <LValueToRValue>
        (DeclRefExpr 0x9fd0ad0 <col:9> 'const _Bool' lvalue Var 0x9fd0940 '__testoff' 'const _Bool'))
      (ImplicitCastExpr 0x9fd0bd8 <col:21> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9fd0ae8 <col:21> 'size_type':'unsigned int' lvalue ParmVar 0x9d1cae0 '__off' 'size_type':'unsigned int'))
      (BinaryOperator 0x9fd0bb0 <col:29, col:44> 'unsigned int' '-'
        (CXXMemberCallExpr 0x9fd0b68 <col:29, col:40> 'size_type':'unsigned int'
          (MemberExpr 0x9fd0b48 <col:29, col:35> '<bound member function type>' ->size 0x9d24ab0
            (CXXThisExpr 0x9fd0b38 <col:29> 'const class std::basic_string<wchar_t> *' this)))
        (ImplicitCastExpr 0x9fd0ba0 <col:44> 'size_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9fd0b84 <col:44> 'size_type':'unsigned int' lvalue ParmVar 0x9d1c980 '__pos' 'size_type':'unsigned int'))))))


        bool _M_disjunct(const wchar_t *__s) const;
        static void _M_copy(wchar_t *__d, const wchar_t *__s, size_type __n);
        static void _M_move(wchar_t *__d, const wchar_t *__s, size_type __n);
        static void _M_assign(wchar_t *__d, size_type __n, wchar_t __c);
        template <class _Iterator> static void _S_copy_chars(wchar_t *__p, _Iterator __k1, _Iterator __k2);
        static void _S_copy_chars(wchar_t *__p, iterator __k1, iterator __k2);
        static void _S_copy_chars(wchar_t *__p, const_iterator __k1, const_iterator __k2);
        static void _S_copy_chars(wchar_t *__p, wchar_t *__k1, wchar_t *__k2);
        static void _S_copy_chars(wchar_t *__p, const wchar_t *__k1, const wchar_t *__k2);
        static int _S_compare(size_type __n1, size_type __n2);
        void _M_mutate(size_type __pos, size_type __len1, size_type __len2);
        void _M_leak_hard();
        static std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep &_S_empty_rep() (CompoundStmt 0x9fd1890 </usr/include/c++/4.6/bits/basic_string.h:421:7, col:38>
  (ReturnStmt 0x9fd1880 <col:9, col:35>
    (CallExpr 0x9fd1860 <col:16, col:35> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
      (ImplicitCastExpr 0x9fd1850 <col:16, col:22> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(*)(void)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9fd182c <col:16, col:22> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(void)' lvalue CXXMethod 0x9d3e2a0 '_S_empty_rep' 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(void)')))))


    public:
    public:
        basic_string() : _M_dataplus((CXXMemberCallExpr 0x9fd1368 </usr/include/c++/4.6/bits/basic_string.h:433:21, col:47> 'wchar_t *'
  (MemberExpr 0x9fd1344 <col:21, col:36> '<bound member function type>' ._M_refdata 0x9d3e700
    (CallExpr 0x9fd1328 <col:21, col:34> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
      (ImplicitCastExpr 0x9fd1318 <col:21> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(*)(void)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9fd1300 <col:21> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(void)' lvalue CXXMethod 0x9d1ee40 '_S_empty_rep' 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(void)')))))
, (MaterializeTemporaryExpr 0x9fd1688 </usr/include/c++/4.6/bits/basic_string.h:433:50, col:57> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue
  (ImplicitCastExpr 0x9fd1678 <col:50, col:57> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' <NoOp>
    (CXXBindTemporaryExpr 0x9fd13c8 <col:50, col:57> 'class std::allocator<wchar_t>':'class std::allocator<wchar_t>' (CXXTemporary 0x9fd13c0)
      (CXXTemporaryObjectExpr 0x9fd1390 <col:50, col:57> 'class std::allocator<wchar_t>':'class std::allocator<wchar_t>''void (void) throw()'))))
) (CompoundStmt 0x9ca6950 </usr/include/c++/4.6/bits/basic_string.h:433:60, col:62>)


        basic_string(const std::allocator<wchar_t> &__a);
        basic_string(const std::basic_string<wchar_t> &__str);
        basic_string(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n);
        basic_string(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n, const std::allocator<wchar_t> &__a);
        basic_string(const wchar_t *__s, size_type __n, const std::allocator<wchar_t> &__a);
        basic_string(const wchar_t *__s, const std::allocator<wchar_t> &__a);
        basic_string(size_type __n, wchar_t __c, const std::allocator<wchar_t> &__a);
        template <class _InputIterator> basic_string(_InputIterator __beg, _InputIterator __end, const std::allocator<wchar_t> &__a);
        void ~basic_string() (CompoundStmt 0x9fca3e0 </usr/include/c++/4.6/bits/basic_string.h:533:7, col:54>
  (ExprWithCleanups 0x9fca3c0 <col:9, col:51> 'void'
    (CXXTemporary 0x9fca340)
    (CXXMemberCallExpr 0x9fca358 <col:9, col:51> 'void'
      (MemberExpr 0x9fca2bc <col:9, col:19> '<bound member function type>' ->_M_dispose 0x9d3ee80
        (CXXMemberCallExpr 0x9fca290 <col:9, col:16> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
          (MemberExpr 0x9fca270 <col:9> '<bound member function type>' ->_M_rep 0x9d1bbd0
            (ImplicitCastExpr 0x9fca2b0 <col:9> 'const class std::basic_string<wchar_t> *' <NoOp>
              (CXXThisExpr 0x9fca150 <col:9> 'class std::basic_string<wchar_t> *' this)))))
      (MaterializeTemporaryExpr 0x9fca3b0 <col:30, col:50> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue
        (ImplicitCastExpr 0x9fca3a0 <col:30, col:50> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' <NoOp>
          (CXXBindTemporaryExpr 0x9fca348 <col:30, col:50> 'allocator_type':'class std::allocator<wchar_t>' (CXXTemporary 0x9fca340)
            (CXXMemberCallExpr 0x9fca310 <col:30, col:50> 'allocator_type':'class std::allocator<wchar_t>'
              (MemberExpr 0x9fca2f0 <col:30, col:36> '<bound member function type>' ->get_allocator 0x9d35660
                (ImplicitCastExpr 0x9fca330 <col:30> 'const class std::basic_string<wchar_t> *' <NoOp>
                  (CXXThisExpr 0x9fca2e0 <col:30> 'class std::basic_string<wchar_t> *' this))))))))))


        std::basic_string<wchar_t> &operator=(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &operator=(const wchar_t *__s);
        std::basic_string<wchar_t> &operator=(wchar_t __c);
        iterator begin();
        const_iterator begin() const;
        iterator end();
        const_iterator end() const;
        reverse_iterator rbegin();
        const_reverse_iterator rbegin() const;
        reverse_iterator rend();
        const_reverse_iterator rend() const;
    public:
    public:
        size_type size() const (CompoundStmt 0x9fccf10 </usr/include/c++/4.6/bits/basic_string.h:710:7, col:37>
  (ReturnStmt 0x9fccf00 <col:9, col:26>
    (ImplicitCastExpr 0x9fccef0 <col:16, col:26> 'size_type':'unsigned int' <LValueToRValue>
      (MemberExpr 0x9fcced0 <col:16, col:26> 'size_type':'unsigned int' lvalue ->_M_length 0x9d3d700
        (ImplicitCastExpr 0x9fccec0 <col:16, col:23> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
          (CXXMemberCallExpr 0x9fccea0 <col:16, col:23> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
            (MemberExpr 0x9fcce80 <col:16> '<bound member function type>' ->_M_rep 0x9d1bbd0
              (CXXThisExpr 0x9fccd60 <col:16> 'const class std::basic_string<wchar_t> *' this))))))))


        size_type length() const (CompoundStmt 0x9fd11d0 </usr/include/c++/4.6/bits/basic_string.h:716:7, col:37>
  (ReturnStmt 0x9fd11c0 <col:9, col:26>
    (ImplicitCastExpr 0x9fd11b0 <col:16, col:26> 'size_type':'unsigned int' <LValueToRValue>
      (MemberExpr 0x9fd1190 <col:16, col:26> 'size_type':'unsigned int' lvalue ->_M_length 0x9d3d700
        (ImplicitCastExpr 0x9fd1180 <col:16, col:23> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
          (CXXMemberCallExpr 0x9fd1160 <col:16, col:23> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
            (MemberExpr 0x9fd1140 <col:16> '<bound member function type>' ->_M_rep 0x9d1bbd0
              (CXXThisExpr 0x9fd1018 <col:16> 'const class std::basic_string<wchar_t> *' this))))))))


        size_type max_size() const;
        void resize(size_type __n, wchar_t __c);
        void resize(size_type __n);
        size_type capacity() const (CompoundStmt 0x9fced80 </usr/include/c++/4.6/bits/basic_string.h:768:7, col:39>
  (ReturnStmt 0x9fced70 <col:9, col:26>
    (ImplicitCastExpr 0x9fced60 <col:16, col:26> 'size_type':'unsigned int' <LValueToRValue>
      (MemberExpr 0x9fced40 <col:16, col:26> 'size_type':'unsigned int' lvalue ->_M_capacity 0x9d3d850
        (ImplicitCastExpr 0x9fced30 <col:16, col:23> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
          (CXXMemberCallExpr 0x9fced10 <col:16, col:23> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
            (MemberExpr 0x9fcecf0 <col:16> '<bound member function type>' ->_M_rep 0x9d1bbd0
              (CXXThisExpr 0x9fcebc8 <col:16> 'const class std::basic_string<wchar_t> *' this))))))))


        void reserve(size_type __res_arg);
        void clear();
        bool empty() const (CompoundStmt 0x9fccd48 </usr/include/c++/4.6/bits/basic_string.h:803:7, col:35>
  (ReturnStmt 0x9fccd38 <col:9, col:32>
    (BinaryOperator 0x9fccd20 <col:16, col:32> '_Bool' '=='
      (CXXMemberCallExpr 0x9fcccf0 <col:16, col:27> 'size_type':'unsigned int'
        (MemberExpr 0x9fcccd0 <col:16, col:22> '<bound member function type>' ->size 0x9d24ab0
          (CXXThisExpr 0x9fcccc0 <col:16> 'const class std::basic_string<wchar_t> *' this)))
      (ImplicitCastExpr 0x9fccd10 <col:32> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0x9ca7998 <col:32> 'int' 0)))))


        const_reference operator[](size_type __pos) const;
        reference operator[](size_type __pos);
        const_reference at(size_type __n) const (CompoundStmt 0x9fcd5b0 </usr/include/c++/4.6/bits/basic_string.h:856:7, line:860:7>
  (IfStmt 0x9fcd038 <line:857:2, line:858:48>
    <<<NULL>>>
    (BinaryOperator 0x9fccfe0 <line:857:6, col:24> '_Bool' '>='
      (ImplicitCastExpr 0x9fccfd0 <col:6> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9fccf64 <col:6> 'size_type':'unsigned int' lvalue ParmVar 0x9d26030 '__n' 'size_type':'unsigned int'))
      (CXXMemberCallExpr 0x9fccfb0 <col:13, col:24> 'size_type':'unsigned int'
        (MemberExpr 0x9fccf90 <col:13, col:19> '<bound member function type>' ->size 0x9d24ab0
          (CXXThisExpr 0x9fccf80 <col:13> 'const class std::basic_string<wchar_t> *' this))))
    (CallExpr 0x9fcd008 <line:858:4, col:48> 'void'
      (ImplicitCastExpr 0x9fccff8 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x9caae34 <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9b0bd90 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0x9fcd028 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0x9caae20 <col:24, col:30> 'const char [17]' lvalue
          (StringLiteral 0x9caadf0 </usr/include/c++/4.6/bits/basic_string.h:858:29> 'const char [17]' lvalue "basic_string::at"))))
    <<<NULL>>>)
  (ReturnStmt 0x9fcd5a0 <line:859:2, col:22>
    (ImplicitCastExpr 0x9fcd590 <col:9, col:22> 'const wchar_t':'const wchar_t' lvalue <NoOp>
      (ArraySubscriptExpr 0x9fcd578 <col:9, col:22> 'wchar_t':'wchar_t' lvalue
        (CXXMemberCallExpr 0x9fcd530 <col:9, col:17> 'wchar_t *'
          (MemberExpr 0x9fcd510 <col:9> '<bound member function type>' ->_M_data 0x9d1b8e0
            (CXXThisExpr 0x9fcd500 <col:9> 'const class std::basic_string<wchar_t> *' this)))
        (ImplicitCastExpr 0x9fcd568 <col:19> 'size_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9fcd54c <col:19> 'size_type':'unsigned int' lvalue ParmVar 0x9d26030 '__n' 'size_type':'unsigned int'))))))


        reference at(size_type __n);
        std::basic_string<wchar_t> &operator+=(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &operator+=(const wchar_t *__s);
        std::basic_string<wchar_t> &operator+=(wchar_t __c);
        std::basic_string<wchar_t> &append(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &append(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n);
        std::basic_string<wchar_t> &append(const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &append(const wchar_t *__s) (CompoundStmt 0x9fcfd10 </usr/include/c++/4.6/bits/basic_string.h:997:7, line:1000:7>
  (NullStmt 0x9cab478 <line:998:32>)
  (ReturnStmt 0x9fcfd00 <line:999:2, col:51>
    (CXXMemberCallExpr 0x9fcfcc8 <col:9, col:51> 'class std::basic_string<wchar_t>' lvalue
      (MemberExpr 0x9fcfca4 <col:9, col:15> '<bound member function type>' ->append 0x9d27710
        (CXXThisExpr 0x9fcf900 <col:9> 'class std::basic_string<wchar_t> *' this))
      (ImplicitCastExpr 0x9fcfcf0 <col:22> 'const wchar_t *' <LValueToRValue>
        (DeclRefExpr 0x9fcf960 <col:22> 'const wchar_t *' lvalue ParmVar 0x9d278a0 '__s' 'const wchar_t *'))
      (CallExpr 0x9fcfc38 <col:27, col:50> 'size_t':'unsigned int'
        (ImplicitCastExpr 0x9fcfc28 <col:27, col:40> 'size_t (*)(const char_type *)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9fcfbd0 <col:27, col:40> 'size_t (const char_type *)' lvalue CXXMethod 0x9bb47e0 'length' 'size_t (const char_type *)'))
        (ImplicitCastExpr 0x9fcfc58 <col:47> 'const wchar_t *' <LValueToRValue>
          (DeclRefExpr 0x9fcfbf0 <col:47> 'const wchar_t *' lvalue ParmVar 0x9d278a0 '__s' 'const wchar_t *'))))))


        std::basic_string<wchar_t> &append(size_type __n, wchar_t __c);
        template <class _InputIterator> std::basic_string<wchar_t> &append(_InputIterator __first, _InputIterator __last);
        void push_back(wchar_t __c) (CompoundStmt 0x9fceba8 </usr/include/c++/4.6/bits/basic_string.h:1043:7, line:1049:7>
  (DeclStmt 0x9fcdd18 <line:1044:2, col:42>
    0x9fcdc20 "const size_type __len =
      (BinaryOperator 0x9fcdd00 <col:26, col:41> 'unsigned int' '+'
        (ImplicitCastExpr 0x9fcdcf0 <col:26> 'unsigned int' <IntegralCast>
          (IntegerLiteral 0x9cab778 <col:26> 'int' 1))
        (CXXMemberCallExpr 0x9fcdcc0 <col:30, col:41> 'size_type':'unsigned int'
          (MemberExpr 0x9fcdca0 <col:30, col:36> '<bound member function type>' ->size 0x9d24ab0
            (ImplicitCastExpr 0x9fcdce0 <col:30> 'const class std::basic_string<wchar_t> *' <NoOp>
              (CXXThisExpr 0x9fcdc90 <col:30> 'class std::basic_string<wchar_t> *' this)))))")
  (IfStmt 0x9fce0a8 <line:1045:2, line:1046:23>
    <<<NULL>>>
    (BinaryOperator 0x9fcdfe8 <line:1045:6, col:57> '_Bool' '||'
      (BinaryOperator 0x9fcddf0 <col:6, col:29> '_Bool' '>'
        (ImplicitCastExpr 0x9fcdde0 <col:6> 'size_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9fcdd64 <col:6> 'const size_type':'const unsigned int' lvalue Var 0x9fcdc20 '__len' 'const size_type':'const unsigned int'))
        (CXXMemberCallExpr 0x9fcddb0 <col:14, col:29> 'size_type':'unsigned int'
          (MemberExpr 0x9fcdd90 <col:14, col:20> '<bound member function type>' ->capacity 0x9d25410
            (ImplicitCastExpr 0x9fcddd0 <col:14> 'const class std::basic_string<wchar_t> *' <NoOp>
              (CXXThisExpr 0x9fcdd80 <col:14> 'class std::basic_string<wchar_t> *' this)))))
      (CXXMemberCallExpr 0x9fcdfa0 <col:34, col:57> '_Bool'
        (MemberExpr 0x9fcdf7c <col:34, col:44> '<bound member function type>' ->_M_is_shared 0x9d3e380
          (ImplicitCastExpr 0x9fcdfd8 <col:34, col:41> 'const struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' <NoOp>
            (CXXMemberCallExpr 0x9fcdf50 <col:34, col:41> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
              (MemberExpr 0x9fcdf30 <col:34> '<bound member function type>' ->_M_rep 0x9d1bbd0
                (ImplicitCastExpr 0x9fcdf70 <col:34> 'const class std::basic_string<wchar_t> *' <NoOp>
                  (CXXThisExpr 0x9fcde08 <col:34> 'class std::basic_string<wchar_t> *' this))))))))
    (CXXMemberCallExpr 0x9fce078 <line:1046:4, col:23> 'void'
      (MemberExpr 0x9fce040 <col:4, col:10> '<bound member function type>' ->reserve 0x9d255f0
        (CXXThisExpr 0x9fce030 <col:4> 'class std::basic_string<wchar_t> *' this))
      (ImplicitCastExpr 0x9fce098 <col:18> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9fce060 <col:18> 'const size_type':'const unsigned int' lvalue Var 0x9fcdc20 '__len' 'const size_type':'const unsigned int')))
    <<<NULL>>>)
  (CallExpr 0x9fce978 <line:1047:2, col:50> 'void'
    (ImplicitCastExpr 0x9fce968 <col:2, col:15> 'void (*)(char_type &, const char_type &)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9fce90c <col:2, col:15> 'void (char_type &, const char_type &)' lvalue CXXMethod 0x9bb4280 'assign' 'void (char_type &, const char_type &)'))
    (ArraySubscriptExpr 0x9fce8e0 <col:22, col:44> 'wchar_t':'wchar_t' lvalue
      (CXXMemberCallExpr 0x9fce850 <col:22, col:30> 'wchar_t *'
        (MemberExpr 0x9fce830 <col:22> '<bound member function type>' ->_M_data 0x9d1b8e0
          (ImplicitCastExpr 0x9fce870 <col:22> 'const class std::basic_string<wchar_t> *' <NoOp>
            (CXXThisExpr 0x9fce820 <col:22> 'class std::basic_string<wchar_t> *' this))))
      (CXXMemberCallExpr 0x9fce8b0 <col:32, col:43> 'size_type':'unsigned int'
        (MemberExpr 0x9fce890 <col:32, col:38> '<bound member function type>' ->size 0x9d24ab0
          (ImplicitCastExpr 0x9fce8d0 <col:32> 'const class std::basic_string<wchar_t> *' <NoOp>
            (CXXThisExpr 0x9fce880 <col:32> 'class std::basic_string<wchar_t> *' this)))))
    (ImplicitCastExpr 0x9fce9a0 <col:47> 'const char_type':'const wchar_t' lvalue <NoOp>
      (DeclRefExpr 0x9fce8f4 <col:47> 'wchar_t':'wchar_t' lvalue ParmVar 0x9d28010 '__c' 'wchar_t':'wchar_t')))
  (CXXMemberCallExpr 0x9fceb78 <line:1048:2, col:44> 'void'
    (MemberExpr 0x9fceb3c <col:2, col:12> '<bound member function type>' ->_M_set_length_and_sharable 0x9d3e640
      (CXXMemberCallExpr 0x9fceb10 <col:2, col:9> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
        (MemberExpr 0x9fceaf0 <col:2> '<bound member function type>' ->_M_rep 0x9d1bbd0
          (ImplicitCastExpr 0x9fceb30 <col:2> 'const class std::basic_string<wchar_t> *' <NoOp>
            (CXXThisExpr 0x9fce9b0 <col:2> 'class std::basic_string<wchar_t> *' this)))))
    (ImplicitCastExpr 0x9fceb98 <col:39> 'size_type':'unsigned int' <LValueToRValue>
      (DeclRefExpr 0x9fceb5c <col:39> 'const size_type':'const unsigned int' lvalue Var 0x9fcdc20 '__len' 'const size_type':'const unsigned int'))))


        std::basic_string<wchar_t> &assign(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &assign(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n);
        std::basic_string<wchar_t> &assign(const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &assign(const wchar_t *__s);
        std::basic_string<wchar_t> &assign(size_type __n, wchar_t __c);
        template <class _InputIterator> std::basic_string<wchar_t> &assign(_InputIterator __first, _InputIterator __last);
        void insert(iterator __p, size_type __n, wchar_t __c);
        template <class _InputIterator> void insert(iterator __p, _InputIterator __beg, _InputIterator __end);
        std::basic_string<wchar_t> &insert(size_type __pos1, const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &insert(size_type __pos1, const std::basic_string<wchar_t> &__str, size_type __pos2, size_type __n);
        std::basic_string<wchar_t> &insert(size_type __pos, const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &insert(size_type __pos, const wchar_t *__s);
        std::basic_string<wchar_t> &insert(size_type __pos, size_type __n, wchar_t __c);
        iterator insert(iterator __p, wchar_t __c);
        std::basic_string<wchar_t> &erase(size_type __pos, size_type __n) (CompoundStmt 0x9fd0770 </usr/include/c++/4.6/bits/basic_string.h:1347:7, line:1351:7>
  (CXXMemberCallExpr 0x9fd0710 <line:1348:2, line:1349:39> 'void'
    (MemberExpr 0x9fd0230 <line:1348:2> '<bound member function type>' ->_M_mutate 0x9d1ebf0
      (CXXThisExpr 0x9fd0108 <col:2> 'class std::basic_string<wchar_t> *' this))
    (CXXMemberCallExpr 0x9fd03a8 <col:12, col:49> 'size_type':'unsigned int'
      (MemberExpr 0x9fd0370 <col:12> '<bound member function type>' ->_M_check 0x9d1c310
        (ImplicitCastExpr 0x9fd03d0 <col:12> 'const class std::basic_string<wchar_t> *' <NoOp>
          (CXXThisExpr 0x9fd0250 <col:12> 'class std::basic_string<wchar_t> *' this)))
      (ImplicitCastExpr 0x9fd03e0 <col:21> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9fd0390 <col:21> 'size_type':'unsigned int' lvalue ParmVar 0x9d2bca0 '__pos' 'size_type':'unsigned int'))
      (ImplicitCastExpr 0x9fd03f0 <col:28> 'const char *' <ArrayToPointerDecay>
        (StringLiteral 0x9cad1f8 <col:28> 'const char [20]' lvalue "basic_string::erase")))
    (CXXMemberCallExpr 0x9fd0570 <line:1349:5, col:24> 'size_type':'unsigned int'
      (MemberExpr 0x9fd0520 <col:5> '<bound member function type>' ->_M_limit 0x9d1cb60
        (ImplicitCastExpr 0x9fd0598 <col:5> 'const class std::basic_string<wchar_t> *' <NoOp>
          (CXXThisExpr 0x9fd0400 <col:5> 'class std::basic_string<wchar_t> *' this)))
      (ImplicitCastExpr 0x9fd05a8 <col:14> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9fd0540 <col:14> 'size_type':'unsigned int' lvalue ParmVar 0x9d2bca0 '__pos' 'size_type':'unsigned int'))
      (ImplicitCastExpr 0x9fd05b8 <col:21> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9fd0558 <col:21> 'size_type':'unsigned int' lvalue ParmVar 0x9d2be00 '__n' 'size_type':'unsigned int')))
    (CXXFunctionalCastExpr 0x9fd06f8 <col:27, col:38> 'size_type':'unsigned int' functional cast to size_type <NoOp>
      (ImplicitCastExpr 0x9fd06e8 <col:37> 'size_type':'unsigned int' <IntegralCast>
        (IntegerLiteral 0x9cad2e0 <col:37> 'int' 0))))
  (ReturnStmt 0x9fd0760 <line:1350:2, col:10>
    (UnaryOperator 0x9fd0748 <col:9, col:10> 'class std::basic_string<wchar_t>' lvalue prefix '*'
      (CXXThisExpr 0x9fd0738 <col:10> 'class std::basic_string<wchar_t> *' this))))


        iterator erase(iterator __position);
        iterator erase(iterator __first, iterator __last);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n, const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &replace(size_type __pos1, size_type __n1, const std::basic_string<wchar_t> &__str, size_type __pos2, size_type __n2);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n1, const wchar_t *__s, size_type __n2);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n1, const wchar_t *__s);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n1, size_type __n2, wchar_t __c);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const wchar_t *__s);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, size_type __n, wchar_t __c);
        template <class _InputIterator> std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, wchar_t *__k1, wchar_t *__k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const wchar_t *__k1, const wchar_t *__k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const_iterator __k1, const_iterator __k2);
    private:
    private:
        template <class _Integer> std::basic_string<wchar_t> &_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n, _Integer __val, std::__true_type);
        template <class _InputIterator> std::basic_string<wchar_t> &_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2, std::__false_type);
        std::basic_string<wchar_t> &_M_replace_aux(size_type __pos1, size_type __n1, size_type __n2, wchar_t __c);
        std::basic_string<wchar_t> &_M_replace_safe(size_type __pos1, size_type __n1, const wchar_t *__s, size_type __n2);
        template <class _InIterator> static wchar_t *_S_construct_aux(_InIterator __beg, _InIterator __end, const std::allocator<wchar_t> &__a, std::__false_type);
        template <class _Integer> static wchar_t *_S_construct_aux(_Integer __beg, _Integer __end, const std::allocator<wchar_t> &__a, std::__true_type);
        static wchar_t *_S_construct_aux_2(size_type __req, wchar_t __c, const std::allocator<wchar_t> &__a);
        template <class _InIterator> static wchar_t *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<wchar_t> &__a);
        template <class _InIterator> static wchar_t *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<wchar_t> &__a, std::input_iterator_tag);
        template <class _FwdIterator> static wchar_t *_S_construct(_FwdIterator __beg, _FwdIterator __end, const std::allocator<wchar_t> &__a, std::forward_iterator_tag);
        static wchar_t *_S_construct(size_type __req, wchar_t __c, const std::allocator<wchar_t> &__a);
    public:
    public:
        size_type copy(wchar_t *__s, size_type __n, size_type __pos) const;
        void swap(std::basic_string<wchar_t> &__s);
        const wchar_t *c_str() const (CompoundStmt 0x9fcdae0 </usr/include/c++/4.6/bits/basic_string.h:1766:7, col:27>
  (ReturnStmt 0x9fcdad0 <col:9, col:24>
    (ImplicitCastExpr 0x9fcdac0 <col:16, col:24> 'const wchar_t *' <NoOp>
      (CXXMemberCallExpr 0x9fcdaa0 <col:16, col:24> 'wchar_t *'
        (MemberExpr 0x9fcda80 <col:16> '<bound member function type>' ->_M_data 0x9d1b8e0
          (CXXThisExpr 0x9fcda70 <col:16> 'const class std::basic_string<wchar_t> *' this))))))


        const wchar_t *data() const;
        allocator_type get_allocator() const (CompoundStmt 0x9fcb7a0 </usr/include/c++/4.6/bits/basic_string.h:1783:7, col:29>
  (ReturnStmt 0x9fcb790 <col:9, col:16>
    (CXXConstructExpr 0x9fcb768 <col:16> 'allocator_type':'class std::allocator<wchar_t>''void (const class std::allocator<wchar_t> &) throw()'
      (ImplicitCastExpr 0x9fcb758 <col:16> 'const class std::allocator<wchar_t>' lvalue <NoOp>
        (ImplicitCastExpr 0x9fcb748 <col:16> 'class std::allocator<wchar_t>' lvalue <DerivedToBase (allocator)>
          (MemberExpr 0x9fcb700 <col:16> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Alloc_hider' lvalue ->_M_dataplus 0x9d1b7f0
            (CXXThisExpr 0x9fcb5e0 <col:16> 'const class std::basic_string<wchar_t> *' this)))))))


        size_type find(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find(const wchar_t *__s, size_type __pos) const;
        size_type find(wchar_t __c, size_type __pos) const;
        size_type rfind(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type rfind(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type rfind(const wchar_t *__s, size_type __pos) const;
        size_type rfind(wchar_t __c, size_type __pos) const;
        size_type find_first_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_first_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_first_of(const wchar_t *__s, size_type __pos) const;
        size_type find_first_of(wchar_t __c, size_type __pos) const;
        size_type find_last_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_last_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_last_of(const wchar_t *__s, size_type __pos) const;
        size_type find_last_of(wchar_t __c, size_type __pos) const;
        size_type find_first_not_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_first_not_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_first_not_of(const wchar_t *__s, size_type __pos) const (CompoundStmt 0x9fd00f0 </usr/include/c++/4.6/bits/basic_string.h:2064:7, line:2067:7>
  (NullStmt 0x9cb32e0 <line:2065:32>)
  (ReturnStmt 0x9fd00e0 <line:2066:2, col:69>
    (CXXMemberCallExpr 0x9fd0098 <col:9, col:69> 'size_type':'unsigned int'
      (MemberExpr 0x9fd0074 <col:9, col:15> '<bound member function type>' ->find_first_not_of 0x9d39fe0
        (CXXThisExpr 0x9fcfd28 <col:9> 'const class std::basic_string<wchar_t> *' this))
      (ImplicitCastExpr 0x9fd00c0 <col:33> 'const wchar_t *' <LValueToRValue>
        (DeclRefExpr 0x9fcfd80 <col:33> 'const wchar_t *' lvalue ParmVar 0x9d3a180 '__s' 'const wchar_t *'))
      (ImplicitCastExpr 0x9fd00d0 <col:38> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9fcfd98 <col:38> 'size_type':'unsigned int' lvalue ParmVar 0x9d3a2e0 '__pos' 'size_type':'unsigned int'))
      (CallExpr 0x9fd0048 <col:45, col:68> 'size_t':'unsigned int'
        (ImplicitCastExpr 0x9fd0038 <col:45, col:58> 'size_t (*)(const char_type *)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9fd0000 <col:45, col:58> 'size_t (const char_type *)' lvalue CXXMethod 0x9bb47e0 'length' 'size_t (const char_type *)'))
        (ImplicitCastExpr 0x9fd0068 <col:65> 'const wchar_t *' <LValueToRValue>
          (DeclRefExpr 0x9fd0020 <col:65> 'const wchar_t *' lvalue ParmVar 0x9d3a180 '__s' 'const wchar_t *'))))))


        size_type find_first_not_of(wchar_t __c, size_type __pos) const;
        size_type find_last_not_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_last_not_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_last_not_of(const wchar_t *__s, size_type __pos) const (CompoundStmt 0x9fd1000 </usr/include/c++/4.6/bits/basic_string.h:2123:7, line:2126:7>
  (NullStmt 0x9cb35d8 <line:2124:32>)
  (ReturnStmt 0x9fd0ff0 <line:2125:2, col:68>
    (CXXMemberCallExpr 0x9fd0fa8 <col:9, col:68> 'size_type':'unsigned int'
      (MemberExpr 0x9fd0f84 <col:9, col:15> '<bound member function type>' ->find_last_not_of 0x9d3afa0
        (CXXThisExpr 0x9fd0c30 <col:9> 'const class std::basic_string<wchar_t> *' this))
      (ImplicitCastExpr 0x9fd0fd0 <col:32> 'const wchar_t *' <LValueToRValue>
        (DeclRefExpr 0x9fd0c88 <col:32> 'const wchar_t *' lvalue ParmVar 0x9d3b140 '__s' 'const wchar_t *'))
      (ImplicitCastExpr 0x9fd0fe0 <col:37> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9fd0ca0 <col:37> 'size_type':'unsigned int' lvalue ParmVar 0x9d3b2a0 '__pos' 'size_type':'unsigned int'))
      (CallExpr 0x9fd0f58 <col:44, col:67> 'size_t':'unsigned int'
        (ImplicitCastExpr 0x9fd0f48 <col:44, col:57> 'size_t (*)(const char_type *)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9fd0f10 <col:44, col:57> 'size_t (const char_type *)' lvalue CXXMethod 0x9bb47e0 'length' 'size_t (const char_type *)'))
        (ImplicitCastExpr 0x9fd0f78 <col:64> 'const wchar_t *' <LValueToRValue>
          (DeclRefExpr 0x9fd0f30 <col:64> 'const wchar_t *' lvalue ParmVar 0x9d3b140 '__s' 'const wchar_t *'))))))


        size_type find_last_not_of(wchar_t __c, size_type __pos) const;
        std::basic_string<wchar_t> substr(size_type __pos, size_type __n) const;
        int compare(const std::basic_string<wchar_t> &__str) const;
        int compare(size_type __pos, size_type __n, const std::basic_string<wchar_t> &__str) const;
        int compare(size_type __pos1, size_type __n1, const std::basic_string<wchar_t> &__str, size_type __pos2, size_type __n2) const;
        int compare(const wchar_t *__s) const;
        int compare(size_type __pos, size_type __n1, const wchar_t *__s) const;
        int compare(size_type __pos, size_type __n1, const wchar_t *__s, size_type __n2) const;
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> class basic_string {
        class basic_string;
        typedef typename allocator<char>::rebind<char>::other _CharT_alloc_type;
    public:
    public:
        typedef std::char_traits<char> traits_type;
        typedef typename char_traits<char>::char_type value_type;
        typedef std::allocator<char> allocator_type;
        typedef typename _CharT_alloc_type::size_type size_type;
        typedef typename _CharT_alloc_type::difference_type difference_type;
        typedef typename _CharT_alloc_type::reference reference;
        typedef typename _CharT_alloc_type::const_reference const_reference;
        typedef typename _CharT_alloc_type::pointer pointer;
        typedef typename _CharT_alloc_type::const_pointer const_pointer;
        typedef __gnu_cxx::__normal_iterator<pointer, basic_string<char> > iterator;
        typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string<char> > const_iterator;
        typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
        typedef std::reverse_iterator<iterator> reverse_iterator;
    private:
    private:
        struct _Rep_base {
            struct _Rep_base;
            size_type _M_length;
            size_type _M_capacity;
            _Atomic_word _M_refcount;
        };
        struct _Rep :  std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep_base {
            struct _Rep;
            typedef typename allocator<char>::rebind<char>::other _Raw_bytes_alloc;
            static const size_type _S_max_size;
            static const char _S_terminal;
            static size_type _S_empty_rep_storage[];
            static std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep &_S_empty_rep();
            bool _M_is_leaked() const;
            bool _M_is_shared() const;
            void _M_set_leaked();
            void _M_set_sharable();
            void _M_set_length_and_sharable(size_type __n);
            char *_M_refdata() throw();
            char *_M_grab(const std::allocator<char> &__alloc1, const std::allocator<char> &__alloc2);
            static std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep *_S_create(size_type, size_type, const std::allocator<char> &);
            void _M_dispose(const std::allocator<char> &__a);
            void _M_destroy(const std::allocator<char> &) throw();
            char *_M_refcopy() throw();
            char *_M_clone(const std::allocator<char> &, size_type __res);
        };
        struct _Alloc_hider :  std::allocator<char> {
            struct _Alloc_hider;
            _Alloc_hider(char *__dat, const std::allocator<char> &__a);
            char *_M_p;
        };
    public:
    public:
        static const size_type npos = (CXXStaticCastExpr 0x9cf5cc8 </usr/include/c++/4.6/bits/basic_string.h:279:37, col:62> 'size_type':'unsigned int' static_cast<size_type> <NoOp>
  (ImplicitCastExpr 0x9cf5cb8 <col:60, col:61> 'size_type':'unsigned int' <IntegralCast>
    (UnaryOperator 0x9c7f970 <col:60, col:61> 'int' prefix '-'
      (IntegerLiteral 0x9c7f958 <col:61> 'int' 1))))
;
    private:
    private:
        mutable std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider _M_dataplus;
        char *_M_data() const (CompoundStmt 0x9fcc5c0 </usr/include/c++/4.6/bits/basic_string.h:287:7, col:35>
  (ReturnStmt 0x9fcc5b0 <col:9, col:29>
    (ImplicitCastExpr 0x9fcc5a0 <col:17, col:29> 'char *' <LValueToRValue>
      (MemberExpr 0x9fcc580 <col:17, col:29> 'char *' lvalue ._M_p 0x9cf6250
        (MemberExpr 0x9fcc560 <col:17> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Alloc_hider' lvalue ->_M_dataplus 0x9cf6280
          (CXXThisExpr 0x9fcc440 <col:17> 'const class std::basic_string<char> *' this))))))


        char *_M_data(char *__p);
        std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep *_M_rep() const (CompoundStmt 0x9fcc428 </usr/include/c++/4.6/bits/basic_string.h:295:7, col:62>
  (ReturnStmt 0x9fcc418 <col:9, col:59>
    (UnaryOperator 0x9fcc400 <col:16, col:59> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *' prefix '&'
      (ParenExpr 0x9fcc3e8 <col:17, col:59> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep' lvalue
        (ArraySubscriptExpr 0x9fcc3d0 <col:18, col:58> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep' lvalue
          (ParenExpr 0x9fcc3b8 <col:18, col:54> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *'
            (CXXReinterpretCastExpr 0x9fcc3a0 <col:19, col:53> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *' reinterpret_cast<struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *> <BitCast>
              (CXXMemberCallExpr 0x9fcc380 <col:44, col:52> 'char *'
                (MemberExpr 0x9fcc360 <col:44> '<bound member function type>' ->_M_data 0x9cf6300
                  (CXXThisExpr 0x9fcc350 <col:44> 'const class std::basic_string<char> *' this)))))
          (UnaryOperator 0x9ca1d28 <col:56, col:57> 'int' prefix '-'
            (IntegerLiteral 0x9ca1d10 <col:57> 'int' 1)))))))


        iterator _M_ibegin() const;
        iterator _M_iend() const;
        void _M_leak();
        size_type _M_check(size_type __pos, const char *__s) const;
        void _M_check_length(size_type __n1, size_type __n2, const char *__s) const;
        size_type _M_limit(size_type __pos, size_type __off) const;
        bool _M_disjunct(const char *__s) const;
        static void _M_copy(char *__d, const char *__s, size_type __n);
        static void _M_move(char *__d, const char *__s, size_type __n);
        static void _M_assign(char *__d, size_type __n, char __c);
        template <class _Iterator> static void _S_copy_chars(char *__p, _Iterator __k1, _Iterator __k2);
        static void _S_copy_chars(char *__p, iterator __k1, iterator __k2);
        static void _S_copy_chars(char *__p, const_iterator __k1, const_iterator __k2);
        static void _S_copy_chars(char *__p, char *__k1, char *__k2);
        static void _S_copy_chars(char *__p, const char *__k1, const char *__k2);
        static int _S_compare(size_type __n1, size_type __n2);
        void _M_mutate(size_type __pos, size_type __len1, size_type __len2);
        void _M_leak_hard();
        static std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep &_S_empty_rep();
    public:
    public:
        basic_string();
        basic_string(const std::allocator<char> &__a);
        basic_string(const std::basic_string<char> &__str);
        basic_string(const std::basic_string<char> &__str, size_type __pos, size_type __n);
        basic_string(const std::basic_string<char> &__str, size_type __pos, size_type __n, const std::allocator<char> &__a);
        basic_string(const char *__s, size_type __n, const std::allocator<char> &__a);
        basic_string(const char *__s, const std::allocator<char> &__a);
        basic_string(size_type __n, char __c, const std::allocator<char> &__a);
        template <class _InputIterator> basic_string(_InputIterator __beg, _InputIterator __end, const std::allocator<char> &__a);
        void ~basic_string();
        std::basic_string<char> &operator=(const std::basic_string<char> &__str);
        std::basic_string<char> &operator=(const char *__s);
        std::basic_string<char> &operator=(char __c);
        iterator begin();
        const_iterator begin() const;
        iterator end();
        const_iterator end() const;
        reverse_iterator rbegin();
        const_reverse_iterator rbegin() const;
        reverse_iterator rend();
        const_reverse_iterator rend() const;
    public:
    public:
        size_type size() const (CompoundStmt 0x9fcbd78 </usr/include/c++/4.6/bits/basic_string.h:710:7, col:37>
  (ReturnStmt 0x9fcbd68 <col:9, col:26>
    (ImplicitCastExpr 0x9fcbd58 <col:16, col:26> 'size_type':'unsigned int' <LValueToRValue>
      (MemberExpr 0x9fcbd38 <col:16, col:26> 'size_type':'unsigned int' lvalue ->_M_length 0x9d161b0
        (ImplicitCastExpr 0x9fcbd28 <col:16, col:23> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
          (CXXMemberCallExpr 0x9fcbcf0 <col:16, col:23> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *'
            (MemberExpr 0x9fcbcd0 <col:16> '<bound member function type>' ->_M_rep 0x9cf65d0
              (CXXThisExpr 0x9fcbba8 <col:16> 'const class std::basic_string<char> *' this))))))))


        size_type length() const;
        size_type max_size() const;
        void resize(size_type __n, char __c);
        void resize(size_type __n);
        size_type capacity() const;
        void reserve(size_type __res_arg);
        void clear();
        bool empty() const (CompoundStmt 0x9fcbb90 </usr/include/c++/4.6/bits/basic_string.h:803:7, col:35>
  (ReturnStmt 0x9fcbb80 <col:9, col:32>
    (BinaryOperator 0x9fcbb68 <col:16, col:32> '_Bool' '=='
      (CXXMemberCallExpr 0x9fcbb38 <col:16, col:27> 'size_type':'unsigned int'
        (MemberExpr 0x9fcbb18 <col:16, col:22> '<bound member function type>' ->size 0x9cfd570
          (CXXThisExpr 0x9fcbb08 <col:16> 'const class std::basic_string<char> *' this)))
      (ImplicitCastExpr 0x9fcbb58 <col:32> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0x9ca7998 <col:32> 'int' 0)))))


        const_reference operator[](size_type __pos) const;
        reference operator[](size_type __pos);
        const_reference at(size_type __n) const (CompoundStmt 0x9fccc60 </usr/include/c++/4.6/bits/basic_string.h:856:7, line:860:7>
  (IfStmt 0x9fcc6e8 <line:857:2, line:858:48>
    <<<NULL>>>
    (BinaryOperator 0x9fcc690 <line:857:6, col:24> '_Bool' '>='
      (ImplicitCastExpr 0x9fcc680 <col:6> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9fcc614 <col:6> 'size_type':'unsigned int' lvalue ParmVar 0x9cfead0 '__n' 'size_type':'unsigned int'))
      (CXXMemberCallExpr 0x9fcc660 <col:13, col:24> 'size_type':'unsigned int'
        (MemberExpr 0x9fcc640 <col:13, col:19> '<bound member function type>' ->size 0x9cfd570
          (CXXThisExpr 0x9fcc630 <col:13> 'const class std::basic_string<char> *' this))))
    (CallExpr 0x9fcc6b8 <line:858:4, col:48> 'void'
      (ImplicitCastExpr 0x9fcc6a8 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x9caae34 <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9b0bd90 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0x9fcc6d8 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0x9caae20 <col:24, col:30> 'const char [17]' lvalue
          (StringLiteral 0x9caadf0 </usr/include/c++/4.6/bits/basic_string.h:858:29> 'const char [17]' lvalue "basic_string::at"))))
    <<<NULL>>>)
  (ReturnStmt 0x9fccc50 <line:859:2, col:22>
    (ImplicitCastExpr 0x9fccc40 <col:9, col:22> 'const char':'const char' lvalue <NoOp>
      (ArraySubscriptExpr 0x9fccc28 <col:9, col:22> 'char':'char' lvalue
        (CXXMemberCallExpr 0x9fccbe0 <col:9, col:17> 'char *'
          (MemberExpr 0x9fccbc0 <col:9> '<bound member function type>' ->_M_data 0x9cf6300
            (CXXThisExpr 0x9fccbb0 <col:9> 'const class std::basic_string<char> *' this)))
        (ImplicitCastExpr 0x9fccc18 <col:19> 'size_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9fccbfc <col:19> 'size_type':'unsigned int' lvalue ParmVar 0x9cfead0 '__n' 'size_type':'unsigned int'))))))


        reference at(size_type __n);
        std::basic_string<char> &operator+=(const std::basic_string<char> &__str);
        std::basic_string<char> &operator+=(const char *__s);
        std::basic_string<char> &operator+=(char __c);
        std::basic_string<char> &append(const std::basic_string<char> &__str);
        std::basic_string<char> &append(const std::basic_string<char> &__str, size_type __pos, size_type __n);
        std::basic_string<char> &append(const char *__s, size_type __n);
        std::basic_string<char> &append(const char *__s);
        std::basic_string<char> &append(size_type __n, char __c);
        template <class _InputIterator> std::basic_string<char> &append(_InputIterator __first, _InputIterator __last);
        void push_back(char __c);
        std::basic_string<char> &assign(const std::basic_string<char> &__str);
        std::basic_string<char> &assign(const std::basic_string<char> &__str, size_type __pos, size_type __n);
        std::basic_string<char> &assign(const char *__s, size_type __n);
        std::basic_string<char> &assign(const char *__s);
        std::basic_string<char> &assign(size_type __n, char __c);
        template <class _InputIterator> std::basic_string<char> &assign(_InputIterator __first, _InputIterator __last);
        void insert(iterator __p, size_type __n, char __c);
        template <class _InputIterator> void insert(iterator __p, _InputIterator __beg, _InputIterator __end);
        std::basic_string<char> &insert(size_type __pos1, const std::basic_string<char> &__str);
        std::basic_string<char> &insert(size_type __pos1, const std::basic_string<char> &__str, size_type __pos2, size_type __n);
        std::basic_string<char> &insert(size_type __pos, const char *__s, size_type __n);
        std::basic_string<char> &insert(size_type __pos, const char *__s);
        std::basic_string<char> &insert(size_type __pos, size_type __n, char __c);
        iterator insert(iterator __p, char __c);
        std::basic_string<char> &erase(size_type __pos, size_type __n);
        iterator erase(iterator __position);
        iterator erase(iterator __first, iterator __last);
        std::basic_string<char> &replace(size_type __pos, size_type __n, const std::basic_string<char> &__str);
        std::basic_string<char> &replace(size_type __pos1, size_type __n1, const std::basic_string<char> &__str, size_type __pos2, size_type __n2);
        std::basic_string<char> &replace(size_type __pos, size_type __n1, const char *__s, size_type __n2);
        std::basic_string<char> &replace(size_type __pos, size_type __n1, const char *__s);
        std::basic_string<char> &replace(size_type __pos, size_type __n1, size_type __n2, char __c);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const std::basic_string<char> &__str);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const char *__s, size_type __n);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const char *__s);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, size_type __n, char __c);
        template <class _InputIterator> std::basic_string<char> &replace(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, char *__k1, char *__k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const char *__k1, const char *__k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const_iterator __k1, const_iterator __k2);
    private:
    private:
        template <class _Integer> std::basic_string<char> &_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n, _Integer __val, std::__true_type);
        template <class _InputIterator> std::basic_string<char> &_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2, std::__false_type);
        std::basic_string<char> &_M_replace_aux(size_type __pos1, size_type __n1, size_type __n2, char __c);
        std::basic_string<char> &_M_replace_safe(size_type __pos1, size_type __n1, const char *__s, size_type __n2);
        template <class _InIterator> static char *_S_construct_aux(_InIterator __beg, _InIterator __end, const std::allocator<char> &__a, std::__false_type);
        template <class _Integer> static char *_S_construct_aux(_Integer __beg, _Integer __end, const std::allocator<char> &__a, std::__true_type);
        static char *_S_construct_aux_2(size_type __req, char __c, const std::allocator<char> &__a);
        template <class _InIterator> static char *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<char> &__a);
        template <class _InIterator> static char *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<char> &__a, std::input_iterator_tag);
        template <class _FwdIterator> static char *_S_construct(_FwdIterator __beg, _FwdIterator __end, const std::allocator<char> &__a, std::forward_iterator_tag);
        static char *_S_construct(size_type __req, char __c, const std::allocator<char> &__a);
    public:
    public:
        size_type copy(char *__s, size_type __n, size_type __pos) const;
        void swap(std::basic_string<char> &__s);
        const char *c_str() const;
        const char *data() const;
        allocator_type get_allocator() const;
        size_type find(const char *__s, size_type __pos, size_type __n) const;
        size_type find(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find(const char *__s, size_type __pos) const;
        size_type find(char __c, size_type __pos) const;
        size_type rfind(const std::basic_string<char> &__str, size_type __pos) const;
        size_type rfind(const char *__s, size_type __pos, size_type __n) const;
        size_type rfind(const char *__s, size_type __pos) const;
        size_type rfind(char __c, size_type __pos) const;
        size_type find_first_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_first_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_first_of(const char *__s, size_type __pos) const;
        size_type find_first_of(char __c, size_type __pos) const;
        size_type find_last_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_last_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_last_of(const char *__s, size_type __pos) const;
        size_type find_last_of(char __c, size_type __pos) const;
        size_type find_first_not_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_first_not_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_first_not_of(const char *__s, size_type __pos) const;
        size_type find_first_not_of(char __c, size_type __pos) const;
        size_type find_last_not_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_last_not_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_last_not_of(const char *__s, size_type __pos) const;
        size_type find_last_not_of(char __c, size_type __pos) const;
        std::basic_string<char> substr(size_type __pos, size_type __n) const;
        int compare(const std::basic_string<char> &__str) const;
        int compare(size_type __pos, size_type __n, const std::basic_string<char> &__str) const;
        int compare(size_type __pos1, size_type __n1, const std::basic_string<char> &__str, size_type __pos2, size_type __n2) const;
        int compare(const char *__s) const;
        int compare(size_type __pos, size_type __n1, const char *__s) const;
        int compare(size_type __pos, size_type __n1, const char *__s, size_type __n2) const;
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>, typename _Alloc = allocator<_CharT>> class basic_string {
        class basic_string;
        typedef typename _Alloc::_Alloc::rebind<_CharT>::other _CharT_alloc_type;
    public:
    public:
        typedef _Traits traits_type;
        typedef typename _Traits::char_type value_type;
        typedef _Alloc allocator_type;
        typedef typename _CharT_alloc_type::size_type size_type;
        typedef typename _CharT_alloc_type::difference_type difference_type;
        typedef typename _CharT_alloc_type::reference reference;
        typedef typename _CharT_alloc_type::const_reference const_reference;
        typedef typename _CharT_alloc_type::pointer pointer;
        typedef typename _CharT_alloc_type::const_pointer const_pointer;
        typedef __gnu_cxx::__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> > iterator;
        typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> > const_iterator;
        typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
        typedef std::reverse_iterator<iterator> reverse_iterator;
    private:
    private:
        struct _Rep_base {
            struct _Rep_base;
            size_type _M_length;
            size_type _M_capacity;
            _Atomic_word _M_refcount;
        };
        struct _Rep :  std::basic_string::_Rep_base {
            struct _Rep;
            typedef typename _Alloc::_Alloc::rebind<char>::other _Raw_bytes_alloc;
            static const size_type _S_max_size;
            static const _CharT _S_terminal;
            static size_type _S_empty_rep_storage[];
            static std::basic_string::_Rep &_S_empty_rep() (CompoundStmt 0x9ca0868 </usr/include/c++/4.6/bits/basic_string.h:176:9, line:182:2>
  (DeclStmt 0x9ca07f0 <line:180:4, col:62>
    0x9ca0760 "void *__p =
      (CXXReinterpretCastExpr 0x9ca07d8 <col:16, col:61> 'void *' reinterpret_cast<void *> <Dependent>
        (UnaryOperator 0x9ca07b0 <col:40, col:41> '<dependent type>' prefix '&'
          (DeclRefExpr 0x9ca0794 <col:41> 'size_type []' lvalue Var 0x9c7e960 '_S_empty_rep_storage' 'size_type []')))")
  (ReturnStmt 0x9ca0858 <line:181:4, col:39>
    (UnaryOperator 0x9ca0840 <col:11, col:39> '<dependent type>' prefix '*'
      (CXXReinterpretCastExpr 0x9ca0828 <col:12, col:39> 'struct std::basic_string::_Rep *' reinterpret_cast<struct std::basic_string::_Rep *> <Dependent>
        (DeclRefExpr 0x9ca0800 <col:36> 'void *' lvalue Var 0x9ca0760 '__p' 'void *')))))


            bool _M_is_leaked() const (CompoundStmt 0x9ca0970 </usr/include/c++/4.6/bits/basic_string.h:186:9, col:41>
  (ReturnStmt 0x9ca0960 <col:11, col:38>
    (CXXOperatorCallExpr 0x9ca0938 <col:18, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0x9ca08f8 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40ad0 0x9b57c70 0x9b5ddb0)
      (CXXDependentScopeMemberExpr 0x9ca08a8 <col:18, col:24> '<dependent type>' lvalue
        (CXXThisExpr 0x9ca0898 <col:18> 'const struct std::basic_string::_Rep *' this))
      (IntegerLiteral 0x9ca08e0 <col:38> 'int' 0))))


            bool _M_is_shared() const (CompoundStmt 0x9ca0a60 </usr/include/c++/4.6/bits/basic_string.h:190:9, col:41>
  (ReturnStmt 0x9ca0a50 <col:11, col:38>
    (CXXOperatorCallExpr 0x9ca0a28 <col:18, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0x9ca09e8 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b42c70 0x9ac83c0 0x9b5e730)
      (CXXDependentScopeMemberExpr 0x9ca0998 <col:18, col:24> '<dependent type>' lvalue
        (CXXThisExpr 0x9ca0988 <col:18> 'const struct std::basic_string::_Rep *' this))
      (IntegerLiteral 0x9ca09d0 <col:38> 'int' 0))))


            void _M_set_leaked() (CompoundStmt 0x9ca0b08 </usr/include/c++/4.6/bits/basic_string.h:194:9, col:35>
  (BinaryOperator 0x9ca0af0 <col:11, col:32> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x9ca0a88 <col:11, col:17> '<dependent type>' lvalue
      (CXXThisExpr 0x9ca0a78 <col:11> 'struct std::basic_string::_Rep *' this))
    (UnaryOperator 0x9ca0ad8 <col:31, col:32> 'int' prefix '-'
      (IntegerLiteral 0x9ca0ac0 <col:32> 'int' 1))))


            void _M_set_sharable() (CompoundStmt 0x9ca0b98 </usr/include/c++/4.6/bits/basic_string.h:198:9, col:34>
  (BinaryOperator 0x9ca0b80 <col:11, col:31> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x9ca0b30 <col:11, col:17> '<dependent type>' lvalue
      (CXXThisExpr 0x9ca0b20 <col:11> 'struct std::basic_string::_Rep *' this))
    (IntegerLiteral 0x9ca0b68 <col:31> 'int' 0)))


            void _M_set_length_and_sharable(size_type __n) (CompoundStmt 0x9ca1098 </usr/include/c++/4.6/bits/basic_string.h:202:2, line:213:2>
  (IfStmt 0x9ca1078 <line:204:4, line:212:6>
    <<<NULL>>>
    (CallExpr 0x9ca0df8 <line:204:8, col:55> '<dependent type>'
      (DeclRefExpr 0x9ca0d00 <col:8> 'long (long, long)' lvalue Function 0x9ca0bd0 '__builtin_expect' 'long (long, long)')
      (CXXOperatorCallExpr 0x9ca0dc0 <col:25, col:47> '<dependent type>'
        (UnresolvedLookupExpr 0x9ca0d78 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b412d0 0x9ac7fa0 0x9b5e2b0 0x9ba7d20 0x9bc7160 0x9bc74d0)
        (CXXThisExpr 0x9ca0d18 <col:25> 'struct std::basic_string::_Rep *' this)
        (UnaryOperator 0x9ca0d60 <col:33, col:47> '<dependent type>' prefix '&'
          (CallExpr 0x9ca0d40 <col:34, col:47> '<dependent type>'
            (DeclRefExpr 0x9ca0d28 <col:34> 'struct std::basic_string::_Rep &(void)' lvalue CXXMethod 0x9c7e9f0 '_S_empty_rep' 'struct std::basic_string::_Rep &(void)'))))
      (CXXBoolLiteralExpr 0x9ca0de8 <col:50> '_Bool' false))
    (CompoundStmt 0x9ca1058 <line:206:6, line:212:6>
      (CallExpr 0x9ca0e68 <line:207:8, col:30> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ca0e30 <col:8, col:14> '<dependent type>' lvalue
          (CXXThisExpr 0x9ca0e20 <col:8> 'struct std::basic_string::_Rep *' this)))
      (BinaryOperator 0x9ca0ee8 <line:208:8, col:26> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0x9ca0e98 <col:8, col:14> '<dependent type>' lvalue
          (CXXThisExpr 0x9ca0e88 <col:8> 'struct std::basic_string::_Rep *' this))
        (DeclRefExpr 0x9ca0ecc <col:26> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9c7ec70 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
      (CallExpr 0x9ca1030 <line:209:8, col:64> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ca0f48 <col:8, col:21> '<dependent type>' lvalue)
        (ArraySubscriptExpr 0x9ca1000 <col:28, col:50> '<dependent type>' lvalue
          (CallExpr 0x9ca0fc8 <col:28, col:45> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9ca0f90 <col:28, col:34> '<dependent type>' lvalue
              (CXXThisExpr 0x9ca0f80 <col:28> 'struct std::basic_string::_Rep *' this)))
          (DeclRefExpr 0x9ca0fe4 <col:47> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9c7ec70 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
        (DeclRefExpr 0x9ca1014 <col:53> 'const _CharT' lvalue Var 0x9c7e8d0 '_S_terminal' 'const _CharT')))
    <<<NULL>>>))


            _CharT *_M_refdata() throw() (CompoundStmt 0x9ca1170 </usr/include/c++/4.6/bits/basic_string.h:217:2, col:48>
  (ReturnStmt 0x9ca1160 <col:4, col:45>
    (CXXReinterpretCastExpr 0x9ca1148 <col:11, col:45> '_CharT *' reinterpret_cast<_CharT *> <Dependent>
      (CXXOperatorCallExpr 0x9ca1110 <col:37, col:44> '<dependent type>'
        (UnresolvedLookupExpr 0x9ca10d8 <col:42, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0)
        (CXXThisExpr 0x9ca10b0 <col:37> 'struct std::basic_string::_Rep *' this)
        (IntegerLiteral 0x9ca10c0 <col:44> 'int' 1)))))


            _CharT *_M_grab(const _Alloc &__alloc1, const _Alloc &__alloc2) (CompoundStmt 0x9ca13a8 </usr/include/c++/4.6/bits/basic_string.h:221:2, line:224:2>
  (ReturnStmt 0x9ca1398 <line:222:4, line:223:46>
    (ConditionalOperator 0x9ca1378 <line:222:11, line:223:46> '<dependent type>'
      (ParenExpr 0x9ca12a8 <line:222:11, col:51> '<dependent type>'
        (BinaryOperator 0x9ca1290 <col:12, col:43> '<dependent type>' '&&'
          (UnaryOperator 0x9ca11d8 <col:12, col:26> '<dependent type>' prefix '!'
            (CallExpr 0x9ca11b8 <col:13, col:26> '<dependent type>'
              (MemberExpr 0x9ca1198 <col:13> '<bound member function type>' ->_M_is_leaked 0x9c7ea80
                (CXXThisExpr 0x9ca1188 <col:13> 'struct std::basic_string::_Rep *' this))))
          (CXXOperatorCallExpr 0x9ca1268 <col:31, col:43> '<dependent type>'
            (UnresolvedLookupExpr 0x9ca1220 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90)
            (DeclRefExpr 0x9ca11ec <col:31> 'const _Alloc' lvalue ParmVar 0x9c7ee80 '__alloc1' 'const _Alloc &')
            (DeclRefExpr 0x9ca1204 <col:43> 'const _Alloc' lvalue ParmVar 0x9c7eed0 '__alloc2' 'const _Alloc &'))))
      (CallExpr 0x9ca12f0 <line:223:14, col:25> '<dependent type>'
        (MemberExpr 0x9ca12d0 <col:14> '<bound member function type>' ->_M_refcopy 0x9c7f3f0
          (CXXThisExpr 0x9ca12c0 <col:14> 'struct std::basic_string::_Rep *' this)))
      (CallExpr 0x9ca1358 <col:29, col:46> '<dependent type>'
        (MemberExpr 0x9ca1320 <col:29> '<bound member function type>' ->_M_clone 0x9c7f540
          (CXXThisExpr 0x9ca1310 <col:29> 'struct std::basic_string::_Rep *' this))
        (DeclRefExpr 0x9ca1340 <col:38> 'const _Alloc' lvalue ParmVar 0x9c7ee80 '__alloc1' 'const _Alloc &')))))


            static std::basic_string::_Rep *_S_create(size_type, size_type, const _Alloc &);
            void _M_dispose(const _Alloc &__a) (CompoundStmt 0x9ca1750 </usr/include/c++/4.6/bits/basic_string.h:232:2, line:246:2>
  (IfStmt 0x9ca1730 <line:234:4, line:245:6>
    <<<NULL>>>
    (CallExpr 0x9ca14b8 <line:234:8, col:55> '<dependent type>'
      (DeclRefExpr 0x9ca13bc <col:8> 'long (long, long)' lvalue Function 0x9ca0bd0 '__builtin_expect' 'long (long, long)')
      (CXXOperatorCallExpr 0x9ca1480 <col:25, col:47> '<dependent type>'
        (UnresolvedLookupExpr 0x9ca1438 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b412d0 0x9ac7fa0 0x9b5e2b0 0x9ba7d20 0x9bc7160 0x9bc74d0)
        (CXXThisExpr 0x9ca13d8 <col:25> 'struct std::basic_string::_Rep *' this)
        (UnaryOperator 0x9ca1420 <col:33, col:47> '<dependent type>' prefix '&'
          (CallExpr 0x9ca1400 <col:34, col:47> '<dependent type>'
            (DeclRefExpr 0x9ca13e8 <col:34> 'struct std::basic_string::_Rep &(void)' lvalue CXXMethod 0x9c7e9f0 '_S_empty_rep' 'struct std::basic_string::_Rep &(void)'))))
      (CXXBoolLiteralExpr 0x9ca14a8 <col:50> '_Bool' false))
    (CompoundStmt 0x9ca1718 <line:236:6, line:245:6>
      (NullStmt 0x9ca14e0 <line:238:67>)
      (IfStmt 0x9ca16f8 <line:239:8, line:244:3>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9ca1640 <line:239:12, line:240:16> '<dependent type>'
          (UnresolvedLookupExpr 0x9ca1600 <col:13, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b43190 0x9ac87b0 0x9b5eb90)
          (CallExpr 0x9ca15c0 <line:239:12, line:240:11> '<dependent type>'
            (DeclRefExpr 0x9ca1510 <line:239:12, col:23> '_Atomic_word (_Atomic_word *, int)' lvalue Function 0x9c7a230 '__exchange_and_add_dispatch' '_Atomic_word (_Atomic_word *, int)')
            (UnaryOperator 0x9ca1578 <col:51, col:58> '<dependent type>' prefix '&'
              (CXXDependentScopeMemberExpr 0x9ca1540 <col:52, col:58> '<dependent type>' lvalue
                (CXXThisExpr 0x9ca1530 <col:52> 'struct std::basic_string::_Rep *' this)))
            (UnaryOperator 0x9ca15a8 <line:240:9, col:10> 'int' prefix '-'
              (IntegerLiteral 0x9ca1590 <col:10> 'int' 1)))
          (IntegerLiteral 0x9ca15e8 <col:16> 'int' 0))
        (CompoundStmt 0x9ca16e0 <line:241:3, line:244:3>
          (NullStmt 0x9ca1668 <line:242:63>)
          (CallExpr 0x9ca16c0 <line:243:5, col:19> '<dependent type>'
            (MemberExpr 0x9ca1688 <col:5> '<bound member function type>' ->_M_destroy 0x9c7f370
              (CXXThisExpr 0x9ca1678 <col:5> 'struct std::basic_string::_Rep *' this))
            (DeclRefExpr 0x9ca16a8 <col:16> 'const _Alloc' lvalue ParmVar 0x9c7f1d0 '__a' 'const _Alloc &')))
        <<<NULL>>>))
    <<<NULL>>>))


            void _M_destroy(const _Alloc &) throw();
            _CharT *_M_refcopy() throw() (CompoundStmt 0x9ca19e8 </usr/include/c++/4.6/bits/basic_string.h:253:2, line:259:2>
  (IfStmt 0x9ca1968 <line:255:4, line:257:67>
    <<<NULL>>>
    (CallExpr 0x9ca1860 <line:255:8, col:55> '<dependent type>'
      (DeclRefExpr 0x9ca1764 <col:8> 'long (long, long)' lvalue Function 0x9ca0bd0 '__builtin_expect' 'long (long, long)')
      (CXXOperatorCallExpr 0x9ca1828 <col:25, col:47> '<dependent type>'
        (UnresolvedLookupExpr 0x9ca17e0 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b412d0 0x9ac7fa0 0x9b5e2b0 0x9ba7d20 0x9bc7160 0x9bc74d0)
        (CXXThisExpr 0x9ca1780 <col:25> 'struct std::basic_string::_Rep *' this)
        (UnaryOperator 0x9ca17c8 <col:33, col:47> '<dependent type>' prefix '&'
          (CallExpr 0x9ca17a8 <col:34, col:47> '<dependent type>'
            (DeclRefExpr 0x9ca1790 <col:34> 'struct std::basic_string::_Rep &(void)' lvalue CXXMethod 0x9c7e9f0 '_S_empty_rep' 'struct std::basic_string::_Rep &(void)'))))
      (CXXBoolLiteralExpr 0x9ca1850 <col:50> '_Bool' false))
    (CallExpr 0x9ca1940 <line:257:13, col:67> '<dependent type>'
      (DeclRefExpr 0x9ca18a8 <col:13, col:24> 'void (_Atomic_word *, int)' lvalue Function 0x9c7a6c0 '__atomic_add_dispatch' 'void (_Atomic_word *, int)')
      (UnaryOperator 0x9ca1910 <col:46, col:53> '<dependent type>' prefix '&'
        (CXXDependentScopeMemberExpr 0x9ca18d8 <col:47, col:53> '<dependent type>' lvalue
          (CXXThisExpr 0x9ca18c8 <col:47> 'struct std::basic_string::_Rep *' this)))
      (IntegerLiteral 0x9ca1928 <col:66> 'int' 1))
    <<<NULL>>>)
  (ReturnStmt 0x9ca19d8 <line:258:4, col:22>
    (CallExpr 0x9ca19b8 <col:11, col:22> '<dependent type>'
      (MemberExpr 0x9ca1998 <col:11> '<bound member function type>' ->_M_refdata 0x9c7edf0
        (CXXThisExpr 0x9ca1988 <col:11> 'struct std::basic_string::_Rep *' this)))))


            _CharT *_M_clone(const _Alloc &, size_type __res = (IntegerLiteral 0x9c9d640 </usr/include/c++/4.6/bits/basic_string.h:262:44> 'int' 0)
);
        };
        struct _Alloc_hider :  _Alloc {
            struct _Alloc_hider;
            _Alloc_hider(_CharT *__dat, const _Alloc &__a) : _Alloc((DeclRefExpr 0x9ca1a00 </usr/include/c++/4.6/bits/basic_string.h:269:11> 'const _Alloc' lvalue ParmVar 0x9c7f770 '__a' 'const _Alloc &')
), _M_p((DeclRefExpr 0x9ca1a58 </usr/include/c++/4.6/bits/basic_string.h:269:22> '_CharT *' lvalue ParmVar 0x9c7f720 '__dat' '_CharT *')
) (CompoundStmt 0x9ca1ab0 </usr/include/c++/4.6/bits/basic_string.h:269:29, col:31>)


            _CharT *_M_p;
        };
    public:
    public:
        static const size_type npos = (CXXStaticCastExpr 0x9c7f990 </usr/include/c++/4.6/bits/basic_string.h:279:37, col:62> 'size_type':'typename _CharT_alloc_type::size_type' static_cast<size_type> <Dependent>
  (UnaryOperator 0x9c7f970 <col:60, col:61> 'int' prefix '-'
    (IntegerLiteral 0x9c7f958 <col:61> 'int' 1)))
;
    private:
    private:
        mutable std::basic_string::_Alloc_hider _M_dataplus;
        _CharT *_M_data() const (CompoundStmt 0x9ca1b70 </usr/include/c++/4.6/bits/basic_string.h:287:7, col:35>
  (ReturnStmt 0x9ca1b60 <col:9, col:29>
    (CXXDependentScopeMemberExpr 0x9ca1b28 <col:17, col:29> '<dependent type>' lvalue
      (MemberExpr 0x9ca1b04 <col:17> 'struct std::basic_string::_Alloc_hider' lvalue ->_M_dataplus 0x9c7fa00
        (CXXThisExpr 0x9ca1ad8 <col:17> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))))


        _CharT *_M_data(_CharT *__p) (CompoundStmt 0x9ca1c48 </usr/include/c++/4.6/bits/basic_string.h:291:7, col:42>
  (ReturnStmt 0x9ca1c38 <col:9, col:39>
    (ParenExpr 0x9ca1c20 <col:16, col:39> '<dependent type>'
      (BinaryOperator 0x9ca1c08 <col:17, col:36> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0x9ca1bb8 <col:17, col:29> '<dependent type>' lvalue
          (MemberExpr 0x9ca1b98 <col:17> 'struct std::basic_string::_Alloc_hider' lvalue ->_M_dataplus 0x9c7fa00
            (CXXThisExpr 0x9ca1b88 <col:17> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
        (DeclRefExpr 0x9ca1bec <col:36> '_CharT *' lvalue ParmVar 0x9c7faf0 '__p' '_CharT *')))))


        std::basic_string::_Rep *_M_rep() const (CompoundStmt 0x9ca1d98 </usr/include/c++/4.6/bits/basic_string.h:295:7, col:62>
  (ReturnStmt 0x9ca1d88 <col:9, col:59>
    (UnaryOperator 0x9ca1d70 <col:16, col:59> '<dependent type>' prefix '&'
      (ParenExpr 0x9ca1d58 <col:17, col:59> '<dependent type>' lvalue
        (ArraySubscriptExpr 0x9ca1d40 <col:18, col:58> '<dependent type>' lvalue
          (ParenExpr 0x9ca1cf8 <col:18, col:54> 'struct std::basic_string::_Rep *'
            (CXXReinterpretCastExpr 0x9ca1ce0 <col:19, col:53> 'struct std::basic_string::_Rep *' reinterpret_cast<struct std::basic_string::_Rep *> <Dependent>
              (CallExpr 0x9ca1cb0 <col:44, col:52> '<dependent type>'
                (UnresolvedMemberExpr 0x9ca1c70 <col:44> '<bound member function type>' lvalue))))
          (UnaryOperator 0x9ca1d28 <col:56, col:57> 'int' prefix '-'
            (IntegerLiteral 0x9ca1d10 <col:57> 'int' 1)))))))


        iterator _M_ibegin() const (CompoundStmt 0x9ca1e58 </usr/include/c++/4.6/bits/basic_string.h:301:7, col:37>
  (ReturnStmt 0x9ca1e48 <col:9, col:34>
    (CXXUnresolvedConstructExpr 0x9ca1e28 <col:16, col:34> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'
      (CallExpr 0x9ca1e08 <col:25, col:33> '<dependent type>'
        (UnresolvedMemberExpr 0x9ca1dc8 <col:25> '<bound member function type>' lvalue)))))


        iterator _M_iend() const (CompoundStmt 0x9ca1fe0 </usr/include/c++/4.6/bits/basic_string.h:305:7, col:52>
  (ReturnStmt 0x9ca1fd0 <col:9, col:49>
    (CXXUnresolvedConstructExpr 0x9ca1fb0 <col:16, col:49> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'
      (CXXOperatorCallExpr 0x9ca1f88 <col:25, col:48> '<dependent type>'
        (UnresolvedLookupExpr 0x9ca1f50 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0)
        (CallExpr 0x9ca1ec8 <col:25, col:33> '<dependent type>'
          (UnresolvedMemberExpr 0x9ca1e88 <col:25> '<bound member function type>' lvalue))
        (CallExpr 0x9ca1f30 <col:37, col:48> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9ca1ef8 <col:37, col:43> '<dependent type>' lvalue
            (CXXThisExpr 0x9ca1ee8 <col:37> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))))))


        void _M_leak() (CompoundStmt 0x9ca2128 </usr/include/c++/4.6/bits/basic_string.h:309:7, line:312:7>
  (IfStmt 0x9ca2108 <line:310:2, line:311:17>
    <<<NULL>>>
    (UnaryOperator 0x9ca20a0 <line:310:6, col:30> '<dependent type>' prefix '!'
      (CallExpr 0x9ca2080 <col:7, col:30> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ca2048 <col:7, col:17> '<dependent type>' lvalue
          (CallExpr 0x9ca2028 <col:7, col:14> '<dependent type>'
            (MemberExpr 0x9ca2008 <col:7> '<bound member function type>' ->_M_rep 0x9c7fc30
              (CXXThisExpr 0x9ca1ff8 <col:7> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
    (CallExpr 0x9ca20e8 <line:311:4, col:17> '<dependent type>'
      (MemberExpr 0x9ca20c8 <col:4> '<bound member function type>' ->_M_leak_hard 0x9c83fb0
        (CXXThisExpr 0x9ca20b8 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
    <<<NULL>>>))


        size_type _M_check(size_type __pos, const char *__s) const (CompoundStmt 0x9ca2350 </usr/include/c++/4.6/bits/basic_string.h:316:7, line:320:7>
  (IfStmt 0x9ca2308 <line:317:2, line:318:33>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9ca2200 <line:317:6, col:25> '<dependent type>'
      (UnresolvedLookupExpr 0x9ca21c0 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b42c70 0x9ac83c0 0x9b5e730)
      (DeclRefExpr 0x9ca213c <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9c7fe50 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x9ca21a0 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ca2168 <col:14, col:20> '<dependent type>' lvalue
          (CXXThisExpr 0x9ca2158 <col:14> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))
    (CallExpr 0x9ca22d8 <line:318:4, col:33> 'void'
      (ImplicitCastExpr 0x9ca22c8 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x9ca228c <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9b0bd90 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0x9ca22f8 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <LValueToRValue>
        (ParenExpr 0x9ca2278 <col:24, col:30> 'const char *' lvalue
          (DeclRefExpr 0x9ca225c </usr/include/c++/4.6/bits/basic_string.h:318:29> 'const char *' lvalue ParmVar 0x9c7fea0 '__s' 'const char *'))))
    <<<NULL>>>)
  (ReturnStmt 0x9ca2340 <line:319:2, col:9>
    (DeclRefExpr 0x9ca2324 <col:9> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9c7fe50 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')))


        void _M_check_length(size_type __n1, size_type __n2, const char *__s) const (CompoundStmt 0x9ca3c80 </usr/include/c++/4.6/bits/basic_string.h:324:7, line:327:7>
  (IfStmt 0x9ca3c60 <line:325:2, line:326:33>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9ca2580 <line:325:6, col:49> '<dependent type>'
      (UnresolvedLookupExpr 0x9ca2540 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40ad0 0x9b57c70 0x9b5ddb0)
      (CXXOperatorCallExpr 0x9ca2500 <col:6, col:45> '<dependent type>'
        (UnresolvedLookupExpr 0x9ca24c8 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
        (CallExpr 0x9ca23b0 <col:6, col:21> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9ca2378 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x9ca2368 <col:6> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))
        (ParenExpr 0x9ca24b0 <col:25, col:45> '<dependent type>'
          (CXXOperatorCallExpr 0x9ca2488 <col:26, col:41> '<dependent type>'
            (UnresolvedLookupExpr 0x9ca2450 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
            (CallExpr 0x9ca2418 <col:26, col:37> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9ca23e0 <col:26, col:32> '<dependent type>' lvalue
                (CXXThisExpr 0x9ca23d0 <col:26> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))
            (DeclRefExpr 0x9ca2434 <col:41> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9c7ffb0 '__n1' 'size_type':'typename _CharT_alloc_type::size_type'))))
      (DeclRefExpr 0x9ca2524 <col:49> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9c7fff0 '__n2' 'size_type':'typename _CharT_alloc_type::size_type'))
    (CallExpr 0x9ca3c30 <line:326:4, col:33> 'void'
      (ImplicitCastExpr 0x9ca3c20 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x9ca3c04 <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9b0bcc0 '__throw_length_error' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0x9ca3c50 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <LValueToRValue>
        (ParenExpr 0x9ca3bf0 <col:24, col:30> 'const char *' lvalue
          (DeclRefExpr 0x9ca25dc </usr/include/c++/4.6/bits/basic_string.h:326:29> 'const char *' lvalue ParmVar 0x9c80040 '__s' 'const char *'))))
    <<<NULL>>>))


        size_type _M_limit(size_type __pos, size_type __off) const (CompoundStmt 0x9ca3f98 </usr/include/c++/4.6/bits/basic_string.h:332:7, line:335:7>
  (DeclStmt 0x9ca3e38 <line:333:2, col:54>
    0x9ca3ca0 "const bool __testoff =
      (CXXOperatorCallExpr 0x9ca3e10 <col:26, col:49> '<dependent type>'
        (UnresolvedLookupExpr 0x9ca3dd0 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40ad0 0x9b57c70 0x9b5ddb0)
        (DeclRefExpr 0x9ca3cd4 <col:26> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9c82ba0 '__off' 'size_type':'typename _CharT_alloc_type::size_type')
        (CXXOperatorCallExpr 0x9ca3da8 <col:34, col:49> '<dependent type>'
          (UnresolvedLookupExpr 0x9ca3d70 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
          (CallExpr 0x9ca3d38 <col:34, col:45> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9ca3d00 <col:34, col:40> '<dependent type>' lvalue
              (CXXThisExpr 0x9ca3cf0 <col:34> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))
          (DeclRefExpr 0x9ca3d54 <col:49> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9c82b60 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')))")
  (ReturnStmt 0x9ca3f88 <line:334:2, col:44>
    (ConditionalOperator 0x9ca3f68 <col:9, col:44> '<dependent type>'
      (ImplicitCastExpr 0x9ca3f58 <col:9> '_Bool' <LValueToRValue>
        (DeclRefExpr 0x9ca3e48 <col:9> 'const _Bool' lvalue Var 0x9ca3ca0 '__testoff' 'const _Bool'))
      (DeclRefExpr 0x9ca3e60 <col:21> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9c82ba0 '__off' 'size_type':'typename _CharT_alloc_type::size_type')
      (CXXOperatorCallExpr 0x9ca3f30 <col:29, col:44> '<dependent type>'
        (UnresolvedLookupExpr 0x9ca3ef8 <col:42, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
        (CallExpr 0x9ca3ec0 <col:29, col:40> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9ca3e88 <col:29, col:35> '<dependent type>' lvalue
            (CXXThisExpr 0x9ca3e78 <col:29> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))
        (DeclRefExpr 0x9ca3edc <col:44> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9c82b60 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')))))


        bool _M_disjunct(const _CharT *__s) const (CompoundStmt 0x9ca43e0 </usr/include/c++/4.6/bits/basic_string.h:340:7, line:343:7>
  (ReturnStmt 0x9ca43d0 <line:341:2, line:342:58>
    (ParenExpr 0x9ca43b8 <line:341:9, line:342:58> '<dependent type>'
      (BinaryOperator 0x9ca43a0 <line:341:10, line:342:57> '<dependent type>' '||'
        (CallExpr 0x9ca4130 <line:341:10, col:46> '<dependent type>'
          (CXXUnresolvedConstructExpr 0x9ca4090 <col:10, col:30> 'less<const _CharT *>')
          (DeclRefExpr 0x9ca40a8 <col:32> 'const _CharT *' lvalue ParmVar 0x9c82ce0 '__s' 'const _CharT *')
          (CallExpr 0x9ca4110 <col:37, col:45> '<dependent type>'
            (UnresolvedMemberExpr 0x9ca40d0 <col:37> '<bound member function type>' lvalue)))
        (CallExpr 0x9ca4378 <line:342:6, col:57> '<dependent type>'
          (CXXUnresolvedConstructExpr 0x9ca4210 <col:6, col:26> 'less<const _CharT *>')
          (CXXOperatorCallExpr 0x9ca4338 <col:28, col:51> '<dependent type>'
            (UnresolvedLookupExpr 0x9ca4300 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0)
            (CallExpr 0x9ca4278 <col:28, col:36> '<dependent type>'
              (UnresolvedMemberExpr 0x9ca4238 <col:28> '<bound member function type>' lvalue))
            (CallExpr 0x9ca42e0 <col:40, col:51> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9ca42a8 <col:40, col:46> '<dependent type>' lvalue
                (CXXThisExpr 0x9ca4298 <col:40> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))
          (DeclRefExpr 0x9ca435c <col:54> 'const _CharT *' lvalue ParmVar 0x9c82ce0 '__s' 'const _CharT *'))))))


        static void _M_copy(_CharT *__d, const _CharT *__s, size_type __n) (CompoundStmt 0x9ca4650 </usr/include/c++/4.6/bits/basic_string.h:349:7, line:354:7>
  (IfStmt 0x9ca4630 <line:350:2, line:353:35>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9ca4470 <line:350:6, col:13> '<dependent type>'
      (UnresolvedLookupExpr 0x9ca4428 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90)
      (DeclRefExpr 0x9ca43f4 <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9c82e90 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (IntegerLiteral 0x9ca4410 <col:13> 'int' 1))
    (CallExpr 0x9ca4548 <line:351:4, col:34> '<dependent type>'
      (DependentScopeDeclRefExpr 0x9ca44c0 <col:4, col:17> '<dependent type>' lvalue)
      (UnaryOperator 0x9ca4500 <col:24, col:25> '<dependent type>' prefix '*'
        (DeclRefExpr 0x9ca44e4 <col:25> '_CharT *' lvalue ParmVar 0x9c82e00 '__d' '_CharT *'))
      (UnaryOperator 0x9ca4530 <col:30, col:31> '<dependent type>' prefix '*'
        (DeclRefExpr 0x9ca4514 <col:31> 'const _CharT *' lvalue ParmVar 0x9c82e50 '__s' 'const _CharT *')))
    (CallExpr 0x9ca4608 <line:353:4, col:35> '<dependent type>'
      (DependentScopeDeclRefExpr 0x9ca4598 <col:4, col:17> '<dependent type>' lvalue)
      (DeclRefExpr 0x9ca45bc <col:22> '_CharT *' lvalue ParmVar 0x9c82e00 '__d' '_CharT *')
      (DeclRefExpr 0x9ca45d4 <col:27> 'const _CharT *' lvalue ParmVar 0x9c82e50 '__s' 'const _CharT *')
      (DeclRefExpr 0x9ca45ec <col:32> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9c82e90 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))))


        static void _M_move(_CharT *__d, const _CharT *__s, size_type __n) (CompoundStmt 0x9ca48c0 </usr/include/c++/4.6/bits/basic_string.h:358:7, line:363:7>
  (IfStmt 0x9ca48a0 <line:359:2, line:362:35>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9ca46e0 <line:359:6, col:13> '<dependent type>'
      (UnresolvedLookupExpr 0x9ca4698 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90)
      (DeclRefExpr 0x9ca4664 <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9c83060 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (IntegerLiteral 0x9ca4680 <col:13> 'int' 1))
    (CallExpr 0x9ca47b8 <line:360:4, col:34> '<dependent type>'
      (DependentScopeDeclRefExpr 0x9ca4730 <col:4, col:17> '<dependent type>' lvalue)
      (UnaryOperator 0x9ca4770 <col:24, col:25> '<dependent type>' prefix '*'
        (DeclRefExpr 0x9ca4754 <col:25> '_CharT *' lvalue ParmVar 0x9c82fd0 '__d' '_CharT *'))
      (UnaryOperator 0x9ca47a0 <col:30, col:31> '<dependent type>' prefix '*'
        (DeclRefExpr 0x9ca4784 <col:31> 'const _CharT *' lvalue ParmVar 0x9c83020 '__s' 'const _CharT *')))
    (CallExpr 0x9ca4878 <line:362:4, col:35> '<dependent type>'
      (DependentScopeDeclRefExpr 0x9ca4808 <col:4, col:17> '<dependent type>' lvalue)
      (DeclRefExpr 0x9ca482c <col:22> '_CharT *' lvalue ParmVar 0x9c82fd0 '__d' '_CharT *')
      (DeclRefExpr 0x9ca4844 <col:27> 'const _CharT *' lvalue ParmVar 0x9c83020 '__s' 'const _CharT *')
      (DeclRefExpr 0x9ca485c <col:32> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9c83060 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))))


        static void _M_assign(_CharT *__d, size_type __n, _CharT __c) (CompoundStmt 0x9ca4b18 </usr/include/c++/4.6/bits/basic_string.h:367:7, line:372:7>
  (IfStmt 0x9ca4af8 <line:368:2, line:371:37>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9ca4950 <line:368:6, col:13> '<dependent type>'
      (UnresolvedLookupExpr 0x9ca4908 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90)
      (DeclRefExpr 0x9ca48d4 <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9c83180 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (IntegerLiteral 0x9ca48f0 <col:13> 'int' 1))
    (CallExpr 0x9ca4a10 <line:369:4, col:33> '<dependent type>'
      (DependentScopeDeclRefExpr 0x9ca49a0 <col:4, col:17> '<dependent type>' lvalue)
      (UnaryOperator 0x9ca49e0 <col:24, col:25> '<dependent type>' prefix '*'
        (DeclRefExpr 0x9ca49c4 <col:25> '_CharT *' lvalue ParmVar 0x9c83140 '__d' '_CharT *'))
      (DeclRefExpr 0x9ca49f4 <col:30> '_CharT' lvalue ParmVar 0x9c831c0 '__c' '_CharT'))
    (CallExpr 0x9ca4ad0 <line:371:4, col:37> '<dependent type>'
      (DependentScopeDeclRefExpr 0x9ca4a60 <col:4, col:17> '<dependent type>' lvalue)
      (DeclRefExpr 0x9ca4a84 <col:24> '_CharT *' lvalue ParmVar 0x9c83140 '__d' '_CharT *')
      (DeclRefExpr 0x9ca4a9c <col:29> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9c83180 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9ca4ab4 <col:34> '_CharT' lvalue ParmVar 0x9c831c0 '__c' '_CharT'))))


        template <class _Iterator> static void _S_copy_chars(_CharT *__p, _Iterator __k1, _Iterator __k2) (CompoundStmt 0x9ca4d48 </usr/include/c++/4.6/bits/basic_string.h:379:9, line:382:2>
  (ForStmt 0x9ca4d20 <line:380:4, line:381:37>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9ca4ba8 <line:380:11, col:19> '<dependent type>'
      (UnresolvedLookupExpr 0x9ca4b60 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b412d0 0x9ac7fa0 0x9b5e2b0 0x9ba7d20 0x9bc7160 0x9bc74d0)
      (DeclRefExpr 0x9ca4b2c <col:11> '_Iterator' lvalue ParmVar 0x9c833a0 '__k1' '_Iterator')
      (DeclRefExpr 0x9ca4b44 <col:19> '_Iterator' lvalue ParmVar 0x9c833e0 '__k2' '_Iterator'))
    (BinaryOperator 0x9ca4c30 <col:25, col:35> '<dependent type>' ','
      (UnaryOperator 0x9ca4be8 <col:25, col:27> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9ca4bcc <col:27> '_Iterator' lvalue ParmVar 0x9c833a0 '__k1' '_Iterator'))
      (UnaryOperator 0x9ca4c18 <col:33, col:35> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9ca4bfc <col:35> '_CharT *' lvalue ParmVar 0x9c83360 '__p' '_CharT *')))
    (CallExpr 0x9ca4cf8 <line:381:6, col:37> '<dependent type>'
      (DependentScopeDeclRefExpr 0x9ca4c70 <col:6, col:19> '<dependent type>' lvalue)
      (UnaryOperator 0x9ca4cb0 <col:26, col:27> '<dependent type>' prefix '*'
        (DeclRefExpr 0x9ca4c94 <col:27> '_CharT *' lvalue ParmVar 0x9c83360 '__p' '_CharT *'))
      (UnaryOperator 0x9ca4ce0 <col:32, col:33> '<dependent type>' prefix '*'
        (DeclRefExpr 0x9ca4cc4 <col:33> '_Iterator' lvalue ParmVar 0x9c833a0 '__k1' '_Iterator')))))

;
        static void _S_copy_chars(_CharT *__p, iterator __k1, iterator __k2) (CompoundStmt 0x9ca4ec8 </usr/include/c++/4.6/bits/basic_string.h:386:7, col:55>
  (CallExpr 0x9ca4ea0 <col:9, col:52> '<dependent type>'
    (UnresolvedLookupExpr 0x9ca4d60 <col:9> '<dependent type>' lvalue (no ADL) = '1' 0x9c83c10 0x9c83a30 0x9c83850 0x9c83690 0x9c83500)
    (DeclRefExpr 0x9ca4da4 <col:23> '_CharT *' lvalue ParmVar 0x9c83550 '__p' '_CharT *')
    (CallExpr 0x9ca4e10 <col:28, col:38> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9ca4dd8 <col:28, col:33> '<dependent type>' lvalue
        (DeclRefExpr 0x9ca4dbc <col:28> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9c83590 '__k1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')))
    (CallExpr 0x9ca4e80 <col:41, col:51> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9ca4e48 <col:41, col:46> '<dependent type>' lvalue
        (DeclRefExpr 0x9ca4e2c <col:41> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9c835d0 '__k2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')))))


        static void _S_copy_chars(_CharT *__p, const_iterator __k1, const_iterator __k2) (CompoundStmt 0x9ca5048 </usr/include/c++/4.6/bits/basic_string.h:390:7, col:55>
  (CallExpr 0x9ca5020 <col:9, col:52> '<dependent type>'
    (UnresolvedLookupExpr 0x9ca4ee0 <col:9> '<dependent type>' lvalue (no ADL) = '1' 0x9c83c10 0x9c83a30 0x9c83850 0x9c83690 0x9c83500)
    (DeclRefExpr 0x9ca4f24 <col:23> '_CharT *' lvalue ParmVar 0x9c83710 '__p' '_CharT *')
    (CallExpr 0x9ca4f90 <col:28, col:38> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9ca4f58 <col:28, col:33> '<dependent type>' lvalue
        (DeclRefExpr 0x9ca4f3c <col:28> 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9c83750 '__k1' 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >')))
    (CallExpr 0x9ca5000 <col:41, col:51> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9ca4fc8 <col:41, col:46> '<dependent type>' lvalue
        (DeclRefExpr 0x9ca4fac <col:41> 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9c83790 '__k2' 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >')))))


        static void _S_copy_chars(_CharT *__p, _CharT *__k1, _CharT *__k2) (CompoundStmt 0x9ca5160 </usr/include/c++/4.6/bits/basic_string.h:394:7, col:42>
  (CallExpr 0x9ca5138 <col:9, col:39> '<dependent type>'
    (DeclRefExpr 0x9ca505c <col:9> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9c82f50 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
    (DeclRefExpr 0x9ca5074 <col:17> '_CharT *' lvalue ParmVar 0x9c838d0 '__p' '_CharT *')
    (DeclRefExpr 0x9ca508c <col:22> '_CharT *' lvalue ParmVar 0x9c83920 '__k1' '_CharT *')
    (CXXOperatorCallExpr 0x9ca5110 <col:28, col:35> '<dependent type>'
      (UnresolvedLookupExpr 0x9ca50d8 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
      (DeclRefExpr 0x9ca50a4 <col:28> '_CharT *' lvalue ParmVar 0x9c83970 '__k2' '_CharT *')
      (DeclRefExpr 0x9ca50bc <col:35> '_CharT *' lvalue ParmVar 0x9c83920 '__k1' '_CharT *'))))


        static void _S_copy_chars(_CharT *__p, const _CharT *__k1, const _CharT *__k2) (CompoundStmt 0x9ca5278 </usr/include/c++/4.6/bits/basic_string.h:398:7, col:42>
  (CallExpr 0x9ca5250 <col:9, col:39> '<dependent type>'
    (DeclRefExpr 0x9ca5174 <col:9> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9c82f50 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
    (DeclRefExpr 0x9ca518c <col:17> '_CharT *' lvalue ParmVar 0x9c83ab0 '__p' '_CharT *')
    (DeclRefExpr 0x9ca51a4 <col:22> 'const _CharT *' lvalue ParmVar 0x9c83b00 '__k1' 'const _CharT *')
    (CXXOperatorCallExpr 0x9ca5228 <col:28, col:35> '<dependent type>'
      (UnresolvedLookupExpr 0x9ca51f0 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
      (DeclRefExpr 0x9ca51bc <col:28> 'const _CharT *' lvalue ParmVar 0x9c83b50 '__k2' 'const _CharT *')
      (DeclRefExpr 0x9ca51d4 <col:35> 'const _CharT *' lvalue ParmVar 0x9c83b00 '__k1' 'const _CharT *'))))


        static int _S_compare(size_type __n1, size_type __n2) (CompoundStmt 0x9ca67a8 </usr/include/c++/4.6/bits/basic_string.h:402:7, line:411:7>
  (DeclStmt 0x9ca53a0 <line:403:2, col:58>
    0x9ca52b0 "const difference_type __d =
      (CXXUnresolvedConstructExpr 0x9ca5380 <col:30, col:57> 'difference_type':'typename _CharT_alloc_type::difference_type'
        (CXXOperatorCallExpr 0x9ca5358 <col:46, col:53> '<dependent type>'
          (UnresolvedLookupExpr 0x9ca5320 <col:51, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
          (DeclRefExpr 0x9ca52f0 <col:46> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9c83c90 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0x9ca5308 <col:53> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9c83cd0 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')))")
  (IfStmt 0x9ca6788 <line:405:2, line:410:18>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9ca6408 <line:405:6, col:46> '<dependent type>'
      (UnresolvedLookupExpr 0x9ca63c8 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b42c70 0x9ac83c0 0x9b5e730)
      (DeclRefExpr 0x9ca53b0 <col:6> 'const difference_type':'const typename _CharT_alloc_type::difference_type' lvalue Var 0x9ca52b0 '__d' 'const difference_type':'const typename _CharT_alloc_type::difference_type')
      (DeclRefExpr 0x9ca63a8 <col:12, col:46> 'const int':'const int' lvalue Var 0x9ca5e30 '__max' 'const int':'const int'))
    (ReturnStmt 0x9ca64f0 <line:406:4, col:45>
      (ImplicitCastExpr 0x9ca64e0 <col:11, col:45> 'int':'int' <LValueToRValue>
        (DeclRefExpr 0x9ca64c0 <col:11, col:45> 'const int':'const int' lvalue Var 0x9ca5e30 '__max' 'const int':'const int')))
    (IfStmt 0x9ca6768 <line:407:7, line:410:18>
      <<<NULL>>>
      (CXXOperatorCallExpr 0x9ca6610 <line:407:11, col:51> '<dependent type>'
        (UnresolvedLookupExpr 0x9ca65d0 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40ad0 0x9b57c70 0x9b5ddb0)
        (DeclRefExpr 0x9ca6500 <col:11> 'const difference_type':'const typename _CharT_alloc_type::difference_type' lvalue Var 0x9ca52b0 '__d' 'const difference_type':'const typename _CharT_alloc_type::difference_type')
        (DeclRefExpr 0x9ca65b0 <col:17, col:51> 'const int':'const int' lvalue Var 0x9ca5c20 '__min' 'const int':'const int'))
      (ReturnStmt 0x9ca6700 <line:408:4, col:45>
        (ImplicitCastExpr 0x9ca66f0 <col:11, col:45> 'int':'int' <LValueToRValue>
          (DeclRefExpr 0x9ca66d0 <col:11, col:45> 'const int':'const int' lvalue Var 0x9ca5c20 '__min' 'const int':'const int')))
      (ReturnStmt 0x9ca6758 <line:410:4, col:18>
        (CXXUnresolvedConstructExpr 0x9ca6738 <col:11, col:18> 'int'
          (DeclRefExpr 0x9ca671c <col:15> 'const difference_type':'const typename _CharT_alloc_type::difference_type' lvalue Var 0x9ca52b0 '__d' 'const difference_type':'const typename _CharT_alloc_type::difference_type'))))))


        void _M_mutate(size_type __pos, size_type __len1, size_type __len2);
        void _M_leak_hard();
        static std::basic_string::_Rep &_S_empty_rep() (CompoundStmt 0x9ca6840 </usr/include/c++/4.6/bits/basic_string.h:421:7, col:38>
  (ReturnStmt 0x9ca6830 <col:9, col:35>
    (CallExpr 0x9ca6810 <col:16, col:35> '<dependent type>'
      (DependentScopeDeclRefExpr 0x9ca67e8 <col:16, col:22> '<dependent type>' lvalue))))


    public:
    public:
        basic_string<_CharT, _Traits, _Alloc>() : _M_dataplus((CallExpr 0x9ca68c8 </usr/include/c++/4.6/bits/basic_string.h:433:21, col:47> '<dependent type>'
  (CXXDependentScopeMemberExpr 0x9ca6890 <col:21, col:36> '<dependent type>' lvalue
    (CallExpr 0x9ca6870 <col:21, col:34> '<dependent type>'
      (DeclRefExpr 0x9ca6854 <col:21> 'struct std::basic_string::_Rep &(void)' lvalue CXXMethod 0x9c84030 '_S_empty_rep' 'struct std::basic_string::_Rep &(void)'))))
, (CXXUnresolvedConstructExpr 0x9ca68f0 </usr/include/c++/4.6/bits/basic_string.h:433:50, col:57> '_Alloc')
) (CompoundStmt 0x9ca6950 </usr/include/c++/4.6/bits/basic_string.h:433:60, col:62>)


        basic_string<_CharT, _Traits, _Alloc>(const _Alloc &__a);
        basic_string<_CharT, _Traits, _Alloc>(const basic_string<_CharT, _Traits, _Alloc> &__str);
        basic_string<_CharT, _Traits, _Alloc>(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos, size_type __n = (DeclRefExpr 0x9c9d658 </usr/include/c++/4.6/bits/basic_string.h:457:22> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9c7f920 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
);
        basic_string<_CharT, _Traits, _Alloc>(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos, size_type __n, const _Alloc &__a);
        basic_string<_CharT, _Traits, _Alloc>(const _CharT *__s, size_type __n, const _Alloc &__a = (CXXUnresolvedConstructExpr 0x9c9d678 </usr/include/c++/4.6/bits/basic_string.h:478:26, col:33> '_Alloc')
);
        basic_string<_CharT, _Traits, _Alloc>(const _CharT *__s, const _Alloc &__a = (CXXUnresolvedConstructExpr 0x9c9d698 </usr/include/c++/4.6/bits/basic_string.h:484:59, col:66> '_Alloc')
);
        basic_string<_CharT, _Traits, _Alloc>(size_type __n, _CharT __c, const _Alloc &__a = (CXXUnresolvedConstructExpr 0x9c9d6b8 </usr/include/c++/4.6/bits/basic_string.h:491:67, col:74> '_Alloc')
);
        template <class _InputIterator> basic_string<_CharT, _Traits, _Alloc>(_InputIterator __beg, _InputIterator __end, const _Alloc &__a = (CXXUnresolvedConstructExpr 0x9c9d6d8 </usr/include/c++/4.6/bits/basic_string.h:527:28, col:35> '_Alloc')
);
        void ~basic_string<_CharT, _Traits, _Alloc>() (CompoundStmt 0x9ca6a70 </usr/include/c++/4.6/bits/basic_string.h:533:7, col:54>
  (CallExpr 0x9ca6a50 <col:9, col:51> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9ca69b0 <col:9, col:19> '<dependent type>' lvalue
      (CallExpr 0x9ca6990 <col:9, col:16> '<dependent type>'
        (MemberExpr 0x9ca6970 <col:9> '<bound member function type>' ->_M_rep 0x9c7fc30
          (CXXThisExpr 0x9ca6960 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
    (CallExpr 0x9ca6a30 <col:30, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9ca69f8 <col:30, col:36> '<dependent type>' lvalue
        (CXXThisExpr 0x9ca69e8 <col:30> 'basic_string<_CharT, _Traits, _Alloc> *' this)))))


        basic_string<_CharT, _Traits, _Alloc> &operator=(const basic_string<_CharT, _Traits, _Alloc> &__str) (CompoundStmt 0x9ca6b18 </usr/include/c++/4.6/bits/basic_string.h:541:7, col:37>
  (ReturnStmt 0x9ca6b08 <col:9, col:34>
    (CallExpr 0x9ca6ae8 <col:16, col:34> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9ca6a98 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9ca6a88 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9ca6acc <col:29> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9c88b60 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))


        basic_string<_CharT, _Traits, _Alloc> &operator=(const _CharT *__s) (CompoundStmt 0x9ca6bc0 </usr/include/c++/4.6/bits/basic_string.h:549:7, col:35>
  (ReturnStmt 0x9ca6bb0 <col:9, col:32>
    (CallExpr 0x9ca6b90 <col:16, col:32> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9ca6b40 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9ca6b30 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9ca6b74 <col:29> 'const _CharT *' lvalue ParmVar 0x9c88c80 '__s' 'const _CharT *'))))


        basic_string<_CharT, _Traits, _Alloc> &operator=(_CharT __c) (CompoundStmt 0x9ca6cb0 </usr/include/c++/4.6/bits/basic_string.h:560:7, line:563:7>
  (CallExpr 0x9ca6c50 <line:561:2, col:21> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9ca6be8 <col:2, col:8> '<dependent type>' lvalue
      (CXXThisExpr 0x9ca6bd8 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (IntegerLiteral 0x9ca6c20 <col:15> 'int' 1)
    (DeclRefExpr 0x9ca6c38 <col:18> '_CharT' lvalue ParmVar 0x9c88d90 '__c' '_CharT'))
  (ReturnStmt 0x9ca6ca0 <line:562:2, col:10>
    (UnaryOperator 0x9ca6c88 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9ca6c78 <col:10> 'basic_string<_CharT, _Traits, _Alloc> *' this))))


        iterator begin() (CompoundStmt 0x9ca6dc0 </usr/include/c++/4.6/bits/basic_string.h:600:7, line:603:7>
  (CallExpr 0x9ca6cf8 <line:601:2, col:10> '<dependent type>'
    (MemberExpr 0x9ca6cd8 <col:2> '<bound member function type>' ->_M_leak 0x9c7fde0
      (CXXThisExpr 0x9ca6cc8 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
  (ReturnStmt 0x9ca6db0 <line:602:2, col:27>
    (CXXUnresolvedConstructExpr 0x9ca6d90 <col:9, col:27> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'
      (CallExpr 0x9ca6d70 <col:18, col:26> '<dependent type>'
        (UnresolvedMemberExpr 0x9ca6d30 <col:18> '<bound member function type>' lvalue)))))


        const_iterator begin() const (CompoundStmt 0x9ca6e80 </usr/include/c++/4.6/bits/basic_string.h:611:7, col:43>
  (ReturnStmt 0x9ca6e70 <col:9, col:40>
    (CXXUnresolvedConstructExpr 0x9ca6e50 <col:16, col:40> 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >'
      (CallExpr 0x9ca6e30 <col:31, col:39> '<dependent type>'
        (UnresolvedMemberExpr 0x9ca6df0 <col:31> '<bound member function type>' lvalue)))))


        iterator end() (CompoundStmt 0x9ca7058 </usr/include/c++/4.6/bits/basic_string.h:619:7, line:622:7>
  (CallExpr 0x9ca6ec8 <line:620:2, col:10> '<dependent type>'
    (MemberExpr 0x9ca6ea8 <col:2> '<bound member function type>' ->_M_leak 0x9c7fde0
      (CXXThisExpr 0x9ca6e98 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
  (ReturnStmt 0x9ca7048 <line:621:2, col:42>
    (CXXUnresolvedConstructExpr 0x9ca7028 <col:9, col:42> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'
      (CXXOperatorCallExpr 0x9ca7000 <col:18, col:41> '<dependent type>'
        (UnresolvedLookupExpr 0x9ca6fc8 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0)
        (CallExpr 0x9ca6f40 <col:18, col:26> '<dependent type>'
          (UnresolvedMemberExpr 0x9ca6f00 <col:18> '<bound member function type>' lvalue))
        (CallExpr 0x9ca6fa8 <col:30, col:41> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9ca6f70 <col:30, col:36> '<dependent type>' lvalue
            (CXXThisExpr 0x9ca6f60 <col:30> 'basic_string<_CharT, _Traits, _Alloc> *' this)))))))


        const_iterator end() const (CompoundStmt 0x9ca71e0 </usr/include/c++/4.6/bits/basic_string.h:630:7, col:58>
  (ReturnStmt 0x9ca71d0 <col:9, col:55>
    (CXXUnresolvedConstructExpr 0x9ca71b0 <col:16, col:55> 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >'
      (CXXOperatorCallExpr 0x9ca7188 <col:31, col:54> '<dependent type>'
        (UnresolvedLookupExpr 0x9ca7150 <col:41, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0)
        (CallExpr 0x9ca70c8 <col:31, col:39> '<dependent type>'
          (UnresolvedMemberExpr 0x9ca7088 <col:31> '<bound member function type>' lvalue))
        (CallExpr 0x9ca7130 <col:43, col:54> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9ca70f8 <col:43, col:49> '<dependent type>' lvalue
            (CXXThisExpr 0x9ca70e8 <col:43> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))))))


        reverse_iterator rbegin() (CompoundStmt 0x9ca7298 </usr/include/c++/4.6/bits/basic_string.h:639:7, col:47>
  (ReturnStmt 0x9ca7288 <col:9, col:44>
    (CXXUnresolvedConstructExpr 0x9ca7268 <col:16, col:44> 'reverse_iterator':'reverse_iterator<iterator>'
      (CallExpr 0x9ca7248 <col:33, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ca7210 <col:33, col:39> '<dependent type>' lvalue
          (CXXThisExpr 0x9ca7200 <col:33> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))


        const_reverse_iterator rbegin() const (CompoundStmt 0x9ca7350 </usr/include/c++/4.6/bits/basic_string.h:648:7, col:53>
  (ReturnStmt 0x9ca7340 <col:9, col:50>
    (CXXUnresolvedConstructExpr 0x9ca7320 <col:16, col:50> 'const_reverse_iterator':'reverse_iterator<const_iterator>'
      (CallExpr 0x9ca7300 <col:39, col:49> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ca72c8 <col:39, col:45> '<dependent type>' lvalue
          (CXXThisExpr 0x9ca72b8 <col:39> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))))


        reverse_iterator rend() (CompoundStmt 0x9ca7408 </usr/include/c++/4.6/bits/basic_string.h:657:7, col:49>
  (ReturnStmt 0x9ca73f8 <col:9, col:46>
    (CXXUnresolvedConstructExpr 0x9ca73d8 <col:16, col:46> 'reverse_iterator':'reverse_iterator<iterator>'
      (CallExpr 0x9ca73b8 <col:33, col:45> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ca7380 <col:33, col:39> '<dependent type>' lvalue
          (CXXThisExpr 0x9ca7370 <col:33> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))


        const_reverse_iterator rend() const (CompoundStmt 0x9ca74c0 </usr/include/c++/4.6/bits/basic_string.h:666:7, col:55>
  (ReturnStmt 0x9ca74b0 <col:9, col:52>
    (CXXUnresolvedConstructExpr 0x9ca7490 <col:16, col:52> 'const_reverse_iterator':'reverse_iterator<const_iterator>'
      (CallExpr 0x9ca7470 <col:39, col:51> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ca7438 <col:39, col:45> '<dependent type>' lvalue
          (CXXThisExpr 0x9ca7428 <col:39> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))))


    public:
    public:
        size_type size() const (CompoundStmt 0x9ca7570 </usr/include/c++/4.6/bits/basic_string.h:710:7, col:37>
  (ReturnStmt 0x9ca7560 <col:9, col:26>
    (CXXDependentScopeMemberExpr 0x9ca7528 <col:16, col:26> '<dependent type>' lvalue
      (CallExpr 0x9ca7508 <col:16, col:23> '<dependent type>'
        (MemberExpr 0x9ca74e8 <col:16> '<bound member function type>' ->_M_rep 0x9c7fc30
          (CXXThisExpr 0x9ca74d8 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))))


        size_type length() const (CompoundStmt 0x9ca7620 </usr/include/c++/4.6/bits/basic_string.h:716:7, col:37>
  (ReturnStmt 0x9ca7610 <col:9, col:26>
    (CXXDependentScopeMemberExpr 0x9ca75d8 <col:16, col:26> '<dependent type>' lvalue
      (CallExpr 0x9ca75b8 <col:16, col:23> '<dependent type>'
        (MemberExpr 0x9ca7598 <col:16> '<bound member function type>' ->_M_rep 0x9c7fc30
          (CXXThisExpr 0x9ca7588 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))))


        size_type max_size() const (CompoundStmt 0x9ca76a0 </usr/include/c++/4.6/bits/basic_string.h:721:7, col:35>
  (ReturnStmt 0x9ca7690 <col:9, col:22>
    (CXXDependentScopeMemberExpr 0x9ca7658 <col:16, col:22> '<dependent type>' lvalue)))


        void resize(size_type __n, _CharT __c);
        void resize(size_type __n) (CompoundStmt 0x9ca7760 </usr/include/c++/4.6/bits/basic_string.h:748:7, col:38>
  (CallExpr 0x9ca7738 <col:9, col:35> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9ca76c8 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0x9ca76b8 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9ca76fc <col:22> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9c896d0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (CXXUnresolvedConstructExpr 0x9ca7720 <col:27, col:34> '_CharT')))


        size_type capacity() const (CompoundStmt 0x9ca7810 </usr/include/c++/4.6/bits/basic_string.h:768:7, col:39>
  (ReturnStmt 0x9ca7800 <col:9, col:26>
    (CXXDependentScopeMemberExpr 0x9ca77c8 <col:16, col:26> '<dependent type>' lvalue
      (CallExpr 0x9ca77a8 <col:16, col:23> '<dependent type>'
        (MemberExpr 0x9ca7788 <col:16> '<bound member function type>' ->_M_rep 0x9c7fc30
          (CXXThisExpr 0x9ca7778 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))))


        void reserve(size_type __res_arg = (IntegerLiteral 0x9c9d6f0 </usr/include/c++/4.6/bits/basic_string.h:788:37> 'int' 0)
);
        void clear() (CompoundStmt 0x9ca7918 </usr/include/c++/4.6/bits/basic_string.h:795:7, col:40>
  (CallExpr 0x9ca78f0 <col:9, col:37> '<dependent type>'
    (MemberExpr 0x9ca7838 <col:9> '<bound member function type>' ->_M_mutate 0x9c83f20
      (CXXThisExpr 0x9ca7828 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (IntegerLiteral 0x9ca7858 <col:19> 'int' 0)
    (CallExpr 0x9ca78b8 <col:22, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9ca7880 <col:22, col:28> '<dependent type>' lvalue
        (CXXThisExpr 0x9ca7870 <col:22> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
    (IntegerLiteral 0x9ca78d8 <col:36> 'int' 0)))


        bool empty() const (CompoundStmt 0x9ca7a30 </usr/include/c++/4.6/bits/basic_string.h:803:7, col:35>
  (ReturnStmt 0x9ca7a20 <col:9, col:32>
    (CXXOperatorCallExpr 0x9ca79f8 <col:16, col:32> '<dependent type>'
      (UnresolvedLookupExpr 0x9ca79b0 <col:29, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90)
      (CallExpr 0x9ca7978 <col:16, col:27> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ca7940 <col:16, col:22> '<dependent type>' lvalue
          (CXXThisExpr 0x9ca7930 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))
      (IntegerLiteral 0x9ca7998 <col:32> 'int' 0))))


        const_reference operator[](size_type __pos) const (CompoundStmt 0x9ca7b08 </usr/include/c++/4.6/bits/basic_string.h:818:7, line:821:7>
  (NullStmt 0x9ca7a48 <line:819:40>)
  (ReturnStmt 0x9ca7af8 <line:820:2, col:24>
    (ArraySubscriptExpr 0x9ca7ae0 <col:9, col:24> '<dependent type>' lvalue
      (CallExpr 0x9ca7aa8 <col:9, col:17> '<dependent type>'
        (UnresolvedMemberExpr 0x9ca7a68 <col:9> '<bound member function type>' lvalue))
      (DeclRefExpr 0x9ca7ac4 <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9c899e0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))))


        reference operator[](size_type __pos) (CompoundStmt 0x9caac70 </usr/include/c++/4.6/bits/basic_string.h:835:7, line:842:7>
  (NullStmt 0x9ca7b20 <line:837:40>)
  (NullStmt 0x9ca7b30 <line:839:42>)
  (CallExpr 0x9ca7b70 <line:840:2, col:10> '<dependent type>'
    (MemberExpr 0x9ca7b50 <col:2> '<bound member function type>' ->_M_leak 0x9c7fde0
      (CXXThisExpr 0x9ca7b40 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
  (ReturnStmt 0x9caac60 <line:841:2, col:24>
    (ArraySubscriptExpr 0x9caac48 <col:9, col:24> '<dependent type>' lvalue
      (CallExpr 0x9caac10 <col:9, col:17> '<dependent type>'
        (UnresolvedMemberExpr 0x9ca7ba0 <col:9> '<bound member function type>' lvalue))
      (DeclRefExpr 0x9caac2c <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9c89b10 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))))


        const_reference at(size_type __n) const (CompoundStmt 0x9caaf60 </usr/include/c++/4.6/bits/basic_string.h:856:7, line:860:7>
  (IfStmt 0x9caae90 <line:857:2, line:858:48>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9caad50 <line:857:6, col:24> '<dependent type>'
      (UnresolvedLookupExpr 0x9caad10 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b436e0 0x9ac8bd0 0x9b5f010)
      (DeclRefExpr 0x9caac90 <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9c89c20 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x9caacf0 <col:13, col:24> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9caacb8 <col:13, col:19> '<dependent type>' lvalue
          (CXXThisExpr 0x9caaca8 <col:13> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))
    (CallExpr 0x9caae60 <line:858:4, col:48> 'void'
      (ImplicitCastExpr 0x9caae50 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x9caae34 <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9b0bd90 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0x9caae80 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0x9caae20 <col:24, col:30> 'const char [17]' lvalue
          (StringLiteral 0x9caadf0 </usr/include/c++/4.6/bits/basic_string.h:858:29> 'const char [17]' lvalue "basic_string::at"))))
    <<<NULL>>>)
  (ReturnStmt 0x9caaf50 <line:859:2, col:22>
    (ArraySubscriptExpr 0x9caaf38 <col:9, col:22> '<dependent type>' lvalue
      (CallExpr 0x9caaf00 <col:9, col:17> '<dependent type>'
        (UnresolvedMemberExpr 0x9caaec0 <col:9> '<bound member function type>' lvalue))
      (DeclRefExpr 0x9caaf1c <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9c89c20 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))))


        reference at(size_type __n) (CompoundStmt 0x9cab238 </usr/include/c++/4.6/bits/basic_string.h:909:7, line:914:7>
  (IfStmt 0x9cab118 <line:910:2, line:911:48>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9cab020 <line:910:6, col:18> '<dependent type>'
      (UnresolvedLookupExpr 0x9caafe0 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b436e0 0x9ac8bd0 0x9b5f010)
      (DeclRefExpr 0x9caaf78 <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9c89ce0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x9caafc0 <col:13, col:18> '<dependent type>'
        (MemberExpr 0x9caafa0 <col:13> '<bound member function type>' ->size 0x9c89410
          (CXXThisExpr 0x9caaf90 <col:13> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
    (CallExpr 0x9cab0e8 <line:911:4, col:48> 'void'
      (ImplicitCastExpr 0x9cab0d8 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x9cab0bc <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9b0bd90 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0x9cab108 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0x9cab0a8 <col:24, col:30> 'const char [17]' lvalue
          (StringLiteral 0x9cab07c </usr/include/c++/4.6/bits/basic_string.h:911:29> 'const char [17]' lvalue "basic_string::at"))))
    <<<NULL>>>)
  (CallExpr 0x9cab168 <line:912:2, col:10> '<dependent type>'
    (MemberExpr 0x9cab148 <col:2> '<bound member function type>' ->_M_leak 0x9c7fde0
      (CXXThisExpr 0x9cab138 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
  (ReturnStmt 0x9cab228 <line:913:2, col:22>
    (ArraySubscriptExpr 0x9cab210 <col:9, col:22> '<dependent type>' lvalue
      (CallExpr 0x9cab1d8 <col:9, col:17> '<dependent type>'
        (UnresolvedMemberExpr 0x9cab198 <col:9> '<bound member function type>' lvalue))
      (DeclRefExpr 0x9cab1f4 <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9c89ce0 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))))


        basic_string<_CharT, _Traits, _Alloc> &operator+=(const basic_string<_CharT, _Traits, _Alloc> &__str) (CompoundStmt 0x9cab2e8 </usr/include/c++/4.6/bits/basic_string.h:924:7, col:37>
  (ReturnStmt 0x9cab2d8 <col:9, col:34>
    (CallExpr 0x9cab2b8 <col:16, col:34> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9cab268 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9cab258 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9cab29c <col:29> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9c89db0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))


        basic_string<_CharT, _Traits, _Alloc> &operator+=(const _CharT *__s) (CompoundStmt 0x9cab390 </usr/include/c++/4.6/bits/basic_string.h:933:7, col:35>
  (ReturnStmt 0x9cab380 <col:9, col:32>
    (CallExpr 0x9cab360 <col:16, col:32> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9cab310 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9cab300 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9cab344 <col:29> 'const _CharT *' lvalue ParmVar 0x9c89e90 '__s' 'const _CharT *'))))


        basic_string<_CharT, _Traits, _Alloc> &operator+=(_CharT __c) (CompoundStmt 0x9cab460 </usr/include/c++/4.6/bits/basic_string.h:942:7, line:945:7>
  (CallExpr 0x9cab408 <line:943:2, col:21> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9cab3b8 <col:2, col:8> '<dependent type>' lvalue
      (CXXThisExpr 0x9cab3a8 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9cab3ec <col:18> '_CharT' lvalue ParmVar 0x9c89f60 '__c' '_CharT'))
  (ReturnStmt 0x9cab450 <line:944:2, col:10>
    (UnaryOperator 0x9cab438 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9cab428 <col:10> 'basic_string<_CharT, _Traits, _Alloc> *' this))))


        basic_string<_CharT, _Traits, _Alloc> &append(const basic_string<_CharT, _Traits, _Alloc> &__str);
        basic_string<_CharT, _Traits, _Alloc> &append(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos, size_type __n);
        basic_string<_CharT, _Traits, _Alloc> &append(const _CharT *__s, size_type __n);
        basic_string<_CharT, _Traits, _Alloc> &append(const _CharT *__s) (CompoundStmt 0x9cab5b0 </usr/include/c++/4.6/bits/basic_string.h:997:7, line:1000:7>
  (NullStmt 0x9cab478 <line:998:32>)
  (ReturnStmt 0x9cab5a0 <line:999:2, col:51>
    (CallExpr 0x9cab578 <col:9, col:51> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9cab498 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x9cab488 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9cab4cc <col:22> 'const _CharT *' lvalue ParmVar 0x9c8a440 '__s' 'const _CharT *')
      (CallExpr 0x9cab558 <col:27, col:50> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cab508 <col:27, col:40> '<dependent type>' lvalue)
        (DeclRefExpr 0x9cab53c <col:47> 'const _CharT *' lvalue ParmVar 0x9c8a440 '__s' 'const _CharT *')))))


        basic_string<_CharT, _Traits, _Alloc> &append(size_type __n, _CharT __c);
        template <class _InputIterator> basic_string<_CharT, _Traits, _Alloc> &append(_InputIterator __first, _InputIterator __last) (CompoundStmt 0x9cab720 </usr/include/c++/4.6/bits/basic_string.h:1035:9, col:72>
  (ReturnStmt 0x9cab710 <col:11, col:69>
    (CallExpr 0x9cab6e0 <col:18, col:69> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9cab5d8 <col:18, col:24> '<dependent type>' lvalue
        (CXXThisExpr 0x9cab5c8 <col:18> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0x9cab640 <col:32, col:40> '<dependent type>'
        (MemberExpr 0x9cab620 <col:32> '<bound member function type>' ->_M_iend 0x9c7fd60
          (CXXThisExpr 0x9cab610 <col:32> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
      (CallExpr 0x9cab690 <col:43, col:51> '<dependent type>'
        (MemberExpr 0x9cab670 <col:43> '<bound member function type>' ->_M_iend 0x9c7fd60
          (CXXThisExpr 0x9cab660 <col:43> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
      (DeclRefExpr 0x9cab6ac <col:54> '_InputIterator' lvalue ParmVar 0x9c8dd80 '__first' '_InputIterator')
      (DeclRefExpr 0x9cab6c4 <col:63> '_InputIterator' lvalue ParmVar 0x9c8ddc0 '__last' '_InputIterator'))))

;
        void push_back(_CharT __c) (CompoundStmt 0x9cabd00 </usr/include/c++/4.6/bits/basic_string.h:1043:7, line:1049:7>
  (DeclStmt 0x9cab858 <line:1044:2, col:42>
    0x9cab740 "const size_type __len =
      (CXXOperatorCallExpr 0x9cab830 <col:26, col:41> '<dependent type>'
        (UnresolvedLookupExpr 0x9cab7f8 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0)
        (IntegerLiteral 0x9cab778 <col:26> 'int' 1)
        (CallExpr 0x9cab7d8 <col:30, col:41> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9cab7a0 <col:30, col:36> '<dependent type>' lvalue
            (CXXThisExpr 0x9cab790 <col:30> 'basic_string<_CharT, _Traits, _Alloc> *' this))))")
  (IfStmt 0x9caba90 <line:1045:2, line:1046:23>
    <<<NULL>>>
    (BinaryOperator 0x9cab9f8 <line:1045:6, col:57> '<dependent type>' '||'
      (CXXOperatorCallExpr 0x9cab928 <col:6, col:29> '<dependent type>'
        (UnresolvedLookupExpr 0x9cab8e8 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b42c70 0x9ac83c0 0x9b5e730)
        (DeclRefExpr 0x9cab868 <col:6> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9cab740 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (CallExpr 0x9cab8c8 <col:14, col:29> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9cab890 <col:14, col:20> '<dependent type>' lvalue
            (CXXThisExpr 0x9cab880 <col:14> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CallExpr 0x9cab9d8 <col:34, col:57> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cab9a0 <col:34, col:44> '<dependent type>' lvalue
          (CallExpr 0x9cab980 <col:34, col:41> '<dependent type>'
            (MemberExpr 0x9cab960 <col:34> '<bound member function type>' ->_M_rep 0x9c7fc30
              (CXXThisExpr 0x9cab950 <col:34> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
    (CallExpr 0x9caba70 <line:1046:4, col:23> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9caba20 <col:4, col:10> '<dependent type>' lvalue
        (CXXThisExpr 0x9caba10 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9caba54 <col:18> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9cab740 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))
    <<<NULL>>>)
  (CallExpr 0x9cabc18 <line:1047:2, col:50> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9cabad8 <col:2, col:15> '<dependent type>' lvalue)
    (ArraySubscriptExpr 0x9cabbe8 <col:22, col:44> '<dependent type>' lvalue
      (CallExpr 0x9cabb60 <col:22, col:30> '<dependent type>'
        (UnresolvedMemberExpr 0x9cabb20 <col:22> '<bound member function type>' lvalue))
      (CallExpr 0x9cabbc8 <col:32, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cabb90 <col:32, col:38> '<dependent type>' lvalue
          (CXXThisExpr 0x9cabb80 <col:32> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
    (DeclRefExpr 0x9cabbfc <col:47> '_CharT' lvalue ParmVar 0x9c8df00 '__c' '_CharT'))
  (CallExpr 0x9cabce0 <line:1048:2, col:44> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9cabc90 <col:2, col:12> '<dependent type>' lvalue
      (CallExpr 0x9cabc70 <col:2, col:9> '<dependent type>'
        (MemberExpr 0x9cabc50 <col:2> '<bound member function type>' ->_M_rep 0x9c7fc30
          (CXXThisExpr 0x9cabc40 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
    (DeclRefExpr 0x9cabcc4 <col:39> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9cab740 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type')))


        basic_string<_CharT, _Traits, _Alloc> &assign(const basic_string<_CharT, _Traits, _Alloc> &__str);
        basic_string<_CharT, _Traits, _Alloc> &assign(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos, size_type __n) (CompoundStmt 0x9cabfd8 </usr/include/c++/4.6/bits/basic_string.h:1090:7, line:1092:37>
  (ReturnStmt 0x9cabfc8 <line:1090:9, line:1092:34>
    (CallExpr 0x9cabfa0 <line:1090:16, line:1092:34> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9cabd30 <line:1090:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9cabd20 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXOperatorCallExpr 0x9cabed0 <col:29, line:1091:54> '<dependent type>'
        (UnresolvedLookupExpr 0x9cabe98 <col:8, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0)
        (CallExpr 0x9cabdb8 <line:1090:29, col:43> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9cabd80 <col:29, col:35> '<dependent type>' lvalue
            (DeclRefExpr 0x9cabd64 <col:29> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9c8e0e0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
        (CallExpr 0x9cabe70 <line:1091:10, col:54> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9cabdf0 <col:10, col:16> '<dependent type>' lvalue
            (DeclRefExpr 0x9cabdd4 <col:10> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9c8e0e0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
          (DeclRefExpr 0x9cabe24 <col:25> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9c8e120 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
          (StringLiteral 0x9cabe3c <col:32> 'const char [21]' lvalue "basic_string::assign")))
      (CallExpr 0x9cabf78 <line:1092:8, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cabf10 <col:8, col:14> '<dependent type>' lvalue
          (DeclRefExpr 0x9cabef4 <col:8> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9c8e0e0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x9cabf44 <col:23> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9c8e120 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9cabf5c <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9c8e160 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))))


        basic_string<_CharT, _Traits, _Alloc> &assign(const _CharT *__s, size_type __n);
        basic_string<_CharT, _Traits, _Alloc> &assign(const _CharT *__s) (CompoundStmt 0x9cac128 </usr/include/c++/4.6/bits/basic_string.h:1118:7, line:1121:7>
  (NullStmt 0x9cabff0 <line:1119:32>)
  (ReturnStmt 0x9cac118 <line:1120:2, col:51>
    (CallExpr 0x9cac0f0 <col:9, col:51> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9cac010 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x9cac000 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9cac044 <col:22> 'const _CharT *' lvalue ParmVar 0x9c8e360 '__s' 'const _CharT *')
      (CallExpr 0x9cac0d0 <col:27, col:50> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cac080 <col:27, col:40> '<dependent type>' lvalue)
        (DeclRefExpr 0x9cac0b4 <col:47> 'const _CharT *' lvalue ParmVar 0x9c8e360 '__s' 'const _CharT *')))))


        basic_string<_CharT, _Traits, _Alloc> &assign(size_type __n, _CharT __c) (CompoundStmt 0x9cac288 </usr/include/c++/4.6/bits/basic_string.h:1134:7, col:70>
  (ReturnStmt 0x9cac278 <col:9, col:67>
    (CallExpr 0x9cac248 <col:16, col:67> '<dependent type>'
      (MemberExpr 0x9cac150 <col:16> '<bound member function type>' ->_M_replace_aux 0x9c95490
        (CXXThisExpr 0x9cac140 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXUnresolvedConstructExpr 0x9cac190 <col:31, col:42> 'size_type':'typename _CharT_alloc_type::size_type'
        (IntegerLiteral 0x9cac178 <col:41> 'int' 0))
      (CallExpr 0x9cac1f8 <col:45, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cac1c0 <col:45, col:51> '<dependent type>' lvalue
          (CXXThisExpr 0x9cac1b0 <col:45> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
      (DeclRefExpr 0x9cac214 <col:59> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9c8e430 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9cac22c <col:64> '_CharT' lvalue ParmVar 0x9c8e470 '__c' '_CharT'))))


        template <class _InputIterator> basic_string<_CharT, _Traits, _Alloc> &assign(_InputIterator __first, _InputIterator __last) (CompoundStmt 0x9cac3f8 </usr/include/c++/4.6/bits/basic_string.h:1147:9, col:74>
  (ReturnStmt 0x9cac3e8 <col:11, col:71>
    (CallExpr 0x9cac3b8 <col:18, col:71> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9cac2b0 <col:18, col:24> '<dependent type>' lvalue
        (CXXThisExpr 0x9cac2a0 <col:18> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0x9cac318 <col:32, col:42> '<dependent type>'
        (MemberExpr 0x9cac2f8 <col:32> '<bound member function type>' ->_M_ibegin 0x9c7fce0
          (CXXThisExpr 0x9cac2e8 <col:32> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
      (CallExpr 0x9cac368 <col:45, col:53> '<dependent type>'
        (MemberExpr 0x9cac348 <col:45> '<bound member function type>' ->_M_iend 0x9c7fd60
          (CXXThisExpr 0x9cac338 <col:45> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
      (DeclRefExpr 0x9cac384 <col:56> '_InputIterator' lvalue ParmVar 0x9c8e5a0 '__first' '_InputIterator')
      (DeclRefExpr 0x9cac39c <col:65> '_InputIterator' lvalue ParmVar 0x9c8e5e0 '__last' '_InputIterator'))))

;
        void insert(iterator __p, size_type __n, _CharT __c) (CompoundStmt 0x9cac4e8 </usr/include/c++/4.6/bits/basic_string.h:1174:7, col:45>
  (CallExpr 0x9cac4b8 <col:9, col:41> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9cac420 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0x9cac410 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9cac454 <col:23> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9c8e700 '__p' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
    (DeclRefExpr 0x9cac46c <col:28> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9c8e700 '__p' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
    (DeclRefExpr 0x9cac484 <col:33> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9c8e740 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (DeclRefExpr 0x9cac49c <col:38> '_CharT' lvalue ParmVar 0x9c8e780 '__c' '_CharT')))


        template <class _InputIterator> void insert(iterator __p, _InputIterator __beg, _InputIterator __end) (CompoundStmt 0x9cac5d8 </usr/include/c++/4.6/bits/basic_string.h:1190:9, col:50>
  (CallExpr 0x9cac5a8 <col:11, col:47> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9cac510 <col:11, col:17> '<dependent type>' lvalue
      (CXXThisExpr 0x9cac500 <col:11> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9cac544 <col:25> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9c8e910 '__p' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
    (DeclRefExpr 0x9cac55c <col:30> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9c8e910 '__p' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
    (DeclRefExpr 0x9cac574 <col:35> '_InputIterator' lvalue ParmVar 0x9c8e950 '__beg' '_InputIterator')
    (DeclRefExpr 0x9cac58c <col:42> '_InputIterator' lvalue ParmVar 0x9c8e990 '__end' '_InputIterator')))

;
        basic_string<_CharT, _Traits, _Alloc> &insert(size_type __pos1, const basic_string<_CharT, _Traits, _Alloc> &__str) (CompoundStmt 0x9cac758 </usr/include/c++/4.6/bits/basic_string.h:1220:7, col:73>
  (ReturnStmt 0x9cac748 <col:9, col:70>
    (CallExpr 0x9cac718 <col:16, col:70> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9cac600 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9cac5f0 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9cac634 <col:29> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9c8eaf0 '__pos1' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9cac64c <col:37> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9c8eb40 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')
      (CXXUnresolvedConstructExpr 0x9cac688 <col:44, col:55> 'size_type':'typename _CharT_alloc_type::size_type'
        (IntegerLiteral 0x9cac670 <col:54> 'int' 0))
      (CallExpr 0x9cac6f8 <col:58, col:69> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cac6c0 <col:58, col:64> '<dependent type>' lvalue
          (DeclRefExpr 0x9cac6a4 <col:58> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9c8eb40 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))


        basic_string<_CharT, _Traits, _Alloc> &insert(size_type __pos1, const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos2, size_type __n) (CompoundStmt 0x9caca40 </usr/include/c++/4.6/bits/basic_string.h:1243:7, line:1245:38>
  (ReturnStmt 0x9caca30 <line:1243:9, line:1245:35>
    (CallExpr 0x9caca08 <line:1243:16, line:1245:35> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9cac780 <line:1243:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9cac770 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9cac7b4 <col:29> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9c8ec50 '__pos1' 'size_type':'typename _CharT_alloc_type::size_type')
      (CXXOperatorCallExpr 0x9cac938 <col:37, line:1244:55> '<dependent type>'
        (UnresolvedLookupExpr 0x9cac900 <col:8, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0)
        (CallExpr 0x9cac820 <line:1243:37, col:51> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9cac7e8 <col:37, col:43> '<dependent type>' lvalue
            (DeclRefExpr 0x9cac7cc <col:37> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9c8eca0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
        (CallExpr 0x9cac8d8 <line:1244:10, col:55> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9cac858 <col:10, col:16> '<dependent type>' lvalue
            (DeclRefExpr 0x9cac83c <col:10> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9c8eca0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
          (DeclRefExpr 0x9cac88c <col:25> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9c8ece0 '__pos2' 'size_type':'typename _CharT_alloc_type::size_type')
          (StringLiteral 0x9cac8a4 <col:33> 'const char [21]' lvalue "basic_string::insert")))
      (CallExpr 0x9cac9e0 <line:1245:8, col:34> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cac978 <col:8, col:14> '<dependent type>' lvalue
          (DeclRefExpr 0x9cac95c <col:8> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9c8eca0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x9cac9ac <col:23> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9c8ece0 '__pos2' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9cac9c4 <col:31> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9c8ed20 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))))


        basic_string<_CharT, _Traits, _Alloc> &insert(size_type __pos, const _CharT *__s, size_type __n);
        basic_string<_CharT, _Traits, _Alloc> &insert(size_type __pos, const _CharT *__s) (CompoundStmt 0x9cacba8 </usr/include/c++/4.6/bits/basic_string.h:1283:7, line:1286:7>
  (NullStmt 0x9caca58 <line:1284:32>)
  (ReturnStmt 0x9cacb98 <line:1285:2, col:58>
    (CallExpr 0x9cacb70 <col:9, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9caca78 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x9caca68 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9cacaac <col:22> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9c8f030 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9cacac4 <col:29> 'const _CharT *' lvalue ParmVar 0x9c8f080 '__s' 'const _CharT *')
      (CallExpr 0x9cacb50 <col:34, col:57> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cacb00 <col:34, col:47> '<dependent type>' lvalue)
        (DeclRefExpr 0x9cacb34 <col:54> 'const _CharT *' lvalue ParmVar 0x9c8f080 '__s' 'const _CharT *')))))


        basic_string<_CharT, _Traits, _Alloc> &insert(size_type __pos, size_type __n, _CharT __c) (CompoundStmt 0x9cacd40 </usr/include/c++/4.6/bits/basic_string.h:1306:7, line:1307:35>
  (ReturnStmt 0x9cacd30 <line:1306:9, line:1307:32>
    (CallExpr 0x9cacd00 <line:1306:16, line:1307:32> '<dependent type>'
      (MemberExpr 0x9cacbd0 <line:1306:16> '<bound member function type>' ->_M_replace_aux 0x9c95490
        (CXXThisExpr 0x9cacbc0 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0x9cacc68 <col:31, col:69> '<dependent type>'
        (MemberExpr 0x9cacc00 <col:31> '<bound member function type>' ->_M_check 0x9c7ff40
          (CXXThisExpr 0x9cacbf0 <col:31> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x9cacc20 <col:40> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9c8f190 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (StringLiteral 0x9cacc38 <col:47> 'const char [21]' lvalue "basic_string::insert"))
      (CXXUnresolvedConstructExpr 0x9caccb0 <line:1307:10, col:21> 'size_type':'typename _CharT_alloc_type::size_type'
        (IntegerLiteral 0x9cacc98 <col:20> 'int' 0))
      (DeclRefExpr 0x9cacccc <col:24> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9c8f1d0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9cacce4 <col:29> '_CharT' lvalue ParmVar 0x9c8f210 '__c' '_CharT'))))


        iterator insert(iterator __p, _CharT __c) (CompoundStmt 0x9cad158 </usr/include/c++/4.6/bits/basic_string.h:1323:7, line:1329:7>
  (NullStmt 0x9cacd58 <line:1324:66>)
  (DeclStmt 0x9cace70 <line:1325:2, col:43>
    0x9cacd70 "const size_type __pos =
      (CXXOperatorCallExpr 0x9cace48 <col:26, col:42> '<dependent type>'
        (UnresolvedLookupExpr 0x9cace10 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
        (DeclRefExpr 0x9cacda4 <col:26> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9c8f350 '__p' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (CallExpr 0x9cacdf0 <col:32, col:42> '<dependent type>'
          (MemberExpr 0x9cacdd0 <col:32> '<bound member function type>' ->_M_ibegin 0x9c7fce0
            (CXXThisExpr 0x9cacdc0 <col:32> 'basic_string<_CharT, _Traits, _Alloc> *' this))))")
  (CallExpr 0x9cacf60 <line:1326:2, col:55> '<dependent type>'
    (MemberExpr 0x9cace90 <col:2> '<bound member function type>' ->_M_replace_aux 0x9c95490
      (CXXThisExpr 0x9cace80 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9caceb0 <col:17> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9cacd70 '__pos' 'const size_type':'const typename _CharT_alloc_type::size_type')
    (CXXUnresolvedConstructExpr 0x9cacee8 <col:24, col:35> 'size_type':'typename _CharT_alloc_type::size_type'
      (IntegerLiteral 0x9caced0 <col:34> 'int' 0))
    (CXXUnresolvedConstructExpr 0x9cacf28 <col:38, col:49> 'size_type':'typename _CharT_alloc_type::size_type'
      (IntegerLiteral 0x9cacf10 <col:48> 'int' 1))
    (DeclRefExpr 0x9cacf44 <col:52> '_CharT' lvalue ParmVar 0x9c8f390 '__c' '_CharT'))
  (CallExpr 0x9cad018 <line:1327:2, col:26> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9cacfe0 <col:2, col:12> '<dependent type>' lvalue
      (CallExpr 0x9cacfc0 <col:2, col:9> '<dependent type>'
        (MemberExpr 0x9cacfa0 <col:2> '<bound member function type>' ->_M_rep 0x9c7fc30
          (CXXThisExpr 0x9cacf90 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this)))))
  (ReturnStmt 0x9cad148 <line:1328:2, col:35>
    (CXXUnresolvedConstructExpr 0x9cad128 <col:9, col:35> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'
      (CXXOperatorCallExpr 0x9cad100 <col:18, col:30> '<dependent type>'
        (UnresolvedLookupExpr 0x9cad0c8 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0)
        (CallExpr 0x9cad090 <col:18, col:26> '<dependent type>'
          (UnresolvedMemberExpr 0x9cad050 <col:18> '<bound member function type>' lvalue))
        (DeclRefExpr 0x9cad0ac <col:30> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9cacd70 '__pos' 'const size_type':'const typename _CharT_alloc_type::size_type')))))


        basic_string<_CharT, _Traits, _Alloc> &erase(size_type __pos = (IntegerLiteral 0x9c9d708 </usr/include/c++/4.6/bits/basic_string.h:1346:31> 'int' 0)
, size_type __n = (DeclRefExpr 0x9c9d720 </usr/include/c++/4.6/bits/basic_string.h:1346:50> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9c7f920 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) (CompoundStmt 0x9cad378 </usr/include/c++/4.6/bits/basic_string.h:1347:7, line:1351:7>
  (CallExpr 0x9cad318 <line:1348:2, line:1349:39> '<dependent type>'
    (MemberExpr 0x9cad190 <line:1348:2> '<bound member function type>' ->_M_mutate 0x9c83f20
      (CXXThisExpr 0x9cad180 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (CallExpr 0x9cad228 <col:12, col:49> '<dependent type>'
      (MemberExpr 0x9cad1c0 <col:12> '<bound member function type>' ->_M_check 0x9c7ff40
        (CXXThisExpr 0x9cad1b0 <col:12> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9cad1e0 <col:21> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9c8f4a0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (StringLiteral 0x9cad1f8 <col:28> 'const char [20]' lvalue "basic_string::erase"))
    (CallExpr 0x9cad2b0 <line:1349:5, col:24> '<dependent type>'
      (MemberExpr 0x9cad260 <col:5> '<bound member function type>' ->_M_limit 0x9c82c40
        (CXXThisExpr 0x9cad250 <col:5> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9cad280 <col:14> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9c8f4a0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9cad298 <col:21> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9c8f4e0 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
    (CXXUnresolvedConstructExpr 0x9cad2f8 <col:27, col:38> 'size_type':'typename _CharT_alloc_type::size_type'
      (IntegerLiteral 0x9cad2e0 <col:37> 'int' 0)))
  (ReturnStmt 0x9cad368 <line:1350:2, col:10>
    (UnaryOperator 0x9cad350 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9cad340 <col:10> 'basic_string<_CharT, _Traits, _Alloc> *' this))))


        iterator erase(iterator __position) (CompoundStmt 0x9cad778 </usr/include/c++/4.6/bits/basic_string.h:1363:7, line:1370:7>
  (NullStmt 0x9cad390 <line:1365:32>)
  (DeclStmt 0x9cad4b0 <line:1366:2, col:50>
    0x9cad3b0 "const size_type __pos =
      (CXXOperatorCallExpr 0x9cad488 <col:26, col:49> '<dependent type>'
        (UnresolvedLookupExpr 0x9cad450 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
        (DeclRefExpr 0x9cad3e4 <col:26> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9c8f5f0 '__position' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (CallExpr 0x9cad430 <col:39, col:49> '<dependent type>'
          (MemberExpr 0x9cad410 <col:39> '<bound member function type>' ->_M_ibegin 0x9c7fce0
            (CXXThisExpr 0x9cad400 <col:39> 'basic_string<_CharT, _Traits, _Alloc> *' this))))")
  (CallExpr 0x9cad588 <line:1367:2, col:45> '<dependent type>'
    (MemberExpr 0x9cad4d0 <col:2> '<bound member function type>' ->_M_mutate 0x9c83f20
      (CXXThisExpr 0x9cad4c0 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9cad4f0 <col:12> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9cad3b0 '__pos' 'const size_type':'const typename _CharT_alloc_type::size_type')
    (CXXUnresolvedConstructExpr 0x9cad528 <col:19, col:30> 'size_type':'typename _CharT_alloc_type::size_type'
      (IntegerLiteral 0x9cad510 <col:29> 'int' 1))
    (CXXUnresolvedConstructExpr 0x9cad568 <col:33, col:44> 'size_type':'typename _CharT_alloc_type::size_type'
      (IntegerLiteral 0x9cad550 <col:43> 'int' 0)))
  (CallExpr 0x9cad638 <line:1368:2, col:26> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9cad600 <col:2, col:12> '<dependent type>' lvalue
      (CallExpr 0x9cad5e0 <col:2, col:9> '<dependent type>'
        (MemberExpr 0x9cad5c0 <col:2> '<bound member function type>' ->_M_rep 0x9c7fc30
          (CXXThisExpr 0x9cad5b0 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this)))))
  (ReturnStmt 0x9cad768 <line:1369:2, col:35>
    (CXXUnresolvedConstructExpr 0x9cad748 <col:9, col:35> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'
      (CXXOperatorCallExpr 0x9cad720 <col:18, col:30> '<dependent type>'
        (UnresolvedLookupExpr 0x9cad6e8 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0)
        (CallExpr 0x9cad6b0 <col:18, col:26> '<dependent type>'
          (UnresolvedMemberExpr 0x9cad670 <col:18> '<bound member function type>' lvalue))
        (DeclRefExpr 0x9cad6cc <col:30> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9cad3b0 '__pos' 'const size_type':'const typename _CharT_alloc_type::size_type')))))


        iterator erase(iterator __first, iterator __last);
        basic_string<_CharT, _Traits, _Alloc> &replace(size_type __pos, size_type __n, const basic_string<_CharT, _Traits, _Alloc> &__str) (CompoundStmt 0x9cad938 </usr/include/c++/4.6/bits/basic_string.h:1402:7, col:74>
  (ReturnStmt 0x9cad928 <col:9, col:71>
    (CallExpr 0x9cad8f8 <col:16, col:71> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9cad7b0 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9cad7a0 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9cad7e4 <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9c8f850 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9cad7fc <col:37> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9c8f890 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x9cad868 <col:42, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cad830 <col:42, col:48> '<dependent type>' lvalue
          (DeclRefExpr 0x9cad814 <col:42> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9c8f8e0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (CallExpr 0x9cad8d8 <col:59, col:70> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cad8a0 <col:59, col:65> '<dependent type>' lvalue
          (DeclRefExpr 0x9cad884 <col:59> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9c8f8e0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))


        basic_string<_CharT, _Traits, _Alloc> &replace(size_type __pos1, size_type __n1, const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos2, size_type __n2) (CompoundStmt 0x9cadc40 </usr/include/c++/4.6/bits/basic_string.h:1425:7, line:1427:40>
  (ReturnStmt 0x9cadc30 <line:1425:9, line:1427:37>
    (CallExpr 0x9cadc00 <line:1425:16, line:1427:37> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9cad960 <line:1425:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9cad950 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9cad994 <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9c8fa20 '__pos1' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9cad9ac <col:38> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9c8fa60 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
      (CXXOperatorCallExpr 0x9cadb30 <col:44, line:1426:57> '<dependent type>'
        (UnresolvedLookupExpr 0x9cadaf8 <col:9, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0)
        (CallExpr 0x9cada18 <line:1425:44, col:58> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9cad9e0 <col:44, col:50> '<dependent type>' lvalue
            (DeclRefExpr 0x9cad9c4 <col:44> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9c8fab0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
        (CallExpr 0x9cadad0 <line:1426:11, col:57> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9cada50 <col:11, col:17> '<dependent type>' lvalue
            (DeclRefExpr 0x9cada34 <col:11> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9c8fab0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
          (DeclRefExpr 0x9cada84 <col:26> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9c8faf0 '__pos2' 'size_type':'typename _CharT_alloc_type::size_type')
          (StringLiteral 0x9cada9c <col:34> 'const char [22]' lvalue "basic_string::replace")))
      (CallExpr 0x9cadbd8 <line:1427:9, col:36> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cadb70 <col:9, col:15> '<dependent type>' lvalue
          (DeclRefExpr 0x9cadb54 <col:9> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9c8fab0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x9cadba4 <col:24> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9c8faf0 '__pos2' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9cadbbc <col:32> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9c8fb30 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')))))


        basic_string<_CharT, _Traits, _Alloc> &replace(size_type __pos, size_type __n1, const _CharT *__s, size_type __n2);
        basic_string<_CharT, _Traits, _Alloc> &replace(size_type __pos, size_type __n1, const _CharT *__s) (CompoundStmt 0x9caddc8 </usr/include/c++/4.6/bits/basic_string.h:1467:7, line:1470:7>
  (NullStmt 0x9cadc58 <line:1468:32>)
  (ReturnStmt 0x9caddb8 <line:1469:2, col:65>
    (CallExpr 0x9cadd88 <col:9, col:65> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9cadc78 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x9cadc68 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9cadcac <col:23> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9c93760 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9cadcc4 <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9c937a0 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9cadcdc <col:36> 'const _CharT *' lvalue ParmVar 0x9c937f0 '__s' 'const _CharT *')
      (CallExpr 0x9cadd68 <col:41, col:64> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cadd18 <col:41, col:54> '<dependent type>' lvalue)
        (DeclRefExpr 0x9cadd4c <col:61> 'const _CharT *' lvalue ParmVar 0x9c937f0 '__s' 'const _CharT *')))))


        basic_string<_CharT, _Traits, _Alloc> &replace(size_type __pos, size_type __n1, size_type __n2, _CharT __c) (CompoundStmt 0x9cadfb0 </usr/include/c++/4.6/bits/basic_string.h:1490:7, line:1491:45>
  (ReturnStmt 0x9cadfa0 <line:1490:9, line:1491:42>
    (CallExpr 0x9cadf70 <line:1490:16, line:1491:42> '<dependent type>'
      (MemberExpr 0x9caddf0 <line:1490:16> '<bound member function type>' ->_M_replace_aux 0x9c95490
        (CXXThisExpr 0x9cadde0 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0x9cade90 <col:31, col:70> '<dependent type>'
        (MemberExpr 0x9cade20 <col:31> '<bound member function type>' ->_M_check 0x9c7ff40
          (CXXThisExpr 0x9cade10 <col:31> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x9cade40 <col:40> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9c93930 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (StringLiteral 0x9cade58 <col:47> 'const char [22]' lvalue "basic_string::replace"))
      (CallExpr 0x9cadf18 <line:1491:10, col:30> '<dependent type>'
        (MemberExpr 0x9cadec8 <col:10> '<bound member function type>' ->_M_limit 0x9c82c40
          (CXXThisExpr 0x9cadeb8 <col:10> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x9cadee8 <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9c93930 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9cadf00 <col:26> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9c93970 '__n1' 'size_type':'typename _CharT_alloc_type::size_type'))
      (DeclRefExpr 0x9cadf3c <col:33> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9c939b0 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9cadf54 <col:39> '_CharT' lvalue ParmVar 0x9c939f0 '__c' '_CharT'))))


        basic_string<_CharT, _Traits, _Alloc> &replace(iterator __i1, iterator __i2, const basic_string<_CharT, _Traits, _Alloc> &__str) (CompoundStmt 0x9cae160 </usr/include/c++/4.6/bits/basic_string.h:1508:7, col:74>
  (ReturnStmt 0x9cae150 <col:9, col:71>
    (CallExpr 0x9cae120 <col:16, col:71> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9cadfd8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9cadfc8 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9cae00c <col:30> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9c93b30 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
      (DeclRefExpr 0x9cae024 <col:36> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9c93b70 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
      (CallExpr 0x9cae090 <col:42, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cae058 <col:42, col:48> '<dependent type>' lvalue
          (DeclRefExpr 0x9cae03c <col:42> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9c93bc0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (CallExpr 0x9cae100 <col:59, col:70> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cae0c8 <col:59, col:65> '<dependent type>' lvalue
          (DeclRefExpr 0x9cae0ac <col:59> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9c93bc0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))


        basic_string<_CharT, _Traits, _Alloc> &replace(iterator __i1, iterator __i2, const _CharT *__s, size_type __n) (CompoundStmt 0x9cae398 </usr/include/c++/4.6/bits/basic_string.h:1526:7, line:1530:7>
  (NullStmt 0x9cae178 <line:1528:27>)
  (ReturnStmt 0x9cae388 <line:1529:2, col:64>
    (CallExpr 0x9cae358 <col:9, col:64> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9cae198 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x9cae188 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXOperatorCallExpr 0x9cae270 <col:23, col:40> '<dependent type>'
        (UnresolvedLookupExpr 0x9cae238 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
        (DeclRefExpr 0x9cae1cc <col:23> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9c93d00 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (CallExpr 0x9cae218 <col:30, col:40> '<dependent type>'
          (MemberExpr 0x9cae1f8 <col:30> '<bound member function type>' ->_M_ibegin 0x9c7fce0
            (CXXThisExpr 0x9cae1e8 <col:30> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CXXOperatorCallExpr 0x9cae300 <col:43, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x9cae2c8 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
        (DeclRefExpr 0x9cae294 <col:43> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9c93d40 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0x9cae2ac <col:50> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9c93d00 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'))
      (DeclRefExpr 0x9cae324 <col:56> 'const _CharT *' lvalue ParmVar 0x9c93d90 '__s' 'const _CharT *')
      (DeclRefExpr 0x9cae33c <col:61> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9c93dd0 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))))


        basic_string<_CharT, _Traits, _Alloc> &replace(iterator __i1, iterator __i2, const _CharT *__s) (CompoundStmt 0x9cae520 </usr/include/c++/4.6/bits/basic_string.h:1547:7, line:1550:7>
  (NullStmt 0x9cae3b0 <line:1548:32>)
  (ReturnStmt 0x9cae510 <line:1549:2, col:64>
    (CallExpr 0x9cae4e0 <col:9, col:64> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9cae3d0 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x9cae3c0 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9cae404 <col:23> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9c93f10 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
      (DeclRefExpr 0x9cae41c <col:29> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9c93f50 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
      (DeclRefExpr 0x9cae434 <col:35> 'const _CharT *' lvalue ParmVar 0x9c93fa0 '__s' 'const _CharT *')
      (CallExpr 0x9cae4c0 <col:40, col:63> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cae470 <col:40, col:53> '<dependent type>' lvalue)
        (DeclRefExpr 0x9cae4a4 <col:60> 'const _CharT *' lvalue ParmVar 0x9c93fa0 '__s' 'const _CharT *')))))


        basic_string<_CharT, _Traits, _Alloc> &replace(iterator __i1, iterator __i2, size_type __n, _CharT __c) (CompoundStmt 0x9cae740 </usr/include/c++/4.6/bits/basic_string.h:1568:7, line:1572:7>
  (NullStmt 0x9cae538 <line:1570:27>)
  (ReturnStmt 0x9cae730 <line:1571:2, col:65>
    (CallExpr 0x9cae700 <col:9, col:65> '<dependent type>'
      (MemberExpr 0x9cae558 <col:9> '<bound member function type>' ->_M_replace_aux 0x9c95490
        (CXXThisExpr 0x9cae548 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXOperatorCallExpr 0x9cae618 <col:24, col:41> '<dependent type>'
        (UnresolvedLookupExpr 0x9cae5e0 <col:29, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
        (DeclRefExpr 0x9cae578 <col:24> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9c940e0 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (CallExpr 0x9cae5c0 <col:31, col:41> '<dependent type>'
          (MemberExpr 0x9cae5a0 <col:31> '<bound member function type>' ->_M_ibegin 0x9c7fce0
            (CXXThisExpr 0x9cae590 <col:31> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CXXOperatorCallExpr 0x9cae6a8 <col:44, col:51> '<dependent type>'
        (UnresolvedLookupExpr 0x9cae670 <col:49, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
        (DeclRefExpr 0x9cae63c <col:44> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9c94120 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0x9cae654 <col:51> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9c940e0 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'))
      (DeclRefExpr 0x9cae6cc <col:57> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9c94160 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9cae6e4 <col:62> '_CharT' lvalue ParmVar 0x9c941a0 '__c' '_CharT'))))


        template <class _InputIterator> basic_string<_CharT, _Traits, _Alloc> &replace(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2) (CompoundStmt 0x9caea40 </usr/include/c++/4.6/bits/basic_string.h:1592:9, line:1598:2>
  (NullStmt 0x9cae758 <line:1594:29>)
  (NullStmt 0x9cae768 <line:1595:46>)
  (DeclStmt 0x9cae910 <line:1596:4, col:72>
    0x9cae8e0 "typedef typename std::__is_integer<_InputIterator>::__type _Integral")
  (ReturnStmt 0x9caea30 <line:1597:4, col:66>
    (CallExpr 0x9caea00 <col:11, col:66> '<dependent type>'
      (UnresolvedMemberExpr 0x9cae930 <col:11> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9cae970 <col:31> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9c94330 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
      (DeclRefExpr 0x9cae988 <col:37> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9c94370 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
      (DeclRefExpr 0x9cae9a0 <col:43> '_InputIterator' lvalue ParmVar 0x9c943b0 '__k1' '_InputIterator')
      (DeclRefExpr 0x9cae9b8 <col:49> '_InputIterator' lvalue ParmVar 0x9c943f0 '__k2' '_InputIterator')
      (CXXUnresolvedConstructExpr 0x9cae9e8 <col:55, col:65> '_Integral':'typename std::__is_integer<_InputIterator>::__type'))))

;
        basic_string<_CharT, _Traits, _Alloc> &replace(iterator __i1, iterator __i2, _CharT *__k1, _CharT *__k2) (CompoundStmt 0x9cb10e8 </usr/include/c++/4.6/bits/basic_string.h:1604:7, line:1610:7>
  (NullStmt 0x9caea60 <line:1606:27>)
  (NullStmt 0x9caea70 <line:1607:44>)
  (ReturnStmt 0x9cb10d8 <line:1608:2, line:1609:26>
    (CallExpr 0x9cb10a8 <line:1608:9, line:1609:26> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9caea90 <line:1608:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x9caea80 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXOperatorCallExpr 0x9caeb68 <col:23, col:40> '<dependent type>'
        (UnresolvedLookupExpr 0x9caeb30 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
        (DeclRefExpr 0x9caeac4 <col:23> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9c94550 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (CallExpr 0x9caeb10 <col:30, col:40> '<dependent type>'
          (MemberExpr 0x9caeaf0 <col:30> '<bound member function type>' ->_M_ibegin 0x9c7fce0
            (CXXThisExpr 0x9caeae0 <col:30> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CXXOperatorCallExpr 0x9cb0fd8 <col:43, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x9caebc0 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
        (DeclRefExpr 0x9caeb8c <col:43> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9c94590 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0x9caeba4 <col:50> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9c94550 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'))
      (DeclRefExpr 0x9cb0ffc <line:1609:9> '_CharT *' lvalue ParmVar 0x9c945e0 '__k1' '_CharT *')
      (CXXOperatorCallExpr 0x9cb1080 <col:15, col:22> '<dependent type>'
        (UnresolvedLookupExpr 0x9cb1048 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
        (DeclRefExpr 0x9cb1014 <col:15> '_CharT *' lvalue ParmVar 0x9c94630 '__k2' '_CharT *')
        (DeclRefExpr 0x9cb102c <col:22> '_CharT *' lvalue ParmVar 0x9c945e0 '__k1' '_CharT *')))))


        basic_string<_CharT, _Traits, _Alloc> &replace(iterator __i1, iterator __i2, const _CharT *__k1, const _CharT *__k2) (CompoundStmt 0x9cb13b0 </usr/include/c++/4.6/bits/basic_string.h:1615:7, line:1621:7>
  (NullStmt 0x9cb1108 <line:1617:27>)
  (NullStmt 0x9cb1118 <line:1618:44>)
  (ReturnStmt 0x9cb13a0 <line:1619:2, line:1620:26>
    (CallExpr 0x9cb1370 <line:1619:9, line:1620:26> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9cb1138 <line:1619:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x9cb1128 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXOperatorCallExpr 0x9cb1210 <col:23, col:40> '<dependent type>'
        (UnresolvedLookupExpr 0x9cb11d8 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
        (DeclRefExpr 0x9cb116c <col:23> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9c94770 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (CallExpr 0x9cb11b8 <col:30, col:40> '<dependent type>'
          (MemberExpr 0x9cb1198 <col:30> '<bound member function type>' ->_M_ibegin 0x9c7fce0
            (CXXThisExpr 0x9cb1188 <col:30> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CXXOperatorCallExpr 0x9cb12a0 <col:43, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x9cb1268 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
        (DeclRefExpr 0x9cb1234 <col:43> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9c947b0 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0x9cb124c <col:50> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9c94770 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'))
      (DeclRefExpr 0x9cb12c4 <line:1620:9> 'const _CharT *' lvalue ParmVar 0x9c94800 '__k1' 'const _CharT *')
      (CXXOperatorCallExpr 0x9cb1348 <col:15, col:22> '<dependent type>'
        (UnresolvedLookupExpr 0x9cb1310 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
        (DeclRefExpr 0x9cb12dc <col:15> 'const _CharT *' lvalue ParmVar 0x9c94850 '__k2' 'const _CharT *')
        (DeclRefExpr 0x9cb12f4 <col:22> 'const _CharT *' lvalue ParmVar 0x9c94800 '__k1' 'const _CharT *')))))


        basic_string<_CharT, _Traits, _Alloc> &replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2) (CompoundStmt 0x9cb16d0 </usr/include/c++/4.6/bits/basic_string.h:1625:7, line:1631:7>
  (NullStmt 0x9cb13d0 <line:1627:27>)
  (NullStmt 0x9cb13e0 <line:1628:44>)
  (ReturnStmt 0x9cb16c0 <line:1629:2, line:1630:33>
    (CallExpr 0x9cb1690 <line:1629:9, line:1630:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9cb1400 <line:1629:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x9cb13f0 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXOperatorCallExpr 0x9cb14d8 <col:23, col:40> '<dependent type>'
        (UnresolvedLookupExpr 0x9cb14a0 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
        (DeclRefExpr 0x9cb1434 <col:23> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9c94990 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (CallExpr 0x9cb1480 <col:30, col:40> '<dependent type>'
          (MemberExpr 0x9cb1460 <col:30> '<bound member function type>' ->_M_ibegin 0x9c7fce0
            (CXXThisExpr 0x9cb1450 <col:30> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CXXOperatorCallExpr 0x9cb1568 <col:43, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x9cb1530 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
        (DeclRefExpr 0x9cb14fc <col:43> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9c949d0 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0x9cb1514 <col:50> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9c94990 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'))
      (CallExpr 0x9cb15e0 <line:1630:9, col:19> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cb15a8 <col:9, col:14> '<dependent type>' lvalue
          (DeclRefExpr 0x9cb158c <col:9> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9c94a10 '__k1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')))
      (CXXOperatorCallExpr 0x9cb1668 <col:22, col:29> '<dependent type>'
        (UnresolvedLookupExpr 0x9cb1630 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
        (DeclRefExpr 0x9cb15fc <col:22> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9c94a50 '__k2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0x9cb1614 <col:29> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9c94a10 '__k1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')))))


        basic_string<_CharT, _Traits, _Alloc> &replace(iterator __i1, iterator __i2, const_iterator __k1, const_iterator __k2) (CompoundStmt 0x9cb19f0 </usr/include/c++/4.6/bits/basic_string.h:1636:7, line:1642:7>
  (NullStmt 0x9cb16f0 <line:1638:27>)
  (NullStmt 0x9cb1700 <line:1639:44>)
  (ReturnStmt 0x9cb19e0 <line:1640:2, line:1641:33>
    (CallExpr 0x9cb19b0 <line:1640:9, line:1641:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9cb1720 <line:1640:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x9cb1710 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXOperatorCallExpr 0x9cb17f8 <col:23, col:40> '<dependent type>'
        (UnresolvedLookupExpr 0x9cb17c0 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
        (DeclRefExpr 0x9cb1754 <col:23> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9c94b90 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (CallExpr 0x9cb17a0 <col:30, col:40> '<dependent type>'
          (MemberExpr 0x9cb1780 <col:30> '<bound member function type>' ->_M_ibegin 0x9c7fce0
            (CXXThisExpr 0x9cb1770 <col:30> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CXXOperatorCallExpr 0x9cb1888 <col:43, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x9cb1850 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
        (DeclRefExpr 0x9cb181c <col:43> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9c94bd0 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0x9cb1834 <col:50> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9c94b90 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'))
      (CallExpr 0x9cb1900 <line:1641:9, col:19> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cb18c8 <col:9, col:14> '<dependent type>' lvalue
          (DeclRefExpr 0x9cb18ac <col:9> 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9c94c10 '__k1' 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >')))
      (CXXOperatorCallExpr 0x9cb1988 <col:22, col:29> '<dependent type>'
        (UnresolvedLookupExpr 0x9cb1950 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
        (DeclRefExpr 0x9cb191c <col:22> 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9c94c50 '__k2' 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0x9cb1934 <col:29> 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9c94c10 '__k1' 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >')))))


    private:
    private:
        template <class _Integer> basic_string<_CharT, _Traits, _Alloc> &_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n, _Integer __val, std::__true_type) (CompoundStmt 0x9cb1c08 </usr/include/c++/4.6/bits/basic_string.h:1668:9, col:79>
  (ReturnStmt 0x9cb1bf8 <col:11, col:76>
    (CallExpr 0x9cb1bc8 <col:18, col:76> '<dependent type>'
      (MemberExpr 0x9cb1a20 <col:18> '<bound member function type>' ->_M_replace_aux 0x9c95490
        (CXXThisExpr 0x9cb1a10 <col:18> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXOperatorCallExpr 0x9cb1ae0 <col:33, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x9cb1aa8 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
        (DeclRefExpr 0x9cb1a40 <col:33> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9c94e20 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (CallExpr 0x9cb1a88 <col:40, col:50> '<dependent type>'
          (MemberExpr 0x9cb1a68 <col:40> '<bound member function type>' ->_M_ibegin 0x9c7fce0
            (CXXThisExpr 0x9cb1a58 <col:40> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CXXOperatorCallExpr 0x9cb1b70 <col:53, col:60> '<dependent type>'
        (UnresolvedLookupExpr 0x9cb1b38 <col:58, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
        (DeclRefExpr 0x9cb1b04 <col:53> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9c94e60 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0x9cb1b1c <col:60> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9c94e20 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'))
      (DeclRefExpr 0x9cb1b94 <col:66> '_Integer' lvalue ParmVar 0x9c94ea0 '__n' '_Integer')
      (DeclRefExpr 0x9cb1bac <col:71> '_Integer' lvalue ParmVar 0x9c94ee0 '__val' '_Integer'))))

;
        template <class _InputIterator> basic_string<_CharT, _Traits, _Alloc> &_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2, std::__false_type);
        basic_string<_CharT, _Traits, _Alloc> &_M_replace_aux(size_type __pos1, size_type __n1, size_type __n2, _CharT __c);
        basic_string<_CharT, _Traits, _Alloc> &_M_replace_safe(size_type __pos1, size_type __n1, const _CharT *__s, size_type __n2);
        template <class _InIterator> static _CharT *_S_construct_aux(_InIterator __beg, _InIterator __end, const _Alloc &__a, std::__false_type) (CompoundStmt 0x9cb1e50 </usr/include/c++/4.6/bits/basic_string.h:1689:2, line:1692:2>
  (DeclStmt 0x9cb1d40 <line:1690:11, col:80>
    0x9cb1d10 "typedef typename iterator_traits<_InIterator>::iterator_category _Tag")
  (ReturnStmt 0x9cb1e40 <line:1691:11, col:56>
    (CallExpr 0x9cb1e10 <col:18, col:56> '<dependent type>'
      (UnresolvedLookupExpr 0x9cb1d50 <col:18> '<dependent type>' lvalue (no ADL) = '1' 0x9c98b50 0x9c98a20 0x9c98790 0x9c98500)
      (DeclRefExpr 0x9cb1d90 <col:31> '_InIterator' lvalue ParmVar 0x9c97c70 '__beg' '_InIterator')
      (DeclRefExpr 0x9cb1da8 <col:38> '_InIterator' lvalue ParmVar 0x9c97cb0 '__end' '_InIterator')
      (DeclRefExpr 0x9cb1dc0 <col:45> 'const _Alloc' lvalue ParmVar 0x9c97d00 '__a' 'const _Alloc &')
      (CXXUnresolvedConstructExpr 0x9cb1df8 <col:50, col:55> '_Tag':'typename iterator_traits<_InIterator>::iterator_category'))))

;
        template <class _Integer> static _CharT *_S_construct_aux(_Integer __beg, _Integer __end, const _Alloc &__a, std::__true_type) (CompoundStmt 0x9cb1f20 </usr/include/c++/4.6/bits/basic_string.h:1700:9, line:1701:22>
  (ReturnStmt 0x9cb1f10 <line:1700:11, line:1701:19>
    (CallExpr 0x9cb1ee8 <line:1700:18, line:1701:19> '<dependent type>'
      (DeclRefExpr 0x9cb1e68 <line:1700:18> '_CharT *(size_type, _CharT, const _Alloc &)' lvalue CXXMethod 0x9c98280 '_S_construct_aux_2' '_CharT *(size_type, _CharT, const _Alloc &)')
      (CXXStaticCastExpr 0x9cb1ea0 <col:37, col:65> 'size_type':'typename _CharT_alloc_type::size_type' static_cast<size_type> <Dependent>
        (DeclRefExpr 0x9cb1e80 <col:60> '_Integer' lvalue ParmVar 0x9c97f00 '__beg' '_Integer'))
      (DeclRefExpr 0x9cb1eb8 <line:1701:9> '_Integer' lvalue ParmVar 0x9c97f40 '__end' '_Integer')
      (DeclRefExpr 0x9cb1ed0 <col:16> 'const _Alloc' lvalue ParmVar 0x9c97f90 '__a' 'const _Alloc &'))))

;
        static _CharT *_S_construct_aux_2(size_type __req, _CharT __c, const _Alloc &__a) (CompoundStmt 0x9cb1ff8 </usr/include/c++/4.6/bits/basic_string.h:1705:7, col:47>
  (ReturnStmt 0x9cb1fe8 <col:9, col:44>
    (CallExpr 0x9cb1fc0 <col:16, col:44> '<dependent type>'
      (UnresolvedLookupExpr 0x9cb1f38 <col:16> '<dependent type>' lvalue (no ADL) = '1' 0x9c98b50 0x9c98a20 0x9c98790 0x9c98500)
      (DeclRefExpr 0x9cb1f78 <col:29> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9c98130 '__req' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9cb1f90 <col:36> '_CharT' lvalue ParmVar 0x9c98170 '__c' '_CharT')
      (DeclRefExpr 0x9cb1fa8 <col:41> 'const _Alloc' lvalue ParmVar 0x9c981c0 '__a' 'const _Alloc &'))))


        template <class _InIterator> static _CharT *_S_construct(_InIterator __beg, _InIterator __end, const _Alloc &__a) (CompoundStmt 0x9cb2240 </usr/include/c++/4.6/bits/basic_string.h:1710:2, line:1713:9>
  (DeclStmt 0x9cb2140 <line:1711:4, col:69>
    0x9cb2110 "typedef typename std::__is_integer<_InIterator>::__type _Integral")
  (ReturnStmt 0x9cb2230 <line:1712:4, col:58>
    (CallExpr 0x9cb2200 <col:11, col:58> '<dependent type>'
      (UnresolvedLookupExpr 0x9cb2150 <col:11> '<dependent type>' lvalue (no ADL) = '1' 0x9c980f0 0x9c97e60)
      (DeclRefExpr 0x9cb2188 <col:28> '_InIterator' lvalue ParmVar 0x9c98350 '__beg' '_InIterator')
      (DeclRefExpr 0x9cb21a0 <col:35> '_InIterator' lvalue ParmVar 0x9c98390 '__end' '_InIterator')
      (DeclRefExpr 0x9cb21b8 <col:42> 'const _Alloc' lvalue ParmVar 0x9c983e0 '__a' 'const _Alloc &')
      (CXXUnresolvedConstructExpr 0x9cb21e8 <col:47, col:57> '_Integral':'typename std::__is_integer<_InIterator>::__type'))))

;
        template <class _InIterator> static _CharT *_S_construct(_InIterator __beg, _InIterator __end, const _Alloc &__a, std::input_iterator_tag);
        template <class _FwdIterator> static _CharT *_S_construct(_FwdIterator __beg, _FwdIterator __end, const _Alloc &__a, std::forward_iterator_tag);
        static _CharT *_S_construct(size_type __req, _CharT __c, const _Alloc &__a);
    public:
    public:
        size_type copy(_CharT *__s, size_type __n, size_type __pos = (IntegerLiteral 0x9c9d738 </usr/include/c++/4.6/bits/basic_string.h:1745:58> 'int' 0)
) const;
        void swap(basic_string<_CharT, _Traits, _Alloc> &__s);
        const _CharT *c_str() const (CompoundStmt 0x9cb22d8 </usr/include/c++/4.6/bits/basic_string.h:1766:7, col:27>
  (ReturnStmt 0x9cb22c8 <col:9, col:24>
    (CallExpr 0x9cb22a8 <col:16, col:24> '<dependent type>'
      (UnresolvedMemberExpr 0x9cb2268 <col:16> '<bound member function type>' lvalue))))


        const _CharT *data() const (CompoundStmt 0x9cb2370 </usr/include/c++/4.6/bits/basic_string.h:1776:7, col:27>
  (ReturnStmt 0x9cb2360 <col:9, col:24>
    (CallExpr 0x9cb2340 <col:16, col:24> '<dependent type>'
      (UnresolvedMemberExpr 0x9cb2300 <col:16> '<bound member function type>' lvalue))))


        allocator_type get_allocator() const (CompoundStmt 0x9cb23c8 </usr/include/c++/4.6/bits/basic_string.h:1783:7, col:29>
  (ReturnStmt 0x9cb23b8 <col:9, col:16>
    (MemberExpr 0x9cb2398 <col:16> 'struct std::basic_string::_Alloc_hider' lvalue ->_M_dataplus 0x9c7fa00
      (CXXThisExpr 0x9cb2388 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))


        size_type find(const _CharT *__s, size_type __pos, size_type __n) const;
        size_type find(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos = (IntegerLiteral 0x9c9d750 </usr/include/c++/4.6/bits/basic_string.h:1810:57> 'int' 0)
) const (CompoundStmt 0x9cb2558 </usr/include/c++/4.6/bits/basic_string.h:1811:7, col:63>
  (ReturnStmt 0x9cb2548 <col:9, col:60>
    (CallExpr 0x9cb2520 <col:16, col:60> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9cb23f0 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9cb23e0 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0x9cb2478 <col:27, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cb2440 <col:27, col:33> '<dependent type>' lvalue
          (DeclRefExpr 0x9cb2424 <col:27> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9c99280 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (DeclRefExpr 0x9cb2494 <col:41> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9c992c0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x9cb2500 <col:48, col:59> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cb24c8 <col:48, col:54> '<dependent type>' lvalue
          (DeclRefExpr 0x9cb24ac <col:48> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9c99280 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))


        size_type find(const _CharT *__s, size_type __pos = (IntegerLiteral 0x9c9d768 </usr/include/c++/4.6/bits/basic_string.h:1824:49> 'int' 0)
) const (CompoundStmt 0x9cb26c0 </usr/include/c++/4.6/bits/basic_string.h:1825:7, line:1828:7>
  (NullStmt 0x9cb2570 <line:1826:32>)
  (ReturnStmt 0x9cb26b0 <line:1827:2, col:56>
    (CallExpr 0x9cb2688 <col:9, col:56> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9cb2590 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x9cb2580 <col:9> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9cb25c4 <col:20> 'const _CharT *' lvalue ParmVar 0x9c993e0 '__s' 'const _CharT *')
      (DeclRefExpr 0x9cb25dc <col:25> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9c99420 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x9cb2668 <col:32, col:55> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cb2618 <col:32, col:45> '<dependent type>' lvalue)
        (DeclRefExpr 0x9cb264c <col:52> 'const _CharT *' lvalue ParmVar 0x9c993e0 '__s' 'const _CharT *')))))


        size_type find(_CharT __c, size_type __pos = (IntegerLiteral 0x9c9d780 </usr/include/c++/4.6/bits/basic_string.h:1841:42> 'int' 0)
) const;
        size_type rfind(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos = (DeclRefExpr 0x9c9d798 </usr/include/c++/4.6/bits/basic_string.h:1854:58> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9c7f920 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const (CompoundStmt 0x9cb2850 </usr/include/c++/4.6/bits/basic_string.h:1855:7, col:64>
  (ReturnStmt 0x9cb2840 <col:9, col:61>
    (CallExpr 0x9cb2818 <col:16, col:61> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9cb26e8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9cb26d8 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0x9cb2770 <col:28, col:39> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cb2738 <col:28, col:34> '<dependent type>' lvalue
          (DeclRefExpr 0x9cb271c <col:28> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9c99690 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (DeclRefExpr 0x9cb278c <col:42> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9c996d0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x9cb27f8 <col:49, col:60> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cb27c0 <col:49, col:55> '<dependent type>' lvalue
          (DeclRefExpr 0x9cb27a4 <col:49> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9c99690 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))


        size_type rfind(const _CharT *__s, size_type __pos, size_type __n) const;
        size_type rfind(const _CharT *__s, size_type __pos = (DeclRefExpr 0x9c9d7b0 </usr/include/c++/4.6/bits/basic_string.h:1882:50> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9c7f920 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const (CompoundStmt 0x9cb29b8 </usr/include/c++/4.6/bits/basic_string.h:1883:7, line:1886:7>
  (NullStmt 0x9cb2868 <line:1884:32>)
  (ReturnStmt 0x9cb29a8 <line:1885:2, col:57>
    (CallExpr 0x9cb2980 <col:9, col:57> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9cb2888 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x9cb2878 <col:9> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9cb28bc <col:21> 'const _CharT *' lvalue ParmVar 0x9c99910 '__s' 'const _CharT *')
      (DeclRefExpr 0x9cb28d4 <col:26> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9c99950 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x9cb2960 <col:33, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cb2910 <col:33, col:46> '<dependent type>' lvalue)
        (DeclRefExpr 0x9cb2944 <col:53> 'const _CharT *' lvalue ParmVar 0x9c99910 '__s' 'const _CharT *')))))


        size_type rfind(_CharT __c, size_type __pos = (DeclRefExpr 0x9c9d7c8 </usr/include/c++/4.6/bits/basic_string.h:1899:43> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9c7f920 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const;
        size_type find_first_of(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos = (IntegerLiteral 0x9c9d7e0 </usr/include/c++/4.6/bits/basic_string.h:1912:66> 'int' 0)
) const (CompoundStmt 0x9cb2b48 </usr/include/c++/4.6/bits/basic_string.h:1913:7, col:72>
  (ReturnStmt 0x9cb2b38 <col:9, col:69>
    (CallExpr 0x9cb2b10 <col:16, col:69> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9cb29e0 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9cb29d0 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0x9cb2a68 <col:36, col:47> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cb2a30 <col:36, col:42> '<dependent type>' lvalue
          (DeclRefExpr 0x9cb2a14 <col:36> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9c9b820 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (DeclRefExpr 0x9cb2a84 <col:50> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9c9b860 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x9cb2af0 <col:57, col:68> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cb2ab8 <col:57, col:63> '<dependent type>' lvalue
          (DeclRefExpr 0x9cb2a9c <col:57> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9c9b820 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))


        size_type find_first_of(const _CharT *__s, size_type __pos, size_type __n) const;
        size_type find_first_of(const _CharT *__s, size_type __pos = (IntegerLiteral 0x9ca0608 </usr/include/c++/4.6/bits/basic_string.h:1940:58> 'int' 0)
) const (CompoundStmt 0x9cb2cb0 </usr/include/c++/4.6/bits/basic_string.h:1941:7, line:1944:7>
  (NullStmt 0x9cb2b60 <line:1942:32>)
  (ReturnStmt 0x9cb2ca0 <line:1943:2, col:65>
    (CallExpr 0x9cb2c78 <col:9, col:65> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9cb2b80 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x9cb2b70 <col:9> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9cb2bb4 <col:29> 'const _CharT *' lvalue ParmVar 0x9c9baa0 '__s' 'const _CharT *')
      (DeclRefExpr 0x9cb2bcc <col:34> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9c9bae0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x9cb2c58 <col:41, col:64> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cb2c08 <col:41, col:54> '<dependent type>' lvalue)
        (DeclRefExpr 0x9cb2c3c <col:61> 'const _CharT *' lvalue ParmVar 0x9c9baa0 '__s' 'const _CharT *')))))


        size_type find_first_of(_CharT __c, size_type __pos = (IntegerLiteral 0x9ca0620 </usr/include/c++/4.6/bits/basic_string.h:1959:51> 'int' 0)
) const (CompoundStmt 0x9cb2d78 </usr/include/c++/4.6/bits/basic_string.h:1960:7, col:40>
  (ReturnStmt 0x9cb2d68 <col:9, col:37>
    (CallExpr 0x9cb2d40 <col:16, col:37> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9cb2cd8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9cb2cc8 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9cb2d0c <col:27> '_CharT' lvalue ParmVar 0x9c9bbb0 '__c' '_CharT')
      (DeclRefExpr 0x9cb2d24 <col:32> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9c9bbf0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))))


        size_type find_last_of(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos = (DeclRefExpr 0x9ca0638 </usr/include/c++/4.6/bits/basic_string.h:1973:65> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9c7f920 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const (CompoundStmt 0x9cb2f08 </usr/include/c++/4.6/bits/basic_string.h:1974:7, col:71>
  (ReturnStmt 0x9cb2ef8 <col:9, col:68>
    (CallExpr 0x9cb2ed0 <col:16, col:68> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9cb2da0 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9cb2d90 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0x9cb2e28 <col:35, col:46> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cb2df0 <col:35, col:41> '<dependent type>' lvalue
          (DeclRefExpr 0x9cb2dd4 <col:35> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9c9bcd0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (DeclRefExpr 0x9cb2e44 <col:49> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9c9bd10 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x9cb2eb0 <col:56, col:67> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cb2e78 <col:56, col:62> '<dependent type>' lvalue
          (DeclRefExpr 0x9cb2e5c <col:56> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9c9bcd0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))


        size_type find_last_of(const _CharT *__s, size_type __pos, size_type __n) const;
        size_type find_last_of(const _CharT *__s, size_type __pos = (DeclRefExpr 0x9ca0650 </usr/include/c++/4.6/bits/basic_string.h:2001:57> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9c7f920 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const (CompoundStmt 0x9cb3070 </usr/include/c++/4.6/bits/basic_string.h:2002:7, line:2005:7>
  (NullStmt 0x9cb2f20 <line:2003:32>)
  (ReturnStmt 0x9cb3060 <line:2004:2, col:64>
    (CallExpr 0x9cb3038 <col:9, col:64> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9cb2f40 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x9cb2f30 <col:9> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9cb2f74 <col:28> 'const _CharT *' lvalue ParmVar 0x9c9bf50 '__s' 'const _CharT *')
      (DeclRefExpr 0x9cb2f8c <col:33> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9c9bf90 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x9cb3018 <col:40, col:63> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cb2fc8 <col:40, col:53> '<dependent type>' lvalue)
        (DeclRefExpr 0x9cb2ffc <col:60> 'const _CharT *' lvalue ParmVar 0x9c9bf50 '__s' 'const _CharT *')))))


        size_type find_last_of(_CharT __c, size_type __pos = (DeclRefExpr 0x9ca0668 </usr/include/c++/4.6/bits/basic_string.h:2020:50> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9c7f920 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const (CompoundStmt 0x9cb3138 </usr/include/c++/4.6/bits/basic_string.h:2021:7, col:41>
  (ReturnStmt 0x9cb3128 <col:9, col:38>
    (CallExpr 0x9cb3100 <col:16, col:38> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9cb3098 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9cb3088 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9cb30cc <col:28> '_CharT' lvalue ParmVar 0x9c9c060 '__c' '_CharT')
      (DeclRefExpr 0x9cb30e4 <col:33> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9c9c0a0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))))


        size_type find_first_not_of(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos = (IntegerLiteral 0x9ca0680 </usr/include/c++/4.6/bits/basic_string.h:2034:70> 'int' 0)
) const (CompoundStmt 0x9cb32c8 </usr/include/c++/4.6/bits/basic_string.h:2035:7, col:76>
  (ReturnStmt 0x9cb32b8 <col:9, col:73>
    (CallExpr 0x9cb3290 <col:16, col:73> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9cb3160 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9cb3150 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0x9cb31e8 <col:40, col:51> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cb31b0 <col:40, col:46> '<dependent type>' lvalue
          (DeclRefExpr 0x9cb3194 <col:40> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9c9c180 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (DeclRefExpr 0x9cb3204 <col:54> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9c9c1c0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x9cb3270 <col:61, col:72> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cb3238 <col:61, col:67> '<dependent type>' lvalue
          (DeclRefExpr 0x9cb321c <col:61> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9c9c180 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))


        size_type find_first_not_of(const _CharT *__s, size_type __pos, size_type __n) const;
        size_type find_first_not_of(const _CharT *__s, size_type __pos = (IntegerLiteral 0x9ca0698 </usr/include/c++/4.6/bits/basic_string.h:2063:62> 'int' 0)
) const (CompoundStmt 0x9cb3430 </usr/include/c++/4.6/bits/basic_string.h:2064:7, line:2067:7>
  (NullStmt 0x9cb32e0 <line:2065:32>)
  (ReturnStmt 0x9cb3420 <line:2066:2, col:69>
    (CallExpr 0x9cb33f8 <col:9, col:69> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9cb3300 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x9cb32f0 <col:9> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9cb3334 <col:33> 'const _CharT *' lvalue ParmVar 0x9c9c400 '__s' 'const _CharT *')
      (DeclRefExpr 0x9cb334c <col:38> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9c9c440 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x9cb33d8 <col:45, col:68> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cb3388 <col:45, col:58> '<dependent type>' lvalue)
        (DeclRefExpr 0x9cb33bc <col:65> 'const _CharT *' lvalue ParmVar 0x9c9c400 '__s' 'const _CharT *')))))


        size_type find_first_not_of(_CharT __c, size_type __pos = (IntegerLiteral 0x9ca06b0 </usr/include/c++/4.6/bits/basic_string.h:2080:55> 'int' 0)
) const;
        size_type find_last_not_of(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos = (DeclRefExpr 0x9ca06c8 </usr/include/c++/4.6/bits/basic_string.h:2093:69> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9c7f920 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const (CompoundStmt 0x9cb35c0 </usr/include/c++/4.6/bits/basic_string.h:2094:7, col:75>
  (ReturnStmt 0x9cb35b0 <col:9, col:72>
    (CallExpr 0x9cb3588 <col:16, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9cb3458 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9cb3448 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0x9cb34e0 <col:39, col:50> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cb34a8 <col:39, col:45> '<dependent type>' lvalue
          (DeclRefExpr 0x9cb348c <col:39> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9c9c630 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (DeclRefExpr 0x9cb34fc <col:53> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9c9c670 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x9cb3568 <col:60, col:71> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cb3530 <col:60, col:66> '<dependent type>' lvalue
          (DeclRefExpr 0x9cb3514 <col:60> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9c9c630 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))


        size_type find_last_not_of(const _CharT *__s, size_type __pos, size_type __n) const;
        size_type find_last_not_of(const _CharT *__s, size_type __pos = (DeclRefExpr 0x9ca06e0 </usr/include/c++/4.6/bits/basic_string.h:2122:61> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9c7f920 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const (CompoundStmt 0x9cb3728 </usr/include/c++/4.6/bits/basic_string.h:2123:7, line:2126:7>
  (NullStmt 0x9cb35d8 <line:2124:32>)
  (ReturnStmt 0x9cb3718 <line:2125:2, col:68>
    (CallExpr 0x9cb36f0 <col:9, col:68> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9cb35f8 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x9cb35e8 <col:9> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9cb362c <col:32> 'const _CharT *' lvalue ParmVar 0x9c9c8b0 '__s' 'const _CharT *')
      (DeclRefExpr 0x9cb3644 <col:37> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9c9c8f0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x9cb36d0 <col:44, col:67> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cb3680 <col:44, col:57> '<dependent type>' lvalue)
        (DeclRefExpr 0x9cb36b4 <col:64> 'const _CharT *' lvalue ParmVar 0x9c9c8b0 '__s' 'const _CharT *')))))


        size_type find_last_not_of(_CharT __c, size_type __pos = (DeclRefExpr 0x9ca06f8 </usr/include/c++/4.6/bits/basic_string.h:2139:54> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9c7f920 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const;
        basic_string<_CharT, _Traits, _Alloc> substr(size_type __pos = (IntegerLiteral 0x9ca0710 </usr/include/c++/4.6/bits/basic_string.h:2154:32> 'int' 0)
, size_type __n = (DeclRefExpr 0x9ca0728 </usr/include/c++/4.6/bits/basic_string.h:2154:51> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9c7f920 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const (CompoundStmt 0x9cb3860 </usr/include/c++/4.6/bits/basic_string.h:2155:7, line:2156:55>
  (ReturnStmt 0x9cb3850 <line:2155:9, line:2156:52>
    (CXXUnresolvedConstructExpr 0x9cb3828 <line:2155:16, line:2156:52> 'basic_string<_CharT, _Traits, _Alloc>'
      (UnaryOperator 0x9cb3758 <line:2155:29, col:30> '<dependent type>' prefix '*'
        (CXXThisExpr 0x9cb3748 <col:30> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0x9cb37e8 <line:2156:8, col:46> '<dependent type>'
        (MemberExpr 0x9cb3780 <col:8> '<bound member function type>' ->_M_check 0x9c7ff40
          (CXXThisExpr 0x9cb3770 <col:8> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x9cb37a0 <col:17> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9c9cad0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (StringLiteral 0x9cb37b8 <col:24> 'const char [21]' lvalue "basic_string::substr"))
      (DeclRefExpr 0x9cb380c <col:49> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9c9cb10 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))))


        int compare(const basic_string<_CharT, _Traits, _Alloc> &__str) const (CompoundStmt 0x9cb3e08 </usr/include/c++/4.6/bits/basic_string.h:2173:7, line:2182:7>
  (DeclStmt 0x9cb3920 <line:2174:2, col:39>
    0x9cb3880 "const size_type __size =
      (CallExpr 0x9cb3900 <col:27, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cb38c8 <col:27, col:33> '<dependent type>' lvalue
          (CXXThisExpr 0x9cb38b8 <col:27> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (DeclStmt 0x9cb39e8 <line:2175:2, col:40>
    0x9cb3940 "const size_type __osize =
      (CallExpr 0x9cb39c8 <col:28, col:39> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cb3990 <col:28, col:34> '<dependent type>' lvalue
          (DeclRefExpr 0x9cb3974 <col:28> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9c9cc30 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))")
  (DeclStmt 0x9cb3ae0 <line:2176:2, col:51>
    0x9cb3a00 "const size_type __len =
      (CallExpr 0x9cb3ab8 <col:26, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x9cb3a50 <col:26, col:31> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b76440 0x9b76b30)
        (DeclRefExpr 0x9cb3a88 <col:35> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9cb3880 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9cb3aa0 <col:43> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9cb3940 '__osize' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (DeclStmt 0x9cb3cb0 <line:2178:2, col:64>
    0x9cb3b00 "int __r =
      (CallExpr 0x9cb3c88 <col:12, col:63> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cb3b58 <col:12, col:25> '<dependent type>' lvalue)
        (CallExpr 0x9cb3be0 <col:33, col:41> '<dependent type>'
          (UnresolvedMemberExpr 0x9cb3ba0 <col:33> '<bound member function type>' lvalue))
        (CallExpr 0x9cb3c50 <col:44, col:55> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9cb3c18 <col:44, col:50> '<dependent type>' lvalue
            (DeclRefExpr 0x9cb3bfc <col:44> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9c9cc30 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
        (DeclRefExpr 0x9cb3c6c <col:58> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9cb3a00 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (IfStmt 0x9cb3db0 <line:2179:2, line:2180:36>
    <<<NULL>>>
    (UnaryOperator 0x9cb3cf8 <line:2179:6, col:7> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9cb3ce8 <col:7> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0x9cb3cd8 <col:7> 'int' <LValueToRValue>
          (DeclRefExpr 0x9cb3cc0 <col:7> 'int' lvalue Var 0x9cb3b00 '__r' 'int'))))
    (BinaryOperator 0x9cb3d98 <line:2180:4, col:36> '<dependent type>' '='
      (DeclRefExpr 0x9cb3d0c <col:4> 'int' lvalue Var 0x9cb3b00 '__r' 'int')
      (CallExpr 0x9cb3d70 <col:10, col:36> '<dependent type>'
        (DeclRefExpr 0x9cb3d24 <col:10> 'int (size_type, size_type)' lvalue CXXMethod 0x9c83d70 '_S_compare' 'int (size_type, size_type)')
        (DeclRefExpr 0x9cb3d3c <col:21> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9cb3880 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9cb3d54 <col:29> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9cb3940 '__osize' 'const size_type':'const typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (ReturnStmt 0x9cb3df8 <line:2181:2, col:9>
    (ImplicitCastExpr 0x9cb3de8 <col:9> 'int' <LValueToRValue>
      (DeclRefExpr 0x9cb3dcc <col:9> 'int' lvalue Var 0x9cb3b00 '__r' 'int'))))


        int compare(size_type __pos, size_type __n, const basic_string<_CharT, _Traits, _Alloc> &__str) const;
        int compare(size_type __pos1, size_type __n1, const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos2, size_type __n2) const;
        int compare(const _CharT *__s) const;
        int compare(size_type __pos, size_type __n1, const _CharT *__s) const;
        int compare(size_type __pos, size_type __n1, const _CharT *__s, size_type __n2) const;
    };
    template <typename _CharT, typename _Traits, typename _Alloc> basic_string<_CharT, _Traits, _Alloc> operator+(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x9cb47a0 </usr/include/c++/4.6/bits/basic_string.h:2307:5, line:2311:5>
  (DeclStmt 0x9cb46e0 <line:2308:7, col:57>
    0x9cb4670 "basic_string<_CharT, _Traits, _Alloc> __str =
      (ParenListExpr 0x9cb46c0 <col:50, col:56> 'basic_string<_CharT, _Traits, _Alloc>'
        (DeclRefExpr 0x9cb46a4 <col:51> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9cb41f0 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))")
  (CallExpr 0x9cb4758 <line:2309:7, col:25> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9cb4708 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0x9cb46f0 <col:7> 'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9cb4670 '__str' 'basic_string<_CharT, _Traits, _Alloc>'))
    (DeclRefExpr 0x9cb473c <col:20> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9cb43a0 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
  (ReturnStmt 0x9cb4790 <line:2310:7, col:14>
    (DeclRefExpr 0x9cb4778 <col:14> 'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9cb4670 '__str' 'basic_string<_CharT, _Traits, _Alloc>')))

;
    template <typename _CharT, typename _Traits, typename _Alloc> basic_string<_CharT, _Traits, _Alloc> operator+(const _CharT *__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs);
    template <typename _CharT, typename _Traits, typename _Alloc> basic_string<_CharT, _Traits, _Alloc> operator+(_CharT __lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs);
    template <typename _CharT, typename _Traits, typename _Alloc> inline basic_string<_CharT, _Traits, _Alloc> operator+(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const _CharT *__rhs) (CompoundStmt 0x9cb82f0 </usr/include/c++/4.6/bits/basic_string.h:2344:5, line:2348:5>
  (DeclStmt 0x9cb8230 <line:2345:7, col:57>
    0x9cb81c0 "basic_string<_CharT, _Traits, _Alloc> __str =
      (ParenListExpr 0x9cb8210 <col:50, col:56> 'basic_string<_CharT, _Traits, _Alloc>'
        (DeclRefExpr 0x9cb81f4 <col:51> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9cb7e80 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))")
  (CallExpr 0x9cb82a8 <line:2346:7, col:25> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9cb8258 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0x9cb8240 <col:7> 'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9cb81c0 '__str' 'basic_string<_CharT, _Traits, _Alloc>'))
    (DeclRefExpr 0x9cb828c <col:20> 'const _CharT *' lvalue ParmVar 0x9cb7ef0 '__rhs' 'const _CharT *'))
  (ReturnStmt 0x9cb82e0 <line:2347:7, col:14>
    (DeclRefExpr 0x9cb82c8 <col:14> 'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9cb81c0 '__str' 'basic_string<_CharT, _Traits, _Alloc>')))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline basic_string<_CharT, _Traits, _Alloc> operator+(const basic_string<_CharT, _Traits, _Alloc> &__lhs, _CharT __rhs) (CompoundStmt 0x9cb8c88 </usr/include/c++/4.6/bits/basic_string.h:2359:5, line:2365:5>
  (DeclStmt 0x9cb89f0 <line:2360:7, col:66>
    0x9cb89c0 "typedef basic_string<_CharT, _Traits, _Alloc> __string_type")
  (DeclStmt 0x9cb8ae0 <line:2361:7, col:61>
    0x9cb8ab0 "typedef typename __string_type::size_type __size_type")
  (DeclStmt 0x9cb8b70 <line:2362:7, col:33>
    0x9cb8b00 "__string_type __str =
      (ParenListExpr 0x9cb8b50 <col:26, col:32> '__string_type':'basic_string<_CharT, _Traits, _Alloc>'
        (DeclRefExpr 0x9cb8b34 <col:27> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9cb86b0 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))")
  (CallExpr 0x9cb8c38 <line:2363:7, col:41> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9cb8b98 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0x9cb8b80 <col:7> '__string_type':'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9cb8b00 '__str' '__string_type':'basic_string<_CharT, _Traits, _Alloc>'))
    (CXXUnresolvedConstructExpr 0x9cb8c00 <col:20, col:33> '__size_type':'typename __string_type::size_type'
      (IntegerLiteral 0x9cb8be8 <col:32> 'int' 1))
    (DeclRefExpr 0x9cb8c1c <col:36> '_CharT' lvalue ParmVar 0x9cb86f0 '__rhs' '_CharT'))
  (ReturnStmt 0x9cb8c78 <line:2364:7, col:14>
    (DeclRefExpr 0x9cb8c5c <col:14> '__string_type':'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9cb8b00 '__str' '__string_type':'basic_string<_CharT, _Traits, _Alloc>')))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator==(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x9cb9338 </usr/include/c++/4.6/bits/basic_string.h:2428:5, col:41>
  (ReturnStmt 0x9cb9328 <col:7, col:38>
    (CXXOperatorCallExpr 0x9cb9300 <col:14, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0x9cb92b0 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb91e0 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90)
      (CallExpr 0x9cb9278 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cb9228 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9cb9210 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9cb8f30 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x9cb925c <col:28> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9cb90e0 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
      (IntegerLiteral 0x9cb9298 <col:38> 'int' 0))))

;
    template <typename _CharT> inline typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, bool>::__type operator==(const basic_string<_CharT> &__lhs, const basic_string<_CharT> &__rhs) (CompoundStmt 0x9cba098 </usr/include/c++/4.6/bits/basic_string.h:2435:5, line:2437:27>
  (ReturnStmt 0x9cba088 <line:2435:7, line:2437:24>
    (ParenExpr 0x9cba070 <line:2435:14, line:2437:24> '<dependent type>'
      (BinaryOperator 0x9cba058 <line:2435:15, line:2437:23> '<dependent type>' '&&'
        (CXXOperatorCallExpr 0x9cb9db0 <line:2435:15, col:42> '<dependent type>'
          (UnresolvedLookupExpr 0x9cb9d60 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb9c50 0x9cb91e0 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90)
          (CallExpr 0x9cb9cd0 <col:15, col:26> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9cb9c98 <col:15, col:21> '<dependent type>' lvalue
              (DeclRefExpr 0x9cb9c80 <col:15> 'const basic_string<_CharT>' lvalue ParmVar 0x9cb98f0 '__lhs' 'const basic_string<_CharT> &')))
          (CallExpr 0x9cb9d40 <col:31, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9cb9d08 <col:31, col:37> '<dependent type>' lvalue
              (DeclRefExpr 0x9cb9cec <col:31> 'const basic_string<_CharT>' lvalue ParmVar 0x9cb9b40 '__rhs' 'const basic_string<_CharT> &'))))
        (UnaryOperator 0x9cba040 <line:2436:11, line:2437:23> '<dependent type>' prefix '!'
          (CallExpr 0x9cba018 <line:2436:12, line:2437:23> '<dependent type>'
            (DependentScopeDeclRefExpr 0x9cb9ea0 <line:2436:12, col:38> '<dependent type>' lvalue)
            (CallExpr 0x9cb9f18 <col:46, col:57> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9cb9ee0 <col:46, col:52> '<dependent type>' lvalue
                (DeclRefExpr 0x9cb9ec4 <col:46> 'const basic_string<_CharT>' lvalue ParmVar 0x9cb98f0 '__lhs' 'const basic_string<_CharT> &')))
            (CallExpr 0x9cb9f88 <col:60, col:71> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9cb9f50 <col:60, col:66> '<dependent type>' lvalue
                (DeclRefExpr 0x9cb9f34 <col:60> 'const basic_string<_CharT>' lvalue ParmVar 0x9cb9b40 '__rhs' 'const basic_string<_CharT> &')))
            (CallExpr 0x9cb9ff8 <line:2437:11, col:22> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9cb9fc0 <col:11, col:17> '<dependent type>' lvalue
                (DeclRefExpr 0x9cb9fa4 <col:11> 'const basic_string<_CharT>' lvalue ParmVar 0x9cb98f0 '__lhs' 'const basic_string<_CharT> &')))))))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator==(const _CharT *__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x9cba5f0 </usr/include/c++/4.6/bits/basic_string.h:2449:5, col:41>
  (ReturnStmt 0x9cba5e0 <col:7, col:38>
    (CXXOperatorCallExpr 0x9cba5b8 <col:14, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0x9cba560 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cba490 0x9cb9c50 0x9cb91e0 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90)
      (CallExpr 0x9cba528 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cba4d8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9cba4c0 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9cba390 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x9cba50c <col:28> 'const _CharT *' lvalue ParmVar 0x9cba1e0 '__lhs' 'const _CharT *'))
      (IntegerLiteral 0x9cba548 <col:38> 'int' 0))))

;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> inline bool operator==(const basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > &__lhs, const wchar_t *__rhs) (CompoundStmt 0x9fcf8e8 </usr/include/c++/4.6/bits/basic_string.h:2461:5, col:41>
  (ReturnStmt 0x9fcf8d8 <col:7, col:38>
    (BinaryOperator 0x9fcf8c0 <col:14, col:38> '_Bool' '=='
      (CXXMemberCallExpr 0x9fcf890 <col:14, col:33> 'int'
        (MemberExpr 0x9fcf870 <col:14, col:20> '<bound member function type>' .compare 0x9d3cb30
          (DeclRefExpr 0x9fcf7f0 <col:14> 'const basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >':'const class std::basic_string<wchar_t>' lvalue ParmVar 0x9fadb60 '__lhs' 'const basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> > &'))
        (ImplicitCastExpr 0x9fcf8b0 <col:28> 'const wchar_t *' <LValueToRValue>
          (DeclRefExpr 0x9fcf858 <col:28> 'const wchar_t *' lvalue ParmVar 0x9fadbd0 '__rhs' 'const wchar_t *')))
      (IntegerLiteral 0x9cbaab8 <col:38> 'int' 0))))

template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator==(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const _CharT *__rhs) (CompoundStmt 0x9cbab60 </usr/include/c++/4.6/bits/basic_string.h:2461:5, col:41>
  (ReturnStmt 0x9cbab50 <col:7, col:38>
    (CXXOperatorCallExpr 0x9cbab28 <col:14, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0x9cbaad0 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cbaa00 0x9cba490 0x9cb9c50 0x9cb91e0 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90)
      (CallExpr 0x9cbaa98 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cbaa48 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9cbaa30 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9cba890 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x9cbaa7c <col:28> 'const _CharT *' lvalue ParmVar 0x9cba900 '__rhs' 'const _CharT *'))
      (IntegerLiteral 0x9cbaab8 <col:38> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator!=(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x9cbb1b0 </usr/include/c++/4.6/bits/basic_string.h:2474:5, col:33>
  (ReturnStmt 0x9cbb1a0 <col:7, col:30>
    (UnaryOperator 0x9cbb188 <col:14, col:30> '<dependent type>' prefix '!'
      (ParenExpr 0x9cbb170 <col:15, col:30> '<dependent type>'
        (CXXOperatorCallExpr 0x9cbb148 <col:16, col:25> '<dependent type>'
          (UnresolvedLookupExpr 0x9cbb0f0 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cbaa00 0x9cba490 0x9cb9c50 0x9cb91e0 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90)
          (DeclRefExpr 0x9cbb0c0 <col:16> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9cbae00 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &')
          (DeclRefExpr 0x9cbb0d8 <col:25> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9cbafb0 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator!=(const _CharT *__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x9cbb6b0 </usr/include/c++/4.6/bits/basic_string.h:2486:5, col:33>
  (ReturnStmt 0x9cbb6a0 <col:7, col:30>
    (UnaryOperator 0x9cbb688 <col:14, col:30> '<dependent type>' prefix '!'
      (ParenExpr 0x9cbb670 <col:15, col:30> '<dependent type>'
        (CXXOperatorCallExpr 0x9cbb648 <col:16, col:25> '<dependent type>'
          (UnresolvedLookupExpr 0x9cbb5f0 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cbaa00 0x9cba490 0x9cb9c50 0x9cb91e0 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90)
          (DeclRefExpr 0x9cbb5c0 <col:16> 'const _CharT *' lvalue ParmVar 0x9cbb300 '__lhs' 'const _CharT *')
          (DeclRefExpr 0x9cbb5d8 <col:25> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9cbb4b0 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator!=(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const _CharT *__rhs) (CompoundStmt 0x9cbbbf0 </usr/include/c++/4.6/bits/basic_string.h:2498:5, col:33>
  (ReturnStmt 0x9cbbbe0 <col:7, col:30>
    (UnaryOperator 0x9cbbbc8 <col:14, col:30> '<dependent type>' prefix '!'
      (ParenExpr 0x9cbbbb0 <col:15, col:30> '<dependent type>'
        (CXXOperatorCallExpr 0x9cbbb88 <col:16, col:25> '<dependent type>'
          (UnresolvedLookupExpr 0x9cbbb30 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cbaa00 0x9cba490 0x9cb9c50 0x9cb91e0 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90)
          (DeclRefExpr 0x9cbbb00 <col:16> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9cbb980 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &')
          (DeclRefExpr 0x9cbbb18 <col:25> 'const _CharT *' lvalue ParmVar 0x9cbb9f0 '__rhs' 'const _CharT *'))))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator<(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x9cbc268 </usr/include/c++/4.6/bits/basic_string.h:2511:5, col:40>
  (ReturnStmt 0x9cbc258 <col:7, col:37>
    (CXXOperatorCallExpr 0x9cbc230 <col:14, col:37> '<dependent type>'
      (UnresolvedLookupExpr 0x9cbc1f0 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cbc120 0x9b40ad0 0x9b57c70 0x9b5ddb0)
      (CallExpr 0x9cbc1b8 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cbc168 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9cbc150 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9cbbe90 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x9cbc19c <col:28> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9cbc040 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
      (IntegerLiteral 0x9cbc1d8 <col:37> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator<(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const _CharT *__rhs) (CompoundStmt 0x9cbc7a0 </usr/include/c++/4.6/bits/basic_string.h:2523:5, col:40>
  (ReturnStmt 0x9cbc790 <col:7, col:37>
    (CXXOperatorCallExpr 0x9cbc768 <col:14, col:37> '<dependent type>'
      (UnresolvedLookupExpr 0x9cbc720 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cbc650 0x9cbc120 0x9b40ad0 0x9b57c70 0x9b5ddb0)
      (CallExpr 0x9cbc6e8 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cbc698 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9cbc680 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9cbc500 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x9cbc6cc <col:28> 'const _CharT *' lvalue ParmVar 0x9cbc570 '__rhs' 'const _CharT *'))
      (IntegerLiteral 0x9cbc708 <col:37> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator<(const _CharT *__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x9cbccc8 </usr/include/c++/4.6/bits/basic_string.h:2535:5, col:40>
  (ReturnStmt 0x9cbccb8 <col:7, col:37>
    (CXXOperatorCallExpr 0x9cbcc90 <col:14, col:37> '<dependent type>'
      (UnresolvedLookupExpr 0x9cbcc50 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b42c70 0x9ac83c0 0x9b5e730)
      (CallExpr 0x9cbcc18 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cbcbc8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9cbcbb0 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9cbcaa0 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x9cbcbfc <col:28> 'const _CharT *' lvalue ParmVar 0x9cbc8f0 '__lhs' 'const _CharT *'))
      (IntegerLiteral 0x9cbcc38 <col:37> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator>(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x9cbd338 </usr/include/c++/4.6/bits/basic_string.h:2548:5, col:40>
  (ReturnStmt 0x9cbd328 <col:7, col:37>
    (CXXOperatorCallExpr 0x9cbd300 <col:14, col:37> '<dependent type>'
      (UnresolvedLookupExpr 0x9cbd2c0 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cbd1f0 0x9b42c70 0x9ac83c0 0x9b5e730)
      (CallExpr 0x9cbd288 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cbd238 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9cbd220 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9cbcf60 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x9cbd26c <col:28> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9cbd110 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
      (IntegerLiteral 0x9cbd2a8 <col:37> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator>(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const _CharT *__rhs) (CompoundStmt 0x9cbd870 </usr/include/c++/4.6/bits/basic_string.h:2560:5, col:40>
  (ReturnStmt 0x9cbd860 <col:7, col:37>
    (CXXOperatorCallExpr 0x9cbd838 <col:14, col:37> '<dependent type>'
      (UnresolvedLookupExpr 0x9cbd7f0 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cbd720 0x9cbd1f0 0x9b42c70 0x9ac83c0 0x9b5e730)
      (CallExpr 0x9cbd7b8 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cbd768 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9cbd750 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9cbd5d0 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x9cbd79c <col:28> 'const _CharT *' lvalue ParmVar 0x9cbd640 '__rhs' 'const _CharT *'))
      (IntegerLiteral 0x9cbd7d8 <col:37> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator>(const _CharT *__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x9cbdda0 </usr/include/c++/4.6/bits/basic_string.h:2572:5, col:40>
  (ReturnStmt 0x9cbdd90 <col:7, col:37>
    (CXXOperatorCallExpr 0x9cbdd68 <col:14, col:37> '<dependent type>'
      (UnresolvedLookupExpr 0x9cbdd20 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cbcb80 0x9cbc650 0x9cbc120 0x9b40ad0 0x9b57c70 0x9b5ddb0)
      (CallExpr 0x9cbdce8 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cbdc98 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9cbdc80 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9cbdb70 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x9cbdccc <col:28> 'const _CharT *' lvalue ParmVar 0x9cbd9c0 '__lhs' 'const _CharT *'))
      (IntegerLiteral 0x9cbdd08 <col:37> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator<=(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x9cbe418 </usr/include/c++/4.6/bits/basic_string.h:2585:5, col:41>
  (ReturnStmt 0x9cbe408 <col:7, col:38>
    (CXXOperatorCallExpr 0x9cbe3e0 <col:14, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0x9cbe3a0 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cbe2d0 0x9b43190 0x9ac87b0 0x9b5eb90)
      (CallExpr 0x9cbe368 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cbe318 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9cbe300 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9cbe040 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x9cbe34c <col:28> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9cbe1f0 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
      (IntegerLiteral 0x9cbe388 <col:38> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator<=(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const _CharT *__rhs) (CompoundStmt 0x9cbe950 </usr/include/c++/4.6/bits/basic_string.h:2597:5, col:41>
  (ReturnStmt 0x9cbe940 <col:7, col:38>
    (CXXOperatorCallExpr 0x9cbe918 <col:14, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0x9cbe8d0 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cbe800 0x9cbe2d0 0x9b43190 0x9ac87b0 0x9b5eb90)
      (CallExpr 0x9cbe898 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cbe848 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9cbe830 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9cbe6b0 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x9cbe87c <col:28> 'const _CharT *' lvalue ParmVar 0x9cbe720 '__rhs' 'const _CharT *'))
      (IntegerLiteral 0x9cbe8b8 <col:38> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator<=(const _CharT *__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x9cbee78 </usr/include/c++/4.6/bits/basic_string.h:2609:5, col:41>
  (ReturnStmt 0x9cbee68 <col:7, col:38>
    (CXXOperatorCallExpr 0x9cbee40 <col:14, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0x9cbee00 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b436e0 0x9ac8bd0 0x9b5f010)
      (CallExpr 0x9cbedc8 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cbed78 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9cbed60 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9cbec50 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x9cbedac <col:28> 'const _CharT *' lvalue ParmVar 0x9cbeaa0 '__lhs' 'const _CharT *'))
      (IntegerLiteral 0x9cbede8 <col:38> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator>=(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x9cbf4e8 </usr/include/c++/4.6/bits/basic_string.h:2622:5, col:41>
  (ReturnStmt 0x9cbf4d8 <col:7, col:38>
    (CXXOperatorCallExpr 0x9cbf4b0 <col:14, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0x9cbf470 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cbf3a0 0x9b436e0 0x9ac8bd0 0x9b5f010)
      (CallExpr 0x9cbf438 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cbf3e8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9cbf3d0 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9cbf110 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x9cbf41c <col:28> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9cbf2c0 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
      (IntegerLiteral 0x9cbf458 <col:38> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator>=(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const _CharT *__rhs) (CompoundStmt 0x9cbfa50 </usr/include/c++/4.6/bits/basic_string.h:2634:5, col:41>
  (ReturnStmt 0x9cbfa40 <col:7, col:38>
    (CXXOperatorCallExpr 0x9cbfa18 <col:14, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0x9cbf9d0 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cbf900 0x9cbf3a0 0x9b436e0 0x9ac8bd0 0x9b5f010)
      (CallExpr 0x9cbf998 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cbf948 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9cbf930 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9cbf780 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x9cbf97c <col:28> 'const _CharT *' lvalue ParmVar 0x9cbf820 '__rhs' 'const _CharT *'))
      (IntegerLiteral 0x9cbf9b8 <col:38> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator>=(const _CharT *__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x9cbff80 </usr/include/c++/4.6/bits/basic_string.h:2646:5, col:41>
  (ReturnStmt 0x9cbff70 <col:7, col:38>
    (CXXOperatorCallExpr 0x9cbff48 <col:14, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0x9cbff00 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cbed30 0x9cbe800 0x9cbe2d0 0x9b43190 0x9ac87b0 0x9b5eb90)
      (CallExpr 0x9cbfec8 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cbfe78 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9cbfe60 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9cbfd50 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x9cbfeac <col:28> 'const _CharT *' lvalue ParmVar 0x9cbfba0 '__lhs' 'const _CharT *'))
      (IntegerLiteral 0x9cbfee8 <col:38> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline void swap(basic_string<_CharT, _Traits, _Alloc> &__lhs, basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x9cc05a8 </usr/include/c++/4.6/bits/basic_string.h:2659:5, col:26>
  (CallExpr 0x9cc0588 <col:7, col:23> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9cc0538 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0x9cc0520 <col:7> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9cc0240 '__lhs' 'basic_string<_CharT, _Traits, _Alloc> &'))
    (DeclRefExpr 0x9cc056c <col:18> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9cc03f0 '__rhs' 'basic_string<_CharT, _Traits, _Alloc> &')))

;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> basic_istream<wchar_t, std::char_traits<wchar_t> > &operator>>(basic_istream<wchar_t, std::char_traits<wchar_t> > &__in, basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > &__str)template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> basic_istream<char> &operator>>(basic_istream<char> &__is, basic_string<char> &__str)template <typename _CharT, typename _Traits, typename _Alloc> basic_istream<_CharT, _Traits> &operator>>(basic_istream<_CharT, _Traits> &__is, basic_string<_CharT, _Traits, _Alloc> &__str);
    basic_istream<char> &operator>>(basic_istream<char> &__is, basic_string<char> &__str);
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> inline basic_ostream<wchar_t, std::char_traits<wchar_t> > &operator<<(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__os, const basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > &__str)template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__os, const basic_string<char, std::char_traits<char>, std::allocator<char> > &__str)template <typename _CharT, typename _Traits, typename _Alloc> inline basic_ostream<_CharT, _Traits> &operator<<(basic_ostream<_CharT, _Traits> &__os, const basic_string<_CharT, _Traits, _Alloc> &__str) (CompoundStmt 0x9cc1d88 </usr/include/c++/4.6/bits/basic_string.h:2694:5, line:2698:5>
  (ReturnStmt 0x9cc1d78 <line:2697:7, col:63>
    (CallExpr 0x9cc1d50 <col:14, col:63> '<dependent type>'
      (UnresolvedLookupExpr 0x9cc1c20 <col:14> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfca90)
      (DeclRefExpr 0x9cc1c54 <col:31> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9cc18f0 '__os' 'basic_ostream<_CharT, _Traits> &')
      (CallExpr 0x9cc1cc0 <col:37, col:48> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cc1c88 <col:37, col:43> '<dependent type>' lvalue
          (DeclRefExpr 0x9cc1c6c <col:37> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9cc1aa0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (CallExpr 0x9cc1d30 <col:51, col:62> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cc1cf8 <col:51, col:57> '<dependent type>' lvalue
          (DeclRefExpr 0x9cc1cdc <col:51> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9cc1aa0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))

;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> basic_istream<wchar_t> &getline(basic_istream<wchar_t> &__in, basic_string<wchar_t> &__str, wchar_t __delim)template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> basic_istream<char> &getline(basic_istream<char> &__in, basic_string<char> &__str, char __delim)template <typename _CharT, typename _Traits, typename _Alloc> basic_istream<_CharT, _Traits> &getline(basic_istream<_CharT, _Traits> &__is, basic_string<_CharT, _Traits, _Alloc> &__str, _CharT __delim);
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> inline basic_istream<wchar_t, std::char_traits<wchar_t> > &getline(basic_istream<wchar_t, std::char_traits<wchar_t> > &__is, basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > &__str)template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> inline basic_istream<char, std::char_traits<char> > &getline(basic_istream<char, std::char_traits<char> > &__is, basic_string<char, std::char_traits<char>, std::allocator<char> > &__str)template <typename _CharT, typename _Traits, typename _Alloc> inline basic_istream<_CharT, _Traits> &getline(basic_istream<_CharT, _Traits> &__is, basic_string<_CharT, _Traits, _Alloc> &__str) (CompoundStmt 0x9cc2b98 </usr/include/c++/4.6/bits/basic_string.h:2735:5, col:54>
  (ReturnStmt 0x9cc2b88 <col:7, col:51>
    (CallExpr 0x9cc2b60 <col:14, col:51> '<dependent type>'
      (UnresolvedLookupExpr 0x9cc2a70 <col:14> '<overloaded function type>' lvalue (ADL) = '1' 0x9cc2a40 0x9cc2410)
      (DeclRefExpr 0x9cc2aa8 <col:22> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9cc2760 '__is' 'basic_istream<_CharT, _Traits> &')
      (DeclRefExpr 0x9cc2ac0 <col:28> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9cc2910 '__str' 'basic_string<_CharT, _Traits, _Alloc> &')
      (CallExpr 0x9cc2b40 <col:35, col:50> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cc2af0 <col:35, col:40> '<dependent type>' lvalue
          (DeclRefExpr 0x9cc2ad8 <col:35> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9cc2760 '__is' 'basic_istream<_CharT, _Traits> &'))
        (CharacterLiteral 0x9cc2b28 <col:46> 'char'10)))))

;
    basic_istream<char> &getline(basic_istream<char> &__in, basic_string<char> &__str, char __delim);
    basic_istream<wchar_t> &getline(basic_istream<wchar_t> &__in, basic_string<wchar_t> &__str, wchar_t __delim);
}
extern long __builtin_expect(long, long);
namespace std {
    static const typename basic_string<_CharT, _Traits, _Alloc>::size_type _S_max_size = (BinaryOperator 0x9cc49b0 </usr/include/c++/4.6/bits/basic_string.tcc:52:25, col:77> '<dependent type>' '/'
  (ParenExpr 0x9cc4980 <col:25, col:73> '<dependent type>'
    (CXXOperatorCallExpr 0x9cc4958 <col:26, col:72> '<dependent type>'
      (UnresolvedLookupExpr 0x9cc4920 <col:70, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
      (ParenExpr 0x9cc48f0 <col:26, col:68> '<dependent type>'
        (BinaryOperator 0x9cc48d8 <col:27, col:67> '<dependent type>' '/'
          (ParenExpr 0x9cc48a0 <col:27, col:52> '<dependent type>'
            (CXXOperatorCallExpr 0x9cc4878 <col:28, col:51> '<dependent type>'
              (UnresolvedLookupExpr 0x9cc4840 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
              (DeclRefExpr 0x9cc4808 <col:28> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9c7f920 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
              (UnaryExprOrTypeTraitExpr 0x9cc4828 <col:35, col:51> 'unsigned int' sizeof 'struct std::basic_string::_Rep_base')))
          (UnaryExprOrTypeTraitExpr 0x9cc48c0 <col:54, col:67> 'unsigned int' sizeof '_CharT')))
      (IntegerLiteral 0x9cc4908 <col:72> 'int' 1)))
  (IntegerLiteral 0x9cc4998 <col:77> 'int' 4))
;
    static const _CharT _S_terminal = (CXXUnresolvedConstructExpr 0x9cc4e00 </usr/include/c++/4.6/bits/basic_string.tcc:57:25, col:32> '_CharT')
;
    static const typename basic_string<_CharT, _Traits, _Alloc>::size_type npos;
    static typename basic_string<_CharT, _Traits, _Alloc>::size_type _S_empty_rep_storage[(sizeof(std::basic_string::_Rep_base) + sizeof(_CharT) + sizeof(size_type) - 1) / sizeof(size_type)];
    template <typename _InIterator> static _CharT *_S_construct(_InIterator __beg, _InIterator __end, const _Alloc &__a, std::input_iterator_tag) (CompoundStmt 0x9cc7560 </usr/include/c++/4.6/bits/basic_string.tcc:81:7, line:119:7>
  (IfStmt 0x9cc65e0 <line:83:2, line:84:37>
    <<<NULL>>>
    (BinaryOperator 0x9cc6528 <line:83:6, col:38> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x9cc6448 <col:6, col:15> '<dependent type>'
        (UnresolvedLookupExpr 0x9cc63f0 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90 0x9cb91e0 0x9cb9c50 0x9cba490 0x9cbaa00)
        (DeclRefExpr 0x9cc63bc <col:6> '_InIterator' lvalue ParmVar 0x9cc6110 '__beg' '_InIterator')
        (DeclRefExpr 0x9cc63d4 <col:15> '_InIterator' lvalue ParmVar 0x9cc6150 '__end' '_InIterator'))
      (CXXOperatorCallExpr 0x9cc6500 <col:24, col:38> '<dependent type>'
        (UnresolvedLookupExpr 0x9cc64a8 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90 0x9cb91e0 0x9cb9c50 0x9cba490 0x9cbaa00)
        (DeclRefExpr 0x9cc646c <col:24> 'const _Alloc' lvalue ParmVar 0x9cc61c0 '__a' 'const _Alloc &')
        (CXXUnresolvedConstructExpr 0x9cc6490 <col:31, col:38> '_Alloc')))
    (ReturnStmt 0x9cc65d0 <line:84:4, col:37>
      (CallExpr 0x9cc65b0 <col:11, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cc6578 <col:11, col:26> '<dependent type>' lvalue
          (CallExpr 0x9cc6558 <col:11, col:24> '<dependent type>'
            (DeclRefExpr 0x9cc6540 <col:11> 'struct std::basic_string::_Rep &(void)' lvalue CXXMethod 0x9c84030 '_S_empty_rep' 'struct std::basic_string::_Rep &(void)')))))
    <<<NULL>>>)
  (DeclStmt 0x9cc66b8 <line:87:2, col:19>
    0x9cc6680 "_CharT __buf[128]")
  (DeclStmt 0x9cc6720 <line:88:2, col:21>
    0x9cc66d0 "size_type __len =
      (IntegerLiteral 0x9cc6708 <col:20> 'int' 0)")
  (WhileStmt 0x9cc6a08 <line:89:2, line:93:4>
    <<<NULL>>>
    (BinaryOperator 0x9cc68e8 <line:89:9, col:64> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x9cc67b8 <col:9, col:18> '<dependent type>'
        (UnresolvedLookupExpr 0x9cc6760 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b412d0 0x9ac7fa0 0x9b5e2b0 0x9ba7d20 0x9bc7160 0x9bc74d0 0x9cbb090 0x9cbb590 0x9cbbad0)
        (DeclRefExpr 0x9cc6730 <col:9> '_InIterator' lvalue ParmVar 0x9cc6110 '__beg' '_InIterator')
        (DeclRefExpr 0x9cc6748 <col:18> '_InIterator' lvalue ParmVar 0x9cc6150 '__end' '_InIterator'))
      (CXXOperatorCallExpr 0x9cc68c0 <col:27, col:64> '<dependent type>'
        (UnresolvedLookupExpr 0x9cc6878 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40ad0 0x9b57c70 0x9b5ddb0 0x9cbc120 0x9cbc650 0x9cbcb80)
        (DeclRefExpr 0x9cc67dc <col:27> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9cc66d0 '__len' 'size_type':'typename _CharT_alloc_type::size_type')
        (BinaryOperator 0x9cc6860 <col:35, col:64> 'unsigned int' '/'
          (UnaryExprOrTypeTraitExpr 0x9cc6828 <col:35, col:47> 'unsigned int' sizeof 
            (ParenExpr 0x9cc6810 <col:41, col:47> '_CharT [128]' lvalue
              (DeclRefExpr 0x9cc67f4 <col:42> '_CharT [128]' lvalue Var 0x9cc6680 '__buf' '_CharT [128]')))
          (UnaryExprOrTypeTraitExpr 0x9cc6848 <col:51, col:64> 'unsigned int' sizeof '_CharT'))))
    (CompoundStmt 0x9cc69f0 <line:90:4, line:93:4>
      (BinaryOperator 0x9cc69a8 <line:91:6, col:24> '<dependent type>' '='
        (ArraySubscriptExpr 0x9cc6960 <col:6, col:19> '<dependent type>' lvalue
          (DeclRefExpr 0x9cc6900 <col:6> '_CharT [128]' lvalue Var 0x9cc6680 '__buf' '_CharT [128]')
          (UnaryOperator 0x9cc6948 <col:12, col:17> '<dependent type>' postfix '++'
            (DeclRefExpr 0x9cc6918 <col:12> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9cc66d0 '__len' 'size_type':'typename _CharT_alloc_type::size_type')))
        (UnaryOperator 0x9cc6990 <col:23, col:24> '<dependent type>' prefix '*'
          (DeclRefExpr 0x9cc6974 <col:24> '_InIterator' lvalue ParmVar 0x9cc6110 '__beg' '_InIterator')))
      (UnaryOperator 0x9cc69d8 <line:92:6, col:8> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9cc69c0 <col:8> '_InIterator' lvalue ParmVar 0x9cc6110 '__beg' '_InIterator'))))
  (DeclStmt 0x9cc6b48 <line:94:2, col:55>
    0x9cc6a30 "std::basic_string::_Rep *__r =
      (CallExpr 0x9cc6b20 <col:14, col:54> '<dependent type>'
        (DependentScopeDeclRefExpr 0x9cc6a88 <col:14, col:20> '<dependent type>' lvalue)
        (DeclRefExpr 0x9cc6aac <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9cc66d0 '__len' 'size_type':'typename _CharT_alloc_type::size_type')
        (CXXUnresolvedConstructExpr 0x9cc6ae8 <col:37, col:48> 'size_type':'typename _CharT_alloc_type::size_type'
          (IntegerLiteral 0x9cc6ad0 <col:47> 'int' 0))
        (DeclRefExpr 0x9cc6b04 <col:51> 'const _Alloc' lvalue ParmVar 0x9cc61c0 '__a' 'const _Alloc &'))")
  (CallExpr 0x9cc6c10 <line:95:2, col:41> '<dependent type>'
    (DeclRefExpr 0x9cc6b58 <col:2> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9c82f50 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
    (CallExpr 0x9cc6bc0 <col:10, col:26> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9cc6b88 <col:10, col:15> '<dependent type>' lvalue
        (DeclRefExpr 0x9cc6b70 <col:10> 'struct std::basic_string::_Rep *' lvalue Var 0x9cc6a30 '__r' 'struct std::basic_string::_Rep *')))
    (DeclRefExpr 0x9cc6bdc <col:29> '_CharT [128]' lvalue Var 0x9cc6680 '__buf' '_CharT [128]')
    (DeclRefExpr 0x9cc6bf4 <col:36> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9cc66d0 '__len' 'size_type':'typename _CharT_alloc_type::size_type'))
  (IfStmt 0x9cc7358 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/basic_string.tcc:111:4>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9cc6c38 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x9cc7340 </usr/include/c++/4.6/bits/basic_string.tcc:97:4, line:111:4>
      (WhileStmt 0x9cc7328 <line:98:6, line:110:8>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9cc6cd0 <line:98:13, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0x9cc6c78 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b412d0 0x9ac7fa0 0x9b5e2b0 0x9ba7d20 0x9bc7160 0x9bc74d0 0x9cbb090 0x9cbb590 0x9cbbad0)
          (DeclRefExpr 0x9cc6c48 <col:13> '_InIterator' lvalue ParmVar 0x9cc6110 '__beg' '_InIterator')
          (DeclRefExpr 0x9cc6c60 <col:22> '_InIterator' lvalue ParmVar 0x9cc6150 '__end' '_InIterator'))
        (CompoundStmt 0x9cc7308 <line:99:8, line:110:8>
          (IfStmt 0x9cc71a0 <line:100:3, line:107:5>
            <<<NULL>>>
            (CXXOperatorCallExpr 0x9cc6db8 <line:100:7, col:21> '<dependent type>'
              (UnresolvedLookupExpr 0x9cc6d60 <col:13, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90 0x9cb91e0 0x9cb9c50 0x9cba490 0x9cbaa00)
              (DeclRefExpr 0x9cc6cf4 <col:7> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9cc66d0 '__len' 'size_type':'typename _CharT_alloc_type::size_type')
              (CXXDependentScopeMemberExpr 0x9cc6d28 <col:16, col:21> '<dependent type>' lvalue
                (DeclRefExpr 0x9cc6d0c <col:16> 'struct std::basic_string::_Rep *' lvalue Var 0x9cc6a30 '__r' 'struct std::basic_string::_Rep *')))
            (CompoundStmt 0x9cc7180 <line:101:5, line:107:5>
              (DeclStmt 0x9cc6f68 <line:103:7, col:63>
                0x9cc6df0 "std::basic_string::_Rep *__another =
                  (CallExpr 0x9cc6f40 <col:25, col:62> '<dependent type>'
                    (DependentScopeDeclRefExpr 0x9cc6e48 <col:25, col:31> '<dependent type>' lvalue)
                    (CXXOperatorCallExpr 0x9cc6ee8 <col:41, col:49> '<dependent type>'
                      (UnresolvedLookupExpr 0x9cc6ea0 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9cb4d00 0x9cb7ab0 0x9cb8030 0x9cb8830)
                      (DeclRefExpr 0x9cc6e6c <col:41> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9cc66d0 '__len' 'size_type':'typename _CharT_alloc_type::size_type')
                      (IntegerLiteral 0x9cc6e88 <col:49> 'int' 1))
                    (DeclRefExpr 0x9cc6f0c <col:52> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9cc66d0 '__len' 'size_type':'typename _CharT_alloc_type::size_type')
                    (DeclRefExpr 0x9cc6f24 <col:59> 'const _Alloc' lvalue ParmVar 0x9cc61c0 '__a' 'const _Alloc &'))")
              (CallExpr 0x9cc7088 <line:104:7, col:64> '<dependent type>'
                (DeclRefExpr 0x9cc6f78 <col:7> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9c82f50 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
                (CallExpr 0x9cc6fe0 <col:15, col:37> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9cc6fa8 <col:15, col:26> '<dependent type>' lvalue
                    (DeclRefExpr 0x9cc6f90 <col:15> 'struct std::basic_string::_Rep *' lvalue Var 0x9cc6df0 '__another' 'struct std::basic_string::_Rep *')))
                (CallExpr 0x9cc7050 <col:40, col:56> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9cc7018 <col:40, col:45> '<dependent type>' lvalue
                    (DeclRefExpr 0x9cc6ffc <col:40> 'struct std::basic_string::_Rep *' lvalue Var 0x9cc6a30 '__r' 'struct std::basic_string::_Rep *')))
                (DeclRefExpr 0x9cc706c <col:59> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9cc66d0 '__len' 'size_type':'typename _CharT_alloc_type::size_type'))
              (CallExpr 0x9cc7118 <line:105:7, col:26> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9cc70c8 <col:7, col:12> '<dependent type>' lvalue
                  (DeclRefExpr 0x9cc70b0 <col:7> 'struct std::basic_string::_Rep *' lvalue Var 0x9cc6a30 '__r' 'struct std::basic_string::_Rep *'))
                (DeclRefExpr 0x9cc70fc <col:23> 'const _Alloc' lvalue ParmVar 0x9cc61c0 '__a' 'const _Alloc &'))
              (BinaryOperator 0x9cc7168 <line:106:7, col:13> '<dependent type>' '='
                (DeclRefExpr 0x9cc7138 <col:7> 'struct std::basic_string::_Rep *' lvalue Var 0x9cc6a30 '__r' 'struct std::basic_string::_Rep *')
                (DeclRefExpr 0x9cc7150 <col:13> 'struct std::basic_string::_Rep *' lvalue Var 0x9cc6df0 '__another' 'struct std::basic_string::_Rep *')))
            <<<NULL>>>)
          (BinaryOperator 0x9cc72c0 <line:108:3, col:33> '<dependent type>' '='
            (ArraySubscriptExpr 0x9cc7278 <col:3, col:28> '<dependent type>' lvalue
              (CallExpr 0x9cc7210 <col:3, col:19> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9cc71d8 <col:3, col:8> '<dependent type>' lvalue
                  (DeclRefExpr 0x9cc71bc <col:3> 'struct std::basic_string::_Rep *' lvalue Var 0x9cc6a30 '__r' 'struct std::basic_string::_Rep *')))
              (UnaryOperator 0x9cc7260 <col:21, col:26> '<dependent type>' postfix '++'
                (DeclRefExpr 0x9cc722c <col:21> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9cc66d0 '__len' 'size_type':'typename _CharT_alloc_type::size_type')))
            (UnaryOperator 0x9cc72a8 <col:32, col:33> '<dependent type>' prefix '*'
              (DeclRefExpr 0x9cc728c <col:33> '_InIterator' lvalue ParmVar 0x9cc6110 '__beg' '_InIterator')))
          (UnaryOperator 0x9cc72f0 <line:109:3, col:5> '<dependent type>' prefix '++'
            (DeclRefExpr 0x9cc72d8 <col:5> '_InIterator' lvalue ParmVar 0x9cc6110 '__beg' '_InIterator')))))
    <<<NULL>>>)
  (IfStmt 0x9cc7438 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/basic_string.tcc:116:4>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9cc7378 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9cc7420 </usr/include/c++/4.6/bits/basic_string.tcc:113:4, line:116:4>
      (CallExpr 0x9cc73f0 <line:114:6, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cc73a0 <col:6, col:11> '<dependent type>' lvalue
          (DeclRefExpr 0x9cc7388 <col:6> 'struct std::basic_string::_Rep *' lvalue Var 0x9cc6a30 '__r' 'struct std::basic_string::_Rep *'))
        (DeclRefExpr 0x9cc73d4 <col:22> 'const _Alloc' lvalue ParmVar 0x9cc61c0 '__a' 'const _Alloc &'))
      (NullStmt 0x9cc7410 <line:115:29>))
    <<<NULL>>>)
  (CallExpr 0x9cc74c0 <line:117:2, col:39> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9cc7470 <col:2, col:7> '<dependent type>' lvalue
      (DeclRefExpr 0x9cc7454 <col:2> 'struct std::basic_string::_Rep *' lvalue Var 0x9cc6a30 '__r' 'struct std::basic_string::_Rep *'))
    (DeclRefExpr 0x9cc74a4 <col:34> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9cc66d0 '__len' 'size_type':'typename _CharT_alloc_type::size_type'))
  (ReturnStmt 0x9cc7550 <line:118:2, col:25>
    (CallExpr 0x9cc7530 <col:9, col:25> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9cc74f8 <col:9, col:14> '<dependent type>' lvalue
        (DeclRefExpr 0x9cc74e0 <col:9> 'struct std::basic_string::_Rep *' lvalue Var 0x9cc6a30 '__r' 'struct std::basic_string::_Rep *')))))

;
    template <typename _InIterator> static _CharT *_S_construct(_InIterator __beg, _InIterator __end, const _Alloc &__a, std::forward_iterator_tag) (CompoundStmt 0x9cc86a8 </usr/include/c++/4.6/bits/basic_string.tcc:127:7, line:149:7>
  (IfStmt 0x9cc7e40 <line:129:2, line:130:37>
    <<<NULL>>>
    (BinaryOperator 0x9cc7d88 <line:129:6, col:38> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x9cc7ca8 <col:6, col:15> '<dependent type>'
        (UnresolvedLookupExpr 0x9cc7c50 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90 0x9cb91e0 0x9cb9c50 0x9cba490 0x9cbaa00)
        (DeclRefExpr 0x9cc7c1c <col:6> '_InIterator' lvalue ParmVar 0x9cc7970 '__beg' '_InIterator')
        (DeclRefExpr 0x9cc7c34 <col:15> '_InIterator' lvalue ParmVar 0x9cc79b0 '__end' '_InIterator'))
      (CXXOperatorCallExpr 0x9cc7d60 <col:24, col:38> '<dependent type>'
        (UnresolvedLookupExpr 0x9cc7d08 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90 0x9cb91e0 0x9cb9c50 0x9cba490 0x9cbaa00)
        (DeclRefExpr 0x9cc7ccc <col:24> 'const _Alloc' lvalue ParmVar 0x9cc7a20 '__a' 'const _Alloc &')
        (CXXUnresolvedConstructExpr 0x9cc7cf0 <col:31, col:38> '_Alloc')))
    (ReturnStmt 0x9cc7e30 <line:130:4, col:37>
      (CallExpr 0x9cc7e10 <col:11, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cc7dd8 <col:11, col:26> '<dependent type>' lvalue
          (CallExpr 0x9cc7db8 <col:11, col:24> '<dependent type>'
            (DeclRefExpr 0x9cc7da0 <col:11> 'struct std::basic_string::_Rep &(void)' lvalue CXXMethod 0x9c84030 '_S_empty_rep' 'struct std::basic_string::_Rep &(void)')))))
    <<<NULL>>>)
  (IfStmt 0x9cc80e8 <line:133:2, line:134:72>
    <<<NULL>>>
    (BinaryOperator 0x9cc7fa0 <line:133:6, col:54> '<dependent type>' '&&'
      (CallExpr 0x9cc7ed0 <col:6, col:40> '<dependent type>'
        (UnresolvedLookupExpr 0x9cc7e80 <col:6, col:17> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b2d360 0x9b2d560)
        (DeclRefExpr 0x9cc7eb8 <col:35> '_InIterator' lvalue ParmVar 0x9cc7970 '__beg' '_InIterator'))
      (CXXOperatorCallExpr 0x9cc7f78 <col:45, col:54> '<dependent type>'
        (UnresolvedLookupExpr 0x9cc7f20 <col:51, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b412d0 0x9ac7fa0 0x9b5e2b0 0x9ba7d20 0x9bc7160 0x9bc74d0 0x9cbb090 0x9cbb590 0x9cbbad0)
        (DeclRefExpr 0x9cc7ef0 <col:45> '_InIterator' lvalue ParmVar 0x9cc7970 '__beg' '_InIterator')
        (DeclRefExpr 0x9cc7f08 <col:54> '_InIterator' lvalue ParmVar 0x9cc79b0 '__end' '_InIterator')))
    (CallExpr 0x9cc80b8 <line:134:4, col:72> 'void'
      (ImplicitCastExpr 0x9cc80a8 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x9cc808c <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9b0ba50 '__throw_logic_error' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0x9cc80d8 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0x9cc8078 <col:24, col:30> 'const char [42]' lvalue
          (StringLiteral 0x9cc8030 </usr/include/c++/4.6/bits/basic_string.tcc:134:28> 'const char [42]' lvalue "basic_string::_S_construct null not valid"))))
    <<<NULL>>>)
  (DeclStmt 0x9cc8218 <line:136:2, line:137:22>
    0x9cc8110 "const size_type __dnew =
      (CXXStaticCastExpr 0x9cc8200 <line:136:27, line:137:21> 'size_type':'typename _CharT_alloc_type::size_type' static_cast<size_type> <Dependent>
        (CallExpr 0x9cc81d0 <line:136:50, line:137:20> '<dependent type>'
          (UnresolvedLookupExpr 0x9cc8168 <line:136:50, col:55> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b4eac0)
          (DeclRefExpr 0x9cc819c <col:64> '_InIterator' lvalue ParmVar 0x9cc7970 '__beg' '_InIterator')
          (DeclRefExpr 0x9cc81b4 <line:137:15> '_InIterator' lvalue ParmVar 0x9cc79b0 '__end' '_InIterator')))")
  (DeclStmt 0x9cc8358 <line:139:2, col:56>
    0x9cc8240 "std::basic_string::_Rep *__r =
      (CallExpr 0x9cc8330 <col:14, col:55> '<dependent type>'
        (DependentScopeDeclRefExpr 0x9cc8298 <col:14, col:20> '<dependent type>' lvalue)
        (DeclRefExpr 0x9cc82bc <col:30> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9cc8110 '__dnew' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (CXXUnresolvedConstructExpr 0x9cc82f8 <col:38, col:49> 'size_type':'typename _CharT_alloc_type::size_type'
          (IntegerLiteral 0x9cc82e0 <col:48> 'int' 0))
        (DeclRefExpr 0x9cc8314 <col:52> 'const _Alloc' lvalue ParmVar 0x9cc7a20 '__a' 'const _Alloc &'))")
  (IfStmt 0x9cc84a0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/basic_string.tcc:141:54>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9cc8368 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x9cc8488 </usr/include/c++/4.6/bits/basic_string.tcc:141:4, col:54>
      (CallExpr 0x9cc8460 <col:6, col:51> '<dependent type>'
        (UnresolvedLookupExpr 0x9cc8378 <col:6> '<dependent type>' lvalue (no ADL) = '1' 0x9c83500 0x9c83690 0x9c83850 0x9c83a30 0x9c83c10)
        (CallExpr 0x9cc8410 <col:20, col:36> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9cc83d8 <col:20, col:25> '<dependent type>' lvalue
            (DeclRefExpr 0x9cc83bc <col:20> 'struct std::basic_string::_Rep *' lvalue Var 0x9cc8240 '__r' 'struct std::basic_string::_Rep *')))
        (DeclRefExpr 0x9cc842c <col:39> '_InIterator' lvalue ParmVar 0x9cc7970 '__beg' '_InIterator')
        (DeclRefExpr 0x9cc8444 <col:46> '_InIterator' lvalue ParmVar 0x9cc79b0 '__end' '_InIterator')))
    <<<NULL>>>)
  (IfStmt 0x9cc8580 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/basic_string.tcc:146:4>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9cc84c0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9cc8568 </usr/include/c++/4.6/bits/basic_string.tcc:143:4, line:146:4>
      (CallExpr 0x9cc8538 <line:144:6, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cc84e8 <col:6, col:11> '<dependent type>' lvalue
          (DeclRefExpr 0x9cc84d0 <col:6> 'struct std::basic_string::_Rep *' lvalue Var 0x9cc8240 '__r' 'struct std::basic_string::_Rep *'))
        (DeclRefExpr 0x9cc851c <col:22> 'const _Alloc' lvalue ParmVar 0x9cc7a20 '__a' 'const _Alloc &'))
      (NullStmt 0x9cc8558 <line:145:29>))
    <<<NULL>>>)
  (CallExpr 0x9cc8608 <line:147:2, col:40> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9cc85b8 <col:2, col:7> '<dependent type>' lvalue
      (DeclRefExpr 0x9cc859c <col:2> 'struct std::basic_string::_Rep *' lvalue Var 0x9cc8240 '__r' 'struct std::basic_string::_Rep *'))
    (DeclRefExpr 0x9cc85ec <col:34> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9cc8110 '__dnew' 'const size_type':'const typename _CharT_alloc_type::size_type'))
  (ReturnStmt 0x9cc8698 <line:148:2, col:25>
    (CallExpr 0x9cc8678 <col:9, col:25> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9cc8640 <col:9, col:14> '<dependent type>' lvalue
        (DeclRefExpr 0x9cc8628 <col:9> 'struct std::basic_string::_Rep *' lvalue Var 0x9cc8240 '__r' 'struct std::basic_string::_Rep *')))))

;
    static _CharT *_S_construct(size_type __n, _CharT __c, const _Alloc &__a) (CompoundStmt 0x9cc91f8 </usr/include/c++/4.6/bits/basic_string.tcc:155:5, line:167:5>
  (IfStmt 0x9cc8e80 <line:157:7, line:158:35>
    <<<NULL>>>
    (BinaryOperator 0x9cc8dc8 <line:157:11, col:37> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x9cc8ce8 <col:11, col:18> '<dependent type>'
        (UnresolvedLookupExpr 0x9cc8c90 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90 0x9cb91e0 0x9cb9c50 0x9cba490 0x9cbaa00)
        (DeclRefExpr 0x9cc8c5c <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cc8a50 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
        (IntegerLiteral 0x9cc8c78 <col:18> 'int' 0))
      (CXXOperatorCallExpr 0x9cc8da0 <col:23, col:37> '<dependent type>'
        (UnresolvedLookupExpr 0x9cc8d48 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90 0x9cb91e0 0x9cb9c50 0x9cba490 0x9cbaa00)
        (DeclRefExpr 0x9cc8d0c <col:23> 'const _Alloc' lvalue ParmVar 0x9cc8b00 '__a' 'const _Alloc &')
        (CXXUnresolvedConstructExpr 0x9cc8d30 <col:30, col:37> '_Alloc')))
    (ReturnStmt 0x9cc8e70 <line:158:2, col:35>
      (CallExpr 0x9cc8e50 <col:9, col:35> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cc8e18 <col:9, col:24> '<dependent type>' lvalue
          (CallExpr 0x9cc8df8 <col:9, col:22> '<dependent type>'
            (DeclRefExpr 0x9cc8de0 <col:9> 'struct std::basic_string::_Rep &(void)' lvalue CXXMethod 0x9c84030 '_S_empty_rep' 'struct std::basic_string::_Rep &(void)')))))
    <<<NULL>>>)
  (DeclStmt 0x9cc8fc8 <line:161:7, col:58>
    0x9cc8eb0 "std::basic_string::_Rep *__r =
      (CallExpr 0x9cc8fa0 <col:19, col:57> '<dependent type>'
        (DependentScopeDeclRefExpr 0x9cc8f08 <col:19, col:25> '<dependent type>' lvalue)
        (DeclRefExpr 0x9cc8f2c <col:35> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cc8a50 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
        (CXXUnresolvedConstructExpr 0x9cc8f68 <col:40, col:51> 'size_type':'typename _CharT_alloc_type::size_type'
          (IntegerLiteral 0x9cc8f50 <col:50> 'int' 0))
        (DeclRefExpr 0x9cc8f84 <col:54> 'const _Alloc' lvalue ParmVar 0x9cc8b00 '__a' 'const _Alloc &'))")
  (IfStmt 0x9cc90d0 <line:162:7, line:163:39>
    <<<NULL>>>
    (DeclRefExpr 0x9cc8fd8 <line:162:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cc8a50 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0x9cc90a8 <line:163:2, col:39> '<dependent type>'
      (DeclRefExpr 0x9cc8ff0 <col:2> 'void (_CharT *, size_type, _CharT)' lvalue CXXMethod 0x9c83280 '_M_assign' 'void (_CharT *, size_type, _CharT)')
      (CallExpr 0x9cc9058 <col:12, col:28> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cc9020 <col:12, col:17> '<dependent type>' lvalue
          (DeclRefExpr 0x9cc9008 <col:12> 'struct std::basic_string::_Rep *' lvalue Var 0x9cc8eb0 '__r' 'struct std::basic_string::_Rep *')))
      (DeclRefExpr 0x9cc9074 <col:31> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cc8a50 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9cc908c <col:36> '_CharT' lvalue ParmVar 0x9cc8a90 '__c' '_CharT'))
    <<<NULL>>>)
  (CallExpr 0x9cc9158 <line:165:7, col:42> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9cc9108 <col:7, col:12> '<dependent type>' lvalue
      (DeclRefExpr 0x9cc90ec <col:7> 'struct std::basic_string::_Rep *' lvalue Var 0x9cc8eb0 '__r' 'struct std::basic_string::_Rep *'))
    (DeclRefExpr 0x9cc913c <col:39> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cc8a50 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
  (ReturnStmt 0x9cc91e8 <line:166:7, col:30>
    (CallExpr 0x9cc91c8 <col:14, col:30> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9cc9190 <col:14, col:19> '<dependent type>' lvalue
        (DeclRefExpr 0x9cc9178 <col:14> 'struct std::basic_string::_Rep *' lvalue Var 0x9cc8eb0 '__r' 'struct std::basic_string::_Rep *')))))


    basic_string<_CharT, _Traits, _Alloc>::basic_string<_CharT, _Traits, _Alloc>(const basic_string<_CharT, _Traits, _Alloc> &__str) : _M_dataplus((CallExpr 0x9cc99a8 </usr/include/c++/4.6/bits/basic_string.tcc:172:19, line:173:29> '<dependent type>'
  (CXXDependentScopeMemberExpr 0x9cc9868 <line:172:19, col:35> '<dependent type>' lvalue
    (CallExpr 0x9cc9848 <col:19, col:32> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9cc9810 <col:19, col:25> '<dependent type>' lvalue
        (DeclRefExpr 0x9cc97f4 <col:19> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9cc9700 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))
  (CXXUnresolvedConstructExpr 0x9cc9918 <col:43, col:71> '_Alloc'
    (CallExpr 0x9cc98f8 <col:50, col:70> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9cc98c0 <col:50, col:56> '<dependent type>' lvalue
        (DeclRefExpr 0x9cc98a8 <col:50> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9cc9700 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))
  (CallExpr 0x9cc9988 <line:173:8, col:28> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9cc9950 <col:8, col:14> '<dependent type>' lvalue
      (DeclRefExpr 0x9cc9934 <col:8> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9cc9700 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))
, (CallExpr 0x9cc9a20 </usr/include/c++/4.6/bits/basic_string.tcc:174:5, col:25> '<dependent type>'
  (CXXDependentScopeMemberExpr 0x9cc99e8 <col:5, col:11> '<dependent type>' lvalue
    (DeclRefExpr 0x9cc99cc <col:5> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9cc9700 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
) (CompoundStmt 0x9cc9a80 </usr/include/c++/4.6/bits/basic_string.tcc:175:5, col:7>)


    basic_string<_CharT, _Traits, _Alloc>::basic_string<_CharT, _Traits, _Alloc>(const _Alloc &__a) : _M_dataplus((CallExpr 0x9cca150 </usr/include/c++/4.6/bits/basic_string.tcc:180:19, col:58> '<dependent type>'
  (UnresolvedLookupExpr 0x9cca0b8 <col:19> '<dependent type>' lvalue (no ADL) = '1' 0x9c98500 0x9cc6350 0x9cc7bb0 0x9cc8bc0)
  (CXXUnresolvedConstructExpr 0x9cca100 <col:32, col:42> 'size_type':'typename _CharT_alloc_type::size_type')
  (CXXUnresolvedConstructExpr 0x9cca120 <col:45, col:52> '_CharT')
  (DeclRefExpr 0x9cca138 <col:55> 'const _Alloc' lvalue ParmVar 0x9cc9f90 '__a' 'const _Alloc &'))
, (DeclRefExpr 0x9cca178 </usr/include/c++/4.6/bits/basic_string.tcc:180:61> 'const _Alloc' lvalue ParmVar 0x9cc9f90 '__a' 'const _Alloc &')
) (CompoundStmt 0x9cca1d0 </usr/include/c++/4.6/bits/basic_string.tcc:181:5, col:7>)


    basic_string<_CharT, _Traits, _Alloc>::basic_string<_CharT, _Traits, _Alloc>(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos, size_type __n = (DeclRefExpr 0x9c9d658 </usr/include/c++/4.6/bits/basic_string.h:457:22> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9c7f920 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) : _M_dataplus((CallExpr 0x9ccacb0 </usr/include/c++/4.6/bits/basic_string.tcc:186:19, line:190:28> '<dependent type>'
  (UnresolvedLookupExpr 0x9cca850 <line:186:19> '<dependent type>' lvalue (no ADL) = '1' 0x9c98500 0x9cc6350 0x9cc7bb0 0x9cc8bc0)
  (CXXOperatorCallExpr 0x9ccaa58 <col:32, line:188:35> '<dependent type>'
    (UnresolvedLookupExpr 0x9ccaa10 <line:187:11, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9cb4d00 0x9cb7ab0 0x9cb8030 0x9cb8830)
    (CallExpr 0x9cca8e0 <line:186:32, col:46> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9cca8a8 <col:32, col:38> '<dependent type>' lvalue
        (DeclRefExpr 0x9cca890 <col:32> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9cca6c0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
    (CallExpr 0x9cca9e8 <line:187:13, line:188:35> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9cca918 <line:187:13, col:19> '<dependent type>' lvalue
        (DeclRefExpr 0x9cca8fc <col:13> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9cca6c0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
      (DeclRefExpr 0x9cca94c <col:28> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cca700 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (StringLiteral 0x9cca9b0 <line:188:7> 'const char [27]' lvalue "basic_string::basic_string")))
  (CXXOperatorCallExpr 0x9ccac68 <line:189:11, line:190:13> '<dependent type>'
    (UnresolvedLookupExpr 0x9ccac20 <col:11, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9cb4d00 0x9cb7ab0 0x9cb8030 0x9cb8830)
    (CXXOperatorCallExpr 0x9ccabe0 <line:189:11, col:54> '<dependent type>'
      (UnresolvedLookupExpr 0x9ccab98 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9cb4d00 0x9cb7ab0 0x9cb8030 0x9cb8830)
      (CallExpr 0x9ccaad0 <col:11, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ccaa98 <col:11, col:17> '<dependent type>' lvalue
          (DeclRefExpr 0x9ccaa7c <col:11> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9cca6c0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (CallExpr 0x9ccab70 <col:29, col:54> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ccab08 <col:29, col:35> '<dependent type>' lvalue
          (DeclRefExpr 0x9ccaaec <col:29> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9cca6c0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x9ccab3c <col:44> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cca700 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9ccab54 <col:51> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cca740 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))
    (DeclRefExpr 0x9ccac04 <line:190:13> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cca700 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
  (CXXUnresolvedConstructExpr 0x9ccac98 <col:20, col:27> '_Alloc'))
, (CXXUnresolvedConstructExpr 0x9ccace0 </usr/include/c++/4.6/bits/basic_string.tcc:190:31, col:38> '_Alloc')
) (CompoundStmt 0x9ccad40 </usr/include/c++/4.6/bits/basic_string.tcc:191:5, col:7>)


    basic_string<_CharT, _Traits, _Alloc>::basic_string<_CharT, _Traits, _Alloc>(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos, size_type __n, const _Alloc &__a) : _M_dataplus((CallExpr 0x9ccb890 </usr/include/c++/4.6/bits/basic_string.tcc:197:19, line:201:23> '<dependent type>'
  (UnresolvedLookupExpr 0x9ccb460 <line:197:19> '<dependent type>' lvalue (no ADL) = '1' 0x9c98500 0x9cc6350 0x9cc7bb0 0x9cc8bc0)
  (CXXOperatorCallExpr 0x9ccb620 <col:32, line:199:35> '<dependent type>'
    (UnresolvedLookupExpr 0x9ccb5d8 <line:198:11, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9cb4d00 0x9cb7ab0 0x9cb8030 0x9cb8830)
    (CallExpr 0x9ccb4f0 <line:197:32, col:46> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9ccb4b8 <col:32, col:38> '<dependent type>' lvalue
        (DeclRefExpr 0x9ccb4a0 <col:32> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9ccb230 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
    (CallExpr 0x9ccb5b0 <line:198:13, line:199:35> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9ccb528 <line:198:13, col:19> '<dependent type>' lvalue
        (DeclRefExpr 0x9ccb50c <col:13> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9ccb230 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
      (DeclRefExpr 0x9ccb55c <col:28> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ccb270 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (StringLiteral 0x9ccb574 <line:199:7> 'const char [27]' lvalue "basic_string::basic_string")))
  (CXXOperatorCallExpr 0x9ccb850 <line:200:11, line:201:13> '<dependent type>'
    (UnresolvedLookupExpr 0x9ccb7e8 <col:11, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9cb4d00 0x9cb7ab0 0x9cb8030 0x9cb8830)
    (CXXOperatorCallExpr 0x9ccb7a8 <line:200:11, col:54> '<dependent type>'
      (UnresolvedLookupExpr 0x9ccb760 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9cb4d00 0x9cb7ab0 0x9cb8030 0x9cb8830)
      (CallExpr 0x9ccb698 <col:11, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ccb660 <col:11, col:17> '<dependent type>' lvalue
          (DeclRefExpr 0x9ccb644 <col:11> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9ccb230 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (CallExpr 0x9ccb738 <col:29, col:54> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ccb6d0 <col:29, col:35> '<dependent type>' lvalue
          (DeclRefExpr 0x9ccb6b4 <col:29> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9ccb230 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x9ccb704 <col:44> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ccb270 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9ccb71c <col:51> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ccb2b0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))
    (DeclRefExpr 0x9ccb7cc <line:201:13> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ccb270 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
  (DeclRefExpr 0x9ccb874 <col:20> 'const _Alloc' lvalue ParmVar 0x9ccb320 '__a' 'const _Alloc &'))
, (DeclRefExpr 0x9ccb8b8 </usr/include/c++/4.6/bits/basic_string.tcc:201:26> 'const _Alloc' lvalue ParmVar 0x9ccb320 '__a' 'const _Alloc &')
) (CompoundStmt 0x9ccb910 </usr/include/c++/4.6/bits/basic_string.tcc:202:5, col:7>)


    basic_string<_CharT, _Traits, _Alloc>::basic_string<_CharT, _Traits, _Alloc>(const _CharT *__s, size_type __n, const _Alloc &__a = (CXXUnresolvedConstructExpr 0x9c9d678 </usr/include/c++/4.6/bits/basic_string.h:478:26, col:33> '_Alloc')
) : _M_dataplus((CallExpr 0x9ccc120 </usr/include/c++/4.6/bits/basic_string.tcc:208:19, col:51> '<dependent type>'
  (UnresolvedLookupExpr 0x9ccc010 <col:19> '<dependent type>' lvalue (no ADL) = '1' 0x9c98500 0x9cc6350 0x9cc7bb0 0x9cc8bc0)
  (DeclRefExpr 0x9ccc050 <col:32> 'const _CharT *' lvalue ParmVar 0x9ccbe20 '__s' 'const _CharT *')
  (CXXOperatorCallExpr 0x9ccc0e0 <col:37, col:43> '<dependent type>'
    (UnresolvedLookupExpr 0x9ccc098 <col:41, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9cb4d00 0x9cb7ab0 0x9cb8030 0x9cb8830)
    (DeclRefExpr 0x9ccc068 <col:37> 'const _CharT *' lvalue ParmVar 0x9ccbe20 '__s' 'const _CharT *')
    (DeclRefExpr 0x9ccc080 <col:43> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ccbe60 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
  (DeclRefExpr 0x9ccc104 <col:48> 'const _Alloc' lvalue ParmVar 0x9ccbed0 '__a' 'const _Alloc &'))
, (DeclRefExpr 0x9ccc148 </usr/include/c++/4.6/bits/basic_string.tcc:208:54> 'const _Alloc' lvalue ParmVar 0x9ccbed0 '__a' 'const _Alloc &')
) (CompoundStmt 0x9ccc1a0 </usr/include/c++/4.6/bits/basic_string.tcc:209:5, col:7>)


    basic_string<_CharT, _Traits, _Alloc>::basic_string<_CharT, _Traits, _Alloc>(const _CharT *__s, const _Alloc &__a = (CXXUnresolvedConstructExpr 0x9c9d698 </usr/include/c++/4.6/bits/basic_string.h:484:59, col:66> '_Alloc')
) : _M_dataplus((CallExpr 0x9cccaa8 </usr/include/c++/4.6/bits/basic_string.tcc:215:19, line:216:26> '<dependent type>'
  (UnresolvedLookupExpr 0x9ccc848 <line:215:19> '<dependent type>' lvalue (no ADL) = '1' 0x9c98500 0x9cc6350 0x9cc7bb0 0x9cc8bc0)
  (DeclRefExpr 0x9ccc888 <col:32> 'const _CharT *' lvalue ParmVar 0x9ccc6b0 '__s' 'const _CharT *')
  (ConditionalOperator 0x9ccca70 <col:37, line:216:17> '<dependent type>'
    (DeclRefExpr 0x9ccc8a0 <line:215:37> 'const _CharT *' lvalue ParmVar 0x9ccc6b0 '__s' 'const _CharT *')
    (CXXOperatorCallExpr 0x9ccc9a8 <col:43, col:72> '<dependent type>'
      (UnresolvedLookupExpr 0x9ccc960 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9cb4d00 0x9cb7ab0 0x9cb8030 0x9cb8830)
      (DeclRefExpr 0x9ccc8b8 <col:43> 'const _CharT *' lvalue ParmVar 0x9ccc6b0 '__s' 'const _CharT *')
      (CallExpr 0x9ccc940 <col:49, col:72> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ccc8f0 <col:49, col:62> '<dependent type>' lvalue)
        (DeclRefExpr 0x9ccc924 <col:69> 'const _CharT *' lvalue ParmVar 0x9ccc6b0 '__s' 'const _CharT *')))
    (CXXOperatorCallExpr 0x9ccca48 <line:216:11, col:17> '<dependent type>'
      (UnresolvedLookupExpr 0x9ccca00 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9cb4d00 0x9cb7ab0 0x9cb8030 0x9cb8830)
      (DeclRefExpr 0x9ccc9cc <col:11> 'const _CharT *' lvalue ParmVar 0x9ccc6b0 '__s' 'const _CharT *')
      (DeclRefExpr 0x9ccc9e4 <col:17> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9cc5460 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))
  (DeclRefExpr 0x9ccca8c <col:23> 'const _Alloc' lvalue ParmVar 0x9ccc720 '__a' 'const _Alloc &'))
, (DeclRefExpr 0x9cccad0 </usr/include/c++/4.6/bits/basic_string.tcc:216:29> 'const _Alloc' lvalue ParmVar 0x9ccc720 '__a' 'const _Alloc &')
) (CompoundStmt 0x9cccb30 </usr/include/c++/4.6/bits/basic_string.tcc:217:5, col:7>)


    basic_string<_CharT, _Traits, _Alloc>::basic_string<_CharT, _Traits, _Alloc>(size_type __n, _CharT __c, const _Alloc &__a = (CXXUnresolvedConstructExpr 0x9c9d6b8 </usr/include/c++/4.6/bits/basic_string.h:491:67, col:74> '_Alloc')
) : _M_dataplus((CallExpr 0x9ccd288 </usr/include/c++/4.6/bits/basic_string.tcc:222:19, col:45> '<dependent type>'
  (UnresolvedLookupExpr 0x9ccd200 <col:19> '<dependent type>' lvalue (no ADL) = '1' 0x9c98500 0x9cc6350 0x9cc7bb0 0x9cc8bc0)
  (DeclRefExpr 0x9ccd240 <col:32> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ccd010 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
  (DeclRefExpr 0x9ccd258 <col:37> '_CharT' lvalue ParmVar 0x9ccd050 '__c' '_CharT')
  (DeclRefExpr 0x9ccd270 <col:42> 'const _Alloc' lvalue ParmVar 0x9ccd0c0 '__a' 'const _Alloc &'))
, (DeclRefExpr 0x9ccd2b0 </usr/include/c++/4.6/bits/basic_string.tcc:222:48> 'const _Alloc' lvalue ParmVar 0x9ccd0c0 '__a' 'const _Alloc &')
) (CompoundStmt 0x9ccd310 </usr/include/c++/4.6/bits/basic_string.tcc:223:5, col:7>)


    template <typename _InputIterator> basic_string<_CharT, _Traits, _Alloc>::basic_string<_CharT, _Traits, _Alloc>(_InputIterator __beg, _InputIterator __end, const _Alloc &__a = (CXXUnresolvedConstructExpr 0x9c9d6d8 </usr/include/c++/4.6/bits/basic_string.h:527:28, col:35> '_Alloc')
) : _M_dataplus((CallExpr 0x9ccdb18 </usr/include/c++/4.6/bits/basic_string.tcc:230:19, col:49> '<dependent type>'
  (UnresolvedLookupExpr 0x9ccda90 <col:19> '<dependent type>' lvalue (no ADL) = '1' 0x9c98500 0x9cc6350 0x9cc7bb0 0x9cc8bc0)
  (DeclRefExpr 0x9ccdad0 <col:32> '_InputIterator' lvalue ParmVar 0x9ccd840 '__beg' '_InputIterator')
  (DeclRefExpr 0x9ccdae8 <col:39> '_InputIterator' lvalue ParmVar 0x9ccd880 '__end' '_InputIterator')
  (DeclRefExpr 0x9ccdb00 <col:46> 'const _Alloc' lvalue ParmVar 0x9ccd8f0 '__a' 'const _Alloc &'))
, (DeclRefExpr 0x9ccdb40 </usr/include/c++/4.6/bits/basic_string.tcc:230:52> 'const _Alloc' lvalue ParmVar 0x9ccd8f0 '__a' 'const _Alloc &')
) (CompoundStmt 0x9ccdba0 </usr/include/c++/4.6/bits/basic_string.tcc:231:5, col:7>)

;
    basic_string<_CharT, _Traits, _Alloc> &assign(const basic_string<_CharT, _Traits, _Alloc> &__str) (CompoundStmt 0x9cce860 </usr/include/c++/4.6/bits/basic_string.tcc:245:5, line:255:5>
  (IfStmt 0x9cce808 <line:246:7, line:253:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9cce3f0 <line:246:11, col:36> '<dependent type>'
      (UnresolvedLookupExpr 0x9cce398 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b412d0 0x9ac7fa0 0x9b5e2b0 0x9ba7d20 0x9bc7160 0x9bc74d0 0x9cbb090 0x9cbb590 0x9cbbad0)
      (CallExpr 0x9cce308 <col:11, col:18> '<dependent type>'
        (MemberExpr 0x9cce2e8 <col:11> '<bound member function type>' ->_M_rep 0x9c7fc30
          (CXXThisExpr 0x9cce2d8 <col:11> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
      (CallExpr 0x9cce378 <col:23, col:36> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cce340 <col:23, col:29> '<dependent type>' lvalue
          (DeclRefExpr 0x9cce324 <col:23> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9cce050 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))
    (CompoundStmt 0x9cce7e8 <line:247:2, line:253:2>
      (DeclStmt 0x9cce4c0 <line:249:4, col:52>
        0x9cce420 "const allocator_type __a =
          (CallExpr 0x9cce4a0 <col:31, col:51> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9cce468 <col:31, col:37> '<dependent type>' lvalue
              (CXXThisExpr 0x9cce458 <col:31> 'basic_string<_CharT, _Traits, _Alloc> *' this)))")
      (DeclStmt 0x9cce690 <line:250:4, col:71>
        0x9cce500 "_CharT *__tmp =
          (CallExpr 0x9cce668 <col:20, col:70> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9cce5a8 <col:20, col:36> '<dependent type>' lvalue
              (CallExpr 0x9cce588 <col:20, col:33> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9cce550 <col:20, col:26> '<dependent type>' lvalue
                  (DeclRefExpr 0x9cce534 <col:20> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9cce050 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))
            (DeclRefExpr 0x9cce5dc <col:44> 'const allocator_type':'const _Alloc' lvalue Var 0x9cce420 '__a' 'const allocator_type':'const _Alloc')
            (CallExpr 0x9cce648 <col:49, col:69> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9cce610 <col:49, col:55> '<dependent type>' lvalue
                (DeclRefExpr 0x9cce5f4 <col:49> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9cce050 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))")
      (CallExpr 0x9cce740 <line:251:4, col:28> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cce6f0 <col:4, col:14> '<dependent type>' lvalue
          (CallExpr 0x9cce6d0 <col:4, col:11> '<dependent type>'
            (MemberExpr 0x9cce6b0 <col:4> '<bound member function type>' ->_M_rep 0x9c7fc30
              (CXXThisExpr 0x9cce6a0 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (DeclRefExpr 0x9cce724 <col:25> 'const allocator_type':'const _Alloc' lvalue Var 0x9cce420 '__a' 'const allocator_type':'const _Alloc'))
      (CallExpr 0x9cce7c8 <line:252:4, col:17> '<dependent type>'
        (UnresolvedMemberExpr 0x9cce770 <col:4> '<bound member function type>' lvalue)
        (DeclRefExpr 0x9cce7b0 <col:12> '_CharT *' lvalue Var 0x9cce500 '__tmp' '_CharT *')))
    <<<NULL>>>)
  (ReturnStmt 0x9cce850 <line:254:7, col:15>
    (UnaryOperator 0x9cce838 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9cce828 <col:15> 'basic_string<_CharT, _Traits, _Alloc> *' this))))


    basic_string<_CharT, _Traits, _Alloc> &assign(const _CharT *__s, size_type __n) (CompoundStmt 0x9ccf8d8 </usr/include/c++/4.6/bits/basic_string.tcc:261:5, line:277:6>
  (NullStmt 0x9ccf008 <line:262:46>)
  (CallExpr 0x9ccf0f8 <line:263:7, col:64> '<dependent type>'
    (MemberExpr 0x9ccf028 <col:7> '<bound member function type>' ->_M_check_length 0x9c82ae0
      (CXXThisExpr 0x9ccf018 <col:7> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (CallExpr 0x9ccf090 <col:23, col:34> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9ccf058 <col:23, col:29> '<dependent type>' lvalue
        (CXXThisExpr 0x9ccf048 <col:23> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
    (DeclRefExpr 0x9ccf0ac <col:37> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cced80 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0x9ccf0c4 <col:42> 'const char [21]' lvalue "basic_string::assign"))
  (IfStmt 0x9ccf8b8 <line:264:7, line:276:2>
    <<<NULL>>>
    (BinaryOperator 0x9ccf230 <line:264:11, col:54> '<dependent type>' '||'
      (CallExpr 0x9ccf168 <col:11, col:26> '<dependent type>'
        (MemberExpr 0x9ccf130 <col:11> '<bound member function type>' ->_M_disjunct 0x9c82d80
          (CXXThisExpr 0x9ccf120 <col:11> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x9ccf150 <col:23> 'const _CharT *' lvalue ParmVar 0x9cced40 '__s' 'const _CharT *'))
      (CallExpr 0x9ccf210 <col:31, col:54> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ccf1d8 <col:31, col:41> '<dependent type>' lvalue
          (CallExpr 0x9ccf1b8 <col:31, col:38> '<dependent type>'
            (MemberExpr 0x9ccf198 <col:31> '<bound member function type>' ->_M_rep 0x9c7fc30
              (CXXThisExpr 0x9ccf188 <col:31> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
    (ReturnStmt 0x9ccf380 <line:265:2, col:61>
      (CallExpr 0x9ccf350 <col:9, col:61> '<dependent type>'
        (MemberExpr 0x9ccf258 <col:9> '<bound member function type>' ->_M_replace_safe 0x9c97ba0
          (CXXThisExpr 0x9ccf248 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (CXXUnresolvedConstructExpr 0x9ccf298 <col:25, col:36> 'size_type':'typename _CharT_alloc_type::size_type'
          (IntegerLiteral 0x9ccf280 <col:35> 'int' 0))
        (CallExpr 0x9ccf300 <col:39, col:50> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9ccf2c8 <col:39, col:45> '<dependent type>' lvalue
            (CXXThisExpr 0x9ccf2b8 <col:39> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
        (DeclRefExpr 0x9ccf31c <col:53> 'const _CharT *' lvalue ParmVar 0x9cced40 '__s' 'const _CharT *')
        (DeclRefExpr 0x9ccf334 <col:58> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cced80 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))
    (CompoundStmt 0x9ccf898 <line:267:2, line:276:2>
      (DeclStmt 0x9ccf4c0 <line:269:4, col:43>
        0x9ccf3a0 "const size_type __pos =
          (CXXOperatorCallExpr 0x9ccf498 <col:28, col:42> '<dependent type>'
            (UnresolvedLookupExpr 0x9ccf460 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
            (DeclRefExpr 0x9ccf3d4 <col:28> 'const _CharT *' lvalue ParmVar 0x9cced40 '__s' 'const _CharT *')
            (CallExpr 0x9ccf440 <col:34, col:42> '<dependent type>'
              (UnresolvedMemberExpr 0x9ccf400 <col:34> '<bound member function type>' lvalue)))")
      (IfStmt 0x9ccf768 <line:270:4, line:273:33>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9ccf548 <line:270:8, col:17> '<dependent type>'
          (UnresolvedLookupExpr 0x9ccf500 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b436e0 0x9ac8bd0 0x9b5f010 0x9cbf3a0 0x9cbf900 0x9cbfe30)
          (DeclRefExpr 0x9ccf4d0 <col:8> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9ccf3a0 '__pos' 'const size_type':'const typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0x9ccf4e8 <col:17> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cced80 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
        (CallExpr 0x9ccf628 <line:271:6, col:33> '<dependent type>'
          (DeclRefExpr 0x9ccf56c <col:6> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9c82f50 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
          (CallExpr 0x9ccf5d8 <col:14, col:22> '<dependent type>'
            (UnresolvedMemberExpr 0x9ccf598 <col:14> '<bound member function type>' lvalue))
          (DeclRefExpr 0x9ccf5f4 <col:25> 'const _CharT *' lvalue ParmVar 0x9cced40 '__s' 'const _CharT *')
          (DeclRefExpr 0x9ccf60c <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cced80 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
        (IfStmt 0x9ccf748 <line:272:9, line:273:33>
          <<<NULL>>>
          (DeclRefExpr 0x9ccf650 <line:272:13> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9ccf3a0 '__pos' 'const size_type':'const typename _CharT_alloc_type::size_type')
          (CallExpr 0x9ccf720 <line:273:6, col:33> '<dependent type>'
            (DeclRefExpr 0x9ccf668 <col:6> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9c830c0 '_M_move' 'void (_CharT *, const _CharT *, size_type)')
            (CallExpr 0x9ccf6d0 <col:14, col:22> '<dependent type>'
              (UnresolvedMemberExpr 0x9ccf690 <col:14> '<bound member function type>' lvalue))
            (DeclRefExpr 0x9ccf6ec <col:25> 'const _CharT *' lvalue ParmVar 0x9cced40 '__s' 'const _CharT *')
            (DeclRefExpr 0x9ccf704 <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cced80 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
          <<<NULL>>>))
      (CallExpr 0x9ccf840 <line:274:4, col:44> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ccf7d8 <col:4, col:14> '<dependent type>' lvalue
          (CallExpr 0x9ccf7b8 <col:4, col:11> '<dependent type>'
            (MemberExpr 0x9ccf798 <col:4> '<bound member function type>' ->_M_rep 0x9c7fc30
              (CXXThisExpr 0x9ccf788 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (DeclRefExpr 0x9ccf80c <col:41> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cced80 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
      (ReturnStmt 0x9ccf888 <line:275:4, col:12>
        (UnaryOperator 0x9ccf870 <col:11, col:12> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9ccf860 <col:12> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))


    basic_string<_CharT, _Traits, _Alloc> &append(size_type __n, _CharT __c) (CompoundStmt 0x9cd07e0 </usr/include/c++/4.6/bits/basic_string.tcc:283:5, line:294:5>
  (IfStmt 0x9cd0788 <line:284:7, line:292:2>
    <<<NULL>>>
    (DeclRefExpr 0x9cd0058 <line:284:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ccfd90 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (CompoundStmt 0x9cd0760 <line:285:2, line:292:2>
      (CallExpr 0x9cd0128 <line:286:4, col:61> '<dependent type>'
        (MemberExpr 0x9cd0080 <col:4> '<bound member function type>' ->_M_check_length 0x9c82ae0
          (CXXThisExpr 0x9cd0070 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (CXXUnresolvedConstructExpr 0x9cd00c0 <col:20, col:31> 'size_type':'typename _CharT_alloc_type::size_type'
          (IntegerLiteral 0x9cd00a8 <col:30> 'int' 0))
        (DeclRefExpr 0x9cd00dc <col:34> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ccfd90 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
        (StringLiteral 0x9cd00f4 <col:39> 'const char [21]' lvalue "basic_string::append"))
      (DeclStmt 0x9cd0288 <line:287:4, col:46>
        0x9cd0160 "const size_type __len =
          (CXXOperatorCallExpr 0x9cd0260 <col:28, col:45> '<dependent type>'
            (UnresolvedLookupExpr 0x9cd0218 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9cb4d00 0x9cb7ab0 0x9cb8030 0x9cb8830)
            (DeclRefExpr 0x9cd0194 <col:28> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ccfd90 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
            (CallExpr 0x9cd01f8 <col:34, col:45> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9cd01c0 <col:34, col:40> '<dependent type>' lvalue
                (CXXThisExpr 0x9cd01b0 <col:34> 'basic_string<_CharT, _Traits, _Alloc> *' this))))")
      (IfStmt 0x9cd04c8 <line:288:4, line:289:25>
        <<<NULL>>>
        (BinaryOperator 0x9cd0430 <line:288:8, col:59> '<dependent type>' '||'
          (CXXOperatorCallExpr 0x9cd0360 <col:8, col:31> '<dependent type>'
            (UnresolvedLookupExpr 0x9cd0318 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b42c70 0x9ac83c0 0x9b5e730 0x9cbd1f0 0x9cbd720 0x9cbdc50)
            (DeclRefExpr 0x9cd0298 <col:8> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9cd0160 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type')
            (CallExpr 0x9cd02f8 <col:16, col:31> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9cd02c0 <col:16, col:22> '<dependent type>' lvalue
                (CXXThisExpr 0x9cd02b0 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
          (CallExpr 0x9cd0410 <col:36, col:59> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9cd03d8 <col:36, col:46> '<dependent type>' lvalue
              (CallExpr 0x9cd03b8 <col:36, col:43> '<dependent type>'
                (MemberExpr 0x9cd0398 <col:36> '<bound member function type>' ->_M_rep 0x9c7fc30
                  (CXXThisExpr 0x9cd0388 <col:36> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
        (CallExpr 0x9cd04a8 <line:289:6, col:25> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9cd0458 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x9cd0448 <col:6> 'basic_string<_CharT, _Traits, _Alloc> *' this))
          (DeclRefExpr 0x9cd048c <col:20> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9cd0160 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)
      (CallExpr 0x9cd0678 <line:290:4, col:48> '<dependent type>'
        (DeclRefExpr 0x9cd04e4 <col:4> 'void (_CharT *, size_type, _CharT)' lvalue CXXMethod 0x9c83280 '_M_assign' 'void (_CharT *, size_type, _CharT)')
        (CXXOperatorCallExpr 0x9cd0620 <col:14, col:37> '<dependent type>'
          (UnresolvedLookupExpr 0x9cd05d8 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9cb4d00 0x9cb7ab0 0x9cb8030 0x9cb8830)
          (CallExpr 0x9cd0550 <col:14, col:22> '<dependent type>'
            (UnresolvedMemberExpr 0x9cd0510 <col:14> '<bound member function type>' lvalue))
          (CallExpr 0x9cd05b8 <col:26, col:37> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9cd0580 <col:26, col:32> '<dependent type>' lvalue
              (CXXThisExpr 0x9cd0570 <col:26> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (DeclRefExpr 0x9cd0644 <col:40> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ccfd90 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9cd065c <col:45> '_CharT' lvalue ParmVar 0x9ccfdd0 '__c' '_CharT'))
      (CallExpr 0x9cd0740 <line:291:4, col:46> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cd06f0 <col:4, col:14> '<dependent type>' lvalue
          (CallExpr 0x9cd06d0 <col:4, col:11> '<dependent type>'
            (MemberExpr 0x9cd06b0 <col:4> '<bound member function type>' ->_M_rep 0x9c7fc30
              (CXXThisExpr 0x9cd06a0 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (DeclRefExpr 0x9cd0724 <col:41> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9cd0160 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (ReturnStmt 0x9cd07d0 <line:293:7, col:15>
    (UnaryOperator 0x9cd07b8 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9cd07a8 <col:15> 'basic_string<_CharT, _Traits, _Alloc> *' this))))


    basic_string<_CharT, _Traits, _Alloc> &append(const _CharT *__s, size_type __n) (CompoundStmt 0x9cd1ac8 </usr/include/c++/4.6/bits/basic_string.tcc:300:5, line:321:5>
  (NullStmt 0x9cd0f88 <line:301:46>)
  (IfStmt 0x9cd1a70 <line:302:7, line:319:2>
    <<<NULL>>>
    (DeclRefExpr 0x9cd0f94 <line:302:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cd0d00 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (CompoundStmt 0x9cd1a48 <line:303:2, line:319:2>
      (CallExpr 0x9cd1068 <line:304:4, col:61> '<dependent type>'
        (MemberExpr 0x9cd0fc0 <col:4> '<bound member function type>' ->_M_check_length 0x9c82ae0
          (CXXThisExpr 0x9cd0fb0 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (CXXUnresolvedConstructExpr 0x9cd1000 <col:20, col:31> 'size_type':'typename _CharT_alloc_type::size_type'
          (IntegerLiteral 0x9cd0fe8 <col:30> 'int' 0))
        (DeclRefExpr 0x9cd101c <col:34> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cd0d00 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
        (StringLiteral 0x9cd1034 <col:39> 'const char [21]' lvalue "basic_string::append"))
      (DeclStmt 0x9cd11c8 <line:305:4, col:46>
        0x9cd10a0 "const size_type __len =
          (CXXOperatorCallExpr 0x9cd11a0 <col:28, col:45> '<dependent type>'
            (UnresolvedLookupExpr 0x9cd1158 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9cb4d00 0x9cb7ab0 0x9cb8030 0x9cb8830)
            (DeclRefExpr 0x9cd10d4 <col:28> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cd0d00 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
            (CallExpr 0x9cd1138 <col:34, col:45> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9cd1100 <col:34, col:40> '<dependent type>' lvalue
                (CXXThisExpr 0x9cd10f0 <col:34> 'basic_string<_CharT, _Traits, _Alloc> *' this))))")
      (IfStmt 0x9cd17b0 <line:306:4, line:316:6>
        <<<NULL>>>
        (BinaryOperator 0x9cd1370 <line:306:8, col:59> '<dependent type>' '||'
          (CXXOperatorCallExpr 0x9cd12a0 <col:8, col:31> '<dependent type>'
            (UnresolvedLookupExpr 0x9cd1258 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b42c70 0x9ac83c0 0x9b5e730 0x9cbd1f0 0x9cbd720 0x9cbdc50)
            (DeclRefExpr 0x9cd11d8 <col:8> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9cd10a0 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type')
            (CallExpr 0x9cd1238 <col:16, col:31> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9cd1200 <col:16, col:22> '<dependent type>' lvalue
                (CXXThisExpr 0x9cd11f0 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
          (CallExpr 0x9cd1350 <col:36, col:59> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9cd1318 <col:36, col:46> '<dependent type>' lvalue
              (CallExpr 0x9cd12f8 <col:36, col:43> '<dependent type>'
                (MemberExpr 0x9cd12d8 <col:36> '<bound member function type>' ->_M_rep 0x9c7fc30
                  (CXXThisExpr 0x9cd12c8 <col:36> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
        (CompoundStmt 0x9cd1798 <line:307:6, line:316:6>
          (IfStmt 0x9cd1778 <line:308:8, line:315:3>
            <<<NULL>>>
            (CallExpr 0x9cd13d0 <line:308:12, col:27> '<dependent type>'
              (MemberExpr 0x9cd1398 <col:12> '<bound member function type>' ->_M_disjunct 0x9c82d80
                (CXXThisExpr 0x9cd1388 <col:12> 'basic_string<_CharT, _Traits, _Alloc> *' this))
              (DeclRefExpr 0x9cd13b8 <col:24> 'const _CharT *' lvalue ParmVar 0x9cd0cc0 '__s' 'const _CharT *'))
            (CallExpr 0x9cd1450 <line:309:3, col:22> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9cd1400 <col:3, col:9> '<dependent type>' lvalue
                (CXXThisExpr 0x9cd13f0 <col:3> 'basic_string<_CharT, _Traits, _Alloc> *' this))
              (DeclRefExpr 0x9cd1434 <col:17> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9cd10a0 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))
            (CompoundStmt 0x9cd1758 <line:311:3, line:315:3>
              (DeclStmt 0x9cd15a0 <line:312:5, col:44>
                0x9cd1480 "const size_type __off =
                  (CXXOperatorCallExpr 0x9cd1578 <col:29, col:43> '<dependent type>'
                    (UnresolvedLookupExpr 0x9cd1540 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
                    (DeclRefExpr 0x9cd14b4 <col:29> 'const _CharT *' lvalue ParmVar 0x9cd0cc0 '__s' 'const _CharT *')
                    (CallExpr 0x9cd1520 <col:35, col:43> '<dependent type>'
                      (UnresolvedMemberExpr 0x9cd14e0 <col:35> '<bound member function type>' lvalue)))")
              (CallExpr 0x9cd1610 <line:313:5, col:24> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9cd15c0 <col:5, col:11> '<dependent type>' lvalue
                  (CXXThisExpr 0x9cd15b0 <col:5> 'basic_string<_CharT, _Traits, _Alloc> *' this))
                (DeclRefExpr 0x9cd15f4 <col:19> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9cd10a0 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))
              (BinaryOperator 0x9cd1740 <line:314:5, col:23> '<dependent type>' '='
                (DeclRefExpr 0x9cd1630 <col:5> 'const _CharT *' lvalue ParmVar 0x9cd0cc0 '__s' 'const _CharT *')
                (CXXOperatorCallExpr 0x9cd1718 <col:11, col:23> '<dependent type>'
                  (UnresolvedLookupExpr 0x9cd16d0 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9cb4d00 0x9cb7ab0 0x9cb8030 0x9cb8830)
                  (CallExpr 0x9cd1698 <col:11, col:19> '<dependent type>'
                    (UnresolvedMemberExpr 0x9cd1658 <col:11> '<bound member function type>' lvalue))
                  (DeclRefExpr 0x9cd16b4 <col:23> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9cd1480 '__off' 'const size_type':'const typename _CharT_alloc_type::size_type'))))))
        <<<NULL>>>)
      (CallExpr 0x9cd1960 <line:317:4, col:46> '<dependent type>'
        (DeclRefExpr 0x9cd17cc <col:4> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9c82f50 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
        (CXXOperatorCallExpr 0x9cd1908 <col:12, col:35> '<dependent type>'
          (UnresolvedLookupExpr 0x9cd18c0 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9cb4d00 0x9cb7ab0 0x9cb8030 0x9cb8830)
          (CallExpr 0x9cd1838 <col:12, col:20> '<dependent type>'
            (UnresolvedMemberExpr 0x9cd17f8 <col:12> '<bound member function type>' lvalue))
          (CallExpr 0x9cd18a0 <col:24, col:35> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9cd1868 <col:24, col:30> '<dependent type>' lvalue
              (CXXThisExpr 0x9cd1858 <col:24> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (DeclRefExpr 0x9cd192c <col:38> 'const _CharT *' lvalue ParmVar 0x9cd0cc0 '__s' 'const _CharT *')
        (DeclRefExpr 0x9cd1944 <col:43> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cd0d00 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
      (CallExpr 0x9cd1a28 <line:318:4, col:46> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cd19d8 <col:4, col:14> '<dependent type>' lvalue
          (CallExpr 0x9cd19b8 <col:4, col:11> '<dependent type>'
            (MemberExpr 0x9cd1998 <col:4> '<bound member function type>' ->_M_rep 0x9c7fc30
              (CXXThisExpr 0x9cd1988 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (DeclRefExpr 0x9cd1a0c <col:41> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9cd10a0 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (ReturnStmt 0x9cd1ab8 <line:320:7, col:15>
    (UnaryOperator 0x9cd1aa0 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9cd1a90 <col:15> 'basic_string<_CharT, _Traits, _Alloc> *' this))))


    basic_string<_CharT, _Traits, _Alloc> &append(const basic_string<_CharT, _Traits, _Alloc> &__str) (CompoundStmt 0x9cd29d0 </usr/include/c++/4.6/bits/basic_string.tcc:327:5, line:338:5>
  (DeclStmt 0x9cd22c8 <line:328:7, col:44>
    0x9cd2220 "const size_type __size =
      (CallExpr 0x9cd22a8 <col:32, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cd2270 <col:32, col:38> '<dependent type>' lvalue
          (DeclRefExpr 0x9cd2254 <col:32> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9cd1f90 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))")
  (IfStmt 0x9cd2978 <line:329:7, line:336:2>
    <<<NULL>>>
    (DeclRefExpr 0x9cd22d8 <line:329:11> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9cd2220 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
    (CompoundStmt 0x9cd2958 <line:330:2, line:336:2>
      (DeclStmt 0x9cd2428 <line:331:4, col:49>
        0x9cd2300 "const size_type __len =
          (CXXOperatorCallExpr 0x9cd2400 <col:28, col:48> '<dependent type>'
            (UnresolvedLookupExpr 0x9cd23b8 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9cb4d00 0x9cb7ab0 0x9cb8030 0x9cb8830)
            (DeclRefExpr 0x9cd2334 <col:28> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9cd2220 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
            (CallExpr 0x9cd2398 <col:37, col:48> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9cd2360 <col:37, col:43> '<dependent type>' lvalue
                (CXXThisExpr 0x9cd2350 <col:37> 'basic_string<_CharT, _Traits, _Alloc> *' this))))")
      (IfStmt 0x9cd2668 <line:332:4, line:333:25>
        <<<NULL>>>
        (BinaryOperator 0x9cd25d0 <line:332:8, col:59> '<dependent type>' '||'
          (CXXOperatorCallExpr 0x9cd2500 <col:8, col:31> '<dependent type>'
            (UnresolvedLookupExpr 0x9cd24b8 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b42c70 0x9ac83c0 0x9b5e730 0x9cbd1f0 0x9cbd720 0x9cbdc50)
            (DeclRefExpr 0x9cd2438 <col:8> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9cd2300 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type')
            (CallExpr 0x9cd2498 <col:16, col:31> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9cd2460 <col:16, col:22> '<dependent type>' lvalue
                (CXXThisExpr 0x9cd2450 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
          (CallExpr 0x9cd25b0 <col:36, col:59> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9cd2578 <col:36, col:46> '<dependent type>' lvalue
              (CallExpr 0x9cd2558 <col:36, col:43> '<dependent type>'
                (MemberExpr 0x9cd2538 <col:36> '<bound member function type>' ->_M_rep 0x9c7fc30
                  (CXXThisExpr 0x9cd2528 <col:36> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
        (CallExpr 0x9cd2648 <line:333:6, col:25> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9cd25f8 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x9cd25e8 <col:6> 'basic_string<_CharT, _Traits, _Alloc> *' this))
          (DeclRefExpr 0x9cd262c <col:20> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9cd2300 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)
      (CallExpr 0x9cd2870 <line:334:4, col:61> '<dependent type>'
        (DeclRefExpr 0x9cd2684 <col:4> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9c82f50 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
        (CXXOperatorCallExpr 0x9cd27c0 <col:12, col:35> '<dependent type>'
          (UnresolvedLookupExpr 0x9cd2778 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9cb4d00 0x9cb7ab0 0x9cb8030 0x9cb8830)
          (CallExpr 0x9cd26f0 <col:12, col:20> '<dependent type>'
            (UnresolvedMemberExpr 0x9cd26b0 <col:12> '<bound member function type>' lvalue))
          (CallExpr 0x9cd2758 <col:24, col:35> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9cd2720 <col:24, col:30> '<dependent type>' lvalue
              (CXXThisExpr 0x9cd2710 <col:24> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (CallExpr 0x9cd2838 <col:38, col:52> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9cd2800 <col:38, col:44> '<dependent type>' lvalue
            (DeclRefExpr 0x9cd27e4 <col:38> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9cd1f90 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
        (DeclRefExpr 0x9cd2854 <col:55> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9cd2220 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type'))
      (CallExpr 0x9cd2938 <line:335:4, col:46> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cd28e8 <col:4, col:14> '<dependent type>' lvalue
          (CallExpr 0x9cd28c8 <col:4, col:11> '<dependent type>'
            (MemberExpr 0x9cd28a8 <col:4> '<bound member function type>' ->_M_rep 0x9c7fc30
              (CXXThisExpr 0x9cd2898 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (DeclRefExpr 0x9cd291c <col:41> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9cd2300 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (ReturnStmt 0x9cd29c0 <line:337:7, col:15>
    (UnaryOperator 0x9cd29a8 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9cd2998 <col:15> 'basic_string<_CharT, _Traits, _Alloc> *' this))))


    basic_string<_CharT, _Traits, _Alloc> &append(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos, size_type __n) (CompoundStmt 0x9cd3ae0 </usr/include/c++/4.6/bits/basic_string.tcc:344:5, line:356:5>
  (CallExpr 0x9cd3248 <line:345:7, col:51> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9cd31c8 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0x9cd31ac <col:7> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9cd2e90 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
    (DeclRefExpr 0x9cd31fc <col:22> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cd2ed0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0x9cd3214 <col:29> 'const char [21]' lvalue "basic_string::append"))
  (BinaryOperator 0x9cd3330 <line:346:7, col:38> '<dependent type>' '='
    (DeclRefExpr 0x9cd326c <col:7> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cd2f10 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0x9cd3308 <col:13, col:38> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9cd32a0 <col:13, col:19> '<dependent type>' lvalue
        (DeclRefExpr 0x9cd3284 <col:13> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9cd2e90 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
      (DeclRefExpr 0x9cd32d4 <col:28> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cd2ed0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9cd32ec <col:35> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cd2f10 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))
  (IfStmt 0x9cd3a88 <line:347:7, line:354:2>
    <<<NULL>>>
    (DeclRefExpr 0x9cd3348 <line:347:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cd2f10 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (CompoundStmt 0x9cd3a68 <line:348:2, line:354:2>
      (DeclStmt 0x9cd3498 <line:349:4, col:46>
        0x9cd3370 "const size_type __len =
          (CXXOperatorCallExpr 0x9cd3470 <col:28, col:45> '<dependent type>'
            (UnresolvedLookupExpr 0x9cd3428 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9cb4d00 0x9cb7ab0 0x9cb8030 0x9cb8830)
            (DeclRefExpr 0x9cd33a4 <col:28> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cd2f10 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
            (CallExpr 0x9cd3408 <col:34, col:45> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9cd33d0 <col:34, col:40> '<dependent type>' lvalue
                (CXXThisExpr 0x9cd33c0 <col:34> 'basic_string<_CharT, _Traits, _Alloc> *' this))))")
      (IfStmt 0x9cd36d8 <line:350:4, line:351:25>
        <<<NULL>>>
        (BinaryOperator 0x9cd3640 <line:350:8, col:59> '<dependent type>' '||'
          (CXXOperatorCallExpr 0x9cd3570 <col:8, col:31> '<dependent type>'
            (UnresolvedLookupExpr 0x9cd3528 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b42c70 0x9ac83c0 0x9b5e730 0x9cbd1f0 0x9cbd720 0x9cbdc50)
            (DeclRefExpr 0x9cd34a8 <col:8> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9cd3370 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type')
            (CallExpr 0x9cd3508 <col:16, col:31> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9cd34d0 <col:16, col:22> '<dependent type>' lvalue
                (CXXThisExpr 0x9cd34c0 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
          (CallExpr 0x9cd3620 <col:36, col:59> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9cd35e8 <col:36, col:46> '<dependent type>' lvalue
              (CallExpr 0x9cd35c8 <col:36, col:43> '<dependent type>'
                (MemberExpr 0x9cd35a8 <col:36> '<bound member function type>' ->_M_rep 0x9c7fc30
                  (CXXThisExpr 0x9cd3598 <col:36> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
        (CallExpr 0x9cd36b8 <line:351:6, col:25> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9cd3668 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x9cd3658 <col:6> 'basic_string<_CharT, _Traits, _Alloc> *' this))
          (DeclRefExpr 0x9cd369c <col:20> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9cd3370 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)
      (CallExpr 0x9cd3980 <line:352:4, col:66> '<dependent type>'
        (DeclRefExpr 0x9cd36f4 <col:4> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9c82f50 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
        (CXXOperatorCallExpr 0x9cd3848 <col:12, col:35> '<dependent type>'
          (UnresolvedLookupExpr 0x9cd37e8 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9cb4d00 0x9cb7ab0 0x9cb8030 0x9cb8830)
          (CallExpr 0x9cd3760 <col:12, col:20> '<dependent type>'
            (UnresolvedMemberExpr 0x9cd3720 <col:12> '<bound member function type>' lvalue))
          (CallExpr 0x9cd37c8 <col:24, col:35> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9cd3790 <col:24, col:30> '<dependent type>' lvalue
              (CXXThisExpr 0x9cd3780 <col:24> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (CXXOperatorCallExpr 0x9cd3940 <col:38, col:56> '<dependent type>'
          (UnresolvedLookupExpr 0x9cd38f8 <col:54, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9cb4d00 0x9cb7ab0 0x9cb8030 0x9cb8830)
          (CallExpr 0x9cd38c0 <col:38, col:52> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9cd3888 <col:38, col:44> '<dependent type>' lvalue
              (DeclRefExpr 0x9cd386c <col:38> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9cd2e90 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
          (DeclRefExpr 0x9cd38dc <col:56> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cd2ed0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        (DeclRefExpr 0x9cd3964 <col:63> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cd2f10 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
      (CallExpr 0x9cd3a48 <line:353:4, col:46> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cd39f8 <col:4, col:14> '<dependent type>' lvalue
          (CallExpr 0x9cd39d8 <col:4, col:11> '<dependent type>'
            (MemberExpr 0x9cd39b8 <col:4> '<bound member function type>' ->_M_rep 0x9c7fc30
              (CXXThisExpr 0x9cd39a8 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (DeclRefExpr 0x9cd3a2c <col:41> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9cd3370 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (ReturnStmt 0x9cd3ad0 <line:355:7, col:15>
    (UnaryOperator 0x9cd3ab8 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9cd3aa8 <col:15> 'basic_string<_CharT, _Traits, _Alloc> *' this))))


    basic_string<_CharT, _Traits, _Alloc> &insert(size_type __pos, const _CharT *__s, size_type __n) (CompoundStmt 0x9cd52d0 </usr/include/c++/4.6/bits/basic_string.tcc:362:6, line:387:6>
  (NullStmt 0x9cd42e0 <line:363:47>)
  (CallExpr 0x9cd4368 <line:364:8, col:46> '<dependent type>'
    (MemberExpr 0x9cd4300 <col:8> '<bound member function type>' ->_M_check 0x9c7ff40
      (CXXThisExpr 0x9cd42f0 <col:8> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9cd4320 <col:17> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cd3f90 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0x9cd4338 <col:24> 'const char [21]' lvalue "basic_string::insert"))
  (CallExpr 0x9cd4448 <line:365:8, col:65> '<dependent type>'
    (MemberExpr 0x9cd43a0 <col:8> '<bound member function type>' ->_M_check_length 0x9c82ae0
      (CXXThisExpr 0x9cd4390 <col:8> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (CXXUnresolvedConstructExpr 0x9cd43e0 <col:24, col:35> 'size_type':'typename _CharT_alloc_type::size_type'
      (IntegerLiteral 0x9cd43c8 <col:34> 'int' 0))
    (DeclRefExpr 0x9cd43fc <col:38> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cd4040 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0x9cd4414 <col:43> 'const char [21]' lvalue "basic_string::insert"))
  (IfStmt 0x9cd52b0 <line:366:8, line:386:10>
    <<<NULL>>>
    (BinaryOperator 0x9cd4580 <line:366:12, col:55> '<dependent type>' '||'
      (CallExpr 0x9cd44b8 <col:12, col:27> '<dependent type>'
        (MemberExpr 0x9cd4480 <col:12> '<bound member function type>' ->_M_disjunct 0x9c82d80
          (CXXThisExpr 0x9cd4470 <col:12> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x9cd44a0 <col:24> 'const _CharT *' lvalue ParmVar 0x9cd4000 '__s' 'const _CharT *'))
      (CallExpr 0x9cd4560 <col:32, col:55> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cd4528 <col:32, col:42> '<dependent type>' lvalue
          (CallExpr 0x9cd4508 <col:32, col:39> '<dependent type>'
            (MemberExpr 0x9cd44e8 <col:32> '<bound member function type>' ->_M_rep 0x9c7fc30
              (CXXThisExpr 0x9cd44d8 <col:32> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
    (ReturnStmt 0x9cd4680 <line:367:10, col:62>
      (CallExpr 0x9cd4650 <col:17, col:62> '<dependent type>'
        (MemberExpr 0x9cd45a8 <col:17> '<bound member function type>' ->_M_replace_safe 0x9c97ba0
          (CXXThisExpr 0x9cd4598 <col:17> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x9cd45c8 <col:33> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cd3f90 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (CXXUnresolvedConstructExpr 0x9cd4600 <col:40, col:51> 'size_type':'typename _CharT_alloc_type::size_type'
          (IntegerLiteral 0x9cd45e8 <col:50> 'int' 0))
        (DeclRefExpr 0x9cd461c <col:54> 'const _CharT *' lvalue ParmVar 0x9cd4000 '__s' 'const _CharT *')
        (DeclRefExpr 0x9cd4634 <col:59> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cd4040 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))
    (CompoundStmt 0x9cd5288 <line:369:10, line:386:10>
      (DeclStmt 0x9cd47c0 <line:371:12, col:51>
        0x9cd46a0 "const size_type __off =
          (CXXOperatorCallExpr 0x9cd4798 <col:36, col:50> '<dependent type>'
            (UnresolvedLookupExpr 0x9cd4760 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
            (DeclRefExpr 0x9cd46d4 <col:36> 'const _CharT *' lvalue ParmVar 0x9cd4000 '__s' 'const _CharT *')
            (CallExpr 0x9cd4740 <col:42, col:50> '<dependent type>'
              (UnresolvedMemberExpr 0x9cd4700 <col:42> '<bound member function type>' lvalue)))")
      (CallExpr 0x9cd4848 <line:372:12, col:35> '<dependent type>'
        (MemberExpr 0x9cd47e0 <col:12> '<bound member function type>' ->_M_mutate 0x9c83f20
          (CXXThisExpr 0x9cd47d0 <col:12> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x9cd4800 <col:22> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cd3f90 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (IntegerLiteral 0x9cd4818 <col:29> 'int' 0)
        (DeclRefExpr 0x9cd4830 <col:32> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cd4040 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
      (BinaryOperator 0x9cd4980 <line:373:12, col:30> '<dependent type>' '='
        (DeclRefExpr 0x9cd4870 <col:12> 'const _CharT *' lvalue ParmVar 0x9cd4000 '__s' 'const _CharT *')
        (CXXOperatorCallExpr 0x9cd4958 <col:18, col:30> '<dependent type>'
          (UnresolvedLookupExpr 0x9cd4910 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9cb4d00 0x9cb7ab0 0x9cb8030 0x9cb8830)
          (CallExpr 0x9cd48d8 <col:18, col:26> '<dependent type>'
            (UnresolvedMemberExpr 0x9cd4898 <col:18> '<bound member function type>' lvalue))
          (DeclRefExpr 0x9cd48f4 <col:30> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9cd46a0 '__off' 'const size_type':'const typename _CharT_alloc_type::size_type')))
      (DeclStmt 0x9cd4b00 <line:374:12, col:43>
        0x9cd49d0 "_CharT *__p =
          (CXXOperatorCallExpr 0x9cd4ad8 <col:26, col:38> '<dependent type>'
            (UnresolvedLookupExpr 0x9cd4a90 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9cb4d00 0x9cb7ab0 0x9cb8030 0x9cb8830)
            (CallExpr 0x9cd4a58 <col:26, col:34> '<dependent type>'
              (UnresolvedMemberExpr 0x9cd4a18 <col:26> '<bound member function type>' lvalue))
            (DeclRefExpr 0x9cd4a74 <col:38> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cd3f90 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))")
      (IfStmt 0x9cd5230 <line:375:12, line:384:14>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9cd4c10 <line:375:16, col:30> '<dependent type>'
          (UnresolvedLookupExpr 0x9cd4bc8 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b43190 0x9ac87b0 0x9b5eb90 0x9cbe2d0 0x9cbe800 0x9cbed30)
          (CXXOperatorCallExpr 0x9cd4b88 <col:16, col:23> '<dependent type>'
            (UnresolvedLookupExpr 0x9cd4b40 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9cb4d00 0x9cb7ab0 0x9cb8030 0x9cb8830)
            (DeclRefExpr 0x9cd4b10 <col:16> 'const _CharT *' lvalue ParmVar 0x9cd4000 '__s' 'const _CharT *')
            (DeclRefExpr 0x9cd4b28 <col:23> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cd4040 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
          (DeclRefExpr 0x9cd4bac <col:30> '_CharT *' lvalue Var 0x9cd49d0 '__p' '_CharT *'))
        (CallExpr 0x9cd4c98 <line:376:14, col:35> '<dependent type>'
          (DeclRefExpr 0x9cd4c34 <col:14> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9c82f50 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
          (DeclRefExpr 0x9cd4c4c <col:22> '_CharT *' lvalue Var 0x9cd49d0 '__p' '_CharT *')
          (DeclRefExpr 0x9cd4c64 <col:27> 'const _CharT *' lvalue ParmVar 0x9cd4000 '__s' 'const _CharT *')
          (DeclRefExpr 0x9cd4c7c <col:32> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cd4040 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
        (IfStmt 0x9cd5210 <line:377:17, line:384:14>
          <<<NULL>>>
          (CXXOperatorCallExpr 0x9cd4d38 <line:377:21, col:28> '<dependent type>'
            (UnresolvedLookupExpr 0x9cd4cf0 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b436e0 0x9ac8bd0 0x9b5f010 0x9cbf3a0 0x9cbf900 0x9cbfe30)
            (DeclRefExpr 0x9cd4cc0 <col:21> 'const _CharT *' lvalue ParmVar 0x9cd4000 '__s' 'const _CharT *')
            (DeclRefExpr 0x9cd4cd8 <col:28> '_CharT *' lvalue Var 0x9cd49d0 '__p' '_CharT *'))
          (CallExpr 0x9cd4e48 <line:378:14, col:41> '<dependent type>'
            (DeclRefExpr 0x9cd4d5c <col:14> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9c82f50 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
            (DeclRefExpr 0x9cd4d74 <col:22> '_CharT *' lvalue Var 0x9cd49d0 '__p' '_CharT *')
            (CXXOperatorCallExpr 0x9cd4e08 <col:27, col:33> '<dependent type>'
              (UnresolvedLookupExpr 0x9cd4dc0 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9cb4d00 0x9cb7ab0 0x9cb8030 0x9cb8830)
              (DeclRefExpr 0x9cd4d8c <col:27> 'const _CharT *' lvalue ParmVar 0x9cd4000 '__s' 'const _CharT *')
              (DeclRefExpr 0x9cd4da4 <col:33> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cd4040 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
            (DeclRefExpr 0x9cd4e2c <col:38> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cd4040 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
          (CompoundStmt 0x9cd51f0 <line:380:14, line:384:14>
            (DeclStmt 0x9cd4f48 <line:381:9, col:44>
              0x9cd4e80 "const size_type __nleft =
                (CXXOperatorCallExpr 0x9cd4f20 <col:35, col:41> '<dependent type>'
                  (UnresolvedLookupExpr 0x9cd4ee8 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
                  (DeclRefExpr 0x9cd4eb4 <col:35> '_CharT *' lvalue Var 0x9cd49d0 '__p' '_CharT *')
                  (DeclRefExpr 0x9cd4ecc <col:41> 'const _CharT *' lvalue ParmVar 0x9cd4000 '__s' 'const _CharT *'))")
            (CallExpr 0x9cd4fb8 <line:382:16, col:41> '<dependent type>'
              (DeclRefExpr 0x9cd4f58 <col:16> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9c82f50 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
              (DeclRefExpr 0x9cd4f70 <col:24> '_CharT *' lvalue Var 0x9cd49d0 '__p' '_CharT *')
              (DeclRefExpr 0x9cd4f88 <col:29> 'const _CharT *' lvalue ParmVar 0x9cd4000 '__s' 'const _CharT *')
              (DeclRefExpr 0x9cd4fa0 <col:34> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9cd4e80 '__nleft' 'const size_type':'const typename _CharT_alloc_type::size_type'))
            (CallExpr 0x9cd51c8 <line:383:16, col:63> '<dependent type>'
              (DeclRefExpr 0x9cd4fe0 <col:16> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9c82f50 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
              (CXXOperatorCallExpr 0x9cd5070 <col:24, col:30> '<dependent type>'
                (UnresolvedLookupExpr 0x9cd5028 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9cb4d00 0x9cb7ab0 0x9cb8030 0x9cb8830)
                (DeclRefExpr 0x9cd4ff8 <col:24> '_CharT *' lvalue Var 0x9cd49d0 '__p' '_CharT *')
                (DeclRefExpr 0x9cd5010 <col:30> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9cd4e80 '__nleft' 'const size_type':'const typename _CharT_alloc_type::size_type'))
              (CXXOperatorCallExpr 0x9cd5110 <col:39, col:45> '<dependent type>'
                (UnresolvedLookupExpr 0x9cd50c8 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9cb4d00 0x9cb7ab0 0x9cb8030 0x9cb8830)
                (DeclRefExpr 0x9cd5094 <col:39> '_CharT *' lvalue Var 0x9cd49d0 '__p' '_CharT *')
                (DeclRefExpr 0x9cd50ac <col:45> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cd4040 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
              (CXXOperatorCallExpr 0x9cd51a0 <col:50, col:56> '<dependent type>'
                (UnresolvedLookupExpr 0x9cd5168 <col:54, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
                (DeclRefExpr 0x9cd5134 <col:50> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cd4040 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
                (DeclRefExpr 0x9cd514c <col:56> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9cd4e80 '__nleft' 'const size_type':'const typename _CharT_alloc_type::size_type'))))))
      (ReturnStmt 0x9cd5278 <line:385:12, col:20>
        (UnaryOperator 0x9cd5260 <col:19, col:20> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9cd5250 <col:20> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))


    typename basic_string<_CharT, _Traits, _Alloc>::iterator erase(iterator __first, iterator __last) (CompoundStmt 0x9cd5fd8 </usr/include/c++/4.6/bits/basic_string.tcc:393:6, line:410:6>
  (NullStmt 0x9cd5aa8 <line:395:28>)
  (DeclStmt 0x9cd5b88 <line:400:8, col:49>
    0x9cd5ac0 "const size_type __size =
      (CXXOperatorCallExpr 0x9cd5b60 <col:33, col:42> '<dependent type>'
        (UnresolvedLookupExpr 0x9cd5b28 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
        (DeclRefExpr 0x9cd5af4 <col:33> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9cd5820 '__last' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0x9cd5b0c <col:42> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9cd57e0 '__first' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'))")
  (IfStmt 0x9cd5fb8 <line:401:8, line:409:10>
    <<<NULL>>>
    (DeclRefExpr 0x9cd5b98 <line:401:12> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9cd5ac0 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
    (CompoundStmt 0x9cd5f70 <line:402:3, line:407:3>
      (DeclStmt 0x9cd5cc0 <line:403:5, col:50>
        0x9cd5bc0 "const size_type __pos =
          (CXXOperatorCallExpr 0x9cd5c98 <col:29, col:49> '<dependent type>'
            (UnresolvedLookupExpr 0x9cd5c60 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
            (DeclRefExpr 0x9cd5bf4 <col:29> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9cd57e0 '__first' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
            (CallExpr 0x9cd5c40 <col:39, col:49> '<dependent type>'
              (MemberExpr 0x9cd5c20 <col:39> '<bound member function type>' ->_M_ibegin 0x9c7fce0
                (CXXThisExpr 0x9cd5c10 <col:39> 'basic_string<_CharT, _Traits, _Alloc> *' this))))")
      (CallExpr 0x9cd5d70 <line:404:5, col:42> '<dependent type>'
        (MemberExpr 0x9cd5ce0 <col:5> '<bound member function type>' ->_M_mutate 0x9c83f20
          (CXXThisExpr 0x9cd5cd0 <col:5> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x9cd5d00 <col:15> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9cd5bc0 '__pos' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9cd5d18 <col:22> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9cd5ac0 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (CXXUnresolvedConstructExpr 0x9cd5d50 <col:30, col:41> 'size_type':'typename _CharT_alloc_type::size_type'
          (IntegerLiteral 0x9cd5d38 <col:40> 'int' 0)))
      (CallExpr 0x9cd5e20 <line:405:5, col:29> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cd5de8 <col:5, col:15> '<dependent type>' lvalue
          (CallExpr 0x9cd5dc8 <col:5, col:12> '<dependent type>'
            (MemberExpr 0x9cd5da8 <col:5> '<bound member function type>' ->_M_rep 0x9c7fc30
              (CXXThisExpr 0x9cd5d98 <col:5> 'basic_string<_CharT, _Traits, _Alloc> *' this)))))
      (ReturnStmt 0x9cd5f60 <line:406:5, col:38>
        (CXXUnresolvedConstructExpr 0x9cd5f40 <col:12, col:38> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'
          (CXXOperatorCallExpr 0x9cd5f18 <col:21, col:33> '<dependent type>'
            (UnresolvedLookupExpr 0x9cd5ed0 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9cb4d00 0x9cb7ab0 0x9cb8030 0x9cb8830)
            (CallExpr 0x9cd5e98 <col:21, col:29> '<dependent type>'
              (UnresolvedMemberExpr 0x9cd5e58 <col:21> '<bound member function type>' lvalue))
            (DeclRefExpr 0x9cd5eb4 <col:33> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9cd5bc0 '__pos' 'const size_type':'const typename _CharT_alloc_type::size_type')))))
    (ReturnStmt 0x9cd5fa8 <line:409:3, col:10>
      (DeclRefExpr 0x9cd5f90 <col:10> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9cd57e0 '__first' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'))))


    basic_string<_CharT, _Traits, _Alloc> &replace(size_type __pos, size_type __n1, const _CharT *__s, size_type __n2) (CompoundStmt 0x9cd7908 </usr/include/c++/4.6/bits/basic_string.tcc:417:6, line:441:6>
  (NullStmt 0x9cd6820 <line:418:48>)
  (CallExpr 0x9cd68b0 <line:419:8, col:47> '<dependent type>'
    (MemberExpr 0x9cd6840 <col:8> '<bound member function type>' ->_M_check 0x9c7ff40
      (CXXThisExpr 0x9cd6830 <col:8> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9cd6860 <col:17> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cd6490 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0x9cd6878 <col:24> 'const char [22]' lvalue "basic_string::replace"))
  (BinaryOperator 0x9cd6978 <line:420:8, col:35> '<dependent type>' '='
    (DeclRefExpr 0x9cd68d4 <col:8> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cd64d0 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0x9cd6950 <col:15, col:35> '<dependent type>'
      (MemberExpr 0x9cd6900 <col:15> '<bound member function type>' ->_M_limit 0x9c82c40
        (CXXThisExpr 0x9cd68f0 <col:15> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9cd6920 <col:24> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cd6490 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9cd6938 <col:31> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cd64d0 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')))
  (CallExpr 0x9cd6a28 <line:421:8, col:59> '<dependent type>'
    (MemberExpr 0x9cd69a0 <col:8> '<bound member function type>' ->_M_check_length 0x9c82ae0
      (CXXThisExpr 0x9cd6990 <col:8> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9cd69c0 <col:24> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cd64d0 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
    (DeclRefExpr 0x9cd69d8 <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cd6580 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0x9cd69f0 <col:36> 'const char [22]' lvalue "basic_string::replace"))
  (DeclStmt 0x9cd6a98 <line:422:8, col:19>
    0x9cd6a60 "bool __left")
  (IfStmt 0x9cd78e8 <line:423:8, line:440:3>
    <<<NULL>>>
    (BinaryOperator 0x9cd6bb8 <line:423:12, col:55> '<dependent type>' '||'
      (CallExpr 0x9cd6af0 <col:12, col:27> '<dependent type>'
        (MemberExpr 0x9cd6ab8 <col:12> '<bound member function type>' ->_M_disjunct 0x9c82d80
          (CXXThisExpr 0x9cd6aa8 <col:12> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x9cd6ad8 <col:24> 'const _CharT *' lvalue ParmVar 0x9cd6540 '__s' 'const _CharT *'))
      (CallExpr 0x9cd6b98 <col:32, col:55> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cd6b60 <col:32, col:42> '<dependent type>' lvalue
          (CallExpr 0x9cd6b40 <col:32, col:39> '<dependent type>'
            (MemberExpr 0x9cd6b20 <col:32> '<bound member function type>' ->_M_rep 0x9c7fc30
              (CXXThisExpr 0x9cd6b10 <col:32> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
    (ReturnStmt 0x9cd6c90 <line:424:10, col:55>
      (CallExpr 0x9cd6c60 <col:17, col:55> '<dependent type>'
        (MemberExpr 0x9cd6be0 <col:17> '<bound member function type>' ->_M_replace_safe 0x9c97ba0
          (CXXThisExpr 0x9cd6bd0 <col:17> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x9cd6c00 <col:33> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cd6490 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9cd6c18 <col:40> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cd64d0 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9cd6c30 <col:46> 'const _CharT *' lvalue ParmVar 0x9cd6540 '__s' 'const _CharT *')
        (DeclRefExpr 0x9cd6c48 <col:51> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cd6580 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')))
    (IfStmt 0x9cd78c8 <line:425:13, line:440:3>
      <<<NULL>>>
      (BinaryOperator 0x9cd70f8 <line:425:17, line:426:34> '<dependent type>' '||'
        (ParenExpr 0x9cd6ed8 <line:425:17, col:58> '<dependent type>'
          (BinaryOperator 0x9cd6ec0 <col:18, col:53> '<dependent type>' '='
            (DeclRefExpr 0x9cd6ca0 <col:18> '_Bool' lvalue Var 0x9cd6a60 '__left' '_Bool')
            (CXXOperatorCallExpr 0x9cd6e98 <col:27, col:53> '<dependent type>'
              (UnresolvedLookupExpr 0x9cd6e50 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b43190 0x9ac87b0 0x9b5eb90 0x9cbe2d0 0x9cbe800 0x9cbed30)
              (CXXOperatorCallExpr 0x9cd6d30 <col:27, col:33> '<dependent type>'
                (UnresolvedLookupExpr 0x9cd6ce8 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9cb4d00 0x9cb7ab0 0x9cb8030 0x9cb8830)
                (DeclRefExpr 0x9cd6cb8 <col:27> 'const _CharT *' lvalue ParmVar 0x9cd6540 '__s' 'const _CharT *')
                (DeclRefExpr 0x9cd6cd0 <col:33> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cd6580 '__n2' 'size_type':'typename _CharT_alloc_type::size_type'))
              (CXXOperatorCallExpr 0x9cd6e28 <col:41, col:53> '<dependent type>'
                (UnresolvedLookupExpr 0x9cd6de0 <col:51, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9cb4d00 0x9cb7ab0 0x9cb8030 0x9cb8830)
                (CallExpr 0x9cd6da8 <col:41, col:49> '<dependent type>'
                  (UnresolvedMemberExpr 0x9cd6d68 <col:41> '<bound member function type>' lvalue))
                (DeclRefExpr 0x9cd6dc4 <col:53> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cd6490 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')))))
        (CXXOperatorCallExpr 0x9cd70d0 <line:426:6, col:34> '<dependent type>'
          (UnresolvedLookupExpr 0x9cd7088 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b43190 0x9ac87b0 0x9b5eb90 0x9cbe2d0 0x9cbe800 0x9cbed30)
          (CXXOperatorCallExpr 0x9cd7048 <col:6, col:26> '<dependent type>'
            (UnresolvedLookupExpr 0x9cd7000 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9cb4d00 0x9cb7ab0 0x9cb8030 0x9cb8830)
            (CXXOperatorCallExpr 0x9cd6fc0 <col:6, col:18> '<dependent type>'
              (UnresolvedLookupExpr 0x9cd6f78 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9cb4d00 0x9cb7ab0 0x9cb8030 0x9cb8830)
              (CallExpr 0x9cd6f40 <col:6, col:14> '<dependent type>'
                (UnresolvedMemberExpr 0x9cd6f00 <col:6> '<bound member function type>' lvalue))
              (DeclRefExpr 0x9cd6f5c <col:18> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cd6490 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
            (DeclRefExpr 0x9cd6fe4 <col:26> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cd64d0 '__n1' 'size_type':'typename _CharT_alloc_type::size_type'))
          (DeclRefExpr 0x9cd706c <col:34> 'const _CharT *' lvalue ParmVar 0x9cd6540 '__s' 'const _CharT *')))
      (CompoundStmt 0x9cd76b0 <line:427:3, line:434:3>
        (DeclStmt 0x9cd7240 <line:429:5, col:38>
          0x9cd7120 "size_type __off =
            (CXXOperatorCallExpr 0x9cd7218 <col:23, col:37> '<dependent type>'
              (UnresolvedLookupExpr 0x9cd71e0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
              (DeclRefExpr 0x9cd7154 <col:23> 'const _CharT *' lvalue ParmVar 0x9cd6540 '__s' 'const _CharT *')
              (CallExpr 0x9cd71c0 <col:29, col:37> '<dependent type>'
                (UnresolvedMemberExpr 0x9cd7180 <col:29> '<bound member function type>' lvalue)))")
        (ConditionalOperator 0x9cd7370 <line:430:5, col:43> '<dependent type>'
          (ImplicitCastExpr 0x9cd7360 <col:5> '_Bool' <LValueToRValue>
            (DeclRefExpr 0x9cd7250 <col:5> '_Bool' lvalue Var 0x9cd6a60 '__left' '_Bool'))
          (DeclRefExpr 0x9cd7268 <col:14> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9cd7120 '__off' 'size_type':'typename _CharT_alloc_type::size_type')
          (ParenExpr 0x9cd7348 <col:22, col:43> '<dependent type>' lvalue
            (CompoundAssignOperator 0x9cd7328 <col:23, col:39> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
              (DeclRefExpr 0x9cd7280 <col:23> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9cd7120 '__off' 'size_type':'typename _CharT_alloc_type::size_type')
              (CXXOperatorCallExpr 0x9cd7300 <col:32, col:39> '<dependent type>'
                (UnresolvedLookupExpr 0x9cd72c8 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
                (DeclRefExpr 0x9cd7298 <col:32> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cd6580 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')
                (DeclRefExpr 0x9cd72b0 <col:39> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cd64d0 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')))))
        (CallExpr 0x9cd7408 <line:431:5, col:32> '<dependent type>'
          (MemberExpr 0x9cd73a0 <col:5> '<bound member function type>' ->_M_mutate 0x9c83f20
            (CXXThisExpr 0x9cd7390 <col:5> 'basic_string<_CharT, _Traits, _Alloc> *' this))
          (DeclRefExpr 0x9cd73c0 <col:15> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cd6490 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0x9cd73d8 <col:22> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cd64d0 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0x9cd73f0 <col:28> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cd6580 '__n2' 'size_type':'typename _CharT_alloc_type::size_type'))
        (CallExpr 0x9cd7650 <line:432:5, col:55> '<dependent type>'
          (DeclRefExpr 0x9cd7430 <col:5> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9c82f50 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
          (CXXOperatorCallExpr 0x9cd7518 <col:13, col:25> '<dependent type>'
            (UnresolvedLookupExpr 0x9cd74d0 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9cb4d00 0x9cb7ab0 0x9cb8030 0x9cb8830)
            (CallExpr 0x9cd7498 <col:13, col:21> '<dependent type>'
              (UnresolvedMemberExpr 0x9cd7458 <col:13> '<bound member function type>' lvalue))
            (DeclRefExpr 0x9cd74b4 <col:25> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cd6490 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
          (CXXOperatorCallExpr 0x9cd7610 <col:32, col:44> '<dependent type>'
            (UnresolvedLookupExpr 0x9cd75c8 <col:42, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9cb4d00 0x9cb7ab0 0x9cb8030 0x9cb8830)
            (CallExpr 0x9cd7590 <col:32, col:40> '<dependent type>'
              (UnresolvedMemberExpr 0x9cd7550 <col:32> '<bound member function type>' lvalue))
            (DeclRefExpr 0x9cd75ac <col:44> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9cd7120 '__off' 'size_type':'typename _CharT_alloc_type::size_type'))
          (DeclRefExpr 0x9cd7634 <col:51> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cd6580 '__n2' 'size_type':'typename _CharT_alloc_type::size_type'))
        (ReturnStmt 0x9cd76a0 <line:433:5, col:13>
          (UnaryOperator 0x9cd7688 <col:12, col:13> '<dependent type>' prefix '*'
            (CXXThisExpr 0x9cd7678 <col:13> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CompoundStmt 0x9cd78b0 <line:436:3, line:440:3>
        (DeclStmt 0x9cd7768 <line:438:5, col:40>
          0x9cd76e0 "const basic_string<_CharT, _Traits, _Alloc> __tmp =
            (ParenListExpr 0x9cd7748 <col:29, col:39> 'const basic_string<_CharT, _Traits, _Alloc>'
              (DeclRefExpr 0x9cd7714 <col:30> 'const _CharT *' lvalue ParmVar 0x9cd6540 '__s' 'const _CharT *')
              (DeclRefExpr 0x9cd772c <col:35> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cd6580 '__n2' 'size_type':'typename _CharT_alloc_type::size_type'))")
        (ReturnStmt 0x9cd78a0 <line:439:5, col:62>
          (CallExpr 0x9cd7870 <col:12, col:62> '<dependent type>'
            (MemberExpr 0x9cd7788 <col:12> '<bound member function type>' ->_M_replace_safe 0x9c97ba0
              (CXXThisExpr 0x9cd7778 <col:12> 'basic_string<_CharT, _Traits, _Alloc> *' this))
            (DeclRefExpr 0x9cd77a8 <col:28> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cd6490 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
            (DeclRefExpr 0x9cd77c0 <col:35> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cd64d0 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
            (CallExpr 0x9cd7828 <col:41, col:55> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9cd77f0 <col:41, col:47> '<dependent type>' lvalue
                (DeclRefExpr 0x9cd77d8 <col:41> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9cd76e0 '__tmp' 'const basic_string<_CharT, _Traits, _Alloc>')))
            (DeclRefExpr 0x9cd7854 <col:58> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cd6580 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')))))))


    void _M_destroy(const _Alloc &__a) throw() (CompoundStmt 0x9cd8130 </usr/include/c++/4.6/bits/basic_string.tcc:447:5, line:451:5>
  (DeclStmt 0x9cd8018 <line:448:7, line:449:65>
    0x9cd7e30 "const size_type __size =
      (CXXOperatorCallExpr 0x9cd7ff0 <line:448:32, line:449:64> '<dependent type>'
        (UnresolvedLookupExpr 0x9cd7fa8 <line:448:50, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9cb4d00 0x9cb7ab0 0x9cb8030 0x9cb8830)
        (UnaryExprOrTypeTraitExpr 0x9cd7e70 <col:32, col:48> 'unsigned int' sizeof 'struct std::basic_string::_Rep_base')
        (BinaryOperator 0x9cd7f90 <line:449:25, col:64> '<dependent type>' '*'
          (ParenExpr 0x9cd7f58 <col:25, col:47> '<dependent type>'
            (CXXOperatorCallExpr 0x9cd7f30 <col:26, col:46> '<dependent type>'
              (UnresolvedLookupExpr 0x9cd7ee8 <col:44, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9cb4d00 0x9cb7ab0 0x9cb8030 0x9cb8830)
              (CXXDependentScopeMemberExpr 0x9cd7e98 <col:26, col:32> '<dependent type>' lvalue
                (CXXThisExpr 0x9cd7e88 <col:26> 'struct std::basic_string::_Rep *' this))
              (IntegerLiteral 0x9cd7ed0 <col:46> 'int' 1)))
          (UnaryExprOrTypeTraitExpr 0x9cd7f78 <col:51, col:64> 'unsigned int' sizeof '_CharT')))")
  (CallExpr 0x9cd8108 <line:450:7, col:77> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9cd8080 <col:7, col:29> '<dependent type>' lvalue
      (CXXUnresolvedConstructExpr 0x9cd8060 <col:7, col:27> '_Raw_bytes_alloc':'typename _Alloc::_Alloc::rebind<char>::other'
        (DeclRefExpr 0x9cd8048 <col:24> 'const _Alloc' lvalue ParmVar 0x9cd7d10 '__a' 'const _Alloc &')))
    (CXXReinterpretCastExpr 0x9cd80d8 <col:40, col:68> 'char *' reinterpret_cast<char *> <Dependent>
      (CXXThisExpr 0x9cd80b8 <col:64> 'struct std::basic_string::_Rep *' this))
    (DeclRefExpr 0x9cd80f0 <col:71> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9cd7e30 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')))


    void _M_leak_hard() (CompoundStmt 0x9cd88c0 </usr/include/c++/4.6/bits/basic_string.tcc:457:5, line:465:5>
  (IfStmt 0x9cd8690 <line:459:7, line:460:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9cd8658 <line:459:11, col:37> '<dependent type>'
      (UnresolvedLookupExpr 0x9cd8600 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90 0x9cb91e0 0x9cb9c50 0x9cba490 0x9cbaa00)
      (CallExpr 0x9cd8590 <col:11, col:18> '<dependent type>'
        (MemberExpr 0x9cd8570 <col:11> '<bound member function type>' ->_M_rep 0x9c7fc30
          (CXXThisExpr 0x9cd8560 <col:11> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
      (UnaryOperator 0x9cd85e8 <col:23, col:37> '<dependent type>' prefix '&'
        (CallExpr 0x9cd85c8 <col:24, col:37> '<dependent type>'
          (DeclRefExpr 0x9cd85ac <col:24> 'struct std::basic_string::_Rep &(void)' lvalue CXXMethod 0x9c84030 '_S_empty_rep' 'struct std::basic_string::_Rep &(void)'))))
    (ReturnStmt 0x9cd8680 <line:460:2>)
    <<<NULL>>>)
  (IfStmt 0x9cd87f8 <line:462:7, line:463:19>
    <<<NULL>>>
    (CallExpr 0x9cd8738 <line:462:11, col:34> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9cd8700 <col:11, col:21> '<dependent type>' lvalue
        (CallExpr 0x9cd86e0 <col:11, col:18> '<dependent type>'
          (MemberExpr 0x9cd86c0 <col:11> '<bound member function type>' ->_M_rep 0x9c7fc30
            (CXXThisExpr 0x9cd86b0 <col:11> 'basic_string<_CharT, _Traits, _Alloc> *' this)))))
    (CallExpr 0x9cd87d0 <line:463:2, col:19> '<dependent type>'
      (MemberExpr 0x9cd8768 <col:2> '<bound member function type>' ->_M_mutate 0x9c83f20
        (CXXThisExpr 0x9cd8758 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (IntegerLiteral 0x9cd8788 <col:12> 'int' 0)
      (IntegerLiteral 0x9cd87a0 <col:15> 'int' 0)
      (IntegerLiteral 0x9cd87b8 <col:18> 'int' 0))
    <<<NULL>>>)
  (CallExpr 0x9cd88a0 <line:464:7, col:31> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9cd8868 <col:7, col:17> '<dependent type>' lvalue
      (CallExpr 0x9cd8848 <col:7, col:14> '<dependent type>'
        (MemberExpr 0x9cd8828 <col:7> '<bound member function type>' ->_M_rep 0x9c7fc30
          (CXXThisExpr 0x9cd8818 <col:7> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))


    void _M_mutate(size_type __pos, size_type __len1, size_type __len2) (CompoundStmt 0x9cda148 </usr/include/c++/4.6/bits/basic_string.tcc:471:5, line:498:5>
  (DeclStmt 0x9cd8e80 <line:472:7, col:48>
    0x9cd8de0 "const size_type __old_size =
      (CallExpr 0x9cd8e60 <col:36, col:47> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cd8e28 <col:36, col:42> '<dependent type>' lvalue
          (CXXThisExpr 0x9cd8e18 <col:36> 'basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (DeclStmt 0x9cd8ff0 <line:473:7, col:64>
    0x9cd8ea0 "const size_type __new_size =
      (CXXOperatorCallExpr 0x9cd8fc8 <col:36, col:58> '<dependent type>'
        (UnresolvedLookupExpr 0x9cd8f90 <col:56, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
        (CXXOperatorCallExpr 0x9cd8f50 <col:36, col:49> '<dependent type>'
          (UnresolvedLookupExpr 0x9cd8f08 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9cb4d00 0x9cb7ab0 0x9cb8030 0x9cb8830)
          (DeclRefExpr 0x9cd8ed4 <col:36> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9cd8de0 '__old_size' 'const size_type':'const typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0x9cd8eec <col:49> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cd8cd0 '__len2' 'size_type':'typename _CharT_alloc_type::size_type'))
        (DeclRefExpr 0x9cd8f74 <col:58> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cd8c90 '__len1' 'size_type':'typename _CharT_alloc_type::size_type'))")
  (DeclStmt 0x9cd9150 <line:474:7, col:63>
    0x9cd9010 "const size_type __how_much =
      (CXXOperatorCallExpr 0x9cd9128 <col:36, col:57> '<dependent type>'
        (UnresolvedLookupExpr 0x9cd90f0 <col:55, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
        (CXXOperatorCallExpr 0x9cd90b0 <col:36, col:49> '<dependent type>'
          (UnresolvedLookupExpr 0x9cd9078 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
          (DeclRefExpr 0x9cd9044 <col:36> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9cd8de0 '__old_size' 'const size_type':'const typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0x9cd905c <col:49> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cd8c50 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        (DeclRefExpr 0x9cd90d4 <col:57> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cd8c90 '__len1' 'size_type':'typename _CharT_alloc_type::size_type'))")
  (IfStmt 0x9cda068 <line:476:7, line:496:2>
    <<<NULL>>>
    (BinaryOperator 0x9cd92f8 <line:476:11, col:67> '<dependent type>' '||'
      (CXXOperatorCallExpr 0x9cd9228 <col:11, col:39> '<dependent type>'
        (UnresolvedLookupExpr 0x9cd91e0 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b42c70 0x9ac83c0 0x9b5e730 0x9cbd1f0 0x9cbd720 0x9cbdc50)
        (DeclRefExpr 0x9cd9160 <col:11> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9cd8ea0 '__new_size' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (CallExpr 0x9cd91c0 <col:24, col:39> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9cd9188 <col:24, col:30> '<dependent type>' lvalue
            (CXXThisExpr 0x9cd9178 <col:24> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CallExpr 0x9cd92d8 <col:44, col:67> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cd92a0 <col:44, col:54> '<dependent type>' lvalue
          (CallExpr 0x9cd9280 <col:44, col:51> '<dependent type>'
            (MemberExpr 0x9cd9260 <col:44> '<bound member function type>' ->_M_rep 0x9c7fc30
              (CXXThisExpr 0x9cd9250 <col:44> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
    (CompoundStmt 0x9cd9bd0 <line:477:2, line:490:2>
      (DeclStmt 0x9cd93a8 <line:479:4, col:46>
        0x9cd9320 "const allocator_type __a =
          (CallExpr 0x9cd9388 <col:31, col:45> '<dependent type>'
            (MemberExpr 0x9cd9368 <col:31> '<bound member function type>' ->get_allocator 0x9c99050
              (CXXThisExpr 0x9cd9358 <col:31> 'basic_string<_CharT, _Traits, _Alloc> *' this)))")
      (DeclStmt 0x9cd9520 <line:480:4, col:66>
        0x9cd93d0 "std::basic_string::_Rep *__r =
          (CallExpr 0x9cd94f8 <col:16, col:65> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9cd9428 <col:16, col:22> '<dependent type>' lvalue)
            (DeclRefExpr 0x9cd945c <col:32> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9cd8ea0 '__new_size' 'const size_type':'const typename _CharT_alloc_type::size_type')
            (CallExpr 0x9cd94c0 <col:44, col:59> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9cd9488 <col:44, col:50> '<dependent type>' lvalue
                (CXXThisExpr 0x9cd9478 <col:44> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
            (DeclRefExpr 0x9cd94dc <col:62> 'const allocator_type':'const _Alloc' lvalue Var 0x9cd9320 '__a' 'const allocator_type':'const _Alloc'))")
      (IfStmt 0x9cd9680 <line:482:4, line:483:49>
        <<<NULL>>>
        (DeclRefExpr 0x9cd9530 <line:482:8> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cd8c50 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (CallExpr 0x9cd9658 <line:483:6, col:49> '<dependent type>'
          (DeclRefExpr 0x9cd9548 <col:6> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9c82f50 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
          (CallExpr 0x9cd95b0 <col:14, col:30> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9cd9578 <col:14, col:19> '<dependent type>' lvalue
              (DeclRefExpr 0x9cd9560 <col:14> 'struct std::basic_string::_Rep *' lvalue Var 0x9cd93d0 '__r' 'struct std::basic_string::_Rep *')))
          (CallExpr 0x9cd9620 <col:33, col:41> '<dependent type>'
            (UnresolvedMemberExpr 0x9cd95e0 <col:33> '<bound member function type>' lvalue))
          (DeclRefExpr 0x9cd963c <col:44> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cd8c50 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)
      (IfStmt 0x9cd9a10 <line:484:4, line:486:45>
        <<<NULL>>>
        (DeclRefExpr 0x9cd969c <line:484:8> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9cd9010 '__how_much' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (CallExpr 0x9cd99e8 <line:485:6, line:486:45> '<dependent type>'
          (DeclRefExpr 0x9cd96b4 <line:485:6> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9c82f50 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
          (CXXOperatorCallExpr 0x9cd9828 <col:14, col:42> '<dependent type>'
            (UnresolvedLookupExpr 0x9cd97e0 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9cb4d00 0x9cb7ab0 0x9cb8030 0x9cb8830)
            (CXXOperatorCallExpr 0x9cd97a0 <col:14, col:34> '<dependent type>'
              (UnresolvedLookupExpr 0x9cd9758 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9cb4d00 0x9cb7ab0 0x9cb8030 0x9cb8830)
              (CallExpr 0x9cd9720 <col:14, col:30> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9cd96e8 <col:14, col:19> '<dependent type>' lvalue
                  (DeclRefExpr 0x9cd96cc <col:14> 'struct std::basic_string::_Rep *' lvalue Var 0x9cd93d0 '__r' 'struct std::basic_string::_Rep *')))
              (DeclRefExpr 0x9cd973c <col:34> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cd8c50 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
            (DeclRefExpr 0x9cd97c4 <col:42> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cd8cd0 '__len2' 'size_type':'typename _CharT_alloc_type::size_type'))
          (CXXOperatorCallExpr 0x9cd99a8 <line:486:7, col:27> '<dependent type>'
            (UnresolvedLookupExpr 0x9cd9960 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9cb4d00 0x9cb7ab0 0x9cb8030 0x9cb8830)
            (CXXOperatorCallExpr 0x9cd9920 <col:7, col:19> '<dependent type>'
              (UnresolvedLookupExpr 0x9cd98d8 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9cb4d00 0x9cb7ab0 0x9cb8030 0x9cb8830)
              (CallExpr 0x9cd98a0 <col:7, col:15> '<dependent type>'
                (UnresolvedMemberExpr 0x9cd9860 <col:7> '<bound member function type>' lvalue))
              (DeclRefExpr 0x9cd98bc <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cd8c50 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
            (DeclRefExpr 0x9cd9944 <col:27> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cd8c90 '__len1' 'size_type':'typename _CharT_alloc_type::size_type'))
          (DeclRefExpr 0x9cd99cc <col:35> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9cd9010 '__how_much' 'const size_type':'const typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)
      (CallExpr 0x9cd9ad0 <line:488:4, col:28> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cd9a80 <col:4, col:14> '<dependent type>' lvalue
          (CallExpr 0x9cd9a60 <col:4, col:11> '<dependent type>'
            (MemberExpr 0x9cd9a40 <col:4> '<bound member function type>' ->_M_rep 0x9c7fc30
              (CXXThisExpr 0x9cd9a30 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (DeclRefExpr 0x9cd9ab4 <col:25> 'const allocator_type':'const _Alloc' lvalue Var 0x9cd9320 '__a' 'const allocator_type':'const _Alloc'))
      (CallExpr 0x9cd9bb0 <line:489:4, col:29> '<dependent type>'
        (UnresolvedMemberExpr 0x9cd9b00 <col:4> '<bound member function type>' lvalue)
        (CallExpr 0x9cd9b90 <col:12, col:28> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9cd9b58 <col:12, col:17> '<dependent type>' lvalue
            (DeclRefExpr 0x9cd9b40 <col:12> 'struct std::basic_string::_Rep *' lvalue Var 0x9cd93d0 '__r' 'struct std::basic_string::_Rep *')))))
    (IfStmt 0x9cda048 <line:491:12, line:496:2>
      <<<NULL>>>
      (BinaryOperator 0x9cd9cc0 <line:491:16, col:40> '<dependent type>' '&&'
        (DeclRefExpr 0x9cd9bf8 <col:16> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9cd9010 '__how_much' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (CXXOperatorCallExpr 0x9cd9c98 <col:30, col:40> '<dependent type>'
          (UnresolvedLookupExpr 0x9cd9c40 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b412d0 0x9ac7fa0 0x9b5e2b0 0x9ba7d20 0x9bc7160 0x9bc74d0 0x9cbb090 0x9cbb590 0x9cbbad0)
          (DeclRefExpr 0x9cd9c10 <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cd8c90 '__len1' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0x9cd9c28 <col:40> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cd8cd0 '__len2' 'size_type':'typename _CharT_alloc_type::size_type')))
      (CompoundStmt 0x9cda030 <line:492:2, line:496:2>
        (CallExpr 0x9cda008 <line:494:4, line:495:43> '<dependent type>'
          (DeclRefExpr 0x9cd9cd8 <line:494:4> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9c830c0 '_M_move' 'void (_CharT *, const _CharT *, size_type)')
          (CXXOperatorCallExpr 0x9cd9e48 <col:12, col:32> '<dependent type>'
            (UnresolvedLookupExpr 0x9cd9e00 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9cb4d00 0x9cb7ab0 0x9cb8030 0x9cb8830)
            (CXXOperatorCallExpr 0x9cd9dc0 <col:12, col:24> '<dependent type>'
              (UnresolvedLookupExpr 0x9cd9d78 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9cb4d00 0x9cb7ab0 0x9cb8030 0x9cb8830)
              (CallExpr 0x9cd9d40 <col:12, col:20> '<dependent type>'
                (UnresolvedMemberExpr 0x9cd9d00 <col:12> '<bound member function type>' lvalue))
              (DeclRefExpr 0x9cd9d5c <col:24> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cd8c50 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
            (DeclRefExpr 0x9cd9de4 <col:32> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cd8cd0 '__len2' 'size_type':'typename _CharT_alloc_type::size_type'))
          (CXXOperatorCallExpr 0x9cd9fc8 <line:495:5, col:25> '<dependent type>'
            (UnresolvedLookupExpr 0x9cd9f80 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9cb4d00 0x9cb7ab0 0x9cb8030 0x9cb8830)
            (CXXOperatorCallExpr 0x9cd9f40 <col:5, col:17> '<dependent type>'
              (UnresolvedLookupExpr 0x9cd9ef8 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9cb4d00 0x9cb7ab0 0x9cb8030 0x9cb8830)
              (CallExpr 0x9cd9ec0 <col:5, col:13> '<dependent type>'
                (UnresolvedMemberExpr 0x9cd9e80 <col:5> '<bound member function type>' lvalue))
              (DeclRefExpr 0x9cd9edc <col:17> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cd8c50 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
            (DeclRefExpr 0x9cd9f64 <col:25> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cd8c90 '__len1' 'size_type':'typename _CharT_alloc_type::size_type'))
          (DeclRefExpr 0x9cd9fec <col:33> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9cd9010 '__how_much' 'const size_type':'const typename _CharT_alloc_type::size_type')))
      <<<NULL>>>))
  (CallExpr 0x9cda128 <line:497:7, col:54> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9cda0d8 <col:7, col:17> '<dependent type>' lvalue
      (CallExpr 0x9cda0b8 <col:7, col:14> '<dependent type>'
        (MemberExpr 0x9cda098 <col:7> '<bound member function type>' ->_M_rep 0x9c7fc30
          (CXXThisExpr 0x9cda088 <col:7> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
    (DeclRefExpr 0x9cda10c <col:44> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9cd8ea0 '__new_size' 'const size_type':'const typename _CharT_alloc_type::size_type')))


    void reserve(size_type __res = (IntegerLiteral 0x9c9d6f0 </usr/include/c++/4.6/bits/basic_string.h:788:37> 'int' 0)
) (CompoundStmt 0x9cdad90 </usr/include/c++/4.6/bits/basic_string.tcc:504:5, line:515:5>
  (IfStmt 0x9cdad70 <line:505:7, line:514:9>
    <<<NULL>>>
    (BinaryOperator 0x9cda770 <line:505:11, col:63> '<dependent type>' '||'
      (CXXOperatorCallExpr 0x9cda6a0 <col:11, col:35> '<dependent type>'
        (UnresolvedLookupExpr 0x9cda648 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b412d0 0x9ac7fa0 0x9b5e2b0 0x9ba7d20 0x9bc7160 0x9bc74d0 0x9cbb090 0x9cbb590 0x9cbbad0)
        (DeclRefExpr 0x9cda5c4 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cda4e0 '__res' 'size_type':'typename _CharT_alloc_type::size_type')
        (CallExpr 0x9cda628 <col:20, col:35> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9cda5f0 <col:20, col:26> '<dependent type>' lvalue
            (CXXThisExpr 0x9cda5e0 <col:20> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CallExpr 0x9cda750 <col:40, col:63> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cda718 <col:40, col:50> '<dependent type>' lvalue
          (CallExpr 0x9cda6f8 <col:40, col:47> '<dependent type>'
            (MemberExpr 0x9cda6d8 <col:40> '<bound member function type>' ->_M_rep 0x9c7fc30
              (CXXThisExpr 0x9cda6c8 <col:40> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
    (CompoundStmt 0x9cdad48 <line:506:9, line:514:9>
      (IfStmt 0x9cda910 <line:508:4, line:509:25>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9cda850 <line:508:8, col:27> '<dependent type>'
          (UnresolvedLookupExpr 0x9cda808 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40ad0 0x9b57c70 0x9b5ddb0 0x9cbc120 0x9cbc650 0x9cbcb80)
          (DeclRefExpr 0x9cda788 <col:8> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cda4e0 '__res' 'size_type':'typename _CharT_alloc_type::size_type')
          (CallExpr 0x9cda7e8 <col:16, col:27> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9cda7b0 <col:16, col:22> '<dependent type>' lvalue
              (CXXThisExpr 0x9cda7a0 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (BinaryOperator 0x9cda8f8 <line:509:6, col:25> '<dependent type>' '='
          (DeclRefExpr 0x9cda874 <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cda4e0 '__res' 'size_type':'typename _CharT_alloc_type::size_type')
          (CallExpr 0x9cda8d8 <col:14, col:25> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9cda8a0 <col:14, col:20> '<dependent type>' lvalue
              (CXXThisExpr 0x9cda890 <col:14> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        <<<NULL>>>)
      (DeclStmt 0x9cda9c8 <line:510:4, col:46>
        0x9cda940 "const allocator_type __a =
          (CallExpr 0x9cda9a8 <col:31, col:45> '<dependent type>'
            (MemberExpr 0x9cda988 <col:31> '<bound member function type>' ->get_allocator 0x9c99050
              (CXXThisExpr 0x9cda978 <col:31> 'basic_string<_CharT, _Traits, _Alloc> *' this)))")
      (DeclStmt 0x9cdabf0 <line:511:4, col:65>
        0x9cdaa10 "_CharT *__tmp =
          (CallExpr 0x9cdabc8 <col:20, col:64> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9cdaa98 <col:20, col:30> '<dependent type>' lvalue
              (CallExpr 0x9cdaa78 <col:20, col:27> '<dependent type>'
                (MemberExpr 0x9cdaa58 <col:20> '<bound member function type>' ->_M_rep 0x9c7fc30
                  (CXXThisExpr 0x9cdaa48 <col:20> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
            (DeclRefExpr 0x9cdaacc <col:39> 'const allocator_type':'const _Alloc' lvalue Var 0x9cda940 '__a' 'const allocator_type':'const _Alloc')
            (CXXOperatorCallExpr 0x9cdaba0 <col:44, col:63> '<dependent type>'
              (UnresolvedLookupExpr 0x9cdab68 <col:50, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
              (DeclRefExpr 0x9cdaae4 <col:44> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cda4e0 '__res' 'size_type':'typename _CharT_alloc_type::size_type')
              (CallExpr 0x9cdab48 <col:52, col:63> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9cdab10 <col:52, col:58> '<dependent type>' lvalue
                  (CXXThisExpr 0x9cdab00 <col:52> 'basic_string<_CharT, _Traits, _Alloc> *' this)))))")
      (CallExpr 0x9cdaca0 <line:512:4, col:28> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cdac50 <col:4, col:14> '<dependent type>' lvalue
          (CallExpr 0x9cdac30 <col:4, col:11> '<dependent type>'
            (MemberExpr 0x9cdac10 <col:4> '<bound member function type>' ->_M_rep 0x9c7fc30
              (CXXThisExpr 0x9cdac00 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (DeclRefExpr 0x9cdac84 <col:25> 'const allocator_type':'const _Alloc' lvalue Var 0x9cda940 '__a' 'const allocator_type':'const _Alloc'))
      (CallExpr 0x9cdad28 <line:513:4, col:17> '<dependent type>'
        (UnresolvedMemberExpr 0x9cdacd0 <col:4> '<bound member function type>' lvalue)
        (DeclRefExpr 0x9cdad10 <col:12> '_CharT *' lvalue Var 0x9cdaa10 '__tmp' '_CharT *')))
    <<<NULL>>>))


    void swap(basic_string<_CharT, _Traits, _Alloc> &__s) (CompoundStmt 0x9cdbd58 </usr/include/c++/4.6/bits/basic_string.tcc:521:5, line:542:5>
  (IfStmt 0x9cdb368 <line:522:7, line:523:28>
    <<<NULL>>>
    (CallExpr 0x9cdb2a0 <line:522:11, col:34> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9cdb268 <col:11, col:21> '<dependent type>' lvalue
        (CallExpr 0x9cdb248 <col:11, col:18> '<dependent type>'
          (MemberExpr 0x9cdb228 <col:11> '<bound member function type>' ->_M_rep 0x9c7fc30
            (CXXThisExpr 0x9cdb218 <col:11> 'basic_string<_CharT, _Traits, _Alloc> *' this)))))
    (CallExpr 0x9cdb348 <line:523:2, col:28> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9cdb310 <col:2, col:12> '<dependent type>' lvalue
        (CallExpr 0x9cdb2f0 <col:2, col:9> '<dependent type>'
          (MemberExpr 0x9cdb2d0 <col:2> '<bound member function type>' ->_M_rep 0x9c7fc30
            (CXXThisExpr 0x9cdb2c0 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this)))))
    <<<NULL>>>)
  (IfStmt 0x9cdb518 <line:524:7, line:525:32>
    <<<NULL>>>
    (CallExpr 0x9cdb430 <line:524:11, col:38> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9cdb3f8 <col:11, col:25> '<dependent type>' lvalue
        (CallExpr 0x9cdb3d8 <col:11, col:22> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9cdb3a0 <col:11, col:15> '<dependent type>' lvalue
            (DeclRefExpr 0x9cdb384 <col:11> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9cdb130 '__s' 'basic_string<_CharT, _Traits, _Alloc> &')))))
    (CallExpr 0x9cdb4f8 <line:525:2, col:32> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9cdb4c0 <col:2, col:16> '<dependent type>' lvalue
        (CallExpr 0x9cdb4a0 <col:2, col:13> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9cdb468 <col:2, col:6> '<dependent type>' lvalue
            (DeclRefExpr 0x9cdb44c <col:2> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9cdb130 '__s' 'basic_string<_CharT, _Traits, _Alloc> &')))))
    <<<NULL>>>)
  (IfStmt 0x9cdbd38 <line:526:7, line:541:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9cdb668 <line:526:11, col:54> '<dependent type>'
      (UnresolvedLookupExpr 0x9cdb610 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90 0x9cb91e0 0x9cb9c50 0x9cba490 0x9cbaa00)
      (CallExpr 0x9cdb580 <col:11, col:31> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cdb548 <col:11, col:17> '<dependent type>' lvalue
          (CXXThisExpr 0x9cdb538 <col:11> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
      (CallExpr 0x9cdb5f0 <col:36, col:54> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cdb5b8 <col:36, col:40> '<dependent type>' lvalue
          (DeclRefExpr 0x9cdb59c <col:36> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9cdb130 '__s' 'basic_string<_CharT, _Traits, _Alloc> &'))))
    (CompoundStmt 0x9cdb900 <line:527:2, line:531:2>
      (DeclStmt 0x9cdb768 <line:528:4, col:29>
        0x9cdb6c0 "_CharT *__tmp =
          (CallExpr 0x9cdb748 <col:20, col:28> '<dependent type>'
            (UnresolvedMemberExpr 0x9cdb708 <col:20> '<bound member function type>' lvalue))")
      (CallExpr 0x9cdb858 <line:529:4, col:25> '<dependent type>'
        (UnresolvedMemberExpr 0x9cdb788 <col:4> '<bound member function type>' lvalue)
        (CallExpr 0x9cdb818 <col:12, col:24> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9cdb7e0 <col:12, col:16> '<dependent type>' lvalue
            (DeclRefExpr 0x9cdb7c8 <col:12> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9cdb130 '__s' 'basic_string<_CharT, _Traits, _Alloc> &'))))
      (CallExpr 0x9cdb8e0 <line:530:4, col:21> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cdb890 <col:4, col:8> '<dependent type>' lvalue
          (DeclRefExpr 0x9cdb878 <col:4> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9cdb130 '__s' 'basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x9cdb8c4 <col:16> '_CharT *' lvalue Var 0x9cdb6c0 '__tmp' '_CharT *')))
    (CompoundStmt 0x9cdbd18 <line:534:2, line:541:2>
      (DeclStmt 0x9cdbaa0 <line:535:4, line:536:29>
        0x9cdb930 "const basic_string<_CharT, _Traits, _Alloc> __tmp1 =
          (ParenListExpr 0x9cdba78 <line:535:29, line:536:28> 'const basic_string<_CharT, _Traits, _Alloc>'
            (CallExpr 0x9cdb998 <line:535:30, col:40> '<dependent type>'
              (MemberExpr 0x9cdb978 <col:30> '<bound member function type>' ->_M_ibegin 0x9c7fce0
                (CXXThisExpr 0x9cdb968 <col:30> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
            (CallExpr 0x9cdb9e8 <col:43, col:51> '<dependent type>'
              (MemberExpr 0x9cdb9c8 <col:43> '<bound member function type>' ->_M_iend 0x9c7fd60
                (CXXThisExpr 0x9cdb9b8 <col:43> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
            (CallExpr 0x9cdba58 <line:536:9, col:27> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9cdba20 <col:9, col:13> '<dependent type>' lvalue
                (DeclRefExpr 0x9cdba04 <col:9> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9cdb130 '__s' 'basic_string<_CharT, _Traits, _Alloc> &'))))")
      (DeclStmt 0x9cdbc68 <line:537:4, line:538:31>
        0x9cdbac0 "const basic_string<_CharT, _Traits, _Alloc> __tmp2 =
          (ParenListExpr 0x9cdbc40 <line:537:29, line:538:30> 'const basic_string<_CharT, _Traits, _Alloc>'
            (CallExpr 0x9cdbb48 <line:537:30, col:44> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9cdbb10 <col:30, col:34> '<dependent type>' lvalue
                (DeclRefExpr 0x9cdbaf4 <col:30> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9cdb130 '__s' 'basic_string<_CharT, _Traits, _Alloc> &')))
            (CallExpr 0x9cdbbb8 <col:47, col:59> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9cdbb80 <col:47, col:51> '<dependent type>' lvalue
                (DeclRefExpr 0x9cdbb64 <col:47> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9cdb130 '__s' 'basic_string<_CharT, _Traits, _Alloc> &')))
            (CallExpr 0x9cdbc20 <line:538:9, col:29> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9cdbbe8 <col:9, col:15> '<dependent type>' lvalue
                (CXXThisExpr 0x9cdbbd8 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))))")
      (BinaryOperator 0x9cdbcb8 <line:539:4, col:12> '<dependent type>' '='
        (UnaryOperator 0x9cdbc88 <col:4, col:5> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9cdbc78 <col:5> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x9cdbc9c <col:12> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9cdbac0 '__tmp2' 'const basic_string<_CharT, _Traits, _Alloc>'))
      (BinaryOperator 0x9cdbd00 <line:540:4, col:10> '<dependent type>' '='
        (DeclRefExpr 0x9cdbcd0 <col:4> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9cdb130 '__s' 'basic_string<_CharT, _Traits, _Alloc> &')
        (DeclRefExpr 0x9cdbce8 <col:10> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9cdb930 '__tmp1' 'const basic_string<_CharT, _Traits, _Alloc>')))))


    static typename basic_string<_CharT, _Traits, _Alloc>::_Rep *_S_create(size_type __capacity, size_type __old_capacity, const _Alloc &__alloc) (CompoundStmt 0x9cdd690 </usr/include/c++/4.6/bits/basic_string.tcc:549:5, line:620:5>
  (IfStmt 0x9cdc788 <line:552:7, line:553:53>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9cdc688 <line:552:11, col:24> '<dependent type>'
      (UnresolvedLookupExpr 0x9cdc640 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b42c70 0x9ac83c0 0x9b5e730 0x9cbd1f0 0x9cbd720 0x9cbdc50)
      (DeclRefExpr 0x9cdc60c <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cdc2a0 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9cdc624 <col:24> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9cc47a0 '_S_max_size' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type'))
    (CallExpr 0x9cdc758 <line:553:2, col:53> 'void'
      (ImplicitCastExpr 0x9cdc748 <col:2> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x9cdc72c <col:2> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9b0bcc0 '__throw_length_error' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0x9cdc778 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0x9cdc718 <col:24, col:30> 'const char [24]' lvalue
          (StringLiteral 0x9cdc6e4 </usr/include/c++/4.6/bits/basic_string.tcc:553:27> 'const char [24]' lvalue "basic_string::_S_create"))))
    <<<NULL>>>)
  (DeclStmt 0x9cdc800 <line:578:7, col:40>
    0x9cdc7b0 "const size_type __pagesize =
      (IntegerLiteral 0x9cdc7e8 <col:36> 'int' 4096)")
  (DeclStmt 0x9cdc8c0 <line:579:7, col:63>
    0x9cdc820 "const size_type __malloc_header_size =
      (BinaryOperator 0x9cdc8a8 <col:46, col:62> 'unsigned int' '*'
        (ImplicitCastExpr 0x9cdc898 <col:46> 'unsigned int' <IntegralCast>
          (IntegerLiteral 0x9cdc858 <col:46> 'int' 4))
        (UnaryExprOrTypeTraitExpr 0x9cdc880 <col:50, col:62> 'unsigned int' sizeof 'void *'))")
  (IfStmt 0x9cdcad0 <line:587:7, line:588:19>
    <<<NULL>>>
    (BinaryOperator 0x9cdca40 <line:587:11, col:59> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x9cdc948 <col:11, col:24> '<dependent type>'
        (UnresolvedLookupExpr 0x9cdc900 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b42c70 0x9ac83c0 0x9b5e730 0x9cbd1f0 0x9cbd720 0x9cbdc50)
        (DeclRefExpr 0x9cdc8d0 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cdc2a0 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9cdc8e8 <col:24> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cdc2e0 '__old_capacity' 'size_type':'typename _CharT_alloc_type::size_type'))
      (CXXOperatorCallExpr 0x9cdca18 <col:42, col:59> '<dependent type>'
        (UnresolvedLookupExpr 0x9cdc9d0 <col:53, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40ad0 0x9b57c70 0x9b5ddb0 0x9cbc120 0x9cbc650 0x9cbcb80)
        (DeclRefExpr 0x9cdc96c <col:42> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cdc2a0 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type')
        (BinaryOperator 0x9cdc9b8 <col:55, col:59> '<dependent type>' '*'
          (IntegerLiteral 0x9cdc988 <col:55> 'int' 2)
          (DeclRefExpr 0x9cdc9a0 <col:59> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cdc2e0 '__old_capacity' 'size_type':'typename _CharT_alloc_type::size_type'))))
    (BinaryOperator 0x9cdcab8 <line:588:2, col:19> '<dependent type>' '='
      (DeclRefExpr 0x9cdca58 <col:2> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cdc2a0 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type')
      (BinaryOperator 0x9cdcaa0 <col:15, col:19> '<dependent type>' '*'
        (IntegerLiteral 0x9cdca70 <col:15> 'int' 2)
        (DeclRefExpr 0x9cdca88 <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cdc2e0 '__old_capacity' 'size_type':'typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (DeclStmt 0x9cdccb8 <line:593:7, col:74>
    0x9cdcb00 "size_type __size =
      (CXXOperatorCallExpr 0x9cdcc90 <col:26, col:73> '<dependent type>'
        (UnresolvedLookupExpr 0x9cdcc48 <col:60, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9cb4d00 0x9cb7ab0 0x9cb8030 0x9cb8830)
        (BinaryOperator 0x9cdcc10 <col:26, col:58> '<dependent type>' '*'
          (ParenExpr 0x9cdcbd8 <col:26, col:41> '<dependent type>'
            (CXXOperatorCallExpr 0x9cdcbb0 <col:27, col:40> '<dependent type>'
              (UnresolvedLookupExpr 0x9cdcb68 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9cb4d00 0x9cb7ab0 0x9cb8030 0x9cb8830)
              (DeclRefExpr 0x9cdcb34 <col:27> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cdc2a0 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type')
              (IntegerLiteral 0x9cdcb50 <col:40> 'int' 1)))
          (UnaryExprOrTypeTraitExpr 0x9cdcbf8 <col:45, col:58> 'unsigned int' sizeof '_CharT'))
        (UnaryExprOrTypeTraitExpr 0x9cdcc30 <col:62, col:73> 'unsigned int' sizeof 'struct std::basic_string::_Rep'))")
  (DeclStmt 0x9cdcda8 <line:595:7, col:65>
    0x9cdccd0 "const size_type __adj_size =
      (CXXOperatorCallExpr 0x9cdcd80 <col:36, col:45> '<dependent type>'
        (UnresolvedLookupExpr 0x9cdcd38 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9cb4d00 0x9cb7ab0 0x9cb8030 0x9cb8830)
        (DeclRefExpr 0x9cdcd04 <col:36> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9cdcb00 '__size' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9cdcd1c <col:45> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9cdc820 '__malloc_header_size' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (IfStmt 0x9cdd388 <line:596:7, line:604:2>
    <<<NULL>>>
    (BinaryOperator 0x9cdcef8 <line:596:11, col:51> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x9cdce30 <col:11, col:24> '<dependent type>'
        (UnresolvedLookupExpr 0x9cdcde8 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b42c70 0x9ac83c0 0x9b5e730 0x9cbd1f0 0x9cbd720 0x9cbdc50)
        (DeclRefExpr 0x9cdcdb8 <col:11> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9cdccd0 '__adj_size' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9cdcdd0 <col:24> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9cdc7b0 '__pagesize' 'const size_type':'const typename _CharT_alloc_type::size_type'))
      (CXXOperatorCallExpr 0x9cdced0 <col:38, col:51> '<dependent type>'
        (UnresolvedLookupExpr 0x9cdce88 <col:49, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b42c70 0x9ac83c0 0x9b5e730 0x9cbd1f0 0x9cbd720 0x9cbdc50)
        (DeclRefExpr 0x9cdce54 <col:38> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cdc2a0 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9cdce6c <col:51> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cdc2e0 '__old_capacity' 'size_type':'typename _CharT_alloc_type::size_type')))
    (CompoundStmt 0x9cdd368 <line:597:2, line:604:2>
      (DeclStmt 0x9cdd018 <line:598:4, col:66>
        0x9cdcf20 "const size_type __extra =
          (CXXOperatorCallExpr 0x9cdcff0 <col:30, col:56> '<dependent type>'
            (UnresolvedLookupExpr 0x9cdcfb8 <col:41, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
            (DeclRefExpr 0x9cdcf54 <col:30> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9cdc7b0 '__pagesize' 'const size_type':'const typename _CharT_alloc_type::size_type')
            (BinaryOperator 0x9cdcfa0 <col:43, col:56> '<dependent type>' '%'
              (DeclRefExpr 0x9cdcf6c <col:43> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9cdccd0 '__adj_size' 'const size_type':'const typename _CharT_alloc_type::size_type')
              (DeclRefExpr 0x9cdcf84 <col:56> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9cdc7b0 '__pagesize' 'const size_type':'const typename _CharT_alloc_type::size_type')))")
      (CompoundAssignOperator 0x9cdd090 <line:599:4, col:41> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
        (DeclRefExpr 0x9cdd028 <col:4> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cdc2a0 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type')
        (BinaryOperator 0x9cdd078 <col:18, col:41> '<dependent type>' '/'
          (DeclRefExpr 0x9cdd040 <col:18> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9cdcf20 '__extra' 'const size_type':'const typename _CharT_alloc_type::size_type')
          (UnaryExprOrTypeTraitExpr 0x9cdd060 <col:28, col:41> 'unsigned int' sizeof '_CharT')))
      (IfStmt 0x9cdd198 <line:601:4, line:602:19>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9cdd128 <line:601:8, col:21> '<dependent type>'
          (UnresolvedLookupExpr 0x9cdd0e0 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b42c70 0x9ac83c0 0x9b5e730 0x9cbd1f0 0x9cbd720 0x9cbdc50)
          (DeclRefExpr 0x9cdd0b0 <col:8> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cdc2a0 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0x9cdd0c8 <col:21> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9cc47a0 '_S_max_size' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type'))
        (BinaryOperator 0x9cdd180 <line:602:6, col:19> '<dependent type>' '='
          (DeclRefExpr 0x9cdd14c <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cdc2a0 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0x9cdd164 <col:19> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9cc47a0 '_S_max_size' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)
      (BinaryOperator 0x9cdd350 <line:603:4, col:60> '<dependent type>' '='
        (DeclRefExpr 0x9cdd1b4 <col:4> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9cdcb00 '__size' 'size_type':'typename _CharT_alloc_type::size_type')
        (CXXOperatorCallExpr 0x9cdd328 <col:13, col:60> '<dependent type>'
          (UnresolvedLookupExpr 0x9cdd2e0 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9cb4d00 0x9cb7ab0 0x9cb8030 0x9cb8830)
          (BinaryOperator 0x9cdd2a8 <col:13, col:45> '<dependent type>' '*'
            (ParenExpr 0x9cdd270 <col:13, col:28> '<dependent type>'
              (CXXOperatorCallExpr 0x9cdd248 <col:14, col:27> '<dependent type>'
                (UnresolvedLookupExpr 0x9cdd200 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9cb4d00 0x9cb7ab0 0x9cb8030 0x9cb8830)
                (DeclRefExpr 0x9cdd1cc <col:14> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cdc2a0 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type')
                (IntegerLiteral 0x9cdd1e8 <col:27> 'int' 1)))
            (UnaryExprOrTypeTraitExpr 0x9cdd290 <col:32, col:45> 'unsigned int' sizeof '_CharT'))
          (UnaryExprOrTypeTraitExpr 0x9cdd2c8 <col:49, col:60> 'unsigned int' sizeof 'struct std::basic_string::_Rep'))))
    <<<NULL>>>)
  (DeclStmt 0x9cdd4a8 <line:608:7, col:65>
    0x9cdd3c0 "void *__place =
      (CallExpr 0x9cdd488 <col:23, col:64> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cdd438 <col:23, col:49> '<dependent type>' lvalue
          (CXXUnresolvedConstructExpr 0x9cdd418 <col:23, col:47> '_Raw_bytes_alloc':'typename _Alloc::_Alloc::rebind<char>::other'
            (DeclRefExpr 0x9cdd400 <col:40> 'const _Alloc' lvalue ParmVar 0x9cdc350 '__alloc' 'const _Alloc &')))
        (DeclRefExpr 0x9cdd46c <col:58> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9cdcb00 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))")
  (DeclStmt 0x9cdd568 <line:609:7, col:37>
    0x9cdd4d0 "std::basic_string::_Rep *__p =
      (CXXNewExpr 0x9cdd528 <col:19, col:33> 'struct std::basic_string::_Rep *'
        (DeclRefExpr 0x9cdd504 <col:24> 'void *' lvalue Var 0x9cdd3c0 '__place' 'void *'))")
  (BinaryOperator 0x9cdd5e0 <line:610:7, col:26> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x9cdd590 <col:7, col:12> '<dependent type>' lvalue
      (DeclRefExpr 0x9cdd578 <col:7> 'struct std::basic_string::_Rep *' lvalue Var 0x9cdd4d0 '__p' 'struct std::basic_string::_Rep *'))
    (DeclRefExpr 0x9cdd5c4 <col:26> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cdc2a0 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type'))
  (CallExpr 0x9cdd648 <line:618:7, col:28> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9cdd610 <col:7, col:12> '<dependent type>' lvalue
      (DeclRefExpr 0x9cdd5f8 <col:7> 'struct std::basic_string::_Rep *' lvalue Var 0x9cdd4d0 '__p' 'struct std::basic_string::_Rep *')))
  (ReturnStmt 0x9cdd680 <line:619:7, col:14>
    (DeclRefExpr 0x9cdd664 <col:14> 'struct std::basic_string::_Rep *' lvalue Var 0x9cdd4d0 '__p' 'struct std::basic_string::_Rep *')))


    _CharT *_M_clone(const _Alloc &__alloc, size_type __res = (IntegerLiteral 0x9c9d640 </usr/include/c++/4.6/bits/basic_string.h:262:44> 'int' 0)
) (CompoundStmt 0x9cde170 </usr/include/c++/4.6/bits/basic_string.tcc:626:5, line:636:5>
  (DeclStmt 0x9cddd38 <line:628:7, col:64>
    0x9cddc30 "const size_type __requested_cap =
      (CXXOperatorCallExpr 0x9cddd10 <col:41, col:59> '<dependent type>'
        (UnresolvedLookupExpr 0x9cddcc8 <col:57, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9cb4d00 0x9cb7ab0 0x9cb8030 0x9cb8830)
        (CXXDependentScopeMemberExpr 0x9cddc78 <col:41, col:47> '<dependent type>' lvalue
          (CXXThisExpr 0x9cddc68 <col:41> 'struct std::basic_string::_Rep *' this))
        (DeclRefExpr 0x9cddcac <col:59> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cddae0 '__res' 'size_type':'typename _CharT_alloc_type::size_type'))")
  (DeclStmt 0x9cdde78 <line:629:7, line:630:15>
    0x9cddd60 "std::basic_string::_Rep *__r =
      (CallExpr 0x9cdde50 <line:629:19, line:630:14> '<dependent type>'
        (DeclRefExpr 0x9cdddb4 <line:629:19, col:25> 'typename basic_string<_CharT, _Traits, _Alloc>::_Rep *(size_type, size_type, const _Alloc &)' lvalue CXXMethod 0x9cdc570 '_S_create' 'typename basic_string<_CharT, _Traits, _Alloc>::_Rep *(size_type, size_type, const _Alloc &)')
        (DeclRefExpr 0x9cdddd4 <col:35> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9cddc30 '__requested_cap' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (CXXDependentScopeMemberExpr 0x9cdde00 <col:52, col:58> '<dependent type>' lvalue
          (CXXThisExpr 0x9cdddf0 <col:52> 'struct std::basic_string::_Rep *' this))
        (DeclRefExpr 0x9cdde34 <line:630:7> 'const _Alloc' lvalue ParmVar 0x9cddaa0 '__alloc' 'const _Alloc &'))")
  (IfStmt 0x9cde018 <line:631:7, line:632:58>
    <<<NULL>>>
    (CXXDependentScopeMemberExpr 0x9cdde98 <line:631:11, col:17> '<dependent type>' lvalue
      (CXXThisExpr 0x9cdde88 <col:11> 'struct std::basic_string::_Rep *' this))
    (CallExpr 0x9cddff0 <line:632:2, col:58> '<dependent type>'
      (DeclRefExpr 0x9cddecc <col:2> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9c82f50 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
      (CallExpr 0x9cddf38 <col:10, col:26> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cddf00 <col:10, col:15> '<dependent type>' lvalue
          (DeclRefExpr 0x9cddee4 <col:10> 'struct std::basic_string::_Rep *' lvalue Var 0x9cddd60 '__r' 'struct std::basic_string::_Rep *')))
      (CallExpr 0x9cddf88 <col:29, col:40> '<dependent type>'
        (MemberExpr 0x9cddf68 <col:29> '<bound member function type>' ->_M_refdata 0x9c7edf0
          (CXXThisExpr 0x9cddf58 <col:29> 'struct std::basic_string::_Rep *' this)))
      (CXXDependentScopeMemberExpr 0x9cddfb8 <col:43, col:49> '<dependent type>' lvalue
        (CXXThisExpr 0x9cddfa8 <col:43> 'struct std::basic_string::_Rep *' this)))
    <<<NULL>>>)
  (CallExpr 0x9cde0d0 <line:634:7, col:54> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9cde050 <col:7, col:12> '<dependent type>' lvalue
      (DeclRefExpr 0x9cde034 <col:7> 'struct std::basic_string::_Rep *' lvalue Var 0x9cddd60 '__r' 'struct std::basic_string::_Rep *'))
    (CXXDependentScopeMemberExpr 0x9cde098 <col:39, col:45> '<dependent type>' lvalue
      (CXXThisExpr 0x9cde088 <col:39> 'struct std::basic_string::_Rep *' this)))
  (ReturnStmt 0x9cde160 <line:635:7, col:30>
    (CallExpr 0x9cde140 <col:14, col:30> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9cde108 <col:14, col:19> '<dependent type>' lvalue
        (DeclRefExpr 0x9cde0f0 <col:14> 'struct std::basic_string::_Rep *' lvalue Var 0x9cddd60 '__r' 'struct std::basic_string::_Rep *')))))


    void resize(size_type __n, _CharT __c) (CompoundStmt 0x9cdeaf0 </usr/include/c++/4.6/bits/basic_string.tcc:642:5, line:650:5>
  (DeclStmt 0x9cde710 <line:643:7, col:44>
    0x9cde670 "const size_type __size =
      (CallExpr 0x9cde6f0 <col:32, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cde6b8 <col:32, col:38> '<dependent type>' lvalue
          (CXXThisExpr 0x9cde6a8 <col:32> 'basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (CallExpr 0x9cde7b0 <line:644:7, col:58> '<dependent type>'
    (MemberExpr 0x9cde730 <col:7> '<bound member function type>' ->_M_check_length 0x9c82ae0
      (CXXThisExpr 0x9cde720 <col:7> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9cde750 <col:23> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9cde670 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
    (DeclRefExpr 0x9cde768 <col:31> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cde510 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0x9cde780 <col:36> 'const char [21]' lvalue "basic_string::resize"))
  (IfStmt 0x9cdead0 <line:645:7, line:648:17>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9cde850 <line:645:11, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0x9cde808 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40ad0 0x9b57c70 0x9b5ddb0 0x9cbc120 0x9cbc650 0x9cbcb80)
      (DeclRefExpr 0x9cde7d8 <col:11> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9cde670 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9cde7f0 <col:20> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cde510 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
    (CallExpr 0x9cde968 <line:646:2, col:32> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9cde888 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0x9cde878 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXOperatorCallExpr 0x9cde928 <col:15, col:21> '<dependent type>'
        (UnresolvedLookupExpr 0x9cde8f0 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
        (DeclRefExpr 0x9cde8bc <col:15> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cde510 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9cde8d4 <col:21> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9cde670 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type'))
      (DeclRefExpr 0x9cde94c <col:29> '_CharT' lvalue ParmVar 0x9cde550 '__c' '_CharT'))
    (IfStmt 0x9cdeab0 <line:647:12, line:648:17>
      <<<NULL>>>
      (CXXOperatorCallExpr 0x9cdea08 <line:647:16, col:22> '<dependent type>'
        (UnresolvedLookupExpr 0x9cde9c0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40ad0 0x9b57c70 0x9b5ddb0 0x9cbc120 0x9cbc650 0x9cbcb80)
        (DeclRefExpr 0x9cde98c <col:16> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cde510 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9cde9a4 <col:22> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9cde670 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type'))
      (CallExpr 0x9cdea90 <line:648:2, col:17> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cdea40 <col:2, col:8> '<dependent type>' lvalue
          (CXXThisExpr 0x9cdea30 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x9cdea74 <col:14> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cde510 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
      <<<NULL>>>)))


    template <typename _InputIterator> basic_string<_CharT, _Traits, _Alloc> &_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2, std::__false_type) (CompoundStmt 0x9cdf968 </usr/include/c++/4.6/bits/basic_string.tcc:658:7, line:664:7>
  (DeclStmt 0x9cdf4a8 <line:659:2, col:36>
    0x9cdf420 "const basic_string<_CharT, _Traits, _Alloc> __s =
      (ParenListExpr 0x9cdf488 <col:24, col:35> 'const basic_string<_CharT, _Traits, _Alloc>'
        (DeclRefExpr 0x9cdf454 <col:25> '_InputIterator' lvalue ParmVar 0x9cdf070 '__k1' '_InputIterator')
        (DeclRefExpr 0x9cdf46c <col:31> '_InputIterator' lvalue ParmVar 0x9cdf0b0 '__k2' '_InputIterator'))")
  (DeclStmt 0x9cdf588 <line:660:2, col:36>
    0x9cdf4c0 "const size_type __n1 =
      (CXXOperatorCallExpr 0x9cdf560 <col:25, col:32> '<dependent type>'
        (UnresolvedLookupExpr 0x9cdf528 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
        (DeclRefExpr 0x9cdf4f4 <col:25> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9cdf030 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0x9cdf50c <col:32> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9cdeff0 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'))")
  (CallExpr 0x9cdf6d0 <line:661:2, col:71> '<dependent type>'
    (MemberExpr 0x9cdf5a8 <col:2> '<bound member function type>' ->_M_check_length 0x9c82ae0
      (CXXThisExpr 0x9cdf598 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9cdf5c8 <col:18> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9cdf4c0 '__n1' 'const size_type':'const typename _CharT_alloc_type::size_type')
    (CallExpr 0x9cdf630 <col:24, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9cdf5f8 <col:24, col:28> '<dependent type>' lvalue
        (DeclRefExpr 0x9cdf5e0 <col:24> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9cdf420 '__s' 'const basic_string<_CharT, _Traits, _Alloc>')))
    (StringLiteral 0x9cdf690 <col:36> 'const char [34]' lvalue "basic_string::_M_replace_dispatch"))
  (ReturnStmt 0x9cdf958 <line:662:2, line:663:21>
    (CallExpr 0x9cdf928 <line:662:9, line:663:21> '<dependent type>'
      (MemberExpr 0x9cdf708 <line:662:9> '<bound member function type>' ->_M_replace_safe 0x9c97ba0
        (CXXThisExpr 0x9cdf6f8 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXOperatorCallExpr 0x9cdf7c8 <col:25, col:42> '<dependent type>'
        (UnresolvedLookupExpr 0x9cdf790 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
        (DeclRefExpr 0x9cdf728 <col:25> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9cdeff0 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (CallExpr 0x9cdf770 <col:32, col:42> '<dependent type>'
          (MemberExpr 0x9cdf750 <col:32> '<bound member function type>' ->_M_ibegin 0x9c7fce0
            (CXXThisExpr 0x9cdf740 <col:32> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (DeclRefExpr 0x9cdf7ec <col:45> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9cdf4c0 '__n1' 'const size_type':'const typename _CharT_alloc_type::size_type')
      (CallExpr 0x9cdf898 <col:51, col:63> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cdf860 <col:51, col:55> '<dependent type>' lvalue
          (DeclRefExpr 0x9cdf804 <col:51> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9cdf420 '__s' 'const basic_string<_CharT, _Traits, _Alloc>')))
      (CallExpr 0x9cdf908 <line:663:11, col:20> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cdf8d0 <col:11, col:15> '<dependent type>' lvalue
          (DeclRefExpr 0x9cdf8b4 <col:11> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9cdf420 '__s' 'const basic_string<_CharT, _Traits, _Alloc>'))))))

;
    basic_string<_CharT, _Traits, _Alloc> &_M_replace_aux(size_type __pos1, size_type __n1, size_type __n2, _CharT __c) (CompoundStmt 0x9ce04f8 </usr/include/c++/4.6/bits/basic_string.tcc:671:5, line:677:5>
  (CallExpr 0x9ce0258 <line:672:7, col:65> '<dependent type>'
    (MemberExpr 0x9ce0190 <col:7> '<bound member function type>' ->_M_check_length 0x9c82ae0
      (CXXThisExpr 0x9ce0180 <col:7> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9ce01b0 <col:23> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cdfe60 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
    (DeclRefExpr 0x9ce01c8 <col:29> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cdfea0 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0x9ce0220 <col:35> 'const char [29]' lvalue "basic_string::_M_replace_aux"))
  (CallExpr 0x9ce02f8 <line:673:7, col:35> '<dependent type>'
    (MemberExpr 0x9ce0290 <col:7> '<bound member function type>' ->_M_mutate 0x9cd8d30
      (CXXThisExpr 0x9ce0280 <col:7> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9ce02b0 <col:17> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cdfe20 '__pos1' 'size_type':'typename _CharT_alloc_type::size_type')
    (DeclRefExpr 0x9ce02c8 <col:25> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cdfe60 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
    (DeclRefExpr 0x9ce02e0 <col:31> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cdfea0 '__n2' 'size_type':'typename _CharT_alloc_type::size_type'))
  (IfStmt 0x9ce04a0 <line:674:7, line:675:41>
    <<<NULL>>>
    (DeclRefExpr 0x9ce0320 <line:674:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cdfea0 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0x9ce0478 <line:675:2, col:41> '<dependent type>'
      (DeclRefExpr 0x9ce0338 <col:2> 'void (_CharT *, size_type, _CharT)' lvalue CXXMethod 0x9c83280 '_M_assign' 'void (_CharT *, size_type, _CharT)')
      (CXXOperatorCallExpr 0x9ce0420 <col:12, col:24> '<dependent type>'
        (UnresolvedLookupExpr 0x9ce03d8 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9cb4d00 0x9cb7ab0 0x9cb8030 0x9cb8830)
        (CallExpr 0x9ce03a0 <col:12, col:20> '<dependent type>'
          (UnresolvedMemberExpr 0x9ce0360 <col:12> '<bound member function type>' lvalue))
        (DeclRefExpr 0x9ce03bc <col:24> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cdfe20 '__pos1' 'size_type':'typename _CharT_alloc_type::size_type'))
      (DeclRefExpr 0x9ce0444 <col:32> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cdfea0 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9ce045c <col:38> '_CharT' lvalue ParmVar 0x9cdfee0 '__c' '_CharT'))
    <<<NULL>>>)
  (ReturnStmt 0x9ce04e8 <line:676:7, col:15>
    (UnaryOperator 0x9ce04d0 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9ce04c0 <col:15> 'basic_string<_CharT, _Traits, _Alloc> *' this))))


    basic_string<_CharT, _Traits, _Alloc> &_M_replace_safe(size_type __pos1, size_type __n1, const _CharT *__s, size_type __n2) (CompoundStmt 0x9ce0fb8 </usr/include/c++/4.6/bits/basic_string.tcc:684:5, line:689:5>
  (CallExpr 0x9ce0db8 <line:685:7, col:35> '<dependent type>'
    (MemberExpr 0x9ce0d50 <col:7> '<bound member function type>' ->_M_mutate 0x9cd8d30
      (CXXThisExpr 0x9ce0d40 <col:7> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9ce0d70 <col:17> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ce09b0 '__pos1' 'size_type':'typename _CharT_alloc_type::size_type')
    (DeclRefExpr 0x9ce0d88 <col:25> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ce09f0 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
    (DeclRefExpr 0x9ce0da0 <col:31> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ce0aa0 '__n2' 'size_type':'typename _CharT_alloc_type::size_type'))
  (IfStmt 0x9ce0f60 <line:686:7, line:687:39>
    <<<NULL>>>
    (DeclRefExpr 0x9ce0de0 <line:686:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ce0aa0 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0x9ce0f38 <line:687:2, col:39> '<dependent type>'
      (DeclRefExpr 0x9ce0df8 <col:2> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9c82f50 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
      (CXXOperatorCallExpr 0x9ce0ee0 <col:10, col:22> '<dependent type>'
        (UnresolvedLookupExpr 0x9ce0e98 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9cb4d00 0x9cb7ab0 0x9cb8030 0x9cb8830)
        (CallExpr 0x9ce0e60 <col:10, col:18> '<dependent type>'
          (UnresolvedMemberExpr 0x9ce0e20 <col:10> '<bound member function type>' lvalue))
        (DeclRefExpr 0x9ce0e7c <col:22> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ce09b0 '__pos1' 'size_type':'typename _CharT_alloc_type::size_type'))
      (DeclRefExpr 0x9ce0f04 <col:30> 'const _CharT *' lvalue ParmVar 0x9ce0a60 '__s' 'const _CharT *')
      (DeclRefExpr 0x9ce0f1c <col:35> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ce0aa0 '__n2' 'size_type':'typename _CharT_alloc_type::size_type'))
    <<<NULL>>>)
  (ReturnStmt 0x9ce0fa8 <line:688:7, col:15>
    (UnaryOperator 0x9ce0f90 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9ce0f80 <col:15> 'basic_string<_CharT, _Traits, _Alloc> *' this))))


    template <typename _CharT, typename _Traits, typename _Alloc> basic_string<_CharT, _Traits, _Alloc> operator+(const _CharT *__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x9ce1bc8 </usr/include/c++/4.6/bits/basic_string.tcc:695:5, line:705:5>
  (NullStmt 0x9ce1550 <line:696:39>)
  (DeclStmt 0x9ce16f0 <line:697:7, col:66>
    0x9ce16c0 "typedef basic_string<_CharT, _Traits, _Alloc> __string_type")
  (DeclStmt 0x9ce17b0 <line:698:7, col:62>
    0x9ce1780 "typedef typename __string_type::size_type __size_type")
  (DeclStmt 0x9ce18a0 <line:699:7, col:55>
    0x9ce17e0 "const __size_type __len =
      (CallExpr 0x9ce1880 <col:33, col:54> '<dependent type>'
        (DependentScopeDeclRefExpr 0x9ce1840 <col:33, col:42> '<dependent type>' lvalue)
        (DeclRefExpr 0x9ce1864 <col:49> 'const _CharT *' lvalue ParmVar 0x9ce1230 '__lhs' 'const _CharT *'))")
  (DeclStmt 0x9ce18f8 <line:700:7, col:26>
    0x9ce18c0 "__string_type __str")
  (CallExpr 0x9ce1a50 <line:701:7, col:41> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9ce1920 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0x9ce1908 <col:7> '__string_type':'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9ce18c0 '__str' '__string_type':'basic_string<_CharT, _Traits, _Alloc>'))
    (CXXOperatorCallExpr 0x9ce1a28 <col:21, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0x9ce19e0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9ce1500 0x9b5d2b0 0x9cb44e0 0x9cb8830 0x9cb7ab0 0x9cb8030)
      (DeclRefExpr 0x9ce1954 <col:21> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0x9ce17e0 '__len' 'const __size_type':'const typename __string_type::size_type')
      (CallExpr 0x9ce19c0 <col:29, col:40> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ce1988 <col:29, col:35> '<dependent type>' lvalue
          (DeclRefExpr 0x9ce196c <col:29> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9ce13e0 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &')))))
  (CallExpr 0x9ce1af0 <line:702:7, col:32> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9ce1a88 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0x9ce1a70 <col:7> '__string_type':'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9ce18c0 '__str' '__string_type':'basic_string<_CharT, _Traits, _Alloc>'))
    (DeclRefExpr 0x9ce1abc <col:20> 'const _CharT *' lvalue ParmVar 0x9ce1230 '__lhs' 'const _CharT *')
    (DeclRefExpr 0x9ce1ad4 <col:27> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0x9ce17e0 '__len' 'const __size_type':'const typename __string_type::size_type'))
  (CallExpr 0x9ce1b80 <line:703:7, col:25> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9ce1b30 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0x9ce1b14 <col:7> '__string_type':'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9ce18c0 '__str' '__string_type':'basic_string<_CharT, _Traits, _Alloc>'))
    (DeclRefExpr 0x9ce1b64 <col:20> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9ce13e0 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
  (ReturnStmt 0x9ce1bb8 <line:704:7, col:14>
    (DeclRefExpr 0x9ce1ba0 <col:14> '__string_type':'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9ce18c0 '__str' '__string_type':'basic_string<_CharT, _Traits, _Alloc>')))

;
    template <typename _CharT, typename _Traits, typename _Alloc> basic_string<_CharT, _Traits, _Alloc> operator+(_CharT __lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x9ce2778 </usr/include/c++/4.6/bits/basic_string.tcc:710:5, line:719:5>
  (DeclStmt 0x9ce22e0 <line:711:7, col:66>
    0x9ce22b0 "typedef basic_string<_CharT, _Traits, _Alloc> __string_type")
  (DeclStmt 0x9ce23a0 <line:712:7, col:62>
    0x9ce2370 "typedef typename __string_type::size_type __size_type")
  (DeclStmt 0x9ce23f8 <line:713:7, col:26>
    0x9ce23c0 "__string_type __str")
  (DeclStmt 0x9ce24d8 <line:714:7, col:45>
    0x9ce2430 "const __size_type __len =
      (CallExpr 0x9ce24b8 <col:33, col:44> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ce2480 <col:33, col:39> '<dependent type>' lvalue
          (DeclRefExpr 0x9ce2464 <col:33> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9ce1fe0 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &')))")
  (CallExpr 0x9ce25d8 <line:715:7, col:30> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9ce2500 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0x9ce24e8 <col:7> '__string_type':'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9ce23c0 '__str' '__string_type':'basic_string<_CharT, _Traits, _Alloc>'))
    (CXXOperatorCallExpr 0x9ce25b0 <col:21, col:29> '<dependent type>'
      (UnresolvedLookupExpr 0x9ce2568 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9ce2100 0x9ce1500 0x9b5d2b0 0x9cb44e0 0x9cb8830 0x9cb8030)
      (DeclRefExpr 0x9ce2534 <col:21> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0x9ce2430 '__len' 'const __size_type':'const typename __string_type::size_type')
      (IntegerLiteral 0x9ce2550 <col:29> 'int' 1)))
  (CallExpr 0x9ce26a0 <line:716:7, col:41> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9ce2610 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0x9ce25f8 <col:7> '__string_type':'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9ce23c0 '__str' '__string_type':'basic_string<_CharT, _Traits, _Alloc>'))
    (CXXUnresolvedConstructExpr 0x9ce2668 <col:20, col:33> '__size_type':'typename __string_type::size_type'
      (IntegerLiteral 0x9ce2650 <col:32> 'int' 1))
    (DeclRefExpr 0x9ce2684 <col:36> '_CharT' lvalue ParmVar 0x9ce1e30 '__lhs' '_CharT'))
  (CallExpr 0x9ce2730 <line:717:7, col:25> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9ce26e0 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0x9ce26c4 <col:7> '__string_type':'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9ce23c0 '__str' '__string_type':'basic_string<_CharT, _Traits, _Alloc>'))
    (DeclRefExpr 0x9ce2714 <col:20> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9ce1fe0 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
  (ReturnStmt 0x9ce2768 <line:718:7, col:14>
    (DeclRefExpr 0x9ce2750 <col:14> '__string_type':'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9ce23c0 '__str' '__string_type':'basic_string<_CharT, _Traits, _Alloc>')))

;
    typename basic_string<_CharT, _Traits, _Alloc>::size_type copy(_CharT *__s, size_type __n, size_type __pos = (IntegerLiteral 0x9c9d738 </usr/include/c++/4.6/bits/basic_string.h:1745:58> 'int' 0)
) const (CompoundStmt 0x9ce32f0 </usr/include/c++/4.6/bits/basic_string.tcc:725:5, line:733:5>
  (CallExpr 0x9ce3038 <line:726:7, col:43> '<dependent type>'
    (MemberExpr 0x9ce2fd0 <col:7> '<bound member function type>' ->_M_check 0x9c7ff40
      (CXXThisExpr 0x9ce2fc0 <col:7> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9ce2ff0 <col:16> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ce2d30 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0x9ce3008 <col:23> 'const char [19]' lvalue "basic_string::copy"))
  (BinaryOperator 0x9ce3100 <line:727:7, col:32> '<dependent type>' '='
    (DeclRefExpr 0x9ce305c <col:7> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ce2cf0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0x9ce30d8 <col:13, col:32> '<dependent type>'
      (MemberExpr 0x9ce3088 <col:13> '<bound member function type>' ->_M_limit 0x9c82c40
        (CXXThisExpr 0x9ce3078 <col:13> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9ce30a8 <col:22> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ce2d30 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9ce30c0 <col:29> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ce2cf0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))
  (NullStmt 0x9ce3118 <line:728:46>)
  (IfStmt 0x9ce32a8 <line:729:7, line:730:37>
    <<<NULL>>>
    (DeclRefExpr 0x9ce3124 <line:729:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ce2cf0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0x9ce3280 <line:730:2, col:37> '<dependent type>'
      (DeclRefExpr 0x9ce313c <col:2> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9c82f50 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
      (DeclRefExpr 0x9ce3154 <col:10> '_CharT *' lvalue ParmVar 0x9ce2cb0 '__s' '_CharT *')
      (CXXOperatorCallExpr 0x9ce3240 <col:15, col:27> '<dependent type>'
        (UnresolvedLookupExpr 0x9ce31f8 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9ce2100 0x9ce1500 0x9b5d2b0 0x9cb44e0 0x9cb8830 0x9cb8030)
        (CallExpr 0x9ce31c0 <col:15, col:23> '<dependent type>'
          (UnresolvedMemberExpr 0x9ce3180 <col:15> '<bound member function type>' lvalue))
        (DeclRefExpr 0x9ce31dc <col:27> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ce2d30 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
      (DeclRefExpr 0x9ce3264 <col:34> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ce2cf0 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
    <<<NULL>>>)
  (ReturnStmt 0x9ce32e0 <line:732:7, col:14>
    (DeclRefExpr 0x9ce32c4 <col:14> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ce2cf0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))


    typename basic_string<_CharT, _Traits, _Alloc>::size_type find(const _CharT *__s, size_type __pos, size_type __n) const (CompoundStmt 0x9ce4600 </usr/include/c++/4.6/bits/basic_string.tcc:739:5, line:756:5>
  (NullStmt 0x9ce3b40 <line:740:46>)
  (DeclStmt 0x9ce3c00 <line:741:7, col:44>
    0x9ce3b60 "const size_type __size =
      (CallExpr 0x9ce3be0 <col:32, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ce3ba8 <col:32, col:38> '<dependent type>' lvalue
          (CXXThisExpr 0x9ce3b98 <col:32> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (DeclStmt 0x9ce3cc8 <line:742:7, col:39>
    0x9ce3c20 "const _CharT *__data =
      (CallExpr 0x9ce3ca8 <col:30, col:38> '<dependent type>'
        (UnresolvedMemberExpr 0x9ce3c68 <col:30> '<bound member function type>' lvalue))")
  (IfStmt 0x9ce3e88 <line:744:7, line:745:35>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9ce3d60 <line:744:11, col:18> '<dependent type>'
      (UnresolvedLookupExpr 0x9ce3d08 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90 0x9cb91e0 0x9cb9c50 0x9cba490 0x9cbaa00)
      (DeclRefExpr 0x9ce3cd8 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ce38b0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (IntegerLiteral 0x9ce3cf0 <col:18> 'int' 0))
    (ReturnStmt 0x9ce3e78 <line:745:2, col:35>
      (ConditionalOperator 0x9ce3e58 <col:9, col:35> '<dependent type>'
        (CXXOperatorCallExpr 0x9ce3e00 <col:9, col:18> '<dependent type>'
          (UnresolvedLookupExpr 0x9ce3db8 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b43190 0x9ac87b0 0x9b5eb90 0x9cbe2d0 0x9cbe800 0x9cbed30)
          (DeclRefExpr 0x9ce3d84 <col:9> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ce3870 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0x9ce3d9c <col:18> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9ce3b60 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type'))
        (DeclRefExpr 0x9ce3e24 <col:27> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ce3870 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9ce3e3c <col:35> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9cc5460 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (IfStmt 0x9ce45b8 <line:747:7, line:754:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9ce3f20 <line:747:11, col:18> '<dependent type>'
      (UnresolvedLookupExpr 0x9ce3ed8 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b43190 0x9ac87b0 0x9b5eb90 0x9cbe2d0 0x9cbe800 0x9cbed30)
      (DeclRefExpr 0x9ce3ea4 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ce38b0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9ce3ebc <col:18> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9ce3b60 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type'))
    (CompoundStmt 0x9ce45a0 <line:748:2, line:754:2>
      (ForStmt 0x9ce4578 <line:749:4, line:753:15>
        <<<NULL>>>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9ce4038 <line:749:11, col:29> '<dependent type>'
          (UnresolvedLookupExpr 0x9ce3ff0 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b43190 0x9ac87b0 0x9b5eb90 0x9cbe2d0 0x9cbe800 0x9cbed30)
          (DeclRefExpr 0x9ce3f44 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ce3870 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
          (CXXOperatorCallExpr 0x9ce3fc8 <col:20, col:29> '<dependent type>'
            (UnresolvedLookupExpr 0x9ce3f90 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
            (DeclRefExpr 0x9ce3f5c <col:20> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9ce3b60 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
            (DeclRefExpr 0x9ce3f74 <col:29> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ce38b0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))
        (UnaryOperator 0x9ce4078 <col:34, col:36> '<dependent type>' prefix '++'
          (DeclRefExpr 0x9ce405c <col:36> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ce3870 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        (IfStmt 0x9ce4558 <line:750:6, line:753:15>
          <<<NULL>>>
          (BinaryOperator 0x9ce4518 <line:750:10, line:752:27> '<dependent type>' '&&'
            (CallExpr 0x9ce4180 <line:750:10, col:47> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9ce40b8 <col:10, col:23> '<dependent type>' lvalue)
              (ArraySubscriptExpr 0x9ce4120 <col:26, col:38> '<dependent type>' lvalue
                (DeclRefExpr 0x9ce40ec <col:26> 'const _CharT *' lvalue Var 0x9ce3c20 '__data' 'const _CharT *')
                (DeclRefExpr 0x9ce4104 <col:33> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ce3870 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
              (ArraySubscriptExpr 0x9ce4168 <col:41, col:46> '<dependent type>' lvalue
                (DeclRefExpr 0x9ce4134 <col:41> 'const _CharT *' lvalue ParmVar 0x9ce3820 '__s' 'const _CharT *')
                (IntegerLiteral 0x9ce4150 <col:45> 'int' 0)))
            (CXXOperatorCallExpr 0x9ce44f0 <line:751:6, line:752:27> '<dependent type>'
              (UnresolvedLookupExpr 0x9ce4498 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90 0x9cb91e0 0x9cb9c50 0x9cba490 0x9cbaa00)
              (CallExpr 0x9ce4458 <line:751:6, line:752:22> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9ce41c8 <line:751:6, col:19> '<dependent type>' lvalue)
                (CXXOperatorCallExpr 0x9ce4300 <col:27, col:44> '<dependent type>'
                  (UnresolvedLookupExpr 0x9ce42b8 <col:42, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9ce2100 0x9ce1500 0x9b5d2b0 0x9cb44e0 0x9cb8830 0x9cb8030)
                  (CXXOperatorCallExpr 0x9ce4278 <col:27, col:36> '<dependent type>'
                    (UnresolvedLookupExpr 0x9ce4230 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9ce2100 0x9ce1500 0x9b5d2b0 0x9cb44e0 0x9cb8830 0x9cb8030)
                    (DeclRefExpr 0x9ce41fc <col:27> 'const _CharT *' lvalue Var 0x9ce3c20 '__data' 'const _CharT *')
                    (DeclRefExpr 0x9ce4214 <col:36> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ce3870 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
                  (IntegerLiteral 0x9ce42a0 <col:44> 'int' 1))
                (CXXOperatorCallExpr 0x9ce43a0 <line:752:6, col:12> '<dependent type>'
                  (UnresolvedLookupExpr 0x9ce4358 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9ce2100 0x9ce1500 0x9b5d2b0 0x9cb44e0 0x9cb8830 0x9cb8030)
                  (DeclRefExpr 0x9ce4324 <col:6> 'const _CharT *' lvalue ParmVar 0x9ce3820 '__s' 'const _CharT *')
                  (IntegerLiteral 0x9ce4340 <col:12> 'int' 1))
                (CXXOperatorCallExpr 0x9ce4430 <col:15, col:21> '<dependent type>'
                  (UnresolvedLookupExpr 0x9ce43f8 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
                  (DeclRefExpr 0x9ce43c4 <col:15> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ce38b0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
                  (IntegerLiteral 0x9ce43e0 <col:21> 'int' 1)))
              (IntegerLiteral 0x9ce4480 <col:27> 'int' 0)))
          (ReturnStmt 0x9ce4548 <line:753:8, col:15>
            (DeclRefExpr 0x9ce4530 <col:15> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ce3870 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
          <<<NULL>>>)))
    <<<NULL>>>)
  (ReturnStmt 0x9ce45f0 <line:755:7, col:14>
    (DeclRefExpr 0x9ce45d4 <col:14> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9cc5460 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))


    typename basic_string<_CharT, _Traits, _Alloc>::size_type find(_CharT __c, size_type __pos = (IntegerLiteral 0x9c9d780 </usr/include/c++/4.6/bits/basic_string.h:1841:42> 'int' 0)
) const (CompoundStmt 0x9ce5468 </usr/include/c++/4.6/bits/basic_string.tcc:762:5, line:774:5>
  (DeclStmt 0x9ce4e20 <line:763:7, col:29>
    0x9ce4dd0 "size_type __ret =
      (DeclRefExpr 0x9ce4e04 <col:25> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9cc5460 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')")
  (DeclStmt 0x9ce4ee0 <line:764:7, col:44>
    0x9ce4e40 "const size_type __size =
      (CallExpr 0x9ce4ec0 <col:32, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ce4e88 <col:32, col:38> '<dependent type>' lvalue
          (CXXThisExpr 0x9ce4e78 <col:32> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (IfStmt 0x9ce5420 <line:765:7, line:772:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9ce4f68 <line:765:11, col:19> '<dependent type>'
      (UnresolvedLookupExpr 0x9ce4f20 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40ad0 0x9b57c70 0x9b5ddb0 0x9cbc120 0x9cbc650 0x9cbcb80)
      (DeclRefExpr 0x9ce4ef0 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ce4b40 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9ce4f08 <col:19> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9ce4e40 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type'))
    (CompoundStmt 0x9ce5400 <line:766:2, line:772:2>
      (DeclStmt 0x9ce5068 <line:767:4, col:36>
        0x9ce4fc0 "const _CharT *__data =
          (CallExpr 0x9ce5048 <col:27, col:35> '<dependent type>'
            (UnresolvedMemberExpr 0x9ce5008 <col:27> '<bound member function type>' lvalue))")
      (DeclStmt 0x9ce5148 <line:768:4, col:40>
        0x9ce5080 "const size_type __n =
          (CXXOperatorCallExpr 0x9ce5120 <col:26, col:35> '<dependent type>'
            (UnresolvedLookupExpr 0x9ce50e8 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
            (DeclRefExpr 0x9ce50b4 <col:26> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9ce4e40 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
            (DeclRefExpr 0x9ce50cc <col:35> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ce4b40 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))")
      (DeclStmt 0x9ce52f8 <line:769:4, col:67>
        0x9ce5170 "const _CharT *__p =
          (CallExpr 0x9ce52d0 <col:24, col:66> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9ce51c8 <col:24, col:37> '<dependent type>' lvalue)
            (CXXOperatorCallExpr 0x9ce5278 <col:42, col:51> '<dependent type>'
              (UnresolvedLookupExpr 0x9ce5230 <col:49, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9ce2100 0x9ce1500 0x9b5d2b0 0x9cb44e0 0x9cb8830 0x9cb8030)
              (DeclRefExpr 0x9ce51fc <col:42> 'const _CharT *' lvalue Var 0x9ce4fc0 '__data' 'const _CharT *')
              (DeclRefExpr 0x9ce5214 <col:51> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ce4b40 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
            (DeclRefExpr 0x9ce529c <col:58> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9ce5080 '__n' 'const size_type':'const typename _CharT_alloc_type::size_type')
            (DeclRefExpr 0x9ce52b4 <col:63> '_CharT' lvalue ParmVar 0x9ce4b00 '__c' '_CharT'))")
      (IfStmt 0x9ce53e0 <line:770:4, line:771:20>
        <<<NULL>>>
        (DeclRefExpr 0x9ce5308 <line:770:8> 'const _CharT *' lvalue Var 0x9ce5170 '__p' 'const _CharT *')
        (BinaryOperator 0x9ce53c8 <line:771:6, col:20> '<dependent type>' '='
          (DeclRefExpr 0x9ce5320 <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9ce4dd0 '__ret' 'size_type':'typename _CharT_alloc_type::size_type')
          (CXXOperatorCallExpr 0x9ce53a0 <col:14, col:20> '<dependent type>'
            (UnresolvedLookupExpr 0x9ce5368 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
            (DeclRefExpr 0x9ce5338 <col:14> 'const _CharT *' lvalue Var 0x9ce5170 '__p' 'const _CharT *')
            (DeclRefExpr 0x9ce5350 <col:20> 'const _CharT *' lvalue Var 0x9ce4fc0 '__data' 'const _CharT *')))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9ce5458 <line:773:7, col:14>
    (DeclRefExpr 0x9ce543c <col:14> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9ce4dd0 '__ret' 'size_type':'typename _CharT_alloc_type::size_type')))


    typename basic_string<_CharT, _Traits, _Alloc>::size_type rfind(const _CharT *__s, size_type __pos, size_type __n) const (CompoundStmt 0x9ce63f8 </usr/include/c++/4.6/bits/basic_string.tcc:780:5, line:795:5>
  (NullStmt 0x9ce5ca0 <line:781:46>)
  (DeclStmt 0x9ce5d60 <line:782:7, col:44>
    0x9ce5cc0 "const size_type __size =
      (CallExpr 0x9ce5d40 <col:32, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ce5d08 <col:32, col:38> '<dependent type>' lvalue
          (CXXThisExpr 0x9ce5cf8 <col:32> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (IfStmt 0x9ce63b0 <line:783:7, line:793:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9ce5de8 <line:783:11, col:18> '<dependent type>'
      (UnresolvedLookupExpr 0x9ce5da0 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b43190 0x9ac87b0 0x9b5eb90 0x9cbe2d0 0x9cbe800 0x9cbed30)
      (DeclRefExpr 0x9ce5d70 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ce5a10 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9ce5d88 <col:18> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9ce5cc0 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type'))
    (CompoundStmt 0x9ce6390 <line:784:2, line:793:2>
      (BinaryOperator 0x9ce5f70 <line:785:4, col:51> '<dependent type>' '='
        (DeclRefExpr 0x9ce5e0c <col:4> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ce59d0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (CallExpr 0x9ce5f48 <col:12, col:51> '<dependent type>'
          (UnresolvedLookupExpr 0x9ce5e40 <col:12, col:17> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b76440 0x9b76b30)
          (CXXUnresolvedConstructExpr 0x9ce5f10 <col:21, col:43> 'size_type':'typename _CharT_alloc_type::size_type'
            (CXXOperatorCallExpr 0x9ce5ee8 <col:31, col:40> '<dependent type>'
              (UnresolvedLookupExpr 0x9ce5eb0 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
              (DeclRefExpr 0x9ce5e80 <col:31> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9ce5cc0 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
              (DeclRefExpr 0x9ce5e98 <col:40> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ce5a10 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))
          (DeclRefExpr 0x9ce5f2c <col:46> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ce59d0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')))
      (DeclStmt 0x9ce6048 <line:786:4, col:36>
        0x9ce5fa0 "const _CharT *__data =
          (CallExpr 0x9ce6028 <col:27, col:35> '<dependent type>'
            (UnresolvedMemberExpr 0x9ce5fe8 <col:27> '<bound member function type>' lvalue))")
      (DoStmt 0x9ce6378 <line:787:4, line:792:22>
        (CompoundStmt 0x9ce6290 <line:788:6, line:791:6>
          (IfStmt 0x9ce6270 <line:789:8, line:790:10>
            <<<NULL>>>
            (CXXOperatorCallExpr 0x9ce6220 <line:789:12, col:62> '<dependent type>'
              (UnresolvedLookupExpr 0x9ce61c8 <col:59, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90 0x9cb91e0 0x9cb9c50 0x9cba490 0x9cbaa00)
              (CallExpr 0x9ce6188 <col:12, col:57> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9ce6080 <col:12, col:25> '<dependent type>' lvalue)
                (CXXOperatorCallExpr 0x9ce6130 <col:33, col:42> '<dependent type>'
                  (UnresolvedLookupExpr 0x9ce60e8 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9ce2100 0x9ce1500 0x9b5d2b0 0x9cb44e0 0x9cb8830 0x9cb8030)
                  (DeclRefExpr 0x9ce60b4 <col:33> 'const _CharT *' lvalue Var 0x9ce5fa0 '__data' 'const _CharT *')
                  (DeclRefExpr 0x9ce60cc <col:42> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ce59d0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
                (DeclRefExpr 0x9ce6154 <col:49> 'const _CharT *' lvalue ParmVar 0x9ce5990 '__s' 'const _CharT *')
                (DeclRefExpr 0x9ce616c <col:54> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ce5a10 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
              (IntegerLiteral 0x9ce61b0 <col:62> 'int' 0))
            (ReturnStmt 0x9ce6260 <line:790:3, col:10>
              (DeclRefExpr 0x9ce6244 <col:10> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ce59d0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
            <<<NULL>>>))
        (CXXOperatorCallExpr 0x9ce6350 <line:792:11, col:21> '<dependent type>'
          (UnresolvedLookupExpr 0x9ce6308 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b42c70 0x9ac83c0 0x9b5e730 0x9cbd1f0 0x9cbd720 0x9cbdc50)
          (UnaryOperator 0x9ce62d8 <col:11, col:16> '<dependent type>' postfix '--'
            (DeclRefExpr 0x9ce62a4 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ce59d0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
          (IntegerLiteral 0x9ce62f0 <col:21> 'int' 0))))
    <<<NULL>>>)
  (ReturnStmt 0x9ce63e8 <line:794:7, col:14>
    (DeclRefExpr 0x9ce63cc <col:14> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9cc5460 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))


    typename basic_string<_CharT, _Traits, _Alloc>::size_type rfind(_CharT __c, size_type __pos = (DeclRefExpr 0x9c9d7c8 </usr/include/c++/4.6/bits/basic_string.h:1899:43> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9c7f920 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const (CompoundStmt 0x9ce70b8 </usr/include/c++/4.6/bits/basic_string.tcc:801:5, line:812:5>
  (DeclStmt 0x9ce6c60 <line:802:7, col:38>
    0x9ce6bc0 "size_type __size =
      (CallExpr 0x9ce6c40 <col:26, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ce6c08 <col:26, col:32> '<dependent type>' lvalue
          (CXXThisExpr 0x9ce6bf8 <col:26> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (IfStmt 0x9ce7070 <line:803:7, line:810:2>
    <<<NULL>>>
    (DeclRefExpr 0x9ce6c70 <line:803:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9ce6bc0 '__size' 'size_type':'typename _CharT_alloc_type::size_type')
    (CompoundStmt 0x9ce7058 <line:804:2, line:810:2>
      (IfStmt 0x9ce6d88 <line:805:4, line:806:15>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9ce6d18 <line:805:8, col:19> '<dependent type>'
          (UnresolvedLookupExpr 0x9ce6cd0 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b42c70 0x9ac83c0 0x9b5e730 0x9cbd1f0 0x9cbd720 0x9cbdc50)
          (UnaryOperator 0x9ce6ca0 <col:8, col:10> '<dependent type>' prefix '--'
            (DeclRefExpr 0x9ce6c88 <col:10> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9ce6bc0 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
          (DeclRefExpr 0x9ce6cb4 <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ce6930 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        (BinaryOperator 0x9ce6d70 <line:806:6, col:15> '<dependent type>' '='
          (DeclRefExpr 0x9ce6d3c <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9ce6bc0 '__size' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0x9ce6d54 <col:15> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ce6930 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)
      (ForStmt 0x9ce7030 <line:807:4, line:809:15>
        (UnaryOperator 0x9ce6dc0 <line:807:9, col:11> '<dependent type>' prefix '++'
          (DeclRefExpr 0x9ce6da4 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9ce6bc0 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9ce6e80 <col:19, col:30> '<dependent type>'
          (UnresolvedLookupExpr 0x9ce6e38 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b42c70 0x9ac83c0 0x9b5e730 0x9cbd1f0 0x9cbd720 0x9cbdc50)
          (UnaryOperator 0x9ce6e08 <col:19, col:25> '<dependent type>' postfix '--'
            (DeclRefExpr 0x9ce6dd4 <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9ce6bc0 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
          (IntegerLiteral 0x9ce6e20 <col:30> 'int' 0))
        <<<NULL>>>
        (IfStmt 0x9ce7010 <line:808:6, line:809:15>
          <<<NULL>>>
          (CallExpr 0x9ce6fc0 <line:808:10, col:48> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9ce6ed0 <col:10, col:23> '<dependent type>' lvalue)
            (ArraySubscriptExpr 0x9ce6f90 <col:26, col:42> '<dependent type>' lvalue
              (CallExpr 0x9ce6f58 <col:26, col:34> '<dependent type>'
                (UnresolvedMemberExpr 0x9ce6f18 <col:26> '<bound member function type>' lvalue))
              (DeclRefExpr 0x9ce6f74 <col:36> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9ce6bc0 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
            (DeclRefExpr 0x9ce6fa4 <col:45> '_CharT' lvalue ParmVar 0x9ce68f0 '__c' '_CharT'))
          (ReturnStmt 0x9ce7000 <line:809:8, col:15>
            (DeclRefExpr 0x9ce6fe4 <col:15> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9ce6bc0 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
          <<<NULL>>>)))
    <<<NULL>>>)
  (ReturnStmt 0x9ce70a8 <line:811:7, col:14>
    (DeclRefExpr 0x9ce708c <col:14> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9cc5460 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))


    typename basic_string<_CharT, _Traits, _Alloc>::size_type find_first_of(const _CharT *__s, size_type __pos, size_type __n) const (CompoundStmt 0x9ce7ce0 </usr/include/c++/4.6/bits/basic_string.tcc:818:5, line:827:5>
  (NullStmt 0x9ce7910 <line:819:46>)
  (ForStmt 0x9ce7c90 <line:820:7, line:825:2>
    <<<NULL>>>
    <<<NULL>>>
    (BinaryOperator 0x9ce7a28 <line:820:14, col:40> '<dependent type>' '&&'
      (DeclRefExpr 0x9ce791c <col:14> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ce7660 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (CXXOperatorCallExpr 0x9ce7a00 <col:21, col:40> '<dependent type>'
        (UnresolvedLookupExpr 0x9ce79b8 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40ad0 0x9b57c70 0x9b5ddb0 0x9cbc120 0x9cbc650 0x9cbcb80)
        (DeclRefExpr 0x9ce7934 <col:21> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ce7620 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (CallExpr 0x9ce7998 <col:29, col:40> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9ce7960 <col:29, col:35> '<dependent type>' lvalue
            (CXXThisExpr 0x9ce7950 <col:29> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))))
    (UnaryOperator 0x9ce7a58 <col:43, col:45> '<dependent type>' prefix '++'
      (DeclRefExpr 0x9ce7a40 <col:45> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ce7620 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
    (CompoundStmt 0x9ce7c78 <line:821:2, line:825:2>
      (DeclStmt 0x9ce7c08 <line:822:4, col:69>
        0x9ce7a80 "const _CharT *__p =
          (CallExpr 0x9ce7be0 <col:24, col:68> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9ce7ad8 <col:24, col:37> '<dependent type>' lvalue)
            (DeclRefExpr 0x9ce7b0c <col:42> 'const _CharT *' lvalue ParmVar 0x9ce75e0 '__s' 'const _CharT *')
            (DeclRefExpr 0x9ce7b24 <col:47> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ce7660 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
            (ArraySubscriptExpr 0x9ce7bc8 <col:52, col:67> '<dependent type>' lvalue
              (CallExpr 0x9ce7b90 <col:52, col:60> '<dependent type>'
                (UnresolvedMemberExpr 0x9ce7b50 <col:52> '<bound member function type>' lvalue))
              (DeclRefExpr 0x9ce7bac <col:62> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ce7620 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')))")
      (IfStmt 0x9ce7c58 <line:823:4, line:824:13>
        <<<NULL>>>
        (DeclRefExpr 0x9ce7c18 <line:823:8> 'const _CharT *' lvalue Var 0x9ce7a80 '__p' 'const _CharT *')
        (ReturnStmt 0x9ce7c48 <line:824:6, col:13>
          (DeclRefExpr 0x9ce7c30 <col:13> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ce7620 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)))
  (ReturnStmt 0x9ce7cd0 <line:826:7, col:14>
    (DeclRefExpr 0x9ce7cb4 <col:14> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9cc5460 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))


    typename basic_string<_CharT, _Traits, _Alloc>::size_type find_last_of(const _CharT *__s, size_type __pos, size_type __n) const (CompoundStmt 0x9ce8a58 </usr/include/c++/4.6/bits/basic_string.tcc:833:5, line:848:5>
  (NullStmt 0x9ce8510 <line:834:46>)
  (DeclStmt 0x9ce85d0 <line:835:7, col:38>
    0x9ce8530 "size_type __size =
      (CallExpr 0x9ce85b0 <col:26, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ce8578 <col:26, col:32> '<dependent type>' lvalue
          (CXXThisExpr 0x9ce8568 <col:26> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (IfStmt 0x9ce8a10 <line:836:7, line:846:2>
    <<<NULL>>>
    (BinaryOperator 0x9ce8610 <line:836:11, col:21> '<dependent type>' '&&'
      (DeclRefExpr 0x9ce85e0 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9ce8530 '__size' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9ce85f8 <col:21> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ce8280 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
    (CompoundStmt 0x9ce89f8 <line:837:2, line:846:2>
      (IfStmt 0x9ce8728 <line:838:4, line:839:15>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9ce86b8 <line:838:8, col:19> '<dependent type>'
          (UnresolvedLookupExpr 0x9ce8670 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b42c70 0x9ac83c0 0x9b5e730 0x9cbd1f0 0x9cbd720 0x9cbdc50)
          (UnaryOperator 0x9ce8640 <col:8, col:10> '<dependent type>' prefix '--'
            (DeclRefExpr 0x9ce8628 <col:10> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9ce8530 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
          (DeclRefExpr 0x9ce8654 <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ce8240 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        (BinaryOperator 0x9ce8710 <line:839:6, col:15> '<dependent type>' '='
          (DeclRefExpr 0x9ce86dc <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9ce8530 '__size' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0x9ce86f4 <col:15> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ce8240 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)
      (DoStmt 0x9ce89e0 <line:840:4, line:845:24>
        (CompoundStmt 0x9ce88e8 <line:841:6, line:844:6>
          (IfStmt 0x9ce88c8 <line:842:8, line:843:10>
            <<<NULL>>>
            (CallExpr 0x9ce8878 <line:842:12, col:57> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9ce8770 <col:12, col:25> '<dependent type>' lvalue)
              (DeclRefExpr 0x9ce87a4 <col:30> 'const _CharT *' lvalue ParmVar 0x9ce8200 '__s' 'const _CharT *')
              (DeclRefExpr 0x9ce87bc <col:35> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ce8280 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
              (ArraySubscriptExpr 0x9ce8860 <col:40, col:56> '<dependent type>' lvalue
                (CallExpr 0x9ce8828 <col:40, col:48> '<dependent type>'
                  (UnresolvedMemberExpr 0x9ce87e8 <col:40> '<bound member function type>' lvalue))
                (DeclRefExpr 0x9ce8844 <col:50> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9ce8530 '__size' 'size_type':'typename _CharT_alloc_type::size_type')))
            (ReturnStmt 0x9ce88b8 <line:843:3, col:10>
              (DeclRefExpr 0x9ce88a0 <col:10> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9ce8530 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
            <<<NULL>>>))
        (CXXOperatorCallExpr 0x9ce89b8 <line:845:11, col:23> '<dependent type>'
          (UnresolvedLookupExpr 0x9ce8960 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b412d0 0x9ac7fa0 0x9b5e2b0 0x9ba7d20 0x9bc7160 0x9bc74d0 0x9cbb090 0x9cbb590 0x9cbbad0)
          (UnaryOperator 0x9ce8930 <col:11, col:17> '<dependent type>' postfix '--'
            (DeclRefExpr 0x9ce88fc <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9ce8530 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
          (IntegerLiteral 0x9ce8948 <col:23> 'int' 0))))
    <<<NULL>>>)
  (ReturnStmt 0x9ce8a48 <line:847:7, col:14>
    (DeclRefExpr 0x9ce8a2c <col:14> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9cc5460 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))


    typename basic_string<_CharT, _Traits, _Alloc>::size_type find_first_not_of(const _CharT *__s, size_type __pos, size_type __n) const (CompoundStmt 0x9ce95c0 </usr/include/c++/4.6/bits/basic_string.tcc:854:5, line:860:5>
  (NullStmt 0x9ce9290 <line:855:46>)
  (ForStmt 0x9ce9570 <line:856:7, line:858:11>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9ce9368 <line:856:14, col:33> '<dependent type>'
      (UnresolvedLookupExpr 0x9ce9320 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40ad0 0x9b57c70 0x9b5ddb0 0x9cbc120 0x9cbc650 0x9cbcb80)
      (DeclRefExpr 0x9ce929c <col:14> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ce8fc0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x9ce9300 <col:22, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ce92c8 <col:22, col:28> '<dependent type>' lvalue
          (CXXThisExpr 0x9ce92b8 <col:22> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))
    (UnaryOperator 0x9ce93a8 <col:36, col:38> '<dependent type>' prefix '++'
      (DeclRefExpr 0x9ce938c <col:38> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ce8fc0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
    (IfStmt 0x9ce9550 <line:857:2, line:858:11>
      <<<NULL>>>
      (UnaryOperator 0x9ce9510 <line:857:6, col:51> '<dependent type>' prefix '!'
        (CallExpr 0x9ce94e8 <col:7, col:51> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9ce93e0 <col:7, col:20> '<dependent type>' lvalue)
          (DeclRefExpr 0x9ce9414 <col:25> 'const _CharT *' lvalue ParmVar 0x9ce8f80 '__s' 'const _CharT *')
          (DeclRefExpr 0x9ce942c <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ce9000 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
          (ArraySubscriptExpr 0x9ce94d0 <col:35, col:50> '<dependent type>' lvalue
            (CallExpr 0x9ce9498 <col:35, col:43> '<dependent type>'
              (UnresolvedMemberExpr 0x9ce9458 <col:35> '<bound member function type>' lvalue))
            (DeclRefExpr 0x9ce94b4 <col:45> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ce8fc0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))))
      (ReturnStmt 0x9ce9540 <line:858:4, col:11>
        (DeclRefExpr 0x9ce9524 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ce8fc0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
      <<<NULL>>>))
  (ReturnStmt 0x9ce95b0 <line:859:7, col:14>
    (DeclRefExpr 0x9ce9594 <col:14> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9cc5460 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))


    typename basic_string<_CharT, _Traits, _Alloc>::size_type find_first_not_of(_CharT __c, size_type __pos = (IntegerLiteral 0x9ca06b0 </usr/include/c++/4.6/bits/basic_string.h:2080:55> 'int' 0)
) const (CompoundStmt 0x9cea080 </usr/include/c++/4.6/bits/basic_string.tcc:866:5, line:871:5>
  (ForStmt 0x9cea030 <line:867:7, line:869:11>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9ce9e40 <line:867:14, col:33> '<dependent type>'
      (UnresolvedLookupExpr 0x9ce9df8 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40ad0 0x9b57c70 0x9b5ddb0 0x9cbc120 0x9cbc650 0x9cbcb80)
      (DeclRefExpr 0x9ce9d78 <col:14> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ce9af0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x9ce9dd8 <col:22, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ce9da0 <col:22, col:28> '<dependent type>' lvalue
          (CXXThisExpr 0x9ce9d90 <col:22> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))
    (UnaryOperator 0x9ce9e80 <col:36, col:38> '<dependent type>' prefix '++'
      (DeclRefExpr 0x9ce9e64 <col:38> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ce9af0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
    (IfStmt 0x9cea010 <line:868:2, line:869:11>
      <<<NULL>>>
      (UnaryOperator 0x9ce9fd0 <line:868:6, col:44> '<dependent type>' prefix '!'
        (CallExpr 0x9ce9fa8 <col:7, col:44> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9ce9eb8 <col:7, col:20> '<dependent type>' lvalue)
          (ArraySubscriptExpr 0x9ce9f78 <col:23, col:38> '<dependent type>' lvalue
            (CallExpr 0x9ce9f40 <col:23, col:31> '<dependent type>'
              (UnresolvedMemberExpr 0x9ce9f00 <col:23> '<bound member function type>' lvalue))
            (DeclRefExpr 0x9ce9f5c <col:33> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ce9af0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
          (DeclRefExpr 0x9ce9f8c <col:41> '_CharT' lvalue ParmVar 0x9ce9ab0 '__c' '_CharT')))
      (ReturnStmt 0x9cea000 <line:869:4, col:11>
        (DeclRefExpr 0x9ce9fe4 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ce9af0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
      <<<NULL>>>))
  (ReturnStmt 0x9cea070 <line:870:7, col:14>
    (DeclRefExpr 0x9cea054 <col:14> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9cc5460 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))


    typename basic_string<_CharT, _Traits, _Alloc>::size_type find_last_not_of(const _CharT *__s, size_type __pos, size_type __n) const (CompoundStmt 0x9cead40 </usr/include/c++/4.6/bits/basic_string.tcc:877:5, line:892:5>
  (NullStmt 0x9cea8b0 <line:878:46>)
  (DeclStmt 0x9cea970 <line:879:7, col:38>
    0x9cea8d0 "size_type __size =
      (CallExpr 0x9cea950 <col:26, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cea918 <col:26, col:32> '<dependent type>' lvalue
          (CXXThisExpr 0x9cea908 <col:26> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (IfStmt 0x9ceacf8 <line:880:7, line:890:2>
    <<<NULL>>>
    (DeclRefExpr 0x9cea980 <line:880:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9cea8d0 '__size' 'size_type':'typename _CharT_alloc_type::size_type')
    (CompoundStmt 0x9ceace0 <line:881:2, line:890:2>
      (IfStmt 0x9ceaa98 <line:882:4, line:883:15>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9ceaa28 <line:882:8, col:19> '<dependent type>'
          (UnresolvedLookupExpr 0x9cea9e0 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b42c70 0x9ac83c0 0x9b5e730 0x9cbd1f0 0x9cbd720 0x9cbdc50)
          (UnaryOperator 0x9cea9b0 <col:8, col:10> '<dependent type>' prefix '--'
            (DeclRefExpr 0x9cea998 <col:10> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9cea8d0 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
          (DeclRefExpr 0x9cea9c4 <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cea5e0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        (BinaryOperator 0x9ceaa80 <line:883:6, col:15> '<dependent type>' '='
          (DeclRefExpr 0x9ceaa4c <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9cea8d0 '__size' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0x9ceaa64 <col:15> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cea5e0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)
      (DoStmt 0x9ceacc8 <line:884:4, line:889:19>
        (CompoundStmt 0x9ceac68 <line:885:6, line:888:6>
          (IfStmt 0x9ceac48 <line:886:8, line:887:10>
            <<<NULL>>>
            (UnaryOperator 0x9ceac08 <line:886:12, col:58> '<dependent type>' prefix '!'
              (CallExpr 0x9ceabe0 <col:13, col:58> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9ceaad8 <col:13, col:26> '<dependent type>' lvalue)
                (DeclRefExpr 0x9ceab0c <col:31> 'const _CharT *' lvalue ParmVar 0x9cea5a0 '__s' 'const _CharT *')
                (DeclRefExpr 0x9ceab24 <col:36> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cea620 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
                (ArraySubscriptExpr 0x9ceabc8 <col:41, col:57> '<dependent type>' lvalue
                  (CallExpr 0x9ceab90 <col:41, col:49> '<dependent type>'
                    (UnresolvedMemberExpr 0x9ceab50 <col:41> '<bound member function type>' lvalue))
                  (DeclRefExpr 0x9ceabac <col:51> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9cea8d0 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))))
            (ReturnStmt 0x9ceac38 <line:887:3, col:10>
              (DeclRefExpr 0x9ceac1c <col:10> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9cea8d0 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
            <<<NULL>>>))
        (UnaryOperator 0x9ceacb0 <line:889:11, col:17> '<dependent type>' postfix '--'
          (DeclRefExpr 0x9ceac7c <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9cea8d0 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))))
    <<<NULL>>>)
  (ReturnStmt 0x9cead30 <line:891:7, col:14>
    (DeclRefExpr 0x9cead14 <col:14> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9cc5460 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))


    typename basic_string<_CharT, _Traits, _Alloc>::size_type find_last_not_of(_CharT __c, size_type __pos = (DeclRefExpr 0x9ca06f8 </usr/include/c++/4.6/bits/basic_string.h:2139:54> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9c7f920 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const (CompoundStmt 0x9ceb970 </usr/include/c++/4.6/bits/basic_string.tcc:898:5, line:912:5>
  (DeclStmt 0x9ceb5a0 <line:899:7, col:38>
    0x9ceb500 "size_type __size =
      (CallExpr 0x9ceb580 <col:26, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ceb548 <col:26, col:32> '<dependent type>' lvalue
          (CXXThisExpr 0x9ceb538 <col:26> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (IfStmt 0x9ceb928 <line:900:7, line:910:2>
    <<<NULL>>>
    (DeclRefExpr 0x9ceb5b0 <line:900:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9ceb500 '__size' 'size_type':'typename _CharT_alloc_type::size_type')
    (CompoundStmt 0x9ceb910 <line:901:2, line:910:2>
      (IfStmt 0x9ceb6c8 <line:902:4, line:903:15>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9ceb658 <line:902:8, col:19> '<dependent type>'
          (UnresolvedLookupExpr 0x9ceb610 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b42c70 0x9ac83c0 0x9b5e730 0x9cbd1f0 0x9cbd720 0x9cbdc50)
          (UnaryOperator 0x9ceb5e0 <col:8, col:10> '<dependent type>' prefix '--'
            (DeclRefExpr 0x9ceb5c8 <col:10> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9ceb500 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
          (DeclRefExpr 0x9ceb5f4 <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ceb270 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        (BinaryOperator 0x9ceb6b0 <line:903:6, col:15> '<dependent type>' '='
          (DeclRefExpr 0x9ceb67c <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9ceb500 '__size' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0x9ceb694 <col:15> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ceb270 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)
      (DoStmt 0x9ceb8f8 <line:904:4, line:909:19>
        (CompoundStmt 0x9ceb898 <line:905:6, line:908:6>
          (IfStmt 0x9ceb878 <line:906:8, line:907:10>
            <<<NULL>>>
            (UnaryOperator 0x9ceb820 <line:906:12, col:51> '<dependent type>' prefix '!'
              (CallExpr 0x9ceb7f8 <col:13, col:51> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9ceb708 <col:13, col:26> '<dependent type>' lvalue)
                (ArraySubscriptExpr 0x9ceb7c8 <col:29, col:45> '<dependent type>' lvalue
                  (CallExpr 0x9ceb790 <col:29, col:37> '<dependent type>'
                    (UnresolvedMemberExpr 0x9ceb750 <col:29> '<bound member function type>' lvalue))
                  (DeclRefExpr 0x9ceb7ac <col:39> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9ceb500 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
                (DeclRefExpr 0x9ceb7dc <col:48> '_CharT' lvalue ParmVar 0x9ceb230 '__c' '_CharT')))
            (ReturnStmt 0x9ceb850 <line:907:3, col:10>
              (DeclRefExpr 0x9ceb834 <col:10> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9ceb500 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
            <<<NULL>>>))
        (UnaryOperator 0x9ceb8e0 <line:909:11, col:17> '<dependent type>' postfix '--'
          (DeclRefExpr 0x9ceb8ac <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9ceb500 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))))
    <<<NULL>>>)
  (ReturnStmt 0x9ceb960 <line:911:7, col:14>
    (DeclRefExpr 0x9ceb944 <col:14> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9cc5460 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))


    int compare(size_type __pos, size_type __n, const basic_string<_CharT, _Traits, _Alloc> &__str) const (CompoundStmt 0x9cec550 </usr/include/c++/4.6/bits/basic_string.tcc:918:5, line:927:5>
  (CallExpr 0x9cebf10 <line:919:7, col:46> '<dependent type>'
    (MemberExpr 0x9cebea0 <col:7> '<bound member function type>' ->_M_check 0x9c7ff40
      (CXXThisExpr 0x9cebe90 <col:7> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9cebec0 <col:16> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cebd00 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0x9cebed8 <col:23> 'const char [22]' lvalue "basic_string::compare"))
  (BinaryOperator 0x9cebfd8 <line:920:7, col:32> '<dependent type>' '='
    (DeclRefExpr 0x9cebf34 <col:7> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cebd40 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0x9cebfb0 <col:13, col:32> '<dependent type>'
      (MemberExpr 0x9cebf60 <col:13> '<bound member function type>' ->_M_limit 0x9c82c40
        (CXXThisExpr 0x9cebf50 <col:13> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9cebf80 <col:22> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cebd00 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9cebf98 <col:29> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cebd40 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))
  (DeclStmt 0x9cec0a8 <line:921:7, col:45>
    0x9cec000 "const size_type __osize =
      (CallExpr 0x9cec088 <col:33, col:44> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cec050 <col:33, col:39> '<dependent type>' lvalue
          (DeclRefExpr 0x9cec034 <col:33> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9cebd90 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))")
  (DeclStmt 0x9cec1a0 <line:922:7, col:53>
    0x9cec0c0 "const size_type __len =
      (CallExpr 0x9cec178 <col:31, col:52> '<dependent type>'
        (UnresolvedLookupExpr 0x9cec110 <col:31, col:36> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b76440 0x9b76b30)
        (DeclRefExpr 0x9cec148 <col:40> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cebd40 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9cec160 <col:45> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9cec000 '__osize' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (DeclStmt 0x9cec3f8 <line:923:7, col:77>
    0x9cec1c0 "int __r =
      (CallExpr 0x9cec3d0 <col:17, col:76> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cec218 <col:17, col:30> '<dependent type>' lvalue)
        (CXXOperatorCallExpr 0x9cec320 <col:38, col:50> '<dependent type>'
          (UnresolvedLookupExpr 0x9cec2d8 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9ce2100 0x9ce1500 0x9b5d2b0 0x9cb44e0 0x9cb8830 0x9cb8030)
          (CallExpr 0x9cec2a0 <col:38, col:46> '<dependent type>'
            (UnresolvedMemberExpr 0x9cec260 <col:38> '<bound member function type>' lvalue))
          (DeclRefExpr 0x9cec2bc <col:50> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cebd00 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        (CallExpr 0x9cec398 <col:57, col:68> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9cec360 <col:57, col:63> '<dependent type>' lvalue
            (DeclRefExpr 0x9cec344 <col:57> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9cebd90 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
        (DeclRefExpr 0x9cec3b4 <col:71> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9cec0c0 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (IfStmt 0x9cec4f8 <line:924:7, line:925:31>
    <<<NULL>>>
    (UnaryOperator 0x9cec440 <line:924:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9cec430 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0x9cec420 <col:12> 'int' <LValueToRValue>
          (DeclRefExpr 0x9cec408 <col:12> 'int' lvalue Var 0x9cec1c0 '__r' 'int'))))
    (BinaryOperator 0x9cec4e0 <line:925:2, col:31> '<dependent type>' '='
      (DeclRefExpr 0x9cec454 <col:2> 'int' lvalue Var 0x9cec1c0 '__r' 'int')
      (CallExpr 0x9cec4b8 <col:8, col:31> '<dependent type>'
        (DeclRefExpr 0x9cec46c <col:8> 'int (size_type, size_type)' lvalue CXXMethod 0x9c83d70 '_S_compare' 'int (size_type, size_type)')
        (DeclRefExpr 0x9cec484 <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cebd40 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9cec49c <col:24> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9cec000 '__osize' 'const size_type':'const typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (ReturnStmt 0x9cec540 <line:926:7, col:14>
    (ImplicitCastExpr 0x9cec530 <col:14> 'int' <LValueToRValue>
      (DeclRefExpr 0x9cec514 <col:14> 'int' lvalue Var 0x9cec1c0 '__r' 'int'))))


    int compare(size_type __pos1, size_type __n1, const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos2, size_type __n2) const (CompoundStmt 0x9ced338 </usr/include/c++/4.6/bits/basic_string.tcc:934:5, line:945:5>
  (CallExpr 0x9cecb98 <line:935:7, col:47> '<dependent type>'
    (MemberExpr 0x9cecb28 <col:7> '<bound member function type>' ->_M_check 0x9c7ff40
      (CXXThisExpr 0x9cecb18 <col:7> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9cecb48 <col:16> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cec8f0 '__pos1' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0x9cecb60 <col:24> 'const char [22]' lvalue "basic_string::compare"))
  (CallExpr 0x9cecc58 <line:936:7, col:53> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9cecbd8 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0x9cecbbc <col:7> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9cec980 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
    (DeclRefExpr 0x9cecc0c <col:22> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cec9c0 '__pos2' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0x9cecc24 <col:30> 'const char [22]' lvalue "basic_string::compare"))
  (BinaryOperator 0x9cecd20 <line:937:7, col:35> '<dependent type>' '='
    (DeclRefExpr 0x9cecc7c <col:7> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cec930 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0x9ceccf8 <col:14, col:35> '<dependent type>'
      (MemberExpr 0x9cecca8 <col:14> '<bound member function type>' ->_M_limit 0x9c82c40
        (CXXThisExpr 0x9cecc98 <col:14> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9ceccc8 <col:23> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cec8f0 '__pos1' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9cecce0 <col:31> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cec930 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')))
  (BinaryOperator 0x9cecdf8 <line:938:7, col:41> '<dependent type>' '='
    (DeclRefExpr 0x9cecd38 <col:7> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ceca00 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0x9cecdd0 <col:14, col:41> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9cecd68 <col:14, col:20> '<dependent type>' lvalue
        (DeclRefExpr 0x9cecd50 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9cec980 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
      (DeclRefExpr 0x9cecd9c <col:29> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cec9c0 '__pos2' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9cecdb4 <col:37> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ceca00 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')))
  (DeclStmt 0x9cecf00 <line:939:7, col:51>
    0x9cece20 "const size_type __len =
      (CallExpr 0x9ceced8 <col:31, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x9cece70 <col:31, col:36> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b76440 0x9b76b30)
        (DeclRefExpr 0x9cecea8 <col:40> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cec930 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9cecec0 <col:46> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ceca00 '__n2' 'size_type':'typename _CharT_alloc_type::size_type'))")
  (DeclStmt 0x9ced1e0 <line:940:7, line:941:39>
    0x9cecf20 "int __r =
      (CallExpr 0x9ced1b8 <line:940:17, line:941:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cecf78 <line:940:17, col:30> '<dependent type>' lvalue)
        (CXXOperatorCallExpr 0x9ced080 <col:38, col:50> '<dependent type>'
          (UnresolvedLookupExpr 0x9ced038 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9ce2100 0x9ce1500 0x9b5d2b0 0x9cb44e0 0x9cb8830 0x9cb8030)
          (CallExpr 0x9ced000 <col:38, col:46> '<dependent type>'
            (UnresolvedMemberExpr 0x9cecfc0 <col:38> '<bound member function type>' lvalue))
          (DeclRefExpr 0x9ced01c <col:50> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cec8f0 '__pos1' 'size_type':'typename _CharT_alloc_type::size_type'))
        (CXXOperatorCallExpr 0x9ced178 <line:941:10, col:25> '<dependent type>'
          (UnresolvedLookupExpr 0x9ced130 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9ce2100 0x9ce1500 0x9b5d2b0 0x9cb44e0 0x9cb8830 0x9cb8030)
          (CallExpr 0x9ced0f8 <col:10, col:21> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9ced0c0 <col:10, col:16> '<dependent type>' lvalue
              (DeclRefExpr 0x9ced0a4 <col:10> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9cec980 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
          (DeclRefExpr 0x9ced114 <col:25> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cec9c0 '__pos2' 'size_type':'typename _CharT_alloc_type::size_type'))
        (DeclRefExpr 0x9ced19c <col:33> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9cece20 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (IfStmt 0x9ced2e0 <line:942:7, line:943:29>
    <<<NULL>>>
    (UnaryOperator 0x9ced228 <line:942:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9ced218 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0x9ced208 <col:12> 'int' <LValueToRValue>
          (DeclRefExpr 0x9ced1f0 <col:12> 'int' lvalue Var 0x9cecf20 '__r' 'int'))))
    (BinaryOperator 0x9ced2c8 <line:943:2, col:29> '<dependent type>' '='
      (DeclRefExpr 0x9ced23c <col:2> 'int' lvalue Var 0x9cecf20 '__r' 'int')
      (CallExpr 0x9ced2a0 <col:8, col:29> '<dependent type>'
        (DeclRefExpr 0x9ced254 <col:8> 'int (size_type, size_type)' lvalue CXXMethod 0x9c83d70 '_S_compare' 'int (size_type, size_type)')
        (DeclRefExpr 0x9ced26c <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cec930 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9ced284 <col:25> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ceca00 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (ReturnStmt 0x9ced328 <line:944:7, col:14>
    (ImplicitCastExpr 0x9ced318 <col:14> 'int' <LValueToRValue>
      (DeclRefExpr 0x9ced2fc <col:14> 'int' lvalue Var 0x9cecf20 '__r' 'int'))))


    int compare(const _CharT *__s) const (CompoundStmt 0x9cedd90 </usr/include/c++/4.6/bits/basic_string.tcc:951:5, line:960:5>
  (NullStmt 0x9ced828 <line:952:37>)
  (DeclStmt 0x9ced8e0 <line:953:7, col:44>
    0x9ced840 "const size_type __size =
      (CallExpr 0x9ced8c0 <col:32, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ced888 <col:32, col:38> '<dependent type>' lvalue
          (CXXThisExpr 0x9ced878 <col:32> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (DeclStmt 0x9ced9c8 <line:954:7, col:57>
    0x9ced900 "const size_type __osize =
      (CallExpr 0x9ced9a8 <col:33, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ced958 <col:33, col:46> '<dependent type>' lvalue)
        (DeclRefExpr 0x9ced98c <col:53> 'const _CharT *' lvalue ParmVar 0x9ced710 '__s' 'const _CharT *'))")
  (DeclStmt 0x9cedac0 <line:955:7, col:56>
    0x9ced9e0 "const size_type __len =
      (CallExpr 0x9ceda98 <col:31, col:55> '<dependent type>'
        (UnresolvedLookupExpr 0x9ceda30 <col:31, col:36> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b76440 0x9b76b30)
        (DeclRefExpr 0x9ceda68 <col:40> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9ced840 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9ceda80 <col:48> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9ced900 '__osize' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (DeclStmt 0x9cedc38 <line:956:7, col:60>
    0x9cedae0 "int __r =
      (CallExpr 0x9cedc10 <col:17, col:59> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cedb38 <col:17, col:30> '<dependent type>' lvalue)
        (CallExpr 0x9cedbc0 <col:38, col:46> '<dependent type>'
          (UnresolvedMemberExpr 0x9cedb80 <col:38> '<bound member function type>' lvalue))
        (DeclRefExpr 0x9cedbdc <col:49> 'const _CharT *' lvalue ParmVar 0x9ced710 '__s' 'const _CharT *')
        (DeclRefExpr 0x9cedbf4 <col:54> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9ced9e0 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (IfStmt 0x9cedd38 <line:957:7, line:958:34>
    <<<NULL>>>
    (UnaryOperator 0x9cedc80 <line:957:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9cedc70 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0x9cedc60 <col:12> 'int' <LValueToRValue>
          (DeclRefExpr 0x9cedc48 <col:12> 'int' lvalue Var 0x9cedae0 '__r' 'int'))))
    (BinaryOperator 0x9cedd20 <line:958:2, col:34> '<dependent type>' '='
      (DeclRefExpr 0x9cedc94 <col:2> 'int' lvalue Var 0x9cedae0 '__r' 'int')
      (CallExpr 0x9cedcf8 <col:8, col:34> '<dependent type>'
        (DeclRefExpr 0x9cedcac <col:8> 'int (size_type, size_type)' lvalue CXXMethod 0x9c83d70 '_S_compare' 'int (size_type, size_type)')
        (DeclRefExpr 0x9cedcc4 <col:19> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9ced840 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9cedcdc <col:27> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9ced900 '__osize' 'const size_type':'const typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (ReturnStmt 0x9cedd80 <line:959:7, col:14>
    (ImplicitCastExpr 0x9cedd70 <col:14> 'int' <LValueToRValue>
      (DeclRefExpr 0x9cedd54 <col:14> 'int' lvalue Var 0x9cedae0 '__r' 'int'))))


    int compare(size_type __pos, size_type __n1, const _CharT *__s) const (CompoundStmt 0x9cee9a8 </usr/include/c++/4.6/bits/basic_string.tcc:966:5, line:976:5>
  (NullStmt 0x9cee310 <line:967:37>)
  (CallExpr 0x9cee3a0 <line:968:7, col:46> '<dependent type>'
    (MemberExpr 0x9cee330 <col:7> '<bound member function type>' ->_M_check 0x9c7ff40
      (CXXThisExpr 0x9cee320 <col:7> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9cee350 <col:16> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cee130 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0x9cee368 <col:23> 'const char [22]' lvalue "basic_string::compare"))
  (BinaryOperator 0x9cee468 <line:969:7, col:34> '<dependent type>' '='
    (DeclRefExpr 0x9cee3c4 <col:7> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cee170 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0x9cee440 <col:14, col:34> '<dependent type>'
      (MemberExpr 0x9cee3f0 <col:14> '<bound member function type>' ->_M_limit 0x9c82c40
        (CXXThisExpr 0x9cee3e0 <col:14> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9cee410 <col:23> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cee130 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9cee428 <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cee170 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')))
  (DeclStmt 0x9cee558 <line:970:7, col:57>
    0x9cee490 "const size_type __osize =
      (CallExpr 0x9cee538 <col:33, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cee4e8 <col:33, col:46> '<dependent type>' lvalue)
        (DeclRefExpr 0x9cee51c <col:53> 'const _CharT *' lvalue ParmVar 0x9cee1e0 '__s' 'const _CharT *'))")
  (DeclStmt 0x9cee650 <line:971:7, col:54>
    0x9cee570 "const size_type __len =
      (CallExpr 0x9cee628 <col:31, col:53> '<dependent type>'
        (UnresolvedLookupExpr 0x9cee5c0 <col:31, col:36> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b76440 0x9b76b30)
        (DeclRefExpr 0x9cee5f8 <col:40> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cee170 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9cee610 <col:46> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9cee490 '__osize' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (DeclStmt 0x9cee850 <line:972:7, col:68>
    0x9cee670 "int __r =
      (CallExpr 0x9cee828 <col:17, col:67> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cee6c8 <col:17, col:30> '<dependent type>' lvalue)
        (CXXOperatorCallExpr 0x9cee7d0 <col:38, col:50> '<dependent type>'
          (UnresolvedLookupExpr 0x9cee788 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9ce2100 0x9ce1500 0x9b5d2b0 0x9cb44e0 0x9cb8830 0x9cb8030)
          (CallExpr 0x9cee750 <col:38, col:46> '<dependent type>'
            (UnresolvedMemberExpr 0x9cee710 <col:38> '<bound member function type>' lvalue))
          (DeclRefExpr 0x9cee76c <col:50> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cee130 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        (DeclRefExpr 0x9cee7f4 <col:57> 'const _CharT *' lvalue ParmVar 0x9cee1e0 '__s' 'const _CharT *')
        (DeclRefExpr 0x9cee80c <col:62> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9cee570 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (IfStmt 0x9cee950 <line:973:7, line:974:32>
    <<<NULL>>>
    (UnaryOperator 0x9cee898 <line:973:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9cee888 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0x9cee878 <col:12> 'int' <LValueToRValue>
          (DeclRefExpr 0x9cee860 <col:12> 'int' lvalue Var 0x9cee670 '__r' 'int'))))
    (BinaryOperator 0x9cee938 <line:974:2, col:32> '<dependent type>' '='
      (DeclRefExpr 0x9cee8ac <col:2> 'int' lvalue Var 0x9cee670 '__r' 'int')
      (CallExpr 0x9cee910 <col:8, col:32> '<dependent type>'
        (DeclRefExpr 0x9cee8c4 <col:8> 'int (size_type, size_type)' lvalue CXXMethod 0x9c83d70 '_S_compare' 'int (size_type, size_type)')
        (DeclRefExpr 0x9cee8dc <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9cee170 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9cee8f4 <col:25> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9cee490 '__osize' 'const size_type':'const typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (ReturnStmt 0x9cee998 <line:975:7, col:14>
    (ImplicitCastExpr 0x9cee988 <col:14> 'int' <LValueToRValue>
      (DeclRefExpr 0x9cee96c <col:14> 'int' lvalue Var 0x9cee670 '__r' 'int'))))


    int compare(size_type __pos, size_type __n1, const _CharT *__s, size_type __n2) const (CompoundStmt 0x9cef528 </usr/include/c++/4.6/bits/basic_string.tcc:983:5, line:992:5>
  (NullStmt 0x9ceef70 <line:984:47>)
  (CallExpr 0x9cef000 <line:985:7, col:46> '<dependent type>'
    (MemberExpr 0x9ceef90 <col:7> '<bound member function type>' ->_M_check 0x9c7ff40
      (CXXThisExpr 0x9ceef80 <col:7> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9ceefb0 <col:16> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ceed50 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0x9ceefc8 <col:23> 'const char [22]' lvalue "basic_string::compare"))
  (BinaryOperator 0x9cef0c8 <line:986:7, col:34> '<dependent type>' '='
    (DeclRefExpr 0x9cef024 <col:7> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ceed90 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0x9cef0a0 <col:14, col:34> '<dependent type>'
      (MemberExpr 0x9cef050 <col:14> '<bound member function type>' ->_M_limit 0x9c82c40
        (CXXThisExpr 0x9cef040 <col:14> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9cef070 <col:23> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ceed50 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9cef088 <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ceed90 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')))
  (DeclStmt 0x9cef1d0 <line:987:7, col:51>
    0x9cef0f0 "const size_type __len =
      (CallExpr 0x9cef1a8 <col:31, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x9cef140 <col:31, col:36> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b76440 0x9b76b30)
        (DeclRefExpr 0x9cef178 <col:40> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ceed90 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9cef190 <col:46> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ceee40 '__n2' 'size_type':'typename _CharT_alloc_type::size_type'))")
  (DeclStmt 0x9cef3d0 <line:988:7, col:68>
    0x9cef1f0 "int __r =
      (CallExpr 0x9cef3a8 <col:17, col:67> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cef248 <col:17, col:30> '<dependent type>' lvalue)
        (CXXOperatorCallExpr 0x9cef350 <col:38, col:50> '<dependent type>'
          (UnresolvedLookupExpr 0x9cef308 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9ce2100 0x9ce1500 0x9b5d2b0 0x9cb44e0 0x9cb8830 0x9cb8030)
          (CallExpr 0x9cef2d0 <col:38, col:46> '<dependent type>'
            (UnresolvedMemberExpr 0x9cef290 <col:38> '<bound member function type>' lvalue))
          (DeclRefExpr 0x9cef2ec <col:50> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ceed50 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        (DeclRefExpr 0x9cef374 <col:57> 'const _CharT *' lvalue ParmVar 0x9ceee00 '__s' 'const _CharT *')
        (DeclRefExpr 0x9cef38c <col:62> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9cef0f0 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (IfStmt 0x9cef4d0 <line:989:7, line:990:29>
    <<<NULL>>>
    (UnaryOperator 0x9cef418 <line:989:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9cef408 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0x9cef3f8 <col:12> 'int' <LValueToRValue>
          (DeclRefExpr 0x9cef3e0 <col:12> 'int' lvalue Var 0x9cef1f0 '__r' 'int'))))
    (BinaryOperator 0x9cef4b8 <line:990:2, col:29> '<dependent type>' '='
      (DeclRefExpr 0x9cef42c <col:2> 'int' lvalue Var 0x9cef1f0 '__r' 'int')
      (CallExpr 0x9cef490 <col:8, col:29> '<dependent type>'
        (DeclRefExpr 0x9cef444 <col:8> 'int (size_type, size_type)' lvalue CXXMethod 0x9c83d70 '_S_compare' 'int (size_type, size_type)')
        (DeclRefExpr 0x9cef45c <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ceed90 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9cef474 <col:25> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ceee40 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (ReturnStmt 0x9cef518 <line:991:7, col:14>
    (ImplicitCastExpr 0x9cef508 <col:14> 'int' <LValueToRValue>
      (DeclRefExpr 0x9cef4ec <col:14> 'int' lvalue Var 0x9cef1f0 '__r' 'int'))))


    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> basic_istream<wchar_t, std::char_traits<wchar_t> > &operator>>(basic_istream<wchar_t, std::char_traits<wchar_t> > &__in, basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > &__str)template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> basic_istream<char> &operator>>(basic_istream<char> &__is, basic_string<char> &__str)template <typename _CharT, typename _Traits, typename _Alloc> basic_istream<_CharT, _Traits> &operator>>(basic_istream<_CharT, _Traits> &__in, basic_string<_CharT, _Traits, _Alloc> &__str) (CompoundStmt 0x9cf1c00 </usr/include/c++/4.6/bits/basic_string.tcc:999:5, line:1065:5>
  (DeclStmt 0x9cefcd0 <line:1000:7, col:61>
    0x9cefca0 "typedef basic_istream<_CharT, _Traits> __istream_type")
  (DeclStmt 0x9cefe70 <line:1001:7, col:66>
    0x9cefe40 "typedef basic_string<_CharT, _Traits, _Alloc> __string_type")
  (DeclStmt 0x9ceff60 <line:1002:7, col:67>
    0x9ceff30 "typedef typename __istream_type::ios_base __ios_base")
  (DeclStmt 0x9cf0020 <line:1003:7, col:60>
    0x9cefff0 "typedef typename __istream_type::int_type __int_type")
  (DeclStmt 0x9cf00e0 <line:1004:7, col:61>
    0x9cf00b0 "typedef typename __string_type::size_type __size_type")
  (DeclStmt 0x9cf01d0 <line:1005:7, col:44>
    0x9cf01a0 "typedef ctype<_CharT> __ctype_type")
  (DeclStmt 0x9cf02c0 <line:1006:7, col:69>
    0x9cf0290 "typedef typename __ctype_type::ctype_base __ctype_base")
  (DeclStmt 0x9cf0340 <line:1008:7, col:34>
    0x9cf02f0 "__size_type __extracted =
      (IntegerLiteral 0x9cf0328 <col:33> 'int' 0)")
  (DeclStmt 0x9cf0480 <line:1009:7, col:63>
    0x9cf0400 "typename __ios_base::iostate __err =
      (DependentScopeDeclRefExpr 0x9cf0458 <col:44, col:56> '<dependent type>' lvalue)")
  (DeclStmt 0x9cf0590 <line:1010:7, col:58>
    0x9cf0510 "typename __istream_type::sentry __cerb =
      (ParenListExpr 0x9cf0570 <col:45, col:57> 'typename __istream_type::sentry'
        (DeclRefExpr 0x9cf0544 <col:46> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9cef880 '__in' 'basic_istream<_CharT, _Traits> &')
        (CXXBoolLiteralExpr 0x9cf0560 <col:52> '_Bool' false))")
  (IfStmt 0x9cf1a28 <line:1011:7, line:1058:2>
    <<<NULL>>>
    (DeclRefExpr 0x9cf05a0 <line:1011:11> 'typename __istream_type::sentry' lvalue Var 0x9cf0510 '__cerb' 'typename __istream_type::sentry')
    (CompoundStmt 0x9cf1a08 <line:1012:2, line:1058:2>
      (IfStmt 0x9cf17d8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/basic_string.tcc:1045:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9cf05b8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9cf1798 </usr/include/c++/4.6/bits/basic_string.tcc:1014:6, line:1045:6>
          (CallExpr 0x9cf0618 <line:1016:8, col:20> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9cf05e0 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0x9cf05c8 <col:8> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9cefa30 '__str' 'basic_string<_CharT, _Traits, _Alloc> &')))
          (DeclStmt 0x9cf06c8 <line:1017:8, col:25>
            0x9cf0690 "_CharT __buf[128]")
          (DeclStmt 0x9cf0730 <line:1018:8, col:29>
            0x9cf06e0 "__size_type __len =
              (IntegerLiteral 0x9cf0718 <col:28> 'int' 0)")
          (DeclStmt 0x9cf07f8 <line:1019:8, col:43>
            0x9cf0750 "const streamsize __w =
              (CallExpr 0x9cf07d8 <col:31, col:42> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9cf07a0 <col:31, col:36> '<dependent type>' lvalue
                  (DeclRefExpr 0x9cf0784 <col:31> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9cef880 '__in' 'basic_istream<_CharT, _Traits> &')))")
          (DeclStmt 0x9cf0968 <line:1020:8, line:1021:51>
            0x9cf0810 "const __size_type __n =
              (ConditionalOperator 0x9cf0948 <line:1020:32, line:1021:50> '<dependent type>'
                (BinaryOperator 0x9cf0888 <line:1020:32, col:38> '_Bool' '>'
                  (ImplicitCastExpr 0x9cf0878 <col:32> 'streamsize':'int' <LValueToRValue>
                    (DeclRefExpr 0x9cf0844 <col:32> 'const streamsize':'const int' lvalue Var 0x9cf0750 '__w' 'const streamsize':'const int'))
                  (IntegerLiteral 0x9cf0860 <col:38> 'int' 0))
                (CXXStaticCastExpr 0x9cf08c0 <col:42, col:70> '__size_type':'typename __string_type::size_type' static_cast<__size_type> <Dependent>
                  (DeclRefExpr 0x9cf08a0 <col:67> 'const streamsize':'const int' lvalue Var 0x9cf0750 '__w' 'const streamsize':'const int'))
                (CallExpr 0x9cf0928 <line:1021:35, col:50> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9cf08f0 <col:35, col:41> '<dependent type>' lvalue
                    (DeclRefExpr 0x9cf08d8 <col:35> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9cefa30 '__str' 'basic_string<_CharT, _Traits, _Alloc> &'))))")
          (DeclStmt 0x9cf0b08 <line:1022:8, col:73>
            0x9cf09d0 "const __ctype_type &__ct =
              (CallExpr 0x9cf0ae8 <col:35, col:72> '<dependent type>'
                (UnresolvedLookupExpr 0x9cf0a10 <col:35, col:57> '<dependent type>' lvalue (ADL) = '1' 0x9bea390)
                (CallExpr 0x9cf0ac8 <col:59, col:71> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9cf0a90 <col:59, col:64> '<dependent type>' lvalue
                    (DeclRefExpr 0x9cf0a78 <col:59> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9cef880 '__in' 'basic_istream<_CharT, _Traits> &'))))")
          (DeclStmt 0x9cf0be8 <line:1023:8, col:47>
            0x9cf0b40 "const __int_type __eof =
              (CallExpr 0x9cf0bc8 <col:33, col:46> '<dependent type>'
                (DependentScopeDeclRefExpr 0x9cf0ba0 <col:33, col:42> '<dependent type>' lvalue))")
          (DeclStmt 0x9cf0d00 <line:1024:8, col:46>
            0x9cf0c00 "__int_type __c =
              (CallExpr 0x9cf0ce0 <col:25, col:45> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9cf0ca8 <col:25, col:39> '<dependent type>' lvalue
                  (CallExpr 0x9cf0c88 <col:25, col:36> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9cf0c50 <col:25, col:30> '<dependent type>' lvalue
                      (DeclRefExpr 0x9cf0c34 <col:25> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9cef880 '__in' 'basic_istream<_CharT, _Traits> &')))))")
          (WhileStmt 0x9cf1508 <line:1026:8, line:1039:3>
            <<<NULL>>>
            (BinaryOperator 0x9cf0ff0 <line:1026:15, line:1029:32> '<dependent type>' '&&'
              (BinaryOperator 0x9cf0e68 <line:1026:15, line:1027:43> '<dependent type>' '&&'
                (CXXOperatorCallExpr 0x9cf0d88 <line:1026:15, col:29> '<dependent type>'
                  (UnresolvedLookupExpr 0x9cf0d40 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40ad0 0x9b57c70 0x9b5ddb0 0x9cbc120 0x9cbc650 0x9cbcb80)
                  (DeclRefExpr 0x9cf0d10 <col:15> '__size_type':'typename __string_type::size_type' lvalue Var 0x9cf02f0 '__extracted' '__size_type':'typename __string_type::size_type')
                  (DeclRefExpr 0x9cf0d28 <col:29> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0x9cf0810 '__n' 'const __size_type':'const typename __string_type::size_type'))
                (UnaryOperator 0x9cf0e50 <line:1027:11, col:43> '<dependent type>' prefix '!'
                  (CallExpr 0x9cf0e28 <col:12, col:43> '<dependent type>'
                    (DependentScopeDeclRefExpr 0x9cf0dd0 <col:12, col:21> '<dependent type>' lvalue)
                    (DeclRefExpr 0x9cf0df4 <col:33> '__int_type':'typename __istream_type::int_type' lvalue Var 0x9cf0c00 '__c' '__int_type':'typename __istream_type::int_type')
                    (DeclRefExpr 0x9cf0e0c <col:38> 'const __int_type':'const typename __istream_type::int_type' lvalue Var 0x9cf0b40 '__eof' 'const __int_type':'const typename __istream_type::int_type'))))
              (UnaryOperator 0x9cf0fd8 <line:1028:11, line:1029:32> '<dependent type>' prefix '!'
                (CallExpr 0x9cf0fb0 <line:1028:12, line:1029:32> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9cf0e98 <line:1028:12, col:17> '<dependent type>' lvalue
                    (DeclRefExpr 0x9cf0e80 <col:12> 'const __ctype_type':'const ctype<_CharT>' lvalue Var 0x9cf09d0 '__ct' 'const __ctype_type &'))
                  (DependentScopeDeclRefExpr 0x9cf0f08 <col:20, col:34> '<dependent type>' lvalue)
                  (CallExpr 0x9cf0f90 <line:1029:6, col:31> '<dependent type>'
                    (DependentScopeDeclRefExpr 0x9cf0f50 <col:6, col:15> '<dependent type>' lvalue)
                    (DeclRefExpr 0x9cf0f74 <col:28> '__int_type':'typename __istream_type::int_type' lvalue Var 0x9cf0c00 '__c' '__int_type':'typename __istream_type::int_type')))))
            (CompoundStmt 0x9cf14e8 <line:1030:3, line:1039:3>
              (IfStmt 0x9cf1290 <line:1031:5, line:1035:7>
                <<<NULL>>>
                (CXXOperatorCallExpr 0x9cf10f8 <line:1031:9, col:47> '<dependent type>'
                  (UnresolvedLookupExpr 0x9cf10a0 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90 0x9cb91e0 0x9cb9c50 0x9cba490 0x9cbaa00)
                  (DeclRefExpr 0x9cf1008 <col:9> '__size_type':'typename __string_type::size_type' lvalue Var 0x9cf06e0 '__len' '__size_type':'typename __string_type::size_type')
                  (BinaryOperator 0x9cf1088 <col:18, col:47> 'unsigned int' '/'
                    (UnaryExprOrTypeTraitExpr 0x9cf1050 <col:18, col:30> 'unsigned int' sizeof 
                      (ParenExpr 0x9cf1038 <col:24, col:30> '_CharT [128]' lvalue
                        (DeclRefExpr 0x9cf1020 <col:25> '_CharT [128]' lvalue Var 0x9cf0690 '__buf' '_CharT [128]')))
                    (UnaryExprOrTypeTraitExpr 0x9cf1070 <col:34, col:47> 'unsigned int' sizeof '_CharT')))
                (CompoundStmt 0x9cf1278 <line:1032:7, line:1035:7>
                  (CallExpr 0x9cf1208 <line:1033:9, col:59> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9cf1138 <col:9, col:15> '<dependent type>' lvalue
                      (DeclRefExpr 0x9cf111c <col:9> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9cefa30 '__str' 'basic_string<_CharT, _Traits, _Alloc> &'))
                    (DeclRefExpr 0x9cf116c <col:22> '_CharT [128]' lvalue Var 0x9cf0690 '__buf' '_CharT [128]')
                    (BinaryOperator 0x9cf11f0 <col:29, col:58> 'unsigned int' '/'
                      (UnaryExprOrTypeTraitExpr 0x9cf11b8 <col:29, col:41> 'unsigned int' sizeof 
                        (ParenExpr 0x9cf11a0 <col:35, col:41> '_CharT [128]' lvalue
                          (DeclRefExpr 0x9cf1184 <col:36> '_CharT [128]' lvalue Var 0x9cf0690 '__buf' '_CharT [128]')))
                      (UnaryExprOrTypeTraitExpr 0x9cf11d8 <col:45, col:58> 'unsigned int' sizeof '_CharT')))
                  (BinaryOperator 0x9cf1260 <line:1034:9, col:17> '<dependent type>' '='
                    (DeclRefExpr 0x9cf122c <col:9> '__size_type':'typename __string_type::size_type' lvalue Var 0x9cf06e0 '__len' '__size_type':'typename __string_type::size_type')
                    (IntegerLiteral 0x9cf1248 <col:17> 'int' 0)))
                <<<NULL>>>)
              (BinaryOperator 0x9cf13a8 <line:1036:5, col:47> '<dependent type>' '='
                (ArraySubscriptExpr 0x9cf1310 <col:5, col:18> '<dependent type>' lvalue
                  (DeclRefExpr 0x9cf12ac <col:5> '_CharT [128]' lvalue Var 0x9cf0690 '__buf' '_CharT [128]')
                  (UnaryOperator 0x9cf12f8 <col:11, col:16> '<dependent type>' postfix '++'
                    (DeclRefExpr 0x9cf12c4 <col:11> '__size_type':'typename __string_type::size_type' lvalue Var 0x9cf06e0 '__len' '__size_type':'typename __string_type::size_type')))
                (CallExpr 0x9cf1388 <col:22, col:47> '<dependent type>'
                  (DependentScopeDeclRefExpr 0x9cf1348 <col:22, col:31> '<dependent type>' lvalue)
                  (DeclRefExpr 0x9cf136c <col:44> '__int_type':'typename __istream_type::int_type' lvalue Var 0x9cf0c00 '__c' '__int_type':'typename __istream_type::int_type')))
              (UnaryOperator 0x9cf13d8 <line:1037:5, col:7> '<dependent type>' prefix '++'
                (DeclRefExpr 0x9cf13c0 <col:7> '__size_type':'typename __string_type::size_type' lvalue Var 0x9cf02f0 '__extracted' '__size_type':'typename __string_type::size_type'))
              (BinaryOperator 0x9cf14d0 <line:1038:5, col:32> '<dependent type>' '='
                (DeclRefExpr 0x9cf13ec <col:5> '__int_type':'typename __istream_type::int_type' lvalue Var 0x9cf0c00 '__c' '__int_type':'typename __istream_type::int_type')
                (CallExpr 0x9cf14b0 <col:11, col:32> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9cf1478 <col:11, col:25> '<dependent type>' lvalue
                    (CallExpr 0x9cf1458 <col:11, col:22> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0x9cf1420 <col:11, col:16> '<dependent type>' lvalue
                        (DeclRefExpr 0x9cf1404 <col:11> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9cef880 '__in' 'basic_istream<_CharT, _Traits> &'))))))))
          (CallExpr 0x9cf15a0 <line:1040:8, col:33> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9cf1538 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0x9cf151c <col:8> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9cefa30 '__str' 'basic_string<_CharT, _Traits, _Alloc> &'))
            (DeclRefExpr 0x9cf156c <col:21> '_CharT [128]' lvalue Var 0x9cf0690 '__buf' '_CharT [128]')
            (DeclRefExpr 0x9cf1584 <col:28> '__size_type':'typename __string_type::size_type' lvalue Var 0x9cf06e0 '__len' '__size_type':'typename __string_type::size_type'))
          (IfStmt 0x9cf16f0 <line:1042:8, line:1043:24>
            <<<NULL>>>
            (CallExpr 0x9cf1648 <line:1042:12, col:43> '<dependent type>'
              (DependentScopeDeclRefExpr 0x9cf15f0 <col:12, col:21> '<dependent type>' lvalue)
              (DeclRefExpr 0x9cf1614 <col:33> '__int_type':'typename __istream_type::int_type' lvalue Var 0x9cf0c00 '__c' '__int_type':'typename __istream_type::int_type')
              (DeclRefExpr 0x9cf162c <col:38> 'const __int_type':'const typename __istream_type::int_type' lvalue Var 0x9cf0b40 '__eof' 'const __int_type':'const typename __istream_type::int_type'))
            (CompoundAssignOperator 0x9cf16d0 <line:1043:3, col:24> '<dependent type>' lvalue '|=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
              (DeclRefExpr 0x9cf166c <col:3> 'typename __ios_base::iostate' lvalue Var 0x9cf0400 '__err' 'typename __ios_base::iostate')
              (DependentScopeDeclRefExpr 0x9cf16a8 <col:12, col:24> '<dependent type>' lvalue))
            <<<NULL>>>)
          (CallExpr 0x9cf1778 <line:1044:8, col:20> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9cf1728 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0x9cf170c <col:8> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9cef880 '__in' 'basic_istream<_CharT, _Traits> &'))
            (IntegerLiteral 0x9cf1760 <col:19> 'int' 0)))
        <<<NULL>>>)
      (IfStmt 0x9cf18e8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/basic_string.tcc:1050:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9cf17f8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9cf18d0 </usr/include/c++/4.6/bits/basic_string.tcc:1047:6, line:1050:6>
          (CallExpr 0x9cf18a0 <line:1048:8, col:43> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9cf1820 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0x9cf1808 <col:8> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9cef880 '__in' 'basic_istream<_CharT, _Traits> &'))
            (DependentScopeDeclRefExpr 0x9cf1878 <col:25, col:37> '<dependent type>' lvalue))
          (NullStmt 0x9cf18c0 <line:1049:31>))
        <<<NULL>>>)
      (IfStmt 0x9cf19e8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/basic_string.tcc:1057:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9cf1908 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9cf19d0 </usr/include/c++/4.6/bits/basic_string.tcc:1052:6, line:1057:6>
          (CallExpr 0x9cf19b0 <line:1056:8, col:43> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9cf1930 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0x9cf1918 <col:8> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9cef880 '__in' 'basic_istream<_CharT, _Traits> &'))
            (DependentScopeDeclRefExpr 0x9cf1988 <col:25, col:37> '<dependent type>' lvalue)))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0x9cf1af8 <line:1060:7, line:1061:23>
    <<<NULL>>>
    (UnaryOperator 0x9cf1a60 <line:1060:11, col:12> '<dependent type>' prefix '!'
      (DeclRefExpr 0x9cf1a44 <col:12> '__size_type':'typename __string_type::size_type' lvalue Var 0x9cf02f0 '__extracted' '__size_type':'typename __string_type::size_type'))
    (CompoundAssignOperator 0x9cf1ad8 <line:1061:2, col:23> '<dependent type>' lvalue '|=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
      (DeclRefExpr 0x9cf1a74 <col:2> 'typename __ios_base::iostate' lvalue Var 0x9cf0400 '__err' 'typename __ios_base::iostate')
      (DependentScopeDeclRefExpr 0x9cf1ab0 <col:11, col:23> '<dependent type>' lvalue))
    <<<NULL>>>)
  (IfStmt 0x9cf1bb8 <line:1062:7, line:1063:21>
    <<<NULL>>>
    (DeclRefExpr 0x9cf1b14 <line:1062:11> 'typename __ios_base::iostate' lvalue Var 0x9cf0400 '__err' 'typename __ios_base::iostate')
    (CallExpr 0x9cf1b98 <line:1063:2, col:21> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9cf1b48 <col:2, col:7> '<dependent type>' lvalue
        (DeclRefExpr 0x9cf1b2c <col:2> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9cef880 '__in' 'basic_istream<_CharT, _Traits> &'))
      (DeclRefExpr 0x9cf1b7c <col:16> 'typename __ios_base::iostate' lvalue Var 0x9cf0400 '__err' 'typename __ios_base::iostate'))
    <<<NULL>>>)
  (ReturnStmt 0x9cf1bf0 <line:1064:7, col:14>
    (DeclRefExpr 0x9cf1bd4 <col:14> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9cef880 '__in' 'basic_istream<_CharT, _Traits> &')))

;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> basic_istream<wchar_t> &getline(basic_istream<wchar_t> &__in, basic_string<wchar_t> &__str, wchar_t __delim)template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> basic_istream<char> &getline(basic_istream<char> &__in, basic_string<char> &__str, char __delim)template <typename _CharT, typename _Traits, typename _Alloc> basic_istream<_CharT, _Traits> &getline(basic_istream<_CharT, _Traits> &__in, basic_string<_CharT, _Traits, _Alloc> &__str, _CharT __delim) (CompoundStmt 0x9cf3b00 </usr/include/c++/4.6/bits/basic_string.tcc:1071:5, line:1128:5>
  (DeclStmt 0x9cf2410 <line:1072:7, col:61>
    0x9cf23e0 "typedef basic_istream<_CharT, _Traits> __istream_type")
  (DeclStmt 0x9cf25b0 <line:1073:7, col:66>
    0x9cf2580 "typedef basic_string<_CharT, _Traits, _Alloc> __string_type")
  (DeclStmt 0x9cf2670 <line:1074:7, col:67>
    0x9cf2640 "typedef typename __istream_type::ios_base __ios_base")
  (DeclStmt 0x9cf2710 <line:1075:7, col:60>
    0x9cf26e0 "typedef typename __istream_type::int_type __int_type")
  (DeclStmt 0x9cf27d0 <line:1076:7, col:61>
    0x9cf27a0 "typedef typename __string_type::size_type __size_type")
  (DeclStmt 0x9cf2850 <line:1078:7, col:34>
    0x9cf2800 "__size_type __extracted =
      (IntegerLiteral 0x9cf2838 <col:33> 'int' 0)")
  (DeclStmt 0x9cf2918 <line:1079:7, col:47>
    0x9cf2870 "const __size_type __n =
      (CallExpr 0x9cf28f8 <col:31, col:46> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cf28c0 <col:31, col:37> '<dependent type>' lvalue
          (DeclRefExpr 0x9cf28a4 <col:31> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9cf2110 '__str' 'basic_string<_CharT, _Traits, _Alloc> &')))")
  (DeclStmt 0x9cf2a30 <line:1080:7, col:63>
    0x9cf29b0 "typename __ios_base::iostate __err =
      (DependentScopeDeclRefExpr 0x9cf2a08 <col:44, col:56> '<dependent type>' lvalue)")
  (DeclStmt 0x9cf2b20 <line:1081:7, col:57>
    0x9cf2aa0 "typename __istream_type::sentry __cerb =
      (ParenListExpr 0x9cf2b00 <col:45, col:56> 'typename __istream_type::sentry'
        (DeclRefExpr 0x9cf2ad4 <col:46> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9cf1f60 '__in' 'basic_istream<_CharT, _Traits> &')
        (CXXBoolLiteralExpr 0x9cf2af0 <col:52> '_Bool' true))")
  (IfStmt 0x9cf3928 <line:1082:7, line:1122:2>
    <<<NULL>>>
    (DeclRefExpr 0x9cf2b30 <line:1082:11> 'typename __istream_type::sentry' lvalue Var 0x9cf2aa0 '__cerb' 'typename __istream_type::sentry')
    (CompoundStmt 0x9cf3908 <line:1083:2, line:1122:2>
      (IfStmt 0x9cf36c0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/basic_string.tcc:1109:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9cf2b48 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9cf3698 </usr/include/c++/4.6/bits/basic_string.tcc:1085:6, line:1109:6>
          (CallExpr 0x9cf2ba8 <line:1086:8, col:20> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9cf2b70 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0x9cf2b58 <col:8> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9cf2110 '__str' 'basic_string<_CharT, _Traits, _Alloc> &')))
          (DeclStmt 0x9cf2cb0 <line:1087:8, col:65>
            0x9cf2bf0 "const __int_type __idelim =
              (CallExpr 0x9cf2c90 <col:36, col:64> '<dependent type>'
                (DependentScopeDeclRefExpr 0x9cf2c50 <col:36, col:45> '<dependent type>' lvalue)
                (DeclRefExpr 0x9cf2c74 <col:57> '_CharT' lvalue ParmVar 0x9cf2150 '__delim' '_CharT'))")
          (DeclStmt 0x9cf2d70 <line:1088:8, col:47>
            0x9cf2cd0 "const __int_type __eof =
              (CallExpr 0x9cf2d50 <col:33, col:46> '<dependent type>'
                (DependentScopeDeclRefExpr 0x9cf2d28 <col:33, col:42> '<dependent type>' lvalue))")
          (DeclStmt 0x9cf2e90 <line:1089:8, col:46>
            0x9cf2d90 "__int_type __c =
              (CallExpr 0x9cf2e70 <col:25, col:45> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9cf2e38 <col:25, col:39> '<dependent type>' lvalue
                  (CallExpr 0x9cf2e18 <col:25, col:36> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9cf2de0 <col:25, col:30> '<dependent type>' lvalue
                      (DeclRefExpr 0x9cf2dc4 <col:25> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9cf1f60 '__in' 'basic_istream<_CharT, _Traits> &')))))")
          (WhileStmt 0x9cf32e0 <line:1091:8, line:1098:3>
            <<<NULL>>>
            (BinaryOperator 0x9cf30c8 <line:1091:15, line:1093:46> '<dependent type>' '&&'
              (BinaryOperator 0x9cf2ff8 <line:1091:15, line:1092:43> '<dependent type>' '&&'
                (CXXOperatorCallExpr 0x9cf2f18 <line:1091:15, col:29> '<dependent type>'
                  (UnresolvedLookupExpr 0x9cf2ed0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40ad0 0x9b57c70 0x9b5ddb0 0x9cbc120 0x9cbc650 0x9cbcb80)
                  (DeclRefExpr 0x9cf2ea0 <col:15> '__size_type':'typename __string_type::size_type' lvalue Var 0x9cf2800 '__extracted' '__size_type':'typename __string_type::size_type')
                  (DeclRefExpr 0x9cf2eb8 <col:29> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0x9cf2870 '__n' 'const __size_type':'const typename __string_type::size_type'))
                (UnaryOperator 0x9cf2fe0 <line:1092:11, col:43> '<dependent type>' prefix '!'
                  (CallExpr 0x9cf2fb8 <col:12, col:43> '<dependent type>'
                    (DependentScopeDeclRefExpr 0x9cf2f60 <col:12, col:21> '<dependent type>' lvalue)
                    (DeclRefExpr 0x9cf2f84 <col:33> '__int_type':'typename __istream_type::int_type' lvalue Var 0x9cf2d90 '__c' '__int_type':'typename __istream_type::int_type')
                    (DeclRefExpr 0x9cf2f9c <col:38> 'const __int_type':'const typename __istream_type::int_type' lvalue Var 0x9cf2cd0 '__eof' 'const __int_type':'const typename __istream_type::int_type'))))
              (UnaryOperator 0x9cf30b0 <line:1093:11, col:46> '<dependent type>' prefix '!'
                (CallExpr 0x9cf3088 <col:12, col:46> '<dependent type>'
                  (DependentScopeDeclRefExpr 0x9cf3030 <col:12, col:21> '<dependent type>' lvalue)
                  (DeclRefExpr 0x9cf3054 <col:33> '__int_type':'typename __istream_type::int_type' lvalue Var 0x9cf2d90 '__c' '__int_type':'typename __istream_type::int_type')
                  (DeclRefExpr 0x9cf306c <col:38> 'const __int_type':'const typename __istream_type::int_type' lvalue Var 0x9cf2bf0 '__idelim' 'const __int_type':'const typename __istream_type::int_type'))))
            (CompoundStmt 0x9cf32c0 <line:1094:3, line:1098:3>
              (CompoundAssignOperator 0x9cf3178 <line:1095:5, col:39> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                (DeclRefExpr 0x9cf30e0 <col:5> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9cf2110 '__str' 'basic_string<_CharT, _Traits, _Alloc> &')
                (CallExpr 0x9cf3158 <col:14, col:39> '<dependent type>'
                  (DependentScopeDeclRefExpr 0x9cf3118 <col:14, col:23> '<dependent type>' lvalue)
                  (DeclRefExpr 0x9cf313c <col:36> '__int_type':'typename __istream_type::int_type' lvalue Var 0x9cf2d90 '__c' '__int_type':'typename __istream_type::int_type')))
              (UnaryOperator 0x9cf31b0 <line:1096:5, col:7> '<dependent type>' prefix '++'
                (DeclRefExpr 0x9cf3198 <col:7> '__size_type':'typename __string_type::size_type' lvalue Var 0x9cf2800 '__extracted' '__size_type':'typename __string_type::size_type'))
              (BinaryOperator 0x9cf32a8 <line:1097:5, col:32> '<dependent type>' '='
                (DeclRefExpr 0x9cf31c4 <col:5> '__int_type':'typename __istream_type::int_type' lvalue Var 0x9cf2d90 '__c' '__int_type':'typename __istream_type::int_type')
                (CallExpr 0x9cf3288 <col:11, col:32> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9cf3250 <col:11, col:25> '<dependent type>' lvalue
                    (CallExpr 0x9cf3230 <col:11, col:22> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0x9cf31f8 <col:11, col:16> '<dependent type>' lvalue
                        (DeclRefExpr 0x9cf31dc <col:11> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9cf1f60 '__in' 'basic_istream<_CharT, _Traits> &'))))))))
          (IfStmt 0x9cf3678 <line:1100:8, line:1108:24>
            <<<NULL>>>
            (CallExpr 0x9cf3378 <line:1100:12, col:43> '<dependent type>'
              (DependentScopeDeclRefExpr 0x9cf3320 <col:12, col:21> '<dependent type>' lvalue)
              (DeclRefExpr 0x9cf3344 <col:33> '__int_type':'typename __istream_type::int_type' lvalue Var 0x9cf2d90 '__c' '__int_type':'typename __istream_type::int_type')
              (DeclRefExpr 0x9cf335c <col:38> 'const __int_type':'const typename __istream_type::int_type' lvalue Var 0x9cf2cd0 '__eof' 'const __int_type':'const typename __istream_type::int_type'))
            (CompoundAssignOperator 0x9cf3400 <line:1101:3, col:24> '<dependent type>' lvalue '|=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
              (DeclRefExpr 0x9cf339c <col:3> 'typename __ios_base::iostate' lvalue Var 0x9cf29b0 '__err' 'typename __ios_base::iostate')
              (DependentScopeDeclRefExpr 0x9cf33d8 <col:12, col:24> '<dependent type>' lvalue))
            (IfStmt 0x9cf3658 <line:1102:13, line:1108:24>
              <<<NULL>>>
              (CallExpr 0x9cf34a0 <line:1102:17, col:51> '<dependent type>'
                (DependentScopeDeclRefExpr 0x9cf3448 <col:17, col:26> '<dependent type>' lvalue)
                (DeclRefExpr 0x9cf346c <col:38> '__int_type':'typename __istream_type::int_type' lvalue Var 0x9cf2d90 '__c' '__int_type':'typename __istream_type::int_type')
                (DeclRefExpr 0x9cf3484 <col:43> 'const __int_type':'const typename __istream_type::int_type' lvalue Var 0x9cf2bf0 '__idelim' 'const __int_type':'const typename __istream_type::int_type'))
              (CompoundStmt 0x9cf35c0 <line:1103:3, line:1106:3>
                (UnaryOperator 0x9cf34e0 <line:1104:5, col:7> '<dependent type>' prefix '++'
                  (DeclRefExpr 0x9cf34c4 <col:7> '__size_type':'typename __string_type::size_type' lvalue Var 0x9cf2800 '__extracted' '__size_type':'typename __string_type::size_type'))
                (CallExpr 0x9cf35a0 <line:1105:5, col:26> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9cf3568 <col:5, col:19> '<dependent type>' lvalue
                    (CallExpr 0x9cf3548 <col:5, col:16> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0x9cf3510 <col:5, col:10> '<dependent type>' lvalue
                        (DeclRefExpr 0x9cf34f4 <col:5> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9cf1f60 '__in' 'basic_istream<_CharT, _Traits> &'))))))
              (CompoundAssignOperator 0x9cf3638 <line:1108:3, col:24> '<dependent type>' lvalue '|=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                (DeclRefExpr 0x9cf35d8 <col:3> 'typename __ios_base::iostate' lvalue Var 0x9cf29b0 '__err' 'typename __ios_base::iostate')
                (DependentScopeDeclRefExpr 0x9cf3610 <col:12, col:24> '<dependent type>' lvalue)))))
        <<<NULL>>>)
      (IfStmt 0x9cf37d0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/basic_string.tcc:1114:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9cf36e0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9cf37b8 </usr/include/c++/4.6/bits/basic_string.tcc:1111:6, line:1114:6>
          (CallExpr 0x9cf3788 <line:1112:8, col:43> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9cf3708 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0x9cf36f0 <col:8> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9cf1f60 '__in' 'basic_istream<_CharT, _Traits> &'))
            (DependentScopeDeclRefExpr 0x9cf3760 <col:25, col:37> '<dependent type>' lvalue))
          (NullStmt 0x9cf37a8 <line:1113:31>))
        <<<NULL>>>)
      (IfStmt 0x9cf38e8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/basic_string.tcc:1121:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9cf37f0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9cf38d0 </usr/include/c++/4.6/bits/basic_string.tcc:1116:6, line:1121:6>
          (CallExpr 0x9cf38b0 <line:1120:8, col:43> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9cf3818 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0x9cf3800 <col:8> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9cf1f60 '__in' 'basic_istream<_CharT, _Traits> &'))
            (DependentScopeDeclRefExpr 0x9cf3888 <col:25, col:37> '<dependent type>' lvalue)))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0x9cf39f8 <line:1123:7, line:1124:23>
    <<<NULL>>>
    (UnaryOperator 0x9cf3960 <line:1123:11, col:12> '<dependent type>' prefix '!'
      (DeclRefExpr 0x9cf3944 <col:12> '__size_type':'typename __string_type::size_type' lvalue Var 0x9cf2800 '__extracted' '__size_type':'typename __string_type::size_type'))
    (CompoundAssignOperator 0x9cf39d8 <line:1124:2, col:23> '<dependent type>' lvalue '|=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
      (DeclRefExpr 0x9cf3974 <col:2> 'typename __ios_base::iostate' lvalue Var 0x9cf29b0 '__err' 'typename __ios_base::iostate')
      (DependentScopeDeclRefExpr 0x9cf39b0 <col:11, col:23> '<dependent type>' lvalue))
    <<<NULL>>>)
  (IfStmt 0x9cf3ab8 <line:1125:7, line:1126:21>
    <<<NULL>>>
    (DeclRefExpr 0x9cf3a14 <line:1125:11> 'typename __ios_base::iostate' lvalue Var 0x9cf29b0 '__err' 'typename __ios_base::iostate')
    (CallExpr 0x9cf3a98 <line:1126:2, col:21> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9cf3a48 <col:2, col:7> '<dependent type>' lvalue
        (DeclRefExpr 0x9cf3a2c <col:2> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9cf1f60 '__in' 'basic_istream<_CharT, _Traits> &'))
      (DeclRefExpr 0x9cf3a7c <col:16> 'typename __ios_base::iostate' lvalue Var 0x9cf29b0 '__err' 'typename __ios_base::iostate'))
    <<<NULL>>>)
  (ReturnStmt 0x9cf3af0 <line:1127:7, col:14>
    (DeclRefExpr 0x9cf3ad4 <col:14> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9cf1f60 '__in' 'basic_istream<_CharT, _Traits> &')))

;
    class basic_string {
        class basic_string;
        typedef typename allocator<char>::rebind<char>::other _CharT_alloc_type;
    public:
    public:
        typedef std::char_traits<char> traits_type;
        typedef typename char_traits<char>::char_type value_type;
        typedef std::allocator<char> allocator_type;
        typedef typename _CharT_alloc_type::size_type size_type;
        typedef typename _CharT_alloc_type::difference_type difference_type;
        typedef typename _CharT_alloc_type::reference reference;
        typedef typename _CharT_alloc_type::const_reference const_reference;
        typedef typename _CharT_alloc_type::pointer pointer;
        typedef typename _CharT_alloc_type::const_pointer const_pointer;
        typedef __gnu_cxx::__normal_iterator<pointer, basic_string<char> > iterator;
        typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string<char> > const_iterator;
        typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
        typedef std::reverse_iterator<iterator> reverse_iterator;
    private:
    private:
        struct _Rep_base {
            struct _Rep_base;
            size_type _M_length;
            size_type _M_capacity;
            _Atomic_word _M_refcount;
        };
        struct _Rep :  std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep_base {
            struct _Rep;
            typedef typename allocator<char>::rebind<char>::other _Raw_bytes_alloc;
            static const size_type _S_max_size;
            static const char _S_terminal;
            static size_type _S_empty_rep_storage[];
            static std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep &_S_empty_rep();
            bool _M_is_leaked() const;
            bool _M_is_shared() const;
            void _M_set_leaked();
            void _M_set_sharable();
            void _M_set_length_and_sharable(size_type __n);
            char *_M_refdata() throw();
            char *_M_grab(const std::allocator<char> &__alloc1, const std::allocator<char> &__alloc2);
            static std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep *_S_create(size_type, size_type, const std::allocator<char> &);
            void _M_dispose(const std::allocator<char> &__a);
            void _M_destroy(const std::allocator<char> &) throw();
            char *_M_refcopy() throw();
            char *_M_clone(const std::allocator<char> &, size_type __res);
        };
        struct _Alloc_hider :  std::allocator<char> {
            struct _Alloc_hider;
            _Alloc_hider(char *__dat, const std::allocator<char> &__a);
            char *_M_p;
        };
    public:
    public:
        static const size_type npos = (CXXStaticCastExpr 0x9cf5cc8 </usr/include/c++/4.6/bits/basic_string.h:279:37, col:62> 'size_type':'unsigned int' static_cast<size_type> <NoOp>
  (ImplicitCastExpr 0x9cf5cb8 <col:60, col:61> 'size_type':'unsigned int' <IntegralCast>
    (UnaryOperator 0x9c7f970 <col:60, col:61> 'int' prefix '-'
      (IntegerLiteral 0x9c7f958 <col:61> 'int' 1))))
;
    private:
    private:
        mutable std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider _M_dataplus;
        char *_M_data() const (CompoundStmt 0x9fcc5c0 </usr/include/c++/4.6/bits/basic_string.h:287:7, col:35>
  (ReturnStmt 0x9fcc5b0 <col:9, col:29>
    (ImplicitCastExpr 0x9fcc5a0 <col:17, col:29> 'char *' <LValueToRValue>
      (MemberExpr 0x9fcc580 <col:17, col:29> 'char *' lvalue ._M_p 0x9cf6250
        (MemberExpr 0x9fcc560 <col:17> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Alloc_hider' lvalue ->_M_dataplus 0x9cf6280
          (CXXThisExpr 0x9fcc440 <col:17> 'const class std::basic_string<char> *' this))))))


        char *_M_data(char *__p);
        std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep *_M_rep() const (CompoundStmt 0x9fcc428 </usr/include/c++/4.6/bits/basic_string.h:295:7, col:62>
  (ReturnStmt 0x9fcc418 <col:9, col:59>
    (UnaryOperator 0x9fcc400 <col:16, col:59> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *' prefix '&'
      (ParenExpr 0x9fcc3e8 <col:17, col:59> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep' lvalue
        (ArraySubscriptExpr 0x9fcc3d0 <col:18, col:58> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep' lvalue
          (ParenExpr 0x9fcc3b8 <col:18, col:54> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *'
            (CXXReinterpretCastExpr 0x9fcc3a0 <col:19, col:53> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *' reinterpret_cast<struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *> <BitCast>
              (CXXMemberCallExpr 0x9fcc380 <col:44, col:52> 'char *'
                (MemberExpr 0x9fcc360 <col:44> '<bound member function type>' ->_M_data 0x9cf6300
                  (CXXThisExpr 0x9fcc350 <col:44> 'const class std::basic_string<char> *' this)))))
          (UnaryOperator 0x9ca1d28 <col:56, col:57> 'int' prefix '-'
            (IntegerLiteral 0x9ca1d10 <col:57> 'int' 1)))))))


        iterator _M_ibegin() const;
        iterator _M_iend() const;
        void _M_leak();
        size_type _M_check(size_type __pos, const char *__s) const;
        void _M_check_length(size_type __n1, size_type __n2, const char *__s) const;
        size_type _M_limit(size_type __pos, size_type __off) const;
        bool _M_disjunct(const char *__s) const;
        static void _M_copy(char *__d, const char *__s, size_type __n);
        static void _M_move(char *__d, const char *__s, size_type __n);
        static void _M_assign(char *__d, size_type __n, char __c);
        template <class _Iterator> static void _S_copy_chars(char *__p, _Iterator __k1, _Iterator __k2);
        static void _S_copy_chars(char *__p, iterator __k1, iterator __k2);
        static void _S_copy_chars(char *__p, const_iterator __k1, const_iterator __k2);
        static void _S_copy_chars(char *__p, char *__k1, char *__k2);
        static void _S_copy_chars(char *__p, const char *__k1, const char *__k2);
        static int _S_compare(size_type __n1, size_type __n2);
        void _M_mutate(size_type __pos, size_type __len1, size_type __len2);
        void _M_leak_hard();
        static std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep &_S_empty_rep();
    public:
    public:
        basic_string();
        basic_string(const std::allocator<char> &__a);
        basic_string(const std::basic_string<char> &__str);
        basic_string(const std::basic_string<char> &__str, size_type __pos, size_type __n);
        basic_string(const std::basic_string<char> &__str, size_type __pos, size_type __n, const std::allocator<char> &__a);
        basic_string(const char *__s, size_type __n, const std::allocator<char> &__a);
        basic_string(const char *__s, const std::allocator<char> &__a);
        basic_string(size_type __n, char __c, const std::allocator<char> &__a);
        template <class _InputIterator> basic_string(_InputIterator __beg, _InputIterator __end, const std::allocator<char> &__a);
        void ~basic_string();
        std::basic_string<char> &operator=(const std::basic_string<char> &__str);
        std::basic_string<char> &operator=(const char *__s);
        std::basic_string<char> &operator=(char __c);
        iterator begin();
        const_iterator begin() const;
        iterator end();
        const_iterator end() const;
        reverse_iterator rbegin();
        const_reverse_iterator rbegin() const;
        reverse_iterator rend();
        const_reverse_iterator rend() const;
    public:
    public:
        size_type size() const (CompoundStmt 0x9fcbd78 </usr/include/c++/4.6/bits/basic_string.h:710:7, col:37>
  (ReturnStmt 0x9fcbd68 <col:9, col:26>
    (ImplicitCastExpr 0x9fcbd58 <col:16, col:26> 'size_type':'unsigned int' <LValueToRValue>
      (MemberExpr 0x9fcbd38 <col:16, col:26> 'size_type':'unsigned int' lvalue ->_M_length 0x9d161b0
        (ImplicitCastExpr 0x9fcbd28 <col:16, col:23> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
          (CXXMemberCallExpr 0x9fcbcf0 <col:16, col:23> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *'
            (MemberExpr 0x9fcbcd0 <col:16> '<bound member function type>' ->_M_rep 0x9cf65d0
              (CXXThisExpr 0x9fcbba8 <col:16> 'const class std::basic_string<char> *' this))))))))


        size_type length() const;
        size_type max_size() const;
        void resize(size_type __n, char __c);
        void resize(size_type __n);
        size_type capacity() const;
        void reserve(size_type __res_arg);
        void clear();
        bool empty() const (CompoundStmt 0x9fcbb90 </usr/include/c++/4.6/bits/basic_string.h:803:7, col:35>
  (ReturnStmt 0x9fcbb80 <col:9, col:32>
    (BinaryOperator 0x9fcbb68 <col:16, col:32> '_Bool' '=='
      (CXXMemberCallExpr 0x9fcbb38 <col:16, col:27> 'size_type':'unsigned int'
        (MemberExpr 0x9fcbb18 <col:16, col:22> '<bound member function type>' ->size 0x9cfd570
          (CXXThisExpr 0x9fcbb08 <col:16> 'const class std::basic_string<char> *' this)))
      (ImplicitCastExpr 0x9fcbb58 <col:32> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0x9ca7998 <col:32> 'int' 0)))))


        const_reference operator[](size_type __pos) const;
        reference operator[](size_type __pos);
        const_reference at(size_type __n) const (CompoundStmt 0x9fccc60 </usr/include/c++/4.6/bits/basic_string.h:856:7, line:860:7>
  (IfStmt 0x9fcc6e8 <line:857:2, line:858:48>
    <<<NULL>>>
    (BinaryOperator 0x9fcc690 <line:857:6, col:24> '_Bool' '>='
      (ImplicitCastExpr 0x9fcc680 <col:6> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9fcc614 <col:6> 'size_type':'unsigned int' lvalue ParmVar 0x9cfead0 '__n' 'size_type':'unsigned int'))
      (CXXMemberCallExpr 0x9fcc660 <col:13, col:24> 'size_type':'unsigned int'
        (MemberExpr 0x9fcc640 <col:13, col:19> '<bound member function type>' ->size 0x9cfd570
          (CXXThisExpr 0x9fcc630 <col:13> 'const class std::basic_string<char> *' this))))
    (CallExpr 0x9fcc6b8 <line:858:4, col:48> 'void'
      (ImplicitCastExpr 0x9fcc6a8 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x9caae34 <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9b0bd90 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0x9fcc6d8 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0x9caae20 <col:24, col:30> 'const char [17]' lvalue
          (StringLiteral 0x9caadf0 </usr/include/c++/4.6/bits/basic_string.h:858:29> 'const char [17]' lvalue "basic_string::at"))))
    <<<NULL>>>)
  (ReturnStmt 0x9fccc50 <line:859:2, col:22>
    (ImplicitCastExpr 0x9fccc40 <col:9, col:22> 'const char':'const char' lvalue <NoOp>
      (ArraySubscriptExpr 0x9fccc28 <col:9, col:22> 'char':'char' lvalue
        (CXXMemberCallExpr 0x9fccbe0 <col:9, col:17> 'char *'
          (MemberExpr 0x9fccbc0 <col:9> '<bound member function type>' ->_M_data 0x9cf6300
            (CXXThisExpr 0x9fccbb0 <col:9> 'const class std::basic_string<char> *' this)))
        (ImplicitCastExpr 0x9fccc18 <col:19> 'size_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9fccbfc <col:19> 'size_type':'unsigned int' lvalue ParmVar 0x9cfead0 '__n' 'size_type':'unsigned int'))))))


        reference at(size_type __n);
        std::basic_string<char> &operator+=(const std::basic_string<char> &__str);
        std::basic_string<char> &operator+=(const char *__s);
        std::basic_string<char> &operator+=(char __c);
        std::basic_string<char> &append(const std::basic_string<char> &__str);
        std::basic_string<char> &append(const std::basic_string<char> &__str, size_type __pos, size_type __n);
        std::basic_string<char> &append(const char *__s, size_type __n);
        std::basic_string<char> &append(const char *__s);
        std::basic_string<char> &append(size_type __n, char __c);
        template <class _InputIterator> std::basic_string<char> &append(_InputIterator __first, _InputIterator __last);
        void push_back(char __c);
        std::basic_string<char> &assign(const std::basic_string<char> &__str);
        std::basic_string<char> &assign(const std::basic_string<char> &__str, size_type __pos, size_type __n);
        std::basic_string<char> &assign(const char *__s, size_type __n);
        std::basic_string<char> &assign(const char *__s);
        std::basic_string<char> &assign(size_type __n, char __c);
        template <class _InputIterator> std::basic_string<char> &assign(_InputIterator __first, _InputIterator __last);
        void insert(iterator __p, size_type __n, char __c);
        template <class _InputIterator> void insert(iterator __p, _InputIterator __beg, _InputIterator __end);
        std::basic_string<char> &insert(size_type __pos1, const std::basic_string<char> &__str);
        std::basic_string<char> &insert(size_type __pos1, const std::basic_string<char> &__str, size_type __pos2, size_type __n);
        std::basic_string<char> &insert(size_type __pos, const char *__s, size_type __n);
        std::basic_string<char> &insert(size_type __pos, const char *__s);
        std::basic_string<char> &insert(size_type __pos, size_type __n, char __c);
        iterator insert(iterator __p, char __c);
        std::basic_string<char> &erase(size_type __pos, size_type __n);
        iterator erase(iterator __position);
        iterator erase(iterator __first, iterator __last);
        std::basic_string<char> &replace(size_type __pos, size_type __n, const std::basic_string<char> &__str);
        std::basic_string<char> &replace(size_type __pos1, size_type __n1, const std::basic_string<char> &__str, size_type __pos2, size_type __n2);
        std::basic_string<char> &replace(size_type __pos, size_type __n1, const char *__s, size_type __n2);
        std::basic_string<char> &replace(size_type __pos, size_type __n1, const char *__s);
        std::basic_string<char> &replace(size_type __pos, size_type __n1, size_type __n2, char __c);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const std::basic_string<char> &__str);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const char *__s, size_type __n);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const char *__s);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, size_type __n, char __c);
        template <class _InputIterator> std::basic_string<char> &replace(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, char *__k1, char *__k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const char *__k1, const char *__k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const_iterator __k1, const_iterator __k2);
    private:
    private:
        template <class _Integer> std::basic_string<char> &_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n, _Integer __val, std::__true_type);
        template <class _InputIterator> std::basic_string<char> &_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2, std::__false_type);
        std::basic_string<char> &_M_replace_aux(size_type __pos1, size_type __n1, size_type __n2, char __c);
        std::basic_string<char> &_M_replace_safe(size_type __pos1, size_type __n1, const char *__s, size_type __n2);
        template <class _InIterator> static char *_S_construct_aux(_InIterator __beg, _InIterator __end, const std::allocator<char> &__a, std::__false_type);
        template <class _Integer> static char *_S_construct_aux(_Integer __beg, _Integer __end, const std::allocator<char> &__a, std::__true_type);
        static char *_S_construct_aux_2(size_type __req, char __c, const std::allocator<char> &__a);
        template <class _InIterator> static char *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<char> &__a);
        template <class _InIterator> static char *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<char> &__a, std::input_iterator_tag);
        template <class _FwdIterator> static char *_S_construct(_FwdIterator __beg, _FwdIterator __end, const std::allocator<char> &__a, std::forward_iterator_tag);
        static char *_S_construct(size_type __req, char __c, const std::allocator<char> &__a);
    public:
    public:
        size_type copy(char *__s, size_type __n, size_type __pos) const;
        void swap(std::basic_string<char> &__s);
        const char *c_str() const;
        const char *data() const;
        allocator_type get_allocator() const;
        size_type find(const char *__s, size_type __pos, size_type __n) const;
        size_type find(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find(const char *__s, size_type __pos) const;
        size_type find(char __c, size_type __pos) const;
        size_type rfind(const std::basic_string<char> &__str, size_type __pos) const;
        size_type rfind(const char *__s, size_type __pos, size_type __n) const;
        size_type rfind(const char *__s, size_type __pos) const;
        size_type rfind(char __c, size_type __pos) const;
        size_type find_first_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_first_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_first_of(const char *__s, size_type __pos) const;
        size_type find_first_of(char __c, size_type __pos) const;
        size_type find_last_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_last_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_last_of(const char *__s, size_type __pos) const;
        size_type find_last_of(char __c, size_type __pos) const;
        size_type find_first_not_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_first_not_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_first_not_of(const char *__s, size_type __pos) const;
        size_type find_first_not_of(char __c, size_type __pos) const;
        size_type find_last_not_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_last_not_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_last_not_of(const char *__s, size_type __pos) const;
        size_type find_last_not_of(char __c, size_type __pos) const;
        std::basic_string<char> substr(size_type __pos, size_type __n) const;
        int compare(const std::basic_string<char> &__str) const;
        int compare(size_type __pos, size_type __n, const std::basic_string<char> &__str) const;
        int compare(size_type __pos1, size_type __n1, const std::basic_string<char> &__str, size_type __pos2, size_type __n2) const;
        int compare(const char *__s) const;
        int compare(size_type __pos, size_type __n1, const char *__s) const;
        int compare(size_type __pos, size_type __n1, const char *__s, size_type __n2) const;
    };
    class basic_string {
        class basic_string;
        typedef typename allocator<wchar_t>::rebind<wchar_t>::other _CharT_alloc_type;
    public:
    public:
        typedef std::char_traits<wchar_t> traits_type;
        typedef typename char_traits<wchar_t>::char_type value_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename _CharT_alloc_type::size_type size_type;
        typedef typename _CharT_alloc_type::difference_type difference_type;
        typedef typename _CharT_alloc_type::reference reference;
        typedef typename _CharT_alloc_type::const_reference const_reference;
        typedef typename _CharT_alloc_type::pointer pointer;
        typedef typename _CharT_alloc_type::const_pointer const_pointer;
        typedef __gnu_cxx::__normal_iterator<pointer, basic_string<wchar_t> > iterator;
        typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string<wchar_t> > const_iterator;
        typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
        typedef std::reverse_iterator<iterator> reverse_iterator;
    private:
    private:
        struct _Rep_base {
            struct _Rep_base;
            size_type _M_length;
            size_type _M_capacity;
            _Atomic_word _M_refcount;
        };
        struct _Rep :  std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep_base {
            struct _Rep;
            typedef typename allocator<wchar_t>::rebind<char>::other _Raw_bytes_alloc;
            static const size_type _S_max_size;
            static const wchar_t _S_terminal;
            static size_type _S_empty_rep_storage[];
            static std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep &_S_empty_rep() (CompoundStmt 0x9fcb5c8 </usr/include/c++/4.6/bits/basic_string.h:176:9, line:182:2>
  (DeclStmt 0x9fcb428 <line:180:4, col:62>
    0x9fcb250 "void *__p =
      (CXXReinterpretCastExpr 0x9fcb410 <col:16, col:61> 'void *' reinterpret_cast<void *> <BitCast>
        (UnaryOperator 0x9fcb3f8 <col:40, col:41> 'size_type (*)[]' prefix '&'
          (DeclRefExpr 0x9fcb3a0 <col:41> 'size_type []' lvalue Var 0x9d3e120 '_S_empty_rep_storage' 'size_type []')))")
  (ReturnStmt 0x9fcb5b8 <line:181:4, col:39>
    (UnaryOperator 0x9fcb5a0 <col:11, col:39> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue prefix '*'
      (CXXReinterpretCastExpr 0x9fcb588 <col:12, col:39> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' reinterpret_cast<struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *> <BitCast>
        (ImplicitCastExpr 0x9fcb578 <col:36> 'void *' <LValueToRValue>
          (DeclRefExpr 0x9fcb55c <col:36> 'void *' lvalue Var 0x9fcb250 '__p' 'void *'))))))


            bool _M_is_leaked() const;
            bool _M_is_shared() const (CompoundStmt 0x9fcee50 </usr/include/c++/4.6/bits/basic_string.h:190:9, col:41>
  (ReturnStmt 0x9fcee40 <col:11, col:38>
    (BinaryOperator 0x9fcee28 <col:18, col:38> '_Bool' '>'
      (ImplicitCastExpr 0x9fcee18 <col:18, col:24> '_Atomic_word':'int' <LValueToRValue>
        (MemberExpr 0x9fcedf8 <col:18, col:24> 'const _Atomic_word':'const int' lvalue ->_M_refcount 0x9d3d880
          (ImplicitCastExpr 0x9fcede8 <col:18> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
            (CXXThisExpr 0x9fcedd8 <col:18> 'const struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this))))
      (IntegerLiteral 0x9ca09d0 <col:38> 'int' 0))))


            void _M_set_leaked();
            void _M_set_sharable() (CompoundStmt 0x9fcf6d0 </usr/include/c++/4.6/bits/basic_string.h:198:9, col:34>
  (BinaryOperator 0x9fcf6b8 <col:11, col:31> '_Atomic_word':'int' lvalue '='
    (MemberExpr 0x9fcf698 <col:11, col:17> '_Atomic_word':'int' lvalue ->_M_refcount 0x9d3d880
      (ImplicitCastExpr 0x9fcf688 <col:11> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
        (CXXThisExpr 0x9fcf678 <col:11> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this)))
    (IntegerLiteral 0x9ca0b68 <col:31> 'int' 0)))


            void _M_set_length_and_sharable(size_type __n) (CompoundStmt 0x9fcf660 </usr/include/c++/4.6/bits/basic_string.h:202:2, line:213:2>
  (IfStmt 0x9fcf640 <line:204:4, line:212:6>
    <<<NULL>>>
    (ImplicitCastExpr 0x9fcf0a0 <line:204:8, col:55> '_Bool' <IntegralToBoolean>
      (CallExpr 0x9fcf058 <col:8, col:55> 'long'
        (ImplicitCastExpr 0x9fcf048 <col:8> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9ca0d00 <col:8> 'long (long, long)' lvalue Function 0x9ca0bd0 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0x9fcf080 <col:25, col:47> 'long' <IntegralCast>
          (BinaryOperator 0x9fcf030 <col:25, col:47> '_Bool' '!='
            (CXXThisExpr 0x9fceeb0 <col:25> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this)
            (UnaryOperator 0x9fcf018 <col:33, col:47> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' prefix '&'
              (CallExpr 0x9fceff8 <col:34, col:47> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
                (ImplicitCastExpr 0x9fcefe8 <col:34> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(*)(void)' <FunctionToPointerDecay>
                  (DeclRefExpr 0x9fcefd0 <col:34> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(void)' lvalue CXXMethod 0x9d3e2a0 '_S_empty_rep' 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(void)'))))))
        (ImplicitCastExpr 0x9fcf090 <col:50> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0x9ca0de8 <col:50> '_Bool' false))))
    (CompoundStmt 0x9fcf620 <line:206:6, line:212:6>
      (CXXMemberCallExpr 0x9fcf0e0 <line:207:8, col:30> 'void'
        (MemberExpr 0x9fcf0c0 <col:8, col:14> '<bound member function type>' ->_M_set_sharable 0x9d3e460
          (CXXThisExpr 0x9fcf0b0 <col:8> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this)))
      (BinaryOperator 0x9fcf168 <line:208:8, col:26> 'size_type':'unsigned int' lvalue '='
        (MemberExpr 0x9fcf120 <col:8, col:14> 'size_type':'unsigned int' lvalue ->_M_length 0x9d3d700
          (ImplicitCastExpr 0x9fcf110 <col:8> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
            (CXXThisExpr 0x9fcf100 <col:8> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this)))
        (ImplicitCastExpr 0x9fcf158 <col:26> 'size_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9fcf140 <col:26> 'size_type':'unsigned int' lvalue ParmVar 0x9d3e5f0 '__n' 'size_type':'unsigned int')))
      (CallExpr 0x9fcf5f8 <line:209:8, col:64> 'void'
        (ImplicitCastExpr 0x9fcf5e8 <col:8, col:21> 'void (*)(char_type &, const char_type &)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9fcf5c8 <col:8, col:21> 'void (char_type &, const char_type &)' lvalue CXXMethod 0x9bb4280 'assign' 'void (char_type &, const char_type &)'))
        (ArraySubscriptExpr 0x9fcf488 <col:28, col:50> 'wchar_t':'wchar_t' lvalue
          (CXXMemberCallExpr 0x9fcf440 <col:28, col:45> 'wchar_t *'
            (MemberExpr 0x9fcf420 <col:28, col:34> '<bound member function type>' ->_M_refdata 0x9d3e700
              (CXXThisExpr 0x9fcf410 <col:28> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this)))
          (ImplicitCastExpr 0x9fcf478 <col:47> 'size_type':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0x9fcf45c <col:47> 'size_type':'unsigned int' lvalue ParmVar 0x9d3e5f0 '__n' 'size_type':'unsigned int')))
        (DeclRefExpr 0x9fcf5b0 <col:53> 'const wchar_t':'const wchar_t' lvalue Var 0x9d3df90 '_S_terminal' 'const wchar_t':'const wchar_t')))
    <<<NULL>>>))


            wchar_t *_M_refdata() throw() (CompoundStmt 0x9fcf780 </usr/include/c++/4.6/bits/basic_string.h:217:2, col:48>
  (ReturnStmt 0x9fcf770 <col:4, col:45>
    (CXXReinterpretCastExpr 0x9fcf758 <col:11, col:45> 'wchar_t *' reinterpret_cast<wchar_t *> <BitCast>
      (BinaryOperator 0x9fcf740 <col:37, col:44> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' '+'
        (CXXThisExpr 0x9fcf730 <col:37> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this)
        (IntegerLiteral 0x9ca10c0 <col:44> 'int' 1)))))


            wchar_t *_M_grab(const std::allocator<wchar_t> &__alloc1, const std::allocator<wchar_t> &__alloc2);
            static std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep *_S_create(size_type, size_type, const std::allocator<wchar_t> &);
            void _M_dispose(const std::allocator<wchar_t> &__a) (CompoundStmt 0x9fcb238 </usr/include/c++/4.6/bits/basic_string.h:232:2, line:246:2>
  (IfStmt 0x9fcb218 <line:234:4, line:245:6>
    <<<NULL>>>
    (ImplicitCastExpr 0x9fcaf40 <line:234:8, col:55> '_Bool' <IntegralToBoolean>
      (CallExpr 0x9fcaef8 <col:8, col:55> 'long'
        (ImplicitCastExpr 0x9fcaee8 <col:8> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9ca13bc <col:8> 'long (long, long)' lvalue Function 0x9ca0bd0 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0x9fcaf20 <col:25, col:47> 'long' <IntegralCast>
          (BinaryOperator 0x9fcaed0 <col:25, col:47> '_Bool' '!='
            (CXXThisExpr 0x9fcad30 <col:25> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this)
            (UnaryOperator 0x9fcaeb8 <col:33, col:47> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' prefix '&'
              (CallExpr 0x9fcae98 <col:34, col:47> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
                (ImplicitCastExpr 0x9fcae88 <col:34> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(*)(void)' <FunctionToPointerDecay>
                  (DeclRefExpr 0x9fcae50 <col:34> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(void)' lvalue CXXMethod 0x9d3e2a0 '_S_empty_rep' 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(void)'))))))
        (ImplicitCastExpr 0x9fcaf30 <col:50> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0x9ca14a8 <col:50> '_Bool' false))))
    (CompoundStmt 0x9fcb200 <line:236:6, line:245:6>
      (NullStmt 0x9ca14e0 <line:238:67>)
      (IfStmt 0x9fcb1e0 <line:239:8, line:244:3>
        <<<NULL>>>
        (BinaryOperator 0x9fcb038 <line:239:12, line:240:16> '_Bool' '<='
          (CallExpr 0x9fcb010 <line:239:12, line:240:11> '_Atomic_word':'int'
            (ImplicitCastExpr 0x9fcb000 <line:239:12, col:23> '_Atomic_word (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9ca1510 <col:12, col:23> '_Atomic_word (_Atomic_word *, int)' lvalue Function 0x9c7a230 '__exchange_and_add_dispatch' '_Atomic_word (_Atomic_word *, int)'))
            (UnaryOperator 0x9fcafe8 <col:51, col:58> '_Atomic_word *' prefix '&'
              (MemberExpr 0x9fcafc8 <col:52, col:58> '_Atomic_word':'int' lvalue ->_M_refcount 0x9d3d880
                (ImplicitCastExpr 0x9fcafb8 <col:52> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
                  (CXXThisExpr 0x9fcaf90 <col:52> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this))))
            (UnaryOperator 0x9ca15a8 <line:240:9, col:10> 'int' prefix '-'
              (IntegerLiteral 0x9ca1590 <col:10> 'int' 1)))
          (IntegerLiteral 0x9ca15e8 <col:16> 'int' 0))
        (CompoundStmt 0x9fcb1c8 <line:241:3, line:244:3>
          (NullStmt 0x9ca1668 <line:242:63>)
          (CXXMemberCallExpr 0x9fcb1a8 <line:243:5, col:19> 'void'
            (MemberExpr 0x9fcb170 <col:5> '<bound member function type>' ->_M_destroy 0x9d3ef50
              (CXXThisExpr 0x9fcb050 <col:5> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this))
            (DeclRefExpr 0x9fcb190 <col:16> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue ParmVar 0x9d3ee30 '__a' 'const class std::allocator<wchar_t> &')))
        <<<NULL>>>))
    <<<NULL>>>))


            void _M_destroy(const std::allocator<wchar_t> &) throw();
            wchar_t *_M_refcopy() throw();
            wchar_t *_M_clone(const std::allocator<wchar_t> &, size_type __res);
        };
        struct _Alloc_hider :  std::allocator<wchar_t> {
            struct _Alloc_hider;
            _Alloc_hider(wchar_t *__dat, const std::allocator<wchar_t> &__a) : std::allocator<wchar_t>((DeclRefExpr 0x9fd18a4 </usr/include/c++/4.6/bits/basic_string.h:269:11> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue ParmVar 0x9d1b550 '__a' 'const class std::allocator<wchar_t> &')
), _M_p((ImplicitCastExpr 0x9fd1a60 </usr/include/c++/4.6/bits/basic_string.h:269:22> 'wchar_t *' <LValueToRValue>
  (DeclRefExpr 0x9fd1938 <col:22> 'wchar_t *' lvalue ParmVar 0x9d1b4e0 '__dat' 'wchar_t *'))
) (CompoundStmt 0x9ca1ab0 </usr/include/c++/4.6/bits/basic_string.h:269:29, col:31>)


            wchar_t *_M_p;
            inline void ~_Alloc_hider() throw() (CompoundStmt 0x9fca490 </usr/include/c++/4.6/bits/basic_string.h:266:14>)


            inline _Alloc_hider(const std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Alloc_hider &) throw();
        };
    public:
    public:
        static const size_type npos = (CXXStaticCastExpr 0x9d1b238 </usr/include/c++/4.6/bits/basic_string.h:279:37, col:62> 'size_type':'unsigned int' static_cast<size_type> <NoOp>
  (ImplicitCastExpr 0x9d1b228 <col:60, col:61> 'size_type':'unsigned int' <IntegralCast>
    (UnaryOperator 0x9c7f970 <col:60, col:61> 'int' prefix '-'
      (IntegerLiteral 0x9c7f958 <col:61> 'int' 1))))
;
    private:
    private:
        mutable std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Alloc_hider _M_dataplus;
        wchar_t *_M_data() const (CompoundStmt 0x9fcacd0 </usr/include/c++/4.6/bits/basic_string.h:287:7, col:35>
  (ReturnStmt 0x9fcacc0 <col:9, col:29>
    (ImplicitCastExpr 0x9fcacb0 <col:17, col:29> 'wchar_t *' <LValueToRValue>
      (MemberExpr 0x9fcac90 <col:17, col:29> 'wchar_t *' lvalue ._M_p 0x9d1b7c0
        (MemberExpr 0x9fcac70 <col:17> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Alloc_hider' lvalue ->_M_dataplus 0x9d1b7f0
          (CXXThisExpr 0x9fcab50 <col:17> 'const class std::basic_string<wchar_t> *' this))))))


        wchar_t *_M_data(wchar_t *__p);
        std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep *_M_rep() const (CompoundStmt 0x9fcab38 </usr/include/c++/4.6/bits/basic_string.h:295:7, col:62>
  (ReturnStmt 0x9fcab28 <col:9, col:59>
    (UnaryOperator 0x9fcab10 <col:16, col:59> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' prefix '&'
      (ParenExpr 0x9fcaaf8 <col:17, col:59> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
        (ArraySubscriptExpr 0x9fcaae0 <col:18, col:58> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
          (ParenExpr 0x9fcaac8 <col:18, col:54> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
            (CXXReinterpretCastExpr 0x9fcaab0 <col:19, col:53> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' reinterpret_cast<struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *> <BitCast>
              (CXXMemberCallExpr 0x9fcaa90 <col:44, col:52> 'wchar_t *'
                (MemberExpr 0x9fcaa70 <col:44> '<bound member function type>' ->_M_data 0x9d1b8e0
                  (CXXThisExpr 0x9fcaa60 <col:44> 'const class std::basic_string<wchar_t> *' this)))))
          (UnaryOperator 0x9ca1d28 <col:56, col:57> 'int' prefix '-'
            (IntegerLiteral 0x9ca1d10 <col:57> 'int' 1)))))))


        iterator _M_ibegin() const;
        iterator _M_iend() const;
        void _M_leak();
        size_type _M_check(size_type __pos, const char *__s) const (CompoundStmt 0x9fd0920 </usr/include/c++/4.6/bits/basic_string.h:316:7, line:320:7>
  (IfStmt 0x9fd08c8 <line:317:2, line:318:33>
    <<<NULL>>>
    (BinaryOperator 0x9fd0840 <line:317:6, col:25> '_Bool' '>'
      (ImplicitCastExpr 0x9fd0830 <col:6> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9fd07c4 <col:6> 'size_type':'unsigned int' lvalue ParmVar 0x9d1c250 '__pos' 'size_type':'unsigned int'))
      (CXXMemberCallExpr 0x9fd0810 <col:14, col:25> 'size_type':'unsigned int'
        (MemberExpr 0x9fd07f0 <col:14, col:20> '<bound member function type>' ->size 0x9d24ab0
          (CXXThisExpr 0x9fd07e0 <col:14> 'const class std::basic_string<wchar_t> *' this))))
    (CallExpr 0x9fd0898 <line:318:4, col:33> 'void'
      (ImplicitCastExpr 0x9fd0888 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x9ca228c <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9b0bd90 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0x9fd08b8 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <LValueToRValue>
        (ParenExpr 0x9fd0870 <col:24, col:30> 'const char *' lvalue
          (DeclRefExpr 0x9fd0858 </usr/include/c++/4.6/bits/basic_string.h:318:29> 'const char *' lvalue ParmVar 0x9d1c290 '__s' 'const char *'))))
    <<<NULL>>>)
  (ReturnStmt 0x9fd0910 <line:319:2, col:9>
    (ImplicitCastExpr 0x9fd0900 <col:9> 'size_type':'unsigned int' <LValueToRValue>
      (DeclRefExpr 0x9fd08e4 <col:9> 'size_type':'unsigned int' lvalue ParmVar 0x9d1c250 '__pos' 'size_type':'unsigned int'))))


        void _M_check_length(size_type __n1, size_type __n2, const char *__s) const;
        size_type _M_limit(size_type __pos, size_type __off) const (CompoundStmt 0x9fd0c18 </usr/include/c++/4.6/bits/basic_string.h:332:7, line:335:7>
  (DeclStmt 0x9fd0ac0 <line:333:2, col:54>
    0x9fd0940 "const bool __testoff =
      (BinaryOperator 0x9fd0aa8 <col:26, col:49> '_Bool' '<'
        (ImplicitCastExpr 0x9fd0a98 <col:26> 'size_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9fd09b4 <col:26> 'size_type':'unsigned int' lvalue ParmVar 0x9d1cae0 '__off' 'size_type':'unsigned int'))
        (BinaryOperator 0x9fd0a80 <col:34, col:49> 'unsigned int' '-'
          (CXXMemberCallExpr 0x9fd0a38 <col:34, col:45> 'size_type':'unsigned int'
            (MemberExpr 0x9fd0a18 <col:34, col:40> '<bound member function type>' ->size 0x9d24ab0
              (CXXThisExpr 0x9fd0a08 <col:34> 'const class std::basic_string<wchar_t> *' this)))
          (ImplicitCastExpr 0x9fd0a70 <col:49> 'size_type':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0x9fd0a54 <col:49> 'size_type':'unsigned int' lvalue ParmVar 0x9d1c980 '__pos' 'size_type':'unsigned int'))))")
  (ReturnStmt 0x9fd0c08 <line:334:2, col:44>
    (ConditionalOperator 0x9fd0be8 <col:9, col:44> 'size_type':'unsigned int'
      (ImplicitCastExpr 0x9fd0bc8 <col:9> '_Bool' <LValueToRValue>
        (DeclRefExpr 0x9fd0ad0 <col:9> 'const _Bool' lvalue Var 0x9fd0940 '__testoff' 'const _Bool'))
      (ImplicitCastExpr 0x9fd0bd8 <col:21> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9fd0ae8 <col:21> 'size_type':'unsigned int' lvalue ParmVar 0x9d1cae0 '__off' 'size_type':'unsigned int'))
      (BinaryOperator 0x9fd0bb0 <col:29, col:44> 'unsigned int' '-'
        (CXXMemberCallExpr 0x9fd0b68 <col:29, col:40> 'size_type':'unsigned int'
          (MemberExpr 0x9fd0b48 <col:29, col:35> '<bound member function type>' ->size 0x9d24ab0
            (CXXThisExpr 0x9fd0b38 <col:29> 'const class std::basic_string<wchar_t> *' this)))
        (ImplicitCastExpr 0x9fd0ba0 <col:44> 'size_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9fd0b84 <col:44> 'size_type':'unsigned int' lvalue ParmVar 0x9d1c980 '__pos' 'size_type':'unsigned int'))))))


        bool _M_disjunct(const wchar_t *__s) const;
        static void _M_copy(wchar_t *__d, const wchar_t *__s, size_type __n);
        static void _M_move(wchar_t *__d, const wchar_t *__s, size_type __n);
        static void _M_assign(wchar_t *__d, size_type __n, wchar_t __c);
        template <class _Iterator> static void _S_copy_chars(wchar_t *__p, _Iterator __k1, _Iterator __k2);
        static void _S_copy_chars(wchar_t *__p, iterator __k1, iterator __k2);
        static void _S_copy_chars(wchar_t *__p, const_iterator __k1, const_iterator __k2);
        static void _S_copy_chars(wchar_t *__p, wchar_t *__k1, wchar_t *__k2);
        static void _S_copy_chars(wchar_t *__p, const wchar_t *__k1, const wchar_t *__k2);
        static int _S_compare(size_type __n1, size_type __n2);
        void _M_mutate(size_type __pos, size_type __len1, size_type __len2);
        void _M_leak_hard();
        static std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep &_S_empty_rep() (CompoundStmt 0x9fd1890 </usr/include/c++/4.6/bits/basic_string.h:421:7, col:38>
  (ReturnStmt 0x9fd1880 <col:9, col:35>
    (CallExpr 0x9fd1860 <col:16, col:35> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
      (ImplicitCastExpr 0x9fd1850 <col:16, col:22> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(*)(void)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9fd182c <col:16, col:22> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(void)' lvalue CXXMethod 0x9d3e2a0 '_S_empty_rep' 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(void)')))))


    public:
    public:
        basic_string() : _M_dataplus((CXXMemberCallExpr 0x9fd1368 </usr/include/c++/4.6/bits/basic_string.h:433:21, col:47> 'wchar_t *'
  (MemberExpr 0x9fd1344 <col:21, col:36> '<bound member function type>' ._M_refdata 0x9d3e700
    (CallExpr 0x9fd1328 <col:21, col:34> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
      (ImplicitCastExpr 0x9fd1318 <col:21> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(*)(void)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9fd1300 <col:21> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(void)' lvalue CXXMethod 0x9d1ee40 '_S_empty_rep' 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(void)')))))
, (MaterializeTemporaryExpr 0x9fd1688 </usr/include/c++/4.6/bits/basic_string.h:433:50, col:57> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue
  (ImplicitCastExpr 0x9fd1678 <col:50, col:57> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' <NoOp>
    (CXXBindTemporaryExpr 0x9fd13c8 <col:50, col:57> 'class std::allocator<wchar_t>':'class std::allocator<wchar_t>' (CXXTemporary 0x9fd13c0)
      (CXXTemporaryObjectExpr 0x9fd1390 <col:50, col:57> 'class std::allocator<wchar_t>':'class std::allocator<wchar_t>''void (void) throw()'))))
) (CompoundStmt 0x9ca6950 </usr/include/c++/4.6/bits/basic_string.h:433:60, col:62>)


        basic_string(const std::allocator<wchar_t> &__a);
        basic_string(const std::basic_string<wchar_t> &__str);
        basic_string(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n);
        basic_string(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n, const std::allocator<wchar_t> &__a);
        basic_string(const wchar_t *__s, size_type __n, const std::allocator<wchar_t> &__a);
        basic_string(const wchar_t *__s, const std::allocator<wchar_t> &__a);
        basic_string(size_type __n, wchar_t __c, const std::allocator<wchar_t> &__a);
        template <class _InputIterator> basic_string(_InputIterator __beg, _InputIterator __end, const std::allocator<wchar_t> &__a);
        void ~basic_string() (CompoundStmt 0x9fca3e0 </usr/include/c++/4.6/bits/basic_string.h:533:7, col:54>
  (ExprWithCleanups 0x9fca3c0 <col:9, col:51> 'void'
    (CXXTemporary 0x9fca340)
    (CXXMemberCallExpr 0x9fca358 <col:9, col:51> 'void'
      (MemberExpr 0x9fca2bc <col:9, col:19> '<bound member function type>' ->_M_dispose 0x9d3ee80
        (CXXMemberCallExpr 0x9fca290 <col:9, col:16> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
          (MemberExpr 0x9fca270 <col:9> '<bound member function type>' ->_M_rep 0x9d1bbd0
            (ImplicitCastExpr 0x9fca2b0 <col:9> 'const class std::basic_string<wchar_t> *' <NoOp>
              (CXXThisExpr 0x9fca150 <col:9> 'class std::basic_string<wchar_t> *' this)))))
      (MaterializeTemporaryExpr 0x9fca3b0 <col:30, col:50> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue
        (ImplicitCastExpr 0x9fca3a0 <col:30, col:50> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' <NoOp>
          (CXXBindTemporaryExpr 0x9fca348 <col:30, col:50> 'allocator_type':'class std::allocator<wchar_t>' (CXXTemporary 0x9fca340)
            (CXXMemberCallExpr 0x9fca310 <col:30, col:50> 'allocator_type':'class std::allocator<wchar_t>'
              (MemberExpr 0x9fca2f0 <col:30, col:36> '<bound member function type>' ->get_allocator 0x9d35660
                (ImplicitCastExpr 0x9fca330 <col:30> 'const class std::basic_string<wchar_t> *' <NoOp>
                  (CXXThisExpr 0x9fca2e0 <col:30> 'class std::basic_string<wchar_t> *' this))))))))))


        std::basic_string<wchar_t> &operator=(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &operator=(const wchar_t *__s);
        std::basic_string<wchar_t> &operator=(wchar_t __c);
        iterator begin();
        const_iterator begin() const;
        iterator end();
        const_iterator end() const;
        reverse_iterator rbegin();
        const_reverse_iterator rbegin() const;
        reverse_iterator rend();
        const_reverse_iterator rend() const;
    public:
    public:
        size_type size() const (CompoundStmt 0x9fccf10 </usr/include/c++/4.6/bits/basic_string.h:710:7, col:37>
  (ReturnStmt 0x9fccf00 <col:9, col:26>
    (ImplicitCastExpr 0x9fccef0 <col:16, col:26> 'size_type':'unsigned int' <LValueToRValue>
      (MemberExpr 0x9fcced0 <col:16, col:26> 'size_type':'unsigned int' lvalue ->_M_length 0x9d3d700
        (ImplicitCastExpr 0x9fccec0 <col:16, col:23> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
          (CXXMemberCallExpr 0x9fccea0 <col:16, col:23> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
            (MemberExpr 0x9fcce80 <col:16> '<bound member function type>' ->_M_rep 0x9d1bbd0
              (CXXThisExpr 0x9fccd60 <col:16> 'const class std::basic_string<wchar_t> *' this))))))))


        size_type length() const (CompoundStmt 0x9fd11d0 </usr/include/c++/4.6/bits/basic_string.h:716:7, col:37>
  (ReturnStmt 0x9fd11c0 <col:9, col:26>
    (ImplicitCastExpr 0x9fd11b0 <col:16, col:26> 'size_type':'unsigned int' <LValueToRValue>
      (MemberExpr 0x9fd1190 <col:16, col:26> 'size_type':'unsigned int' lvalue ->_M_length 0x9d3d700
        (ImplicitCastExpr 0x9fd1180 <col:16, col:23> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
          (CXXMemberCallExpr 0x9fd1160 <col:16, col:23> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
            (MemberExpr 0x9fd1140 <col:16> '<bound member function type>' ->_M_rep 0x9d1bbd0
              (CXXThisExpr 0x9fd1018 <col:16> 'const class std::basic_string<wchar_t> *' this))))))))


        size_type max_size() const;
        void resize(size_type __n, wchar_t __c);
        void resize(size_type __n);
        size_type capacity() const (CompoundStmt 0x9fced80 </usr/include/c++/4.6/bits/basic_string.h:768:7, col:39>
  (ReturnStmt 0x9fced70 <col:9, col:26>
    (ImplicitCastExpr 0x9fced60 <col:16, col:26> 'size_type':'unsigned int' <LValueToRValue>
      (MemberExpr 0x9fced40 <col:16, col:26> 'size_type':'unsigned int' lvalue ->_M_capacity 0x9d3d850
        (ImplicitCastExpr 0x9fced30 <col:16, col:23> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
          (CXXMemberCallExpr 0x9fced10 <col:16, col:23> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
            (MemberExpr 0x9fcecf0 <col:16> '<bound member function type>' ->_M_rep 0x9d1bbd0
              (CXXThisExpr 0x9fcebc8 <col:16> 'const class std::basic_string<wchar_t> *' this))))))))


        void reserve(size_type __res_arg);
        void clear();
        bool empty() const (CompoundStmt 0x9fccd48 </usr/include/c++/4.6/bits/basic_string.h:803:7, col:35>
  (ReturnStmt 0x9fccd38 <col:9, col:32>
    (BinaryOperator 0x9fccd20 <col:16, col:32> '_Bool' '=='
      (CXXMemberCallExpr 0x9fcccf0 <col:16, col:27> 'size_type':'unsigned int'
        (MemberExpr 0x9fcccd0 <col:16, col:22> '<bound member function type>' ->size 0x9d24ab0
          (CXXThisExpr 0x9fcccc0 <col:16> 'const class std::basic_string<wchar_t> *' this)))
      (ImplicitCastExpr 0x9fccd10 <col:32> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0x9ca7998 <col:32> 'int' 0)))))


        const_reference operator[](size_type __pos) const;
        reference operator[](size_type __pos);
        const_reference at(size_type __n) const (CompoundStmt 0x9fcd5b0 </usr/include/c++/4.6/bits/basic_string.h:856:7, line:860:7>
  (IfStmt 0x9fcd038 <line:857:2, line:858:48>
    <<<NULL>>>
    (BinaryOperator 0x9fccfe0 <line:857:6, col:24> '_Bool' '>='
      (ImplicitCastExpr 0x9fccfd0 <col:6> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9fccf64 <col:6> 'size_type':'unsigned int' lvalue ParmVar 0x9d26030 '__n' 'size_type':'unsigned int'))
      (CXXMemberCallExpr 0x9fccfb0 <col:13, col:24> 'size_type':'unsigned int'
        (MemberExpr 0x9fccf90 <col:13, col:19> '<bound member function type>' ->size 0x9d24ab0
          (CXXThisExpr 0x9fccf80 <col:13> 'const class std::basic_string<wchar_t> *' this))))
    (CallExpr 0x9fcd008 <line:858:4, col:48> 'void'
      (ImplicitCastExpr 0x9fccff8 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x9caae34 <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9b0bd90 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0x9fcd028 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0x9caae20 <col:24, col:30> 'const char [17]' lvalue
          (StringLiteral 0x9caadf0 </usr/include/c++/4.6/bits/basic_string.h:858:29> 'const char [17]' lvalue "basic_string::at"))))
    <<<NULL>>>)
  (ReturnStmt 0x9fcd5a0 <line:859:2, col:22>
    (ImplicitCastExpr 0x9fcd590 <col:9, col:22> 'const wchar_t':'const wchar_t' lvalue <NoOp>
      (ArraySubscriptExpr 0x9fcd578 <col:9, col:22> 'wchar_t':'wchar_t' lvalue
        (CXXMemberCallExpr 0x9fcd530 <col:9, col:17> 'wchar_t *'
          (MemberExpr 0x9fcd510 <col:9> '<bound member function type>' ->_M_data 0x9d1b8e0
            (CXXThisExpr 0x9fcd500 <col:9> 'const class std::basic_string<wchar_t> *' this)))
        (ImplicitCastExpr 0x9fcd568 <col:19> 'size_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9fcd54c <col:19> 'size_type':'unsigned int' lvalue ParmVar 0x9d26030 '__n' 'size_type':'unsigned int'))))))


        reference at(size_type __n);
        std::basic_string<wchar_t> &operator+=(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &operator+=(const wchar_t *__s);
        std::basic_string<wchar_t> &operator+=(wchar_t __c);
        std::basic_string<wchar_t> &append(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &append(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n);
        std::basic_string<wchar_t> &append(const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &append(const wchar_t *__s) (CompoundStmt 0x9fcfd10 </usr/include/c++/4.6/bits/basic_string.h:997:7, line:1000:7>
  (NullStmt 0x9cab478 <line:998:32>)
  (ReturnStmt 0x9fcfd00 <line:999:2, col:51>
    (CXXMemberCallExpr 0x9fcfcc8 <col:9, col:51> 'class std::basic_string<wchar_t>' lvalue
      (MemberExpr 0x9fcfca4 <col:9, col:15> '<bound member function type>' ->append 0x9d27710
        (CXXThisExpr 0x9fcf900 <col:9> 'class std::basic_string<wchar_t> *' this))
      (ImplicitCastExpr 0x9fcfcf0 <col:22> 'const wchar_t *' <LValueToRValue>
        (DeclRefExpr 0x9fcf960 <col:22> 'const wchar_t *' lvalue ParmVar 0x9d278a0 '__s' 'const wchar_t *'))
      (CallExpr 0x9fcfc38 <col:27, col:50> 'size_t':'unsigned int'
        (ImplicitCastExpr 0x9fcfc28 <col:27, col:40> 'size_t (*)(const char_type *)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9fcfbd0 <col:27, col:40> 'size_t (const char_type *)' lvalue CXXMethod 0x9bb47e0 'length' 'size_t (const char_type *)'))
        (ImplicitCastExpr 0x9fcfc58 <col:47> 'const wchar_t *' <LValueToRValue>
          (DeclRefExpr 0x9fcfbf0 <col:47> 'const wchar_t *' lvalue ParmVar 0x9d278a0 '__s' 'const wchar_t *'))))))


        std::basic_string<wchar_t> &append(size_type __n, wchar_t __c);
        template <class _InputIterator> std::basic_string<wchar_t> &append(_InputIterator __first, _InputIterator __last);
        void push_back(wchar_t __c) (CompoundStmt 0x9fceba8 </usr/include/c++/4.6/bits/basic_string.h:1043:7, line:1049:7>
  (DeclStmt 0x9fcdd18 <line:1044:2, col:42>
    0x9fcdc20 "const size_type __len =
      (BinaryOperator 0x9fcdd00 <col:26, col:41> 'unsigned int' '+'
        (ImplicitCastExpr 0x9fcdcf0 <col:26> 'unsigned int' <IntegralCast>
          (IntegerLiteral 0x9cab778 <col:26> 'int' 1))
        (CXXMemberCallExpr 0x9fcdcc0 <col:30, col:41> 'size_type':'unsigned int'
          (MemberExpr 0x9fcdca0 <col:30, col:36> '<bound member function type>' ->size 0x9d24ab0
            (ImplicitCastExpr 0x9fcdce0 <col:30> 'const class std::basic_string<wchar_t> *' <NoOp>
              (CXXThisExpr 0x9fcdc90 <col:30> 'class std::basic_string<wchar_t> *' this)))))")
  (IfStmt 0x9fce0a8 <line:1045:2, line:1046:23>
    <<<NULL>>>
    (BinaryOperator 0x9fcdfe8 <line:1045:6, col:57> '_Bool' '||'
      (BinaryOperator 0x9fcddf0 <col:6, col:29> '_Bool' '>'
        (ImplicitCastExpr 0x9fcdde0 <col:6> 'size_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9fcdd64 <col:6> 'const size_type':'const unsigned int' lvalue Var 0x9fcdc20 '__len' 'const size_type':'const unsigned int'))
        (CXXMemberCallExpr 0x9fcddb0 <col:14, col:29> 'size_type':'unsigned int'
          (MemberExpr 0x9fcdd90 <col:14, col:20> '<bound member function type>' ->capacity 0x9d25410
            (ImplicitCastExpr 0x9fcddd0 <col:14> 'const class std::basic_string<wchar_t> *' <NoOp>
              (CXXThisExpr 0x9fcdd80 <col:14> 'class std::basic_string<wchar_t> *' this)))))
      (CXXMemberCallExpr 0x9fcdfa0 <col:34, col:57> '_Bool'
        (MemberExpr 0x9fcdf7c <col:34, col:44> '<bound member function type>' ->_M_is_shared 0x9d3e380
          (ImplicitCastExpr 0x9fcdfd8 <col:34, col:41> 'const struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' <NoOp>
            (CXXMemberCallExpr 0x9fcdf50 <col:34, col:41> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
              (MemberExpr 0x9fcdf30 <col:34> '<bound member function type>' ->_M_rep 0x9d1bbd0
                (ImplicitCastExpr 0x9fcdf70 <col:34> 'const class std::basic_string<wchar_t> *' <NoOp>
                  (CXXThisExpr 0x9fcde08 <col:34> 'class std::basic_string<wchar_t> *' this))))))))
    (CXXMemberCallExpr 0x9fce078 <line:1046:4, col:23> 'void'
      (MemberExpr 0x9fce040 <col:4, col:10> '<bound member function type>' ->reserve 0x9d255f0
        (CXXThisExpr 0x9fce030 <col:4> 'class std::basic_string<wchar_t> *' this))
      (ImplicitCastExpr 0x9fce098 <col:18> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9fce060 <col:18> 'const size_type':'const unsigned int' lvalue Var 0x9fcdc20 '__len' 'const size_type':'const unsigned int')))
    <<<NULL>>>)
  (CallExpr 0x9fce978 <line:1047:2, col:50> 'void'
    (ImplicitCastExpr 0x9fce968 <col:2, col:15> 'void (*)(char_type &, const char_type &)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9fce90c <col:2, col:15> 'void (char_type &, const char_type &)' lvalue CXXMethod 0x9bb4280 'assign' 'void (char_type &, const char_type &)'))
    (ArraySubscriptExpr 0x9fce8e0 <col:22, col:44> 'wchar_t':'wchar_t' lvalue
      (CXXMemberCallExpr 0x9fce850 <col:22, col:30> 'wchar_t *'
        (MemberExpr 0x9fce830 <col:22> '<bound member function type>' ->_M_data 0x9d1b8e0
          (ImplicitCastExpr 0x9fce870 <col:22> 'const class std::basic_string<wchar_t> *' <NoOp>
            (CXXThisExpr 0x9fce820 <col:22> 'class std::basic_string<wchar_t> *' this))))
      (CXXMemberCallExpr 0x9fce8b0 <col:32, col:43> 'size_type':'unsigned int'
        (MemberExpr 0x9fce890 <col:32, col:38> '<bound member function type>' ->size 0x9d24ab0
          (ImplicitCastExpr 0x9fce8d0 <col:32> 'const class std::basic_string<wchar_t> *' <NoOp>
            (CXXThisExpr 0x9fce880 <col:32> 'class std::basic_string<wchar_t> *' this)))))
    (ImplicitCastExpr 0x9fce9a0 <col:47> 'const char_type':'const wchar_t' lvalue <NoOp>
      (DeclRefExpr 0x9fce8f4 <col:47> 'wchar_t':'wchar_t' lvalue ParmVar 0x9d28010 '__c' 'wchar_t':'wchar_t')))
  (CXXMemberCallExpr 0x9fceb78 <line:1048:2, col:44> 'void'
    (MemberExpr 0x9fceb3c <col:2, col:12> '<bound member function type>' ->_M_set_length_and_sharable 0x9d3e640
      (CXXMemberCallExpr 0x9fceb10 <col:2, col:9> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
        (MemberExpr 0x9fceaf0 <col:2> '<bound member function type>' ->_M_rep 0x9d1bbd0
          (ImplicitCastExpr 0x9fceb30 <col:2> 'const class std::basic_string<wchar_t> *' <NoOp>
            (CXXThisExpr 0x9fce9b0 <col:2> 'class std::basic_string<wchar_t> *' this)))))
    (ImplicitCastExpr 0x9fceb98 <col:39> 'size_type':'unsigned int' <LValueToRValue>
      (DeclRefExpr 0x9fceb5c <col:39> 'const size_type':'const unsigned int' lvalue Var 0x9fcdc20 '__len' 'const size_type':'const unsigned int'))))


        std::basic_string<wchar_t> &assign(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &assign(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n);
        std::basic_string<wchar_t> &assign(const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &assign(const wchar_t *__s);
        std::basic_string<wchar_t> &assign(size_type __n, wchar_t __c);
        template <class _InputIterator> std::basic_string<wchar_t> &assign(_InputIterator __first, _InputIterator __last);
        void insert(iterator __p, size_type __n, wchar_t __c);
        template <class _InputIterator> void insert(iterator __p, _InputIterator __beg, _InputIterator __end);
        std::basic_string<wchar_t> &insert(size_type __pos1, const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &insert(size_type __pos1, const std::basic_string<wchar_t> &__str, size_type __pos2, size_type __n);
        std::basic_string<wchar_t> &insert(size_type __pos, const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &insert(size_type __pos, const wchar_t *__s);
        std::basic_string<wchar_t> &insert(size_type __pos, size_type __n, wchar_t __c);
        iterator insert(iterator __p, wchar_t __c);
        std::basic_string<wchar_t> &erase(size_type __pos, size_type __n) (CompoundStmt 0x9fd0770 </usr/include/c++/4.6/bits/basic_string.h:1347:7, line:1351:7>
  (CXXMemberCallExpr 0x9fd0710 <line:1348:2, line:1349:39> 'void'
    (MemberExpr 0x9fd0230 <line:1348:2> '<bound member function type>' ->_M_mutate 0x9d1ebf0
      (CXXThisExpr 0x9fd0108 <col:2> 'class std::basic_string<wchar_t> *' this))
    (CXXMemberCallExpr 0x9fd03a8 <col:12, col:49> 'size_type':'unsigned int'
      (MemberExpr 0x9fd0370 <col:12> '<bound member function type>' ->_M_check 0x9d1c310
        (ImplicitCastExpr 0x9fd03d0 <col:12> 'const class std::basic_string<wchar_t> *' <NoOp>
          (CXXThisExpr 0x9fd0250 <col:12> 'class std::basic_string<wchar_t> *' this)))
      (ImplicitCastExpr 0x9fd03e0 <col:21> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9fd0390 <col:21> 'size_type':'unsigned int' lvalue ParmVar 0x9d2bca0 '__pos' 'size_type':'unsigned int'))
      (ImplicitCastExpr 0x9fd03f0 <col:28> 'const char *' <ArrayToPointerDecay>
        (StringLiteral 0x9cad1f8 <col:28> 'const char [20]' lvalue "basic_string::erase")))
    (CXXMemberCallExpr 0x9fd0570 <line:1349:5, col:24> 'size_type':'unsigned int'
      (MemberExpr 0x9fd0520 <col:5> '<bound member function type>' ->_M_limit 0x9d1cb60
        (ImplicitCastExpr 0x9fd0598 <col:5> 'const class std::basic_string<wchar_t> *' <NoOp>
          (CXXThisExpr 0x9fd0400 <col:5> 'class std::basic_string<wchar_t> *' this)))
      (ImplicitCastExpr 0x9fd05a8 <col:14> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9fd0540 <col:14> 'size_type':'unsigned int' lvalue ParmVar 0x9d2bca0 '__pos' 'size_type':'unsigned int'))
      (ImplicitCastExpr 0x9fd05b8 <col:21> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9fd0558 <col:21> 'size_type':'unsigned int' lvalue ParmVar 0x9d2be00 '__n' 'size_type':'unsigned int')))
    (CXXFunctionalCastExpr 0x9fd06f8 <col:27, col:38> 'size_type':'unsigned int' functional cast to size_type <NoOp>
      (ImplicitCastExpr 0x9fd06e8 <col:37> 'size_type':'unsigned int' <IntegralCast>
        (IntegerLiteral 0x9cad2e0 <col:37> 'int' 0))))
  (ReturnStmt 0x9fd0760 <line:1350:2, col:10>
    (UnaryOperator 0x9fd0748 <col:9, col:10> 'class std::basic_string<wchar_t>' lvalue prefix '*'
      (CXXThisExpr 0x9fd0738 <col:10> 'class std::basic_string<wchar_t> *' this))))


        iterator erase(iterator __position);
        iterator erase(iterator __first, iterator __last);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n, const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &replace(size_type __pos1, size_type __n1, const std::basic_string<wchar_t> &__str, size_type __pos2, size_type __n2);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n1, const wchar_t *__s, size_type __n2);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n1, const wchar_t *__s);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n1, size_type __n2, wchar_t __c);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const wchar_t *__s);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, size_type __n, wchar_t __c);
        template <class _InputIterator> std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, wchar_t *__k1, wchar_t *__k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const wchar_t *__k1, const wchar_t *__k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const_iterator __k1, const_iterator __k2);
    private:
    private:
        template <class _Integer> std::basic_string<wchar_t> &_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n, _Integer __val, std::__true_type);
        template <class _InputIterator> std::basic_string<wchar_t> &_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2, std::__false_type);
        std::basic_string<wchar_t> &_M_replace_aux(size_type __pos1, size_type __n1, size_type __n2, wchar_t __c);
        std::basic_string<wchar_t> &_M_replace_safe(size_type __pos1, size_type __n1, const wchar_t *__s, size_type __n2);
        template <class _InIterator> static wchar_t *_S_construct_aux(_InIterator __beg, _InIterator __end, const std::allocator<wchar_t> &__a, std::__false_type);
        template <class _Integer> static wchar_t *_S_construct_aux(_Integer __beg, _Integer __end, const std::allocator<wchar_t> &__a, std::__true_type);
        static wchar_t *_S_construct_aux_2(size_type __req, wchar_t __c, const std::allocator<wchar_t> &__a);
        template <class _InIterator> static wchar_t *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<wchar_t> &__a);
        template <class _InIterator> static wchar_t *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<wchar_t> &__a, std::input_iterator_tag);
        template <class _FwdIterator> static wchar_t *_S_construct(_FwdIterator __beg, _FwdIterator __end, const std::allocator<wchar_t> &__a, std::forward_iterator_tag);
        static wchar_t *_S_construct(size_type __req, wchar_t __c, const std::allocator<wchar_t> &__a);
    public:
    public:
        size_type copy(wchar_t *__s, size_type __n, size_type __pos) const;
        void swap(std::basic_string<wchar_t> &__s);
        const wchar_t *c_str() const (CompoundStmt 0x9fcdae0 </usr/include/c++/4.6/bits/basic_string.h:1766:7, col:27>
  (ReturnStmt 0x9fcdad0 <col:9, col:24>
    (ImplicitCastExpr 0x9fcdac0 <col:16, col:24> 'const wchar_t *' <NoOp>
      (CXXMemberCallExpr 0x9fcdaa0 <col:16, col:24> 'wchar_t *'
        (MemberExpr 0x9fcda80 <col:16> '<bound member function type>' ->_M_data 0x9d1b8e0
          (CXXThisExpr 0x9fcda70 <col:16> 'const class std::basic_string<wchar_t> *' this))))))


        const wchar_t *data() const;
        allocator_type get_allocator() const (CompoundStmt 0x9fcb7a0 </usr/include/c++/4.6/bits/basic_string.h:1783:7, col:29>
  (ReturnStmt 0x9fcb790 <col:9, col:16>
    (CXXConstructExpr 0x9fcb768 <col:16> 'allocator_type':'class std::allocator<wchar_t>''void (const class std::allocator<wchar_t> &) throw()'
      (ImplicitCastExpr 0x9fcb758 <col:16> 'const class std::allocator<wchar_t>' lvalue <NoOp>
        (ImplicitCastExpr 0x9fcb748 <col:16> 'class std::allocator<wchar_t>' lvalue <DerivedToBase (allocator)>
          (MemberExpr 0x9fcb700 <col:16> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Alloc_hider' lvalue ->_M_dataplus 0x9d1b7f0
            (CXXThisExpr 0x9fcb5e0 <col:16> 'const class std::basic_string<wchar_t> *' this)))))))


        size_type find(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find(const wchar_t *__s, size_type __pos) const;
        size_type find(wchar_t __c, size_type __pos) const;
        size_type rfind(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type rfind(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type rfind(const wchar_t *__s, size_type __pos) const;
        size_type rfind(wchar_t __c, size_type __pos) const;
        size_type find_first_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_first_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_first_of(const wchar_t *__s, size_type __pos) const;
        size_type find_first_of(wchar_t __c, size_type __pos) const;
        size_type find_last_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_last_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_last_of(const wchar_t *__s, size_type __pos) const;
        size_type find_last_of(wchar_t __c, size_type __pos) const;
        size_type find_first_not_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_first_not_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_first_not_of(const wchar_t *__s, size_type __pos) const (CompoundStmt 0x9fd00f0 </usr/include/c++/4.6/bits/basic_string.h:2064:7, line:2067:7>
  (NullStmt 0x9cb32e0 <line:2065:32>)
  (ReturnStmt 0x9fd00e0 <line:2066:2, col:69>
    (CXXMemberCallExpr 0x9fd0098 <col:9, col:69> 'size_type':'unsigned int'
      (MemberExpr 0x9fd0074 <col:9, col:15> '<bound member function type>' ->find_first_not_of 0x9d39fe0
        (CXXThisExpr 0x9fcfd28 <col:9> 'const class std::basic_string<wchar_t> *' this))
      (ImplicitCastExpr 0x9fd00c0 <col:33> 'const wchar_t *' <LValueToRValue>
        (DeclRefExpr 0x9fcfd80 <col:33> 'const wchar_t *' lvalue ParmVar 0x9d3a180 '__s' 'const wchar_t *'))
      (ImplicitCastExpr 0x9fd00d0 <col:38> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9fcfd98 <col:38> 'size_type':'unsigned int' lvalue ParmVar 0x9d3a2e0 '__pos' 'size_type':'unsigned int'))
      (CallExpr 0x9fd0048 <col:45, col:68> 'size_t':'unsigned int'
        (ImplicitCastExpr 0x9fd0038 <col:45, col:58> 'size_t (*)(const char_type *)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9fd0000 <col:45, col:58> 'size_t (const char_type *)' lvalue CXXMethod 0x9bb47e0 'length' 'size_t (const char_type *)'))
        (ImplicitCastExpr 0x9fd0068 <col:65> 'const wchar_t *' <LValueToRValue>
          (DeclRefExpr 0x9fd0020 <col:65> 'const wchar_t *' lvalue ParmVar 0x9d3a180 '__s' 'const wchar_t *'))))))


        size_type find_first_not_of(wchar_t __c, size_type __pos) const;
        size_type find_last_not_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_last_not_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_last_not_of(const wchar_t *__s, size_type __pos) const (CompoundStmt 0x9fd1000 </usr/include/c++/4.6/bits/basic_string.h:2123:7, line:2126:7>
  (NullStmt 0x9cb35d8 <line:2124:32>)
  (ReturnStmt 0x9fd0ff0 <line:2125:2, col:68>
    (CXXMemberCallExpr 0x9fd0fa8 <col:9, col:68> 'size_type':'unsigned int'
      (MemberExpr 0x9fd0f84 <col:9, col:15> '<bound member function type>' ->find_last_not_of 0x9d3afa0
        (CXXThisExpr 0x9fd0c30 <col:9> 'const class std::basic_string<wchar_t> *' this))
      (ImplicitCastExpr 0x9fd0fd0 <col:32> 'const wchar_t *' <LValueToRValue>
        (DeclRefExpr 0x9fd0c88 <col:32> 'const wchar_t *' lvalue ParmVar 0x9d3b140 '__s' 'const wchar_t *'))
      (ImplicitCastExpr 0x9fd0fe0 <col:37> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9fd0ca0 <col:37> 'size_type':'unsigned int' lvalue ParmVar 0x9d3b2a0 '__pos' 'size_type':'unsigned int'))
      (CallExpr 0x9fd0f58 <col:44, col:67> 'size_t':'unsigned int'
        (ImplicitCastExpr 0x9fd0f48 <col:44, col:57> 'size_t (*)(const char_type *)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9fd0f10 <col:44, col:57> 'size_t (const char_type *)' lvalue CXXMethod 0x9bb47e0 'length' 'size_t (const char_type *)'))
        (ImplicitCastExpr 0x9fd0f78 <col:64> 'const wchar_t *' <LValueToRValue>
          (DeclRefExpr 0x9fd0f30 <col:64> 'const wchar_t *' lvalue ParmVar 0x9d3b140 '__s' 'const wchar_t *'))))))


        size_type find_last_not_of(wchar_t __c, size_type __pos) const;
        std::basic_string<wchar_t> substr(size_type __pos, size_type __n) const;
        int compare(const std::basic_string<wchar_t> &__str) const;
        int compare(size_type __pos, size_type __n, const std::basic_string<wchar_t> &__str) const;
        int compare(size_type __pos1, size_type __n1, const std::basic_string<wchar_t> &__str, size_type __pos2, size_type __n2) const;
        int compare(const wchar_t *__s) const;
        int compare(size_type __pos, size_type __n1, const wchar_t *__s) const;
        int compare(size_type __pos, size_type __n1, const wchar_t *__s, size_type __n2) const;
    };
}
namespace std {
    class locale {
        class locale;
    public:
    public:
        typedef int category;
        class facet;
        class id;
        class _Impl;
        ;
        ;
        ;
        ;
        ;
        static const category none = (IntegerLiteral 0x9d41698 </usr/include/c++/4.6/bits/locale_classes.h:99:35> 'int' 0)
;
        static const category ctype = (ImplicitCastExpr 0x9d41740 </usr/include/c++/4.6/bits/locale_classes.h:100:36, col:42> 'const category':'const int' <IntegralCast>
  (BinaryOperator 0x9d41728 <col:36, col:42> 'long' '<<'
    (IntegerLiteral 0x9d416f8 <col:36> 'long' 1)
    (IntegerLiteral 0x9d41710 <col:42> 'int' 0)))
;
        static const category numeric = (ImplicitCastExpr 0x9d417e0 </usr/include/c++/4.6/bits/locale_classes.h:101:37, col:43> 'const category':'const int' <IntegralCast>
  (BinaryOperator 0x9d417c8 <col:37, col:43> 'long' '<<'
    (IntegerLiteral 0x9d41798 <col:37> 'long' 1)
    (IntegerLiteral 0x9d417b0 <col:43> 'int' 1)))
;
        static const category collate = (ImplicitCastExpr 0x9d41880 </usr/include/c++/4.6/bits/locale_classes.h:102:37, col:43> 'const category':'const int' <IntegralCast>
  (BinaryOperator 0x9d41868 <col:37, col:43> 'long' '<<'
    (IntegerLiteral 0x9d41838 <col:37> 'long' 1)
    (IntegerLiteral 0x9d41850 <col:43> 'int' 2)))
;
        static const category time = (ImplicitCastExpr 0x997e768 </usr/include/c++/4.6/bits/locale_classes.h:103:35, col:41> 'const category':'const int' <IntegralCast>
  (BinaryOperator 0x997e750 <col:35, col:41> 'long' '<<'
    (IntegerLiteral 0x9d418d8 <col:35> 'long' 1)
    (IntegerLiteral 0x9d418f0 <col:41> 'int' 3)))
;
        static const category monetary = (ImplicitCastExpr 0x997e800 </usr/include/c++/4.6/bits/locale_classes.h:104:38, col:44> 'const category':'const int' <IntegralCast>
  (BinaryOperator 0x997e7e8 <col:38, col:44> 'long' '<<'
    (IntegerLiteral 0x997e7b8 <col:38> 'long' 1)
    (IntegerLiteral 0x997e7d0 <col:44> 'int' 4)))
;
        static const category messages = (ImplicitCastExpr 0x997e8a0 </usr/include/c++/4.6/bits/locale_classes.h:105:38, col:44> 'const category':'const int' <IntegralCast>
  (BinaryOperator 0x997e888 <col:38, col:44> 'long' '<<'
    (IntegerLiteral 0x997e858 <col:38> 'long' 1)
    (IntegerLiteral 0x997e870 <col:44> 'int' 5)))
;
        static const category all = (ParenExpr 0x997ea60 </usr/include/c++/4.6/bits/locale_classes.h:106:34, line:107:36> 'int'
  (BinaryOperator 0x997ea48 <line:106:35, line:107:28> 'int' '|'
    (BinaryOperator 0x997ea08 <line:106:35, line:107:17> 'int' '|'
      (BinaryOperator 0x997e9c8 <line:106:35, line:107:9> 'int' '|'
        (BinaryOperator 0x997e988 <line:106:35, col:53> 'int' '|'
          (BinaryOperator 0x997e948 <col:35, col:43> 'int' '|'
            (ImplicitCastExpr 0x997e928 <col:35> 'category':'int' <LValueToRValue>
              (DeclRefExpr 0x997e8f4 <col:35> 'const category':'const int' lvalue Var 0x9d416c0 'ctype' 'const category':'const int'))
            (ImplicitCastExpr 0x997e938 <col:43> 'category':'int' <LValueToRValue>
              (DeclRefExpr 0x997e90c <col:43> 'const category':'const int' lvalue Var 0x9d41760 'numeric' 'const category':'const int')))
          (ImplicitCastExpr 0x997e978 <col:53> 'category':'int' <LValueToRValue>
            (DeclRefExpr 0x997e960 <col:53> 'const category':'const int' lvalue Var 0x9d41800 'collate' 'const category':'const int')))
        (ImplicitCastExpr 0x997e9b8 <line:107:9> 'category':'int' <LValueToRValue>
          (DeclRefExpr 0x997e9a0 <col:9> 'const category':'const int' lvalue Var 0x9d418a0 'time' 'const category':'const int')))
      (ImplicitCastExpr 0x997e9f8 <col:17> 'category':'int' <LValueToRValue>
        (DeclRefExpr 0x997e9e0 <col:17> 'const category':'const int' lvalue Var 0x997e780 'monetary' 'const category':'const int')))
    (ImplicitCastExpr 0x997ea38 <col:28> 'category':'int' <LValueToRValue>
      (DeclRefExpr 0x997ea20 <col:28> 'const category':'const int' lvalue Var 0x997e820 'messages' 'const category':'const int'))))
;
        locale() throw();
        locale(const std::locale &__other) throw();
        locale(const char *__s);
        locale(const std::locale &__base, const char *__s, category __cat);
        locale(const std::locale &__base, const std::locale &__add, category __cat);
        template <typename _Facet> locale(const std::locale &__other, _Facet *__f);
        void ~locale() throw();
        const std::locale &operator=(const std::locale &__other) throw();
        template <typename _Facet> std::locale combine(const std::locale &__other) const;
        string name() const;
        bool operator==(const std::locale &__other) const throw();
        bool operator!=(const std::locale &__other) const throw() (CompoundStmt 0x9980920 </usr/include/c++/4.6/bits/locale_classes.h:236:5, col:44>
  (ReturnStmt 0x9980910 <col:7, col:41>
    (UnaryOperator 0x99808f8 <col:14, col:41> '_Bool' prefix '!'
      (ParenExpr 0x99808e0 <col:15, col:41> '_Bool'
        (CXXMemberCallExpr 0x99808c0 <col:16, col:40> '_Bool'
          (MemberExpr 0x9980888 <col:16, col:30> '<bound member function type>' ->operator== 0x997f8b0
            (CXXThisExpr 0x9980878 <col:16> 'const class std::locale *' this))
          (DeclRefExpr 0x99808a8 <col:33> 'const class std::locale' lvalue ParmVar 0x997f930 '__other' 'const class std::locale &'))))))


        template <typename _Char, typename _Traits, typename _Alloc> bool operator()(const basic_string<_Char, _Traits, _Alloc> &__s1, const basic_string<_Char, _Traits, _Alloc> &__s2) const;
        static std::locale global(const std::locale &);
        static const std::locale &classic();
    private:
    private:
        std::locale::_Impl *_M_impl;
        static std::locale::_Impl *_S_classic;
        static std::locale::_Impl *_S_global;
        static const char *const *const _S_categories;
        enum  {
            _S_categories_size = (ImplicitCastExpr 0x9980378 </usr/include/c++/4.6/bits/locale_classes.h:304:33, /usr/include/c++/4.6//i686-linux-gnu/bits/c++locale.h:45:33> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9980320 </usr/include/c++/4.6/bits/locale_classes.h:304:33, /usr/include/c++/4.6//i686-linux-gnu/bits/c++locale.h:45:33> 'int' '+'
    (IntegerLiteral 0x99802f0 </usr/include/c++/4.6/bits/locale_classes.h:304:33> 'int' 6)
    (IntegerLiteral 0x9980308 </usr/include/c++/4.6//i686-linux-gnu/bits/c++locale.h:45:33> 'int' 6)))

        };
        static __gthread_once_t _S_once;
        locale(std::locale::_Impl *) throw();
        static void _S_initialize();
        static void _S_initialize_once() throw();
        static category _S_normalize_category(category);
        void _M_coalesce(const std::locale &__base, const std::locale &__add, category __cat);
    };
    class facet {
        class facet;
    private:
    private:
        ;
        ;
        mutable _Atomic_word _M_refcount;
        static __c_locale _S_c_locale;
        static const char _S_c_name[2];
        static __gthread_once_t _S_once;
        static void _S_initialize_once();
    protected:
    protected:
        facet(size_t __refs = (ImplicitCastExpr 0x9981a90 </usr/include/c++/4.6/bits/locale_classes.h:370:27> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9981a78 <col:27> 'int' 0))
) throw() : _M_refcount((ConditionalOperator 0x9981b30 </usr/include/c++/4.6/bits/locale_classes.h:370:52, col:65> 'int'
  (ImplicitCastExpr 0x9981b20 <col:52> '_Bool' <IntegralToBoolean>
    (ImplicitCastExpr 0x9981b10 <col:52> 'size_t':'unsigned int' <LValueToRValue>
      (DeclRefExpr 0x9981ac4 <col:52> 'size_t':'unsigned int' lvalue ParmVar 0x9980de0 '__refs' 'size_t':'unsigned int')))
  (IntegerLiteral 0x9981ae0 <col:61> 'int' 1)
  (IntegerLiteral 0x9981af8 <col:65> 'int' 0))
) (CompoundStmt 0x9981b70 </usr/include/c++/4.6/bits/locale_classes.h:371:5, col:7>)


        virtual void ~facet();
        static void _S_create_c_locale(__c_locale &__cloc, const char *__s, __c_locale __old = (ImplicitCastExpr 0x9981ab8 </usr/include/c++/4.6/bits/locale_classes.h:379:29> '__c_locale':'struct __locale_struct *' <NullToPointer>
  (IntegerLiteral 0x9981aa0 <col:29> 'int' 0))
);
        static __c_locale _S_clone_c_locale(__c_locale &__cloc) throw();
        static void _S_destroy_c_locale(__c_locale &__cloc);
        static __c_locale _S_lc_ctype_c_locale(__c_locale __cloc, const char *__s);
        static __c_locale _S_get_c_locale();
        static const char *_S_get_c_name() throw();
    private:
    private:
        void _M_add_reference() const throw() (CompoundStmt 0x9981ca0 </usr/include/c++/4.6/bits/locale_classes.h:401:5, col:58>
  (CallExpr 0x9981c78 <col:7, col:55> 'void'
    (ImplicitCastExpr 0x9981c68 <col:7, col:18> 'void (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9981ba4 <col:7, col:18> 'void (_Atomic_word *, int)' lvalue Function 0x9c7a6c0 '__atomic_add_dispatch' 'void (_Atomic_word *, int)'))
    (UnaryOperator 0x9981c38 <col:40, col:41> '_Atomic_word *' prefix '&'
      (MemberExpr 0x9981c14 <col:41> '_Atomic_word':'int' lvalue ->_M_refcount 0x9980bb0
        (CXXThisExpr 0x9981be8 <col:41> 'const class std::locale::facet *' this)))
    (IntegerLiteral 0x9981c50 <col:54> 'int' 1)))


        void _M_remove_reference() const throw() (CompoundStmt 0x9981ef8 </usr/include/c++/4.6/bits/locale_classes.h:405:5, line:416:5>
  (NullStmt 0x9981cb8 <line:407:60>)
  (IfStmt 0x9981ed8 <line:408:7, line:415:2>
    <<<NULL>>>
    (BinaryOperator 0x9981dd0 <line:408:11, col:71> '_Bool' '=='
      (CallExpr 0x9981d90 <col:11, col:66> '_Atomic_word':'int'
        (ImplicitCastExpr 0x9981d80 <col:11, col:22> '_Atomic_word (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9981ce8 <col:11, col:22> '_Atomic_word (_Atomic_word *, int)' lvalue Function 0x9c7a230 '__exchange_and_add_dispatch' '_Atomic_word (_Atomic_word *, int)'))
        (UnaryOperator 0x9981d38 <col:50, col:51> '_Atomic_word *' prefix '&'
          (MemberExpr 0x9981d18 <col:51> '_Atomic_word':'int' lvalue ->_M_refcount 0x9980bb0
            (CXXThisExpr 0x9981d08 <col:51> 'const class std::locale::facet *' this)))
        (UnaryOperator 0x9981d68 <col:64, col:65> 'int' prefix '-'
          (IntegerLiteral 0x9981d50 <col:65> 'int' 1)))
      (IntegerLiteral 0x9981db8 <col:71> 'int' 1))
    (CompoundStmt 0x9981eb8 <line:409:2, line:415:2>
      (NullStmt 0x9981de8 <line:410:63>)
      (IfStmt 0x9981e58 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/locale_classes.h:412:21>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9981df8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9981e40 </usr/include/c++/4.6/bits/locale_classes.h:412:6, col:21>
          (CXXDeleteExpr 0x9981e28 <col:8, col:15> 'void'
            (ImplicitCastExpr 0x9981e18 <col:15> 'void *' <NoOp>
              (CXXThisExpr 0x9981e08 <col:15> 'const class std::locale::facet *' this))))
        <<<NULL>>>)
      (IfStmt 0x9981e98 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/locale_classes.h:414:8>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9981e78 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9981e88 </usr/include/c++/4.6/bits/locale_classes.h:414:6, col:8>)
        <<<NULL>>>))
    <<<NULL>>>))


        facet(const std::locale::facet &);
        std::locale::facet &operator=(const std::locale::facet &);
    };
    class id {
        class id;
    private:
    private:
        ;
        ;
        ;
        ;
        mutable size_t _M_index;
        static _Atomic_word _S_refcount;
        void operator=(const std::locale::id &);
        id(const std::locale::id &);
    public:
    public:
        id() (CompoundStmt 0x9983930 </usr/include/c++/4.6/bits/locale_classes.h:467:10, col:12>)


        size_t _M_id() const throw();
    };
    class _Impl {
        class _Impl;
    public:
    public:
        ;
        ;
        ;
        ;
        ;
    private:
    private:
        _Atomic_word _M_refcount;
        const std::locale::facet **_M_facets;
        size_t _M_facets_size;
        const std::locale::facet **_M_caches;
        char **_M_names;
        static const locale::id *const _S_id_ctype[];
        static const locale::id *const _S_id_numeric[];
        static const locale::id *const _S_id_collate[];
        static const locale::id *const _S_id_time[];
        static const locale::id *const _S_id_monetary[];
        static const locale::id *const _S_id_messages[];
        static const locale::id *const *const _S_facet_categories[];
        void _M_add_reference() throw() (CompoundStmt 0x9985818 </usr/include/c++/4.6/bits/locale_classes.h:510:5, col:58>
  (CallExpr 0x99857f0 <col:7, col:55> 'void'
    (ImplicitCastExpr 0x99857e0 <col:7, col:18> 'void (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
      (DeclRefExpr 0x998575c <col:7, col:18> 'void (_Atomic_word *, int)' lvalue Function 0x9c7a6c0 '__atomic_add_dispatch' 'void (_Atomic_word *, int)'))
    (UnaryOperator 0x99857b0 <col:40, col:41> '_Atomic_word *' prefix '&'
      (MemberExpr 0x9985790 <col:41> '_Atomic_word':'int' lvalue ->_M_refcount 0x9984090
        (CXXThisExpr 0x9985780 <col:41> 'class std::locale::_Impl *' this)))
    (IntegerLiteral 0x99857c8 <col:54> 'int' 1)))


        void _M_remove_reference() throw() (CompoundStmt 0x9985a70 </usr/include/c++/4.6/bits/locale_classes.h:514:5, line:525:5>
  (NullStmt 0x9985830 <line:516:60>)
  (IfStmt 0x9985a50 <line:517:7, line:524:2>
    <<<NULL>>>
    (BinaryOperator 0x9985948 <line:517:11, col:71> '_Bool' '=='
      (CallExpr 0x9985908 <col:11, col:66> '_Atomic_word':'int'
        (ImplicitCastExpr 0x99858f8 <col:11, col:22> '_Atomic_word (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9985860 <col:11, col:22> '_Atomic_word (_Atomic_word *, int)' lvalue Function 0x9c7a230 '__exchange_and_add_dispatch' '_Atomic_word (_Atomic_word *, int)'))
        (UnaryOperator 0x99858b0 <col:50, col:51> '_Atomic_word *' prefix '&'
          (MemberExpr 0x9985890 <col:51> '_Atomic_word':'int' lvalue ->_M_refcount 0x9984090
            (CXXThisExpr 0x9985880 <col:51> 'class std::locale::_Impl *' this)))
        (UnaryOperator 0x99858e0 <col:64, col:65> 'int' prefix '-'
          (IntegerLiteral 0x99858c8 <col:65> 'int' 1)))
      (IntegerLiteral 0x9985930 <col:71> 'int' 1))
    (CompoundStmt 0x9985a30 <line:518:2, line:524:2>
      (NullStmt 0x9985960 <line:519:63>)
      (IfStmt 0x99859d0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/locale_classes.h:521:21>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9985970 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x99859b8 </usr/include/c++/4.6/bits/locale_classes.h:521:6, col:21>
          (CXXDeleteExpr 0x99859a0 <col:8, col:15> 'void'
            (ImplicitCastExpr 0x9985990 <col:15> 'void *' <NoOp>
              (CXXThisExpr 0x9985980 <col:15> 'class std::locale::_Impl *' this))))
        <<<NULL>>>)
      (IfStmt 0x9985a10 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/locale_classes.h:523:8>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x99859f0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9985a00 </usr/include/c++/4.6/bits/locale_classes.h:523:6, col:8>)
        <<<NULL>>>))
    <<<NULL>>>))


        _Impl(const std::locale::_Impl &, size_t);
        _Impl(const char *, size_t);
        _Impl(size_t) throw();
        void ~_Impl() throw();
        _Impl(const std::locale::_Impl &);
        void operator=(const std::locale::_Impl &);
        bool _M_check_same_name() (CompoundStmt 0x99860e8 </usr/include/c++/4.6/bits/locale_classes.h:540:5, line:547:5>
  (DeclStmt 0x9985ad8 <line:541:7, col:24>
    0x9985a90 "bool __ret =
      (CXXBoolLiteralExpr 0x9985ac8 <col:20> '_Bool' true)")
  (IfStmt 0x9986090 <line:542:7, line:545:66>
    <<<NULL>>>
    (ImplicitCastExpr 0x9985b68 <line:542:11, col:21> '_Bool' <PointerToBoolean>
      (ImplicitCastExpr 0x9985b58 <col:11, col:21> 'char *' <LValueToRValue>
        (ArraySubscriptExpr 0x9985b40 <col:11, col:21> 'char *' lvalue
          (ImplicitCastExpr 0x9985b30 <col:11> 'char **' <LValueToRValue>
            (MemberExpr 0x9985af8 <col:11> 'char **' lvalue ->_M_names 0x99841b0
              (CXXThisExpr 0x9985ae8 <col:11> 'class std::locale::_Impl *' this)))
          (IntegerLiteral 0x9985b18 <col:20> 'int' 1))))
    (ForStmt 0x9986068 <line:544:2, line:545:66>
      (DeclStmt 0x9985be0 <line:544:7, col:21>
        0x9985b80 "size_t __i =
          (ImplicitCastExpr 0x9985bd0 <col:20> 'size_t':'unsigned int' <IntegralCast>
            (IntegerLiteral 0x9985bb8 <col:20> 'int' 0))")
      <<<NULL>>>
      (BinaryOperator 0x9985cc0 <col:23, col:59> '_Bool' '&&'
        (ImplicitCastExpr 0x9985cb0 <col:23> '_Bool' <LValueToRValue>
          (DeclRefExpr 0x9985bf0 <col:23> '_Bool' lvalue Var 0x9985a90 '__ret' '_Bool'))
        (BinaryOperator 0x9985c98 <col:32, col:59> '_Bool' '<'
          (ImplicitCastExpr 0x9985c78 <col:32> 'size_t':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0x9985c08 <col:32> 'size_t':'unsigned int' lvalue Var 0x9985b80 '__i' 'size_t':'unsigned int'))
          (ImplicitCastExpr 0x9985c88 <col:38, col:59> 'unsigned int' <IntegralCast>
            (BinaryOperator 0x9985c60 <col:38, col:59> 'int' '-'
              (ImplicitCastExpr 0x9985c50 <col:38> 'int' <IntegralCast>
                (DeclRefExpr 0x9985c20 <col:38> 'enum std::locale::<anonymous at /usr/include/c++/4.6/bits/locale_classes.h:304:5>' EnumConstant 0x9980340 '_S_categories_size' 'enum std::locale::<anonymous at /usr/include/c++/4.6/bits/locale_classes.h:304:5>'))
              (IntegerLiteral 0x9985c38 <col:59> 'int' 1)))))
      (UnaryOperator 0x9985cf0 <col:62, col:64> 'size_t':'unsigned int' lvalue prefix '++'
        (DeclRefExpr 0x9985cd8 <col:64> 'size_t':'unsigned int' lvalue Var 0x9985b80 '__i' 'size_t':'unsigned int'))
      (BinaryOperator 0x9986050 <line:545:4, col:66> '_Bool' lvalue '='
        (DeclRefExpr 0x9985d04 <col:4> '_Bool' lvalue Var 0x9985a90 '__ret' '_Bool')
        (BinaryOperator 0x9986038 <col:12, col:66> '_Bool' '=='
          (CallExpr 0x9985fb8 <col:12, col:61> 'int'
            (ImplicitCastExpr 0x9985fa8 <col:12> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9985e34 <col:12> 'int (const char *, const char *)' lvalue Function 0x9985d20 '__builtin_strcmp' 'int (const char *, const char *)'))
            (ImplicitCastExpr 0x9985ff0 <col:29, col:41> 'const char *' <NoOp>
              (ImplicitCastExpr 0x9985fe0 <col:29, col:41> 'char *' <LValueToRValue>
                (ArraySubscriptExpr 0x9985eb8 <col:29, col:41> 'char *' lvalue
                  (ImplicitCastExpr 0x9985e98 <col:29> 'char **' <LValueToRValue>
                    (MemberExpr 0x9985e60 <col:29> 'char **' lvalue ->_M_names 0x99841b0
                      (CXXThisExpr 0x9985e50 <col:29> 'class std::locale::_Impl *' this)))
                  (ImplicitCastExpr 0x9985ea8 <col:38> 'size_t':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0x9985e80 <col:38> 'size_t':'unsigned int' lvalue Var 0x9985b80 '__i' 'size_t':'unsigned int')))))
            (ImplicitCastExpr 0x9986010 <col:44, col:60> 'const char *' <NoOp>
              (ImplicitCastExpr 0x9986000 <col:44, col:60> 'char *' <LValueToRValue>
                (ArraySubscriptExpr 0x9985f78 <col:44, col:60> 'char *' lvalue
                  (ImplicitCastExpr 0x9985f68 <col:44> 'char **' <LValueToRValue>
                    (MemberExpr 0x9985ee0 <col:44> 'char **' lvalue ->_M_names 0x99841b0
                      (CXXThisExpr 0x9985ed0 <col:44> 'class std::locale::_Impl *' this)))
                  (BinaryOperator 0x9985f50 <col:53, col:59> 'unsigned int' '+'
                    (ImplicitCastExpr 0x9985f30 <col:53> 'size_t':'unsigned int' <LValueToRValue>
                      (DeclRefExpr 0x9985f00 <col:53> 'size_t':'unsigned int' lvalue Var 0x9985b80 '__i' 'size_t':'unsigned int'))
                    (ImplicitCastExpr 0x9985f40 <col:59> 'unsigned int' <IntegralCast>
                      (IntegerLiteral 0x9985f18 <col:59> 'int' 1)))))))
          (IntegerLiteral 0x9986020 <col:66> 'int' 0))))
    <<<NULL>>>)
  (ReturnStmt 0x99860d8 <line:546:7, col:14>
    (ImplicitCastExpr 0x99860c8 <col:14> '_Bool' <LValueToRValue>
      (DeclRefExpr 0x99860ac <col:14> '_Bool' lvalue Var 0x9985a90 '__ret' '_Bool'))))


        void _M_replace_categories(const std::locale::_Impl *, category);
        void _M_replace_category(const std::locale::_Impl *, const locale::id *const *);
        void _M_replace_facet(const std::locale::_Impl *, const locale::id *);
        void _M_install_facet(const locale::id *, const std::locale::facet *);
        template <typename _Facet> void _M_init_facet(_Facet *__facet) (CompoundStmt 0x99861e0 </usr/include/c++/4.6/bits/locale_classes.h:564:7, col:49>
  (CallExpr 0x99861b8 <col:9, col:46> '<dependent type>'
    (MemberExpr 0x9986118 <col:9> '<bound member function type>' ->_M_install_facet 0x99853d0
      (CXXThisExpr 0x9986108 <col:9> 'class std::locale::_Impl *' this))
    (UnaryOperator 0x9986188 <col:26, col:35> '<dependent type>' prefix '&'
      (DependentScopeDeclRefExpr 0x9986160 <col:27, col:35> '<dependent type>' lvalue))
    (DeclRefExpr 0x998619c <col:39> '_Facet *' lvalue ParmVar 0x99854d0 '__facet' '_Facet *')))

;
        void _M_install_cache(const std::locale::facet *, size_t);
    };
    template <typename _Facet = std::collate<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::ctype<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_get<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_put<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_get<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::numpunct<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_put<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::numpunct<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::ctype<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::collate<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet> bool has_facet(const std::locale &__loc) throw();
    template <typename _Facet = std::collate<wchar_t>> const std::collate<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::ctype<char>> const std::ctype<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_get<wchar_t>> const std::num_get<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_put<char>> const std::num_put<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_get<char>> const std::num_get<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::numpunct<wchar_t>> const std::numpunct<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_put<wchar_t>> const std::num_put<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::numpunct<char>> const std::numpunct<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::ctype<wchar_t>> const std::ctype<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::collate<char>> const std::collate<char> &use_facet(const std::locale &__loc)template <typename _Facet> const _Facet &use_facet(const std::locale &__loc);
    template <typename _CharT = wchar_t> class collate : public locale::facet {
        class collate;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
    protected:
    protected:
        __c_locale _M_c_locale_collate;
    public:
    public:
        static locale::id id;
        collate(size_t __refs);
        collate(__c_locale __cloc, size_t __refs);
        int compare(const wchar_t *__lo1, const wchar_t *__hi1, const wchar_t *__lo2, const wchar_t *__hi2) const;
        string_type transform(const wchar_t *__lo, const wchar_t *__hi) const;
        long hash(const wchar_t *__lo, const wchar_t *__hi) const;
        int _M_compare(const wchar_t *, const wchar_t *) const throw();
        size_t _M_transform(wchar_t *, const wchar_t *, size_t) const throw();
    protected:
    protected:
        virtual void ~collate();
        virtual int do_compare(const wchar_t *__lo1, const wchar_t *__hi1, const wchar_t *__lo2, const wchar_t *__hi2) const;
        virtual string_type do_transform(const wchar_t *__lo, const wchar_t *__hi) const;
        virtual long do_hash(const wchar_t *__lo, const wchar_t *__hi) const;
        inline std::collate<wchar_t> &operator=(const std::collate<wchar_t> &);
    }
template <typename _CharT = char> class collate : public locale::facet {
        class collate;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
    protected:
    protected:
        __c_locale _M_c_locale_collate;
    public:
    public:
        static locale::id id;
        collate(size_t __refs);
        collate(__c_locale __cloc, size_t __refs);
        int compare(const char *__lo1, const char *__hi1, const char *__lo2, const char *__hi2) const;
        string_type transform(const char *__lo, const char *__hi) const;
        long hash(const char *__lo, const char *__hi) const;
        int _M_compare(const char *, const char *) const throw();
        size_t _M_transform(char *, const char *, size_t) const throw();
    protected:
    protected:
        virtual void ~collate();
        virtual int do_compare(const char *__lo1, const char *__hi1, const char *__lo2, const char *__hi2) const;
        virtual string_type do_transform(const char *__lo, const char *__hi) const;
        virtual long do_hash(const char *__lo, const char *__hi) const;
        inline std::collate<char> &operator=(const std::collate<char> &);
    }
template <typename _CharT> class collate : public locale::facet {
        class collate;
    public:
    public:
        typedef _CharT char_type;
        typedef basic_string<_CharT> string_type;
    protected:
    protected:
        __c_locale _M_c_locale_collate;
    public:
    public:
        static locale::id id;
        collate<_CharT>(size_t __refs = (ImplicitCastExpr 0x9988530 </usr/include/c++/4.6/bits/locale_classes.h:644:31> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9988518 <col:31> 'int' 0))
) : std::locale::facet((DeclRefExpr 0x9988564 </usr/include/c++/4.6/bits/locale_classes.h:645:15> 'size_t':'unsigned int' lvalue ParmVar 0x9986ae0 '__refs' 'size_t':'unsigned int')
), _M_c_locale_collate((CallExpr 0x9988658 </usr/include/c++/4.6/bits/locale_classes.h:645:44, col:60> '__c_locale':'struct __locale_struct *'
  (ImplicitCastExpr 0x9988648 <col:44> '__c_locale (*)(void)' <FunctionToPointerDecay>
    (DeclRefExpr 0x99885f8 <col:44> '__c_locale (void)' lvalue CXXMethod 0x9981580 '_S_get_c_locale' '__c_locale (void)')))
) (CompoundStmt 0x99886c0 </usr/include/c++/4.6/bits/locale_classes.h:646:7, col:9>)


        collate<_CharT>(__c_locale __cloc, size_t __refs = (ImplicitCastExpr 0x9988558 </usr/include/c++/4.6/bits/locale_classes.h:658:50> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9988540 <col:50> 'int' 0))
) : std::locale::facet((DeclRefExpr 0x99886d0 </usr/include/c++/4.6/bits/locale_classes.h:659:15> 'size_t':'unsigned int' lvalue ParmVar 0x9986c30 '__refs' 'size_t':'unsigned int')
), _M_c_locale_collate((CallExpr 0x99887e8 </usr/include/c++/4.6/bits/locale_classes.h:659:44, col:68> '__c_locale':'struct __locale_struct *'
  (ImplicitCastExpr 0x99887d8 <col:44> '__c_locale (*)(__c_locale &) throw()' <FunctionToPointerDecay>
    (DeclRefExpr 0x9988768 <col:44> '__c_locale (__c_locale &) throw()' lvalue CXXMethod 0x9981240 '_S_clone_c_locale' '__c_locale (__c_locale &) throw()'))
  (DeclRefExpr 0x9988780 <col:62> '__c_locale':'struct __locale_struct *' lvalue ParmVar 0x9986bf0 '__cloc' '__c_locale':'struct __locale_struct *'))
) (CompoundStmt 0x9988850 </usr/include/c++/4.6/bits/locale_classes.h:660:7, col:9>)


        int compare(const _CharT *__lo1, const _CharT *__hi1, const _CharT *__lo2, const _CharT *__hi2) const (CompoundStmt 0x9988960 </usr/include/c++/4.6/bits/locale_classes.h:677:7, col:62>
  (ReturnStmt 0x9988950 <col:9, col:59>
    (CallExpr 0x9988920 <col:16, col:59> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9988888 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9988878 <col:16> 'const collate<_CharT> *' this))
      (DeclRefExpr 0x99888bc <col:33> 'const _CharT *' lvalue ParmVar 0x9986d70 '__lo1' 'const _CharT *')
      (DeclRefExpr 0x99888d4 <col:40> 'const _CharT *' lvalue ParmVar 0x9986dc0 '__hi1' 'const _CharT *')
      (DeclRefExpr 0x99888ec <col:47> 'const _CharT *' lvalue ParmVar 0x9986e10 '__lo2' 'const _CharT *')
      (DeclRefExpr 0x9988904 <col:54> 'const _CharT *' lvalue ParmVar 0x9986e60 '__hi2' 'const _CharT *'))))


        string_type transform(const _CharT *__lo, const _CharT *__hi) const (CompoundStmt 0x9988a28 </usr/include/c++/4.6/bits/locale_classes.h:695:7, col:48>
  (ReturnStmt 0x9988a18 <col:9, col:45>
    (CallExpr 0x99889f0 <col:16, col:45> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9988988 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9988978 <col:16> 'const collate<_CharT> *' this))
      (DeclRefExpr 0x99889bc <col:35> 'const _CharT *' lvalue ParmVar 0x9986fb0 '__lo' 'const _CharT *')
      (DeclRefExpr 0x99889d4 <col:41> 'const _CharT *' lvalue ParmVar 0x9987000 '__hi' 'const _CharT *'))))


        long hash(const _CharT *__lo, const _CharT *__hi) const (CompoundStmt 0x9988af0 </usr/include/c++/4.6/bits/locale_classes.h:709:7, col:43>
  (ReturnStmt 0x9988ae0 <col:9, col:40>
    (CallExpr 0x9988ab8 <col:16, col:40> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9988a50 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9988a40 <col:16> 'const collate<_CharT> *' this))
      (DeclRefExpr 0x9988a84 <col:30> 'const _CharT *' lvalue ParmVar 0x9987120 '__lo' 'const _CharT *')
      (DeclRefExpr 0x9988a9c <col:36> 'const _CharT *' lvalue ParmVar 0x9987170 '__hi' 'const _CharT *'))))


        int _M_compare(const _CharT *, const _CharT *) const throw();
        size_t _M_transform(_CharT *, const _CharT *, size_t) const throw();
    protected:
    protected:
        virtual void ~collate<_CharT>() (CompoundStmt 0x9988b88 </usr/include/c++/4.6/bits/locale_classes.h:722:7, col:51>
  (CallExpr 0x9988b68 <col:9, col:48> '<dependent type>'
    (DeclRefExpr 0x9988b04 <col:9> 'void (__c_locale &)' lvalue CXXMethod 0x9981360 '_S_destroy_c_locale' 'void (__c_locale &)')
    (MemberExpr 0x9988b48 <col:29> '__c_locale':'struct __locale_struct *' lvalue ->_M_c_locale_collate 0x9986a00
      (CXXThisExpr 0x9988b38 <col:29> 'collate<_CharT> *' this))))


        virtual int do_compare(const _CharT *__lo1, const _CharT *__hi1, const _CharT *__lo2, const _CharT *__hi2) const;
        virtual string_type do_transform(const _CharT *__lo, const _CharT *__hi) const;
        virtual long do_hash(const _CharT *__lo, const _CharT *__hi) const;
    };
    static locale::id id(CXXConstructExpr 0x9988dd8 </usr/include/c++/4.6/bits/locale_classes.h:770:33> 'class locale::id':'class std::locale::id''void (void)')
;
    int _M_compare(const char *, const char *) const throw();
    size_t _M_transform(char *, const char *, size_t) const throw();
    int _M_compare(const wchar_t *, const wchar_t *) const throw();
    size_t _M_transform(wchar_t *, const wchar_t *, size_t) const throw();
    template <typename _CharT = wchar_t> class collate_byname : public collate<wchar_t> {
        class collate_byname;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
        collate_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~collate_byname();
        inline std::collate_byname<wchar_t> &operator=(const std::collate_byname<wchar_t> &);
    }
template <typename _CharT = char> class collate_byname : public collate<char> {
        class collate_byname;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
        collate_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~collate_byname();
        inline std::collate_byname<char> &operator=(const std::collate_byname<char> &);
    }
template <typename _CharT> class collate_byname : public collate<_CharT> {
        class collate_byname;
    public:
    public:
        typedef _CharT char_type;
        typedef basic_string<_CharT> string_type;
        collate_byname<_CharT>(const char *__s, size_t __refs = (ImplicitCastExpr 0x9bf3450 </usr/include/c++/4.6/bits/locale_classes.h:803:55> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9bf3438 <col:55> 'int' 0))
) : collate<_CharT>((DeclRefExpr 0x9bf34f0 </usr/include/c++/4.6/bits/locale_classes.h:804:25> 'size_t':'unsigned int' lvalue ParmVar 0x9bf3280 '__refs' 'size_t':'unsigned int')
) (CompoundStmt 0x9bf3940 </usr/include/c++/4.6/bits/locale_classes.h:805:7, line:812:7>
  (IfStmt 0x9bf3920 <line:806:2, line:811:4>
    <<<NULL>>>
    (BinaryOperator 0x9bf3750 <line:806:6, line:807:43> '_Bool' '&&'
      (BinaryOperator 0x9bf3610 <line:806:6, col:36> '_Bool' '!='
        (CallExpr 0x9bf35b0 <col:6, col:31> 'int'
          (ImplicitCastExpr 0x9bf35a0 <col:6> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9bf354c <col:6> 'int (const char *, const char *)' lvalue Function 0x9985d20 '__builtin_strcmp' 'int (const char *, const char *)'))
          (ImplicitCastExpr 0x9bf35d8 <col:23> 'const char *' <LValueToRValue>
            (DeclRefExpr 0x9bf3564 <col:23> 'const char *' lvalue ParmVar 0x9bf3240 '__s' 'const char *'))
          (ImplicitCastExpr 0x9bf35e8 <col:28> 'const char *' <ArrayToPointerDecay>
            (StringLiteral 0x9bf357c <col:28> 'const char [2]' lvalue "C")))
        (IntegerLiteral 0x9bf35f8 <col:36> 'int' 0))
      (BinaryOperator 0x9bf3738 <line:807:9, col:43> '_Bool' '!='
        (CallExpr 0x9bf36d8 <col:9, col:38> 'int'
          (ImplicitCastExpr 0x9bf36c8 <col:9> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9bf3628 <col:9> 'int (const char *, const char *)' lvalue Function 0x9985d20 '__builtin_strcmp' 'int (const char *, const char *)'))
          (ImplicitCastExpr 0x9bf3700 <col:26> 'const char *' <LValueToRValue>
            (DeclRefExpr 0x9bf3640 <col:26> 'const char *' lvalue ParmVar 0x9bf3240 '__s' 'const char *'))
          (ImplicitCastExpr 0x9bf3710 <col:31> 'const char *' <ArrayToPointerDecay>
            (StringLiteral 0x9bf36a0 <col:31> 'const char [6]' lvalue "POSIX")))
        (IntegerLiteral 0x9bf3720 <col:43> 'int' 0)))
    (CompoundStmt 0x9bf3908 <line:808:4, line:811:4>
      (CallExpr 0x9bf3818 <line:809:6, col:57> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9bf3798 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0x9bf3788 <col:6> 'collate_byname<_CharT> *' this))
        (CXXDependentScopeMemberExpr 0x9bf37e0 <col:32, col:38> '<dependent type>' lvalue
          (CXXThisExpr 0x9bf37d0 <col:32> 'collate_byname<_CharT> *' this)))
      (CallExpr 0x9bf38e0 <line:810:6, col:61> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9bf3848 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0x9bf3838 <col:6> 'collate_byname<_CharT> *' this))
        (CXXDependentScopeMemberExpr 0x9bf3890 <col:31, col:37> '<dependent type>' lvalue
          (CXXThisExpr 0x9bf3880 <col:31> 'collate_byname<_CharT> *' this))
        (DeclRefExpr 0x9bf38c4 <col:58> 'const char *' lvalue ParmVar 0x9bf3240 '__s' 'const char *')))
    <<<NULL>>>))


    protected:
    protected:
        virtual void ~collate_byname<_CharT>() (CompoundStmt 0x9bf3958 </usr/include/c++/4.6/bits/locale_classes.h:816:25, col:27>)


    };
}
extern int __builtin_strcmp(const char *, const char *);
namespace std {
    template <typename _Facet> class locale::locale(const std::locale &__other, _Facet *__f) (CompoundStmt 0x9bf41f8 </usr/include/c++/4.6/bits/locale_classes.tcc:45:5, line:57:5>
  (BinaryOperator 0x9bf3e10 <line:46:7, col:46> 'class std::locale::_Impl *' lvalue '='
    (MemberExpr 0x9bf3ce8 <col:7> 'class std::locale::_Impl *' lvalue ->_M_impl 0x9980150
      (CXXThisExpr 0x9bf3cd8 <col:7> 'class std::locale *' this))
    (CXXNewExpr 0x9bf3dd0 <col:17, col:46> 'class std::locale::_Impl *'
      (ImplicitCastExpr 0x9bf3d88 <col:27, col:36> 'const class std::locale::_Impl' lvalue <NoOp>
        (UnaryOperator 0x9bf3d50 <col:27, col:36> 'class std::locale::_Impl' lvalue prefix '*'
          (ImplicitCastExpr 0x9bf3d40 <col:28, col:36> 'class std::locale::_Impl *' <LValueToRValue>
            (MemberExpr 0x9bf3d20 <col:28, col:36> 'class std::locale::_Impl *const' lvalue ._M_impl 0x9980150
              (DeclRefExpr 0x9bf3d08 <col:28> 'const class std::locale' lvalue ParmVar 0x9bf3ad0 '__other' 'const class std::locale &')))))
      (ImplicitCastExpr 0x9bf3d98 <col:45> 'size_t':'unsigned int' <IntegralCast>
        (IntegerLiteral 0x9bf3d68 <col:45> 'int' 1))))
  (IfStmt 0x9bf3f58 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/locale_classes.tcc:49:49>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9bf3e28 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x9bf3f40 </usr/include/c++/4.6/bits/locale_classes.tcc:49:2, col:49>
      (CallExpr 0x9bf3f18 <col:4, col:46> '<dependent type>'
        (MemberExpr 0x9bf3e74 <col:4, col:13> '<bound member function type>' ->_M_install_facet 0x99853d0
          (ImplicitCastExpr 0x9bf3e68 <col:4> 'class std::locale::_Impl *' <LValueToRValue>
            (MemberExpr 0x9bf3e48 <col:4> 'class std::locale::_Impl *' lvalue ->_M_impl 0x9980150
              (CXXThisExpr 0x9bf3e38 <col:4> 'class std::locale *' this))))
        (UnaryOperator 0x9bf3ee8 <col:30, col:39> '<dependent type>' prefix '&'
          (DependentScopeDeclRefExpr 0x9bf3ec0 <col:31, col:39> '<dependent type>' lvalue))
        (DeclRefExpr 0x9bf3efc <col:43> '_Facet *' lvalue ParmVar 0x9bf3b40 '__f' '_Facet *')))
    <<<NULL>>>)
  (IfStmt 0x9bf4030 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/locale_classes.tcc:54:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9bf3f78 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9bf4018 </usr/include/c++/4.6/bits/locale_classes.tcc:51:2, line:54:2>
      (CXXMemberCallExpr 0x9bf3fe8 <line:52:4, col:33> 'void'
        (MemberExpr 0x9bf3fc4 <col:4, col:13> '<bound member function type>' ->_M_remove_reference 0x9984710
          (ImplicitCastExpr 0x9bf3fb8 <col:4> 'class std::locale::_Impl *' <LValueToRValue>
            (MemberExpr 0x9bf3f98 <col:4> 'class std::locale::_Impl *' lvalue ->_M_impl 0x9980150
              (CXXThisExpr 0x9bf3f88 <col:4> 'class std::locale *' this)))))
      (NullStmt 0x9bf4008 <line:53:27>))
    <<<NULL>>>)
  (CXXDeleteExpr 0x9bf4100 <line:55:7, col:36> 'void'
    (ImplicitCastExpr 0x9bf40f0 <col:17, col:36> 'void *' <NoOp>
      (ArraySubscriptExpr 0x9bf40d8 <col:17, col:36> 'char *' lvalue
        (ImplicitCastExpr 0x9bf40c8 <col:17, col:26> 'char **' <LValueToRValue>
          (MemberExpr 0x9bf408c <col:17, col:26> 'char **' lvalue ->_M_names 0x99841b0
            (ImplicitCastExpr 0x9bf4080 <col:17> 'class std::locale::_Impl *' <LValueToRValue>
              (MemberExpr 0x9bf4060 <col:17> 'class std::locale::_Impl *' lvalue ->_M_impl 0x9980150
                (CXXThisExpr 0x9bf4050 <col:17> 'class std::locale *' this)))))
        (IntegerLiteral 0x9bf40b0 <col:35> 'int' 0))))
  (BinaryOperator 0x9bf41e0 <line:56:7, col:30> 'char *' lvalue '='
    (ArraySubscriptExpr 0x9bf41a0 <col:7, col:26> 'char *' lvalue
      (ImplicitCastExpr 0x9bf4190 <col:7, col:16> 'char **' <LValueToRValue>
        (MemberExpr 0x9bf4154 <col:7, col:16> 'char **' lvalue ->_M_names 0x99841b0
          (ImplicitCastExpr 0x9bf4148 <col:7> 'class std::locale::_Impl *' <LValueToRValue>
            (MemberExpr 0x9bf4128 <col:7> 'class std::locale::_Impl *' lvalue ->_M_impl 0x9980150
              (CXXThisExpr 0x9bf4118 <col:7> 'class std::locale *' this)))))
      (IntegerLiteral 0x9bf4178 <col:25> 'int' 0))
    (ImplicitCastExpr 0x9bf41d0 <col:30> 'char *' <NullToPointer>
      (IntegerLiteral 0x9bf41b8 <col:30> 'int' 0))))

;
    template <typename _Facet> std::locale combine(const std::locale &__other) const (CompoundStmt 0x9bf4858 </usr/include/c++/4.6/bits/locale_classes.tcc:63:5, line:75:5>
  (DeclStmt 0x9bf4528 <line:64:7, col:44>
    0x9bf43f0 "std::locale::_Impl *__tmp =
      (CXXNewExpr 0x9bf44e8 <col:22, col:43> 'class std::locale::_Impl *'
        (ImplicitCastExpr 0x9bf44a0 <col:32, col:33> 'const class std::locale::_Impl' lvalue <NoOp>
          (UnaryOperator 0x9bf4468 <col:32, col:33> 'class std::locale::_Impl' lvalue prefix '*'
            (ImplicitCastExpr 0x9bf4458 <col:33> 'class std::locale::_Impl *' <LValueToRValue>
              (MemberExpr 0x9bf4438 <col:33> 'class std::locale::_Impl *const' lvalue ->_M_impl 0x9980150
                (CXXThisExpr 0x9bf4428 <col:33> 'const class std::locale *' this)))))
        (ImplicitCastExpr 0x9bf44b0 <col:42> 'size_t':'unsigned int' <IntegralCast>
          (IntegerLiteral 0x9bf4480 <col:42> 'int' 1)))")
  (IfStmt 0x9bf4670 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/locale_classes.tcc:68:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9bf4538 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x9bf4658 </usr/include/c++/4.6/bits/locale_classes.tcc:66:2, line:68:2>
      (CallExpr 0x9bf4630 <line:67:4, col:56> '<dependent type>'
        (MemberExpr 0x9bf456c <col:4, col:11> '<bound member function type>' ->_M_replace_facet 0x9985240
          (ImplicitCastExpr 0x9bf4560 <col:4> 'class std::locale::_Impl *' <LValueToRValue>
            (DeclRefExpr 0x9bf4548 <col:4> 'class std::locale::_Impl *' lvalue Var 0x9bf43f0 '__tmp' 'class std::locale::_Impl *')))
        (MemberExpr 0x9bf45a4 <col:28, col:36> 'class std::locale::_Impl *const' lvalue ._M_impl 0x9980150
          (DeclRefExpr 0x9bf458c <col:28> 'const class std::locale' lvalue ParmVar 0x9bf42a0 '__other' 'const class std::locale &'))
        (UnaryOperator 0x9bf4618 <col:45, col:54> '<dependent type>' prefix '&'
          (DependentScopeDeclRefExpr 0x9bf45f0 <col:46, col:54> '<dependent type>' lvalue))))
    <<<NULL>>>)
  (IfStmt 0x9bf4730 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/locale_classes.tcc:73:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9bf4690 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9bf4718 </usr/include/c++/4.6/bits/locale_classes.tcc:70:2, line:73:2>
      (CXXMemberCallExpr 0x9bf46e8 <line:71:4, col:31> 'void'
        (MemberExpr 0x9bf46c4 <col:4, col:11> '<bound member function type>' ->_M_remove_reference 0x9984710
          (ImplicitCastExpr 0x9bf46b8 <col:4> 'class std::locale::_Impl *' <LValueToRValue>
            (DeclRefExpr 0x9bf46a0 <col:4> 'class std::locale::_Impl *' lvalue Var 0x9bf43f0 '__tmp' 'class std::locale::_Impl *'))))
      (NullStmt 0x9bf4708 <line:72:27>))
    <<<NULL>>>)
  (ReturnStmt 0x9bf4848 <line:74:7, col:26>
    (ExprWithCleanups 0x9bf4828 <col:14, col:26> 'class std::locale'
      (CXXTemporary 0x9bf47b0)
      (CXXConstructExpr 0x9bf4800 <col:14, col:26> 'class std::locale''void (const class std::locale &) throw()' elidable
        (MaterializeTemporaryExpr 0x9bf47f0 <col:14, col:26> 'const class std::locale' lvalue
          (ImplicitCastExpr 0x9bf47e0 <col:14, col:26> 'const class std::locale' <NoOp>
            (CXXFunctionalCastExpr 0x9bf47c8 <col:14, col:26> 'class std::locale' functional cast to class std::locale <ConstructorConversion>
              (CXXBindTemporaryExpr 0x9bf47b8 <col:14, col:21> 'class std::locale' (CXXTemporary 0x9bf47b0)
                (CXXConstructExpr 0x9bf4780 <col:14, col:21> 'class std::locale''void (class std::locale::_Impl *) throw()'
                  (ImplicitCastExpr 0x9bf4770 <col:21> 'class std::locale::_Impl *' <LValueToRValue>
                    (DeclRefExpr 0x9bf4758 <col:21> 'class std::locale::_Impl *' lvalue Var 0x9bf43f0 '__tmp' 'class std::locale::_Impl *')))))))))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> bool operator()(const basic_string<_CharT, _Traits, _Alloc> &__s1, const basic_string<_CharT, _Traits, _Alloc> &__s2) const (CompoundStmt 0x9bf5580 </usr/include/c++/4.6/bits/locale_classes.tcc:82:5, line:87:5>
  (DeclStmt 0x9bf4f60 <line:83:7, col:50>
    0x9bf4f30 "typedef std::collate<_CharT> __collate_type")
  (DeclStmt 0x9bf50c0 <line:84:7, col:73>
    0x9bf4fd0 "const __collate_type &__collate =
      (CallExpr 0x9bf50a0 <col:41, col:72> '<dependent type>'
        (UnresolvedLookupExpr 0x9bf5010 <col:41, col:65> '<dependent type>' lvalue (ADL) = '1' 0x99864c0)
        (UnaryOperator 0x9bf5088 <col:67, col:68> 'const class std::locale' lvalue prefix '*'
          (CXXThisExpr 0x9bf5078 <col:68> 'const class std::locale *' this)))")
  (ReturnStmt 0x9bf5570 <line:85:7, line:86:50>
    (ParenExpr 0x9bf5558 <line:85:14, line:86:50> '<dependent type>'
      (CXXOperatorCallExpr 0x9bf5530 <line:85:15, line:86:49> '<dependent type>'
        (UnresolvedLookupExpr 0x9bf54e8 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40ad0 0x9b57c70 0x9b5ddb0 0x9cbc120 0x9cbc650 0x9cbcb80)
        (CallExpr 0x9bf54a0 <line:85:15, line:86:45> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9bf50e8 <line:85:15, col:25> '<dependent type>' lvalue
            (DeclRefExpr 0x9bf50d0 <col:15> 'const __collate_type':'const collate<_CharT>' lvalue Var 0x9bf4fd0 '__collate' 'const __collate_type &'))
          (CallExpr 0x9bf5170 <col:33, col:43> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9bf5138 <col:33, col:38> '<dependent type>' lvalue
              (DeclRefExpr 0x9bf511c <col:33> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9bf4b10 '__s1' 'const basic_string<_CharT, _Traits, _Alloc> &')))
          (CXXOperatorCallExpr 0x9bf52b8 <col:46, col:72> '<dependent type>'
            (UnresolvedLookupExpr 0x9bf5270 <col:58, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9ce1500 0x9ce2100 0x9cb8030 0x9cb8830)
            (CallExpr 0x9bf51e0 <col:46, col:56> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9bf51a8 <col:46, col:51> '<dependent type>' lvalue
                (DeclRefExpr 0x9bf518c <col:46> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9bf4b10 '__s1' 'const basic_string<_CharT, _Traits, _Alloc> &')))
            (CallExpr 0x9bf5250 <col:60, col:72> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9bf5218 <col:60, col:65> '<dependent type>' lvalue
                (DeclRefExpr 0x9bf51fc <col:60> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9bf4b10 '__s1' 'const basic_string<_CharT, _Traits, _Alloc> &'))))
          (CallExpr 0x9bf5330 <line:86:5, col:15> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9bf52f8 <col:5, col:10> '<dependent type>' lvalue
              (DeclRefExpr 0x9bf52dc <col:5> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9bf4cc0 '__s2' 'const basic_string<_CharT, _Traits, _Alloc> &')))
          (CXXOperatorCallExpr 0x9bf5478 <col:18, col:44> '<dependent type>'
            (UnresolvedLookupExpr 0x9bf5430 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9ce1500 0x9ce2100 0x9cb8030 0x9cb8830)
            (CallExpr 0x9bf53a0 <col:18, col:28> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9bf5368 <col:18, col:23> '<dependent type>' lvalue
                (DeclRefExpr 0x9bf534c <col:18> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9bf4cc0 '__s2' 'const basic_string<_CharT, _Traits, _Alloc> &')))
            (CallExpr 0x9bf5410 <col:32, col:44> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9bf53d8 <col:32, col:37> '<dependent type>' lvalue
                (DeclRefExpr 0x9bf53bc <col:32> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9bf4cc0 '__s2' 'const basic_string<_CharT, _Traits, _Alloc> &')))))
        (IntegerLiteral 0x9bf54d0 <col:49> 'int' 0)))))

;
    template <typename _Facet = std::collate<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::ctype<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_get<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_put<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_get<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::numpunct<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_put<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::numpunct<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::ctype<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::collate<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet> bool has_facet(const std::locale &__loc) throw() (CompoundStmt 0x9bf5ac0 </usr/include/c++/4.6/bits/locale_classes.tcc:93:5, line:102:5>
  (DeclStmt 0x9bf57e0 <line:94:7, col:44>
    0x9bf5700 "const size_t __i =
      (CallExpr 0x9bf57c0 <col:26, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9bf5788 <col:26, col:37> '<dependent type>' lvalue
          (DependentScopeDeclRefExpr 0x9bf5760 <col:26, col:34> '<dependent type>' lvalue)))")
  (DeclStmt 0x9bf5910 <line:95:7, col:64>
    0x9bf5860 "const locale::facet **__facets =
      (ImplicitCastExpr 0x9bf5900 <col:40, col:55> 'const class std::locale::facet **' <LValueToRValue>
        (MemberExpr 0x9bf58dc <col:40, col:55> 'const class std::locale::facet **' lvalue ->_M_facets 0x99840f0
          (ImplicitCastExpr 0x9bf58d0 <col:40, col:46> 'class std::locale::_Impl *' <LValueToRValue>
            (MemberExpr 0x9bf58ac <col:40, col:46> 'class std::locale::_Impl *const' lvalue ._M_impl 0x9980150
              (DeclRefExpr 0x9bf5894 <col:40> 'const class std::locale' lvalue ParmVar 0x9bf5610 '__loc' 'const class std::locale &')))))")
  (ReturnStmt 0x9bf5ab0 <line:96:7, line:98:53>
    (ParenExpr 0x9bf5a98 <line:96:14, line:98:53> '<dependent type>'
      (BinaryOperator 0x9bf5a80 <line:96:15, line:98:52> '<dependent type>' '&&'
        (BinaryOperator 0x9bf59c0 <line:96:15, col:36> '_Bool' '<'
          (ImplicitCastExpr 0x9bf59a0 <col:15> 'size_t':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0x9bf5920 <col:15> 'const size_t':'const unsigned int' lvalue Var 0x9bf5700 '__i' 'const size_t':'const unsigned int'))
          (ImplicitCastExpr 0x9bf59b0 <col:21, col:36> 'size_t':'unsigned int' <LValueToRValue>
            (MemberExpr 0x9bf597c <col:21, col:36> 'size_t':'unsigned int' lvalue ->_M_facets_size 0x9984130
              (ImplicitCastExpr 0x9bf5970 <col:21, col:27> 'class std::locale::_Impl *' <LValueToRValue>
                (MemberExpr 0x9bf5950 <col:21, col:27> 'class std::locale::_Impl *const' lvalue ._M_impl 0x9980150
                  (DeclRefExpr 0x9bf5938 <col:21> 'const class std::locale' lvalue ParmVar 0x9bf5610 '__loc' 'const class std::locale &'))))))
        (CXXDynamicCastExpr 0x9bf5a68 <line:98:11, col:52> 'const _Facet *' dynamic_cast<const _Facet *> <Dependent>
          (ArraySubscriptExpr 0x9bf5a28 <col:39, col:51> 'const class locale::facet *' lvalue
            (ImplicitCastExpr 0x9bf5a08 <col:39> 'const class locale::facet **' <LValueToRValue>
              (DeclRefExpr 0x9bf59d8 <col:39> 'const class locale::facet **' lvalue Var 0x9bf5860 '__facets' 'const class locale::facet **'))
            (ImplicitCastExpr 0x9bf5a18 <col:48> 'size_t':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0x9bf59f0 <col:48> 'const size_t':'const unsigned int' lvalue Var 0x9bf5700 '__i' 'const size_t':'const unsigned int'))))))))

;
    template <typename _Facet = std::collate<wchar_t>> const std::collate<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::ctype<char>> const std::ctype<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_get<wchar_t>> const std::num_get<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_put<char>> const std::num_put<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_get<char>> const std::num_get<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::numpunct<wchar_t>> const std::numpunct<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_put<wchar_t>> const std::num_put<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::numpunct<char>> const std::numpunct<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::ctype<wchar_t>> const std::ctype<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::collate<char>> const std::collate<char> &use_facet(const std::locale &__loc)template <typename _Facet> const _Facet &use_facet(const std::locale &__loc) (CompoundStmt 0x9bf6158 </usr/include/c++/4.6/bits/locale_classes.tcc:107:5, line:117:5>
  (DeclStmt 0x9bf5d70 <line:108:7, col:44>
    0x9bf5c90 "const size_t __i =
      (CallExpr 0x9bf5d50 <col:26, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9bf5d18 <col:26, col:37> '<dependent type>' lvalue
          (DependentScopeDeclRefExpr 0x9bf5cf0 <col:26, col:34> '<dependent type>' lvalue)))")
  (DeclStmt 0x9bf5e70 <line:109:7, col:64>
    0x9bf5dc0 "const locale::facet **__facets =
      (ImplicitCastExpr 0x9bf5e60 <col:40, col:55> 'const class std::locale::facet **' <LValueToRValue>
        (MemberExpr 0x9bf5e3c <col:40, col:55> 'const class std::locale::facet **' lvalue ->_M_facets 0x99840f0
          (ImplicitCastExpr 0x9bf5e30 <col:40, col:46> 'class std::locale::_Impl *' <LValueToRValue>
            (MemberExpr 0x9bf5e0c <col:40, col:46> 'class std::locale::_Impl *const' lvalue ._M_impl 0x9980150
              (DeclRefExpr 0x9bf5df4 <col:40> 'const class std::locale' lvalue ParmVar 0x9bf5b50 '__loc' 'const class std::locale &')))))")
  (IfStmt 0x9bf6070 <line:110:7, line:111:26>
    <<<NULL>>>
    (BinaryOperator 0x9bf5fd8 <line:110:11, col:64> '_Bool' '||'
      (BinaryOperator 0x9bf5f20 <col:11, col:33> '_Bool' '>='
        (ImplicitCastExpr 0x9bf5f00 <col:11> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9bf5e80 <col:11> 'const size_t':'const unsigned int' lvalue Var 0x9bf5c90 '__i' 'const size_t':'const unsigned int'))
        (ImplicitCastExpr 0x9bf5f10 <col:18, col:33> 'size_t':'unsigned int' <LValueToRValue>
          (MemberExpr 0x9bf5edc <col:18, col:33> 'size_t':'unsigned int' lvalue ->_M_facets_size 0x9984130
            (ImplicitCastExpr 0x9bf5ed0 <col:18, col:24> 'class std::locale::_Impl *' <LValueToRValue>
              (MemberExpr 0x9bf5eb0 <col:18, col:24> 'class std::locale::_Impl *const' lvalue ._M_impl 0x9980150
                (DeclRefExpr 0x9bf5e98 <col:18> 'const class std::locale' lvalue ParmVar 0x9bf5b50 '__loc' 'const class std::locale &'))))))
      (UnaryOperator 0x9bf5fc0 <col:51, col:64> '_Bool' prefix '!'
        (ImplicitCastExpr 0x9bf5fb0 <col:52, col:64> '_Bool' <PointerToBoolean>
          (ImplicitCastExpr 0x9bf5fa0 <col:52, col:64> 'const class locale::facet *' <LValueToRValue>
            (ArraySubscriptExpr 0x9bf5f88 <col:52, col:64> 'const class locale::facet *' lvalue
              (ImplicitCastExpr 0x9bf5f68 <col:52> 'const class locale::facet **' <LValueToRValue>
                (DeclRefExpr 0x9bf5f38 <col:52> 'const class locale::facet **' lvalue Var 0x9bf5dc0 '__facets' 'const class locale::facet **'))
              (ImplicitCastExpr 0x9bf5f78 <col:61> 'size_t':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0x9bf5f50 <col:61> 'const size_t':'const unsigned int' lvalue Var 0x9bf5c90 '__i' 'const size_t':'const unsigned int')))))))
    (CallExpr 0x9bf6050 <line:111:9, col:26> 'void'
      (ImplicitCastExpr 0x9bf6040 <col:9> 'void (*)(void) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x9bf6024 <col:9> 'void (void) __attribute__((noreturn))' lvalue Function 0x9b0b8a0 '__throw_bad_cast' 'void (void) __attribute__((noreturn))')))
    <<<NULL>>>)
  (ReturnStmt 0x9bf6148 <line:113:7, col:56>
    (CXXDynamicCastExpr 0x9bf6130 <col:14, col:56> 'const _Facet' lvalue dynamic_cast<const _Facet &> <Dependent>
      (UnaryOperator 0x9bf6108 <col:42, col:55> 'const class locale::facet':'const class std::locale::facet' lvalue prefix '*'
        (ImplicitCastExpr 0x9bf60f8 <col:43, col:55> 'const class locale::facet *' <LValueToRValue>
          (ArraySubscriptExpr 0x9bf60e0 <col:43, col:55> 'const class locale::facet *' lvalue
            (ImplicitCastExpr 0x9bf60c0 <col:43> 'const class locale::facet **' <LValueToRValue>
              (DeclRefExpr 0x9bf608c <col:43> 'const class locale::facet **' lvalue Var 0x9bf5dc0 '__facets' 'const class locale::facet **'))
            (ImplicitCastExpr 0x9bf60d0 <col:52> 'size_t':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0x9bf60a4 <col:52> 'const size_t':'const unsigned int' lvalue Var 0x9bf5c90 '__i' 'const size_t':'const unsigned int'))))))))

;
    int _M_compare(const _CharT *, const _CharT *) const throw() (CompoundStmt 0x9bf64e0 </usr/include/c++/4.6/bits/locale_classes.tcc:124:5, col:17>
  (ReturnStmt 0x9bf64d0 <col:7, col:14>
    (IntegerLiteral 0x9bf64b8 <col:14> 'int' 0)))


    size_t _M_transform(_CharT *, const _CharT *, size_t) const throw() (CompoundStmt 0x9d54bc8 </usr/include/c++/4.6/bits/locale_classes.tcc:130:5, col:17>
  (ReturnStmt 0x9d54bb8 <col:7, col:14>
    (ImplicitCastExpr 0x9d54ba8 <col:14> 'size_t':'unsigned int' <IntegralCast>
      (IntegerLiteral 0x9d54b90 <col:14> 'int' 0))))


    int do_compare(const _CharT *__lo1, const _CharT *__hi1, const _CharT *__lo2, const _CharT *__hi2) const (CompoundStmt 0x9d55ee0 </usr/include/c++/4.6/bits/locale_classes.tcc:137:5, line:169:5>
  (DeclStmt 0x9d55068 <line:140:7, col:44>
    0x9d54fe0 "const string_type __one =
      (ParenListExpr 0x9d55048 <col:30, col:43> 'const string_type':'const basic_string<_CharT>'
        (DeclRefExpr 0x9d55014 <col:31> 'const _CharT *' lvalue ParmVar 0x9d54db0 '__lo1' 'const _CharT *')
        (DeclRefExpr 0x9d5502c <col:38> 'const _CharT *' lvalue ParmVar 0x9d54e00 '__hi1' 'const _CharT *'))")
  (DeclStmt 0x9d55108 <line:141:7, col:44>
    0x9d55080 "const string_type __two =
      (ParenListExpr 0x9d550e8 <col:30, col:43> 'const string_type':'const basic_string<_CharT>'
        (DeclRefExpr 0x9d550b4 <col:31> 'const _CharT *' lvalue ParmVar 0x9d54e50 '__lo2' 'const _CharT *')
        (DeclRefExpr 0x9d550cc <col:38> 'const _CharT *' lvalue ParmVar 0x9d54ea0 '__hi2' 'const _CharT *'))")
  (DeclStmt 0x9d551d8 <line:143:7, col:40>
    0x9d55130 "const _CharT *__p =
      (CallExpr 0x9d551b8 <col:27, col:39> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d55180 <col:27, col:33> '<dependent type>' lvalue
          (DeclRefExpr 0x9d55164 <col:27> 'const string_type':'const basic_string<_CharT>' lvalue Var 0x9d54fe0 '__one' 'const string_type':'const basic_string<_CharT>')))")
  (DeclStmt 0x9d55388 <line:144:7, col:59>
    0x9d55200 "const _CharT *__pend =
      (CXXOperatorCallExpr 0x9d55360 <col:30, col:58> '<dependent type>'
        (UnresolvedLookupExpr 0x9d55318 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9ce1500 0x9ce2100 0x9cb8030 0x9cb8830)
        (CallExpr 0x9d55288 <col:30, col:41> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9d55250 <col:30, col:36> '<dependent type>' lvalue
            (DeclRefExpr 0x9d55234 <col:30> 'const string_type':'const basic_string<_CharT>' lvalue Var 0x9d54fe0 '__one' 'const string_type':'const basic_string<_CharT>')))
        (CallExpr 0x9d552f8 <col:45, col:58> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9d552c0 <col:45, col:51> '<dependent type>' lvalue
            (DeclRefExpr 0x9d552a4 <col:45> 'const string_type':'const basic_string<_CharT>' lvalue Var 0x9d54fe0 '__one' 'const string_type':'const basic_string<_CharT>'))))")
  (DeclStmt 0x9d55458 <line:145:7, col:40>
    0x9d553b0 "const _CharT *__q =
      (CallExpr 0x9d55438 <col:27, col:39> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d55400 <col:27, col:33> '<dependent type>' lvalue
          (DeclRefExpr 0x9d553e4 <col:27> 'const string_type':'const basic_string<_CharT>' lvalue Var 0x9d55080 '__two' 'const string_type':'const basic_string<_CharT>')))")
  (DeclStmt 0x9d55608 <line:146:7, col:59>
    0x9d55480 "const _CharT *__qend =
      (CXXOperatorCallExpr 0x9d555e0 <col:30, col:58> '<dependent type>'
        (UnresolvedLookupExpr 0x9d55598 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9ce1500 0x9ce2100 0x9cb8030 0x9cb8830)
        (CallExpr 0x9d55508 <col:30, col:41> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9d554d0 <col:30, col:36> '<dependent type>' lvalue
            (DeclRefExpr 0x9d554b4 <col:30> 'const string_type':'const basic_string<_CharT>' lvalue Var 0x9d55080 '__two' 'const string_type':'const basic_string<_CharT>')))
        (CallExpr 0x9d55578 <col:45, col:58> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9d55540 <col:45, col:51> '<dependent type>' lvalue
            (DeclRefExpr 0x9d55524 <col:45> 'const string_type':'const basic_string<_CharT>' lvalue Var 0x9d55080 '__two' 'const string_type':'const basic_string<_CharT>'))))")
  (ForStmt 0x9d55eb8 <line:151:7, line:168:2>
    <<<NULL>>>
    <<<NULL>>>
    <<<NULL>>>
    <<<NULL>>>
    (CompoundStmt 0x9d55e88 <line:152:2, line:168:2>
      (DeclStmt 0x9d556f0 <line:153:4, col:42>
        0x9d55630 "const int __res =
          (CallExpr 0x9d556c8 <col:22, col:41> '<dependent type>'
            (MemberExpr 0x9d55678 <col:22> '<bound member function type>' ->_M_compare 0x9bf6420
              (CXXThisExpr 0x9d55668 <col:22> 'const collate<_CharT> *' this))
            (DeclRefExpr 0x9d55698 <col:33> 'const _CharT *' lvalue Var 0x9d55130 '__p' 'const _CharT *')
            (DeclRefExpr 0x9d556b0 <col:38> 'const _CharT *' lvalue Var 0x9d553b0 '__q' 'const _CharT *'))")
      (IfStmt 0x9d55770 <line:154:4, line:155:13>
        <<<NULL>>>
        (ImplicitCastExpr 0x9d55728 <line:154:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0x9d55718 <col:8> 'int' <LValueToRValue>
            (DeclRefExpr 0x9d55700 <col:8> 'const int' lvalue Var 0x9d55630 '__res' 'const int')))
        (ReturnStmt 0x9d55760 <line:155:6, col:13>
          (ImplicitCastExpr 0x9d55750 <col:13> 'int' <LValueToRValue>
            (DeclRefExpr 0x9d55734 <col:13> 'const int' lvalue Var 0x9d55630 '__res' 'const int')))
        <<<NULL>>>)
      (CompoundAssignOperator 0x9d558c0 <line:157:4, col:42> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
        (DeclRefExpr 0x9d5578c <col:4> 'const _CharT *' lvalue Var 0x9d55130 '__p' 'const _CharT *')
        (CallExpr 0x9d558a0 <col:11, col:42> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9d55850 <col:11, col:32> '<dependent type>' lvalue)
          (DeclRefExpr 0x9d55884 <col:39> 'const _CharT *' lvalue Var 0x9d55130 '__p' 'const _CharT *')))
      (CompoundAssignOperator 0x9d55a10 <line:158:4, col:42> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
        (DeclRefExpr 0x9d558e0 <col:4> 'const _CharT *' lvalue Var 0x9d553b0 '__q' 'const _CharT *')
        (CallExpr 0x9d559f0 <col:11, col:42> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9d559a0 <col:11, col:32> '<dependent type>' lvalue)
          (DeclRefExpr 0x9d559d4 <col:39> 'const _CharT *' lvalue Var 0x9d553b0 '__q' 'const _CharT *')))
      (IfStmt 0x9d55dd8 <line:159:4, line:164:13>
        <<<NULL>>>
        (BinaryOperator 0x9d55b90 <line:159:8, col:32> '<dependent type>' '&&'
          (CXXOperatorCallExpr 0x9d55ab8 <col:8, col:15> '<dependent type>'
            (UnresolvedLookupExpr 0x9d55a60 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90 0x9cb91e0 0x9cb9c50 0x9cba490 0x9cbaa00)
            (DeclRefExpr 0x9d55a30 <col:8> 'const _CharT *' lvalue Var 0x9d55130 '__p' 'const _CharT *')
            (DeclRefExpr 0x9d55a48 <col:15> 'const _CharT *' lvalue Var 0x9d55200 '__pend' 'const _CharT *'))
          (CXXOperatorCallExpr 0x9d55b68 <col:25, col:32> '<dependent type>'
            (UnresolvedLookupExpr 0x9d55b10 <col:29, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90 0x9cb91e0 0x9cb9c50 0x9cba490 0x9cbaa00)
            (DeclRefExpr 0x9d55adc <col:25> 'const _CharT *' lvalue Var 0x9d553b0 '__q' 'const _CharT *')
            (DeclRefExpr 0x9d55af4 <col:32> 'const _CharT *' lvalue Var 0x9d55480 '__qend' 'const _CharT *')))
        (ReturnStmt 0x9d55bc0 <line:160:6, col:13>
          (IntegerLiteral 0x9d55ba8 <col:13> 'int' 0))
        (IfStmt 0x9d55db8 <line:161:9, line:164:13>
          <<<NULL>>>
          (CXXOperatorCallExpr 0x9d55c58 <line:161:13, col:20> '<dependent type>'
            (UnresolvedLookupExpr 0x9d55c00 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90 0x9cb91e0 0x9cb9c50 0x9cba490 0x9cbaa00)
            (DeclRefExpr 0x9d55bd0 <col:13> 'const _CharT *' lvalue Var 0x9d55130 '__p' 'const _CharT *')
            (DeclRefExpr 0x9d55be8 <col:20> 'const _CharT *' lvalue Var 0x9d55200 '__pend' 'const _CharT *'))
          (ReturnStmt 0x9d55cb0 <line:162:6, col:14>
            (UnaryOperator 0x9d55c98 <col:13, col:14> 'int' prefix '-'
              (IntegerLiteral 0x9d55c80 <col:14> 'int' 1)))
          (IfStmt 0x9d55d98 <line:163:9, line:164:13>
            <<<NULL>>>
            (CXXOperatorCallExpr 0x9d55d48 <line:163:13, col:20> '<dependent type>'
              (UnresolvedLookupExpr 0x9d55cf0 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90 0x9cb91e0 0x9cb9c50 0x9cba490 0x9cbaa00)
              (DeclRefExpr 0x9d55cc0 <col:13> 'const _CharT *' lvalue Var 0x9d553b0 '__q' 'const _CharT *')
              (DeclRefExpr 0x9d55cd8 <col:20> 'const _CharT *' lvalue Var 0x9d55480 '__qend' 'const _CharT *'))
            (ReturnStmt 0x9d55d88 <line:164:6, col:13>
              (IntegerLiteral 0x9d55d70 <col:13> 'int' 1))
            <<<NULL>>>)))
      (UnaryOperator 0x9d55e28 <line:166:4, col:7> '<dependent type>' postfix '++'
        (DeclRefExpr 0x9d55df4 <col:4> 'const _CharT *' lvalue Var 0x9d55130 '__p' 'const _CharT *'))
      (UnaryOperator 0x9d55e70 <line:167:4, col:7> '<dependent type>' postfix '++'
        (DeclRefExpr 0x9d55e3c <col:4> 'const _CharT *' lvalue Var 0x9d553b0 '__q' 'const _CharT *')))))


    typename collate<_CharT>::string_type do_transform(const _CharT *__lo, const _CharT *__hi) const (CompoundStmt 0x9d572e0 </usr/include/c++/4.6/bits/locale_classes.tcc:175:5, line:225:5>
  (DeclStmt 0x9d56468 <line:176:7, col:24>
    0x9d56430 "string_type __ret")
  (DeclStmt 0x9d56508 <line:179:7, col:42>
    0x9d56480 "const string_type __str =
      (ParenListExpr 0x9d564e8 <col:30, col:41> 'const string_type':'const basic_string<_CharT>'
        (DeclRefExpr 0x9d564b4 <col:31> 'const _CharT *' lvalue ParmVar 0x9d561e0 '__lo' 'const _CharT *')
        (DeclRefExpr 0x9d564cc <col:37> 'const _CharT *' lvalue ParmVar 0x9d56230 '__hi' 'const _CharT *'))")
  (DeclStmt 0x9d565d8 <line:181:7, col:40>
    0x9d56530 "const _CharT *__p =
      (CallExpr 0x9d565b8 <col:27, col:39> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d56580 <col:27, col:33> '<dependent type>' lvalue
          (DeclRefExpr 0x9d56564 <col:27> 'const string_type':'const basic_string<_CharT>' lvalue Var 0x9d56480 '__str' 'const string_type':'const basic_string<_CharT>')))")
  (DeclStmt 0x9d56788 <line:182:7, col:59>
    0x9d56600 "const _CharT *__pend =
      (CXXOperatorCallExpr 0x9d56760 <col:30, col:58> '<dependent type>'
        (UnresolvedLookupExpr 0x9d56718 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9ce1500 0x9ce2100 0x9cb8030 0x9cb8830)
        (CallExpr 0x9d56688 <col:30, col:41> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9d56650 <col:30, col:36> '<dependent type>' lvalue
            (DeclRefExpr 0x9d56634 <col:30> 'const string_type':'const basic_string<_CharT>' lvalue Var 0x9d56480 '__str' 'const string_type':'const basic_string<_CharT>')))
        (CallExpr 0x9d566f8 <col:45, col:58> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9d566c0 <col:45, col:51> '<dependent type>' lvalue
            (DeclRefExpr 0x9d566a4 <col:45> 'const string_type':'const basic_string<_CharT>' lvalue Var 0x9d56480 '__str' 'const string_type':'const basic_string<_CharT>'))))")
  (DeclStmt 0x9d568b0 <line:184:7, col:39>
    0x9d567a0 "size_t __len =
      (BinaryOperator 0x9d56898 <col:22, col:38> '<dependent type>' '*'
        (ParenExpr 0x9d56868 <col:22, col:34> '<dependent type>'
          (CXXOperatorCallExpr 0x9d56840 <col:23, col:30> '<dependent type>'
            (UnresolvedLookupExpr 0x9d56808 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
            (DeclRefExpr 0x9d567d4 <col:23> 'const _CharT *' lvalue ParmVar 0x9d56230 '__hi' 'const _CharT *')
            (DeclRefExpr 0x9d567ec <col:30> 'const _CharT *' lvalue ParmVar 0x9d561e0 '__lo' 'const _CharT *')))
        (IntegerLiteral 0x9d56880 <col:38> 'int' 2))")
  (DeclStmt 0x9d56988 <line:186:7, col:38>
    0x9d568f0 "_CharT *__c =
      (CXXNewExpr 0x9d56948 <col:21, col:25> '_CharT *'
        (DeclRefExpr 0x9d56924 <col:32> 'size_t':'unsigned int' lvalue Var 0x9d567a0 '__len' 'size_t':'unsigned int'))")
  (IfStmt 0x9d571e0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/locale_classes.tcc:215:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9d56998 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x9d571c8 </usr/include/c++/4.6/bits/locale_classes.tcc:189:2, line:215:2>
      (ForStmt 0x9d571a0 <line:193:4, line:214:6>
        <<<NULL>>>
        <<<NULL>>>
        <<<NULL>>>
        <<<NULL>>>
        (CompoundStmt 0x9d57170 <line:194:6, line:214:6>
          (DeclStmt 0x9d56a88 <line:196:8, col:52>
            0x9d569b0 "size_t __res =
              (CallExpr 0x9d56a60 <col:23, col:51> '<dependent type>'
                (MemberExpr 0x9d569f8 <col:23> '<bound member function type>' ->_M_transform 0x9d54af0
                  (CXXThisExpr 0x9d569e8 <col:23> 'const collate<_CharT> *' this))
                (DeclRefExpr 0x9d56a18 <col:36> '_CharT *' lvalue Var 0x9d568f0 '__c' '_CharT *')
                (DeclRefExpr 0x9d56a30 <col:41> 'const _CharT *' lvalue Var 0x9d56530 '__p' 'const _CharT *')
                (DeclRefExpr 0x9d56a48 <col:46> 'size_t':'unsigned int' lvalue Var 0x9d567a0 '__len' 'size_t':'unsigned int'))")
          (IfStmt 0x9d56da8 <line:199:8, line:205:3>
            <<<NULL>>>
            (BinaryOperator 0x9d56ae8 <line:199:12, col:21> '_Bool' '>='
              (ImplicitCastExpr 0x9d56ac8 <col:12> 'size_t':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0x9d56a98 <col:12> 'size_t':'unsigned int' lvalue Var 0x9d569b0 '__res' 'size_t':'unsigned int'))
              (ImplicitCastExpr 0x9d56ad8 <col:21> 'size_t':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0x9d56ab0 <col:21> 'size_t':'unsigned int' lvalue Var 0x9d567a0 '__len' 'size_t':'unsigned int')))
            (CompoundStmt 0x9d56d88 <line:200:3, line:205:3>
              (BinaryOperator 0x9d56b80 <line:201:5, col:21> 'size_t':'unsigned int' lvalue '='
                (DeclRefExpr 0x9d56b00 <col:5> 'size_t':'unsigned int' lvalue Var 0x9d567a0 '__len' 'size_t':'unsigned int')
                (BinaryOperator 0x9d56b68 <col:13, col:21> 'unsigned int' '+'
                  (ImplicitCastExpr 0x9d56b48 <col:13> 'size_t':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0x9d56b18 <col:13> 'size_t':'unsigned int' lvalue Var 0x9d569b0 '__res' 'size_t':'unsigned int'))
                  (ImplicitCastExpr 0x9d56b58 <col:21> 'unsigned int' <IntegralCast>
                    (IntegerLiteral 0x9d56b30 <col:21> 'int' 1))))
              (BinaryOperator 0x9d56c10 <line:202:5, col:26> '<dependent type>' ','
                (CXXDeleteExpr 0x9d56bb0 <col:5, col:15> 'void'
                  (DeclRefExpr 0x9d56b98 <col:15> '_CharT *' lvalue Var 0x9d568f0 '__c' '_CharT *'))
                (BinaryOperator 0x9d56bf8 <col:20, col:26> '<dependent type>' '='
                  (DeclRefExpr 0x9d56bc8 <col:20> '_CharT *' lvalue Var 0x9d568f0 '__c' '_CharT *')
                  (IntegerLiteral 0x9d56be0 <col:26> 'int' 0)))
              (BinaryOperator 0x9d56ca0 <line:203:5, col:15> '<dependent type>' '='
                (DeclRefExpr 0x9d56c28 <col:5> '_CharT *' lvalue Var 0x9d568f0 '__c' '_CharT *')
                (CXXNewExpr 0x9d56c60 <col:11, col:15> '_CharT *'
                  (DeclRefExpr 0x9d56c40 <col:22> 'size_t':'unsigned int' lvalue Var 0x9d567a0 '__len' 'size_t':'unsigned int')))
              (BinaryOperator 0x9d56d70 <line:204:5, col:41> '<dependent type>' '='
                (DeclRefExpr 0x9d56cb8 <col:5> 'size_t':'unsigned int' lvalue Var 0x9d569b0 '__res' 'size_t':'unsigned int')
                (CallExpr 0x9d56d48 <col:13, col:41> '<dependent type>'
                  (MemberExpr 0x9d56ce0 <col:13> '<bound member function type>' ->_M_transform 0x9d54af0
                    (CXXThisExpr 0x9d56cd0 <col:13> 'const collate<_CharT> *' this))
                  (DeclRefExpr 0x9d56d00 <col:26> '_CharT *' lvalue Var 0x9d568f0 '__c' '_CharT *')
                  (DeclRefExpr 0x9d56d18 <col:31> 'const _CharT *' lvalue Var 0x9d56530 '__p' 'const _CharT *')
                  (DeclRefExpr 0x9d56d30 <col:36> 'size_t':'unsigned int' lvalue Var 0x9d567a0 '__len' 'size_t':'unsigned int'))))
            <<<NULL>>>)
          (CallExpr 0x9d56e48 <line:207:8, col:31> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9d56de0 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0x9d56dc4 <col:8> 'string_type':'basic_string<_CharT>' lvalue Var 0x9d56430 '__ret' 'string_type':'basic_string<_CharT>'))
            (DeclRefExpr 0x9d56e14 <col:21> '_CharT *' lvalue Var 0x9d568f0 '__c' '_CharT *')
            (DeclRefExpr 0x9d56e2c <col:26> 'size_t':'unsigned int' lvalue Var 0x9d569b0 '__res' 'size_t':'unsigned int'))
          (CompoundAssignOperator 0x9d56fa0 <line:208:8, col:46> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
            (DeclRefExpr 0x9d56e6c <col:8> 'const _CharT *' lvalue Var 0x9d56530 '__p' 'const _CharT *')
            (CallExpr 0x9d56f80 <col:15, col:46> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9d56f30 <col:15, col:36> '<dependent type>' lvalue)
              (DeclRefExpr 0x9d56f64 <col:43> 'const _CharT *' lvalue Var 0x9d56530 '__p' 'const _CharT *')))
          (IfStmt 0x9d57078 <line:209:8, line:210:3>
            <<<NULL>>>
            (CXXOperatorCallExpr 0x9d57048 <line:209:12, col:19> '<dependent type>'
              (UnresolvedLookupExpr 0x9d56ff0 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90 0x9cb91e0 0x9cb9c50 0x9cba490 0x9cbaa00)
              (DeclRefExpr 0x9d56fc0 <col:12> 'const _CharT *' lvalue Var 0x9d56530 '__p' 'const _CharT *')
              (DeclRefExpr 0x9d56fd8 <col:19> 'const _CharT *' lvalue Var 0x9d56600 '__pend' 'const _CharT *'))
            (BreakStmt 0x9d57070 <line:210:3>)
            <<<NULL>>>)
          (UnaryOperator 0x9d570c8 <line:212:8, col:11> '<dependent type>' postfix '++'
            (DeclRefExpr 0x9d57094 <col:8> 'const _CharT *' lvalue Var 0x9d56530 '__p' 'const _CharT *'))
          (CallExpr 0x9d57150 <line:213:8, col:32> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9d570f8 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0x9d570dc <col:8> 'string_type':'basic_string<_CharT>' lvalue Var 0x9d56430 '__ret' 'string_type':'basic_string<_CharT>'))
            (CXXUnresolvedConstructExpr 0x9d57138 <col:24, col:31> '_CharT')))))
    <<<NULL>>>)
  (IfStmt 0x9d57268 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/locale_classes.tcc:220:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9d57200 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9d57250 </usr/include/c++/4.6/bits/locale_classes.tcc:217:2, line:220:2>
      (CXXDeleteExpr 0x9d57228 <line:218:4, col:14> 'void'
        (DeclRefExpr 0x9d57210 <col:14> '_CharT *' lvalue Var 0x9d568f0 '__c' '_CharT *'))
      (NullStmt 0x9d57240 <line:219:27>))
    <<<NULL>>>)
  (CXXDeleteExpr 0x9d572a0 <line:222:7, col:17> 'void'
    (DeclRefExpr 0x9d57284 <col:17> '_CharT *' lvalue Var 0x9d568f0 '__c' '_CharT *'))
  (ReturnStmt 0x9d572d0 <line:224:7, col:14>
    (DeclRefExpr 0x9d572b8 <col:14> 'string_type':'basic_string<_CharT>' lvalue Var 0x9d56430 '__ret' 'string_type':'basic_string<_CharT>')))


    long do_hash(const _CharT *__lo, const _CharT *__hi) const (CompoundStmt 0x9d58bd0 </usr/include/c++/4.6/bits/locale_classes.tcc:231:5, line:239:5>
  (DeclStmt 0x9d576d0 <line:232:7, col:30>
    0x9d57670 "unsigned long __val =
      (ImplicitCastExpr 0x9d576c0 <col:29> 'unsigned long' <IntegralCast>
        (IntegerLiteral 0x9d576a8 <col:29> 'int' 0))")
  (ForStmt 0x9d58b38 <line:233:7, line:237:19>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9d57758 <line:233:14, col:21> '<dependent type>'
      (UnresolvedLookupExpr 0x9d57710 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40ad0 0x9b57c70 0x9b5ddb0 0x9cbc120 0x9cbc650 0x9cbcb80)
      (DeclRefExpr 0x9d576e0 <col:14> 'const _CharT *' lvalue ParmVar 0x9d574f0 '__lo' 'const _CharT *')
      (DeclRefExpr 0x9d576f8 <col:21> 'const _CharT *' lvalue ParmVar 0x9d57540 '__hi' 'const _CharT *'))
    (UnaryOperator 0x9d57798 <col:27, col:29> '<dependent type>' prefix '++'
      (DeclRefExpr 0x9d5777c <col:29> 'const _CharT *' lvalue ParmVar 0x9d574f0 '__lo' 'const _CharT *'))
    (BinaryOperator 0x9d58b20 <line:234:2, line:237:19> '<dependent type>' '='
      (DeclRefExpr 0x9d577ac <line:234:2> 'unsigned long' lvalue Var 0x9d57670 '__val' 'unsigned long')
      (CXXOperatorCallExpr 0x9d58af8 <line:235:4, line:237:19> '<dependent type>'
        (UnresolvedLookupExpr 0x9d58ab0 <line:235:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9ce1500 0x9ce2100 0x9cb8030 0x9cb8830)
        (UnaryOperator 0x9d577e0 <col:4, col:5> '<dependent type>' prefix '*'
          (DeclRefExpr 0x9d577c4 <col:5> 'const _CharT *' lvalue ParmVar 0x9d574f0 '__lo' 'const _CharT *'))
        (ParenExpr 0x9d58a98 <col:12, line:237:19> 'unsigned long'
          (BinaryOperator 0x9d58a80 <line:235:13, line:237:18> 'unsigned long' '|'
            (ParenExpr 0x9d57850 <line:235:13, col:24> 'unsigned long'
              (BinaryOperator 0x9d57838 <col:14, col:23> 'unsigned long' '<<'
                (ImplicitCastExpr 0x9d57828 <col:14> 'unsigned long' <LValueToRValue>
                  (DeclRefExpr 0x9d577f4 <col:14> 'unsigned long' lvalue Var 0x9d57670 '__val' 'unsigned long'))
                (IntegerLiteral 0x9d57810 <col:23> 'int' 7)))
            (ParenExpr 0x9d58a68 <line:236:8, line:237:18> 'unsigned long'
              (BinaryOperator 0x9d58a50 <line:236:9, line:237:17> 'unsigned long' '>>'
                (ImplicitCastExpr 0x9d58a08 <line:236:9> 'unsigned long' <LValueToRValue>
                  (DeclRefExpr 0x9d57864 <col:9> 'unsigned long' lvalue Var 0x9d57670 '__val' 'unsigned long'))
                (ParenExpr 0x9d589f0 <col:18, line:237:17> 'int'
                  (BinaryOperator 0x9d589d8 <line:236:19, line:237:16> 'int' '-'
                    (ImplicitCastExpr 0x9d589c8 <line:236:19, line:237:5> 'int' <LValueToRValue>
                      (DeclRefExpr 0x9d5898c <line:236:19, line:237:5> 'const int' lvalue Var 0x9d58770 '__digits' 'const int'))
                    (IntegerLiteral 0x9d589b0 <col:16> 'int' 7))))))))))
  (ReturnStmt 0x9d58bc0 <line:238:7, col:37>
    (CXXStaticCastExpr 0x9d58ba8 <col:14, col:37> 'long' static_cast<long> <NoOp>
      (ImplicitCastExpr 0x9d58b98 <col:32> 'long' <IntegralCast>
        (ImplicitCastExpr 0x9d58b88 <col:32> 'unsigned long' <LValueToRValue>
          (DeclRefExpr 0x9d58b5c <col:32> 'unsigned long' lvalue Var 0x9d57670 '__val' 'unsigned long'))))))


    class collate : public locale::facet {
        class collate;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
    protected:
    protected:
        __c_locale _M_c_locale_collate;
    public:
    public:
        static locale::id id;
        collate(size_t __refs);
        collate(__c_locale __cloc, size_t __refs);
        int compare(const char *__lo1, const char *__hi1, const char *__lo2, const char *__hi2) const;
        string_type transform(const char *__lo, const char *__hi) const;
        long hash(const char *__lo, const char *__hi) const;
        int _M_compare(const char *, const char *) const throw();
        size_t _M_transform(char *, const char *, size_t) const throw();
    protected:
    protected:
        virtual void ~collate();
        virtual int do_compare(const char *__lo1, const char *__hi1, const char *__lo2, const char *__hi2) const;
        virtual string_type do_transform(const char *__lo, const char *__hi) const;
        virtual long do_hash(const char *__lo, const char *__hi) const;
        inline std::collate<char> &operator=(const std::collate<char> &);
    };
    class collate_byname : public collate<char> {
        class collate_byname;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
        collate_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~collate_byname();
        inline std::collate_byname<char> &operator=(const std::collate_byname<char> &);
    };
    class collate : public locale::facet {
        class collate;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
    protected:
    protected:
        __c_locale _M_c_locale_collate;
    public:
    public:
        static locale::id id;
        collate(size_t __refs);
        collate(__c_locale __cloc, size_t __refs);
        int compare(const wchar_t *__lo1, const wchar_t *__hi1, const wchar_t *__lo2, const wchar_t *__hi2) const;
        string_type transform(const wchar_t *__lo, const wchar_t *__hi) const;
        long hash(const wchar_t *__lo, const wchar_t *__hi) const;
        int _M_compare(const wchar_t *, const wchar_t *) const throw();
        size_t _M_transform(wchar_t *, const wchar_t *, size_t) const throw();
    protected:
    protected:
        virtual void ~collate();
        virtual int do_compare(const wchar_t *__lo1, const wchar_t *__hi1, const wchar_t *__lo2, const wchar_t *__hi2) const;
        virtual string_type do_transform(const wchar_t *__lo, const wchar_t *__hi) const;
        virtual long do_hash(const wchar_t *__lo, const wchar_t *__hi) const;
        inline std::collate<wchar_t> &operator=(const std::collate<wchar_t> &);
    };
    class collate_byname : public collate<wchar_t> {
        class collate_byname;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
        collate_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~collate_byname();
        inline std::collate_byname<wchar_t> &operator=(const std::collate_byname<wchar_t> &);
    };
}
namespace std {
    enum _Ios_Fmtflags {
        _S_boolalpha = (ImplicitCastExpr 0x9d5b558 </usr/include/c++/4.6/bits/ios_base.h:54:23, col:29> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9d5aba0 <col:23, col:29> 'long' '<<'
    (IntegerLiteral 0x9d5ab70 <col:23> 'long' 1)
    (IntegerLiteral 0x9d5ab88 <col:29> 'int' 0)))
,
        _S_dec = (ImplicitCastExpr 0x9d5b568 </usr/include/c++/4.6/bits/ios_base.h:55:18, col:24> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9d5ac28 <col:18, col:24> 'long' '<<'
    (IntegerLiteral 0x9d5abf8 <col:18> 'long' 1)
    (IntegerLiteral 0x9d5ac10 <col:24> 'int' 1)))
,
        _S_fixed = (ImplicitCastExpr 0x9d5b578 </usr/include/c++/4.6/bits/ios_base.h:56:20, col:26> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9d5aca8 <col:20, col:26> 'long' '<<'
    (IntegerLiteral 0x9d5ac78 <col:20> 'long' 1)
    (IntegerLiteral 0x9d5ac90 <col:26> 'int' 2)))
,
        _S_hex = (ImplicitCastExpr 0x9d5b588 </usr/include/c++/4.6/bits/ios_base.h:57:18, col:24> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9d5ad28 <col:18, col:24> 'long' '<<'
    (IntegerLiteral 0x9d5acf8 <col:18> 'long' 1)
    (IntegerLiteral 0x9d5ad10 <col:24> 'int' 3)))
,
        _S_internal = (ImplicitCastExpr 0x9d5b598 </usr/include/c++/4.6/bits/ios_base.h:58:22, col:28> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9d5ada8 <col:22, col:28> 'long' '<<'
    (IntegerLiteral 0x9d5ad78 <col:22> 'long' 1)
    (IntegerLiteral 0x9d5ad90 <col:28> 'int' 4)))
,
        _S_left = (ImplicitCastExpr 0x9d5b5a8 </usr/include/c++/4.6/bits/ios_base.h:59:19, col:25> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9d5ae28 <col:19, col:25> 'long' '<<'
    (IntegerLiteral 0x9d5adf8 <col:19> 'long' 1)
    (IntegerLiteral 0x9d5ae10 <col:25> 'int' 5)))
,
        _S_oct = (ImplicitCastExpr 0x9d5b5b8 </usr/include/c++/4.6/bits/ios_base.h:60:18, col:24> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9d5aea8 <col:18, col:24> 'long' '<<'
    (IntegerLiteral 0x9d5ae78 <col:18> 'long' 1)
    (IntegerLiteral 0x9d5ae90 <col:24> 'int' 6)))
,
        _S_right = (ImplicitCastExpr 0x9d5b5c8 </usr/include/c++/4.6/bits/ios_base.h:61:20, col:26> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9d5af28 <col:20, col:26> 'long' '<<'
    (IntegerLiteral 0x9d5aef8 <col:20> 'long' 1)
    (IntegerLiteral 0x9d5af10 <col:26> 'int' 7)))
,
        _S_scientific = (ImplicitCastExpr 0x9d5b5d8 </usr/include/c++/4.6/bits/ios_base.h:62:24, col:30> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9d5afa8 <col:24, col:30> 'long' '<<'
    (IntegerLiteral 0x9d5af78 <col:24> 'long' 1)
    (IntegerLiteral 0x9d5af90 <col:30> 'int' 8)))
,
        _S_showbase = (ImplicitCastExpr 0x9d5b5e8 </usr/include/c++/4.6/bits/ios_base.h:63:22, col:28> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9d5b028 <col:22, col:28> 'long' '<<'
    (IntegerLiteral 0x9d5aff8 <col:22> 'long' 1)
    (IntegerLiteral 0x9d5b010 <col:28> 'int' 9)))
,
        _S_showpoint = (ImplicitCastExpr 0x9d5b5f8 </usr/include/c++/4.6/bits/ios_base.h:64:23, col:29> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9d5b0a8 <col:23, col:29> 'long' '<<'
    (IntegerLiteral 0x9d5b078 <col:23> 'long' 1)
    (IntegerLiteral 0x9d5b090 <col:29> 'int' 10)))
,
        _S_showpos = (ImplicitCastExpr 0x9d5b608 </usr/include/c++/4.6/bits/ios_base.h:65:21, col:27> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9d5b128 <col:21, col:27> 'long' '<<'
    (IntegerLiteral 0x9d5b0f8 <col:21> 'long' 1)
    (IntegerLiteral 0x9d5b110 <col:27> 'int' 11)))
,
        _S_skipws = (ImplicitCastExpr 0x9d5b618 </usr/include/c++/4.6/bits/ios_base.h:66:20, col:26> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9d5b1a8 <col:20, col:26> 'long' '<<'
    (IntegerLiteral 0x9d5b178 <col:20> 'long' 1)
    (IntegerLiteral 0x9d5b190 <col:26> 'int' 12)))
,
        _S_unitbuf = (ImplicitCastExpr 0x9d5b628 </usr/include/c++/4.6/bits/ios_base.h:67:21, col:27> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9d5b228 <col:21, col:27> 'long' '<<'
    (IntegerLiteral 0x9d5b1f8 <col:21> 'long' 1)
    (IntegerLiteral 0x9d5b210 <col:27> 'int' 13)))
,
        _S_uppercase = (ImplicitCastExpr 0x9d5b638 </usr/include/c++/4.6/bits/ios_base.h:68:23, col:29> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9d5b2a8 <col:23, col:29> 'long' '<<'
    (IntegerLiteral 0x9d5b278 <col:23> 'long' 1)
    (IntegerLiteral 0x9d5b290 <col:29> 'int' 14)))
,
        _S_adjustfield = (ImplicitCastExpr 0x9d5b648 </usr/include/c++/4.6/bits/ios_base.h:69:25, col:46> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9d5b358 <col:25, col:46> 'long' '|'
    (BinaryOperator 0x9d5b328 <col:25, col:35> 'long' '|'
      (DeclRefExpr 0x9d5b2f4 <col:25> 'long' EnumConstant 0x9d5ae40 '_S_left' 'enum std::_Ios_Fmtflags')
      (DeclRefExpr 0x9d5b30c <col:35> 'long' EnumConstant 0x9d5af40 '_S_right' 'enum std::_Ios_Fmtflags'))
    (DeclRefExpr 0x9d5b340 <col:46> 'long' EnumConstant 0x9d5adc0 '_S_internal' 'enum std::_Ios_Fmtflags')))
,
        _S_basefield = (ImplicitCastExpr 0x9d5b658 </usr/include/c++/4.6/bits/ios_base.h:70:23, col:41> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9d5b408 <col:23, col:41> 'long' '|'
    (BinaryOperator 0x9d5b3d8 <col:23, col:32> 'long' '|'
      (DeclRefExpr 0x9d5b3a4 <col:23> 'long' EnumConstant 0x9d5ac40 '_S_dec' 'enum std::_Ios_Fmtflags')
      (DeclRefExpr 0x9d5b3bc <col:32> 'long' EnumConstant 0x9d5aec0 '_S_oct' 'enum std::_Ios_Fmtflags'))
    (DeclRefExpr 0x9d5b3f0 <col:41> 'long' EnumConstant 0x9d5ad40 '_S_hex' 'enum std::_Ios_Fmtflags')))
,
        _S_floatfield = (ImplicitCastExpr 0x9d5b668 </usr/include/c++/4.6/bits/ios_base.h:71:24, col:40> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9d5b488 <col:24, col:40> 'long' '|'
    (DeclRefExpr 0x9d5b454 <col:24> 'long' EnumConstant 0x9d5afc0 '_S_scientific' 'enum std::_Ios_Fmtflags')
    (DeclRefExpr 0x9d5b46c <col:40> 'long' EnumConstant 0x9d5acc0 '_S_fixed' 'enum std::_Ios_Fmtflags')))
,
        _S_ios_fmtflags_end = (ImplicitCastExpr 0x9d5b678 </usr/include/c++/4.6/bits/ios_base.h:72:29, col:35> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9d5b508 <col:29, col:35> 'long' '<<'
    (IntegerLiteral 0x9d5b4d8 <col:29> 'long' 1)
    (IntegerLiteral 0x9d5b4f0 <col:35> 'int' 16)))

    };
    inline std::_Ios_Fmtflags operator&(std::_Ios_Fmtflags __a, std::_Ios_Fmtflags __b) (CompoundStmt 0x9d5b8c0 </usr/include/c++/4.6/bits/ios_base.h:77:3, col:74>
  (ReturnStmt 0x9d5b8b0 <col:5, col:71>
    (CXXFunctionalCastExpr 0x9d5b898 <col:12, col:71> 'enum std::_Ios_Fmtflags' functional cast to enum std::_Ios_Fmtflags <IntegralCast>
      (BinaryOperator 0x9d5b880 <col:26, col:70> 'int' '&'
        (CXXStaticCastExpr 0x9d5b808 <col:26, col:46> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9d5b7f8 <col:43> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9d5b7e8 <col:43> 'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0x9d5b7c0 <col:43> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9d5b690 '__a' 'enum std::_Ios_Fmtflags'))))
        (CXXStaticCastExpr 0x9d5b868 <col:50, col:70> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9d5b858 <col:67> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9d5b848 <col:67> 'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0x9d5b820 <col:67> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9d5b6d0 '__b' 'enum std::_Ios_Fmtflags'))))))))


    inline std::_Ios_Fmtflags operator|(std::_Ios_Fmtflags __a, std::_Ios_Fmtflags __b) (CompoundStmt 0x9d5baf0 </usr/include/c++/4.6/bits/ios_base.h:81:3, col:74>
  (ReturnStmt 0x9d5bae0 <col:5, col:71>
    (CXXFunctionalCastExpr 0x9d5bac8 <col:12, col:71> 'enum std::_Ios_Fmtflags' functional cast to enum std::_Ios_Fmtflags <IntegralCast>
      (BinaryOperator 0x9d5bab0 <col:26, col:70> 'int' '|'
        (CXXStaticCastExpr 0x9d5ba38 <col:26, col:46> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9d5ba28 <col:43> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9d5ba18 <col:43> 'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0x9d5b9f0 <col:43> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9d5b8e0 '__a' 'enum std::_Ios_Fmtflags'))))
        (CXXStaticCastExpr 0x9d5ba98 <col:50, col:70> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9d5ba88 <col:67> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9d5ba78 <col:67> 'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0x9d5ba50 <col:67> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9d5b920 '__b' 'enum std::_Ios_Fmtflags'))))))))


    inline std::_Ios_Fmtflags operator^(std::_Ios_Fmtflags __a, std::_Ios_Fmtflags __b) (CompoundStmt 0x9d5bd20 </usr/include/c++/4.6/bits/ios_base.h:85:3, col:74>
  (ReturnStmt 0x9d5bd10 <col:5, col:71>
    (CXXFunctionalCastExpr 0x9d5bcf8 <col:12, col:71> 'enum std::_Ios_Fmtflags' functional cast to enum std::_Ios_Fmtflags <IntegralCast>
      (BinaryOperator 0x9d5bce0 <col:26, col:70> 'int' '^'
        (CXXStaticCastExpr 0x9d5bc68 <col:26, col:46> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9d5bc58 <col:43> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9d5bc48 <col:43> 'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0x9d5bc20 <col:43> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9d5bb10 '__a' 'enum std::_Ios_Fmtflags'))))
        (CXXStaticCastExpr 0x9d5bcc8 <col:50, col:70> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9d5bcb8 <col:67> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9d5bca8 <col:67> 'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0x9d5bc80 <col:67> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9d5bb50 '__b' 'enum std::_Ios_Fmtflags'))))))))


    inline std::_Ios_Fmtflags operator~(std::_Ios_Fmtflags __a) (CompoundStmt 0x9d5bed0 </usr/include/c++/4.6/bits/ios_base.h:89:3, col:51>
  (ReturnStmt 0x9d5bec0 <col:5, col:48>
    (CXXFunctionalCastExpr 0x9d5bea8 <col:12, col:48> 'enum std::_Ios_Fmtflags' functional cast to enum std::_Ios_Fmtflags <IntegralCast>
      (UnaryOperator 0x9d5be90 <col:26, col:47> 'int' prefix '~'
        (CXXStaticCastExpr 0x9d5be78 <col:27, col:47> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9d5be68 <col:44> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9d5be58 <col:44> 'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0x9d5be30 <col:44> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9d5bd40 '__a' 'enum std::_Ios_Fmtflags'))))))))


    inline const std::_Ios_Fmtflags &operator|=(std::_Ios_Fmtflags &__a, std::_Ios_Fmtflags __b) (CompoundStmt 0x9d5c5d0 </usr/include/c++/4.6/bits/ios_base.h:93:3, col:29>
  (ReturnStmt 0x9d5c5c0 <col:5, col:24>
    (ImplicitCastExpr 0x9d5c5b0 <col:12, col:24> 'const enum std::_Ios_Fmtflags' lvalue <NoOp>
      (BinaryOperator 0x9d5c598 <col:12, col:24> 'enum std::_Ios_Fmtflags' lvalue '='
        (DeclRefExpr 0x9d5c068 <col:12> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9d5bf20 '__a' 'enum std::_Ios_Fmtflags &')
        (CXXOperatorCallExpr 0x9d5c118 <col:18, col:24> 'enum std::_Ios_Fmtflags'
          (ImplicitCastExpr 0x9d5c108 <col:22, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9d5c0d0 <col:22, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9d5b980 'operator|' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
          (ImplicitCastExpr 0x9d5c0b0 <col:18> 'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9d5c080 <col:18> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9d5bf20 '__a' 'enum std::_Ios_Fmtflags &'))
          (ImplicitCastExpr 0x9d5c0c0 <col:24> 'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9d5c098 <col:24> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9d5bf60 '__b' 'enum std::_Ios_Fmtflags')))))))


    inline const std::_Ios_Fmtflags &operator&=(std::_Ios_Fmtflags &__a, std::_Ios_Fmtflags __b) (CompoundStmt 0x9d5c7f8 </usr/include/c++/4.6/bits/ios_base.h:97:3, col:29>
  (ReturnStmt 0x9d5c7e8 <col:5, col:24>
    (ImplicitCastExpr 0x9d5c7d8 <col:12, col:24> 'const enum std::_Ios_Fmtflags' lvalue <NoOp>
      (BinaryOperator 0x9d5c7c0 <col:12, col:24> 'enum std::_Ios_Fmtflags' lvalue '='
        (DeclRefExpr 0x9d5c708 <col:12> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9d5c600 '__a' 'enum std::_Ios_Fmtflags &')
        (CXXOperatorCallExpr 0x9d5c798 <col:18, col:24> 'enum std::_Ios_Fmtflags'
          (ImplicitCastExpr 0x9d5c788 <col:22, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9d5c770 <col:22, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9d5b750 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
          (ImplicitCastExpr 0x9d5c750 <col:18> 'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9d5c720 <col:18> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9d5c600 '__a' 'enum std::_Ios_Fmtflags &'))
          (ImplicitCastExpr 0x9d5c760 <col:24> 'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9d5c738 <col:24> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9d5c640 '__b' 'enum std::_Ios_Fmtflags')))))))


    inline const std::_Ios_Fmtflags &operator^=(std::_Ios_Fmtflags &__a, std::_Ios_Fmtflags __b) (CompoundStmt 0x9d68350 </usr/include/c++/4.6/bits/ios_base.h:101:3, col:29>
  (ReturnStmt 0x9d68340 <col:5, col:24>
    (ImplicitCastExpr 0x9d68330 <col:12, col:24> 'const enum std::_Ios_Fmtflags' lvalue <NoOp>
      (BinaryOperator 0x9d68318 <col:12, col:24> 'enum std::_Ios_Fmtflags' lvalue '='
        (DeclRefExpr 0x9d5c928 <col:12> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9d5c820 '__a' 'enum std::_Ios_Fmtflags &')
        (CXXOperatorCallExpr 0x9d682f0 <col:18, col:24> 'enum std::_Ios_Fmtflags'
          (ImplicitCastExpr 0x9d682e0 <col:22, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9d682c8 <col:22, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9d5bbb0 'operator^' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
          (ImplicitCastExpr 0x9d682a8 <col:18> 'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9d5c940 <col:18> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9d5c820 '__a' 'enum std::_Ios_Fmtflags &'))
          (ImplicitCastExpr 0x9d682b8 <col:24> 'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9d5c958 <col:24> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9d5c860 '__b' 'enum std::_Ios_Fmtflags')))))))


    enum _Ios_Openmode {
        _S_app = (ImplicitCastExpr 0x9d68758 </usr/include/c++/4.6/bits/ios_base.h:106:18, col:24> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9d68400 <col:18, col:24> 'long' '<<'
    (IntegerLiteral 0x9d683d0 <col:18> 'long' 1)
    (IntegerLiteral 0x9d683e8 <col:24> 'int' 0)))
,
        _S_ate = (ImplicitCastExpr 0x9d68768 </usr/include/c++/4.6/bits/ios_base.h:107:18, col:24> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9d68488 <col:18, col:24> 'long' '<<'
    (IntegerLiteral 0x9d68458 <col:18> 'long' 1)
    (IntegerLiteral 0x9d68470 <col:24> 'int' 1)))
,
        _S_bin = (ImplicitCastExpr 0x9d68778 </usr/include/c++/4.6/bits/ios_base.h:108:18, col:24> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9d68508 <col:18, col:24> 'long' '<<'
    (IntegerLiteral 0x9d684d8 <col:18> 'long' 1)
    (IntegerLiteral 0x9d684f0 <col:24> 'int' 2)))
,
        _S_in = (ImplicitCastExpr 0x9d68788 </usr/include/c++/4.6/bits/ios_base.h:109:17, col:23> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9d68588 <col:17, col:23> 'long' '<<'
    (IntegerLiteral 0x9d68558 <col:17> 'long' 1)
    (IntegerLiteral 0x9d68570 <col:23> 'int' 3)))
,
        _S_out = (ImplicitCastExpr 0x9d68798 </usr/include/c++/4.6/bits/ios_base.h:110:18, col:24> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9d68608 <col:18, col:24> 'long' '<<'
    (IntegerLiteral 0x9d685d8 <col:18> 'long' 1)
    (IntegerLiteral 0x9d685f0 <col:24> 'int' 4)))
,
        _S_trunc = (ImplicitCastExpr 0x9d687a8 </usr/include/c++/4.6/bits/ios_base.h:111:20, col:26> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9d68688 <col:20, col:26> 'long' '<<'
    (IntegerLiteral 0x9d68658 <col:20> 'long' 1)
    (IntegerLiteral 0x9d68670 <col:26> 'int' 5)))
,
        _S_ios_openmode_end = (ImplicitCastExpr 0x9d687b8 </usr/include/c++/4.6/bits/ios_base.h:112:29, col:35> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9d68708 <col:29, col:35> 'long' '<<'
    (IntegerLiteral 0x9d686d8 <col:29> 'long' 1)
    (IntegerLiteral 0x9d686f0 <col:35> 'int' 16)))

    };
    inline std::_Ios_Openmode operator&(std::_Ios_Openmode __a, std::_Ios_Openmode __b) (CompoundStmt 0x9d68a00 </usr/include/c++/4.6/bits/ios_base.h:117:3, col:74>
  (ReturnStmt 0x9d689f0 <col:5, col:71>
    (CXXFunctionalCastExpr 0x9d689d8 <col:12, col:71> 'enum std::_Ios_Openmode' functional cast to enum std::_Ios_Openmode <IntegralCast>
      (BinaryOperator 0x9d689c0 <col:26, col:70> 'int' '&'
        (CXXStaticCastExpr 0x9d68948 <col:26, col:46> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9d68938 <col:43> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9d68928 <col:43> 'enum std::_Ios_Openmode' <LValueToRValue>
              (DeclRefExpr 0x9d68900 <col:43> 'enum std::_Ios_Openmode' lvalue ParmVar 0x9d687d0 '__a' 'enum std::_Ios_Openmode'))))
        (CXXStaticCastExpr 0x9d689a8 <col:50, col:70> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9d68998 <col:67> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9d68988 <col:67> 'enum std::_Ios_Openmode' <LValueToRValue>
              (DeclRefExpr 0x9d68960 <col:67> 'enum std::_Ios_Openmode' lvalue ParmVar 0x9d68810 '__b' 'enum std::_Ios_Openmode'))))))))


    inline std::_Ios_Openmode operator|(std::_Ios_Openmode __a, std::_Ios_Openmode __b) (CompoundStmt 0x9d68c30 </usr/include/c++/4.6/bits/ios_base.h:121:3, col:74>
  (ReturnStmt 0x9d68c20 <col:5, col:71>
    (CXXFunctionalCastExpr 0x9d68c08 <col:12, col:71> 'enum std::_Ios_Openmode' functional cast to enum std::_Ios_Openmode <IntegralCast>
      (BinaryOperator 0x9d68bf0 <col:26, col:70> 'int' '|'
        (CXXStaticCastExpr 0x9d68b78 <col:26, col:46> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9d68b68 <col:43> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9d68b58 <col:43> 'enum std::_Ios_Openmode' <LValueToRValue>
              (DeclRefExpr 0x9d68b30 <col:43> 'enum std::_Ios_Openmode' lvalue ParmVar 0x9d68a20 '__a' 'enum std::_Ios_Openmode'))))
        (CXXStaticCastExpr 0x9d68bd8 <col:50, col:70> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9d68bc8 <col:67> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9d68bb8 <col:67> 'enum std::_Ios_Openmode' <LValueToRValue>
              (DeclRefExpr 0x9d68b90 <col:67> 'enum std::_Ios_Openmode' lvalue ParmVar 0x9d68a60 '__b' 'enum std::_Ios_Openmode'))))))))


    inline std::_Ios_Openmode operator^(std::_Ios_Openmode __a, std::_Ios_Openmode __b) (CompoundStmt 0x9d68e60 </usr/include/c++/4.6/bits/ios_base.h:125:3, col:74>
  (ReturnStmt 0x9d68e50 <col:5, col:71>
    (CXXFunctionalCastExpr 0x9d68e38 <col:12, col:71> 'enum std::_Ios_Openmode' functional cast to enum std::_Ios_Openmode <IntegralCast>
      (BinaryOperator 0x9d68e20 <col:26, col:70> 'int' '^'
        (CXXStaticCastExpr 0x9d68da8 <col:26, col:46> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9d68d98 <col:43> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9d68d88 <col:43> 'enum std::_Ios_Openmode' <LValueToRValue>
              (DeclRefExpr 0x9d68d60 <col:43> 'enum std::_Ios_Openmode' lvalue ParmVar 0x9d68c50 '__a' 'enum std::_Ios_Openmode'))))
        (CXXStaticCastExpr 0x9d68e08 <col:50, col:70> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9d68df8 <col:67> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9d68de8 <col:67> 'enum std::_Ios_Openmode' <LValueToRValue>
              (DeclRefExpr 0x9d68dc0 <col:67> 'enum std::_Ios_Openmode' lvalue ParmVar 0x9d68c90 '__b' 'enum std::_Ios_Openmode'))))))))


    inline std::_Ios_Openmode operator~(std::_Ios_Openmode __a) (CompoundStmt 0x9d69010 </usr/include/c++/4.6/bits/ios_base.h:129:3, col:51>
  (ReturnStmt 0x9d69000 <col:5, col:48>
    (CXXFunctionalCastExpr 0x9d68fe8 <col:12, col:48> 'enum std::_Ios_Openmode' functional cast to enum std::_Ios_Openmode <IntegralCast>
      (UnaryOperator 0x9d68fd0 <col:26, col:47> 'int' prefix '~'
        (CXXStaticCastExpr 0x9d68fb8 <col:27, col:47> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9d68fa8 <col:44> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9d68f98 <col:44> 'enum std::_Ios_Openmode' <LValueToRValue>
              (DeclRefExpr 0x9d68f70 <col:44> 'enum std::_Ios_Openmode' lvalue ParmVar 0x9d68e80 '__a' 'enum std::_Ios_Openmode'))))))))


    inline const std::_Ios_Openmode &operator|=(std::_Ios_Openmode &__a, std::_Ios_Openmode __b) (CompoundStmt 0x9d692d0 </usr/include/c++/4.6/bits/ios_base.h:133:3, col:29>
  (ReturnStmt 0x9d692c0 <col:5, col:24>
    (ImplicitCastExpr 0x9d692b0 <col:12, col:24> 'const enum std::_Ios_Openmode' lvalue <NoOp>
      (BinaryOperator 0x9d69298 <col:12, col:24> 'enum std::_Ios_Openmode' lvalue '='
        (DeclRefExpr 0x9d691a8 <col:12> 'enum std::_Ios_Openmode' lvalue ParmVar 0x9d69060 '__a' 'enum std::_Ios_Openmode &')
        (CXXOperatorCallExpr 0x9d69258 <col:18, col:24> 'enum std::_Ios_Openmode'
          (ImplicitCastExpr 0x9d69248 <col:22, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9d69210 <col:22, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9d68ac0 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
          (ImplicitCastExpr 0x9d691f0 <col:18> 'enum std::_Ios_Openmode' <LValueToRValue>
            (DeclRefExpr 0x9d691c0 <col:18> 'enum std::_Ios_Openmode' lvalue ParmVar 0x9d69060 '__a' 'enum std::_Ios_Openmode &'))
          (ImplicitCastExpr 0x9d69200 <col:24> 'enum std::_Ios_Openmode' <LValueToRValue>
            (DeclRefExpr 0x9d691d8 <col:24> 'enum std::_Ios_Openmode' lvalue ParmVar 0x9d690a0 '__b' 'enum std::_Ios_Openmode')))))))


    inline const std::_Ios_Openmode &operator&=(std::_Ios_Openmode &__a, std::_Ios_Openmode __b) (CompoundStmt 0x9d694f8 </usr/include/c++/4.6/bits/ios_base.h:137:3, col:29>
  (ReturnStmt 0x9d694e8 <col:5, col:24>
    (ImplicitCastExpr 0x9d694d8 <col:12, col:24> 'const enum std::_Ios_Openmode' lvalue <NoOp>
      (BinaryOperator 0x9d694c0 <col:12, col:24> 'enum std::_Ios_Openmode' lvalue '='
        (DeclRefExpr 0x9d69408 <col:12> 'enum std::_Ios_Openmode' lvalue ParmVar 0x9d69300 '__a' 'enum std::_Ios_Openmode &')
        (CXXOperatorCallExpr 0x9d69498 <col:18, col:24> 'enum std::_Ios_Openmode'
          (ImplicitCastExpr 0x9d69488 <col:22, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9d69470 <col:22, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9d68890 'operator&' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
          (ImplicitCastExpr 0x9d69450 <col:18> 'enum std::_Ios_Openmode' <LValueToRValue>
            (DeclRefExpr 0x9d69420 <col:18> 'enum std::_Ios_Openmode' lvalue ParmVar 0x9d69300 '__a' 'enum std::_Ios_Openmode &'))
          (ImplicitCastExpr 0x9d69460 <col:24> 'enum std::_Ios_Openmode' <LValueToRValue>
            (DeclRefExpr 0x9d69438 <col:24> 'enum std::_Ios_Openmode' lvalue ParmVar 0x9d69340 '__b' 'enum std::_Ios_Openmode')))))))


    inline const std::_Ios_Openmode &operator^=(std::_Ios_Openmode &__a, std::_Ios_Openmode __b) (CompoundStmt 0x9d69718 </usr/include/c++/4.6/bits/ios_base.h:141:3, col:29>
  (ReturnStmt 0x9d69708 <col:5, col:24>
    (ImplicitCastExpr 0x9d696f8 <col:12, col:24> 'const enum std::_Ios_Openmode' lvalue <NoOp>
      (BinaryOperator 0x9d696e0 <col:12, col:24> 'enum std::_Ios_Openmode' lvalue '='
        (DeclRefExpr 0x9d69628 <col:12> 'enum std::_Ios_Openmode' lvalue ParmVar 0x9d69520 '__a' 'enum std::_Ios_Openmode &')
        (CXXOperatorCallExpr 0x9d696b8 <col:18, col:24> 'enum std::_Ios_Openmode'
          (ImplicitCastExpr 0x9d696a8 <col:22, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9d69690 <col:22, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9d68cf0 'operator^' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
          (ImplicitCastExpr 0x9d69670 <col:18> 'enum std::_Ios_Openmode' <LValueToRValue>
            (DeclRefExpr 0x9d69640 <col:18> 'enum std::_Ios_Openmode' lvalue ParmVar 0x9d69520 '__a' 'enum std::_Ios_Openmode &'))
          (ImplicitCastExpr 0x9d69680 <col:24> 'enum std::_Ios_Openmode' <LValueToRValue>
            (DeclRefExpr 0x9d69658 <col:24> 'enum std::_Ios_Openmode' lvalue ParmVar 0x9d69560 '__b' 'enum std::_Ios_Openmode')))))))


    enum _Ios_Iostate {
        _S_goodbit = (ImplicitCastExpr 0x9d699e8 </usr/include/c++/4.6/bits/ios_base.h:146:22> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9d69790 <col:22> 'int' 0))
,
        _S_badbit = (ImplicitCastExpr 0x9d699f8 </usr/include/c++/4.6/bits/ios_base.h:147:21, col:27> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9d69818 <col:21, col:27> 'long' '<<'
    (IntegerLiteral 0x9d697e8 <col:21> 'long' 1)
    (IntegerLiteral 0x9d69800 <col:27> 'int' 0)))
,
        _S_eofbit = (ImplicitCastExpr 0x9d69a08 </usr/include/c++/4.6/bits/ios_base.h:148:21, col:27> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9d69898 <col:21, col:27> 'long' '<<'
    (IntegerLiteral 0x9d69868 <col:21> 'long' 1)
    (IntegerLiteral 0x9d69880 <col:27> 'int' 1)))
,
        _S_failbit = (ImplicitCastExpr 0x9d69a18 </usr/include/c++/4.6/bits/ios_base.h:149:21, col:27> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9d69918 <col:21, col:27> 'long' '<<'
    (IntegerLiteral 0x9d698e8 <col:21> 'long' 1)
    (IntegerLiteral 0x9d69900 <col:27> 'int' 2)))
,
        _S_ios_iostate_end = (ImplicitCastExpr 0x9d69a28 </usr/include/c++/4.6/bits/ios_base.h:150:28, col:34> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9d69998 <col:28, col:34> 'long' '<<'
    (IntegerLiteral 0x9d69968 <col:28> 'long' 1)
    (IntegerLiteral 0x9d69980 <col:34> 'int' 16)))

    };
    inline std::_Ios_Iostate operator&(std::_Ios_Iostate __a, std::_Ios_Iostate __b) (CompoundStmt 0x9d69c70 </usr/include/c++/4.6/bits/ios_base.h:155:3, col:73>
  (ReturnStmt 0x9d69c60 <col:5, col:70>
    (CXXFunctionalCastExpr 0x9d69c48 <col:12, col:70> 'enum std::_Ios_Iostate' functional cast to enum std::_Ios_Iostate <IntegralCast>
      (BinaryOperator 0x9d69c30 <col:25, col:69> 'int' '&'
        (CXXStaticCastExpr 0x9d69bb8 <col:25, col:45> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9d69ba8 <col:42> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9d69b98 <col:42> 'enum std::_Ios_Iostate' <LValueToRValue>
              (DeclRefExpr 0x9d69b70 <col:42> 'enum std::_Ios_Iostate' lvalue ParmVar 0x9d69a40 '__a' 'enum std::_Ios_Iostate'))))
        (CXXStaticCastExpr 0x9d69c18 <col:49, col:69> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9d69c08 <col:66> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9d69bf8 <col:66> 'enum std::_Ios_Iostate' <LValueToRValue>
              (DeclRefExpr 0x9d69bd0 <col:66> 'enum std::_Ios_Iostate' lvalue ParmVar 0x9d69a80 '__b' 'enum std::_Ios_Iostate'))))))))


    inline std::_Ios_Iostate operator|(std::_Ios_Iostate __a, std::_Ios_Iostate __b) (CompoundStmt 0x9d69ea0 </usr/include/c++/4.6/bits/ios_base.h:159:3, col:73>
  (ReturnStmt 0x9d69e90 <col:5, col:70>
    (CXXFunctionalCastExpr 0x9d69e78 <col:12, col:70> 'enum std::_Ios_Iostate' functional cast to enum std::_Ios_Iostate <IntegralCast>
      (BinaryOperator 0x9d69e60 <col:25, col:69> 'int' '|'
        (CXXStaticCastExpr 0x9d69de8 <col:25, col:45> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9d69dd8 <col:42> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9d69dc8 <col:42> 'enum std::_Ios_Iostate' <LValueToRValue>
              (DeclRefExpr 0x9d69da0 <col:42> 'enum std::_Ios_Iostate' lvalue ParmVar 0x9d69c90 '__a' 'enum std::_Ios_Iostate'))))
        (CXXStaticCastExpr 0x9d69e48 <col:49, col:69> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9d69e38 <col:66> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9d69e28 <col:66> 'enum std::_Ios_Iostate' <LValueToRValue>
              (DeclRefExpr 0x9d69e00 <col:66> 'enum std::_Ios_Iostate' lvalue ParmVar 0x9d69cd0 '__b' 'enum std::_Ios_Iostate'))))))))


    inline std::_Ios_Iostate operator^(std::_Ios_Iostate __a, std::_Ios_Iostate __b) (CompoundStmt 0x9d6a0d0 </usr/include/c++/4.6/bits/ios_base.h:163:3, col:73>
  (ReturnStmt 0x9d6a0c0 <col:5, col:70>
    (CXXFunctionalCastExpr 0x9d6a0a8 <col:12, col:70> 'enum std::_Ios_Iostate' functional cast to enum std::_Ios_Iostate <IntegralCast>
      (BinaryOperator 0x9d6a090 <col:25, col:69> 'int' '^'
        (CXXStaticCastExpr 0x9d6a018 <col:25, col:45> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9d6a008 <col:42> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9d69ff8 <col:42> 'enum std::_Ios_Iostate' <LValueToRValue>
              (DeclRefExpr 0x9d69fd0 <col:42> 'enum std::_Ios_Iostate' lvalue ParmVar 0x9d69ec0 '__a' 'enum std::_Ios_Iostate'))))
        (CXXStaticCastExpr 0x9d6a078 <col:49, col:69> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9d6a068 <col:66> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9d6a058 <col:66> 'enum std::_Ios_Iostate' <LValueToRValue>
              (DeclRefExpr 0x9d6a030 <col:66> 'enum std::_Ios_Iostate' lvalue ParmVar 0x9d69f00 '__b' 'enum std::_Ios_Iostate'))))))))


    inline std::_Ios_Iostate operator~(std::_Ios_Iostate __a) (CompoundStmt 0x9d6a280 </usr/include/c++/4.6/bits/ios_base.h:167:3, col:50>
  (ReturnStmt 0x9d6a270 <col:5, col:47>
    (CXXFunctionalCastExpr 0x9d6a258 <col:12, col:47> 'enum std::_Ios_Iostate' functional cast to enum std::_Ios_Iostate <IntegralCast>
      (UnaryOperator 0x9d6a240 <col:25, col:46> 'int' prefix '~'
        (CXXStaticCastExpr 0x9d6a228 <col:26, col:46> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9d6a218 <col:43> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9d6a208 <col:43> 'enum std::_Ios_Iostate' <LValueToRValue>
              (DeclRefExpr 0x9d6a1e0 <col:43> 'enum std::_Ios_Iostate' lvalue ParmVar 0x9d6a0f0 '__a' 'enum std::_Ios_Iostate'))))))))


    inline const std::_Ios_Iostate &operator|=(std::_Ios_Iostate &__a, std::_Ios_Iostate __b) (CompoundStmt 0x9d6a540 </usr/include/c++/4.6/bits/ios_base.h:171:3, col:29>
  (ReturnStmt 0x9d6a530 <col:5, col:24>
    (ImplicitCastExpr 0x9d6a520 <col:12, col:24> 'const enum std::_Ios_Iostate' lvalue <NoOp>
      (BinaryOperator 0x9d6a508 <col:12, col:24> 'enum std::_Ios_Iostate' lvalue '='
        (DeclRefExpr 0x9d6a418 <col:12> 'enum std::_Ios_Iostate' lvalue ParmVar 0x9d6a2d0 '__a' 'enum std::_Ios_Iostate &')
        (CXXOperatorCallExpr 0x9d6a4c8 <col:18, col:24> 'enum std::_Ios_Iostate'
          (ImplicitCastExpr 0x9d6a4b8 <col:22, <invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9d6a480 <col:22, <invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)' lvalue Function 0x9d69d30 'operator|' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)'))
          (ImplicitCastExpr 0x9d6a460 <col:18> 'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9d6a430 <col:18> 'enum std::_Ios_Iostate' lvalue ParmVar 0x9d6a2d0 '__a' 'enum std::_Ios_Iostate &'))
          (ImplicitCastExpr 0x9d6a470 <col:24> 'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9d6a448 <col:24> 'enum std::_Ios_Iostate' lvalue ParmVar 0x9d6a310 '__b' 'enum std::_Ios_Iostate')))))))


    inline const std::_Ios_Iostate &operator&=(std::_Ios_Iostate &__a, std::_Ios_Iostate __b) (CompoundStmt 0x9d6a768 </usr/include/c++/4.6/bits/ios_base.h:175:3, col:29>
  (ReturnStmt 0x9d6a758 <col:5, col:24>
    (ImplicitCastExpr 0x9d6a748 <col:12, col:24> 'const enum std::_Ios_Iostate' lvalue <NoOp>
      (BinaryOperator 0x9d6a730 <col:12, col:24> 'enum std::_Ios_Iostate' lvalue '='
        (DeclRefExpr 0x9d6a678 <col:12> 'enum std::_Ios_Iostate' lvalue ParmVar 0x9d6a570 '__a' 'enum std::_Ios_Iostate &')
        (CXXOperatorCallExpr 0x9d6a708 <col:18, col:24> 'enum std::_Ios_Iostate'
          (ImplicitCastExpr 0x9d6a6f8 <col:22, <invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9d6a6e0 <col:22, <invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)' lvalue Function 0x9d69b00 'operator&' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)'))
          (ImplicitCastExpr 0x9d6a6c0 <col:18> 'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9d6a690 <col:18> 'enum std::_Ios_Iostate' lvalue ParmVar 0x9d6a570 '__a' 'enum std::_Ios_Iostate &'))
          (ImplicitCastExpr 0x9d6a6d0 <col:24> 'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9d6a6a8 <col:24> 'enum std::_Ios_Iostate' lvalue ParmVar 0x9d6a5b0 '__b' 'enum std::_Ios_Iostate')))))))


    inline const std::_Ios_Iostate &operator^=(std::_Ios_Iostate &__a, std::_Ios_Iostate __b) (CompoundStmt 0x9d6a988 </usr/include/c++/4.6/bits/ios_base.h:179:3, col:29>
  (ReturnStmt 0x9d6a978 <col:5, col:24>
    (ImplicitCastExpr 0x9d6a968 <col:12, col:24> 'const enum std::_Ios_Iostate' lvalue <NoOp>
      (BinaryOperator 0x9d6a950 <col:12, col:24> 'enum std::_Ios_Iostate' lvalue '='
        (DeclRefExpr 0x9d6a898 <col:12> 'enum std::_Ios_Iostate' lvalue ParmVar 0x9d6a790 '__a' 'enum std::_Ios_Iostate &')
        (CXXOperatorCallExpr 0x9d6a928 <col:18, col:24> 'enum std::_Ios_Iostate'
          (ImplicitCastExpr 0x9d6a918 <col:22, <invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9d6a900 <col:22, <invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)' lvalue Function 0x9d69f60 'operator^' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)'))
          (ImplicitCastExpr 0x9d6a8e0 <col:18> 'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9d6a8b0 <col:18> 'enum std::_Ios_Iostate' lvalue ParmVar 0x9d6a790 '__a' 'enum std::_Ios_Iostate &'))
          (ImplicitCastExpr 0x9d6a8f0 <col:24> 'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9d6a8c8 <col:24> 'enum std::_Ios_Iostate' lvalue ParmVar 0x9d6a7d0 '__b' 'enum std::_Ios_Iostate')))))))


    enum _Ios_Seekdir {
        _S_beg = (ImplicitCastExpr 0x9d6ab78 </usr/include/c++/4.6/bits/ios_base.h:184:16> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9d6aa00 <col:16> 'int' 0))
,
        _S_cur = (ImplicitCastExpr 0x9d6ab88 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:1152:33> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9d6aa58 <col:33> 'int' 1))
,
        _S_end = (ImplicitCastExpr 0x9d6ab98 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:1155:33> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9d6aaa8 <col:33> 'int' 2))
,
        _S_ios_seekdir_end = (ImplicitCastExpr 0x9d6aba8 </usr/include/c++/4.6/bits/ios_base.h:187:28, col:34> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9d6ab28 <col:28, col:34> 'long' '<<'
    (IntegerLiteral 0x9d6aaf8 <col:28> 'long' 1)
    (IntegerLiteral 0x9d6ab10 <col:34> 'int' 16)))

    };
    class ios_base {
        class ios_base;
    public:
    public:
        class failure : public std::exception {
            class failure;
        public:
        public:
            failure(const string &__str) throw();
            virtual void ~failure() throw();
            virtual const char *what() const throw();
        private:
        private:
            string _M_msg;
            inline std::ios_base::failure &operator=(const std::ios_base::failure &);
        };
        typedef std::_Ios_Fmtflags fmtflags;
        static const fmtflags boolalpha = (DeclRefExpr 0x9d6b304 </usr/include/c++/4.6/bits/ios_base.h:259:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x9d5abc0 '_S_boolalpha' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags dec = (DeclRefExpr 0x9d6b364 </usr/include/c++/4.6/bits/ios_base.h:262:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x9d5ac40 '_S_dec' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags fixed = (DeclRefExpr 0x9d6b3c4 </usr/include/c++/4.6/bits/ios_base.h:265:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x9d5acc0 '_S_fixed' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags hex = (DeclRefExpr 0x9d6b424 </usr/include/c++/4.6/bits/ios_base.h:268:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x9d5ad40 '_S_hex' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags internal = (DeclRefExpr 0x9d6b484 </usr/include/c++/4.6/bits/ios_base.h:273:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x9d5adc0 '_S_internal' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags left = (DeclRefExpr 0x9d6b4e4 </usr/include/c++/4.6/bits/ios_base.h:277:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x9d5ae40 '_S_left' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags oct = (DeclRefExpr 0x9d6b544 </usr/include/c++/4.6/bits/ios_base.h:280:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x9d5aec0 '_S_oct' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags right = (DeclRefExpr 0x9d6b5a4 </usr/include/c++/4.6/bits/ios_base.h:284:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x9d5af40 '_S_right' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags scientific = (DeclRefExpr 0x9d6b604 </usr/include/c++/4.6/bits/ios_base.h:287:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x9d5afc0 '_S_scientific' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags showbase = (DeclRefExpr 0x9d6b664 </usr/include/c++/4.6/bits/ios_base.h:291:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x9d5b040 '_S_showbase' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags showpoint = (DeclRefExpr 0x9d6b6c4 </usr/include/c++/4.6/bits/ios_base.h:295:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x9d5b0c0 '_S_showpoint' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags showpos = (DeclRefExpr 0x9d6b724 </usr/include/c++/4.6/bits/ios_base.h:298:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x9d5b140 '_S_showpos' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags skipws = (DeclRefExpr 0x9d6b784 </usr/include/c++/4.6/bits/ios_base.h:301:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x9d5b1c0 '_S_skipws' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags unitbuf = (DeclRefExpr 0x9d6b7e4 </usr/include/c++/4.6/bits/ios_base.h:304:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x9d5b240 '_S_unitbuf' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags uppercase = (DeclRefExpr 0x9d6b844 </usr/include/c++/4.6/bits/ios_base.h:308:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x9d5b2c0 '_S_uppercase' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags adjustfield = (DeclRefExpr 0x9d6b8a4 </usr/include/c++/4.6/bits/ios_base.h:311:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x9d5b370 '_S_adjustfield' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags basefield = (DeclRefExpr 0x9d6b904 </usr/include/c++/4.6/bits/ios_base.h:314:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x9d5b420 '_S_basefield' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags floatfield = (DeclRefExpr 0x9d6b964 </usr/include/c++/4.6/bits/ios_base.h:317:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x9d5b4a0 '_S_floatfield' 'enum std::_Ios_Fmtflags')
;
        typedef std::_Ios_Iostate iostate;
        static const iostate badbit = (DeclRefExpr 0x9d6ba14 </usr/include/c++/4.6/bits/ios_base.h:335:35> 'enum std::_Ios_Iostate' EnumConstant 0x9d69830 '_S_badbit' 'enum std::_Ios_Iostate')
;
        static const iostate eofbit = (DeclRefExpr 0x9d6ba74 </usr/include/c++/4.6/bits/ios_base.h:338:35> 'enum std::_Ios_Iostate' EnumConstant 0x9d698b0 '_S_eofbit' 'enum std::_Ios_Iostate')
;
        static const iostate failbit = (DeclRefExpr 0x9d6bad4 </usr/include/c++/4.6/bits/ios_base.h:343:36> 'enum std::_Ios_Iostate' EnumConstant 0x9d69930 '_S_failbit' 'enum std::_Ios_Iostate')
;
        static const iostate goodbit = (DeclRefExpr 0x9d6bb34 </usr/include/c++/4.6/bits/ios_base.h:346:36> 'enum std::_Ios_Iostate' EnumConstant 0x9d697b0 '_S_goodbit' 'enum std::_Ios_Iostate')
;
        typedef std::_Ios_Openmode openmode;
        static const openmode app = (DeclRefExpr 0x9d6bbe4 </usr/include/c++/4.6/bits/ios_base.h:365:34> 'enum std::_Ios_Openmode' EnumConstant 0x9d68420 '_S_app' 'enum std::_Ios_Openmode')
;
        static const openmode ate = (DeclRefExpr 0x9d6bc44 </usr/include/c++/4.6/bits/ios_base.h:368:34> 'enum std::_Ios_Openmode' EnumConstant 0x9d684a0 '_S_ate' 'enum std::_Ios_Openmode')
;
        static const openmode binary = (DeclRefExpr 0x9d6bca4 </usr/include/c++/4.6/bits/ios_base.h:373:36> 'enum std::_Ios_Openmode' EnumConstant 0x9d68520 '_S_bin' 'enum std::_Ios_Openmode')
;
        static const openmode in = (DeclRefExpr 0x9d6bd04 </usr/include/c++/4.6/bits/ios_base.h:376:33> 'enum std::_Ios_Openmode' EnumConstant 0x9d685a0 '_S_in' 'enum std::_Ios_Openmode')
;
        static const openmode out = (DeclRefExpr 0x9d6bd64 </usr/include/c++/4.6/bits/ios_base.h:379:34> 'enum std::_Ios_Openmode' EnumConstant 0x9d68620 '_S_out' 'enum std::_Ios_Openmode')
;
        static const openmode trunc = (DeclRefExpr 0x9d6bdc4 </usr/include/c++/4.6/bits/ios_base.h:382:35> 'enum std::_Ios_Openmode' EnumConstant 0x9d686a0 '_S_trunc' 'enum std::_Ios_Openmode')
;
        typedef std::_Ios_Seekdir seekdir;
        static const seekdir beg = (DeclRefExpr 0x9d6be74 </usr/include/c++/4.6/bits/ios_base.h:397:33> 'enum std::_Ios_Seekdir' EnumConstant 0x9d6aa20 '_S_beg' 'enum std::_Ios_Seekdir')
;
        static const seekdir cur = (DeclRefExpr 0x9d6bed4 </usr/include/c++/4.6/bits/ios_base.h:400:33> 'enum std::_Ios_Seekdir' EnumConstant 0x9d6aa70 '_S_cur' 'enum std::_Ios_Seekdir')
;
        static const seekdir end = (DeclRefExpr 0x9d6bf34 </usr/include/c++/4.6/bits/ios_base.h:403:33> 'enum std::_Ios_Seekdir' EnumConstant 0x9d6aac0 '_S_end' 'enum std::_Ios_Seekdir')
;
        typedef int io_state;
        typedef int open_mode;
        typedef int seek_dir;
        typedef std::streampos streampos;
        typedef std::streamoff streamoff;
        enum event {
            erase_event,
            imbue_event,
            copyfmt_event
        };
        typedef void (*event_callback)(std::ios_base::event, std::ios_base &, int);
        void register_callback(event_callback __fn, int __index);
    protected:
    protected:
        streamsize _M_precision;
        streamsize _M_width;
        fmtflags _M_flags;
        iostate _M_exception;
        iostate _M_streambuf_state;
        struct _Callback_list {
            struct _Callback_list;
            std::ios_base::_Callback_list *_M_next;
            ios_base::event_callback _M_fn;
            int _M_index;
            _Atomic_word _M_refcount;
            _Callback_list(ios_base::event_callback __fn, int __index, std::ios_base::_Callback_list *__cb) : _M_next((ImplicitCastExpr 0x9d62ad0 </usr/include/c++/4.6/bits/ios_base.h:471:17> 'struct std::ios_base::_Callback_list *' <LValueToRValue>
  (DeclRefExpr 0x9d62ab8 <col:17> 'struct std::ios_base::_Callback_list *' lvalue ParmVar 0x9d60a20 '__cb' 'struct std::ios_base::_Callback_list *'))
), _M_fn((ImplicitCastExpr 0x9d62b10 </usr/include/c++/4.6/bits/ios_base.h:471:30> 'class ios_base::event_callback':'void (*)(enum std::ios_base::event, class std::ios_base &, int)' <LValueToRValue>
  (DeclRefExpr 0x9d62af8 <col:30> 'class ios_base::event_callback':'void (*)(enum std::ios_base::event, class std::ios_base &, int)' lvalue ParmVar 0x9d60980 '__fn' 'class ios_base::event_callback':'void (*)(enum std::ios_base::event, class std::ios_base &, int)'))
), _M_index((ImplicitCastExpr 0x9d62b50 </usr/include/c++/4.6/bits/ios_base.h:471:46> 'int' <LValueToRValue>
  (DeclRefExpr 0x9d62b38 <col:46> 'int' lvalue ParmVar 0x9d609d0 '__index' 'int'))
), _M_refcount((IntegerLiteral 0x9d62b78 </usr/include/c++/4.6/bits/ios_base.h:471:68> 'int' 0)
) (CompoundStmt 0x9d62bb8 </usr/include/c++/4.6/bits/ios_base.h:471:71, col:73>)


            void _M_add_reference() (CompoundStmt 0x9d62ca8 </usr/include/c++/4.6/bits/ios_base.h:474:26, col:79>
  (CallExpr 0x9d62c80 <col:28, col:76> 'void'
    (ImplicitCastExpr 0x9d62c70 <col:28, col:39> 'void (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9d62bec <col:28, col:39> 'void (_Atomic_word *, int)' lvalue Function 0x9c7a6c0 '__atomic_add_dispatch' 'void (_Atomic_word *, int)'))
    (UnaryOperator 0x9d62c40 <col:61, col:62> '_Atomic_word *' prefix '&'
      (MemberExpr 0x9d62c20 <col:62> '_Atomic_word':'int' lvalue ->_M_refcount 0x9d60920
        (CXXThisExpr 0x9d62c10 <col:62> 'struct std::ios_base::_Callback_list *' this)))
    (IntegerLiteral 0x9d62c58 <col:75> 'int' 1)))


            int _M_remove_reference() (CompoundStmt 0x9d62ee8 </usr/include/c++/4.6/bits/ios_base.h:479:7, line:488:7>
  (NullStmt 0x9d62cc0 <line:481:62>)
  (DeclStmt 0x9d62e00 <line:482:9, col:77>
    0x9d62ce0 "int __res =
      (CallExpr 0x9d62dd8 <col:21, col:76> '_Atomic_word':'int'
        (ImplicitCastExpr 0x9d62dc8 <col:21, col:32> '_Atomic_word (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9d62d2c <col:21, col:32> '_Atomic_word (_Atomic_word *, int)' lvalue Function 0x9c7a230 '__exchange_and_add_dispatch' '_Atomic_word (_Atomic_word *, int)'))
        (UnaryOperator 0x9d62d80 <col:60, col:61> '_Atomic_word *' prefix '&'
          (MemberExpr 0x9d62d60 <col:61> '_Atomic_word':'int' lvalue ->_M_refcount 0x9d60920
            (CXXThisExpr 0x9d62d50 <col:61> 'struct std::ios_base::_Callback_list *' this)))
        (UnaryOperator 0x9d62db0 <col:74, col:75> 'int' prefix '-'
          (IntegerLiteral 0x9d62d98 <col:75> 'int' 1)))")
  (IfStmt 0x9d62e90 <line:483:9, line:486:11>
    <<<NULL>>>
    (BinaryOperator 0x9d62e50 <line:483:13, col:22> '_Bool' '=='
      (ImplicitCastExpr 0x9d62e40 <col:13> 'int' <LValueToRValue>
        (DeclRefExpr 0x9d62e10 <col:13> 'int' lvalue Var 0x9d62ce0 '__res' 'int'))
      (IntegerLiteral 0x9d62e28 <col:22> 'int' 0))
    (CompoundStmt 0x9d62e78 <line:484:11, line:486:11>
      (NullStmt 0x9d62e68 <line:485:65>))
    <<<NULL>>>)
  (ReturnStmt 0x9d62ed8 <line:487:9, col:16>
    (ImplicitCastExpr 0x9d62ec8 <col:16> 'int' <LValueToRValue>
      (DeclRefExpr 0x9d62eac <col:16> 'int' lvalue Var 0x9d62ce0 '__res' 'int'))))


        };
        std::ios_base::_Callback_list *_M_callbacks;
        void _M_call_callbacks(std::ios_base::event __ev) throw();
        void _M_dispose_callbacks() throw();
        struct _Words {
            struct _Words;
            void *_M_pword;
            long _M_iword;
            _Words() : _M_pword((ImplicitCastExpr 0x9d62f20 </usr/include/c++/4.6/bits/ios_base.h:504:27> 'void *' <NullToPointer>
  (IntegerLiteral 0x9d62f08 <col:27> 'int' 0))
), _M_iword((ImplicitCastExpr 0x9d62f60 </usr/include/c++/4.6/bits/ios_base.h:504:40> 'long' <IntegralCast>
  (IntegerLiteral 0x9d62f48 <col:40> 'int' 0))
) (CompoundStmt 0x9d62f90 </usr/include/c++/4.6/bits/ios_base.h:504:43, col:45>)


            inline _Words(const std::ios_base::_Words &) throw();
            inline void ~_Words() throw();
        };
        std::ios_base::_Words _M_word_zero;
        enum  {
            _S_local_word_size = (ImplicitCastExpr 0x9d61198 </usr/include/c++/4.6/bits/ios_base.h:512:33> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9d61140 <col:33> 'int' 8))

        };
        std::ios_base::_Words _M_local_word[8];
        int _M_word_size;
        std::ios_base::_Words *_M_word;
        std::ios_base::_Words &_M_grow_words(int __index, bool __iword);
        std::locale _M_ios_locale;
        void _M_init() throw();
    public:
    public:
        class Init {
            class Init;
            ;
        public:
        public:
            Init();
            void ~Init();
        private:
        private:
            static _Atomic_word _S_refcount;
            static bool _S_synced_with_stdio;
        };
        fmtflags flags() const (CompoundStmt 0x9d63028 </usr/include/c++/4.6/bits/ios_base.h:553:5, col:24>
  (ReturnStmt 0x9d63018 <col:7, col:14>
    (ImplicitCastExpr 0x9d63008 <col:14> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (MemberExpr 0x9d62fe4 <col:14> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue ->_M_flags 0x9d60610
        (CXXThisExpr 0x9d62fb8 <col:14> 'const class std::ios_base *' this)))))


        fmtflags flags(fmtflags __fmtfl) (CompoundStmt 0x9d63180 </usr/include/c++/4.6/bits/ios_base.h:564:5, line:568:5>
  (DeclStmt 0x9d630c8 <line:565:7, col:32>
    0x9d63050 "fmtflags __old =
      (ImplicitCastExpr 0x9d630b8 <col:24> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
        (MemberExpr 0x9d63098 <col:24> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ->_M_flags 0x9d60610
          (CXXThisExpr 0x9d63088 <col:24> 'class std::ios_base *' this)))")
  (BinaryOperator 0x9d63130 <line:566:7, col:18> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue '='
    (MemberExpr 0x9d630e8 <col:7> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ->_M_flags 0x9d60610
      (CXXThisExpr 0x9d630d8 <col:7> 'class std::ios_base *' this))
    (ImplicitCastExpr 0x9d63120 <col:18> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9d63108 <col:18> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9d61a40 '__fmtfl' 'fmtflags':'enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9d63170 <line:567:7, col:14>
    (ImplicitCastExpr 0x9d63160 <col:14> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9d63148 <col:14> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue Var 0x9d63050 '__old' 'fmtflags':'enum std::_Ios_Fmtflags'))))


        fmtflags setf(fmtflags __fmtfl) (CompoundStmt 0x9d63338 </usr/include/c++/4.6/bits/ios_base.h:580:5, line:584:5>
  (DeclStmt 0x9d63228 <line:581:7, col:32>
    0x9d631b0 "fmtflags __old =
      (ImplicitCastExpr 0x9d63218 <col:24> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
        (MemberExpr 0x9d631f8 <col:24> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ->_M_flags 0x9d60610
          (CXXThisExpr 0x9d631e8 <col:24> 'class std::ios_base *' this)))")
  (CXXOperatorCallExpr 0x9d632d8 <line:582:7, col:19> 'const enum std::_Ios_Fmtflags' lvalue
    (ImplicitCastExpr 0x9d632c8 <col:16, <invalid sloc>> 'const enum std::_Ios_Fmtflags &(*)(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9d63290 <col:16, <invalid sloc>> 'const enum std::_Ios_Fmtflags &(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)' lvalue Function 0x9d5c000 'operator|=' 'const enum std::_Ios_Fmtflags &(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)'))
    (MemberExpr 0x9d63248 <col:7> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ->_M_flags 0x9d60610
      (CXXThisExpr 0x9d63238 <col:7> 'class std::ios_base *' this))
    (ImplicitCastExpr 0x9d63280 <col:19> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9d63268 <col:19> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9d61b30 '__fmtfl' 'fmtflags':'enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9d63328 <line:583:7, col:14>
    (ImplicitCastExpr 0x9d63318 <col:14> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9d632fc <col:14> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue Var 0x9d631b0 '__old' 'fmtflags':'enum std::_Ios_Fmtflags'))))


        fmtflags setf(fmtflags __fmtfl, fmtflags __mask) (CompoundStmt 0x9d63668 </usr/include/c++/4.6/bits/ios_base.h:597:5, line:602:5>
  (DeclStmt 0x9d633d8 <line:598:7, col:32>
    0x9d63360 "fmtflags __old =
      (ImplicitCastExpr 0x9d633c8 <col:24> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
        (MemberExpr 0x9d633a8 <col:24> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ->_M_flags 0x9d60610
          (CXXThisExpr 0x9d63398 <col:24> 'class std::ios_base *' this)))")
  (CXXOperatorCallExpr 0x9d634d0 <line:599:7, col:20> 'const enum std::_Ios_Fmtflags' lvalue
    (ImplicitCastExpr 0x9d634c0 <col:16, <invalid sloc>> 'const enum std::_Ios_Fmtflags &(*)(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9d634a8 <col:16, <invalid sloc>> 'const enum std::_Ios_Fmtflags &(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)' lvalue Function 0x9d5c6a0 'operator&=' 'const enum std::_Ios_Fmtflags &(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)'))
    (MemberExpr 0x9d633f8 <col:7> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ->_M_flags 0x9d60610
      (CXXThisExpr 0x9d633e8 <col:7> 'class std::ios_base *' this))
    (CXXOperatorCallExpr 0x9d63488 <col:19, col:20> 'enum std::_Ios_Fmtflags'
      (ImplicitCastExpr 0x9d63478 <<invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9d63440 <<invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags)' lvalue Function 0x9d5bdc0 'operator~' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags)'))
      (ImplicitCastExpr 0x9d63430 <col:20> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
        (DeclRefExpr 0x9d63418 <col:20> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9d61c30 '__mask' 'fmtflags':'enum std::_Ios_Fmtflags'))))
  (CXXOperatorCallExpr 0x9d63608 <line:600:7, col:36> 'const enum std::_Ios_Fmtflags' lvalue
    (ImplicitCastExpr 0x9d635f8 <col:16, <invalid sloc>> 'const enum std::_Ios_Fmtflags &(*)(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9d635e0 <col:16, <invalid sloc>> 'const enum std::_Ios_Fmtflags &(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)' lvalue Function 0x9d5c000 'operator|=' 'const enum std::_Ios_Fmtflags &(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)'))
    (MemberExpr 0x9d63508 <col:7> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ->_M_flags 0x9d60610
      (CXXThisExpr 0x9d634f8 <col:7> 'class std::ios_base *' this))
    (ParenExpr 0x9d635c8 <col:19, col:36> 'enum std::_Ios_Fmtflags'
      (CXXOperatorCallExpr 0x9d635a0 <col:20, col:30> 'enum std::_Ios_Fmtflags'
        (ImplicitCastExpr 0x9d63590 <col:28, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9d63578 <col:28, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9d5b750 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
        (ImplicitCastExpr 0x9d63558 <col:20> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
          (DeclRefExpr 0x9d63528 <col:20> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9d61bf0 '__fmtfl' 'fmtflags':'enum std::_Ios_Fmtflags'))
        (ImplicitCastExpr 0x9d63568 <col:30> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
          (DeclRefExpr 0x9d63540 <col:30> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9d61c30 '__mask' 'fmtflags':'enum std::_Ios_Fmtflags')))))
  (ReturnStmt 0x9d63658 <line:601:7, col:14>
    (ImplicitCastExpr 0x9d63648 <col:14> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9d6362c <col:14> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue Var 0x9d63360 '__old' 'fmtflags':'enum std::_Ios_Fmtflags'))))


        void unsetf(fmtflags __mask) (CompoundStmt 0x9d63778 </usr/include/c++/4.6/bits/ios_base.h:612:5, col:28>
  (CXXOperatorCallExpr 0x9d63750 <col:7, col:20> 'const enum std::_Ios_Fmtflags' lvalue
    (ImplicitCastExpr 0x9d63740 <col:16, <invalid sloc>> 'const enum std::_Ios_Fmtflags &(*)(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9d63728 <col:16, <invalid sloc>> 'const enum std::_Ios_Fmtflags &(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)' lvalue Function 0x9d5c6a0 'operator&=' 'const enum std::_Ios_Fmtflags &(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)'))
    (MemberExpr 0x9d63698 <col:7> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ->_M_flags 0x9d60610
      (CXXThisExpr 0x9d63688 <col:7> 'class std::ios_base *' this))
    (CXXOperatorCallExpr 0x9d63708 <col:19, col:20> 'enum std::_Ios_Fmtflags'
      (ImplicitCastExpr 0x9d636f8 <<invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9d636e0 <<invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags)' lvalue Function 0x9d5bdc0 'operator~' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags)'))
      (ImplicitCastExpr 0x9d636d0 <col:20> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
        (DeclRefExpr 0x9d636b8 <col:20> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9d61d20 '__mask' 'fmtflags':'enum std::_Ios_Fmtflags')))))


        streamsize precision() const (CompoundStmt 0x9d637e0 </usr/include/c++/4.6/bits/ios_base.h:623:5, col:28>
  (ReturnStmt 0x9d637d0 <col:7, col:14>
    (ImplicitCastExpr 0x9d637c0 <col:14> 'streamsize':'int' <LValueToRValue>
      (MemberExpr 0x9d637a0 <col:14> 'const streamsize':'const int' lvalue ->_M_precision 0x9d60590
        (CXXThisExpr 0x9d63790 <col:14> 'const class std::ios_base *' this)))))


        streamsize precision(streamsize __prec) (CompoundStmt 0x9d63930 </usr/include/c++/4.6/bits/ios_base.h:632:5, line:636:5>
  (DeclStmt 0x9d63878 <line:633:7, col:38>
    0x9d63800 "streamsize __old =
      (ImplicitCastExpr 0x9d63868 <col:26> 'streamsize':'int' <LValueToRValue>
        (MemberExpr 0x9d63848 <col:26> 'streamsize':'int' lvalue ->_M_precision 0x9d60590
          (CXXThisExpr 0x9d63838 <col:26> 'class std::ios_base *' this)))")
  (BinaryOperator 0x9d638e0 <line:634:7, col:22> 'streamsize':'int' lvalue '='
    (MemberExpr 0x9d63898 <col:7> 'streamsize':'int' lvalue ->_M_precision 0x9d60590
      (CXXThisExpr 0x9d63888 <col:7> 'class std::ios_base *' this))
    (ImplicitCastExpr 0x9d638d0 <col:22> 'streamsize':'int' <LValueToRValue>
      (DeclRefExpr 0x9d638b8 <col:22> 'streamsize':'int' lvalue ParmVar 0x9d61ef0 '__prec' 'streamsize':'int')))
  (ReturnStmt 0x9d63920 <line:635:7, col:14>
    (ImplicitCastExpr 0x9d63910 <col:14> 'streamsize':'int' <LValueToRValue>
      (DeclRefExpr 0x9d638f8 <col:14> 'streamsize':'int' lvalue Var 0x9d63800 '__old' 'streamsize':'int'))))


        streamsize width() const (CompoundStmt 0x9d639a0 </usr/include/c++/4.6/bits/ios_base.h:646:5, col:24>
  (ReturnStmt 0x9d63990 <col:7, col:14>
    (ImplicitCastExpr 0x9d63980 <col:14> 'streamsize':'int' <LValueToRValue>
      (MemberExpr 0x9d63960 <col:14> 'const streamsize':'const int' lvalue ->_M_width 0x9d605d0
        (CXXThisExpr 0x9d63950 <col:14> 'const class std::ios_base *' this)))))


        streamsize width(streamsize __wide) (CompoundStmt 0x9d63af0 </usr/include/c++/4.6/bits/ios_base.h:655:5, line:659:5>
  (DeclStmt 0x9d63a38 <line:656:7, col:34>
    0x9d639c0 "streamsize __old =
      (ImplicitCastExpr 0x9d63a28 <col:26> 'streamsize':'int' <LValueToRValue>
        (MemberExpr 0x9d63a08 <col:26> 'streamsize':'int' lvalue ->_M_width 0x9d605d0
          (CXXThisExpr 0x9d639f8 <col:26> 'class std::ios_base *' this)))")
  (BinaryOperator 0x9d63aa0 <line:657:7, col:18> 'streamsize':'int' lvalue '='
    (MemberExpr 0x9d63a58 <col:7> 'streamsize':'int' lvalue ->_M_width 0x9d605d0
      (CXXThisExpr 0x9d63a48 <col:7> 'class std::ios_base *' this))
    (ImplicitCastExpr 0x9d63a90 <col:18> 'streamsize':'int' <LValueToRValue>
      (DeclRefExpr 0x9d63a78 <col:18> 'streamsize':'int' lvalue ParmVar 0x9d62060 '__wide' 'streamsize':'int')))
  (ReturnStmt 0x9d63ae0 <line:658:7, col:14>
    (ImplicitCastExpr 0x9d63ad0 <col:14> 'streamsize':'int' <LValueToRValue>
      (DeclRefExpr 0x9d63ab8 <col:14> 'streamsize':'int' lvalue Var 0x9d639c0 '__old' 'streamsize':'int'))))


        static bool sync_with_stdio(bool __sync = (CXXBoolLiteralExpr 0x9d62aa8 </usr/include/c++/4.6/bits/ios_base.h:673:35> '_Bool' true)
);
        std::locale imbue(const std::locale &__loc) throw();
        std::locale getloc() const (CompoundStmt 0x9d63b78 </usr/include/c++/4.6/bits/ios_base.h:697:5, col:29>
  (ReturnStmt 0x9d63b68 <col:7, col:14>
    (CXXConstructExpr 0x9d63b40 <col:14> 'class std::locale''void (const class std::locale &) throw()'
      (MemberExpr 0x9d63b20 <col:14> 'const class std::locale' lvalue ->_M_ios_locale 0x9d614c0
        (CXXThisExpr 0x9d63b10 <col:14> 'const class std::ios_base *' this)))))


        const std::locale &_M_getloc() const (CompoundStmt 0x9d63bd0 </usr/include/c++/4.6/bits/ios_base.h:708:5, col:29>
  (ReturnStmt 0x9d63bc0 <col:7, col:14>
    (MemberExpr 0x9d63ba0 <col:14> 'const class std::locale' lvalue ->_M_ios_locale 0x9d614c0
      (CXXThisExpr 0x9d63b90 <col:14> 'const class std::ios_base *' this))))


        static int xalloc() throw();
        long &iword(int __ix) (CompoundStmt 0x9d63e58 </usr/include/c++/4.6/bits/ios_base.h:743:5, line:747:5>
  (DeclStmt 0x9d63e00 <line:744:7, line:745:47>
    0x9d63c00 "std::ios_base::_Words &__word =
      (ConditionalOperator 0x9d63de0 <line:744:24, line:745:46> 'struct std::ios_base::_Words' lvalue
        (ParenExpr 0x9d63cb8 <line:744:24, col:44> '_Bool'
          (BinaryOperator 0x9d63ca0 <col:25, col:32> '_Bool' '<'
            (ImplicitCastExpr 0x9d63c80 <col:25> 'int' <LValueToRValue>
              (DeclRefExpr 0x9d63c34 <col:25> 'int' lvalue ParmVar 0x9d624c0 '__ix' 'int'))
            (ImplicitCastExpr 0x9d63c90 <col:32> 'int' <LValueToRValue>
              (MemberExpr 0x9d63c60 <col:32> 'int' lvalue ->_M_word_size 0x9d612d0
                (CXXThisExpr 0x9d63c50 <col:32> 'class std::ios_base *' this)))))
        (ArraySubscriptExpr 0x9d63d38 <line:745:6, col:18> 'struct std::ios_base::_Words' lvalue
          (ImplicitCastExpr 0x9d63d18 <col:6> 'struct std::ios_base::_Words *' <LValueToRValue>
            (MemberExpr 0x9d63ce0 <col:6> 'struct std::ios_base::_Words *' lvalue ->_M_word 0x9d61330
              (CXXThisExpr 0x9d63cd0 <col:6> 'class std::ios_base *' this)))
          (ImplicitCastExpr 0x9d63d28 <col:14> 'int' <LValueToRValue>
            (DeclRefExpr 0x9d63d00 <col:14> 'int' lvalue ParmVar 0x9d624c0 '__ix' 'int')))
        (CXXMemberCallExpr 0x9d63da8 <col:22, col:46> 'struct std::ios_base::_Words' lvalue
          (MemberExpr 0x9d63d60 <col:22> '<bound member function type>' ->_M_grow_words 0x9d61450
            (CXXThisExpr 0x9d63d50 <col:22> 'class std::ios_base *' this))
          (ImplicitCastExpr 0x9d63dd0 <col:36> 'int' <LValueToRValue>
            (DeclRefExpr 0x9d63d80 <col:36> 'int' lvalue ParmVar 0x9d624c0 '__ix' 'int'))
          (CXXBoolLiteralExpr 0x9d63d98 <col:42> '_Bool' true)))")
  (ReturnStmt 0x9d63e48 <line:746:7, col:21>
    (MemberExpr 0x9d63e28 <col:14, col:21> 'long' lvalue ._M_iword 0x9d60fe0
      (DeclRefExpr 0x9d63e10 <col:14> 'struct std::ios_base::_Words' lvalue Var 0x9d63c00 '__word' 'struct std::ios_base::_Words &'))))


        void *&pword(int __ix) (CompoundStmt 0x9d640d8 </usr/include/c++/4.6/bits/ios_base.h:764:5, line:768:5>
  (DeclStmt 0x9d64080 <line:765:7, line:766:48>
    0x9d63e80 "std::ios_base::_Words &__word =
      (ConditionalOperator 0x9d64060 <line:765:24, line:766:47> 'struct std::ios_base::_Words' lvalue
        (ParenExpr 0x9d63f38 <line:765:24, col:44> '_Bool'
          (BinaryOperator 0x9d63f20 <col:25, col:32> '_Bool' '<'
            (ImplicitCastExpr 0x9d63f00 <col:25> 'int' <LValueToRValue>
              (DeclRefExpr 0x9d63eb4 <col:25> 'int' lvalue ParmVar 0x9d625c0 '__ix' 'int'))
            (ImplicitCastExpr 0x9d63f10 <col:32> 'int' <LValueToRValue>
              (MemberExpr 0x9d63ee0 <col:32> 'int' lvalue ->_M_word_size 0x9d612d0
                (CXXThisExpr 0x9d63ed0 <col:32> 'class std::ios_base *' this)))))
        (ArraySubscriptExpr 0x9d63fb8 <line:766:6, col:18> 'struct std::ios_base::_Words' lvalue
          (ImplicitCastExpr 0x9d63f98 <col:6> 'struct std::ios_base::_Words *' <LValueToRValue>
            (MemberExpr 0x9d63f60 <col:6> 'struct std::ios_base::_Words *' lvalue ->_M_word 0x9d61330
              (CXXThisExpr 0x9d63f50 <col:6> 'class std::ios_base *' this)))
          (ImplicitCastExpr 0x9d63fa8 <col:14> 'int' <LValueToRValue>
            (DeclRefExpr 0x9d63f80 <col:14> 'int' lvalue ParmVar 0x9d625c0 '__ix' 'int')))
        (CXXMemberCallExpr 0x9d64028 <col:22, col:47> 'struct std::ios_base::_Words' lvalue
          (MemberExpr 0x9d63fe0 <col:22> '<bound member function type>' ->_M_grow_words 0x9d61450
            (CXXThisExpr 0x9d63fd0 <col:22> 'class std::ios_base *' this))
          (ImplicitCastExpr 0x9d64050 <col:36> 'int' <LValueToRValue>
            (DeclRefExpr 0x9d64000 <col:36> 'int' lvalue ParmVar 0x9d625c0 '__ix' 'int'))
          (CXXBoolLiteralExpr 0x9d64018 <col:42> '_Bool' false)))")
  (ReturnStmt 0x9d640c8 <line:767:7, col:21>
    (MemberExpr 0x9d640a8 <col:14, col:21> 'void *' lvalue ._M_pword 0x9d60fa0
      (DeclRefExpr 0x9d64090 <col:14> 'struct std::ios_base::_Words' lvalue Var 0x9d63e80 '__word' 'struct std::ios_base::_Words &'))))


        virtual void ~ios_base();
    protected:
    protected:
        ios_base() throw();
    private:
    private:
        ios_base(const std::ios_base &);
        std::ios_base &operator=(const std::ios_base &);
    };
    inline std::ios_base &boolalpha(std::ios_base &__base) (CompoundStmt 0x9d6c3a8 </usr/include/c++/4.6/bits/ios_base.h:797:3, line:800:3>
  (CXXMemberCallExpr 0x9d6c350 <line:798:5, col:36> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x9d6c32c <col:5, col:12> '<bound member function type>' .setf 0x9d61b80
      (DeclRefExpr 0x9d641e4 <col:5> 'class std::ios_base' lvalue ParmVar 0x9d64100 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9d6c370 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9d6c30c <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9d6b2d0 'boolalpha' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9d6c398 <line:799:5, col:12>
    (DeclRefExpr 0x9d6c37c <col:12> 'class std::ios_base' lvalue ParmVar 0x9d64100 '__base' 'class std::ios_base &')))


    inline std::ios_base &noboolalpha(std::ios_base &__base) (CompoundStmt 0x9d6c568 </usr/include/c++/4.6/bits/ios_base.h:805:3, line:808:3>
  (CXXMemberCallExpr 0x9d6c510 <line:806:5, col:38> 'void'
    (MemberExpr 0x9d6c4ac <col:5, col:12> '<bound member function type>' .unsetf 0x9d61dc0
      (DeclRefExpr 0x9d6c494 <col:5> 'class std::ios_base' lvalue ParmVar 0x9d6c3d0 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9d6c530 <col:19, col:29> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9d6c4ec <col:19, col:29> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9d6b2d0 'boolalpha' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9d6c558 <line:807:5, col:12>
    (DeclRefExpr 0x9d6c53c <col:12> 'class std::ios_base' lvalue ParmVar 0x9d6c3d0 '__base' 'class std::ios_base &')))


    inline std::ios_base &showbase(std::ios_base &__base) (CompoundStmt 0x9d6c768 </usr/include/c++/4.6/bits/ios_base.h:813:3, line:816:3>
  (CXXMemberCallExpr 0x9d6c710 <line:814:5, col:35> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x9d6c6ec <col:5, col:12> '<bound member function type>' .setf 0x9d61b80
      (DeclRefExpr 0x9d6c654 <col:5> 'class std::ios_base' lvalue ParmVar 0x9d6c590 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9d6c730 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9d6c6cc <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9d6b630 'showbase' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9d6c758 <line:815:5, col:12>
    (DeclRefExpr 0x9d6c73c <col:12> 'class std::ios_base' lvalue ParmVar 0x9d6c590 '__base' 'class std::ios_base &')))


    inline std::ios_base &noshowbase(std::ios_base &__base) (CompoundStmt 0x9d6c928 </usr/include/c++/4.6/bits/ios_base.h:821:3, line:824:3>
  (CXXMemberCallExpr 0x9d6c8d0 <line:822:5, col:37> 'void'
    (MemberExpr 0x9d6c86c <col:5, col:12> '<bound member function type>' .unsetf 0x9d61dc0
      (DeclRefExpr 0x9d6c854 <col:5> 'class std::ios_base' lvalue ParmVar 0x9d6c790 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9d6c8f0 <col:19, col:29> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9d6c8ac <col:19, col:29> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9d6b630 'showbase' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9d6c918 <line:823:5, col:12>
    (DeclRefExpr 0x9d6c8fc <col:12> 'class std::ios_base' lvalue ParmVar 0x9d6c790 '__base' 'class std::ios_base &')))


    inline std::ios_base &showpoint(std::ios_base &__base) (CompoundStmt 0x9d6cb28 </usr/include/c++/4.6/bits/ios_base.h:829:3, line:832:3>
  (CXXMemberCallExpr 0x9d6cad0 <line:830:5, col:36> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x9d6caac <col:5, col:12> '<bound member function type>' .setf 0x9d61b80
      (DeclRefExpr 0x9d6ca14 <col:5> 'class std::ios_base' lvalue ParmVar 0x9d6c950 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9d6caf0 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9d6ca8c <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9d6b690 'showpoint' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9d6cb18 <line:831:5, col:12>
    (DeclRefExpr 0x9d6cafc <col:12> 'class std::ios_base' lvalue ParmVar 0x9d6c950 '__base' 'class std::ios_base &')))


    inline std::ios_base &noshowpoint(std::ios_base &__base) (CompoundStmt 0x9d6cce8 </usr/include/c++/4.6/bits/ios_base.h:837:3, line:840:3>
  (CXXMemberCallExpr 0x9d6cc90 <line:838:5, col:38> 'void'
    (MemberExpr 0x9d6cc2c <col:5, col:12> '<bound member function type>' .unsetf 0x9d61dc0
      (DeclRefExpr 0x9d6cc14 <col:5> 'class std::ios_base' lvalue ParmVar 0x9d6cb50 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9d6ccb0 <col:19, col:29> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9d6cc6c <col:19, col:29> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9d6b690 'showpoint' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9d6ccd8 <line:839:5, col:12>
    (DeclRefExpr 0x9d6ccbc <col:12> 'class std::ios_base' lvalue ParmVar 0x9d6cb50 '__base' 'class std::ios_base &')))


    inline std::ios_base &showpos(std::ios_base &__base) (CompoundStmt 0x9d6cee8 </usr/include/c++/4.6/bits/ios_base.h:845:3, line:848:3>
  (CXXMemberCallExpr 0x9d6ce90 <line:846:5, col:34> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x9d6ce6c <col:5, col:12> '<bound member function type>' .setf 0x9d61b80
      (DeclRefExpr 0x9d6cdd4 <col:5> 'class std::ios_base' lvalue ParmVar 0x9d6cd10 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9d6ceb0 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9d6ce4c <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9d6b6f0 'showpos' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9d6ced8 <line:847:5, col:12>
    (DeclRefExpr 0x9d6cebc <col:12> 'class std::ios_base' lvalue ParmVar 0x9d6cd10 '__base' 'class std::ios_base &')))


    inline std::ios_base &noshowpos(std::ios_base &__base) (CompoundStmt 0x9d6d0a8 </usr/include/c++/4.6/bits/ios_base.h:853:3, line:856:3>
  (CXXMemberCallExpr 0x9d6d050 <line:854:5, col:36> 'void'
    (MemberExpr 0x9d6cfec <col:5, col:12> '<bound member function type>' .unsetf 0x9d61dc0
      (DeclRefExpr 0x9d6cfd4 <col:5> 'class std::ios_base' lvalue ParmVar 0x9d6cf10 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9d6d070 <col:19, col:29> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9d6d02c <col:19, col:29> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9d6b6f0 'showpos' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9d6d098 <line:855:5, col:12>
    (DeclRefExpr 0x9d6d07c <col:12> 'class std::ios_base' lvalue ParmVar 0x9d6cf10 '__base' 'class std::ios_base &')))


    inline std::ios_base &skipws(std::ios_base &__base) (CompoundStmt 0x9d6d2a8 </usr/include/c++/4.6/bits/ios_base.h:861:3, line:864:3>
  (CXXMemberCallExpr 0x9d6d250 <line:862:5, col:33> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x9d6d22c <col:5, col:12> '<bound member function type>' .setf 0x9d61b80
      (DeclRefExpr 0x9d6d194 <col:5> 'class std::ios_base' lvalue ParmVar 0x9d6d0d0 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9d6d270 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9d6d20c <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9d6b750 'skipws' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9d6d298 <line:863:5, col:12>
    (DeclRefExpr 0x9d6d27c <col:12> 'class std::ios_base' lvalue ParmVar 0x9d6d0d0 '__base' 'class std::ios_base &')))


    inline std::ios_base &noskipws(std::ios_base &__base) (CompoundStmt 0x9d6d468 </usr/include/c++/4.6/bits/ios_base.h:869:3, line:872:3>
  (CXXMemberCallExpr 0x9d6d410 <line:870:5, col:35> 'void'
    (MemberExpr 0x9d6d3ac <col:5, col:12> '<bound member function type>' .unsetf 0x9d61dc0
      (DeclRefExpr 0x9d6d394 <col:5> 'class std::ios_base' lvalue ParmVar 0x9d6d2d0 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9d6d430 <col:19, col:29> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9d6d3ec <col:19, col:29> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9d6b750 'skipws' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9d6d458 <line:871:5, col:12>
    (DeclRefExpr 0x9d6d43c <col:12> 'class std::ios_base' lvalue ParmVar 0x9d6d2d0 '__base' 'class std::ios_base &')))


    inline std::ios_base &uppercase(std::ios_base &__base) (CompoundStmt 0x9d6d668 </usr/include/c++/4.6/bits/ios_base.h:877:3, line:880:3>
  (CXXMemberCallExpr 0x9d6d610 <line:878:5, col:36> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x9d6d5ec <col:5, col:12> '<bound member function type>' .setf 0x9d61b80
      (DeclRefExpr 0x9d6d554 <col:5> 'class std::ios_base' lvalue ParmVar 0x9d6d490 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9d6d630 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9d6d5cc <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9d6b810 'uppercase' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9d6d658 <line:879:5, col:12>
    (DeclRefExpr 0x9d6d63c <col:12> 'class std::ios_base' lvalue ParmVar 0x9d6d490 '__base' 'class std::ios_base &')))


    inline std::ios_base &nouppercase(std::ios_base &__base) (CompoundStmt 0x9d6d828 </usr/include/c++/4.6/bits/ios_base.h:885:3, line:888:3>
  (CXXMemberCallExpr 0x9d6d7d0 <line:886:5, col:38> 'void'
    (MemberExpr 0x9d6d76c <col:5, col:12> '<bound member function type>' .unsetf 0x9d61dc0
      (DeclRefExpr 0x9d6d754 <col:5> 'class std::ios_base' lvalue ParmVar 0x9d6d690 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9d6d7f0 <col:19, col:29> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9d6d7ac <col:19, col:29> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9d6b810 'uppercase' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9d6d818 <line:887:5, col:12>
    (DeclRefExpr 0x9d6d7fc <col:12> 'class std::ios_base' lvalue ParmVar 0x9d6d690 '__base' 'class std::ios_base &')))


    inline std::ios_base &unitbuf(std::ios_base &__base) (CompoundStmt 0x9d6da28 </usr/include/c++/4.6/bits/ios_base.h:893:3, line:896:3>
  (CXXMemberCallExpr 0x9d6d9d0 <line:894:6, col:35> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x9d6d9ac <col:6, col:13> '<bound member function type>' .setf 0x9d61b80
      (DeclRefExpr 0x9d6d914 <col:6> 'class std::ios_base' lvalue ParmVar 0x9d6d850 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9d6d9f0 <col:18, col:28> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9d6d98c <col:18, col:28> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9d6b7b0 'unitbuf' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9d6da18 <line:895:6, col:13>
    (DeclRefExpr 0x9d6d9fc <col:13> 'class std::ios_base' lvalue ParmVar 0x9d6d850 '__base' 'class std::ios_base &')))


    inline std::ios_base &nounitbuf(std::ios_base &__base) (CompoundStmt 0x9d6dbe8 </usr/include/c++/4.6/bits/ios_base.h:901:3, line:904:3>
  (CXXMemberCallExpr 0x9d6db90 <line:902:6, col:37> 'void'
    (MemberExpr 0x9d6db2c <col:6, col:13> '<bound member function type>' .unsetf 0x9d61dc0
      (DeclRefExpr 0x9d6db14 <col:6> 'class std::ios_base' lvalue ParmVar 0x9d6da50 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9d6dbb0 <col:20, col:30> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9d6db6c <col:20, col:30> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9d6b7b0 'unitbuf' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9d6dbd8 <line:903:6, col:13>
    (DeclRefExpr 0x9d6dbbc <col:13> 'class std::ios_base' lvalue ParmVar 0x9d6da50 '__base' 'class std::ios_base &')))


    inline std::ios_base &internal(std::ios_base &__base) (CompoundStmt 0x9d6de40 </usr/include/c++/4.6/bits/ios_base.h:910:3, line:913:3>
  (CXXMemberCallExpr 0x9d6ddd0 <line:911:6, col:59> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x9d6ddac <col:6, col:13> '<bound member function type>' .setf 0x9d61cb0
      (DeclRefExpr 0x9d6dcd4 <col:6> 'class std::ios_base' lvalue ParmVar 0x9d6dc10 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9d6ddf8 <col:18, col:28> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9d6dd4c <col:18, col:28> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9d6b450 'internal' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
    (ImplicitCastExpr 0x9d6de08 <col:38, col:48> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9d6dd8c <col:38, col:48> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9d6b870 'adjustfield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9d6de30 <line:912:6, col:13>
    (DeclRefExpr 0x9d6de14 <col:13> 'class std::ios_base' lvalue ParmVar 0x9d6dc10 '__base' 'class std::ios_base &')))


    inline std::ios_base &left(std::ios_base &__base) (CompoundStmt 0x9d6e0a0 </usr/include/c++/4.6/bits/ios_base.h:918:3, line:921:3>
  (CXXMemberCallExpr 0x9d6e030 <line:919:5, col:54> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x9d6e00c <col:5, col:12> '<bound member function type>' .setf 0x9d61cb0
      (DeclRefExpr 0x9d6df34 <col:5> 'class std::ios_base' lvalue ParmVar 0x9d6de70 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9d6e058 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9d6dfac <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9d6b4b0 'left' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
    (ImplicitCastExpr 0x9d6e068 <col:33, col:43> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9d6dfec <col:33, col:43> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9d6b870 'adjustfield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9d6e090 <line:920:5, col:12>
    (DeclRefExpr 0x9d6e074 <col:12> 'class std::ios_base' lvalue ParmVar 0x9d6de70 '__base' 'class std::ios_base &')))


    inline std::ios_base &right(std::ios_base &__base) (CompoundStmt 0x9d6e300 </usr/include/c++/4.6/bits/ios_base.h:926:3, line:929:3>
  (CXXMemberCallExpr 0x9d6e290 <line:927:5, col:55> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x9d6e26c <col:5, col:12> '<bound member function type>' .setf 0x9d61cb0
      (DeclRefExpr 0x9d6e194 <col:5> 'class std::ios_base' lvalue ParmVar 0x9d6e0d0 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9d6e2b8 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9d6e20c <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9d6b570 'right' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
    (ImplicitCastExpr 0x9d6e2c8 <col:34, col:44> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9d6e24c <col:34, col:44> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9d6b870 'adjustfield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9d6e2f0 <line:928:5, col:12>
    (DeclRefExpr 0x9d6e2d4 <col:12> 'class std::ios_base' lvalue ParmVar 0x9d6e0d0 '__base' 'class std::ios_base &')))


    inline std::ios_base &dec(std::ios_base &__base) (CompoundStmt 0x9d6e560 </usr/include/c++/4.6/bits/ios_base.h:935:3, line:938:3>
  (CXXMemberCallExpr 0x9d6e4f0 <line:936:5, col:51> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x9d6e4cc <col:5, col:12> '<bound member function type>' .setf 0x9d61cb0
      (DeclRefExpr 0x9d6e3f4 <col:5> 'class std::ios_base' lvalue ParmVar 0x9d6e330 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9d6e518 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9d6e46c <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9d6b330 'dec' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
    (ImplicitCastExpr 0x9d6e528 <col:32, col:42> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9d6e4ac <col:32, col:42> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9d6b8d0 'basefield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9d6e550 <line:937:5, col:12>
    (DeclRefExpr 0x9d6e534 <col:12> 'class std::ios_base' lvalue ParmVar 0x9d6e330 '__base' 'class std::ios_base &')))


    inline std::ios_base &hex(std::ios_base &__base) (CompoundStmt 0x9d6e7c0 </usr/include/c++/4.6/bits/ios_base.h:943:3, line:946:3>
  (CXXMemberCallExpr 0x9d6e750 <line:944:5, col:51> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x9d6e72c <col:5, col:12> '<bound member function type>' .setf 0x9d61cb0
      (DeclRefExpr 0x9d6e654 <col:5> 'class std::ios_base' lvalue ParmVar 0x9d6e590 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9d6e778 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9d6e6cc <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9d6b3f0 'hex' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
    (ImplicitCastExpr 0x9d6e788 <col:32, col:42> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9d6e70c <col:32, col:42> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9d6b8d0 'basefield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9d6e7b0 <line:945:5, col:12>
    (DeclRefExpr 0x9d6e794 <col:12> 'class std::ios_base' lvalue ParmVar 0x9d6e590 '__base' 'class std::ios_base &')))


    inline std::ios_base &oct(std::ios_base &__base) (CompoundStmt 0x9d6ea20 </usr/include/c++/4.6/bits/ios_base.h:951:3, line:954:3>
  (CXXMemberCallExpr 0x9d6e9b0 <line:952:5, col:51> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x9d6e98c <col:5, col:12> '<bound member function type>' .setf 0x9d61cb0
      (DeclRefExpr 0x9d6e8b4 <col:5> 'class std::ios_base' lvalue ParmVar 0x9d6e7f0 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9d6e9d8 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9d6e92c <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9d6b510 'oct' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
    (ImplicitCastExpr 0x9d6e9e8 <col:32, col:42> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9d6e96c <col:32, col:42> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9d6b8d0 'basefield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9d6ea10 <line:953:5, col:12>
    (DeclRefExpr 0x9d6e9f4 <col:12> 'class std::ios_base' lvalue ParmVar 0x9d6e7f0 '__base' 'class std::ios_base &')))


    inline std::ios_base &fixed(std::ios_base &__base) (CompoundStmt 0x9d6ec80 </usr/include/c++/4.6/bits/ios_base.h:960:3, line:963:3>
  (CXXMemberCallExpr 0x9d6ec10 <line:961:5, col:54> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x9d6ebec <col:5, col:12> '<bound member function type>' .setf 0x9d61cb0
      (DeclRefExpr 0x9d6eb14 <col:5> 'class std::ios_base' lvalue ParmVar 0x9d6ea50 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9d6ec38 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9d6eb8c <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9d6b390 'fixed' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
    (ImplicitCastExpr 0x9d6ec48 <col:34, col:44> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9d6ebcc <col:34, col:44> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9d6b930 'floatfield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9d6ec70 <line:962:5, col:12>
    (DeclRefExpr 0x9d6ec54 <col:12> 'class std::ios_base' lvalue ParmVar 0x9d6ea50 '__base' 'class std::ios_base &')))


    inline std::ios_base &scientific(std::ios_base &__base) (CompoundStmt 0x9d6eee0 </usr/include/c++/4.6/bits/ios_base.h:968:3, line:971:3>
  (CXXMemberCallExpr 0x9d6ee70 <line:969:5, col:59> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x9d6ee4c <col:5, col:12> '<bound member function type>' .setf 0x9d61cb0
      (DeclRefExpr 0x9d6ed74 <col:5> 'class std::ios_base' lvalue ParmVar 0x9d6ecb0 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9d6ee98 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9d6edec <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9d6b5d0 'scientific' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
    (ImplicitCastExpr 0x9d6eea8 <col:39, col:49> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9d6ee2c <col:39, col:49> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9d6b930 'floatfield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9d6eed0 <line:970:5, col:12>
    (DeclRefExpr 0x9d6eeb4 <col:12> 'class std::ios_base' lvalue ParmVar 0x9d6ecb0 '__base' 'class std::ios_base &')))


}
namespace std {
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> streamsize __copy_streambufs_eof(__streambuf_type *, __streambuf_type *, bool &)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> streamsize __copy_streambufs_eof(__streambuf_type *, __streambuf_type *, bool &)template <typename _CharT, typename _Traits> streamsize __copy_streambufs_eof(basic_streambuf<_CharT, _Traits> *, basic_streambuf<_CharT, _Traits> *, bool &);
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_streambuf {
        class basic_streambuf;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
    protected:
    protected:
        char_type *_M_in_beg;
        char_type *_M_in_cur;
        char_type *_M_in_end;
        char_type *_M_out_beg;
        char_type *_M_out_cur;
        char_type *_M_out_end;
        std::locale _M_buf_locale;
    public:
    public:
        virtual void ~basic_streambuf();
        std::locale pubimbue(const std::locale &__loc);
        std::locale getloc() const;
        __streambuf_type *pubsetbuf(char_type *__s, streamsize __n);
        pos_type pubseekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        pos_type pubseekpos(pos_type __sp, ios_base::openmode __mode);
        int pubsync();
        streamsize in_avail();
        int_type snextc();
        int_type sbumpc();
        int_type sgetc();
        streamsize sgetn(char_type *__s, streamsize __n);
        int_type sputbackc(char_type __c);
        int_type sungetc();
        int_type sputc(char_type __c);
        streamsize sputn(const char_type *__s, streamsize __n);
    protected:
    protected:
        basic_streambuf();
        char_type *eback() const;
        char_type *gptr() const;
        char_type *egptr() const;
        void gbump(int __n);
        void setg(char_type *__gbeg, char_type *__gnext, char_type *__gend);
        char_type *pbase() const;
        char_type *pptr() const;
        char_type *epptr() const;
        void pbump(int __n);
        void setp(char_type *__pbeg, char_type *__pend);
        virtual void imbue(const std::locale &);
        virtual basic_streambuf<char_type, std::char_traits<char> > *setbuf(char_type *, streamsize);
        virtual pos_type seekoff(off_type, ios_base::seekdir, ios_base::openmode);
        virtual pos_type seekpos(pos_type, ios_base::openmode);
        virtual int sync();
        virtual streamsize showmanyc();
        virtual streamsize xsgetn(char_type *__s, streamsize __n);
        virtual int_type underflow();
        virtual int_type uflow();
        virtual int_type pbackfail(int_type);
        virtual streamsize xsputn(const char_type *__s, streamsize __n);
        virtual int_type overflow(int_type);
    public:
    public:
        void stossc();
        void __safe_gbump(streamsize __n);
        void __safe_pbump(streamsize __n);
    private:
    private:
        basic_streambuf(const __streambuf_type &__sb);
        __streambuf_type &operator=(const __streambuf_type &);
    }
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_streambuf {
        class basic_streambuf;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
    protected:
    protected:
        char_type *_M_in_beg;
        char_type *_M_in_cur;
        char_type *_M_in_end;
        char_type *_M_out_beg;
        char_type *_M_out_cur;
        char_type *_M_out_end;
        std::locale _M_buf_locale;
    public:
    public:
        virtual void ~basic_streambuf();
        std::locale pubimbue(const std::locale &__loc);
        std::locale getloc() const;
        __streambuf_type *pubsetbuf(char_type *__s, streamsize __n);
        pos_type pubseekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        pos_type pubseekpos(pos_type __sp, ios_base::openmode __mode);
        int pubsync();
        streamsize in_avail();
        int_type snextc();
        int_type sbumpc();
        int_type sgetc();
        streamsize sgetn(char_type *__s, streamsize __n);
        int_type sputbackc(char_type __c);
        int_type sungetc();
        int_type sputc(char_type __c);
        streamsize sputn(const char_type *__s, streamsize __n);
    protected:
    protected:
        basic_streambuf();
        char_type *eback() const;
        char_type *gptr() const;
        char_type *egptr() const;
        void gbump(int __n);
        void setg(char_type *__gbeg, char_type *__gnext, char_type *__gend);
        char_type *pbase() const;
        char_type *pptr() const;
        char_type *epptr() const;
        void pbump(int __n);
        void setp(char_type *__pbeg, char_type *__pend);
        virtual void imbue(const std::locale &);
        virtual basic_streambuf<char_type, std::char_traits<wchar_t> > *setbuf(char_type *, streamsize);
        virtual pos_type seekoff(off_type, ios_base::seekdir, ios_base::openmode);
        virtual pos_type seekpos(pos_type, ios_base::openmode);
        virtual int sync();
        virtual streamsize showmanyc();
        virtual streamsize xsgetn(char_type *__s, streamsize __n);
        virtual int_type underflow();
        virtual int_type uflow();
        virtual int_type pbackfail(int_type);
        virtual streamsize xsputn(const char_type *__s, streamsize __n);
        virtual int_type overflow(int_type);
    public:
    public:
        void stossc();
        void __safe_gbump(streamsize __n);
        void __safe_pbump(streamsize __n);
    private:
    private:
        basic_streambuf(const __streambuf_type &__sb);
        __streambuf_type &operator=(const __streambuf_type &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_streambuf {
        class basic_streambuf;
    public:
    public:
        typedef _CharT char_type;
        typedef _Traits traits_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
    protected:
    protected:
        char_type *_M_in_beg;
        char_type *_M_in_cur;
        char_type *_M_in_end;
        char_type *_M_out_beg;
        char_type *_M_out_cur;
        char_type *_M_out_end;
        std::locale _M_buf_locale;
    public:
    public:
        virtual void ~basic_streambuf<_CharT, _Traits>() (CompoundStmt 0x9d7eb98 </usr/include/c++/4.6/streambuf:195:7, col:9>)


        std::locale pubimbue(const std::locale &__loc) (CompoundStmt 0x9d7edc0 </usr/include/c++/4.6/streambuf:207:7, line:212:7>
  (DeclStmt 0x9d7ec70 <line:208:2, col:30>
    0x9d7ebb0 "std::locale __tmp =
      (ParenListExpr 0x9d7ec50 <col:14, col:29> 'class std::locale'
        (CallExpr 0x9d7ec30 <col:15, col:28> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9d7ebf8 <col:15, col:21> '<dependent type>' lvalue
            (CXXThisExpr 0x9d7ebe8 <col:15> 'basic_streambuf<_CharT, _Traits> *' this))))")
  (CallExpr 0x9d7ece0 <line:209:2, col:19> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9d7ec90 <col:2, col:8> '<dependent type>' lvalue
      (CXXThisExpr 0x9d7ec80 <col:2> 'basic_streambuf<_CharT, _Traits> *' this))
    (DeclRefExpr 0x9d7ecc4 <col:14> 'const class std::locale' lvalue ParmVar 0x9d77910 '__loc' 'const class std::locale &'))
  (BinaryOperator 0x9d7ed48 <line:210:2, col:18> '<dependent type>' '='
    (MemberExpr 0x9d7ed10 <col:2> 'class std::locale' lvalue ->_M_buf_locale 0x9d777f0
      (CXXThisExpr 0x9d7ed00 <col:2> 'basic_streambuf<_CharT, _Traits> *' this))
    (DeclRefExpr 0x9d7ed30 <col:18> 'const class std::locale' lvalue ParmVar 0x9d77910 '__loc' 'const class std::locale &'))
  (ReturnStmt 0x9d7edb0 <line:211:2, col:9>
    (CXXConstructExpr 0x9d7ed88 <col:9> 'class std::locale''void (const class std::locale &) throw()' elidable
      (ImplicitCastExpr 0x9d7ed78 <col:9> 'const class std::locale' lvalue <NoOp>
        (DeclRefExpr 0x9d7ed60 <col:9> 'class std::locale' lvalue Var 0x9d7ebb0 '__tmp' 'class std::locale')))))


        std::locale getloc() const (CompoundStmt 0x9d7ee38 </usr/include/c++/4.6/streambuf:224:7, col:31>
  (ReturnStmt 0x9d7ee28 <col:9, col:16>
    (MemberExpr 0x9d7ee08 <col:16> 'const class std::locale' lvalue ->_M_buf_locale 0x9d777f0
      (CXXThisExpr 0x9d7edf8 <col:16> 'const basic_streambuf<_CharT, _Traits> *' this))))


        __streambuf_type *pubsetbuf(char_type *__s, streamsize __n) (CompoundStmt 0x9d7ef00 </usr/include/c++/4.6/streambuf:237:7, col:40>
  (ReturnStmt 0x9d7eef0 <col:9, col:37>
    (CallExpr 0x9d7eec8 <col:16, col:37> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9d7ee60 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9d7ee50 <col:16> 'basic_streambuf<_CharT, _Traits> *' this))
      (DeclRefExpr 0x9d7ee94 <col:29> 'char_type *' lvalue ParmVar 0x9d77a50 '__s' 'char_type *')
      (DeclRefExpr 0x9d7eeac <col:34> 'streamsize':'int' lvalue ParmVar 0x9d77a90 '__n' 'streamsize':'int'))))


        pos_type pubseekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode = (CXXOperatorCallExpr 0x9d7e7d0 </usr/include/c++/4.6/streambuf:241:32, col:57> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0x9d7e7c0 <col:45, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0x9d7e7a8 <col:45, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9d68ac0 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0x9d7e788 <col:32, col:42> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x9d7e724 <col:32, col:42> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9d6bcd0 'in' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0x9d7e798 <col:47, col:57> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x9d7e764 <col:47, col:57> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9d6bd30 'out' 'const openmode':'const enum std::_Ios_Openmode')))
) (CompoundStmt 0x9d7efe0 </usr/include/c++/4.6/streambuf:242:7, col:53>
  (ReturnStmt 0x9d7efd0 <col:9, col:50>
    (CallExpr 0x9d7efa8 <col:16, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9d7ef28 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9d7ef18 <col:16> 'basic_streambuf<_CharT, _Traits> *' this))
      (DeclRefExpr 0x9d7ef5c <col:30> 'off_type':'typename traits_type::off_type' lvalue ParmVar 0x9d77bd0 '__off' 'off_type':'typename traits_type::off_type')
      (DeclRefExpr 0x9d7ef74 <col:37> 'class ios_base::seekdir':'enum std::_Ios_Seekdir' lvalue ParmVar 0x9d77c60 '__way' 'class ios_base::seekdir':'enum std::_Ios_Seekdir')
      (DeclRefExpr 0x9d7ef8c <col:44> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0x9d77cf0 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode'))))


        pos_type pubseekpos(pos_type __sp, ios_base::openmode __mode = (CXXOperatorCallExpr 0x9d7e8c0 </usr/include/c++/4.6/streambuf:246:32, col:57> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0x9d7e8b0 <col:45, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0x9d7e898 <col:45, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9d68ac0 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0x9d7e878 <col:32, col:42> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x9d7e814 <col:32, col:42> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9d6bcd0 'in' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0x9d7e888 <col:47, col:57> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x9d7e854 <col:47, col:57> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9d6bd30 'out' 'const openmode':'const enum std::_Ios_Openmode')))
) (CompoundStmt 0x9d7f0a8 </usr/include/c++/4.6/streambuf:247:7, col:45>
  (ReturnStmt 0x9d7f098 <col:9, col:42>
    (CallExpr 0x9d7f070 <col:16, col:42> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9d7f008 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9d7eff8 <col:16> 'basic_streambuf<_CharT, _Traits> *' this))
      (DeclRefExpr 0x9d7f03c <col:30> 'pos_type':'typename traits_type::pos_type' lvalue ParmVar 0x9d77e30 '__sp' 'pos_type':'typename traits_type::pos_type')
      (DeclRefExpr 0x9d7f054 <col:36> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0x9d77ea0 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode'))))


        int pubsync() (CompoundStmt 0x9d7f138 </usr/include/c++/4.6/streambuf:250:17, col:40>
  (ReturnStmt 0x9d7f128 <col:19, col:37>
    (CallExpr 0x9d7f108 <col:26, col:37> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9d7f0d0 <col:26, col:32> '<dependent type>' lvalue
        (CXXThisExpr 0x9d7f0c0 <col:26> 'basic_streambuf<_CharT, _Traits> *' this)))))


        streamsize in_avail() (CompoundStmt 0x9d7f3c0 </usr/include/c++/4.6/streambuf:264:7, line:267:7>
  (DeclStmt 0x9d7f2c8 <line:265:2, col:55>
    0x9d7f160 "const streamsize __ret =
      (CXXOperatorCallExpr 0x9d7f2a0 <col:27, col:54> '<dependent type>'
        (UnresolvedLookupExpr 0x9d7f268 <col:41, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
        (CallExpr 0x9d7f1e0 <col:27, col:39> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9d7f1a8 <col:27, col:33> '<dependent type>' lvalue
            (CXXThisExpr 0x9d7f198 <col:27> 'basic_streambuf<_CharT, _Traits> *' this)))
        (CallExpr 0x9d7f248 <col:43, col:54> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9d7f210 <col:43, col:49> '<dependent type>' lvalue
            (CXXThisExpr 0x9d7f200 <col:43> 'basic_streambuf<_CharT, _Traits> *' this))))")
  (ReturnStmt 0x9d7f3b0 <line:266:2, col:41>
    (ConditionalOperator 0x9d7f390 <col:9, col:41> '<dependent type>'
      (ImplicitCastExpr 0x9d7f380 <col:9> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0x9d7f370 <col:9> 'streamsize':'int' <LValueToRValue>
          (DeclRefExpr 0x9d7f2d8 <col:9> 'const streamsize':'const int' lvalue Var 0x9d7f160 '__ret' 'const streamsize':'const int')))
      (DeclRefExpr 0x9d7f2f0 <col:17> 'const streamsize':'const int' lvalue Var 0x9d7f160 '__ret' 'const streamsize':'const int')
      (CallExpr 0x9d7f350 <col:25, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d7f318 <col:25, col:31> '<dependent type>' lvalue
          (CXXThisExpr 0x9d7f308 <col:25> 'basic_streambuf<_CharT, _Traits> *' this))))))


        int_type snextc() (CompoundStmt 0x9d7f6e8 </usr/include/c++/4.6/streambuf:278:7, line:284:7>
  (DeclStmt 0x9d7f490 <line:279:2, col:37>
    0x9d7f3e0 "int_type __ret =
      (CallExpr 0x9d7f470 <col:19, col:36> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d7f438 <col:19, col:32> '<dependent type>' lvalue))")
  (IfStmt 0x9d7f6a0 <line:280:2, line:282:24>
    <<<NULL>>>
    (CallExpr 0x9d7f5e0 <line:280:6, line:281:26> '<dependent type>'
      (DeclRefExpr 0x9d7f4a0 <line:280:6> 'long (long, long)' lvalue Function 0x9ca0bd0 '__builtin_expect' 'long (long, long)')
      (UnaryOperator 0x9d7f5b8 <col:23, line:281:19> '<dependent type>' prefix '!'
        (CallExpr 0x9d7f590 <line:280:24, line:281:19> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9d7f4d8 <line:280:24, col:37> '<dependent type>' lvalue)
          (CallExpr 0x9d7f558 <col:49, col:62> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9d7f520 <col:49, col:55> '<dependent type>' lvalue
              (CXXThisExpr 0x9d7f510 <col:49> 'basic_streambuf<_CharT, _Traits> *' this)))
          (DeclRefExpr 0x9d7f574 <line:281:14> 'int_type':'typename traits_type::int_type' lvalue Var 0x9d7f3e0 '__ret' 'int_type':'typename traits_type::int_type')))
      (CXXBoolLiteralExpr 0x9d7f5d0 <col:22> '_Bool' true))
    (BinaryOperator 0x9d7f688 <line:282:4, col:24> '<dependent type>' '='
      (DeclRefExpr 0x9d7f604 <col:4> 'int_type':'typename traits_type::int_type' lvalue Var 0x9d7f3e0 '__ret' 'int_type':'typename traits_type::int_type')
      (CallExpr 0x9d7f668 <col:12, col:24> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d7f630 <col:12, col:18> '<dependent type>' lvalue
          (CXXThisExpr 0x9d7f620 <col:12> 'basic_streambuf<_CharT, _Traits> *' this))))
    <<<NULL>>>)
  (ReturnStmt 0x9d7f6d8 <line:283:2, col:9>
    (DeclRefExpr 0x9d7f6bc <col:9> 'int_type':'typename traits_type::int_type' lvalue Var 0x9d7f3e0 '__ret' 'int_type':'typename traits_type::int_type')))


        int_type sbumpc() (CompoundStmt 0x9d7fb88 </usr/include/c++/4.6/streambuf:296:7, line:306:7>
  (DeclStmt 0x9d7f748 <line:297:2, col:16>
    0x9d7f710 "int_type __ret")
  (IfStmt 0x9d7fb40 <line:298:2, line:304:24>
    <<<NULL>>>
    (CallExpr 0x9d7f8c0 <line:298:6, col:57> '<dependent type>'
      (DeclRefExpr 0x9d7f758 <col:6> 'long (long, long)' lvalue Function 0x9ca0bd0 '__builtin_expect' 'long (long, long)')
      (CXXOperatorCallExpr 0x9d7f888 <col:23, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x9d7f840 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40ad0 0x9b57c70 0x9b5ddb0 0x9cbc120 0x9cbc650 0x9cbcb80)
        (CallExpr 0x9d7f7b8 <col:23, col:34> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9d7f780 <col:23, col:29> '<dependent type>' lvalue
            (CXXThisExpr 0x9d7f770 <col:23> 'basic_streambuf<_CharT, _Traits> *' this)))
        (CallExpr 0x9d7f820 <col:38, col:50> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9d7f7e8 <col:38, col:44> '<dependent type>' lvalue
            (CXXThisExpr 0x9d7f7d8 <col:38> 'basic_streambuf<_CharT, _Traits> *' this))))
      (CXXBoolLiteralExpr 0x9d7f8b0 <col:53> '_Bool' true))
    (CompoundStmt 0x9d7fa90 <line:299:4, line:302:4>
      (BinaryOperator 0x9d7f9f8 <line:300:6, col:52> '<dependent type>' '='
        (DeclRefExpr 0x9d7f8e4 <col:6> 'int_type':'typename traits_type::int_type' lvalue Var 0x9d7f710 '__ret' 'int_type':'typename traits_type::int_type')
        (CallExpr 0x9d7f9d8 <col:14, col:52> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9d7f920 <col:14, col:27> '<dependent type>' lvalue)
          (UnaryOperator 0x9d7f9c0 <col:39, col:51> '<dependent type>' prefix '*'
            (CallExpr 0x9d7f9a0 <col:40, col:51> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9d7f968 <col:40, col:46> '<dependent type>' lvalue
                (CXXThisExpr 0x9d7f958 <col:40> 'basic_streambuf<_CharT, _Traits> *' this))))))
      (CallExpr 0x9d7fa70 <line:301:6, col:19> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d7fa20 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0x9d7fa10 <col:6> 'basic_streambuf<_CharT, _Traits> *' this))
        (IntegerLiteral 0x9d7fa58 <col:18> 'int' 1)))
    (BinaryOperator 0x9d7fb28 <line:304:4, col:24> '<dependent type>' '='
      (DeclRefExpr 0x9d7faa8 <col:4> 'int_type':'typename traits_type::int_type' lvalue Var 0x9d7f710 '__ret' 'int_type':'typename traits_type::int_type')
      (CallExpr 0x9d7fb08 <col:12, col:24> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d7fad0 <col:12, col:18> '<dependent type>' lvalue
          (CXXThisExpr 0x9d7fac0 <col:12> 'basic_streambuf<_CharT, _Traits> *' this)))))
  (ReturnStmt 0x9d7fb78 <line:305:2, col:9>
    (DeclRefExpr 0x9d7fb5c <col:9> 'int_type':'typename traits_type::int_type' lvalue Var 0x9d7f710 '__ret' 'int_type':'typename traits_type::int_type')))


        int_type sgetc() (CompoundStmt 0x9d7ff90 </usr/include/c++/4.6/streambuf:318:7, line:325:7>
  (DeclStmt 0x9d7fbe8 <line:319:2, col:16>
    0x9d7fbb0 "int_type __ret")
  (IfStmt 0x9d7ff48 <line:320:2, line:323:28>
    <<<NULL>>>
    (CallExpr 0x9d7fd60 <line:320:6, col:57> '<dependent type>'
      (DeclRefExpr 0x9d7fbf8 <col:6> 'long (long, long)' lvalue Function 0x9ca0bd0 '__builtin_expect' 'long (long, long)')
      (CXXOperatorCallExpr 0x9d7fd28 <col:23, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x9d7fce0 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40ad0 0x9b57c70 0x9b5ddb0 0x9cbc120 0x9cbc650 0x9cbcb80)
        (CallExpr 0x9d7fc58 <col:23, col:34> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9d7fc20 <col:23, col:29> '<dependent type>' lvalue
            (CXXThisExpr 0x9d7fc10 <col:23> 'basic_streambuf<_CharT, _Traits> *' this)))
        (CallExpr 0x9d7fcc0 <col:38, col:50> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9d7fc88 <col:38, col:44> '<dependent type>' lvalue
            (CXXThisExpr 0x9d7fc78 <col:38> 'basic_streambuf<_CharT, _Traits> *' this))))
      (CXXBoolLiteralExpr 0x9d7fd50 <col:53> '_Bool' true))
    (BinaryOperator 0x9d7fe98 <line:321:4, col:50> '<dependent type>' '='
      (DeclRefExpr 0x9d7fd84 <col:4> 'int_type':'typename traits_type::int_type' lvalue Var 0x9d7fbb0 '__ret' 'int_type':'typename traits_type::int_type')
      (CallExpr 0x9d7fe78 <col:12, col:50> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d7fdc0 <col:12, col:25> '<dependent type>' lvalue)
        (UnaryOperator 0x9d7fe60 <col:37, col:49> '<dependent type>' prefix '*'
          (CallExpr 0x9d7fe40 <col:38, col:49> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9d7fe08 <col:38, col:44> '<dependent type>' lvalue
              (CXXThisExpr 0x9d7fdf8 <col:38> 'basic_streambuf<_CharT, _Traits> *' this))))))
    (BinaryOperator 0x9d7ff30 <line:323:4, col:28> '<dependent type>' '='
      (DeclRefExpr 0x9d7feb0 <col:4> 'int_type':'typename traits_type::int_type' lvalue Var 0x9d7fbb0 '__ret' 'int_type':'typename traits_type::int_type')
      (CallExpr 0x9d7ff10 <col:12, col:28> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d7fed8 <col:12, col:18> '<dependent type>' lvalue
          (CXXThisExpr 0x9d7fec8 <col:12> 'basic_streambuf<_CharT, _Traits> *' this)))))
  (ReturnStmt 0x9d7ff80 <line:324:2, col:9>
    (DeclRefExpr 0x9d7ff64 <col:9> 'int_type':'typename traits_type::int_type' lvalue Var 0x9d7fbb0 '__ret' 'int_type':'typename traits_type::int_type')))


        streamsize sgetn(char_type *__s, streamsize __n) (CompoundStmt 0x9d80060 </usr/include/c++/4.6/streambuf:337:7, col:40>
  (ReturnStmt 0x9d80050 <col:9, col:37>
    (CallExpr 0x9d80028 <col:16, col:37> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9d7ffc0 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9d7ffb0 <col:16> 'basic_streambuf<_CharT, _Traits> *' this))
      (DeclRefExpr 0x9d7fff4 <col:29> 'char_type *' lvalue ParmVar 0x9d78280 '__s' 'char_type *')
      (DeclRefExpr 0x9d8000c <col:34> 'streamsize':'int' lvalue ParmVar 0x9d782c0 '__n' 'streamsize':'int'))))


        int_type sputbackc(char_type __c) (CompoundStmt 0x9d807a8 </usr/include/c++/4.6/streambuf:352:7, line:364:7>
  (DeclStmt 0x9d800b8 <line:353:2, col:16>
    0x9d80080 "int_type __ret")
  (DeclStmt 0x9d80248 <line:354:2, col:53>
    0x9d800d0 "const bool __testpos =
      (CXXOperatorCallExpr 0x9d80220 <col:25, col:52> '<dependent type>'
        (UnresolvedLookupExpr 0x9d801d8 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40ad0 0x9b57c70 0x9b5ddb0 0x9cbc120 0x9cbc650 0x9cbcb80)
        (CallExpr 0x9d80150 <col:25, col:37> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9d80118 <col:25, col:31> '<dependent type>' lvalue
            (CXXThisExpr 0x9d80108 <col:25> 'basic_streambuf<_CharT, _Traits> *' this)))
        (CallExpr 0x9d801b8 <col:41, col:52> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9d80180 <col:41, col:47> '<dependent type>' lvalue
            (CXXThisExpr 0x9d80170 <col:41> 'basic_streambuf<_CharT, _Traits> *' this))))")
  (IfStmt 0x9d80760 <line:355:2, line:362:4>
    <<<NULL>>>
    (CallExpr 0x9d80438 <line:355:6, line:356:55> '<dependent type>'
      (DeclRefExpr 0x9d80258 <line:355:6> 'long (long, long)' lvalue Function 0x9ca0bd0 '__builtin_expect' 'long (long, long)')
      (BinaryOperator 0x9d80410 <col:23, line:356:47> '<dependent type>' '||'
        (UnaryOperator 0x9d80298 <line:355:23, col:24> '_Bool' prefix '!'
          (ImplicitCastExpr 0x9d80288 <col:24> '_Bool' <LValueToRValue>
            (DeclRefExpr 0x9d80270 <col:24> 'const _Bool' lvalue Var 0x9d800d0 '__testpos' 'const _Bool')))
        (UnaryOperator 0x9d803f8 <line:356:9, col:47> '<dependent type>' prefix '!'
          (CallExpr 0x9d803d0 <col:10, col:47> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9d802d0 <col:10, col:23> '<dependent type>' lvalue)
            (DeclRefExpr 0x9d80304 <col:26> 'char_type':'_CharT' lvalue ParmVar 0x9d783d0 '__c' 'char_type':'_CharT')
            (ArraySubscriptExpr 0x9d803b8 <col:31, col:46> '<dependent type>' lvalue
              (CallExpr 0x9d80368 <col:31, col:42> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9d80330 <col:31, col:37> '<dependent type>' lvalue
                  (CXXThisExpr 0x9d80320 <col:31> 'basic_streambuf<_CharT, _Traits> *' this)))
              (UnaryOperator 0x9d803a0 <col:44, col:45> 'int' prefix '-'
                (IntegerLiteral 0x9d80388 <col:45> 'int' 1))))))
      (CXXBoolLiteralExpr 0x9d80428 <col:50> '_Bool' false))
    (BinaryOperator 0x9d80570 <line:357:4, col:57> '<dependent type>' '='
      (DeclRefExpr 0x9d8045c <col:4> 'int_type':'typename traits_type::int_type' lvalue Var 0x9d80080 '__ret' 'int_type':'typename traits_type::int_type')
      (CallExpr 0x9d80550 <col:12, col:57> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d80488 <col:12, col:18> '<dependent type>' lvalue
          (CXXThisExpr 0x9d80478 <col:12> 'basic_streambuf<_CharT, _Traits> *' this))
        (CallExpr 0x9d80530 <col:28, col:56> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9d804e0 <col:28, col:41> '<dependent type>' lvalue)
          (DeclRefExpr 0x9d80514 <col:53> 'char_type':'_CharT' lvalue ParmVar 0x9d783d0 '__c' 'char_type':'_CharT'))))
    (CompoundStmt 0x9d80748 <line:359:4, line:362:4>
      (CallExpr 0x9d80600 <line:360:6, col:20> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d80598 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0x9d80588 <col:6> 'basic_streambuf<_CharT, _Traits> *' this))
        (UnaryOperator 0x9d805e8 <col:18, col:19> 'int' prefix '-'
          (IntegerLiteral 0x9d805d0 <col:19> 'int' 1)))
      (BinaryOperator 0x9d80730 <line:361:6, col:52> '<dependent type>' '='
        (DeclRefExpr 0x9d80620 <col:6> 'int_type':'typename traits_type::int_type' lvalue Var 0x9d80080 '__ret' 'int_type':'typename traits_type::int_type')
        (CallExpr 0x9d80710 <col:14, col:52> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9d80658 <col:14, col:27> '<dependent type>' lvalue)
          (UnaryOperator 0x9d806f8 <col:39, col:51> '<dependent type>' prefix '*'
            (CallExpr 0x9d806d8 <col:40, col:51> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9d806a0 <col:40, col:46> '<dependent type>' lvalue
                (CXXThisExpr 0x9d80690 <col:40> 'basic_streambuf<_CharT, _Traits> *' this))))))))
  (ReturnStmt 0x9d80798 <line:363:2, col:9>
    (DeclRefExpr 0x9d8077c <col:9> 'int_type':'typename traits_type::int_type' lvalue Var 0x9d80080 '__ret' 'int_type':'typename traits_type::int_type')))


        int_type sungetc() (CompoundStmt 0x9d80c60 </usr/include/c++/4.6/streambuf:377:7, line:387:7>
  (DeclStmt 0x9d80808 <line:378:2, col:16>
    0x9d807d0 "int_type __ret")
  (IfStmt 0x9d80c18 <line:379:2, line:385:28>
    <<<NULL>>>
    (CallExpr 0x9d80980 <line:379:6, col:57> '<dependent type>'
      (DeclRefExpr 0x9d80818 <col:6> 'long (long, long)' lvalue Function 0x9ca0bd0 '__builtin_expect' 'long (long, long)')
      (CXXOperatorCallExpr 0x9d80948 <col:23, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x9d80900 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40ad0 0x9b57c70 0x9b5ddb0 0x9cbc120 0x9cbc650 0x9cbcb80)
        (CallExpr 0x9d80878 <col:23, col:35> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9d80840 <col:23, col:29> '<dependent type>' lvalue
            (CXXThisExpr 0x9d80830 <col:23> 'basic_streambuf<_CharT, _Traits> *' this)))
        (CallExpr 0x9d808e0 <col:39, col:50> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9d808a8 <col:39, col:45> '<dependent type>' lvalue
            (CXXThisExpr 0x9d80898 <col:39> 'basic_streambuf<_CharT, _Traits> *' this))))
      (CXXBoolLiteralExpr 0x9d80970 <col:53> '_Bool' true))
    (CompoundStmt 0x9d80b68 <line:380:4, line:383:4>
      (CallExpr 0x9d80a20 <line:381:6, col:20> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d809b8 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0x9d809a8 <col:6> 'basic_streambuf<_CharT, _Traits> *' this))
        (UnaryOperator 0x9d80a08 <col:18, col:19> 'int' prefix '-'
          (IntegerLiteral 0x9d809f0 <col:19> 'int' 1)))
      (BinaryOperator 0x9d80b50 <line:382:6, col:52> '<dependent type>' '='
        (DeclRefExpr 0x9d80a40 <col:6> 'int_type':'typename traits_type::int_type' lvalue Var 0x9d807d0 '__ret' 'int_type':'typename traits_type::int_type')
        (CallExpr 0x9d80b30 <col:14, col:52> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9d80a78 <col:14, col:27> '<dependent type>' lvalue)
          (UnaryOperator 0x9d80b18 <col:39, col:51> '<dependent type>' prefix '*'
            (CallExpr 0x9d80af8 <col:40, col:51> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9d80ac0 <col:40, col:46> '<dependent type>' lvalue
                (CXXThisExpr 0x9d80ab0 <col:40> 'basic_streambuf<_CharT, _Traits> *' this)))))))
    (BinaryOperator 0x9d80c00 <line:385:4, col:28> '<dependent type>' '='
      (DeclRefExpr 0x9d80b80 <col:4> 'int_type':'typename traits_type::int_type' lvalue Var 0x9d807d0 '__ret' 'int_type':'typename traits_type::int_type')
      (CallExpr 0x9d80be0 <col:12, col:28> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d80ba8 <col:12, col:18> '<dependent type>' lvalue
          (CXXThisExpr 0x9d80b98 <col:12> 'basic_streambuf<_CharT, _Traits> *' this)))))
  (ReturnStmt 0x9d80c50 <line:386:2, col:9>
    (DeclRefExpr 0x9d80c34 <col:9> 'int_type':'typename traits_type::int_type' lvalue Var 0x9d807d0 '__ret' 'int_type':'typename traits_type::int_type')))


        int_type sputc(char_type __c) (CompoundStmt 0x9d811e8 </usr/include/c++/4.6/streambuf:404:7, line:415:7>
  (DeclStmt 0x9d80cc8 <line:405:2, col:16>
    0x9d80c90 "int_type __ret")
  (IfStmt 0x9d811a0 <line:406:2, line:413:56>
    <<<NULL>>>
    (CallExpr 0x9d80e40 <line:406:6, col:57> '<dependent type>'
      (DeclRefExpr 0x9d80cd8 <col:6> 'long (long, long)' lvalue Function 0x9ca0bd0 '__builtin_expect' 'long (long, long)')
      (CXXOperatorCallExpr 0x9d80e08 <col:23, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x9d80dc0 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40ad0 0x9b57c70 0x9b5ddb0 0x9cbc120 0x9cbc650 0x9cbcb80)
        (CallExpr 0x9d80d38 <col:23, col:34> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9d80d00 <col:23, col:29> '<dependent type>' lvalue
            (CXXThisExpr 0x9d80cf0 <col:23> 'basic_streambuf<_CharT, _Traits> *' this)))
        (CallExpr 0x9d80da0 <col:38, col:50> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9d80d68 <col:38, col:44> '<dependent type>' lvalue
            (CXXThisExpr 0x9d80d58 <col:38> 'basic_streambuf<_CharT, _Traits> *' this))))
      (CXXBoolLiteralExpr 0x9d80e30 <col:53> '_Bool' true))
    (CompoundStmt 0x9d81058 <line:407:4, line:411:4>
      (BinaryOperator 0x9d80f00 <line:408:6, col:22> '<dependent type>' '='
        (UnaryOperator 0x9d80ed0 <col:6, col:18> '<dependent type>' prefix '*'
          (CallExpr 0x9d80eb0 <col:7, col:18> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9d80e78 <col:7, col:13> '<dependent type>' lvalue
              (CXXThisExpr 0x9d80e68 <col:7> 'basic_streambuf<_CharT, _Traits> *' this))))
        (DeclRefExpr 0x9d80ee4 <col:22> 'char_type':'_CharT' lvalue ParmVar 0x9d78560 '__c' 'char_type':'_CharT'))
      (CallExpr 0x9d80f78 <line:409:6, col:19> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d80f28 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0x9d80f18 <col:6> 'basic_streambuf<_CharT, _Traits> *' this))
        (IntegerLiteral 0x9d80f60 <col:18> 'int' 1))
      (BinaryOperator 0x9d81040 <line:410:6, col:42> '<dependent type>' '='
        (DeclRefExpr 0x9d80f98 <col:6> 'int_type':'typename traits_type::int_type' lvalue Var 0x9d80c90 '__ret' 'int_type':'typename traits_type::int_type')
        (CallExpr 0x9d81020 <col:14, col:42> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9d80fd0 <col:14, col:27> '<dependent type>' lvalue)
          (DeclRefExpr 0x9d81004 <col:39> 'char_type':'_CharT' lvalue ParmVar 0x9d78560 '__c' 'char_type':'_CharT'))))
    (BinaryOperator 0x9d81188 <line:413:4, col:56> '<dependent type>' '='
      (DeclRefExpr 0x9d81074 <col:4> 'int_type':'typename traits_type::int_type' lvalue Var 0x9d80c90 '__ret' 'int_type':'typename traits_type::int_type')
      (CallExpr 0x9d81168 <col:12, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d810a0 <col:12, col:18> '<dependent type>' lvalue
          (CXXThisExpr 0x9d81090 <col:12> 'basic_streambuf<_CharT, _Traits> *' this))
        (CallExpr 0x9d81148 <col:27, col:55> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9d810f8 <col:27, col:40> '<dependent type>' lvalue)
          (DeclRefExpr 0x9d8112c <col:52> 'char_type':'_CharT' lvalue ParmVar 0x9d78560 '__c' 'char_type':'_CharT')))))
  (ReturnStmt 0x9d811d8 <line:414:2, col:9>
    (DeclRefExpr 0x9d811bc <col:9> 'int_type':'typename traits_type::int_type' lvalue Var 0x9d80c90 '__ret' 'int_type':'typename traits_type::int_type')))


        streamsize sputn(const char_type *__s, streamsize __n) (CompoundStmt 0x9d84ba8 </usr/include/c++/4.6/streambuf:430:7, col:40>
  (ReturnStmt 0x9d84b98 <col:9, col:37>
    (CallExpr 0x9d84b70 <col:16, col:37> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9d84b08 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9d84af8 <col:16> 'basic_streambuf<_CharT, _Traits> *' this))
      (DeclRefExpr 0x9d84b3c <col:29> 'const char_type *' lvalue ParmVar 0x9d78650 '__s' 'const char_type *')
      (DeclRefExpr 0x9d84b54 <col:34> 'streamsize':'int' lvalue ParmVar 0x9d78690 '__n' 'streamsize':'int'))))


    protected:
    protected:
        basic_streambuf<_CharT, _Traits>() : _M_in_beg((IntegerLiteral 0x9d84bc0 </usr/include/c++/4.6/streambuf:443:19> 'int' 0)
), _M_in_cur((IntegerLiteral 0x9d84c18 </usr/include/c++/4.6/streambuf:443:33> 'int' 0)
), _M_in_end((IntegerLiteral 0x9d84c68 </usr/include/c++/4.6/streambuf:443:47> 'int' 0)
), _M_out_beg((IntegerLiteral 0x9d84cb8 </usr/include/c++/4.6/streambuf:444:18> 'int' 0)
), _M_out_cur((IntegerLiteral 0x9d84d08 </usr/include/c++/4.6/streambuf:444:33> 'int' 0)
), _M_out_end((IntegerLiteral 0x9d84d58 </usr/include/c++/4.6/streambuf:444:48> 'int' 0)
), _M_buf_locale((CXXBindTemporaryExpr 0x9d84de8 </usr/include/c++/4.6/streambuf:445:21, col:28> 'class std::locale' (CXXTemporary 0x9d84de0)
  (CXXTemporaryObjectExpr 0x9d84db0 <col:21, col:28> 'class std::locale''void (void) throw()'))
) (CompoundStmt 0x9d84eb8 </usr/include/c++/4.6/streambuf:446:7, col:9>)


        char_type *eback() const (CompoundStmt 0x9d84f08 </usr/include/c++/4.6/streambuf:461:21, col:41>
  (ReturnStmt 0x9d84ef8 <col:23, col:30>
    (MemberExpr 0x9d84ed8 <col:30> 'char_type *const' lvalue ->_M_in_beg 0x9d77670
      (CXXThisExpr 0x9d84ec8 <col:30> 'const basic_streambuf<_CharT, _Traits> *' this))))


        char_type *gptr() const (CompoundStmt 0x9d84f60 </usr/include/c++/4.6/streambuf:464:21, col:42>
  (ReturnStmt 0x9d84f50 <col:23, col:30>
    (MemberExpr 0x9d84f30 <col:30> 'char_type *const' lvalue ->_M_in_cur 0x9d776b0
      (CXXThisExpr 0x9d84f20 <col:30> 'const basic_streambuf<_CharT, _Traits> *' this))))


        char_type *egptr() const (CompoundStmt 0x9d84fb8 </usr/include/c++/4.6/streambuf:467:21, col:41>
  (ReturnStmt 0x9d84fa8 <col:23, col:30>
    (MemberExpr 0x9d84f88 <col:30> 'char_type *const' lvalue ->_M_in_end 0x9d776f0
      (CXXThisExpr 0x9d84f78 <col:30> 'const basic_streambuf<_CharT, _Traits> *' this))))


        void gbump(int __n) (CompoundStmt 0x9d85038 </usr/include/c++/4.6/streambuf:477:22, col:42>
  (CompoundAssignOperator 0x9d85018 <col:24, col:37> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (MemberExpr 0x9d84fe0 <col:24> 'char_type *' lvalue ->_M_in_cur 0x9d776b0
      (CXXThisExpr 0x9d84fd0 <col:24> 'basic_streambuf<_CharT, _Traits> *' this))
    (DeclRefExpr 0x9d85000 <col:37> 'int' lvalue ParmVar 0x9d78a20 '__n' 'int')))


        void setg(char_type *__gbeg, char_type *__gnext, char_type *__gend) (CompoundStmt 0x9d85170 </usr/include/c++/4.6/streambuf:489:7, line:493:7>
  (BinaryOperator 0x9d85098 <line:490:2, col:14> '<dependent type>' '='
    (MemberExpr 0x9d85060 <col:2> 'char_type *' lvalue ->_M_in_beg 0x9d77670
      (CXXThisExpr 0x9d85050 <col:2> 'basic_streambuf<_CharT, _Traits> *' this))
    (DeclRefExpr 0x9d85080 <col:14> 'char_type *' lvalue ParmVar 0x9d78af0 '__gbeg' 'char_type *'))
  (BinaryOperator 0x9d850f8 <line:491:2, col:14> '<dependent type>' '='
    (MemberExpr 0x9d850c0 <col:2> 'char_type *' lvalue ->_M_in_cur 0x9d776b0
      (CXXThisExpr 0x9d850b0 <col:2> 'basic_streambuf<_CharT, _Traits> *' this))
    (DeclRefExpr 0x9d850e0 <col:14> 'char_type *' lvalue ParmVar 0x9d78b40 '__gnext' 'char_type *'))
  (BinaryOperator 0x9d85158 <line:492:2, col:14> '<dependent type>' '='
    (MemberExpr 0x9d85120 <col:2> 'char_type *' lvalue ->_M_in_end 0x9d776f0
      (CXXThisExpr 0x9d85110 <col:2> 'basic_streambuf<_CharT, _Traits> *' this))
    (DeclRefExpr 0x9d85140 <col:14> 'char_type *' lvalue ParmVar 0x9d78b90 '__gend' 'char_type *')))


        char_type *pbase() const (CompoundStmt 0x9d851d0 </usr/include/c++/4.6/streambuf:508:21, col:42>
  (ReturnStmt 0x9d851c0 <col:23, col:30>
    (MemberExpr 0x9d851a0 <col:30> 'char_type *const' lvalue ->_M_out_beg 0x9d77730
      (CXXThisExpr 0x9d85190 <col:30> 'const basic_streambuf<_CharT, _Traits> *' this))))


        char_type *pptr() const (CompoundStmt 0x9d85228 </usr/include/c++/4.6/streambuf:511:20, col:41>
  (ReturnStmt 0x9d85218 <col:22, col:29>
    (MemberExpr 0x9d851f8 <col:29> 'char_type *const' lvalue ->_M_out_cur 0x9d77770
      (CXXThisExpr 0x9d851e8 <col:29> 'const basic_streambuf<_CharT, _Traits> *' this))))


        char_type *epptr() const (CompoundStmt 0x9d85280 </usr/include/c++/4.6/streambuf:514:21, col:42>
  (ReturnStmt 0x9d85270 <col:23, col:30>
    (MemberExpr 0x9d85250 <col:30> 'char_type *const' lvalue ->_M_out_end 0x9d777b0
      (CXXThisExpr 0x9d85240 <col:30> 'const basic_streambuf<_CharT, _Traits> *' this))))


        void pbump(int __n) (CompoundStmt 0x9d85300 </usr/include/c++/4.6/streambuf:524:22, col:43>
  (CompoundAssignOperator 0x9d852e0 <col:24, col:38> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (MemberExpr 0x9d852a8 <col:24> 'char_type *' lvalue ->_M_out_cur 0x9d77770
      (CXXThisExpr 0x9d85298 <col:24> 'basic_streambuf<_CharT, _Traits> *' this))
    (DeclRefExpr 0x9d852c8 <col:38> 'int' lvalue ParmVar 0x9d7d320 '__n' 'int')))


        void setp(char_type *__pbeg, char_type *__pend) (CompoundStmt 0x9d85420 </usr/include/c++/4.6/streambuf:535:7, line:538:7>
  (BinaryOperator 0x9d853a8 <line:536:2, col:28> '<dependent type>' '='
    (MemberExpr 0x9d85328 <col:2> 'char_type *' lvalue ->_M_out_beg 0x9d77730
      (CXXThisExpr 0x9d85318 <col:2> 'basic_streambuf<_CharT, _Traits> *' this))
    (BinaryOperator 0x9d85390 <col:15, col:28> '<dependent type>' '='
      (MemberExpr 0x9d85358 <col:15> 'char_type *' lvalue ->_M_out_cur 0x9d77770
        (CXXThisExpr 0x9d85348 <col:15> 'basic_streambuf<_CharT, _Traits> *' this))
      (DeclRefExpr 0x9d85378 <col:28> 'char_type *' lvalue ParmVar 0x9d7d3f0 '__pbeg' 'char_type *')))
  (BinaryOperator 0x9d85408 <line:537:2, col:15> '<dependent type>' '='
    (MemberExpr 0x9d853d0 <col:2> 'char_type *' lvalue ->_M_out_end 0x9d777b0
      (CXXThisExpr 0x9d853c0 <col:2> 'basic_streambuf<_CharT, _Traits> *' this))
    (DeclRefExpr 0x9d853f0 <col:15> 'char_type *' lvalue ParmVar 0x9d7d440 '__pend' 'char_type *')))


        virtual void imbue(const std::locale &) (CompoundStmt 0x9d85438 </usr/include/c++/4.6/streambuf:556:7, col:9>)


        virtual basic_streambuf<char_type, _Traits> *setbuf(char_type *, streamsize) (CompoundStmt 0x9d85468 </usr/include/c++/4.6/streambuf:571:7, col:22>
  (ReturnStmt 0x9d85458 <col:9, col:16>
    (CXXThisExpr 0x9d85448 <col:16> 'basic_streambuf<_CharT, _Traits> *' this)))


        virtual pos_type seekoff(off_type, ios_base::seekdir, ios_base::openmode = (CXXOperatorCallExpr 0x9d7e9b0 </usr/include/c++/4.6/streambuf:582:40, col:65> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0x9d7e9a0 <col:53, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0x9d7e988 <col:53, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9d68ac0 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0x9d7e968 <col:40, col:50> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x9d7e904 <col:40, col:50> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9d6bcd0 'in' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0x9d7e978 <col:55, col:65> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x9d7e944 <col:55, col:65> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9d6bd30 'out' 'const openmode':'const enum std::_Ios_Openmode')))
) (CompoundStmt 0x9d85510 </usr/include/c++/4.6/streambuf:583:7, col:40>
  (ReturnStmt 0x9d85500 <col:9, col:37>
    (CXXUnresolvedConstructExpr 0x9d854e0 <col:16, col:37> 'pos_type':'typename traits_type::pos_type'
      (CXXUnresolvedConstructExpr 0x9d854c0 <col:25, col:36> 'off_type':'typename traits_type::off_type'
        (UnaryOperator 0x9d854a8 <col:34, col:35> 'int' prefix '-'
          (IntegerLiteral 0x9d85490 <col:35> 'int' 1))))))


        virtual pos_type seekpos(pos_type, ios_base::openmode = (CXXOperatorCallExpr 0x9d7eaa0 </usr/include/c++/4.6/streambuf:594:40, col:65> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0x9d7ea90 <col:53, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0x9d7ea78 <col:53, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9d68ac0 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0x9d7ea58 <col:40, col:50> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x9d7e9f4 <col:40, col:50> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9d6bcd0 'in' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0x9d7ea68 <col:55, col:65> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x9d7ea34 <col:55, col:65> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9d6bd30 'out' 'const openmode':'const enum std::_Ios_Openmode')))
) (CompoundStmt 0x9d855b8 </usr/include/c++/4.6/streambuf:595:7, col:40>
  (ReturnStmt 0x9d855a8 <col:9, col:37>
    (CXXUnresolvedConstructExpr 0x9d85588 <col:16, col:37> 'pos_type':'typename traits_type::pos_type'
      (CXXUnresolvedConstructExpr 0x9d85568 <col:25, col:36> 'off_type':'typename traits_type::off_type'
        (UnaryOperator 0x9d85550 <col:34, col:35> 'int' prefix '-'
          (IntegerLiteral 0x9d85538 <col:35> 'int' 1))))))


        virtual int sync() (CompoundStmt 0x9d855f8 </usr/include/c++/4.6/streambuf:606:14, col:26>
  (ReturnStmt 0x9d855e8 <col:16, col:23>
    (IntegerLiteral 0x9d855d0 <col:23> 'int' 0)))


        virtual streamsize showmanyc() (CompoundStmt 0x9d85638 </usr/include/c++/4.6/streambuf:628:19, col:31>
  (ReturnStmt 0x9d85628 <col:21, col:28>
    (IntegerLiteral 0x9d85610 <col:28> 'int' 0)))


        virtual streamsize xsgetn(char_type *__s, streamsize __n);
        virtual int_type underflow() (CompoundStmt 0x9d856d8 </usr/include/c++/4.6/streambuf:667:7, col:36>
  (ReturnStmt 0x9d856c8 <col:9, col:33>
    (CallExpr 0x9d856a8 <col:16, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9d85670 <col:16, col:29> '<dependent type>' lvalue))))


        virtual int_type uflow() (CompoundStmt 0x9d85b60 </usr/include/c++/4.6/streambuf:680:7, line:690:7>
  (DeclStmt 0x9d857b0 <line:681:2, col:37>
    0x9d85700 "int_type __ret =
      (CallExpr 0x9d85790 <col:19, col:36> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d85758 <col:19, col:32> '<dependent type>' lvalue))")
  (DeclStmt 0x9d85908 <line:682:2, line:683:14>
    0x9d857d0 "const bool __testeof =
      (CallExpr 0x9d858e0 <line:682:25, line:683:13> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d85828 <line:682:25, col:38> '<dependent type>' lvalue)
        (CallExpr 0x9d858a8 <col:50, col:66> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9d85870 <col:50, col:56> '<dependent type>' lvalue
            (CXXThisExpr 0x9d85860 <col:50> 'basic_streambuf<_CharT, _Traits> *' this)))
        (DeclRefExpr 0x9d858c4 <line:683:8> 'int_type':'typename traits_type::int_type' lvalue Var 0x9d85700 '__ret' 'int_type':'typename traits_type::int_type'))")
  (IfStmt 0x9d85b18 <line:684:2, line:688:4>
    <<<NULL>>>
    (UnaryOperator 0x9d85940 <line:684:6, col:7> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9d85930 <col:7> '_Bool' <LValueToRValue>
        (DeclRefExpr 0x9d85918 <col:7> 'const _Bool' lvalue Var 0x9d857d0 '__testeof' 'const _Bool')))
    (CompoundStmt 0x9d85b00 <line:685:4, line:688:4>
      (BinaryOperator 0x9d85a68 <line:686:6, col:52> '<dependent type>' '='
        (DeclRefExpr 0x9d85954 <col:6> 'int_type':'typename traits_type::int_type' lvalue Var 0x9d85700 '__ret' 'int_type':'typename traits_type::int_type')
        (CallExpr 0x9d85a48 <col:14, col:52> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9d85990 <col:14, col:27> '<dependent type>' lvalue)
          (UnaryOperator 0x9d85a30 <col:39, col:51> '<dependent type>' prefix '*'
            (CallExpr 0x9d85a10 <col:40, col:51> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9d859d8 <col:40, col:46> '<dependent type>' lvalue
                (CXXThisExpr 0x9d859c8 <col:40> 'basic_streambuf<_CharT, _Traits> *' this))))))
      (CallExpr 0x9d85ae0 <line:687:6, col:19> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d85a90 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0x9d85a80 <col:6> 'basic_streambuf<_CharT, _Traits> *' this))
        (IntegerLiteral 0x9d85ac8 <col:18> 'int' 1)))
    <<<NULL>>>)
  (ReturnStmt 0x9d85b50 <line:689:2, col:9>
    (DeclRefExpr 0x9d85b34 <col:9> 'int_type':'typename traits_type::int_type' lvalue Var 0x9d85700 '__ret' 'int_type':'typename traits_type::int_type')))


        virtual int_type pbackfail(int_type = (CallExpr 0x9d7eb10 </usr/include/c++/4.6/streambuf:703:39, col:56> '<dependent type>'
  (DependentScopeDeclRefExpr 0x9d7eae8 <col:39, col:52> '<dependent type>' lvalue))
) (CompoundStmt 0x9d85c08 </usr/include/c++/4.6/streambuf:704:7, col:36>
  (ReturnStmt 0x9d85bf8 <col:9, col:33>
    (CallExpr 0x9d85bd8 <col:16, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9d85ba0 <col:16, col:29> '<dependent type>' lvalue))))


        virtual streamsize xsputn(const char_type *__s, streamsize __n);
        virtual int_type overflow(int_type = (CallExpr 0x9d7eb78 </usr/include/c++/4.6/streambuf:747:37, col:54> '<dependent type>'
  (DependentScopeDeclRefExpr 0x9d7eb50 <col:37, col:50> '<dependent type>' lvalue))
) (CompoundStmt 0x9d85ca8 </usr/include/c++/4.6/streambuf:748:7, col:36>
  (ReturnStmt 0x9d85c98 <col:9, col:33>
    (CallExpr 0x9d85c78 <col:16, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9d85c40 <col:16, col:29> '<dependent type>' lvalue))))


    public:
    public:
        void stossc() (CompoundStmt 0x9d85f08 </usr/include/c++/4.6/streambuf:763:7, line:768:7>
  (IfStmt 0x9d85ee8 <line:764:2, line:767:16>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9d85dd8 <line:764:6, col:33> '<dependent type>'
      (UnresolvedLookupExpr 0x9d85d90 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40ad0 0x9b57c70 0x9b5ddb0 0x9cbc120 0x9cbc650 0x9cbcb80)
      (CallExpr 0x9d85d08 <col:6, col:17> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d85cd0 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0x9d85cc0 <col:6> 'basic_streambuf<_CharT, _Traits> *' this)))
      (CallExpr 0x9d85d70 <col:21, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d85d38 <col:21, col:27> '<dependent type>' lvalue
          (CXXThisExpr 0x9d85d28 <col:21> 'basic_streambuf<_CharT, _Traits> *' this))))
    (CallExpr 0x9d85e60 <line:765:4, col:17> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9d85e10 <col:4, col:10> '<dependent type>' lvalue
        (CXXThisExpr 0x9d85e00 <col:4> 'basic_streambuf<_CharT, _Traits> *' this))
      (IntegerLiteral 0x9d85e48 <col:16> 'int' 1))
    (CallExpr 0x9d85ec8 <line:767:4, col:16> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9d85e90 <col:4, col:10> '<dependent type>' lvalue
        (CXXThisExpr 0x9d85e80 <col:4> 'basic_streambuf<_CharT, _Traits> *' this)))))


        void __safe_gbump(streamsize __n) (CompoundStmt 0x9d85f88 </usr/include/c++/4.6/streambuf:773:36, col:56>
  (CompoundAssignOperator 0x9d85f68 <col:38, col:51> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (MemberExpr 0x9d85f30 <col:38> 'char_type *' lvalue ->_M_in_cur 0x9d776b0
      (CXXThisExpr 0x9d85f20 <col:38> 'basic_streambuf<_CharT, _Traits> *' this))
    (DeclRefExpr 0x9d85f50 <col:51> 'streamsize':'int' lvalue ParmVar 0x9d7e260 '__n' 'streamsize':'int')))


        void __safe_pbump(streamsize __n) (CompoundStmt 0x9d86008 </usr/include/c++/4.6/streambuf:776:36, col:57>
  (CompoundAssignOperator 0x9d85fe8 <col:38, col:52> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (MemberExpr 0x9d85fb0 <col:38> 'char_type *' lvalue ->_M_out_cur 0x9d77770
      (CXXThisExpr 0x9d85fa0 <col:38> 'basic_streambuf<_CharT, _Traits> *' this))
    (DeclRefExpr 0x9d85fd0 <col:52> 'streamsize':'int' lvalue ParmVar 0x9d7e350 '__n' 'streamsize':'int')))


    private:
    private:
        basic_streambuf<_CharT, _Traits>(const __streambuf_type &__sb) : _M_in_beg((CXXDependentScopeMemberExpr 0x9d86038 </usr/include/c++/4.6/streambuf:782:19, col:24> '<dependent type>' lvalue
  (DeclRefExpr 0x9d8601c <col:19> 'const __streambuf_type':'const basic_streambuf<_CharT, _Traits>' lvalue ParmVar 0x9d7e4a0 '__sb' 'const __streambuf_type &'))
), _M_in_cur((CXXDependentScopeMemberExpr 0x9d860c0 </usr/include/c++/4.6/streambuf:782:46, col:51> '<dependent type>' lvalue
  (DeclRefExpr 0x9d860a8 <col:46> 'const __streambuf_type':'const basic_streambuf<_CharT, _Traits>' lvalue ParmVar 0x9d7e4a0 '__sb' 'const __streambuf_type &'))
), _M_in_end((CXXDependentScopeMemberExpr 0x9d86150 </usr/include/c++/4.6/streambuf:783:17, col:22> '<dependent type>' lvalue
  (DeclRefExpr 0x9d86138 <col:17> 'const __streambuf_type':'const basic_streambuf<_CharT, _Traits>' lvalue ParmVar 0x9d7e4a0 '__sb' 'const __streambuf_type &'))
), _M_out_beg((CXXDependentScopeMemberExpr 0x9d861e0 </usr/include/c++/4.6/streambuf:783:45, col:50> '<dependent type>' lvalue
  (DeclRefExpr 0x9d861c8 <col:45> 'const __streambuf_type':'const basic_streambuf<_CharT, _Traits>' lvalue ParmVar 0x9d7e4a0 '__sb' 'const __streambuf_type &'))
), _M_out_cur((CXXDependentScopeMemberExpr 0x9d86270 </usr/include/c++/4.6/streambuf:784:18, col:23> '<dependent type>' lvalue
  (DeclRefExpr 0x9d86258 <col:18> 'const __streambuf_type':'const basic_streambuf<_CharT, _Traits>' lvalue ParmVar 0x9d7e4a0 '__sb' 'const __streambuf_type &'))
), _M_out_end((CXXDependentScopeMemberExpr 0x9d86300 </usr/include/c++/4.6/streambuf:784:47, col:52> '<dependent type>' lvalue
  (DeclRefExpr 0x9d862e8 <col:47> 'const __streambuf_type':'const basic_streambuf<_CharT, _Traits>' lvalue ParmVar 0x9d7e4a0 '__sb' 'const __streambuf_type &'))
), _M_buf_locale((CXXDependentScopeMemberExpr 0x9d86390 </usr/include/c++/4.6/streambuf:785:21, col:26> '<dependent type>' lvalue
  (DeclRefExpr 0x9d86378 <col:21> 'const __streambuf_type':'const basic_streambuf<_CharT, _Traits>' lvalue ParmVar 0x9d7e4a0 '__sb' 'const __streambuf_type &'))
) (CompoundStmt 0x9d86428 </usr/include/c++/4.6/streambuf:786:7, col:9>)


        __streambuf_type &operator=(const __streambuf_type &) (CompoundStmt 0x9d86470 </usr/include/c++/4.6/streambuf:789:42, col:58>
  (ReturnStmt 0x9d86460 <col:44, col:52>
    (UnaryOperator 0x9d86448 <col:51, col:52> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9d86438 <col:52> 'basic_streambuf<_CharT, _Traits> *' this))))


    };
    streamsize __copy_streambufs_eof(basic_streambuf<char> *__sbin, basic_streambuf<char> *__sbout, bool &__ineof);
    streamsize __copy_streambufs_eof(basic_streambuf<wchar_t> *__sbin, basic_streambuf<wchar_t> *__sbout, bool &__ineof);
}
namespace std {
    streamsize xsgetn(char_type *__s, streamsize __n) (CompoundStmt 0x9d88758 </usr/include/c++/4.6/bits/streambuf.tcc:47:5, line:75:5>
  (DeclStmt 0x9d87950 <line:48:7, col:27>
    0x9d87900 "streamsize __ret =
      (IntegerLiteral 0x9d87938 <col:26> 'int' 0)")
  (WhileStmt 0x9d88708 <line:49:7, line:73:2>
    <<<NULL>>>
    (BinaryOperator 0x9d879b0 <line:49:14, col:22> '_Bool' '<'
      (ImplicitCastExpr 0x9d87990 <col:14> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0x9d87960 <col:14> 'streamsize':'int' lvalue Var 0x9d87900 '__ret' 'streamsize':'int'))
      (ImplicitCastExpr 0x9d879a0 <col:22> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0x9d87978 <col:22> 'streamsize':'int' lvalue ParmVar 0x9d87800 '__n' 'streamsize':'int')))
    (CompoundStmt 0x9d886e8 <line:50:2, line:73:2>
      (DeclStmt 0x9d87b38 <line:51:4, col:61>
        0x9d879d0 "const streamsize __buf_len =
          (CXXOperatorCallExpr 0x9d87b10 <col:33, col:60> '<dependent type>'
            (UnresolvedLookupExpr 0x9d87ad8 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
            (CallExpr 0x9d87a50 <col:33, col:45> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9d87a18 <col:33, col:39> '<dependent type>' lvalue
                (CXXThisExpr 0x9d87a08 <col:33> 'basic_streambuf<_CharT, _Traits> *' this)))
            (CallExpr 0x9d87ab8 <col:49, col:60> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9d87a80 <col:49, col:55> '<dependent type>' lvalue
                (CXXThisExpr 0x9d87a70 <col:49> 'basic_streambuf<_CharT, _Traits> *' this))))")
      (IfStmt 0x9d88258 <line:52:4, line:60:6>
        <<<NULL>>>
        (ImplicitCastExpr 0x9d87b70 <line:52:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0x9d87b60 <col:8> 'streamsize':'int' <LValueToRValue>
            (DeclRefExpr 0x9d87b48 <col:8> 'const streamsize':'const int' lvalue Var 0x9d879d0 '__buf_len' 'const streamsize':'const int')))
        (CompoundStmt 0x9d88230 <line:53:6, line:60:6>
          (DeclStmt 0x9d87c30 <line:54:8, col:50>
            0x9d87b90 "const streamsize __remaining =
              (BinaryOperator 0x9d87c18 <col:39, col:45> 'int' '-'
                (ImplicitCastExpr 0x9d87bf8 <col:39> 'streamsize':'int' <LValueToRValue>
                  (DeclRefExpr 0x9d87bc4 <col:39> 'streamsize':'int' lvalue ParmVar 0x9d87800 '__n' 'streamsize':'int'))
                (ImplicitCastExpr 0x9d87c08 <col:45> 'streamsize':'int' <LValueToRValue>
                  (DeclRefExpr 0x9d87bdc <col:45> 'streamsize':'int' lvalue Var 0x9d87900 '__ret' 'streamsize':'int')))")
          (DeclStmt 0x9d87fd0 <line:55:8, col:65>
            0x9d87c50 "const streamsize __len =
              (ImplicitCastExpr 0x9d87fc0 <col:33, col:64> 'int':'int' <LValueToRValue>
                (CallExpr 0x9d87f98 <col:33, col:64> 'const int':'const int' lvalue
                  (ImplicitCastExpr 0x9d87f88 <col:33, col:38> 'const int &(*)(const int &, const int &)' <FunctionToPointerDecay>
                    (DeclRefExpr 0x9d87f28 <col:33, col:38> 'const int &(const int &, const int &)' lvalue Function 0x9d87e80 'min' 'const int &(const int &, const int &)' (FunctionTemplate 0x9b76440 'min')))
                  (DeclRefExpr 0x9d87ce0 <col:42> 'const streamsize':'const int' lvalue Var 0x9d879d0 '__buf_len' 'const streamsize':'const int')
                  (DeclRefExpr 0x9d87cf8 <col:53> 'const streamsize':'const int' lvalue Var 0x9d87b90 '__remaining' 'const streamsize':'const int')))")
          (CallExpr 0x9d880d8 <line:56:8, col:50> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9d88008 <col:8, col:21> '<dependent type>' lvalue)
            (DeclRefExpr 0x9d8803c <col:26> 'char_type *' lvalue ParmVar 0x9d877c0 '__s' 'char_type *')
            (CallExpr 0x9d880a0 <col:31, col:42> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9d88068 <col:31, col:37> '<dependent type>' lvalue
                (CXXThisExpr 0x9d88058 <col:31> 'basic_streambuf<_CharT, _Traits> *' this)))
            (DeclRefExpr 0x9d880bc <col:45> 'const streamsize':'const int' lvalue Var 0x9d87c50 '__len' 'const streamsize':'const int'))
          (CompoundAssignOperator 0x9d88140 <line:57:8, col:17> 'streamsize':'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
            (DeclRefExpr 0x9d88100 <col:8> 'streamsize':'int' lvalue Var 0x9d87900 '__ret' 'streamsize':'int')
            (ImplicitCastExpr 0x9d88130 <col:17> 'streamsize':'int' <LValueToRValue>
              (DeclRefExpr 0x9d88118 <col:17> 'const streamsize':'const int' lvalue Var 0x9d87c50 '__len' 'const streamsize':'const int')))
          (CompoundAssignOperator 0x9d88190 <line:58:8, col:15> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
            (DeclRefExpr 0x9d88160 <col:8> 'char_type *' lvalue ParmVar 0x9d877c0 '__s' 'char_type *')
            (DeclRefExpr 0x9d88178 <col:15> 'const streamsize':'const int' lvalue Var 0x9d87c50 '__len' 'const streamsize':'const int'))
          (CallExpr 0x9d88210 <line:59:8, col:32> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9d881c0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9d881b0 <col:8> 'basic_streambuf<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9d881f4 <col:27> 'const streamsize':'const int' lvalue Var 0x9d87c50 '__len' 'const streamsize':'const int')))
        <<<NULL>>>)
      (IfStmt 0x9d886c8 <line:62:4, line:72:6>
        <<<NULL>>>
        (BinaryOperator 0x9d882c8 <line:62:8, col:16> '_Bool' '<'
          (ImplicitCastExpr 0x9d882a8 <col:8> 'streamsize':'int' <LValueToRValue>
            (DeclRefExpr 0x9d88274 <col:8> 'streamsize':'int' lvalue Var 0x9d87900 '__ret' 'streamsize':'int'))
          (ImplicitCastExpr 0x9d882b8 <col:16> 'streamsize':'int' <LValueToRValue>
            (DeclRefExpr 0x9d8828c <col:16> 'streamsize':'int' lvalue ParmVar 0x9d87800 '__n' 'streamsize':'int')))
        (CompoundStmt 0x9d886b0 <line:63:6, line:72:6>
          (DeclStmt 0x9d88390 <line:64:8, col:42>
            0x9d882f0 "const int_type __c =
              (CallExpr 0x9d88370 <col:29, col:41> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9d88338 <col:29, col:35> '<dependent type>' lvalue
                  (CXXThisExpr 0x9d88328 <col:29> 'basic_streambuf<_CharT, _Traits> *' this)))")
          (IfStmt 0x9d88690 <line:65:8, line:71:3>
            <<<NULL>>>
            (UnaryOperator 0x9d884b0 <line:65:12, col:61> '<dependent type>' prefix '!'
              (CallExpr 0x9d88488 <col:13, col:61> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9d883c0 <col:13, col:26> '<dependent type>' lvalue)
                (DeclRefExpr 0x9d883f4 <col:38> 'const int_type':'const typename traits_type::int_type' lvalue Var 0x9d882f0 '__c' 'const int_type':'const typename traits_type::int_type')
                (CallExpr 0x9d88468 <col:43, col:60> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9d88430 <col:43, col:56> '<dependent type>' lvalue))))
            (CompoundStmt 0x9d88670 <line:66:3, line:69:3>
              (CallExpr 0x9d88618 <line:67:5, col:63> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9d884f0 <col:5, col:18> '<dependent type>' lvalue)
                (UnaryOperator 0x9d88570 <col:25, col:29> '<dependent type>' prefix '*'
                  (UnaryOperator 0x9d88558 <col:26, col:29> '<dependent type>' postfix '++'
                    (DeclRefExpr 0x9d88524 <col:26> 'char_type *' lvalue ParmVar 0x9d877c0 '__s' 'char_type *')))
                (CallExpr 0x9d885f8 <col:33, col:62> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9d885a8 <col:33, col:46> '<dependent type>' lvalue)
                  (DeclRefExpr 0x9d885dc <col:59> 'const int_type':'const typename traits_type::int_type' lvalue Var 0x9d882f0 '__c' 'const int_type':'const typename traits_type::int_type')))
              (UnaryOperator 0x9d88658 <line:68:5, col:7> 'streamsize':'int' lvalue prefix '++'
                (DeclRefExpr 0x9d8863c <col:7> 'streamsize':'int' lvalue Var 0x9d87900 '__ret' 'streamsize':'int')))
            (BreakStmt 0x9d88688 <line:71:3>)))
        <<<NULL>>>)))
  (ReturnStmt 0x9d88748 <line:74:7, col:14>
    (ImplicitCastExpr 0x9d88738 <col:14> 'streamsize':'int' <LValueToRValue>
      (DeclRefExpr 0x9d8871c <col:14> 'streamsize':'int' lvalue Var 0x9d87900 '__ret' 'streamsize':'int'))))


    streamsize xsputn(const char_type *__s, streamsize __n) (CompoundStmt 0x9d8ad18 </usr/include/c++/4.6/bits/streambuf.tcc:81:5, line:109:5>
  (DeclStmt 0x9d8a1e0 <line:82:7, col:27>
    0x9d8a190 "streamsize __ret =
      (IntegerLiteral 0x9d8a1c8 <col:26> 'int' 0)")
  (WhileStmt 0x9d8acc8 <line:83:7, line:107:2>
    <<<NULL>>>
    (BinaryOperator 0x9d8a240 <line:83:14, col:22> '_Bool' '<'
      (ImplicitCastExpr 0x9d8a220 <col:14> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0x9d8a1f0 <col:14> 'streamsize':'int' lvalue Var 0x9d8a190 '__ret' 'streamsize':'int'))
      (ImplicitCastExpr 0x9d8a230 <col:22> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0x9d8a208 <col:22> 'streamsize':'int' lvalue ParmVar 0x9d88a60 '__n' 'streamsize':'int')))
    (CompoundStmt 0x9d8aca8 <line:84:2, line:107:2>
      (DeclStmt 0x9d8a3c8 <line:85:4, col:61>
        0x9d8a260 "const streamsize __buf_len =
          (CXXOperatorCallExpr 0x9d8a3a0 <col:33, col:60> '<dependent type>'
            (UnresolvedLookupExpr 0x9d8a368 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
            (CallExpr 0x9d8a2e0 <col:33, col:45> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9d8a2a8 <col:33, col:39> '<dependent type>' lvalue
                (CXXThisExpr 0x9d8a298 <col:33> 'basic_streambuf<_CharT, _Traits> *' this)))
            (CallExpr 0x9d8a348 <col:49, col:60> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9d8a310 <col:49, col:55> '<dependent type>' lvalue
                (CXXThisExpr 0x9d8a300 <col:49> 'basic_streambuf<_CharT, _Traits> *' this))))")
      (IfStmt 0x9d8a8c0 <line:86:4, line:94:6>
        <<<NULL>>>
        (ImplicitCastExpr 0x9d8a400 <line:86:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0x9d8a3f0 <col:8> 'streamsize':'int' <LValueToRValue>
            (DeclRefExpr 0x9d8a3d8 <col:8> 'const streamsize':'const int' lvalue Var 0x9d8a260 '__buf_len' 'const streamsize':'const int')))
        (CompoundStmt 0x9d8a898 <line:87:6, line:94:6>
          (DeclStmt 0x9d8a4c0 <line:88:8, col:50>
            0x9d8a420 "const streamsize __remaining =
              (BinaryOperator 0x9d8a4a8 <col:39, col:45> 'int' '-'
                (ImplicitCastExpr 0x9d8a488 <col:39> 'streamsize':'int' <LValueToRValue>
                  (DeclRefExpr 0x9d8a454 <col:39> 'streamsize':'int' lvalue ParmVar 0x9d88a60 '__n' 'streamsize':'int'))
                (ImplicitCastExpr 0x9d8a498 <col:45> 'streamsize':'int' <LValueToRValue>
                  (DeclRefExpr 0x9d8a46c <col:45> 'streamsize':'int' lvalue Var 0x9d8a190 '__ret' 'streamsize':'int')))")
          (DeclStmt 0x9d8a638 <line:89:8, col:65>
            0x9d8a4e0 "const streamsize __len =
              (ImplicitCastExpr 0x9d8a628 <col:33, col:64> 'int':'int' <LValueToRValue>
                (CallExpr 0x9d8a600 <col:33, col:64> 'const int':'const int' lvalue
                  (ImplicitCastExpr 0x9d8a5f0 <col:33, col:38> 'const int &(*)(const int &, const int &)' <FunctionToPointerDecay>
                    (DeclRefExpr 0x9d8a5c8 <col:33, col:38> 'const int &(const int &, const int &)' lvalue Function 0x9d87e80 'min' 'const int &(const int &, const int &)' (FunctionTemplate 0x9b76440 'min')))
                  (DeclRefExpr 0x9d8a568 <col:42> 'const streamsize':'const int' lvalue Var 0x9d8a260 '__buf_len' 'const streamsize':'const int')
                  (DeclRefExpr 0x9d8a580 <col:53> 'const streamsize':'const int' lvalue Var 0x9d8a420 '__remaining' 'const streamsize':'const int')))")
          (CallExpr 0x9d8a740 <line:90:8, col:50> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9d8a670 <col:8, col:21> '<dependent type>' lvalue)
            (CallExpr 0x9d8a6f0 <col:26, col:37> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9d8a6b8 <col:26, col:32> '<dependent type>' lvalue
                (CXXThisExpr 0x9d8a6a8 <col:26> 'basic_streambuf<_CharT, _Traits> *' this)))
            (DeclRefExpr 0x9d8a70c <col:40> 'const char_type *' lvalue ParmVar 0x9d88a20 '__s' 'const char_type *')
            (DeclRefExpr 0x9d8a724 <col:45> 'const streamsize':'const int' lvalue Var 0x9d8a4e0 '__len' 'const streamsize':'const int'))
          (CompoundAssignOperator 0x9d8a7a8 <line:91:8, col:17> 'streamsize':'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
            (DeclRefExpr 0x9d8a768 <col:8> 'streamsize':'int' lvalue Var 0x9d8a190 '__ret' 'streamsize':'int')
            (ImplicitCastExpr 0x9d8a798 <col:17> 'streamsize':'int' <LValueToRValue>
              (DeclRefExpr 0x9d8a780 <col:17> 'const streamsize':'const int' lvalue Var 0x9d8a4e0 '__len' 'const streamsize':'const int')))
          (CompoundAssignOperator 0x9d8a7f8 <line:92:8, col:15> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
            (DeclRefExpr 0x9d8a7c8 <col:8> 'const char_type *' lvalue ParmVar 0x9d88a20 '__s' 'const char_type *')
            (DeclRefExpr 0x9d8a7e0 <col:15> 'const streamsize':'const int' lvalue Var 0x9d8a4e0 '__len' 'const streamsize':'const int'))
          (CallExpr 0x9d8a878 <line:93:8, col:32> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9d8a828 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9d8a818 <col:8> 'basic_streambuf<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9d8a85c <col:27> 'const streamsize':'const int' lvalue Var 0x9d8a4e0 '__len' 'const streamsize':'const int')))
        <<<NULL>>>)
      (IfStmt 0x9d8ac88 <line:96:4, line:106:6>
        <<<NULL>>>
        (BinaryOperator 0x9d8a930 <line:96:8, col:16> '_Bool' '<'
          (ImplicitCastExpr 0x9d8a910 <col:8> 'streamsize':'int' <LValueToRValue>
            (DeclRefExpr 0x9d8a8dc <col:8> 'streamsize':'int' lvalue Var 0x9d8a190 '__ret' 'streamsize':'int'))
          (ImplicitCastExpr 0x9d8a920 <col:16> 'streamsize':'int' <LValueToRValue>
            (DeclRefExpr 0x9d8a8f4 <col:16> 'streamsize':'int' lvalue ParmVar 0x9d88a60 '__n' 'streamsize':'int')))
        (CompoundStmt 0x9d8ac70 <line:97:6, line:106:6>
          (DeclStmt 0x9d8aa98 <line:98:8, col:69>
            0x9d8a950 "int_type __c =
              (CallExpr 0x9d8aa78 <col:23, col:68> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9d8a998 <col:23, col:29> '<dependent type>' lvalue
                  (CXXThisExpr 0x9d8a988 <col:23> 'basic_streambuf<_CharT, _Traits> *' this))
                (CallExpr 0x9d8aa58 <col:38, col:67> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9d8a9f0 <col:38, col:51> '<dependent type>' lvalue)
                  (UnaryOperator 0x9d8aa40 <col:63, col:64> '<dependent type>' prefix '*'
                    (DeclRefExpr 0x9d8aa24 <col:64> 'const char_type *' lvalue ParmVar 0x9d88a20 '__s' 'const char_type *'))))")
          (IfStmt 0x9d8ac50 <line:99:8, line:105:3>
            <<<NULL>>>
            (UnaryOperator 0x9d8abb8 <line:99:12, col:61> '<dependent type>' prefix '!'
              (CallExpr 0x9d8ab90 <col:13, col:61> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9d8aac8 <col:13, col:26> '<dependent type>' lvalue)
                (DeclRefExpr 0x9d8aafc <col:38> 'int_type':'typename traits_type::int_type' lvalue Var 0x9d8a950 '__c' 'int_type':'typename traits_type::int_type')
                (CallExpr 0x9d8ab70 <col:43, col:60> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9d8ab38 <col:43, col:56> '<dependent type>' lvalue))))
            (CompoundStmt 0x9d8ac30 <line:100:3, line:103:3>
              (UnaryOperator 0x9d8abe8 <line:101:5, col:7> 'streamsize':'int' lvalue prefix '++'
                (DeclRefExpr 0x9d8abcc <col:7> 'streamsize':'int' lvalue Var 0x9d8a190 '__ret' 'streamsize':'int'))
              (UnaryOperator 0x9d8ac18 <line:102:5, col:7> '<dependent type>' prefix '++'
                (DeclRefExpr 0x9d8abfc <col:7> 'const char_type *' lvalue ParmVar 0x9d88a20 '__s' 'const char_type *')))
            (BreakStmt 0x9d8ac48 <line:105:3>)))
        <<<NULL>>>)))
  (ReturnStmt 0x9d8ad08 <line:108:7, col:14>
    (ImplicitCastExpr 0x9d8acf8 <col:14> 'streamsize':'int' <LValueToRValue>
      (DeclRefExpr 0x9d8acdc <col:14> 'streamsize':'int' lvalue Var 0x9d8a190 '__ret' 'streamsize':'int'))))


    template <typename _CharT = char, typename _Traits = std::char_traits<char>> streamsize __copy_streambufs_eof(__streambuf_type *, __streambuf_type *, bool &)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> streamsize __copy_streambufs_eof(__streambuf_type *, __streambuf_type *, bool &)template <typename _CharT, typename _Traits> streamsize __copy_streambufs_eof(basic_streambuf<_CharT, _Traits> *__sbin, basic_streambuf<_CharT, _Traits> *__sbout, bool &__ineof) (CompoundStmt 0x9d8b8b8 </usr/include/c++/4.6/bits/streambuf.tcc:119:5, line:135:5>
  (DeclStmt 0x9d8b260 <line:120:7, col:27>
    0x9d8b210 "streamsize __ret =
      (IntegerLiteral 0x9d8b248 <col:26> 'int' 0)")
  (BinaryOperator 0x9d8b298 <line:121:7, col:17> '_Bool' lvalue '='
    (DeclRefExpr 0x9d8b270 <col:7> '_Bool' lvalue ParmVar 0x9d8b0e0 '__ineof' '_Bool &')
    (CXXBoolLiteralExpr 0x9d8b288 <col:17> '_Bool' true))
  (DeclStmt 0x9d8b3c8 <line:122:7, col:55>
    0x9d8b320 "typename _Traits::int_type __c =
      (CallExpr 0x9d8b3a8 <col:40, col:54> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d8b370 <col:40, col:48> '<dependent type>' lvalue
          (DeclRefExpr 0x9d8b354 <col:40> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0x9d8af20 '__sbin' 'basic_streambuf<_CharT, _Traits> *')))")
  (WhileStmt 0x9d8b868 <line:123:7, line:133:2>
    <<<NULL>>>
    (UnaryOperator 0x9d8b4c8 <line:123:14, col:55> '<dependent type>' prefix '!'
      (CallExpr 0x9d8b4a0 <col:15, col:55> '<dependent type>'
        (DependentScopeDeclRefExpr 0x9d8b3f8 <col:15, col:24> '<dependent type>' lvalue)
        (DeclRefExpr 0x9d8b41c <col:36> 'typename _Traits::int_type' lvalue Var 0x9d8b320 '__c' 'typename _Traits::int_type')
        (CallExpr 0x9d8b480 <col:41, col:54> '<dependent type>'
          (DependentScopeDeclRefExpr 0x9d8b458 <col:41, col:50> '<dependent type>' lvalue))))
    (CompoundStmt 0x9d8b848 <line:124:2, line:133:2>
      (BinaryOperator 0x9d8b5e8 <line:125:4, col:51> '<dependent type>' '='
        (DeclRefExpr 0x9d8b4dc <col:4> 'typename _Traits::int_type' lvalue Var 0x9d8b320 '__c' 'typename _Traits::int_type')
        (CallExpr 0x9d8b5c8 <col:10, col:51> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9d8b510 <col:10, col:19> '<dependent type>' lvalue
            (DeclRefExpr 0x9d8b4f4 <col:10> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0x9d8b090 '__sbout' 'basic_streambuf<_CharT, _Traits> *'))
          (CallExpr 0x9d8b5a8 <col:25, col:50> '<dependent type>'
            (DependentScopeDeclRefExpr 0x9d8b568 <col:25, col:34> '<dependent type>' lvalue)
            (DeclRefExpr 0x9d8b58c <col:47> 'typename _Traits::int_type' lvalue Var 0x9d8b320 '__c' 'typename _Traits::int_type'))))
      (IfStmt 0x9d8b758 <line:126:4, line:130:6>
        <<<NULL>>>
        (CallExpr 0x9d8b6d0 <line:126:8, col:48> '<dependent type>'
          (DependentScopeDeclRefExpr 0x9d8b628 <col:8, col:17> '<dependent type>' lvalue)
          (DeclRefExpr 0x9d8b64c <col:29> 'typename _Traits::int_type' lvalue Var 0x9d8b320 '__c' 'typename _Traits::int_type')
          (CallExpr 0x9d8b6b0 <col:34, col:47> '<dependent type>'
            (DependentScopeDeclRefExpr 0x9d8b688 <col:34, col:43> '<dependent type>' lvalue)))
        (CompoundStmt 0x9d8b740 <line:127:6, line:130:6>
          (BinaryOperator 0x9d8b720 <line:128:8, col:18> '_Bool' lvalue '='
            (DeclRefExpr 0x9d8b6f4 <col:8> '_Bool' lvalue ParmVar 0x9d8b0e0 '__ineof' '_Bool &')
            (CXXBoolLiteralExpr 0x9d8b710 <col:18> '_Bool' false))
          (BreakStmt 0x9d8b738 <line:129:8>))
        <<<NULL>>>)
      (UnaryOperator 0x9d8b790 <line:131:4, col:6> 'streamsize':'int' lvalue prefix '++'
        (DeclRefExpr 0x9d8b774 <col:6> 'streamsize':'int' lvalue Var 0x9d8b210 '__ret' 'streamsize':'int'))
      (BinaryOperator 0x9d8b830 <line:132:4, col:25> '<dependent type>' '='
        (DeclRefExpr 0x9d8b7a4 <col:4> 'typename _Traits::int_type' lvalue Var 0x9d8b320 '__c' 'typename _Traits::int_type')
        (CallExpr 0x9d8b810 <col:10, col:25> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9d8b7d8 <col:10, col:18> '<dependent type>' lvalue
            (DeclRefExpr 0x9d8b7bc <col:10> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0x9d8af20 '__sbin' 'basic_streambuf<_CharT, _Traits> *'))))))
  (ReturnStmt 0x9d8b8a8 <line:134:7, col:14>
    (ImplicitCastExpr 0x9d8b898 <col:14> 'streamsize':'int' <LValueToRValue>
      (DeclRefExpr 0x9d8b87c <col:14> 'streamsize':'int' lvalue Var 0x9d8b210 '__ret' 'streamsize':'int'))))

;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> inline streamsize __copy_streambufs(basic_streambuf<char, std::char_traits<char> > *__sbin, basic_streambuf<char, std::char_traits<char> > *__sbout)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> inline streamsize __copy_streambufs(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sbin, basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sbout)template <typename _CharT, typename _Traits> inline streamsize __copy_streambufs(basic_streambuf<_CharT, _Traits> *__sbin, basic_streambuf<_CharT, _Traits> *__sbout) (CompoundStmt 0x9d8be70 </usr/include/c++/4.6/bits/streambuf.tcc:141:5, line:144:5>
  (DeclStmt 0x9d8bda8 <line:142:7, col:19>
    0x9d8bd70 "bool __ineof")
  (ReturnStmt 0x9d8be60 <line:143:7, col:60>
    (CallExpr 0x9d8be38 <col:14, col:60> '<dependent type>'
      (UnresolvedLookupExpr 0x9d8bdb8 <col:14> '<overloaded function type>' lvalue (ADL) = '1' 0x9d8b1d0)
      (DeclRefExpr 0x9d8bdec <col:36> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0x9d8bac0 '__sbin' 'basic_streambuf<_CharT, _Traits> *')
      (DeclRefExpr 0x9d8be04 <col:44> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0x9d8bc30 '__sbout' 'basic_streambuf<_CharT, _Traits> *')
      (DeclRefExpr 0x9d8be1c <col:53> '_Bool' lvalue Var 0x9d8bd70 '__ineof' '_Bool'))))

;
    class basic_streambuf {
        class basic_streambuf;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
    protected:
    protected:
        char_type *_M_in_beg;
        char_type *_M_in_cur;
        char_type *_M_in_end;
        char_type *_M_out_beg;
        char_type *_M_out_cur;
        char_type *_M_out_end;
        std::locale _M_buf_locale;
    public:
    public:
        virtual void ~basic_streambuf();
        std::locale pubimbue(const std::locale &__loc);
        std::locale getloc() const;
        __streambuf_type *pubsetbuf(char_type *__s, streamsize __n);
        pos_type pubseekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        pos_type pubseekpos(pos_type __sp, ios_base::openmode __mode);
        int pubsync();
        streamsize in_avail();
        int_type snextc();
        int_type sbumpc();
        int_type sgetc();
        streamsize sgetn(char_type *__s, streamsize __n);
        int_type sputbackc(char_type __c);
        int_type sungetc();
        int_type sputc(char_type __c);
        streamsize sputn(const char_type *__s, streamsize __n);
    protected:
    protected:
        basic_streambuf();
        char_type *eback() const;
        char_type *gptr() const;
        char_type *egptr() const;
        void gbump(int __n);
        void setg(char_type *__gbeg, char_type *__gnext, char_type *__gend);
        char_type *pbase() const;
        char_type *pptr() const;
        char_type *epptr() const;
        void pbump(int __n);
        void setp(char_type *__pbeg, char_type *__pend);
        virtual void imbue(const std::locale &);
        virtual basic_streambuf<char_type, std::char_traits<char> > *setbuf(char_type *, streamsize);
        virtual pos_type seekoff(off_type, ios_base::seekdir, ios_base::openmode);
        virtual pos_type seekpos(pos_type, ios_base::openmode);
        virtual int sync();
        virtual streamsize showmanyc();
        virtual streamsize xsgetn(char_type *__s, streamsize __n);
        virtual int_type underflow();
        virtual int_type uflow();
        virtual int_type pbackfail(int_type);
        virtual streamsize xsputn(const char_type *__s, streamsize __n);
        virtual int_type overflow(int_type);
    public:
    public:
        void stossc();
        void __safe_gbump(streamsize __n);
        void __safe_pbump(streamsize __n);
    private:
    private:
        basic_streambuf(const __streambuf_type &__sb);
        __streambuf_type &operator=(const __streambuf_type &);
    };
    class basic_streambuf {
        class basic_streambuf;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
    protected:
    protected:
        char_type *_M_in_beg;
        char_type *_M_in_cur;
        char_type *_M_in_end;
        char_type *_M_out_beg;
        char_type *_M_out_cur;
        char_type *_M_out_end;
        std::locale _M_buf_locale;
    public:
    public:
        virtual void ~basic_streambuf();
        std::locale pubimbue(const std::locale &__loc);
        std::locale getloc() const;
        __streambuf_type *pubsetbuf(char_type *__s, streamsize __n);
        pos_type pubseekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        pos_type pubseekpos(pos_type __sp, ios_base::openmode __mode);
        int pubsync();
        streamsize in_avail();
        int_type snextc();
        int_type sbumpc();
        int_type sgetc();
        streamsize sgetn(char_type *__s, streamsize __n);
        int_type sputbackc(char_type __c);
        int_type sungetc();
        int_type sputc(char_type __c);
        streamsize sputn(const char_type *__s, streamsize __n);
    protected:
    protected:
        basic_streambuf();
        char_type *eback() const;
        char_type *gptr() const;
        char_type *egptr() const;
        void gbump(int __n);
        void setg(char_type *__gbeg, char_type *__gnext, char_type *__gend);
        char_type *pbase() const;
        char_type *pptr() const;
        char_type *epptr() const;
        void pbump(int __n);
        void setp(char_type *__pbeg, char_type *__pend);
        virtual void imbue(const std::locale &);
        virtual basic_streambuf<char_type, std::char_traits<wchar_t> > *setbuf(char_type *, streamsize);
        virtual pos_type seekoff(off_type, ios_base::seekdir, ios_base::openmode);
        virtual pos_type seekpos(pos_type, ios_base::openmode);
        virtual int sync();
        virtual streamsize showmanyc();
        virtual streamsize xsgetn(char_type *__s, streamsize __n);
        virtual int_type underflow();
        virtual int_type uflow();
        virtual int_type pbackfail(int_type);
        virtual streamsize xsputn(const char_type *__s, streamsize __n);
        virtual int_type overflow(int_type);
    public:
    public:
        void stossc();
        void __safe_gbump(streamsize __n);
        void __safe_pbump(streamsize __n);
    private:
    private:
        basic_streambuf(const __streambuf_type &__sb);
        __streambuf_type &operator=(const __streambuf_type &);
    };
}
namespace std {
    using ::wctrans_t;
    ;
    using ::wctype_t;
    ;
    using ::wint_t;
    ;
    using ::iswalnum;
    ;
    using ::iswalpha;
    ;
    using ::iswblank;
    ;
    using ::iswcntrl;
    ;
    using ::iswctype;
    ;
    using ::iswdigit;
    ;
    using ::iswgraph;
    ;
    using ::iswlower;
    ;
    using ::iswprint;
    ;
    using ::iswpunct;
    ;
    using ::iswspace;
    ;
    using ::iswupper;
    ;
    using ::iswxdigit;
    ;
    using ::towctrans;
    ;
    using ::towlower;
    ;
    using ::towupper;
    ;
    using ::wctrans;
    ;
    using ::wctype;
    ;
}
namespace std {
    struct ctype_base {
        struct ctype_base;
        typedef const int *__to_type;
        typedef unsigned short mask;
        static const mask upper = (ImplicitCastExpr 0x9d9fc60 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:50:35> 'const mask':'const unsigned short' <IntegralCast>
  (DeclRefExpr 0x9d9fc44 <col:35> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x9bdf700 '_ISupper' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
;
        static const mask lower = (ImplicitCastExpr 0x9d9fcd0 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:51:32> 'const mask':'const unsigned short' <IntegralCast>
  (DeclRefExpr 0x9d9fcb4 <col:32> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x9bdf950 '_ISlower' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
;
        static const mask alpha = (ImplicitCastExpr 0x9d9fd40 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:52:32> 'const mask':'const unsigned short' <IntegralCast>
  (DeclRefExpr 0x9d9fd24 <col:32> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x9bdfba0 '_ISalpha' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
;
        static const mask digit = (ImplicitCastExpr 0x9d9fdb0 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:53:32> 'const mask':'const unsigned short' <IntegralCast>
  (DeclRefExpr 0x9d9fd94 <col:32> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x9bdfdf0 '_ISdigit' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
;
        static const mask xdigit = (ImplicitCastExpr 0x9d9fe20 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:54:33> 'const mask':'const unsigned short' <IntegralCast>
  (DeclRefExpr 0x9d9fe04 <col:33> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x9be4d30 '_ISxdigit' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
;
        static const mask space = (ImplicitCastExpr 0x9d9fe90 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:55:32> 'const mask':'const unsigned short' <IntegralCast>
  (DeclRefExpr 0x9d9fe74 <col:32> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x9be4f80 '_ISspace' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
;
        static const mask print = (ImplicitCastExpr 0x9d9ff00 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:56:32> 'const mask':'const unsigned short' <IntegralCast>
  (DeclRefExpr 0x9d9fee4 <col:32> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x9be51d0 '_ISprint' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
;
        static const mask graph = (ImplicitCastExpr 0x9da0000 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:57:32, col:54> 'const mask':'const unsigned short' <IntegralCast>
  (BinaryOperator 0x9d9ffe8 <col:32, col:54> 'int' '|'
    (BinaryOperator 0x9d9ffa8 <col:32, col:43> 'int' '|'
      (ImplicitCastExpr 0x9d9ff88 <col:32> 'int' <IntegralCast>
        (DeclRefExpr 0x9d9ff54 <col:32> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x9bdfba0 '_ISalpha' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
      (ImplicitCastExpr 0x9d9ff98 <col:43> 'int' <IntegralCast>
        (DeclRefExpr 0x9d9ff6c <col:43> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x9bdfdf0 '_ISdigit' 'enum <anonymous at /usr/include/ctype.h:48:1>')))
    (ImplicitCastExpr 0x9d9ffd8 <col:54> 'int' <IntegralCast>
      (DeclRefExpr 0x9d9ffc0 <col:54> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x9be5b10 '_ISpunct' 'enum <anonymous at /usr/include/ctype.h:48:1>'))))
;
        static const mask cntrl = (ImplicitCastExpr 0x9da0070 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:58:32> 'const mask':'const unsigned short' <IntegralCast>
  (DeclRefExpr 0x9da0054 <col:32> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x9be58c0 '_IScntrl' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
;
        static const mask punct = (ImplicitCastExpr 0x9da00e0 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:59:32> 'const mask':'const unsigned short' <IntegralCast>
  (DeclRefExpr 0x9da00c4 <col:32> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x9be5b10 '_ISpunct' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
;
        static const mask alnum = (ImplicitCastExpr 0x9da01a0 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:60:32, col:43> 'const mask':'const unsigned short' <IntegralCast>
  (BinaryOperator 0x9da0188 <col:32, col:43> 'int' '|'
    (ImplicitCastExpr 0x9da0168 <col:32> 'int' <IntegralCast>
      (DeclRefExpr 0x9da0134 <col:32> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x9bdfba0 '_ISalpha' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
    (ImplicitCastExpr 0x9da0178 <col:43> 'int' <IntegralCast>
      (DeclRefExpr 0x9da014c <col:43> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x9bdfdf0 '_ISdigit' 'enum <anonymous at /usr/include/ctype.h:48:1>'))))
;
        inline std::ctype_base &operator=(const std::ctype_base &) throw();
    };
}
namespace std {
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class istreambuf_iterator
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class istreambuf_iterator
template <typename _CharT, typename _Traits = char_traits<_CharT>> class istreambuf_iterator : public iterator<std::input_iterator_tag, _CharT, typename _Traits::off_type, _CharT *, _CharT &> {
        class istreambuf_iterator;
    public:
    public:
        typedef _CharT char_type;
        typedef _Traits traits_type;
        typedef typename _Traits::int_type int_type;
        typedef basic_streambuf<_CharT, _Traits> streambuf_type;
        typedef basic_istream<_CharT, _Traits> istream_type;
        ;
        ;
        ;
    private:
    private:
        mutable streambuf_type *_M_sbuf;
        mutable int_type _M_c;
    public:
    public:
        istreambuf_iterator<_CharT, _Traits>() throw() : _M_sbuf((IntegerLiteral 0x9daec30 </usr/include/c++/4.6/bits/streambuf_iterator.h:98:17> 'int' 0)
), _M_c((CallExpr 0x9daed20 </usr/include/c++/4.6/bits/streambuf_iterator.h:98:26, col:43> '<dependent type>'
  (CXXDependentScopeMemberExpr 0x9daece8 <col:26, col:39> '<dependent type>' lvalue))
) (CompoundStmt 0x9daed80 </usr/include/c++/4.6/bits/streambuf_iterator.h:98:46, col:48>)


        istreambuf_iterator<_CharT, _Traits>(istream_type &__s) throw() : _M_sbuf((CallExpr 0x9daede0 </usr/include/c++/4.6/bits/streambuf_iterator.h:102:17, col:27> '<dependent type>'
  (CXXDependentScopeMemberExpr 0x9daeda8 <col:17, col:21> '<dependent type>' lvalue
    (DeclRefExpr 0x9daed90 <col:17> 'istream_type':'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9dae520 '__s' 'istream_type &')))
), _M_c((CallExpr 0x9daee90 </usr/include/c++/4.6/bits/streambuf_iterator.h:102:36, col:53> '<dependent type>'
  (CXXDependentScopeMemberExpr 0x9daee58 <col:36, col:49> '<dependent type>' lvalue))
) (CompoundStmt 0x9daeef0 </usr/include/c++/4.6/bits/streambuf_iterator.h:102:56, col:58>)


        istreambuf_iterator<_CharT, _Traits>(streambuf_type *__s) throw() : _M_sbuf((DeclRefExpr 0x9daef00 </usr/include/c++/4.6/bits/streambuf_iterator.h:106:17> 'streambuf_type *' lvalue ParmVar 0x9dae640 '__s' 'streambuf_type *')
), _M_c((CallExpr 0x9daefb0 </usr/include/c++/4.6/bits/streambuf_iterator.h:106:28, col:45> '<dependent type>'
  (CXXDependentScopeMemberExpr 0x9daef78 <col:28, col:41> '<dependent type>' lvalue))
) (CompoundStmt 0x9daf010 </usr/include/c++/4.6/bits/streambuf_iterator.h:106:48, col:50>)


        char_type operator*() const (CompoundStmt 0x9daf110 </usr/include/c++/4.6/bits/streambuf_iterator.h:113:7, line:122:7>
  (ReturnStmt 0x9daf100 <line:121:2, col:43>
    (CallExpr 0x9daf0e0 <col:9, col:43> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9daf058 <col:9, col:22> '<dependent type>' lvalue)
      (CallExpr 0x9daf0c0 <col:35, col:42> '<dependent type>'
        (MemberExpr 0x9daf0a0 <col:35> '<bound member function type>' ->_M_get 0x9daeb50
          (CXXThisExpr 0x9daf090 <col:35> 'const istreambuf_iterator<_CharT, _Traits> *' this))))))


        istreambuf_iterator<_CharT, _Traits> &operator++() (CompoundStmt 0x9daf320 </usr/include/c++/4.6/bits/streambuf_iterator.h:127:7, line:137:7>
  (NullStmt 0x9daf128 <line:130:25>)
  (IfStmt 0x9daf2c8 <line:131:2, line:135:4>
    <<<NULL>>>
    (MemberExpr 0x9daf148 <line:131:6> 'streambuf_type *' lvalue ->_M_sbuf 0x9dae380
      (CXXThisExpr 0x9daf138 <col:6> 'istreambuf_iterator<_CharT, _Traits> *' this))
    (CompoundStmt 0x9daf2b0 <line:132:4, line:135:4>
      (CallExpr 0x9daf1d0 <line:133:6, col:22> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9daf198 <col:6, col:15> '<dependent type>' lvalue
          (MemberExpr 0x9daf178 <col:6> 'streambuf_type *' lvalue ->_M_sbuf 0x9dae380
            (CXXThisExpr 0x9daf168 <col:6> 'istreambuf_iterator<_CharT, _Traits> *' this))))
      (BinaryOperator 0x9daf298 <line:134:6, col:30> '<dependent type>' '='
        (MemberExpr 0x9daf200 <col:6> 'int_type':'typename _Traits::int_type' lvalue ->_M_c 0x9dae3d0
          (CXXThisExpr 0x9daf1f0 <col:6> 'istreambuf_iterator<_CharT, _Traits> *' this))
        (CallExpr 0x9daf278 <col:13, col:30> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9daf240 <col:13, col:26> '<dependent type>' lvalue))))
    <<<NULL>>>)
  (ReturnStmt 0x9daf310 <line:136:2, col:10>
    (UnaryOperator 0x9daf2f8 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9daf2e8 <col:10> 'istreambuf_iterator<_CharT, _Traits> *' this))))


        istreambuf_iterator<_CharT, _Traits> operator++(int) (CompoundStmt 0x9daf610 </usr/include/c++/4.6/bits/streambuf_iterator.h:142:7, line:154:7>
  (NullStmt 0x9daf340 <line:145:25>)
  (DeclStmt 0x9daf3c0 <line:147:2, col:35>
    0x9daf360 "istreambuf_iterator<_CharT, _Traits> __old =
      (UnaryOperator 0x9daf3a8 <col:30, col:31> '<dependent type>' prefix '*'
        (CXXThisExpr 0x9daf398 <col:31> 'istreambuf_iterator<_CharT, _Traits> *' this))")
  (IfStmt 0x9daf5c8 <line:148:2, line:152:4>
    <<<NULL>>>
    (MemberExpr 0x9daf3e0 <line:148:6> 'streambuf_type *' lvalue ->_M_sbuf 0x9dae380
      (CXXThisExpr 0x9daf3d0 <col:6> 'istreambuf_iterator<_CharT, _Traits> *' this))
    (CompoundStmt 0x9daf5b0 <line:149:4, line:152:4>
      (BinaryOperator 0x9daf4d8 <line:150:6, col:35> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0x9daf418 <col:6, col:12> '<dependent type>' lvalue
          (DeclRefExpr 0x9daf400 <col:6> 'istreambuf_iterator<_CharT, _Traits>' lvalue Var 0x9daf360 '__old' 'istreambuf_iterator<_CharT, _Traits>'))
        (CallExpr 0x9daf4b8 <col:19, col:35> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9daf480 <col:19, col:28> '<dependent type>' lvalue
            (MemberExpr 0x9daf460 <col:19> 'streambuf_type *' lvalue ->_M_sbuf 0x9dae380
              (CXXThisExpr 0x9daf450 <col:19> 'istreambuf_iterator<_CharT, _Traits> *' this)))))
      (BinaryOperator 0x9daf598 <line:151:6, col:30> '<dependent type>' '='
        (MemberExpr 0x9daf500 <col:6> 'int_type':'typename _Traits::int_type' lvalue ->_M_c 0x9dae3d0
          (CXXThisExpr 0x9daf4f0 <col:6> 'istreambuf_iterator<_CharT, _Traits> *' this))
        (CallExpr 0x9daf578 <col:13, col:30> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9daf540 <col:13, col:26> '<dependent type>' lvalue))))
    <<<NULL>>>)
  (ReturnStmt 0x9daf600 <line:153:2, col:9>
    (DeclRefExpr 0x9daf5e4 <col:9> 'istreambuf_iterator<_CharT, _Traits>' lvalue Var 0x9daf360 '__old' 'istreambuf_iterator<_CharT, _Traits>')))


        bool equal(const istreambuf_iterator<_CharT, _Traits> &__b) const (CompoundStmt 0x9daf780 </usr/include/c++/4.6/bits/streambuf_iterator.h:162:7, col:48>
  (ReturnStmt 0x9daf770 <col:9, col:45>
    (CXXOperatorCallExpr 0x9daf748 <col:16, col:45> '<dependent type>'
      (UnresolvedLookupExpr 0x9daf6f0 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90 0x9cb91e0 0x9cb9c50 0x9cba490 0x9cbaa00)
      (CallExpr 0x9daf660 <col:16, col:26> '<dependent type>'
        (MemberExpr 0x9daf640 <col:16> '<bound member function type>' ->_M_at_eof 0x9daebd0
          (CXXThisExpr 0x9daf630 <col:16> 'const istreambuf_iterator<_CharT, _Traits> *' this)))
      (CallExpr 0x9daf6d0 <col:31, col:45> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9daf698 <col:31, col:35> '<dependent type>' lvalue
          (DeclRefExpr 0x9daf67c <col:31> 'const istreambuf_iterator<_CharT, _Traits>' lvalue ParmVar 0x9dae9d0 '__b' 'const istreambuf_iterator<_CharT, _Traits> &'))))))


    private:
    private:
        int_type _M_get() const (CompoundStmt 0x9dafd20 </usr/include/c++/4.6/bits/streambuf_iterator.h:167:7, line:181:7>
  (DeclStmt 0x9daf850 <line:168:2, col:43>
    0x9daf7a0 "const int_type __eof =
      (CallExpr 0x9daf830 <col:25, col:42> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9daf7f8 <col:25, col:38> '<dependent type>' lvalue))")
  (DeclStmt 0x9daf8c0 <line:169:2, col:24>
    0x9daf870 "int_type __ret =
      (DeclRefExpr 0x9daf8a4 <col:19> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x9daf7a0 '__eof' 'const int_type':'const typename _Traits::int_type')")
  (IfStmt 0x9dafcd8 <line:170:2, line:179:4>
    <<<NULL>>>
    (MemberExpr 0x9daf8e0 <line:170:6> 'streambuf_type *' lvalue ->_M_sbuf 0x9dae380
      (CXXThisExpr 0x9daf8d0 <col:6> 'const istreambuf_iterator<_CharT, _Traits> *' this))
    (CompoundStmt 0x9dafcc0 <line:171:4, line:179:4>
      (IfStmt 0x9dafca0 <line:172:6, line:178:18>
        <<<NULL>>>
        (UnaryOperator 0x9daf9c8 <line:172:10, col:47> '<dependent type>' prefix '!'
          (CallExpr 0x9daf9a0 <col:11, col:47> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9daf920 <col:11, col:24> '<dependent type>' lvalue)
            (MemberExpr 0x9daf968 <col:36> 'int_type':'typename _Traits::int_type' lvalue ->_M_c 0x9dae3d0
              (CXXThisExpr 0x9daf958 <col:36> 'const istreambuf_iterator<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9daf988 <col:42> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x9daf7a0 '__eof' 'const int_type':'const typename _Traits::int_type')))
        (BinaryOperator 0x9dafa28 <line:173:8, col:16> '<dependent type>' '='
          (DeclRefExpr 0x9daf9dc <col:8> 'int_type':'typename _Traits::int_type' lvalue Var 0x9daf870 '__ret' 'int_type':'typename _Traits::int_type')
          (MemberExpr 0x9dafa08 <col:16> 'int_type':'typename _Traits::int_type' lvalue ->_M_c 0x9dae3d0
            (CXXThisExpr 0x9daf9f8 <col:16> 'const istreambuf_iterator<_CharT, _Traits> *' this)))
        (IfStmt 0x9dafc80 <line:174:11, line:178:18>
          <<<NULL>>>
          (UnaryOperator 0x9dafba8 <line:174:15, line:175:18> '<dependent type>' prefix '!'
            (CallExpr 0x9dafb80 <line:174:16, line:175:18> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9dafa60 <line:174:16, col:29> '<dependent type>' lvalue)
              (ParenExpr 0x9dafb50 <col:41, col:66> '<dependent type>'
                (BinaryOperator 0x9dafb38 <col:42, col:65> '<dependent type>' '='
                  (DeclRefExpr 0x9dafa94 <col:42> 'int_type':'typename _Traits::int_type' lvalue Var 0x9daf870 '__ret' 'int_type':'typename _Traits::int_type')
                  (CallExpr 0x9dafb18 <col:50, col:65> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9dafae0 <col:50, col:59> '<dependent type>' lvalue
                      (MemberExpr 0x9dafac0 <col:50> 'streambuf_type *' lvalue ->_M_sbuf 0x9dae380
                        (CXXThisExpr 0x9dafab0 <col:50> 'const istreambuf_iterator<_CharT, _Traits> *' this))))))
              (DeclRefExpr 0x9dafb64 <line:175:13> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x9daf7a0 '__eof' 'const int_type':'const typename _Traits::int_type')))
          (BinaryOperator 0x9dafc08 <line:176:8, col:15> '<dependent type>' '='
            (MemberExpr 0x9dafbd0 <col:8> 'int_type':'typename _Traits::int_type' lvalue ->_M_c 0x9dae3d0
              (CXXThisExpr 0x9dafbc0 <col:8> 'const istreambuf_iterator<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9dafbf0 <col:15> 'int_type':'typename _Traits::int_type' lvalue Var 0x9daf870 '__ret' 'int_type':'typename _Traits::int_type'))
          (BinaryOperator 0x9dafc68 <line:178:8, col:18> '<dependent type>' '='
            (MemberExpr 0x9dafc30 <col:8> 'streambuf_type *' lvalue ->_M_sbuf 0x9dae380
              (CXXThisExpr 0x9dafc20 <col:8> 'const istreambuf_iterator<_CharT, _Traits> *' this))
            (IntegerLiteral 0x9dafc50 <col:18> 'int' 0)))))
    <<<NULL>>>)
  (ReturnStmt 0x9dafd10 <line:180:2, col:9>
    (DeclRefExpr 0x9dafcf4 <col:9> 'int_type':'typename _Traits::int_type' lvalue Var 0x9daf870 '__ret' 'int_type':'typename _Traits::int_type')))


        bool _M_at_eof() const (CompoundStmt 0x9daff08 </usr/include/c++/4.6/bits/streambuf_iterator.h:185:7, line:188:7>
  (DeclStmt 0x9dafe00 <line:186:2, col:43>
    0x9dafd50 "const int_type __eof =
      (CallExpr 0x9dafde0 <col:25, col:42> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9dafda8 <col:25, col:38> '<dependent type>' lvalue))")
  (ReturnStmt 0x9dafef8 <line:187:2, col:49>
    (CallExpr 0x9dafed0 <col:9, col:49> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9dafe30 <col:9, col:22> '<dependent type>' lvalue)
      (CallExpr 0x9dafe98 <col:34, col:41> '<dependent type>'
        (MemberExpr 0x9dafe78 <col:34> '<bound member function type>' ->_M_get 0x9daeb50
          (CXXThisExpr 0x9dafe68 <col:34> 'const istreambuf_iterator<_CharT, _Traits> *' this)))
      (DeclRefExpr 0x9dafeb4 <col:44> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x9dafd50 '__eof' 'const int_type':'const typename _Traits::int_type'))))


    };
    template <typename _CharT, typename _Traits> inline bool operator==(const istreambuf_iterator<_CharT, _Traits> &__a, const istreambuf_iterator<_CharT, _Traits> &__b) (CompoundStmt 0x9db0458 </usr/include/c++/4.6/bits/streambuf_iterator.h:195:5, col:30>
  (ReturnStmt 0x9db0448 <col:7, col:27>
    (CallExpr 0x9db0428 <col:14, col:27> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9db03d8 <col:14, col:18> '<dependent type>' lvalue
        (DeclRefExpr 0x9db03c0 <col:14> 'const istreambuf_iterator<_CharT, _Traits>' lvalue ParmVar 0x9db0120 '__a' 'const istreambuf_iterator<_CharT, _Traits> &'))
      (DeclRefExpr 0x9db040c <col:24> 'const istreambuf_iterator<_CharT, _Traits>' lvalue ParmVar 0x9db0290 '__b' 'const istreambuf_iterator<_CharT, _Traits> &'))))

;
    template <typename _CharT, typename _Traits> inline bool operator!=(const istreambuf_iterator<_CharT, _Traits> &__a, const istreambuf_iterator<_CharT, _Traits> &__b) (CompoundStmt 0x9db0980 </usr/include/c++/4.6/bits/streambuf_iterator.h:201:5, col:31>
  (ReturnStmt 0x9db0970 <col:7, col:28>
    (UnaryOperator 0x9db0958 <col:14, col:28> '<dependent type>' prefix '!'
      (CallExpr 0x9db0938 <col:15, col:28> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9db08e8 <col:15, col:19> '<dependent type>' lvalue
          (DeclRefExpr 0x9db08d0 <col:15> 'const istreambuf_iterator<_CharT, _Traits>' lvalue ParmVar 0x9db0650 '__a' 'const istreambuf_iterator<_CharT, _Traits> &'))
        (DeclRefExpr 0x9db091c <col:25> 'const istreambuf_iterator<_CharT, _Traits>' lvalue ParmVar 0x9db07c0 '__b' 'const istreambuf_iterator<_CharT, _Traits> &')))))

;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class ostreambuf_iterator
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class ostreambuf_iterator
template <typename _CharT, typename _Traits = char_traits<_CharT>> class ostreambuf_iterator : public iterator<std::output_iterator_tag, void, void, void, void> {
        class ostreambuf_iterator;
    public:
    public:
        typedef _CharT char_type;
        typedef _Traits traits_type;
        typedef basic_streambuf<_CharT, _Traits> streambuf_type;
        typedef basic_ostream<_CharT, _Traits> ostream_type;
        ;
    private:
    private:
        streambuf_type *_M_sbuf;
        bool _M_failed;
    public:
    public:
        ostreambuf_iterator<_CharT, _Traits>(ostream_type &__s) throw() : _M_sbuf((CallExpr 0x9db3308 </usr/include/c++/4.6/bits/streambuf_iterator.h:231:17, col:27> '<dependent type>'
  (CXXDependentScopeMemberExpr 0x9db32d0 <col:17, col:21> '<dependent type>' lvalue
    (DeclRefExpr 0x9db32b8 <col:17> 'ostream_type':'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9db1b30 '__s' 'ostream_type &')))
), _M_failed((UnaryOperator 0x9db33b8 </usr/include/c++/4.6/bits/streambuf_iterator.h:231:41, col:42> '<dependent type>' prefix '!'
  (MemberExpr 0x9db3398 <col:42> 'streambuf_type *' lvalue ->_M_sbuf 0x9db1a40
    (CXXThisExpr 0x9db3388 <col:42> 'ostreambuf_iterator<_CharT, _Traits> *' this)))
) (CompoundStmt 0x9db3410 </usr/include/c++/4.6/bits/streambuf_iterator.h:231:51, col:53>)


        ostreambuf_iterator<_CharT, _Traits>(streambuf_type *__s) throw() : _M_sbuf((DeclRefExpr 0x9db3420 </usr/include/c++/4.6/bits/streambuf_iterator.h:235:17> 'streambuf_type *' lvalue ParmVar 0x9db1c60 '__s' 'streambuf_type *')
), _M_failed((UnaryOperator 0x9db34a8 </usr/include/c++/4.6/bits/streambuf_iterator.h:235:33, col:34> '<dependent type>' prefix '!'
  (MemberExpr 0x9db3488 <col:34> 'streambuf_type *' lvalue ->_M_sbuf 0x9db1a40
    (CXXThisExpr 0x9db3478 <col:34> 'ostreambuf_iterator<_CharT, _Traits> *' this)))
) (CompoundStmt 0x9db3500 </usr/include/c++/4.6/bits/streambuf_iterator.h:235:43, col:45>)


        ostreambuf_iterator<_CharT, _Traits> &operator=(_CharT __c) (CompoundStmt 0x9db37d0 </usr/include/c++/4.6/bits/streambuf_iterator.h:240:7, line:245:7>
  (IfStmt 0x9db3778 <line:241:2, line:243:16>
    <<<NULL>>>
    (BinaryOperator 0x9db3708 <line:241:6, line:242:62> '<dependent type>' '&&'
      (UnaryOperator 0x9db3550 <line:241:6, col:7> '_Bool' prefix '!'
        (ImplicitCastExpr 0x9db3540 <col:7> '_Bool' <LValueToRValue>
          (MemberExpr 0x9db3520 <col:7> '_Bool' lvalue ->_M_failed 0x9db1a80
            (CXXThisExpr 0x9db3510 <col:7> 'ostreambuf_iterator<_CharT, _Traits> *' this))))
      (CallExpr 0x9db36e0 <line:242:6, col:62> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9db3590 <col:6, col:15> '<dependent type>' lvalue)
        (CallExpr 0x9db3648 <col:27, col:45> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9db35f8 <col:27, col:36> '<dependent type>' lvalue
            (MemberExpr 0x9db35d8 <col:27> 'streambuf_type *' lvalue ->_M_sbuf 0x9db1a40
              (CXXThisExpr 0x9db35c8 <col:27> 'ostreambuf_iterator<_CharT, _Traits> *' this)))
          (DeclRefExpr 0x9db362c <col:42> '_CharT' lvalue ParmVar 0x9db1d60 '__c' '_CharT'))
        (CallExpr 0x9db36c0 <col:48, col:61> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9db3688 <col:48, col:57> '<dependent type>' lvalue))))
    (BinaryOperator 0x9db3760 <line:243:4, col:16> '<dependent type>' '='
      (MemberExpr 0x9db3730 <col:4> '_Bool' lvalue ->_M_failed 0x9db1a80
        (CXXThisExpr 0x9db3720 <col:4> 'ostreambuf_iterator<_CharT, _Traits> *' this))
      (CXXBoolLiteralExpr 0x9db3750 <col:16> '_Bool' true))
    <<<NULL>>>)
  (ReturnStmt 0x9db37c0 <line:244:2, col:10>
    (UnaryOperator 0x9db37a8 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9db3798 <col:10> 'ostreambuf_iterator<_CharT, _Traits> *' this))))


        ostreambuf_iterator<_CharT, _Traits> &operator*() (CompoundStmt 0x9db3820 </usr/include/c++/4.6/bits/streambuf_iterator.h:250:7, col:23>
  (ReturnStmt 0x9db3810 <col:9, col:17>
    (UnaryOperator 0x9db37f8 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9db37e8 <col:17> 'ostreambuf_iterator<_CharT, _Traits> *' this))))


        ostreambuf_iterator<_CharT, _Traits> &operator++(int) (CompoundStmt 0x9db3870 </usr/include/c++/4.6/bits/streambuf_iterator.h:255:7, col:23>
  (ReturnStmt 0x9db3860 <col:9, col:17>
    (UnaryOperator 0x9db3848 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9db3838 <col:17> 'ostreambuf_iterator<_CharT, _Traits> *' this))))


        ostreambuf_iterator<_CharT, _Traits> &operator++() (CompoundStmt 0x9db38c0 </usr/include/c++/4.6/bits/streambuf_iterator.h:260:7, col:23>
  (ReturnStmt 0x9db38b0 <col:9, col:17>
    (UnaryOperator 0x9db3898 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9db3888 <col:17> 'ostreambuf_iterator<_CharT, _Traits> *' this))))


        bool failed() const throw() (CompoundStmt 0x9db3938 </usr/include/c++/4.6/bits/streambuf_iterator.h:265:7, col:27>
  (ReturnStmt 0x9db3928 <col:9, col:16>
    (MemberExpr 0x9db3908 <col:16> 'const _Bool' lvalue ->_M_failed 0x9db1a80
      (CXXThisExpr 0x9db38f8 <col:16> 'const ostreambuf_iterator<_CharT, _Traits> *' this))))


        ostreambuf_iterator<_CharT, _Traits> &_M_put(const _CharT *__ws, streamsize __len) (CompoundStmt 0x9db3cc8 </usr/include/c++/4.6/bits/streambuf_iterator.h:269:7, line:275:7>
  (IfStmt 0x9db3c70 <line:270:2, line:273:16>
    <<<NULL>>>
    (BinaryOperator 0x9db3c00 <line:270:6, line:272:10> '<dependent type>' '&&'
      (CallExpr 0x9db39f8 <line:270:6, col:39> 'long'
        (ImplicitCastExpr 0x9db39e8 <col:6> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9db394c <col:6> 'long (long, long)' lvalue Function 0x9ca0bd0 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0x9db3a20 <col:23, col:24> 'long' <IntegralCast>
          (UnaryOperator 0x9db39a8 <col:23, col:24> '_Bool' prefix '!'
            (ImplicitCastExpr 0x9db3998 <col:24> '_Bool' <LValueToRValue>
              (MemberExpr 0x9db3978 <col:24> '_Bool' lvalue ->_M_failed 0x9db1a80
                (CXXThisExpr 0x9db3968 <col:24> 'ostreambuf_iterator<_CharT, _Traits> *' this)))))
        (ImplicitCastExpr 0x9db3a30 <col:35> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0x9db39c0 <col:35> '_Bool' true)))
      (CallExpr 0x9db3bd8 <line:271:9, line:272:10> '<dependent type>'
        (DeclRefExpr 0x9db3a3c <line:271:9> 'long (long, long)' lvalue Function 0x9ca0bd0 '__builtin_expect' 'long (long, long)')
        (CXXOperatorCallExpr 0x9db3ba0 <col:26, col:63> '<dependent type>'
          (UnresolvedLookupExpr 0x9db3b48 <col:60, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9db08a0 0x9b412d0 0x9ac7fa0 0x9b5e2b0 0x9ba7d20 0x9bc7160 0x9bc74d0 0x9cbb090 0x9cbb590 0x9cbbad0)
          (CallExpr 0x9db3b08 <col:26, col:58> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9db3aa0 <col:26, col:41> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0x9db3a68 <col:26, col:32> '<dependent type>' lvalue
                (CXXThisExpr 0x9db3a58 <col:26> 'ostreambuf_iterator<_CharT, _Traits> *' this)))
            (DeclRefExpr 0x9db3ad4 <col:47> 'const _CharT *' lvalue ParmVar 0x9db3170 '__ws' 'const _CharT *')
            (DeclRefExpr 0x9db3aec <col:53> 'streamsize':'int' lvalue ParmVar 0x9db31b0 '__len' 'streamsize':'int'))
          (DeclRefExpr 0x9db3b2c <col:63> 'streamsize':'int' lvalue ParmVar 0x9db31b0 '__len' 'streamsize':'int'))
        (CXXBoolLiteralExpr 0x9db3bc8 <line:272:5> '_Bool' false)))
    (BinaryOperator 0x9db3c58 <line:273:4, col:16> '<dependent type>' '='
      (MemberExpr 0x9db3c28 <col:4> '_Bool' lvalue ->_M_failed 0x9db1a80
        (CXXThisExpr 0x9db3c18 <col:4> 'ostreambuf_iterator<_CharT, _Traits> *' this))
      (CXXBoolLiteralExpr 0x9db3c48 <col:16> '_Bool' true))
    <<<NULL>>>)
  (ReturnStmt 0x9db3cb8 <line:274:2, col:10>
    (UnaryOperator 0x9db3ca0 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9db3c90 <col:10> 'ostreambuf_iterator<_CharT, _Traits> *' this))))


    };
    template <typename _CharT> typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, ostreambuf_iterator<_CharT> >::__type copy(istreambuf_iterator<_CharT> __first, istreambuf_iterator<_CharT> __last, ostreambuf_iterator<_CharT> __result) (CompoundStmt 0x9db4ad0 </usr/include/c++/4.6/bits/streambuf_iterator.h:285:5, line:294:5>
  (IfStmt 0x9db4a88 <line:286:7, line:292:2>
    <<<NULL>>>
    (BinaryOperator 0x9db4810 <line:286:11, col:59> '<dependent type>' '&&'
      (BinaryOperator 0x9db4790 <col:11, col:38> '<dependent type>' '&&'
        (CXXDependentScopeMemberExpr 0x9db46f0 <col:11, col:19> '<dependent type>' lvalue
          (DeclRefExpr 0x9db46d4 <col:11> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0x9db4250 '__first' 'istreambuf_iterator<_CharT>'))
        (UnaryOperator 0x9db4778 <col:30, col:38> '<dependent type>' prefix '!'
          (CXXDependentScopeMemberExpr 0x9db4740 <col:31, col:38> '<dependent type>' lvalue
            (DeclRefExpr 0x9db4724 <col:31> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0x9db43e0 '__last' 'istreambuf_iterator<_CharT>'))))
      (UnaryOperator 0x9db47f8 <col:49, col:59> '<dependent type>' prefix '!'
        (CXXDependentScopeMemberExpr 0x9db47c0 <col:50, col:59> '<dependent type>' lvalue
          (DeclRefExpr 0x9db47a8 <col:50> 'ostreambuf_iterator<_CharT>' lvalue ParmVar 0x9db4570 '__result' 'ostreambuf_iterator<_CharT>'))))
    (CompoundStmt 0x9db4a68 <line:287:2, line:292:2>
      (DeclStmt 0x9db4868 <line:288:4, col:16>
        0x9db4830 "bool __ineof")
      (CallExpr 0x9db4968 <line:289:4, col:68> '<dependent type>'
        (UnresolvedLookupExpr 0x9db4878 <col:4> '<overloaded function type>' lvalue (ADL) = '1' 0x9d8b1d0)
        (CXXDependentScopeMemberExpr 0x9db48c8 <col:26, col:34> '<dependent type>' lvalue
          (DeclRefExpr 0x9db48ac <col:26> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0x9db4250 '__first' 'istreambuf_iterator<_CharT>'))
        (CXXDependentScopeMemberExpr 0x9db4918 <col:43, col:52> '<dependent type>' lvalue
          (DeclRefExpr 0x9db48fc <col:43> 'ostreambuf_iterator<_CharT>' lvalue ParmVar 0x9db4570 '__result' 'ostreambuf_iterator<_CharT>'))
        (DeclRefExpr 0x9db494c <col:61> '_Bool' lvalue Var 0x9db4830 '__ineof' '_Bool'))
      (IfStmt 0x9db4a48 <line:290:4, line:291:27>
        <<<NULL>>>
        (UnaryOperator 0x9db49b8 <line:290:8, col:9> '_Bool' prefix '!'
          (ImplicitCastExpr 0x9db49a8 <col:9> '_Bool' <LValueToRValue>
            (DeclRefExpr 0x9db4990 <col:9> '_Bool' lvalue Var 0x9db4830 '__ineof' '_Bool')))
        (BinaryOperator 0x9db4a30 <line:291:6, col:27> '<dependent type>' '='
          (CXXDependentScopeMemberExpr 0x9db49e8 <col:6, col:15> '<dependent type>' lvalue
            (DeclRefExpr 0x9db49cc <col:6> 'ostreambuf_iterator<_CharT>' lvalue ParmVar 0x9db4570 '__result' 'ostreambuf_iterator<_CharT>'))
          (CXXBoolLiteralExpr 0x9db4a20 <col:27> '_Bool' true))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9db4ac0 <line:293:7, col:14>
    (DeclRefExpr 0x9db4aa4 <col:14> 'ostreambuf_iterator<_CharT>' lvalue ParmVar 0x9db4570 '__result' 'ostreambuf_iterator<_CharT>')))

;
    template <bool _IsMove, typename _CharT> typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, ostreambuf_iterator<_CharT> >::__type __copy_move_a2(_CharT *__first, _CharT *__last, ostreambuf_iterator<_CharT> __result) (CompoundStmt 0x9db5490 </usr/include/c++/4.6/bits/streambuf_iterator.h:301:5, line:306:5>
  (DeclStmt 0x9db5338 <line:302:7, col:48>
    0x9db5270 "const streamsize __num =
      (CXXOperatorCallExpr 0x9db5310 <col:32, col:41> '<dependent type>'
        (UnresolvedLookupExpr 0x9db52d8 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
        (DeclRefExpr 0x9db52a4 <col:32> '_CharT *' lvalue ParmVar 0x9db4f70 '__last' '_CharT *')
        (DeclRefExpr 0x9db52bc <col:41> '_CharT *' lvalue ParmVar 0x9db4f20 '__first' '_CharT *'))")
  (IfStmt 0x9db5448 <line:303:7, line:304:32>
    <<<NULL>>>
    (BinaryOperator 0x9db5388 <line:303:11, col:19> '_Bool' '>'
      (ImplicitCastExpr 0x9db5378 <col:11> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0x9db5348 <col:11> 'const streamsize':'const int' lvalue Var 0x9db5270 '__num' 'const streamsize':'const int'))
      (IntegerLiteral 0x9db5360 <col:19> 'int' 0))
    (CallExpr 0x9db5420 <line:304:2, col:32> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9db53b8 <col:2, col:11> '<dependent type>' lvalue
        (DeclRefExpr 0x9db53a0 <col:2> 'ostreambuf_iterator<_CharT>' lvalue ParmVar 0x9db5100 '__result' 'ostreambuf_iterator<_CharT>'))
      (DeclRefExpr 0x9db53ec <col:18> '_CharT *' lvalue ParmVar 0x9db4f20 '__first' '_CharT *')
      (DeclRefExpr 0x9db5404 <col:27> 'const streamsize':'const int' lvalue Var 0x9db5270 '__num' 'const streamsize':'const int'))
    <<<NULL>>>)
  (ReturnStmt 0x9db5480 <line:305:7, col:14>
    (DeclRefExpr 0x9db5464 <col:14> 'ostreambuf_iterator<_CharT>' lvalue ParmVar 0x9db5100 '__result' 'ostreambuf_iterator<_CharT>')))

;
    template <bool _IsMove, typename _CharT> typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, ostreambuf_iterator<_CharT> >::__type __copy_move_a2(const _CharT *__first, const _CharT *__last, ostreambuf_iterator<_CharT> __result) (CompoundStmt 0x9db5e50 </usr/include/c++/4.6/bits/streambuf_iterator.h:313:5, line:318:5>
  (DeclStmt 0x9db5cf8 <line:314:7, col:48>
    0x9db5c30 "const streamsize __num =
      (CXXOperatorCallExpr 0x9db5cd0 <col:32, col:41> '<dependent type>'
        (UnresolvedLookupExpr 0x9db5c98 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
        (DeclRefExpr 0x9db5c64 <col:32> 'const _CharT *' lvalue ParmVar 0x9db5930 '__last' 'const _CharT *')
        (DeclRefExpr 0x9db5c7c <col:41> 'const _CharT *' lvalue ParmVar 0x9db58e0 '__first' 'const _CharT *'))")
  (IfStmt 0x9db5e08 <line:315:7, line:316:32>
    <<<NULL>>>
    (BinaryOperator 0x9db5d48 <line:315:11, col:19> '_Bool' '>'
      (ImplicitCastExpr 0x9db5d38 <col:11> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0x9db5d08 <col:11> 'const streamsize':'const int' lvalue Var 0x9db5c30 '__num' 'const streamsize':'const int'))
      (IntegerLiteral 0x9db5d20 <col:19> 'int' 0))
    (CallExpr 0x9db5de0 <line:316:2, col:32> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9db5d78 <col:2, col:11> '<dependent type>' lvalue
        (DeclRefExpr 0x9db5d60 <col:2> 'ostreambuf_iterator<_CharT>' lvalue ParmVar 0x9db5ac0 '__result' 'ostreambuf_iterator<_CharT>'))
      (DeclRefExpr 0x9db5dac <col:18> 'const _CharT *' lvalue ParmVar 0x9db58e0 '__first' 'const _CharT *')
      (DeclRefExpr 0x9db5dc4 <col:27> 'const streamsize':'const int' lvalue Var 0x9db5c30 '__num' 'const streamsize':'const int'))
    <<<NULL>>>)
  (ReturnStmt 0x9db5e40 <line:317:7, col:14>
    (DeclRefExpr 0x9db5e24 <col:14> 'ostreambuf_iterator<_CharT>' lvalue ParmVar 0x9db5ac0 '__result' 'ostreambuf_iterator<_CharT>')))

;
    template <bool _IsMove, typename _CharT> typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, _CharT *>::__type __copy_move_a2(istreambuf_iterator<_CharT> __first, istreambuf_iterator<_CharT> __last, _CharT *__result) (CompoundStmt 0x9db74d8 </usr/include/c++/4.6/bits/streambuf_iterator.h:325:5, line:353:5>
  (DeclStmt 0x9db6740 <line:326:7, col:78>
    0x9db6710 "typedef istreambuf_iterator<_CharT> __is_iterator_type")
  (DeclStmt 0x9db6830 <line:327:7, col:71>
    0x9db6800 "typedef typename __is_iterator_type::traits_type traits_type")
  (DeclStmt 0x9db68f0 <line:328:7, col:74>
    0x9db68c0 "typedef typename __is_iterator_type::streambuf_type streambuf_type")
  (DeclStmt 0x9db69e0 <line:329:7, col:68>
    0x9db69b0 "typedef typename traits_type::int_type int_type")
  (IfStmt 0x9db7490 <line:331:7, line:351:2>
    <<<NULL>>>
    (BinaryOperator 0x9db6aa8 <line:331:11, col:38> '<dependent type>' '&&'
      (CXXDependentScopeMemberExpr 0x9db6a08 <col:11, col:19> '<dependent type>' lvalue
        (DeclRefExpr 0x9db69f0 <col:11> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0x9db62a0 '__first' 'istreambuf_iterator<_CharT>'))
      (UnaryOperator 0x9db6a90 <col:30, col:38> '<dependent type>' prefix '!'
        (CXXDependentScopeMemberExpr 0x9db6a58 <col:31, col:38> '<dependent type>' lvalue
          (DeclRefExpr 0x9db6a3c <col:31> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0x9db6430 '__last' 'istreambuf_iterator<_CharT>'))))
    (CompoundStmt 0x9db7470 <line:332:2, line:351:2>
      (DeclStmt 0x9db6ba8 <line:333:4, col:42>
        0x9db6b20 "streambuf_type *__sb =
          (CXXDependentScopeMemberExpr 0x9db6b70 <col:27, col:35> '<dependent type>' lvalue
            (DeclRefExpr 0x9db6b54 <col:27> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0x9db62a0 '__first' 'istreambuf_iterator<_CharT>'))")
      (DeclStmt 0x9db6c88 <line:334:4, col:32>
        0x9db6be0 "int_type __c =
          (CallExpr 0x9db6c68 <col:19, col:31> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9db6c30 <col:19, col:25> '<dependent type>' lvalue
              (DeclRefExpr 0x9db6c14 <col:19> 'streambuf_type *' lvalue Var 0x9db6b20 '__sb' 'streambuf_type *')))")
      (WhileStmt 0x9db7458 <line:335:4, line:350:6>
        <<<NULL>>>
        (UnaryOperator 0x9db6d88 <line:335:11, col:60> '<dependent type>' prefix '!'
          (CallExpr 0x9db6d60 <col:12, col:60> '<dependent type>'
            (DependentScopeDeclRefExpr 0x9db6cb8 <col:12, col:25> '<dependent type>' lvalue)
            (DeclRefExpr 0x9db6cdc <col:37> 'int_type':'typename traits_type::int_type' lvalue Var 0x9db6be0 '__c' 'int_type':'typename traits_type::int_type')
            (CallExpr 0x9db6d40 <col:42, col:59> '<dependent type>'
              (DependentScopeDeclRefExpr 0x9db6d18 <col:42, col:55> '<dependent type>' lvalue))))
        (CompoundStmt 0x9db7440 <line:336:6, line:350:6>
          (DeclStmt 0x9db6f58 <line:337:8, col:59>
            0x9db6de0 "const streamsize __n =
              (CXXOperatorCallExpr 0x9db6f30 <col:31, col:58> '<dependent type>'
                (UnresolvedLookupExpr 0x9db6ef8 <col:45, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
                (CallExpr 0x9db6e68 <col:31, col:43> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9db6e30 <col:31, col:37> '<dependent type>' lvalue
                    (DeclRefExpr 0x9db6e14 <col:31> 'streambuf_type *' lvalue Var 0x9db6b20 '__sb' 'streambuf_type *')))
                (CallExpr 0x9db6ed8 <col:47, col:58> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9db6ea0 <col:47, col:53> '<dependent type>' lvalue
                    (DeclRefExpr 0x9db6e84 <col:47> 'streambuf_type *' lvalue Var 0x9db6b20 '__sb' 'streambuf_type *'))))")
          (IfStmt 0x9db7420 <line:338:8, line:349:3>
            <<<NULL>>>
            (BinaryOperator 0x9db6fa8 <line:338:12, col:18> '_Bool' '>'
              (ImplicitCastExpr 0x9db6f98 <col:12> 'streamsize':'int' <LValueToRValue>
                (DeclRefExpr 0x9db6f68 <col:12> 'const streamsize':'const int' lvalue Var 0x9db6de0 '__n' 'const streamsize':'const int'))
              (IntegerLiteral 0x9db6f80 <col:18> 'int' 1))
            (CompoundStmt 0x9db7250 <line:339:3, line:344:3>
              (CallExpr 0x9db70b0 <line:340:5, col:50> '<dependent type>'
                (DependentScopeDeclRefExpr 0x9db6fe8 <col:5, col:18> '<dependent type>' lvalue)
                (DeclRefExpr 0x9db700c <col:23> '_CharT *' lvalue ParmVar 0x9db6480 '__result' '_CharT *')
                (CallExpr 0x9db7078 <col:33, col:44> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9db7040 <col:33, col:39> '<dependent type>' lvalue
                    (DeclRefExpr 0x9db7024 <col:33> 'streambuf_type *' lvalue Var 0x9db6b20 '__sb' 'streambuf_type *')))
                (DeclRefExpr 0x9db7094 <col:47> 'const streamsize':'const int' lvalue Var 0x9db6de0 '__n' 'const streamsize':'const int'))
              (CallExpr 0x9db7140 <line:341:5, col:27> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9db70f0 <col:5, col:11> '<dependent type>' lvalue
                  (DeclRefExpr 0x9db70d8 <col:5> 'streambuf_type *' lvalue Var 0x9db6b20 '__sb' 'streambuf_type *'))
                (DeclRefExpr 0x9db7124 <col:24> 'const streamsize':'const int' lvalue Var 0x9db6de0 '__n' 'const streamsize':'const int'))
              (CompoundAssignOperator 0x9db7190 <line:342:5, col:17> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                (DeclRefExpr 0x9db7160 <col:5> '_CharT *' lvalue ParmVar 0x9db6480 '__result' '_CharT *')
                (DeclRefExpr 0x9db7178 <col:17> 'const streamsize':'const int' lvalue Var 0x9db6de0 '__n' 'const streamsize':'const int'))
              (BinaryOperator 0x9db7238 <line:343:5, col:27> '<dependent type>' '='
                (DeclRefExpr 0x9db71b0 <col:5> 'int_type':'typename traits_type::int_type' lvalue Var 0x9db6be0 '__c' 'int_type':'typename traits_type::int_type')
                (CallExpr 0x9db7218 <col:11, col:27> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9db71e0 <col:11, col:17> '<dependent type>' lvalue
                    (DeclRefExpr 0x9db71c8 <col:11> 'streambuf_type *' lvalue Var 0x9db6b20 '__sb' 'streambuf_type *')))))
            (CompoundStmt 0x9db7408 <line:346:3, line:349:3>
              (BinaryOperator 0x9db7350 <line:347:5, col:48> '<dependent type>' '='
                (UnaryOperator 0x9db72b8 <col:5, col:14> '<dependent type>' prefix '*'
                  (UnaryOperator 0x9db72a0 <col:6, col:14> '<dependent type>' postfix '++'
                    (DeclRefExpr 0x9db7270 <col:6> '_CharT *' lvalue ParmVar 0x9db6480 '__result' '_CharT *')))
                (CallExpr 0x9db7330 <col:19, col:48> '<dependent type>'
                  (DependentScopeDeclRefExpr 0x9db72f0 <col:19, col:32> '<dependent type>' lvalue)
                  (DeclRefExpr 0x9db7314 <col:45> 'int_type':'typename traits_type::int_type' lvalue Var 0x9db6be0 '__c' 'int_type':'typename traits_type::int_type')))
              (BinaryOperator 0x9db73f0 <line:348:5, col:24> '<dependent type>' '='
                (DeclRefExpr 0x9db7368 <col:5> 'int_type':'typename traits_type::int_type' lvalue Var 0x9db6be0 '__c' 'int_type':'typename traits_type::int_type')
                (CallExpr 0x9db73d0 <col:11, col:24> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9db7398 <col:11, col:17> '<dependent type>' lvalue
                    (DeclRefExpr 0x9db7380 <col:11> 'streambuf_type *' lvalue Var 0x9db6b20 '__sb' 'streambuf_type *')))))))))
    <<<NULL>>>)
  (ReturnStmt 0x9db74c8 <line:352:7, col:14>
    (DeclRefExpr 0x9db74ac <col:14> '_CharT *' lvalue ParmVar 0x9db6480 '__result' '_CharT *')))

;
    template <typename _CharT> typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, istreambuf_iterator<_CharT> >::__type find(istreambuf_iterator<_CharT> __first, istreambuf_iterator<_CharT> __last, const _CharT &__val) (CompoundStmt 0x9db9048 </usr/include/c++/4.6/bits/streambuf_iterator.h:360:5, line:394:5>
  (DeclStmt 0x9db7eb0 <line:361:7, col:78>
    0x9db7e80 "typedef istreambuf_iterator<_CharT> __is_iterator_type")
  (DeclStmt 0x9db7fa0 <line:362:7, col:71>
    0x9db7f70 "typedef typename __is_iterator_type::traits_type traits_type")
  (DeclStmt 0x9db8060 <line:363:7, col:74>
    0x9db8030 "typedef typename __is_iterator_type::streambuf_type streambuf_type")
  (DeclStmt 0x9db8150 <line:364:7, col:68>
    0x9db8120 "typedef typename traits_type::int_type int_type")
  (IfStmt 0x9db9000 <line:366:7, line:392:2>
    <<<NULL>>>
    (BinaryOperator 0x9db8218 <line:366:11, col:38> '<dependent type>' '&&'
      (CXXDependentScopeMemberExpr 0x9db8178 <col:11, col:19> '<dependent type>' lvalue
        (DeclRefExpr 0x9db8160 <col:11> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0x9db79f0 '__first' 'istreambuf_iterator<_CharT>'))
      (UnaryOperator 0x9db8200 <col:30, col:38> '<dependent type>' prefix '!'
        (CXXDependentScopeMemberExpr 0x9db81c8 <col:31, col:38> '<dependent type>' lvalue
          (DeclRefExpr 0x9db81ac <col:31> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0x9db7b80 '__last' 'istreambuf_iterator<_CharT>'))))
    (CompoundStmt 0x9db8fd8 <line:367:2, line:392:2>
      (DeclStmt 0x9db8308 <line:368:4, col:59>
        0x9db8250 "const int_type __ival =
          (CallExpr 0x9db82e8 <col:28, col:58> '<dependent type>'
            (DependentScopeDeclRefExpr 0x9db82a8 <col:28, col:41> '<dependent type>' lvalue)
            (DeclRefExpr 0x9db82cc <col:53> 'const _CharT' lvalue ParmVar 0x9db7bf0 '__val' 'const _CharT &'))")
      (DeclStmt 0x9db8408 <line:369:4, col:42>
        0x9db8380 "streambuf_type *__sb =
          (CXXDependentScopeMemberExpr 0x9db83d0 <col:27, col:35> '<dependent type>' lvalue
            (DeclRefExpr 0x9db83b4 <col:27> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0x9db79f0 '__first' 'istreambuf_iterator<_CharT>'))")
      (DeclStmt 0x9db84c8 <line:370:4, col:32>
        0x9db8420 "int_type __c =
          (CallExpr 0x9db84a8 <col:19, col:31> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9db8470 <col:19, col:25> '<dependent type>' lvalue
              (DeclRefExpr 0x9db8454 <col:19> 'streambuf_type *' lvalue Var 0x9db8380 '__sb' 'streambuf_type *')))")
      (WhileStmt 0x9db8d98 <line:371:4, line:386:6>
        <<<NULL>>>
        (BinaryOperator 0x9db8698 <line:371:11, line:372:44> '<dependent type>' '&&'
          (UnaryOperator 0x9db85c8 <line:371:11, col:60> '<dependent type>' prefix '!'
            (CallExpr 0x9db85a0 <col:12, col:60> '<dependent type>'
              (DependentScopeDeclRefExpr 0x9db84f8 <col:12, col:25> '<dependent type>' lvalue)
              (DeclRefExpr 0x9db851c <col:37> 'int_type':'typename traits_type::int_type' lvalue Var 0x9db8420 '__c' 'int_type':'typename traits_type::int_type')
              (CallExpr 0x9db8580 <col:42, col:59> '<dependent type>'
                (DependentScopeDeclRefExpr 0x9db8558 <col:42, col:55> '<dependent type>' lvalue))))
          (UnaryOperator 0x9db8680 <line:372:7, col:44> '<dependent type>' prefix '!'
            (CallExpr 0x9db8658 <col:8, col:44> '<dependent type>'
              (DependentScopeDeclRefExpr 0x9db8600 <col:8, col:21> '<dependent type>' lvalue)
              (DeclRefExpr 0x9db8624 <col:33> 'int_type':'typename traits_type::int_type' lvalue Var 0x9db8420 '__c' 'int_type':'typename traits_type::int_type')
              (DeclRefExpr 0x9db863c <col:38> 'const int_type':'const typename traits_type::int_type' lvalue Var 0x9db8250 '__ival' 'const int_type':'const typename traits_type::int_type'))))
        (CompoundStmt 0x9db8d80 <line:373:6, line:386:6>
          (DeclStmt 0x9db8838 <line:374:8, col:53>
            0x9db86c0 "streamsize __n =
              (CXXOperatorCallExpr 0x9db8810 <col:25, col:52> '<dependent type>'
                (UnresolvedLookupExpr 0x9db87d8 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
                (CallExpr 0x9db8748 <col:25, col:37> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9db8710 <col:25, col:31> '<dependent type>' lvalue
                    (DeclRefExpr 0x9db86f4 <col:25> 'streambuf_type *' lvalue Var 0x9db8380 '__sb' 'streambuf_type *')))
                (CallExpr 0x9db87b8 <col:41, col:52> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9db8780 <col:41, col:47> '<dependent type>' lvalue
                    (DeclRefExpr 0x9db8764 <col:41> 'streambuf_type *' lvalue Var 0x9db8380 '__sb' 'streambuf_type *'))))")
          (IfStmt 0x9db8d60 <line:375:8, line:385:22>
            <<<NULL>>>
            (BinaryOperator 0x9db8888 <line:375:12, col:18> '_Bool' '>'
              (ImplicitCastExpr 0x9db8878 <col:12> 'streamsize':'int' <LValueToRValue>
                (DeclRefExpr 0x9db8848 <col:12> 'streamsize':'int' lvalue Var 0x9db86c0 '__n' 'streamsize':'int'))
              (IntegerLiteral 0x9db8860 <col:18> 'int' 1))
            (CompoundStmt 0x9db8ca0 <line:376:3, line:383:3>
              (DeclStmt 0x9db8a18 <line:377:5, line:378:19>
                0x9db88d0 "const _CharT *__p =
                  (CallExpr 0x9db89f0 <line:377:25, line:378:18> '<dependent type>'
                    (DependentScopeDeclRefExpr 0x9db8928 <line:377:25, col:38> '<dependent type>' lvalue)
                    (CallExpr 0x9db89a0 <col:43, col:54> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0x9db8968 <col:43, col:49> '<dependent type>' lvalue
                        (DeclRefExpr 0x9db894c <col:43> 'streambuf_type *' lvalue Var 0x9db8380 '__sb' 'streambuf_type *')))
                    (DeclRefExpr 0x9db89bc <line:378:8> 'streamsize':'int' lvalue Var 0x9db86c0 '__n' 'streamsize':'int')
                    (DeclRefExpr 0x9db89d4 <col:13> 'const _CharT' lvalue ParmVar 0x9db7bf0 '__val' 'const _CharT &'))")
              (IfStmt 0x9db8b58 <line:379:5, line:380:30>
                <<<NULL>>>
                (DeclRefExpr 0x9db8a28 <line:379:9> 'const _CharT *' lvalue Var 0x9db88d0 '__p' 'const _CharT *')
                (BinaryOperator 0x9db8b40 <line:380:7, col:30> '<dependent type>' '='
                  (DeclRefExpr 0x9db8a40 <col:7> 'streamsize':'int' lvalue Var 0x9db86c0 '__n' 'streamsize':'int')
                  (CXXOperatorCallExpr 0x9db8b18 <col:13, col:30> '<dependent type>'
                    (UnresolvedLookupExpr 0x9db8ae0 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
                    (DeclRefExpr 0x9db8a58 <col:13> 'const _CharT *' lvalue Var 0x9db88d0 '__p' 'const _CharT *')
                    (CallExpr 0x9db8ac0 <col:19, col:30> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0x9db8a88 <col:19, col:25> '<dependent type>' lvalue
                        (DeclRefExpr 0x9db8a70 <col:19> 'streambuf_type *' lvalue Var 0x9db8380 '__sb' 'streambuf_type *')))))
                <<<NULL>>>)
              (CallExpr 0x9db8be0 <line:381:5, col:27> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9db8b90 <col:5, col:11> '<dependent type>' lvalue
                  (DeclRefExpr 0x9db8b74 <col:5> 'streambuf_type *' lvalue Var 0x9db8380 '__sb' 'streambuf_type *'))
                (DeclRefExpr 0x9db8bc4 <col:24> 'streamsize':'int' lvalue Var 0x9db86c0 '__n' 'streamsize':'int'))
              (BinaryOperator 0x9db8c88 <line:382:5, col:23> '<dependent type>' '='
                (DeclRefExpr 0x9db8c00 <col:5> 'int_type':'typename traits_type::int_type' lvalue Var 0x9db8420 '__c' 'int_type':'typename traits_type::int_type')
                (CallExpr 0x9db8c68 <col:11, col:23> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9db8c30 <col:11, col:17> '<dependent type>' lvalue
                    (DeclRefExpr 0x9db8c18 <col:11> 'streambuf_type *' lvalue Var 0x9db8380 '__sb' 'streambuf_type *')))))
            (BinaryOperator 0x9db8d48 <line:385:3, col:22> '<dependent type>' '='
              (DeclRefExpr 0x9db8cc0 <col:3> 'int_type':'typename traits_type::int_type' lvalue Var 0x9db8420 '__c' 'int_type':'typename traits_type::int_type')
              (CallExpr 0x9db8d28 <col:9, col:22> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9db8cf0 <col:9, col:15> '<dependent type>' lvalue
                  (DeclRefExpr 0x9db8cd8 <col:9> 'streambuf_type *' lvalue Var 0x9db8380 '__sb' 'streambuf_type *')))))))
      (IfStmt 0x9db8fb8 <line:388:4, line:391:24>
        <<<NULL>>>
        (UnaryOperator 0x9db8ea0 <line:388:8, col:57> '<dependent type>' prefix '!'
          (CallExpr 0x9db8e78 <col:9, col:57> '<dependent type>'
            (DependentScopeDeclRefExpr 0x9db8dd0 <col:9, col:22> '<dependent type>' lvalue)
            (DeclRefExpr 0x9db8df4 <col:34> 'int_type':'typename traits_type::int_type' lvalue Var 0x9db8420 '__c' 'int_type':'typename traits_type::int_type')
            (CallExpr 0x9db8e58 <col:39, col:56> '<dependent type>'
              (DependentScopeDeclRefExpr 0x9db8e30 <col:39, col:52> '<dependent type>' lvalue))))
        (BinaryOperator 0x9db8f20 <line:389:6, col:21> '<dependent type>' '='
          (CXXDependentScopeMemberExpr 0x9db8ed0 <col:6, col:14> '<dependent type>' lvalue
            (DeclRefExpr 0x9db8eb4 <col:6> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0x9db79f0 '__first' 'istreambuf_iterator<_CharT>'))
          (DeclRefExpr 0x9db8f04 <col:21> 'int_type':'typename traits_type::int_type' lvalue Var 0x9db8420 '__c' 'int_type':'typename traits_type::int_type'))
        (BinaryOperator 0x9db8fa0 <line:391:6, col:24> '<dependent type>' '='
          (CXXDependentScopeMemberExpr 0x9db8f50 <col:6, col:14> '<dependent type>' lvalue
            (DeclRefExpr 0x9db8f38 <col:6> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0x9db79f0 '__first' 'istreambuf_iterator<_CharT>'))
          (IntegerLiteral 0x9db8f88 <col:24> 'int' 0))))
    <<<NULL>>>)
  (ReturnStmt 0x9db9038 <line:393:7, col:14>
    (DeclRefExpr 0x9db901c <col:14> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0x9db79f0 '__first' 'istreambuf_iterator<_CharT>')))

;
}
namespace std {
    template <typename _Tp = double> void __convert_to_v(const char *, double &, ios_base::iostate &, const __c_locale &) throw()template <typename _Tp = long double> void __convert_to_v(const char *, long double &, ios_base::iostate &, const __c_locale &) throw()template <typename _Tp = float> void __convert_to_v(const char *, float &, ios_base::iostate &, const __c_locale &) throw()template <typename _Tp> void __convert_to_v(const char *, _Tp &, ios_base::iostate &, const __c_locale &) throw();
    void __convert_to_v(const char *, float &, ios_base::iostate &, const __c_locale &) throw();
    void __convert_to_v(const char *, double &, ios_base::iostate &, const __c_locale &) throw();
    void __convert_to_v(const char *, long double &, ios_base::iostate &, const __c_locale &) throw();
    template <typename _CharT, typename _Traits> struct __pad {
        struct __pad;
        static void _S_pad(std::ios_base &__io, _CharT __fill, _CharT *__news, const _CharT *__olds, streamsize __newlen, streamsize __oldlen);
    };
    template <typename _CharT> _CharT *__add_grouping(_CharT *__s, _CharT __sep, const char *__gbeg, size_t __gsize, const _CharT *__first, const _CharT *__last);
    template <typename _CharT> inline ostreambuf_iterator<_CharT> __write(ostreambuf_iterator<_CharT> __s, const _CharT *__ws, int __len) (CompoundStmt 0x9dbb668 </usr/include/c++/4.6/bits/locale_facets.h:114:5, line:117:5>
  (CallExpr 0x9dbb618 <line:115:7, col:29> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9dbb5b0 <col:7, col:11> '<dependent type>' lvalue
      (DeclRefExpr 0x9dbb594 <col:7> 'ostreambuf_iterator<_CharT>' lvalue ParmVar 0x9dbb370 '__s' 'ostreambuf_iterator<_CharT>'))
    (DeclRefExpr 0x9dbb5e4 <col:18> 'const _CharT *' lvalue ParmVar 0x9dbb3e0 '__ws' 'const _CharT *')
    (DeclRefExpr 0x9dbb5fc <col:24> 'int' lvalue ParmVar 0x9dbb430 '__len' 'int'))
  (ReturnStmt 0x9dbb658 <line:116:7, col:14>
    (DeclRefExpr 0x9dbb63c <col:14> 'ostreambuf_iterator<_CharT>' lvalue ParmVar 0x9dbb370 '__s' 'ostreambuf_iterator<_CharT>')))

;
    template <typename _CharT, typename _OutIter> inline _OutIter __write(_OutIter __s, const _CharT *__ws, int __len) (CompoundStmt 0x9dbbb90 </usr/include/c++/4.6/bits/locale_facets.h:124:5, line:128:5>
  (ForStmt 0x9dbbb40 <line:125:7, line:126:17>
    (DeclStmt 0x9dbb9c0 <line:125:12, col:23>
      0x9dbb970 "int __j =
        (IntegerLiteral 0x9dbb9a8 <col:22> 'int' 0)")
    <<<NULL>>>
    (BinaryOperator 0x9dbba20 <col:25, col:31> '_Bool' '<'
      (ImplicitCastExpr 0x9dbba00 <col:25> 'int' <LValueToRValue>
        (DeclRefExpr 0x9dbb9d0 <col:25> 'int' lvalue Var 0x9dbb970 '__j' 'int'))
      (ImplicitCastExpr 0x9dbba10 <col:31> 'int' <LValueToRValue>
        (DeclRefExpr 0x9dbb9e8 <col:31> 'int' lvalue ParmVar 0x9dbb800 '__len' 'int')))
    (BinaryOperator 0x9dbba98 <col:38, col:47> '<dependent type>' ','
      (UnaryOperator 0x9dbba50 <col:38, col:41> 'int' postfix '++'
        (DeclRefExpr 0x9dbba38 <col:38> 'int' lvalue Var 0x9dbb970 '__j' 'int'))
      (UnaryOperator 0x9dbba80 <col:45, col:47> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9dbba64 <col:47> '_OutIter' lvalue ParmVar 0x9dbb740 '__s' '_OutIter')))
    (BinaryOperator 0x9dbbb28 <line:126:2, col:17> '<dependent type>' '='
      (UnaryOperator 0x9dbbac8 <col:2, col:3> '<dependent type>' prefix '*'
        (DeclRefExpr 0x9dbbab0 <col:3> '_OutIter' lvalue ParmVar 0x9dbb740 '__s' '_OutIter'))
      (ArraySubscriptExpr 0x9dbbb10 <col:9, col:17> '<dependent type>' lvalue
        (DeclRefExpr 0x9dbbadc <col:9> 'const _CharT *' lvalue ParmVar 0x9dbb7b0 '__ws' 'const _CharT *')
        (DeclRefExpr 0x9dbbaf4 <col:14> 'int' lvalue Var 0x9dbb970 '__j' 'int'))))
  (ReturnStmt 0x9dbbb80 <line:127:7, col:14>
    (DeclRefExpr 0x9dbbb64 <col:14> '_OutIter' lvalue ParmVar 0x9dbb740 '__s' '_OutIter')))

;
    template <typename _CharT = wchar_t> class __ctype_abstract_base : public locale::facet, public std::ctype_base {
        class __ctype_abstract_base;
    public:
    public:
        typedef wchar_t char_type;
        bool is(mask __m, char_type __c) const;
        const char_type *is(const char_type *__lo, const char_type *__hi, mask *__vec) const;
        const char_type *scan_is(mask __m, const char_type *__lo, const char_type *__hi) const;
        const char_type *scan_not(mask __m, const char_type *__lo, const char_type *__hi) const;
        char_type toupper(char_type __c) const;
        const char_type *toupper(char_type *__lo, const char_type *__hi) const;
        char_type tolower(char_type __c) const;
        const char_type *tolower(char_type *__lo, const char_type *__hi) const;
        char_type widen(char __c) const;
        const char *widen(const char *__lo, const char *__hi, char_type *__to) const;
        char narrow(char_type __c, char __dfault) const;
        const char_type *narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__to) const;
    protected:
    protected:
        __ctype_abstract_base(size_t __refs);
        virtual void ~__ctype_abstract_base();
        virtual bool do_is(mask __m, char_type __c) const = 0;
        virtual const char_type *do_is(const char_type *__lo, const char_type *__hi, mask *__vec) const = 0;
        virtual const char_type *do_scan_is(mask __m, const char_type *__lo, const char_type *__hi) const = 0;
        virtual const char_type *do_scan_not(mask __m, const char_type *__lo, const char_type *__hi) const = 0;
        virtual char_type do_toupper(char_type) const = 0;
        virtual const char_type *do_toupper(char_type *__lo, const char_type *__hi) const = 0;
        virtual char_type do_tolower(char_type) const = 0;
        virtual const char_type *do_tolower(char_type *__lo, const char_type *__hi) const = 0;
        virtual char_type do_widen(char) const = 0;
        virtual const char *do_widen(const char *__lo, const char *__hi, char_type *__dest) const = 0;
        virtual char do_narrow(char_type, char __dfault) const = 0;
        virtual const char_type *do_narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__dest) const = 0;
        inline std::__ctype_abstract_base<wchar_t> &operator=(const std::__ctype_abstract_base<wchar_t> &);
    }
template <typename _CharT> class __ctype_abstract_base : public locale::facet, public std::ctype_base {
        class __ctype_abstract_base;
    public:
    public:
        typedef _CharT char_type;
        bool is(mask __m, char_type __c) const (CompoundStmt 0x9dbe388 </usr/include/c++/4.6/bits/locale_facets.h:163:7, col:39>
  (ReturnStmt 0x9dbe378 <col:9, col:36>
    (CallExpr 0x9dbe350 <col:16, col:36> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9dbe2e8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9dbe2d8 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0x9dbe31c <col:28> 'mask':'unsigned short' lvalue ParmVar 0x9dbbf20 '__m' 'mask':'unsigned short')
      (DeclRefExpr 0x9dbe334 <col:33> 'char_type':'_CharT' lvalue ParmVar 0x9dbbf80 '__c' 'char_type':'_CharT'))))


        const char_type *is(const char_type *__lo, const char_type *__hi, mask *__vec) const (CompoundStmt 0x9dbe468 </usr/include/c++/4.6/bits/locale_facets.h:180:7, col:48>
  (ReturnStmt 0x9dbe458 <col:9, col:45>
    (CallExpr 0x9dbe430 <col:16, col:45> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9dbe3b0 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9dbe3a0 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0x9dbe3e4 <col:28> 'const char_type *' lvalue ParmVar 0x9dbc0c0 '__lo' 'const char_type *')
      (DeclRefExpr 0x9dbe3fc <col:34> 'const char_type *' lvalue ParmVar 0x9dbc110 '__hi' 'const char_type *')
      (DeclRefExpr 0x9dbe414 <col:40> 'mask *' lvalue ParmVar 0x9dbc180 '__vec' 'mask *'))))


        const char_type *scan_is(mask __m, const char_type *__lo, const char_type *__hi) const (CompoundStmt 0x9dbe548 </usr/include/c++/4.6/bits/locale_facets.h:196:7, col:51>
  (ReturnStmt 0x9dbe538 <col:9, col:48>
    (CallExpr 0x9dbe510 <col:16, col:48> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9dbe490 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9dbe480 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0x9dbe4c4 <col:33> 'mask':'unsigned short' lvalue ParmVar 0x9dbc2c0 '__m' 'mask':'unsigned short')
      (DeclRefExpr 0x9dbe4dc <col:38> 'const char_type *' lvalue ParmVar 0x9dbc310 '__lo' 'const char_type *')
      (DeclRefExpr 0x9dbe4f4 <col:44> 'const char_type *' lvalue ParmVar 0x9dbc360 '__hi' 'const char_type *'))))


        const char_type *scan_not(mask __m, const char_type *__lo, const char_type *__hi) const (CompoundStmt 0x9dbe628 </usr/include/c++/4.6/bits/locale_facets.h:212:7, col:52>
  (ReturnStmt 0x9dbe618 <col:9, col:49>
    (CallExpr 0x9dbe5f0 <col:16, col:49> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9dbe570 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9dbe560 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0x9dbe5a4 <col:34> 'mask':'unsigned short' lvalue ParmVar 0x9dbc4a0 '__m' 'mask':'unsigned short')
      (DeclRefExpr 0x9dbe5bc <col:39> 'const char_type *' lvalue ParmVar 0x9dbc4f0 '__lo' 'const char_type *')
      (DeclRefExpr 0x9dbe5d4 <col:45> 'const char_type *' lvalue ParmVar 0x9dbc540 '__hi' 'const char_type *'))))


        char_type toupper(char_type __c) const (CompoundStmt 0x9dbe6d0 </usr/include/c++/4.6/bits/locale_facets.h:226:7, col:39>
  (ReturnStmt 0x9dbe6c0 <col:9, col:36>
    (CallExpr 0x9dbe6a0 <col:16, col:36> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9dbe650 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9dbe640 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0x9dbe684 <col:33> 'char_type':'_CharT' lvalue ParmVar 0x9dbc620 '__c' 'char_type':'_CharT'))))


        const char_type *toupper(char_type *__lo, const char_type *__hi) const (CompoundStmt 0x9dbe798 </usr/include/c++/4.6/bits/locale_facets.h:241:7, col:46>
  (ReturnStmt 0x9dbe788 <col:9, col:43>
    (CallExpr 0x9dbe760 <col:16, col:43> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9dbe6f8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9dbe6e8 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0x9dbe72c <col:33> 'char_type *' lvalue ParmVar 0x9dbc760 '__lo' 'char_type *')
      (DeclRefExpr 0x9dbe744 <col:39> 'const char_type *' lvalue ParmVar 0x9dbc7b0 '__hi' 'const char_type *'))))


        char_type tolower(char_type __c) const (CompoundStmt 0x9dbe840 </usr/include/c++/4.6/bits/locale_facets.h:255:7, col:39>
  (ReturnStmt 0x9dbe830 <col:9, col:36>
    (CallExpr 0x9dbe810 <col:16, col:36> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9dbe7c0 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9dbe7b0 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0x9dbe7f4 <col:33> 'char_type':'_CharT' lvalue ParmVar 0x9dbc8c0 '__c' 'char_type':'_CharT'))))


        const char_type *tolower(char_type *__lo, const char_type *__hi) const (CompoundStmt 0x9dbe908 </usr/include/c++/4.6/bits/locale_facets.h:270:7, col:46>
  (ReturnStmt 0x9dbe8f8 <col:9, col:43>
    (CallExpr 0x9dbe8d0 <col:16, col:43> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9dbe868 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9dbe858 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0x9dbe89c <col:33> 'char_type *' lvalue ParmVar 0x9dbc990 '__lo' 'char_type *')
      (DeclRefExpr 0x9dbe8b4 <col:39> 'const char_type *' lvalue ParmVar 0x9dbc9e0 '__hi' 'const char_type *'))))


        char_type widen(char __c) const (CompoundStmt 0x9dbe9b0 </usr/include/c++/4.6/bits/locale_facets.h:287:7, col:37>
  (ReturnStmt 0x9dbe9a0 <col:9, col:34>
    (CallExpr 0x9dbe980 <col:16, col:34> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9dbe930 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9dbe920 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0x9dbe964 <col:31> 'char' lvalue ParmVar 0x9dbcab0 '__c' 'char'))))


        const char *widen(const char *__lo, const char *__hi, char_type *__to) const (CompoundStmt 0x9dbea90 </usr/include/c++/4.6/bits/locale_facets.h:306:7, col:50>
  (ReturnStmt 0x9dbea80 <col:9, col:47>
    (CallExpr 0x9dbea58 <col:16, col:47> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9dbe9d8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9dbe9c8 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0x9dbea0c <col:31> 'const char *' lvalue ParmVar 0x9dbcbd0 '__lo' 'const char *')
      (DeclRefExpr 0x9dbea24 <col:37> 'const char *' lvalue ParmVar 0x9dbcc20 '__hi' 'const char *')
      (DeclRefExpr 0x9dbea3c <col:43> 'char_type *' lvalue ParmVar 0x9dbcc70 '__to' 'char_type *'))))


        char narrow(char_type __c, char __dfault) const (CompoundStmt 0x9dbeb58 </usr/include/c++/4.6/bits/locale_facets.h:325:7, col:48>
  (ReturnStmt 0x9dbeb48 <col:9, col:45>
    (CallExpr 0x9dbeb20 <col:16, col:45> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9dbeab8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9dbeaa8 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0x9dbeaec <col:32> 'char_type':'_CharT' lvalue ParmVar 0x9dbcdb0 '__c' 'char_type':'_CharT')
      (DeclRefExpr 0x9dbeb04 <col:37> 'char' lvalue ParmVar 0x9dbcdf0 '__dfault' 'char'))))


        const char_type *narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__to) const (CompoundStmt 0x9dbec58 </usr/include/c++/4.6/bits/locale_facets.h:348:7, col:61>
  (ReturnStmt 0x9dbec48 <col:9, col:58>
    (CallExpr 0x9dbec18 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9dbeb80 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9dbeb70 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0x9dbebb4 <col:32> 'const char_type *' lvalue ParmVar 0x9dbcf10 '__lo' 'const char_type *')
      (DeclRefExpr 0x9dbebcc <col:38> 'const char_type *' lvalue ParmVar 0x9dbcf60 '__hi' 'const char_type *')
      (DeclRefExpr 0x9dbebe4 <col:44> 'char' lvalue ParmVar 0x9dbcfa0 '__dfault' 'char')
      (DeclRefExpr 0x9dbebfc <col:54> 'char *' lvalue ParmVar 0x9dbcff0 '__to' 'char *'))))


    protected:
    protected:
        __ctype_abstract_base<_CharT>(size_t __refs = (ImplicitCastExpr 0x9dbe2b0 </usr/include/c++/4.6/bits/locale_facets.h:352:45> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9dbe298 <col:45> 'int' 0))
) : std::locale::facet((DeclRefExpr 0x9dbec6c </usr/include/c++/4.6/bits/locale_facets.h:352:55> 'size_t':'unsigned int' lvalue ParmVar 0x9dbd170 '__refs' 'size_t':'unsigned int')
) (CompoundStmt 0x9dbed10 </usr/include/c++/4.6/bits/locale_facets.h:352:63, col:65>)


        virtual void ~__ctype_abstract_base<_CharT>() (CompoundStmt 0x9dbed20 </usr/include/c++/4.6/bits/locale_facets.h:355:32, col:34>)


        virtual bool do_is(mask __m, char_type __c) const = 0;
        virtual const char_type *do_is(const char_type *__lo, const char_type *__hi, mask *__vec) const = 0;
        virtual const char_type *do_scan_is(mask __m, const char_type *__lo, const char_type *__hi) const = 0;
        virtual const char_type *do_scan_not(mask __m, const char_type *__lo, const char_type *__hi) const = 0;
        virtual char_type do_toupper(char_type) const = 0;
        virtual const char_type *do_toupper(char_type *__lo, const char_type *__hi) const = 0;
        virtual char_type do_tolower(char_type) const = 0;
        virtual const char_type *do_tolower(char_type *__lo, const char_type *__hi) const = 0;
        virtual char_type do_widen(char) const = 0;
        virtual const char *do_widen(const char *__lo, const char *__hi, char_type *__dest) const = 0;
        virtual char do_narrow(char_type, char __dfault) const = 0;
        virtual const char_type *do_narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__dest) const = 0;
    };
    template <typename _CharT = wchar_t> class ctype : public __ctype_abstract_base<wchar_t> {
        class ctype;
    public:
    public:
        typedef wchar_t char_type;
        typedef wctype_t __wmask_type;
    protected:
    protected:
        __c_locale _M_c_locale_ctype;
        bool _M_narrow_ok;
        char _M_narrow[128];
        wint_t _M_widen[256];
        mask _M_bit[16];
        __wmask_type _M_wmask[16];
    public:
    public:
        static locale::id id;
        ctype(size_t __refs = (ImplicitCastExpr 0x9dcde78 </usr/include/c++/4.6/bits/locale_facets.h:1208:29> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9dcde60 <col:29> 'int' 0))
);
        ctype(__c_locale __cloc, size_t __refs = (ImplicitCastExpr 0x9dcdea0 </usr/include/c++/4.6/bits/locale_facets.h:1219:48> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9dcde88 <col:48> 'int' 0))
);
    protected:
    protected:
        __wmask_type _M_convert_to_wmask(const mask __m) const throw();
        virtual void ~ctype();
        virtual bool do_is(mask __m, char_type __c) const;
        virtual const char_type *do_is(const char_type *__lo, const char_type *__hi, mask *__vec) const;
        virtual const char_type *do_scan_is(mask __m, const char_type *__lo, const char_type *__hi) const;
        virtual const char_type *do_scan_not(mask __m, const char_type *__lo, const char_type *__hi) const;
        virtual char_type do_toupper(char_type) const;
        virtual const char_type *do_toupper(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_tolower(char_type) const;
        virtual const char_type *do_tolower(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_widen(char) const;
        virtual const char *do_widen(const char *__lo, const char *__hi, char_type *__dest) const;
        virtual char do_narrow(char_type, char __dfault) const;
        virtual const char_type *do_narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__dest) const;
        void _M_initialize_ctype() throw();
        inline std::ctype<wchar_t> &operator=(const std::ctype<wchar_t> &);
    }
template <typename _CharT = char> class ctype : public locale::facet, public std::ctype_base {
        class ctype;
    public:
    public:
        typedef char char_type;
    protected:
    protected:
        __c_locale _M_c_locale_ctype;
        bool _M_del;
        __to_type _M_toupper;
        __to_type _M_tolower;
        const mask *_M_table;
        mutable char _M_widen_ok;
        mutable char _M_widen[256];
        mutable char _M_narrow[256];
        mutable char _M_narrow_ok;
    public:
    public:
        static locale::id id;
        static const size_t table_size = (ImplicitCastExpr 0x9dc1760 </usr/include/c++/4.6/bits/locale_facets.h:698:45, col:78> 'const size_t':'const unsigned int' <IntegralCast>
  (BinaryOperator 0x9dc1748 <col:45, col:78> 'int' '+'
    (IntegerLiteral 0x9dc16b8 <col:45> 'int' 1)
    (ImplicitCastExpr 0x9dc1738 <col:49, col:78> 'int' <IntegralCast>
      (CXXStaticCastExpr 0x9dc1720 <col:49, col:78> 'unsigned char' static_cast<unsigned char> <NoOp>
        (ImplicitCastExpr 0x9dc1710 <col:76, col:77> 'unsigned char' <IntegralCast>
          (UnaryOperator 0x9dc16e8 <col:76, col:77> 'int' prefix '-'
            (IntegerLiteral 0x9dc16d0 <col:77> 'int' 1)))))))
;
        ctype(const mask *__table = (ImplicitCastExpr 0x9dc5788 </usr/include/c++/4.6/bits/locale_facets.h:711:35> 'const mask *' <NullToPointer>
  (IntegerLiteral 0x9dc5770 <col:35> 'int' 0))
, bool __del = (CXXBoolLiteralExpr 0x9dc5798 </usr/include/c++/4.6/bits/locale_facets.h:711:51> '_Bool' false)
, size_t __refs = (ImplicitCastExpr 0x9dc57c0 </usr/include/c++/4.6/bits/locale_facets.h:711:74> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9dc57a8 <col:74> 'int' 0))
);
        ctype(__c_locale __cloc, const mask *__table = (ImplicitCastExpr 0x9dc57e8 </usr/include/c++/4.6/bits/locale_facets.h:724:54> 'const mask *' <NullToPointer>
  (IntegerLiteral 0x9dc57d0 <col:54> 'int' 0))
, bool __del = (CXXBoolLiteralExpr 0x9dc57f8 </usr/include/c++/4.6/bits/locale_facets.h:724:70> '_Bool' false)
, size_t __refs = (ImplicitCastExpr 0x9dc5820 </usr/include/c++/4.6/bits/locale_facets.h:725:22> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9dc5808 <col:22> 'int' 0))
);
        inline bool is(mask __m, char __c) const;
        inline const char *is(const char *__lo, const char *__hi, mask *__vec) const;
        inline const char *scan_is(mask __m, const char *__lo, const char *__hi) const;
        inline const char *scan_not(mask __m, const char *__lo, const char *__hi) const;
        char_type toupper(char_type __c) const (CompoundStmt 0x9dc5910 </usr/include/c++/4.6/bits/locale_facets.h:796:7, col:39>
  (ReturnStmt 0x9dc5900 <col:9, col:36>
    (CXXMemberCallExpr 0x9dc58d0 <col:16, col:36> 'char_type':'char'
      (MemberExpr 0x9dc58b0 <col:16, col:22> '<bound member function type>' ->do_toupper 0x9dc2fa0
        (CXXThisExpr 0x9dc5848 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9dc58f0 <col:33> 'char_type':'char' <LValueToRValue>
        (DeclRefExpr 0x9dc5898 <col:33> 'char_type':'char' lvalue ParmVar 0x9dc2210 '__c' 'char_type':'char')))))


        const char_type *toupper(char_type *__lo, const char_type *__hi) const (CompoundStmt 0x9dc5a20 </usr/include/c++/4.6/bits/locale_facets.h:813:7, col:46>
  (ReturnStmt 0x9dc5a10 <col:9, col:43>
    (CXXMemberCallExpr 0x9dc59c8 <col:16, col:43> 'const char_type *'
      (MemberExpr 0x9dc59a8 <col:16, col:22> '<bound member function type>' ->do_toupper 0x9dc30d0
        (CXXThisExpr 0x9dc5928 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9dc59f0 <col:33> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9dc5978 <col:33> 'char_type *' lvalue ParmVar 0x9dc2350 '__lo' 'char_type *'))
      (ImplicitCastExpr 0x9dc5a00 <col:39> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9dc5990 <col:39> 'const char_type *' lvalue ParmVar 0x9dc23c0 '__hi' 'const char_type *')))))


        char_type tolower(char_type __c) const (CompoundStmt 0x9dc5b00 </usr/include/c++/4.6/bits/locale_facets.h:829:7, col:39>
  (ReturnStmt 0x9dc5af0 <col:9, col:36>
    (CXXMemberCallExpr 0x9dc5ac0 <col:16, col:36> 'char_type':'char'
      (MemberExpr 0x9dc5aa0 <col:16, col:22> '<bound member function type>' ->do_tolower 0x9dc3190
        (CXXThisExpr 0x9dc5a38 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9dc5ae0 <col:33> 'char_type':'char' <LValueToRValue>
        (DeclRefExpr 0x9dc5a88 <col:33> 'char_type':'char' lvalue ParmVar 0x9dc24d0 '__c' 'char_type':'char')))))


        const char_type *tolower(char_type *__lo, const char_type *__hi) const (CompoundStmt 0x9dc5c10 </usr/include/c++/4.6/bits/locale_facets.h:846:7, col:46>
  (ReturnStmt 0x9dc5c00 <col:9, col:43>
    (CXXMemberCallExpr 0x9dc5bb8 <col:16, col:43> 'const char_type *'
      (MemberExpr 0x9dc5b98 <col:16, col:22> '<bound member function type>' ->do_tolower 0x9dc32c0
        (CXXThisExpr 0x9dc5b18 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9dc5be0 <col:33> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9dc5b68 <col:33> 'char_type *' lvalue ParmVar 0x9dc25a0 '__lo' 'char_type *'))
      (ImplicitCastExpr 0x9dc5bf0 <col:39> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9dc5b80 <col:39> 'const char_type *' lvalue ParmVar 0x9dc25f0 '__hi' 'const char_type *')))))


        char_type widen(char __c) const (CompoundStmt 0x9dc5ea8 </usr/include/c++/4.6/bits/locale_facets.h:866:7, line:871:7>
  (IfStmt 0x9dc5d70 <line:867:2, line:868:51>
    <<<NULL>>>
    (ImplicitCastExpr 0x9dc5c88 <line:867:6> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x9dc5c78 <col:6> 'char' <LValueToRValue>
        (MemberExpr 0x9dc5c54 <col:6> 'char' lvalue ->_M_widen_ok 0x9dc1350
          (CXXThisExpr 0x9dc5c28 <col:6> 'const class std::ctype<char> *' this))))
    (ReturnStmt 0x9dc5d60 <line:868:4, col:51>
      (ImplicitCastExpr 0x9dc5d50 <col:11, col:51> 'char' <LValueToRValue>
        (ArraySubscriptExpr 0x9dc5d38 <col:11, col:51> 'char' lvalue
          (ImplicitCastExpr 0x9dc5d28 <col:11> 'char *' <ArrayToPointerDecay>
            (MemberExpr 0x9dc5ca8 <col:11> 'char [256]' lvalue ->_M_widen 0x9dc1470
              (CXXThisExpr 0x9dc5c98 <col:11> 'const class std::ctype<char> *' this)))
          (CXXStaticCastExpr 0x9dc5d10 <col:20, col:50> 'unsigned char' static_cast<unsigned char> <NoOp>
            (ImplicitCastExpr 0x9dc5d00 <col:47> 'unsigned char' <IntegralCast>
              (ImplicitCastExpr 0x9dc5cf0 <col:47> 'char' <LValueToRValue>
                (DeclRefExpr 0x9dc5cc8 <col:47> 'char' lvalue ParmVar 0x9dc26c0 '__c' 'char')))))))
    <<<NULL>>>)
  (CXXMemberCallExpr 0x9dc5dc0 <line:869:2, col:22> 'void'
    (MemberExpr 0x9dc5da0 <col:2, col:8> '<bound member function type>' ->_M_widen_init 0x9dc54d0
      (CXXThisExpr 0x9dc5d90 <col:2> 'const class std::ctype<char> *' this)))
  (ReturnStmt 0x9dc5e98 <line:870:2, col:27>
    (CXXMemberCallExpr 0x9dc5e68 <col:9, col:27> 'char_type':'char'
      (MemberExpr 0x9dc5e48 <col:9, col:15> '<bound member function type>' ->do_widen 0x9dc3380
        (CXXThisExpr 0x9dc5de0 <col:9> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9dc5e88 <col:24> 'char' <LValueToRValue>
        (DeclRefExpr 0x9dc5e30 <col:24> 'char' lvalue ParmVar 0x9dc26c0 '__c' 'char')))))


        const char *widen(const char *__lo, const char *__hi, char_type *__to) const (CompoundStmt 0x9dc62e8 </usr/include/c++/4.6/bits/locale_facets.h:893:7, line:902:7>
  (IfStmt 0x9dc60d0 <line:894:2, line:898:4>
    <<<NULL>>>
    (BinaryOperator 0x9dc5f30 <line:894:6, col:21> '_Bool' '=='
      (ImplicitCastExpr 0x9dc5f20 <col:6> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9dc5f10 <col:6> 'char' <LValueToRValue>
          (MemberExpr 0x9dc5ed8 <col:6> 'char' lvalue ->_M_widen_ok 0x9dc1350
            (CXXThisExpr 0x9dc5ec8 <col:6> 'const class std::ctype<char> *' this))))
      (IntegerLiteral 0x9dc5ef8 <col:21> 'int' 1))
    (CompoundStmt 0x9dc60b8 <line:895:4, line:898:4>
      (CallExpr 0x9dc6008 <line:896:6, col:46> 'void *'
        (ImplicitCastExpr 0x9dc5ff8 <col:6> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9dc5f48 <col:6> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9bb0ec0 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0x9dc6040 <col:23> 'void *' <BitCast>
          (ImplicitCastExpr 0x9dc6030 <col:23> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x9dc5f60 <col:23> 'char_type *' lvalue ParmVar 0x9dc2860 '__to' 'char_type *')))
        (ImplicitCastExpr 0x9dc6060 <col:29> 'const void *' <BitCast>
          (ImplicitCastExpr 0x9dc6050 <col:29> 'const char *' <LValueToRValue>
            (DeclRefExpr 0x9dc5f78 <col:29> 'const char *' lvalue ParmVar 0x9dc27c0 '__lo' 'const char *')))
        (ImplicitCastExpr 0x9dc6070 <col:35, col:42> 'unsigned int' <IntegralCast>
          (BinaryOperator 0x9dc5fe0 <col:35, col:42> 'int' '-'
            (ImplicitCastExpr 0x9dc5fc0 <col:35> 'const char *' <LValueToRValue>
              (DeclRefExpr 0x9dc5f90 <col:35> 'const char *' lvalue ParmVar 0x9dc2810 '__hi' 'const char *'))
            (ImplicitCastExpr 0x9dc5fd0 <col:42> 'const char *' <LValueToRValue>
              (DeclRefExpr 0x9dc5fa8 <col:42> 'const char *' lvalue ParmVar 0x9dc27c0 '__lo' 'const char *')))))
      (ReturnStmt 0x9dc60a8 <line:897:6, col:13>
        (ImplicitCastExpr 0x9dc6098 <col:13> 'const char *' <LValueToRValue>
          (DeclRefExpr 0x9dc607c <col:13> 'const char *' lvalue ParmVar 0x9dc2810 '__hi' 'const char *'))))
    <<<NULL>>>)
  (IfStmt 0x9dc61a8 <line:899:2, line:900:18>
    <<<NULL>>>
    (UnaryOperator 0x9dc6140 <line:899:6, col:7> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9dc6130 <col:7> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0x9dc6120 <col:7> 'char' <LValueToRValue>
          (MemberExpr 0x9dc6100 <col:7> 'char' lvalue ->_M_widen_ok 0x9dc1350
            (CXXThisExpr 0x9dc60f0 <col:7> 'const class std::ctype<char> *' this)))))
    (CXXMemberCallExpr 0x9dc6188 <line:900:4, col:18> 'void'
      (MemberExpr 0x9dc6168 <col:4> '<bound member function type>' ->_M_widen_init 0x9dc54d0
        (CXXThisExpr 0x9dc6158 <col:4> 'const class std::ctype<char> *' this)))
    <<<NULL>>>)
  (ReturnStmt 0x9dc62d8 <line:901:2, col:40>
    (CXXMemberCallExpr 0x9dc6280 <col:9, col:40> 'const char *'
      (MemberExpr 0x9dc6260 <col:9, col:15> '<bound member function type>' ->do_widen 0x9dc3500
        (CXXThisExpr 0x9dc61c8 <col:9> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9dc62a8 <col:24> 'const char *' <LValueToRValue>
        (DeclRefExpr 0x9dc6218 <col:24> 'const char *' lvalue ParmVar 0x9dc27c0 '__lo' 'const char *'))
      (ImplicitCastExpr 0x9dc62b8 <col:30> 'const char *' <LValueToRValue>
        (DeclRefExpr 0x9dc6230 <col:30> 'const char *' lvalue ParmVar 0x9dc2810 '__hi' 'const char *'))
      (ImplicitCastExpr 0x9dc62c8 <col:36> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9dc6248 <col:36> 'char_type *' lvalue ParmVar 0x9dc2860 '__to' 'char_type *')))))


        char narrow(char_type __c, char __dfault) const (CompoundStmt 0x9dc6830 </usr/include/c++/4.6/bits/locale_facets.h:924:7, line:931:7>
  (IfStmt 0x9dc64b8 <line:925:2, line:926:52>
    <<<NULL>>>
    (ImplicitCastExpr 0x9dc63d0 <line:925:6, col:47> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x9dc63c0 <col:6, col:47> 'char' <LValueToRValue>
        (ArraySubscriptExpr 0x9dc63a8 <col:6, col:47> 'char' lvalue
          (ImplicitCastExpr 0x9dc6398 <col:6> 'char *' <ArrayToPointerDecay>
            (MemberExpr 0x9dc6318 <col:6> 'char [256]' lvalue ->_M_narrow 0x9dc1560
              (CXXThisExpr 0x9dc6308 <col:6> 'const class std::ctype<char> *' this)))
          (CXXStaticCastExpr 0x9dc6380 <col:16, col:46> 'unsigned char' static_cast<unsigned char> <NoOp>
            (ImplicitCastExpr 0x9dc6370 <col:43> 'unsigned char' <IntegralCast>
              (ImplicitCastExpr 0x9dc6360 <col:43> 'char_type':'char' <LValueToRValue>
                (DeclRefExpr 0x9dc6338 <col:43> 'char_type':'char' lvalue ParmVar 0x9dc29a0 '__c' 'char_type':'char')))))))
    (ReturnStmt 0x9dc64a8 <line:926:4, col:52>
      (ImplicitCastExpr 0x9dc6498 <col:11, col:52> 'char' <LValueToRValue>
        (ArraySubscriptExpr 0x9dc6480 <col:11, col:52> 'char' lvalue
          (ImplicitCastExpr 0x9dc6470 <col:11> 'char *' <ArrayToPointerDecay>
            (MemberExpr 0x9dc63f0 <col:11> 'char [256]' lvalue ->_M_narrow 0x9dc1560
              (CXXThisExpr 0x9dc63e0 <col:11> 'const class std::ctype<char> *' this)))
          (CXXStaticCastExpr 0x9dc6458 <col:21, col:51> 'unsigned char' static_cast<unsigned char> <NoOp>
            (ImplicitCastExpr 0x9dc6448 <col:48> 'unsigned char' <IntegralCast>
              (ImplicitCastExpr 0x9dc6438 <col:48> 'char_type':'char' <LValueToRValue>
                (DeclRefExpr 0x9dc6410 <col:48> 'char_type':'char' lvalue ParmVar 0x9dc29a0 '__c' 'char_type':'char')))))))
    <<<NULL>>>)
  (DeclStmt 0x9dc6610 <line:927:2, col:43>
    0x9dc64e0 "const char __t =
      (CXXMemberCallExpr 0x9dc65c8 <col:19, col:42> 'char'
        (MemberExpr 0x9dc65a8 <col:19> '<bound member function type>' ->do_narrow 0x9dc51c0
          (CXXThisExpr 0x9dc6598 <col:19> 'const class std::ctype<char> *' this))
        (ImplicitCastExpr 0x9dc65f0 <col:29> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9dc6568 <col:29> 'char_type':'char' lvalue ParmVar 0x9dc29a0 '__c' 'char_type':'char'))
        (ImplicitCastExpr 0x9dc6600 <col:34> 'char' <LValueToRValue>
          (DeclRefExpr 0x9dc6580 <col:34> 'char' lvalue ParmVar 0x9dc29e0 '__dfault' 'char')))")
  (IfStmt 0x9dc67d8 <line:928:2, line:929:49>
    <<<NULL>>>
    (BinaryOperator 0x9dc6690 <line:928:6, col:13> '_Bool' '!='
      (ImplicitCastExpr 0x9dc6660 <col:6> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9dc6650 <col:6> 'char' <LValueToRValue>
          (DeclRefExpr 0x9dc6620 <col:6> 'const char' lvalue Var 0x9dc64e0 '__t' 'const char')))
      (ImplicitCastExpr 0x9dc6680 <col:13> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9dc6670 <col:13> 'char' <LValueToRValue>
          (DeclRefExpr 0x9dc6638 <col:13> 'char' lvalue ParmVar 0x9dc29e0 '__dfault' 'char'))))
    (BinaryOperator 0x9dc67c0 <line:929:4, col:49> 'char' lvalue '='
      (ArraySubscriptExpr 0x9dc6780 <col:4, col:45> 'char' lvalue
        (ImplicitCastExpr 0x9dc6770 <col:4> 'char *' <ArrayToPointerDecay>
          (MemberExpr 0x9dc66f0 <col:4> 'char [256]' lvalue ->_M_narrow 0x9dc1560
            (CXXThisExpr 0x9dc66e0 <col:4> 'const class std::ctype<char> *' this)))
        (CXXStaticCastExpr 0x9dc6758 <col:14, col:44> 'unsigned char' static_cast<unsigned char> <NoOp>
          (ImplicitCastExpr 0x9dc6748 <col:41> 'unsigned char' <IntegralCast>
            (ImplicitCastExpr 0x9dc6738 <col:41> 'char_type':'char' <LValueToRValue>
              (DeclRefExpr 0x9dc6710 <col:41> 'char_type':'char' lvalue ParmVar 0x9dc29a0 '__c' 'char_type':'char')))))
      (ImplicitCastExpr 0x9dc67b0 <col:49> 'char' <LValueToRValue>
        (DeclRefExpr 0x9dc6794 <col:49> 'const char' lvalue Var 0x9dc64e0 '__t' 'const char')))
    <<<NULL>>>)
  (ReturnStmt 0x9dc6820 <line:930:2, col:9>
    (ImplicitCastExpr 0x9dc6810 <col:9> 'char' <LValueToRValue>
      (DeclRefExpr 0x9dc67f4 <col:9> 'const char' lvalue Var 0x9dc64e0 '__t' 'const char'))))


        const char_type *narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__to) const (CompoundStmt 0x9dc6d30 </usr/include/c++/4.6/bits/locale_facets.h:958:7, line:967:7>
  (IfStmt 0x9dc6ae8 <line:959:2, line:963:4>
    <<<NULL>>>
    (ImplicitCastExpr 0x9dc6950 <line:959:6, col:46> '_Bool' <IntegralToBoolean>
      (CallExpr 0x9dc6908 <col:6, col:46> 'long'
        (ImplicitCastExpr 0x9dc68f8 <col:6> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9dc6850 <col:6> 'long (long, long)' lvalue Function 0x9ca0bd0 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0x9dc6930 <col:23, col:39> 'long' <IntegralCast>
          (BinaryOperator 0x9dc68d0 <col:23, col:39> '_Bool' '=='
            (ImplicitCastExpr 0x9dc68c0 <col:23> 'int' <IntegralCast>
              (ImplicitCastExpr 0x9dc68b0 <col:23> 'char' <LValueToRValue>
                (MemberExpr 0x9dc6878 <col:23> 'char' lvalue ->_M_narrow_ok 0x9dc15a0
                  (CXXThisExpr 0x9dc6868 <col:23> 'const class std::ctype<char> *' this))))
            (IntegerLiteral 0x9dc6898 <col:39> 'int' 1)))
        (ImplicitCastExpr 0x9dc6940 <col:42> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0x9dc68e8 <col:42> '_Bool' true))))
    (CompoundStmt 0x9dc6ad0 <line:960:4, line:963:4>
      (CallExpr 0x9dc6a20 <line:961:6, col:46> 'void *'
        (ImplicitCastExpr 0x9dc6a10 <col:6> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9dc695c <col:6> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9bb0ec0 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0x9dc6a58 <col:23> 'void *' <BitCast>
          (ImplicitCastExpr 0x9dc6a48 <col:23> 'char *' <LValueToRValue>
            (DeclRefExpr 0x9dc6974 <col:23> 'char *' lvalue ParmVar 0x9dc2be0 '__to' 'char *')))
        (ImplicitCastExpr 0x9dc6a78 <col:29> 'const void *' <BitCast>
          (ImplicitCastExpr 0x9dc6a68 <col:29> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x9dc698c <col:29> 'const char_type *' lvalue ParmVar 0x9dc2b00 '__lo' 'const char_type *')))
        (ImplicitCastExpr 0x9dc6a88 <col:35, col:42> 'unsigned int' <IntegralCast>
          (BinaryOperator 0x9dc69f8 <col:35, col:42> 'int' '-'
            (ImplicitCastExpr 0x9dc69d8 <col:35> 'const char_type *' <LValueToRValue>
              (DeclRefExpr 0x9dc69a4 <col:35> 'const char_type *' lvalue ParmVar 0x9dc2b50 '__hi' 'const char_type *'))
            (ImplicitCastExpr 0x9dc69e8 <col:42> 'const char_type *' <LValueToRValue>
              (DeclRefExpr 0x9dc69bc <col:42> 'const char_type *' lvalue ParmVar 0x9dc2b00 '__lo' 'const char_type *')))))
      (ReturnStmt 0x9dc6ac0 <line:962:6, col:13>
        (ImplicitCastExpr 0x9dc6ab0 <col:13> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9dc6a94 <col:13> 'const char_type *' lvalue ParmVar 0x9dc2b50 '__hi' 'const char_type *'))))
    <<<NULL>>>)
  (IfStmt 0x9dc6bc0 <line:964:2, line:965:19>
    <<<NULL>>>
    (UnaryOperator 0x9dc6b58 <line:964:6, col:7> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9dc6b48 <col:7> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0x9dc6b38 <col:7> 'char' <LValueToRValue>
          (MemberExpr 0x9dc6b18 <col:7> 'char' lvalue ->_M_narrow_ok 0x9dc15a0
            (CXXThisExpr 0x9dc6b08 <col:7> 'const class std::ctype<char> *' this)))))
    (CXXMemberCallExpr 0x9dc6ba0 <line:965:4, col:19> 'void'
      (MemberExpr 0x9dc6b80 <col:4> '<bound member function type>' ->_M_narrow_init 0x9dc5450
        (CXXThisExpr 0x9dc6b70 <col:4> 'const class std::ctype<char> *' this)))
    <<<NULL>>>)
  (ReturnStmt 0x9dc6d20 <line:966:2, col:51>
    (CXXMemberCallExpr 0x9dc6cb0 <col:9, col:51> 'const char_type *'
      (MemberExpr 0x9dc6c90 <col:9, col:15> '<bound member function type>' ->do_narrow 0x9dc5380
        (CXXThisExpr 0x9dc6be0 <col:9> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9dc6ce0 <col:25> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9dc6c30 <col:25> 'const char_type *' lvalue ParmVar 0x9dc2b00 '__lo' 'const char_type *'))
      (ImplicitCastExpr 0x9dc6cf0 <col:31> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9dc6c48 <col:31> 'const char_type *' lvalue ParmVar 0x9dc2b50 '__hi' 'const char_type *'))
      (ImplicitCastExpr 0x9dc6d00 <col:37> 'char' <LValueToRValue>
        (DeclRefExpr 0x9dc6c60 <col:37> 'char' lvalue ParmVar 0x9dc2b90 '__dfault' 'char'))
      (ImplicitCastExpr 0x9dc6d10 <col:47> 'char *' <LValueToRValue>
        (DeclRefExpr 0x9dc6c78 <col:47> 'char *' lvalue ParmVar 0x9dc2be0 '__to' 'char *')))))


        const mask *table() const throw() (CompoundStmt 0x9dc6da0 </usr/include/c++/4.6/bits/locale_facets.h:975:7, col:26>
  (ReturnStmt 0x9dc6d90 <col:9, col:16>
    (ImplicitCastExpr 0x9dc6d80 <col:16> 'const mask *' <LValueToRValue>
      (MemberExpr 0x9dc6d60 <col:16> 'const mask *const' lvalue ->_M_table 0x9dc1310
        (CXXThisExpr 0x9dc6d50 <col:16> 'const class std::ctype<char> *' this)))))


        static const mask *classic_table() throw();
    protected:
    protected:
        virtual void ~ctype();
        virtual char_type do_toupper(char_type) const;
        virtual const char_type *do_toupper(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_tolower(char_type) const;
        virtual const char_type *do_tolower(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_widen(char __c) const (CompoundStmt 0x9dc6df0 </usr/include/c++/4.6/bits/locale_facets.h:1076:7, col:21>
  (ReturnStmt 0x9dc6de0 <col:9, col:16>
    (ImplicitCastExpr 0x9dc6dd0 <col:16> 'char' <LValueToRValue>
      (DeclRefExpr 0x9dc6db4 <col:16> 'char' lvalue ParmVar 0x9dc3330 '__c' 'char'))))


        virtual const char *do_widen(const char *__lo, const char *__hi, char_type *__dest) const (CompoundStmt 0x9dc6f78 </usr/include/c++/4.6/bits/locale_facets.h:1099:7, line:1102:7>
  (CallExpr 0x9dc6ec8 <line:1100:2, col:44> 'void *'
    (ImplicitCastExpr 0x9dc6eb8 <col:2> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9dc6e04 <col:2> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9bb0ec0 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
    (ImplicitCastExpr 0x9dc6f00 <col:19> 'void *' <BitCast>
      (ImplicitCastExpr 0x9dc6ef0 <col:19> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9dc6e1c <col:19> 'char_type *' lvalue ParmVar 0x9dc34a0 '__dest' 'char_type *')))
    (ImplicitCastExpr 0x9dc6f20 <col:27> 'const void *' <BitCast>
      (ImplicitCastExpr 0x9dc6f10 <col:27> 'const char *' <LValueToRValue>
        (DeclRefExpr 0x9dc6e34 <col:27> 'const char *' lvalue ParmVar 0x9dc3400 '__lo' 'const char *')))
    (ImplicitCastExpr 0x9dc6f30 <col:33, col:40> 'unsigned int' <IntegralCast>
      (BinaryOperator 0x9dc6ea0 <col:33, col:40> 'int' '-'
        (ImplicitCastExpr 0x9dc6e80 <col:33> 'const char *' <LValueToRValue>
          (DeclRefExpr 0x9dc6e4c <col:33> 'const char *' lvalue ParmVar 0x9dc3450 '__hi' 'const char *'))
        (ImplicitCastExpr 0x9dc6e90 <col:40> 'const char *' <LValueToRValue>
          (DeclRefExpr 0x9dc6e64 <col:40> 'const char *' lvalue ParmVar 0x9dc3400 '__lo' 'const char *')))))
  (ReturnStmt 0x9dc6f68 <line:1101:2, col:9>
    (ImplicitCastExpr 0x9dc6f58 <col:9> 'const char *' <LValueToRValue>
      (DeclRefExpr 0x9dc6f3c <col:9> 'const char *' lvalue ParmVar 0x9dc3450 '__hi' 'const char *'))))


        virtual char do_narrow(char_type __c, char) const (CompoundStmt 0x9dc6fc8 </usr/include/c++/4.6/bits/locale_facets.h:1125:7, col:21>
  (ReturnStmt 0x9dc6fb8 <col:9, col:16>
    (ImplicitCastExpr 0x9dc6fa8 <col:16> 'char_type':'char' <LValueToRValue>
      (DeclRefExpr 0x9dc6f90 <col:16> 'char_type':'char' lvalue ParmVar 0x9dc3580 '__c' 'char_type':'char'))))


        virtual const char_type *do_narrow(const char_type *__lo, const char_type *__hi, char, char *__dest) const (CompoundStmt 0x9dc7150 </usr/include/c++/4.6/bits/locale_facets.h:1152:7, line:1155:7>
  (CallExpr 0x9dc70a0 <line:1153:2, col:44> 'void *'
    (ImplicitCastExpr 0x9dc7090 <col:2> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9dc6fdc <col:2> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9bb0ec0 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
    (ImplicitCastExpr 0x9dc70d8 <col:19> 'void *' <BitCast>
      (ImplicitCastExpr 0x9dc70c8 <col:19> 'char *' <LValueToRValue>
        (DeclRefExpr 0x9dc6ff4 <col:19> 'char *' lvalue ParmVar 0x9dc5320 '__dest' 'char *')))
    (ImplicitCastExpr 0x9dc70f8 <col:27> 'const void *' <BitCast>
      (ImplicitCastExpr 0x9dc70e8 <col:27> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9dc700c <col:27> 'const char_type *' lvalue ParmVar 0x9dc5240 '__lo' 'const char_type *')))
    (ImplicitCastExpr 0x9dc7108 <col:33, col:40> 'unsigned int' <IntegralCast>
      (BinaryOperator 0x9dc7078 <col:33, col:40> 'int' '-'
        (ImplicitCastExpr 0x9dc7058 <col:33> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9dc7024 <col:33> 'const char_type *' lvalue ParmVar 0x9dc5290 '__hi' 'const char_type *'))
        (ImplicitCastExpr 0x9dc7068 <col:40> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9dc703c <col:40> 'const char_type *' lvalue ParmVar 0x9dc5240 '__lo' 'const char_type *')))))
  (ReturnStmt 0x9dc7140 <line:1154:2, col:9>
    (ImplicitCastExpr 0x9dc7130 <col:9> 'const char_type *' <LValueToRValue>
      (DeclRefExpr 0x9dc7114 <col:9> 'const char_type *' lvalue ParmVar 0x9dc5290 '__hi' 'const char_type *'))))


    private:
    private:
        void _M_narrow_init() const;
        void _M_widen_init() const;
        inline std::ctype<char> &operator=(const std::ctype<char> &);
    }
template <typename _CharT> class ctype : public __ctype_abstract_base<_CharT> {
        class ctype;
    public:
    public:
        typedef _CharT char_type;
        typedef typename __ctype_abstract_base<_CharT>::mask mask;
        static locale::id id;
        ctype<_CharT>(size_t __refs = (ImplicitCastExpr 0x9dc0b38 </usr/include/c++/4.6/bits/locale_facets.h:616:29> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9dc0b20 <col:29> 'int' 0))
) : __ctype_abstract_base<_CharT>((DeclRefExpr 0x9dc0bd0 </usr/include/c++/4.6/bits/locale_facets.h:616:64> 'size_t':'unsigned int' lvalue ParmVar 0x9dbf800 '__refs' 'size_t':'unsigned int')
) (CompoundStmt 0x9dc0c30 </usr/include/c++/4.6/bits/locale_facets.h:616:72, col:74>)


    protected:
    protected:
        virtual void ~ctype<_CharT>();
        virtual bool do_is(mask __m, char_type __c) const;
        virtual const char_type *do_is(const char_type *__lo, const char_type *__hi, mask *__vec) const;
        virtual const char_type *do_scan_is(mask __m, const char_type *__lo, const char_type *__hi) const;
        virtual const char_type *do_scan_not(mask __m, const char_type *__lo, const char_type *__hi) const;
        virtual char_type do_toupper(char_type __c) const;
        virtual const char_type *do_toupper(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_tolower(char_type __c) const;
        virtual const char_type *do_tolower(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_widen(char __c) const;
        virtual const char *do_widen(const char *__lo, const char *__hi, char_type *__dest) const;
        virtual char do_narrow(char_type, char __dfault) const;
        virtual const char_type *do_narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__dest) const;
    };
    static locale::id id(CXXConstructExpr 0x9dc0e78 </usr/include/c++/4.6/bits/locale_facets.h:662:31> 'class locale::id':'class std::locale::id''void (void)')
;
    class ctype : public locale::facet, public std::ctype_base {
        class ctype;
    public:
    public:
        typedef char char_type;
    protected:
    protected:
        __c_locale _M_c_locale_ctype;
        bool _M_del;
        __to_type _M_toupper;
        __to_type _M_tolower;
        const mask *_M_table;
        mutable char _M_widen_ok;
        mutable char _M_widen[256];
        mutable char _M_narrow[256];
        mutable char _M_narrow_ok;
    public:
    public:
        static locale::id id;
        static const size_t table_size = (ImplicitCastExpr 0x9dc1760 </usr/include/c++/4.6/bits/locale_facets.h:698:45, col:78> 'const size_t':'const unsigned int' <IntegralCast>
  (BinaryOperator 0x9dc1748 <col:45, col:78> 'int' '+'
    (IntegerLiteral 0x9dc16b8 <col:45> 'int' 1)
    (ImplicitCastExpr 0x9dc1738 <col:49, col:78> 'int' <IntegralCast>
      (CXXStaticCastExpr 0x9dc1720 <col:49, col:78> 'unsigned char' static_cast<unsigned char> <NoOp>
        (ImplicitCastExpr 0x9dc1710 <col:76, col:77> 'unsigned char' <IntegralCast>
          (UnaryOperator 0x9dc16e8 <col:76, col:77> 'int' prefix '-'
            (IntegerLiteral 0x9dc16d0 <col:77> 'int' 1)))))))
;
        ctype(const mask *__table = (ImplicitCastExpr 0x9dc5788 </usr/include/c++/4.6/bits/locale_facets.h:711:35> 'const mask *' <NullToPointer>
  (IntegerLiteral 0x9dc5770 <col:35> 'int' 0))
, bool __del = (CXXBoolLiteralExpr 0x9dc5798 </usr/include/c++/4.6/bits/locale_facets.h:711:51> '_Bool' false)
, size_t __refs = (ImplicitCastExpr 0x9dc57c0 </usr/include/c++/4.6/bits/locale_facets.h:711:74> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9dc57a8 <col:74> 'int' 0))
);
        ctype(__c_locale __cloc, const mask *__table = (ImplicitCastExpr 0x9dc57e8 </usr/include/c++/4.6/bits/locale_facets.h:724:54> 'const mask *' <NullToPointer>
  (IntegerLiteral 0x9dc57d0 <col:54> 'int' 0))
, bool __del = (CXXBoolLiteralExpr 0x9dc57f8 </usr/include/c++/4.6/bits/locale_facets.h:724:70> '_Bool' false)
, size_t __refs = (ImplicitCastExpr 0x9dc5820 </usr/include/c++/4.6/bits/locale_facets.h:725:22> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9dc5808 <col:22> 'int' 0))
);
        inline bool is(mask __m, char __c) const;
        inline const char *is(const char *__lo, const char *__hi, mask *__vec) const;
        inline const char *scan_is(mask __m, const char *__lo, const char *__hi) const;
        inline const char *scan_not(mask __m, const char *__lo, const char *__hi) const;
        char_type toupper(char_type __c) const (CompoundStmt 0x9dc5910 </usr/include/c++/4.6/bits/locale_facets.h:796:7, col:39>
  (ReturnStmt 0x9dc5900 <col:9, col:36>
    (CXXMemberCallExpr 0x9dc58d0 <col:16, col:36> 'char_type':'char'
      (MemberExpr 0x9dc58b0 <col:16, col:22> '<bound member function type>' ->do_toupper 0x9dc2fa0
        (CXXThisExpr 0x9dc5848 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9dc58f0 <col:33> 'char_type':'char' <LValueToRValue>
        (DeclRefExpr 0x9dc5898 <col:33> 'char_type':'char' lvalue ParmVar 0x9dc2210 '__c' 'char_type':'char')))))


        const char_type *toupper(char_type *__lo, const char_type *__hi) const (CompoundStmt 0x9dc5a20 </usr/include/c++/4.6/bits/locale_facets.h:813:7, col:46>
  (ReturnStmt 0x9dc5a10 <col:9, col:43>
    (CXXMemberCallExpr 0x9dc59c8 <col:16, col:43> 'const char_type *'
      (MemberExpr 0x9dc59a8 <col:16, col:22> '<bound member function type>' ->do_toupper 0x9dc30d0
        (CXXThisExpr 0x9dc5928 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9dc59f0 <col:33> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9dc5978 <col:33> 'char_type *' lvalue ParmVar 0x9dc2350 '__lo' 'char_type *'))
      (ImplicitCastExpr 0x9dc5a00 <col:39> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9dc5990 <col:39> 'const char_type *' lvalue ParmVar 0x9dc23c0 '__hi' 'const char_type *')))))


        char_type tolower(char_type __c) const (CompoundStmt 0x9dc5b00 </usr/include/c++/4.6/bits/locale_facets.h:829:7, col:39>
  (ReturnStmt 0x9dc5af0 <col:9, col:36>
    (CXXMemberCallExpr 0x9dc5ac0 <col:16, col:36> 'char_type':'char'
      (MemberExpr 0x9dc5aa0 <col:16, col:22> '<bound member function type>' ->do_tolower 0x9dc3190
        (CXXThisExpr 0x9dc5a38 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9dc5ae0 <col:33> 'char_type':'char' <LValueToRValue>
        (DeclRefExpr 0x9dc5a88 <col:33> 'char_type':'char' lvalue ParmVar 0x9dc24d0 '__c' 'char_type':'char')))))


        const char_type *tolower(char_type *__lo, const char_type *__hi) const (CompoundStmt 0x9dc5c10 </usr/include/c++/4.6/bits/locale_facets.h:846:7, col:46>
  (ReturnStmt 0x9dc5c00 <col:9, col:43>
    (CXXMemberCallExpr 0x9dc5bb8 <col:16, col:43> 'const char_type *'
      (MemberExpr 0x9dc5b98 <col:16, col:22> '<bound member function type>' ->do_tolower 0x9dc32c0
        (CXXThisExpr 0x9dc5b18 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9dc5be0 <col:33> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9dc5b68 <col:33> 'char_type *' lvalue ParmVar 0x9dc25a0 '__lo' 'char_type *'))
      (ImplicitCastExpr 0x9dc5bf0 <col:39> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9dc5b80 <col:39> 'const char_type *' lvalue ParmVar 0x9dc25f0 '__hi' 'const char_type *')))))


        char_type widen(char __c) const (CompoundStmt 0x9dc5ea8 </usr/include/c++/4.6/bits/locale_facets.h:866:7, line:871:7>
  (IfStmt 0x9dc5d70 <line:867:2, line:868:51>
    <<<NULL>>>
    (ImplicitCastExpr 0x9dc5c88 <line:867:6> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x9dc5c78 <col:6> 'char' <LValueToRValue>
        (MemberExpr 0x9dc5c54 <col:6> 'char' lvalue ->_M_widen_ok 0x9dc1350
          (CXXThisExpr 0x9dc5c28 <col:6> 'const class std::ctype<char> *' this))))
    (ReturnStmt 0x9dc5d60 <line:868:4, col:51>
      (ImplicitCastExpr 0x9dc5d50 <col:11, col:51> 'char' <LValueToRValue>
        (ArraySubscriptExpr 0x9dc5d38 <col:11, col:51> 'char' lvalue
          (ImplicitCastExpr 0x9dc5d28 <col:11> 'char *' <ArrayToPointerDecay>
            (MemberExpr 0x9dc5ca8 <col:11> 'char [256]' lvalue ->_M_widen 0x9dc1470
              (CXXThisExpr 0x9dc5c98 <col:11> 'const class std::ctype<char> *' this)))
          (CXXStaticCastExpr 0x9dc5d10 <col:20, col:50> 'unsigned char' static_cast<unsigned char> <NoOp>
            (ImplicitCastExpr 0x9dc5d00 <col:47> 'unsigned char' <IntegralCast>
              (ImplicitCastExpr 0x9dc5cf0 <col:47> 'char' <LValueToRValue>
                (DeclRefExpr 0x9dc5cc8 <col:47> 'char' lvalue ParmVar 0x9dc26c0 '__c' 'char')))))))
    <<<NULL>>>)
  (CXXMemberCallExpr 0x9dc5dc0 <line:869:2, col:22> 'void'
    (MemberExpr 0x9dc5da0 <col:2, col:8> '<bound member function type>' ->_M_widen_init 0x9dc54d0
      (CXXThisExpr 0x9dc5d90 <col:2> 'const class std::ctype<char> *' this)))
  (ReturnStmt 0x9dc5e98 <line:870:2, col:27>
    (CXXMemberCallExpr 0x9dc5e68 <col:9, col:27> 'char_type':'char'
      (MemberExpr 0x9dc5e48 <col:9, col:15> '<bound member function type>' ->do_widen 0x9dc3380
        (CXXThisExpr 0x9dc5de0 <col:9> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9dc5e88 <col:24> 'char' <LValueToRValue>
        (DeclRefExpr 0x9dc5e30 <col:24> 'char' lvalue ParmVar 0x9dc26c0 '__c' 'char')))))


        const char *widen(const char *__lo, const char *__hi, char_type *__to) const (CompoundStmt 0x9dc62e8 </usr/include/c++/4.6/bits/locale_facets.h:893:7, line:902:7>
  (IfStmt 0x9dc60d0 <line:894:2, line:898:4>
    <<<NULL>>>
    (BinaryOperator 0x9dc5f30 <line:894:6, col:21> '_Bool' '=='
      (ImplicitCastExpr 0x9dc5f20 <col:6> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9dc5f10 <col:6> 'char' <LValueToRValue>
          (MemberExpr 0x9dc5ed8 <col:6> 'char' lvalue ->_M_widen_ok 0x9dc1350
            (CXXThisExpr 0x9dc5ec8 <col:6> 'const class std::ctype<char> *' this))))
      (IntegerLiteral 0x9dc5ef8 <col:21> 'int' 1))
    (CompoundStmt 0x9dc60b8 <line:895:4, line:898:4>
      (CallExpr 0x9dc6008 <line:896:6, col:46> 'void *'
        (ImplicitCastExpr 0x9dc5ff8 <col:6> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9dc5f48 <col:6> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9bb0ec0 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0x9dc6040 <col:23> 'void *' <BitCast>
          (ImplicitCastExpr 0x9dc6030 <col:23> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x9dc5f60 <col:23> 'char_type *' lvalue ParmVar 0x9dc2860 '__to' 'char_type *')))
        (ImplicitCastExpr 0x9dc6060 <col:29> 'const void *' <BitCast>
          (ImplicitCastExpr 0x9dc6050 <col:29> 'const char *' <LValueToRValue>
            (DeclRefExpr 0x9dc5f78 <col:29> 'const char *' lvalue ParmVar 0x9dc27c0 '__lo' 'const char *')))
        (ImplicitCastExpr 0x9dc6070 <col:35, col:42> 'unsigned int' <IntegralCast>
          (BinaryOperator 0x9dc5fe0 <col:35, col:42> 'int' '-'
            (ImplicitCastExpr 0x9dc5fc0 <col:35> 'const char *' <LValueToRValue>
              (DeclRefExpr 0x9dc5f90 <col:35> 'const char *' lvalue ParmVar 0x9dc2810 '__hi' 'const char *'))
            (ImplicitCastExpr 0x9dc5fd0 <col:42> 'const char *' <LValueToRValue>
              (DeclRefExpr 0x9dc5fa8 <col:42> 'const char *' lvalue ParmVar 0x9dc27c0 '__lo' 'const char *')))))
      (ReturnStmt 0x9dc60a8 <line:897:6, col:13>
        (ImplicitCastExpr 0x9dc6098 <col:13> 'const char *' <LValueToRValue>
          (DeclRefExpr 0x9dc607c <col:13> 'const char *' lvalue ParmVar 0x9dc2810 '__hi' 'const char *'))))
    <<<NULL>>>)
  (IfStmt 0x9dc61a8 <line:899:2, line:900:18>
    <<<NULL>>>
    (UnaryOperator 0x9dc6140 <line:899:6, col:7> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9dc6130 <col:7> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0x9dc6120 <col:7> 'char' <LValueToRValue>
          (MemberExpr 0x9dc6100 <col:7> 'char' lvalue ->_M_widen_ok 0x9dc1350
            (CXXThisExpr 0x9dc60f0 <col:7> 'const class std::ctype<char> *' this)))))
    (CXXMemberCallExpr 0x9dc6188 <line:900:4, col:18> 'void'
      (MemberExpr 0x9dc6168 <col:4> '<bound member function type>' ->_M_widen_init 0x9dc54d0
        (CXXThisExpr 0x9dc6158 <col:4> 'const class std::ctype<char> *' this)))
    <<<NULL>>>)
  (ReturnStmt 0x9dc62d8 <line:901:2, col:40>
    (CXXMemberCallExpr 0x9dc6280 <col:9, col:40> 'const char *'
      (MemberExpr 0x9dc6260 <col:9, col:15> '<bound member function type>' ->do_widen 0x9dc3500
        (CXXThisExpr 0x9dc61c8 <col:9> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9dc62a8 <col:24> 'const char *' <LValueToRValue>
        (DeclRefExpr 0x9dc6218 <col:24> 'const char *' lvalue ParmVar 0x9dc27c0 '__lo' 'const char *'))
      (ImplicitCastExpr 0x9dc62b8 <col:30> 'const char *' <LValueToRValue>
        (DeclRefExpr 0x9dc6230 <col:30> 'const char *' lvalue ParmVar 0x9dc2810 '__hi' 'const char *'))
      (ImplicitCastExpr 0x9dc62c8 <col:36> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9dc6248 <col:36> 'char_type *' lvalue ParmVar 0x9dc2860 '__to' 'char_type *')))))


        char narrow(char_type __c, char __dfault) const (CompoundStmt 0x9dc6830 </usr/include/c++/4.6/bits/locale_facets.h:924:7, line:931:7>
  (IfStmt 0x9dc64b8 <line:925:2, line:926:52>
    <<<NULL>>>
    (ImplicitCastExpr 0x9dc63d0 <line:925:6, col:47> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x9dc63c0 <col:6, col:47> 'char' <LValueToRValue>
        (ArraySubscriptExpr 0x9dc63a8 <col:6, col:47> 'char' lvalue
          (ImplicitCastExpr 0x9dc6398 <col:6> 'char *' <ArrayToPointerDecay>
            (MemberExpr 0x9dc6318 <col:6> 'char [256]' lvalue ->_M_narrow 0x9dc1560
              (CXXThisExpr 0x9dc6308 <col:6> 'const class std::ctype<char> *' this)))
          (CXXStaticCastExpr 0x9dc6380 <col:16, col:46> 'unsigned char' static_cast<unsigned char> <NoOp>
            (ImplicitCastExpr 0x9dc6370 <col:43> 'unsigned char' <IntegralCast>
              (ImplicitCastExpr 0x9dc6360 <col:43> 'char_type':'char' <LValueToRValue>
                (DeclRefExpr 0x9dc6338 <col:43> 'char_type':'char' lvalue ParmVar 0x9dc29a0 '__c' 'char_type':'char')))))))
    (ReturnStmt 0x9dc64a8 <line:926:4, col:52>
      (ImplicitCastExpr 0x9dc6498 <col:11, col:52> 'char' <LValueToRValue>
        (ArraySubscriptExpr 0x9dc6480 <col:11, col:52> 'char' lvalue
          (ImplicitCastExpr 0x9dc6470 <col:11> 'char *' <ArrayToPointerDecay>
            (MemberExpr 0x9dc63f0 <col:11> 'char [256]' lvalue ->_M_narrow 0x9dc1560
              (CXXThisExpr 0x9dc63e0 <col:11> 'const class std::ctype<char> *' this)))
          (CXXStaticCastExpr 0x9dc6458 <col:21, col:51> 'unsigned char' static_cast<unsigned char> <NoOp>
            (ImplicitCastExpr 0x9dc6448 <col:48> 'unsigned char' <IntegralCast>
              (ImplicitCastExpr 0x9dc6438 <col:48> 'char_type':'char' <LValueToRValue>
                (DeclRefExpr 0x9dc6410 <col:48> 'char_type':'char' lvalue ParmVar 0x9dc29a0 '__c' 'char_type':'char')))))))
    <<<NULL>>>)
  (DeclStmt 0x9dc6610 <line:927:2, col:43>
    0x9dc64e0 "const char __t =
      (CXXMemberCallExpr 0x9dc65c8 <col:19, col:42> 'char'
        (MemberExpr 0x9dc65a8 <col:19> '<bound member function type>' ->do_narrow 0x9dc51c0
          (CXXThisExpr 0x9dc6598 <col:19> 'const class std::ctype<char> *' this))
        (ImplicitCastExpr 0x9dc65f0 <col:29> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9dc6568 <col:29> 'char_type':'char' lvalue ParmVar 0x9dc29a0 '__c' 'char_type':'char'))
        (ImplicitCastExpr 0x9dc6600 <col:34> 'char' <LValueToRValue>
          (DeclRefExpr 0x9dc6580 <col:34> 'char' lvalue ParmVar 0x9dc29e0 '__dfault' 'char')))")
  (IfStmt 0x9dc67d8 <line:928:2, line:929:49>
    <<<NULL>>>
    (BinaryOperator 0x9dc6690 <line:928:6, col:13> '_Bool' '!='
      (ImplicitCastExpr 0x9dc6660 <col:6> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9dc6650 <col:6> 'char' <LValueToRValue>
          (DeclRefExpr 0x9dc6620 <col:6> 'const char' lvalue Var 0x9dc64e0 '__t' 'const char')))
      (ImplicitCastExpr 0x9dc6680 <col:13> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9dc6670 <col:13> 'char' <LValueToRValue>
          (DeclRefExpr 0x9dc6638 <col:13> 'char' lvalue ParmVar 0x9dc29e0 '__dfault' 'char'))))
    (BinaryOperator 0x9dc67c0 <line:929:4, col:49> 'char' lvalue '='
      (ArraySubscriptExpr 0x9dc6780 <col:4, col:45> 'char' lvalue
        (ImplicitCastExpr 0x9dc6770 <col:4> 'char *' <ArrayToPointerDecay>
          (MemberExpr 0x9dc66f0 <col:4> 'char [256]' lvalue ->_M_narrow 0x9dc1560
            (CXXThisExpr 0x9dc66e0 <col:4> 'const class std::ctype<char> *' this)))
        (CXXStaticCastExpr 0x9dc6758 <col:14, col:44> 'unsigned char' static_cast<unsigned char> <NoOp>
          (ImplicitCastExpr 0x9dc6748 <col:41> 'unsigned char' <IntegralCast>
            (ImplicitCastExpr 0x9dc6738 <col:41> 'char_type':'char' <LValueToRValue>
              (DeclRefExpr 0x9dc6710 <col:41> 'char_type':'char' lvalue ParmVar 0x9dc29a0 '__c' 'char_type':'char')))))
      (ImplicitCastExpr 0x9dc67b0 <col:49> 'char' <LValueToRValue>
        (DeclRefExpr 0x9dc6794 <col:49> 'const char' lvalue Var 0x9dc64e0 '__t' 'const char')))
    <<<NULL>>>)
  (ReturnStmt 0x9dc6820 <line:930:2, col:9>
    (ImplicitCastExpr 0x9dc6810 <col:9> 'char' <LValueToRValue>
      (DeclRefExpr 0x9dc67f4 <col:9> 'const char' lvalue Var 0x9dc64e0 '__t' 'const char'))))


        const char_type *narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__to) const (CompoundStmt 0x9dc6d30 </usr/include/c++/4.6/bits/locale_facets.h:958:7, line:967:7>
  (IfStmt 0x9dc6ae8 <line:959:2, line:963:4>
    <<<NULL>>>
    (ImplicitCastExpr 0x9dc6950 <line:959:6, col:46> '_Bool' <IntegralToBoolean>
      (CallExpr 0x9dc6908 <col:6, col:46> 'long'
        (ImplicitCastExpr 0x9dc68f8 <col:6> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9dc6850 <col:6> 'long (long, long)' lvalue Function 0x9ca0bd0 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0x9dc6930 <col:23, col:39> 'long' <IntegralCast>
          (BinaryOperator 0x9dc68d0 <col:23, col:39> '_Bool' '=='
            (ImplicitCastExpr 0x9dc68c0 <col:23> 'int' <IntegralCast>
              (ImplicitCastExpr 0x9dc68b0 <col:23> 'char' <LValueToRValue>
                (MemberExpr 0x9dc6878 <col:23> 'char' lvalue ->_M_narrow_ok 0x9dc15a0
                  (CXXThisExpr 0x9dc6868 <col:23> 'const class std::ctype<char> *' this))))
            (IntegerLiteral 0x9dc6898 <col:39> 'int' 1)))
        (ImplicitCastExpr 0x9dc6940 <col:42> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0x9dc68e8 <col:42> '_Bool' true))))
    (CompoundStmt 0x9dc6ad0 <line:960:4, line:963:4>
      (CallExpr 0x9dc6a20 <line:961:6, col:46> 'void *'
        (ImplicitCastExpr 0x9dc6a10 <col:6> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9dc695c <col:6> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9bb0ec0 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0x9dc6a58 <col:23> 'void *' <BitCast>
          (ImplicitCastExpr 0x9dc6a48 <col:23> 'char *' <LValueToRValue>
            (DeclRefExpr 0x9dc6974 <col:23> 'char *' lvalue ParmVar 0x9dc2be0 '__to' 'char *')))
        (ImplicitCastExpr 0x9dc6a78 <col:29> 'const void *' <BitCast>
          (ImplicitCastExpr 0x9dc6a68 <col:29> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x9dc698c <col:29> 'const char_type *' lvalue ParmVar 0x9dc2b00 '__lo' 'const char_type *')))
        (ImplicitCastExpr 0x9dc6a88 <col:35, col:42> 'unsigned int' <IntegralCast>
          (BinaryOperator 0x9dc69f8 <col:35, col:42> 'int' '-'
            (ImplicitCastExpr 0x9dc69d8 <col:35> 'const char_type *' <LValueToRValue>
              (DeclRefExpr 0x9dc69a4 <col:35> 'const char_type *' lvalue ParmVar 0x9dc2b50 '__hi' 'const char_type *'))
            (ImplicitCastExpr 0x9dc69e8 <col:42> 'const char_type *' <LValueToRValue>
              (DeclRefExpr 0x9dc69bc <col:42> 'const char_type *' lvalue ParmVar 0x9dc2b00 '__lo' 'const char_type *')))))
      (ReturnStmt 0x9dc6ac0 <line:962:6, col:13>
        (ImplicitCastExpr 0x9dc6ab0 <col:13> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9dc6a94 <col:13> 'const char_type *' lvalue ParmVar 0x9dc2b50 '__hi' 'const char_type *'))))
    <<<NULL>>>)
  (IfStmt 0x9dc6bc0 <line:964:2, line:965:19>
    <<<NULL>>>
    (UnaryOperator 0x9dc6b58 <line:964:6, col:7> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9dc6b48 <col:7> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0x9dc6b38 <col:7> 'char' <LValueToRValue>
          (MemberExpr 0x9dc6b18 <col:7> 'char' lvalue ->_M_narrow_ok 0x9dc15a0
            (CXXThisExpr 0x9dc6b08 <col:7> 'const class std::ctype<char> *' this)))))
    (CXXMemberCallExpr 0x9dc6ba0 <line:965:4, col:19> 'void'
      (MemberExpr 0x9dc6b80 <col:4> '<bound member function type>' ->_M_narrow_init 0x9dc5450
        (CXXThisExpr 0x9dc6b70 <col:4> 'const class std::ctype<char> *' this)))
    <<<NULL>>>)
  (ReturnStmt 0x9dc6d20 <line:966:2, col:51>
    (CXXMemberCallExpr 0x9dc6cb0 <col:9, col:51> 'const char_type *'
      (MemberExpr 0x9dc6c90 <col:9, col:15> '<bound member function type>' ->do_narrow 0x9dc5380
        (CXXThisExpr 0x9dc6be0 <col:9> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9dc6ce0 <col:25> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9dc6c30 <col:25> 'const char_type *' lvalue ParmVar 0x9dc2b00 '__lo' 'const char_type *'))
      (ImplicitCastExpr 0x9dc6cf0 <col:31> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9dc6c48 <col:31> 'const char_type *' lvalue ParmVar 0x9dc2b50 '__hi' 'const char_type *'))
      (ImplicitCastExpr 0x9dc6d00 <col:37> 'char' <LValueToRValue>
        (DeclRefExpr 0x9dc6c60 <col:37> 'char' lvalue ParmVar 0x9dc2b90 '__dfault' 'char'))
      (ImplicitCastExpr 0x9dc6d10 <col:47> 'char *' <LValueToRValue>
        (DeclRefExpr 0x9dc6c78 <col:47> 'char *' lvalue ParmVar 0x9dc2be0 '__to' 'char *')))))


        const mask *table() const throw() (CompoundStmt 0x9dc6da0 </usr/include/c++/4.6/bits/locale_facets.h:975:7, col:26>
  (ReturnStmt 0x9dc6d90 <col:9, col:16>
    (ImplicitCastExpr 0x9dc6d80 <col:16> 'const mask *' <LValueToRValue>
      (MemberExpr 0x9dc6d60 <col:16> 'const mask *const' lvalue ->_M_table 0x9dc1310
        (CXXThisExpr 0x9dc6d50 <col:16> 'const class std::ctype<char> *' this)))))


        static const mask *classic_table() throw();
    protected:
    protected:
        virtual void ~ctype();
        virtual char_type do_toupper(char_type) const;
        virtual const char_type *do_toupper(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_tolower(char_type) const;
        virtual const char_type *do_tolower(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_widen(char __c) const (CompoundStmt 0x9dc6df0 </usr/include/c++/4.6/bits/locale_facets.h:1076:7, col:21>
  (ReturnStmt 0x9dc6de0 <col:9, col:16>
    (ImplicitCastExpr 0x9dc6dd0 <col:16> 'char' <LValueToRValue>
      (DeclRefExpr 0x9dc6db4 <col:16> 'char' lvalue ParmVar 0x9dc3330 '__c' 'char'))))


        virtual const char *do_widen(const char *__lo, const char *__hi, char_type *__dest) const (CompoundStmt 0x9dc6f78 </usr/include/c++/4.6/bits/locale_facets.h:1099:7, line:1102:7>
  (CallExpr 0x9dc6ec8 <line:1100:2, col:44> 'void *'
    (ImplicitCastExpr 0x9dc6eb8 <col:2> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9dc6e04 <col:2> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9bb0ec0 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
    (ImplicitCastExpr 0x9dc6f00 <col:19> 'void *' <BitCast>
      (ImplicitCastExpr 0x9dc6ef0 <col:19> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9dc6e1c <col:19> 'char_type *' lvalue ParmVar 0x9dc34a0 '__dest' 'char_type *')))
    (ImplicitCastExpr 0x9dc6f20 <col:27> 'const void *' <BitCast>
      (ImplicitCastExpr 0x9dc6f10 <col:27> 'const char *' <LValueToRValue>
        (DeclRefExpr 0x9dc6e34 <col:27> 'const char *' lvalue ParmVar 0x9dc3400 '__lo' 'const char *')))
    (ImplicitCastExpr 0x9dc6f30 <col:33, col:40> 'unsigned int' <IntegralCast>
      (BinaryOperator 0x9dc6ea0 <col:33, col:40> 'int' '-'
        (ImplicitCastExpr 0x9dc6e80 <col:33> 'const char *' <LValueToRValue>
          (DeclRefExpr 0x9dc6e4c <col:33> 'const char *' lvalue ParmVar 0x9dc3450 '__hi' 'const char *'))
        (ImplicitCastExpr 0x9dc6e90 <col:40> 'const char *' <LValueToRValue>
          (DeclRefExpr 0x9dc6e64 <col:40> 'const char *' lvalue ParmVar 0x9dc3400 '__lo' 'const char *')))))
  (ReturnStmt 0x9dc6f68 <line:1101:2, col:9>
    (ImplicitCastExpr 0x9dc6f58 <col:9> 'const char *' <LValueToRValue>
      (DeclRefExpr 0x9dc6f3c <col:9> 'const char *' lvalue ParmVar 0x9dc3450 '__hi' 'const char *'))))


        virtual char do_narrow(char_type __c, char) const (CompoundStmt 0x9dc6fc8 </usr/include/c++/4.6/bits/locale_facets.h:1125:7, col:21>
  (ReturnStmt 0x9dc6fb8 <col:9, col:16>
    (ImplicitCastExpr 0x9dc6fa8 <col:16> 'char_type':'char' <LValueToRValue>
      (DeclRefExpr 0x9dc6f90 <col:16> 'char_type':'char' lvalue ParmVar 0x9dc3580 '__c' 'char_type':'char'))))


        virtual const char_type *do_narrow(const char_type *__lo, const char_type *__hi, char, char *__dest) const (CompoundStmt 0x9dc7150 </usr/include/c++/4.6/bits/locale_facets.h:1152:7, line:1155:7>
  (CallExpr 0x9dc70a0 <line:1153:2, col:44> 'void *'
    (ImplicitCastExpr 0x9dc7090 <col:2> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9dc6fdc <col:2> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9bb0ec0 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
    (ImplicitCastExpr 0x9dc70d8 <col:19> 'void *' <BitCast>
      (ImplicitCastExpr 0x9dc70c8 <col:19> 'char *' <LValueToRValue>
        (DeclRefExpr 0x9dc6ff4 <col:19> 'char *' lvalue ParmVar 0x9dc5320 '__dest' 'char *')))
    (ImplicitCastExpr 0x9dc70f8 <col:27> 'const void *' <BitCast>
      (ImplicitCastExpr 0x9dc70e8 <col:27> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9dc700c <col:27> 'const char_type *' lvalue ParmVar 0x9dc5240 '__lo' 'const char_type *')))
    (ImplicitCastExpr 0x9dc7108 <col:33, col:40> 'unsigned int' <IntegralCast>
      (BinaryOperator 0x9dc7078 <col:33, col:40> 'int' '-'
        (ImplicitCastExpr 0x9dc7058 <col:33> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9dc7024 <col:33> 'const char_type *' lvalue ParmVar 0x9dc5290 '__hi' 'const char_type *'))
        (ImplicitCastExpr 0x9dc7068 <col:40> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9dc703c <col:40> 'const char_type *' lvalue ParmVar 0x9dc5240 '__lo' 'const char_type *')))))
  (ReturnStmt 0x9dc7140 <line:1154:2, col:9>
    (ImplicitCastExpr 0x9dc7130 <col:9> 'const char_type *' <LValueToRValue>
      (DeclRefExpr 0x9dc7114 <col:9> 'const char_type *' lvalue ParmVar 0x9dc5290 '__hi' 'const char_type *'))))


    private:
    private:
        void _M_narrow_init() const;
        void _M_widen_init() const;
        inline std::ctype<char> &operator=(const std::ctype<char> &);
    };
    class ctype : public __ctype_abstract_base<wchar_t> {
        class ctype;
    public:
    public:
        typedef wchar_t char_type;
        typedef wctype_t __wmask_type;
    protected:
    protected:
        __c_locale _M_c_locale_ctype;
        bool _M_narrow_ok;
        char _M_narrow[128];
        wint_t _M_widen[256];
        mask _M_bit[16];
        __wmask_type _M_wmask[16];
    public:
    public:
        static locale::id id;
        ctype(size_t __refs = (ImplicitCastExpr 0x9dcde78 </usr/include/c++/4.6/bits/locale_facets.h:1208:29> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9dcde60 <col:29> 'int' 0))
);
        ctype(__c_locale __cloc, size_t __refs = (ImplicitCastExpr 0x9dcdea0 </usr/include/c++/4.6/bits/locale_facets.h:1219:48> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9dcde88 <col:48> 'int' 0))
);
    protected:
    protected:
        __wmask_type _M_convert_to_wmask(const mask __m) const throw();
        virtual void ~ctype();
        virtual bool do_is(mask __m, char_type __c) const;
        virtual const char_type *do_is(const char_type *__lo, const char_type *__hi, mask *__vec) const;
        virtual const char_type *do_scan_is(mask __m, const char_type *__lo, const char_type *__hi) const;
        virtual const char_type *do_scan_not(mask __m, const char_type *__lo, const char_type *__hi) const;
        virtual char_type do_toupper(char_type) const;
        virtual const char_type *do_toupper(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_tolower(char_type) const;
        virtual const char_type *do_tolower(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_widen(char) const;
        virtual const char *do_widen(const char *__lo, const char *__hi, char_type *__dest) const;
        virtual char do_narrow(char_type, char __dfault) const;
        virtual const char_type *do_narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__dest) const;
        void _M_initialize_ctype() throw();
        inline std::ctype<wchar_t> &operator=(const std::ctype<wchar_t> &);
    };
    template <typename _CharT = wchar_t> class ctype_byname
template <typename _CharT = char> class ctype_byname
template <typename _CharT> class ctype_byname : public ctype<_CharT> {
        class ctype_byname;
    public:
    public:
        typedef typename ctype<_CharT>::mask mask;
        ctype_byname<_CharT>(const char *__s, size_t __refs = (ImplicitCastExpr 0x9dce4e0 </usr/include/c++/4.6/bits/locale_facets.h:1473:53> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9dce4c8 <col:53> 'int' 0))
);
    protected:
    protected:
        virtual void ~ctype_byname<_CharT>() (CompoundStmt 0x9dce4f0 </usr/include/c++/4.6/bits/locale_facets.h:1477:23, col:25>)


    };
    class ctype_byname : public ctype<char> {
        class ctype_byname;
    public:
    public:
        ctype_byname(const char *__s, size_t __refs = (ImplicitCastExpr 0x9dceb18 </usr/include/c++/4.6/bits/locale_facets.h:1486:53> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9dceb00 <col:53> 'int' 0))
);
    protected:
    protected:
        virtual void ~ctype_byname();
        inline std::ctype_byname<char> &operator=(const std::ctype_byname<char> &);
    };
    class ctype_byname : public ctype<wchar_t> {
        class ctype_byname;
    public:
    public:
        ctype_byname(const char *__s, size_t __refs = (ImplicitCastExpr 0x9dcf138 </usr/include/c++/4.6/bits/locale_facets.h:1499:53> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9dcf120 <col:53> 'int' 0))
);
    protected:
    protected:
        virtual void ~ctype_byname();
        inline std::ctype_byname<wchar_t> &operator=(const std::ctype_byname<wchar_t> &);
    };
}
namespace std {
    bool is(mask __m, char __c) const (CompoundStmt 0x9dcf4f8 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_inline.h:44:3, col:61>
  (ReturnStmt 0x9dcf4e8 <col:5, col:56>
    (ImplicitCastExpr 0x9dcf4d8 <col:12, col:56> '_Bool' <IntegralToBoolean>
      (BinaryOperator 0x9dcf4c0 <col:12, col:56> 'int' '&'
        (ImplicitCastExpr 0x9dcf490 <col:12, col:52> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9dcf480 <col:12, col:52> 'mask':'unsigned short' <LValueToRValue>
            (ArraySubscriptExpr 0x9dcf450 <col:12, col:52> 'const mask':'const unsigned short' lvalue
              (ImplicitCastExpr 0x9dcf440 <col:12> 'const mask *' <LValueToRValue>
                (MemberExpr 0x9dcf3c0 <col:12> 'const mask *const' lvalue ->_M_table 0x9dc1310
                  (CXXThisExpr 0x9dcf3b0 <col:12> 'const class std::ctype<char> *' this)))
              (CXXStaticCastExpr 0x9dcf428 <col:21, col:51> 'unsigned char' static_cast<unsigned char> <NoOp>
                (ImplicitCastExpr 0x9dcf418 <col:48> 'unsigned char' <IntegralCast>
                  (ImplicitCastExpr 0x9dcf408 <col:48> 'char' <LValueToRValue>
                    (DeclRefExpr 0x9dcf3e0 <col:48> 'char' lvalue ParmVar 0x9dcf2c0 '__c' 'char')))))))
        (ImplicitCastExpr 0x9dcf4b0 <col:56> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9dcf4a0 <col:56> 'mask':'unsigned short' <LValueToRValue>
            (DeclRefExpr 0x9dcf464 <col:56> 'mask':'unsigned short' lvalue ParmVar 0x9dcf280 '__m' 'mask':'unsigned short')))))))


    const char *is(const char *__low, const char *__high, mask *__vec) const (CompoundStmt 0x9dcf948 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_inline.h:49:3, line:53:3>
  (WhileStmt 0x9dcf8f8 <line:50:5, line:51:63>
    <<<NULL>>>
    (BinaryOperator 0x9dcf788 <line:50:12, col:20> '_Bool' '<'
      (ImplicitCastExpr 0x9dcf768 <col:12> 'const char *' <LValueToRValue>
        (DeclRefExpr 0x9dcf734 <col:12> 'const char *' lvalue ParmVar 0x9dcf590 '__low' 'const char *'))
      (ImplicitCastExpr 0x9dcf778 <col:20> 'const char *' <LValueToRValue>
        (DeclRefExpr 0x9dcf74c <col:20> 'const char *' lvalue ParmVar 0x9dcf5e0 '__high' 'const char *')))
    (BinaryOperator 0x9dcf8e0 <line:51:7, col:63> 'mask':'unsigned short' lvalue '='
      (UnaryOperator 0x9dcf7d0 <col:7, col:13> 'mask':'unsigned short' lvalue prefix '*'
        (UnaryOperator 0x9dcf7b8 <col:8, col:13> 'mask *' postfix '++'
          (DeclRefExpr 0x9dcf7a0 <col:8> 'mask *' lvalue ParmVar 0x9dcf630 '__vec' 'mask *')))
      (ImplicitCastExpr 0x9dcf8d0 <col:18, col:63> 'mask':'unsigned short' <LValueToRValue>
        (ArraySubscriptExpr 0x9dcf8b8 <col:18, col:63> 'const mask':'const unsigned short' lvalue
          (ImplicitCastExpr 0x9dcf8a8 <col:18> 'const mask *' <LValueToRValue>
            (MemberExpr 0x9dcf7f8 <col:18> 'const mask *const' lvalue ->_M_table 0x9dc1310
              (CXXThisExpr 0x9dcf7e8 <col:18> 'const class std::ctype<char> *' this)))
          (CXXStaticCastExpr 0x9dcf890 <col:27, col:62> 'unsigned char' static_cast<unsigned char> <NoOp>
            (ImplicitCastExpr 0x9dcf880 <col:54, col:60> 'unsigned char' <IntegralCast>
              (ImplicitCastExpr 0x9dcf870 <col:54, col:60> 'char' <LValueToRValue>
                (UnaryOperator 0x9dcf848 <col:54, col:60> 'const char' lvalue prefix '*'
                  (UnaryOperator 0x9dcf830 <col:55, col:60> 'const char *' postfix '++'
                    (DeclRefExpr 0x9dcf818 <col:55> 'const char *' lvalue ParmVar 0x9dcf590 '__low' 'const char *'))))))))))
  (ReturnStmt 0x9dcf938 <line:52:5, col:12>
    (ImplicitCastExpr 0x9dcf928 <col:12> 'const char *' <LValueToRValue>
      (DeclRefExpr 0x9dcf90c <col:12> 'const char *' lvalue ParmVar 0x9dcf5e0 '__high' 'const char *'))))


    const char *scan_is(mask __m, const char *__low, const char *__high) const (CompoundStmt 0x9dcfe08 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_inline.h:58:3, line:63:3>
  (WhileStmt 0x9dcfdb8 <line:59:5, line:61:9>
    <<<NULL>>>
    (BinaryOperator 0x9dcfd70 <line:59:12, line:60:60> '_Bool' '&&'
      (BinaryOperator 0x9dcfbc8 <line:59:12, col:20> '_Bool' '<'
        (ImplicitCastExpr 0x9dcfba8 <col:12> 'const char *' <LValueToRValue>
          (DeclRefExpr 0x9dcfb74 <col:12> 'const char *' lvalue ParmVar 0x9dcfa20 '__low' 'const char *'))
        (ImplicitCastExpr 0x9dcfbb8 <col:20> 'const char *' <LValueToRValue>
          (DeclRefExpr 0x9dcfb8c <col:20> 'const char *' lvalue ParmVar 0x9dcfa70 '__high' 'const char *')))
      (UnaryOperator 0x9dcfd58 <line:60:8, col:60> '_Bool' prefix '!'
        (ImplicitCastExpr 0x9dcfd48 <col:9, col:60> '_Bool' <IntegralToBoolean>
          (ParenExpr 0x9dcfd30 <col:9, col:60> 'int'
            (BinaryOperator 0x9dcfd18 <col:10, col:57> 'int' '&'
              (ImplicitCastExpr 0x9dcfce8 <col:10, col:53> 'int' <IntegralCast>
                (ImplicitCastExpr 0x9dcfcd8 <col:10, col:53> 'mask':'unsigned short' <LValueToRValue>
                  (ArraySubscriptExpr 0x9dcfca8 <col:10, col:53> 'const mask':'const unsigned short' lvalue
                    (ImplicitCastExpr 0x9dcfc98 <col:10> 'const mask *' <LValueToRValue>
                      (MemberExpr 0x9dcfbf0 <col:10> 'const mask *const' lvalue ->_M_table 0x9dc1310
                        (CXXThisExpr 0x9dcfbe0 <col:10> 'const class std::ctype<char> *' this)))
                    (CXXStaticCastExpr 0x9dcfc80 <col:19, col:52> 'unsigned char' static_cast<unsigned char> <NoOp>
                      (ImplicitCastExpr 0x9dcfc70 <col:46, col:47> 'unsigned char' <IntegralCast>
                        (ImplicitCastExpr 0x9dcfc60 <col:46, col:47> 'char' <LValueToRValue>
                          (UnaryOperator 0x9dcfc38 <col:46, col:47> 'const char' lvalue prefix '*'
                            (ImplicitCastExpr 0x9dcfc28 <col:47> 'const char *' <LValueToRValue>
                              (DeclRefExpr 0x9dcfc10 <col:47> 'const char *' lvalue ParmVar 0x9dcfa20 '__low' 'const char *')))))))))
              (ImplicitCastExpr 0x9dcfd08 <col:57> 'int' <IntegralCast>
                (ImplicitCastExpr 0x9dcfcf8 <col:57> 'mask':'unsigned short' <LValueToRValue>
                  (DeclRefExpr 0x9dcfcbc <col:57> 'mask':'unsigned short' lvalue ParmVar 0x9dcf9d0 '__m' 'mask':'unsigned short'))))))))
    (UnaryOperator 0x9dcfda0 <line:61:7, col:9> 'const char *' lvalue prefix '++'
      (DeclRefExpr 0x9dcfd88 <col:9> 'const char *' lvalue ParmVar 0x9dcfa20 '__low' 'const char *')))
  (ReturnStmt 0x9dcfdf8 <line:62:5, col:12>
    (ImplicitCastExpr 0x9dcfde8 <col:12> 'const char *' <LValueToRValue>
      (DeclRefExpr 0x9dcfdcc <col:12> 'const char *' lvalue ParmVar 0x9dcfa20 '__low' 'const char *'))))


    const char *scan_not(mask __m, const char *__low, const char *__high) const (CompoundStmt 0x9dd02d0 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_inline.h:68:3, line:73:3>
  (WhileStmt 0x9dd0280 <line:69:5, line:71:9>
    <<<NULL>>>
    (BinaryOperator 0x9dd0238 <line:69:12, line:70:64> '_Bool' '&&'
      (BinaryOperator 0x9dd0088 <line:69:12, col:20> '_Bool' '<'
        (ImplicitCastExpr 0x9dd0068 <col:12> 'const char *' <LValueToRValue>
          (DeclRefExpr 0x9dd0034 <col:12> 'const char *' lvalue ParmVar 0x9dcfee0 '__low' 'const char *'))
        (ImplicitCastExpr 0x9dd0078 <col:20> 'const char *' <LValueToRValue>
          (DeclRefExpr 0x9dd004c <col:20> 'const char *' lvalue ParmVar 0x9dcff30 '__high' 'const char *')))
      (BinaryOperator 0x9dd0220 <line:70:8, col:64> '_Bool' '!='
        (ParenExpr 0x9dd01f0 <col:8, col:59> 'int'
          (BinaryOperator 0x9dd01d8 <col:9, col:56> 'int' '&'
            (ImplicitCastExpr 0x9dd01a8 <col:9, col:52> 'int' <IntegralCast>
              (ImplicitCastExpr 0x9dd0198 <col:9, col:52> 'mask':'unsigned short' <LValueToRValue>
                (ArraySubscriptExpr 0x9dd0168 <col:9, col:52> 'const mask':'const unsigned short' lvalue
                  (ImplicitCastExpr 0x9dd0158 <col:9> 'const mask *' <LValueToRValue>
                    (MemberExpr 0x9dd00b0 <col:9> 'const mask *const' lvalue ->_M_table 0x9dc1310
                      (CXXThisExpr 0x9dd00a0 <col:9> 'const class std::ctype<char> *' this)))
                  (CXXStaticCastExpr 0x9dd0140 <col:18, col:51> 'unsigned char' static_cast<unsigned char> <NoOp>
                    (ImplicitCastExpr 0x9dd0130 <col:45, col:46> 'unsigned char' <IntegralCast>
                      (ImplicitCastExpr 0x9dd0120 <col:45, col:46> 'char' <LValueToRValue>
                        (UnaryOperator 0x9dd00f8 <col:45, col:46> 'const char' lvalue prefix '*'
                          (ImplicitCastExpr 0x9dd00e8 <col:46> 'const char *' <LValueToRValue>
                            (DeclRefExpr 0x9dd00d0 <col:46> 'const char *' lvalue ParmVar 0x9dcfee0 '__low' 'const char *')))))))))
            (ImplicitCastExpr 0x9dd01c8 <col:56> 'int' <IntegralCast>
              (ImplicitCastExpr 0x9dd01b8 <col:56> 'mask':'unsigned short' <LValueToRValue>
                (DeclRefExpr 0x9dd017c <col:56> 'mask':'unsigned short' lvalue ParmVar 0x9dcfe90 '__m' 'mask':'unsigned short')))))
        (IntegerLiteral 0x9dd0208 <col:64> 'int' 0)))
    (UnaryOperator 0x9dd0268 <line:71:7, col:9> 'const char *' lvalue prefix '++'
      (DeclRefExpr 0x9dd0250 <col:9> 'const char *' lvalue ParmVar 0x9dcfee0 '__low' 'const char *')))
  (ReturnStmt 0x9dd02c0 <line:72:5, col:12>
    (ImplicitCastExpr 0x9dd02b0 <col:12> 'const char *' <LValueToRValue>
      (DeclRefExpr 0x9dd0294 <col:12> 'const char *' lvalue ParmVar 0x9dcfee0 '__low' 'const char *'))))


}
namespace std {
    class __num_base {
        class __num_base;
    public:
    public:
        enum  {
            _S_ominus,
            _S_oplus,
            _S_ox,
            _S_oX,
            _S_odigits,
            _S_odigits_end = (ImplicitCastExpr 0x9dd0938 </usr/include/c++/4.6/bits/locale_facets.h:1530:26, col:39> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9dd06c8 <col:26, col:39> 'int' '+'
    (DeclRefExpr 0x9dd0694 <col:26> 'int' EnumConstant 0x9dd0660 '_S_odigits' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')
    (IntegerLiteral 0x9dd06b0 <col:39> 'int' 16)))
,
            _S_oudigits = (ImplicitCastExpr 0x9dd0948 </usr/include/c++/4.6/bits/locale_facets.h:1531:23> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0x9dd0714 <col:23> 'int' EnumConstant 0x9dd06e0 '_S_odigits_end' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>'))
,
            _S_oudigits_end = (ImplicitCastExpr 0x9dd0958 </usr/include/c++/4.6/bits/locale_facets.h:1532:27, col:41> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9dd0798 <col:27, col:41> 'int' '+'
    (DeclRefExpr 0x9dd0764 <col:27> 'int' EnumConstant 0x9dd0730 '_S_oudigits' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')
    (IntegerLiteral 0x9dd0780 <col:41> 'int' 16)))
,
            _S_oe = (ImplicitCastExpr 0x9dd0968 </usr/include/c++/4.6/bits/locale_facets.h:1533:17, col:30> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9dd0818 <col:17, col:30> 'int' '+'
    (DeclRefExpr 0x9dd07e4 <col:17> 'int' EnumConstant 0x9dd0660 '_S_odigits' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')
    (IntegerLiteral 0x9dd0800 <col:30> 'int' 14)))
,
            _S_oE = (ImplicitCastExpr 0x9dd0978 </usr/include/c++/4.6/bits/locale_facets.h:1534:17, col:31> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9dd0898 <col:17, col:31> 'int' '+'
    (DeclRefExpr 0x9dd0864 <col:17> 'int' EnumConstant 0x9dd0730 '_S_oudigits' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')
    (IntegerLiteral 0x9dd0880 <col:31> 'int' 14)))
,
            _S_oend = (ImplicitCastExpr 0x9dd0988 </usr/include/c++/4.6/bits/locale_facets.h:1535:12> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0x9dd08e4 <col:12> 'int' EnumConstant 0x9dd07b0 '_S_oudigits_end' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>'))

        };
        static const char *_S_atoms_out;
        static const char *_S_atoms_in;
        enum  {
            _S_iminus,
            _S_iplus,
            _S_ix,
            _S_iX,
            _S_izero,
            _S_ie = (ImplicitCastExpr 0x9dd0d28 </usr/include/c++/4.6/bits/locale_facets.h:1556:15, col:26> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9dd0c08 <col:15, col:26> 'int' '+'
    (DeclRefExpr 0x9dd0bd4 <col:15> 'int' EnumConstant 0x9dd0ba0 '_S_izero' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')
    (IntegerLiteral 0x9dd0bf0 <col:26> 'int' 14)))
,
            _S_iE = (ImplicitCastExpr 0x9dd0d38 </usr/include/c++/4.6/bits/locale_facets.h:1557:15, col:26> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9dd0c88 <col:15, col:26> 'int' '+'
    (DeclRefExpr 0x9dd0c54 <col:15> 'int' EnumConstant 0x9dd0ba0 '_S_izero' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')
    (IntegerLiteral 0x9dd0c70 <col:26> 'int' 20)))
,
            _S_iend = (ImplicitCastExpr 0x9dd0d48 </usr/include/c++/4.6/bits/locale_facets.h:1558:17> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9dd0cd8 <col:17> 'int' 26))

        };
        static void _S_format_float(const std::ios_base &__io, char *__fptr, char __mod) throw();
    };
    template <typename _CharT = wchar_t> struct __numpunct_cache
template <typename _CharT = char> struct __numpunct_cache
template <typename _CharT> struct __numpunct_cache : public locale::facet {
        struct __numpunct_cache;
        const char *_M_grouping;
        size_t _M_grouping_size;
        bool _M_use_grouping;
        const _CharT *_M_truename;
        size_t _M_truename_size;
        const _CharT *_M_falsename;
        size_t _M_falsename_size;
        _CharT _M_decimal_point;
        _CharT _M_thousands_sep;
        _CharT _M_atoms_out[36];
        _CharT _M_atoms_in[26];
        bool _M_allocated;
        __numpunct_cache<_CharT>(size_t __refs = (ImplicitCastExpr 0x9dd1b38 </usr/include/c++/4.6/bits/locale_facets.h:1594:40> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9dd1b20 <col:40> 'int' 0))
) : std::locale::facet((DeclRefExpr 0x9dd1b44 </usr/include/c++/4.6/bits/locale_facets.h:1595:15> 'size_t':'unsigned int' lvalue ParmVar 0x9dd1650 '__refs' 'size_t':'unsigned int')
), _M_grouping((IntegerLiteral 0x9dd1bd8 </usr/include/c++/4.6/bits/locale_facets.h:1595:36> 'int' 0)
), _M_grouping_size((IntegerLiteral 0x9dd1c38 </usr/include/c++/4.6/bits/locale_facets.h:1595:57> 'int' 0)
), _M_use_grouping((CXXBoolLiteralExpr 0x9dd1c98 </usr/include/c++/4.6/bits/locale_facets.h:1596:18> '_Bool' false)
), _M_truename((IntegerLiteral 0x9dd1ce8 </usr/include/c++/4.6/bits/locale_facets.h:1597:14> 'int' 0)
), _M_truename_size((IntegerLiteral 0x9dd1d38 </usr/include/c++/4.6/bits/locale_facets.h:1597:35> 'int' 0)
), _M_falsename((IntegerLiteral 0x9dd1d98 </usr/include/c++/4.6/bits/locale_facets.h:1597:52> 'int' 0)
), _M_falsename_size((IntegerLiteral 0x9dd1de8 </usr/include/c++/4.6/bits/locale_facets.h:1598:20> 'int' 0)
), _M_decimal_point((CXXUnresolvedConstructExpr 0x9dd1e50 </usr/include/c++/4.6/bits/locale_facets.h:1598:41, col:48> '_CharT')
), _M_thousands_sep((CXXUnresolvedConstructExpr 0x9dd1eb0 </usr/include/c++/4.6/bits/locale_facets.h:1599:19, col:26> '_CharT')
), _M_allocated((CXXBoolLiteralExpr 0x9dd1f08 </usr/include/c++/4.6/bits/locale_facets.h:1599:43> '_Bool' false)
) (CompoundStmt 0x9dd33f0 </usr/include/c++/4.6/bits/locale_facets.h:1600:9, col:11>)


        void ~__numpunct_cache<_CharT>();
        void _M_cache(const std::locale &__loc);
    private:
    private:
        __numpunct_cache<_CharT> &operator=(const __numpunct_cache<_CharT> &);
        __numpunct_cache<_CharT>(const __numpunct_cache<_CharT> &);
    };
    void ~__numpunct_cache<_CharT>() (CompoundStmt 0x9dd37b0 </usr/include/c++/4.6/bits/locale_facets.h:1617:5, line:1624:5>
  (IfStmt 0x9dd3790 <line:1618:7, line:1623:2>
    <<<NULL>>>
    (MemberExpr 0x9dd3678 <line:1618:11> '_Bool' lvalue ->_M_allocated 0x9dd1610
      (CXXThisExpr 0x9dd3668 <col:11> '__numpunct_cache<_CharT> *' this))
    (CompoundStmt 0x9dd3770 <line:1619:2, line:1623:2>
      (CXXDeleteExpr 0x9dd36c8 <line:1620:4, col:14> 'void'
        (MemberExpr 0x9dd36a8 <col:14> 'const char *' lvalue ->_M_grouping 0x9dd1200
          (CXXThisExpr 0x9dd3698 <col:14> '__numpunct_cache<_CharT> *' this)))
      (CXXDeleteExpr 0x9dd3710 <line:1621:4, col:14> 'void'
        (MemberExpr 0x9dd36f0 <col:14> 'const _CharT *' lvalue ->_M_truename 0x9dd12e0
          (CXXThisExpr 0x9dd36e0 <col:14> '__numpunct_cache<_CharT> *' this)))
      (CXXDeleteExpr 0x9dd3758 <line:1622:4, col:14> 'void'
        (MemberExpr 0x9dd3738 <col:14> 'const _CharT *' lvalue ->_M_falsename 0x9dd1360
          (CXXThisExpr 0x9dd3728 <col:14> '__numpunct_cache<_CharT> *' this))))
    <<<NULL>>>))


    template <typename _CharT = wchar_t> class numpunct : public locale::facet {
        class numpunct;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
        typedef __numpunct_cache<wchar_t> __cache_type;
    protected:
    protected:
        __cache_type *_M_data;
    public:
    public:
        static locale::id id;
        numpunct(size_t __refs);
        numpunct(__cache_type *__cache, size_t __refs);
        numpunct(__c_locale __cloc, size_t __refs);
        char_type decimal_point() const;
        char_type thousands_sep() const;
        string grouping() const;
        string_type truename() const;
        string_type falsename() const;
    protected:
    protected:
        virtual void ~numpunct();
        virtual char_type do_decimal_point() const;
        virtual char_type do_thousands_sep() const;
        virtual string do_grouping() const;
        virtual string_type do_truename() const;
        virtual string_type do_falsename() const;
        void _M_initialize_numpunct(__c_locale __cloc);
        inline std::numpunct<wchar_t> &operator=(const std::numpunct<wchar_t> &);
    }
template <typename _CharT = char> class numpunct : public locale::facet {
        class numpunct;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
        typedef __numpunct_cache<char> __cache_type;
    protected:
    protected:
        __cache_type *_M_data;
    public:
    public:
        static locale::id id;
        numpunct(size_t __refs);
        numpunct(__cache_type *__cache, size_t __refs);
        numpunct(__c_locale __cloc, size_t __refs);
        char_type decimal_point() const;
        char_type thousands_sep() const;
        string grouping() const;
        string_type truename() const;
        string_type falsename() const;
    protected:
    protected:
        virtual void ~numpunct();
        virtual char_type do_decimal_point() const;
        virtual char_type do_thousands_sep() const;
        virtual string do_grouping() const;
        virtual string_type do_truename() const;
        virtual string_type do_falsename() const;
        void _M_initialize_numpunct(__c_locale __cloc);
        inline std::numpunct<char> &operator=(const std::numpunct<char> &);
    }
template <typename _CharT> class numpunct : public locale::facet {
        class numpunct;
    public:
    public:
        typedef _CharT char_type;
        typedef basic_string<_CharT> string_type;
        typedef __numpunct_cache<_CharT> __cache_type;
    protected:
    protected:
        __cache_type *_M_data;
    public:
    public:
        static locale::id id;
        numpunct<_CharT>(size_t __refs = (ImplicitCastExpr 0x9dd4970 </usr/include/c++/4.6/bits/locale_facets.h:1665:32> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9dd4958 <col:32> 'int' 0))
) : std::locale::facet((DeclRefExpr 0x9dd49f4 </usr/include/c++/4.6/bits/locale_facets.h:1666:15> 'size_t':'unsigned int' lvalue ParmVar 0x9dd3ed0 '__refs' 'size_t':'unsigned int')
), _M_data((IntegerLiteral 0x9dd4a88 </usr/include/c++/4.6/bits/locale_facets.h:1666:32> 'int' 0)
) (CompoundStmt 0x9dd4b48 </usr/include/c++/4.6/bits/locale_facets.h:1667:7, col:35>
  (CallExpr 0x9dd4b28 <col:9, col:32> '<dependent type>'
    (MemberExpr 0x9dd4b08 <col:9> '<bound member function type>' ->_M_initialize_numpunct 0x9dd48f0
      (CXXThisExpr 0x9dd4af8 <col:9> 'numpunct<_CharT> *' this))))


        numpunct<_CharT>(__cache_type *__cache, size_t __refs = (ImplicitCastExpr 0x9dd4998 </usr/include/c++/4.6/bits/locale_facets.h:1679:55> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9dd4980 <col:55> 'int' 0))
) : std::locale::facet((DeclRefExpr 0x9dd4b5c </usr/include/c++/4.6/bits/locale_facets.h:1680:15> 'size_t':'unsigned int' lvalue ParmVar 0x9dd4000 '__refs' 'size_t':'unsigned int')
), _M_data((DeclRefExpr 0x9dd4bf8 </usr/include/c++/4.6/bits/locale_facets.h:1680:32> '__cache_type *' lvalue ParmVar 0x9dd3fc0 '__cache' '__cache_type *')
) (CompoundStmt 0x9dd4ca0 </usr/include/c++/4.6/bits/locale_facets.h:1681:7, col:35>
  (CallExpr 0x9dd4c80 <col:9, col:32> '<dependent type>'
    (MemberExpr 0x9dd4c60 <col:9> '<bound member function type>' ->_M_initialize_numpunct 0x9dd48f0
      (CXXThisExpr 0x9dd4c50 <col:9> 'numpunct<_CharT> *' this))))


        numpunct<_CharT>(__c_locale __cloc, size_t __refs = (ImplicitCastExpr 0x9dd49c0 </usr/include/c++/4.6/bits/locale_facets.h:1693:51> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9dd49a8 <col:51> 'int' 0))
) : std::locale::facet((DeclRefExpr 0x9dd4cb4 </usr/include/c++/4.6/bits/locale_facets.h:1694:15> 'size_t':'unsigned int' lvalue ParmVar 0x9dd4160 '__refs' 'size_t':'unsigned int')
), _M_data((IntegerLiteral 0x9dd4d48 </usr/include/c++/4.6/bits/locale_facets.h:1694:32> 'int' 0)
) (CompoundStmt 0x9dd4e08 </usr/include/c++/4.6/bits/locale_facets.h:1695:7, col:41>
  (CallExpr 0x9dd4de8 <col:9, col:38> '<dependent type>'
    (MemberExpr 0x9dd4db0 <col:9> '<bound member function type>' ->_M_initialize_numpunct 0x9dd48f0
      (CXXThisExpr 0x9dd4da0 <col:9> 'numpunct<_CharT> *' this))
    (DeclRefExpr 0x9dd4dd0 <col:32> '__c_locale':'struct __locale_struct *' lvalue ParmVar 0x9dd4120 '__cloc' '__c_locale':'struct __locale_struct *')))


        char_type decimal_point() const (CompoundStmt 0x9dd4eb0 </usr/include/c++/4.6/bits/locale_facets.h:1708:7, col:42>
  (ReturnStmt 0x9dd4ea0 <col:9, col:39>
    (CallExpr 0x9dd4e80 <col:16, col:39> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9dd4e48 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9dd4e38 <col:16> 'const numpunct<_CharT> *' this)))))


        char_type thousands_sep() const (CompoundStmt 0x9dd4f40 </usr/include/c++/4.6/bits/locale_facets.h:1721:7, col:42>
  (ReturnStmt 0x9dd4f30 <col:9, col:39>
    (CallExpr 0x9dd4f10 <col:16, col:39> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9dd4ed8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9dd4ec8 <col:16> 'const numpunct<_CharT> *' this)))))


        string grouping() const (CompoundStmt 0x9dd4fd0 </usr/include/c++/4.6/bits/locale_facets.h:1752:7, col:37>
  (ReturnStmt 0x9dd4fc0 <col:9, col:34>
    (CallExpr 0x9dd4fa0 <col:16, col:34> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9dd4f68 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9dd4f58 <col:16> 'const numpunct<_CharT> *' this)))))


        string_type truename() const (CompoundStmt 0x9dd5060 </usr/include/c++/4.6/bits/locale_facets.h:1765:7, col:37>
  (ReturnStmt 0x9dd5050 <col:9, col:34>
    (CallExpr 0x9dd5030 <col:16, col:34> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9dd4ff8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9dd4fe8 <col:16> 'const numpunct<_CharT> *' this)))))


        string_type falsename() const (CompoundStmt 0x9dd50f0 </usr/include/c++/4.6/bits/locale_facets.h:1778:7, col:38>
  (ReturnStmt 0x9dd50e0 <col:9, col:35>
    (CallExpr 0x9dd50c0 <col:16, col:35> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9dd5088 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9dd5078 <col:16> 'const numpunct<_CharT> *' this)))))


    protected:
    protected:
        virtual void ~numpunct<_CharT>();
        virtual char_type do_decimal_point() const (CompoundStmt 0x9dd5180 </usr/include/c++/4.6/bits/locale_facets.h:1795:7, col:43>
  (ReturnStmt 0x9dd5170 <col:9, col:25>
    (CXXDependentScopeMemberExpr 0x9dd5138 <col:16, col:25> '<dependent type>' lvalue
      (MemberExpr 0x9dd5118 <col:16> '__cache_type *const' lvalue ->_M_data 0x9dd3df0
        (CXXThisExpr 0x9dd5108 <col:16> 'const numpunct<_CharT> *' this)))))


        virtual char_type do_thousands_sep() const (CompoundStmt 0x9dd5210 </usr/include/c++/4.6/bits/locale_facets.h:1807:7, col:43>
  (ReturnStmt 0x9dd5200 <col:9, col:25>
    (CXXDependentScopeMemberExpr 0x9dd51c8 <col:16, col:25> '<dependent type>' lvalue
      (MemberExpr 0x9dd51a8 <col:16> '__cache_type *const' lvalue ->_M_data 0x9dd3df0
        (CXXThisExpr 0x9dd5198 <col:16> 'const numpunct<_CharT> *' this)))))


        virtual string do_grouping() const (CompoundStmt 0x9dd52a0 </usr/include/c++/4.6/bits/locale_facets.h:1820:7, col:38>
  (ReturnStmt 0x9dd5290 <col:9, col:25>
    (CXXDependentScopeMemberExpr 0x9dd5258 <col:16, col:25> '<dependent type>' lvalue
      (MemberExpr 0x9dd5238 <col:16> '__cache_type *const' lvalue ->_M_data 0x9dd3df0
        (CXXThisExpr 0x9dd5228 <col:16> 'const numpunct<_CharT> *' this)))))


        virtual string_type do_truename() const (CompoundStmt 0x9dd5330 </usr/include/c++/4.6/bits/locale_facets.h:1833:7, col:38>
  (ReturnStmt 0x9dd5320 <col:9, col:25>
    (CXXDependentScopeMemberExpr 0x9dd52e8 <col:16, col:25> '<dependent type>' lvalue
      (MemberExpr 0x9dd52c8 <col:16> '__cache_type *const' lvalue ->_M_data 0x9dd3df0
        (CXXThisExpr 0x9dd52b8 <col:16> 'const numpunct<_CharT> *' this)))))


        virtual string_type do_falsename() const (CompoundStmt 0x9dd53c0 </usr/include/c++/4.6/bits/locale_facets.h:1846:7, col:39>
  (ReturnStmt 0x9dd53b0 <col:9, col:25>
    (CXXDependentScopeMemberExpr 0x9dd5378 <col:16, col:25> '<dependent type>' lvalue
      (MemberExpr 0x9dd5358 <col:16> '__cache_type *const' lvalue ->_M_data 0x9dd3df0
        (CXXThisExpr 0x9dd5348 <col:16> 'const numpunct<_CharT> *' this)))))


        void _M_initialize_numpunct(__c_locale __cloc = (ImplicitCastExpr 0x9dd49e8 </usr/include/c++/4.6/bits/locale_facets.h:1850:50> '__c_locale':'struct __locale_struct *' <NullToPointer>
  (IntegerLiteral 0x9dd49d0 <col:50> 'int' 0))
);
    };
    static locale::id id(CXXConstructExpr 0x9dd5618 </usr/include/c++/4.6/bits/locale_facets.h:1854:34> 'class locale::id':'class std::locale::id''void (void)')
;
    void ~numpunct();
    void _M_initialize_numpunct(__c_locale __cloc);
    void ~numpunct();
    void _M_initialize_numpunct(__c_locale __cloc);
    template <typename _CharT = wchar_t> class numpunct_byname : public numpunct<wchar_t> {
        class numpunct_byname;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
        numpunct_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~numpunct_byname();
        inline std::numpunct_byname<wchar_t> &operator=(const std::numpunct_byname<wchar_t> &);
    }
template <typename _CharT = char> class numpunct_byname : public numpunct<char> {
        class numpunct_byname;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
        numpunct_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~numpunct_byname();
        inline std::numpunct_byname<char> &operator=(const std::numpunct_byname<char> &);
    }
template <typename _CharT> class numpunct_byname : public numpunct<_CharT> {
        class numpunct_byname;
    public:
    public:
        typedef _CharT char_type;
        typedef basic_string<_CharT> string_type;
        numpunct_byname<_CharT>(const char *__s, size_t __refs = (ImplicitCastExpr 0x9dd9f80 </usr/include/c++/4.6/bits/locale_facets.h:1881:56> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9dd9f68 <col:56> 'int' 0))
) : numpunct<_CharT>((DeclRefExpr 0x9dda020 </usr/include/c++/4.6/bits/locale_facets.h:1882:26> 'size_t':'unsigned int' lvalue ParmVar 0x9dd9db0 '__refs' 'size_t':'unsigned int')
) (CompoundStmt 0x9dda4a8 </usr/include/c++/4.6/bits/locale_facets.h:1883:7, line:1892:7>
  (IfStmt 0x9dda488 <line:1884:2, line:1891:4>
    <<<NULL>>>
    (BinaryOperator 0x9dda238 <line:1884:6, line:1885:43> '_Bool' '&&'
      (BinaryOperator 0x9dda140 <line:1884:6, col:36> '_Bool' '!='
        (CallExpr 0x9dda0e0 <col:6, col:31> 'int'
          (ImplicitCastExpr 0x9dda0d0 <col:6> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9dda07c <col:6> 'int (const char *, const char *)' lvalue Function 0x9985d20 '__builtin_strcmp' 'int (const char *, const char *)'))
          (ImplicitCastExpr 0x9dda108 <col:23> 'const char *' <LValueToRValue>
            (DeclRefExpr 0x9dda094 <col:23> 'const char *' lvalue ParmVar 0x9dd9d70 '__s' 'const char *'))
          (ImplicitCastExpr 0x9dda118 <col:28> 'const char *' <ArrayToPointerDecay>
            (StringLiteral 0x9dda0ac <col:28> 'const char [2]' lvalue "C")))
        (IntegerLiteral 0x9dda128 <col:36> 'int' 0))
      (BinaryOperator 0x9dda220 <line:1885:9, col:43> '_Bool' '!='
        (CallExpr 0x9dda1c0 <col:9, col:38> 'int'
          (ImplicitCastExpr 0x9dda1b0 <col:9> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9dda158 <col:9> 'int (const char *, const char *)' lvalue Function 0x9985d20 '__builtin_strcmp' 'int (const char *, const char *)'))
          (ImplicitCastExpr 0x9dda1e8 <col:26> 'const char *' <LValueToRValue>
            (DeclRefExpr 0x9dda170 <col:26> 'const char *' lvalue ParmVar 0x9dd9d70 '__s' 'const char *'))
          (ImplicitCastExpr 0x9dda1f8 <col:31> 'const char *' <ArrayToPointerDecay>
            (StringLiteral 0x9dda188 <col:31> 'const char [6]' lvalue "POSIX")))
        (IntegerLiteral 0x9dda208 <col:43> 'int' 0)))
    (CompoundStmt 0x9dda468 <line:1886:4, line:1891:4>
      (DeclStmt 0x9dda298 <line:1887:6, col:22>
        0x9dda260 "__c_locale __tmp")
      (CallExpr 0x9dda340 <line:1888:6, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9dda2d8 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0x9dda2c8 <col:6> 'numpunct_byname<_CharT> *' this))
        (DeclRefExpr 0x9dda30c <col:31> '__c_locale':'struct __locale_struct *' lvalue Var 0x9dda260 '__tmp' '__c_locale':'struct __locale_struct *')
        (DeclRefExpr 0x9dda324 <col:38> 'const char *' lvalue ParmVar 0x9dd9d70 '__s' 'const char *'))
      (CallExpr 0x9dda3c8 <line:1889:6, col:40> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9dda378 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0x9dda368 <col:6> 'numpunct_byname<_CharT> *' this))
        (DeclRefExpr 0x9dda3ac <col:35> '__c_locale':'struct __locale_struct *' lvalue Var 0x9dda260 '__tmp' '__c_locale':'struct __locale_struct *'))
      (CallExpr 0x9dda448 <line:1890:6, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9dda3f8 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0x9dda3e8 <col:6> 'numpunct_byname<_CharT> *' this))
        (DeclRefExpr 0x9dda42c <col:32> '__c_locale':'struct __locale_struct *' lvalue Var 0x9dda260 '__tmp' '__c_locale':'struct __locale_struct *')))
    <<<NULL>>>))


    protected:
    protected:
        virtual void ~numpunct_byname<_CharT>() (CompoundStmt 0x9dda4c0 </usr/include/c++/4.6/bits/locale_facets.h:1896:26, col:28>)


    };
    template <typename _CharT = char, typename _InIter = std::istreambuf_iterator<char, std::char_traits<char> >> class num_get : public locale::facet {
        class num_get;
    public:
    public:
        typedef char char_type;
        typedef std::istreambuf_iterator<char, std::char_traits<char> > iter_type;
        static locale::id id;
        num_get(size_t __refs);
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, bool &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, float &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, void *&__v) const;
    protected:
    protected:
        virtual void ~num_get();
        iter_type _M_extract_float(iter_type, iter_type, std::ios_base &, ios_base::iostate &, string &) const;
        template <typename _ValueT> iter_type _M_extract_int(iter_type, iter_type, std::ios_base &, ios_base::iostate &, _ValueT &) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *, size_t __len, _CharT2 __c) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<!__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *__zero, size_t __len, _CharT2 __c) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &, bool &) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, float &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, long double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, void *&) const;
        inline std::num_get<char> &operator=(const std::num_get<char> &);
    }
template <typename _CharT = wchar_t, typename _InIter = std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >> class num_get : public locale::facet {
        class num_get;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > iter_type;
        static locale::id id;
        num_get(size_t __refs);
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, bool &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, float &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, void *&__v) const;
    protected:
    protected:
        virtual void ~num_get();
        iter_type _M_extract_float(iter_type, iter_type, std::ios_base &, ios_base::iostate &, string &) const;
        template <typename _ValueT> iter_type _M_extract_int(iter_type, iter_type, std::ios_base &, ios_base::iostate &, _ValueT &) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *, size_t __len, _CharT2 __c) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<!__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *__zero, size_t __len, _CharT2 __c) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &, bool &) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, float &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, long double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, void *&) const;
        inline std::num_get<wchar_t> &operator=(const std::num_get<wchar_t> &);
    }
template <typename _CharT, typename _InIter = istreambuf_iterator<_CharT>> class num_get : public locale::facet {
        class num_get;
    public:
    public:
        typedef _CharT char_type;
        typedef _InIter iter_type;
        static locale::id id;
        num_get<_CharT, _InIter>(size_t __refs = (ImplicitCastExpr 0x9ddf790 </usr/include/c++/4.6/bits/locale_facets.h:1936:31> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9ddf778 <col:31> 'int' 0))
) : std::locale::facet((DeclRefExpr 0x9ddf79c </usr/include/c++/4.6/bits/locale_facets.h:1936:42> 'size_t':'unsigned int' lvalue ParmVar 0x9dda850 '__refs' 'size_t':'unsigned int')
) (CompoundStmt 0x9ddf840 </usr/include/c++/4.6/bits/locale_facets.h:1936:50, col:52>)


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, bool &__v) const (CompoundStmt 0x9ddf968 </usr/include/c++/4.6/bits/locale_facets.h:1964:7, col:61>
  (ReturnStmt 0x9ddf958 <col:9, col:58>
    (CallExpr 0x9ddf928 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9ddf878 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9ddf868 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0x9ddf8ac <col:29> 'iter_type':'_InIter' lvalue ParmVar 0x9dda950 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0x9ddf8c4 <col:35> 'iter_type':'_InIter' lvalue ParmVar 0x9dda990 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x9ddf8dc <col:42> 'class std::ios_base' lvalue ParmVar 0x9dda9e0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9ddf8f4 <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9ddaa50 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x9ddf90c <col:55> '_Bool' lvalue ParmVar 0x9ddaaa0 '__v' '_Bool &'))))


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const (CompoundStmt 0x9ddfa80 </usr/include/c++/4.6/bits/locale_facets.h:2000:7, col:61>
  (ReturnStmt 0x9ddfa70 <col:9, col:58>
    (CallExpr 0x9ddfa40 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9ddf990 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9ddf980 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0x9ddf9c4 <col:29> 'iter_type':'_InIter' lvalue ParmVar 0x9ddabf0 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0x9ddf9dc <col:35> 'iter_type':'_InIter' lvalue ParmVar 0x9ddac30 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x9ddf9f4 <col:42> 'class std::ios_base' lvalue ParmVar 0x9ddac80 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9ddfa0c <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9ddacf0 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x9ddfa24 <col:55> 'long' lvalue ParmVar 0x9ddad40 '__v' 'long &'))))


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const (CompoundStmt 0x9ddfb98 </usr/include/c++/4.6/bits/locale_facets.h:2005:7, col:61>
  (ReturnStmt 0x9ddfb88 <col:9, col:58>
    (CallExpr 0x9ddfb58 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9ddfaa8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9ddfa98 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0x9ddfadc <col:29> 'iter_type':'_InIter' lvalue ParmVar 0x9ddae90 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0x9ddfaf4 <col:35> 'iter_type':'_InIter' lvalue ParmVar 0x9ddaed0 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x9ddfb0c <col:42> 'class std::ios_base' lvalue ParmVar 0x9ddaf20 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9ddfb24 <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9ddaf90 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x9ddfb3c <col:55> 'unsigned short' lvalue ParmVar 0x9ddafe0 '__v' 'unsigned short &'))))


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const (CompoundStmt 0x9ddfcb0 </usr/include/c++/4.6/bits/locale_facets.h:2010:7, col:61>
  (ReturnStmt 0x9ddfca0 <col:9, col:58>
    (CallExpr 0x9ddfc70 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9ddfbc0 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9ddfbb0 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0x9ddfbf4 <col:29> 'iter_type':'_InIter' lvalue ParmVar 0x9ddb130 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0x9ddfc0c <col:35> 'iter_type':'_InIter' lvalue ParmVar 0x9ddb170 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x9ddfc24 <col:42> 'class std::ios_base' lvalue ParmVar 0x9ddb1c0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9ddfc3c <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9ddb230 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x9ddfc54 <col:55> 'unsigned int' lvalue ParmVar 0x9ddb280 '__v' 'unsigned int &'))))


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const (CompoundStmt 0x9ddfdc8 </usr/include/c++/4.6/bits/locale_facets.h:2015:7, col:61>
  (ReturnStmt 0x9ddfdb8 <col:9, col:58>
    (CallExpr 0x9ddfd88 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9ddfcd8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9ddfcc8 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0x9ddfd0c <col:29> 'iter_type':'_InIter' lvalue ParmVar 0x9ddb3d0 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0x9ddfd24 <col:35> 'iter_type':'_InIter' lvalue ParmVar 0x9ddb410 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x9ddfd3c <col:42> 'class std::ios_base' lvalue ParmVar 0x9ddb460 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9ddfd54 <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9ddb4d0 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x9ddfd6c <col:55> 'unsigned long' lvalue ParmVar 0x9ddb520 '__v' 'unsigned long &'))))


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const (CompoundStmt 0x9ddfee0 </usr/include/c++/4.6/bits/locale_facets.h:2021:7, col:61>
  (ReturnStmt 0x9ddfed0 <col:9, col:58>
    (CallExpr 0x9ddfea0 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9ddfdf0 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9ddfde0 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0x9ddfe24 <col:29> 'iter_type':'_InIter' lvalue ParmVar 0x9ddb670 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0x9ddfe3c <col:35> 'iter_type':'_InIter' lvalue ParmVar 0x9ddb6b0 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x9ddfe54 <col:42> 'class std::ios_base' lvalue ParmVar 0x9ddb700 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9ddfe6c <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9ddb770 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x9ddfe84 <col:55> 'long long' lvalue ParmVar 0x9ddb7c0 '__v' 'long long &'))))


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const (CompoundStmt 0x9ddfff8 </usr/include/c++/4.6/bits/locale_facets.h:2026:7, col:61>
  (ReturnStmt 0x9ddffe8 <col:9, col:58>
    (CallExpr 0x9ddffb8 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9ddff08 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9ddfef8 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0x9ddff3c <col:29> 'iter_type':'_InIter' lvalue ParmVar 0x9ddb910 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0x9ddff54 <col:35> 'iter_type':'_InIter' lvalue ParmVar 0x9ddb950 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x9ddff6c <col:42> 'class std::ios_base' lvalue ParmVar 0x9ddb9a0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9ddff84 <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9ddba10 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x9ddff9c <col:55> 'unsigned long long' lvalue ParmVar 0x9ddba60 '__v' 'unsigned long long &'))))


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, float &__v) const (CompoundStmt 0x9de0110 </usr/include/c++/4.6/bits/locale_facets.h:2059:7, col:61>
  (ReturnStmt 0x9de0100 <col:9, col:58>
    (CallExpr 0x9de00d0 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9de0020 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9de0010 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0x9de0054 <col:29> 'iter_type':'_InIter' lvalue ParmVar 0x9ddbbb0 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0x9de006c <col:35> 'iter_type':'_InIter' lvalue ParmVar 0x9ddbbf0 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x9de0084 <col:42> 'class std::ios_base' lvalue ParmVar 0x9ddbc40 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9de009c <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9ddbcb0 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x9de00b4 <col:55> 'float' lvalue ParmVar 0x9ddc560 '__v' 'float &'))))


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, double &__v) const (CompoundStmt 0x9de0228 </usr/include/c++/4.6/bits/locale_facets.h:2064:7, col:61>
  (ReturnStmt 0x9de0218 <col:9, col:58>
    (CallExpr 0x9de01e8 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9de0138 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9de0128 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0x9de016c <col:29> 'iter_type':'_InIter' lvalue ParmVar 0x9ddc6b0 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0x9de0184 <col:35> 'iter_type':'_InIter' lvalue ParmVar 0x9ddc6f0 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x9de019c <col:42> 'class std::ios_base' lvalue ParmVar 0x9ddc740 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9de01b4 <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9ddc7b0 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x9de01cc <col:55> 'double' lvalue ParmVar 0x9ddc800 '__v' 'double &'))))


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long double &__v) const (CompoundStmt 0x9de0340 </usr/include/c++/4.6/bits/locale_facets.h:2069:7, col:61>
  (ReturnStmt 0x9de0330 <col:9, col:58>
    (CallExpr 0x9de0300 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9de0250 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9de0240 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0x9de0284 <col:29> 'iter_type':'_InIter' lvalue ParmVar 0x9ddc950 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0x9de029c <col:35> 'iter_type':'_InIter' lvalue ParmVar 0x9ddc990 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x9de02b4 <col:42> 'class std::ios_base' lvalue ParmVar 0x9ddc9e0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9de02cc <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9ddca50 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x9de02e4 <col:55> 'long double' lvalue ParmVar 0x9ddcaa0 '__v' 'long double &'))))


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, void *&__v) const (CompoundStmt 0x9de0458 </usr/include/c++/4.6/bits/locale_facets.h:2101:7, col:61>
  (ReturnStmt 0x9de0448 <col:9, col:58>
    (CallExpr 0x9de0418 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9de0368 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9de0358 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0x9de039c <col:29> 'iter_type':'_InIter' lvalue ParmVar 0x9ddcbf0 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0x9de03b4 <col:35> 'iter_type':'_InIter' lvalue ParmVar 0x9ddcc30 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x9de03cc <col:42> 'class std::ios_base' lvalue ParmVar 0x9ddcc80 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9de03e4 <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9ddccf0 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x9de03fc <col:55> 'void *' lvalue ParmVar 0x9ddcd40 '__v' 'void *&'))))


    protected:
    protected:
        virtual void ~num_get<_CharT, _InIter>() (CompoundStmt 0x9de0470 </usr/include/c++/4.6/bits/locale_facets.h:2105:26, col:28>)


        iter_type _M_extract_float(iter_type, iter_type, std::ios_base &, ios_base::iostate &, string &) const;
        template <typename _ValueT> iter_type _M_extract_int(iter_type, iter_type, std::ios_base &, ios_base::iostate &, _ValueT &) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *, size_t __len, _CharT2 __c) const (CompoundStmt 0x9de3828 </usr/include/c++/4.6/bits/locale_facets.h:2119:9, line:2136:2>
  (DeclStmt 0x9de04f8 <line:2120:4, col:18>
    0x9de0490 "int __ret =
      (UnaryOperator 0x9de04e0 <col:16, col:17> 'int' prefix '-'
        (IntegerLiteral 0x9de04c8 <col:17> 'int' 1))")
  (IfStmt 0x9de37e0 <line:2121:4, line:2134:6>
    <<<NULL>>>
    (BinaryOperator 0x9de2ae8 <line:2121:8, col:17> '_Bool' '<='
      (ImplicitCastExpr 0x9de0538 <col:8> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9de0508 <col:8> 'size_t':'unsigned int' lvalue ParmVar 0x9ddd8c0 '__len' 'size_t':'unsigned int'))
      (ImplicitCastExpr 0x9de0548 <col:17> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0x9de0520 <col:17> 'int' 10)))
    (CompoundStmt 0x9de2e60 <line:2122:6, line:2125:6>
      (IfStmt 0x9de2e40 <line:2123:8, line:2124:28>
        <<<NULL>>>
        (BinaryOperator 0x9de2d40 <line:2123:12, col:69> '<dependent type>' '&&'
          (CXXOperatorCallExpr 0x9de2ba0 <col:12, col:30> '<dependent type>'
            (UnresolvedLookupExpr 0x9de2b58 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b436e0 0x9ac8bd0 0x9b5f010 0x9cbf3a0 0x9cbf900 0x9cbfe30)
            (DeclRefExpr 0x9de2b00 <col:12> '_CharT2' lvalue ParmVar 0x9ddd900 '__c' '_CharT2')
            (CXXUnresolvedConstructExpr 0x9de2b38 <col:19, col:30> '_CharT2'
              (CharacterLiteral 0x9de2b20 <col:27> 'char'48)))
          (CXXOperatorCallExpr 0x9de2d18 <col:35, col:69> '<dependent type>'
            (UnresolvedLookupExpr 0x9de2cd0 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40ad0 0x9b57c70 0x9b5ddb0 0x9cbc120 0x9cbc650 0x9cbcb80)
            (DeclRefExpr 0x9de2bc4 <col:35> '_CharT2' lvalue ParmVar 0x9ddd900 '__c' '_CharT2')
            (CXXUnresolvedConstructExpr 0x9de2cb0 <col:41, col:69> '_CharT2'
              (CXXOperatorCallExpr 0x9de2c88 <col:49, col:64> '<dependent type>'
                (UnresolvedLookupExpr 0x9de2c40 <col:62, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9ce1500 0x9ce2100 0x9cb8030 0x9cb8830)
                (CXXUnresolvedConstructExpr 0x9de2c08 <col:49, col:60> '_CharT2'
                  (CharacterLiteral 0x9de2bf0 <col:57> 'char'48))
                (DeclRefExpr 0x9de2c24 <col:64> 'size_t':'unsigned int' lvalue ParmVar 0x9ddd8c0 '__len' 'size_t':'unsigned int')))))
        (BinaryOperator 0x9de2e28 <line:2124:3, col:28> '<dependent type>' '='
          (DeclRefExpr 0x9de2d58 <col:3> 'int' lvalue Var 0x9de0490 '__ret' 'int')
          (CXXOperatorCallExpr 0x9de2e00 <col:11, col:28> '<dependent type>'
            (UnresolvedLookupExpr 0x9de2dc8 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
            (DeclRefExpr 0x9de2d70 <col:11> '_CharT2' lvalue ParmVar 0x9ddd900 '__c' '_CharT2')
            (CXXUnresolvedConstructExpr 0x9de2da8 <col:17, col:28> '_CharT2'
              (CharacterLiteral 0x9de2d90 <col:25> 'char'48))))
        <<<NULL>>>))
    (CompoundStmt 0x9de37c8 <line:2127:6, line:2134:6>
      (IfStmt 0x9de37a8 <line:2128:8, line:2133:35>
        <<<NULL>>>
        (BinaryOperator 0x9de3008 <line:2128:12, col:53> '<dependent type>' '&&'
          (CXXOperatorCallExpr 0x9de2f18 <col:12, col:30> '<dependent type>'
            (UnresolvedLookupExpr 0x9de2ed0 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b436e0 0x9ac8bd0 0x9b5f010 0x9cbf3a0 0x9cbf900 0x9cbfe30)
            (DeclRefExpr 0x9de2e74 <col:12> '_CharT2' lvalue ParmVar 0x9ddd900 '__c' '_CharT2')
            (CXXUnresolvedConstructExpr 0x9de2eb0 <col:19, col:30> '_CharT2'
              (CharacterLiteral 0x9de2e98 <col:27> 'char'48)))
          (CXXOperatorCallExpr 0x9de2fe0 <col:35, col:53> '<dependent type>'
            (UnresolvedLookupExpr 0x9de2f98 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b43190 0x9ac87b0 0x9b5eb90 0x9cbe2d0 0x9cbe800 0x9cbed30)
            (DeclRefExpr 0x9de2f3c <col:35> '_CharT2' lvalue ParmVar 0x9ddd900 '__c' '_CharT2')
            (CXXUnresolvedConstructExpr 0x9de2f78 <col:42, col:53> '_CharT2'
              (CharacterLiteral 0x9de2f60 <col:50> 'char'57))))
        (BinaryOperator 0x9de30f0 <line:2129:3, col:28> '<dependent type>' '='
          (DeclRefExpr 0x9de3020 <col:3> 'int' lvalue Var 0x9de0490 '__ret' 'int')
          (CXXOperatorCallExpr 0x9de30c8 <col:11, col:28> '<dependent type>'
            (UnresolvedLookupExpr 0x9de3090 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
            (DeclRefExpr 0x9de3038 <col:11> '_CharT2' lvalue ParmVar 0x9ddd900 '__c' '_CharT2')
            (CXXUnresolvedConstructExpr 0x9de3070 <col:17, col:28> '_CharT2'
              (CharacterLiteral 0x9de3058 <col:25> 'char'48))))
        (IfStmt 0x9de3788 <line:2130:13, line:2133:35>
          <<<NULL>>>
          (BinaryOperator 0x9de3298 <line:2130:17, col:58> '<dependent type>' '&&'
            (CXXOperatorCallExpr 0x9de31a8 <col:17, col:35> '<dependent type>'
              (UnresolvedLookupExpr 0x9de3160 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b436e0 0x9ac8bd0 0x9b5f010 0x9cbf3a0 0x9cbf900 0x9cbfe30)
              (DeclRefExpr 0x9de3108 <col:17> '_CharT2' lvalue ParmVar 0x9ddd900 '__c' '_CharT2')
              (CXXUnresolvedConstructExpr 0x9de3140 <col:24, col:35> '_CharT2'
                (CharacterLiteral 0x9de3128 <col:32> 'char'97)))
            (CXXOperatorCallExpr 0x9de3270 <col:40, col:58> '<dependent type>'
              (UnresolvedLookupExpr 0x9de3228 <col:44, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b43190 0x9ac87b0 0x9b5eb90 0x9cbe2d0 0x9cbe800 0x9cbed30)
              (DeclRefExpr 0x9de31cc <col:40> '_CharT2' lvalue ParmVar 0x9ddd900 '__c' '_CharT2')
              (CXXUnresolvedConstructExpr 0x9de3208 <col:47, col:58> '_CharT2'
                (CharacterLiteral 0x9de31f0 <col:55> 'char'102))))
          (BinaryOperator 0x9de3420 <line:2131:3, col:35> '<dependent type>' '='
            (DeclRefExpr 0x9de32b0 <col:3> 'int' lvalue Var 0x9de0490 '__ret' 'int')
            (CXXOperatorCallExpr 0x9de33f8 <col:11, col:35> '<dependent type>'
              (UnresolvedLookupExpr 0x9de33b0 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9ce1500 0x9ce2100 0x9cb8030 0x9cb8830)
              (IntegerLiteral 0x9de32c8 <col:11> 'int' 10)
              (ParenExpr 0x9de3398 <col:16, col:35> '<dependent type>'
                (CXXOperatorCallExpr 0x9de3370 <col:17, col:34> '<dependent type>'
                  (UnresolvedLookupExpr 0x9de3338 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
                  (DeclRefExpr 0x9de32e0 <col:17> '_CharT2' lvalue ParmVar 0x9ddd900 '__c' '_CharT2')
                  (CXXUnresolvedConstructExpr 0x9de3318 <col:23, col:34> '_CharT2'
                    (CharacterLiteral 0x9de3300 <col:31> 'char'97))))))
          (IfStmt 0x9de3768 <line:2132:13, line:2133:35>
            <<<NULL>>>
            (BinaryOperator 0x9de35c8 <line:2132:17, col:58> '<dependent type>' '&&'
              (CXXOperatorCallExpr 0x9de34d8 <col:17, col:35> '<dependent type>'
                (UnresolvedLookupExpr 0x9de3490 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b436e0 0x9ac8bd0 0x9b5f010 0x9cbf3a0 0x9cbf900 0x9cbfe30)
                (DeclRefExpr 0x9de3438 <col:17> '_CharT2' lvalue ParmVar 0x9ddd900 '__c' '_CharT2')
                (CXXUnresolvedConstructExpr 0x9de3470 <col:24, col:35> '_CharT2'
                  (CharacterLiteral 0x9de3458 <col:32> 'char'65)))
              (CXXOperatorCallExpr 0x9de35a0 <col:40, col:58> '<dependent type>'
                (UnresolvedLookupExpr 0x9de3558 <col:44, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b43190 0x9ac87b0 0x9b5eb90 0x9cbe2d0 0x9cbe800 0x9cbed30)
                (DeclRefExpr 0x9de34fc <col:40> '_CharT2' lvalue ParmVar 0x9ddd900 '__c' '_CharT2')
                (CXXUnresolvedConstructExpr 0x9de3538 <col:47, col:58> '_CharT2'
                  (CharacterLiteral 0x9de3520 <col:55> 'char'70))))
            (BinaryOperator 0x9de3750 <line:2133:3, col:35> '<dependent type>' '='
              (DeclRefExpr 0x9de35e0 <col:3> 'int' lvalue Var 0x9de0490 '__ret' 'int')
              (CXXOperatorCallExpr 0x9de3728 <col:11, col:35> '<dependent type>'
                (UnresolvedLookupExpr 0x9de36e0 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9ce1500 0x9ce2100 0x9cb8030 0x9cb8830)
                (IntegerLiteral 0x9de35f8 <col:11> 'int' 10)
                (ParenExpr 0x9de36c8 <col:16, col:35> '<dependent type>'
                  (CXXOperatorCallExpr 0x9de36a0 <col:17, col:34> '<dependent type>'
                    (UnresolvedLookupExpr 0x9de3668 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
                    (DeclRefExpr 0x9de3610 <col:17> '_CharT2' lvalue ParmVar 0x9ddd900 '__c' '_CharT2')
                    (CXXUnresolvedConstructExpr 0x9de3648 <col:23, col:34> '_CharT2'
                      (CharacterLiteral 0x9de3630 <col:31> 'char'65))))))
            <<<NULL>>>)))))
  (ReturnStmt 0x9de3818 <line:2135:4, col:11>
    (DeclRefExpr 0x9de37fc <col:11> 'int' lvalue Var 0x9de0490 '__ret' 'int')))

;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<!__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *__zero, size_t __len, _CharT2 __c) const (CompoundStmt 0x9de3cb8 </usr/include/c++/4.6/bits/locale_facets.h:2142:9, line:2152:2>
  (DeclStmt 0x9de38c8 <line:2143:4, col:18>
    0x9de3860 "int __ret =
      (UnaryOperator 0x9de38b0 <col:16, col:17> 'int' prefix '-'
        (IntegerLiteral 0x9de3898 <col:17> 'int' 1))")
  (DeclStmt 0x9de3aa8 <line:2144:4, col:73>
    0x9de3920 "const char_type *__q =
      (CallExpr 0x9de3a80 <col:27, col:72> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9de3a00 <col:27, col:49> '<dependent type>' lvalue)
        (DeclRefExpr 0x9de3a34 <col:54> 'const _CharT2 *' lvalue ParmVar 0x9dddd80 '__zero' 'const _CharT2 *')
        (DeclRefExpr 0x9de3a4c <col:62> 'size_t':'unsigned int' lvalue ParmVar 0x9ddddc0 '__len' 'size_t':'unsigned int')
        (DeclRefExpr 0x9de3a64 <col:69> '_CharT2' lvalue ParmVar 0x9ddde00 '__c' '_CharT2'))")
  (IfStmt 0x9de3c70 <line:2145:4, line:2150:6>
    <<<NULL>>>
    (DeclRefExpr 0x9de3ab8 <line:2145:8> 'const char_type *' lvalue Var 0x9de3920 '__q' 'const char_type *')
    (CompoundStmt 0x9de3c58 <line:2146:6, line:2150:6>
      (BinaryOperator 0x9de3b78 <line:2147:8, col:22> '<dependent type>' '='
        (DeclRefExpr 0x9de3ad0 <col:8> 'int' lvalue Var 0x9de3860 '__ret' 'int')
        (CXXOperatorCallExpr 0x9de3b50 <col:16, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0x9de3b18 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
          (DeclRefExpr 0x9de3ae8 <col:16> 'const char_type *' lvalue Var 0x9de3920 '__q' 'const char_type *')
          (DeclRefExpr 0x9de3b00 <col:22> 'const _CharT2 *' lvalue ParmVar 0x9dddd80 '__zero' 'const _CharT2 *')))
      (IfStmt 0x9de3c38 <line:2148:8, line:2149:12>
        <<<NULL>>>
        (BinaryOperator 0x9de3bd0 <line:2148:12, col:20> '_Bool' '>'
          (ImplicitCastExpr 0x9de3bc0 <col:12> 'int' <LValueToRValue>
            (DeclRefExpr 0x9de3b90 <col:12> 'int' lvalue Var 0x9de3860 '__ret' 'int'))
          (IntegerLiteral 0x9de3ba8 <col:20> 'int' 15))
        (CompoundAssignOperator 0x9de3c18 <line:2149:3, col:12> 'int' lvalue '-=' ComputeLHSTy='int' ComputeResultTy='int'
          (DeclRefExpr 0x9de3be8 <col:3> 'int' lvalue Var 0x9de3860 '__ret' 'int')
          (IntegerLiteral 0x9de3c00 <col:12> 'int' 6))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9de3ca8 <line:2151:4, col:11>
    (DeclRefExpr 0x9de3c8c <col:11> 'int' lvalue Var 0x9de3860 '__ret' 'int')))

;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &, bool &) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const (CompoundStmt 0x9de3de0 </usr/include/c++/4.6/bits/locale_facets.h:2175:7, col:64>
  (ReturnStmt 0x9de3dd0 <col:9, col:61>
    (CallExpr 0x9de3da0 <col:16, col:61> '<dependent type>'
      (UnresolvedMemberExpr 0x9de3ce8 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9de3d24 <col:31> 'iter_type':'_InIter' lvalue ParmVar 0x9dde1a0 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0x9de3d3c <col:38> 'iter_type':'_InIter' lvalue ParmVar 0x9dde1e0 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x9de3d54 <col:45> 'class std::ios_base' lvalue ParmVar 0x9dde230 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9de3d6c <col:51> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9dde2a0 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x9de3d84 <col:58> 'long' lvalue ParmVar 0x9dde2f0 '__v' 'long &'))))


        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const (CompoundStmt 0x9de3f00 </usr/include/c++/4.6/bits/locale_facets.h:2180:7, col:64>
  (ReturnStmt 0x9de3ef0 <col:9, col:61>
    (CallExpr 0x9de3ec0 <col:16, col:61> '<dependent type>'
      (UnresolvedMemberExpr 0x9de3e08 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9de3e44 <col:31> 'iter_type':'_InIter' lvalue ParmVar 0x9dde3d0 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0x9de3e5c <col:38> 'iter_type':'_InIter' lvalue ParmVar 0x9dde410 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x9de3e74 <col:45> 'class std::ios_base' lvalue ParmVar 0x9dde460 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9de3e8c <col:51> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9dde4d0 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x9de3ea4 <col:58> 'unsigned short' lvalue ParmVar 0x9dde520 '__v' 'unsigned short &'))))


        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const (CompoundStmt 0x9de4020 </usr/include/c++/4.6/bits/locale_facets.h:2185:7, col:64>
  (ReturnStmt 0x9de4010 <col:9, col:61>
    (CallExpr 0x9de3fe0 <col:16, col:61> '<dependent type>'
      (UnresolvedMemberExpr 0x9de3f28 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9de3f64 <col:31> 'iter_type':'_InIter' lvalue ParmVar 0x9dde600 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0x9de3f7c <col:38> 'iter_type':'_InIter' lvalue ParmVar 0x9dde640 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x9de3f94 <col:45> 'class std::ios_base' lvalue ParmVar 0x9dde690 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9de3fac <col:51> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9dde700 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x9de3fc4 <col:58> 'unsigned int' lvalue ParmVar 0x9dde750 '__v' 'unsigned int &'))))


        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const (CompoundStmt 0x9de4140 </usr/include/c++/4.6/bits/locale_facets.h:2190:7, col:64>
  (ReturnStmt 0x9de4130 <col:9, col:61>
    (CallExpr 0x9de4100 <col:16, col:61> '<dependent type>'
      (UnresolvedMemberExpr 0x9de4048 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9de4084 <col:31> 'iter_type':'_InIter' lvalue ParmVar 0x9dde830 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0x9de409c <col:38> 'iter_type':'_InIter' lvalue ParmVar 0x9dde870 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x9de40b4 <col:45> 'class std::ios_base' lvalue ParmVar 0x9dde8c0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9de40cc <col:51> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9dde930 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x9de40e4 <col:58> 'unsigned long' lvalue ParmVar 0x9dde980 '__v' 'unsigned long &'))))


        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const (CompoundStmt 0x9de4260 </usr/include/c++/4.6/bits/locale_facets.h:2196:7, col:64>
  (ReturnStmt 0x9de4250 <col:9, col:61>
    (CallExpr 0x9de4220 <col:16, col:61> '<dependent type>'
      (UnresolvedMemberExpr 0x9de4168 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9de41a4 <col:31> 'iter_type':'_InIter' lvalue ParmVar 0x9ddea60 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0x9de41bc <col:38> 'iter_type':'_InIter' lvalue ParmVar 0x9ddeaa0 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x9de41d4 <col:45> 'class std::ios_base' lvalue ParmVar 0x9ddeaf0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9de41ec <col:51> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9ddeb60 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x9de4204 <col:58> 'long long' lvalue ParmVar 0x9ddebb0 '__v' 'long long &'))))


        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const (CompoundStmt 0x9de4380 </usr/include/c++/4.6/bits/locale_facets.h:2201:7, col:64>
  (ReturnStmt 0x9de4370 <col:9, col:61>
    (CallExpr 0x9de4340 <col:16, col:61> '<dependent type>'
      (UnresolvedMemberExpr 0x9de4288 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9de42c4 <col:31> 'iter_type':'_InIter' lvalue ParmVar 0x9ddec90 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0x9de42dc <col:38> 'iter_type':'_InIter' lvalue ParmVar 0x9ddecd0 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x9de42f4 <col:45> 'class std::ios_base' lvalue ParmVar 0x9dded20 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9de430c <col:51> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9dded90 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x9de4324 <col:58> 'unsigned long long' lvalue ParmVar 0x9ddede0 '__v' 'unsigned long long &'))))


        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, float &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, long double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, void *&) const;
    };
    static locale::id id(CXXConstructExpr 0x9de46c8 </usr/include/c++/4.6/bits/locale_facets.h:2237:42> 'class locale::id':'class std::locale::id''void (void)')
;
    template <typename _CharT = wchar_t, typename _OutIter = std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >> class num_put : public locale::facet {
        class num_put;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > iter_type;
        static locale::id id;
        num_put(size_t __refs);
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, bool __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, const void *__v) const;
    protected:
    protected:
        template <typename _ValueT> iter_type _M_insert_float(iter_type, std::ios_base &__io, char_type __fill, char __mod, _ValueT __v) const;
        void _M_group_float(const char *__grouping, size_t __grouping_size, char_type __sep, const char_type *__p, char_type *__new, char_type *__cs, int &__len) const;
        template <typename _ValueT> iter_type _M_insert_int(iter_type, std::ios_base &__io, char_type __fill, _ValueT __v) const;
        void _M_group_int(const char *__grouping, size_t __grouping_size, char_type __sep, std::ios_base &__io, char_type *__new, char_type *__cs, int &__len) const;
        void _M_pad(char_type __fill, streamsize __w, std::ios_base &__io, char_type *__new, const char_type *__cs, int &__len) const;
        virtual void ~num_put();
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, bool __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long long __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, long double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, const void *__v) const;
        inline std::num_put<wchar_t> &operator=(const std::num_put<wchar_t> &);
    }
template <typename _CharT = char, typename _OutIter = std::ostreambuf_iterator<char, std::char_traits<char> >> class num_put : public locale::facet {
        class num_put;
    public:
    public:
        typedef char char_type;
        typedef std::ostreambuf_iterator<char, std::char_traits<char> > iter_type;
        static locale::id id;
        num_put(size_t __refs);
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, bool __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, const void *__v) const;
    protected:
    protected:
        template <typename _ValueT> iter_type _M_insert_float(iter_type, std::ios_base &__io, char_type __fill, char __mod, _ValueT __v) const;
        void _M_group_float(const char *__grouping, size_t __grouping_size, char_type __sep, const char_type *__p, char_type *__new, char_type *__cs, int &__len) const;
        template <typename _ValueT> iter_type _M_insert_int(iter_type, std::ios_base &__io, char_type __fill, _ValueT __v) const;
        void _M_group_int(const char *__grouping, size_t __grouping_size, char_type __sep, std::ios_base &__io, char_type *__new, char_type *__cs, int &__len) const;
        void _M_pad(char_type __fill, streamsize __w, std::ios_base &__io, char_type *__new, const char_type *__cs, int &__len) const;
        virtual void ~num_put();
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, bool __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long long __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, long double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, const void *__v) const;
        inline std::num_put<char> &operator=(const std::num_put<char> &);
    }
template <typename _CharT, typename _OutIter = ostreambuf_iterator<_CharT>> class num_put : public locale::facet {
        class num_put;
    public:
    public:
        typedef _CharT char_type;
        typedef _OutIter iter_type;
        static locale::id id;
        num_put<_CharT, _OutIter>(size_t __refs = (ImplicitCastExpr 0x9de8078 </usr/include/c++/4.6/bits/locale_facets.h:2274:31> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9de8060 <col:31> 'int' 0))
) : std::locale::facet((DeclRefExpr 0x9de8084 </usr/include/c++/4.6/bits/locale_facets.h:2274:42> 'size_t':'unsigned int' lvalue ParmVar 0x9de4a70 '__refs' 'size_t':'unsigned int')
) (CompoundStmt 0x9de8120 </usr/include/c++/4.6/bits/locale_facets.h:2274:50, col:52>)


        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, bool __v) const (CompoundStmt 0x9de8230 </usr/include/c++/4.6/bits/locale_facets.h:2293:7, col:53>
  (ReturnStmt 0x9de8220 <col:9, col:50>
    (CallExpr 0x9de81f0 <col:16, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9de8158 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9de8148 <col:16> 'const num_put<_CharT, _OutIter> *' this))
      (DeclRefExpr 0x9de818c <col:29> 'iter_type':'_OutIter' lvalue ParmVar 0x9de4b70 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0x9de81a4 <col:34> 'class std::ios_base' lvalue ParmVar 0x9de4bc0 '__f' 'class std::ios_base &')
      (DeclRefExpr 0x9de81bc <col:39> 'char_type':'_CharT' lvalue ParmVar 0x9de4c20 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0x9de81d4 <col:47> '_Bool' lvalue ParmVar 0x9de4c60 '__v' '_Bool'))))


        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long __v) const (CompoundStmt 0x9de8330 </usr/include/c++/4.6/bits/locale_facets.h:2335:7, col:53>
  (ReturnStmt 0x9de8320 <col:9, col:50>
    (CallExpr 0x9de82f0 <col:16, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9de8258 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9de8248 <col:16> 'const num_put<_CharT, _OutIter> *' this))
      (DeclRefExpr 0x9de828c <col:29> 'iter_type':'_OutIter' lvalue ParmVar 0x9de4da0 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0x9de82a4 <col:34> 'class std::ios_base' lvalue ParmVar 0x9de4df0 '__f' 'class std::ios_base &')
      (DeclRefExpr 0x9de82bc <col:39> 'char_type':'_CharT' lvalue ParmVar 0x9de4e30 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0x9de82d4 <col:47> 'long' lvalue ParmVar 0x9de4e80 '__v' 'long'))))


        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long __v) const (CompoundStmt 0x9de8430 </usr/include/c++/4.6/bits/locale_facets.h:2340:7, col:53>
  (ReturnStmt 0x9de8420 <col:9, col:50>
    (CallExpr 0x9de83f0 <col:16, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9de8358 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9de8348 <col:16> 'const num_put<_CharT, _OutIter> *' this))
      (DeclRefExpr 0x9de838c <col:29> 'iter_type':'_OutIter' lvalue ParmVar 0x9de4fc0 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0x9de83a4 <col:34> 'class std::ios_base' lvalue ParmVar 0x9de5010 '__f' 'class std::ios_base &')
      (DeclRefExpr 0x9de83bc <col:39> 'char_type':'_CharT' lvalue ParmVar 0x9de5050 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0x9de83d4 <col:47> 'unsigned long' lvalue ParmVar 0x9de50a0 '__v' 'unsigned long'))))


        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long long __v) const (CompoundStmt 0x9de8530 </usr/include/c++/4.6/bits/locale_facets.h:2345:7, col:53>
  (ReturnStmt 0x9de8520 <col:9, col:50>
    (CallExpr 0x9de84f0 <col:16, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9de8458 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9de8448 <col:16> 'const num_put<_CharT, _OutIter> *' this))
      (DeclRefExpr 0x9de848c <col:29> 'iter_type':'_OutIter' lvalue ParmVar 0x9de51e0 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0x9de84a4 <col:34> 'class std::ios_base' lvalue ParmVar 0x9de5230 '__f' 'class std::ios_base &')
      (DeclRefExpr 0x9de84bc <col:39> 'char_type':'_CharT' lvalue ParmVar 0x9de5270 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0x9de84d4 <col:47> 'long long' lvalue ParmVar 0x9de52c0 '__v' 'long long'))))


        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long long __v) const (CompoundStmt 0x9de8630 </usr/include/c++/4.6/bits/locale_facets.h:2350:7, col:53>
  (ReturnStmt 0x9de8620 <col:9, col:50>
    (CallExpr 0x9de85f0 <col:16, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9de8558 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9de8548 <col:16> 'const num_put<_CharT, _OutIter> *' this))
      (DeclRefExpr 0x9de858c <col:29> 'iter_type':'_OutIter' lvalue ParmVar 0x9de5400 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0x9de85a4 <col:34> 'class std::ios_base' lvalue ParmVar 0x9de5450 '__f' 'class std::ios_base &')
      (DeclRefExpr 0x9de85bc <col:39> 'char_type':'_CharT' lvalue ParmVar 0x9de5490 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0x9de85d4 <col:47> 'unsigned long long' lvalue ParmVar 0x9de54e0 '__v' 'unsigned long long'))))


        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, double __v) const (CompoundStmt 0x9de8730 </usr/include/c++/4.6/bits/locale_facets.h:2398:7, col:53>
  (ReturnStmt 0x9de8720 <col:9, col:50>
    (CallExpr 0x9de86f0 <col:16, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9de8658 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9de8648 <col:16> 'const num_put<_CharT, _OutIter> *' this))
      (DeclRefExpr 0x9de868c <col:29> 'iter_type':'_OutIter' lvalue ParmVar 0x9de5620 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0x9de86a4 <col:34> 'class std::ios_base' lvalue ParmVar 0x9de5670 '__f' 'class std::ios_base &')
      (DeclRefExpr 0x9de86bc <col:39> 'char_type':'_CharT' lvalue ParmVar 0x9de56b0 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0x9de86d4 <col:47> 'double' lvalue ParmVar 0x9de5700 '__v' 'double'))))


        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long double __v) const (CompoundStmt 0x9de8830 </usr/include/c++/4.6/bits/locale_facets.h:2403:7, col:53>
  (ReturnStmt 0x9de8820 <col:9, col:50>
    (CallExpr 0x9de87f0 <col:16, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9de8758 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9de8748 <col:16> 'const num_put<_CharT, _OutIter> *' this))
      (DeclRefExpr 0x9de878c <col:29> 'iter_type':'_OutIter' lvalue ParmVar 0x9de5840 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0x9de87a4 <col:34> 'class std::ios_base' lvalue ParmVar 0x9de5890 '__f' 'class std::ios_base &')
      (DeclRefExpr 0x9de87bc <col:39> 'char_type':'_CharT' lvalue ParmVar 0x9de58d0 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0x9de87d4 <col:47> 'long double' lvalue ParmVar 0x9de5920 '__v' 'long double'))))


        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, const void *__v) const (CompoundStmt 0x9de8930 </usr/include/c++/4.6/bits/locale_facets.h:2424:7, col:53>
  (ReturnStmt 0x9de8920 <col:9, col:50>
    (CallExpr 0x9de88f0 <col:16, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9de8858 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9de8848 <col:16> 'const num_put<_CharT, _OutIter> *' this))
      (DeclRefExpr 0x9de888c <col:29> 'iter_type':'_OutIter' lvalue ParmVar 0x9de5a60 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0x9de88a4 <col:34> 'class std::ios_base' lvalue ParmVar 0x9de5ab0 '__f' 'class std::ios_base &')
      (DeclRefExpr 0x9de88bc <col:39> 'char_type':'_CharT' lvalue ParmVar 0x9de5af0 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0x9de88d4 <col:47> 'const void *' lvalue ParmVar 0x9de5b40 '__v' 'const void *'))))


    protected:
    protected:
        template <typename _ValueT> iter_type _M_insert_float(iter_type, std::ios_base &__io, char_type __fill, char __mod, _ValueT __v) const;
        void _M_group_float(const char *__grouping, size_t __grouping_size, char_type __sep, const char_type *__p, char_type *__new, char_type *__cs, int &__len) const;
        template <typename _ValueT> iter_type _M_insert_int(iter_type, std::ios_base &__io, char_type __fill, _ValueT __v) const;
        void _M_group_int(const char *__grouping, size_t __grouping_size, char_type __sep, std::ios_base &__io, char_type *__new, char_type *__cs, int &__len) const;
        void _M_pad(char_type __fill, streamsize __w, std::ios_base &__io, char_type *__new, const char_type *__cs, int &__len) const;
        virtual void ~num_put<_CharT, _OutIter>() (CompoundStmt 0x9de8948 </usr/include/c++/4.6/bits/locale_facets.h:2453:18, col:20>)


        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, bool __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long __v) const (CompoundStmt 0x9de8a48 </usr/include/c++/4.6/bits/locale_facets.h:2474:7, col:55>
  (ReturnStmt 0x9de8a38 <col:9, col:52>
    (CallExpr 0x9de8a08 <col:16, col:52> '<dependent type>'
      (UnresolvedMemberExpr 0x9de8968 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9de89a4 <col:30> 'iter_type':'_OutIter' lvalue ParmVar 0x9de7430 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0x9de89bc <col:35> 'class std::ios_base' lvalue ParmVar 0x9de7480 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9de89d4 <col:41> 'char_type':'_CharT' lvalue ParmVar 0x9de74c0 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0x9de89ec <col:49> 'long' lvalue ParmVar 0x9de7510 '__v' 'long'))))


        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long __v) const (CompoundStmt 0x9de8b50 </usr/include/c++/4.6/bits/locale_facets.h:2479:7, col:55>
  (ReturnStmt 0x9de8b40 <col:9, col:52>
    (CallExpr 0x9de8b10 <col:16, col:52> '<dependent type>'
      (UnresolvedMemberExpr 0x9de8a70 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9de8aac <col:30> 'iter_type':'_OutIter' lvalue ParmVar 0x9de75f0 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0x9de8ac4 <col:35> 'class std::ios_base' lvalue ParmVar 0x9de7640 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9de8adc <col:41> 'char_type':'_CharT' lvalue ParmVar 0x9de7680 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0x9de8af4 <col:49> 'unsigned long' lvalue ParmVar 0x9de76d0 '__v' 'unsigned long'))))


        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long long __v) const (CompoundStmt 0x9de8c58 </usr/include/c++/4.6/bits/locale_facets.h:2485:7, col:55>
  (ReturnStmt 0x9de8c48 <col:9, col:52>
    (CallExpr 0x9de8c18 <col:16, col:52> '<dependent type>'
      (UnresolvedMemberExpr 0x9de8b78 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9de8bb4 <col:30> 'iter_type':'_OutIter' lvalue ParmVar 0x9de77b0 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0x9de8bcc <col:35> 'class std::ios_base' lvalue ParmVar 0x9de7800 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9de8be4 <col:41> 'char_type':'_CharT' lvalue ParmVar 0x9de7840 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0x9de8bfc <col:49> 'long long' lvalue ParmVar 0x9de7890 '__v' 'long long'))))


        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long long __v) const (CompoundStmt 0x9de8d60 </usr/include/c++/4.6/bits/locale_facets.h:2490:7, col:55>
  (ReturnStmt 0x9de8d50 <col:9, col:52>
    (CallExpr 0x9de8d20 <col:16, col:52> '<dependent type>'
      (UnresolvedMemberExpr 0x9de8c80 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9de8cbc <col:30> 'iter_type':'_OutIter' lvalue ParmVar 0x9de7970 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0x9de8cd4 <col:35> 'class std::ios_base' lvalue ParmVar 0x9de79c0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9de8cec <col:41> 'char_type':'_CharT' lvalue ParmVar 0x9de7a00 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0x9de8d04 <col:49> 'unsigned long long' lvalue ParmVar 0x9de7a50 '__v' 'unsigned long long'))))


        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, long double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, const void *__v) const;
    };
    static locale::id id(CXXConstructExpr 0x9de90a8 </usr/include/c++/4.6/bits/locale_facets.h:2517:43> 'class locale::id':'class std::locale::id''void (void)')
;
    template <typename _CharT> inline bool isspace(_CharT __c, const std::locale &__loc) (CompoundStmt 0x9de94d0 </usr/include/c++/4.6/bits/locale_facets.h:2530:5, col:75>
  (ReturnStmt 0x9de94c0 <col:7, col:72>
    (CallExpr 0x9de9498 <col:14, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9de9400 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0x9de93e0 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0x9de9360 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0x9bf5c50)
          (DeclRefExpr 0x9de93c8 <col:40> 'const class std::locale' lvalue ParmVar 0x9de9180 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0x9de9460 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0x9d9fe40 'space' 'const mask':'const unsigned short')
      (DeclRefExpr 0x9de9480 <col:69> '_CharT' lvalue ParmVar 0x9de9130 '__c' '_CharT'))))

;
    template <typename _CharT> inline bool isprint(_CharT __c, const std::locale &__loc) (CompoundStmt 0x9de98e8 </usr/include/c++/4.6/bits/locale_facets.h:2536:5, col:75>
  (ReturnStmt 0x9de98d8 <col:7, col:72>
    (CallExpr 0x9de98b0 <col:14, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9de9820 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0x9de9800 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0x9de9780 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0x9bf5c50)
          (DeclRefExpr 0x9de97e8 <col:40> 'const class std::locale' lvalue ParmVar 0x9de95a0 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0x9de9874 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0x9d9feb0 'print' 'const mask':'const unsigned short')
      (DeclRefExpr 0x9de9894 <col:69> '_CharT' lvalue ParmVar 0x9de9550 '__c' '_CharT'))))

;
    template <typename _CharT> inline bool iscntrl(_CharT __c, const std::locale &__loc) (CompoundStmt 0x9de9cf8 </usr/include/c++/4.6/bits/locale_facets.h:2542:5, col:75>
  (ReturnStmt 0x9de9ce8 <col:7, col:72>
    (CallExpr 0x9de9cc0 <col:14, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9de9c30 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0x9de9c10 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0x9de9b90 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0x9bf5c50)
          (DeclRefExpr 0x9de9bf8 <col:40> 'const class std::locale' lvalue ParmVar 0x9de99b0 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0x9de9c84 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0x9da0020 'cntrl' 'const mask':'const unsigned short')
      (DeclRefExpr 0x9de9ca4 <col:69> '_CharT' lvalue ParmVar 0x9de9960 '__c' '_CharT'))))

;
    template <typename _CharT> inline bool isupper(_CharT __c, const std::locale &__loc) (CompoundStmt 0x9dea108 </usr/include/c++/4.6/bits/locale_facets.h:2548:5, col:75>
  (ReturnStmt 0x9dea0f8 <col:7, col:72>
    (CallExpr 0x9dea0d0 <col:14, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9dea040 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0x9dea020 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0x9de9fa0 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0x9bf5c50)
          (DeclRefExpr 0x9dea008 <col:40> 'const class std::locale' lvalue ParmVar 0x9de9dc0 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0x9dea094 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0x9d9fc10 'upper' 'const mask':'const unsigned short')
      (DeclRefExpr 0x9dea0b4 <col:69> '_CharT' lvalue ParmVar 0x9de9d70 '__c' '_CharT'))))

;
    template <typename _CharT> inline bool islower(_CharT __c, const std::locale &__loc) (CompoundStmt 0x9dea518 </usr/include/c++/4.6/bits/locale_facets.h:2554:5, col:75>
  (ReturnStmt 0x9dea508 <col:7, col:72>
    (CallExpr 0x9dea4e0 <col:14, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9dea450 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0x9dea430 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0x9dea3b0 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0x9bf5c50)
          (DeclRefExpr 0x9dea418 <col:40> 'const class std::locale' lvalue ParmVar 0x9dea1d0 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0x9dea4a4 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0x9d9fc80 'lower' 'const mask':'const unsigned short')
      (DeclRefExpr 0x9dea4c4 <col:69> '_CharT' lvalue ParmVar 0x9dea180 '__c' '_CharT'))))

;
    template <typename _CharT> inline bool isalpha(_CharT __c, const std::locale &__loc) (CompoundStmt 0x9dea928 </usr/include/c++/4.6/bits/locale_facets.h:2560:5, col:75>
  (ReturnStmt 0x9dea918 <col:7, col:72>
    (CallExpr 0x9dea8f0 <col:14, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9dea860 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0x9dea840 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0x9dea7c0 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0x9bf5c50)
          (DeclRefExpr 0x9dea828 <col:40> 'const class std::locale' lvalue ParmVar 0x9dea5e0 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0x9dea8b4 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0x9d9fcf0 'alpha' 'const mask':'const unsigned short')
      (DeclRefExpr 0x9dea8d4 <col:69> '_CharT' lvalue ParmVar 0x9dea590 '__c' '_CharT'))))

;
    template <typename _CharT> inline bool isdigit(_CharT __c, const std::locale &__loc) (CompoundStmt 0x9dead38 </usr/include/c++/4.6/bits/locale_facets.h:2566:5, col:75>
  (ReturnStmt 0x9dead28 <col:7, col:72>
    (CallExpr 0x9dead00 <col:14, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9deac70 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0x9deac50 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0x9deabd0 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0x9bf5c50)
          (DeclRefExpr 0x9deac38 <col:40> 'const class std::locale' lvalue ParmVar 0x9dea9f0 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0x9deacc4 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0x9d9fd60 'digit' 'const mask':'const unsigned short')
      (DeclRefExpr 0x9deace4 <col:69> '_CharT' lvalue ParmVar 0x9dea9a0 '__c' '_CharT'))))

;
    template <typename _CharT> inline bool ispunct(_CharT __c, const std::locale &__loc) (CompoundStmt 0x9deb170 </usr/include/c++/4.6/bits/locale_facets.h:2572:5, col:75>
  (ReturnStmt 0x9deb160 <col:7, col:72>
    (CallExpr 0x9deb138 <col:14, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9deb080 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0x9deb060 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0x9deafe0 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0x9bf5c50)
          (DeclRefExpr 0x9deb048 <col:40> 'const class std::locale' lvalue ParmVar 0x9deae00 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0x9deb100 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0x9da0090 'punct' 'const mask':'const unsigned short')
      (DeclRefExpr 0x9deb120 <col:69> '_CharT' lvalue ParmVar 0x9deadb0 '__c' '_CharT'))))

;
    template <typename _CharT> inline bool isxdigit(_CharT __c, const std::locale &__loc) (CompoundStmt 0x9deb588 </usr/include/c++/4.6/bits/locale_facets.h:2578:5, col:76>
  (ReturnStmt 0x9deb578 <col:7, col:73>
    (CallExpr 0x9deb550 <col:14, col:73> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9deb4c0 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0x9deb4a0 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0x9deb420 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0x9bf5c50)
          (DeclRefExpr 0x9deb488 <col:40> 'const class std::locale' lvalue ParmVar 0x9deb240 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0x9deb514 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0x9d9fdd0 'xdigit' 'const mask':'const unsigned short')
      (DeclRefExpr 0x9deb534 <col:70> '_CharT' lvalue ParmVar 0x9deb1f0 '__c' '_CharT'))))

;
    template <typename _CharT> inline bool isalnum(_CharT __c, const std::locale &__loc) (CompoundStmt 0x9deb998 </usr/include/c++/4.6/bits/locale_facets.h:2584:5, col:75>
  (ReturnStmt 0x9deb988 <col:7, col:72>
    (CallExpr 0x9deb960 <col:14, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9deb8d0 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0x9deb8b0 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0x9deb830 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0x9bf5c50)
          (DeclRefExpr 0x9deb898 <col:40> 'const class std::locale' lvalue ParmVar 0x9deb650 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0x9deb924 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0x9da0100 'alnum' 'const mask':'const unsigned short')
      (DeclRefExpr 0x9deb944 <col:69> '_CharT' lvalue ParmVar 0x9deb600 '__c' '_CharT'))))

;
    template <typename _CharT> inline bool isgraph(_CharT __c, const std::locale &__loc) (CompoundStmt 0x9debda8 </usr/include/c++/4.6/bits/locale_facets.h:2590:5, col:75>
  (ReturnStmt 0x9debd98 <col:7, col:72>
    (CallExpr 0x9debd70 <col:14, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9debce0 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0x9debcc0 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0x9debc40 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0x9bf5c50)
          (DeclRefExpr 0x9debca8 <col:40> 'const class std::locale' lvalue ParmVar 0x9deba60 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0x9debd34 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0x9d9ff20 'graph' 'const mask':'const unsigned short')
      (DeclRefExpr 0x9debd54 <col:69> '_CharT' lvalue ParmVar 0x9deba10 '__c' '_CharT'))))

;
    template <typename _CharT> inline _CharT toupper(_CharT __c, const std::locale &__loc) (CompoundStmt 0x9dec170 </usr/include/c++/4.6/bits/locale_facets.h:2596:5, col:61>
  (ReturnStmt 0x9dec160 <col:7, col:58>
    (CallExpr 0x9dec140 <col:14, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9dec0f0 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0x9dec0d0 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0x9dec050 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0x9bf5c50)
          (DeclRefExpr 0x9dec0b8 <col:40> 'const class std::locale' lvalue ParmVar 0x9debe70 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0x9dec124 <col:55> '_CharT' lvalue ParmVar 0x9debe20 '__c' '_CharT'))))

;
    template <typename _CharT> inline _CharT tolower(_CharT __c, const std::locale &__loc) (CompoundStmt 0x9dec540 </usr/include/c++/4.6/bits/locale_facets.h:2602:5, col:61>
  (ReturnStmt 0x9dec530 <col:7, col:58>
    (CallExpr 0x9dec510 <col:14, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9dec4c0 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0x9dec4a0 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0x9dec420 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0x9bf5c50)
          (DeclRefExpr 0x9dec488 <col:40> 'const class std::locale' lvalue ParmVar 0x9dec240 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0x9dec4f4 <col:55> '_CharT' lvalue ParmVar 0x9dec1f0 '__c' '_CharT'))))

;
}
namespace std {
    template <typename _Facet> struct __use_cache {
        struct __use_cache;
        const _Facet *operator()(const std::locale &__loc) const;
    };
    struct __use_cache {
        struct __use_cache;
        const __numpunct_cache<_CharT> *operator()(const std::locale &__loc) const (CompoundStmt 0x9ded7e8 </usr/include/c++/4.6/bits/locale_facets.tcc:55:7, line:74:7>
  (DeclStmt 0x9ded028 <line:56:2, col:49>
    0x9decea0 "const size_t __i =
      (CallExpr 0x9ded008 <col:21, col:48> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9decfd0 <col:21, col:42> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9decf98 <col:21, col:39> '<dependent type>' lvalue)))")
  (DeclStmt 0x9ded120 <line:57:2, col:59>
    0x9ded070 "const locale::facet **__caches =
      (ImplicitCastExpr 0x9ded110 <col:35, col:50> 'const class std::locale::facet **' <LValueToRValue>
        (MemberExpr 0x9ded0ec <col:35, col:50> 'const class std::locale::facet **' lvalue ->_M_caches 0x9984170
          (ImplicitCastExpr 0x9ded0e0 <col:35, col:41> 'class std::locale::_Impl *' <LValueToRValue>
            (MemberExpr 0x9ded0bc <col:35, col:41> 'class std::locale::_Impl *const' lvalue ._M_impl 0x9980150
              (DeclRefExpr 0x9ded0a4 <col:35> 'const class std::locale' lvalue ParmVar 0x9decd10 '__loc' 'const class std::locale &')))))")
  (IfStmt 0x9ded660 <line:58:2, line:72:4>
    <<<NULL>>>
    (UnaryOperator 0x9ded1b8 <line:58:6, col:19> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9ded1a8 <col:7, col:19> '_Bool' <PointerToBoolean>
        (ImplicitCastExpr 0x9ded198 <col:7, col:19> 'const class locale::facet *' <LValueToRValue>
          (ArraySubscriptExpr 0x9ded180 <col:7, col:19> 'const class locale::facet *' lvalue
            (ImplicitCastExpr 0x9ded160 <col:7> 'const class locale::facet **' <LValueToRValue>
              (DeclRefExpr 0x9ded130 <col:7> 'const class locale::facet **' lvalue Var 0x9ded070 '__caches' 'const class locale::facet **'))
            (ImplicitCastExpr 0x9ded170 <col:16> 'size_t':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0x9ded148 <col:16> 'const size_t':'const unsigned int' lvalue Var 0x9decea0 '__i' 'const size_t':'const unsigned int'))))))
    (CompoundStmt 0x9ded640 <line:59:4, line:72:4>
      (DeclStmt 0x9ded2f0 <line:60:6, col:41>
        0x9ded2a0 "__numpunct_cache<_CharT> *__tmp =
          (IntegerLiteral 0x9ded2d8 <col:40> 'int' 0)")
      (IfStmt 0x9ded4d8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/locale_facets.tcc:65:8>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9ded300 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9ded4c0 </usr/include/c++/4.6/bits/locale_facets.tcc:62:8, line:65:8>
          (BinaryOperator 0x9ded420 <line:63:3, col:38> '<dependent type>' '='
            (DeclRefExpr 0x9ded310 <col:3> '__numpunct_cache<_CharT> *' lvalue Var 0x9ded2a0 '__tmp' '__numpunct_cache<_CharT> *')
            (CXXNewExpr 0x9ded3e8 <col:11, col:38> '__numpunct_cache<_CharT> *'))
          (CallExpr 0x9ded4a0 <line:64:3, col:24> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9ded450 <col:3, col:10> '<dependent type>' lvalue
              (DeclRefExpr 0x9ded438 <col:3> '__numpunct_cache<_CharT> *' lvalue Var 0x9ded2a0 '__tmp' '__numpunct_cache<_CharT> *'))
            (DeclRefExpr 0x9ded484 <col:19> 'const class std::locale' lvalue ParmVar 0x9decd10 '__loc' 'const class std::locale &')))
        <<<NULL>>>)
      (IfStmt 0x9ded560 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/locale_facets.tcc:70:8>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9ded4f8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9ded548 </usr/include/c++/4.6/bits/locale_facets.tcc:67:8, line:70:8>
          (CXXDeleteExpr 0x9ded520 <line:68:3, col:10> 'void'
            (DeclRefExpr 0x9ded508 <col:10> '__numpunct_cache<_CharT> *' lvalue Var 0x9ded2a0 '__tmp' '__numpunct_cache<_CharT> *'))
          (NullStmt 0x9ded538 <line:69:26>))
        <<<NULL>>>)
      (CallExpr 0x9ded618 <line:71:6, col:48> '<dependent type>'
        (MemberExpr 0x9ded5c4 <col:6, col:21> '<bound member function type>' ->_M_install_cache 0x99856d0
          (ImplicitCastExpr 0x9ded5b8 <col:6, col:12> 'class std::locale::_Impl *' <LValueToRValue>
            (MemberExpr 0x9ded594 <col:6, col:12> 'class std::locale::_Impl *const' lvalue ._M_impl 0x9980150
              (DeclRefExpr 0x9ded57c <col:6> 'const class std::locale' lvalue ParmVar 0x9decd10 '__loc' 'const class std::locale &'))))
        (DeclRefExpr 0x9ded5e4 <col:38> '__numpunct_cache<_CharT> *' lvalue Var 0x9ded2a0 '__tmp' '__numpunct_cache<_CharT> *')
        (DeclRefExpr 0x9ded5fc <col:45> 'const size_t':'const unsigned int' lvalue Var 0x9decea0 '__i' 'const size_t':'const unsigned int')))
    <<<NULL>>>)
  (ReturnStmt 0x9ded7d8 <line:73:2, col:67>
    (CXXStaticCastExpr 0x9ded7c0 <col:9, col:67> 'const __numpunct_cache<_CharT> *' static_cast<const __numpunct_cache<_CharT> *> <Dependent>
      (ArraySubscriptExpr 0x9ded760 <col:54, col:66> 'const class locale::facet *' lvalue
        (ImplicitCastExpr 0x9ded740 <col:54> 'const class locale::facet **' <LValueToRValue>
          (DeclRefExpr 0x9ded710 <col:54> 'const class locale::facet **' lvalue Var 0x9ded070 '__caches' 'const class locale::facet **'))
        (ImplicitCastExpr 0x9ded750 <col:63> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9ded728 <col:63> 'const size_t':'const unsigned int' lvalue Var 0x9decea0 '__i' 'const size_t':'const unsigned int'))))))


    };
    void _M_cache(const std::locale &__loc) (CompoundStmt 0x9df3b00 </usr/include/c++/4.6/bits/locale_facets.tcc:80:5, line:127:5>
  (BinaryOperator 0x9dedae8 <line:81:7, col:22> '<dependent type>' '='
    (MemberExpr 0x9dedab8 <col:7> '_Bool' lvalue ->_M_allocated 0x9dd1610
      (CXXThisExpr 0x9dedaa8 <col:7> '__numpunct_cache<_CharT> *' this))
    (CXXBoolLiteralExpr 0x9dedad8 <col:22> '_Bool' true))
  (DeclStmt 0x9dedd70 <line:83:7, col:73>
    0x9dedbf0 "const numpunct<_CharT> &__np =
      (CallExpr 0x9dedd50 <col:38, col:72> '<dependent type>'
        (UnresolvedLookupExpr 0x9dedcd0 <col:38, col:65> '<dependent type>' lvalue (ADL) = '1' 0x9bf5c50)
        (DeclRefExpr 0x9dedd38 <col:67> 'const class std::locale' lvalue ParmVar 0x9ded9c0 '__loc' 'const class std::locale &'))")
  (DeclStmt 0x9deddf0 <line:85:7, col:27>
    0x9dedd90 "char *__grouping =
      (ImplicitCastExpr 0x9dedde0 <col:26> 'char *' <NullToPointer>
        (IntegerLiteral 0x9deddc8 <col:26> 'int' 0))")
  (DeclStmt 0x9dede80 <line:86:7, col:29>
    0x9dede30 "_CharT *__truename =
      (IntegerLiteral 0x9dede68 <col:28> 'int' 0)")
  (DeclStmt 0x9dedef0 <line:87:7, col:30>
    0x9dedea0 "_CharT *__falsename =
      (IntegerLiteral 0x9deded8 <col:29> 'int' 0)")
  (IfStmt 0x9df39e0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/locale_facets.tcc:119:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9dedf00 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x9df3988 </usr/include/c++/4.6/bits/locale_facets.tcc:89:2, line:119:2>
      (BinaryOperator 0x9dee008 <line:90:4, col:44> '<dependent type>' '='
        (MemberExpr 0x9dedf20 <col:4> 'size_t':'unsigned int' lvalue ->_M_grouping_size 0x9dd1240
          (CXXThisExpr 0x9dedf10 <col:4> '__numpunct_cache<_CharT> *' this))
        (CallExpr 0x9dedfe8 <col:23, col:44> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9dedfb0 <col:23, col:39> '<dependent type>' lvalue
            (CallExpr 0x9dedf90 <col:23, col:37> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9dedf58 <col:23, col:28> '<dependent type>' lvalue
                (DeclRefExpr 0x9dedf40 <col:23> 'const numpunct<_CharT>' lvalue Var 0x9dedbf0 '__np' 'const numpunct<_CharT> &'))))))
      (BinaryOperator 0x9dee0b0 <line:91:4, col:21> 'char *' lvalue '='
        (DeclRefExpr 0x9dee020 <col:4> 'char *' lvalue Var 0x9dedd90 '__grouping' 'char *')
        (CXXNewExpr 0x9dee070 <col:17, col:21> 'char *'
          (MemberExpr 0x9dee048 <col:26> 'size_t':'unsigned int' lvalue ->_M_grouping_size 0x9dd1240
            (CXXThisExpr 0x9dee038 <col:26> '__numpunct_cache<_CharT> *' this))))
      (CallExpr 0x9dee1b8 <line:92:4, col:53> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9dee138 <col:4, col:20> '<dependent type>' lvalue
          (CallExpr 0x9dee118 <col:4, col:18> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9dee0e0 <col:4, col:9> '<dependent type>' lvalue
              (DeclRefExpr 0x9dee0c8 <col:4> 'const numpunct<_CharT>' lvalue Var 0x9dedbf0 '__np' 'const numpunct<_CharT> &'))))
        (DeclRefExpr 0x9dee16c <col:25> 'char *' lvalue Var 0x9dedd90 '__grouping' 'char *')
        (MemberExpr 0x9dee198 <col:37> 'size_t':'unsigned int' lvalue ->_M_grouping_size 0x9dd1240
          (CXXThisExpr 0x9dee188 <col:37> '__numpunct_cache<_CharT> *' this)))
      (BinaryOperator 0x9dee228 <line:93:4, col:18> '<dependent type>' '='
        (MemberExpr 0x9dee1f0 <col:4> 'const char *' lvalue ->_M_grouping 0x9dd1200
          (CXXThisExpr 0x9dee1e0 <col:4> '__numpunct_cache<_CharT> *' this))
        (DeclRefExpr 0x9dee210 <col:18> 'char *' lvalue Var 0x9dedd90 '__grouping' 'char *'))
      (BinaryOperator 0x9df2bd0 <line:94:4, line:97:50> '<dependent type>' '='
        (MemberExpr 0x9dee250 <line:94:4> '_Bool' lvalue ->_M_use_grouping 0x9dd1280
          (CXXThisExpr 0x9dee240 <col:4> '__numpunct_cache<_CharT> *' this))
        (ParenExpr 0x9df2bb8 <col:22, line:97:50> '<dependent type>'
          (BinaryOperator 0x9df2ba0 <line:94:23, line:97:49> '<dependent type>' '&&'
            (BinaryOperator 0x9dee368 <line:94:23, line:95:55> '<dependent type>' '&&'
              (MemberExpr 0x9dee280 <line:94:23> 'size_t':'unsigned int' lvalue ->_M_grouping_size 0x9dd1240
                (CXXThisExpr 0x9dee270 <col:23> '__numpunct_cache<_CharT> *' this))
              (BinaryOperator 0x9dee350 <line:95:12, col:55> '_Bool' '>'
                (ImplicitCastExpr 0x9dee340 <col:12, col:51> 'int' <IntegralCast>
                  (CXXStaticCastExpr 0x9dee310 <col:12, col:51> 'signed char' static_cast<signed char> <Dependent>
                    (ArraySubscriptExpr 0x9dee2e8 <col:37, col:50> '<dependent type>' lvalue
                      (MemberExpr 0x9dee2b0 <col:37> 'const char *' lvalue ->_M_grouping 0x9dd1200
                        (CXXThisExpr 0x9dee2a0 <col:37> '__numpunct_cache<_CharT> *' this))
                      (IntegerLiteral 0x9dee2d0 <col:49> 'int' 0))))
                (IntegerLiteral 0x9dee328 <col:55> 'int' 0)))
            (ParenExpr 0x9df2b88 <line:96:12, line:97:49> '<dependent type>'
              (CXXOperatorCallExpr 0x9df2b60 <line:96:13, line:97:44> '<dependent type>'
                (UnresolvedLookupExpr 0x9df2b08 <col:6, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b412d0 0x9ac7fa0 0x9b5e2b0 0x9ba7d20 0x9bc7160 0x9bc74d0 0x9cbb090 0x9cbb590 0x9cbbad0 0x9db08a0)
                (ArraySubscriptExpr 0x9dee3c8 <line:96:13, col:26> '<dependent type>' lvalue
                  (MemberExpr 0x9dee390 <col:13> 'const char *' lvalue ->_M_grouping 0x9dd1200
                    (CXXThisExpr 0x9dee380 <col:13> '__numpunct_cache<_CharT> *' this))
                  (IntegerLiteral 0x9dee3b0 <col:25> 'int' 0))
                (DeclRefExpr 0x9df2ae8 <line:97:9, col:44> 'const char':'const char' lvalue Var 0x9deeec0 '__max' 'const char':'const char'))))))
      (BinaryOperator 0x9df2ce0 <line:99:4, col:44> '<dependent type>' '='
        (MemberExpr 0x9df2bf8 <col:4> 'size_t':'unsigned int' lvalue ->_M_truename_size 0x9dd1320
          (CXXThisExpr 0x9df2be8 <col:4> '__numpunct_cache<_CharT> *' this))
        (CallExpr 0x9df2cc0 <col:23, col:44> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9df2c88 <col:23, col:39> '<dependent type>' lvalue
            (CallExpr 0x9df2c68 <col:23, col:37> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9df2c30 <col:23, col:28> '<dependent type>' lvalue
                (DeclRefExpr 0x9df2c18 <col:23> 'const numpunct<_CharT>' lvalue Var 0x9dedbf0 '__np' 'const numpunct<_CharT> &'))))))
      (BinaryOperator 0x9df2d88 <line:100:4, col:21> '<dependent type>' '='
        (DeclRefExpr 0x9df2cf8 <col:4> '_CharT *' lvalue Var 0x9dede30 '__truename' '_CharT *')
        (CXXNewExpr 0x9df2d48 <col:17, col:21> '_CharT *'
          (MemberExpr 0x9df2d20 <col:28> 'size_t':'unsigned int' lvalue ->_M_truename_size 0x9dd1320
            (CXXThisExpr 0x9df2d10 <col:28> '__numpunct_cache<_CharT> *' this))))
      (CallExpr 0x9df2e90 <line:101:4, col:53> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9df2e10 <col:4, col:20> '<dependent type>' lvalue
          (CallExpr 0x9df2df0 <col:4, col:18> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9df2db8 <col:4, col:9> '<dependent type>' lvalue
              (DeclRefExpr 0x9df2da0 <col:4> 'const numpunct<_CharT>' lvalue Var 0x9dedbf0 '__np' 'const numpunct<_CharT> &'))))
        (DeclRefExpr 0x9df2e44 <col:25> '_CharT *' lvalue Var 0x9dede30 '__truename' '_CharT *')
        (MemberExpr 0x9df2e70 <col:37> 'size_t':'unsigned int' lvalue ->_M_truename_size 0x9dd1320
          (CXXThisExpr 0x9df2e60 <col:37> '__numpunct_cache<_CharT> *' this)))
      (BinaryOperator 0x9df2f00 <line:102:4, col:18> '<dependent type>' '='
        (MemberExpr 0x9df2ec8 <col:4> 'const _CharT *' lvalue ->_M_truename 0x9dd12e0
          (CXXThisExpr 0x9df2eb8 <col:4> '__numpunct_cache<_CharT> *' this))
        (DeclRefExpr 0x9df2ee8 <col:18> '_CharT *' lvalue Var 0x9dede30 '__truename' '_CharT *'))
      (BinaryOperator 0x9df3010 <line:104:4, col:46> '<dependent type>' '='
        (MemberExpr 0x9df2f28 <col:4> 'size_t':'unsigned int' lvalue ->_M_falsename_size 0x9dd13a0
          (CXXThisExpr 0x9df2f18 <col:4> '__numpunct_cache<_CharT> *' this))
        (CallExpr 0x9df2ff0 <col:24, col:46> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9df2fb8 <col:24, col:41> '<dependent type>' lvalue
            (CallExpr 0x9df2f98 <col:24, col:39> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9df2f60 <col:24, col:29> '<dependent type>' lvalue
                (DeclRefExpr 0x9df2f48 <col:24> 'const numpunct<_CharT>' lvalue Var 0x9dedbf0 '__np' 'const numpunct<_CharT> &'))))))
      (BinaryOperator 0x9df30b8 <line:105:4, col:22> '<dependent type>' '='
        (DeclRefExpr 0x9df3028 <col:4> '_CharT *' lvalue Var 0x9dedea0 '__falsename' '_CharT *')
        (CXXNewExpr 0x9df3078 <col:18, col:22> '_CharT *'
          (MemberExpr 0x9df3050 <col:29> 'size_t':'unsigned int' lvalue ->_M_falsename_size 0x9dd13a0
            (CXXThisExpr 0x9df3040 <col:29> '__numpunct_cache<_CharT> *' this))))
      (CallExpr 0x9df31c0 <line:106:4, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9df3140 <col:4, col:21> '<dependent type>' lvalue
          (CallExpr 0x9df3120 <col:4, col:19> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9df30e8 <col:4, col:9> '<dependent type>' lvalue
              (DeclRefExpr 0x9df30d0 <col:4> 'const numpunct<_CharT>' lvalue Var 0x9dedbf0 '__np' 'const numpunct<_CharT> &'))))
        (DeclRefExpr 0x9df3174 <col:26> '_CharT *' lvalue Var 0x9dedea0 '__falsename' '_CharT *')
        (MemberExpr 0x9df31a0 <col:39> 'size_t':'unsigned int' lvalue ->_M_falsename_size 0x9dd13a0
          (CXXThisExpr 0x9df3190 <col:39> '__numpunct_cache<_CharT> *' this)))
      (BinaryOperator 0x9df3230 <line:107:4, col:19> '<dependent type>' '='
        (MemberExpr 0x9df31f8 <col:4> 'const _CharT *' lvalue ->_M_falsename 0x9dd1360
          (CXXThisExpr 0x9df31e8 <col:4> '__numpunct_cache<_CharT> *' this))
        (DeclRefExpr 0x9df3218 <col:19> '_CharT *' lvalue Var 0x9dedea0 '__falsename' '_CharT *'))
      (BinaryOperator 0x9df32e8 <line:109:4, col:42> '<dependent type>' '='
        (MemberExpr 0x9df3258 <col:4> '_CharT' lvalue ->_M_decimal_point 0x9dd13e0
          (CXXThisExpr 0x9df3248 <col:4> '__numpunct_cache<_CharT> *' this))
        (CallExpr 0x9df32c8 <col:23, col:42> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9df3290 <col:23, col:28> '<dependent type>' lvalue
            (DeclRefExpr 0x9df3278 <col:23> 'const numpunct<_CharT>' lvalue Var 0x9dedbf0 '__np' 'const numpunct<_CharT> &'))))
      (BinaryOperator 0x9df33a0 <line:110:4, col:42> '<dependent type>' '='
        (MemberExpr 0x9df3310 <col:4> '_CharT' lvalue ->_M_thousands_sep 0x9dd1420
          (CXXThisExpr 0x9df3300 <col:4> '__numpunct_cache<_CharT> *' this))
        (CallExpr 0x9df3380 <col:23, col:42> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9df3348 <col:23, col:28> '<dependent type>' lvalue
            (DeclRefExpr 0x9df3330 <col:23> 'const numpunct<_CharT>' lvalue Var 0x9dedbf0 '__np' 'const numpunct<_CharT> &'))))
      (DeclStmt 0x9df3600 <line:112:4, col:64>
        0x9df3480 "const ctype<_CharT> &__ct =
          (CallExpr 0x9df35e0 <col:32, col:63> '<dependent type>'
            (UnresolvedLookupExpr 0x9df3560 <col:32, col:56> '<dependent type>' lvalue (ADL) = '1' 0x9bf5c50)
            (DeclRefExpr 0x9df35c8 <col:58> 'const class std::locale' lvalue ParmVar 0x9ded9c0 '__loc' 'const class std::locale &'))")
      (CallExpr 0x9df37c0 <line:113:4, line:115:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9df3628 <line:113:4, col:9> '<dependent type>' lvalue
          (DeclRefExpr 0x9df3610 <col:4> 'const ctype<_CharT>' lvalue Var 0x9df3480 '__ct' 'const ctype<_CharT> &'))
        (DeclRefExpr 0x9df367c <col:15, col:27> 'const char *' lvalue Var 0x9dd09b0 '_S_atoms_out' 'const char *')
        (BinaryOperator 0x9df3778 <line:114:8, line:115:22> 'const char *' '+'
          (ImplicitCastExpr 0x9df3758 <line:114:8, col:20> 'const char *' <LValueToRValue>
            (DeclRefExpr 0x9df36bc <col:8, col:20> 'const char *' lvalue Var 0x9dd09b0 '_S_atoms_out' 'const char *'))
          (ImplicitCastExpr 0x9df3768 <line:115:10, col:22> 'int' <IntegralCast>
            (DeclRefExpr 0x9df36fc <col:10, col:22> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>' EnumConstant 0x9dd0900 '_S_oend' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')))
        (MemberExpr 0x9df37a0 <col:31> '_CharT [36]' lvalue ->_M_atoms_out 0x9dd1500
          (CXXThisExpr 0x9df3790 <col:31> '__numpunct_cache<_CharT> *' this)))
      (CallExpr 0x9df3960 <line:116:4, line:118:42> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9df3800 <line:116:4, col:9> '<dependent type>' lvalue
          (DeclRefExpr 0x9df37e8 <col:4> 'const ctype<_CharT>' lvalue Var 0x9df3480 '__ct' 'const ctype<_CharT> &'))
        (DeclRefExpr 0x9df3854 <col:15, col:27> 'const char *' lvalue Var 0x9dd0a00 '_S_atoms_in' 'const char *')
        (BinaryOperator 0x9df3918 <line:117:8, line:118:22> 'const char *' '+'
          (ImplicitCastExpr 0x9df38f8 <line:117:8, col:20> 'const char *' <LValueToRValue>
            (DeclRefExpr 0x9df3894 <col:8, col:20> 'const char *' lvalue Var 0x9dd0a00 '_S_atoms_in' 'const char *'))
          (ImplicitCastExpr 0x9df3908 <line:118:10, col:22> 'int' <IntegralCast>
            (DeclRefExpr 0x9df38d4 <col:10, col:22> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x9dd0cf0 '_S_iend' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))
        (MemberExpr 0x9df3940 <col:31> '_CharT [26]' lvalue ->_M_atoms_in 0x9dd15d0
          (CXXThisExpr 0x9df3930 <col:31> '__numpunct_cache<_CharT> *' this))))
    <<<NULL>>>)
  (IfStmt 0x9df3ae0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/locale_facets.tcc:126:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9df3a00 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9df3ac0 </usr/include/c++/4.6/bits/locale_facets.tcc:121:2, line:126:2>
      (CXXDeleteExpr 0x9df3a38 <line:122:4, col:14> 'void'
        (ImplicitCastExpr 0x9df3a28 <col:14> 'void *' <NoOp>
          (DeclRefExpr 0x9df3a10 <col:14> 'char *' lvalue Var 0x9dedd90 '__grouping' 'char *')))
      (CXXDeleteExpr 0x9df3a68 <line:123:4, col:14> 'void'
        (DeclRefExpr 0x9df3a50 <col:14> '_CharT *' lvalue Var 0x9dede30 '__truename' '_CharT *'))
      (CXXDeleteExpr 0x9df3a98 <line:124:4, col:14> 'void'
        (DeclRefExpr 0x9df3a80 <col:14> '_CharT *' lvalue Var 0x9dedea0 '__falsename' '_CharT *'))
      (NullStmt 0x9df3ab0 <line:125:27>))
    <<<NULL>>>))


    bool __verify_grouping(const char *__grouping, size_t __grouping_size, const string &__grouping_tmp) throw();
    _InIter _M_extract_float(_InIter __beg, _InIter __end, std::ios_base &__io, ios_base::iostate &__err, string &__xtrc) const (CompoundStmt 0x9df93e0 </usr/include/c++/4.6/bits/locale_facets.tcc:148:5, line:365:5>
  (DeclStmt 0x9df4360 <line:149:7, col:50>
    0x9df4330 "typedef char_traits<_CharT> __traits_type")
  (DeclStmt 0x9df4450 <line:150:7, col:69>
    0x9df4420 "typedef __numpunct_cache<_CharT> __cache_type")
  (DeclStmt 0x9df4558 <line:151:7, col:37>
    0x9df4520 "__use_cache<__cache_type> __uc")
  (DeclStmt 0x9df4620 <line:152:7, col:45>
    0x9df4580 "const std::locale &__loc =
      (CXXMemberCallExpr 0x9df45f0 <col:29, col:44> 'const class std::locale' lvalue
        (MemberExpr 0x9df45cc <col:29, col:34> '<bound member function type>' ._M_getloc 0x9d623d0
          (ImplicitCastExpr 0x9df4610 <col:29> 'const class std::ios_base' lvalue <NoOp>
            (DeclRefExpr 0x9df45b4 <col:29> 'class std::ios_base' lvalue ParmVar 0x9df4070 '__io' 'class std::ios_base &'))))")
  (DeclStmt 0x9df46e8 <line:153:7, col:45>
    0x9df4660 "const __cache_type *__lc =
      (CallExpr 0x9df46c8 <col:34, col:44> '<dependent type>'
        (DeclRefExpr 0x9df4694 <col:34> '__use_cache<__cache_type>' lvalue Var 0x9df4520 '__uc' '__use_cache<__cache_type>')
        (DeclRefExpr 0x9df46ac <col:39> 'const class std::locale' lvalue Var 0x9df4580 '__loc' 'const class std::locale &'))")
  (DeclStmt 0x9df47b8 <line:154:7, col:46>
    0x9df4730 "const _CharT *__lit =
      (CXXDependentScopeMemberExpr 0x9df4780 <col:29, col:35> '<dependent type>' lvalue
        (DeclRefExpr 0x9df4764 <col:29> 'const __cache_type *' lvalue Var 0x9df4660 '__lc' 'const __cache_type *'))")
  (DeclStmt 0x9df4828 <line:155:7, col:34>
    0x9df47d0 "char_type __c =
      (CXXUnresolvedConstructExpr 0x9df4810 <col:23, col:33> 'char_type':'_CharT')")
  (DeclStmt 0x9df4930 <line:158:7, col:38>
    0x9df4840 "bool __testeof =
      (CXXOperatorCallExpr 0x9df4908 <col:24, col:33> '<dependent type>'
        (UnresolvedLookupExpr 0x9df48a8 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90 0x9cb91e0 0x9cb9c50 0x9cba490 0x9cbaa00 0x9db0390)
        (DeclRefExpr 0x9df4874 <col:24> '_InIter' lvalue ParmVar 0x9df3fe0 '__beg' '_InIter')
        (DeclRefExpr 0x9df488c <col:33> '_InIter' lvalue ParmVar 0x9df4020 '__end' '_InIter'))")
  (IfStmt 0x9df5290 <line:161:7, line:175:2>
    <<<NULL>>>
    (UnaryOperator 0x9df4968 <line:161:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9df4958 <col:12> '_Bool' <LValueToRValue>
        (DeclRefExpr 0x9df4940 <col:12> '_Bool' lvalue Var 0x9df4840 '__testeof' '_Bool')))
    (CompoundStmt 0x9df5270 <line:162:2, line:175:2>
      (BinaryOperator 0x9df49c8 <line:163:4, col:11> '<dependent type>' '='
        (DeclRefExpr 0x9df497c <col:4> 'char_type':'_CharT' lvalue Var 0x9df47d0 '__c' 'char_type':'_CharT')
        (UnaryOperator 0x9df49b0 <col:10, col:11> '<dependent type>' prefix '*'
          (DeclRefExpr 0x9df4994 <col:11> '_InIter' lvalue ParmVar 0x9df3fe0 '__beg' '_InIter')))
      (DeclStmt 0x9df4b38 <line:164:4, col:58>
        0x9df49f0 "const bool __plus =
          (CXXOperatorCallExpr 0x9df4b10 <col:24, col:57> '<dependent type>'
            (UnresolvedLookupExpr 0x9df4ab0 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90 0x9cb91e0 0x9cb9c50 0x9cba490 0x9cbaa00 0x9db0390)
            (DeclRefExpr 0x9df4a24 <col:24> 'char_type':'_CharT' lvalue Var 0x9df47d0 '__c' 'char_type':'_CharT')
            (ArraySubscriptExpr 0x9df4a98 <col:31, col:57> '<dependent type>' lvalue
              (DeclRefExpr 0x9df4a3c <col:31> 'const _CharT *' lvalue Var 0x9df4730 '__lit' 'const _CharT *')
              (DeclRefExpr 0x9df4a74 <col:37, col:49> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x9dd0ae0 '_S_iplus' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))")
      (IfStmt 0x9df5250 <line:165:4, line:174:6>
        <<<NULL>>>
        (BinaryOperator 0x9df4f60 <line:165:8, line:167:42> '<dependent type>' '&&'
          (BinaryOperator 0x9df4e28 <line:165:8, line:166:67> '<dependent type>' '&&'
            (ParenExpr 0x9df4c88 <line:165:8, col:54> '<dependent type>'
              (BinaryOperator 0x9df4c70 <col:9, col:53> '<dependent type>' '||'
                (DeclRefExpr 0x9df4b48 <col:9> 'const _Bool' lvalue Var 0x9df49f0 '__plus' 'const _Bool')
                (CXXOperatorCallExpr 0x9df4c48 <col:19, col:53> '<dependent type>'
                  (UnresolvedLookupExpr 0x9df4be8 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90 0x9cb91e0 0x9cb9c50 0x9cba490 0x9cbaa00 0x9db0390)
                  (DeclRefExpr 0x9df4b60 <col:19> 'char_type':'_CharT' lvalue Var 0x9df47d0 '__c' 'char_type':'_CharT')
                  (ArraySubscriptExpr 0x9df4bd0 <col:26, col:53> '<dependent type>' lvalue
                    (DeclRefExpr 0x9df4b78 <col:26> 'const _CharT *' lvalue Var 0x9df4730 '__lit' 'const _CharT *')
                    (DeclRefExpr 0x9df4bac <col:32, col:44> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x9dd0aa0 '_S_iminus' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))))
            (UnaryOperator 0x9df4e10 <line:166:11, col:67> '<dependent type>' prefix '!'
              (ParenExpr 0x9df4df8 <col:12, col:67> '<dependent type>'
                (BinaryOperator 0x9df4de0 <col:13, col:51> '<dependent type>' '&&'
                  (CXXDependentScopeMemberExpr 0x9df4cb8 <col:13, col:19> '<dependent type>' lvalue
                    (DeclRefExpr 0x9df4c9c <col:13> 'const __cache_type *' lvalue Var 0x9df4660 '__lc' 'const __cache_type *'))
                  (CXXOperatorCallExpr 0x9df4db8 <col:38, col:51> '<dependent type>'
                    (UnresolvedLookupExpr 0x9df4d58 <col:42, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90 0x9cb91e0 0x9cb9c50 0x9cba490 0x9cbaa00 0x9db0390)
                    (DeclRefExpr 0x9df4cec <col:38> 'char_type':'_CharT' lvalue Var 0x9df47d0 '__c' 'char_type':'_CharT')
                    (CXXDependentScopeMemberExpr 0x9df4d20 <col:45, col:51> '<dependent type>' lvalue
                      (DeclRefExpr 0x9df4d04 <col:45> 'const __cache_type *' lvalue Var 0x9df4660 '__lc' 'const __cache_type *')))))))
          (UnaryOperator 0x9df4f48 <line:167:11, col:42> '<dependent type>' prefix '!'
            (ParenExpr 0x9df4f30 <col:12, col:42> '<dependent type>'
              (CXXOperatorCallExpr 0x9df4f08 <col:13, col:26> '<dependent type>'
                (UnresolvedLookupExpr 0x9df4ea8 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90 0x9cb91e0 0x9cb9c50 0x9cba490 0x9cbaa00 0x9db0390)
                (DeclRefExpr 0x9df4e40 <col:13> 'char_type':'_CharT' lvalue Var 0x9df47d0 '__c' 'char_type':'_CharT')
                (CXXDependentScopeMemberExpr 0x9df4e70 <col:20, col:26> '<dependent type>' lvalue
                  (DeclRefExpr 0x9df4e58 <col:20> 'const __cache_type *' lvalue Var 0x9df4660 '__lc' 'const __cache_type *'))))))
        (CompoundStmt 0x9df5238 <line:168:6, line:174:6>
          (CXXOperatorCallExpr 0x9df5088 <line:169:8, col:33> 'class std::basic_string<char>' lvalue
            (ImplicitCastExpr 0x9df5078 <col:15, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9df5028 <col:15, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0x9cff4f0 'operator+=' 'class std::basic_string<char> &(char)'))
            (DeclRefExpr 0x9df4f78 <col:8> 'string':'class std::basic_string<char>' lvalue ParmVar 0x9df4130 '__xtrc' 'string &')
            (ConditionalOperator 0x9df4fe8 <col:18, col:33> 'char'
              (ImplicitCastExpr 0x9df4fd8 <col:18> '_Bool' <LValueToRValue>
                (DeclRefExpr 0x9df4f90 <col:18> 'const _Bool' lvalue Var 0x9df49f0 '__plus' 'const _Bool'))
              (CharacterLiteral 0x9df4fa8 <col:27> 'char'43)
              (CharacterLiteral 0x9df4fc0 <col:33> 'char'45)))
          (IfStmt 0x9df5218 <line:170:8, line:173:15>
            <<<NULL>>>
            (CXXOperatorCallExpr 0x9df5150 <line:170:12, col:23> '<dependent type>'
              (UnresolvedLookupExpr 0x9df50f8 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b412d0 0x9ac7fa0 0x9b5e2b0 0x9ba7d20 0x9bc7160 0x9bc74d0 0x9cbb090 0x9cbb590 0x9cbbad0 0x9db08a0)
              (UnaryOperator 0x9df50c8 <col:12, col:14> '<dependent type>' prefix '++'
                (DeclRefExpr 0x9df50ac <col:14> '_InIter' lvalue ParmVar 0x9df3fe0 '__beg' '_InIter'))
              (DeclRefExpr 0x9df50dc <col:23> '_InIter' lvalue ParmVar 0x9df4020 '__end' '_InIter'))
            (BinaryOperator 0x9df51c0 <line:171:3, col:10> '<dependent type>' '='
              (DeclRefExpr 0x9df5174 <col:3> 'char_type':'_CharT' lvalue Var 0x9df47d0 '__c' 'char_type':'_CharT')
              (UnaryOperator 0x9df51a8 <col:9, col:10> '<dependent type>' prefix '*'
                (DeclRefExpr 0x9df518c <col:10> '_InIter' lvalue ParmVar 0x9df3fe0 '__beg' '_InIter')))
            (BinaryOperator 0x9df5200 <line:173:3, col:15> '_Bool' lvalue '='
              (DeclRefExpr 0x9df51d8 <col:3> '_Bool' lvalue Var 0x9df4840 '__testeof' '_Bool')
              (CXXBoolLiteralExpr 0x9df51f0 <col:15> '_Bool' true))))
        <<<NULL>>>))
    <<<NULL>>>)
  (DeclStmt 0x9df5308 <line:178:7, col:36>
    0x9df52c0 "bool __found_mantissa =
      (CXXBoolLiteralExpr 0x9df52f8 <col:31> '_Bool' false)")
  (DeclStmt 0x9df5380 <line:179:7, col:24>
    0x9df5330 "int __sep_pos =
      (IntegerLiteral 0x9df5368 <col:23> 'int' 0)")
  (WhileStmt 0x9df5ad0 <line:180:7, line:201:2>
    <<<NULL>>>
    (UnaryOperator 0x9df53b8 <line:180:14, col:15> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9df53a8 <col:15> '_Bool' <LValueToRValue>
        (DeclRefExpr 0x9df5390 <col:15> '_Bool' lvalue Var 0x9df4840 '__testeof' '_Bool')))
    (CompoundStmt 0x9df5ab8 <line:181:2, line:201:2>
      (IfStmt 0x9df5a98 <line:182:4, line:200:6>
        <<<NULL>>>
        (BinaryOperator 0x9df5630 <line:182:8, line:183:24> '<dependent type>' '||'
          (ParenExpr 0x9df5528 <line:182:8, col:63> '<dependent type>'
            (BinaryOperator 0x9df5510 <col:9, col:47> '<dependent type>' '&&'
              (CXXDependentScopeMemberExpr 0x9df53e8 <col:9, col:15> '<dependent type>' lvalue
                (DeclRefExpr 0x9df53cc <col:9> 'const __cache_type *' lvalue Var 0x9df4660 '__lc' 'const __cache_type *'))
              (CXXOperatorCallExpr 0x9df54e8 <col:34, col:47> '<dependent type>'
                (UnresolvedLookupExpr 0x9df5488 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90 0x9cb91e0 0x9cb9c50 0x9cba490 0x9cbaa00 0x9db0390)
                (DeclRefExpr 0x9df541c <col:34> 'char_type':'_CharT' lvalue Var 0x9df47d0 '__c' 'char_type':'_CharT')
                (CXXDependentScopeMemberExpr 0x9df5450 <col:41, col:47> '<dependent type>' lvalue
                  (DeclRefExpr 0x9df5434 <col:41> 'const __cache_type *' lvalue Var 0x9df4660 '__lc' 'const __cache_type *')))))
          (CXXOperatorCallExpr 0x9df5608 <line:183:11, col:24> '<dependent type>'
            (UnresolvedLookupExpr 0x9df55a8 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90 0x9cb91e0 0x9cb9c50 0x9cba490 0x9cbaa00 0x9db0390)
            (DeclRefExpr 0x9df553c <col:11> 'char_type':'_CharT' lvalue Var 0x9df47d0 '__c' 'char_type':'_CharT')
            (CXXDependentScopeMemberExpr 0x9df5570 <col:18, col:24> '<dependent type>' lvalue
              (DeclRefExpr 0x9df5554 <col:18> 'const __cache_type *' lvalue Var 0x9df4660 '__lc' 'const __cache_type *'))))
        (BreakStmt 0x9df5648 <line:184:6>)
        (IfStmt 0x9df5a78 <line:185:9, line:200:6>
          <<<NULL>>>
          (CXXOperatorCallExpr 0x9df5738 <line:185:13, col:46> '<dependent type>'
            (UnresolvedLookupExpr 0x9df56d8 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90 0x9cb91e0 0x9cb9c50 0x9cba490 0x9cbaa00 0x9db0390)
            (DeclRefExpr 0x9df5650 <col:13> 'char_type':'_CharT' lvalue Var 0x9df47d0 '__c' 'char_type':'_CharT')
            (ArraySubscriptExpr 0x9df56c0 <col:20, col:46> '<dependent type>' lvalue
              (DeclRefExpr 0x9df5668 <col:20> 'const _CharT *' lvalue Var 0x9df4730 '__lit' 'const _CharT *')
              (DeclRefExpr 0x9df569c <col:26, col:38> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x9dd0ba0 '_S_izero' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))
          (CompoundStmt 0x9df5a50 <line:186:6, line:198:6>
            (IfStmt 0x9df5878 <line:187:8, line:191:3>
              <<<NULL>>>
              (UnaryOperator 0x9df5788 <line:187:12, col:13> '_Bool' prefix '!'
                (ImplicitCastExpr 0x9df5778 <col:13> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0x9df575c <col:13> '_Bool' lvalue Var 0x9df52c0 '__found_mantissa' '_Bool')))
              (CompoundStmt 0x9df5860 <line:188:3, line:191:3>
                (CXXOperatorCallExpr 0x9df57f8 <line:189:5, col:15> 'class std::basic_string<char>' lvalue
                  (ImplicitCastExpr 0x9df57e8 <col:12, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                    (DeclRefExpr 0x9df57d0 <col:12, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0x9cff4f0 'operator+=' 'class std::basic_string<char> &(char)'))
                  (DeclRefExpr 0x9df579c <col:5> 'string':'class std::basic_string<char>' lvalue ParmVar 0x9df4130 '__xtrc' 'string &')
                  (CharacterLiteral 0x9df57b8 <col:15> 'char'48))
                (BinaryOperator 0x9df5848 <line:190:5, col:24> '_Bool' lvalue '='
                  (DeclRefExpr 0x9df581c <col:5> '_Bool' lvalue Var 0x9df52c0 '__found_mantissa' '_Bool')
                  (CXXBoolLiteralExpr 0x9df5838 <col:24> '_Bool' true)))
              <<<NULL>>>)
            (UnaryOperator 0x9df58b0 <line:192:8, col:10> 'int' lvalue prefix '++'
              (DeclRefExpr 0x9df5894 <col:10> 'int' lvalue Var 0x9df5330 '__sep_pos' 'int'))
            (IfStmt 0x9df5a30 <line:194:8, line:197:15>
              <<<NULL>>>
              (CXXOperatorCallExpr 0x9df5968 <line:194:12, col:23> '<dependent type>'
                (UnresolvedLookupExpr 0x9df5910 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b412d0 0x9ac7fa0 0x9b5e2b0 0x9ba7d20 0x9bc7160 0x9bc74d0 0x9cbb090 0x9cbb590 0x9cbbad0 0x9db08a0)
                (UnaryOperator 0x9df58e0 <col:12, col:14> '<dependent type>' prefix '++'
                  (DeclRefExpr 0x9df58c4 <col:14> '_InIter' lvalue ParmVar 0x9df3fe0 '__beg' '_InIter'))
                (DeclRefExpr 0x9df58f4 <col:23> '_InIter' lvalue ParmVar 0x9df4020 '__end' '_InIter'))
              (BinaryOperator 0x9df59d8 <line:195:3, col:10> '<dependent type>' '='
                (DeclRefExpr 0x9df598c <col:3> 'char_type':'_CharT' lvalue Var 0x9df47d0 '__c' 'char_type':'_CharT')
                (UnaryOperator 0x9df59c0 <col:9, col:10> '<dependent type>' prefix '*'
                  (DeclRefExpr 0x9df59a4 <col:10> '_InIter' lvalue ParmVar 0x9df3fe0 '__beg' '_InIter')))
              (BinaryOperator 0x9df5a18 <line:197:3, col:15> '_Bool' lvalue '='
                (DeclRefExpr 0x9df59f0 <col:3> '_Bool' lvalue Var 0x9df4840 '__testeof' '_Bool')
                (CXXBoolLiteralExpr 0x9df5a08 <col:15> '_Bool' true))))
          (BreakStmt 0x9df5a70 <line:200:6>)))))
  (DeclStmt 0x9df5b38 <line:204:7, col:31>
    0x9df5af0 "bool __found_dec =
      (CXXBoolLiteralExpr 0x9df5b28 <col:26> '_Bool' false)")
  (DeclStmt 0x9df5b98 <line:205:7, col:31>
    0x9df5b50 "bool __found_sci =
      (CXXBoolLiteralExpr 0x9df5b88 <col:26> '_Bool' false)")
  (DeclStmt 0x9df5c08 <line:206:7, col:30>
    0x9df5bb0 "string __found_grouping =
      (CXXConstructExpr 0x9df5be8 <col:14> 'string':'class std::basic_string<char>''void (void)')")
  (IfStmt 0x9df5ce8 <line:207:7, line:208:29>
    <<<NULL>>>
    (CXXDependentScopeMemberExpr 0x9df5c30 <line:207:11, col:17> '<dependent type>' lvalue
      (DeclRefExpr 0x9df5c18 <col:11> 'const __cache_type *' lvalue Var 0x9df4660 '__lc' 'const __cache_type *'))
    (CXXMemberCallExpr 0x9df5cb8 <line:208:2, col:29> 'void'
      (MemberExpr 0x9df5c7c <col:2, col:19> '<bound member function type>' .reserve 0x9cfe0b0
        (DeclRefExpr 0x9df5c64 <col:2> 'string':'class std::basic_string<char>' lvalue Var 0x9df5bb0 '__found_grouping' 'string':'class std::basic_string<char>'))
      (ImplicitCastExpr 0x9df5cd8 <col:27> 'size_type':'unsigned int' <IntegralCast>
        (IntegerLiteral 0x9df5ca0 <col:27> 'int' 32)))
    <<<NULL>>>)
  (DeclStmt 0x9df5e20 <line:209:7, col:65>
    0x9df5d20 "const char_type *__lit_zero =
      (CXXOperatorCallExpr 0x9df5df8 <col:37, col:57> '<dependent type>'
        (UnresolvedLookupExpr 0x9df5db0 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9ce1500 0x9ce2100 0x9cb8030 0x9cb8830)
        (DeclRefExpr 0x9df5d54 <col:37> 'const _CharT *' lvalue Var 0x9df4730 '__lit' 'const _CharT *')
        (DeclRefExpr 0x9df5d8c <col:45, col:57> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x9dd0ba0 '_S_izero' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>'))")
  (IfStmt 0x9df8f98 <line:211:7, line:348:4>
    <<<NULL>>>
    (UnaryOperator 0x9df5e80 <line:211:11, col:18> '<dependent type>' prefix '!'
      (CXXDependentScopeMemberExpr 0x9df5e48 <col:12, col:18> '<dependent type>' lvalue
        (DeclRefExpr 0x9df5e30 <col:12> 'const __cache_type *' lvalue Var 0x9df4660 '__lc' 'const __cache_type *')))
    (WhileStmt 0x9df7370 <line:213:2, line:258:4>
      <<<NULL>>>
      (UnaryOperator 0x9df5ec0 <line:213:9, col:10> '_Bool' prefix '!'
        (ImplicitCastExpr 0x9df5eb0 <col:10> '_Bool' <LValueToRValue>
          (DeclRefExpr 0x9df5e94 <col:10> '_Bool' lvalue Var 0x9df4840 '__testeof' '_Bool')))
      (CompoundStmt 0x9df7350 <line:214:4, line:258:4>
        (DeclStmt 0x9df5fe8 <line:215:6, col:54>
          0x9df5ef0 "const int __digit =
            (CallExpr 0x9df5fc0 <col:26, col:53> '<dependent type>'
              (UnresolvedMemberExpr 0x9df5f38 <col:26> '<bound member function type>' lvalue)
              (DeclRefExpr 0x9df5f78 <col:34> 'const char_type *' lvalue Var 0x9df5d20 '__lit_zero' 'const char_type *')
              (IntegerLiteral 0x9df5f90 <col:46> 'int' 10)
              (DeclRefExpr 0x9df5fa8 <col:50> 'char_type':'_CharT' lvalue Var 0x9df47d0 '__c' 'char_type':'_CharT'))")
        (IfStmt 0x9df71a8 <line:216:6, line:252:8>
          <<<NULL>>>
          (BinaryOperator 0x9df6050 <line:216:10, col:22> '_Bool' '!='
            (ImplicitCastExpr 0x9df6040 <col:10> 'int' <LValueToRValue>
              (DeclRefExpr 0x9df5ff8 <col:10> 'const int' lvalue Var 0x9df5ef0 '__digit' 'const int'))
            (UnaryOperator 0x9df6028 <col:21, col:22> 'int' prefix '-'
              (IntegerLiteral 0x9df6010 <col:22> 'int' 1)))
          (CompoundStmt 0x9df6188 <line:217:8, line:220:8>
            (CXXOperatorCallExpr 0x9df6120 <line:218:3, col:19> 'class std::basic_string<char>' lvalue
              (ImplicitCastExpr 0x9df6110 <col:10, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9df60f8 <col:10, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0x9cff4f0 'operator+=' 'class std::basic_string<char> &(char)'))
              (DeclRefExpr 0x9df6068 <col:3> 'string':'class std::basic_string<char>' lvalue ParmVar 0x9df4130 '__xtrc' 'string &')
              (ImplicitCastExpr 0x9df60e8 <col:13, col:19> 'char':'char' <IntegralCast>
                (BinaryOperator 0x9df60d0 <col:13, col:19> 'int' '+'
                  (ImplicitCastExpr 0x9df60b0 <col:13> 'int' <IntegralCast>
                    (CharacterLiteral 0x9df6080 <col:13> 'char'48))
                  (ImplicitCastExpr 0x9df60c0 <col:19> 'int' <LValueToRValue>
                    (DeclRefExpr 0x9df6094 <col:19> 'const int' lvalue Var 0x9df5ef0 '__digit' 'const int')))))
            (BinaryOperator 0x9df6170 <line:219:3, col:22> '_Bool' lvalue '='
              (DeclRefExpr 0x9df6144 <col:3> '_Bool' lvalue Var 0x9df52c0 '__found_mantissa' '_Bool')
              (CXXBoolLiteralExpr 0x9df6160 <col:22> '_Bool' true)))
          (IfStmt 0x9df7188 <line:221:11, line:252:8>
            <<<NULL>>>
            (BinaryOperator 0x9df6328 <line:221:15, line:222:28> '<dependent type>' '&&'
              (BinaryOperator 0x9df62d0 <line:221:15, line:222:12> '<dependent type>' '&&'
                (CXXOperatorCallExpr 0x9df6268 <line:221:15, col:28> '<dependent type>'
                  (UnresolvedLookupExpr 0x9df6208 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90 0x9cb91e0 0x9cb9c50 0x9cba490 0x9cbaa00 0x9db0390)
                  (DeclRefExpr 0x9df61a0 <col:15> 'char_type':'_CharT' lvalue Var 0x9df47d0 '__c' 'char_type':'_CharT')
                  (CXXDependentScopeMemberExpr 0x9df61d0 <col:22, col:28> '<dependent type>' lvalue
                    (DeclRefExpr 0x9df61b8 <col:22> 'const __cache_type *' lvalue Var 0x9df4660 '__lc' 'const __cache_type *')))
                (UnaryOperator 0x9df62b8 <line:222:11, col:12> '_Bool' prefix '!'
                  (ImplicitCastExpr 0x9df62a8 <col:12> '_Bool' <LValueToRValue>
                    (DeclRefExpr 0x9df628c <col:12> '_Bool' lvalue Var 0x9df5af0 '__found_dec' '_Bool'))))
              (UnaryOperator 0x9df6310 <col:27, col:28> '_Bool' prefix '!'
                (ImplicitCastExpr 0x9df6300 <col:28> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0x9df62e8 <col:28> '_Bool' lvalue Var 0x9df5b50 '__found_sci' '_Bool'))))
            (CompoundStmt 0x9df6400 <line:223:8, line:226:8>
              (CXXOperatorCallExpr 0x9df6398 <line:224:3, col:13> 'class std::basic_string<char>' lvalue
                (ImplicitCastExpr 0x9df6388 <col:10, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                  (DeclRefExpr 0x9df6370 <col:10, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0x9cff4f0 'operator+=' 'class std::basic_string<char> &(char)'))
                (DeclRefExpr 0x9df6340 <col:3> 'string':'class std::basic_string<char>' lvalue ParmVar 0x9df4130 '__xtrc' 'string &')
                (CharacterLiteral 0x9df6358 <col:13> 'char'46))
              (BinaryOperator 0x9df63e8 <line:225:3, col:17> '_Bool' lvalue '='
                (DeclRefExpr 0x9df63bc <col:3> '_Bool' lvalue Var 0x9df5af0 '__found_dec' '_Bool')
                (CXXBoolLiteralExpr 0x9df63d8 <col:17> '_Bool' true)))
            (IfStmt 0x9df7168 <line:227:11, line:252:8>
              <<<NULL>>>
              (BinaryOperator 0x9df6af8 <line:227:15, line:229:27> '<dependent type>' '&&'
                (BinaryOperator 0x9df66a8 <line:227:15, line:229:12> '<dependent type>' '&&'
                  (ParenExpr 0x9df6650 <line:227:15, line:228:43> '<dependent type>'
                    (BinaryOperator 0x9df6638 <line:227:16, line:228:42> '<dependent type>' '||'
                      (CXXOperatorCallExpr 0x9df6500 <line:227:16, col:46> '<dependent type>'
                        (UnresolvedLookupExpr 0x9df64a0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90 0x9cb91e0 0x9cb9c50 0x9cba490 0x9cbaa00 0x9db0390)
                        (DeclRefExpr 0x9df6418 <col:16> 'char_type':'_CharT' lvalue Var 0x9df47d0 '__c' 'char_type':'_CharT')
                        (ArraySubscriptExpr 0x9df6488 <col:23, col:46> '<dependent type>' lvalue
                          (DeclRefExpr 0x9df6430 <col:23> 'const _CharT *' lvalue Var 0x9df4730 '__lit' 'const _CharT *')
                          (DeclRefExpr 0x9df6464 <col:29, col:41> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x9dd0c20 '_S_ie' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))
                      (CXXOperatorCallExpr 0x9df6610 <line:228:12, col:42> '<dependent type>'
                        (UnresolvedLookupExpr 0x9df65b0 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90 0x9cb91e0 0x9cb9c50 0x9cba490 0x9cbaa00 0x9db0390)
                        (DeclRefExpr 0x9df6524 <col:12> 'char_type':'_CharT' lvalue Var 0x9df47d0 '__c' 'char_type':'_CharT')
                        (ArraySubscriptExpr 0x9df6598 <col:19, col:42> '<dependent type>' lvalue
                          (DeclRefExpr 0x9df653c <col:19> 'const _CharT *' lvalue Var 0x9df4730 '__lit' 'const _CharT *')
                          (DeclRefExpr 0x9df6574 <col:25, col:37> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x9dd0ca0 '_S_iE' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))))
                  (UnaryOperator 0x9df6690 <line:229:11, col:12> '_Bool' prefix '!'
                    (ImplicitCastExpr 0x9df6680 <col:12> '_Bool' <LValueToRValue>
                      (DeclRefExpr 0x9df6664 <col:12> '_Bool' lvalue Var 0x9df5b50 '__found_sci' '_Bool'))))
                (DeclRefExpr 0x9df6ae0 <col:27> '_Bool' lvalue Var 0x9df52c0 '__found_mantissa' '_Bool'))
              (CompoundStmt 0x9df7140 <line:230:8, line:250:8>
                (CXXOperatorCallExpr 0x9df6b68 <line:232:3, col:13> 'class std::basic_string<char>' lvalue
                  (ImplicitCastExpr 0x9df6b58 <col:10, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                    (DeclRefExpr 0x9df6b40 <col:10, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0x9cff4f0 'operator+=' 'class std::basic_string<char> &(char)'))
                  (DeclRefExpr 0x9df6b10 <col:3> 'string':'class std::basic_string<char>' lvalue ParmVar 0x9df4130 '__xtrc' 'string &')
                  (CharacterLiteral 0x9df6b28 <col:13> 'char'101))
                (BinaryOperator 0x9df6bb8 <line:233:3, col:17> '_Bool' lvalue '='
                  (DeclRefExpr 0x9df6b8c <col:3> '_Bool' lvalue Var 0x9df5b50 '__found_sci' '_Bool')
                  (CXXBoolLiteralExpr 0x9df6ba8 <col:17> '_Bool' true))
                (IfStmt 0x9df7120 <line:236:3, line:249:5>
                  <<<NULL>>>
                  (CXXOperatorCallExpr 0x9df6c70 <line:236:7, col:18> '<dependent type>'
                    (UnresolvedLookupExpr 0x9df6c18 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b412d0 0x9ac7fa0 0x9b5e2b0 0x9ba7d20 0x9bc7160 0x9bc74d0 0x9cbb090 0x9cbb590 0x9cbbad0 0x9db08a0)
                    (UnaryOperator 0x9df6be8 <col:7, col:9> '<dependent type>' prefix '++'
                      (DeclRefExpr 0x9df6bd0 <col:9> '_InIter' lvalue ParmVar 0x9df3fe0 '__beg' '_InIter'))
                    (DeclRefExpr 0x9df6bfc <col:18> '_InIter' lvalue ParmVar 0x9df4020 '__end' '_InIter'))
                  (CompoundStmt 0x9df70a0 <line:237:5, line:244:5>
                    (BinaryOperator 0x9df6ce0 <line:238:7, col:14> '<dependent type>' '='
                      (DeclRefExpr 0x9df6c94 <col:7> 'char_type':'_CharT' lvalue Var 0x9df47d0 '__c' 'char_type':'_CharT')
                      (UnaryOperator 0x9df6cc8 <col:13, col:14> '<dependent type>' prefix '*'
                        (DeclRefExpr 0x9df6cac <col:14> '_InIter' lvalue ParmVar 0x9df3fe0 '__beg' '_InIter')))
                    (DeclStmt 0x9df6e48 <line:239:7, col:61>
                      0x9df6d00 "const bool __plus =
                        (CXXOperatorCallExpr 0x9df6e20 <col:27, col:60> '<dependent type>'
                          (UnresolvedLookupExpr 0x9df6dc0 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90 0x9cb91e0 0x9cb9c50 0x9cba490 0x9cbaa00 0x9db0390)
                          (DeclRefExpr 0x9df6d34 <col:27> 'char_type':'_CharT' lvalue Var 0x9df47d0 '__c' 'char_type':'_CharT')
                          (ArraySubscriptExpr 0x9df6da8 <col:34, col:60> '<dependent type>' lvalue
                            (DeclRefExpr 0x9df6d4c <col:34> 'const _CharT *' lvalue Var 0x9df4730 '__lit' 'const _CharT *')
                            (DeclRefExpr 0x9df6d84 <col:40, col:52> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x9dd0ae0 '_S_iplus' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))")
                    (IfStmt 0x9df7080 <line:240:7, line:243:9>
                      <<<NULL>>>
                      (BinaryOperator 0x9df6f80 <line:240:11, col:55> '<dependent type>' '||'
                        (DeclRefExpr 0x9df6e58 <col:11> 'const _Bool' lvalue Var 0x9df6d00 '__plus' 'const _Bool')
                        (CXXOperatorCallExpr 0x9df6f58 <col:21, col:55> '<dependent type>'
                          (UnresolvedLookupExpr 0x9df6ef8 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90 0x9cb91e0 0x9cb9c50 0x9cba490 0x9cbaa00 0x9db0390)
                          (DeclRefExpr 0x9df6e70 <col:21> 'char_type':'_CharT' lvalue Var 0x9df47d0 '__c' 'char_type':'_CharT')
                          (ArraySubscriptExpr 0x9df6ee0 <col:28, col:55> '<dependent type>' lvalue
                            (DeclRefExpr 0x9df6e88 <col:28> 'const _CharT *' lvalue Var 0x9df4730 '__lit' 'const _CharT *')
                            (DeclRefExpr 0x9df6ebc <col:34, col:46> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x9dd0aa0 '_S_iminus' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>'))))
                      (CXXOperatorCallExpr 0x9df7050 <line:241:9, col:34> 'class std::basic_string<char>' lvalue
                        (ImplicitCastExpr 0x9df7040 <col:16, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                          (DeclRefExpr 0x9df7028 <col:16, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0x9cff4f0 'operator+=' 'class std::basic_string<char> &(char)'))
                        (DeclRefExpr 0x9df6f98 <col:9> 'string':'class std::basic_string<char>' lvalue ParmVar 0x9df4130 '__xtrc' 'string &')
                        (ConditionalOperator 0x9df7008 <col:19, col:34> 'char'
                          (ImplicitCastExpr 0x9df6ff8 <col:19> '_Bool' <LValueToRValue>
                            (DeclRefExpr 0x9df6fb0 <col:19> 'const _Bool' lvalue Var 0x9df6d00 '__plus' 'const _Bool'))
                          (CharacterLiteral 0x9df6fc8 <col:28> 'char'43)
                          (CharacterLiteral 0x9df6fe0 <col:34> 'char'45)))
                      (ContinueStmt 0x9df7078 <line:243:9>)))
                  (CompoundStmt 0x9df7108 <line:246:5, line:249:5>
                    (BinaryOperator 0x9df70e8 <line:247:7, col:19> '_Bool' lvalue '='
                      (DeclRefExpr 0x9df70bc <col:7> '_Bool' lvalue Var 0x9df4840 '__testeof' '_Bool')
                      (CXXBoolLiteralExpr 0x9df70d8 <col:19> '_Bool' true))
                    (BreakStmt 0x9df7100 <line:248:7>))))
              (BreakStmt 0x9df7160 <line:252:8>))))
        (IfStmt 0x9df7330 <line:254:6, line:257:20>
          <<<NULL>>>
          (CXXOperatorCallExpr 0x9df7268 <line:254:10, col:21> '<dependent type>'
            (UnresolvedLookupExpr 0x9df7210 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b412d0 0x9ac7fa0 0x9b5e2b0 0x9ba7d20 0x9bc7160 0x9bc74d0 0x9cbb090 0x9cbb590 0x9cbbad0 0x9db08a0)
            (UnaryOperator 0x9df71e0 <col:10, col:12> '<dependent type>' prefix '++'
              (DeclRefExpr 0x9df71c4 <col:12> '_InIter' lvalue ParmVar 0x9df3fe0 '__beg' '_InIter'))
            (DeclRefExpr 0x9df71f4 <col:21> '_InIter' lvalue ParmVar 0x9df4020 '__end' '_InIter'))
          (BinaryOperator 0x9df72d8 <line:255:8, col:15> '<dependent type>' '='
            (DeclRefExpr 0x9df728c <col:8> 'char_type':'_CharT' lvalue Var 0x9df47d0 '__c' 'char_type':'_CharT')
            (UnaryOperator 0x9df72c0 <col:14, col:15> '<dependent type>' prefix '*'
              (DeclRefExpr 0x9df72a4 <col:15> '_InIter' lvalue ParmVar 0x9df3fe0 '__beg' '_InIter')))
          (BinaryOperator 0x9df7318 <line:257:8, col:20> '_Bool' lvalue '='
            (DeclRefExpr 0x9df72f0 <col:8> '_Bool' lvalue Var 0x9df4840 '__testeof' '_Bool')
            (CXXBoolLiteralExpr 0x9df7308 <col:20> '_Bool' true)))))
    (WhileStmt 0x9df8f80 <line:260:2, line:348:4>
      <<<NULL>>>
      (UnaryOperator 0x9df73b0 <line:260:9, col:10> '_Bool' prefix '!'
        (ImplicitCastExpr 0x9df73a0 <col:10> '_Bool' <LValueToRValue>
          (DeclRefExpr 0x9df7384 <col:10> '_Bool' lvalue Var 0x9df4840 '__testeof' '_Bool')))
      (CompoundStmt 0x9df8f68 <line:261:4, line:348:4>
        (IfStmt 0x9df8dc0 <line:264:6, line:342:8>
          <<<NULL>>>
          (BinaryOperator 0x9df7508 <line:264:10, col:48> '<dependent type>' '&&'
            (CXXDependentScopeMemberExpr 0x9df73e0 <col:10, col:16> '<dependent type>' lvalue
              (DeclRefExpr 0x9df73c4 <col:10> 'const __cache_type *' lvalue Var 0x9df4660 '__lc' 'const __cache_type *'))
            (CXXOperatorCallExpr 0x9df74e0 <col:35, col:48> '<dependent type>'
              (UnresolvedLookupExpr 0x9df7480 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90 0x9cb91e0 0x9cb9c50 0x9cba490 0x9cbaa00 0x9db0390)
              (DeclRefExpr 0x9df7414 <col:35> 'char_type':'_CharT' lvalue Var 0x9df47d0 '__c' 'char_type':'_CharT')
              (CXXDependentScopeMemberExpr 0x9df7448 <col:42, col:48> '<dependent type>' lvalue
                (DeclRefExpr 0x9df742c <col:42> 'const __cache_type *' lvalue Var 0x9df4660 '__lc' 'const __cache_type *'))))
          (CompoundStmt 0x9df77e8 <line:265:8, line:285:8>
            (IfStmt 0x9df77c8 <line:266:3, line:284:5>
              <<<NULL>>>
              (BinaryOperator 0x9df75a0 <line:266:7, col:24> '_Bool' '&&'
                (UnaryOperator 0x9df7548 <col:7, col:8> '_Bool' prefix '!'
                  (ImplicitCastExpr 0x9df7538 <col:8> '_Bool' <LValueToRValue>
                    (DeclRefExpr 0x9df7520 <col:8> '_Bool' lvalue Var 0x9df5af0 '__found_dec' '_Bool')))
                (UnaryOperator 0x9df7588 <col:23, col:24> '_Bool' prefix '!'
                  (ImplicitCastExpr 0x9df7578 <col:24> '_Bool' <LValueToRValue>
                    (DeclRefExpr 0x9df755c <col:24> '_Bool' lvalue Var 0x9df5b50 '__found_sci' '_Bool'))))
              (CompoundStmt 0x9df77a8 <line:267:5, line:282:5>
                (IfStmt 0x9df7788 <line:270:7, line:281:9>
                  <<<NULL>>>
                  (ImplicitCastExpr 0x9df75e0 <line:270:11> '_Bool' <IntegralToBoolean>
                    (ImplicitCastExpr 0x9df75d0 <col:11> 'int' <LValueToRValue>
                      (DeclRefExpr 0x9df75b8 <col:11> 'int' lvalue Var 0x9df5330 '__sep_pos' 'int')))
                  (CompoundStmt 0x9df76f8 <line:271:9, line:274:9>
                    (CXXOperatorCallExpr 0x9df7688 <line:272:4, col:51> 'class std::basic_string<char>' lvalue
                      (ImplicitCastExpr 0x9df7678 <col:21, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                        (DeclRefExpr 0x9df7660 <col:21, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0x9cff4f0 'operator+=' 'class std::basic_string<char> &(char)'))
                      (DeclRefExpr 0x9df75ec <col:4> 'string':'class std::basic_string<char>' lvalue Var 0x9df5bb0 '__found_grouping' 'string':'class std::basic_string<char>')
                      (CXXStaticCastExpr 0x9df7648 <col:24, col:51> 'char' static_cast<char> <NoOp>
                        (ImplicitCastExpr 0x9df7638 <col:42> 'char' <IntegralCast>
                          (ImplicitCastExpr 0x9df7628 <col:42> 'int' <LValueToRValue>
                            (DeclRefExpr 0x9df7604 <col:42> 'int' lvalue Var 0x9df5330 '__sep_pos' 'int')))))
                    (BinaryOperator 0x9df76e0 <line:273:4, col:16> 'int' lvalue '='
                      (DeclRefExpr 0x9df76ac <col:4> 'int' lvalue Var 0x9df5330 '__sep_pos' 'int')
                      (IntegerLiteral 0x9df76c8 <col:16> 'int' 0)))
                  (CompoundStmt 0x9df7770 <line:276:9, line:281:9>
                    (CXXMemberCallExpr 0x9df7748 <line:279:4, col:17> 'void'
                      (MemberExpr 0x9df7728 <col:4, col:11> '<bound member function type>' .clear 0x9cfe120
                        (DeclRefExpr 0x9df7710 <col:4> 'string':'class std::basic_string<char>' lvalue ParmVar 0x9df4130 '__xtrc' 'string &')))
                    (BreakStmt 0x9df7768 <line:280:4>))))
              (BreakStmt 0x9df77c0 <line:284:5>)))
          (IfStmt 0x9df8da0 <line:286:11, line:342:8>
            <<<NULL>>>
            (CXXOperatorCallExpr 0x9df78c8 <line:286:15, col:28> '<dependent type>'
              (UnresolvedLookupExpr 0x9df7868 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90 0x9cb91e0 0x9cb9c50 0x9cba490 0x9cbaa00 0x9db0390)
              (DeclRefExpr 0x9df77fc <col:15> 'char_type':'_CharT' lvalue Var 0x9df47d0 '__c' 'char_type':'_CharT')
              (CXXDependentScopeMemberExpr 0x9df7830 <col:22, col:28> '<dependent type>' lvalue
                (DeclRefExpr 0x9df7814 <col:22> 'const __cache_type *' lvalue Var 0x9df4660 '__lc' 'const __cache_type *')))
            (CompoundStmt 0x9df7c00 <line:287:8, line:300:8>
              (IfStmt 0x9df7be0 <line:288:3, line:299:5>
                <<<NULL>>>
                (BinaryOperator 0x9df7970 <line:288:7, col:24> '_Bool' '&&'
                  (UnaryOperator 0x9df7918 <col:7, col:8> '_Bool' prefix '!'
                    (ImplicitCastExpr 0x9df7908 <col:8> '_Bool' <LValueToRValue>
                      (DeclRefExpr 0x9df78ec <col:8> '_Bool' lvalue Var 0x9df5af0 '__found_dec' '_Bool')))
                  (UnaryOperator 0x9df7958 <col:23, col:24> '_Bool' prefix '!'
                    (ImplicitCastExpr 0x9df7948 <col:24> '_Bool' <LValueToRValue>
                      (DeclRefExpr 0x9df792c <col:24> '_Bool' lvalue Var 0x9df5b50 '__found_sci' '_Bool'))))
                (CompoundStmt 0x9df7bb8 <line:289:5, line:297:5>
                  (IfStmt 0x9df7ad8 <line:293:7, line:294:56>
                    <<<NULL>>>
                    (ImplicitCastExpr 0x9df7a08 <line:293:11, col:33> '_Bool' <IntegralToBoolean>
                      (CXXMemberCallExpr 0x9df79c0 <col:11, col:33> 'size_type':'unsigned int'
                        (MemberExpr 0x9df79a0 <col:11, col:28> '<bound member function type>' .size 0x9cfd570
                          (ImplicitCastExpr 0x9df79f8 <col:11> 'const class std::basic_string<char>' lvalue <NoOp>
                            (DeclRefExpr 0x9df7988 <col:11> 'string':'class std::basic_string<char>' lvalue Var 0x9df5bb0 '__found_grouping' 'string':'class std::basic_string<char>')))))
                    (CXXOperatorCallExpr 0x9df7ab0 <line:294:9, col:56> 'class std::basic_string<char>' lvalue
                      (ImplicitCastExpr 0x9df7aa0 <col:26, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                        (DeclRefExpr 0x9df7a88 <col:26, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0x9cff4f0 'operator+=' 'class std::basic_string<char> &(char)'))
                      (DeclRefExpr 0x9df7a14 <col:9> 'string':'class std::basic_string<char>' lvalue Var 0x9df5bb0 '__found_grouping' 'string':'class std::basic_string<char>')
                      (CXXStaticCastExpr 0x9df7a70 <col:29, col:56> 'char' static_cast<char> <NoOp>
                        (ImplicitCastExpr 0x9df7a60 <col:47> 'char' <IntegralCast>
                          (ImplicitCastExpr 0x9df7a50 <col:47> 'int' <LValueToRValue>
                            (DeclRefExpr 0x9df7a2c <col:47> 'int' lvalue Var 0x9df5330 '__sep_pos' 'int')))))
                    <<<NULL>>>)
                  (CXXOperatorCallExpr 0x9df7b50 <line:295:7, col:17> 'class std::basic_string<char>' lvalue
                    (ImplicitCastExpr 0x9df7b40 <col:14, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                      (DeclRefExpr 0x9df7b28 <col:14, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0x9cff4f0 'operator+=' 'class std::basic_string<char> &(char)'))
                    (DeclRefExpr 0x9df7af4 <col:7> 'string':'class std::basic_string<char>' lvalue ParmVar 0x9df4130 '__xtrc' 'string &')
                    (CharacterLiteral 0x9df7b10 <col:17> 'char'46))
                  (BinaryOperator 0x9df7ba0 <line:296:7, col:21> '_Bool' lvalue '='
                    (DeclRefExpr 0x9df7b74 <col:7> '_Bool' lvalue Var 0x9df5af0 '__found_dec' '_Bool')
                    (CXXBoolLiteralExpr 0x9df7b90 <col:21> '_Bool' true)))
                (BreakStmt 0x9df7bd8 <line:299:5>)))
            (CompoundStmt 0x9df8d88 <line:302:8, line:342:8>
              (DeclStmt 0x9df7d50 <line:303:3, line:304:45>
                0x9df7c30 "const char_type *__q =
                  (CallExpr 0x9df7d28 <col:5, col:44> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9df7ca8 <col:5, col:20> '<dependent type>' lvalue)
                    (DeclRefExpr 0x9df7cdc <col:25> 'const char_type *' lvalue Var 0x9df5d20 '__lit_zero' 'const char_type *')
                    (IntegerLiteral 0x9df7cf8 <col:37> 'int' 10)
                    (DeclRefExpr 0x9df7d10 <col:41> 'char_type':'_CharT' lvalue Var 0x9df47d0 '__c' 'char_type':'_CharT'))")
              (IfStmt 0x9df8d68 <line:305:3, line:341:5>
                <<<NULL>>>
                (DeclRefExpr 0x9df7d60 <line:305:7> 'const char_type *' lvalue Var 0x9df7c30 '__q' 'const char_type *')
                (CompoundStmt 0x9df7f50 <line:306:5, line:310:5>
                  (CompoundAssignOperator 0x9df7ec0 <line:307:7, col:40> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                    (DeclRefExpr 0x9df7d78 <col:7> 'string':'class std::basic_string<char>' lvalue ParmVar 0x9df4130 '__xtrc' 'string &')
                    (CXXOperatorCallExpr 0x9df7e98 <col:17, col:40> '<dependent type>'
                      (UnresolvedLookupExpr 0x9df7e50 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9ce1500 0x9ce2100 0x9cb8030 0x9cb8830)
                      (CharacterLiteral 0x9df7d90 <col:17> 'char'48)
                      (ParenExpr 0x9df7e38 <col:23, col:40> '<dependent type>'
                        (CXXOperatorCallExpr 0x9df7e10 <col:24, col:30> '<dependent type>'
                          (UnresolvedLookupExpr 0x9df7dd8 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
                          (DeclRefExpr 0x9df7da4 <col:24> 'const char_type *' lvalue Var 0x9df7c30 '__q' 'const char_type *')
                          (DeclRefExpr 0x9df7dbc <col:30> 'const char_type *' lvalue Var 0x9df5d20 '__lit_zero' 'const char_type *')))))
                  (BinaryOperator 0x9df7f08 <line:308:7, col:26> '_Bool' lvalue '='
                    (DeclRefExpr 0x9df7ee0 <col:7> '_Bool' lvalue Var 0x9df52c0 '__found_mantissa' '_Bool')
                    (CXXBoolLiteralExpr 0x9df7ef8 <col:26> '_Bool' true))
                  (UnaryOperator 0x9df7f38 <line:309:7, col:9> 'int' lvalue prefix '++'
                    (DeclRefExpr 0x9df7f20 <col:9> 'int' lvalue Var 0x9df5330 '__sep_pos' 'int')))
                (IfStmt 0x9df8d48 <line:311:8, line:341:5>
                  <<<NULL>>>
                  (BinaryOperator 0x9df8230 <line:311:12, line:313:24> '<dependent type>' '&&'
                    (BinaryOperator 0x9df8200 <line:311:12, line:313:9> '<dependent type>' '&&'
                      (ParenExpr 0x9df81a8 <line:311:12, line:312:40> '<dependent type>'
                        (BinaryOperator 0x9df8190 <line:311:13, line:312:39> '<dependent type>' '||'
                          (CXXOperatorCallExpr 0x9df8058 <line:311:13, col:43> '<dependent type>'
                            (UnresolvedLookupExpr 0x9df7ff8 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90 0x9cb91e0 0x9cb9c50 0x9cba490 0x9cbaa00 0x9db0390)
                            (DeclRefExpr 0x9df7f6c <col:13> 'char_type':'_CharT' lvalue Var 0x9df47d0 '__c' 'char_type':'_CharT')
                            (ArraySubscriptExpr 0x9df7fe0 <col:20, col:43> '<dependent type>' lvalue
                              (DeclRefExpr 0x9df7f84 <col:20> 'const _CharT *' lvalue Var 0x9df4730 '__lit' 'const _CharT *')
                              (DeclRefExpr 0x9df7fbc <col:26, col:38> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x9dd0c20 '_S_ie' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))
                          (CXXOperatorCallExpr 0x9df8168 <line:312:9, col:39> '<dependent type>'
                            (UnresolvedLookupExpr 0x9df8108 <col:13, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90 0x9cb91e0 0x9cb9c50 0x9cba490 0x9cbaa00 0x9db0390)
                            (DeclRefExpr 0x9df807c <col:9> 'char_type':'_CharT' lvalue Var 0x9df47d0 '__c' 'char_type':'_CharT')
                            (ArraySubscriptExpr 0x9df80f0 <col:16, col:39> '<dependent type>' lvalue
                              (DeclRefExpr 0x9df8094 <col:16> 'const _CharT *' lvalue Var 0x9df4730 '__lit' 'const _CharT *')
                              (DeclRefExpr 0x9df80cc <col:22, col:34> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x9dd0ca0 '_S_iE' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))))
                      (UnaryOperator 0x9df81e8 <line:313:8, col:9> '_Bool' prefix '!'
                        (ImplicitCastExpr 0x9df81d8 <col:9> '_Bool' <LValueToRValue>
                          (DeclRefExpr 0x9df81bc <col:9> '_Bool' lvalue Var 0x9df5b50 '__found_sci' '_Bool'))))
                    (DeclRefExpr 0x9df8218 <col:24> '_Bool' lvalue Var 0x9df52c0 '__found_mantissa' '_Bool'))
                  (CompoundStmt 0x9df8d20 <line:314:5, line:339:5>
                    (IfStmt 0x9df83d8 <line:316:7, line:317:56>
                      <<<NULL>>>
                      (BinaryOperator 0x9df8300 <line:316:11, col:39> '_Bool' '&&'
                        (ImplicitCastExpr 0x9df82f0 <col:11, col:33> '_Bool' <IntegralToBoolean>
                          (CXXMemberCallExpr 0x9df8280 <col:11, col:33> 'size_type':'unsigned int'
                            (MemberExpr 0x9df8260 <col:11, col:28> '<bound member function type>' .size 0x9cfd570
                              (ImplicitCastExpr 0x9df82a0 <col:11> 'const class std::basic_string<char>' lvalue <NoOp>
                                (DeclRefExpr 0x9df8248 <col:11> 'string':'class std::basic_string<char>' lvalue Var 0x9df5bb0 '__found_grouping' 'string':'class std::basic_string<char>')))))
                        (UnaryOperator 0x9df82d8 <col:38, col:39> '_Bool' prefix '!'
                          (ImplicitCastExpr 0x9df82c8 <col:39> '_Bool' <LValueToRValue>
                            (DeclRefExpr 0x9df82ac <col:39> '_Bool' lvalue Var 0x9df5af0 '__found_dec' '_Bool'))))
                      (CXXOperatorCallExpr 0x9df83b0 <line:317:9, col:56> 'class std::basic_string<char>' lvalue
                        (ImplicitCastExpr 0x9df83a0 <col:26, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                          (DeclRefExpr 0x9df8388 <col:26, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0x9cff4f0 'operator+=' 'class std::basic_string<char> &(char)'))
                        (DeclRefExpr 0x9df8318 <col:9> 'string':'class std::basic_string<char>' lvalue Var 0x9df5bb0 '__found_grouping' 'string':'class std::basic_string<char>')
                        (CXXStaticCastExpr 0x9df8370 <col:29, col:56> 'char' static_cast<char> <NoOp>
                          (ImplicitCastExpr 0x9df8360 <col:47> 'char' <IntegralCast>
                            (ImplicitCastExpr 0x9df8350 <col:47> 'int' <LValueToRValue>
                              (DeclRefExpr 0x9df8330 <col:47> 'int' lvalue Var 0x9df5330 '__sep_pos' 'int')))))
                      <<<NULL>>>)
                    (CXXOperatorCallExpr 0x9df8450 <line:318:7, col:17> 'class std::basic_string<char>' lvalue
                      (ImplicitCastExpr 0x9df8440 <col:14, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                        (DeclRefExpr 0x9df8428 <col:14, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0x9cff4f0 'operator+=' 'class std::basic_string<char> &(char)'))
                      (DeclRefExpr 0x9df83f4 <col:7> 'string':'class std::basic_string<char>' lvalue ParmVar 0x9df4130 '__xtrc' 'string &')
                      (CharacterLiteral 0x9df8410 <col:17> 'char'101))
                    (BinaryOperator 0x9df84a0 <line:319:7, col:21> '_Bool' lvalue '='
                      (DeclRefExpr 0x9df8474 <col:7> '_Bool' lvalue Var 0x9df5b50 '__found_sci' '_Bool')
                      (CXXBoolLiteralExpr 0x9df8490 <col:21> '_Bool' true))
                    (IfStmt 0x9df8d00 <line:322:7, line:338:9>
                      <<<NULL>>>
                      (CXXOperatorCallExpr 0x9df8558 <line:322:11, col:22> '<dependent type>'
                        (UnresolvedLookupExpr 0x9df8500 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b412d0 0x9ac7fa0 0x9b5e2b0 0x9ba7d20 0x9bc7160 0x9bc74d0 0x9cbb090 0x9cbb590 0x9cbbad0 0x9db08a0)
                        (UnaryOperator 0x9df84d0 <col:11, col:13> '<dependent type>' prefix '++'
                          (DeclRefExpr 0x9df84b8 <col:13> '_InIter' lvalue ParmVar 0x9df3fe0 '__beg' '_InIter'))
                        (DeclRefExpr 0x9df84e4 <col:22> '_InIter' lvalue ParmVar 0x9df4020 '__end' '_InIter'))
                      (CompoundStmt 0x9df8c80 <line:323:9, line:333:9>
                        (BinaryOperator 0x9df85c8 <line:324:4, col:11> '<dependent type>' '='
                          (DeclRefExpr 0x9df857c <col:4> 'char_type':'_CharT' lvalue Var 0x9df47d0 '__c' 'char_type':'_CharT')
                          (UnaryOperator 0x9df85b0 <col:10, col:11> '<dependent type>' prefix '*'
                            (DeclRefExpr 0x9df8594 <col:11> '_InIter' lvalue ParmVar 0x9df3fe0 '__beg' '_InIter')))
                        (DeclStmt 0x9df8738 <line:325:4, col:58>
                          0x9df85f0 "const bool __plus =
                            (CXXOperatorCallExpr 0x9df8710 <col:24, col:57> '<dependent type>'
                              (UnresolvedLookupExpr 0x9df86b0 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90 0x9cb91e0 0x9cb9c50 0x9cba490 0x9cbaa00 0x9db0390)
                              (DeclRefExpr 0x9df8624 <col:24> 'char_type':'_CharT' lvalue Var 0x9df47d0 '__c' 'char_type':'_CharT')
                              (ArraySubscriptExpr 0x9df8698 <col:31, col:57> '<dependent type>' lvalue
                                (DeclRefExpr 0x9df863c <col:31> 'const _CharT *' lvalue Var 0x9df4730 '__lit' 'const _CharT *')
                                (DeclRefExpr 0x9df8674 <col:37, col:49> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x9dd0ae0 '_S_iplus' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))")
                        (IfStmt 0x9df8c60 <line:326:4, line:332:6>
                          <<<NULL>>>
                          (BinaryOperator 0x9df8b60 <line:326:8, line:329:42> '<dependent type>' '&&'
                            (BinaryOperator 0x9df8a28 <line:326:8, line:328:38> '<dependent type>' '&&'
                              (ParenExpr 0x9df8888 <line:326:8, col:54> '<dependent type>'
                                (BinaryOperator 0x9df8870 <col:9, col:53> '<dependent type>' '||'
                                  (DeclRefExpr 0x9df8748 <col:9> 'const _Bool' lvalue Var 0x9df85f0 '__plus' 'const _Bool')
                                  (CXXOperatorCallExpr 0x9df8848 <col:19, col:53> '<dependent type>'
                                    (UnresolvedLookupExpr 0x9df87e8 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90 0x9cb91e0 0x9cb9c50 0x9cba490 0x9cbaa00 0x9db0390)
                                    (DeclRefExpr 0x9df8760 <col:19> 'char_type':'_CharT' lvalue Var 0x9df47d0 '__c' 'char_type':'_CharT')
                                    (ArraySubscriptExpr 0x9df87d0 <col:26, col:53> '<dependent type>' lvalue
                                      (DeclRefExpr 0x9df8778 <col:26> 'const _CharT *' lvalue Var 0x9df4730 '__lit' 'const _CharT *')
                                      (DeclRefExpr 0x9df87ac <col:32, col:44> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x9dd0aa0 '_S_iminus' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))))
                              (UnaryOperator 0x9df8a10 <line:327:11, line:328:38> '<dependent type>' prefix '!'
                                (ParenExpr 0x9df89f8 <line:327:12, line:328:38> '<dependent type>'
                                  (BinaryOperator 0x9df89e0 <line:327:13, line:328:22> '<dependent type>' '&&'
                                    (CXXDependentScopeMemberExpr 0x9df88b8 <line:327:13, col:19> '<dependent type>' lvalue
                                      (DeclRefExpr 0x9df889c <col:13> 'const __cache_type *' lvalue Var 0x9df4660 '__lc' 'const __cache_type *'))
                                    (CXXOperatorCallExpr 0x9df89b8 <line:328:9, col:22> '<dependent type>'
                                      (UnresolvedLookupExpr 0x9df8958 <col:13, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90 0x9cb91e0 0x9cb9c50 0x9cba490 0x9cbaa00 0x9db0390)
                                      (DeclRefExpr 0x9df88ec <col:9> 'char_type':'_CharT' lvalue Var 0x9df47d0 '__c' 'char_type':'_CharT')
                                      (CXXDependentScopeMemberExpr 0x9df8920 <col:16, col:22> '<dependent type>' lvalue
                                        (DeclRefExpr 0x9df8904 <col:16> 'const __cache_type *' lvalue Var 0x9df4660 '__lc' 'const __cache_type *')))))))
                            (UnaryOperator 0x9df8b48 <line:329:11, col:42> '<dependent type>' prefix '!'
                              (ParenExpr 0x9df8b30 <col:12, col:42> '<dependent type>'
                                (CXXOperatorCallExpr 0x9df8b08 <col:13, col:26> '<dependent type>'
                                  (UnresolvedLookupExpr 0x9df8aa8 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90 0x9cb91e0 0x9cb9c50 0x9cba490 0x9cbaa00 0x9db0390)
                                  (DeclRefExpr 0x9df8a40 <col:13> 'char_type':'_CharT' lvalue Var 0x9df47d0 '__c' 'char_type':'_CharT')
                                  (CXXDependentScopeMemberExpr 0x9df8a70 <col:20, col:26> '<dependent type>' lvalue
                                    (DeclRefExpr 0x9df8a58 <col:20> 'const __cache_type *' lvalue Var 0x9df4660 '__lc' 'const __cache_type *'))))))
                          (CXXOperatorCallExpr 0x9df8c30 <line:330:9, col:34> 'class std::basic_string<char>' lvalue
                            (ImplicitCastExpr 0x9df8c20 <col:16, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                              (DeclRefExpr 0x9df8c08 <col:16, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0x9cff4f0 'operator+=' 'class std::basic_string<char> &(char)'))
                            (DeclRefExpr 0x9df8b78 <col:9> 'string':'class std::basic_string<char>' lvalue ParmVar 0x9df4130 '__xtrc' 'string &')
                            (ConditionalOperator 0x9df8be8 <col:19, col:34> 'char'
                              (ImplicitCastExpr 0x9df8bd8 <col:19> '_Bool' <LValueToRValue>
                                (DeclRefExpr 0x9df8b90 <col:19> 'const _Bool' lvalue Var 0x9df85f0 '__plus' 'const _Bool'))
                              (CharacterLiteral 0x9df8ba8 <col:28> 'char'43)
                              (CharacterLiteral 0x9df8bc0 <col:34> 'char'45)))
                          (ContinueStmt 0x9df8c58 <line:332:6>)))
                      (CompoundStmt 0x9df8ce8 <line:335:9, line:338:9>
                        (BinaryOperator 0x9df8cc8 <line:336:4, col:16> '_Bool' lvalue '='
                          (DeclRefExpr 0x9df8c9c <col:4> '_Bool' lvalue Var 0x9df4840 '__testeof' '_Bool')
                          (CXXBoolLiteralExpr 0x9df8cb8 <col:16> '_Bool' true))
                        (BreakStmt 0x9df8ce0 <line:337:4>))))
                  (BreakStmt 0x9df8d40 <line:341:5>))))))
        (IfStmt 0x9df8f48 <line:344:6, line:347:20>
          <<<NULL>>>
          (CXXOperatorCallExpr 0x9df8e80 <line:344:10, col:21> '<dependent type>'
            (UnresolvedLookupExpr 0x9df8e28 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b412d0 0x9ac7fa0 0x9b5e2b0 0x9ba7d20 0x9bc7160 0x9bc74d0 0x9cbb090 0x9cbb590 0x9cbbad0 0x9db08a0)
            (UnaryOperator 0x9df8df8 <col:10, col:12> '<dependent type>' prefix '++'
              (DeclRefExpr 0x9df8ddc <col:12> '_InIter' lvalue ParmVar 0x9df3fe0 '__beg' '_InIter'))
            (DeclRefExpr 0x9df8e0c <col:21> '_InIter' lvalue ParmVar 0x9df4020 '__end' '_InIter'))
          (BinaryOperator 0x9df8ef0 <line:345:8, col:15> '<dependent type>' '='
            (DeclRefExpr 0x9df8ea4 <col:8> 'char_type':'_CharT' lvalue Var 0x9df47d0 '__c' 'char_type':'_CharT')
            (UnaryOperator 0x9df8ed8 <col:14, col:15> '<dependent type>' prefix '*'
              (DeclRefExpr 0x9df8ebc <col:15> '_InIter' lvalue ParmVar 0x9df3fe0 '__beg' '_InIter')))
          (BinaryOperator 0x9df8f30 <line:347:8, col:20> '_Bool' lvalue '='
            (DeclRefExpr 0x9df8f08 <col:8> '_Bool' lvalue Var 0x9df4840 '__testeof' '_Bool')
            (CXXBoolLiteralExpr 0x9df8f20 <col:20> '_Bool' true))))))
  (IfStmt 0x9df9398 <line:352:7, line:362:9>
    <<<NULL>>>
    (ImplicitCastExpr 0x9df9020 <line:352:11, col:33> '_Bool' <IntegralToBoolean>
      (CXXMemberCallExpr 0x9df8ff0 <col:11, col:33> 'size_type':'unsigned int'
        (MemberExpr 0x9df8fcc <col:11, col:28> '<bound member function type>' .size 0x9cfd570
          (ImplicitCastExpr 0x9df9010 <col:11> 'const class std::basic_string<char>' lvalue <NoOp>
            (DeclRefExpr 0x9df8fb4 <col:11> 'string':'class std::basic_string<char>' lvalue Var 0x9df5bb0 '__found_grouping' 'string':'class std::basic_string<char>')))))
    (CompoundStmt 0x9df9380 <line:353:9, line:362:9>
      (IfStmt 0x9df9188 <line:355:4, line:356:53>
        <<<NULL>>>
        (BinaryOperator 0x9df90b0 <line:355:8, col:25> '_Bool' '&&'
          (UnaryOperator 0x9df9058 <col:8, col:9> '_Bool' prefix '!'
            (ImplicitCastExpr 0x9df9048 <col:9> '_Bool' <LValueToRValue>
              (DeclRefExpr 0x9df902c <col:9> '_Bool' lvalue Var 0x9df5af0 '__found_dec' '_Bool')))
          (UnaryOperator 0x9df9098 <col:24, col:25> '_Bool' prefix '!'
            (ImplicitCastExpr 0x9df9088 <col:25> '_Bool' <LValueToRValue>
              (DeclRefExpr 0x9df906c <col:25> '_Bool' lvalue Var 0x9df5b50 '__found_sci' '_Bool'))))
        (CXXOperatorCallExpr 0x9df9160 <line:356:6, col:53> 'class std::basic_string<char>' lvalue
          (ImplicitCastExpr 0x9df9150 <col:23, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9df9138 <col:23, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0x9cff4f0 'operator+=' 'class std::basic_string<char> &(char)'))
          (DeclRefExpr 0x9df90c8 <col:6> 'string':'class std::basic_string<char>' lvalue Var 0x9df5bb0 '__found_grouping' 'string':'class std::basic_string<char>')
          (CXXStaticCastExpr 0x9df9120 <col:26, col:53> 'char' static_cast<char> <NoOp>
            (ImplicitCastExpr 0x9df9110 <col:44> 'char' <IntegralCast>
              (ImplicitCastExpr 0x9df9100 <col:44> 'int' <LValueToRValue>
                (DeclRefExpr 0x9df90e0 <col:44> 'int' lvalue Var 0x9df5330 '__sep_pos' 'int')))))
        <<<NULL>>>)
      (IfStmt 0x9df9360 <line:358:11, line:361:24>
        <<<NULL>>>
        (UnaryOperator 0x9df92c8 <line:358:15, line:360:27> '<dependent type>' prefix '!'
          (CallExpr 0x9df92a0 <line:358:16, line:360:27> '<dependent type>'
            (DeclRefExpr 0x9df91c8 <line:358:16, col:21> '_Bool (const char *, size_t, const string &) throw()' lvalue Function 0x9df3c90 '__verify_grouping' '_Bool (const char *, size_t, const string &) throw()')
            (CXXDependentScopeMemberExpr 0x9df9200 <col:39, col:45> '<dependent type>' lvalue
              (DeclRefExpr 0x9df91e8 <col:39> 'const __cache_type *' lvalue Var 0x9df4660 '__lc' 'const __cache_type *'))
            (CXXDependentScopeMemberExpr 0x9df9250 <line:359:11, col:17> '<dependent type>' lvalue
              (DeclRefExpr 0x9df9234 <col:11> 'const __cache_type *' lvalue Var 0x9df4660 '__lc' 'const __cache_type *'))
            (DeclRefExpr 0x9df9284 <line:360:11> 'string':'class std::basic_string<char>' lvalue Var 0x9df5bb0 '__found_grouping' 'string':'class std::basic_string<char>')))
        (BinaryOperator 0x9df9348 <line:361:6, col:24> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue '='
          (DeclRefExpr 0x9df92dc <col:6> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9df40e0 '__err' 'class ios_base::iostate &')
          (ImplicitCastExpr 0x9df9338 <col:14, col:24> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9df9314 <col:14, col:24> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6baa0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9df93d0 <line:364:7, col:14>
    (DeclRefExpr 0x9df93b4 <col:14> '_InIter' lvalue ParmVar 0x9df3fe0 '__beg' '_InIter')))


    template <typename _ValueT> _InIter _M_extract_int(_InIter __beg, _InIter __end, std::ios_base &__io, ios_base::iostate &__err, _ValueT &__v) const (CompoundStmt 0x9dff438 </usr/include/c++/4.6/bits/locale_facets.tcc:373:7, line:584:7>
  (DeclStmt 0x9df9b50 <line:374:9, col:57>
    0x9df9b20 "typedef char_traits<_CharT> __traits_type")
  (DeclStmt 0x9df9bd8 <line:375:2, col:33>
    0x9df9b70 "Using__gnu_cxx::;")
  (DeclStmt 0x9df9d60 <line:376:2, col:66>
    0x9df9d30 "typedef typename __add_unsigned<_ValueT>::__type __unsigned_type")
  (DeclStmt 0x9df9e50 <line:377:2, col:67>
    0x9df9e20 "typedef __numpunct_cache<_CharT> __cache_type")
  (DeclStmt 0x9df9f58 <line:378:2, col:32>
    0x9df9f20 "__use_cache<__cache_type> __uc")
  (DeclStmt 0x9dfa020 <line:379:2, col:40>
    0x9df9f80 "const std::locale &__loc =
      (CXXMemberCallExpr 0x9df9ff0 <col:24, col:39> 'const class std::locale' lvalue
        (MemberExpr 0x9df9fcc <col:24, col:29> '<bound member function type>' ._M_getloc 0x9d623d0
          (ImplicitCastExpr 0x9dfa010 <col:24> 'const class std::ios_base' lvalue <NoOp>
            (DeclRefExpr 0x9df9fb4 <col:24> 'class std::ios_base' lvalue ParmVar 0x9df97d0 '__io' 'class std::ios_base &'))))")
  (DeclStmt 0x9dfa0e8 <line:380:2, col:40>
    0x9dfa060 "const __cache_type *__lc =
      (CallExpr 0x9dfa0c8 <col:29, col:39> '<dependent type>'
        (DeclRefExpr 0x9dfa094 <col:29> '__use_cache<__cache_type>' lvalue Var 0x9df9f20 '__uc' '__use_cache<__cache_type>')
        (DeclRefExpr 0x9dfa0ac <col:34> 'const class std::locale' lvalue Var 0x9df9f80 '__loc' 'const class std::locale &'))")
  (DeclStmt 0x9dfa1b8 <line:381:2, col:41>
    0x9dfa130 "const _CharT *__lit =
      (CXXDependentScopeMemberExpr 0x9dfa180 <col:24, col:30> '<dependent type>' lvalue
        (DeclRefExpr 0x9dfa164 <col:24> 'const __cache_type *' lvalue Var 0x9dfa060 '__lc' 'const __cache_type *'))")
  (DeclStmt 0x9dfa228 <line:382:2, col:29>
    0x9dfa1d0 "char_type __c =
      (CXXUnresolvedConstructExpr 0x9dfa210 <col:18, col:28> 'char_type':'_CharT')")
  (DeclStmt 0x9dfa410 <line:385:2, line:386:62>
    0x9dfa290 "const ios_base::fmtflags __basefield =
      (CXXOperatorCallExpr 0x9dfa3e8 <line:385:41, line:386:53> 'enum std::_Ios_Fmtflags'
        (ImplicitCastExpr 0x9dfa3d8 <col:41, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9dfa3c0 <col:41, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9d5b750 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
        (CXXMemberCallExpr 0x9dfa340 <line:385:41, col:52> 'fmtflags':'enum std::_Ios_Fmtflags'
          (MemberExpr 0x9dfa31c <col:41, col:46> '<bound member function type>' .flags 0x9d619d0
            (ImplicitCastExpr 0x9dfa360 <col:41> 'const class std::ios_base' lvalue <NoOp>
              (DeclRefExpr 0x9dfa2c4 <col:41> 'class std::ios_base' lvalue ParmVar 0x9df97d0 '__io' 'class std::ios_base &'))))
        (ImplicitCastExpr 0x9dfa3b0 <line:386:43, col:53> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
          (DeclRefExpr 0x9dfa38c <col:43, col:53> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9d6b8d0 'basefield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))")
  (DeclStmt 0x9dfa580 <line:387:2, col:49>
    0x9dfa430 "const bool __oct =
      (BinaryOperator 0x9dfa500 <col:21, col:46> '_Bool' '=='
        (ImplicitCastExpr 0x9dfa4e0 <col:21> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9dfa4c0 <col:21> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9dfa464 <col:21> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9dfa290 '__basefield' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
        (ImplicitCastExpr 0x9dfa4f0 <col:36, col:46> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9dfa4d0 <col:36, col:46> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9dfa49c <col:36, col:46> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9d6b510 'oct' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))")
  (DeclStmt 0x9dfa780 <line:388:2, col:67>
    0x9dfa5a0 "int __base =
      (ConditionalOperator 0x9dfa730 <col:15, col:66> 'int'
        (ImplicitCastExpr 0x9dfa720 <col:15> '_Bool' <LValueToRValue>
          (DeclRefExpr 0x9dfa5d4 <col:15> 'const _Bool' lvalue Var 0x9dfa430 '__oct' 'const _Bool'))
        (IntegerLiteral 0x9dfa5f0 <col:23> 'int' 8)
        (ParenExpr 0x9dfa708 <col:27, col:66> 'int'
          (ConditionalOperator 0x9dfa6e8 <col:28, col:64> 'int'
            (BinaryOperator 0x9dfa6a0 <col:28, col:53> '_Bool' '=='
              (ImplicitCastExpr 0x9dfa680 <col:28> 'int' <IntegralCast>
                (ImplicitCastExpr 0x9dfa660 <col:28> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                  (DeclRefExpr 0x9dfa608 <col:28> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9dfa290 '__basefield' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
              (ImplicitCastExpr 0x9dfa690 <col:43, col:53> 'int' <IntegralCast>
                (ImplicitCastExpr 0x9dfa670 <col:43, col:53> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                  (DeclRefExpr 0x9dfa63c <col:43, col:53> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9d6b3f0 'hex' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
            (IntegerLiteral 0x9dfa6b8 <col:59> 'int' 16)
            (IntegerLiteral 0x9dfa6d0 <col:64> 'int' 10))))")
  (DeclStmt 0x9dfa890 <line:391:2, col:33>
    0x9dfa7a0 "bool __testeof =
      (CXXOperatorCallExpr 0x9dfa868 <col:19, col:28> '<dependent type>'
        (UnresolvedLookupExpr 0x9dfa808 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90 0x9cb91e0 0x9cb9c50 0x9cba490 0x9cbaa00 0x9db0390)
        (DeclRefExpr 0x9dfa7d4 <col:19> '_InIter' lvalue ParmVar 0x9df9740 '__beg' '_InIter')
        (DeclRefExpr 0x9dfa7ec <col:28> '_InIter' lvalue ParmVar 0x9df9780 '__end' '_InIter'))")
  (DeclStmt 0x9dfa8f8 <line:394:2, col:25>
    0x9dfa8b0 "bool __negative =
      (CXXBoolLiteralExpr 0x9dfa8e8 <col:20> '_Bool' false)")
  (IfStmt 0x9dfb0f8 <line:395:2, line:408:4>
    <<<NULL>>>
    (UnaryOperator 0x9dfa930 <line:395:6, col:7> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9dfa920 <col:7> '_Bool' <LValueToRValue>
        (DeclRefExpr 0x9dfa908 <col:7> '_Bool' lvalue Var 0x9dfa7a0 '__testeof' '_Bool')))
    (CompoundStmt 0x9dfb0d8 <line:396:4, line:408:4>
      (BinaryOperator 0x9dfa990 <line:397:6, col:13> '<dependent type>' '='
        (DeclRefExpr 0x9dfa944 <col:6> 'char_type':'_CharT' lvalue Var 0x9dfa1d0 '__c' 'char_type':'_CharT')
        (UnaryOperator 0x9dfa978 <col:12, col:13> '<dependent type>' prefix '*'
          (DeclRefExpr 0x9dfa95c <col:13> '_InIter' lvalue ParmVar 0x9df9740 '__beg' '_InIter')))
      (BinaryOperator 0x9dfaad0 <line:398:6, col:53> '<dependent type>' '='
        (DeclRefExpr 0x9dfa9a8 <col:6> '_Bool' lvalue Var 0x9dfa8b0 '__negative' '_Bool')
        (CXXOperatorCallExpr 0x9dfaaa8 <col:19, col:53> '<dependent type>'
          (UnresolvedLookupExpr 0x9dfaa48 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90 0x9cb91e0 0x9cb9c50 0x9cba490 0x9cbaa00 0x9db0390)
          (DeclRefExpr 0x9dfa9c0 <col:19> 'char_type':'_CharT' lvalue Var 0x9dfa1d0 '__c' 'char_type':'_CharT')
          (ArraySubscriptExpr 0x9dfaa30 <col:26, col:53> '<dependent type>' lvalue
            (DeclRefExpr 0x9dfa9d8 <col:26> 'const _CharT *' lvalue Var 0x9dfa130 '__lit' 'const _CharT *')
            (DeclRefExpr 0x9dfaa0c <col:32, col:44> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x9dd0aa0 '_S_iminus' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>'))))
      (IfStmt 0x9dfb0b8 <line:399:6, line:407:8>
        <<<NULL>>>
        (BinaryOperator 0x9dfaf00 <line:399:10, line:401:37> '<dependent type>' '&&'
          (BinaryOperator 0x9dfadc8 <line:399:10, line:400:62> '<dependent type>' '&&'
            (ParenExpr 0x9dfac28 <line:399:10, col:59> '<dependent type>'
              (BinaryOperator 0x9dfac10 <col:11, col:58> '<dependent type>' '||'
                (DeclRefExpr 0x9dfaae8 <col:11> '_Bool' lvalue Var 0x9dfa8b0 '__negative' '_Bool')
                (CXXOperatorCallExpr 0x9dfabe8 <col:25, col:58> '<dependent type>'
                  (UnresolvedLookupExpr 0x9dfab88 <col:29, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90 0x9cb91e0 0x9cb9c50 0x9cba490 0x9cbaa00 0x9db0390)
                  (DeclRefExpr 0x9dfab00 <col:25> 'char_type':'_CharT' lvalue Var 0x9dfa1d0 '__c' 'char_type':'_CharT')
                  (ArraySubscriptExpr 0x9dfab70 <col:32, col:58> '<dependent type>' lvalue
                    (DeclRefExpr 0x9dfab18 <col:32> 'const _CharT *' lvalue Var 0x9dfa130 '__lit' 'const _CharT *')
                    (DeclRefExpr 0x9dfab4c <col:38, col:50> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x9dd0ae0 '_S_iplus' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))))
            (UnaryOperator 0x9dfadb0 <line:400:6, col:62> '<dependent type>' prefix '!'
              (ParenExpr 0x9dfad98 <col:7, col:62> '<dependent type>'
                (BinaryOperator 0x9dfad80 <col:8, col:46> '<dependent type>' '&&'
                  (CXXDependentScopeMemberExpr 0x9dfac58 <col:8, col:14> '<dependent type>' lvalue
                    (DeclRefExpr 0x9dfac3c <col:8> 'const __cache_type *' lvalue Var 0x9dfa060 '__lc' 'const __cache_type *'))
                  (CXXOperatorCallExpr 0x9dfad58 <col:33, col:46> '<dependent type>'
                    (UnresolvedLookupExpr 0x9dfacf8 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90 0x9cb91e0 0x9cb9c50 0x9cba490 0x9cbaa00 0x9db0390)
                    (DeclRefExpr 0x9dfac8c <col:33> 'char_type':'_CharT' lvalue Var 0x9dfa1d0 '__c' 'char_type':'_CharT')
                    (CXXDependentScopeMemberExpr 0x9dfacc0 <col:40, col:46> '<dependent type>' lvalue
                      (DeclRefExpr 0x9dfaca4 <col:40> 'const __cache_type *' lvalue Var 0x9dfa060 '__lc' 'const __cache_type *')))))))
          (UnaryOperator 0x9dfaee8 <line:401:6, col:37> '<dependent type>' prefix '!'
            (ParenExpr 0x9dfaed0 <col:7, col:37> '<dependent type>'
              (CXXOperatorCallExpr 0x9dfaea8 <col:8, col:21> '<dependent type>'
                (UnresolvedLookupExpr 0x9dfae48 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90 0x9cb91e0 0x9cb9c50 0x9cba490 0x9cbaa00 0x9db0390)
                (DeclRefExpr 0x9dfade0 <col:8> 'char_type':'_CharT' lvalue Var 0x9dfa1d0 '__c' 'char_type':'_CharT')
                (CXXDependentScopeMemberExpr 0x9dfae10 <col:15, col:21> '<dependent type>' lvalue
                  (DeclRefExpr 0x9dfadf8 <col:15> 'const __cache_type *' lvalue Var 0x9dfa060 '__lc' 'const __cache_type *'))))))
        (CompoundStmt 0x9dfb0a0 <line:402:8, line:407:8>
          (IfStmt 0x9dfb080 <line:403:3, line:406:17>
            <<<NULL>>>
            (CXXOperatorCallExpr 0x9dfafb8 <line:403:7, col:18> '<dependent type>'
              (UnresolvedLookupExpr 0x9dfaf60 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b412d0 0x9ac7fa0 0x9b5e2b0 0x9ba7d20 0x9bc7160 0x9bc74d0 0x9cbb090 0x9cbb590 0x9cbbad0 0x9db08a0)
              (UnaryOperator 0x9dfaf30 <col:7, col:9> '<dependent type>' prefix '++'
                (DeclRefExpr 0x9dfaf18 <col:9> '_InIter' lvalue ParmVar 0x9df9740 '__beg' '_InIter'))
              (DeclRefExpr 0x9dfaf44 <col:18> '_InIter' lvalue ParmVar 0x9df9780 '__end' '_InIter'))
            (BinaryOperator 0x9dfb028 <line:404:5, col:12> '<dependent type>' '='
              (DeclRefExpr 0x9dfafdc <col:5> 'char_type':'_CharT' lvalue Var 0x9dfa1d0 '__c' 'char_type':'_CharT')
              (UnaryOperator 0x9dfb010 <col:11, col:12> '<dependent type>' prefix '*'
                (DeclRefExpr 0x9dfaff4 <col:12> '_InIter' lvalue ParmVar 0x9df9740 '__beg' '_InIter')))
            (BinaryOperator 0x9dfb068 <line:406:5, col:17> '_Bool' lvalue '='
              (DeclRefExpr 0x9dfb040 <col:5> '_Bool' lvalue Var 0x9dfa7a0 '__testeof' '_Bool')
              (CXXBoolLiteralExpr 0x9dfb058 <col:17> '_Bool' true))))
        <<<NULL>>>))
    <<<NULL>>>)
  (DeclStmt 0x9dfb168 <line:412:2, col:27>
    0x9dfb120 "bool __found_zero =
      (CXXBoolLiteralExpr 0x9dfb158 <col:22> '_Bool' false)")
  (DeclStmt 0x9dfb1e0 <line:413:2, col:19>
    0x9dfb190 "int __sep_pos =
      (IntegerLiteral 0x9dfb1c8 <col:18> 'int' 0)")
  (WhileStmt 0x9dfbfd0 <line:414:2, line:454:4>
    <<<NULL>>>
    (UnaryOperator 0x9dfb218 <line:414:9, col:10> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9dfb208 <col:10> '_Bool' <LValueToRValue>
        (DeclRefExpr 0x9dfb1f0 <col:10> '_Bool' lvalue Var 0x9dfa7a0 '__testeof' '_Bool')))
    (CompoundStmt 0x9dfbfb8 <line:415:4, line:454:4>
      (IfStmt 0x9dfbd90 <line:416:6, line:444:8>
        <<<NULL>>>
        (BinaryOperator 0x9dfb490 <line:416:10, line:417:19> '<dependent type>' '||'
          (ParenExpr 0x9dfb388 <line:416:10, col:65> '<dependent type>'
            (BinaryOperator 0x9dfb370 <col:11, col:49> '<dependent type>' '&&'
              (CXXDependentScopeMemberExpr 0x9dfb248 <col:11, col:17> '<dependent type>' lvalue
                (DeclRefExpr 0x9dfb22c <col:11> 'const __cache_type *' lvalue Var 0x9dfa060 '__lc' 'const __cache_type *'))
              (CXXOperatorCallExpr 0x9dfb348 <col:36, col:49> '<dependent type>'
                (UnresolvedLookupExpr 0x9dfb2e8 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90 0x9cb91e0 0x9cb9c50 0x9cba490 0x9cbaa00 0x9db0390)
                (DeclRefExpr 0x9dfb27c <col:36> 'char_type':'_CharT' lvalue Var 0x9dfa1d0 '__c' 'char_type':'_CharT')
                (CXXDependentScopeMemberExpr 0x9dfb2b0 <col:43, col:49> '<dependent type>' lvalue
                  (DeclRefExpr 0x9dfb294 <col:43> 'const __cache_type *' lvalue Var 0x9dfa060 '__lc' 'const __cache_type *')))))
          (CXXOperatorCallExpr 0x9dfb468 <line:417:6, col:19> '<dependent type>'
            (UnresolvedLookupExpr 0x9dfb408 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90 0x9cb91e0 0x9cb9c50 0x9cba490 0x9cbaa00 0x9db0390)
            (DeclRefExpr 0x9dfb39c <col:6> 'char_type':'_CharT' lvalue Var 0x9dfa1d0 '__c' 'char_type':'_CharT')
            (CXXDependentScopeMemberExpr 0x9dfb3d0 <col:13, col:19> '<dependent type>' lvalue
              (DeclRefExpr 0x9dfb3b4 <col:13> 'const __cache_type *' lvalue Var 0x9dfa060 '__lc' 'const __cache_type *'))))
        (BreakStmt 0x9dfb4a8 <line:418:8>)
        (IfStmt 0x9dfbd70 <line:419:11, line:444:8>
          <<<NULL>>>
          (BinaryOperator 0x9dfb688 <line:419:15, line:420:41> '<dependent type>' '&&'
            (CXXOperatorCallExpr 0x9dfb598 <line:419:15, col:48> '<dependent type>'
              (UnresolvedLookupExpr 0x9dfb538 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90 0x9cb91e0 0x9cb9c50 0x9cba490 0x9cbaa00 0x9db0390)
              (DeclRefExpr 0x9dfb4b0 <col:15> 'char_type':'_CharT' lvalue Var 0x9dfa1d0 '__c' 'char_type':'_CharT')
              (ArraySubscriptExpr 0x9dfb520 <col:22, col:48> '<dependent type>' lvalue
                (DeclRefExpr 0x9dfb4c8 <col:22> 'const _CharT *' lvalue Var 0x9dfa130 '__lit' 'const _CharT *')
                (DeclRefExpr 0x9dfb4fc <col:28, col:40> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x9dd0ba0 '_S_izero' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))
            (ParenExpr 0x9dfb670 <line:420:11, col:41> '_Bool'
              (BinaryOperator 0x9dfb658 <col:12, col:39> '_Bool' '||'
                (UnaryOperator 0x9dfb5e8 <col:12, col:13> '_Bool' prefix '!'
                  (ImplicitCastExpr 0x9dfb5d8 <col:13> '_Bool' <LValueToRValue>
                    (DeclRefExpr 0x9dfb5bc <col:13> '_Bool' lvalue Var 0x9dfb120 '__found_zero' '_Bool')))
                (BinaryOperator 0x9dfb640 <col:29, col:39> '_Bool' '=='
                  (ImplicitCastExpr 0x9dfb630 <col:29> 'int' <LValueToRValue>
                    (DeclRefExpr 0x9dfb5fc <col:29> 'int' lvalue Var 0x9dfa5a0 '__base' 'int'))
                  (IntegerLiteral 0x9dfb618 <col:39> 'int' 10)))))
          (CompoundStmt 0x9dfb8a0 <line:421:8, line:428:8>
            (BinaryOperator 0x9dfb6c8 <line:422:3, col:18> '_Bool' lvalue '='
              (DeclRefExpr 0x9dfb6a0 <col:3> '_Bool' lvalue Var 0x9dfb120 '__found_zero' '_Bool')
              (CXXBoolLiteralExpr 0x9dfb6b8 <col:18> '_Bool' true))
            (UnaryOperator 0x9dfb6f8 <line:423:3, col:5> 'int' lvalue prefix '++'
              (DeclRefExpr 0x9dfb6e0 <col:5> 'int' lvalue Var 0x9dfb190 '__sep_pos' 'int'))
            (IfStmt 0x9dfb7c0 <line:424:3, line:425:14>
              <<<NULL>>>
              (BinaryOperator 0x9dfb760 <line:424:7, col:22> '_Bool' '=='
                (ImplicitCastExpr 0x9dfb750 <col:7> 'int' <IntegralCast>
                  (ImplicitCastExpr 0x9dfb740 <col:7> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                    (DeclRefExpr 0x9dfb70c <col:7> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9dfa290 '__basefield' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
                (IntegerLiteral 0x9dfb728 <col:22> 'int' 0))
              (BinaryOperator 0x9dfb7a8 <line:425:5, col:14> 'int' lvalue '='
                (DeclRefExpr 0x9dfb778 <col:5> 'int' lvalue Var 0x9dfa5a0 '__base' 'int')
                (IntegerLiteral 0x9dfb790 <col:14> 'int' 8))
              <<<NULL>>>)
            (IfStmt 0x9dfb880 <line:426:3, line:427:17>
              <<<NULL>>>
              (BinaryOperator 0x9dfb820 <line:426:7, col:17> '_Bool' '=='
                (ImplicitCastExpr 0x9dfb810 <col:7> 'int' <LValueToRValue>
                  (DeclRefExpr 0x9dfb7dc <col:7> 'int' lvalue Var 0x9dfa5a0 '__base' 'int'))
                (IntegerLiteral 0x9dfb7f8 <col:17> 'int' 8))
              (BinaryOperator 0x9dfb868 <line:427:5, col:17> 'int' lvalue '='
                (DeclRefExpr 0x9dfb838 <col:5> 'int' lvalue Var 0x9dfb190 '__sep_pos' 'int')
                (IntegerLiteral 0x9dfb850 <col:17> 'int' 0))
              <<<NULL>>>))
          (IfStmt 0x9dfbd50 <line:429:11, line:444:8>
            <<<NULL>>>
            (BinaryOperator 0x9dfbb28 <line:429:15, line:431:39> '<dependent type>' '&&'
              (DeclRefExpr 0x9dfb8c0 <line:429:15> '_Bool' lvalue Var 0x9dfb120 '__found_zero' '_Bool')
              (ParenExpr 0x9dfbb10 <line:430:11, line:431:39> '<dependent type>'
                (BinaryOperator 0x9dfbaf8 <line:430:12, line:431:38> '<dependent type>' '||'
                  (CXXOperatorCallExpr 0x9dfb9c0 <line:430:12, col:42> '<dependent type>'
                    (UnresolvedLookupExpr 0x9dfb960 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90 0x9cb91e0 0x9cb9c50 0x9cba490 0x9cbaa00 0x9db0390)
                    (DeclRefExpr 0x9dfb8d8 <col:12> 'char_type':'_CharT' lvalue Var 0x9dfa1d0 '__c' 'char_type':'_CharT')
                    (ArraySubscriptExpr 0x9dfb948 <col:19, col:42> '<dependent type>' lvalue
                      (DeclRefExpr 0x9dfb8f0 <col:19> 'const _CharT *' lvalue Var 0x9dfa130 '__lit' 'const _CharT *')
                      (DeclRefExpr 0x9dfb924 <col:25, col:37> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x9dd0b20 '_S_ix' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))
                  (CXXOperatorCallExpr 0x9dfbad0 <line:431:8, col:38> '<dependent type>'
                    (UnresolvedLookupExpr 0x9dfba70 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90 0x9cb91e0 0x9cb9c50 0x9cba490 0x9cbaa00 0x9db0390)
                    (DeclRefExpr 0x9dfb9e4 <col:8> 'char_type':'_CharT' lvalue Var 0x9dfa1d0 '__c' 'char_type':'_CharT')
                    (ArraySubscriptExpr 0x9dfba58 <col:15, col:38> '<dependent type>' lvalue
                      (DeclRefExpr 0x9dfb9fc <col:15> 'const _CharT *' lvalue Var 0x9dfa130 '__lit' 'const _CharT *')
                      (DeclRefExpr 0x9dfba34 <col:21, col:33> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x9dd0b60 '_S_iX' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>'))))))
            (CompoundStmt 0x9dfbd30 <line:432:8, line:442:8>
              (IfStmt 0x9dfbbf0 <line:433:3, line:434:14>
                <<<NULL>>>
                (BinaryOperator 0x9dfbb90 <line:433:7, col:22> '_Bool' '=='
                  (ImplicitCastExpr 0x9dfbb80 <col:7> 'int' <IntegralCast>
                    (ImplicitCastExpr 0x9dfbb70 <col:7> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                      (DeclRefExpr 0x9dfbb40 <col:7> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9dfa290 '__basefield' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
                  (IntegerLiteral 0x9dfbb58 <col:22> 'int' 0))
                (BinaryOperator 0x9dfbbd8 <line:434:5, col:14> 'int' lvalue '='
                  (DeclRefExpr 0x9dfbba8 <col:5> 'int' lvalue Var 0x9dfa5a0 '__base' 'int')
                  (IntegerLiteral 0x9dfbbc0 <col:14> 'int' 16))
                <<<NULL>>>)
              (IfStmt 0x9dfbd10 <line:435:3, line:441:5>
                <<<NULL>>>
                (BinaryOperator 0x9dfbc50 <line:435:7, col:17> '_Bool' '=='
                  (ImplicitCastExpr 0x9dfbc40 <col:7> 'int' <LValueToRValue>
                    (DeclRefExpr 0x9dfbc0c <col:7> 'int' lvalue Var 0x9dfa5a0 '__base' 'int'))
                  (IntegerLiteral 0x9dfbc28 <col:17> 'int' 16))
                (CompoundStmt 0x9dfbcf0 <line:436:5, line:439:5>
                  (BinaryOperator 0x9dfbc90 <line:437:7, col:22> '_Bool' lvalue '='
                    (DeclRefExpr 0x9dfbc68 <col:7> '_Bool' lvalue Var 0x9dfb120 '__found_zero' '_Bool')
                    (CXXBoolLiteralExpr 0x9dfbc80 <col:22> '_Bool' false))
                  (BinaryOperator 0x9dfbcd8 <line:438:7, col:19> 'int' lvalue '='
                    (DeclRefExpr 0x9dfbca8 <col:7> 'int' lvalue Var 0x9dfb190 '__sep_pos' 'int')
                    (IntegerLiteral 0x9dfbcc0 <col:19> 'int' 0)))
                (BreakStmt 0x9dfbd08 <line:441:5>)))
            (BreakStmt 0x9dfbd48 <line:444:8>))))
      (IfStmt 0x9dfbf98 <line:446:6, line:453:20>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9dfbe50 <line:446:10, col:21> '<dependent type>'
          (UnresolvedLookupExpr 0x9dfbdf8 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b412d0 0x9ac7fa0 0x9b5e2b0 0x9ba7d20 0x9bc7160 0x9bc74d0 0x9cbb090 0x9cbb590 0x9cbbad0 0x9db08a0)
          (UnaryOperator 0x9dfbdc8 <col:10, col:12> '<dependent type>' prefix '++'
            (DeclRefExpr 0x9dfbdac <col:12> '_InIter' lvalue ParmVar 0x9df9740 '__beg' '_InIter'))
          (DeclRefExpr 0x9dfbddc <col:21> '_InIter' lvalue ParmVar 0x9df9780 '__end' '_InIter'))
        (CompoundStmt 0x9dfbf40 <line:447:8, line:451:8>
          (BinaryOperator 0x9dfbec0 <line:448:3, col:10> '<dependent type>' '='
            (DeclRefExpr 0x9dfbe74 <col:3> 'char_type':'_CharT' lvalue Var 0x9dfa1d0 '__c' 'char_type':'_CharT')
            (UnaryOperator 0x9dfbea8 <col:9, col:10> '<dependent type>' prefix '*'
              (DeclRefExpr 0x9dfbe8c <col:10> '_InIter' lvalue ParmVar 0x9df9740 '__beg' '_InIter')))
          (IfStmt 0x9dfbf20 <line:449:3, line:450:5>
            <<<NULL>>>
            (UnaryOperator 0x9dfbf00 <line:449:7, col:8> '_Bool' prefix '!'
              (ImplicitCastExpr 0x9dfbef0 <col:8> '_Bool' <LValueToRValue>
                (DeclRefExpr 0x9dfbed8 <col:8> '_Bool' lvalue Var 0x9dfb120 '__found_zero' '_Bool')))
            (BreakStmt 0x9dfbf18 <line:450:5>)
            <<<NULL>>>))
        (BinaryOperator 0x9dfbf80 <line:453:8, col:20> '_Bool' lvalue '='
          (DeclRefExpr 0x9dfbf58 <col:8> '_Bool' lvalue Var 0x9dfa7a0 '__testeof' '_Bool')
          (CXXBoolLiteralExpr 0x9dfbf70 <col:20> '_Bool' true)))))
  (DeclStmt 0x9dfc1a8 <line:458:2, line:459:42>
    0x9dfbff0 "const size_t __len =
      (ImplicitCastExpr 0x9dfc198 <line:458:23, line:459:41> 'const size_t':'const unsigned int' <IntegralCast>
        (ParenExpr 0x9dfc180 <line:458:23, line:459:41> 'int'
          (ConditionalOperator 0x9dfc160 <line:458:24, line:459:35> 'int'
            (BinaryOperator 0x9dfc068 <line:458:24, col:34> '_Bool' '=='
              (ImplicitCastExpr 0x9dfc058 <col:24> 'int' <LValueToRValue>
                (DeclRefExpr 0x9dfc024 <col:24> 'int' lvalue Var 0x9dfa5a0 '__base' 'int'))
              (IntegerLiteral 0x9dfc040 <col:34> 'int' 16))
            (BinaryOperator 0x9dfc120 <col:39, line:459:24> 'int' '-'
              (ImplicitCastExpr 0x9dfc100 <line:458:39, col:51> 'int' <IntegralCast>
                (DeclRefExpr 0x9dfc09c <col:39, col:51> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x9dd0cf0 '_S_iend' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>'))
              (ImplicitCastExpr 0x9dfc110 <line:459:12, col:24> 'int' <IntegralCast>
                (DeclRefExpr 0x9dfc0dc <col:12, col:24> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x9dd0ba0 '_S_izero' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))
            (ImplicitCastExpr 0x9dfc150 <col:35> 'int' <LValueToRValue>
              (DeclRefExpr 0x9dfc138 <col:35> 'int' lvalue Var 0x9dfa5a0 '__base' 'int')))))")
  (DeclStmt 0x9dfc218 <line:462:2, col:25>
    0x9dfc1c0 "string __found_grouping =
      (CXXConstructExpr 0x9dfc1f8 <col:9> 'string':'class std::basic_string<char>''void (void)')")
  (IfStmt 0x9dfc2f8 <line:463:2, line:464:31>
    <<<NULL>>>
    (CXXDependentScopeMemberExpr 0x9dfc240 <line:463:6, col:12> '<dependent type>' lvalue
      (DeclRefExpr 0x9dfc228 <col:6> 'const __cache_type *' lvalue Var 0x9dfa060 '__lc' 'const __cache_type *'))
    (CXXMemberCallExpr 0x9dfc2c8 <line:464:4, col:31> 'void'
      (MemberExpr 0x9dfc28c <col:4, col:21> '<bound member function type>' .reserve 0x9cfe0b0
        (DeclRefExpr 0x9dfc274 <col:4> 'string':'class std::basic_string<char>' lvalue Var 0x9dfc1c0 '__found_grouping' 'string':'class std::basic_string<char>'))
      (ImplicitCastExpr 0x9dfc2e8 <col:29> 'size_type':'unsigned int' <IntegralCast>
        (IntegerLiteral 0x9dfc2b0 <col:29> 'int' 32)))
    <<<NULL>>>)
  (DeclStmt 0x9dfc368 <line:465:2, col:25>
    0x9dfc320 "bool __testfail =
      (CXXBoolLiteralExpr 0x9dfc358 <col:20> '_Bool' false)")
  (DeclStmt 0x9dfc3c8 <line:466:2, col:29>
    0x9dfc380 "bool __testoverflow =
      (CXXBoolLiteralExpr 0x9dfc3b8 <col:24> '_Bool' false)")
  (DeclStmt 0x9dfc808 <line:467:2, line:470:49>
    0x9dfc400 "const __unsigned_type __max =
      (ConditionalOperator 0x9dfc7e8 <line:468:4, line:470:44> '<dependent type>'
        (ParenExpr 0x9dfc590 <line:468:4, col:68> '<dependent type>'
          (BinaryOperator 0x9dfc578 <col:5, col:57> '<dependent type>' '&&'
            (DeclRefExpr 0x9dfc434 <col:5> '_Bool' lvalue Var 0x9dfa8b0 '__negative' '_Bool')
            (CXXDependentScopeMemberExpr 0x9dfc540 <col:19, col:57> '<dependent type>' lvalue)))
        (CXXOperatorCallExpr 0x9dfc6d0 <line:469:6, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0x9dfc698 <col:6, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
          (CXXDependentScopeMemberExpr 0x9dfc660 <col:7, col:45> '<dependent type>' lvalue))
        (CXXDependentScopeMemberExpr 0x9dfc7b0 <line:470:6, col:44> '<dependent type>' lvalue))")
  (DeclStmt 0x9dfc8a0 <line:471:2, col:47>
    0x9dfc820 "const __unsigned_type __smax =
      (BinaryOperator 0x9dfc888 <col:33, col:41> '<dependent type>' '/'
        (DeclRefExpr 0x9dfc854 <col:33> 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type' lvalue Var 0x9dfc400 '__max' 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type')
        (DeclRefExpr 0x9dfc86c <col:41> 'int' lvalue Var 0x9dfa5a0 '__base' 'int'))")
  (DeclStmt 0x9dfc910 <line:472:2, col:30>
    0x9dfc8c0 "__unsigned_type __result =
      (IntegerLiteral 0x9dfc8f8 <col:29> 'int' 0)")
  (DeclStmt 0x9dfc980 <line:473:2, col:17>
    0x9dfc930 "int __digit =
      (IntegerLiteral 0x9dfc968 <col:16> 'int' 0)")
  (DeclStmt 0x9dfcaa0 <line:474:2, col:60>
    0x9dfc9a0 "const char_type *__lit_zero =
      (CXXOperatorCallExpr 0x9dfca78 <col:32, col:52> '<dependent type>'
        (UnresolvedLookupExpr 0x9dfca30 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9ce1500 0x9ce2100 0x9cb8030 0x9cb8830)
        (DeclRefExpr 0x9dfc9d4 <col:32> 'const _CharT *' lvalue Var 0x9dfa130 '__lit' 'const _CharT *')
        (DeclRefExpr 0x9dfca0c <col:40, col:52> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x9dd0ba0 '_S_izero' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>'))")
  (IfStmt 0x9dfdf78 <line:476:2, line:546:6>
    <<<NULL>>>
    (UnaryOperator 0x9dfcb00 <line:476:6, col:13> '<dependent type>' prefix '!'
      (CXXDependentScopeMemberExpr 0x9dfcac8 <col:7, col:13> '<dependent type>' lvalue
        (DeclRefExpr 0x9dfcab0 <col:7> 'const __cache_type *' lvalue Var 0x9dfa060 '__lc' 'const __cache_type *')))
    (WhileStmt 0x9dfd210 <line:478:4, line:498:6>
      <<<NULL>>>
      (UnaryOperator 0x9dfcb40 <line:478:11, col:12> '_Bool' prefix '!'
        (ImplicitCastExpr 0x9dfcb30 <col:12> '_Bool' <LValueToRValue>
          (DeclRefExpr 0x9dfcb14 <col:12> '_Bool' lvalue Var 0x9dfa7a0 '__testeof' '_Bool')))
      (CompoundStmt 0x9dfd1f0 <line:479:6, line:498:6>
        (BinaryOperator 0x9dfcc30 <line:480:8, col:48> '<dependent type>' '='
          (DeclRefExpr 0x9dfcb54 <col:8> 'int' lvalue Var 0x9dfc930 '__digit' 'int')
          (CallExpr 0x9dfcc08 <col:18, col:48> '<dependent type>'
            (UnresolvedMemberExpr 0x9dfcb80 <col:18> '<bound member function type>' lvalue)
            (DeclRefExpr 0x9dfcbc0 <col:26> 'const char_type *' lvalue Var 0x9dfc9a0 '__lit_zero' 'const char_type *')
            (DeclRefExpr 0x9dfcbd8 <col:38> 'const size_t':'const unsigned int' lvalue Var 0x9dfbff0 '__len' 'const size_t':'const unsigned int')
            (DeclRefExpr 0x9dfcbf0 <col:45> 'char_type':'_CharT' lvalue Var 0x9dfa1d0 '__c' 'char_type':'_CharT')))
        (IfStmt 0x9dfccc0 <line:481:8, line:482:3>
          <<<NULL>>>
          (BinaryOperator 0x9dfcca0 <line:481:12, col:24> '_Bool' '=='
            (ImplicitCastExpr 0x9dfcc90 <col:12> 'int' <LValueToRValue>
              (DeclRefExpr 0x9dfcc48 <col:12> 'int' lvalue Var 0x9dfc930 '__digit' 'int'))
            (UnaryOperator 0x9dfcc78 <col:23, col:24> 'int' prefix '-'
              (IntegerLiteral 0x9dfcc60 <col:24> 'int' 1)))
          (BreakStmt 0x9dfccb8 <line:482:3>)
          <<<NULL>>>)
        (IfStmt 0x9dfd048 <line:484:8, line:492:3>
          <<<NULL>>>
          (CXXOperatorCallExpr 0x9dfcd58 <line:484:12, col:23> '<dependent type>'
            (UnresolvedLookupExpr 0x9dfcd10 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b42c70 0x9ac83c0 0x9b5e730 0x9cbd1f0 0x9cbd720 0x9cbdc50)
            (DeclRefExpr 0x9dfccdc <col:12> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type' lvalue Var 0x9dfc8c0 '__result' '__unsigned_type':'typename __add_unsigned<_ValueT>::__type')
            (DeclRefExpr 0x9dfccf4 <col:23> 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type' lvalue Var 0x9dfc820 '__smax' 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type'))
          (BinaryOperator 0x9dfcda8 <line:485:3, col:20> '_Bool' lvalue '='
            (DeclRefExpr 0x9dfcd7c <col:3> '_Bool' lvalue Var 0x9dfc380 '__testoverflow' '_Bool')
            (CXXBoolLiteralExpr 0x9dfcd98 <col:20> '_Bool' true))
          (CompoundStmt 0x9dfd028 <line:487:3, line:492:3>
            (CompoundAssignOperator 0x9dfcdf0 <line:488:5, col:17> '<dependent type>' lvalue '*=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
              (DeclRefExpr 0x9dfcdc0 <col:5> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type' lvalue Var 0x9dfc8c0 '__result' '__unsigned_type':'typename __add_unsigned<_ValueT>::__type')
              (DeclRefExpr 0x9dfcdd8 <col:17> 'int' lvalue Var 0x9dfa5a0 '__base' 'int'))
            (CXXOperatorCallExpr 0x9dfcf80 <line:489:5, col:42> '<dependent type>'
              (UnresolvedLookupExpr 0x9dfcf40 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9d5c000 0x9d69140 0x9d6a3b0)
              (DeclRefExpr 0x9dfce10 <col:5> '_Bool' lvalue Var 0x9dfc380 '__testoverflow' '_Bool')
              (CXXOperatorCallExpr 0x9dfcf18 <col:23, col:42> '<dependent type>'
                (UnresolvedLookupExpr 0x9dfced0 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b42c70 0x9ac83c0 0x9b5e730 0x9cbd1f0 0x9cbd720 0x9cbdc50)
                (DeclRefExpr 0x9dfce28 <col:23> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type' lvalue Var 0x9dfc8c0 '__result' '__unsigned_type':'typename __add_unsigned<_ValueT>::__type')
                (CXXOperatorCallExpr 0x9dfcea8 <col:34, col:42> '<dependent type>'
                  (UnresolvedLookupExpr 0x9dfce70 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
                  (DeclRefExpr 0x9dfce40 <col:34> 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type' lvalue Var 0x9dfc400 '__max' 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type')
                  (DeclRefExpr 0x9dfce58 <col:42> 'int' lvalue Var 0x9dfc930 '__digit' 'int'))))
            (CompoundAssignOperator 0x9dfcfd8 <line:490:5, col:17> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
              (DeclRefExpr 0x9dfcfa4 <col:5> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type' lvalue Var 0x9dfc8c0 '__result' '__unsigned_type':'typename __add_unsigned<_ValueT>::__type')
              (DeclRefExpr 0x9dfcfbc <col:17> 'int' lvalue Var 0x9dfc930 '__digit' 'int'))
            (UnaryOperator 0x9dfd010 <line:491:5, col:7> 'int' lvalue prefix '++'
              (DeclRefExpr 0x9dfcff8 <col:7> 'int' lvalue Var 0x9dfb190 '__sep_pos' 'int'))))
        (IfStmt 0x9dfd1d0 <line:494:8, line:497:15>
          <<<NULL>>>
          (CXXOperatorCallExpr 0x9dfd108 <line:494:12, col:23> '<dependent type>'
            (UnresolvedLookupExpr 0x9dfd0b0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b412d0 0x9ac7fa0 0x9b5e2b0 0x9ba7d20 0x9bc7160 0x9bc74d0 0x9cbb090 0x9cbb590 0x9cbbad0 0x9db08a0)
            (UnaryOperator 0x9dfd080 <col:12, col:14> '<dependent type>' prefix '++'
              (DeclRefExpr 0x9dfd064 <col:14> '_InIter' lvalue ParmVar 0x9df9740 '__beg' '_InIter'))
            (DeclRefExpr 0x9dfd094 <col:23> '_InIter' lvalue ParmVar 0x9df9780 '__end' '_InIter'))
          (BinaryOperator 0x9dfd178 <line:495:3, col:10> '<dependent type>' '='
            (DeclRefExpr 0x9dfd12c <col:3> 'char_type':'_CharT' lvalue Var 0x9dfa1d0 '__c' 'char_type':'_CharT')
            (UnaryOperator 0x9dfd160 <col:9, col:10> '<dependent type>' prefix '*'
              (DeclRefExpr 0x9dfd144 <col:10> '_InIter' lvalue ParmVar 0x9df9740 '__beg' '_InIter')))
          (BinaryOperator 0x9dfd1b8 <line:497:3, col:15> '_Bool' lvalue '='
            (DeclRefExpr 0x9dfd190 <col:3> '_Bool' lvalue Var 0x9dfa7a0 '__testeof' '_Bool')
            (CXXBoolLiteralExpr 0x9dfd1a8 <col:15> '_Bool' true)))))
    (WhileStmt 0x9dfdf60 <line:500:4, line:546:6>
      <<<NULL>>>
      (UnaryOperator 0x9dfd250 <line:500:11, col:12> '_Bool' prefix '!'
        (ImplicitCastExpr 0x9dfd240 <col:12> '_Bool' <LValueToRValue>
          (DeclRefExpr 0x9dfd224 <col:12> '_Bool' lvalue Var 0x9dfa7a0 '__testeof' '_Bool')))
      (CompoundStmt 0x9dfdf48 <line:501:6, line:546:6>
        (IfStmt 0x9dfdda0 <line:504:8, line:540:3>
          <<<NULL>>>
          (BinaryOperator 0x9dfd3a8 <line:504:12, col:50> '<dependent type>' '&&'
            (CXXDependentScopeMemberExpr 0x9dfd280 <col:12, col:18> '<dependent type>' lvalue
              (DeclRefExpr 0x9dfd264 <col:12> 'const __cache_type *' lvalue Var 0x9dfa060 '__lc' 'const __cache_type *'))
            (CXXOperatorCallExpr 0x9dfd380 <col:37, col:50> '<dependent type>'
              (UnresolvedLookupExpr 0x9dfd320 <col:41, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90 0x9cb91e0 0x9cb9c50 0x9cba490 0x9cbaa00 0x9db0390)
              (DeclRefExpr 0x9dfd2b4 <col:37> 'char_type':'_CharT' lvalue Var 0x9dfa1d0 '__c' 'char_type':'_CharT')
              (CXXDependentScopeMemberExpr 0x9dfd2e8 <col:44, col:50> '<dependent type>' lvalue
                (DeclRefExpr 0x9dfd2cc <col:44> 'const __cache_type *' lvalue Var 0x9dfa060 '__lc' 'const __cache_type *'))))
          (CompoundStmt 0x9dfd598 <line:505:3, line:518:3>
            (IfStmt 0x9dfd578 <line:508:5, line:517:7>
              <<<NULL>>>
              (ImplicitCastExpr 0x9dfd3e8 <line:508:9> '_Bool' <IntegralToBoolean>
                (ImplicitCastExpr 0x9dfd3d8 <col:9> 'int' <LValueToRValue>
                  (DeclRefExpr 0x9dfd3c0 <col:9> 'int' lvalue Var 0x9dfb190 '__sep_pos' 'int')))
              (CompoundStmt 0x9dfd500 <line:509:7, line:512:7>
                (CXXOperatorCallExpr 0x9dfd490 <line:510:9, col:56> 'class std::basic_string<char>' lvalue
                  (ImplicitCastExpr 0x9dfd480 <col:26, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                    (DeclRefExpr 0x9dfd468 <col:26, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0x9cff4f0 'operator+=' 'class std::basic_string<char> &(char)'))
                  (DeclRefExpr 0x9dfd3f4 <col:9> 'string':'class std::basic_string<char>' lvalue Var 0x9dfc1c0 '__found_grouping' 'string':'class std::basic_string<char>')
                  (CXXStaticCastExpr 0x9dfd450 <col:29, col:56> 'char' static_cast<char> <NoOp>
                    (ImplicitCastExpr 0x9dfd440 <col:47> 'char' <IntegralCast>
                      (ImplicitCastExpr 0x9dfd430 <col:47> 'int' <LValueToRValue>
                        (DeclRefExpr 0x9dfd40c <col:47> 'int' lvalue Var 0x9dfb190 '__sep_pos' 'int')))))
                (BinaryOperator 0x9dfd4e8 <line:511:9, col:21> 'int' lvalue '='
                  (DeclRefExpr 0x9dfd4b4 <col:9> 'int' lvalue Var 0x9dfb190 '__sep_pos' 'int')
                  (IntegerLiteral 0x9dfd4d0 <col:21> 'int' 0)))
              (CompoundStmt 0x9dfd560 <line:514:7, line:517:7>
                (BinaryOperator 0x9dfd540 <line:515:9, col:22> '_Bool' lvalue '='
                  (DeclRefExpr 0x9dfd518 <col:9> '_Bool' lvalue Var 0x9dfc320 '__testfail' '_Bool')
                  (CXXBoolLiteralExpr 0x9dfd530 <col:22> '_Bool' true))
                (BreakStmt 0x9dfd558 <line:516:9>))))
          (IfStmt 0x9dfdd80 <line:519:13, line:540:3>
            <<<NULL>>>
            (CXXOperatorCallExpr 0x9dfd678 <line:519:17, col:30> '<dependent type>'
              (UnresolvedLookupExpr 0x9dfd618 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90 0x9cb91e0 0x9cb9c50 0x9cba490 0x9cbaa00 0x9db0390)
              (DeclRefExpr 0x9dfd5ac <col:17> 'char_type':'_CharT' lvalue Var 0x9dfa1d0 '__c' 'char_type':'_CharT')
              (CXXDependentScopeMemberExpr 0x9dfd5e0 <col:24, col:30> '<dependent type>' lvalue
                (DeclRefExpr 0x9dfd5c4 <col:24> 'const __cache_type *' lvalue Var 0x9dfa060 '__lc' 'const __cache_type *')))
            (BreakStmt 0x9dfd6a0 <line:520:3>)
            (CompoundStmt 0x9dfdd58 <line:522:3, line:540:3>
              (DeclStmt 0x9dfd7e0 <line:523:5, line:524:50>
                0x9dfd6c0 "const char_type *__q =
                  (CallExpr 0x9dfd7b8 <col:7, col:49> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9dfd738 <col:7, col:22> '<dependent type>' lvalue)
                    (DeclRefExpr 0x9dfd76c <col:27> 'const char_type *' lvalue Var 0x9dfc9a0 '__lit_zero' 'const char_type *')
                    (DeclRefExpr 0x9dfd784 <col:39> 'const size_t':'const unsigned int' lvalue Var 0x9dfbff0 '__len' 'const size_t':'const unsigned int')
                    (DeclRefExpr 0x9dfd79c <col:46> 'char_type':'_CharT' lvalue Var 0x9dfa1d0 '__c' 'char_type':'_CharT'))")
              (IfStmt 0x9dfd828 <line:525:5, line:526:7>
                <<<NULL>>>
                (UnaryOperator 0x9dfd808 <line:525:9, col:10> '<dependent type>' prefix '!'
                  (DeclRefExpr 0x9dfd7f0 <col:10> 'const char_type *' lvalue Var 0x9dfd6c0 '__q' 'const char_type *'))
                (BreakStmt 0x9dfd820 <line:526:7>)
                <<<NULL>>>)
              (BinaryOperator 0x9dfd8f0 <line:528:5, col:21> '<dependent type>' '='
                (DeclRefExpr 0x9dfd844 <col:5> 'int' lvalue Var 0x9dfc930 '__digit' 'int')
                (CXXOperatorCallExpr 0x9dfd8c8 <col:15, col:21> '<dependent type>'
                  (UnresolvedLookupExpr 0x9dfd890 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
                  (DeclRefExpr 0x9dfd85c <col:15> 'const char_type *' lvalue Var 0x9dfd6c0 '__q' 'const char_type *')
                  (DeclRefExpr 0x9dfd874 <col:21> 'const char_type *' lvalue Var 0x9dfc9a0 '__lit_zero' 'const char_type *')))
              (IfStmt 0x9dfd9b0 <line:529:5, line:530:18>
                <<<NULL>>>
                (BinaryOperator 0x9dfd948 <line:529:9, col:19> '_Bool' '>'
                  (ImplicitCastExpr 0x9dfd938 <col:9> 'int' <LValueToRValue>
                    (DeclRefExpr 0x9dfd908 <col:9> 'int' lvalue Var 0x9dfc930 '__digit' 'int'))
                  (IntegerLiteral 0x9dfd920 <col:19> 'int' 15))
                (CompoundAssignOperator 0x9dfd990 <line:530:7, col:18> 'int' lvalue '-=' ComputeLHSTy='int' ComputeResultTy='int'
                  (DeclRefExpr 0x9dfd960 <col:7> 'int' lvalue Var 0x9dfc930 '__digit' 'int')
                  (IntegerLiteral 0x9dfd978 <col:18> 'int' 6))
                <<<NULL>>>)
              (IfStmt 0x9dfdd38 <line:531:5, line:539:7>
                <<<NULL>>>
                (CXXOperatorCallExpr 0x9dfda48 <line:531:9, col:20> '<dependent type>'
                  (UnresolvedLookupExpr 0x9dfda00 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b42c70 0x9ac83c0 0x9b5e730 0x9cbd1f0 0x9cbd720 0x9cbdc50)
                  (DeclRefExpr 0x9dfd9cc <col:9> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type' lvalue Var 0x9dfc8c0 '__result' '__unsigned_type':'typename __add_unsigned<_ValueT>::__type')
                  (DeclRefExpr 0x9dfd9e4 <col:20> 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type' lvalue Var 0x9dfc820 '__smax' 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type'))
                (BinaryOperator 0x9dfda98 <line:532:7, col:24> '_Bool' lvalue '='
                  (DeclRefExpr 0x9dfda6c <col:7> '_Bool' lvalue Var 0x9dfc380 '__testoverflow' '_Bool')
                  (CXXBoolLiteralExpr 0x9dfda88 <col:24> '_Bool' true))
                (CompoundStmt 0x9dfdd18 <line:534:7, line:539:7>
                  (CompoundAssignOperator 0x9dfdae0 <line:535:9, col:21> '<dependent type>' lvalue '*=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                    (DeclRefExpr 0x9dfdab0 <col:9> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type' lvalue Var 0x9dfc8c0 '__result' '__unsigned_type':'typename __add_unsigned<_ValueT>::__type')
                    (DeclRefExpr 0x9dfdac8 <col:21> 'int' lvalue Var 0x9dfa5a0 '__base' 'int'))
                  (CXXOperatorCallExpr 0x9dfdc70 <line:536:9, col:46> '<dependent type>'
                    (UnresolvedLookupExpr 0x9dfdc30 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9d5c000 0x9d69140 0x9d6a3b0)
                    (DeclRefExpr 0x9dfdb00 <col:9> '_Bool' lvalue Var 0x9dfc380 '__testoverflow' '_Bool')
                    (CXXOperatorCallExpr 0x9dfdc08 <col:27, col:46> '<dependent type>'
                      (UnresolvedLookupExpr 0x9dfdbc0 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b42c70 0x9ac83c0 0x9b5e730 0x9cbd1f0 0x9cbd720 0x9cbdc50)
                      (DeclRefExpr 0x9dfdb18 <col:27> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type' lvalue Var 0x9dfc8c0 '__result' '__unsigned_type':'typename __add_unsigned<_ValueT>::__type')
                      (CXXOperatorCallExpr 0x9dfdb98 <col:38, col:46> '<dependent type>'
                        (UnresolvedLookupExpr 0x9dfdb60 <col:44, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
                        (DeclRefExpr 0x9dfdb30 <col:38> 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type' lvalue Var 0x9dfc400 '__max' 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type')
                        (DeclRefExpr 0x9dfdb48 <col:46> 'int' lvalue Var 0x9dfc930 '__digit' 'int'))))
                  (CompoundAssignOperator 0x9dfdcc8 <line:537:9, col:21> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                    (DeclRefExpr 0x9dfdc94 <col:9> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type' lvalue Var 0x9dfc8c0 '__result' '__unsigned_type':'typename __add_unsigned<_ValueT>::__type')
                    (DeclRefExpr 0x9dfdcac <col:21> 'int' lvalue Var 0x9dfc930 '__digit' 'int'))
                  (UnaryOperator 0x9dfdd00 <line:538:9, col:11> 'int' lvalue prefix '++'
                    (DeclRefExpr 0x9dfdce8 <col:11> 'int' lvalue Var 0x9dfb190 '__sep_pos' 'int')))))))
        (IfStmt 0x9dfdf28 <line:542:8, line:545:15>
          <<<NULL>>>
          (CXXOperatorCallExpr 0x9dfde60 <line:542:12, col:23> '<dependent type>'
            (UnresolvedLookupExpr 0x9dfde08 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b412d0 0x9ac7fa0 0x9b5e2b0 0x9ba7d20 0x9bc7160 0x9bc74d0 0x9cbb090 0x9cbb590 0x9cbbad0 0x9db08a0)
            (UnaryOperator 0x9dfddd8 <col:12, col:14> '<dependent type>' prefix '++'
              (DeclRefExpr 0x9dfddbc <col:14> '_InIter' lvalue ParmVar 0x9df9740 '__beg' '_InIter'))
            (DeclRefExpr 0x9dfddec <col:23> '_InIter' lvalue ParmVar 0x9df9780 '__end' '_InIter'))
          (BinaryOperator 0x9dfded0 <line:543:3, col:10> '<dependent type>' '='
            (DeclRefExpr 0x9dfde84 <col:3> 'char_type':'_CharT' lvalue Var 0x9dfa1d0 '__c' 'char_type':'_CharT')
            (UnaryOperator 0x9dfdeb8 <col:9, col:10> '<dependent type>' prefix '*'
              (DeclRefExpr 0x9dfde9c <col:10> '_InIter' lvalue ParmVar 0x9df9740 '__beg' '_InIter')))
          (BinaryOperator 0x9dfdf10 <line:545:3, col:15> '_Bool' lvalue '='
            (DeclRefExpr 0x9dfdee8 <col:3> '_Bool' lvalue Var 0x9dfa7a0 '__testeof' '_Bool')
            (CXXBoolLiteralExpr 0x9dfdf00 <col:15> '_Bool' true))))))
  (IfStmt 0x9dfe2b8 <line:550:2, line:559:4>
    <<<NULL>>>
    (ImplicitCastExpr 0x9dfe000 <line:550:6, col:28> '_Bool' <IntegralToBoolean>
      (CXXMemberCallExpr 0x9dfdfd0 <col:6, col:28> 'size_type':'unsigned int'
        (MemberExpr 0x9dfdfac <col:6, col:23> '<bound member function type>' .size 0x9cfd570
          (ImplicitCastExpr 0x9dfdff0 <col:6> 'const class std::basic_string<char>' lvalue <NoOp>
            (DeclRefExpr 0x9dfdf94 <col:6> 'string':'class std::basic_string<char>' lvalue Var 0x9dfc1c0 '__found_grouping' 'string':'class std::basic_string<char>')))))
    (CompoundStmt 0x9dfe2a0 <line:551:4, line:559:4>
      (CXXOperatorCallExpr 0x9dfe0a8 <line:553:6, col:53> 'class std::basic_string<char>' lvalue
        (ImplicitCastExpr 0x9dfe098 <col:23, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9dfe080 <col:23, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0x9cff4f0 'operator+=' 'class std::basic_string<char> &(char)'))
        (DeclRefExpr 0x9dfe00c <col:6> 'string':'class std::basic_string<char>' lvalue Var 0x9dfc1c0 '__found_grouping' 'string':'class std::basic_string<char>')
        (CXXStaticCastExpr 0x9dfe068 <col:26, col:53> 'char' static_cast<char> <NoOp>
          (ImplicitCastExpr 0x9dfe058 <col:44> 'char' <IntegralCast>
            (ImplicitCastExpr 0x9dfe048 <col:44> 'int' <LValueToRValue>
              (DeclRefExpr 0x9dfe024 <col:44> 'int' lvalue Var 0x9dfb190 '__sep_pos' 'int')))))
      (IfStmt 0x9dfe280 <line:555:6, line:558:26>
        <<<NULL>>>
        (UnaryOperator 0x9dfe1e8 <line:555:10, line:557:22> '<dependent type>' prefix '!'
          (CallExpr 0x9dfe1c0 <line:555:11, line:557:22> '<dependent type>'
            (DeclRefExpr 0x9dfe0e4 <line:555:11, col:16> '_Bool (const char *, size_t, const string &) throw()' lvalue Function 0x9df3c90 '__verify_grouping' '_Bool (const char *, size_t, const string &) throw()')
            (CXXDependentScopeMemberExpr 0x9dfe120 <col:34, col:40> '<dependent type>' lvalue
              (DeclRefExpr 0x9dfe104 <col:34> 'const __cache_type *' lvalue Var 0x9dfa060 '__lc' 'const __cache_type *'))
            (CXXDependentScopeMemberExpr 0x9dfe170 <line:556:6, col:12> '<dependent type>' lvalue
              (DeclRefExpr 0x9dfe154 <col:6> 'const __cache_type *' lvalue Var 0x9dfa060 '__lc' 'const __cache_type *'))
            (DeclRefExpr 0x9dfe1a4 <line:557:6> 'string':'class std::basic_string<char>' lvalue Var 0x9dfc1c0 '__found_grouping' 'string':'class std::basic_string<char>')))
        (BinaryOperator 0x9dfe268 <line:558:8, col:26> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue '='
          (DeclRefExpr 0x9dfe1fc <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9df9840 '__err' 'class ios_base::iostate &')
          (ImplicitCastExpr 0x9dfe258 <col:16, col:26> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9dfe234 <col:16, col:26> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6baa0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0x9dff2d0 <line:563:2, line:579:35>
    <<<NULL>>>
    (BinaryOperator 0x9dfe468 <line:563:6, line:564:9> '_Bool' '||'
      (ParenExpr 0x9dfe428 <line:563:6, col:62> '_Bool'
        (BinaryOperator 0x9dfe410 <col:7, col:61> '_Bool' '&&'
          (BinaryOperator 0x9dfe368 <col:7, col:22> '_Bool' '&&'
            (UnaryOperator 0x9dfe310 <col:7, col:8> '_Bool' prefix '!'
              (ImplicitCastExpr 0x9dfe300 <col:8> '_Bool' <IntegralToBoolean>
                (ImplicitCastExpr 0x9dfe2f0 <col:8> 'int' <LValueToRValue>
                  (DeclRefExpr 0x9dfe2d4 <col:8> 'int' lvalue Var 0x9dfb190 '__sep_pos' 'int'))))
            (UnaryOperator 0x9dfe350 <col:21, col:22> '_Bool' prefix '!'
              (ImplicitCastExpr 0x9dfe340 <col:22> '_Bool' <LValueToRValue>
                (DeclRefExpr 0x9dfe324 <col:22> '_Bool' lvalue Var 0x9dfb120 '__found_zero' '_Bool'))))
          (UnaryOperator 0x9dfe3f8 <col:38, col:61> '_Bool' prefix '!'
            (ImplicitCastExpr 0x9dfe3e8 <col:39, col:61> '_Bool' <IntegralToBoolean>
              (CXXMemberCallExpr 0x9dfe3b8 <col:39, col:61> 'size_type':'unsigned int'
                (MemberExpr 0x9dfe398 <col:39, col:56> '<bound member function type>' .size 0x9cfd570
                  (ImplicitCastExpr 0x9dfe3d8 <col:39> 'const class std::basic_string<char>' lvalue <NoOp>
                    (DeclRefExpr 0x9dfe380 <col:39> 'string':'class std::basic_string<char>' lvalue Var 0x9dfc1c0 '__found_grouping' 'string':'class std::basic_string<char>'))))))))
      (ImplicitCastExpr 0x9dfe458 <line:564:9> '_Bool' <LValueToRValue>
        (DeclRefExpr 0x9dfe43c <col:9> '_Bool' lvalue Var 0x9dfc320 '__testfail' '_Bool')))
    (CompoundStmt 0x9dfe548 <line:565:4, line:568:4>
      (BinaryOperator 0x9dfe4b0 <line:566:6, col:12> '<dependent type>' '='
        (DeclRefExpr 0x9dfe480 <col:6> '_ValueT' lvalue ParmVar 0x9df98b0 '__v' '_ValueT &')
        (IntegerLiteral 0x9dfe498 <col:12> 'int' 0))
      (BinaryOperator 0x9dfe530 <line:567:6, col:24> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue '='
        (DeclRefExpr 0x9dfe4c8 <col:6> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9df9840 '__err' 'class ios_base::iostate &')
        (ImplicitCastExpr 0x9dfe520 <col:14, col:24> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
          (DeclRefExpr 0x9dfe4fc <col:14, col:24> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6baa0 'failbit' 'const iostate':'const enum std::_Ios_Iostate'))))
    (IfStmt 0x9dfeaa8 <line:569:7, line:579:35>
      <<<NULL>>>
      (ImplicitCastExpr 0x9dfe578 <line:569:11> '_Bool' <LValueToRValue>
        (DeclRefExpr 0x9dfe560 <col:11> '_Bool' lvalue Var 0x9dfc380 '__testoverflow' '_Bool'))
      (CompoundStmt 0x9dfe990 <line:570:4, line:577:4>
        (IfStmt 0x9dfe8f0 <line:571:6, line:575:52>
          <<<NULL>>>
          (BinaryOperator 0x9dfe698 <line:571:10, line:572:44> '<dependent type>' '&&'
            (DeclRefExpr 0x9dfe584 <line:571:10> '_Bool' lvalue Var 0x9dfa8b0 '__negative' '_Bool')
            (CXXDependentScopeMemberExpr 0x9dfe660 <line:572:6, col:44> '<dependent type>' lvalue))
          (BinaryOperator 0x9dfe7b8 <line:573:8, col:52> '<dependent type>' '='
            (DeclRefExpr 0x9dfe6b0 <col:8> '_ValueT' lvalue ParmVar 0x9df98b0 '__v' '_ValueT &')
            (CXXDependentScopeMemberExpr 0x9dfe780 <col:14, col:52> '<dependent type>' lvalue))
          (BinaryOperator 0x9dfe8d8 <line:575:8, col:52> '<dependent type>' '='
            (DeclRefExpr 0x9dfe7d0 <col:8> '_ValueT' lvalue ParmVar 0x9df98b0 '__v' '_ValueT &')
            (CXXDependentScopeMemberExpr 0x9dfe8a0 <col:14, col:52> '<dependent type>' lvalue)))
        (BinaryOperator 0x9dfe978 <line:576:6, col:24> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue '='
          (DeclRefExpr 0x9dfe90c <col:6> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9df9840 '__err' 'class ios_base::iostate &')
          (ImplicitCastExpr 0x9dfe968 <col:14, col:24> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9dfe944 <col:14, col:24> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6baa0 'failbit' 'const iostate':'const enum std::_Ios_Iostate'))))
      (BinaryOperator 0x9dfea90 <line:579:4, col:35> '<dependent type>' '='
        (DeclRefExpr 0x9dfe9a8 <col:4> '_ValueT' lvalue ParmVar 0x9df98b0 '__v' '_ValueT &')
        (ConditionalOperator 0x9dfea70 <col:10, col:35> '<dependent type>'
          (ImplicitCastExpr 0x9dfea60 <col:10> '_Bool' <LValueToRValue>
            (DeclRefExpr 0x9dfe9c0 <col:10> '_Bool' lvalue Var 0x9dfa8b0 '__negative' '_Bool'))
          (CXXOperatorCallExpr 0x9dfea28 <col:23, col:24> '<dependent type>'
            (UnresolvedLookupExpr 0x9dfe9f0 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
            (DeclRefExpr 0x9dfe9d8 <col:24> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type' lvalue Var 0x9dfc8c0 '__result' '__unsigned_type':'typename __add_unsigned<_ValueT>::__type'))
          (DeclRefExpr 0x9dfea48 <col:35> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type' lvalue Var 0x9dfc8c0 '__result' '__unsigned_type':'typename __add_unsigned<_ValueT>::__type')))))
  (IfStmt 0x9dff3f0 <line:581:2, line:582:23>
    <<<NULL>>>
    (ImplicitCastExpr 0x9dff308 <line:581:6> '_Bool' <LValueToRValue>
      (DeclRefExpr 0x9dff2ec <col:6> '_Bool' lvalue Var 0x9dfa7a0 '__testeof' '_Bool'))
    (CXXOperatorCallExpr 0x9dff3c8 <line:582:4, col:23> 'const enum std::_Ios_Iostate' lvalue
      (ImplicitCastExpr 0x9dff3b8 <col:10, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9dff380 <col:10, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9d6a3b0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
      (DeclRefExpr 0x9dff314 <col:4> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9df9840 '__err' 'class ios_base::iostate &')
      (ImplicitCastExpr 0x9dff370 <col:13, col:23> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9dff34c <col:13, col:23> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6ba40 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (ReturnStmt 0x9dff428 <line:583:2, col:9>
    (DeclRefExpr 0x9dff40c <col:9> '_InIter' lvalue ParmVar 0x9df9740 '__beg' '_InIter')))

;
    _InIter do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, bool &__v) const (CompoundStmt 0x9e01e28 </usr/include/c++/4.6/bits/locale_facets.tcc:593:5, line:682:5>
  (IfStmt 0x9e01de0 <line:594:7, line:680:2>
    <<<NULL>>>
    (UnaryOperator 0x9dffb88 <line:594:11, col:47> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9dffb78 <col:12, col:47> '_Bool' <IntegralToBoolean>
        (ParenExpr 0x9dffb60 <col:12, col:47> 'enum std::_Ios_Fmtflags'
          (CXXOperatorCallExpr 0x9dffb38 <col:13, col:38> 'enum std::_Ios_Fmtflags'
            (ImplicitCastExpr 0x9dffb28 <col:26, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9dffb10 <col:26, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9d5b750 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
            (CXXMemberCallExpr 0x9dffa90 <col:13, col:24> 'fmtflags':'enum std::_Ios_Fmtflags'
              (MemberExpr 0x9dffa6c <col:13, col:18> '<bound member function type>' .flags 0x9d619d0
                (ImplicitCastExpr 0x9dffab0 <col:13> 'const class std::ios_base' lvalue <NoOp>
                  (DeclRefExpr 0x9dffa14 <col:13> 'class std::ios_base' lvalue ParmVar 0x9dff800 '__io' 'class std::ios_base &'))))
            (ImplicitCastExpr 0x9dffb00 <col:28, col:38> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0x9dffadc <col:28, col:38> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9d6b2d0 'boolalpha' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))))
    (CompoundStmt 0x9e00160 <line:595:9, line:612:9>
      (DeclStmt 0x9dffc28 <line:599:4, col:17>
        0x9dffbb0 "long __l =
          (ImplicitCastExpr 0x9dffc18 <col:15, col:16> 'long' <IntegralCast>
            (UnaryOperator 0x9dffc00 <col:15, col:16> 'int' prefix '-'
              (IntegerLiteral 0x9dffbe8 <col:16> 'int' 1)))")
      (BinaryOperator 0x9dffd48 <line:600:11, col:64> '<dependent type>' '='
        (DeclRefExpr 0x9dffc38 <col:11> 'iter_type':'_InIter' lvalue ParmVar 0x9dff770 '__beg' 'iter_type':'_InIter')
        (CallExpr 0x9dffd18 <col:19, col:64> '<dependent type>'
          (UnresolvedMemberExpr 0x9dffc60 <col:19> '<bound member function type>' lvalue)
          (DeclRefExpr 0x9dffc9c <col:34> 'iter_type':'_InIter' lvalue ParmVar 0x9dff770 '__beg' 'iter_type':'_InIter')
          (DeclRefExpr 0x9dffcb4 <col:41> 'iter_type':'_InIter' lvalue ParmVar 0x9dff7b0 '__end' 'iter_type':'_InIter')
          (DeclRefExpr 0x9dffccc <col:48> 'class std::ios_base' lvalue ParmVar 0x9dff800 '__io' 'class std::ios_base &')
          (DeclRefExpr 0x9dffce4 <col:54> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9dff870 '__err' 'class ios_base::iostate &')
          (DeclRefExpr 0x9dffcfc <col:61> 'long' lvalue Var 0x9dffbb0 '__l' 'long')))
      (IfStmt 0x9e00140 <line:601:4, line:611:6>
        <<<NULL>>>
        (BinaryOperator 0x9dffe30 <line:601:8, col:27> '_Bool' '||'
          (BinaryOperator 0x9dffdb0 <col:8, col:15> '_Bool' '=='
            (ImplicitCastExpr 0x9dffd90 <col:8> 'long' <LValueToRValue>
              (DeclRefExpr 0x9dffd60 <col:8> 'long' lvalue Var 0x9dffbb0 '__l' 'long'))
            (ImplicitCastExpr 0x9dffda0 <col:15> 'long' <IntegralCast>
              (IntegerLiteral 0x9dffd78 <col:15> 'int' 0)))
          (BinaryOperator 0x9dffe18 <col:20, col:27> '_Bool' '=='
            (ImplicitCastExpr 0x9dffdf8 <col:20> 'long' <LValueToRValue>
              (DeclRefExpr 0x9dffdc8 <col:20> 'long' lvalue Var 0x9dffbb0 '__l' 'long'))
            (ImplicitCastExpr 0x9dffe08 <col:27> 'long' <IntegralCast>
              (IntegerLiteral 0x9dffde0 <col:27> 'int' 1))))
        (BinaryOperator 0x9dffeb8 <line:602:6, col:20> '_Bool' lvalue '='
          (DeclRefExpr 0x9dffe48 <col:6> '_Bool' lvalue ParmVar 0x9dff8c0 '__v' '_Bool &')
          (CXXFunctionalCastExpr 0x9dffea0 <col:12, col:20> '_Bool' functional cast to _Bool <NoOp>
            (ImplicitCastExpr 0x9dffe90 <col:17> '_Bool' <IntegralToBoolean>
              (ImplicitCastExpr 0x9dffe80 <col:17> 'long' <LValueToRValue>
                (DeclRefExpr 0x9dffe68 <col:17> 'long' lvalue Var 0x9dffbb0 '__l' 'long')))))
        (CompoundStmt 0x9e00120 <line:604:6, line:611:6>
          (BinaryOperator 0x9dffef8 <line:607:8, col:14> '_Bool' lvalue '='
            (DeclRefExpr 0x9dffed0 <col:8> '_Bool' lvalue ParmVar 0x9dff8c0 '__v' '_Bool &')
            (CXXBoolLiteralExpr 0x9dffee8 <col:14> '_Bool' true))
          (BinaryOperator 0x9dfff78 <line:608:8, col:26> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue '='
            (DeclRefExpr 0x9dfff10 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9dff870 '__err' 'class ios_base::iostate &')
            (ImplicitCastExpr 0x9dfff68 <col:16, col:26> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
              (DeclRefExpr 0x9dfff44 <col:16, col:26> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6baa0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
          (IfStmt 0x9e00100 <line:609:8, line:610:22>
            <<<NULL>>>
            (CXXOperatorCallExpr 0x9e00020 <line:609:12, col:21> '<dependent type>'
              (UnresolvedLookupExpr 0x9dfffc0 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90 0x9cb91e0 0x9cb9c50 0x9cba490 0x9cbaa00 0x9db0390)
              (DeclRefExpr 0x9dfff90 <col:12> 'iter_type':'_InIter' lvalue ParmVar 0x9dff770 '__beg' 'iter_type':'_InIter')
              (DeclRefExpr 0x9dfffa8 <col:21> 'iter_type':'_InIter' lvalue ParmVar 0x9dff7b0 '__end' 'iter_type':'_InIter'))
            (CXXOperatorCallExpr 0x9e000d8 <line:610:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x9e000c8 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9e000b0 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9d6a3b0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x9e00044 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9dff870 '__err' 'class ios_base::iostate &')
              (ImplicitCastExpr 0x9e000a0 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x9e0007c <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6ba40 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))))
    (CompoundStmt 0x9e01da0 <line:614:9, line:680:2>
      (DeclStmt 0x9e00260 <line:616:4, col:50>
        0x9e00230 "typedef __numpunct_cache<_CharT> __cache_type")
      (DeclStmt 0x9e00368 <line:617:4, col:34>
        0x9e00330 "__use_cache<__cache_type> __uc")
      (DeclStmt 0x9e00430 <line:618:4, col:42>
        0x9e00390 "const std::locale &__loc =
          (CXXMemberCallExpr 0x9e00400 <col:26, col:41> 'const class std::locale' lvalue
            (MemberExpr 0x9e003dc <col:26, col:31> '<bound member function type>' ._M_getloc 0x9d623d0
              (ImplicitCastExpr 0x9e00420 <col:26> 'const class std::ios_base' lvalue <NoOp>
                (DeclRefExpr 0x9e003c4 <col:26> 'class std::ios_base' lvalue ParmVar 0x9dff800 '__io' 'class std::ios_base &'))))")
      (DeclStmt 0x9e004f8 <line:619:4, col:42>
        0x9e00470 "const __cache_type *__lc =
          (CallExpr 0x9e004d8 <col:31, col:41> '<dependent type>'
            (DeclRefExpr 0x9e004a4 <col:31> '__use_cache<__cache_type>' lvalue Var 0x9e00330 '__uc' '__use_cache<__cache_type>')
            (DeclRefExpr 0x9e004bc <col:36> 'const class std::locale' lvalue Var 0x9e00390 '__loc' 'const class std::locale &'))")
      (DeclStmt 0x9e00558 <line:621:4, col:23>
        0x9e00510 "bool __testf =
          (CXXBoolLiteralExpr 0x9e00548 <col:19> '_Bool' true)")
      (DeclStmt 0x9e005b8 <line:622:4, col:23>
        0x9e00570 "bool __testt =
          (CXXBoolLiteralExpr 0x9e005a8 <col:19> '_Bool' true)")
      (DeclStmt 0x9e006f8 <line:623:4, col:47>
        0x9e005d0 "bool __donef =
          (CXXOperatorCallExpr 0x9e006d0 <col:19, col:46> '<dependent type>'
            (UnresolvedLookupExpr 0x9e00670 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90 0x9cb91e0 0x9cb9c50 0x9cba490 0x9cbaa00 0x9db0390)
            (CXXDependentScopeMemberExpr 0x9e00620 <col:19, col:25> '<dependent type>' lvalue
              (DeclRefExpr 0x9e00604 <col:19> 'const __cache_type *' lvalue Var 0x9e00470 '__lc' 'const __cache_type *'))
            (IntegerLiteral 0x9e00658 <col:46> 'int' 0))")
      (DeclStmt 0x9e00838 <line:624:4, col:46>
        0x9e00710 "bool __donet =
          (CXXOperatorCallExpr 0x9e00810 <col:19, col:45> '<dependent type>'
            (UnresolvedLookupExpr 0x9e007b0 <col:42, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90 0x9cb91e0 0x9cb9c50 0x9cba490 0x9cbaa00 0x9db0390)
            (CXXDependentScopeMemberExpr 0x9e00760 <col:19, col:25> '<dependent type>' lvalue
              (DeclRefExpr 0x9e00744 <col:19> 'const __cache_type *' lvalue Var 0x9e00470 '__lc' 'const __cache_type *'))
            (IntegerLiteral 0x9e00798 <col:45> 'int' 0))")
      (DeclStmt 0x9e00898 <line:625:4, col:26>
        0x9e00850 "bool __testeof =
          (CXXBoolLiteralExpr 0x9e00888 <col:21> '_Bool' false)")
      (DeclStmt 0x9e00910 <line:626:4, col:18>
        0x9e008b0 "size_t __n =
          (ImplicitCastExpr 0x9e00900 <col:17> 'size_t':'unsigned int' <IntegralCast>
            (IntegerLiteral 0x9e008e8 <col:17> 'int' 0))")
      (WhileStmt 0x9e01448 <line:627:4, line:657:6>
        <<<NULL>>>
        (BinaryOperator 0x9e009a0 <line:627:11, col:24> '_Bool' '||'
          (UnaryOperator 0x9e00948 <col:11, col:12> '_Bool' prefix '!'
            (ImplicitCastExpr 0x9e00938 <col:12> '_Bool' <LValueToRValue>
              (DeclRefExpr 0x9e00920 <col:12> '_Bool' lvalue Var 0x9e005d0 '__donef' '_Bool')))
          (UnaryOperator 0x9e00988 <col:23, col:24> '_Bool' prefix '!'
            (ImplicitCastExpr 0x9e00978 <col:24> '_Bool' <LValueToRValue>
              (DeclRefExpr 0x9e0095c <col:24> '_Bool' lvalue Var 0x9e00710 '__donet' '_Bool'))))
        (CompoundStmt 0x9e01408 <line:628:6, line:657:6>
          (IfStmt 0x9e00ad0 <line:629:8, line:633:3>
            <<<NULL>>>
            (CXXOperatorCallExpr 0x9e00a48 <line:629:12, col:21> '<dependent type>'
              (UnresolvedLookupExpr 0x9e009e8 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90 0x9cb91e0 0x9cb9c50 0x9cba490 0x9cbaa00 0x9db0390)
              (DeclRefExpr 0x9e009b8 <col:12> 'iter_type':'_InIter' lvalue ParmVar 0x9dff770 '__beg' 'iter_type':'_InIter')
              (DeclRefExpr 0x9e009d0 <col:21> 'iter_type':'_InIter' lvalue ParmVar 0x9dff7b0 '__end' 'iter_type':'_InIter'))
            (CompoundStmt 0x9e00ab8 <line:630:3, line:633:3>
              (BinaryOperator 0x9e00a98 <line:631:5, col:17> '_Bool' lvalue '='
                (DeclRefExpr 0x9e00a6c <col:5> '_Bool' lvalue Var 0x9e00850 '__testeof' '_Bool')
                (CXXBoolLiteralExpr 0x9e00a88 <col:17> '_Bool' true))
              (BreakStmt 0x9e00ab0 <line:632:5>))
            <<<NULL>>>)
          (DeclStmt 0x9e00b68 <line:635:8, col:36>
            0x9e00b00 "const char_type __c =
              (UnaryOperator 0x9e00b50 <col:30, col:31> '<dependent type>' prefix '*'
                (DeclRefExpr 0x9e00b34 <col:31> 'iter_type':'_InIter' lvalue ParmVar 0x9dff770 '__beg' 'iter_type':'_InIter'))")
          (IfStmt 0x9e00d08 <line:637:8, line:638:42>
            <<<NULL>>>
            (UnaryOperator 0x9e00ba0 <line:637:12, col:13> '_Bool' prefix '!'
              (ImplicitCastExpr 0x9e00b90 <col:13> '_Bool' <LValueToRValue>
                (DeclRefExpr 0x9e00b78 <col:13> '_Bool' lvalue Var 0x9e005d0 '__donef' '_Bool')))
            (BinaryOperator 0x9e00cf0 <line:638:3, col:42> '<dependent type>' '='
              (DeclRefExpr 0x9e00bb4 <col:3> '_Bool' lvalue Var 0x9e00510 '__testf' '_Bool')
              (CXXOperatorCallExpr 0x9e00cc8 <col:13, col:42> '<dependent type>'
                (UnresolvedLookupExpr 0x9e00c68 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90 0x9cb91e0 0x9cb9c50 0x9cba490 0x9cbaa00 0x9db0390)
                (DeclRefExpr 0x9e00bcc <col:13> 'const char_type':'const _CharT' lvalue Var 0x9e00b00 '__c' 'const char_type':'const _CharT')
                (ArraySubscriptExpr 0x9e00c50 <col:20, col:42> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0x9e00c00 <col:20, col:26> '<dependent type>' lvalue
                    (DeclRefExpr 0x9e00be4 <col:20> 'const __cache_type *' lvalue Var 0x9e00470 '__lc' 'const __cache_type *'))
                  (DeclRefExpr 0x9e00c34 <col:39> 'size_t':'unsigned int' lvalue Var 0x9e008b0 '__n' 'size_t':'unsigned int'))))
            <<<NULL>>>)
          (IfStmt 0x9e00db0 <line:640:8, line:641:3>
            <<<NULL>>>
            (BinaryOperator 0x9e00d90 <line:640:12, col:24> '_Bool' '&&'
              (UnaryOperator 0x9e00d50 <col:12, col:13> '_Bool' prefix '!'
                (ImplicitCastExpr 0x9e00d40 <col:13> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0x9e00d24 <col:13> '_Bool' lvalue Var 0x9e00510 '__testf' '_Bool')))
              (ImplicitCastExpr 0x9e00d80 <col:24> '_Bool' <LValueToRValue>
                (DeclRefExpr 0x9e00d64 <col:24> '_Bool' lvalue Var 0x9e00710 '__donet' '_Bool')))
            (BreakStmt 0x9e00da8 <line:641:3>)
            <<<NULL>>>)
          (IfStmt 0x9e00f60 <line:643:8, line:644:41>
            <<<NULL>>>
            (UnaryOperator 0x9e00df8 <line:643:12, col:13> '_Bool' prefix '!'
              (ImplicitCastExpr 0x9e00de8 <col:13> '_Bool' <LValueToRValue>
                (DeclRefExpr 0x9e00dcc <col:13> '_Bool' lvalue Var 0x9e00710 '__donet' '_Bool')))
            (BinaryOperator 0x9e00f48 <line:644:3, col:41> '<dependent type>' '='
              (DeclRefExpr 0x9e00e0c <col:3> '_Bool' lvalue Var 0x9e00570 '__testt' '_Bool')
              (CXXOperatorCallExpr 0x9e00f20 <col:13, col:41> '<dependent type>'
                (UnresolvedLookupExpr 0x9e00ec0 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90 0x9cb91e0 0x9cb9c50 0x9cba490 0x9cbaa00 0x9db0390)
                (DeclRefExpr 0x9e00e24 <col:13> 'const char_type':'const _CharT' lvalue Var 0x9e00b00 '__c' 'const char_type':'const _CharT')
                (ArraySubscriptExpr 0x9e00ea8 <col:20, col:41> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0x9e00e58 <col:20, col:26> '<dependent type>' lvalue
                    (DeclRefExpr 0x9e00e3c <col:20> 'const __cache_type *' lvalue Var 0x9e00470 '__lc' 'const __cache_type *'))
                  (DeclRefExpr 0x9e00e8c <col:38> 'size_t':'unsigned int' lvalue Var 0x9e008b0 '__n' 'size_t':'unsigned int'))))
            <<<NULL>>>)
          (IfStmt 0x9e01008 <line:646:8, line:647:3>
            <<<NULL>>>
            (BinaryOperator 0x9e00fe8 <line:646:12, col:24> '_Bool' '&&'
              (UnaryOperator 0x9e00fa8 <col:12, col:13> '_Bool' prefix '!'
                (ImplicitCastExpr 0x9e00f98 <col:13> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0x9e00f7c <col:13> '_Bool' lvalue Var 0x9e00570 '__testt' '_Bool')))
              (ImplicitCastExpr 0x9e00fd8 <col:24> '_Bool' <LValueToRValue>
                (DeclRefExpr 0x9e00fbc <col:24> '_Bool' lvalue Var 0x9e005d0 '__donef' '_Bool')))
            (BreakStmt 0x9e01000 <line:647:3>)
            <<<NULL>>>)
          (IfStmt 0x9e010c8 <line:649:8, line:650:3>
            <<<NULL>>>
            (BinaryOperator 0x9e010a8 <line:649:12, col:25> '_Bool' '&&'
              (UnaryOperator 0x9e01050 <col:12, col:13> '_Bool' prefix '!'
                (ImplicitCastExpr 0x9e01040 <col:13> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0x9e01024 <col:13> '_Bool' lvalue Var 0x9e00570 '__testt' '_Bool')))
              (UnaryOperator 0x9e01090 <col:24, col:25> '_Bool' prefix '!'
                (ImplicitCastExpr 0x9e01080 <col:25> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0x9e01064 <col:25> '_Bool' lvalue Var 0x9e00510 '__testf' '_Bool'))))
            (BreakStmt 0x9e010c0 <line:650:3>)
            <<<NULL>>>)
          (UnaryOperator 0x9e01100 <line:652:8, col:10> 'size_t':'unsigned int' lvalue prefix '++'
            (DeclRefExpr 0x9e010e4 <col:10> 'size_t':'unsigned int' lvalue Var 0x9e008b0 '__n' 'size_t':'unsigned int'))
          (UnaryOperator 0x9e01130 <line:653:8, col:10> '<dependent type>' prefix '++'
            (DeclRefExpr 0x9e01114 <col:10> 'iter_type':'_InIter' lvalue ParmVar 0x9dff770 '__beg' 'iter_type':'_InIter'))
          (BinaryOperator 0x9e01290 <line:655:8, col:43> '<dependent type>' '='
            (DeclRefExpr 0x9e01144 <col:8> '_Bool' lvalue Var 0x9e005d0 '__donef' '_Bool')
            (BinaryOperator 0x9e01278 <col:18, col:43> '<dependent type>' '||'
              (UnaryOperator 0x9e01188 <col:18, col:19> '_Bool' prefix '!'
                (ImplicitCastExpr 0x9e01178 <col:19> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0x9e0115c <col:19> '_Bool' lvalue Var 0x9e00510 '__testf' '_Bool')))
              (CXXOperatorCallExpr 0x9e01250 <col:30, col:43> '<dependent type>'
                (UnresolvedLookupExpr 0x9e01208 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b436e0 0x9ac8bd0 0x9b5f010 0x9cbf3a0 0x9cbf900 0x9cbfe30)
                (DeclRefExpr 0x9e0119c <col:30> 'size_t':'unsigned int' lvalue Var 0x9e008b0 '__n' 'size_t':'unsigned int')
                (CXXDependentScopeMemberExpr 0x9e011d0 <col:37, col:43> '<dependent type>' lvalue
                  (DeclRefExpr 0x9e011b4 <col:37> 'const __cache_type *' lvalue Var 0x9e00470 '__lc' 'const __cache_type *')))))
          (BinaryOperator 0x9e013f0 <line:656:8, col:43> '<dependent type>' '='
            (DeclRefExpr 0x9e012a8 <col:8> '_Bool' lvalue Var 0x9e00710 '__donet' '_Bool')
            (BinaryOperator 0x9e013d8 <col:18, col:43> '<dependent type>' '||'
              (UnaryOperator 0x9e012e8 <col:18, col:19> '_Bool' prefix '!'
                (ImplicitCastExpr 0x9e012d8 <col:19> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0x9e012c0 <col:19> '_Bool' lvalue Var 0x9e00570 '__testt' '_Bool')))
              (CXXOperatorCallExpr 0x9e013b0 <col:30, col:43> '<dependent type>'
                (UnresolvedLookupExpr 0x9e01368 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b436e0 0x9ac8bd0 0x9b5f010 0x9cbf3a0 0x9cbf900 0x9cbfe30)
                (DeclRefExpr 0x9e012fc <col:30> 'size_t':'unsigned int' lvalue Var 0x9e008b0 '__n' 'size_t':'unsigned int')
                (CXXDependentScopeMemberExpr 0x9e01330 <col:37, col:43> '<dependent type>' lvalue
                  (DeclRefExpr 0x9e01314 <col:37> 'const __cache_type *' lvalue Var 0x9e00470 '__lc' 'const __cache_type *')))))))
      (IfStmt 0x9e01d80 <line:658:4, line:679:6>
        <<<NULL>>>
        (BinaryOperator 0x9e01598 <line:658:8, col:53> '<dependent type>' '&&'
          (BinaryOperator 0x9e01568 <col:8, col:32> '<dependent type>' '&&'
            (DeclRefExpr 0x9e0145c <col:8> '_Bool' lvalue Var 0x9e00510 '__testf' '_Bool')
            (CXXOperatorCallExpr 0x9e01540 <col:19, col:32> '<dependent type>'
              (UnresolvedLookupExpr 0x9e014e0 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90 0x9cb91e0 0x9cb9c50 0x9cba490 0x9cbaa00 0x9db0390)
              (DeclRefExpr 0x9e01474 <col:19> 'size_t':'unsigned int' lvalue Var 0x9e008b0 '__n' 'size_t':'unsigned int')
              (CXXDependentScopeMemberExpr 0x9e014a8 <col:26, col:32> '<dependent type>' lvalue
                (DeclRefExpr 0x9e0148c <col:26> 'const __cache_type *' lvalue Var 0x9e00470 '__lc' 'const __cache_type *'))))
          (DeclRefExpr 0x9e01580 <col:53> 'size_t':'unsigned int' lvalue Var 0x9e008b0 '__n' 'size_t':'unsigned int'))
        (CompoundStmt 0x9e018b8 <line:659:6, line:665:6>
          (BinaryOperator 0x9e015d8 <line:660:8, col:14> '_Bool' lvalue '='
            (DeclRefExpr 0x9e015b0 <col:8> '_Bool' lvalue ParmVar 0x9dff8c0 '__v' '_Bool &')
            (CXXBoolLiteralExpr 0x9e015c8 <col:14> '_Bool' false))
          (IfStmt 0x9e01898 <line:661:8, line:664:52>
            <<<NULL>>>
            (BinaryOperator 0x9e016f8 <line:661:12, col:36> '<dependent type>' '&&'
              (DeclRefExpr 0x9e015f0 <col:12> '_Bool' lvalue Var 0x9e00570 '__testt' '_Bool')
              (CXXOperatorCallExpr 0x9e016d0 <col:23, col:36> '<dependent type>'
                (UnresolvedLookupExpr 0x9e01670 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90 0x9cb91e0 0x9cb9c50 0x9cba490 0x9cbaa00 0x9db0390)
                (DeclRefExpr 0x9e01608 <col:23> 'size_t':'unsigned int' lvalue Var 0x9e008b0 '__n' 'size_t':'unsigned int')
                (CXXDependentScopeMemberExpr 0x9e01638 <col:30, col:36> '<dependent type>' lvalue
                  (DeclRefExpr 0x9e01620 <col:30> 'const __cache_type *' lvalue Var 0x9e00470 '__lc' 'const __cache_type *'))))
            (BinaryOperator 0x9e01778 <line:662:3, col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue '='
              (DeclRefExpr 0x9e01710 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9dff870 '__err' 'class ios_base::iostate &')
              (ImplicitCastExpr 0x9e01768 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x9e01744 <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6baa0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
            (BinaryOperator 0x9e01880 <line:664:3, col:52> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue '='
              (DeclRefExpr 0x9e01790 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9dff870 '__err' 'class ios_base::iostate &')
              (ImplicitCastExpr 0x9e01870 <col:11, col:52> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (ConditionalOperator 0x9e01850 <col:11, col:52> 'const iostate':'const enum std::_Ios_Iostate' lvalue
                  (ImplicitCastExpr 0x9e01840 <col:11> '_Bool' <LValueToRValue>
                    (DeclRefExpr 0x9e017a8 <col:11> '_Bool' lvalue Var 0x9e00850 '__testeof' '_Bool'))
                  (DeclRefExpr 0x9e017dc <col:23, col:33> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6ba40 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')
                  (DeclRefExpr 0x9e0181c <col:42, col:52> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6bb00 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))))))
        (IfStmt 0x9e01d60 <line:666:9, line:679:6>
          <<<NULL>>>
          (BinaryOperator 0x9e01a08 <line:666:13, col:57> '<dependent type>' '&&'
            (BinaryOperator 0x9e019d8 <col:13, col:37> '<dependent type>' '&&'
              (DeclRefExpr 0x9e018d0 <col:13> '_Bool' lvalue Var 0x9e00570 '__testt' '_Bool')
              (CXXOperatorCallExpr 0x9e019b0 <col:24, col:37> '<dependent type>'
                (UnresolvedLookupExpr 0x9e01950 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90 0x9cb91e0 0x9cb9c50 0x9cba490 0x9cbaa00 0x9db0390)
                (DeclRefExpr 0x9e018e8 <col:24> 'size_t':'unsigned int' lvalue Var 0x9e008b0 '__n' 'size_t':'unsigned int')
                (CXXDependentScopeMemberExpr 0x9e01918 <col:31, col:37> '<dependent type>' lvalue
                  (DeclRefExpr 0x9e01900 <col:31> 'const __cache_type *' lvalue Var 0x9e00470 '__lc' 'const __cache_type *'))))
            (DeclRefExpr 0x9e019f0 <col:57> 'size_t':'unsigned int' lvalue Var 0x9e008b0 '__n' 'size_t':'unsigned int'))
          (CompoundStmt 0x9e01b68 <line:667:6, line:670:6>
            (BinaryOperator 0x9e01a48 <line:668:8, col:14> '_Bool' lvalue '='
              (DeclRefExpr 0x9e01a20 <col:8> '_Bool' lvalue ParmVar 0x9dff8c0 '__v' '_Bool &')
              (CXXBoolLiteralExpr 0x9e01a38 <col:14> '_Bool' true))
            (BinaryOperator 0x9e01b50 <line:669:8, col:57> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue '='
              (DeclRefExpr 0x9e01a60 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9dff870 '__err' 'class ios_base::iostate &')
              (ImplicitCastExpr 0x9e01b40 <col:16, col:57> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (ConditionalOperator 0x9e01b20 <col:16, col:57> 'const iostate':'const enum std::_Ios_Iostate' lvalue
                  (ImplicitCastExpr 0x9e01b10 <col:16> '_Bool' <LValueToRValue>
                    (DeclRefExpr 0x9e01a78 <col:16> '_Bool' lvalue Var 0x9e00850 '__testeof' '_Bool'))
                  (DeclRefExpr 0x9e01aac <col:28, col:38> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6ba40 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')
                  (DeclRefExpr 0x9e01aec <col:47, col:57> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6bb00 'goodbit' 'const iostate':'const enum std::_Ios_Iostate')))))
          (CompoundStmt 0x9e01d40 <line:672:6, line:679:6>
            (BinaryOperator 0x9e01ba8 <line:675:8, col:14> '_Bool' lvalue '='
              (DeclRefExpr 0x9e01b80 <col:8> '_Bool' lvalue ParmVar 0x9dff8c0 '__v' '_Bool &')
              (CXXBoolLiteralExpr 0x9e01b98 <col:14> '_Bool' false))
            (BinaryOperator 0x9e01c28 <line:676:8, col:26> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue '='
              (DeclRefExpr 0x9e01bc0 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9dff870 '__err' 'class ios_base::iostate &')
              (ImplicitCastExpr 0x9e01c18 <col:16, col:26> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x9e01bf4 <col:16, col:26> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6baa0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
            (IfStmt 0x9e01d20 <line:677:8, line:678:22>
              <<<NULL>>>
              (ImplicitCastExpr 0x9e01c58 <line:677:12> '_Bool' <LValueToRValue>
                (DeclRefExpr 0x9e01c40 <col:12> '_Bool' lvalue Var 0x9e00850 '__testeof' '_Bool'))
              (CXXOperatorCallExpr 0x9e01cf8 <line:678:3, col:22> 'const enum std::_Ios_Iostate' lvalue
                (ImplicitCastExpr 0x9e01ce8 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                  (DeclRefExpr 0x9e01cd0 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9d6a3b0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
                (DeclRefExpr 0x9e01c64 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9dff870 '__err' 'class ios_base::iostate &')
                (ImplicitCastExpr 0x9e01cc0 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                  (DeclRefExpr 0x9e01c9c <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6ba40 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
              <<<NULL>>>))))))
  (ReturnStmt 0x9e01e18 <line:681:7, col:14>
    (DeclRefExpr 0x9e01dfc <col:14> 'iter_type':'_InIter' lvalue ParmVar 0x9dff770 '__beg' 'iter_type':'_InIter')))


    _InIter do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, float &__v) const (CompoundStmt 0x9e02960 </usr/include/c++/4.6/bits/locale_facets.tcc:689:5, line:697:5>
  (DeclStmt 0x9e023e8 <line:690:7, col:20>
    0x9e02390 "string __xtrc =
      (CXXConstructExpr 0x9e023c8 <col:14> 'string':'class std::basic_string<char>''void (void)')")
  (CXXMemberCallExpr 0x9e02448 <line:691:7, col:24> 'void'
    (MemberExpr 0x9e02410 <col:7, col:14> '<bound member function type>' .reserve 0x9cfe0b0
      (DeclRefExpr 0x9e023f8 <col:7> 'string':'class std::basic_string<char>' lvalue Var 0x9e02390 '__xtrc' 'string':'class std::basic_string<char>'))
    (ImplicitCastExpr 0x9e02468 <col:22> 'size_type':'unsigned int' <IntegralCast>
      (IntegerLiteral 0x9e02430 <col:22> 'int' 32)))
  (BinaryOperator 0x9e02568 <line:692:7, col:65> '<dependent type>' '='
    (DeclRefExpr 0x9e02474 <col:7> 'iter_type':'_InIter' lvalue ParmVar 0x9e020e0 '__beg' 'iter_type':'_InIter')
    (CallExpr 0x9e02538 <col:15, col:65> '<dependent type>'
      (MemberExpr 0x9e024a0 <col:15> '<bound member function type>' ->_M_extract_float 0x9df41e0
        (CXXThisExpr 0x9e02490 <col:15> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0x9e024c0 <col:32> 'iter_type':'_InIter' lvalue ParmVar 0x9e020e0 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0x9e024d8 <col:39> 'iter_type':'_InIter' lvalue ParmVar 0x9e02120 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x9e024f0 <col:46> 'class std::ios_base' lvalue ParmVar 0x9e02170 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9e02508 <col:52> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9e021e0 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x9e02520 <col:59> 'string':'class std::basic_string<char>' lvalue Var 0x9e02390 '__xtrc' 'string':'class std::basic_string<char>')))
  (CallExpr 0x9e02768 <line:693:7, col:72> 'void'
    (ImplicitCastExpr 0x9e02758 <col:7, col:12> 'void (*)(const char *, float &, class ios_base::iostate &, const __c_locale &) throw()' <FunctionToPointerDecay>
      (DeclRefExpr 0x9e026f0 <col:7, col:12> 'void (const char *, float &, class ios_base::iostate &, const __c_locale &) throw()' lvalue Function 0x9db9660 '__convert_to_v' 'void (const char *, float &, class ios_base::iostate &, const __c_locale &) throw()' (FunctionTemplate 0x9db9430 '__convert_to_v')))
    (CXXMemberCallExpr 0x9e02618 <col:27, col:40> 'const char *'
      (MemberExpr 0x9e025f4 <col:27, col:34> '<bound member function type>' .c_str 0x9d0ded0
        (ImplicitCastExpr 0x9e02638 <col:27> 'const class std::basic_string<char>' lvalue <NoOp>
          (DeclRefExpr 0x9e025dc <col:27> 'string':'class std::basic_string<char>' lvalue Var 0x9e02390 '__xtrc' 'string':'class std::basic_string<char>'))))
    (DeclRefExpr 0x9e02644 <col:43> 'float' lvalue ParmVar 0x9e02230 '__v' 'float &')
    (DeclRefExpr 0x9e0265c <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9e021e0 '__err' 'class ios_base::iostate &')
    (MaterializeTemporaryExpr 0x9e02798 <col:55, col:71> 'const __c_locale':'struct __locale_struct *const' lvalue
      (CallExpr 0x9e026a0 <col:55, col:71> '__c_locale':'struct __locale_struct *'
        (ImplicitCastExpr 0x9e02690 <col:55> '__c_locale (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9e02674 <col:55> '__c_locale (void)' lvalue CXXMethod 0x9981580 '_S_get_c_locale' '__c_locale (void)')))))
  (IfStmt 0x9e02918 <line:694:7, line:695:21>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9e02838 <line:694:11, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0x9e027d8 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90 0x9cb91e0 0x9cb9c50 0x9cba490 0x9cbaa00 0x9db0390)
      (DeclRefExpr 0x9e027a4 <col:11> 'iter_type':'_InIter' lvalue ParmVar 0x9e020e0 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0x9e027bc <col:20> 'iter_type':'_InIter' lvalue ParmVar 0x9e02120 '__end' 'iter_type':'_InIter'))
    (CXXOperatorCallExpr 0x9e028f0 <line:695:2, col:21> 'const enum std::_Ios_Iostate' lvalue
      (ImplicitCastExpr 0x9e028e0 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9e028c8 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9d6a3b0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
      (DeclRefExpr 0x9e0285c <col:2> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9e021e0 '__err' 'class ios_base::iostate &')
      (ImplicitCastExpr 0x9e028b8 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9e02894 <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6ba40 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (ReturnStmt 0x9e02950 <line:696:7, col:14>
    (DeclRefExpr 0x9e02934 <col:14> 'iter_type':'_InIter' lvalue ParmVar 0x9e020e0 '__beg' 'iter_type':'_InIter')))


    _InIter do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, double &__v) const (CompoundStmt 0x9e034b0 </usr/include/c++/4.6/bits/locale_facets.tcc:704:5, line:712:5>
  (DeclStmt 0x9e02f38 <line:705:7, col:20>
    0x9e02ee0 "string __xtrc =
      (CXXConstructExpr 0x9e02f18 <col:14> 'string':'class std::basic_string<char>''void (void)')")
  (CXXMemberCallExpr 0x9e02f98 <line:706:7, col:24> 'void'
    (MemberExpr 0x9e02f60 <col:7, col:14> '<bound member function type>' .reserve 0x9cfe0b0
      (DeclRefExpr 0x9e02f48 <col:7> 'string':'class std::basic_string<char>' lvalue Var 0x9e02ee0 '__xtrc' 'string':'class std::basic_string<char>'))
    (ImplicitCastExpr 0x9e02fb8 <col:22> 'size_type':'unsigned int' <IntegralCast>
      (IntegerLiteral 0x9e02f80 <col:22> 'int' 32)))
  (BinaryOperator 0x9e030b8 <line:707:7, col:65> '<dependent type>' '='
    (DeclRefExpr 0x9e02fc4 <col:7> 'iter_type':'_InIter' lvalue ParmVar 0x9e02c30 '__beg' 'iter_type':'_InIter')
    (CallExpr 0x9e03088 <col:15, col:65> '<dependent type>'
      (MemberExpr 0x9e02ff0 <col:15> '<bound member function type>' ->_M_extract_float 0x9df41e0
        (CXXThisExpr 0x9e02fe0 <col:15> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0x9e03010 <col:32> 'iter_type':'_InIter' lvalue ParmVar 0x9e02c30 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0x9e03028 <col:39> 'iter_type':'_InIter' lvalue ParmVar 0x9e02c70 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x9e03040 <col:46> 'class std::ios_base' lvalue ParmVar 0x9e02cc0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9e03058 <col:52> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9e02d30 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x9e03070 <col:59> 'string':'class std::basic_string<char>' lvalue Var 0x9e02ee0 '__xtrc' 'string':'class std::basic_string<char>')))
  (CallExpr 0x9e032b8 <line:708:7, col:72> 'void'
    (ImplicitCastExpr 0x9e032a8 <col:7, col:12> 'void (*)(const char *, double &, class ios_base::iostate &, const __c_locale &) throw()' <FunctionToPointerDecay>
      (DeclRefExpr 0x9e03240 <col:7, col:12> 'void (const char *, double &, class ios_base::iostate &, const __c_locale &) throw()' lvalue Function 0x9db9be0 '__convert_to_v' 'void (const char *, double &, class ios_base::iostate &, const __c_locale &) throw()' (FunctionTemplate 0x9db9430 '__convert_to_v')))
    (CXXMemberCallExpr 0x9e03168 <col:27, col:40> 'const char *'
      (MemberExpr 0x9e03144 <col:27, col:34> '<bound member function type>' .c_str 0x9d0ded0
        (ImplicitCastExpr 0x9e03188 <col:27> 'const class std::basic_string<char>' lvalue <NoOp>
          (DeclRefExpr 0x9e0312c <col:27> 'string':'class std::basic_string<char>' lvalue Var 0x9e02ee0 '__xtrc' 'string':'class std::basic_string<char>'))))
    (DeclRefExpr 0x9e03194 <col:43> 'double' lvalue ParmVar 0x9e02d80 '__v' 'double &')
    (DeclRefExpr 0x9e031ac <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9e02d30 '__err' 'class ios_base::iostate &')
    (MaterializeTemporaryExpr 0x9e032e8 <col:55, col:71> 'const __c_locale':'struct __locale_struct *const' lvalue
      (CallExpr 0x9e031f0 <col:55, col:71> '__c_locale':'struct __locale_struct *'
        (ImplicitCastExpr 0x9e031e0 <col:55> '__c_locale (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9e031c4 <col:55> '__c_locale (void)' lvalue CXXMethod 0x9981580 '_S_get_c_locale' '__c_locale (void)')))))
  (IfStmt 0x9e03468 <line:709:7, line:710:21>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9e03388 <line:709:11, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0x9e03328 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90 0x9cb91e0 0x9cb9c50 0x9cba490 0x9cbaa00 0x9db0390)
      (DeclRefExpr 0x9e032f4 <col:11> 'iter_type':'_InIter' lvalue ParmVar 0x9e02c30 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0x9e0330c <col:20> 'iter_type':'_InIter' lvalue ParmVar 0x9e02c70 '__end' 'iter_type':'_InIter'))
    (CXXOperatorCallExpr 0x9e03440 <line:710:2, col:21> 'const enum std::_Ios_Iostate' lvalue
      (ImplicitCastExpr 0x9e03430 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9e03418 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9d6a3b0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
      (DeclRefExpr 0x9e033ac <col:2> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9e02d30 '__err' 'class ios_base::iostate &')
      (ImplicitCastExpr 0x9e03408 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9e033e4 <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6ba40 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (ReturnStmt 0x9e034a0 <line:711:7, col:14>
    (DeclRefExpr 0x9e03484 <col:14> 'iter_type':'_InIter' lvalue ParmVar 0x9e02c30 '__beg' 'iter_type':'_InIter')))


    _InIter do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long double &__v) const (CompoundStmt 0x9e04000 </usr/include/c++/4.6/bits/locale_facets.tcc:736:5, line:744:5>
  (DeclStmt 0x9e03a88 <line:737:7, col:20>
    0x9e03a30 "string __xtrc =
      (CXXConstructExpr 0x9e03a68 <col:14> 'string':'class std::basic_string<char>''void (void)')")
  (CXXMemberCallExpr 0x9e03ae8 <line:738:7, col:24> 'void'
    (MemberExpr 0x9e03ab0 <col:7, col:14> '<bound member function type>' .reserve 0x9cfe0b0
      (DeclRefExpr 0x9e03a98 <col:7> 'string':'class std::basic_string<char>' lvalue Var 0x9e03a30 '__xtrc' 'string':'class std::basic_string<char>'))
    (ImplicitCastExpr 0x9e03b08 <col:22> 'size_type':'unsigned int' <IntegralCast>
      (IntegerLiteral 0x9e03ad0 <col:22> 'int' 32)))
  (BinaryOperator 0x9e03c08 <line:739:7, col:65> '<dependent type>' '='
    (DeclRefExpr 0x9e03b14 <col:7> 'iter_type':'_InIter' lvalue ParmVar 0x9e03780 '__beg' 'iter_type':'_InIter')
    (CallExpr 0x9e03bd8 <col:15, col:65> '<dependent type>'
      (MemberExpr 0x9e03b40 <col:15> '<bound member function type>' ->_M_extract_float 0x9df41e0
        (CXXThisExpr 0x9e03b30 <col:15> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0x9e03b60 <col:32> 'iter_type':'_InIter' lvalue ParmVar 0x9e03780 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0x9e03b78 <col:39> 'iter_type':'_InIter' lvalue ParmVar 0x9e037c0 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x9e03b90 <col:46> 'class std::ios_base' lvalue ParmVar 0x9e03810 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9e03ba8 <col:52> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9e03880 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x9e03bc0 <col:59> 'string':'class std::basic_string<char>' lvalue Var 0x9e03a30 '__xtrc' 'string':'class std::basic_string<char>')))
  (CallExpr 0x9e03e08 <line:740:7, col:72> 'void'
    (ImplicitCastExpr 0x9e03df8 <col:7, col:12> 'void (*)(const char *, long double &, class ios_base::iostate &, const __c_locale &) throw()' <FunctionToPointerDecay>
      (DeclRefExpr 0x9e03d90 <col:7, col:12> 'void (const char *, long double &, class ios_base::iostate &, const __c_locale &) throw()' lvalue Function 0x9dba140 '__convert_to_v' 'void (const char *, long double &, class ios_base::iostate &, const __c_locale &) throw()' (FunctionTemplate 0x9db9430 '__convert_to_v')))
    (CXXMemberCallExpr 0x9e03cb8 <col:27, col:40> 'const char *'
      (MemberExpr 0x9e03c94 <col:27, col:34> '<bound member function type>' .c_str 0x9d0ded0
        (ImplicitCastExpr 0x9e03cd8 <col:27> 'const class std::basic_string<char>' lvalue <NoOp>
          (DeclRefExpr 0x9e03c7c <col:27> 'string':'class std::basic_string<char>' lvalue Var 0x9e03a30 '__xtrc' 'string':'class std::basic_string<char>'))))
    (DeclRefExpr 0x9e03ce4 <col:43> 'long double' lvalue ParmVar 0x9e038d0 '__v' 'long double &')
    (DeclRefExpr 0x9e03cfc <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9e03880 '__err' 'class ios_base::iostate &')
    (MaterializeTemporaryExpr 0x9e03e38 <col:55, col:71> 'const __c_locale':'struct __locale_struct *const' lvalue
      (CallExpr 0x9e03d40 <col:55, col:71> '__c_locale':'struct __locale_struct *'
        (ImplicitCastExpr 0x9e03d30 <col:55> '__c_locale (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9e03d14 <col:55> '__c_locale (void)' lvalue CXXMethod 0x9981580 '_S_get_c_locale' '__c_locale (void)')))))
  (IfStmt 0x9e03fb8 <line:741:7, line:742:21>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9e03ed8 <line:741:11, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0x9e03e78 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90 0x9cb91e0 0x9cb9c50 0x9cba490 0x9cbaa00 0x9db0390)
      (DeclRefExpr 0x9e03e44 <col:11> 'iter_type':'_InIter' lvalue ParmVar 0x9e03780 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0x9e03e5c <col:20> 'iter_type':'_InIter' lvalue ParmVar 0x9e037c0 '__end' 'iter_type':'_InIter'))
    (CXXOperatorCallExpr 0x9e03f90 <line:742:2, col:21> 'const enum std::_Ios_Iostate' lvalue
      (ImplicitCastExpr 0x9e03f80 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9e03f68 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9d6a3b0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
      (DeclRefExpr 0x9e03efc <col:2> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9e03880 '__err' 'class ios_base::iostate &')
      (ImplicitCastExpr 0x9e03f58 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9e03f34 <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6ba40 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (ReturnStmt 0x9e03ff0 <line:743:7, col:14>
    (DeclRefExpr 0x9e03fd4 <col:14> 'iter_type':'_InIter' lvalue ParmVar 0x9e03780 '__beg' 'iter_type':'_InIter')))


    _InIter do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, void *&__v) const (CompoundStmt 0x9e05048 </usr/include/c++/4.6/bits/locale_facets.tcc:751:5, line:769:5>
  (DeclStmt 0x9e045e0 <line:753:7, col:49>
    0x9e045b0 "typedef class ios_base::fmtflags fmtflags")
  (DeclStmt 0x9e046f0 <line:754:7, col:42>
    0x9e04610 "const fmtflags __fmt =
      (CXXMemberCallExpr 0x9e046c0 <col:30, col:41> 'fmtflags':'enum std::_Ios_Fmtflags'
        (MemberExpr 0x9e0469c <col:30, col:35> '<bound member function type>' .flags 0x9d619d0
          (ImplicitCastExpr 0x9e046e0 <col:30> 'const class std::ios_base' lvalue <NoOp>
            (DeclRefExpr 0x9e04644 <col:30> 'class std::ios_base' lvalue ParmVar 0x9e04360 '__io' 'class std::ios_base &'))))")
  (CXXMemberCallExpr 0x9e04940 <line:755:7, col:64> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x9e0491c <col:7, col:12> '<bound member function type>' .flags 0x9d61ac0
      (DeclRefExpr 0x9e04700 <col:7> 'class std::ios_base' lvalue ParmVar 0x9e04360 '__io' 'class std::ios_base &'))
    (CXXOperatorCallExpr 0x9e048f8 <col:18, col:61> 'enum std::_Ios_Fmtflags'
      (ImplicitCastExpr 0x9e048e8 <col:49, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9e048d0 <col:49, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9d5b980 'operator|' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
      (ParenExpr 0x9e04868 <col:18, col:47> 'enum std::_Ios_Fmtflags'
        (CXXOperatorCallExpr 0x9e04840 <col:19, col:38> 'enum std::_Ios_Fmtflags'
          (ImplicitCastExpr 0x9e04830 <col:25, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9e04818 <col:25, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9d5b750 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
          (ImplicitCastExpr 0x9e04808 <col:19> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9e04758 <col:19> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9e04610 '__fmt' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
          (CXXOperatorCallExpr 0x9e047e8 <col:27, col:38> 'enum std::_Ios_Fmtflags'
            (ImplicitCastExpr 0x9e047d8 <<invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9e047c0 <<invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags)' lvalue Function 0x9d5bdc0 'operator~' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags)'))
            (ImplicitCastExpr 0x9e047b0 <col:28, col:38> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0x9e0478c <col:28, col:38> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9d6b8d0 'basefield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))))
      (ImplicitCastExpr 0x9e048c0 <col:51, col:61> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
        (DeclRefExpr 0x9e0489c <col:51, col:61> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9d6b3f0 'hex' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
  (DeclStmt 0x9e04d40 <line:757:7, line:759:57>
    0x9e04d10 "typedef __gnu_cxx::__conditional_type<(sizeof(void *) <= sizeof(unsigned long)), unsigned long, unsigned long long>::__type _UIntPtrType")
  (DeclStmt 0x9e04da8 <line:761:7, col:24>
    0x9e04d70 "_UIntPtrType __ul")
  (BinaryOperator 0x9e04ec8 <line:762:7, col:61> '<dependent type>' '='
    (DeclRefExpr 0x9e04db8 <col:7> 'iter_type':'_InIter' lvalue ParmVar 0x9e042d0 '__beg' 'iter_type':'_InIter')
    (CallExpr 0x9e04e98 <col:15, col:61> '<dependent type>'
      (UnresolvedMemberExpr 0x9e04de0 <col:15> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9e04e1c <col:30> 'iter_type':'_InIter' lvalue ParmVar 0x9e042d0 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0x9e04e34 <col:37> 'iter_type':'_InIter' lvalue ParmVar 0x9e04310 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x9e04e4c <col:44> 'class std::ios_base' lvalue ParmVar 0x9e04360 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9e04e64 <col:50> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9e043d0 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x9e04e7c <col:57> '_UIntPtrType':'unsigned long' lvalue Var 0x9e04d70 '__ul' '_UIntPtrType':'unsigned long')))
  (CXXMemberCallExpr 0x9e04f70 <line:765:7, col:23> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x9e04f50 <col:7, col:12> '<bound member function type>' .flags 0x9d61ac0
      (DeclRefExpr 0x9e04ee0 <col:7> 'class std::ios_base' lvalue ParmVar 0x9e04360 '__io' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9e04f90 <col:18> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9e04f38 <col:18> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9e04610 '__fmt' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (BinaryOperator 0x9e05008 <line:767:7, col:41> 'void *' lvalue '='
    (DeclRefExpr 0x9e04f9c <col:7> 'void *' lvalue ParmVar 0x9e04420 '__v' 'void *&')
    (CXXReinterpretCastExpr 0x9e04ff0 <col:13, col:41> 'void *' reinterpret_cast<void *> <IntegralToPointer>
      (ImplicitCastExpr 0x9e04fe0 <col:37> '_UIntPtrType':'unsigned long' <LValueToRValue>
        (DeclRefExpr 0x9e04fb4 <col:37> '_UIntPtrType':'unsigned long' lvalue Var 0x9e04d70 '__ul' '_UIntPtrType':'unsigned long'))))
  (ReturnStmt 0x9e05038 <line:768:7, col:14>
    (DeclRefExpr 0x9e05020 <col:14> 'iter_type':'_InIter' lvalue ParmVar 0x9e042d0 '__beg' 'iter_type':'_InIter')))


    void _M_pad(_CharT __fill, streamsize __w, std::ios_base &__io, _CharT *__new, const _CharT *__cs, int &__len) const (CompoundStmt 0x9e059a8 </usr/include/c++/4.6/bits/locale_facets.tcc:778:5, line:784:5>
  (CallExpr 0x9e058f0 <line:781:7, line:782:25> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9e05828 <line:781:7, col:44> '<dependent type>' lvalue)
    (DeclRefExpr 0x9e0585c <col:51> 'class std::ios_base' lvalue ParmVar 0x9e053b0 '__io' 'class std::ios_base &')
    (DeclRefExpr 0x9e05874 <col:57> '_CharT' lvalue ParmVar 0x9e05320 '__fill' '_CharT')
    (DeclRefExpr 0x9e0588c <col:65> '_CharT *' lvalue ParmVar 0x9e05420 '__new' '_CharT *')
    (DeclRefExpr 0x9e058a4 <line:782:9> 'const _CharT *' lvalue ParmVar 0x9e05490 '__cs' 'const _CharT *')
    (DeclRefExpr 0x9e058bc <col:15> 'streamsize':'int' lvalue ParmVar 0x9e05360 '__w' 'streamsize':'int')
    (DeclRefExpr 0x9e058d4 <col:20> 'int' lvalue ParmVar 0x9e054e0 '__len' 'int &'))
  (BinaryOperator 0x9e05990 <line:783:7, col:35> 'int' lvalue '='
    (DeclRefExpr 0x9e05924 <col:7> 'int' lvalue ParmVar 0x9e054e0 '__len' 'int &')
    (CXXStaticCastExpr 0x9e05978 <col:15, col:35> 'int' static_cast<int> <NoOp>
      (ImplicitCastExpr 0x9e05968 <col:32> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0x9e0593c <col:32> 'streamsize':'int' lvalue ParmVar 0x9e05360 '__w' 'streamsize':'int')))))


    template <typename _CharT, typename _ValueT> int __int_to_char(_CharT *__bufend, _ValueT __v, const _CharT *__lit, ios_base::fmtflags __flags, bool __dec) (CompoundStmt 0x9e06c78 </usr/include/c++/4.6/bits/locale_facets.tcc:792:5, line:828:5>
  (DeclStmt 0x9e05dd0 <line:793:7, col:31>
    0x9e05d80 "_CharT *__buf =
      (DeclRefExpr 0x9e05db4 <col:23> '_CharT *' lvalue ParmVar 0x9e05aa0 '__bufend' '_CharT *')")
  (IfStmt 0x9e06bb8 <line:794:7, line:826:2>
    <<<NULL>>>
    (ImplicitCastExpr 0x9e05e88 <line:794:11, col:39> '_Bool' <IntegralToBoolean>
      (CallExpr 0x9e05e30 <col:11, col:39> 'long'
        (ImplicitCastExpr 0x9e05e20 <col:11> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9e05de0 <col:11> 'long (long, long)' lvalue Function 0x9ca0bd0 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0x9e05e68 <col:28> 'long' <IntegralCast>
          (ImplicitCastExpr 0x9e05e58 <col:28> '_Bool' <LValueToRValue>
            (DeclRefExpr 0x9e05df8 <col:28> '_Bool' lvalue ParmVar 0x9e05c00 '__dec' '_Bool')))
        (ImplicitCastExpr 0x9e05e78 <col:35> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0x9e05e10 <col:35> '_Bool' true))))
    (CompoundStmt 0x9e06168 <line:795:2, line:803:2>
      (DoStmt 0x9e06150 <line:797:4, line:802:19>
        (CompoundStmt 0x9e06088 <line:798:6, line:801:6>
          (BinaryOperator 0x9e06020 <line:799:8, col:60> '<dependent type>' '='
            (UnaryOperator 0x9e05ec8 <col:8, col:11> '<dependent type>' prefix '*'
              (UnaryOperator 0x9e05eb0 <col:9, col:11> '<dependent type>' prefix '--'
                (DeclRefExpr 0x9e05e94 <col:11> '_CharT *' lvalue Var 0x9e05d80 '__buf' '_CharT *')))
            (ArraySubscriptExpr 0x9e06008 <col:19, col:60> '<dependent type>' lvalue
              (DeclRefExpr 0x9e05edc <col:19> 'const _CharT *' lvalue ParmVar 0x9e05b50 '__lit' 'const _CharT *')
              (CXXOperatorCallExpr 0x9e05fe0 <col:25, col:50> '<dependent type>'
                (UnresolvedLookupExpr 0x9e05f98 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9ce1500 0x9ce2100 0x9cb8030 0x9cb8830)
                (ParenExpr 0x9e05f40 <col:25, col:34> '<dependent type>'
                  (BinaryOperator 0x9e05f28 <col:26, col:32> '<dependent type>' '%'
                    (DeclRefExpr 0x9e05ef4 <col:26> '_ValueT' lvalue ParmVar 0x9e05ae0 '__v' '_ValueT')
                    (IntegerLiteral 0x9e05f10 <col:32> 'int' 10)))
                (DeclRefExpr 0x9e05f74 <col:38, col:50> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>' EnumConstant 0x9dd0660 '_S_odigits' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>'))))
          (CompoundAssignOperator 0x9e06068 <line:800:8, col:15> '<dependent type>' lvalue '/=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
            (DeclRefExpr 0x9e06038 <col:8> '_ValueT' lvalue ParmVar 0x9e05ae0 '__v' '_ValueT')
            (IntegerLiteral 0x9e06050 <col:15> 'int' 10)))
        (CXXOperatorCallExpr 0x9e06128 <line:802:11, col:18> '<dependent type>'
          (UnresolvedLookupExpr 0x9e060d0 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b412d0 0x9ac7fa0 0x9b5e2b0 0x9ba7d20 0x9bc7160 0x9bc74d0 0x9cbb090 0x9cbb590 0x9cbbad0 0x9db08a0)
          (DeclRefExpr 0x9e060a0 <col:11> '_ValueT' lvalue ParmVar 0x9e05ae0 '__v' '_ValueT')
          (IntegerLiteral 0x9e060b8 <col:18> 'int' 0))))
    (IfStmt 0x9e06b98 <line:804:12, line:826:2>
      <<<NULL>>>
      (BinaryOperator 0x9e062d0 <line:804:16, col:61> '_Bool' '=='
        (ImplicitCastExpr 0x9e062b0 <col:16, col:46> 'int' <IntegralCast>
          (ParenExpr 0x9e06248 <col:16, col:46> 'enum std::_Ios_Fmtflags'
            (CXXOperatorCallExpr 0x9e06220 <col:17, col:37> 'enum std::_Ios_Fmtflags'
              (ImplicitCastExpr 0x9e06210 <col:25, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9e061f8 <col:25, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9d5b750 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
              (ImplicitCastExpr 0x9e061d8 <col:17> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                (DeclRefExpr 0x9e0617c <col:17> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9e05bc0 '__flags' 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags'))
              (ImplicitCastExpr 0x9e061e8 <col:27, col:37> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                (DeclRefExpr 0x9e061b4 <col:27, col:37> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9d6b8d0 'basefield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))))
        (ImplicitCastExpr 0x9e062c0 <col:51, col:61> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9e062a0 <col:51, col:61> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9e0627c <col:51, col:61> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9d6b510 'oct' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
      (CompoundStmt 0x9e06608 <line:805:2, line:813:2>
        (DoStmt 0x9e065f0 <line:807:4, line:812:19>
          (CompoundStmt 0x9e06528 <line:808:6, line:811:6>
            (BinaryOperator 0x9e064c0 <line:809:8, col:61> '<dependent type>' '='
              (UnaryOperator 0x9e06318 <col:8, col:11> '<dependent type>' prefix '*'
                (UnaryOperator 0x9e06300 <col:9, col:11> '<dependent type>' prefix '--'
                  (DeclRefExpr 0x9e062e8 <col:11> '_CharT *' lvalue Var 0x9e05d80 '__buf' '_CharT *')))
              (ArraySubscriptExpr 0x9e064a8 <col:19, col:61> '<dependent type>' lvalue
                (DeclRefExpr 0x9e0632c <col:19> 'const _CharT *' lvalue ParmVar 0x9e05b50 '__lit' 'const _CharT *')
                (CXXOperatorCallExpr 0x9e06480 <col:25, col:51> '<dependent type>'
                  (UnresolvedLookupExpr 0x9e06438 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9ce1500 0x9ce2100 0x9cb8030 0x9cb8830)
                  (ParenExpr 0x9e063e0 <col:25, col:35> '<dependent type>'
                    (CXXOperatorCallExpr 0x9e063b8 <col:26, col:32> '<dependent type>'
                      (UnresolvedLookupExpr 0x9e06378 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9d5b750 0x9d68890 0x9d69b00)
                      (DeclRefExpr 0x9e06344 <col:26> '_ValueT' lvalue ParmVar 0x9e05ae0 '__v' '_ValueT')
                      (IntegerLiteral 0x9e06360 <col:32> 'int' 7)))
                  (DeclRefExpr 0x9e06414 <col:39, col:51> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>' EnumConstant 0x9dd0660 '_S_odigits' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>'))))
            (CompoundAssignOperator 0x9e06508 <line:810:8, col:16> '<dependent type>' lvalue '>>=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
              (DeclRefExpr 0x9e064d8 <col:8> '_ValueT' lvalue ParmVar 0x9e05ae0 '__v' '_ValueT')
              (IntegerLiteral 0x9e064f0 <col:16> 'int' 3)))
          (CXXOperatorCallExpr 0x9e065c8 <line:812:11, col:18> '<dependent type>'
            (UnresolvedLookupExpr 0x9e06570 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b412d0 0x9ac7fa0 0x9b5e2b0 0x9ba7d20 0x9bc7160 0x9bc74d0 0x9cbb090 0x9cbb590 0x9cbbad0 0x9db08a0)
            (DeclRefExpr 0x9e06540 <col:11> '_ValueT' lvalue ParmVar 0x9e05ae0 '__v' '_ValueT')
            (IntegerLiteral 0x9e06558 <col:18> 'int' 0))))
      (CompoundStmt 0x9e06b78 <line:815:2, line:826:2>
        (DeclStmt 0x9e06740 <line:817:4, col:58>
          0x9e06630 "const bool __uppercase =
            (ImplicitCastExpr 0x9e06730 <col:29, col:49> '_Bool' <IntegralToBoolean>
              (CXXOperatorCallExpr 0x9e06708 <col:29, col:49> 'enum std::_Ios_Fmtflags'
                (ImplicitCastExpr 0x9e066f8 <col:37, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
                  (DeclRefExpr 0x9e066e0 <col:37, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9d5b750 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
                (ImplicitCastExpr 0x9e066c0 <col:29> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                  (DeclRefExpr 0x9e06664 <col:29> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9e05bc0 '__flags' 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags'))
                (ImplicitCastExpr 0x9e066d0 <col:39, col:49> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                  (DeclRefExpr 0x9e0669c <col:39, col:49> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9d6b810 'uppercase' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))")
        (DeclStmt 0x9e06870 <line:818:4, line:819:66>
          0x9e06760 "const int __case_offset =
            (ImplicitCastExpr 0x9e06860 <line:818:30, line:819:56> 'const int' <IntegralCast>
              (ConditionalOperator 0x9e06840 <line:818:30, line:819:56> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>'
                (ImplicitCastExpr 0x9e06830 <line:818:30> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0x9e06794 <col:30> 'const _Bool' lvalue Var 0x9e06630 '__uppercase' 'const _Bool'))
                (DeclRefExpr 0x9e067cc <col:44, col:56> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>' EnumConstant 0x9dd0730 '_S_oudigits' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')
                (DeclRefExpr 0x9e0680c <line:819:44, col:56> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>' EnumConstant 0x9dd0660 '_S_odigits' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')))")
        (DoStmt 0x9e06b60 <line:820:4, line:825:19>
          (CompoundStmt 0x9e06a98 <line:821:6, line:824:6>
            (BinaryOperator 0x9e06a30 <line:822:8, col:52> '<dependent type>' '='
              (UnaryOperator 0x9e068b0 <col:8, col:11> '<dependent type>' prefix '*'
                (UnaryOperator 0x9e06898 <col:9, col:11> '<dependent type>' prefix '--'
                  (DeclRefExpr 0x9e06880 <col:11> '_CharT *' lvalue Var 0x9e05d80 '__buf' '_CharT *')))
              (ArraySubscriptExpr 0x9e06a18 <col:19, col:52> '<dependent type>' lvalue
                (DeclRefExpr 0x9e068c4 <col:19> 'const _CharT *' lvalue ParmVar 0x9e05b50 '__lit' 'const _CharT *')
                (CXXOperatorCallExpr 0x9e069f0 <col:25, col:39> '<dependent type>'
                  (UnresolvedLookupExpr 0x9e069a8 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9ce1500 0x9ce2100 0x9cb8030 0x9cb8830)
                  (ParenExpr 0x9e06978 <col:25, col:35> '<dependent type>'
                    (CXXOperatorCallExpr 0x9e06950 <col:26, col:32> '<dependent type>'
                      (UnresolvedLookupExpr 0x9e06910 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9d5b750 0x9d68890 0x9d69b00)
                      (DeclRefExpr 0x9e068dc <col:26> '_ValueT' lvalue ParmVar 0x9e05ae0 '__v' '_ValueT')
                      (IntegerLiteral 0x9e068f8 <col:32> 'int' 15)))
                  (DeclRefExpr 0x9e0698c <col:39> 'const int' lvalue Var 0x9e06760 '__case_offset' 'const int'))))
            (CompoundAssignOperator 0x9e06a78 <line:823:8, col:16> '<dependent type>' lvalue '>>=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
              (DeclRefExpr 0x9e06a48 <col:8> '_ValueT' lvalue ParmVar 0x9e05ae0 '__v' '_ValueT')
              (IntegerLiteral 0x9e06a60 <col:16> 'int' 4)))
          (CXXOperatorCallExpr 0x9e06b38 <line:825:11, col:18> '<dependent type>'
            (UnresolvedLookupExpr 0x9e06ae0 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b412d0 0x9ac7fa0 0x9b5e2b0 0x9ba7d20 0x9bc7160 0x9bc74d0 0x9cbb090 0x9cbb590 0x9cbbad0 0x9db08a0)
            (DeclRefExpr 0x9e06ab0 <col:11> '_ValueT' lvalue ParmVar 0x9e05ae0 '__v' '_ValueT')
            (IntegerLiteral 0x9e06ac8 <col:18> 'int' 0))))))
  (ReturnStmt 0x9e06c68 <line:827:7, col:25>
    (CXXOperatorCallExpr 0x9e06c40 <col:14, col:25> '<dependent type>'
      (UnresolvedLookupExpr 0x9e06c08 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
      (DeclRefExpr 0x9e06bd4 <col:14> '_CharT *' lvalue ParmVar 0x9e05aa0 '__bufend' '_CharT *')
      (DeclRefExpr 0x9e06bec <col:25> '_CharT *' lvalue Var 0x9e05d80 '__buf' '_CharT *'))))

;
    void _M_group_int(const char *__grouping, size_t __grouping_size, _CharT __sep, std::ios_base &, _CharT *__new, _CharT *__cs, int &__len) const (CompoundStmt 0x9e09798 </usr/include/c++/4.6/bits/locale_facets.tcc:837:5, line:841:5>
  (DeclStmt 0x9e096c8 <line:838:7, line:839:42>
    0x9e07290 "_CharT *__p =
      (CallExpr 0x9e09690 <line:838:21, line:839:41> '<dependent type>'
        (UnresolvedLookupExpr 0x9e09540 <line:838:21, col:26> '<overloaded function type>' lvalue (no ADL) = '1' 0x9dbb050)
        (DeclRefExpr 0x9e09574 <col:41> '_CharT *' lvalue ParmVar 0x9e07080 '__new' '_CharT *')
        (DeclRefExpr 0x9e0958c <col:48> '_CharT' lvalue ParmVar 0x9e06fc0 '__sep' '_CharT')
        (DeclRefExpr 0x9e095a4 <col:55> 'const char *' lvalue ParmVar 0x9e06f40 '__grouping' 'const char *')
        (DeclRefExpr 0x9e095bc <line:839:6> 'size_t':'unsigned int' lvalue ParmVar 0x9e06f80 '__grouping_size' 'size_t':'unsigned int')
        (DeclRefExpr 0x9e095d4 <col:23> '_CharT *' lvalue ParmVar 0x9e070d0 '__cs' '_CharT *')
        (CXXOperatorCallExpr 0x9e09668 <col:29, col:36> '<dependent type>'
          (UnresolvedLookupExpr 0x9e09620 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9ce1500 0x9ce2100 0x9cb8030 0x9cb8830)
          (DeclRefExpr 0x9e095ec <col:29> '_CharT *' lvalue ParmVar 0x9e070d0 '__cs' '_CharT *')
          (DeclRefExpr 0x9e09604 <col:36> 'int' lvalue ParmVar 0x9e07120 '__len' 'int &')))")
  (BinaryOperator 0x9e09780 <line:840:7, col:21> '<dependent type>' '='
    (DeclRefExpr 0x9e096d8 <col:7> 'int' lvalue ParmVar 0x9e07120 '__len' 'int &')
    (CXXOperatorCallExpr 0x9e09758 <col:15, col:21> '<dependent type>'
      (UnresolvedLookupExpr 0x9e09720 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
      (DeclRefExpr 0x9e096f0 <col:15> '_CharT *' lvalue Var 0x9e07290 '__p' '_CharT *')
      (DeclRefExpr 0x9e09708 <col:21> '_CharT *' lvalue ParmVar 0x9e07080 '__new' '_CharT *'))))


    template <typename _ValueT> _OutIter _M_insert_int(_OutIter __s, std::ios_base &__io, _CharT __fill, _ValueT __v) const (CompoundStmt 0x9e0c808 </usr/include/c++/4.6/bits/locale_facets.tcc:849:7, line:930:7>
  (DeclStmt 0x9e09d98 <line:850:2, col:33>
    0x9e09d30 "Using__gnu_cxx::;")
  (DeclStmt 0x9e09ec0 <line:851:2, col:66>
    0x9e09e90 "typedef typename __add_unsigned<_ValueT>::__type __unsigned_type")
  (DeclStmt 0x9e09fb0 <line:852:2, col:60>
    0x9e09f80 "typedef __numpunct_cache<_CharT> __cache_type")
  (DeclStmt 0x9e0a0b8 <line:853:2, col:32>
    0x9e0a080 "__use_cache<__cache_type> __uc")
  (DeclStmt 0x9e0a180 <line:854:2, col:40>
    0x9e0a0e0 "const std::locale &__loc =
      (CXXMemberCallExpr 0x9e0a150 <col:24, col:39> 'const class std::locale' lvalue
        (MemberExpr 0x9e0a12c <col:24, col:29> '<bound member function type>' ._M_getloc 0x9d623d0
          (ImplicitCastExpr 0x9e0a170 <col:24> 'const class std::ios_base' lvalue <NoOp>
            (DeclRefExpr 0x9e0a114 <col:24> 'class std::ios_base' lvalue ParmVar 0x9e09b00 '__io' 'class std::ios_base &'))))")
  (DeclStmt 0x9e0a248 <line:855:2, col:40>
    0x9e0a1c0 "const __cache_type *__lc =
      (CallExpr 0x9e0a228 <col:29, col:39> '<dependent type>'
        (DeclRefExpr 0x9e0a1f4 <col:29> '__use_cache<__cache_type>' lvalue Var 0x9e0a080 '__uc' '__use_cache<__cache_type>')
        (DeclRefExpr 0x9e0a20c <col:34> 'const class std::locale' lvalue Var 0x9e0a0e0 '__loc' 'const class std::locale &'))")
  (DeclStmt 0x9e0a318 <line:856:2, col:42>
    0x9e0a290 "const _CharT *__lit =
      (CXXDependentScopeMemberExpr 0x9e0a2e0 <col:24, col:30> '<dependent type>' lvalue
        (DeclRefExpr 0x9e0a2c4 <col:24> 'const __cache_type *' lvalue Var 0x9e0a1c0 '__lc' 'const __cache_type *'))")
  (DeclStmt 0x9e0a440 <line:857:2, col:49>
    0x9e0a360 "const ios_base::fmtflags __flags =
      (CXXMemberCallExpr 0x9e0a410 <col:37, col:48> 'fmtflags':'enum std::_Ios_Fmtflags'
        (MemberExpr 0x9e0a3ec <col:37, col:42> '<bound member function type>' .flags 0x9d619d0
          (ImplicitCastExpr 0x9e0a430 <col:37> 'const class std::ios_base' lvalue <NoOp>
            (DeclRefExpr 0x9e0a394 <col:37> 'class std::ios_base' lvalue ParmVar 0x9e09b00 '__io' 'class std::ios_base &'))))")
  (DeclStmt 0x9e0a508 <line:860:2, col:40>
    0x9e0a460 "const int __ilen =
      (ImplicitCastExpr 0x9e0a4f8 <col:21, col:39> 'const int' <IntegralCast>
        (BinaryOperator 0x9e0a4e0 <col:21, col:39> 'unsigned int' '*'
          (ImplicitCastExpr 0x9e0a4d0 <col:21> 'unsigned int' <IntegralCast>
            (IntegerLiteral 0x9e0a498 <col:21> 'int' 5))
          (UnaryExprOrTypeTraitExpr 0x9e0a4b8 <col:25, col:39> 'unsigned int' sizeof '_ValueT')))")
  (DeclStmt 0x9e0a748 <line:861:2, line:862:23>
    0x9e0a550 "_CharT *__cs =
      (CXXStaticCastExpr 0x9e0a730 <line:861:17, line:862:22> '_CharT *' static_cast<_CharT *> <Dependent>
        (CallExpr 0x9e0a700 <line:861:38, line:862:21> 'void *'
          (ImplicitCastExpr 0x9e0a6f0 <line:861:38> 'void *(*)(unsigned int)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9e0a664 <col:38> 'void *(unsigned int)' lvalue Function 0x9e0a590 '__builtin_alloca' 'void *(unsigned int)'))
          (BinaryOperator 0x9e0a6d8 <col:55, line:862:15> 'unsigned int' '*'
            (UnaryExprOrTypeTraitExpr 0x9e0a688 <line:861:55, col:68> 'unsigned int' sizeof '_CharT')
            (ImplicitCastExpr 0x9e0a6c8 <line:862:15> 'unsigned int' <IntegralCast>
              (ImplicitCastExpr 0x9e0a6b8 <col:15> 'int' <LValueToRValue>
                (DeclRefExpr 0x9e0a6a0 <col:15> 'const int' lvalue Var 0x9e0a460 '__ilen' 'const int'))))))")
  (DeclStmt 0x9e0a890 <line:866:2, col:70>
    0x9e0a790 "const ios_base::fmtflags __basefield =
      (CXXOperatorCallExpr 0x9e0a868 <col:41, col:61> 'enum std::_Ios_Fmtflags'
        (ImplicitCastExpr 0x9e0a858 <col:49, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9e0a840 <col:49, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9d5b750 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
        (ImplicitCastExpr 0x9e0a820 <col:41> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
          (DeclRefExpr 0x9e0a7c4 <col:41> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9e0a360 '__flags' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags'))
        (ImplicitCastExpr 0x9e0a830 <col:51, col:61> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
          (DeclRefExpr 0x9e0a7fc <col:51, col:61> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9d6b8d0 'basefield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))")
  (DeclStmt 0x9e0aab0 <line:867:2, line:868:40>
    0x9e0a8b0 "const bool __dec =
      (ParenExpr 0x9e0aa60 <line:867:21, line:868:39> '_Bool'
        (BinaryOperator 0x9e0aa48 <line:867:22, line:868:36> '_Bool' '&&'
          (BinaryOperator 0x9e0a980 <line:867:22, col:47> '_Bool' '!='
            (ImplicitCastExpr 0x9e0a960 <col:22> 'int' <IntegralCast>
              (ImplicitCastExpr 0x9e0a940 <col:22> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                (DeclRefExpr 0x9e0a8e4 <col:22> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9e0a790 '__basefield' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
            (ImplicitCastExpr 0x9e0a970 <col:37, col:47> 'int' <IntegralCast>
              (ImplicitCastExpr 0x9e0a950 <col:37, col:47> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                (DeclRefExpr 0x9e0a91c <col:37, col:47> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9d6b510 'oct' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
          (BinaryOperator 0x9e0aa30 <line:868:11, col:36> '_Bool' '!='
            (ImplicitCastExpr 0x9e0aa10 <col:11> 'int' <IntegralCast>
              (ImplicitCastExpr 0x9e0a9f0 <col:11> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                (DeclRefExpr 0x9e0a998 <col:11> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9e0a790 '__basefield' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
            (ImplicitCastExpr 0x9e0aa20 <col:26, col:36> 'int' <IntegralCast>
              (ImplicitCastExpr 0x9e0aa00 <col:26, col:36> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                (DeclRefExpr 0x9e0a9cc <col:26, col:36> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9d6b3f0 'hex' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))))")
  (DeclStmt 0x9e0ad38 <line:869:2, line:871:34>
    0x9e0aae0 "const __unsigned_type __u =
      (ParenExpr 0x9e0ad20 <line:869:30, line:871:33> '<dependent type>'
        (ConditionalOperator 0x9e0ad00 <line:869:31, line:871:32> '<dependent type>'
          (ParenExpr 0x9e0ac10 <line:869:31, col:49> '<dependent type>'
            (BinaryOperator 0x9e0abf8 <col:32, col:44> '<dependent type>' '||'
              (CXXOperatorCallExpr 0x9e0ab90 <col:32, col:38> '<dependent type>'
                (UnresolvedLookupExpr 0x9e0ab48 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b42c70 0x9ac83c0 0x9b5e730 0x9cbd1f0 0x9cbd720 0x9cbdc50)
                (DeclRefExpr 0x9e0ab14 <col:32> '_ValueT' lvalue ParmVar 0x9e09b80 '__v' '_ValueT')
                (IntegerLiteral 0x9e0ab30 <col:38> 'int' 0))
              (UnaryOperator 0x9e0abe0 <col:43, col:44> '_Bool' prefix '!'
                (ImplicitCastExpr 0x9e0abd0 <col:44> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0x9e0abb4 <col:44> 'const _Bool' lvalue Var 0x9e0a8b0 '__dec' 'const _Bool')))))
          (CXXUnresolvedConstructExpr 0x9e0ac48 <line:870:12, col:31> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type'
            (DeclRefExpr 0x9e0ac30 <col:28> '_ValueT' lvalue ParmVar 0x9e09b80 '__v' '_ValueT'))
          (CXXOperatorCallExpr 0x9e0ace0 <line:871:12, col:32> '<dependent type>'
            (UnresolvedLookupExpr 0x9e0aca8 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
            (CXXUnresolvedConstructExpr 0x9e0ac88 <col:13, col:32> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type'
              (DeclRefExpr 0x9e0ac70 <col:29> '_ValueT' lvalue ParmVar 0x9e09b80 '__v' '_ValueT')))))")
  (DeclStmt 0x9e0af00 <line:872:3, col:71>
    0x9e0ad60 "int __len =
      (CallExpr 0x9e0aed0 <col:15, col:70> '<dependent type>'
        (UnresolvedLookupExpr 0x9e0ad98 <col:15> '<overloaded function type>' lvalue (ADL) = '1' 0x9e05d30)
        (CXXOperatorCallExpr 0x9e0ae48 <col:29, col:36> '<dependent type>'
          (UnresolvedLookupExpr 0x9e0ae00 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9ce1500 0x9ce2100 0x9cb8030 0x9cb8830)
          (DeclRefExpr 0x9e0adcc <col:29> '_CharT *' lvalue Var 0x9e0a550 '__cs' '_CharT *')
          (DeclRefExpr 0x9e0ade4 <col:36> 'const int' lvalue Var 0x9e0a460 '__ilen' 'const int'))
        (DeclRefExpr 0x9e0ae6c <col:44> 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type' lvalue Var 0x9e0aae0 '__u' 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type')
        (DeclRefExpr 0x9e0ae84 <col:49> 'const _CharT *' lvalue Var 0x9e0a290 '__lit' 'const _CharT *')
        (DeclRefExpr 0x9e0ae9c <col:56> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9e0a360 '__flags' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')
        (DeclRefExpr 0x9e0aeb4 <col:65> 'const _Bool' lvalue Var 0x9e0a8b0 '__dec' 'const _Bool'))")
  (CompoundAssignOperator 0x9e0af90 <line:873:2, col:19> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (DeclRefExpr 0x9e0af10 <col:2> '_CharT *' lvalue Var 0x9e0a550 '__cs' '_CharT *')
    (BinaryOperator 0x9e0af78 <col:10, col:19> 'int' '-'
      (ImplicitCastExpr 0x9e0af58 <col:10> 'int' <LValueToRValue>
        (DeclRefExpr 0x9e0af28 <col:10> 'const int' lvalue Var 0x9e0a460 '__ilen' 'const int'))
      (ImplicitCastExpr 0x9e0af68 <col:19> 'int' <LValueToRValue>
        (DeclRefExpr 0x9e0af40 <col:19> 'int' lvalue Var 0x9e0ad60 '__len' 'int'))))
  (IfStmt 0x9e0b4f0 <line:876:2, line:886:4>
    <<<NULL>>>
    (CXXDependentScopeMemberExpr 0x9e0afc8 <line:876:6, col:12> '<dependent type>' lvalue
      (DeclRefExpr 0x9e0afb0 <col:6> 'const __cache_type *' lvalue Var 0x9e0a1c0 '__lc' 'const __cache_type *'))
    (CompoundStmt 0x9e0b4d0 <line:877:4, line:886:4>
      (DeclStmt 0x9e0b1b0 <line:880:6, line:882:16>
        0x9e0b010 "_CharT *__cs2 =
          (CXXStaticCastExpr 0x9e0b198 <line:880:22, line:882:15> '_CharT *' static_cast<_CharT *> <Dependent>
            (CallExpr 0x9e0b168 <line:880:43, line:882:14> 'void *'
              (ImplicitCastExpr 0x9e0b158 <line:880:43> 'void *(*)(unsigned int)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9e0b044 <col:43> 'void *(unsigned int)' lvalue Function 0x9e0a590 '__builtin_alloca' 'void *(unsigned int)'))
              (BinaryOperator 0x9e0b140 <col:60, line:882:13> 'unsigned int' '*'
                (BinaryOperator 0x9e0b100 <line:880:60, line:881:23> 'unsigned int' '*'
                  (UnaryExprOrTypeTraitExpr 0x9e0b068 <line:880:60, col:73> 'unsigned int' sizeof '_CharT')
                  (ImplicitCastExpr 0x9e0b0f0 <line:881:13, col:23> 'unsigned int' <IntegralCast>
                    (ParenExpr 0x9e0b0d8 <col:13, col:23> 'int'
                      (BinaryOperator 0x9e0b0c0 <col:14, col:22> 'int' '+'
                        (ImplicitCastExpr 0x9e0b0b0 <col:14> 'int' <LValueToRValue>
                          (DeclRefExpr 0x9e0b080 <col:14> 'int' lvalue Var 0x9e0ad60 '__len' 'int'))
                        (IntegerLiteral 0x9e0b098 <col:22> 'int' 1)))))
                (ImplicitCastExpr 0x9e0b130 <line:882:13> 'unsigned int' <IntegralCast>
                  (IntegerLiteral 0x9e0b118 <col:13> 'int' 2)))))")
      (CallExpr 0x9e0b3c8 <line:883:6, line:884:57> '<dependent type>'
        (MemberExpr 0x9e0b1d0 <line:883:6> '<bound member function type>' ->_M_group_int 0x9e071d0
          (CXXThisExpr 0x9e0b1c0 <col:6> 'const num_put<_CharT, _OutIter> *' this))
        (CXXDependentScopeMemberExpr 0x9e0b208 <col:19, col:25> '<dependent type>' lvalue
          (DeclRefExpr 0x9e0b1f0 <col:19> 'const __cache_type *' lvalue Var 0x9e0a1c0 '__lc' 'const __cache_type *'))
        (CXXDependentScopeMemberExpr 0x9e0b258 <col:38, col:44> '<dependent type>' lvalue
          (DeclRefExpr 0x9e0b23c <col:38> 'const __cache_type *' lvalue Var 0x9e0a1c0 '__lc' 'const __cache_type *'))
        (CXXDependentScopeMemberExpr 0x9e0b2a8 <line:884:5, col:11> '<dependent type>' lvalue
          (DeclRefExpr 0x9e0b28c <col:5> 'const __cache_type *' lvalue Var 0x9e0a1c0 '__lc' 'const __cache_type *'))
        (DeclRefExpr 0x9e0b2dc <col:29> 'class std::ios_base' lvalue ParmVar 0x9e09b00 '__io' 'class std::ios_base &')
        (CXXOperatorCallExpr 0x9e0b370 <col:35, col:43> '<dependent type>'
          (UnresolvedLookupExpr 0x9e0b328 <col:41, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9ce1500 0x9ce2100 0x9cb8030 0x9cb8830)
          (DeclRefExpr 0x9e0b2f4 <col:35> '_CharT *' lvalue Var 0x9e0b010 '__cs2' '_CharT *')
          (IntegerLiteral 0x9e0b310 <col:43> 'int' 2))
        (DeclRefExpr 0x9e0b394 <col:46> '_CharT *' lvalue Var 0x9e0a550 '__cs' '_CharT *')
        (DeclRefExpr 0x9e0b3ac <col:52> 'int' lvalue Var 0x9e0ad60 '__len' 'int'))
      (BinaryOperator 0x9e0b4b8 <line:885:6, col:21> '<dependent type>' '='
        (DeclRefExpr 0x9e0b400 <col:6> '_CharT *' lvalue Var 0x9e0a550 '__cs' '_CharT *')
        (CXXOperatorCallExpr 0x9e0b490 <col:13, col:21> '<dependent type>'
          (UnresolvedLookupExpr 0x9e0b448 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9ce1500 0x9ce2100 0x9cb8030 0x9cb8830)
          (DeclRefExpr 0x9e0b418 <col:13> '_CharT *' lvalue Var 0x9e0b010 '__cs2' '_CharT *')
          (IntegerLiteral 0x9e0b430 <col:21> 'int' 2))))
    <<<NULL>>>)
  (IfStmt 0x9e0c228 <line:889:2, line:914:4>
    <<<NULL>>>
    (ImplicitCastExpr 0x9e0b5b8 <line:889:6, col:34> '_Bool' <IntegralToBoolean>
      (CallExpr 0x9e0b560 <col:6, col:34> 'long'
        (ImplicitCastExpr 0x9e0b550 <col:6> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9e0b50c <col:6> 'long (long, long)' lvalue Function 0x9ca0bd0 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0x9e0b598 <col:23> 'long' <IntegralCast>
          (ImplicitCastExpr 0x9e0b588 <col:23> '_Bool' <LValueToRValue>
            (DeclRefExpr 0x9e0b524 <col:23> 'const _Bool' lvalue Var 0x9e0a8b0 '__dec' 'const _Bool')))
        (ImplicitCastExpr 0x9e0b5a8 <col:30> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0x9e0b540 <col:30> '_Bool' true))))
    (CompoundStmt 0x9e0bb28 <line:890:4, line:900:4>
      (IfStmt 0x9e0bb08 <line:892:6, line:899:50>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9e0b678 <line:892:10, col:17> '<dependent type>'
          (UnresolvedLookupExpr 0x9e0b630 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b436e0 0x9ac8bd0 0x9b5f010 0x9cbf3a0 0x9cbf900 0x9cbfe30)
          (DeclRefExpr 0x9e0b5fc <col:10> '_ValueT' lvalue ParmVar 0x9e09b80 '__v' '_ValueT')
          (IntegerLiteral 0x9e0b618 <col:17> 'int' 0))
        (CompoundStmt 0x9e0b9d8 <line:893:8, line:897:8>
          (IfStmt 0x9e0b9b8 <line:894:3, line:896:46>
            <<<NULL>>>
            (BinaryOperator 0x9e0b888 <line:894:7, line:895:48> '<dependent type>' '&&'
              (CXXFunctionalCastExpr 0x9e0b780 <line:894:7, col:39> '_Bool' functional cast to _Bool <NoOp>
                (ImplicitCastExpr 0x9e0b770 <col:12, col:32> '_Bool' <IntegralToBoolean>
                  (CXXOperatorCallExpr 0x9e0b748 <col:12, col:32> 'enum std::_Ios_Fmtflags'
                    (ImplicitCastExpr 0x9e0b738 <col:20, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
                      (DeclRefExpr 0x9e0b720 <col:20, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9d5b750 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
                    (ImplicitCastExpr 0x9e0b700 <col:12> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                      (DeclRefExpr 0x9e0b6a8 <col:12> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9e0a360 '__flags' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags'))
                    (ImplicitCastExpr 0x9e0b710 <col:22, col:32> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                      (DeclRefExpr 0x9e0b6dc <col:22, col:32> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9d6b6f0 'showpos' 'const fmtflags':'const enum std::_Ios_Fmtflags')))))
              (CXXDependentScopeMemberExpr 0x9e0b850 <line:895:10, col:48> '<dependent type>' lvalue))
            (BinaryOperator 0x9e0b9a0 <line:896:5, col:46> '<dependent type>' ','
              (BinaryOperator 0x9e0b958 <col:5, col:41> '<dependent type>' '='
                (UnaryOperator 0x9e0b8d0 <col:5, col:8> '<dependent type>' prefix '*'
                  (UnaryOperator 0x9e0b8b8 <col:6, col:8> '<dependent type>' prefix '--'
                    (DeclRefExpr 0x9e0b8a0 <col:8> '_CharT *' lvalue Var 0x9e0a550 '__cs' '_CharT *')))
                (ArraySubscriptExpr 0x9e0b940 <col:15, col:41> '<dependent type>' lvalue
                  (DeclRefExpr 0x9e0b8e4 <col:15> 'const _CharT *' lvalue Var 0x9e0a290 '__lit' 'const _CharT *')
                  (DeclRefExpr 0x9e0b91c <col:21, col:33> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>' EnumConstant 0x9dd05a0 '_S_oplus' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')))
              (UnaryOperator 0x9e0b988 <col:44, col:46> 'int' lvalue prefix '++'
                (DeclRefExpr 0x9e0b970 <col:46> 'int' lvalue Var 0x9e0ad60 '__len' 'int')))
            <<<NULL>>>))
        (BinaryOperator 0x9e0baf0 <line:899:8, col:50> '<dependent type>' ','
          (BinaryOperator 0x9e0baa8 <col:8, col:45> '<dependent type>' '='
            (UnaryOperator 0x9e0ba20 <col:8, col:11> '<dependent type>' prefix '*'
              (UnaryOperator 0x9e0ba08 <col:9, col:11> '<dependent type>' prefix '--'
                (DeclRefExpr 0x9e0b9ec <col:11> '_CharT *' lvalue Var 0x9e0a550 '__cs' '_CharT *')))
            (ArraySubscriptExpr 0x9e0ba90 <col:18, col:45> '<dependent type>' lvalue
              (DeclRefExpr 0x9e0ba34 <col:18> 'const _CharT *' lvalue Var 0x9e0a290 '__lit' 'const _CharT *')
              (DeclRefExpr 0x9e0ba6c <col:24, col:36> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>' EnumConstant 0x9dd0560 '_S_ominus' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')))
          (UnaryOperator 0x9e0bad8 <col:48, col:50> 'int' lvalue prefix '++'
            (DeclRefExpr 0x9e0bac0 <col:50> 'int' lvalue Var 0x9e0ad60 '__len' 'int')))))
    (IfStmt 0x9e0c208 <line:901:7, line:914:4>
      <<<NULL>>>
      (BinaryOperator 0x9e0bc50 <line:901:11, col:49> '<dependent type>' '&&'
        (CXXFunctionalCastExpr 0x9e0bc20 <col:11, col:44> '_Bool' functional cast to _Bool <NoOp>
          (ImplicitCastExpr 0x9e0bc10 <col:16, col:36> '_Bool' <IntegralToBoolean>
            (CXXOperatorCallExpr 0x9e0bbe8 <col:16, col:36> 'enum std::_Ios_Fmtflags'
              (ImplicitCastExpr 0x9e0bbd8 <col:24, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9e0bbc0 <col:24, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9d5b750 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
              (ImplicitCastExpr 0x9e0bba0 <col:16> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                (DeclRefExpr 0x9e0bb48 <col:16> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9e0a360 '__flags' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags'))
              (ImplicitCastExpr 0x9e0bbb0 <col:26, col:36> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                (DeclRefExpr 0x9e0bb7c <col:26, col:36> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9d6b630 'showbase' 'const fmtflags':'const enum std::_Ios_Fmtflags')))))
        (DeclRefExpr 0x9e0bc38 <col:49> '_ValueT' lvalue ParmVar 0x9e09b80 '__v' '_ValueT'))
      (CompoundStmt 0x9e0c1f0 <line:902:4, line:914:4>
        (IfStmt 0x9e0c1d0 <line:903:6, line:913:8>
          <<<NULL>>>
          (BinaryOperator 0x9e0bd00 <line:903:10, col:35> '_Bool' '=='
            (ImplicitCastExpr 0x9e0bce0 <col:10> 'int' <IntegralCast>
              (ImplicitCastExpr 0x9e0bcc0 <col:10> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                (DeclRefExpr 0x9e0bc68 <col:10> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9e0a790 '__basefield' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
            (ImplicitCastExpr 0x9e0bcf0 <col:25, col:35> 'int' <IntegralCast>
              (ImplicitCastExpr 0x9e0bcd0 <col:25, col:35> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                (DeclRefExpr 0x9e0bc9c <col:25, col:35> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9d6b510 'oct' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
          (BinaryOperator 0x9e0be18 <line:904:8, col:51> '<dependent type>' ','
            (BinaryOperator 0x9e0bdd0 <col:8, col:46> '<dependent type>' '='
              (UnaryOperator 0x9e0bd48 <col:8, col:11> '<dependent type>' prefix '*'
                (UnaryOperator 0x9e0bd30 <col:9, col:11> '<dependent type>' prefix '--'
                  (DeclRefExpr 0x9e0bd18 <col:11> '_CharT *' lvalue Var 0x9e0a550 '__cs' '_CharT *')))
              (ArraySubscriptExpr 0x9e0bdb8 <col:18, col:46> '<dependent type>' lvalue
                (DeclRefExpr 0x9e0bd5c <col:18> 'const _CharT *' lvalue Var 0x9e0a290 '__lit' 'const _CharT *')
                (DeclRefExpr 0x9e0bd94 <col:24, col:36> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>' EnumConstant 0x9dd0660 '_S_odigits' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')))
            (UnaryOperator 0x9e0be00 <col:49, col:51> 'int' lvalue prefix '++'
              (DeclRefExpr 0x9e0bde8 <col:51> 'int' lvalue Var 0x9e0ad60 '__len' 'int')))
          (CompoundStmt 0x9e0c1b0 <line:906:8, line:913:8>
            (DeclStmt 0x9e0bf50 <line:908:3, col:57>
              0x9e0be40 "const bool __uppercase =
                (ImplicitCastExpr 0x9e0bf40 <col:28, col:48> '_Bool' <IntegralToBoolean>
                  (CXXOperatorCallExpr 0x9e0bf18 <col:28, col:48> 'enum std::_Ios_Fmtflags'
                    (ImplicitCastExpr 0x9e0bf08 <col:36, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
                      (DeclRefExpr 0x9e0bef0 <col:36, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9d5b750 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
                    (ImplicitCastExpr 0x9e0bed0 <col:28> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                      (DeclRefExpr 0x9e0be74 <col:28> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9e0a360 '__flags' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags'))
                    (ImplicitCastExpr 0x9e0bee0 <col:38, col:48> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                      (DeclRefExpr 0x9e0beac <col:38, col:48> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9d6b810 'uppercase' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))")
            (BinaryOperator 0x9e0c078 <line:909:3, col:50> '<dependent type>' '='
              (UnaryOperator 0x9e0bf90 <col:3, col:6> '<dependent type>' prefix '*'
                (UnaryOperator 0x9e0bf78 <col:4, col:6> '<dependent type>' prefix '--'
                  (DeclRefExpr 0x9e0bf60 <col:6> '_CharT *' lvalue Var 0x9e0a550 '__cs' '_CharT *')))
              (ArraySubscriptExpr 0x9e0c060 <col:13, col:50> '<dependent type>' lvalue
                (DeclRefExpr 0x9e0bfa4 <col:13> 'const _CharT *' lvalue Var 0x9e0a290 '__lit' 'const _CharT *')
                (BinaryOperator 0x9e0c048 <col:19, col:39> 'int' '+'
                  (ImplicitCastExpr 0x9e0c018 <col:19, col:31> 'int' <IntegralCast>
                    (DeclRefExpr 0x9e0bfdc <col:19, col:31> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>' EnumConstant 0x9dd05e0 '_S_ox' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>'))
                  (ImplicitCastExpr 0x9e0c038 <col:39> 'int' <IntegralCast>
                    (ImplicitCastExpr 0x9e0c028 <col:39> '_Bool' <LValueToRValue>
                      (DeclRefExpr 0x9e0bffc <col:39> 'const _Bool' lvalue Var 0x9e0be40 '__uppercase' 'const _Bool'))))))
            (BinaryOperator 0x9e0c148 <line:911:3, col:41> '<dependent type>' '='
              (UnaryOperator 0x9e0c0c0 <col:3, col:6> '<dependent type>' prefix '*'
                (UnaryOperator 0x9e0c0a8 <col:4, col:6> '<dependent type>' prefix '--'
                  (DeclRefExpr 0x9e0c090 <col:6> '_CharT *' lvalue Var 0x9e0a550 '__cs' '_CharT *')))
              (ArraySubscriptExpr 0x9e0c130 <col:13, col:41> '<dependent type>' lvalue
                (DeclRefExpr 0x9e0c0d4 <col:13> 'const _CharT *' lvalue Var 0x9e0a290 '__lit' 'const _CharT *')
                (DeclRefExpr 0x9e0c10c <col:19, col:31> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>' EnumConstant 0x9dd0660 '_S_odigits' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')))
            (CompoundAssignOperator 0x9e0c190 <line:912:3, col:12> 'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
              (DeclRefExpr 0x9e0c160 <col:3> 'int' lvalue Var 0x9e0ad60 '__len' 'int')
              (IntegerLiteral 0x9e0c178 <col:12> 'int' 2)))))
      <<<NULL>>>))
  (DeclStmt 0x9e0c330 <line:917:2, col:37>
    0x9e0c250 "const streamsize __w =
      (CXXMemberCallExpr 0x9e0c300 <col:25, col:36> 'streamsize':'int'
        (MemberExpr 0x9e0c2dc <col:25, col:30> '<bound member function type>' .width 0x9d61ff0
          (ImplicitCastExpr 0x9e0c320 <col:25> 'const class std::ios_base' lvalue <NoOp>
            (DeclRefExpr 0x9e0c284 <col:25> 'class std::ios_base' lvalue ParmVar 0x9e09b00 '__io' 'class std::ios_base &'))))")
  (IfStmt 0x9e0c668 <line:918:2, line:924:4>
    <<<NULL>>>
    (BinaryOperator 0x9e0c3b0 <line:918:6, col:41> '_Bool' '>'
      (ImplicitCastExpr 0x9e0c3a0 <col:6> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0x9e0c340 <col:6> 'const streamsize':'const int' lvalue Var 0x9e0c250 '__w' 'const streamsize':'const int'))
      (CXXStaticCastExpr 0x9e0c388 <col:12, col:41> 'streamsize':'int' static_cast<streamsize> <NoOp>
        (ImplicitCastExpr 0x9e0c378 <col:36> 'int' <LValueToRValue>
          (DeclRefExpr 0x9e0c358 <col:36> 'int' lvalue Var 0x9e0ad60 '__len' 'int'))))
    (CompoundStmt 0x9e0c648 <line:919:4, line:924:4>
      (DeclStmt 0x9e0c4f8 <line:920:6, line:921:18>
        0x9e0c3e0 "_CharT *__cs3 =
          (CXXStaticCastExpr 0x9e0c4e0 <line:920:22, line:921:17> '_CharT *' static_cast<_CharT *> <Dependent>
            (CallExpr 0x9e0c4b0 <line:920:43, line:921:16> 'void *'
              (ImplicitCastExpr 0x9e0c4a0 <line:920:43> 'void *(*)(unsigned int)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9e0c414 <col:43> 'void *(unsigned int)' lvalue Function 0x9e0a590 '__builtin_alloca' 'void *(unsigned int)'))
              (BinaryOperator 0x9e0c488 <col:60, line:921:13> 'unsigned int' '*'
                (UnaryExprOrTypeTraitExpr 0x9e0c438 <line:920:60, col:73> 'unsigned int' sizeof '_CharT')
                (ImplicitCastExpr 0x9e0c478 <line:921:13> 'unsigned int' <IntegralCast>
                  (ImplicitCastExpr 0x9e0c468 <col:13> 'streamsize':'int' <LValueToRValue>
                    (DeclRefExpr 0x9e0c450 <col:13> 'const streamsize':'const int' lvalue Var 0x9e0c250 '__w' 'const streamsize':'const int'))))))")
      (CallExpr 0x9e0c5c8 <line:922:6, col:50> '<dependent type>'
        (MemberExpr 0x9e0c518 <col:6> '<bound member function type>' ->_M_pad 0x9e05580
          (CXXThisExpr 0x9e0c508 <col:6> 'const num_put<_CharT, _OutIter> *' this))
        (DeclRefExpr 0x9e0c538 <col:13> '_CharT' lvalue ParmVar 0x9e09b40 '__fill' '_CharT')
        (DeclRefExpr 0x9e0c550 <col:21> 'const streamsize':'const int' lvalue Var 0x9e0c250 '__w' 'const streamsize':'const int')
        (DeclRefExpr 0x9e0c568 <col:26> 'class std::ios_base' lvalue ParmVar 0x9e09b00 '__io' 'class std::ios_base &')
        (DeclRefExpr 0x9e0c580 <col:32> '_CharT *' lvalue Var 0x9e0c3e0 '__cs3' '_CharT *')
        (DeclRefExpr 0x9e0c598 <col:39> '_CharT *' lvalue Var 0x9e0a550 '__cs' '_CharT *')
        (DeclRefExpr 0x9e0c5b0 <col:45> 'int' lvalue Var 0x9e0ad60 '__len' 'int'))
      (BinaryOperator 0x9e0c630 <line:923:6, col:13> '<dependent type>' '='
        (DeclRefExpr 0x9e0c5fc <col:6> '_CharT *' lvalue Var 0x9e0a550 '__cs' '_CharT *')
        (DeclRefExpr 0x9e0c614 <col:13> '_CharT *' lvalue Var 0x9e0c3e0 '__cs3' '_CharT *')))
    <<<NULL>>>)
  (CXXMemberCallExpr 0x9e0c718 <line:925:2, col:14> 'streamsize':'int'
    (MemberExpr 0x9e0c6f8 <col:2, col:7> '<bound member function type>' .width 0x9d620b0
      (DeclRefExpr 0x9e0c684 <col:2> 'class std::ios_base' lvalue ParmVar 0x9e09b00 '__io' 'class std::ios_base &'))
    (IntegerLiteral 0x9e0c6e0 <col:13> 'int' 0))
  (ReturnStmt 0x9e0c7f8 <line:929:2, col:38>
    (CallExpr 0x9e0c7d0 <col:9, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0x9e0c750 <col:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0x9dbb560 0x9dbb920)
      (DeclRefExpr 0x9e0c788 <col:22> '_OutIter' lvalue ParmVar 0x9e09ab0 '__s' '_OutIter')
      (DeclRefExpr 0x9e0c7a0 <col:27> '_CharT *' lvalue Var 0x9e0a550 '__cs' '_CharT *')
      (DeclRefExpr 0x9e0c7b8 <col:33> 'int' lvalue Var 0x9e0ad60 '__len' 'int'))))

;
    void _M_group_float(const char *__grouping, size_t __grouping_size, _CharT __sep, const _CharT *__p, _CharT *__new, _CharT *__cs, int &__len) const (CompoundStmt 0x9e0d598 </usr/include/c++/4.6/bits/locale_facets.tcc:938:5, line:955:5>
  (DeclStmt 0x9e0cf98 <line:942:7, col:52>
    0x9e0ce80 "const int __declen =
      (ConditionalOperator 0x9e0cf78 <col:28, col:47> '<dependent type>'
        (DeclRefExpr 0x9e0ceb4 <col:28> 'const _CharT *' lvalue ParmVar 0x9e0cc00 '__p' 'const _CharT *')
        (CXXOperatorCallExpr 0x9e0cf38 <col:34, col:40> '<dependent type>'
          (UnresolvedLookupExpr 0x9e0cf00 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
          (DeclRefExpr 0x9e0cecc <col:34> 'const _CharT *' lvalue ParmVar 0x9e0cc00 '__p' 'const _CharT *')
          (DeclRefExpr 0x9e0cee4 <col:40> '_CharT *' lvalue ParmVar 0x9e0ccc0 '__cs' '_CharT *'))
        (DeclRefExpr 0x9e0cf5c <col:47> 'int' lvalue ParmVar 0x9e0cd10 '__len' 'int &'))")
  (DeclStmt 0x9e0d198 <line:943:7, line:945:29>
    0x9e0cfc0 "_CharT *__p2 =
      (CallExpr 0x9e0d160 <line:943:22, line:945:28> '<dependent type>'
        (UnresolvedLookupExpr 0x9e0d010 <line:943:22, col:27> '<overloaded function type>' lvalue (no ADL) = '1' 0x9dbb050)
        (DeclRefExpr 0x9e0d044 <col:42> '_CharT *' lvalue ParmVar 0x9e0cc70 '__new' '_CharT *')
        (DeclRefExpr 0x9e0d05c <col:49> '_CharT' lvalue ParmVar 0x9e0cb90 '__sep' '_CharT')
        (DeclRefExpr 0x9e0d074 <col:56> 'const char *' lvalue ParmVar 0x9e0cb10 '__grouping' 'const char *')
        (DeclRefExpr 0x9e0d08c <line:944:7> 'size_t':'unsigned int' lvalue ParmVar 0x9e0cb50 '__grouping_size' 'size_t':'unsigned int')
        (DeclRefExpr 0x9e0d0a4 <line:945:7> '_CharT *' lvalue ParmVar 0x9e0ccc0 '__cs' '_CharT *')
        (CXXOperatorCallExpr 0x9e0d138 <col:13, col:20> '<dependent type>'
          (UnresolvedLookupExpr 0x9e0d0f0 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9ce1500 0x9ce2100 0x9cb8030 0x9cb8830)
          (DeclRefExpr 0x9e0d0bc <col:13> '_CharT *' lvalue ParmVar 0x9e0ccc0 '__cs' '_CharT *')
          (DeclRefExpr 0x9e0d0d4 <col:20> 'const int' lvalue Var 0x9e0ce80 '__declen' 'const int')))")
  (DeclStmt 0x9e0d288 <line:948:7, col:34>
    0x9e0d1c0 "int __newlen =
      (CXXOperatorCallExpr 0x9e0d260 <col:22, col:29> '<dependent type>'
        (UnresolvedLookupExpr 0x9e0d228 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
        (DeclRefExpr 0x9e0d1f4 <col:22> '_CharT *' lvalue Var 0x9e0cfc0 '__p2' '_CharT *')
        (DeclRefExpr 0x9e0d20c <col:29> '_CharT *' lvalue ParmVar 0x9e0cc70 '__new' '_CharT *'))")
  (IfStmt 0x9e0d520 <line:949:7, line:953:2>
    <<<NULL>>>
    (DeclRefExpr 0x9e0d298 <line:949:11> 'const _CharT *' lvalue ParmVar 0x9e0cc00 '__p' 'const _CharT *')
    (CompoundStmt 0x9e0d508 <line:950:2, line:953:2>
      (CallExpr 0x9e0d440 <line:951:4, col:57> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e0d370 <col:4, col:25> '<dependent type>' lvalue)
        (DeclRefExpr 0x9e0d3a4 <col:30> '_CharT *' lvalue Var 0x9e0cfc0 '__p2' '_CharT *')
        (DeclRefExpr 0x9e0d3bc <col:36> 'const _CharT *' lvalue ParmVar 0x9e0cc00 '__p' 'const _CharT *')
        (BinaryOperator 0x9e0d428 <col:41, col:49> 'int' '-'
          (ImplicitCastExpr 0x9e0d408 <col:41> 'int' <LValueToRValue>
            (DeclRefExpr 0x9e0d3d4 <col:41> 'int' lvalue ParmVar 0x9e0cd10 '__len' 'int &'))
          (ImplicitCastExpr 0x9e0d418 <col:49> 'int' <LValueToRValue>
            (DeclRefExpr 0x9e0d3ec <col:49> 'const int' lvalue Var 0x9e0ce80 '__declen' 'const int'))))
      (CompoundAssignOperator 0x9e0d4e8 <line:952:4, col:24> 'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
        (DeclRefExpr 0x9e0d468 <col:4> 'int' lvalue Var 0x9e0d1c0 '__newlen' 'int')
        (BinaryOperator 0x9e0d4d0 <col:16, col:24> 'int' '-'
          (ImplicitCastExpr 0x9e0d4b0 <col:16> 'int' <LValueToRValue>
            (DeclRefExpr 0x9e0d480 <col:16> 'int' lvalue ParmVar 0x9e0cd10 '__len' 'int &'))
          (ImplicitCastExpr 0x9e0d4c0 <col:24> 'int' <LValueToRValue>
            (DeclRefExpr 0x9e0d498 <col:24> 'const int' lvalue Var 0x9e0ce80 '__declen' 'const int')))))
    <<<NULL>>>)
  (BinaryOperator 0x9e0d580 <line:954:7, col:15> 'int' lvalue '='
    (DeclRefExpr 0x9e0d53c <col:7> 'int' lvalue ParmVar 0x9e0cd10 '__len' 'int &')
    (ImplicitCastExpr 0x9e0d570 <col:15> 'int' <LValueToRValue>
      (DeclRefExpr 0x9e0d554 <col:15> 'int' lvalue Var 0x9e0d1c0 '__newlen' 'int'))))


    template <typename _ValueT> _OutIter _M_insert_float(_OutIter __s, std::ios_base &__io, _CharT __fill, char __mod, _ValueT __v) const (CompoundStmt 0x9e10758 </usr/include/c++/4.6/bits/locale_facets.tcc:973:7, line:1085:7>
  (DeclStmt 0x9e0dc70 <line:974:2, col:62>
    0x9e0dc40 "typedef __numpunct_cache<_CharT> __cache_type")
  (DeclStmt 0x9e0dd78 <line:975:2, col:32>
    0x9e0dd40 "__use_cache<__cache_type> __uc")
  (DeclStmt 0x9e0de40 <line:976:2, col:40>
    0x9e0dda0 "const std::locale &__loc =
      (CXXMemberCallExpr 0x9e0de10 <col:24, col:39> 'const class std::locale' lvalue
        (MemberExpr 0x9e0ddec <col:24, col:29> '<bound member function type>' ._M_getloc 0x9d623d0
          (ImplicitCastExpr 0x9e0de30 <col:24> 'const class std::ios_base' lvalue <NoOp>
            (DeclRefExpr 0x9e0ddd4 <col:24> 'class std::ios_base' lvalue ParmVar 0x9e0d910 '__io' 'class std::ios_base &'))))")
  (DeclStmt 0x9e0df08 <line:977:2, col:40>
    0x9e0de80 "const __cache_type *__lc =
      (CallExpr 0x9e0dee8 <col:29, col:39> '<dependent type>'
        (DeclRefExpr 0x9e0deb4 <col:29> '__use_cache<__cache_type>' lvalue Var 0x9e0dd40 '__uc' '__use_cache<__cache_type>')
        (DeclRefExpr 0x9e0decc <col:34> 'const class std::locale' lvalue Var 0x9e0dda0 '__loc' 'const class std::locale &'))")
  (DeclStmt 0x9e0e110 <line:980:2, col:71>
    0x9e0df20 "const streamsize __prec =
      (ConditionalOperator 0x9e0e0f0 <col:28, col:70> 'int'
        (BinaryOperator 0x9e0e018 <col:28, col:47> '_Bool' '<'
          (CXXMemberCallExpr 0x9e0dfd0 <col:28, col:43> 'streamsize':'int'
            (MemberExpr 0x9e0dfac <col:28, col:33> '<bound member function type>' .precision 0x9d61e80
              (ImplicitCastExpr 0x9e0dff0 <col:28> 'const class std::ios_base' lvalue <NoOp>
                (DeclRefExpr 0x9e0df54 <col:28> 'class std::ios_base' lvalue ParmVar 0x9e0d910 '__io' 'class std::ios_base &'))))
          (IntegerLiteral 0x9e0e000 <col:47> 'int' 0))
        (IntegerLiteral 0x9e0e030 <col:51> 'int' 6)
        (CXXMemberCallExpr 0x9e0e0c0 <col:55, col:70> 'streamsize':'int'
          (MemberExpr 0x9e0e0a0 <col:55, col:60> '<bound member function type>' .precision 0x9d61e80
            (ImplicitCastExpr 0x9e0e0e0 <col:55> 'const class std::ios_base' lvalue <NoOp>
              (DeclRefExpr 0x9e0e048 <col:55> 'class std::ios_base' lvalue ParmVar 0x9e0d910 '__io' 'class std::ios_base &')))))")
  (DeclStmt 0x9e0e258 <line:982:2, line:983:52>
    0x9e0e130 "const int __max_digits =
      (CXXDependentScopeMemberExpr 0x9e0e220 <col:4, col:42> '<dependent type>' lvalue)")
  (DeclStmt 0x9e0e2b8 <line:986:2, col:11>
    0x9e0e280 "int __len")
  (DeclStmt 0x9e0e358 <line:988:2, col:17>
    0x9e0e320 "char __fbuf[16]")
  (CallExpr 0x9e0e448 <line:989:2, col:49> 'void'
    (ImplicitCastExpr 0x9e0e438 <col:2, col:14> 'void (*)(const class std::ios_base &, char *, char) throw()' <FunctionToPointerDecay>
      (DeclRefExpr 0x9e0e390 <col:2, col:14> 'void (const class std::ios_base &, char *, char) throw()' lvalue CXXMethod 0x9dd0ec0 '_S_format_float' 'void (const class std::ios_base &, char *, char) throw()'))
    (ImplicitCastExpr 0x9e0e470 <col:30> 'const class std::ios_base' lvalue <NoOp>
      (DeclRefExpr 0x9e0e3b0 <col:30> 'class std::ios_base' lvalue ParmVar 0x9e0d910 '__io' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9e0e480 <col:36> 'char *' <ArrayToPointerDecay>
      (DeclRefExpr 0x9e0e3c8 <col:36> 'char [16]' lvalue Var 0x9e0e320 '__fbuf' 'char [16]'))
    (ImplicitCastExpr 0x9e0e490 <col:44> 'char' <LValueToRValue>
      (DeclRefExpr 0x9e0e3e0 <col:44> 'char' lvalue ParmVar 0x9e0d990 '__mod' 'char')))
  (DeclStmt 0x9e0e540 <line:994:2, col:34>
    0x9e0e4b0 "int __cs_size =
      (BinaryOperator 0x9e0e528 <col:18, col:33> 'int' '*'
        (ImplicitCastExpr 0x9e0e518 <col:18> 'int' <LValueToRValue>
          (DeclRefExpr 0x9e0e4e4 <col:18> 'const int' lvalue Var 0x9e0e130 '__max_digits' 'const int'))
        (IntegerLiteral 0x9e0e500 <col:33> 'int' 3))")
  (DeclStmt 0x9e0e640 <line:995:2, col:62>
    0x9e0e560 "char *__cs =
      (CXXStaticCastExpr 0x9e0e628 <col:15, col:61> 'char *' static_cast<char *> <BitCast>
        (CallExpr 0x9e0e5d8 <col:34, col:60> 'void *'
          (ImplicitCastExpr 0x9e0e5c8 <col:34> 'void *(*)(unsigned int)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9e0e594 <col:34> 'void *(unsigned int)' lvalue Function 0x9e0a590 '__builtin_alloca' 'void *(unsigned int)'))
          (ImplicitCastExpr 0x9e0e608 <col:51> 'unsigned int' <IntegralCast>
            (ImplicitCastExpr 0x9e0e5f8 <col:51> 'int' <LValueToRValue>
              (DeclRefExpr 0x9e0e5ac <col:51> 'int' lvalue Var 0x9e0e4b0 '__cs_size' 'int')))))")
  (BinaryOperator 0x9e0e798 <line:996:2, line:997:30> '<dependent type>' '='
    (DeclRefExpr 0x9e0e650 <line:996:2> 'int' lvalue Var 0x9e0e280 '__len' 'int')
    (CallExpr 0x9e0e760 <col:10, line:997:30> '<dependent type>'
      (DeclRefExpr 0x9e0e680 <line:996:10, col:15> 'int (const __c_locale &, char *, const int, const char *, ...)' lvalue Function 0x9bd1880 '__convert_from_v' 'int (const __c_locale &, char *, const int, const char *, ...)')
      (CallExpr 0x9e0e6c8 <col:32, col:48> '__c_locale':'struct __locale_struct *'
        (ImplicitCastExpr 0x9e0e6b8 <col:32> '__c_locale (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9e0e6a0 <col:32> '__c_locale (void)' lvalue CXXMethod 0x9981580 '_S_get_c_locale' '__c_locale (void)')))
      (DeclRefExpr 0x9e0e6e4 <col:51> 'char *' lvalue Var 0x9e0e560 '__cs' 'char *')
      (DeclRefExpr 0x9e0e6fc <col:57> 'int' lvalue Var 0x9e0e4b0 '__cs_size' 'int')
      (DeclRefExpr 0x9e0e714 <line:997:11> 'char [16]' lvalue Var 0x9e0e320 '__fbuf' 'char [16]')
      (DeclRefExpr 0x9e0e72c <col:19> 'const streamsize':'const int' lvalue Var 0x9e0df20 '__prec' 'const streamsize':'const int')
      (DeclRefExpr 0x9e0e744 <col:27> '_ValueT' lvalue ParmVar 0x9e0d9d0 '__v' '_ValueT')))
  (IfStmt 0x9e0eaf8 <line:1000:2, line:1006:4>
    <<<NULL>>>
    (BinaryOperator 0x9e0e800 <line:1000:6, col:15> '_Bool' '>='
      (ImplicitCastExpr 0x9e0e7e0 <col:6> 'int' <LValueToRValue>
        (DeclRefExpr 0x9e0e7b0 <col:6> 'int' lvalue Var 0x9e0e280 '__len' 'int'))
      (ImplicitCastExpr 0x9e0e7f0 <col:15> 'int' <LValueToRValue>
        (DeclRefExpr 0x9e0e7c8 <col:15> 'int' lvalue Var 0x9e0e4b0 '__cs_size' 'int')))
    (CompoundStmt 0x9e0ead8 <line:1001:4, line:1006:4>
      (BinaryOperator 0x9e0e888 <line:1002:6, col:26> 'int' lvalue '='
        (DeclRefExpr 0x9e0e818 <col:6> 'int' lvalue Var 0x9e0e4b0 '__cs_size' 'int')
        (BinaryOperator 0x9e0e870 <col:18, col:26> 'int' '+'
          (ImplicitCastExpr 0x9e0e860 <col:18> 'int' <LValueToRValue>
            (DeclRefExpr 0x9e0e830 <col:18> 'int' lvalue Var 0x9e0e280 '__len' 'int'))
          (IntegerLiteral 0x9e0e848 <col:26> 'int' 1)))
      (BinaryOperator 0x9e0e960 <line:1003:6, col:59> 'char *' lvalue '='
        (DeclRefExpr 0x9e0e8a0 <col:6> 'char *' lvalue Var 0x9e0e560 '__cs' 'char *')
        (CXXStaticCastExpr 0x9e0e948 <col:13, col:59> 'char *' static_cast<char *> <BitCast>
          (CallExpr 0x9e0e8f8 <col:32, col:58> 'void *'
            (ImplicitCastExpr 0x9e0e8e8 <col:32> 'void *(*)(unsigned int)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9e0e8b8 <col:32> 'void *(unsigned int)' lvalue Function 0x9e0a590 '__builtin_alloca' 'void *(unsigned int)'))
            (ImplicitCastExpr 0x9e0e928 <col:49> 'unsigned int' <IntegralCast>
              (ImplicitCastExpr 0x9e0e918 <col:49> 'int' <LValueToRValue>
                (DeclRefExpr 0x9e0e8d0 <col:49> 'int' lvalue Var 0x9e0e4b0 '__cs_size' 'int'))))))
      (BinaryOperator 0x9e0eac0 <line:1004:6, line:1005:27> '<dependent type>' '='
        (DeclRefExpr 0x9e0e978 <line:1004:6> 'int' lvalue Var 0x9e0e280 '__len' 'int')
        (CallExpr 0x9e0ea88 <col:14, line:1005:27> '<dependent type>'
          (DeclRefExpr 0x9e0e9a8 <line:1004:14, col:19> 'int (const __c_locale &, char *, const int, const char *, ...)' lvalue Function 0x9bd1880 '__convert_from_v' 'int (const __c_locale &, char *, const int, const char *, ...)')
          (CallExpr 0x9e0e9f0 <col:36, col:52> '__c_locale':'struct __locale_struct *'
            (ImplicitCastExpr 0x9e0e9e0 <col:36> '__c_locale (*)(void)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9e0e9c8 <col:36> '__c_locale (void)' lvalue CXXMethod 0x9981580 '_S_get_c_locale' '__c_locale (void)')))
          (DeclRefExpr 0x9e0ea0c <col:55> 'char *' lvalue Var 0x9e0e560 '__cs' 'char *')
          (DeclRefExpr 0x9e0ea24 <col:61> 'int' lvalue Var 0x9e0e4b0 '__cs_size' 'int')
          (DeclRefExpr 0x9e0ea3c <line:1005:8> 'char [16]' lvalue Var 0x9e0e320 '__fbuf' 'char [16]')
          (DeclRefExpr 0x9e0ea54 <col:16> 'const streamsize':'const int' lvalue Var 0x9e0df20 '__prec' 'const streamsize':'const int')
          (DeclRefExpr 0x9e0ea6c <col:24> '_ValueT' lvalue ParmVar 0x9e0d9d0 '__v' '_ValueT'))))
    <<<NULL>>>)
  (DeclStmt 0x9e0ed60 <line:1028:2, col:65>
    0x9e0ebe0 "const ctype<_CharT> &__ctype =
      (CallExpr 0x9e0ed40 <col:33, col:64> '<dependent type>'
        (UnresolvedLookupExpr 0x9e0ecc0 <col:33, col:57> '<dependent type>' lvalue (ADL) = '1' 0x9bf5c50)
        (DeclRefExpr 0x9e0ed28 <col:59> 'const class std::locale' lvalue Var 0x9e0dda0 '__loc' 'const class std::locale &'))")
  (DeclStmt 0x9e0eeb8 <line:1030:2, line:1031:22>
    0x9e0eda0 "_CharT *__ws =
      (CXXStaticCastExpr 0x9e0eea0 <line:1030:17, line:1031:21> '_CharT *' static_cast<_CharT *> <Dependent>
        (CallExpr 0x9e0ee70 <line:1030:38, line:1031:20> 'void *'
          (ImplicitCastExpr 0x9e0ee60 <line:1030:38> 'void *(*)(unsigned int)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9e0edd4 <col:38> 'void *(unsigned int)' lvalue Function 0x9e0a590 '__builtin_alloca' 'void *(unsigned int)'))
          (BinaryOperator 0x9e0ee48 <col:55, line:1031:15> 'unsigned int' '*'
            (UnaryExprOrTypeTraitExpr 0x9e0edf8 <line:1030:55, col:68> 'unsigned int' sizeof '_CharT')
            (ImplicitCastExpr 0x9e0ee38 <line:1031:15> 'unsigned int' <IntegralCast>
              (ImplicitCastExpr 0x9e0ee28 <col:15> 'int' <LValueToRValue>
                (DeclRefExpr 0x9e0ee10 <col:15> 'int' lvalue Var 0x9e0e280 '__len' 'int'))))))")
  (CallExpr 0x9e0efb0 <line:1032:2, col:40> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9e0eee0 <col:2, col:10> '<dependent type>' lvalue
      (DeclRefExpr 0x9e0eec8 <col:2> 'const ctype<_CharT>' lvalue Var 0x9e0ebe0 '__ctype' 'const ctype<_CharT> &'))
    (DeclRefExpr 0x9e0ef14 <col:16> 'char *' lvalue Var 0x9e0e560 '__cs' 'char *')
    (BinaryOperator 0x9e0ef80 <col:22, col:29> 'char *' '+'
      (ImplicitCastExpr 0x9e0ef60 <col:22> 'char *' <LValueToRValue>
        (DeclRefExpr 0x9e0ef2c <col:22> 'char *' lvalue Var 0x9e0e560 '__cs' 'char *'))
      (ImplicitCastExpr 0x9e0ef70 <col:29> 'int' <LValueToRValue>
        (DeclRefExpr 0x9e0ef44 <col:29> 'int' lvalue Var 0x9e0e280 '__len' 'int')))
    (DeclRefExpr 0x9e0ef98 <col:36> '_CharT *' lvalue Var 0x9e0eda0 '__ws' '_CharT *'))
  (DeclStmt 0x9e0f040 <line:1035:2, col:18>
    0x9e0eff0 "_CharT *__wp =
      (IntegerLiteral 0x9e0f028 <col:17> 'int' 0)")
  (DeclStmt 0x9e0f240 <line:1036:2, col:61>
    0x9e0f060 "const char *__p =
      (CallExpr 0x9e0f1c8 <col:20, col:60> 'const char_type *'
        (ImplicitCastExpr 0x9e0f1b8 <col:20, col:39> 'const char_type *(*)(const char_type *, size_t, const char_type &)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9e0f110 <col:20, col:39> 'const char_type *(const char_type *, size_t, const char_type &)' lvalue CXXMethod 0x9bafb00 'find' 'const char_type *(const char_type *, size_t, const char_type &)'))
        (ImplicitCastExpr 0x9e0f200 <col:44> 'const char_type *' <NoOp>
          (ImplicitCastExpr 0x9e0f1f0 <col:44> 'char *' <LValueToRValue>
            (DeclRefExpr 0x9e0f130 <col:44> 'char *' lvalue Var 0x9e0e560 '__cs' 'char *')))
        (ImplicitCastExpr 0x9e0f220 <col:50> 'size_t':'unsigned int' <IntegralCast>
          (ImplicitCastExpr 0x9e0f210 <col:50> 'int' <LValueToRValue>
            (DeclRefExpr 0x9e0f148 <col:50> 'int' lvalue Var 0x9e0e280 '__len' 'int')))
        (MaterializeTemporaryExpr 0x9e0f230 <col:57> 'const char_type':'const char' lvalue
          (CharacterLiteral 0x9e0f160 <col:57> 'char'46)))")
  (IfStmt 0x9e0f470 <line:1037:2, line:1041:4>
    <<<NULL>>>
    (ImplicitCastExpr 0x9e0f278 <line:1037:6> '_Bool' <PointerToBoolean>
      (ImplicitCastExpr 0x9e0f268 <col:6> 'const char *' <LValueToRValue>
        (DeclRefExpr 0x9e0f250 <col:6> 'const char *' lvalue Var 0x9e0f060 '__p' 'const char *')))
    (CompoundStmt 0x9e0f458 <line:1038:4, line:1041:4>
      (BinaryOperator 0x9e0f3a8 <line:1039:6, col:31> '<dependent type>' '='
        (DeclRefExpr 0x9e0f284 <col:6> '_CharT *' lvalue Var 0x9e0eff0 '__wp' '_CharT *')
        (CXXOperatorCallExpr 0x9e0f380 <col:13, col:31> '<dependent type>'
          (UnresolvedLookupExpr 0x9e0f338 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9ce1500 0x9ce2100 0x9cb8030 0x9cb8830)
          (DeclRefExpr 0x9e0f29c <col:13> '_CharT *' lvalue Var 0x9e0eda0 '__ws' '_CharT *')
          (ParenExpr 0x9e0f320 <col:20, col:31> 'int'
            (BinaryOperator 0x9e0f308 <col:21, col:27> 'int' '-'
              (ImplicitCastExpr 0x9e0f2e8 <col:21> 'const char *' <LValueToRValue>
                (DeclRefExpr 0x9e0f2b4 <col:21> 'const char *' lvalue Var 0x9e0f060 '__p' 'const char *'))
              (ImplicitCastExpr 0x9e0f2f8 <col:27> 'char *' <LValueToRValue>
                (DeclRefExpr 0x9e0f2cc <col:27> 'char *' lvalue Var 0x9e0e560 '__cs' 'char *'))))))
      (BinaryOperator 0x9e0f440 <line:1040:6, col:20> '<dependent type>' '='
        (UnaryOperator 0x9e0f3d8 <col:6, col:7> '<dependent type>' prefix '*'
          (DeclRefExpr 0x9e0f3c0 <col:7> '_CharT *' lvalue Var 0x9e0eff0 '__wp' '_CharT *'))
        (CXXDependentScopeMemberExpr 0x9e0f408 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9e0f3ec <col:14> 'const __cache_type *' lvalue Var 0x9e0de80 '__lc' 'const __cache_type *'))))
    <<<NULL>>>)
  (IfStmt 0x9e10170 <line:1046:2, line:1069:4>
    <<<NULL>>>
    (BinaryOperator 0x9e0f8d8 <line:1046:6, line:1048:47> '<dependent type>' '&&'
      (CXXDependentScopeMemberExpr 0x9e0f4a8 <line:1046:6, col:12> '<dependent type>' lvalue
        (DeclRefExpr 0x9e0f48c <col:6> 'const __cache_type *' lvalue Var 0x9e0de80 '__lc' 'const __cache_type *'))
      (ParenExpr 0x9e0f8c0 <line:1047:9, line:1048:47> '<dependent type>'
        (BinaryOperator 0x9e0f8a8 <line:1047:10, line:1048:46> '<dependent type>' '||'
          (BinaryOperator 0x9e0f550 <line:1047:10, col:26> '<dependent type>' '||'
            (DeclRefExpr 0x9e0f4dc <col:10> '_CharT *' lvalue Var 0x9e0eff0 '__wp' '_CharT *')
            (BinaryOperator 0x9e0f538 <col:18, col:26> '_Bool' '<'
              (ImplicitCastExpr 0x9e0f528 <col:18> 'int' <LValueToRValue>
                (DeclRefExpr 0x9e0f4f4 <col:18> 'int' lvalue Var 0x9e0e280 '__len' 'int'))
              (IntegerLiteral 0x9e0f510 <col:26> 'int' 3)))
          (ParenExpr 0x9e0f890 <col:31, line:1048:46> '_Bool'
            (BinaryOperator 0x9e0f878 <line:1047:32, line:1048:43> '_Bool' '&&'
              (BinaryOperator 0x9e0f7a8 <line:1047:32, line:1048:25> '_Bool' '&&'
                (BinaryOperator 0x9e0f6d8 <line:1047:32, col:61> '_Bool' '&&'
                  (BinaryOperator 0x9e0f608 <col:32, col:43> '_Bool' '<='
                    (ImplicitCastExpr 0x9e0f5e8 <col:32, col:38> 'int' <IntegralCast>
                      (ImplicitCastExpr 0x9e0f5d8 <col:32, col:38> 'char' <LValueToRValue>
                        (ArraySubscriptExpr 0x9e0f5a8 <col:32, col:38> 'char' lvalue
                          (ImplicitCastExpr 0x9e0f598 <col:32> 'char *' <LValueToRValue>
                            (DeclRefExpr 0x9e0f568 <col:32> 'char *' lvalue Var 0x9e0e560 '__cs' 'char *'))
                          (IntegerLiteral 0x9e0f580 <col:37> 'int' 1))))
                    (ImplicitCastExpr 0x9e0f5f8 <col:43> 'int' <IntegralCast>
                      (CharacterLiteral 0x9e0f5c0 <col:43> 'char'57)))
                  (BinaryOperator 0x9e0f6c0 <col:50, col:61> '_Bool' '<='
                    (ImplicitCastExpr 0x9e0f6a0 <col:50, col:56> 'int' <IntegralCast>
                      (ImplicitCastExpr 0x9e0f690 <col:50, col:56> 'char' <LValueToRValue>
                        (ArraySubscriptExpr 0x9e0f660 <col:50, col:56> 'char' lvalue
                          (ImplicitCastExpr 0x9e0f650 <col:50> 'char *' <LValueToRValue>
                            (DeclRefExpr 0x9e0f620 <col:50> 'char *' lvalue Var 0x9e0e560 '__cs' 'char *'))
                          (IntegerLiteral 0x9e0f638 <col:55> 'int' 2))))
                    (ImplicitCastExpr 0x9e0f6b0 <col:61> 'int' <IntegralCast>
                      (CharacterLiteral 0x9e0f678 <col:61> 'char'57))))
                (BinaryOperator 0x9e0f790 <line:1048:14, col:25> '_Bool' '>='
                  (ImplicitCastExpr 0x9e0f770 <col:14, col:20> 'int' <IntegralCast>
                    (ImplicitCastExpr 0x9e0f760 <col:14, col:20> 'char' <LValueToRValue>
                      (ArraySubscriptExpr 0x9e0f730 <col:14, col:20> 'char' lvalue
                        (ImplicitCastExpr 0x9e0f720 <col:14> 'char *' <LValueToRValue>
                          (DeclRefExpr 0x9e0f6f0 <col:14> 'char *' lvalue Var 0x9e0e560 '__cs' 'char *'))
                        (IntegerLiteral 0x9e0f708 <col:19> 'int' 1))))
                  (ImplicitCastExpr 0x9e0f780 <col:25> 'int' <IntegralCast>
                    (CharacterLiteral 0x9e0f748 <col:25> 'char'48))))
              (BinaryOperator 0x9e0f860 <col:32, col:43> '_Bool' '>='
                (ImplicitCastExpr 0x9e0f840 <col:32, col:38> 'int' <IntegralCast>
                  (ImplicitCastExpr 0x9e0f830 <col:32, col:38> 'char' <LValueToRValue>
                    (ArraySubscriptExpr 0x9e0f800 <col:32, col:38> 'char' lvalue
                      (ImplicitCastExpr 0x9e0f7f0 <col:32> 'char *' <LValueToRValue>
                        (DeclRefExpr 0x9e0f7c0 <col:32> 'char *' lvalue Var 0x9e0e560 '__cs' 'char *'))
                      (IntegerLiteral 0x9e0f7d8 <col:37> 'int' 2))))
                (ImplicitCastExpr 0x9e0f850 <col:43> 'int' <IntegralCast>
                  (CharacterLiteral 0x9e0f818 <col:43> 'char'48))))))))
    (CompoundStmt 0x9e10148 <line:1049:4, line:1069:4>
      (DeclStmt 0x9e0fa58 <line:1052:6, line:1053:24>
        0x9e0f900 "_CharT *__ws2 =
          (CXXStaticCastExpr 0x9e0fa40 <line:1052:22, line:1053:23> '_CharT *' static_cast<_CharT *> <Dependent>
            (CallExpr 0x9e0fa10 <line:1052:43, line:1053:22> 'void *'
              (ImplicitCastExpr 0x9e0fa00 <line:1052:43> 'void *(*)(unsigned int)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9e0f934 <col:43> 'void *(unsigned int)' lvalue Function 0x9e0a590 '__builtin_alloca' 'void *(unsigned int)'))
              (BinaryOperator 0x9e0f9e8 <col:60, line:1053:21> 'unsigned int' '*'
                (BinaryOperator 0x9e0f9a8 <line:1052:60, line:1053:13> 'unsigned int' '*'
                  (UnaryExprOrTypeTraitExpr 0x9e0f958 <line:1052:60, col:73> 'unsigned int' sizeof '_CharT')
                  (ImplicitCastExpr 0x9e0f998 <line:1053:13> 'unsigned int' <IntegralCast>
                    (ImplicitCastExpr 0x9e0f988 <col:13> 'int' <LValueToRValue>
                      (DeclRefExpr 0x9e0f970 <col:13> 'int' lvalue Var 0x9e0e280 '__len' 'int'))))
                (ImplicitCastExpr 0x9e0f9d8 <col:21> 'unsigned int' <IntegralCast>
                  (IntegerLiteral 0x9e0f9c0 <col:21> 'int' 2)))))")
      (DeclStmt 0x9e0fac0 <line:1055:6, col:26>
        0x9e0fa70 "streamsize __off =
          (IntegerLiteral 0x9e0faa8 <col:25> 'int' 0)")
      (IfStmt 0x9e0fdb8 <line:1056:6, line:1061:8>
        <<<NULL>>>
        (BinaryOperator 0x9e0fc40 <line:1056:10, col:39> '_Bool' '||'
          (BinaryOperator 0x9e0fb70 <col:10, col:21> '_Bool' '=='
            (ImplicitCastExpr 0x9e0fb50 <col:10, col:16> 'int' <IntegralCast>
              (ImplicitCastExpr 0x9e0fb40 <col:10, col:16> 'char' <LValueToRValue>
                (ArraySubscriptExpr 0x9e0fb10 <col:10, col:16> 'char' lvalue
                  (ImplicitCastExpr 0x9e0fb00 <col:10> 'char *' <LValueToRValue>
                    (DeclRefExpr 0x9e0fad0 <col:10> 'char *' lvalue Var 0x9e0e560 '__cs' 'char *'))
                  (IntegerLiteral 0x9e0fae8 <col:15> 'int' 0))))
            (ImplicitCastExpr 0x9e0fb60 <col:21> 'int' <IntegralCast>
              (CharacterLiteral 0x9e0fb28 <col:21> 'char'45)))
          (BinaryOperator 0x9e0fc28 <col:28, col:39> '_Bool' '=='
            (ImplicitCastExpr 0x9e0fc08 <col:28, col:34> 'int' <IntegralCast>
              (ImplicitCastExpr 0x9e0fbf8 <col:28, col:34> 'char' <LValueToRValue>
                (ArraySubscriptExpr 0x9e0fbc8 <col:28, col:34> 'char' lvalue
                  (ImplicitCastExpr 0x9e0fbb8 <col:28> 'char *' <LValueToRValue>
                    (DeclRefExpr 0x9e0fb88 <col:28> 'char *' lvalue Var 0x9e0e560 '__cs' 'char *'))
                  (IntegerLiteral 0x9e0fba0 <col:33> 'int' 0))))
            (ImplicitCastExpr 0x9e0fc18 <col:39> 'int' <IntegralCast>
              (CharacterLiteral 0x9e0fbe0 <col:39> 'char'43))))
        (CompoundStmt 0x9e0fd98 <line:1057:8, line:1061:8>
          (BinaryOperator 0x9e0fc88 <line:1058:3, col:11> 'streamsize':'int' lvalue '='
            (DeclRefExpr 0x9e0fc58 <col:3> 'streamsize':'int' lvalue Var 0x9e0fa70 '__off' 'streamsize':'int')
            (IntegerLiteral 0x9e0fc70 <col:11> 'int' 1))
          (BinaryOperator 0x9e0fd30 <line:1059:3, col:20> '<dependent type>' '='
            (ArraySubscriptExpr 0x9e0fcd0 <col:3, col:10> '<dependent type>' lvalue
              (DeclRefExpr 0x9e0fca0 <col:3> '_CharT *' lvalue Var 0x9e0f900 '__ws2' '_CharT *')
              (IntegerLiteral 0x9e0fcb8 <col:9> 'int' 0))
            (ArraySubscriptExpr 0x9e0fd18 <col:14, col:20> '<dependent type>' lvalue
              (DeclRefExpr 0x9e0fce4 <col:14> '_CharT *' lvalue Var 0x9e0eda0 '__ws' '_CharT *')
              (IntegerLiteral 0x9e0fd00 <col:19> 'int' 0)))
          (CompoundAssignOperator 0x9e0fd78 <line:1060:3, col:12> 'int' lvalue '-=' ComputeLHSTy='int' ComputeResultTy='int'
            (DeclRefExpr 0x9e0fd48 <col:3> 'int' lvalue Var 0x9e0e280 '__len' 'int')
            (IntegerLiteral 0x9e0fd60 <col:12> 'int' 1)))
        <<<NULL>>>)
      (CallExpr 0x9e10068 <line:1063:6, line:1065:26> '<dependent type>'
        (MemberExpr 0x9e0fde8 <line:1063:6> '<bound member function type>' ->_M_group_float 0x9e0cdc0
          (CXXThisExpr 0x9e0fdd8 <col:6> 'const num_put<_CharT, _OutIter> *' this))
        (CXXDependentScopeMemberExpr 0x9e0fe20 <col:21, col:27> '<dependent type>' lvalue
          (DeclRefExpr 0x9e0fe08 <col:21> 'const __cache_type *' lvalue Var 0x9e0de80 '__lc' 'const __cache_type *'))
        (CXXDependentScopeMemberExpr 0x9e0fe70 <col:40, col:46> '<dependent type>' lvalue
          (DeclRefExpr 0x9e0fe54 <col:40> 'const __cache_type *' lvalue Var 0x9e0de80 '__lc' 'const __cache_type *'))
        (CXXDependentScopeMemberExpr 0x9e0fec0 <line:1064:7, col:13> '<dependent type>' lvalue
          (DeclRefExpr 0x9e0fea4 <col:7> 'const __cache_type *' lvalue Var 0x9e0de80 '__lc' 'const __cache_type *'))
        (DeclRefExpr 0x9e0fef4 <col:31> '_CharT *' lvalue Var 0x9e0eff0 '__wp' '_CharT *')
        (CXXOperatorCallExpr 0x9e0ff88 <col:37, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0x9e0ff40 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9ce1500 0x9ce2100 0x9cb8030 0x9cb8830)
          (DeclRefExpr 0x9e0ff0c <col:37> '_CharT *' lvalue Var 0x9e0f900 '__ws2' '_CharT *')
          (DeclRefExpr 0x9e0ff24 <col:45> 'streamsize':'int' lvalue Var 0x9e0fa70 '__off' 'streamsize':'int'))
        (CXXOperatorCallExpr 0x9e10028 <line:1065:7, col:14> '<dependent type>'
          (UnresolvedLookupExpr 0x9e0ffe0 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9ce1500 0x9ce2100 0x9cb8030 0x9cb8830)
          (DeclRefExpr 0x9e0ffac <col:7> '_CharT *' lvalue Var 0x9e0eda0 '__ws' '_CharT *')
          (DeclRefExpr 0x9e0ffc4 <col:14> 'streamsize':'int' lvalue Var 0x9e0fa70 '__off' 'streamsize':'int'))
        (DeclRefExpr 0x9e1004c <col:21> 'int' lvalue Var 0x9e0e280 '__len' 'int'))
      (CompoundAssignOperator 0x9e100e0 <line:1066:6, col:15> 'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
        (DeclRefExpr 0x9e100a0 <col:6> 'int' lvalue Var 0x9e0e280 '__len' 'int')
        (ImplicitCastExpr 0x9e100d0 <col:15> 'streamsize':'int' <LValueToRValue>
          (DeclRefExpr 0x9e100b8 <col:15> 'streamsize':'int' lvalue Var 0x9e0fa70 '__off' 'streamsize':'int')))
      (BinaryOperator 0x9e10130 <line:1068:6, col:13> '<dependent type>' '='
        (DeclRefExpr 0x9e10100 <col:6> '_CharT *' lvalue Var 0x9e0eda0 '__ws' '_CharT *')
        (DeclRefExpr 0x9e10118 <col:13> '_CharT *' lvalue Var 0x9e0f900 '__ws2' '_CharT *')))
    <<<NULL>>>)
  (DeclStmt 0x9e10280 <line:1072:2, col:37>
    0x9e101a0 "const streamsize __w =
      (CXXMemberCallExpr 0x9e10250 <col:25, col:36> 'streamsize':'int'
        (MemberExpr 0x9e1022c <col:25, col:30> '<bound member function type>' .width 0x9d61ff0
          (ImplicitCastExpr 0x9e10270 <col:25> 'const class std::ios_base' lvalue <NoOp>
            (DeclRefExpr 0x9e101d4 <col:25> 'class std::ios_base' lvalue ParmVar 0x9e0d910 '__io' 'class std::ios_base &'))))")
  (IfStmt 0x9e105b8 <line:1073:2, line:1079:4>
    <<<NULL>>>
    (BinaryOperator 0x9e10300 <line:1073:6, col:41> '_Bool' '>'
      (ImplicitCastExpr 0x9e102f0 <col:6> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0x9e10290 <col:6> 'const streamsize':'const int' lvalue Var 0x9e101a0 '__w' 'const streamsize':'const int'))
      (CXXStaticCastExpr 0x9e102d8 <col:12, col:41> 'streamsize':'int' static_cast<streamsize> <NoOp>
        (ImplicitCastExpr 0x9e102c8 <col:36> 'int' <LValueToRValue>
          (DeclRefExpr 0x9e102a8 <col:36> 'int' lvalue Var 0x9e0e280 '__len' 'int'))))
    (CompoundStmt 0x9e10598 <line:1074:4, line:1079:4>
      (DeclStmt 0x9e10448 <line:1075:6, line:1076:18>
        0x9e10330 "_CharT *__ws3 =
          (CXXStaticCastExpr 0x9e10430 <line:1075:22, line:1076:17> '_CharT *' static_cast<_CharT *> <Dependent>
            (CallExpr 0x9e10400 <line:1075:43, line:1076:16> 'void *'
              (ImplicitCastExpr 0x9e103f0 <line:1075:43> 'void *(*)(unsigned int)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9e10364 <col:43> 'void *(unsigned int)' lvalue Function 0x9e0a590 '__builtin_alloca' 'void *(unsigned int)'))
              (BinaryOperator 0x9e103d8 <col:60, line:1076:13> 'unsigned int' '*'
                (UnaryExprOrTypeTraitExpr 0x9e10388 <line:1075:60, col:73> 'unsigned int' sizeof '_CharT')
                (ImplicitCastExpr 0x9e103c8 <line:1076:13> 'unsigned int' <IntegralCast>
                  (ImplicitCastExpr 0x9e103b8 <col:13> 'streamsize':'int' <LValueToRValue>
                    (DeclRefExpr 0x9e103a0 <col:13> 'const streamsize':'const int' lvalue Var 0x9e101a0 '__w' 'const streamsize':'const int'))))))")
      (CallExpr 0x9e10518 <line:1077:6, col:50> '<dependent type>'
        (MemberExpr 0x9e10468 <col:6> '<bound member function type>' ->_M_pad 0x9e05580
          (CXXThisExpr 0x9e10458 <col:6> 'const num_put<_CharT, _OutIter> *' this))
        (DeclRefExpr 0x9e10488 <col:13> '_CharT' lvalue ParmVar 0x9e0d950 '__fill' '_CharT')
        (DeclRefExpr 0x9e104a0 <col:21> 'const streamsize':'const int' lvalue Var 0x9e101a0 '__w' 'const streamsize':'const int')
        (DeclRefExpr 0x9e104b8 <col:26> 'class std::ios_base' lvalue ParmVar 0x9e0d910 '__io' 'class std::ios_base &')
        (DeclRefExpr 0x9e104d0 <col:32> '_CharT *' lvalue Var 0x9e10330 '__ws3' '_CharT *')
        (DeclRefExpr 0x9e104e8 <col:39> '_CharT *' lvalue Var 0x9e0eda0 '__ws' '_CharT *')
        (DeclRefExpr 0x9e10500 <col:45> 'int' lvalue Var 0x9e0e280 '__len' 'int'))
      (BinaryOperator 0x9e10580 <line:1078:6, col:13> '<dependent type>' '='
        (DeclRefExpr 0x9e1054c <col:6> '_CharT *' lvalue Var 0x9e0eda0 '__ws' '_CharT *')
        (DeclRefExpr 0x9e10564 <col:13> '_CharT *' lvalue Var 0x9e10330 '__ws3' '_CharT *')))
    <<<NULL>>>)
  (CXXMemberCallExpr 0x9e10668 <line:1080:2, col:14> 'streamsize':'int'
    (MemberExpr 0x9e10648 <col:2, col:7> '<bound member function type>' .width 0x9d620b0
      (DeclRefExpr 0x9e105d4 <col:2> 'class std::ios_base' lvalue ParmVar 0x9e0d910 '__io' 'class std::ios_base &'))
    (IntegerLiteral 0x9e10630 <col:13> 'int' 0))
  (ReturnStmt 0x9e10748 <line:1084:2, col:38>
    (CallExpr 0x9e10720 <col:9, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0x9e106a0 <col:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0x9dbb560 0x9dbb920)
      (DeclRefExpr 0x9e106d8 <col:22> '_OutIter' lvalue ParmVar 0x9e0d8c0 '__s' '_OutIter')
      (DeclRefExpr 0x9e106f0 <col:27> '_CharT *' lvalue Var 0x9e0eda0 '__ws' '_CharT *')
      (DeclRefExpr 0x9e10708 <col:33> 'int' lvalue Var 0x9e0e280 '__len' 'int'))))

;
    _OutIter do_put(iter_type __s, std::ios_base &__io, char_type __fill, bool __v) const (CompoundStmt 0x9e12ec0 </usr/include/c++/4.6/bits/locale_facets.tcc:1091:5, line:1137:5>
  (DeclStmt 0x9e10d90 <line:1092:7, col:54>
    0x9e10cb0 "const ios_base::fmtflags __flags =
      (CXXMemberCallExpr 0x9e10d60 <col:42, col:53> 'fmtflags':'enum std::_Ios_Fmtflags'
        (MemberExpr 0x9e10d3c <col:42, col:47> '<bound member function type>' .flags 0x9d619d0
          (ImplicitCastExpr 0x9e10d80 <col:42> 'const class std::ios_base' lvalue <NoOp>
            (DeclRefExpr 0x9e10ce4 <col:42> 'class std::ios_base' lvalue ParmVar 0x9e10ac0 '__io' 'class std::ios_base &'))))")
  (IfStmt 0x9e12e78 <line:1093:7, line:1135:2>
    <<<NULL>>>
    (BinaryOperator 0x9e10ea8 <line:1093:11, col:46> '_Bool' '=='
      (ImplicitCastExpr 0x9e10e98 <col:11, col:41> 'int' <IntegralCast>
        (ParenExpr 0x9e10e68 <col:11, col:41> 'enum std::_Ios_Fmtflags'
          (CXXOperatorCallExpr 0x9e10e40 <col:12, col:32> 'enum std::_Ios_Fmtflags'
            (ImplicitCastExpr 0x9e10e30 <col:20, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9e10e18 <col:20, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9d5b750 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
            (ImplicitCastExpr 0x9e10df8 <col:12> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0x9e10da0 <col:12> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9e10cb0 '__flags' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags'))
            (ImplicitCastExpr 0x9e10e08 <col:22, col:32> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0x9e10dd4 <col:22, col:32> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9d6b2d0 'boolalpha' 'const fmtflags':'const enum std::_Ios_Fmtflags')))))
      (IntegerLiteral 0x9e10e80 <col:46> 'int' 0))
    (CompoundStmt 0x9e11060 <line:1094:9, line:1097:9>
      (DeclStmt 0x9e10f40 <line:1095:11, col:31>
        0x9e10ed0 "const long __l =
          (ImplicitCastExpr 0x9e10f30 <col:28> 'const long' <IntegralCast>
            (ImplicitCastExpr 0x9e10f20 <col:28> '_Bool' <LValueToRValue>
              (DeclRefExpr 0x9e10f04 <col:28> '_Bool' lvalue ParmVar 0x9e10b40 '__v' '_Bool')))")
      (BinaryOperator 0x9e11048 <line:1096:11, col:53> '<dependent type>' '='
        (DeclRefExpr 0x9e10f50 <col:11> 'iter_type':'_OutIter' lvalue ParmVar 0x9e10a70 '__s' 'iter_type':'_OutIter')
        (CallExpr 0x9e11018 <col:17, col:53> '<dependent type>'
          (UnresolvedMemberExpr 0x9e10f78 <col:17> '<bound member function type>' lvalue)
          (DeclRefExpr 0x9e10fb4 <col:31> 'iter_type':'_OutIter' lvalue ParmVar 0x9e10a70 '__s' 'iter_type':'_OutIter')
          (DeclRefExpr 0x9e10fcc <col:36> 'class std::ios_base' lvalue ParmVar 0x9e10ac0 '__io' 'class std::ios_base &')
          (DeclRefExpr 0x9e10fe4 <col:42> 'char_type':'_CharT' lvalue ParmVar 0x9e10b00 '__fill' 'char_type':'_CharT')
          (DeclRefExpr 0x9e10ffc <col:50> 'const long' lvalue Var 0x9e10ed0 '__l' 'const long'))))
    (CompoundStmt 0x9e12e40 <line:1099:9, line:1135:2>
      (DeclStmt 0x9e11150 <line:1100:4, col:62>
        0x9e11120 "typedef __numpunct_cache<_CharT> __cache_type")
      (DeclStmt 0x9e11258 <line:1101:4, col:34>
        0x9e11220 "__use_cache<__cache_type> __uc")
      (DeclStmt 0x9e11320 <line:1102:4, col:42>
        0x9e11280 "const std::locale &__loc =
          (CXXMemberCallExpr 0x9e112f0 <col:26, col:41> 'const class std::locale' lvalue
            (MemberExpr 0x9e112cc <col:26, col:31> '<bound member function type>' ._M_getloc 0x9d623d0
              (ImplicitCastExpr 0x9e11310 <col:26> 'const class std::ios_base' lvalue <NoOp>
                (DeclRefExpr 0x9e112b4 <col:26> 'class std::ios_base' lvalue ParmVar 0x9e10ac0 '__io' 'class std::ios_base &'))))")
      (DeclStmt 0x9e113e8 <line:1103:4, col:42>
        0x9e11360 "const __cache_type *__lc =
          (CallExpr 0x9e113c8 <col:31, col:41> '<dependent type>'
            (DeclRefExpr 0x9e11394 <col:31> '__use_cache<__cache_type>' lvalue Var 0x9e11220 '__uc' '__use_cache<__cache_type>')
            (DeclRefExpr 0x9e113ac <col:36> 'const class std::locale' lvalue Var 0x9e11280 '__loc' 'const class std::locale &'))")
      (DeclStmt 0x9e11f90 <line:1105:4, line:1106:51>
        0x9e11430 "const _CharT *__name =
          (ConditionalOperator 0x9e11f70 <line:1105:27, line:1106:39> '<dependent type>'
            (ImplicitCastExpr 0x9e11f60 <line:1105:27> '_Bool' <LValueToRValue>
              (DeclRefExpr 0x9e11464 <col:27> '_Bool' lvalue ParmVar 0x9e10b40 '__v' '_Bool'))
            (CXXDependentScopeMemberExpr 0x9e11498 <col:33, col:39> '<dependent type>' lvalue
              (DeclRefExpr 0x9e1147c <col:33> 'const __cache_type *' lvalue Var 0x9e11360 '__lc' 'const __cache_type *'))
            (CXXDependentScopeMemberExpr 0x9e114e8 <line:1106:33, col:39> '<dependent type>' lvalue
              (DeclRefExpr 0x9e114cc <col:33> 'const __cache_type *' lvalue Var 0x9e11360 '__lc' 'const __cache_type *')))")
      (DeclStmt 0x9e120d0 <line:1107:4, line:1108:45>
        0x9e11fb0 "int __len =
          (ConditionalOperator 0x9e120b0 <line:1107:16, line:1108:28> '<dependent type>'
            (ImplicitCastExpr 0x9e120a0 <line:1107:16> '_Bool' <LValueToRValue>
              (DeclRefExpr 0x9e11fe4 <col:16> '_Bool' lvalue ParmVar 0x9e10b40 '__v' '_Bool'))
            (CXXDependentScopeMemberExpr 0x9e12018 <col:22, col:28> '<dependent type>' lvalue
              (DeclRefExpr 0x9e11ffc <col:22> 'const __cache_type *' lvalue Var 0x9e11360 '__lc' 'const __cache_type *'))
            (CXXDependentScopeMemberExpr 0x9e12068 <line:1108:22, col:28> '<dependent type>' lvalue
              (DeclRefExpr 0x9e1204c <col:22> 'const __cache_type *' lvalue Var 0x9e11360 '__lc' 'const __cache_type *')))")
      (DeclStmt 0x9e121d0 <line:1110:4, col:39>
        0x9e120f0 "const streamsize __w =
          (CXXMemberCallExpr 0x9e121a0 <col:27, col:38> 'streamsize':'int'
            (MemberExpr 0x9e1217c <col:27, col:32> '<bound member function type>' .width 0x9d61ff0
              (ImplicitCastExpr 0x9e121c0 <col:27> 'const class std::ios_base' lvalue <NoOp>
                (DeclRefExpr 0x9e12124 <col:27> 'class std::ios_base' lvalue ParmVar 0x9e10ac0 '__io' 'class std::ios_base &'))))")
      (IfStmt 0x9e12c80 <line:1111:4, line:1132:6>
        <<<NULL>>>
        (BinaryOperator 0x9e12250 <line:1111:8, col:43> '_Bool' '>'
          (ImplicitCastExpr 0x9e12240 <col:8> 'streamsize':'int' <LValueToRValue>
            (DeclRefExpr 0x9e121e0 <col:8> 'const streamsize':'const int' lvalue Var 0x9e120f0 '__w' 'const streamsize':'const int'))
          (CXXStaticCastExpr 0x9e12228 <col:14, col:43> 'streamsize':'int' static_cast<streamsize> <NoOp>
            (ImplicitCastExpr 0x9e12218 <col:38> 'int' <LValueToRValue>
              (DeclRefExpr 0x9e121f8 <col:38> 'int' lvalue Var 0x9e11fb0 '__len' 'int'))))
        (CompoundStmt 0x9e12c58 <line:1112:6, line:1132:6>
          (DeclStmt 0x9e12310 <line:1113:8, col:45>
            0x9e12270 "const streamsize __plen =
              (BinaryOperator 0x9e122f8 <col:34, col:40> 'int' '-'
                (ImplicitCastExpr 0x9e122d8 <col:34> 'streamsize':'int' <LValueToRValue>
                  (DeclRefExpr 0x9e122a4 <col:34> 'const streamsize':'const int' lvalue Var 0x9e120f0 '__w' 'const streamsize':'const int'))
                (ImplicitCastExpr 0x9e122e8 <col:40> 'int' <LValueToRValue>
                  (DeclRefExpr 0x9e122bc <col:40> 'int' lvalue Var 0x9e11fb0 '__len' 'int')))")
          (DeclStmt 0x9e12468 <line:1114:8, line:1116:18>
            0x9e12350 "_CharT *__ps =
              (CXXStaticCastExpr 0x9e12450 <line:1115:5, line:1116:17> '_CharT *' static_cast<_CharT *> <Dependent>
                (CallExpr 0x9e12420 <line:1115:26, line:1116:16> 'void *'
                  (ImplicitCastExpr 0x9e12410 <line:1115:26> 'void *(*)(unsigned int)' <FunctionToPointerDecay>
                    (DeclRefExpr 0x9e12384 <col:26> 'void *(unsigned int)' lvalue Function 0x9e0a590 '__builtin_alloca' 'void *(unsigned int)'))
                  (BinaryOperator 0x9e123f8 <col:43, line:1116:10> 'unsigned int' '*'
                    (UnaryExprOrTypeTraitExpr 0x9e123a8 <line:1115:43, col:56> 'unsigned int' sizeof '_CharT')
                    (ImplicitCastExpr 0x9e123e8 <line:1116:10> 'unsigned int' <IntegralCast>
                      (ImplicitCastExpr 0x9e123d8 <col:10> 'streamsize':'int' <LValueToRValue>
                        (DeclRefExpr 0x9e123c0 <col:10> 'const streamsize':'const int' lvalue Var 0x9e12270 '__plen' 'const streamsize':'const int'))))))")
          (CallExpr 0x9e125b0 <line:1118:8, col:56> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9e12530 <col:8, col:29> '<dependent type>' lvalue)
            (DeclRefExpr 0x9e12564 <col:36> '_CharT *' lvalue Var 0x9e12350 '__ps' '_CharT *')
            (DeclRefExpr 0x9e1257c <col:42> 'const streamsize':'const int' lvalue Var 0x9e12270 '__plen' 'const streamsize':'const int')
            (DeclRefExpr 0x9e12594 <col:50> 'char_type':'_CharT' lvalue ParmVar 0x9e10b00 '__fill' 'char_type':'_CharT'))
          (CXXMemberCallExpr 0x9e12668 <line:1119:8, col:20> 'streamsize':'int'
            (MemberExpr 0x9e12648 <col:8, col:13> '<bound member function type>' .width 0x9d620b0
              (DeclRefExpr 0x9e125d8 <col:8> 'class std::ios_base' lvalue ParmVar 0x9e10ac0 '__io' 'class std::ios_base &'))
            (IntegerLiteral 0x9e12630 <col:19> 'int' 0))
          (IfStmt 0x9e12c10 <line:1121:8, line:1130:3>
            <<<NULL>>>
            (BinaryOperator 0x9e127d8 <line:1121:12, col:59> '_Bool' '=='
              (ImplicitCastExpr 0x9e127b8 <col:12, col:44> 'int' <IntegralCast>
                (ParenExpr 0x9e12750 <col:12, col:44> 'enum std::_Ios_Fmtflags'
                  (CXXOperatorCallExpr 0x9e12728 <col:13, col:33> 'enum std::_Ios_Fmtflags'
                    (ImplicitCastExpr 0x9e12718 <col:21, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
                      (DeclRefExpr 0x9e12700 <col:21, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9d5b750 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
                    (ImplicitCastExpr 0x9e126e0 <col:13> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                      (DeclRefExpr 0x9e12688 <col:13> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9e10cb0 '__flags' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags'))
                    (ImplicitCastExpr 0x9e126f0 <col:23, col:33> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                      (DeclRefExpr 0x9e126bc <col:23, col:33> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9d6b870 'adjustfield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))))
              (ImplicitCastExpr 0x9e127c8 <col:49, col:59> 'int' <IntegralCast>
                (ImplicitCastExpr 0x9e127a8 <col:49, col:59> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                  (DeclRefExpr 0x9e12784 <col:49, col:59> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9d6b4b0 'left' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
            (CompoundStmt 0x9e12a00 <line:1122:3, line:1125:3>
              (BinaryOperator 0x9e128f8 <line:1123:5, col:42> '<dependent type>' '='
                (DeclRefExpr 0x9e1281c <col:5> 'iter_type':'_OutIter' lvalue ParmVar 0x9e10a70 '__s' 'iter_type':'_OutIter')
                (CallExpr 0x9e128d0 <col:11, col:42> '<dependent type>'
                  (UnresolvedLookupExpr 0x9e12850 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0x9dbb560 0x9dbb920)
                  (DeclRefExpr 0x9e12888 <col:24> 'iter_type':'_OutIter' lvalue ParmVar 0x9e10a70 '__s' 'iter_type':'_OutIter')
                  (DeclRefExpr 0x9e128a0 <col:29> 'const _CharT *' lvalue Var 0x9e11430 '__name' 'const _CharT *')
                  (DeclRefExpr 0x9e128b8 <col:37> 'int' lvalue Var 0x9e11fb0 '__len' 'int')))
              (BinaryOperator 0x9e129e8 <line:1124:5, col:41> '<dependent type>' '='
                (DeclRefExpr 0x9e12910 <col:5> 'iter_type':'_OutIter' lvalue ParmVar 0x9e10a70 '__s' 'iter_type':'_OutIter')
                (CallExpr 0x9e129c0 <col:11, col:41> '<dependent type>'
                  (UnresolvedLookupExpr 0x9e12940 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0x9dbb560 0x9dbb920)
                  (DeclRefExpr 0x9e12978 <col:24> 'iter_type':'_OutIter' lvalue ParmVar 0x9e10a70 '__s' 'iter_type':'_OutIter')
                  (DeclRefExpr 0x9e12990 <col:29> '_CharT *' lvalue Var 0x9e12350 '__ps' '_CharT *')
                  (DeclRefExpr 0x9e129a8 <col:35> 'const streamsize':'const int' lvalue Var 0x9e12270 '__plen' 'const streamsize':'const int'))))
            (CompoundStmt 0x9e12bf8 <line:1127:3, line:1130:3>
              (BinaryOperator 0x9e12af0 <line:1128:5, col:41> '<dependent type>' '='
                (DeclRefExpr 0x9e12a18 <col:5> 'iter_type':'_OutIter' lvalue ParmVar 0x9e10a70 '__s' 'iter_type':'_OutIter')
                (CallExpr 0x9e12ac8 <col:11, col:41> '<dependent type>'
                  (UnresolvedLookupExpr 0x9e12a48 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0x9dbb560 0x9dbb920)
                  (DeclRefExpr 0x9e12a80 <col:24> 'iter_type':'_OutIter' lvalue ParmVar 0x9e10a70 '__s' 'iter_type':'_OutIter')
                  (DeclRefExpr 0x9e12a98 <col:29> '_CharT *' lvalue Var 0x9e12350 '__ps' '_CharT *')
                  (DeclRefExpr 0x9e12ab0 <col:35> 'const streamsize':'const int' lvalue Var 0x9e12270 '__plen' 'const streamsize':'const int')))
              (BinaryOperator 0x9e12be0 <line:1129:5, col:42> '<dependent type>' '='
                (DeclRefExpr 0x9e12b08 <col:5> 'iter_type':'_OutIter' lvalue ParmVar 0x9e10a70 '__s' 'iter_type':'_OutIter')
                (CallExpr 0x9e12bb8 <col:11, col:42> '<dependent type>'
                  (UnresolvedLookupExpr 0x9e12b38 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0x9dbb560 0x9dbb920)
                  (DeclRefExpr 0x9e12b70 <col:24> 'iter_type':'_OutIter' lvalue ParmVar 0x9e10a70 '__s' 'iter_type':'_OutIter')
                  (DeclRefExpr 0x9e12b88 <col:29> 'const _CharT *' lvalue Var 0x9e11430 '__name' 'const _CharT *')
                  (DeclRefExpr 0x9e12ba0 <col:37> 'int' lvalue Var 0x9e11fb0 '__len' 'int')))))
          (ReturnStmt 0x9e12c48 <line:1131:8, col:15>
            (DeclRefExpr 0x9e12c2c <col:15> 'iter_type':'_OutIter' lvalue ParmVar 0x9e10a70 '__s' 'iter_type':'_OutIter')))
        <<<NULL>>>)
      (CXXMemberCallExpr 0x9e12d30 <line:1133:4, col:16> 'streamsize':'int'
        (MemberExpr 0x9e12d10 <col:4, col:9> '<bound member function type>' .width 0x9d620b0
          (DeclRefExpr 0x9e12c9c <col:4> 'class std::ios_base' lvalue ParmVar 0x9e10ac0 '__io' 'class std::ios_base &'))
        (IntegerLiteral 0x9e12cf8 <col:15> 'int' 0))
      (BinaryOperator 0x9e12e28 <line:1134:4, col:41> '<dependent type>' '='
        (DeclRefExpr 0x9e12d50 <col:4> 'iter_type':'_OutIter' lvalue ParmVar 0x9e10a70 '__s' 'iter_type':'_OutIter')
        (CallExpr 0x9e12e00 <col:10, col:41> '<dependent type>'
          (UnresolvedLookupExpr 0x9e12d80 <col:10, col:15> '<overloaded function type>' lvalue (no ADL) = '1' 0x9dbb560 0x9dbb920)
          (DeclRefExpr 0x9e12db8 <col:23> 'iter_type':'_OutIter' lvalue ParmVar 0x9e10a70 '__s' 'iter_type':'_OutIter')
          (DeclRefExpr 0x9e12dd0 <col:28> 'const _CharT *' lvalue Var 0x9e11430 '__name' 'const _CharT *')
          (DeclRefExpr 0x9e12de8 <col:36> 'int' lvalue Var 0x9e11fb0 '__len' 'int')))))
  (ReturnStmt 0x9e12eb0 <line:1136:7, col:14>
    (DeclRefExpr 0x9e12e94 <col:14> 'iter_type':'_OutIter' lvalue ParmVar 0x9e10a70 '__s' 'iter_type':'_OutIter')))


    _OutIter do_put(iter_type __s, std::ios_base &__io, char_type __fill, double __v) const (CompoundStmt 0x9e134a8 </usr/include/c++/4.6/bits/locale_facets.tcc:1143:5, col:63>
  (ReturnStmt 0x9e13498 <col:7, col:60>
    (CallExpr 0x9e13468 <col:14, col:60> '<dependent type>'
      (UnresolvedMemberExpr 0x9e133b0 <col:14> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9e133ec <col:30> 'iter_type':'_OutIter' lvalue ParmVar 0x9e13180 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0x9e13404 <col:35> 'class std::ios_base' lvalue ParmVar 0x9e131d0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9e1341c <col:41> 'char_type':'_CharT' lvalue ParmVar 0x9e13210 '__fill' 'char_type':'_CharT')
      (CXXScalarValueInitExpr 0x9e13440 <col:49, col:54> 'char')
      (DeclRefExpr 0x9e13450 <col:57> 'double' lvalue ParmVar 0x9e13260 '__v' 'double'))))


    _OutIter do_put(iter_type __s, std::ios_base &__io, char_type __fill, long double __v) const (CompoundStmt 0x9e13a88 </usr/include/c++/4.6/bits/locale_facets.tcc:1158:5, col:60>
  (ReturnStmt 0x9e13a78 <col:7, col:57>
    (CallExpr 0x9e13a48 <col:14, col:57> '<dependent type>'
      (UnresolvedMemberExpr 0x9e13990 <col:14> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9e139cc <col:30> 'iter_type':'_OutIter' lvalue ParmVar 0x9e13760 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0x9e139e4 <col:35> 'class std::ios_base' lvalue ParmVar 0x9e137b0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9e139fc <col:41> 'char_type':'_CharT' lvalue ParmVar 0x9e137f0 '__fill' 'char_type':'_CharT')
      (CharacterLiteral 0x9e13a18 <col:49> 'char'76)
      (DeclRefExpr 0x9e13a2c <col:54> 'long double' lvalue ParmVar 0x9e13840 '__v' 'long double'))))


    _OutIter do_put(iter_type __s, std::ios_base &__io, char_type __fill, const void *__v) const (CompoundStmt 0x9e14918 </usr/include/c++/4.6/bits/locale_facets.tcc:1165:5, line:1179:5>
  (DeclStmt 0x9e14070 <line:1166:7, col:54>
    0x9e13f90 "const ios_base::fmtflags __flags =
      (CXXMemberCallExpr 0x9e14040 <col:42, col:53> 'fmtflags':'enum std::_Ios_Fmtflags'
        (MemberExpr 0x9e1401c <col:42, col:47> '<bound member function type>' .flags 0x9d619d0
          (ImplicitCastExpr 0x9e14060 <col:42> 'const class std::ios_base' lvalue <NoOp>
            (DeclRefExpr 0x9e13fc4 <col:42> 'class std::ios_base' lvalue ParmVar 0x9e13d90 '__io' 'class std::ios_base &'))))")
  (DeclStmt 0x9e14240 <line:1167:7, line:1168:29>
    0x9e140b0 "const ios_base::fmtflags __fmt =
      (CXXOperatorCallExpr 0x9e14220 <line:1167:40, line:1168:28> 'enum std::_Ios_Fmtflags'
        (ImplicitCastExpr 0x9e14210 <<invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9e141f8 <<invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags)' lvalue Function 0x9d5bdc0 'operator~' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags)'))
        (ParenExpr 0x9e141e0 <line:1167:41, line:1168:28> 'enum std::_Ios_Fmtflags'
          (CXXOperatorCallExpr 0x9e141b8 <line:1167:42, line:1168:19> 'enum std::_Ios_Fmtflags'
            (ImplicitCastExpr 0x9e141a8 <col:7, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9e14190 <col:7, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9d5b980 'operator|' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
            (ImplicitCastExpr 0x9e14170 <line:1167:42, col:52> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0x9e14110 <col:42, col:52> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9d6b8d0 'basefield' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
            (ImplicitCastExpr 0x9e14180 <line:1168:9, col:19> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0x9e1414c <col:9, col:19> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9d6b810 'uppercase' 'const fmtflags':'const enum std::_Ios_Fmtflags')))))")
  (CXXMemberCallExpr 0x9e144e0 <line:1169:7, col:74> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x9e144bc <col:7, col:12> '<bound member function type>' .flags 0x9d61ac0
      (DeclRefExpr 0x9e14250 <col:7> 'class std::ios_base' lvalue ParmVar 0x9e13d90 '__io' 'class std::ios_base &'))
    (CXXOperatorCallExpr 0x9e14498 <col:18, col:73> 'enum std::_Ios_Fmtflags'
      (ImplicitCastExpr 0x9e14488 <col:36, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9e14470 <col:36, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9d5b980 'operator|' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
      (ParenExpr 0x9e14348 <col:18, col:34> 'enum std::_Ios_Fmtflags'
        (CXXOperatorCallExpr 0x9e14320 <col:19, col:29> 'enum std::_Ios_Fmtflags'
          (ImplicitCastExpr 0x9e14310 <col:27, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9e142f8 <col:27, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9d5b750 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
          (ImplicitCastExpr 0x9e142d8 <col:19> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9e142a8 <col:19> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9e13f90 '__flags' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags'))
          (ImplicitCastExpr 0x9e142e8 <col:29> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9e142c0 <col:29> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9e140b0 '__fmt' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags'))))
      (ParenExpr 0x9e14458 <col:38, col:73> 'enum std::_Ios_Fmtflags'
        (CXXOperatorCallExpr 0x9e14430 <col:39, col:65> 'enum std::_Ios_Fmtflags'
          (ImplicitCastExpr 0x9e14420 <col:53, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9e14408 <col:53, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9d5b980 'operator|' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
          (ImplicitCastExpr 0x9e143e8 <col:39, col:49> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9e14388 <col:39, col:49> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9d6b3f0 'hex' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
          (ImplicitCastExpr 0x9e143f8 <col:55, col:65> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9e143c4 <col:55, col:65> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9d6b630 'showbase' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))))
  (DeclStmt 0x9e146d0 <line:1171:7, line:1173:57>
    0x9e146a0 "typedef __gnu_cxx::__conditional_type<(sizeof(const void *) <= sizeof(unsigned long)), unsigned long, unsigned long long>::__type _UIntPtrType")
  (BinaryOperator 0x9e14818 <line:1175:7, line:1176:41> '<dependent type>' '='
    (DeclRefExpr 0x9e146e0 <line:1175:7> 'iter_type':'_OutIter' lvalue ParmVar 0x9e13d40 '__s' 'iter_type':'_OutIter')
    (CallExpr 0x9e147e8 <col:13, line:1176:41> '<dependent type>'
      (UnresolvedMemberExpr 0x9e14708 <line:1175:13> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9e14744 <col:27> 'iter_type':'_OutIter' lvalue ParmVar 0x9e13d40 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0x9e1475c <col:32> 'class std::ios_base' lvalue ParmVar 0x9e13d90 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9e14774 <col:38> 'char_type':'_CharT' lvalue ParmVar 0x9e13dd0 '__fill' 'char_type':'_CharT')
      (CXXReinterpretCastExpr 0x9e147d0 <line:1176:6, col:40> '_UIntPtrType':'unsigned long' reinterpret_cast<_UIntPtrType> <PointerToIntegral>
        (ImplicitCastExpr 0x9e147c0 <col:37> 'const void *' <LValueToRValue>
          (DeclRefExpr 0x9e147a0 <col:37> 'const void *' lvalue ParmVar 0x9e13e20 '__v' 'const void *')))))
  (CXXMemberCallExpr 0x9e148c0 <line:1177:7, col:25> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x9e148a0 <col:7, col:12> '<bound member function type>' .flags 0x9d61ac0
      (DeclRefExpr 0x9e14830 <col:7> 'class std::ios_base' lvalue ParmVar 0x9e13d90 '__io' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9e148e0 <col:18> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9e14888 <col:18> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9e13f90 '__flags' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9e14908 <line:1178:7, col:14>
    (DeclRefExpr 0x9e148ec <col:14> 'iter_type':'_OutIter' lvalue ParmVar 0x9e13d40 '__s' 'iter_type':'_OutIter')))


    static void _S_pad(std::ios_base &__io, _CharT __fill, _CharT *__news, const _CharT *__olds, streamsize __newlen, streamsize __oldlen) (CompoundStmt 0x9e167a0 </usr/include/c++/4.6/bits/locale_facets.tcc:1195:5, line:1237:5>
  (DeclStmt 0x9e14fb0 <line:1196:7, col:69>
    0x9e14ee0 "const size_t __plen =
      (CXXStaticCastExpr 0x9e14f98 <col:29, col:68> 'size_t':'unsigned int' static_cast<size_t> <NoOp>
        (ImplicitCastExpr 0x9e14f88 <col:49, col:60> 'size_t':'unsigned int' <IntegralCast>
          (BinaryOperator 0x9e14f68 <col:49, col:60> 'int' '-'
            (ImplicitCastExpr 0x9e14f48 <col:49> 'streamsize':'int' <LValueToRValue>
              (DeclRefExpr 0x9e14f14 <col:49> 'streamsize':'int' lvalue ParmVar 0x9e14d50 '__newlen' 'streamsize':'int'))
            (ImplicitCastExpr 0x9e14f58 <col:60> 'streamsize':'int' <LValueToRValue>
              (DeclRefExpr 0x9e14f2c <col:60> 'streamsize':'int' lvalue ParmVar 0x9e14d90 '__oldlen' 'streamsize':'int')))))")
  (DeclStmt 0x9e15170 <line:1197:7, col:79>
    0x9e14ff0 "const ios_base::fmtflags __adjust =
      (CXXOperatorCallExpr 0x9e15148 <col:43, col:68> 'enum std::_Ios_Fmtflags'
        (ImplicitCastExpr 0x9e15138 <col:56, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9e15120 <col:56, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9d5b750 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
        (CXXMemberCallExpr 0x9e150a0 <col:43, col:54> 'fmtflags':'enum std::_Ios_Fmtflags'
          (MemberExpr 0x9e1507c <col:43, col:48> '<bound member function type>' .flags 0x9d619d0
            (ImplicitCastExpr 0x9e150c0 <col:43> 'const class std::ios_base' lvalue <NoOp>
              (DeclRefExpr 0x9e15024 <col:43> 'class std::ios_base' lvalue ParmVar 0x9e14bf0 '__io' 'class std::ios_base &'))))
        (ImplicitCastExpr 0x9e15110 <col:58, col:68> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
          (DeclRefExpr 0x9e150ec <col:58, col:68> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9d6b870 'adjustfield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))")
  (IfStmt 0x9e154a8 <line:1200:7, line:1205:2>
    <<<NULL>>>
    (BinaryOperator 0x9e15218 <line:1200:11, col:33> '_Bool' '=='
      (ImplicitCastExpr 0x9e151f8 <col:11> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9e151d8 <col:11> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
          (DeclRefExpr 0x9e15180 <col:11> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9e14ff0 '__adjust' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
      (ImplicitCastExpr 0x9e15208 <col:23, col:33> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9e151e8 <col:23, col:33> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
          (DeclRefExpr 0x9e151b4 <col:23, col:33> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9d6b4b0 'left' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
    (CompoundStmt 0x9e15488 <line:1201:2, line:1205:2>
      (CallExpr 0x9e15308 <line:1202:4, col:42> '<dependent type>'
        (DependentScopeDeclRefExpr 0x9e15298 <col:4, col:13> '<dependent type>' lvalue)
        (DeclRefExpr 0x9e152bc <col:18> '_CharT *' lvalue ParmVar 0x9e14ca0 '__news' '_CharT *')
        (DeclRefExpr 0x9e152d4 <col:26> 'const _CharT *' lvalue ParmVar 0x9e14d10 '__olds' 'const _CharT *')
        (DeclRefExpr 0x9e152ec <col:34> 'streamsize':'int' lvalue ParmVar 0x9e14d90 '__oldlen' 'streamsize':'int'))
      (CallExpr 0x9e15450 <line:1203:4, col:53> '<dependent type>'
        (DependentScopeDeclRefExpr 0x9e15358 <col:4, col:13> '<dependent type>' lvalue)
        (CXXOperatorCallExpr 0x9e153f8 <col:20, col:29> '<dependent type>'
          (UnresolvedLookupExpr 0x9e153b0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9ce1500 0x9ce2100 0x9cb8030 0x9cb8830)
          (DeclRefExpr 0x9e1537c <col:20> '_CharT *' lvalue ParmVar 0x9e14ca0 '__news' '_CharT *')
          (DeclRefExpr 0x9e15394 <col:29> 'streamsize':'int' lvalue ParmVar 0x9e14d90 '__oldlen' 'streamsize':'int'))
        (DeclRefExpr 0x9e1541c <col:39> 'const size_t':'const unsigned int' lvalue Var 0x9e14ee0 '__plen' 'const size_t':'const unsigned int')
        (DeclRefExpr 0x9e15434 <col:47> '_CharT' lvalue ParmVar 0x9e14c30 '__fill' '_CharT'))
      (ReturnStmt 0x9e15478 <line:1204:4>))
    <<<NULL>>>)
  (DeclStmt 0x9e15530 <line:1207:7, col:23>
    0x9e154d0 "size_t __mod =
      (ImplicitCastExpr 0x9e15520 <col:22> 'size_t':'unsigned int' <IntegralCast>
        (IntegerLiteral 0x9e15508 <col:22> 'int' 0))")
  (IfStmt 0x9e16490 <line:1208:7, line:1234:2>
    <<<NULL>>>
    (BinaryOperator 0x9e155d8 <line:1208:11, col:33> '_Bool' '=='
      (ImplicitCastExpr 0x9e155b8 <col:11> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9e15598 <col:11> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
          (DeclRefExpr 0x9e15540 <col:11> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9e14ff0 '__adjust' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
      (ImplicitCastExpr 0x9e155c8 <col:23, col:33> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9e155a8 <col:23, col:33> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
          (DeclRefExpr 0x9e15574 <col:23, col:33> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9d6b450 'internal' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
    (CompoundStmt 0x9e16470 <line:1209:2, line:1234:2>
      (DeclStmt 0x9e156d0 <line:1213:11, col:49>
        0x9e15630 "const std::locale &__loc =
          (CXXMemberCallExpr 0x9e156a0 <col:33, col:48> 'const class std::locale' lvalue
            (MemberExpr 0x9e1567c <col:33, col:38> '<bound member function type>' ._M_getloc 0x9d623d0
              (ImplicitCastExpr 0x9e156c0 <col:33> 'const class std::ios_base' lvalue <NoOp>
                (DeclRefExpr 0x9e15664 <col:33> 'class std::ios_base' lvalue ParmVar 0x9e14bf0 '__io' 'class std::ios_base &'))))")
      (DeclStmt 0x9e15930 <line:1214:4, col:67>
        0x9e157b0 "const ctype<_CharT> &__ctype =
          (CallExpr 0x9e15910 <col:35, col:66> '<dependent type>'
            (UnresolvedLookupExpr 0x9e15890 <col:35, col:59> '<dependent type>' lvalue (ADL) = '1' 0x9bf5c50)
            (DeclRefExpr 0x9e158f8 <col:61> 'const class std::locale' lvalue Var 0x9e15630 '__loc' 'const class std::locale &'))")
      (IfStmt 0x9e16450 <line:1216:4, line:1232:6>
        <<<NULL>>>
        (BinaryOperator 0x9e15bf0 <line:1216:8, line:1217:41> '<dependent type>' '||'
          (CXXOperatorCallExpr 0x9e15a70 <line:1216:8, col:38> '<dependent type>'
            (UnresolvedLookupExpr 0x9e15a10 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90 0x9cb91e0 0x9cb9c50 0x9cba490 0x9cbaa00 0x9db0390)
            (CallExpr 0x9e159a8 <col:8, col:25> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9e15958 <col:8, col:16> '<dependent type>' lvalue
                (DeclRefExpr 0x9e15940 <col:8> 'const ctype<_CharT>' lvalue Var 0x9e157b0 '__ctype' 'const ctype<_CharT> &'))
              (CharacterLiteral 0x9e15990 <col:22> 'char'45))
            (ArraySubscriptExpr 0x9e159f8 <col:30, col:38> '<dependent type>' lvalue
              (DeclRefExpr 0x9e159c8 <col:30> 'const _CharT *' lvalue ParmVar 0x9e14d10 '__olds' 'const _CharT *')
              (IntegerLiteral 0x9e159e0 <col:37> 'int' 0)))
          (CXXOperatorCallExpr 0x9e15bc8 <line:1217:11, col:41> '<dependent type>'
            (UnresolvedLookupExpr 0x9e15b68 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90 0x9cb91e0 0x9cb9c50 0x9cba490 0x9cbaa00 0x9db0390)
            (CallExpr 0x9e15b00 <col:11, col:28> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9e15ab0 <col:11, col:19> '<dependent type>' lvalue
                (DeclRefExpr 0x9e15a94 <col:11> 'const ctype<_CharT>' lvalue Var 0x9e157b0 '__ctype' 'const ctype<_CharT> &'))
              (CharacterLiteral 0x9e15ae8 <col:25> 'char'43))
            (ArraySubscriptExpr 0x9e15b50 <col:33, col:41> '<dependent type>' lvalue
              (DeclRefExpr 0x9e15b20 <col:33> 'const _CharT *' lvalue ParmVar 0x9e14d10 '__olds' 'const _CharT *')
              (IntegerLiteral 0x9e15b38 <col:40> 'int' 0))))
        (CompoundStmt 0x9e15d38 <line:1218:6, line:1222:6>
          (BinaryOperator 0x9e15c98 <line:1219:8, col:28> '<dependent type>' '='
            (ArraySubscriptExpr 0x9e15c38 <col:8, col:16> '<dependent type>' lvalue
              (DeclRefExpr 0x9e15c08 <col:8> '_CharT *' lvalue ParmVar 0x9e14ca0 '__news' '_CharT *')
              (IntegerLiteral 0x9e15c20 <col:15> 'int' 0))
            (ArraySubscriptExpr 0x9e15c80 <col:20, col:28> '<dependent type>' lvalue
              (DeclRefExpr 0x9e15c4c <col:20> 'const _CharT *' lvalue ParmVar 0x9e14d10 '__olds' 'const _CharT *')
              (IntegerLiteral 0x9e15c68 <col:27> 'int' 0)))
          (BinaryOperator 0x9e15cf0 <line:1220:8, col:16> 'size_t':'unsigned int' lvalue '='
            (DeclRefExpr 0x9e15cb0 <col:8> 'size_t':'unsigned int' lvalue Var 0x9e154d0 '__mod' 'size_t':'unsigned int')
            (ImplicitCastExpr 0x9e15ce0 <col:16> 'size_t':'unsigned int' <IntegralCast>
              (IntegerLiteral 0x9e15cc8 <col:16> 'int' 1)))
          (UnaryOperator 0x9e15d20 <line:1221:8, col:10> '<dependent type>' prefix '++'
            (DeclRefExpr 0x9e15d08 <col:10> '_CharT *' lvalue ParmVar 0x9e14ca0 '__news' '_CharT *')))
        (IfStmt 0x9e16430 <line:1223:9, line:1232:6>
          <<<NULL>>>
          (BinaryOperator 0x9e16200 <line:1223:13, line:1226:44> '<dependent type>' '&&'
            (BinaryOperator 0x9e15f08 <line:1223:13, line:1224:20> '<dependent type>' '&&'
              (CXXOperatorCallExpr 0x9e15e88 <line:1223:13, col:43> '<dependent type>'
                (UnresolvedLookupExpr 0x9e15e28 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90 0x9cb91e0 0x9cb9c50 0x9cba490 0x9cbaa00 0x9db0390)
                (CallExpr 0x9e15dc0 <col:13, col:30> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9e15d70 <col:13, col:21> '<dependent type>' lvalue
                    (DeclRefExpr 0x9e15d54 <col:13> 'const ctype<_CharT>' lvalue Var 0x9e157b0 '__ctype' 'const ctype<_CharT> &'))
                  (CharacterLiteral 0x9e15da8 <col:27> 'char'48))
                (ArraySubscriptExpr 0x9e15e10 <col:35, col:43> '<dependent type>' lvalue
                  (DeclRefExpr 0x9e15de0 <col:35> 'const _CharT *' lvalue ParmVar 0x9e14d10 '__olds' 'const _CharT *')
                  (IntegerLiteral 0x9e15df8 <col:42> 'int' 0)))
              (BinaryOperator 0x9e15ef0 <line:1224:9, col:20> '_Bool' '>'
                (ImplicitCastExpr 0x9e15ee0 <col:9> 'streamsize':'int' <LValueToRValue>
                  (DeclRefExpr 0x9e15eac <col:9> 'streamsize':'int' lvalue ParmVar 0x9e14d90 '__oldlen' 'streamsize':'int'))
                (IntegerLiteral 0x9e15ec8 <col:20> 'int' 1)))
            (ParenExpr 0x9e161e8 <line:1225:9, line:1226:44> '<dependent type>'
              (BinaryOperator 0x9e161d0 <line:1225:10, line:1226:43> '<dependent type>' '||'
                (CXXOperatorCallExpr 0x9e16050 <line:1225:10, col:40> '<dependent type>'
                  (UnresolvedLookupExpr 0x9e15ff0 <col:29, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90 0x9cb91e0 0x9cb9c50 0x9cba490 0x9cbaa00 0x9db0390)
                  (CallExpr 0x9e15f88 <col:10, col:27> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9e15f38 <col:10, col:18> '<dependent type>' lvalue
                      (DeclRefExpr 0x9e15f20 <col:10> 'const ctype<_CharT>' lvalue Var 0x9e157b0 '__ctype' 'const ctype<_CharT> &'))
                    (CharacterLiteral 0x9e15f70 <col:24> 'char'120))
                  (ArraySubscriptExpr 0x9e15fd8 <col:32, col:40> '<dependent type>' lvalue
                    (DeclRefExpr 0x9e15fa8 <col:32> 'const _CharT *' lvalue ParmVar 0x9e14d10 '__olds' 'const _CharT *')
                    (IntegerLiteral 0x9e15fc0 <col:39> 'int' 1)))
                (CXXOperatorCallExpr 0x9e161a8 <line:1226:13, col:43> '<dependent type>'
                  (UnresolvedLookupExpr 0x9e16148 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90 0x9cb91e0 0x9cb9c50 0x9cba490 0x9cbaa00 0x9db0390)
                  (CallExpr 0x9e160e0 <col:13, col:30> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9e16090 <col:13, col:21> '<dependent type>' lvalue
                      (DeclRefExpr 0x9e16074 <col:13> 'const ctype<_CharT>' lvalue Var 0x9e157b0 '__ctype' 'const ctype<_CharT> &'))
                    (CharacterLiteral 0x9e160c8 <col:27> 'char'88))
                  (ArraySubscriptExpr 0x9e16130 <col:35, col:43> '<dependent type>' lvalue
                    (DeclRefExpr 0x9e16100 <col:35> 'const _CharT *' lvalue ParmVar 0x9e14d10 '__olds' 'const _CharT *')
                    (IntegerLiteral 0x9e16118 <col:42> 'int' 1))))))
          (CompoundStmt 0x9e16410 <line:1227:6, line:1232:6>
            (BinaryOperator 0x9e162a8 <line:1228:8, col:28> '<dependent type>' '='
              (ArraySubscriptExpr 0x9e16248 <col:8, col:16> '<dependent type>' lvalue
                (DeclRefExpr 0x9e16218 <col:8> '_CharT *' lvalue ParmVar 0x9e14ca0 '__news' '_CharT *')
                (IntegerLiteral 0x9e16230 <col:15> 'int' 0))
              (ArraySubscriptExpr 0x9e16290 <col:20, col:28> '<dependent type>' lvalue
                (DeclRefExpr 0x9e1625c <col:20> 'const _CharT *' lvalue ParmVar 0x9e14d10 '__olds' 'const _CharT *')
                (IntegerLiteral 0x9e16278 <col:27> 'int' 0)))
            (BinaryOperator 0x9e16350 <line:1229:8, col:28> '<dependent type>' '='
              (ArraySubscriptExpr 0x9e162f0 <col:8, col:16> '<dependent type>' lvalue
                (DeclRefExpr 0x9e162c0 <col:8> '_CharT *' lvalue ParmVar 0x9e14ca0 '__news' '_CharT *')
                (IntegerLiteral 0x9e162d8 <col:15> 'int' 1))
              (ArraySubscriptExpr 0x9e16338 <col:20, col:28> '<dependent type>' lvalue
                (DeclRefExpr 0x9e16304 <col:20> 'const _CharT *' lvalue ParmVar 0x9e14d10 '__olds' 'const _CharT *')
                (IntegerLiteral 0x9e16320 <col:27> 'int' 1)))
            (BinaryOperator 0x9e163a8 <line:1230:8, col:16> 'size_t':'unsigned int' lvalue '='
              (DeclRefExpr 0x9e16368 <col:8> 'size_t':'unsigned int' lvalue Var 0x9e154d0 '__mod' 'size_t':'unsigned int')
              (ImplicitCastExpr 0x9e16398 <col:16> 'size_t':'unsigned int' <IntegralCast>
                (IntegerLiteral 0x9e16380 <col:16> 'int' 2)))
            (CompoundAssignOperator 0x9e163f0 <line:1231:8, col:18> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
              (DeclRefExpr 0x9e163c0 <col:8> '_CharT *' lvalue ParmVar 0x9e14ca0 '__news' '_CharT *')
              (IntegerLiteral 0x9e163d8 <col:18> 'int' 2)))
          <<<NULL>>>)))
    <<<NULL>>>)
  (CallExpr 0x9e16548 <line:1235:7, col:45> '<dependent type>'
    (DependentScopeDeclRefExpr 0x9e164d8 <col:7, col:16> '<dependent type>' lvalue)
    (DeclRefExpr 0x9e164fc <col:23> '_CharT *' lvalue ParmVar 0x9e14ca0 '__news' '_CharT *')
    (DeclRefExpr 0x9e16514 <col:31> 'const size_t':'const unsigned int' lvalue Var 0x9e14ee0 '__plen' 'const size_t':'const unsigned int')
    (DeclRefExpr 0x9e1652c <col:39> '_CharT' lvalue ParmVar 0x9e14c30 '__fill' '_CharT'))
  (CallExpr 0x9e16778 <line:1236:7, col:70> '<dependent type>'
    (DependentScopeDeclRefExpr 0x9e16598 <col:7, col:16> '<dependent type>' lvalue)
    (CXXOperatorCallExpr 0x9e16638 <col:21, col:30> '<dependent type>'
      (UnresolvedLookupExpr 0x9e165f0 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9ce1500 0x9ce2100 0x9cb8030 0x9cb8830)
      (DeclRefExpr 0x9e165bc <col:21> '_CharT *' lvalue ParmVar 0x9e14ca0 '__news' '_CharT *')
      (DeclRefExpr 0x9e165d4 <col:30> 'const size_t':'const unsigned int' lvalue Var 0x9e14ee0 '__plen' 'const size_t':'const unsigned int'))
    (CXXOperatorCallExpr 0x9e166d8 <col:38, col:47> '<dependent type>'
      (UnresolvedLookupExpr 0x9e16690 <col:45, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9ce1500 0x9ce2100 0x9cb8030 0x9cb8830)
      (DeclRefExpr 0x9e1665c <col:38> 'const _CharT *' lvalue ParmVar 0x9e14d10 '__olds' 'const _CharT *')
      (DeclRefExpr 0x9e16674 <col:47> 'size_t':'unsigned int' lvalue Var 0x9e154d0 '__mod' 'size_t':'unsigned int'))
    (BinaryOperator 0x9e16760 <col:54, col:65> 'unsigned int' '-'
      (ImplicitCastExpr 0x9e16750 <col:54> 'unsigned int' <IntegralCast>
        (ImplicitCastExpr 0x9e16730 <col:54> 'streamsize':'int' <LValueToRValue>
          (DeclRefExpr 0x9e166fc <col:54> 'streamsize':'int' lvalue ParmVar 0x9e14d90 '__oldlen' 'streamsize':'int')))
      (ImplicitCastExpr 0x9e16740 <col:65> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9e16714 <col:65> 'size_t':'unsigned int' lvalue Var 0x9e154d0 '__mod' 'size_t':'unsigned int')))))


    template <typename _CharT> _CharT *__add_grouping(_CharT *__s, _CharT __sep, const char *__gbeg, size_t __gsize, const _CharT *__first, const _CharT *__last) (CompoundStmt 0x9e17ac0 </usr/include/c++/4.6/bits/locale_facets.tcc:1244:5, line:1274:5>
  (DeclStmt 0x9e16bc0 <line:1245:7, col:23>
    0x9e16b60 "size_t __idx =
      (ImplicitCastExpr 0x9e16bb0 <col:22> 'size_t':'unsigned int' <IntegralCast>
        (IntegerLiteral 0x9e16b98 <col:22> 'int' 0))")
  (DeclStmt 0x9e16c40 <line:1246:7, col:23>
    0x9e16be0 "size_t __ctr =
      (ImplicitCastExpr 0x9e16c30 <col:22> 'size_t':'unsigned int' <IntegralCast>
        (IntegerLiteral 0x9e16c18 <col:22> 'int' 0))")
  (WhileStmt 0x9e17220 <line:1248:7, line:1254:2>
    <<<NULL>>>
    (BinaryOperator 0x9e17028 <line:1248:14, line:1250:62> '<dependent type>' '&&'
      (BinaryOperator 0x9e16ea8 <line:1248:14, line:1249:52> '<dependent type>' '&&'
        (CXXOperatorCallExpr 0x9e16d90 <line:1248:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0x9e16d48 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b42c70 0x9ac83c0 0x9b5e730 0x9cbd1f0 0x9cbd720 0x9cbdc50)
          (CXXOperatorCallExpr 0x9e16cb8 <col:14, col:23> '<dependent type>'
            (UnresolvedLookupExpr 0x9e16c80 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
            (DeclRefExpr 0x9e16c50 <col:14> 'const _CharT *' lvalue ParmVar 0x9e169f0 '__last' 'const _CharT *')
            (DeclRefExpr 0x9e16c68 <col:23> 'const _CharT *' lvalue ParmVar 0x9e169a0 '__first' 'const _CharT *'))
          (ArraySubscriptExpr 0x9e16d30 <col:33, col:45> 'const char' lvalue
            (ImplicitCastExpr 0x9e16d10 <col:33> 'const char *' <LValueToRValue>
              (DeclRefExpr 0x9e16cdc <col:33> 'const char *' lvalue ParmVar 0x9e168f0 '__gbeg' 'const char *'))
            (ImplicitCastExpr 0x9e16d20 <col:40> 'size_t':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0x9e16cf4 <col:40> 'size_t':'unsigned int' lvalue Var 0x9e16b60 '__idx' 'size_t':'unsigned int'))))
        (BinaryOperator 0x9e16e90 <line:1249:10, col:52> '_Bool' '>'
          (ImplicitCastExpr 0x9e16e80 <col:10, col:48> 'int' <IntegralCast>
            (CXXStaticCastExpr 0x9e16e50 <col:10, col:48> 'signed char' static_cast<signed char> <NoOp>
              (ImplicitCastExpr 0x9e16e40 <col:35, col:47> 'signed char' <IntegralCast>
                (ImplicitCastExpr 0x9e16e30 <col:35, col:47> 'char' <LValueToRValue>
                  (ArraySubscriptExpr 0x9e16e08 <col:35, col:47> 'const char' lvalue
                    (ImplicitCastExpr 0x9e16de8 <col:35> 'const char *' <LValueToRValue>
                      (DeclRefExpr 0x9e16db4 <col:35> 'const char *' lvalue ParmVar 0x9e168f0 '__gbeg' 'const char *'))
                    (ImplicitCastExpr 0x9e16df8 <col:42> 'size_t':'unsigned int' <LValueToRValue>
                      (DeclRefExpr 0x9e16dcc <col:42> 'size_t':'unsigned int' lvalue Var 0x9e16b60 '__idx' 'size_t':'unsigned int')))))))
          (IntegerLiteral 0x9e16e68 <col:52> 'int' 0)))
      (BinaryOperator 0x9e17010 <line:1250:10, col:62> '_Bool' '!='
        (ImplicitCastExpr 0x9e16fe0 <col:10, col:22> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9e16fd0 <col:10, col:22> 'char' <LValueToRValue>
            (ArraySubscriptExpr 0x9e16f10 <col:10, col:22> 'const char' lvalue
              (ImplicitCastExpr 0x9e16ef0 <col:10> 'const char *' <LValueToRValue>
                (DeclRefExpr 0x9e16ec0 <col:10> 'const char *' lvalue ParmVar 0x9e168f0 '__gbeg' 'const char *'))
              (ImplicitCastExpr 0x9e16f00 <col:17> 'size_t':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0x9e16ed8 <col:17> 'size_t':'unsigned int' lvalue Var 0x9e16b60 '__idx' 'size_t':'unsigned int')))))
        (ImplicitCastExpr 0x9e17000 <col:27, col:62> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9e16ff0 <col:27, col:62> 'char':'char' <LValueToRValue>
            (DeclRefExpr 0x9e16fb0 <col:27, col:62> 'const char':'const char' lvalue Var 0x9deeec0 '__max' 'const char':'const char')))))
    (CompoundStmt 0x9e17208 <line:1251:2, line:1254:2>
      (CompoundAssignOperator 0x9e170c0 <line:1252:4, col:26> '<dependent type>' lvalue '-=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
        (DeclRefExpr 0x9e17040 <col:4> 'const _CharT *' lvalue ParmVar 0x9e169f0 '__last' 'const _CharT *')
        (ArraySubscriptExpr 0x9e170a8 <col:14, col:26> 'const char' lvalue
          (ImplicitCastExpr 0x9e17088 <col:14> 'const char *' <LValueToRValue>
            (DeclRefExpr 0x9e17058 <col:14> 'const char *' lvalue ParmVar 0x9e168f0 '__gbeg' 'const char *'))
          (ImplicitCastExpr 0x9e17098 <col:21> 'size_t':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0x9e17070 <col:21> 'size_t':'unsigned int' lvalue Var 0x9e16b60 '__idx' 'size_t':'unsigned int'))))
      (ConditionalOperator 0x9e171e8 <line:1253:4, col:38> 'size_t':'unsigned int' lvalue
        (BinaryOperator 0x9e17170 <col:4, col:22> '_Bool' '<'
          (ImplicitCastExpr 0x9e17160 <col:4> 'size_t':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0x9e170e0 <col:4> 'size_t':'unsigned int' lvalue Var 0x9e16b60 '__idx' 'size_t':'unsigned int'))
          (BinaryOperator 0x9e17148 <col:12, col:22> 'unsigned int' '-'
            (ImplicitCastExpr 0x9e17128 <col:12> 'size_t':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0x9e170f8 <col:12> 'size_t':'unsigned int' lvalue ParmVar 0x9e16930 '__gsize' 'size_t':'unsigned int'))
            (ImplicitCastExpr 0x9e17138 <col:22> 'unsigned int' <IntegralCast>
              (IntegerLiteral 0x9e17110 <col:22> 'int' 1))))
        (UnaryOperator 0x9e171a0 <col:26, col:28> 'size_t':'unsigned int' lvalue prefix '++'
          (DeclRefExpr 0x9e17188 <col:28> 'size_t':'unsigned int' lvalue Var 0x9e16b60 '__idx' 'size_t':'unsigned int'))
        (UnaryOperator 0x9e171d0 <col:36, col:38> 'size_t':'unsigned int' lvalue prefix '++'
          (DeclRefExpr 0x9e171b4 <col:38> 'size_t':'unsigned int' lvalue Var 0x9e16be0 '__ctr' 'size_t':'unsigned int')))))
  (WhileStmt 0x9e173c0 <line:1256:7, line:1257:19>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9e172c0 <line:1256:14, col:25> '<dependent type>'
      (UnresolvedLookupExpr 0x9e17268 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b412d0 0x9ac7fa0 0x9b5e2b0 0x9ba7d20 0x9bc7160 0x9bc74d0 0x9cbb090 0x9cbb590 0x9cbbad0 0x9db08a0)
      (DeclRefExpr 0x9e17234 <col:14> 'const _CharT *' lvalue ParmVar 0x9e169a0 '__first' 'const _CharT *')
      (DeclRefExpr 0x9e1724c <col:25> 'const _CharT *' lvalue ParmVar 0x9e169f0 '__last' 'const _CharT *'))
    (BinaryOperator 0x9e173a8 <line:1257:2, col:19> '<dependent type>' '='
      (UnaryOperator 0x9e17330 <col:2, col:6> '<dependent type>' prefix '*'
        (UnaryOperator 0x9e17318 <col:3, col:6> '<dependent type>' postfix '++'
          (DeclRefExpr 0x9e172e4 <col:3> '_CharT *' lvalue ParmVar 0x9e16860 '__s' '_CharT *')))
      (UnaryOperator 0x9e17390 <col:11, col:19> '<dependent type>' prefix '*'
        (UnaryOperator 0x9e17378 <col:12, col:19> '<dependent type>' postfix '++'
          (DeclRefExpr 0x9e17344 <col:12> 'const _CharT *' lvalue ParmVar 0x9e169a0 '__first' 'const _CharT *')))))
  (WhileStmt 0x9e17720 <line:1259:7, line:1264:2>
    <<<NULL>>>
    (ImplicitCastExpr 0x9e17408 <line:1259:14, col:19> '_Bool' <IntegralToBoolean>
      (UnaryOperator 0x9e173f0 <col:14, col:19> 'size_t':'unsigned int' postfix '--'
        (DeclRefExpr 0x9e173d4 <col:14> 'size_t':'unsigned int' lvalue Var 0x9e16be0 '__ctr' 'size_t':'unsigned int')))
    (CompoundStmt 0x9e17708 <line:1260:2, line:1264:2>
      (BinaryOperator 0x9e17490 <line:1261:4, col:13> '<dependent type>' '='
        (UnaryOperator 0x9e17460 <col:4, col:8> '<dependent type>' prefix '*'
          (UnaryOperator 0x9e17448 <col:5, col:8> '<dependent type>' postfix '++'
            (DeclRefExpr 0x9e17414 <col:5> '_CharT *' lvalue ParmVar 0x9e16860 '__s' '_CharT *')))
        (DeclRefExpr 0x9e17474 <col:13> '_CharT' lvalue ParmVar 0x9e168a0 '__sep' '_CharT'))
      (ForStmt 0x9e176e0 <line:1262:4, line:1263:23>
        (DeclStmt 0x9e17560 <line:1262:9, col:33>
          0x9e174b0 "char __i =
            (ImplicitCastExpr 0x9e17550 <col:20, col:32> 'char' <LValueToRValue>
              (ArraySubscriptExpr 0x9e17538 <col:20, col:32> 'const char' lvalue
                (ImplicitCastExpr 0x9e17518 <col:20> 'const char *' <LValueToRValue>
                  (DeclRefExpr 0x9e174e4 <col:20> 'const char *' lvalue ParmVar 0x9e168f0 '__gbeg' 'const char *'))
                (ImplicitCastExpr 0x9e17528 <col:27> 'size_t':'unsigned int' <LValueToRValue>
                  (DeclRefExpr 0x9e174fc <col:27> 'size_t':'unsigned int' lvalue Var 0x9e16b60 '__idx' 'size_t':'unsigned int'))))")
        <<<NULL>>>
        (BinaryOperator 0x9e175c0 <col:35, col:41> '_Bool' '>'
          (ImplicitCastExpr 0x9e175b0 <col:35> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9e175a0 <col:35> 'char' <LValueToRValue>
              (DeclRefExpr 0x9e17570 <col:35> 'char' lvalue Var 0x9e174b0 '__i' 'char')))
          (IntegerLiteral 0x9e17588 <col:41> 'int' 0))
        (UnaryOperator 0x9e175f0 <col:44, col:46> 'char' lvalue prefix '--'
          (DeclRefExpr 0x9e175d8 <col:46> 'char' lvalue Var 0x9e174b0 '__i' 'char'))
        (BinaryOperator 0x9e176c8 <line:1263:6, col:23> '<dependent type>' '='
          (UnaryOperator 0x9e17650 <col:6, col:10> '<dependent type>' prefix '*'
            (UnaryOperator 0x9e17638 <col:7, col:10> '<dependent type>' postfix '++'
              (DeclRefExpr 0x9e17604 <col:7> '_CharT *' lvalue ParmVar 0x9e16860 '__s' '_CharT *')))
          (UnaryOperator 0x9e176b0 <col:15, col:23> '<dependent type>' prefix '*'
            (UnaryOperator 0x9e17698 <col:16, col:23> '<dependent type>' postfix '++'
              (DeclRefExpr 0x9e17664 <col:16> 'const _CharT *' lvalue ParmVar 0x9e169a0 '__first' 'const _CharT *')))))))
  (WhileStmt 0x9e17a80 <line:1266:7, line:1271:2>
    <<<NULL>>>
    (ImplicitCastExpr 0x9e17768 <line:1266:14, col:19> '_Bool' <IntegralToBoolean>
      (UnaryOperator 0x9e17750 <col:14, col:19> 'size_t':'unsigned int' postfix '--'
        (DeclRefExpr 0x9e17734 <col:14> 'size_t':'unsigned int' lvalue Var 0x9e16b60 '__idx' 'size_t':'unsigned int')))
    (CompoundStmt 0x9e17a68 <line:1267:2, line:1271:2>
      (BinaryOperator 0x9e177f0 <line:1268:4, col:13> '<dependent type>' '='
        (UnaryOperator 0x9e177c0 <col:4, col:8> '<dependent type>' prefix '*'
          (UnaryOperator 0x9e177a8 <col:5, col:8> '<dependent type>' postfix '++'
            (DeclRefExpr 0x9e17774 <col:5> '_CharT *' lvalue ParmVar 0x9e16860 '__s' '_CharT *')))
        (DeclRefExpr 0x9e177d4 <col:13> '_CharT' lvalue ParmVar 0x9e168a0 '__sep' '_CharT'))
      (ForStmt 0x9e17a40 <line:1269:4, line:1270:23>
        (DeclStmt 0x9e178c0 <line:1269:9, col:33>
          0x9e17810 "char __i =
            (ImplicitCastExpr 0x9e178b0 <col:20, col:32> 'char' <LValueToRValue>
              (ArraySubscriptExpr 0x9e17898 <col:20, col:32> 'const char' lvalue
                (ImplicitCastExpr 0x9e17878 <col:20> 'const char *' <LValueToRValue>
                  (DeclRefExpr 0x9e17844 <col:20> 'const char *' lvalue ParmVar 0x9e168f0 '__gbeg' 'const char *'))
                (ImplicitCastExpr 0x9e17888 <col:27> 'size_t':'unsigned int' <LValueToRValue>
                  (DeclRefExpr 0x9e1785c <col:27> 'size_t':'unsigned int' lvalue Var 0x9e16b60 '__idx' 'size_t':'unsigned int'))))")
        <<<NULL>>>
        (BinaryOperator 0x9e17920 <col:35, col:41> '_Bool' '>'
          (ImplicitCastExpr 0x9e17910 <col:35> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9e17900 <col:35> 'char' <LValueToRValue>
              (DeclRefExpr 0x9e178d0 <col:35> 'char' lvalue Var 0x9e17810 '__i' 'char')))
          (IntegerLiteral 0x9e178e8 <col:41> 'int' 0))
        (UnaryOperator 0x9e17950 <col:44, col:46> 'char' lvalue prefix '--'
          (DeclRefExpr 0x9e17938 <col:46> 'char' lvalue Var 0x9e17810 '__i' 'char'))
        (BinaryOperator 0x9e17a28 <line:1270:6, col:23> '<dependent type>' '='
          (UnaryOperator 0x9e179b0 <col:6, col:10> '<dependent type>' prefix '*'
            (UnaryOperator 0x9e17998 <col:7, col:10> '<dependent type>' postfix '++'
              (DeclRefExpr 0x9e17964 <col:7> '_CharT *' lvalue ParmVar 0x9e16860 '__s' '_CharT *')))
          (UnaryOperator 0x9e17a10 <col:15, col:23> '<dependent type>' prefix '*'
            (UnaryOperator 0x9e179f8 <col:16, col:23> '<dependent type>' postfix '++'
              (DeclRefExpr 0x9e179c4 <col:16> 'const _CharT *' lvalue ParmVar 0x9e169a0 '__first' 'const _CharT *')))))))
  (ReturnStmt 0x9e17ab0 <line:1273:7, col:14>
    (DeclRefExpr 0x9e17a94 <col:14> '_CharT *' lvalue ParmVar 0x9e16860 '__s' '_CharT *')))

;
    class numpunct : public locale::facet {
        class numpunct;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
        typedef __numpunct_cache<char> __cache_type;
    protected:
    protected:
        __cache_type *_M_data;
    public:
    public:
        static locale::id id;
        numpunct(size_t __refs);
        numpunct(__cache_type *__cache, size_t __refs);
        numpunct(__c_locale __cloc, size_t __refs);
        char_type decimal_point() const;
        char_type thousands_sep() const;
        string grouping() const;
        string_type truename() const;
        string_type falsename() const;
    protected:
    protected:
        virtual void ~numpunct();
        virtual char_type do_decimal_point() const;
        virtual char_type do_thousands_sep() const;
        virtual string do_grouping() const;
        virtual string_type do_truename() const;
        virtual string_type do_falsename() const;
        void _M_initialize_numpunct(__c_locale __cloc);
        inline std::numpunct<char> &operator=(const std::numpunct<char> &);
    };
    class numpunct_byname : public numpunct<char> {
        class numpunct_byname;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
        numpunct_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~numpunct_byname();
        inline std::numpunct_byname<char> &operator=(const std::numpunct_byname<char> &);
    };
    class num_get : public locale::facet {
        class num_get;
    public:
    public:
        typedef char char_type;
        typedef std::istreambuf_iterator<char, std::char_traits<char> > iter_type;
        static locale::id id;
        num_get(size_t __refs);
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, bool &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, float &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, void *&__v) const;
    protected:
    protected:
        virtual void ~num_get();
        iter_type _M_extract_float(iter_type, iter_type, std::ios_base &, ios_base::iostate &, string &) const;
        template <typename _ValueT> iter_type _M_extract_int(iter_type, iter_type, std::ios_base &, ios_base::iostate &, _ValueT &) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *, size_t __len, _CharT2 __c) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<!__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *__zero, size_t __len, _CharT2 __c) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &, bool &) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, float &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, long double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, void *&) const;
        inline std::num_get<char> &operator=(const std::num_get<char> &);
    };
    class num_put : public locale::facet {
        class num_put;
    public:
    public:
        typedef char char_type;
        typedef std::ostreambuf_iterator<char, std::char_traits<char> > iter_type;
        static locale::id id;
        num_put(size_t __refs);
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, bool __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, const void *__v) const;
    protected:
    protected:
        template <typename _ValueT> iter_type _M_insert_float(iter_type, std::ios_base &__io, char_type __fill, char __mod, _ValueT __v) const;
        void _M_group_float(const char *__grouping, size_t __grouping_size, char_type __sep, const char_type *__p, char_type *__new, char_type *__cs, int &__len) const;
        template <typename _ValueT> iter_type _M_insert_int(iter_type, std::ios_base &__io, char_type __fill, _ValueT __v) const;
        void _M_group_int(const char *__grouping, size_t __grouping_size, char_type __sep, std::ios_base &__io, char_type *__new, char_type *__cs, int &__len) const;
        void _M_pad(char_type __fill, streamsize __w, std::ios_base &__io, char_type *__new, const char_type *__cs, int &__len) const;
        virtual void ~num_put();
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, bool __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long long __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, long double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, const void *__v) const;
        inline std::num_put<char> &operator=(const std::num_put<char> &);
    };
    class ctype_byname;
    class numpunct : public locale::facet {
        class numpunct;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
        typedef __numpunct_cache<wchar_t> __cache_type;
    protected:
    protected:
        __cache_type *_M_data;
    public:
    public:
        static locale::id id;
        numpunct(size_t __refs);
        numpunct(__cache_type *__cache, size_t __refs);
        numpunct(__c_locale __cloc, size_t __refs);
        char_type decimal_point() const;
        char_type thousands_sep() const;
        string grouping() const;
        string_type truename() const;
        string_type falsename() const;
    protected:
    protected:
        virtual void ~numpunct();
        virtual char_type do_decimal_point() const;
        virtual char_type do_thousands_sep() const;
        virtual string do_grouping() const;
        virtual string_type do_truename() const;
        virtual string_type do_falsename() const;
        void _M_initialize_numpunct(__c_locale __cloc);
        inline std::numpunct<wchar_t> &operator=(const std::numpunct<wchar_t> &);
    };
    class numpunct_byname : public numpunct<wchar_t> {
        class numpunct_byname;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
        numpunct_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~numpunct_byname();
        inline std::numpunct_byname<wchar_t> &operator=(const std::numpunct_byname<wchar_t> &);
    };
    class num_get : public locale::facet {
        class num_get;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > iter_type;
        static locale::id id;
        num_get(size_t __refs);
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, bool &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, float &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, void *&__v) const;
    protected:
    protected:
        virtual void ~num_get();
        iter_type _M_extract_float(iter_type, iter_type, std::ios_base &, ios_base::iostate &, string &) const;
        template <typename _ValueT> iter_type _M_extract_int(iter_type, iter_type, std::ios_base &, ios_base::iostate &, _ValueT &) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *, size_t __len, _CharT2 __c) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<!__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *__zero, size_t __len, _CharT2 __c) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &, bool &) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, float &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, long double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, void *&) const;
        inline std::num_get<wchar_t> &operator=(const std::num_get<wchar_t> &);
    };
    class num_put : public locale::facet {
        class num_put;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > iter_type;
        static locale::id id;
        num_put(size_t __refs);
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, bool __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, const void *__v) const;
    protected:
    protected:
        template <typename _ValueT> iter_type _M_insert_float(iter_type, std::ios_base &__io, char_type __fill, char __mod, _ValueT __v) const;
        void _M_group_float(const char *__grouping, size_t __grouping_size, char_type __sep, const char_type *__p, char_type *__new, char_type *__cs, int &__len) const;
        template <typename _ValueT> iter_type _M_insert_int(iter_type, std::ios_base &__io, char_type __fill, _ValueT __v) const;
        void _M_group_int(const char *__grouping, size_t __grouping_size, char_type __sep, std::ios_base &__io, char_type *__new, char_type *__cs, int &__len) const;
        void _M_pad(char_type __fill, streamsize __w, std::ios_base &__io, char_type *__new, const char_type *__cs, int &__len) const;
        virtual void ~num_put();
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, bool __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long long __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, long double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, const void *__v) const;
        inline std::num_put<wchar_t> &operator=(const std::num_put<wchar_t> &);
    };
    class ctype_byname;
}
extern void *__builtin_alloca(unsigned int);
namespace std {
    template <typename _Facet> inline const _Facet &__check_facet(const _Facet *__f) (CompoundStmt 0x9e3b920 </usr/include/c++/4.6/bits/basic_ios.h:48:5, line:52:5>
  (IfStmt 0x9e3b8c0 <line:49:7, line:50:19>
    <<<NULL>>>
    (UnaryOperator 0x9e3b828 <line:49:11, col:12> '<dependent type>' prefix '!'
      (DeclRefExpr 0x9e3b80c <col:12> 'const _Facet *' lvalue ParmVar 0x9e3b6c0 '__f' 'const _Facet *'))
    (CallExpr 0x9e3b8a0 <line:50:2, col:19> 'void'
      (ImplicitCastExpr 0x9e3b890 <col:2> 'void (*)(void) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x9e3b874 <col:2> 'void (void) __attribute__((noreturn))' lvalue Function 0x9b0b8a0 '__throw_bad_cast' 'void (void) __attribute__((noreturn))')))
    <<<NULL>>>)
  (ReturnStmt 0x9e3b910 <line:51:7, col:15>
    (UnaryOperator 0x9e3b8f8 <col:14, col:15> '<dependent type>' prefix '*'
      (DeclRefExpr 0x9e3b8dc <col:15> 'const _Facet *' lvalue ParmVar 0x9e3b6c0 '__f' 'const _Facet *'))))

;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_ios : public std::ios_base {
        class basic_ios;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef ctype<char> __ctype_type;
        typedef num_put<char, ostreambuf_iterator<char, std::char_traits<char> > > __num_put_type;
        typedef num_get<char, istreambuf_iterator<char, std::char_traits<char> > > __num_get_type;
    protected:
    protected:
        basic_ostream<char, std::char_traits<char> > *_M_tie;
        mutable char_type _M_fill;
        mutable bool _M_fill_init;
        basic_streambuf<char, std::char_traits<char> > *_M_streambuf;
        const __ctype_type *_M_ctype;
        const __num_put_type *_M_num_put;
        const __num_get_type *_M_num_get;
    public:
    public:
        void *operator void *() const;
        bool operator!() const;
        iostate rdstate() const;
        void clear(iostate __state);
        void setstate(iostate __state);
        void _M_setstate(iostate __state);
        bool good() const;
        bool eof() const;
        bool fail() const;
        bool bad() const;
        iostate exceptions() const;
        void exceptions(iostate __except);
        basic_ios(basic_streambuf<char, std::char_traits<char> > *__sb);
        virtual void ~basic_ios();
        basic_ostream<char, std::char_traits<char> > *tie() const;
        basic_ostream<char, std::char_traits<char> > *tie(basic_ostream<char, std::char_traits<char> > *__tiestr);
        basic_streambuf<char, std::char_traits<char> > *rdbuf() const;
        basic_streambuf<char, std::char_traits<char> > *rdbuf(basic_streambuf<char, std::char_traits<char> > *__sb);
        std::basic_ios<char> &copyfmt(const std::basic_ios<char> &__rhs);
        char_type fill() const;
        char_type fill(char_type __ch);
        std::locale imbue(const std::locale &__loc);
        char narrow(char_type __c, char __dfault) const;
        char_type widen(char __c) const;
    protected:
    protected:
        basic_ios();
        void init(basic_streambuf<char, std::char_traits<char> > *__sb);
        void _M_cache_locale(const std::locale &__loc);
        inline std::basic_ios<char> &operator=(const std::basic_ios<char> &);
        inline basic_ios(const std::basic_ios<char> &);
    }
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_ios : public std::ios_base {
        class basic_ios;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef ctype<wchar_t> __ctype_type;
        typedef num_put<wchar_t, ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_put_type;
        typedef num_get<wchar_t, istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_get_type;
    protected:
    protected:
        basic_ostream<wchar_t, std::char_traits<wchar_t> > *_M_tie;
        mutable char_type _M_fill;
        mutable bool _M_fill_init;
        basic_streambuf<wchar_t, std::char_traits<wchar_t> > *_M_streambuf;
        const __ctype_type *_M_ctype;
        const __num_put_type *_M_num_put;
        const __num_get_type *_M_num_get;
    public:
    public:
        void *operator void *() const;
        bool operator!() const;
        iostate rdstate() const;
        void clear(iostate __state);
        void setstate(iostate __state);
        void _M_setstate(iostate __state);
        bool good() const;
        bool eof() const;
        bool fail() const;
        bool bad() const;
        iostate exceptions() const;
        void exceptions(iostate __except);
        basic_ios(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        virtual void ~basic_ios();
        basic_ostream<wchar_t, std::char_traits<wchar_t> > *tie() const;
        basic_ostream<wchar_t, std::char_traits<wchar_t> > *tie(basic_ostream<wchar_t, std::char_traits<wchar_t> > *__tiestr);
        basic_streambuf<wchar_t, std::char_traits<wchar_t> > *rdbuf() const;
        basic_streambuf<wchar_t, std::char_traits<wchar_t> > *rdbuf(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        std::basic_ios<wchar_t> &copyfmt(const std::basic_ios<wchar_t> &__rhs);
        char_type fill() const;
        char_type fill(char_type __ch);
        std::locale imbue(const std::locale &__loc);
        char narrow(char_type __c, char __dfault) const;
        char_type widen(char __c) const;
    protected:
    protected:
        basic_ios();
        void init(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        void _M_cache_locale(const std::locale &__loc);
        inline std::basic_ios<wchar_t> &operator=(const std::basic_ios<wchar_t> &);
        inline basic_ios(const std::basic_ios<wchar_t> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_ios : public std::ios_base {
        class basic_ios;
    public:
    public:
        typedef _CharT char_type;
        typedef typename _Traits::int_type int_type;
        typedef typename _Traits::pos_type pos_type;
        typedef typename _Traits::off_type off_type;
        typedef _Traits traits_type;
        typedef ctype<_CharT> __ctype_type;
        typedef num_put<_CharT, ostreambuf_iterator<_CharT, _Traits> > __num_put_type;
        typedef num_get<_CharT, istreambuf_iterator<_CharT, _Traits> > __num_get_type;
    protected:
    protected:
        basic_ostream<_CharT, _Traits> *_M_tie;
        mutable char_type _M_fill;
        mutable bool _M_fill_init;
        basic_streambuf<_CharT, _Traits> *_M_streambuf;
        const __ctype_type *_M_ctype;
        const __num_put_type *_M_num_put;
        const __num_get_type *_M_num_get;
    public:
    public:
        void *operator void *() const (CompoundStmt 0x9e3edd0 </usr/include/c++/4.6/bits/basic_ios.h:113:7, col:65>
  (ReturnStmt 0x9e3edc0 <col:9, col:62>
    (ConditionalOperator 0x9e3eda0 <col:16, col:62> '<dependent type>'
      (CallExpr 0x9e3ed10 <col:16, col:27> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e3ecd8 <col:16, col:22> '<dependent type>' lvalue
          (CXXThisExpr 0x9e3ecc8 <col:16> 'const basic_ios<_CharT, _Traits> *' this)))
      (IntegerLiteral 0x9e3ed30 <col:31> 'int' 0)
      (CXXConstCastExpr 0x9e3ed88 <col:35, col:62> 'basic_ios<_CharT, _Traits> *' const_cast<basic_ios<_CharT, _Traits> *> <NoOp>
        (CXXThisExpr 0x9e3ed48 <col:58> 'const basic_ios<_CharT, _Traits> *' this)))))


        bool operator!() const (CompoundStmt 0x9e3ee60 </usr/include/c++/4.6/bits/basic_ios.h:117:7, col:30>
  (ReturnStmt 0x9e3ee50 <col:9, col:27>
    (CallExpr 0x9e3ee30 <col:16, col:27> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e3edf8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9e3ede8 <col:16> 'const basic_ios<_CharT, _Traits> *' this)))))


        iostate rdstate() const (CompoundStmt 0x9e3eeb8 </usr/include/c++/4.6/bits/basic_ios.h:129:7, col:36>
  (ReturnStmt 0x9e3eea8 <col:9, col:16>
    (MemberExpr 0x9e3ee88 <col:16> 'const iostate':'const enum std::_Ios_Iostate' lvalue ->_M_streambuf_state 0x9d60690
      (CXXThisExpr 0x9e3ee78 <col:16> 'const basic_ios<_CharT, _Traits> *' this))))


        void clear(iostate __state = (ImplicitCastExpr 0x9e3eca0 </usr/include/c++/4.6/bits/basic_ios.h:139:31> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
  (DeclRefExpr 0x9e3ec84 <col:31> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6bb00 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))
);
        void setstate(iostate __state) (CompoundStmt 0x9e3f020 </usr/include/c++/4.6/bits/basic_ios.h:149:7, col:49>
  (CallExpr 0x9e3f000 <col:9, col:46> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9e3eee0 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0x9e3eed0 <col:9> 'basic_ios<_CharT, _Traits> *' this))
    (CXXOperatorCallExpr 0x9e3efd8 <col:21, col:39> '<dependent type>'
      (UnresolvedLookupExpr 0x9e3ef98 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9d5b980 0x9d68ac0 0x9d69d30)
      (CallExpr 0x9e3ef60 <col:21, col:35> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e3ef28 <col:21, col:27> '<dependent type>' lvalue
          (CXXThisExpr 0x9e3ef18 <col:21> 'basic_ios<_CharT, _Traits> *' this)))
      (DeclRefExpr 0x9e3ef7c <col:39> 'iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9e3d0e0 '__state' 'iostate':'enum std::_Ios_Iostate'))))


        void _M_setstate(iostate __state) (CompoundStmt 0x9e3f1f8 </usr/include/c++/4.6/bits/basic_ios.h:156:7, line:162:7>
  (CXXOperatorCallExpr 0x9e3f0b8 <line:159:2, col:24> '<dependent type>'
    (UnresolvedLookupExpr 0x9e3f080 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9d6a3b0)
    (MemberExpr 0x9e3f048 <col:2> 'iostate':'enum std::_Ios_Iostate' lvalue ->_M_streambuf_state 0x9d60690
      (CXXThisExpr 0x9e3f038 <col:2> 'basic_ios<_CharT, _Traits> *' this))
    (DeclRefExpr 0x9e3f068 <col:24> 'iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9e3d1a0 '__state' 'iostate':'enum std::_Ios_Iostate'))
  (IfStmt 0x9e3f1d8 <line:160:2, line:161:27>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9e3f1a0 <line:160:6, col:27> '<dependent type>'
      (UnresolvedLookupExpr 0x9e3f160 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9d5b750 0x9d68890 0x9d69b00)
      (CallExpr 0x9e3f128 <col:6, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e3f0f0 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0x9e3f0e0 <col:6> 'basic_ios<_CharT, _Traits> *' this)))
      (DeclRefExpr 0x9e3f144 <col:27> 'iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9e3d1a0 '__state' 'iostate':'enum std::_Ios_Iostate'))
    (NullStmt 0x9e3f1c8 <line:161:27>)
    <<<NULL>>>))


        bool good() const (CompoundStmt 0x9e3f328 </usr/include/c++/4.6/bits/basic_ios.h:172:7, col:38>
  (ReturnStmt 0x9e3f318 <col:9, col:35>
    (CXXOperatorCallExpr 0x9e3f2f0 <col:16, col:35> '<dependent type>'
      (UnresolvedLookupExpr 0x9e3f290 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90 0x9cb91e0 0x9cb9c50 0x9cba490 0x9cbaa00 0x9db0390)
      (CallExpr 0x9e3f258 <col:16, col:30> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e3f220 <col:16, col:22> '<dependent type>' lvalue
          (CXXThisExpr 0x9e3f210 <col:16> 'const basic_ios<_CharT, _Traits> *' this)))
      (IntegerLiteral 0x9e3f278 <col:35> 'int' 0))))


        bool eof() const (CompoundStmt 0x9e3f4e8 </usr/include/c++/4.6/bits/basic_ios.h:182:7, col:49>
  (ReturnStmt 0x9e3f4d8 <col:9, col:46>
    (CXXOperatorCallExpr 0x9e3f4b0 <col:16, col:46> '<dependent type>'
      (UnresolvedLookupExpr 0x9e3f458 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b412d0 0x9ac7fa0 0x9b5e2b0 0x9ba7d20 0x9bc7160 0x9bc74d0 0x9cbb090 0x9cbb590 0x9cbbad0 0x9db08a0)
      (ParenExpr 0x9e3f428 <col:16, col:41> '<dependent type>'
        (CXXOperatorCallExpr 0x9e3f400 <col:17, col:35> '<dependent type>'
          (UnresolvedLookupExpr 0x9e3f3c0 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9d5b750 0x9d68890 0x9d69b00)
          (CallExpr 0x9e3f388 <col:17, col:31> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9e3f350 <col:17, col:23> '<dependent type>' lvalue
              (CXXThisExpr 0x9e3f340 <col:17> 'const basic_ios<_CharT, _Traits> *' this)))
          (DeclRefExpr 0x9e3f3a4 <col:35> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6ba40 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
      (IntegerLiteral 0x9e3f440 <col:46> 'int' 0))))


        bool fail() const (CompoundStmt 0x9e3f748 </usr/include/c++/4.6/bits/basic_ios.h:193:7, col:61>
  (ReturnStmt 0x9e3f738 <col:9, col:58>
    (CXXOperatorCallExpr 0x9e3f710 <col:16, col:58> '<dependent type>'
      (UnresolvedLookupExpr 0x9e3f6b8 <col:55, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b412d0 0x9ac7fa0 0x9b5e2b0 0x9ba7d20 0x9bc7160 0x9bc74d0 0x9cbb090 0x9cbb590 0x9cbbad0 0x9db08a0)
      (ParenExpr 0x9e3f688 <col:16, col:53> '<dependent type>'
        (CXXOperatorCallExpr 0x9e3f660 <col:17, col:52> '<dependent type>'
          (UnresolvedLookupExpr 0x9e3f620 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9d5b750 0x9d68890 0x9d69b00)
          (CallExpr 0x9e3f548 <col:17, col:31> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9e3f510 <col:17, col:23> '<dependent type>' lvalue
              (CXXThisExpr 0x9e3f500 <col:17> 'const basic_ios<_CharT, _Traits> *' this)))
          (ParenExpr 0x9e3f608 <col:35, col:52> 'enum std::_Ios_Iostate'
            (CXXOperatorCallExpr 0x9e3f5e0 <col:36, col:45> 'enum std::_Ios_Iostate'
              (ImplicitCastExpr 0x9e3f5d0 <col:43, <invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9e3f5b8 <col:43, <invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)' lvalue Function 0x9d69d30 'operator|' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)'))
              (ImplicitCastExpr 0x9e3f598 <col:36> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x9e3f564 <col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6b9e0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
              (ImplicitCastExpr 0x9e3f5a8 <col:45> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x9e3f57c <col:45> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6baa0 'failbit' 'const iostate':'const enum std::_Ios_Iostate'))))))
      (IntegerLiteral 0x9e3f6a0 <col:58> 'int' 0))))


        bool bad() const (CompoundStmt 0x9e3f908 </usr/include/c++/4.6/bits/basic_ios.h:203:7, col:49>
  (ReturnStmt 0x9e3f8f8 <col:9, col:46>
    (CXXOperatorCallExpr 0x9e3f8d0 <col:16, col:46> '<dependent type>'
      (UnresolvedLookupExpr 0x9e3f878 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b412d0 0x9ac7fa0 0x9b5e2b0 0x9ba7d20 0x9bc7160 0x9bc74d0 0x9cbb090 0x9cbb590 0x9cbbad0 0x9db08a0)
      (ParenExpr 0x9e3f848 <col:16, col:41> '<dependent type>'
        (CXXOperatorCallExpr 0x9e3f820 <col:17, col:35> '<dependent type>'
          (UnresolvedLookupExpr 0x9e3f7e0 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9d5b750 0x9d68890 0x9d69b00)
          (CallExpr 0x9e3f7a8 <col:17, col:31> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9e3f770 <col:17, col:23> '<dependent type>' lvalue
              (CXXThisExpr 0x9e3f760 <col:17> 'const basic_ios<_CharT, _Traits> *' this)))
          (DeclRefExpr 0x9e3f7c4 <col:35> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6b9e0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
      (IntegerLiteral 0x9e3f860 <col:46> 'int' 0))))


        iostate exceptions() const (CompoundStmt 0x9e3f960 </usr/include/c++/4.6/bits/basic_ios.h:214:7, col:30>
  (ReturnStmt 0x9e3f950 <col:9, col:16>
    (MemberExpr 0x9e3f930 <col:16> 'const iostate':'const enum std::_Ios_Iostate' lvalue ->_M_exception 0x9d60650
      (CXXThisExpr 0x9e3f920 <col:16> 'const basic_ios<_CharT, _Traits> *' this))))


        void exceptions(iostate __except) (CompoundStmt 0x9e3fa70 </usr/include/c++/4.6/bits/basic_ios.h:249:7, line:252:7>
  (BinaryOperator 0x9e3f9c0 <line:250:9, col:24> '<dependent type>' '='
    (MemberExpr 0x9e3f988 <col:9> 'iostate':'enum std::_Ios_Iostate' lvalue ->_M_exception 0x9d60650
      (CXXThisExpr 0x9e3f978 <col:9> 'basic_ios<_CharT, _Traits> *' this))
    (DeclRefExpr 0x9e3f9a8 <col:24> 'iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9e3d4e0 '__except' 'iostate':'enum std::_Ios_Iostate'))
  (CallExpr 0x9e3fa50 <line:251:9, col:39> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9e3f9e8 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0x9e3f9d8 <col:9> 'basic_ios<_CharT, _Traits> *' this))
    (MemberExpr 0x9e3fa30 <col:21> 'iostate':'enum std::_Ios_Iostate' lvalue ->_M_streambuf_state 0x9d60690
      (CXXThisExpr 0x9e3fa20 <col:21> 'basic_ios<_CharT, _Traits> *' this))))


        basic_ios<_CharT, _Traits>(basic_streambuf<_CharT, _Traits> *__sb) : std::ios_base(), _M_tie((IntegerLiteral 0x9e3fae8 </usr/include/c++/4.6/bits/basic_ios.h:262:28> 'int' 0)
), _M_fill(), _M_fill_init((CXXBoolLiteralExpr 0x9e3fb68 </usr/include/c++/4.6/bits/basic_ios.h:262:56> '_Bool' false)
), _M_streambuf((IntegerLiteral 0x9e3fbb8 </usr/include/c++/4.6/bits/basic_ios.h:262:77> 'int' 0)
), _M_ctype((IntegerLiteral 0x9e3fc08 </usr/include/c++/4.6/bits/basic_ios.h:263:11> 'int' 0)
), _M_num_put((IntegerLiteral 0x9e3fc58 </usr/include/c++/4.6/bits/basic_ios.h:263:26> 'int' 0)
), _M_num_get((IntegerLiteral 0x9e3fca8 </usr/include/c++/4.6/bits/basic_ios.h:263:41> 'int' 0)
) (CompoundStmt 0x9e3fd98 </usr/include/c++/4.6/bits/basic_ios.h:264:7, col:27>
  (CallExpr 0x9e3fd78 <col:9, col:24> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9e3fd28 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0x9e3fd18 <col:9> 'basic_ios<_CharT, _Traits> *' this))
    (DeclRefExpr 0x9e3fd5c <col:20> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0x9e3d6d0 '__sb' 'basic_streambuf<_CharT, _Traits> *')))


        virtual void ~basic_ios<_CharT, _Traits>() (CompoundStmt 0x9e3fdb0 </usr/include/c++/4.6/bits/basic_ios.h:273:20, col:22>)


        basic_ostream<_CharT, _Traits> *tie() const (CompoundStmt 0x9e3fe00 </usr/include/c++/4.6/bits/basic_ios.h:287:7, col:24>
  (ReturnStmt 0x9e3fdf0 <col:9, col:16>
    (MemberExpr 0x9e3fdd0 <col:16> 'basic_ostream<_CharT, _Traits> *const' lvalue ->_M_tie 0x9e3c9d0
      (CXXThisExpr 0x9e3fdc0 <col:16> 'const basic_ios<_CharT, _Traits> *' this))))


        basic_ostream<_CharT, _Traits> *tie(basic_ostream<_CharT, _Traits> *__tiestr) (CompoundStmt 0x9e40050 </usr/include/c++/4.6/bits/basic_ios.h:299:7, line:303:7>
  (DeclStmt 0x9e3ffb8 <line:300:9, col:55>
    0x9e3ff50 "basic_ostream<_CharT, _Traits> *__old =
      (MemberExpr 0x9e3ff98 <col:49> 'basic_ostream<_CharT, _Traits> *' lvalue ->_M_tie 0x9e3c9d0
        (CXXThisExpr 0x9e3ff88 <col:49> 'basic_ios<_CharT, _Traits> *' this))")
  (BinaryOperator 0x9e40010 <line:301:9, col:18> '<dependent type>' '='
    (MemberExpr 0x9e3ffd8 <col:9> 'basic_ostream<_CharT, _Traits> *' lvalue ->_M_tie 0x9e3c9d0
      (CXXThisExpr 0x9e3ffc8 <col:9> 'basic_ios<_CharT, _Traits> *' this))
    (DeclRefExpr 0x9e3fff8 <col:18> 'basic_ostream<_CharT, _Traits> *' lvalue ParmVar 0x9e3dc60 '__tiestr' 'basic_ostream<_CharT, _Traits> *'))
  (ReturnStmt 0x9e40040 <line:302:9, col:16>
    (DeclRefExpr 0x9e40028 <col:16> 'basic_ostream<_CharT, _Traits> *' lvalue Var 0x9e3ff50 '__old' 'basic_ostream<_CharT, _Traits> *')))


        basic_streambuf<_CharT, _Traits> *rdbuf() const (CompoundStmt 0x9e400b0 </usr/include/c++/4.6/bits/basic_ios.h:313:7, col:30>
  (ReturnStmt 0x9e400a0 <col:9, col:16>
    (MemberExpr 0x9e40080 <col:16> 'basic_streambuf<_CharT, _Traits> *const' lvalue ->_M_streambuf 0x9e3cbc0
      (CXXThisExpr 0x9e40070 <col:16> 'const basic_ios<_CharT, _Traits> *' this))))


        basic_streambuf<_CharT, _Traits> *rdbuf(basic_streambuf<_CharT, _Traits> *__sb);
        basic_ios<_CharT, _Traits> &copyfmt(const basic_ios<_CharT, _Traits> &__rhs);
        char_type fill() const (CompoundStmt 0x9e402b8 </usr/include/c++/4.6/bits/basic_ios.h:362:7, line:369:7>
  (IfStmt 0x9e40258 <line:363:2, line:367:4>
    <<<NULL>>>
    (UnaryOperator 0x9e40108 <line:363:6, col:7> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9e400f8 <col:7> '_Bool' <LValueToRValue>
        (MemberExpr 0x9e400d8 <col:7> '_Bool' lvalue ->_M_fill_init 0x9e3ca60
          (CXXThisExpr 0x9e400c8 <col:7> 'const basic_ios<_CharT, _Traits> *' this))))
    (CompoundStmt 0x9e40240 <line:364:4, line:367:4>
      (BinaryOperator 0x9e401d0 <line:365:6, col:31> '<dependent type>' '='
        (MemberExpr 0x9e40130 <col:6> 'char_type':'_CharT' lvalue ->_M_fill 0x9e3ca20
          (CXXThisExpr 0x9e40120 <col:6> 'const basic_ios<_CharT, _Traits> *' this))
        (CallExpr 0x9e401b0 <col:16, col:31> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9e40160 <col:16, col:22> '<dependent type>' lvalue
            (CXXThisExpr 0x9e40150 <col:16> 'const basic_ios<_CharT, _Traits> *' this))
          (CharacterLiteral 0x9e40198 <col:28> 'char'32)))
      (BinaryOperator 0x9e40228 <line:366:6, col:21> '<dependent type>' '='
        (MemberExpr 0x9e401f8 <col:6> '_Bool' lvalue ->_M_fill_init 0x9e3ca60
          (CXXThisExpr 0x9e401e8 <col:6> 'const basic_ios<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0x9e40218 <col:21> '_Bool' true)))
    <<<NULL>>>)
  (ReturnStmt 0x9e402a8 <line:368:2, col:9>
    (MemberExpr 0x9e40288 <col:9> 'char_type':'_CharT' lvalue ->_M_fill 0x9e3ca20
      (CXXThisExpr 0x9e40278 <col:9> 'const basic_ios<_CharT, _Traits> *' this))))


        char_type fill(char_type __ch) (CompoundStmt 0x9e40418 </usr/include/c++/4.6/bits/basic_ios.h:382:7, line:386:7>
  (DeclStmt 0x9e40380 <line:383:2, col:32>
    0x9e402e0 "char_type __old =
      (CallExpr 0x9e40360 <col:20, col:31> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e40328 <col:20, col:26> '<dependent type>' lvalue
          (CXXThisExpr 0x9e40318 <col:20> 'basic_ios<_CharT, _Traits> *' this)))")
  (BinaryOperator 0x9e403d8 <line:384:2, col:12> '<dependent type>' '='
    (MemberExpr 0x9e403a0 <col:2> 'char_type':'_CharT' lvalue ->_M_fill 0x9e3ca20
      (CXXThisExpr 0x9e40390 <col:2> 'basic_ios<_CharT, _Traits> *' this))
    (DeclRefExpr 0x9e403c0 <col:12> 'char_type':'_CharT' lvalue ParmVar 0x9e3e4f0 '__ch' 'char_type':'_CharT'))
  (ReturnStmt 0x9e40408 <line:385:2, col:9>
    (DeclRefExpr 0x9e403f0 <col:9> 'char_type':'_CharT' lvalue Var 0x9e402e0 '__old' 'char_type':'_CharT')))


        std::locale imbue(const std::locale &__loc);
        char narrow(char_type __c, char __dfault) const (CompoundStmt 0x9e40560 </usr/include/c++/4.6/bits/basic_ios.h:422:7, col:63>
  (ReturnStmt 0x9e40550 <col:9, col:60>
    (CallExpr 0x9e40528 <col:16, col:60> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e404c0 <col:16, col:40> '<dependent type>' lvalue
        (CallExpr 0x9e404a0 <col:16, col:38> '<dependent type>'
          (UnresolvedLookupExpr 0x9e40438 <col:16> '<overloaded function type>' lvalue (ADL) = '1' 0x9e3b7e0)
          (MemberExpr 0x9e40480 <col:30> 'const __ctype_type *const' lvalue ->_M_ctype 0x9e3cc50
            (CXXThisExpr 0x9e40470 <col:30> 'const basic_ios<_CharT, _Traits> *' this))))
      (DeclRefExpr 0x9e404f4 <col:47> 'char_type':'_CharT' lvalue ParmVar 0x9e3e6b0 '__c' 'char_type':'_CharT')
      (DeclRefExpr 0x9e4050c <col:52> 'char' lvalue ParmVar 0x9e3e6f0 '__dfault' 'char'))))


        char_type widen(char __c) const (CompoundStmt 0x9e40680 </usr/include/c++/4.6/bits/basic_ios.h:441:7, col:52>
  (ReturnStmt 0x9e40670 <col:9, col:49>
    (CallExpr 0x9e40650 <col:16, col:49> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e40600 <col:16, col:40> '<dependent type>' lvalue
        (CallExpr 0x9e405e0 <col:16, col:38> '<dependent type>'
          (UnresolvedLookupExpr 0x9e40578 <col:16> '<overloaded function type>' lvalue (ADL) = '1' 0x9e3b7e0)
          (MemberExpr 0x9e405c0 <col:30> 'const __ctype_type *const' lvalue ->_M_ctype 0x9e3cc50
            (CXXThisExpr 0x9e405b0 <col:30> 'const basic_ios<_CharT, _Traits> *' this))))
      (DeclRefExpr 0x9e40634 <col:46> 'char' lvalue ParmVar 0x9e3e7e0 '__c' 'char'))))


    protected:
    protected:
        basic_ios<_CharT, _Traits>() : std::ios_base(), _M_tie((IntegerLiteral 0x9e406f8 </usr/include/c++/4.6/bits/basic_ios.h:452:28> 'int' 0)
), _M_fill((CXXUnresolvedConstructExpr 0x9e40750 </usr/include/c++/4.6/bits/basic_ios.h:452:40, col:50> 'char_type':'_CharT')
), _M_fill_init((CXXBoolLiteralExpr 0x9e407a8 </usr/include/c++/4.6/bits/basic_ios.h:452:67> '_Bool' false)
), _M_streambuf((IntegerLiteral 0x9e407f8 </usr/include/c++/4.6/bits/basic_ios.h:453:15> 'int' 0)
), _M_ctype((IntegerLiteral 0x9e40848 </usr/include/c++/4.6/bits/basic_ios.h:453:28> 'int' 0)
), _M_num_put((IntegerLiteral 0x9e40898 </usr/include/c++/4.6/bits/basic_ios.h:453:43> 'int' 0)
), _M_num_get((IntegerLiteral 0x9e408e8 </usr/include/c++/4.6/bits/basic_ios.h:453:58> 'int' 0)
) (CompoundStmt 0x9e40958 </usr/include/c++/4.6/bits/basic_ios.h:454:7, col:9>)


        void init(basic_streambuf<_CharT, _Traits> *__sb);
        void _M_cache_locale(const std::locale &__loc);
    };
}
namespace std {
    void clear(iostate __state = (ImplicitCastExpr 0x9e3eca0 </usr/include/c++/4.6/bits/basic_ios.h:139:31> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
  (DeclRefExpr 0x9e3ec84 <col:31> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6bb00 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))
) (CompoundStmt 0x9e411a0 </usr/include/c++/4.6/bits/basic_ios.tcc:42:5, line:49:5>
  (IfStmt 0x9e40f58 <line:43:7, line:46:35>
    <<<NULL>>>
    (CallExpr 0x9e40df0 <line:43:11, col:23> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e40db8 <col:11, col:17> '<dependent type>' lvalue
        (CXXThisExpr 0x9e40da8 <col:11> 'basic_ios<_CharT, _Traits> *' this)))
    (BinaryOperator 0x9e40e58 <line:44:2, col:23> '<dependent type>' '='
      (MemberExpr 0x9e40e20 <col:2> 'iostate':'enum std::_Ios_Iostate' lvalue ->_M_streambuf_state 0x9d60690
        (CXXThisExpr 0x9e40e10 <col:2> 'basic_ios<_CharT, _Traits> *' this))
      (DeclRefExpr 0x9e40e40 <col:23> 'iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9e40cc0 '__state' 'iostate':'enum std::_Ios_Iostate'))
    (BinaryOperator 0x9e40f40 <line:46:4, col:35> '<dependent type>' '='
      (MemberExpr 0x9e40e80 <col:4> 'iostate':'enum std::_Ios_Iostate' lvalue ->_M_streambuf_state 0x9d60690
        (CXXThisExpr 0x9e40e70 <col:4> 'basic_ios<_CharT, _Traits> *' this))
      (CXXOperatorCallExpr 0x9e40f18 <col:25, col:35> 'enum std::_Ios_Iostate'
        (ImplicitCastExpr 0x9e40f08 <col:33, <invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9e40ef0 <col:33, <invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)' lvalue Function 0x9d69d30 'operator|' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)'))
        (ImplicitCastExpr 0x9e40ed0 <col:25> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
          (DeclRefExpr 0x9e40ea0 <col:25> 'iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9e40cc0 '__state' 'iostate':'enum std::_Ios_Iostate'))
        (ImplicitCastExpr 0x9e40ee0 <col:35> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
          (DeclRefExpr 0x9e40eb8 <col:35> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6b9e0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))))
  (IfStmt 0x9e41180 <line:47:7, line:48:45>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9e41088 <line:47:11, col:46> '<dependent type>'
      (UnresolvedLookupExpr 0x9e41048 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9d5b750 0x9d68890 0x9d69b00)
      (CallExpr 0x9e40fc0 <col:11, col:28> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e40f88 <col:11, col:17> '<dependent type>' lvalue
          (CXXThisExpr 0x9e40f78 <col:11> 'basic_ios<_CharT, _Traits> *' this)))
      (CallExpr 0x9e41028 <col:32, col:46> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e40ff0 <col:32, col:38> '<dependent type>' lvalue
          (CXXThisExpr 0x9e40fe0 <col:32> 'basic_ios<_CharT, _Traits> *' this))))
    (CallExpr 0x9e41150 <line:48:2, col:45> 'void'
      (ImplicitCastExpr 0x9e41140 <col:2> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x9e41124 <col:2> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9b0f900 '__throw_ios_failure' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0x9e41170 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0x9e41110 <col:24, col:30> 'const char [17]' lvalue
          (StringLiteral 0x9e410e4 </usr/include/c++/4.6/bits/basic_ios.tcc:48:26> 'const char [17]' lvalue "basic_ios::clear"))))
    <<<NULL>>>))


    basic_streambuf<_CharT, _Traits> *rdbuf(basic_streambuf<_CharT, _Traits> *__sb) (CompoundStmt 0x9e41b48 </usr/include/c++/4.6/bits/basic_ios.tcc:54:5, line:59:5>
  (DeclStmt 0x9e41a48 <line:55:7, col:61>
    0x9e419e0 "basic_streambuf<_CharT, _Traits> *__old =
      (MemberExpr 0x9e41a28 <col:49> 'basic_streambuf<_CharT, _Traits> *' lvalue ->_M_streambuf 0x9e3cbc0
        (CXXThisExpr 0x9e41a18 <col:49> 'basic_ios<_CharT, _Traits> *' this))")
  (BinaryOperator 0x9e41aa0 <line:56:7, col:22> '<dependent type>' '='
    (MemberExpr 0x9e41a68 <col:7> 'basic_streambuf<_CharT, _Traits> *' lvalue ->_M_streambuf 0x9e3cbc0
      (CXXThisExpr 0x9e41a58 <col:7> 'basic_ios<_CharT, _Traits> *' this))
    (DeclRefExpr 0x9e41a88 <col:22> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0x9e41660 '__sb' 'basic_streambuf<_CharT, _Traits> *'))
  (CallExpr 0x9e41b00 <line:57:7, col:19> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9e41ac8 <col:7, col:13> '<dependent type>' lvalue
      (CXXThisExpr 0x9e41ab8 <col:7> 'basic_ios<_CharT, _Traits> *' this)))
  (ReturnStmt 0x9e41b38 <line:58:7, col:14>
    (DeclRefExpr 0x9e41b1c <col:14> 'basic_streambuf<_CharT, _Traits> *' lvalue Var 0x9e419e0 '__old' 'basic_streambuf<_CharT, _Traits> *')))


    basic_ios<_CharT, _Traits> &copyfmt(const basic_ios<_CharT, _Traits> &__rhs) (CompoundStmt 0x9e43570 </usr/include/c++/4.6/bits/basic_ios.tcc:64:5, line:109:5>
  (IfStmt 0x9e43518 <line:67:7, line:107:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9e42218 <line:67:11, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0x9e421c0 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b412d0 0x9ac7fa0 0x9b5e2b0 0x9ba7d20 0x9bc7160 0x9bc74d0 0x9cbb090 0x9cbb590 0x9cbbad0 0x9db08a0)
      (CXXThisExpr 0x9e42138 <col:11> 'basic_ios<_CharT, _Traits> *' this)
      (CXXOperatorCallExpr 0x9e421a0 <col:19, col:20> '<dependent type>'
        (UnresolvedLookupExpr 0x9e42160 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9d5b750 0x9d68890 0x9d69b00)
        (DeclRefExpr 0x9e42148 <col:20> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0x9e41ef0 '__rhs' 'const basic_ios<_CharT, _Traits> &')))
    (CompoundStmt 0x9e434b8 <line:68:2, line:107:2>
      (DeclStmt 0x9e42620 <line:73:4, line:74:69>
        0x9e42250 "std::ios_base::_Words *__words =
          (ConditionalOperator 0x9e42600 <line:73:22, line:74:43> '<dependent type>'
            (ParenExpr 0x9e42360 <line:73:22, col:63> '<dependent type>'
              (CXXOperatorCallExpr 0x9e42338 <col:23, col:45> '<dependent type>'
                (UnresolvedLookupExpr 0x9e422f0 <col:42, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b43190 0x9ac87b0 0x9b5eb90 0x9cbe2d0 0x9cbe800 0x9cbed30)
                (CXXDependentScopeMemberExpr 0x9e422a0 <col:23, col:29> '<dependent type>' lvalue
                  (DeclRefExpr 0x9e42284 <col:23> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0x9e41ef0 '__rhs' 'const basic_ios<_CharT, _Traits> &'))
                (DeclRefExpr 0x9e422d4 <col:45> 'enum std::ios_base::<anonymous at /usr/include/c++/4.6/bits/ios_base.h:512:5>' EnumConstant 0x9d61160 '_S_local_word_size' 'enum std::ios_base::<anonymous at /usr/include/c++/4.6/bits/ios_base.h:512:5>')))
            (MemberExpr 0x9e42388 <line:74:23> 'struct std::ios_base::_Words [8]' lvalue ->_M_local_word 0x9d61290
              (CXXThisExpr 0x9e42378 <col:23> 'basic_ios<_CharT, _Traits> *' this))
            (CXXNewExpr 0x9e425c0 <col:39, col:43> 'struct std::ios_base::_Words *'
              (CXXDependentScopeMemberExpr 0x9e423c0 <col:50, col:56> '<dependent type>' lvalue
                (DeclRefExpr 0x9e423a8 <col:50> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0x9e41ef0 '__rhs' 'const basic_ios<_CharT, _Traits> &'))))")
      (DeclStmt 0x9e426c8 <line:77:4, col:45>
        0x9e42640 "std::ios_base::_Callback_list *__cb =
          (CXXDependentScopeMemberExpr 0x9e42690 <col:27, col:33> '<dependent type>' lvalue
            (DeclRefExpr 0x9e42674 <col:27> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0x9e41ef0 '__rhs' 'const basic_ios<_CharT, _Traits> &'))")
      (IfStmt 0x9e42778 <line:78:4, line:79:29>
        <<<NULL>>>
        (ImplicitCastExpr 0x9e42700 <line:78:8> '_Bool' <PointerToBoolean>
          (ImplicitCastExpr 0x9e426f0 <col:8> 'struct std::ios_base::_Callback_list *' <LValueToRValue>
            (DeclRefExpr 0x9e426d8 <col:8> 'struct std::ios_base::_Callback_list *' lvalue Var 0x9e42640 '__cb' 'struct std::ios_base::_Callback_list *')))
        (CXXMemberCallExpr 0x9e42758 <line:79:6, col:29> 'void'
          (MemberExpr 0x9e42734 <col:6, col:12> '<bound member function type>' ->_M_add_reference 0x9d60b80
            (ImplicitCastExpr 0x9e42728 <col:6> 'struct std::ios_base::_Callback_list *' <LValueToRValue>
              (DeclRefExpr 0x9e4270c <col:6> 'struct std::ios_base::_Callback_list *' lvalue Var 0x9e42640 '__cb' 'struct std::ios_base::_Callback_list *'))))
        <<<NULL>>>)
      (CallExpr 0x9e427e0 <line:80:4, col:33> '<dependent type>'
        (MemberExpr 0x9e427a8 <col:4> '<bound member function type>' ->_M_call_callbacks 0x9d60d50
          (CXXThisExpr 0x9e42798 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (DeclRefExpr 0x9e427c8 <col:22> 'enum std::ios_base::event' EnumConstant 0x9d6c180 'erase_event' 'enum std::ios_base::event'))
      (IfStmt 0x9e429a0 <line:81:4, line:85:6>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9e428b8 <line:81:8, col:19> '<dependent type>'
          (UnresolvedLookupExpr 0x9e42860 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b412d0 0x9ac7fa0 0x9b5e2b0 0x9ba7d20 0x9bc7160 0x9bc74d0 0x9cbb090 0x9cbb590 0x9cbbad0 0x9db08a0)
          (MemberExpr 0x9e42810 <col:8> 'struct std::ios_base::_Words *' lvalue ->_M_word 0x9d61330
            (CXXThisExpr 0x9e42800 <col:8> 'basic_ios<_CharT, _Traits> *' this))
          (MemberExpr 0x9e42840 <col:19> 'struct std::ios_base::_Words [8]' lvalue ->_M_local_word 0x9d61290
            (CXXThisExpr 0x9e42830 <col:19> 'basic_ios<_CharT, _Traits> *' this)))
        (CompoundStmt 0x9e42988 <line:82:6, line:85:6>
          (CXXDeleteExpr 0x9e42910 <line:83:8, col:18> 'void'
            (MemberExpr 0x9e428f0 <col:18> 'struct std::ios_base::_Words *' lvalue ->_M_word 0x9d61330
              (CXXThisExpr 0x9e428e0 <col:18> 'basic_ios<_CharT, _Traits> *' this)))
          (BinaryOperator 0x9e42970 <line:84:8, col:18> '<dependent type>' '='
            (MemberExpr 0x9e42938 <col:8> 'struct std::ios_base::_Words *' lvalue ->_M_word 0x9d61330
              (CXXThisExpr 0x9e42928 <col:8> 'basic_ios<_CharT, _Traits> *' this))
            (IntegerLiteral 0x9e42958 <col:18> 'int' 0)))
        <<<NULL>>>)
      (CallExpr 0x9e429f0 <line:86:4, col:25> '<dependent type>'
        (MemberExpr 0x9e429d0 <col:4> '<bound member function type>' ->_M_dispose_callbacks 0x9d60e10
          (CXXThisExpr 0x9e429c0 <col:4> 'basic_ios<_CharT, _Traits> *' this)))
      (BinaryOperator 0x9e42a58 <line:89:4, col:19> '<dependent type>' '='
        (MemberExpr 0x9e42a20 <col:4> 'struct std::ios_base::_Callback_list *' lvalue ->_M_callbacks 0x9d60c70
          (CXXThisExpr 0x9e42a10 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (DeclRefExpr 0x9e42a40 <col:19> 'struct std::ios_base::_Callback_list *' lvalue Var 0x9e42640 '__cb' 'struct std::ios_base::_Callback_list *'))
      (ForStmt 0x9e42ce8 <line:90:4, line:91:38>
        (DeclStmt 0x9e42ad0 <line:90:9, col:20>
          0x9e42a80 "int __i =
            (IntegerLiteral 0x9e42ab8 <col:19> 'int' 0)")
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9e42b90 <col:22, col:34> '<dependent type>'
          (UnresolvedLookupExpr 0x9e42b48 <col:26, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40ad0 0x9b57c70 0x9b5ddb0 0x9cbc120 0x9cbc650 0x9cbcb80)
          (DeclRefExpr 0x9e42ae0 <col:22> 'int' lvalue Var 0x9e42a80 '__i' 'int')
          (CXXDependentScopeMemberExpr 0x9e42b10 <col:28, col:34> '<dependent type>' lvalue
            (DeclRefExpr 0x9e42af8 <col:28> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0x9e41ef0 '__rhs' 'const basic_ios<_CharT, _Traits> &')))
        (UnaryOperator 0x9e42bd0 <col:48, col:50> 'int' lvalue prefix '++'
          (DeclRefExpr 0x9e42bb4 <col:50> 'int' lvalue Var 0x9e42a80 '__i' 'int'))
        (BinaryOperator 0x9e42cd0 <line:91:6, col:38> '<dependent type>' '='
          (ArraySubscriptExpr 0x9e42c38 <col:6, col:17> 'struct std::ios_base::_Words' lvalue
            (ImplicitCastExpr 0x9e42c18 <col:6> 'struct std::ios_base::_Words *' <LValueToRValue>
              (DeclRefExpr 0x9e42be4 <col:6> 'struct std::ios_base::_Words *' lvalue Var 0x9e42250 '__words' 'struct std::ios_base::_Words *'))
            (ImplicitCastExpr 0x9e42c28 <col:14> 'int' <LValueToRValue>
              (DeclRefExpr 0x9e42bfc <col:14> 'int' lvalue Var 0x9e42a80 '__i' 'int')))
          (ArraySubscriptExpr 0x9e42cb8 <col:21, col:38> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x9e42c68 <col:21, col:27> '<dependent type>' lvalue
              (DeclRefExpr 0x9e42c4c <col:21> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0x9e41ef0 '__rhs' 'const basic_ios<_CharT, _Traits> &'))
            (DeclRefExpr 0x9e42c9c <col:35> 'int' lvalue Var 0x9e42a80 '__i' 'int'))))
      (BinaryOperator 0x9e42d58 <line:92:4, col:14> '<dependent type>' '='
        (MemberExpr 0x9e42d20 <col:4> 'struct std::ios_base::_Words *' lvalue ->_M_word 0x9d61330
          (CXXThisExpr 0x9e42d10 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (DeclRefExpr 0x9e42d40 <col:14> 'struct std::ios_base::_Words *' lvalue Var 0x9e42250 '__words' 'struct std::ios_base::_Words *'))
      (BinaryOperator 0x9e42df0 <line:93:4, col:25> '<dependent type>' '='
        (MemberExpr 0x9e42d80 <col:4> 'int' lvalue ->_M_word_size 0x9d612d0
          (CXXThisExpr 0x9e42d70 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (CXXDependentScopeMemberExpr 0x9e42db8 <col:19, col:25> '<dependent type>' lvalue
          (DeclRefExpr 0x9e42da0 <col:19> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0x9e41ef0 '__rhs' 'const basic_ios<_CharT, _Traits> &')))
      (CallExpr 0x9e42ec0 <line:95:4, col:29> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e42e18 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x9e42e08 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (CallExpr 0x9e42ea0 <col:16, col:28> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9e42e68 <col:16, col:22> '<dependent type>' lvalue
            (DeclRefExpr 0x9e42e4c <col:16> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0x9e41ef0 '__rhs' 'const basic_ios<_CharT, _Traits> &'))))
      (CallExpr 0x9e42f98 <line:96:4, col:29> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e42ef0 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x9e42ee0 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (CallExpr 0x9e42f78 <col:16, col:28> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9e42f40 <col:16, col:22> '<dependent type>' lvalue
            (DeclRefExpr 0x9e42f24 <col:16> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0x9e41ef0 '__rhs' 'const basic_ios<_CharT, _Traits> &'))))
      (CallExpr 0x9e43070 <line:97:4, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e42fc8 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x9e42fb8 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (CallExpr 0x9e43050 <col:20, col:36> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9e43018 <col:20, col:26> '<dependent type>' lvalue
            (DeclRefExpr 0x9e42ffc <col:20> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0x9e41ef0 '__rhs' 'const basic_ios<_CharT, _Traits> &'))))
      (CallExpr 0x9e43148 <line:98:4, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e430a0 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x9e43090 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (CallExpr 0x9e43128 <col:14, col:24> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9e430f0 <col:14, col:20> '<dependent type>' lvalue
            (DeclRefExpr 0x9e430d4 <col:14> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0x9e41ef0 '__rhs' 'const basic_ios<_CharT, _Traits> &'))))
      (CallExpr 0x9e43220 <line:99:4, col:27> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e43178 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x9e43168 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (CallExpr 0x9e43200 <col:15, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9e431c8 <col:15, col:21> '<dependent type>' lvalue
            (DeclRefExpr 0x9e431ac <col:15> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0x9e41ef0 '__rhs' 'const basic_ios<_CharT, _Traits> &'))))
      (BinaryOperator 0x9e432e0 <line:100:4, col:33> '<dependent type>' '='
        (MemberExpr 0x9e43250 <col:4> 'class std::locale' lvalue ->_M_ios_locale 0x9d614c0
          (CXXThisExpr 0x9e43240 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (CallExpr 0x9e432c0 <col:20, col:33> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9e43288 <col:20, col:26> '<dependent type>' lvalue
            (DeclRefExpr 0x9e43270 <col:20> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0x9e41ef0 '__rhs' 'const basic_ios<_CharT, _Traits> &'))))
      (CallExpr 0x9e43358 <line:101:4, col:33> '<dependent type>'
        (MemberExpr 0x9e43308 <col:4> '<bound member function type>' ->_M_cache_locale 0x9e3ec20
          (CXXThisExpr 0x9e432f8 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (MemberExpr 0x9e43338 <col:20> 'class std::locale' lvalue ->_M_ios_locale 0x9d614c0
          (CXXThisExpr 0x9e43328 <col:20> 'basic_ios<_CharT, _Traits> *' this)))
      (CallExpr 0x9e433c0 <line:103:4, col:35> '<dependent type>'
        (MemberExpr 0x9e43388 <col:4> '<bound member function type>' ->_M_call_callbacks 0x9d60d50
          (CXXThisExpr 0x9e43378 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (DeclRefExpr 0x9e433a8 <col:22> 'enum std::ios_base::event' EnumConstant 0x9d6c200 'copyfmt_event' 'enum std::ios_base::event'))
      (CallExpr 0x9e43498 <line:106:4, col:39> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e433f0 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x9e433e0 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (CallExpr 0x9e43478 <col:21, col:38> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9e43440 <col:21, col:27> '<dependent type>' lvalue
            (DeclRefExpr 0x9e43424 <col:21> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0x9e41ef0 '__rhs' 'const basic_ios<_CharT, _Traits> &')))))
    <<<NULL>>>)
  (ReturnStmt 0x9e43560 <line:108:7, col:15>
    (UnaryOperator 0x9e43548 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9e43538 <col:15> 'basic_ios<_CharT, _Traits> *' this))))


    std::locale imbue(const std::locale &__loc) (CompoundStmt 0x9e43d50 </usr/include/c++/4.6/bits/basic_ios.tcc:115:5, line:122:5>
  (DeclStmt 0x9e439e0 <line:116:7, col:35>
    0x9e43920 "std::locale __old =
      (ParenListExpr 0x9e439c0 <col:19, col:34> 'class std::locale'
        (CallExpr 0x9e439a0 <col:20, col:33> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9e43968 <col:20, col:26> '<dependent type>' lvalue
            (CXXThisExpr 0x9e43958 <col:20> 'basic_ios<_CharT, _Traits> *' this))))")
  (CallExpr 0x9e43a70 <line:117:7, col:28> '<dependent type>'
    (MemberExpr 0x9e43a28 <col:7, col:17> '<bound member function type>' ->imbue 0x9d622a0
      (CXXThisExpr 0x9e43a18 <col:17> 'basic_ios<_CharT, _Traits> *' this))
    (DeclRefExpr 0x9e43a54 <col:23> 'const class std::locale' lvalue ParmVar 0x9e43830 '__loc' 'const class std::locale &'))
  (CallExpr 0x9e43ad8 <line:118:7, col:28> '<dependent type>'
    (MemberExpr 0x9e43aa0 <col:7> '<bound member function type>' ->_M_cache_locale 0x9e3ec20
      (CXXThisExpr 0x9e43a90 <col:7> 'basic_ios<_CharT, _Traits> *' this))
    (DeclRefExpr 0x9e43ac0 <col:23> 'const class std::locale' lvalue ParmVar 0x9e43830 '__loc' 'const class std::locale &'))
  (IfStmt 0x9e43cd0 <line:119:7, line:120:31>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9e43bd0 <line:119:11, col:28> '<dependent type>'
      (UnresolvedLookupExpr 0x9e43b78 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b412d0 0x9ac7fa0 0x9b5e2b0 0x9ba7d20 0x9bc7160 0x9bc74d0 0x9cbb090 0x9cbb590 0x9cbbad0 0x9db08a0)
      (CallExpr 0x9e43b40 <col:11, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e43b08 <col:11, col:17> '<dependent type>' lvalue
          (CXXThisExpr 0x9e43af8 <col:11> 'basic_ios<_CharT, _Traits> *' this)))
      (IntegerLiteral 0x9e43b60 <col:28> 'int' 0))
    (CallExpr 0x9e43cb0 <line:120:2, col:31> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e43c60 <col:2, col:17> '<dependent type>' lvalue
        (CallExpr 0x9e43c40 <col:2, col:14> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9e43c08 <col:2, col:8> '<dependent type>' lvalue
            (CXXThisExpr 0x9e43bf8 <col:2> 'basic_ios<_CharT, _Traits> *' this))))
      (DeclRefExpr 0x9e43c94 <col:26> 'const class std::locale' lvalue ParmVar 0x9e43830 '__loc' 'const class std::locale &'))
    <<<NULL>>>)
  (ReturnStmt 0x9e43d40 <line:121:7, col:14>
    (CXXConstructExpr 0x9e43d18 <col:14> 'class std::locale''void (const class std::locale &) throw()' elidable
      (ImplicitCastExpr 0x9e43d08 <col:14> 'const class std::locale' lvalue <NoOp>
        (DeclRefExpr 0x9e43cec <col:14> 'class std::locale' lvalue Var 0x9e43920 '__old' 'class std::locale')))))


    void init(basic_streambuf<_CharT, _Traits> *__sb) (CompoundStmt 0x9e4a410 </usr/include/c++/4.6/bits/basic_ios.tcc:127:5, line:153:5>
  (CallExpr 0x9e4a0e0 <line:129:7, col:25> '<dependent type>'
    (MemberExpr 0x9e4a0b0 <col:7, col:17> '<bound member function type>' ->_M_init 0x9d61510
      (CXXThisExpr 0x9e4a0a0 <col:17> 'basic_ios<_CharT, _Traits> *' this)))
  (CallExpr 0x9e4a160 <line:132:7, col:36> '<dependent type>'
    (MemberExpr 0x9e4a110 <col:7> '<bound member function type>' ->_M_cache_locale 0x9e3ec20
      (CXXThisExpr 0x9e4a100 <col:7> 'basic_ios<_CharT, _Traits> *' this))
    (MemberExpr 0x9e4a140 <col:23> 'class std::locale' lvalue ->_M_ios_locale 0x9d614c0
      (CXXThisExpr 0x9e4a130 <col:23> 'basic_ios<_CharT, _Traits> *' this)))
  (BinaryOperator 0x9e4a1d0 <line:146:7, col:24> '<dependent type>' '='
    (MemberExpr 0x9e4a190 <col:7> 'char_type':'_CharT' lvalue ->_M_fill 0x9e3ca20
      (CXXThisExpr 0x9e4a180 <col:7> 'basic_ios<_CharT, _Traits> *' this))
    (CXXUnresolvedConstructExpr 0x9e4a1b8 <col:17, col:24> '_CharT'))
  (BinaryOperator 0x9e4a228 <line:147:7, col:22> '<dependent type>' '='
    (MemberExpr 0x9e4a1f8 <col:7> '_Bool' lvalue ->_M_fill_init 0x9e3ca60
      (CXXThisExpr 0x9e4a1e8 <col:7> 'basic_ios<_CharT, _Traits> *' this))
    (CXXBoolLiteralExpr 0x9e4a218 <col:22> '_Bool' false))
  (BinaryOperator 0x9e4a288 <line:149:7, col:16> '<dependent type>' '='
    (MemberExpr 0x9e4a250 <col:7> 'basic_ostream<_CharT, _Traits> *' lvalue ->_M_tie 0x9e3c9d0
      (CXXThisExpr 0x9e4a240 <col:7> 'basic_ios<_CharT, _Traits> *' this))
    (IntegerLiteral 0x9e4a270 <col:16> 'int' 0))
  (BinaryOperator 0x9e4a2e8 <line:150:7, col:22> '<dependent type>' '='
    (MemberExpr 0x9e4a2b0 <col:7> 'iostate':'enum std::_Ios_Iostate' lvalue ->_M_exception 0x9d60650
      (CXXThisExpr 0x9e4a2a0 <col:7> 'basic_ios<_CharT, _Traits> *' this))
    (DeclRefExpr 0x9e4a2d0 <col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6bb00 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))
  (BinaryOperator 0x9e4a348 <line:151:7, col:22> '<dependent type>' '='
    (MemberExpr 0x9e4a310 <col:7> 'basic_streambuf<_CharT, _Traits> *' lvalue ->_M_streambuf 0x9e3cbc0
      (CXXThisExpr 0x9e4a300 <col:7> 'basic_ios<_CharT, _Traits> *' this))
    (DeclRefExpr 0x9e4a330 <col:22> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0x9e49f60 '__sb' 'basic_streambuf<_CharT, _Traits> *'))
  (BinaryOperator 0x9e4a3f8 <line:152:7, col:45> '<dependent type>' '='
    (MemberExpr 0x9e4a370 <col:7> 'iostate':'enum std::_Ios_Iostate' lvalue ->_M_streambuf_state 0x9d60690
      (CXXThisExpr 0x9e4a360 <col:7> 'basic_ios<_CharT, _Traits> *' this))
    (ConditionalOperator 0x9e4a3d8 <col:28, col:45> 'const iostate':'const enum std::_Ios_Iostate' lvalue
      (DeclRefExpr 0x9e4a390 <col:28> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0x9e49f60 '__sb' 'basic_streambuf<_CharT, _Traits> *')
      (DeclRefExpr 0x9e4a3a8 <col:35> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6bb00 'goodbit' 'const iostate':'const enum std::_Ios_Iostate')
      (DeclRefExpr 0x9e4a3c0 <col:45> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6b9e0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))))


    void _M_cache_locale(const std::locale &__loc) (CompoundStmt 0x9e4b020 </usr/include/c++/4.6/bits/basic_ios.tcc:158:5, line:173:5>
  (IfStmt 0x9e4aa70 <line:159:7, line:162:13>
    <<<NULL>>>
    (CallExpr 0x9e4a898 <line:159:11, col:64> '<dependent type>'
      (DeclRefExpr 0x9e4a7c4 <col:11> 'long (long, long)' lvalue Function 0x9ca0bd0 '__builtin_expect' 'long (long, long)')
      (CallExpr 0x9e4a868 <col:28, col:57> '<dependent type>'
        (UnresolvedLookupExpr 0x9e4a7e8 <col:28, col:50> '<dependent type>' lvalue (ADL) = '1' 0x9bf56c0)
        (DeclRefExpr 0x9e4a850 <col:52> 'const class std::locale' lvalue ParmVar 0x9e4a6e0 '__loc' 'const class std::locale &'))
      (CXXBoolLiteralExpr 0x9e4a888 <col:60> '_Bool' true))
    (BinaryOperator 0x9e4a9f8 <line:160:2, col:43> '<dependent type>' '='
      (MemberExpr 0x9e4a8d0 <col:2> 'const __ctype_type *' lvalue ->_M_ctype 0x9e3cc50
        (CXXThisExpr 0x9e4a8c0 <col:2> 'basic_ios<_CharT, _Traits> *' this))
      (CXXOperatorCallExpr 0x9e4a9d8 <col:13, col:43> '<dependent type>'
        (UnresolvedLookupExpr 0x9e4a998 <col:13, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9d5b750 0x9d68890 0x9d69b00)
        (CallExpr 0x9e4a978 <col:14, col:43> '<dependent type>'
          (UnresolvedLookupExpr 0x9e4a8f8 <col:14, col:36> '<dependent type>' lvalue (ADL) = '1' 0x9bf5c50)
          (DeclRefExpr 0x9e4a960 <col:38> 'const class std::locale' lvalue ParmVar 0x9e4a6e0 '__loc' 'const class std::locale &'))))
    (BinaryOperator 0x9e4aa58 <line:162:2, col:13> '<dependent type>' '='
      (MemberExpr 0x9e4aa20 <col:2> 'const __ctype_type *' lvalue ->_M_ctype 0x9e3cc50
        (CXXThisExpr 0x9e4aa10 <col:2> 'basic_ios<_CharT, _Traits> *' this))
      (IntegerLiteral 0x9e4aa40 <col:13> 'int' 0)))
  (IfStmt 0x9e4ad38 <line:164:7, line:167:15>
    <<<NULL>>>
    (CallExpr 0x9e4ab60 <line:164:11, col:66> '<dependent type>'
      (DeclRefExpr 0x9e4aa8c <col:11> 'long (long, long)' lvalue Function 0x9ca0bd0 '__builtin_expect' 'long (long, long)')
      (CallExpr 0x9e4ab30 <col:28, col:59> '<dependent type>'
        (UnresolvedLookupExpr 0x9e4aab0 <col:28, col:52> '<dependent type>' lvalue (ADL) = '1' 0x9bf56c0)
        (DeclRefExpr 0x9e4ab18 <col:54> 'const class std::locale' lvalue ParmVar 0x9e4a6e0 '__loc' 'const class std::locale &'))
      (CXXBoolLiteralExpr 0x9e4ab50 <col:62> '_Bool' true))
    (BinaryOperator 0x9e4acc0 <line:165:2, col:47> '<dependent type>' '='
      (MemberExpr 0x9e4ab98 <col:2> 'const __num_put_type *' lvalue ->_M_num_put 0x9e3cce0
        (CXXThisExpr 0x9e4ab88 <col:2> 'basic_ios<_CharT, _Traits> *' this))
      (CXXOperatorCallExpr 0x9e4aca0 <col:15, col:47> '<dependent type>'
        (UnresolvedLookupExpr 0x9e4ac60 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9d5b750 0x9d68890 0x9d69b00)
        (CallExpr 0x9e4ac40 <col:16, col:47> '<dependent type>'
          (UnresolvedLookupExpr 0x9e4abc0 <col:16, col:40> '<dependent type>' lvalue (ADL) = '1' 0x9bf5c50)
          (DeclRefExpr 0x9e4ac28 <col:42> 'const class std::locale' lvalue ParmVar 0x9e4a6e0 '__loc' 'const class std::locale &'))))
    (BinaryOperator 0x9e4ad20 <line:167:2, col:15> '<dependent type>' '='
      (MemberExpr 0x9e4ace8 <col:2> 'const __num_put_type *' lvalue ->_M_num_put 0x9e3cce0
        (CXXThisExpr 0x9e4acd8 <col:2> 'basic_ios<_CharT, _Traits> *' this))
      (IntegerLiteral 0x9e4ad08 <col:15> 'int' 0)))
  (IfStmt 0x9e4b000 <line:169:7, line:172:15>
    <<<NULL>>>
    (CallExpr 0x9e4ae28 <line:169:11, col:66> '<dependent type>'
      (DeclRefExpr 0x9e4ad54 <col:11> 'long (long, long)' lvalue Function 0x9ca0bd0 '__builtin_expect' 'long (long, long)')
      (CallExpr 0x9e4adf8 <col:28, col:59> '<dependent type>'
        (UnresolvedLookupExpr 0x9e4ad78 <col:28, col:52> '<dependent type>' lvalue (ADL) = '1' 0x9bf56c0)
        (DeclRefExpr 0x9e4ade0 <col:54> 'const class std::locale' lvalue ParmVar 0x9e4a6e0 '__loc' 'const class std::locale &'))
      (CXXBoolLiteralExpr 0x9e4ae18 <col:62> '_Bool' true))
    (BinaryOperator 0x9e4af88 <line:170:2, col:47> '<dependent type>' '='
      (MemberExpr 0x9e4ae60 <col:2> 'const __num_get_type *' lvalue ->_M_num_get 0x9e3cd70
        (CXXThisExpr 0x9e4ae50 <col:2> 'basic_ios<_CharT, _Traits> *' this))
      (CXXOperatorCallExpr 0x9e4af68 <col:15, col:47> '<dependent type>'
        (UnresolvedLookupExpr 0x9e4af28 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9d5b750 0x9d68890 0x9d69b00)
        (CallExpr 0x9e4af08 <col:16, col:47> '<dependent type>'
          (UnresolvedLookupExpr 0x9e4ae88 <col:16, col:40> '<dependent type>' lvalue (ADL) = '1' 0x9bf5c50)
          (DeclRefExpr 0x9e4aef0 <col:42> 'const class std::locale' lvalue ParmVar 0x9e4a6e0 '__loc' 'const class std::locale &'))))
    (BinaryOperator 0x9e4afe8 <line:172:2, col:15> '<dependent type>' '='
      (MemberExpr 0x9e4afb0 <col:2> 'const __num_get_type *' lvalue ->_M_num_get 0x9e3cd70
        (CXXThisExpr 0x9e4afa0 <col:2> 'basic_ios<_CharT, _Traits> *' this))
      (IntegerLiteral 0x9e4afd0 <col:15> 'int' 0))))


    class basic_ios : public std::ios_base {
        class basic_ios;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef ctype<char> __ctype_type;
        typedef num_put<char, ostreambuf_iterator<char, std::char_traits<char> > > __num_put_type;
        typedef num_get<char, istreambuf_iterator<char, std::char_traits<char> > > __num_get_type;
    protected:
    protected:
        basic_ostream<char, std::char_traits<char> > *_M_tie;
        mutable char_type _M_fill;
        mutable bool _M_fill_init;
        basic_streambuf<char, std::char_traits<char> > *_M_streambuf;
        const __ctype_type *_M_ctype;
        const __num_put_type *_M_num_put;
        const __num_get_type *_M_num_get;
    public:
    public:
        void *operator void *() const;
        bool operator!() const;
        iostate rdstate() const;
        void clear(iostate __state);
        void setstate(iostate __state);
        void _M_setstate(iostate __state);
        bool good() const;
        bool eof() const;
        bool fail() const;
        bool bad() const;
        iostate exceptions() const;
        void exceptions(iostate __except);
        basic_ios(basic_streambuf<char, std::char_traits<char> > *__sb);
        virtual void ~basic_ios();
        basic_ostream<char, std::char_traits<char> > *tie() const;
        basic_ostream<char, std::char_traits<char> > *tie(basic_ostream<char, std::char_traits<char> > *__tiestr);
        basic_streambuf<char, std::char_traits<char> > *rdbuf() const;
        basic_streambuf<char, std::char_traits<char> > *rdbuf(basic_streambuf<char, std::char_traits<char> > *__sb);
        std::basic_ios<char> &copyfmt(const std::basic_ios<char> &__rhs);
        char_type fill() const;
        char_type fill(char_type __ch);
        std::locale imbue(const std::locale &__loc);
        char narrow(char_type __c, char __dfault) const;
        char_type widen(char __c) const;
    protected:
    protected:
        basic_ios();
        void init(basic_streambuf<char, std::char_traits<char> > *__sb);
        void _M_cache_locale(const std::locale &__loc);
        inline std::basic_ios<char> &operator=(const std::basic_ios<char> &);
        inline basic_ios(const std::basic_ios<char> &);
    };
    class basic_ios : public std::ios_base {
        class basic_ios;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef ctype<wchar_t> __ctype_type;
        typedef num_put<wchar_t, ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_put_type;
        typedef num_get<wchar_t, istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_get_type;
    protected:
    protected:
        basic_ostream<wchar_t, std::char_traits<wchar_t> > *_M_tie;
        mutable char_type _M_fill;
        mutable bool _M_fill_init;
        basic_streambuf<wchar_t, std::char_traits<wchar_t> > *_M_streambuf;
        const __ctype_type *_M_ctype;
        const __num_put_type *_M_num_put;
        const __num_get_type *_M_num_get;
    public:
    public:
        void *operator void *() const;
        bool operator!() const;
        iostate rdstate() const;
        void clear(iostate __state);
        void setstate(iostate __state);
        void _M_setstate(iostate __state);
        bool good() const;
        bool eof() const;
        bool fail() const;
        bool bad() const;
        iostate exceptions() const;
        void exceptions(iostate __except);
        basic_ios(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        virtual void ~basic_ios();
        basic_ostream<wchar_t, std::char_traits<wchar_t> > *tie() const;
        basic_ostream<wchar_t, std::char_traits<wchar_t> > *tie(basic_ostream<wchar_t, std::char_traits<wchar_t> > *__tiestr);
        basic_streambuf<wchar_t, std::char_traits<wchar_t> > *rdbuf() const;
        basic_streambuf<wchar_t, std::char_traits<wchar_t> > *rdbuf(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        std::basic_ios<wchar_t> &copyfmt(const std::basic_ios<wchar_t> &__rhs);
        char_type fill() const;
        char_type fill(char_type __ch);
        std::locale imbue(const std::locale &__loc);
        char narrow(char_type __c, char __dfault) const;
        char_type widen(char __c) const;
    protected:
    protected:
        basic_ios();
        void init(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        void _M_cache_locale(const std::locale &__loc);
        inline std::basic_ios<wchar_t> &operator=(const std::basic_ios<wchar_t> &);
        inline basic_ios(const std::basic_ios<wchar_t> &);
    };
}
namespace std {
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_ostream : virtual public basic_ios<char, std::char_traits<char> > {
        class basic_ostream;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef basic_streambuf<char, std::char_traits<char> > __streambuf_type;
        typedef basic_ios<char, std::char_traits<char> > __ios_type;
        typedef basic_ostream<char, std::char_traits<char> > __ostream_type;
        typedef num_put<char, ostreambuf_iterator<char, std::char_traits<char> > > __num_put_type;
        typedef ctype<char> __ctype_type;
        basic_ostream(__streambuf_type *__sb);
        virtual void ~basic_ostream();
        class sentry {
            class sentry;
            bool _M_ok;
            basic_ostream<char, std::char_traits<char> > &_M_os;
        public:
        public:
            sentry(basic_ostream<char, std::char_traits<char> > &__os);
            void ~sentry();
            bool operator _Bool() const;
        };
        ;
        __ostream_type &operator<<(__ostream_type &(*__pf)(__ostream_type &));
        __ostream_type &operator<<(__ios_type &(*__pf)(__ios_type &));
        __ostream_type &operator<<(std::ios_base &(*__pf)(std::ios_base &));
        __ostream_type &operator<<(long __n);
        __ostream_type &operator<<(unsigned long __n);
        __ostream_type &operator<<(bool __n);
        __ostream_type &operator<<(short __n);
        __ostream_type &operator<<(unsigned short __n);
        __ostream_type &operator<<(int __n);
        __ostream_type &operator<<(unsigned int __n);
        __ostream_type &operator<<(long long __n);
        __ostream_type &operator<<(unsigned long long __n);
        __ostream_type &operator<<(double __f);
        __ostream_type &operator<<(float __f);
        __ostream_type &operator<<(long double __f);
        __ostream_type &operator<<(const void *__p);
        __ostream_type &operator<<(__streambuf_type *__sb);
        __ostream_type &put(char_type __c);
        void _M_write(const char_type *__s, streamsize __n);
        __ostream_type &write(const char_type *__s, streamsize __n);
        __ostream_type &flush();
        pos_type tellp();
        __ostream_type &seekp(pos_type);
        __ostream_type &seekp(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_ostream();
        template <typename _ValueT = long> __ostream_type &_M_insert(long __v)template <typename _ValueT = long long> __ostream_type &_M_insert(long long __v)template <typename _ValueT = bool> __ostream_type &_M_insert(bool __v)template <typename _ValueT = unsigned long> __ostream_type &_M_insert(unsigned long __v)template <typename _ValueT = double> __ostream_type &_M_insert(double __v)template <typename _ValueT = unsigned long long> __ostream_type &_M_insert(unsigned long long __v)template <typename _ValueT = long double> __ostream_type &_M_insert(long double __v)template <typename _ValueT = const void *> __ostream_type &_M_insert(const void *__v)template <typename _ValueT> __ostream_type &_M_insert(_ValueT __v);
        inline std::basic_ostream<char> &operator=(const std::basic_ostream<char> &);
        inline basic_ostream(const std::basic_ostream<char> &);
    }
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_ostream : virtual public basic_ios<wchar_t, std::char_traits<wchar_t> > {
        class basic_ostream;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef basic_streambuf<wchar_t, std::char_traits<wchar_t> > __streambuf_type;
        typedef basic_ios<wchar_t, std::char_traits<wchar_t> > __ios_type;
        typedef basic_ostream<wchar_t, std::char_traits<wchar_t> > __ostream_type;
        typedef num_put<wchar_t, ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_put_type;
        typedef ctype<wchar_t> __ctype_type;
        basic_ostream(__streambuf_type *__sb);
        virtual void ~basic_ostream();
        class sentry {
            class sentry;
            bool _M_ok;
            basic_ostream<wchar_t, std::char_traits<wchar_t> > &_M_os;
        public:
        public:
            sentry(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__os);
            void ~sentry();
            bool operator _Bool() const;
        };
        ;
        __ostream_type &operator<<(__ostream_type &(*__pf)(__ostream_type &));
        __ostream_type &operator<<(__ios_type &(*__pf)(__ios_type &));
        __ostream_type &operator<<(std::ios_base &(*__pf)(std::ios_base &));
        __ostream_type &operator<<(long __n);
        __ostream_type &operator<<(unsigned long __n);
        __ostream_type &operator<<(bool __n);
        __ostream_type &operator<<(short __n);
        __ostream_type &operator<<(unsigned short __n);
        __ostream_type &operator<<(int __n);
        __ostream_type &operator<<(unsigned int __n);
        __ostream_type &operator<<(long long __n);
        __ostream_type &operator<<(unsigned long long __n);
        __ostream_type &operator<<(double __f);
        __ostream_type &operator<<(float __f);
        __ostream_type &operator<<(long double __f);
        __ostream_type &operator<<(const void *__p);
        __ostream_type &operator<<(__streambuf_type *__sb);
        __ostream_type &put(char_type __c);
        void _M_write(const char_type *__s, streamsize __n);
        __ostream_type &write(const char_type *__s, streamsize __n);
        __ostream_type &flush();
        pos_type tellp();
        __ostream_type &seekp(pos_type);
        __ostream_type &seekp(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_ostream();
        template <typename _ValueT = long> __ostream_type &_M_insert(long __v)template <typename _ValueT = long long> __ostream_type &_M_insert(long long __v)template <typename _ValueT = bool> __ostream_type &_M_insert(bool __v)template <typename _ValueT = unsigned long> __ostream_type &_M_insert(unsigned long __v)template <typename _ValueT = double> __ostream_type &_M_insert(double __v)template <typename _ValueT = unsigned long long> __ostream_type &_M_insert(unsigned long long __v)template <typename _ValueT = long double> __ostream_type &_M_insert(long double __v)template <typename _ValueT = const void *> __ostream_type &_M_insert(const void *__v)template <typename _ValueT> __ostream_type &_M_insert(_ValueT __v);
        inline std::basic_ostream<wchar_t> &operator=(const std::basic_ostream<wchar_t> &);
        inline basic_ostream(const std::basic_ostream<wchar_t> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_ostream : virtual public basic_ios<_CharT, _Traits> {
        class basic_ostream;
    public:
    public:
        typedef _CharT char_type;
        typedef typename _Traits::int_type int_type;
        typedef typename _Traits::pos_type pos_type;
        typedef typename _Traits::off_type off_type;
        typedef _Traits traits_type;
        typedef basic_streambuf<_CharT, _Traits> __streambuf_type;
        typedef basic_ios<_CharT, _Traits> __ios_type;
        typedef basic_ostream<_CharT, _Traits> __ostream_type;
        typedef num_put<_CharT, ostreambuf_iterator<_CharT, _Traits> > __num_put_type;
        typedef ctype<_CharT> __ctype_type;
        basic_ostream<_CharT, _Traits>(__streambuf_type *__sb) (CompoundStmt 0x9e564d8 </usr/include/c++/4.6/ostream:84:7, col:27>
  (CallExpr 0x9e564b8 <col:9, col:24> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9e56468 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0x9e56458 <col:9> 'basic_ostream<_CharT, _Traits> *' this))
    (DeclRefExpr 0x9e5649c <col:20> '__streambuf_type *' lvalue ParmVar 0x9e540d0 '__sb' '__streambuf_type *')))


        virtual void ~basic_ostream<_CharT, _Traits>() (CompoundStmt 0x9e564f0 </usr/include/c++/4.6/ostream:92:24, col:26>)


        class sentry;
        ;
        __ostream_type &operator<<(__ostream_type &(*__pf)(__ostream_type &)) (CompoundStmt 0x9e56570 </usr/include/c++/4.6/ostream:110:7, line:115:7>
  (ReturnStmt 0x9e56560 <line:114:2, col:19>
    (CallExpr 0x9e56540 <col:9, col:19> '<dependent type>'
      (DeclRefExpr 0x9e56500 <col:9> '__ostream_type &(*)(__ostream_type &)' lvalue ParmVar 0x9e54490 '__pf' '__ostream_type &(*)(__ostream_type &)')
      (UnaryOperator 0x9e56528 <col:14, col:15> '<dependent type>' prefix '*'
        (CXXThisExpr 0x9e56518 <col:15> 'basic_ostream<_CharT, _Traits> *' this)))))


        __ostream_type &operator<<(__ios_type &(*__pf)(__ios_type &)) (CompoundStmt 0x9e56620 </usr/include/c++/4.6/ostream:119:7, line:125:7>
  (CallExpr 0x9e565c8 <line:123:2, col:12> '<dependent type>'
    (DeclRefExpr 0x9e56584 <col:2> '__ios_type &(*)(__ios_type &)' lvalue ParmVar 0x9e54700 '__pf' '__ios_type &(*)(__ios_type &)')
    (UnaryOperator 0x9e565b0 <col:7, col:8> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9e565a0 <col:8> 'basic_ostream<_CharT, _Traits> *' this)))
  (ReturnStmt 0x9e56610 <line:124:2, col:10>
    (UnaryOperator 0x9e565f8 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9e565e8 <col:10> 'basic_ostream<_CharT, _Traits> *' this))))


        __ostream_type &operator<<(std::ios_base &(*__pf)(std::ios_base &)) (CompoundStmt 0x9e566d0 </usr/include/c++/4.6/ostream:129:7, line:135:7>
  (CallExpr 0x9e56678 <line:133:2, col:12> '<dependent type>'
    (DeclRefExpr 0x9e56638 <col:2> 'class std::ios_base &(*)(class std::ios_base &)' lvalue ParmVar 0x9e548e0 '__pf' 'class std::ios_base &(*)(class std::ios_base &)')
    (UnaryOperator 0x9e56660 <col:7, col:8> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9e56650 <col:8> 'basic_ostream<_CharT, _Traits> *' this)))
  (ReturnStmt 0x9e566c0 <line:134:2, col:10>
    (UnaryOperator 0x9e566a8 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9e56698 <col:10> 'basic_ostream<_CharT, _Traits> *' this))))


        __ostream_type &operator<<(long __n) (CompoundStmt 0x9e56780 </usr/include/c++/4.6/ostream:167:7, col:32>
  (ReturnStmt 0x9e56770 <col:9, col:29>
    (CallExpr 0x9e56750 <col:16, col:29> '<dependent type>'
      (UnresolvedMemberExpr 0x9e566f8 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9e56734 <col:26> 'long' lvalue ParmVar 0x9e54a00 '__n' 'long'))))


        __ostream_type &operator<<(unsigned long __n) (CompoundStmt 0x9e56830 </usr/include/c++/4.6/ostream:171:7, col:32>
  (ReturnStmt 0x9e56820 <col:9, col:29>
    (CallExpr 0x9e56800 <col:16, col:29> '<dependent type>'
      (UnresolvedMemberExpr 0x9e567a8 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9e567e4 <col:26> 'unsigned long' lvalue ParmVar 0x9e54b20 '__n' 'unsigned long'))))


        __ostream_type &operator<<(bool __n) (CompoundStmt 0x9e568e0 </usr/include/c++/4.6/ostream:175:7, col:32>
  (ReturnStmt 0x9e568d0 <col:9, col:29>
    (CallExpr 0x9e568b0 <col:16, col:29> '<dependent type>'
      (UnresolvedMemberExpr 0x9e56858 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9e56894 <col:26> '_Bool' lvalue ParmVar 0x9e54c30 '__n' '_Bool'))))


        __ostream_type &operator<<(short __n);
        __ostream_type &operator<<(unsigned short __n) (CompoundStmt 0x9e569d8 </usr/include/c++/4.6/ostream:182:7, line:186:7>
  (ReturnStmt 0x9e569c8 <line:185:2, col:50>
    (CallExpr 0x9e569a8 <col:9, col:50> '<dependent type>'
      (UnresolvedMemberExpr 0x9e56908 <col:9> '<bound member function type>' lvalue)
      (CXXStaticCastExpr 0x9e56990 <col:19, col:49> 'unsigned long' static_cast<unsigned long> <NoOp>
        (ImplicitCastExpr 0x9e56980 <col:46> 'unsigned long' <IntegralCast>
          (ImplicitCastExpr 0x9e56970 <col:46> 'unsigned short' <LValueToRValue>
            (DeclRefExpr 0x9e56944 <col:46> 'unsigned short' lvalue ParmVar 0x9e54e70 '__n' 'unsigned short')))))))


        __ostream_type &operator<<(int __n);
        __ostream_type &operator<<(unsigned int __n) (CompoundStmt 0x9e56ad0 </usr/include/c++/4.6/ostream:193:7, line:197:7>
  (ReturnStmt 0x9e56ac0 <line:196:2, col:50>
    (CallExpr 0x9e56aa0 <col:9, col:50> '<dependent type>'
      (UnresolvedMemberExpr 0x9e56a00 <col:9> '<bound member function type>' lvalue)
      (CXXStaticCastExpr 0x9e56a88 <col:19, col:49> 'unsigned long' static_cast<unsigned long> <NoOp>
        (ImplicitCastExpr 0x9e56a78 <col:46> 'unsigned long' <IntegralCast>
          (ImplicitCastExpr 0x9e56a68 <col:46> 'unsigned int' <LValueToRValue>
            (DeclRefExpr 0x9e56a3c <col:46> 'unsigned int' lvalue ParmVar 0x9e550b0 '__n' 'unsigned int')))))))


        __ostream_type &operator<<(long long __n) (CompoundStmt 0x9e56b80 </usr/include/c++/4.6/ostream:202:7, col:32>
  (ReturnStmt 0x9e56b70 <col:9, col:29>
    (CallExpr 0x9e56b50 <col:16, col:29> '<dependent type>'
      (UnresolvedMemberExpr 0x9e56af8 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9e56b34 <col:26> 'long long' lvalue ParmVar 0x9e551d0 '__n' 'long long'))))


        __ostream_type &operator<<(unsigned long long __n) (CompoundStmt 0x9e56c30 </usr/include/c++/4.6/ostream:206:7, col:32>
  (ReturnStmt 0x9e56c20 <col:9, col:29>
    (CallExpr 0x9e56c00 <col:16, col:29> '<dependent type>'
      (UnresolvedMemberExpr 0x9e56ba8 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9e56be4 <col:26> 'unsigned long long' lvalue ParmVar 0x9e552f0 '__n' 'unsigned long long'))))


        __ostream_type &operator<<(double __f) (CompoundStmt 0x9e56ce0 </usr/include/c++/4.6/ostream:211:7, col:32>
  (ReturnStmt 0x9e56cd0 <col:9, col:29>
    (CallExpr 0x9e56cb0 <col:16, col:29> '<dependent type>'
      (UnresolvedMemberExpr 0x9e56c58 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9e56c94 <col:26> 'double' lvalue ParmVar 0x9e55410 '__f' 'double'))))


        __ostream_type &operator<<(float __f) (CompoundStmt 0x9e56dd8 </usr/include/c++/4.6/ostream:215:7, line:219:7>
  (ReturnStmt 0x9e56dc8 <line:218:2, col:43>
    (CallExpr 0x9e56da8 <col:9, col:43> '<dependent type>'
      (UnresolvedMemberExpr 0x9e56d08 <col:9> '<bound member function type>' lvalue)
      (CXXStaticCastExpr 0x9e56d90 <col:19, col:42> 'double' static_cast<double> <NoOp>
        (ImplicitCastExpr 0x9e56d80 <col:39> 'double' <FloatingCast>
          (ImplicitCastExpr 0x9e56d70 <col:39> 'float' <LValueToRValue>
            (DeclRefExpr 0x9e56d44 <col:39> 'float' lvalue ParmVar 0x9e55530 '__f' 'float')))))))


        __ostream_type &operator<<(long double __f) (CompoundStmt 0x9e56e88 </usr/include/c++/4.6/ostream:223:7, col:32>
  (ReturnStmt 0x9e56e78 <col:9, col:29>
    (CallExpr 0x9e56e58 <col:16, col:29> '<dependent type>'
      (UnresolvedMemberExpr 0x9e56e00 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9e56e3c <col:26> 'long double' lvalue ParmVar 0x9e55650 '__f' 'long double'))))


        __ostream_type &operator<<(const void *__p) (CompoundStmt 0x9e56f38 </usr/include/c++/4.6/ostream:227:7, col:32>
  (ReturnStmt 0x9e56f28 <col:9, col:29>
    (CallExpr 0x9e56f08 <col:16, col:29> '<dependent type>'
      (UnresolvedMemberExpr 0x9e56eb0 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9e56eec <col:26> 'const void *' lvalue ParmVar 0x9e55770 '__p' 'const void *'))))


        __ostream_type &operator<<(__streambuf_type *__sb);
        __ostream_type &put(char_type __c);
        void _M_write(const char_type *__s, streamsize __n) (CompoundStmt 0x9e571d0 </usr/include/c++/4.6/ostream:289:7, line:293:7>
  (DeclStmt 0x9e57090 <line:290:2, col:57>
    0x9e56f60 "const streamsize __put =
      (CallExpr 0x9e57068 <col:27, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e57000 <col:27, col:42> '<dependent type>' lvalue
          (CallExpr 0x9e56fe0 <col:27, col:39> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9e56fa8 <col:27, col:33> '<dependent type>' lvalue
              (CXXThisExpr 0x9e56f98 <col:27> 'basic_ostream<_CharT, _Traits> *' this))))
        (DeclRefExpr 0x9e57034 <col:48> 'const char_type *' lvalue ParmVar 0x9e55b00 '__s' 'const char_type *')
        (DeclRefExpr 0x9e5704c <col:53> 'streamsize':'int' lvalue ParmVar 0x9e55b40 '__n' 'streamsize':'int'))")
  (IfStmt 0x9e571b0 <line:291:2, line:292:35>
    <<<NULL>>>
    (BinaryOperator 0x9e570f0 <line:291:6, col:15> '_Bool' '!='
      (ImplicitCastExpr 0x9e570d0 <col:6> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0x9e570a0 <col:6> 'const streamsize':'const int' lvalue Var 0x9e56f60 '__put' 'const streamsize':'const int'))
      (ImplicitCastExpr 0x9e570e0 <col:15> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0x9e570b8 <col:15> 'streamsize':'int' lvalue ParmVar 0x9e55b40 '__n' 'streamsize':'int')))
    (CallExpr 0x9e57190 <line:292:4, col:35> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e57118 <col:4, col:10> '<dependent type>' lvalue
        (CXXThisExpr 0x9e57108 <col:4> 'basic_ostream<_CharT, _Traits> *' this))
      (DeclRefExpr 0x9e5716c <col:19, col:29> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6b9e0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
    <<<NULL>>>))


        __ostream_type &write(const char_type *__s, streamsize __n);
        __ostream_type &flush();
        pos_type tellp();
        __ostream_type &seekp(pos_type);
        __ostream_type &seekp(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_ostream<_CharT, _Traits>() (CompoundStmt 0x9e57268 </usr/include/c++/4.6/ostream:363:7, col:24>
  (CallExpr 0x9e57248 <col:9, col:21> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9e571f8 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0x9e571e8 <col:9> 'basic_ostream<_CharT, _Traits> *' this))
    (IntegerLiteral 0x9e57230 <col:20> 'int' 0)))


        template <typename _ValueT> __ostream_type &_M_insert(_ValueT __v);
    };
    class sentry {
        class sentry;
        bool _M_ok;
        basic_ostream<_CharT, _Traits> &_M_os;
    public:
    public:
        sentry(basic_ostream<_CharT, _Traits> &__os);
        void ~sentry() (CompoundStmt 0x9e58080 </usr/include/c++/4.6/ostream:407:7, line:415:7>
  (IfStmt 0x9e58060 <line:409:2, line:414:4>
    <<<NULL>>>
    (BinaryOperator 0x9e57d10 <line:409:6, col:69> '_Bool' '&&'
      (CXXUnresolvedConstructExpr 0x9e57c18 <col:6, col:44> '_Bool'
        (CXXOperatorCallExpr 0x9e57bf0 <col:11, col:37> '<dependent type>'
          (UnresolvedLookupExpr 0x9e57bb0 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9d5b750 0x9d68890 0x9d69b00)
          (CallExpr 0x9e57b50 <col:11, col:23> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9e57b18 <col:11, col:17> '<dependent type>' lvalue
              (MemberExpr 0x9e57af8 <col:11> 'basic_ostream<_CharT, _Traits>':'basic_ostream<_CharT, _Traits>' lvalue ->_M_os 0x9e576d0
                (CXXThisExpr 0x9e57ae8 <col:11> 'class std::basic_ostream::sentry *' this))))
          (DeclRefExpr 0x9e57b8c <col:27, col:37> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9d6b7b0 'unitbuf' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
      (UnaryOperator 0x9e57cf8 <col:49, col:69> '_Bool' prefix '!'
        (CallExpr 0x9e57cd8 <col:50, col:69> '_Bool'
          (ImplicitCastExpr 0x9e57cc8 <col:50> '_Bool (*)(void) throw()' <FunctionToPointerDecay>
            (DeclRefExpr 0x9e57c6c <col:50> '_Bool (void) throw()' lvalue Function 0x9bb8100 'uncaught_exception' '_Bool (void) throw()')))))
    (CompoundStmt 0x9e58048 <line:410:4, line:414:4>
      (IfStmt 0x9e58028 <line:412:6, line:413:39>
        <<<NULL>>>
        (BinaryOperator 0x9e57f48 <line:412:10, col:56> '<dependent type>' '&&'
          (CallExpr 0x9e57d90 <col:10, col:22> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9e57d58 <col:10, col:16> '<dependent type>' lvalue
              (MemberExpr 0x9e57d38 <col:10> 'basic_ostream<_CharT, _Traits>':'basic_ostream<_CharT, _Traits>' lvalue ->_M_os 0x9e576d0
                (CXXThisExpr 0x9e57d28 <col:10> 'class std::basic_ostream::sentry *' this))))
          (CXXOperatorCallExpr 0x9e57f20 <col:27, col:56> '<dependent type>'
            (UnresolvedLookupExpr 0x9e57ec0 <col:52, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90 0x9cb91e0 0x9cb9c50 0x9cba490 0x9cbaa00 0x9db0390)
            (CallExpr 0x9e57e70 <col:27, col:50> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9e57e38 <col:27, col:42> '<dependent type>' lvalue
                (CallExpr 0x9e57e18 <col:27, col:39> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9e57de0 <col:27, col:33> '<dependent type>' lvalue
                    (MemberExpr 0x9e57dc0 <col:27> 'basic_ostream<_CharT, _Traits>':'basic_ostream<_CharT, _Traits>' lvalue ->_M_os 0x9e576d0
                      (CXXThisExpr 0x9e57db0 <col:27> 'class std::basic_ostream::sentry *' this))))))
            (UnaryOperator 0x9e57ea8 <col:55, col:56> 'int' prefix '-'
              (IntegerLiteral 0x9e57e90 <col:56> 'int' 1))))
        (CallExpr 0x9e58008 <line:413:8, col:39> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9e57f90 <col:8, col:14> '<dependent type>' lvalue
            (MemberExpr 0x9e57f70 <col:8> 'basic_ostream<_CharT, _Traits>':'basic_ostream<_CharT, _Traits>' lvalue ->_M_os 0x9e576d0
              (CXXThisExpr 0x9e57f60 <col:8> 'class std::basic_ostream::sentry *' this)))
          (DeclRefExpr 0x9e57fe4 <col:23, col:33> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6b9e0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>))


        bool operator _Bool() const (CompoundStmt 0x9e580f8 </usr/include/c++/4.6/ostream:428:7, col:23>
  (ReturnStmt 0x9e580e8 <col:9, col:16>
    (MemberExpr 0x9e580c8 <col:16> 'const _Bool' lvalue ->_M_ok 0x9e57570
      (CXXThisExpr 0x9e580b8 <col:16> 'const class std::basic_ostream::sentry *' this))))


    };
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, char __c)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> inline basic_ostream<wchar_t, std::char_traits<wchar_t> > &operator<<(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__out, wchar_t __c)template <typename _CharT, typename _Traits> inline basic_ostream<_CharT, _Traits> &operator<<(basic_ostream<_CharT, _Traits> &__out, _CharT __c) (CompoundStmt 0x9e586a8 </usr/include/c++/4.6/ostream:451:5, col:48>
  (ReturnStmt 0x9e58698 <col:7, col:45>
    (CallExpr 0x9e58670 <col:14, col:45> '<dependent type>'
      (UnresolvedLookupExpr 0x9e58590 <col:14> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfca90)
      (DeclRefExpr 0x9e585c4 <col:31> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9e583d0 '__out' 'basic_ostream<_CharT, _Traits> &')
      (CXXOperatorCallExpr 0x9e58638 <col:38, col:39> '<dependent type>'
        (UnresolvedLookupExpr 0x9e585f8 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9d5b750 0x9d68890 0x9d69b00)
        (DeclRefExpr 0x9e585dc <col:39> '_CharT' lvalue ParmVar 0x9e58410 '__c' '_CharT'))
      (IntegerLiteral 0x9e58658 <col:44> 'int' 1))))

;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, char __c)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> inline basic_ostream<wchar_t, std::char_traits<wchar_t> > &operator<<(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__out, char __c)template <typename _CharT, typename _Traits> inline basic_ostream<_CharT, _Traits> &operator<<(basic_ostream<_CharT, _Traits> &__out, char __c) (CompoundStmt 0x9e58c70 </usr/include/c++/4.6/ostream:456:5, col:43>
  (ReturnStmt 0x9e58c60 <col:7, col:40>
    (ParenExpr 0x9e58c48 <col:14, col:40> '<dependent type>'
      (CXXOperatorCallExpr 0x9e58c20 <col:15, col:39> '<dependent type>'
        (UnresolvedLookupExpr 0x9e58be0 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58b10 0x9e58560 0x9cc1bf0)
        (DeclRefExpr 0x9e58b40 <col:15> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9e58980 '__out' 'basic_ostream<_CharT, _Traits> &')
        (CallExpr 0x9e58bc0 <col:24, col:39> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9e58b70 <col:24, col:30> '<dependent type>' lvalue
            (DeclRefExpr 0x9e58b58 <col:24> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9e58980 '__out' 'basic_ostream<_CharT, _Traits> &'))
          (DeclRefExpr 0x9e58ba4 <col:36> 'char' lvalue ParmVar 0x9e589c0 '__c' 'char'))))))

;
    template <class _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, char __c)template <class _Traits> inline basic_ostream<char, _Traits> &operator<<(basic_ostream<char, _Traits> &__out, char __c) (CompoundStmt 0x9e59200 </usr/include/c++/4.6/ostream:462:5, col:48>
  (ReturnStmt 0x9e591f0 <col:7, col:45>
    (CallExpr 0x9e591c8 <col:14, col:45> '<dependent type>'
      (UnresolvedLookupExpr 0x9e59130 <col:14> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfca90)
      (DeclRefExpr 0x9e59164 <col:31> 'basic_ostream<char, _Traits>' lvalue ParmVar 0x9e58f70 '__out' 'basic_ostream<char, _Traits> &')
      (UnaryOperator 0x9e59198 <col:38, col:39> 'char *' prefix '&'
        (DeclRefExpr 0x9e5917c <col:39> 'char' lvalue ParmVar 0x9e58fb0 '__c' 'char'))
      (IntegerLiteral 0x9e591b0 <col:44> 'int' 1))))

;
    template <class _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, signed char __c)template <class _Traits> inline basic_ostream<char, _Traits> &operator<<(basic_ostream<char, _Traits> &__out, signed char __c) (CompoundStmt 0x9e59768 </usr/include/c++/4.6/ostream:468:5, col:49>
  (ReturnStmt 0x9e59758 <col:7, col:46>
    (ParenExpr 0x9e59740 <col:14, col:46> '<dependent type>'
      (CXXOperatorCallExpr 0x9e59718 <col:15, col:45> '<dependent type>'
        (UnresolvedLookupExpr 0x9e596d0 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59630 0x9e59100 0x9e58b10 0x9e58560 0x9cc1bf0)
        (DeclRefExpr 0x9e59660 <col:15> 'basic_ostream<char, _Traits>' lvalue ParmVar 0x9e59490 '__out' 'basic_ostream<char, _Traits> &')
        (CXXStaticCastExpr 0x9e596b8 <col:24, col:45> 'char' static_cast<char> <NoOp>
          (ImplicitCastExpr 0x9e596a8 <col:42> 'char' <IntegralCast>
            (ImplicitCastExpr 0x9e59698 <col:42> 'signed char' <LValueToRValue>
              (DeclRefExpr 0x9e59678 <col:42> 'signed char' lvalue ParmVar 0x9e594e0 '__c' 'signed char'))))))))

;
    template <class _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, unsigned char __c)template <class _Traits> inline basic_ostream<char, _Traits> &operator<<(basic_ostream<char, _Traits> &__out, unsigned char __c) (CompoundStmt 0x9e59cc8 </usr/include/c++/4.6/ostream:473:5, col:49>
  (ReturnStmt 0x9e59cb8 <col:7, col:46>
    (ParenExpr 0x9e59ca0 <col:14, col:46> '<dependent type>'
      (CXXOperatorCallExpr 0x9e59c78 <col:15, col:45> '<dependent type>'
        (UnresolvedLookupExpr 0x9e59c30 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59b90 0x9e59630 0x9e59100 0x9e58b10 0x9e58560 0x9cc1bf0)
        (DeclRefExpr 0x9e59bc0 <col:15> 'basic_ostream<char, _Traits>' lvalue ParmVar 0x9e599f0 '__out' 'basic_ostream<char, _Traits> &')
        (CXXStaticCastExpr 0x9e59c18 <col:24, col:45> 'char' static_cast<char> <NoOp>
          (ImplicitCastExpr 0x9e59c08 <col:42> 'char' <IntegralCast>
            (ImplicitCastExpr 0x9e59bf8 <col:42> 'unsigned char' <LValueToRValue>
              (DeclRefExpr 0x9e59bd8 <col:42> 'unsigned char' lvalue ParmVar 0x9e59a40 '__c' 'unsigned char'))))))))

;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, const char *__s)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> inline basic_ostream<wchar_t, std::char_traits<wchar_t> > &operator<<(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__out, const wchar_t *__s)template <typename _CharT, typename _Traits> inline basic_ostream<_CharT, _Traits> &operator<<(basic_ostream<_CharT, _Traits> &__out, const _CharT *__s) (CompoundStmt 0x9e5a3f0 </usr/include/c++/4.6/ostream:493:5, line:500:5>
  (IfStmt 0x9e5a3a8 <line:494:7, line:498:50>
    <<<NULL>>>
    (UnaryOperator 0x9e5a1a8 <line:494:11, col:12> '<dependent type>' prefix '!'
      (DeclRefExpr 0x9e5a190 <col:12> 'const _CharT *' lvalue ParmVar 0x9e5a010 '__s' 'const _CharT *'))
    (CallExpr 0x9e5a250 <line:495:2, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e5a1d8 <col:2, col:8> '<dependent type>' lvalue
        (DeclRefExpr 0x9e5a1bc <col:2> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9e59fa0 '__out' 'basic_ostream<_CharT, _Traits> &'))
      (DeclRefExpr 0x9e5a22c <col:17, col:27> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6b9e0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
    (CallExpr 0x9e5a380 <line:497:2, line:498:50> '<dependent type>'
      (UnresolvedLookupExpr 0x9e5a270 <line:497:2> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfca90)
      (DeclRefExpr 0x9e5a2a4 <col:19> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9e59fa0 '__out' 'basic_ostream<_CharT, _Traits> &')
      (DeclRefExpr 0x9e5a2bc <col:26> 'const _CharT *' lvalue ParmVar 0x9e5a010 '__s' 'const _CharT *')
      (CXXStaticCastExpr 0x9e5a368 <line:498:5, col:49> 'streamsize':'int' static_cast<streamsize> <Dependent>
        (CallExpr 0x9e5a340 <col:29, col:48> '<dependent type>'
          (DependentScopeDeclRefExpr 0x9e5a300 <col:29, col:38> '<dependent type>' lvalue)
          (DeclRefExpr 0x9e5a324 <col:45> 'const _CharT *' lvalue ParmVar 0x9e5a010 '__s' 'const _CharT *')))))
  (ReturnStmt 0x9e5a3e0 <line:499:7, col:14>
    (DeclRefExpr 0x9e5a3c4 <col:14> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9e59fa0 '__out' 'basic_ostream<_CharT, _Traits> &')))

;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, const char *__s)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> basic_ostream<wchar_t, std::char_traits<wchar_t> > &operator<<(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__out, const char *__s)template <typename _CharT, typename _Traits> basic_ostream<_CharT, _Traits> &operator<<(basic_ostream<_CharT, _Traits> &__out, const char *__s);
    template <class _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, const char *__s)template <class _Traits> inline basic_ostream<char, _Traits> &operator<<(basic_ostream<char, _Traits> &__out, const char *__s) (CompoundStmt 0x9e5af60 </usr/include/c++/4.6/ostream:510:5, line:517:5>
  (IfStmt 0x9e5af18 <line:511:7, line:515:50>
    <<<NULL>>>
    (UnaryOperator 0x9e5ad18 <line:511:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9e5ad08 <col:12> '_Bool' <PointerToBoolean>
        (ImplicitCastExpr 0x9e5acf8 <col:12> 'const char *' <LValueToRValue>
          (DeclRefExpr 0x9e5ace0 <col:12> 'const char *' lvalue ParmVar 0x9e5ab60 '__s' 'const char *'))))
    (CallExpr 0x9e5adc0 <line:512:2, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e5ad48 <col:2, col:8> '<dependent type>' lvalue
        (DeclRefExpr 0x9e5ad2c <col:2> 'basic_ostream<char, _Traits>' lvalue ParmVar 0x9e5ab10 '__out' 'basic_ostream<char, _Traits> &'))
      (DeclRefExpr 0x9e5ad9c <col:17, col:27> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6b9e0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
    (CallExpr 0x9e5aef0 <line:514:2, line:515:50> '<dependent type>'
      (UnresolvedLookupExpr 0x9e5ade0 <line:514:2> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfca90)
      (DeclRefExpr 0x9e5ae14 <col:19> 'basic_ostream<char, _Traits>' lvalue ParmVar 0x9e5ab10 '__out' 'basic_ostream<char, _Traits> &')
      (DeclRefExpr 0x9e5ae2c <col:26> 'const char *' lvalue ParmVar 0x9e5ab60 '__s' 'const char *')
      (CXXStaticCastExpr 0x9e5aed8 <line:515:5, col:49> 'streamsize':'int' static_cast<streamsize> <Dependent>
        (CallExpr 0x9e5aeb0 <col:29, col:48> '<dependent type>'
          (DependentScopeDeclRefExpr 0x9e5ae70 <col:29, col:38> '<dependent type>' lvalue)
          (DeclRefExpr 0x9e5ae94 <col:45> 'const char *' lvalue ParmVar 0x9e5ab60 '__s' 'const char *')))))
  (ReturnStmt 0x9e5af50 <line:516:7, col:14>
    (DeclRefExpr 0x9e5af34 <col:14> 'basic_ostream<char, _Traits>' lvalue ParmVar 0x9e5ab10 '__out' 'basic_ostream<char, _Traits> &')))

;
    template <class _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, const signed char *__s)template <class _Traits> inline basic_ostream<char, _Traits> &operator<<(basic_ostream<char, _Traits> &__out, const signed char *__s) (CompoundStmt 0x9e5b4f0 </usr/include/c++/4.6/ostream:523:5, col:61>
  (ReturnStmt 0x9e5b4e0 <col:7, col:58>
    (ParenExpr 0x9e5b4c8 <col:14, col:58> '<dependent type>'
      (CXXOperatorCallExpr 0x9e5b4a0 <col:15, col:57> '<dependent type>'
        (UnresolvedLookupExpr 0x9e5b448 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e5b3b0 0x9e5acb0 0x9e5a870 0x9e5a160 0x9e59b90 0x9e59630 0x9e59100 0x9e58b10 0x9e58560 0x9cc1bf0)
        (DeclRefExpr 0x9e5b3e0 <col:15> 'basic_ostream<char, _Traits>' lvalue ParmVar 0x9e5b1f0 '__out' 'basic_ostream<char, _Traits> &')
        (CXXReinterpretCastExpr 0x9e5b430 <col:24, col:57> 'const char *' reinterpret_cast<const char *> <BitCast>
          (ImplicitCastExpr 0x9e5b420 <col:54> 'const signed char *' <LValueToRValue>
            (DeclRefExpr 0x9e5b3f8 <col:54> 'const signed char *' lvalue ParmVar 0x9e5b260 '__s' 'const signed char *')))))))

;
    template <class _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, const unsigned char *__s)template <class _Traits> inline basic_ostream<char, _Traits> &operator<<(basic_ostream<char, _Traits> &__out, const unsigned char *__s) (CompoundStmt 0x9e5ba88 </usr/include/c++/4.6/ostream:528:5, col:61>
  (ReturnStmt 0x9e5ba78 <col:7, col:58>
    (ParenExpr 0x9e5ba60 <col:14, col:58> '<dependent type>'
      (CXXOperatorCallExpr 0x9e5ba38 <col:15, col:57> '<dependent type>'
        (UnresolvedLookupExpr 0x9e5b9d8 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e5b940 0x9e5b3b0 0x9e5acb0 0x9e5a870 0x9e5a160 0x9e59b90 0x9e59630 0x9e59100 0x9e58b10 0x9e58560 0x9cc1bf0)
        (DeclRefExpr 0x9e5b970 <col:15> 'basic_ostream<char, _Traits>' lvalue ParmVar 0x9e5b780 '__out' 'basic_ostream<char, _Traits> &')
        (CXXReinterpretCastExpr 0x9e5b9c0 <col:24, col:57> 'const char *' reinterpret_cast<const char *> <BitCast>
          (ImplicitCastExpr 0x9e5b9b0 <col:54> 'const unsigned char *' <LValueToRValue>
            (DeclRefExpr 0x9e5b988 <col:54> 'const unsigned char *' lvalue ParmVar 0x9e5b7f0 '__s' 'const unsigned char *')))))))

;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &endl(basic_ostream<char, std::char_traits<char> > &__os)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> inline basic_ostream<wchar_t, std::char_traits<wchar_t> > &endl(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__os)template <typename _CharT, typename _Traits> inline basic_ostream<_CharT, _Traits> &endl(basic_ostream<_CharT, _Traits> &__os) (CompoundStmt 0x9e5d888 </usr/include/c++/4.6/ostream:543:5, col:49>
  (ReturnStmt 0x9e5d878 <col:7, col:46>
    (CallExpr 0x9e5d858 <col:14, col:46> '<dependent type>'
      (UnresolvedLookupExpr 0x9e5d730 <col:14> '<overloaded function type>' lvalue (ADL) = '1' empty)
      (CallExpr 0x9e5d838 <col:20, col:45> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e5d778 <col:20, col:25> '<dependent type>' lvalue
          (DeclRefExpr 0x9e5d760 <col:20> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9e5d5b0 '__os' 'basic_ostream<_CharT, _Traits> &'))
        (CallExpr 0x9e5d818 <col:29, col:44> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9e5d7c8 <col:29, col:34> '<dependent type>' lvalue
            (DeclRefExpr 0x9e5d7ac <col:29> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9e5d5b0 '__os' 'basic_ostream<_CharT, _Traits> &'))
          (CharacterLiteral 0x9e5d800 <col:40> 'char'10))))))

;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &ends(basic_ostream<char, std::char_traits<char> > &__os)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> inline basic_ostream<wchar_t, std::char_traits<wchar_t> > &ends(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__os)template <typename _CharT, typename _Traits> inline basic_ostream<_CharT, _Traits> &ends(basic_ostream<_CharT, _Traits> &__os) (CompoundStmt 0x9e5dd60 </usr/include/c++/4.6/ostream:554:5, col:34>
  (ReturnStmt 0x9e5dd50 <col:7, col:31>
    (CallExpr 0x9e5dd30 <col:14, col:31> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e5dcd8 <col:14, col:19> '<dependent type>' lvalue
        (DeclRefExpr 0x9e5dcbc <col:14> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9e5db60 '__os' 'basic_ostream<_CharT, _Traits> &'))
      (CXXUnresolvedConstructExpr 0x9e5dd18 <col:23, col:30> '_CharT'))))

;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &flush(basic_ostream<char, std::char_traits<char> > &__os)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> inline basic_ostream<wchar_t, std::char_traits<wchar_t> > &flush(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__os)template <typename _CharT, typename _Traits> inline basic_ostream<_CharT, _Traits> &flush(basic_ostream<_CharT, _Traits> &__os) (CompoundStmt 0x9e5e220 </usr/include/c++/4.6/ostream:564:5, col:28>
  (ReturnStmt 0x9e5e210 <col:7, col:25>
    (CallExpr 0x9e5e1f0 <col:14, col:25> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e5e1b8 <col:14, col:19> '<dependent type>' lvalue
        (DeclRefExpr 0x9e5e19c <col:14> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9e5e040 '__os' 'basic_ostream<_CharT, _Traits> &')))))

;
}
namespace std {
    basic_ostream<_CharT, _Traits>::class sentry::sentry(basic_ostream<_CharT, _Traits> &__os) : _M_ok((CXXBoolLiteralExpr 0x9e5e958 </usr/include/c++/4.6/bits/ostream.tcc:49:13> '_Bool' false)
), _M_os((DeclRefExpr 0x9e5e9a8 </usr/include/c++/4.6/bits/ostream.tcc:49:27> 'basic_ostream<_CharT, _Traits>':'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9e5e830 '__os' 'basic_ostream<_CharT, _Traits> &')
) (CompoundStmt 0x9e5ed78 </usr/include/c++/4.6/bits/ostream.tcc:50:5, line:59:5>
  (IfStmt 0x9e5ebc0 <line:52:7, line:53:20>
    <<<NULL>>>
    (BinaryOperator 0x9e5eae0 <line:52:11, col:35> '<dependent type>' '&&'
      (CallExpr 0x9e5ea50 <col:11, col:20> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e5ea18 <col:11, col:16> '<dependent type>' lvalue
          (DeclRefExpr 0x9e5ea00 <col:11> 'basic_ostream<_CharT, _Traits>':'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9e5e830 '__os' 'basic_ostream<_CharT, _Traits> &')))
      (CallExpr 0x9e5eac0 <col:25, col:35> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e5ea88 <col:25, col:30> '<dependent type>' lvalue
          (DeclRefExpr 0x9e5ea6c <col:25> 'basic_ostream<_CharT, _Traits>':'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9e5e830 '__os' 'basic_ostream<_CharT, _Traits> &'))))
    (CallExpr 0x9e5eba0 <line:53:2, col:20> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e5eb68 <col:2, col:14> '<dependent type>' lvalue
        (CallExpr 0x9e5eb48 <col:2, col:11> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9e5eb10 <col:2, col:7> '<dependent type>' lvalue
            (DeclRefExpr 0x9e5eaf8 <col:2> 'basic_ostream<_CharT, _Traits>':'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9e5e830 '__os' 'basic_ostream<_CharT, _Traits> &')))))
    <<<NULL>>>)
  (IfStmt 0x9e5ed58 <line:55:7, line:58:33>
    <<<NULL>>>
    (CallExpr 0x9e5ec30 <line:55:11, col:21> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e5ebf8 <col:11, col:16> '<dependent type>' lvalue
        (DeclRefExpr 0x9e5ebdc <col:11> 'basic_ostream<_CharT, _Traits>':'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9e5e830 '__os' 'basic_ostream<_CharT, _Traits> &')))
    (BinaryOperator 0x9e5ec90 <line:56:2, col:10> '<dependent type>' '='
      (MemberExpr 0x9e5ec60 <col:2> '_Bool' lvalue ->_M_ok 0x9e57570
        (CXXThisExpr 0x9e5ec50 <col:2> 'class std::basic_ostream::sentry *' this))
      (CXXBoolLiteralExpr 0x9e5ec80 <col:10> '_Bool' true))
    (CallExpr 0x9e5ed38 <line:58:2, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e5ecc0 <col:2, col:7> '<dependent type>' lvalue
        (DeclRefExpr 0x9e5eca8 <col:2> 'basic_ostream<_CharT, _Traits>':'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9e5e830 '__os' 'basic_ostream<_CharT, _Traits> &'))
      (DeclRefExpr 0x9e5ed14 <col:16, col:26> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6baa0 'failbit' 'const iostate':'const enum std::_Ios_Iostate'))))


    template <typename _ValueT> basic_ostream<_CharT, _Traits> &_M_insert(_ValueT __v) (CompoundStmt 0x9e5fd08 </usr/include/c++/4.6/bits/ostream.tcc:66:7, line:88:7>
  (DeclStmt 0x9e5f4b0 <line:67:2, col:22>
    0x9e5f430 "std::basic_ostream::sentry __cerb =
      (ParenListExpr 0x9e5f490 <col:15, col:21> 'class std::basic_ostream::sentry'
        (UnaryOperator 0x9e5f478 <col:16, col:17> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9e5f468 <col:17> 'basic_ostream<_CharT, _Traits> *' this)))")
  (IfStmt 0x9e5fcb0 <line:68:2, line:86:4>
    <<<NULL>>>
    (DeclRefExpr 0x9e5f4c0 <line:68:6> 'class std::basic_ostream::sentry' lvalue Var 0x9e5f430 '__cerb' 'class std::basic_ostream::sentry')
    (CompoundStmt 0x9e5fc88 <line:69:4, line:86:4>
      (DeclStmt 0x9e5f598 <line:70:6, col:49>
        0x9e5f510 "ios_base::iostate __err =
          (ImplicitCastExpr 0x9e5f588 <col:32, col:42> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9e5f564 <col:32, col:42> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6bb00 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0x9e5f9a0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/ostream.tcc:76:8>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9e5f5a8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9e5f988 </usr/include/c++/4.6/bits/ostream.tcc:72:8, line:76:8>
          (DeclStmt 0x9e5f6f8 <line:73:3, col:63>
            0x9e5f620 "const __num_put_type &__np =
              (CallExpr 0x9e5f6d8 <col:32, col:62> '<dependent type>'
                (UnresolvedLookupExpr 0x9e5f658 <col:32> '<overloaded function type>' lvalue (ADL) = '1' 0x9e3b7e0)
                (CXXDependentScopeMemberExpr 0x9e5f6a0 <col:46, col:52> '<dependent type>' lvalue
                  (CXXThisExpr 0x9e5f690 <col:46> 'basic_ostream<_CharT, _Traits> *' this)))")
          (IfStmt 0x9e5f968 <line:74:3, line:75:24>
            <<<NULL>>>
            (CallExpr 0x9e5f890 <line:74:7, col:56> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9e5f858 <col:7, col:49> '<dependent type>' lvalue
                (CallExpr 0x9e5f828 <col:7, col:47> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9e5f720 <col:7, col:12> '<dependent type>' lvalue
                    (DeclRefExpr 0x9e5f708 <col:7> 'const __num_put_type':'const num_put<_CharT, ostreambuf_iterator<_CharT, _Traits> >' lvalue Var 0x9e5f620 '__np' 'const __num_put_type &'))
                  (UnaryOperator 0x9e5f768 <col:16, col:17> '<dependent type>' prefix '*'
                    (CXXThisExpr 0x9e5f758 <col:17> 'basic_ostream<_CharT, _Traits> *' this))
                  (UnaryOperator 0x9e5f790 <col:23, col:24> '<dependent type>' prefix '*'
                    (CXXThisExpr 0x9e5f780 <col:24> 'basic_ostream<_CharT, _Traits> *' this))
                  (CallExpr 0x9e5f7f0 <col:30, col:41> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9e5f7b8 <col:30, col:36> '<dependent type>' lvalue
                      (CXXThisExpr 0x9e5f7a8 <col:30> 'basic_ostream<_CharT, _Traits> *' this)))
                  (DeclRefExpr 0x9e5f80c <col:44> '_ValueT' lvalue ParmVar 0x9e5f170 '__v' '_ValueT'))))
            (CXXOperatorCallExpr 0x9e5f940 <line:75:5, col:24> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x9e5f930 <col:11, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9e5f918 <col:11, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9d6a3b0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x9e5f8ac <col:5> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9e5f510 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0x9e5f908 <col:14, col:24> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x9e5f8e4 <col:14, col:24> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6b9e0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0x9e5faa0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:81:8>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9e5f9c0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9e5fa88 </usr/include/c++/4.6/bits/ostream.tcc:78:8, line:81:8>
          (CallExpr 0x9e5fa58 <line:79:3, col:37> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9e5f9e0 <col:3, col:9> '<dependent type>' lvalue
              (CXXThisExpr 0x9e5f9d0 <col:3> 'basic_ostream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9e5fa34 <col:21, col:31> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6b9e0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x9e5fa78 <line:80:26>))
        <<<NULL>>>)
      (IfStmt 0x9e5fb90 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:83:47>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9e5fac0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9e5fb78 </usr/include/c++/4.6/bits/ostream.tcc:83:8, col:47>
          (CallExpr 0x9e5fb58 <col:10, col:44> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9e5fae0 <col:10, col:16> '<dependent type>' lvalue
              (CXXThisExpr 0x9e5fad0 <col:10> 'basic_ostream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9e5fb34 <col:28, col:38> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6b9e0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0x9e5fc68 <line:84:6, line:85:28>
        <<<NULL>>>
        (ImplicitCastExpr 0x9e5fbd8 <line:84:10> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0x9e5fbc8 <col:10> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9e5fbac <col:10> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9e5f510 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0x9e5fc48 <line:85:8, col:28> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9e5fbf8 <col:8, col:14> '<dependent type>' lvalue
            (CXXThisExpr 0x9e5fbe8 <col:8> 'basic_ostream<_CharT, _Traits> *' this))
          (DeclRefExpr 0x9e5fc2c <col:23> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9e5f510 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9e5fcf8 <line:87:2, col:10>
    (UnaryOperator 0x9e5fce0 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9e5fcd0 <col:10> 'basic_ostream<_CharT, _Traits> *' this))))

;
    basic_ostream<_CharT, _Traits> &operator<<(short __n) (CompoundStmt 0x9e60818 </usr/include/c++/4.6/bits/ostream.tcc:94:5, line:102:5>
  (DeclStmt 0x9e60478 <line:97:7, col:75>
    0x9e60330 "const ios_base::fmtflags __fmt =
      (CXXOperatorCallExpr 0x9e60450 <col:40, col:66> '<dependent type>'
        (UnresolvedLookupExpr 0x9e60410 <col:54, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9d5b750 0x9d68890 0x9d69b00)
        (CallExpr 0x9e603b0 <col:40, col:52> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9e60378 <col:40, col:46> '<dependent type>' lvalue
            (CXXThisExpr 0x9e60368 <col:40> 'basic_ostream<_CharT, _Traits> *' this)))
        (DeclRefExpr 0x9e603ec <col:56, col:66> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9d6b8d0 'basefield' 'const fmtflags':'const enum std::_Ios_Fmtflags'))")
  (IfStmt 0x9e607f8 <line:98:7, line:101:41>
    <<<NULL>>>
    (BinaryOperator 0x9e605e8 <line:98:11, col:56> '_Bool' '||'
      (BinaryOperator 0x9e60520 <col:11, col:30> '_Bool' '=='
        (ImplicitCastExpr 0x9e60500 <col:11> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9e604e0 <col:11> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9e60488 <col:11> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9e60330 '__fmt' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
        (ImplicitCastExpr 0x9e60510 <col:20, col:30> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9e604f0 <col:20, col:30> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9e604bc <col:20, col:30> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9d6b510 'oct' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
      (BinaryOperator 0x9e605d0 <col:37, col:56> '_Bool' '=='
        (ImplicitCastExpr 0x9e605b0 <col:37> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9e60590 <col:37> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9e60538 <col:37> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9e60330 '__fmt' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
        (ImplicitCastExpr 0x9e605c0 <col:46, col:56> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9e605a0 <col:46, col:56> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9e6056c <col:46, col:56> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9d6b3f0 'hex' 'const fmtflags':'const enum std::_Ios_Fmtflags')))))
    (ReturnStmt 0x9e60708 <line:99:2, col:70>
      (CallExpr 0x9e606e8 <col:9, col:70> '<dependent type>'
        (UnresolvedMemberExpr 0x9e60610 <col:9> '<bound member function type>' lvalue)
        (CXXStaticCastExpr 0x9e606d0 <col:19, col:69> 'long' static_cast<long> <NoOp>
          (ImplicitCastExpr 0x9e606c0 <col:37, col:68> 'long' <IntegralCast>
            (CXXStaticCastExpr 0x9e60698 <col:37, col:68> 'unsigned short' static_cast<unsigned short> <NoOp>
              (ImplicitCastExpr 0x9e60688 <col:65> 'unsigned short' <IntegralCast>
                (ImplicitCastExpr 0x9e60678 <col:65> 'short' <LValueToRValue>
                  (DeclRefExpr 0x9e6064c <col:65> 'short' lvalue ParmVar 0x9e600b0 '__n' 'short'))))))))
    (ReturnStmt 0x9e607e8 <line:101:2, col:41>
      (CallExpr 0x9e607c8 <col:9, col:41> '<dependent type>'
        (UnresolvedMemberExpr 0x9e60728 <col:9> '<bound member function type>' lvalue)
        (CXXStaticCastExpr 0x9e607b0 <col:19, col:40> 'long' static_cast<long> <NoOp>
          (ImplicitCastExpr 0x9e607a0 <col:37> 'long' <IntegralCast>
            (ImplicitCastExpr 0x9e60790 <col:37> 'short' <LValueToRValue>
              (DeclRefExpr 0x9e60764 <col:37> 'short' lvalue ParmVar 0x9e600b0 '__n' 'short'))))))))


    basic_ostream<_CharT, _Traits> &operator<<(int __n) (CompoundStmt 0x9e61318 </usr/include/c++/4.6/bits/ostream.tcc:108:5, line:116:5>
  (DeclStmt 0x9e60f78 <line:111:7, col:75>
    0x9e60e30 "const ios_base::fmtflags __fmt =
      (CXXOperatorCallExpr 0x9e60f50 <col:40, col:66> '<dependent type>'
        (UnresolvedLookupExpr 0x9e60f10 <col:54, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9d5b750 0x9d68890 0x9d69b00)
        (CallExpr 0x9e60eb0 <col:40, col:52> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9e60e78 <col:40, col:46> '<dependent type>' lvalue
            (CXXThisExpr 0x9e60e68 <col:40> 'basic_ostream<_CharT, _Traits> *' this)))
        (DeclRefExpr 0x9e60eec <col:56, col:66> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9d6b8d0 'basefield' 'const fmtflags':'const enum std::_Ios_Fmtflags'))")
  (IfStmt 0x9e612f8 <line:112:7, line:115:41>
    <<<NULL>>>
    (BinaryOperator 0x9e610e8 <line:112:11, col:56> '_Bool' '||'
      (BinaryOperator 0x9e61020 <col:11, col:30> '_Bool' '=='
        (ImplicitCastExpr 0x9e61000 <col:11> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9e60fe0 <col:11> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9e60f88 <col:11> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9e60e30 '__fmt' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
        (ImplicitCastExpr 0x9e61010 <col:20, col:30> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9e60ff0 <col:20, col:30> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9e60fbc <col:20, col:30> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9d6b510 'oct' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
      (BinaryOperator 0x9e610d0 <col:37, col:56> '_Bool' '=='
        (ImplicitCastExpr 0x9e610b0 <col:37> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9e61090 <col:37> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9e61038 <col:37> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9e60e30 '__fmt' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
        (ImplicitCastExpr 0x9e610c0 <col:46, col:56> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9e610a0 <col:46, col:56> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9e6106c <col:46, col:56> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9d6b3f0 'hex' 'const fmtflags':'const enum std::_Ios_Fmtflags')))))
    (ReturnStmt 0x9e61208 <line:113:2, col:68>
      (CallExpr 0x9e611e8 <col:9, col:68> '<dependent type>'
        (UnresolvedMemberExpr 0x9e61110 <col:9> '<bound member function type>' lvalue)
        (CXXStaticCastExpr 0x9e611d0 <col:19, col:67> 'long' static_cast<long> <NoOp>
          (ImplicitCastExpr 0x9e611c0 <col:37, col:66> 'long' <IntegralCast>
            (CXXStaticCastExpr 0x9e61198 <col:37, col:66> 'unsigned int' static_cast<unsigned int> <NoOp>
              (ImplicitCastExpr 0x9e61188 <col:63> 'unsigned int' <IntegralCast>
                (ImplicitCastExpr 0x9e61178 <col:63> 'int' <LValueToRValue>
                  (DeclRefExpr 0x9e6114c <col:63> 'int' lvalue ParmVar 0x9e60bb0 '__n' 'int'))))))))
    (ReturnStmt 0x9e612e8 <line:115:2, col:41>
      (CallExpr 0x9e612c8 <col:9, col:41> '<dependent type>'
        (UnresolvedMemberExpr 0x9e61228 <col:9> '<bound member function type>' lvalue)
        (CXXStaticCastExpr 0x9e612b0 <col:19, col:40> 'long' static_cast<long> <NoOp>
          (ImplicitCastExpr 0x9e612a0 <col:37> 'long' <IntegralCast>
            (ImplicitCastExpr 0x9e61290 <col:37> 'int' <LValueToRValue>
              (DeclRefExpr 0x9e61264 <col:37> 'int' lvalue ParmVar 0x9e60bb0 '__n' 'int'))))))))


    basic_ostream<_CharT, _Traits> &operator<<(__streambuf_type *__sbin) (CompoundStmt 0x9e62108 </usr/include/c++/4.6/bits/ostream.tcc:122:5, line:145:5>
  (DeclStmt 0x9e619b8 <line:123:7, col:50>
    0x9e61930 "ios_base::iostate __err =
      (ImplicitCastExpr 0x9e619a8 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9e61984 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6bb00 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (DeclStmt 0x9e61a50 <line:124:7, col:27>
    0x9e619d0 "std::basic_ostream::sentry __cerb =
      (ParenListExpr 0x9e61a30 <col:20, col:26> 'class std::basic_ostream::sentry'
        (UnaryOperator 0x9e61a18 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9e61a08 <col:22> 'basic_ostream<_CharT, _Traits> *' this)))")
  (IfStmt 0x9e61fd8 <line:125:7, line:141:21>
    <<<NULL>>>
    (BinaryOperator 0x9e61a90 <line:125:11, col:21> '<dependent type>' '&&'
      (DeclRefExpr 0x9e61a60 <col:11> 'class std::basic_ostream::sentry' lvalue Var 0x9e619d0 '__cerb' 'class std::basic_ostream::sentry')
      (DeclRefExpr 0x9e61a78 <col:21> '__streambuf_type *' lvalue ParmVar 0x9e616b0 '__sbin' '__streambuf_type *'))
    (CompoundStmt 0x9e61eb0 <line:126:2, line:139:2>
      (IfStmt 0x9e61ca0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/ostream.tcc:131:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9e61aa8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9e61c88 </usr/include/c++/4.6/bits/ostream.tcc:128:6, line:131:6>
          (IfStmt 0x9e61c68 <line:129:8, line:130:22>
            <<<NULL>>>
            (UnaryOperator 0x9e61b98 <line:129:12, col:52> '<dependent type>' prefix '!'
              (CallExpr 0x9e61b70 <col:13, col:52> '<dependent type>'
                (UnresolvedLookupExpr 0x9e61ab8 <col:13> '<overloaded function type>' lvalue (ADL) = '1' 0x9d8bd30)
                (DeclRefExpr 0x9e61aec <col:31> '__streambuf_type *' lvalue ParmVar 0x9e616b0 '__sbin' '__streambuf_type *')
                (CallExpr 0x9e61b50 <col:39, col:51> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9e61b18 <col:39, col:45> '<dependent type>' lvalue
                    (CXXThisExpr 0x9e61b08 <col:39> 'basic_ostream<_CharT, _Traits> *' this)))))
            (CXXOperatorCallExpr 0x9e61c40 <line:130:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x9e61c30 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9e61c18 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9d6a3b0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x9e61bac <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9e61930 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0x9e61c08 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x9e61be4 <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6baa0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0x9e61da0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:136:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9e61cc0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9e61d88 </usr/include/c++/4.6/bits/ostream.tcc:133:6, line:136:6>
          (CallExpr 0x9e61d58 <line:134:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9e61ce0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9e61cd0 <col:8> 'basic_ostream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9e61d34 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6b9e0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x9e61d78 <line:135:31>))
        <<<NULL>>>)
      (IfStmt 0x9e61e90 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:138:46>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9e61dc0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9e61e78 </usr/include/c++/4.6/bits/ostream.tcc:138:6, col:46>
          (CallExpr 0x9e61e58 <col:8, col:43> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9e61de0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9e61dd0 <col:8> 'basic_ostream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9e61e34 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6baa0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    (IfStmt 0x9e61fb8 <line:140:12, line:141:21>
      <<<NULL>>>
      (UnaryOperator 0x9e61ee8 <line:140:16, col:17> '<dependent type>' prefix '!'
        (DeclRefExpr 0x9e61ecc <col:17> '__streambuf_type *' lvalue ParmVar 0x9e616b0 '__sbin' '__streambuf_type *'))
      (CXXOperatorCallExpr 0x9e61f90 <line:141:2, col:21> 'const enum std::_Ios_Iostate' lvalue
        (ImplicitCastExpr 0x9e61f80 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9e61f68 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9d6a3b0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
        (DeclRefExpr 0x9e61efc <col:2> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9e61930 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
        (ImplicitCastExpr 0x9e61f58 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
          (DeclRefExpr 0x9e61f34 <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6b9e0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
      <<<NULL>>>))
  (IfStmt 0x9e620b0 <line:142:7, line:143:22>
    <<<NULL>>>
    (ImplicitCastExpr 0x9e62020 <line:142:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x9e62010 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9e61ff4 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9e61930 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0x9e62090 <line:143:2, col:22> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e62040 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0x9e62030 <col:2> 'basic_ostream<_CharT, _Traits> *' this))
      (DeclRefExpr 0x9e62074 <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9e61930 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0x9e620f8 <line:144:7, col:15>
    (UnaryOperator 0x9e620e0 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9e620d0 <col:15> 'basic_ostream<_CharT, _Traits> *' this))))


    basic_ostream<_CharT, _Traits> &put(char_type __c) (CompoundStmt 0x9e62f60 </usr/include/c++/4.6/bits/ostream.tcc:151:5, line:179:5>
  (DeclStmt 0x9e62780 <line:158:7, col:27>
    0x9e62700 "std::basic_ostream::sentry __cerb =
      (ParenListExpr 0x9e62760 <col:20, col:26> 'class std::basic_ostream::sentry'
        (UnaryOperator 0x9e62748 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9e62738 <col:22> 'basic_ostream<_CharT, _Traits> *' this)))")
  (IfStmt 0x9e62f08 <line:159:7, line:177:2>
    <<<NULL>>>
    (DeclRefExpr 0x9e62790 <line:159:11> 'class std::basic_ostream::sentry' lvalue Var 0x9e62700 '__cerb' 'class std::basic_ostream::sentry')
    (CompoundStmt 0x9e62ee0 <line:160:2, line:177:2>
      (DeclStmt 0x9e62868 <line:161:4, col:47>
        0x9e627e0 "ios_base::iostate __err =
          (ImplicitCastExpr 0x9e62858 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9e62834 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6bb00 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0x9e62bf8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/ostream.tcc:167:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9e62878 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9e62be0 </usr/include/c++/4.6/bits/ostream.tcc:163:6, line:167:6>
          (DeclStmt 0x9e629c0 <line:164:8, col:56>
            0x9e628b0 "const int_type __put =
              (CallExpr 0x9e629a0 <col:31, col:55> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9e62950 <col:31, col:46> '<dependent type>' lvalue
                  (CallExpr 0x9e62930 <col:31, col:43> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9e628f8 <col:31, col:37> '<dependent type>' lvalue
                      (CXXThisExpr 0x9e628e8 <col:31> 'basic_ostream<_CharT, _Traits> *' this))))
                (DeclRefExpr 0x9e62984 <col:52> 'char_type':'_CharT' lvalue ParmVar 0x9e624b0 '__c' 'char_type':'_CharT'))")
          (IfStmt 0x9e62bc0 <line:165:8, line:166:22>
            <<<NULL>>>
            (CallExpr 0x9e62ae0 <line:165:12, col:62> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9e62a18 <col:12, col:25> '<dependent type>' lvalue)
              (DeclRefExpr 0x9e62a4c <col:37> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x9e628b0 '__put' 'const int_type':'const typename _Traits::int_type')
              (CallExpr 0x9e62ac0 <col:44, col:61> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9e62a88 <col:44, col:57> '<dependent type>' lvalue)))
            (CXXOperatorCallExpr 0x9e62b98 <line:166:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x9e62b88 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9e62b70 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9d6a3b0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x9e62b04 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9e627e0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0x9e62b60 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x9e62b3c <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6b9e0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0x9e62cf8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:172:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9e62c18 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9e62ce0 </usr/include/c++/4.6/bits/ostream.tcc:169:6, line:172:6>
          (CallExpr 0x9e62cb0 <line:170:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9e62c38 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9e62c28 <col:8> 'basic_ostream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9e62c8c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6b9e0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x9e62cd0 <line:171:31>))
        <<<NULL>>>)
      (IfStmt 0x9e62de8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:174:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9e62d18 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9e62dd0 </usr/include/c++/4.6/bits/ostream.tcc:174:6, col:45>
          (CallExpr 0x9e62db0 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9e62d38 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9e62d28 <col:8> 'basic_ostream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9e62d8c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6b9e0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0x9e62ec0 <line:175:4, line:176:26>
        <<<NULL>>>
        (ImplicitCastExpr 0x9e62e30 <line:175:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0x9e62e20 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9e62e04 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9e627e0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0x9e62ea0 <line:176:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9e62e50 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x9e62e40 <col:6> 'basic_ostream<_CharT, _Traits> *' this))
          (DeclRefExpr 0x9e62e84 <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9e627e0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9e62f50 <line:178:7, col:15>
    (UnaryOperator 0x9e62f38 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9e62f28 <col:15> 'basic_ostream<_CharT, _Traits> *' this))))


    basic_ostream<_CharT, _Traits> &write(const _CharT *__s, streamsize __n) (CompoundStmt 0x9e63990 </usr/include/c++/4.6/bits/ostream.tcc:185:5, line:207:5>
  (DeclStmt 0x9e63630 <line:193:7, col:27>
    0x9e635b0 "std::basic_ostream::sentry __cerb =
      (ParenListExpr 0x9e63610 <col:20, col:26> 'class std::basic_ostream::sentry'
        (UnaryOperator 0x9e635f8 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9e635e8 <col:22> 'basic_ostream<_CharT, _Traits> *' this)))")
  (IfStmt 0x9e63938 <line:194:7, line:205:2>
    <<<NULL>>>
    (DeclRefExpr 0x9e63640 <line:194:11> 'class std::basic_ostream::sentry' lvalue Var 0x9e635b0 '__cerb' 'class std::basic_ostream::sentry')
    (CompoundStmt 0x9e63918 <line:195:2, line:205:2>
      (IfStmt 0x9e63708 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/ostream.tcc:197:28>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9e63658 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9e636f0 </usr/include/c++/4.6/bits/ostream.tcc:197:6, col:28>
          (CallExpr 0x9e636c8 <col:8, col:25> '<dependent type>'
            (MemberExpr 0x9e63678 <col:8> '<bound member function type>' ->_M_write 0x9e55be0
              (CXXThisExpr 0x9e63668 <col:8> 'basic_ostream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9e63698 <col:17> 'const _CharT *' lvalue ParmVar 0x9e63320 '__s' 'const _CharT *')
            (DeclRefExpr 0x9e636b0 <col:22> 'streamsize':'int' lvalue ParmVar 0x9e63360 '__n' 'streamsize':'int')))
        <<<NULL>>>)
      (IfStmt 0x9e63808 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:202:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9e63728 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9e637f0 </usr/include/c++/4.6/bits/ostream.tcc:199:6, line:202:6>
          (CallExpr 0x9e637c0 <line:200:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9e63748 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9e63738 <col:8> 'basic_ostream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9e6379c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6b9e0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x9e637e0 <line:201:31>))
        <<<NULL>>>)
      (IfStmt 0x9e638f8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:204:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9e63828 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9e638e0 </usr/include/c++/4.6/bits/ostream.tcc:204:6, col:45>
          (CallExpr 0x9e638c0 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9e63848 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9e63838 <col:8> 'basic_ostream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9e6389c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6b9e0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9e63980 <line:206:7, col:15>
    (UnaryOperator 0x9e63968 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9e63958 <col:15> 'basic_ostream<_CharT, _Traits> *' this))))


    basic_ostream<_CharT, _Traits> &flush() (CompoundStmt 0x9e645f0 </usr/include/c++/4.6/bits/ostream.tcc:213:5, line:233:5>
  (DeclStmt 0x9e63fc8 <line:217:7, col:50>
    0x9e63f40 "ios_base::iostate __err =
      (ImplicitCastExpr 0x9e63fb8 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9e63f94 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6bb00 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (IfStmt 0x9e642d0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/ostream.tcc:222:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9e63fd8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x9e642b8 </usr/include/c++/4.6/bits/ostream.tcc:219:2, line:222:2>
      (IfStmt 0x9e64298 <line:220:4, line:221:25>
        <<<NULL>>>
        (BinaryOperator 0x9e641c8 <line:220:8, col:54> '<dependent type>' '&&'
          (CallExpr 0x9e64030 <col:8, col:20> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9e63ff8 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9e63fe8 <col:8> 'basic_ostream<_CharT, _Traits> *' this)))
          (CXXOperatorCallExpr 0x9e641a0 <col:25, col:54> '<dependent type>'
            (UnresolvedLookupExpr 0x9e64140 <col:50, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90 0x9cb91e0 0x9cb9c50 0x9cba490 0x9cbaa00 0x9db0390)
            (CallExpr 0x9e640f0 <col:25, col:48> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9e640b8 <col:25, col:40> '<dependent type>' lvalue
                (CallExpr 0x9e64098 <col:25, col:37> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9e64060 <col:25, col:31> '<dependent type>' lvalue
                    (CXXThisExpr 0x9e64050 <col:25> 'basic_ostream<_CharT, _Traits> *' this)))))
            (UnaryOperator 0x9e64128 <col:53, col:54> 'int' prefix '-'
              (IntegerLiteral 0x9e64110 <col:54> 'int' 1))))
        (CXXOperatorCallExpr 0x9e64270 <line:221:6, col:25> 'const enum std::_Ios_Iostate' lvalue
          (ImplicitCastExpr 0x9e64260 <col:12, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9e64248 <col:12, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9d6a3b0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
          (DeclRefExpr 0x9e641e0 <col:6> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9e63f40 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
          (ImplicitCastExpr 0x9e64238 <col:15, col:25> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9e64214 <col:15, col:25> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6b9e0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0x9e643d0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:227:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9e642f0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9e643b8 </usr/include/c++/4.6/bits/ostream.tcc:224:2, line:227:2>
      (CallExpr 0x9e64388 <line:225:4, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e64310 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x9e64300 <col:4> 'basic_ostream<_CharT, _Traits> *' this))
        (DeclRefExpr 0x9e64364 <col:22, col:32> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6b9e0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
      (NullStmt 0x9e643a8 <line:226:27>))
    <<<NULL>>>)
  (IfStmt 0x9e644c0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:229:41>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9e643f0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9e644a8 </usr/include/c++/4.6/bits/ostream.tcc:229:2, col:41>
      (CallExpr 0x9e64488 <col:4, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e64410 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x9e64400 <col:4> 'basic_ostream<_CharT, _Traits> *' this))
        (DeclRefExpr 0x9e64464 <col:22, col:32> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6b9e0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (IfStmt 0x9e64598 <line:230:7, line:231:22>
    <<<NULL>>>
    (ImplicitCastExpr 0x9e64508 <line:230:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x9e644f8 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9e644dc <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9e63f40 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0x9e64578 <line:231:2, col:22> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e64528 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0x9e64518 <col:2> 'basic_ostream<_CharT, _Traits> *' this))
      (DeclRefExpr 0x9e6455c <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9e63f40 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0x9e645e0 <line:232:7, col:15>
    (UnaryOperator 0x9e645c8 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9e645b8 <col:15> 'basic_ostream<_CharT, _Traits> *' this))))


    typename basic_ostream<_CharT, _Traits>::pos_type tellp() (CompoundStmt 0x9e65120 </usr/include/c++/4.6/bits/ostream.tcc:239:5, line:254:5>
  (DeclStmt 0x9e64c80 <line:240:7, col:36>
    0x9e64bf0 "pos_type __ret =
      (CXXUnresolvedConstructExpr 0x9e64c60 <col:24, col:35> 'pos_type':'typename _Traits::pos_type'
        (UnaryOperator 0x9e64c48 <col:33, col:34> 'int' prefix '-'
          (IntegerLiteral 0x9e64c30 <col:34> 'int' 1)))")
  (IfStmt 0x9e64ee8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/ostream.tcc:245:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9e64c90 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x9e64ed0 </usr/include/c++/4.6/bits/ostream.tcc:242:2, line:245:2>
      (IfStmt 0x9e64eb0 <line:243:4, line:244:71>
        <<<NULL>>>
        (UnaryOperator 0x9e64d08 <line:243:8, col:20> '<dependent type>' prefix '!'
          (CallExpr 0x9e64ce8 <col:9, col:20> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9e64cb0 <col:9, col:15> '<dependent type>' lvalue
              (CXXThisExpr 0x9e64ca0 <col:9> 'basic_ostream<_CharT, _Traits> *' this))))
        (BinaryOperator 0x9e64e98 <line:244:6, col:71> '<dependent type>' '='
          (DeclRefExpr 0x9e64d1c <col:6> 'pos_type':'typename _Traits::pos_type' lvalue Var 0x9e64bf0 '__ret' 'pos_type':'typename _Traits::pos_type')
          (CallExpr 0x9e64e70 <col:14, col:71> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9e64da0 <col:14, col:29> '<dependent type>' lvalue
              (CallExpr 0x9e64d80 <col:14, col:26> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9e64d48 <col:14, col:20> '<dependent type>' lvalue
                  (CXXThisExpr 0x9e64d38 <col:14> 'basic_ostream<_CharT, _Traits> *' this))))
            (IntegerLiteral 0x9e64dd8 <col:40> 'int' 0)
            (DeclRefExpr 0x9e64e0c <col:43, col:53> 'const seekdir':'const enum std::_Ios_Seekdir' lvalue Var 0x9d6bea0 'cur' 'const seekdir':'const enum std::_Ios_Seekdir')
            (DeclRefExpr 0x9e64e4c <col:58, col:68> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9d6bd30 'out' 'const openmode':'const enum std::_Ios_Openmode')))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0x9e64fe8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:250:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9e64f08 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9e64fd0 </usr/include/c++/4.6/bits/ostream.tcc:247:2, line:250:2>
      (CallExpr 0x9e64fa0 <line:248:4, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e64f28 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x9e64f18 <col:4> 'basic_ostream<_CharT, _Traits> *' this))
        (DeclRefExpr 0x9e64f7c <col:22, col:32> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6b9e0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
      (NullStmt 0x9e64fc0 <line:249:27>))
    <<<NULL>>>)
  (IfStmt 0x9e650d8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:252:41>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9e65008 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9e650c0 </usr/include/c++/4.6/bits/ostream.tcc:252:2, col:41>
      (CallExpr 0x9e650a0 <col:4, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e65028 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x9e65018 <col:4> 'basic_ostream<_CharT, _Traits> *' this))
        (DeclRefExpr 0x9e6507c <col:22, col:32> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6b9e0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (ReturnStmt 0x9e65110 <line:253:7, col:14>
    (DeclRefExpr 0x9e650f4 <col:14> 'pos_type':'typename _Traits::pos_type' lvalue Var 0x9e64bf0 '__ret' 'pos_type':'typename _Traits::pos_type')))


    basic_ostream<_CharT, _Traits> &seekp(pos_type __pos) (CompoundStmt 0x9e6a090 </usr/include/c++/4.6/bits/ostream.tcc:260:5, line:286:5>
  (DeclStmt 0x9e69918 <line:261:7, col:50>
    0x9e69890 "ios_base::iostate __err =
      (ImplicitCastExpr 0x9e69908 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9e698e4 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6bb00 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (IfStmt 0x9e69d70 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/ostream.tcc:275:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9e69928 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x9e69d58 </usr/include/c++/4.6/bits/ostream.tcc:263:2, line:275:2>
      (IfStmt 0x9e69d38 <line:264:4, line:274:6>
        <<<NULL>>>
        (UnaryOperator 0x9e699a0 <line:264:8, col:20> '<dependent type>' prefix '!'
          (CallExpr 0x9e69980 <col:9, col:20> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9e69948 <col:9, col:15> '<dependent type>' lvalue
              (CXXThisExpr 0x9e69938 <col:9> 'basic_ostream<_CharT, _Traits> *' this))))
        (CompoundStmt 0x9e69d20 <line:265:6, line:274:6>
          (DeclStmt 0x9e69b18 <line:268:8, line:269:27>
            0x9e699c0 "const pos_type __p =
              (CallExpr 0x9e69af0 <line:268:29, line:269:26> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9e69a60 <line:268:29, col:44> '<dependent type>' lvalue
                  (CallExpr 0x9e69a40 <col:29, col:41> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9e69a08 <col:29, col:35> '<dependent type>' lvalue
                      (CXXThisExpr 0x9e699f8 <col:29> 'basic_ostream<_CharT, _Traits> *' this))))
                (DeclRefExpr 0x9e69a94 <col:55> 'pos_type':'typename _Traits::pos_type' lvalue ParmVar 0x9e654d0 '__pos' 'pos_type':'typename _Traits::pos_type')
                (DeclRefExpr 0x9e69acc <line:269:13, col:23> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9d6bd30 'out' 'const openmode':'const enum std::_Ios_Openmode'))")
          (IfStmt 0x9e69d00 <line:272:8, line:273:22>
            <<<NULL>>>
            (CXXOperatorCallExpr 0x9e69c20 <line:272:12, col:40> '<dependent type>'
              (UnresolvedLookupExpr 0x9e69bc0 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90 0x9cb91e0 0x9cb9c50 0x9cba490 0x9cbaa00 0x9db0390)
              (DeclRefExpr 0x9e69b28 <col:12> 'const pos_type':'const typename _Traits::pos_type' lvalue Var 0x9e699c0 '__p' 'const pos_type':'const typename _Traits::pos_type')
              (CXXUnresolvedConstructExpr 0x9e69ba0 <col:19, col:40> 'pos_type':'typename _Traits::pos_type'
                (CXXUnresolvedConstructExpr 0x9e69b80 <col:28, col:39> 'off_type':'typename _Traits::off_type'
                  (UnaryOperator 0x9e69b68 <col:37, col:38> 'int' prefix '-'
                    (IntegerLiteral 0x9e69b50 <col:38> 'int' 1)))))
            (CXXOperatorCallExpr 0x9e69cd8 <line:273:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x9e69cc8 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9e69cb0 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9d6a3b0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x9e69c44 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9e69890 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0x9e69ca0 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x9e69c7c <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6baa0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0x9e69e70 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:280:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9e69d90 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9e69e58 </usr/include/c++/4.6/bits/ostream.tcc:277:2, line:280:2>
      (CallExpr 0x9e69e28 <line:278:4, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e69db0 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x9e69da0 <col:4> 'basic_ostream<_CharT, _Traits> *' this))
        (DeclRefExpr 0x9e69e04 <col:22, col:32> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6b9e0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
      (NullStmt 0x9e69e48 <line:279:27>))
    <<<NULL>>>)
  (IfStmt 0x9e69f60 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:282:41>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9e69e90 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9e69f48 </usr/include/c++/4.6/bits/ostream.tcc:282:2, col:41>
      (CallExpr 0x9e69f28 <col:4, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e69eb0 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x9e69ea0 <col:4> 'basic_ostream<_CharT, _Traits> *' this))
        (DeclRefExpr 0x9e69f04 <col:22, col:32> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6b9e0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (IfStmt 0x9e6a038 <line:283:7, line:284:22>
    <<<NULL>>>
    (ImplicitCastExpr 0x9e69fa8 <line:283:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x9e69f98 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9e69f7c <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9e69890 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0x9e6a018 <line:284:2, col:22> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e69fc8 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0x9e69fb8 <col:2> 'basic_ostream<_CharT, _Traits> *' this))
      (DeclRefExpr 0x9e69ffc <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9e69890 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0x9e6a080 <line:285:7, col:15>
    (UnaryOperator 0x9e6a068 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9e6a058 <col:15> 'basic_ostream<_CharT, _Traits> *' this))))


    basic_ostream<_CharT, _Traits> &seekp(off_type __off, ios_base::seekdir __dir) (CompoundStmt 0x9e6af48 </usr/include/c++/4.6/bits/ostream.tcc:292:5, line:318:5>
  (DeclStmt 0x9e6a7b8 <line:293:7, col:50>
    0x9e6a730 "ios_base::iostate __err =
      (ImplicitCastExpr 0x9e6a7a8 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9e6a784 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6bb00 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (IfStmt 0x9e6ac28 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/ostream.tcc:307:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9e6a7c8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x9e6ac10 </usr/include/c++/4.6/bits/ostream.tcc:295:2, line:307:2>
      (IfStmt 0x9e6abf0 <line:296:4, line:306:6>
        <<<NULL>>>
        (UnaryOperator 0x9e6a840 <line:296:8, col:20> '<dependent type>' prefix '!'
          (CallExpr 0x9e6a820 <col:9, col:20> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9e6a7e8 <col:9, col:15> '<dependent type>' lvalue
              (CXXThisExpr 0x9e6a7d8 <col:9> 'basic_ostream<_CharT, _Traits> *' this))))
        (CompoundStmt 0x9e6abd8 <line:297:6, line:306:6>
          (DeclStmt 0x9e6a9d0 <line:300:8, line:301:27>
            0x9e6a860 "const pos_type __p =
              (CallExpr 0x9e6a9a8 <line:300:29, line:301:26> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9e6a900 <line:300:29, col:44> '<dependent type>' lvalue
                  (CallExpr 0x9e6a8e0 <col:29, col:41> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9e6a8a8 <col:29, col:35> '<dependent type>' lvalue
                      (CXXThisExpr 0x9e6a898 <col:29> 'basic_ostream<_CharT, _Traits> *' this))))
                (DeclRefExpr 0x9e6a934 <col:55> 'off_type':'typename _Traits::off_type' lvalue ParmVar 0x9e6a440 '__off' 'off_type':'typename _Traits::off_type')
                (DeclRefExpr 0x9e6a94c <col:62> 'class ios_base::seekdir':'enum std::_Ios_Seekdir' lvalue ParmVar 0x9e6a4b0 '__dir' 'class ios_base::seekdir':'enum std::_Ios_Seekdir')
                (DeclRefExpr 0x9e6a984 <line:301:13, col:23> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9d6bd30 'out' 'const openmode':'const enum std::_Ios_Openmode'))")
          (IfStmt 0x9e6abb8 <line:304:8, line:305:22>
            <<<NULL>>>
            (CXXOperatorCallExpr 0x9e6aad8 <line:304:12, col:40> '<dependent type>'
              (UnresolvedLookupExpr 0x9e6aa78 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90 0x9cb91e0 0x9cb9c50 0x9cba490 0x9cbaa00 0x9db0390)
              (DeclRefExpr 0x9e6a9e0 <col:12> 'const pos_type':'const typename _Traits::pos_type' lvalue Var 0x9e6a860 '__p' 'const pos_type':'const typename _Traits::pos_type')
              (CXXUnresolvedConstructExpr 0x9e6aa58 <col:19, col:40> 'pos_type':'typename _Traits::pos_type'
                (CXXUnresolvedConstructExpr 0x9e6aa38 <col:28, col:39> 'off_type':'typename _Traits::off_type'
                  (UnaryOperator 0x9e6aa20 <col:37, col:38> 'int' prefix '-'
                    (IntegerLiteral 0x9e6aa08 <col:38> 'int' 1)))))
            (CXXOperatorCallExpr 0x9e6ab90 <line:305:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x9e6ab80 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9e6ab68 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9d6a3b0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x9e6aafc <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9e6a730 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0x9e6ab58 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x9e6ab34 <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6baa0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0x9e6ad28 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:312:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9e6ac48 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9e6ad10 </usr/include/c++/4.6/bits/ostream.tcc:309:2, line:312:2>
      (CallExpr 0x9e6ace0 <line:310:4, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e6ac68 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x9e6ac58 <col:4> 'basic_ostream<_CharT, _Traits> *' this))
        (DeclRefExpr 0x9e6acbc <col:22, col:32> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6b9e0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
      (NullStmt 0x9e6ad00 <line:311:27>))
    <<<NULL>>>)
  (IfStmt 0x9e6ae18 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:314:41>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9e6ad48 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9e6ae00 </usr/include/c++/4.6/bits/ostream.tcc:314:2, col:41>
      (CallExpr 0x9e6ade0 <col:4, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e6ad68 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x9e6ad58 <col:4> 'basic_ostream<_CharT, _Traits> *' this))
        (DeclRefExpr 0x9e6adbc <col:22, col:32> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6b9e0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (IfStmt 0x9e6aef0 <line:315:7, line:316:22>
    <<<NULL>>>
    (ImplicitCastExpr 0x9e6ae60 <line:315:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x9e6ae50 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9e6ae34 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9e6a730 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0x9e6aed0 <line:316:2, col:22> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e6ae80 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0x9e6ae70 <col:2> 'basic_ostream<_CharT, _Traits> *' this))
      (DeclRefExpr 0x9e6aeb4 <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9e6a730 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0x9e6af38 <line:317:7, col:15>
    (UnaryOperator 0x9e6af20 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9e6af10 <col:15> 'basic_ostream<_CharT, _Traits> *' this))))


    template <typename _CharT = char, typename _Traits = std::char_traits<char>> basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, const char *__s)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> basic_ostream<wchar_t, std::char_traits<wchar_t> > &operator<<(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__out, const char *__s)template <typename _CharT, typename _Traits> basic_ostream<_CharT, _Traits> &operator<<(basic_ostream<_CharT, _Traits> &__out, const char *__s) (CompoundStmt 0x9e6c348 </usr/include/c++/4.6/bits/ostream.tcc:323:5, line:355:5>
  (IfStmt 0x9e6c300 <line:324:7, line:353:2>
    <<<NULL>>>
    (UnaryOperator 0x9e6b438 <line:324:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9e6b428 <col:12> '_Bool' <PointerToBoolean>
        (ImplicitCastExpr 0x9e6b418 <col:12> 'const char *' <LValueToRValue>
          (DeclRefExpr 0x9e6b3fc <col:12> 'const char *' lvalue ParmVar 0x9e6b280 '__s' 'const char *'))))
    (CallExpr 0x9e6b4e0 <line:325:2, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e6b468 <col:2, col:8> '<dependent type>' lvalue
        (DeclRefExpr 0x9e6b44c <col:2> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9e6b230 '__out' 'basic_ostream<_CharT, _Traits> &'))
      (DeclRefExpr 0x9e6b4bc <col:17, col:27> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6b9e0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
    (CompoundStmt 0x9e6c2e0 <line:327:2, line:353:2>
      (DeclStmt 0x9e6b658 <line:330:4, col:56>
        0x9e6b510 "const size_t __clen =
          (CallExpr 0x9e6b628 <col:26, col:55> 'size_t':'unsigned int'
            (ImplicitCastExpr 0x9e6b618 <col:26, col:45> 'size_t (*)(const char_type *)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9e6b5c0 <col:26, col:45> 'size_t (const char_type *)' lvalue CXXMethod 0x9baf930 'length' 'size_t (const char_type *)'))
            (ImplicitCastExpr 0x9e6b648 <col:52> 'const char *' <LValueToRValue>
              (DeclRefExpr 0x9e6b5e0 <col:52> 'const char *' lvalue ParmVar 0x9e6b280 '__s' 'const char *')))")
      (IfStmt 0x9e6c0c0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/ostream.tcc:345:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9e6b668 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9e6c0a0 </usr/include/c++/4.6/bits/ostream.tcc:332:6, line:345:6>
          (DeclStmt 0x9e6bca8 <line:333:8, line:339:35>
            0x9e6b680 "struct __ptr_guard;"
            0x9e6bbb0 "struct __ptr_guard __pg =
              (ParenListExpr 0x9e6bc80 <col:15, col:34> 'struct __ptr_guard':'struct std::__ptr_guard'
                (CXXNewExpr 0x9e6bc40 <col:16, col:20> '_CharT *'
                  (DeclRefExpr 0x9e6bbe4 <col:27> 'const size_t':'const unsigned int' lvalue Var 0x9e6b510 '__clen' 'const size_t':'const unsigned int')))")
          (DeclStmt 0x9e6bd78 <line:341:8, col:35>
            0x9e6bcd0 "_CharT *__ws =
              (CallExpr 0x9e6bd58 <col:23, col:34> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9e6bd20 <col:23, col:28> '<dependent type>' lvalue
                  (DeclRefExpr 0x9e6bd04 <col:23> 'struct __ptr_guard':'struct std::__ptr_guard' lvalue Var 0x9e6bbb0 '__pg' 'struct __ptr_guard':'struct std::__ptr_guard')))")
          (ForStmt 0x9e6bfd0 <line:342:8, line:343:35>
            (DeclStmt 0x9e6bdf0 <line:342:13, col:28>
              0x9e6bd90 "size_t __i =
                (ImplicitCastExpr 0x9e6bde0 <col:27> 'size_t':'unsigned int' <IntegralCast>
                  (IntegerLiteral 0x9e6bdc8 <col:27> 'int' 0))")
            <<<NULL>>>
            (BinaryOperator 0x9e6be50 <col:30, col:36> '_Bool' '<'
              (ImplicitCastExpr 0x9e6be30 <col:30> 'size_t':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0x9e6be00 <col:30> 'size_t':'unsigned int' lvalue Var 0x9e6bd90 '__i' 'size_t':'unsigned int'))
              (ImplicitCastExpr 0x9e6be40 <col:36> 'size_t':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0x9e6be18 <col:36> 'const size_t':'const unsigned int' lvalue Var 0x9e6b510 '__clen' 'const size_t':'const unsigned int')))
            (UnaryOperator 0x9e6be80 <col:44, col:46> 'size_t':'unsigned int' lvalue prefix '++'
              (DeclRefExpr 0x9e6be68 <col:46> 'size_t':'unsigned int' lvalue Var 0x9e6bd90 '__i' 'size_t':'unsigned int'))
            (BinaryOperator 0x9e6bfb8 <line:343:3, col:35> '<dependent type>' '='
              (ArraySubscriptExpr 0x9e6bec8 <col:3, col:11> '<dependent type>' lvalue
                (DeclRefExpr 0x9e6be94 <col:3> '_CharT *' lvalue Var 0x9e6bcd0 '__ws' '_CharT *')
                (DeclRefExpr 0x9e6beac <col:8> 'size_t':'unsigned int' lvalue Var 0x9e6bd90 '__i' 'size_t':'unsigned int'))
              (CallExpr 0x9e6bf98 <col:15, col:35> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9e6bef8 <col:15, col:21> '<dependent type>' lvalue
                  (DeclRefExpr 0x9e6bedc <col:15> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9e6b230 '__out' 'basic_ostream<_CharT, _Traits> &'))
                (ArraySubscriptExpr 0x9e6bf80 <col:27, col:34> 'const char' lvalue
                  (ImplicitCastExpr 0x9e6bf60 <col:27> 'const char *' <LValueToRValue>
                    (DeclRefExpr 0x9e6bf2c <col:27> 'const char *' lvalue ParmVar 0x9e6b280 '__s' 'const char *'))
                  (ImplicitCastExpr 0x9e6bf70 <col:31> 'size_t':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0x9e6bf44 <col:31> 'size_t':'unsigned int' lvalue Var 0x9e6bd90 '__i' 'size_t':'unsigned int'))))))
          (CallExpr 0x9e6c078 <line:344:8, col:44> '<dependent type>'
            (UnresolvedLookupExpr 0x9e6bff8 <col:8> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfca90)
            (DeclRefExpr 0x9e6c02c <col:25> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9e6b230 '__out' 'basic_ostream<_CharT, _Traits> &')
            (DeclRefExpr 0x9e6c044 <col:32> '_CharT *' lvalue Var 0x9e6bcd0 '__ws' '_CharT *')
            (DeclRefExpr 0x9e6c05c <col:38> 'const size_t':'const unsigned int' lvalue Var 0x9e6b510 '__clen' 'const size_t':'const unsigned int')))
        <<<NULL>>>)
      (IfStmt 0x9e6c1c8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:350:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9e6c0e0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9e6c1b0 </usr/include/c++/4.6/bits/ostream.tcc:347:6, line:350:6>
          (CallExpr 0x9e6c180 <line:348:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9e6c108 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0x9e6c0f0 <col:8> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9e6b230 '__out' 'basic_ostream<_CharT, _Traits> &'))
            (DeclRefExpr 0x9e6c15c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6b9e0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x9e6c1a0 <line:349:31>))
        <<<NULL>>>)
      (IfStmt 0x9e6c2c0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:352:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9e6c1e8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9e6c2a8 </usr/include/c++/4.6/bits/ostream.tcc:352:6, col:45>
          (CallExpr 0x9e6c288 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9e6c210 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0x9e6c1f8 <col:8> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9e6b230 '__out' 'basic_ostream<_CharT, _Traits> &'))
            (DeclRefExpr 0x9e6c264 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6b9e0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)))
  (ReturnStmt 0x9e6c338 <line:354:7, col:14>
    (DeclRefExpr 0x9e6c31c <col:14> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9e6b230 '__out' 'basic_ostream<_CharT, _Traits> &')))

;
    class basic_ostream : virtual public basic_ios<char, std::char_traits<char> > {
        class basic_ostream;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef basic_streambuf<char, std::char_traits<char> > __streambuf_type;
        typedef basic_ios<char, std::char_traits<char> > __ios_type;
        typedef basic_ostream<char, std::char_traits<char> > __ostream_type;
        typedef num_put<char, ostreambuf_iterator<char, std::char_traits<char> > > __num_put_type;
        typedef ctype<char> __ctype_type;
        basic_ostream(__streambuf_type *__sb);
        virtual void ~basic_ostream();
        class sentry {
            class sentry;
            bool _M_ok;
            basic_ostream<char, std::char_traits<char> > &_M_os;
        public:
        public:
            sentry(basic_ostream<char, std::char_traits<char> > &__os);
            void ~sentry();
            bool operator _Bool() const;
        };
        ;
        __ostream_type &operator<<(__ostream_type &(*__pf)(__ostream_type &));
        __ostream_type &operator<<(__ios_type &(*__pf)(__ios_type &));
        __ostream_type &operator<<(std::ios_base &(*__pf)(std::ios_base &));
        __ostream_type &operator<<(long __n);
        __ostream_type &operator<<(unsigned long __n);
        __ostream_type &operator<<(bool __n);
        __ostream_type &operator<<(short __n);
        __ostream_type &operator<<(unsigned short __n);
        __ostream_type &operator<<(int __n);
        __ostream_type &operator<<(unsigned int __n);
        __ostream_type &operator<<(long long __n);
        __ostream_type &operator<<(unsigned long long __n);
        __ostream_type &operator<<(double __f);
        __ostream_type &operator<<(float __f);
        __ostream_type &operator<<(long double __f);
        __ostream_type &operator<<(const void *__p);
        __ostream_type &operator<<(__streambuf_type *__sb);
        __ostream_type &put(char_type __c);
        void _M_write(const char_type *__s, streamsize __n);
        __ostream_type &write(const char_type *__s, streamsize __n);
        __ostream_type &flush();
        pos_type tellp();
        __ostream_type &seekp(pos_type);
        __ostream_type &seekp(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_ostream();
        template <typename _ValueT = long> __ostream_type &_M_insert(long __v)template <typename _ValueT = long long> __ostream_type &_M_insert(long long __v)template <typename _ValueT = bool> __ostream_type &_M_insert(bool __v)template <typename _ValueT = unsigned long> __ostream_type &_M_insert(unsigned long __v)template <typename _ValueT = double> __ostream_type &_M_insert(double __v)template <typename _ValueT = unsigned long long> __ostream_type &_M_insert(unsigned long long __v)template <typename _ValueT = long double> __ostream_type &_M_insert(long double __v)template <typename _ValueT = const void *> __ostream_type &_M_insert(const void *__v)template <typename _ValueT> __ostream_type &_M_insert(_ValueT __v);
        inline std::basic_ostream<char> &operator=(const std::basic_ostream<char> &);
        inline basic_ostream(const std::basic_ostream<char> &);
    };
    class basic_ostream : virtual public basic_ios<wchar_t, std::char_traits<wchar_t> > {
        class basic_ostream;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef basic_streambuf<wchar_t, std::char_traits<wchar_t> > __streambuf_type;
        typedef basic_ios<wchar_t, std::char_traits<wchar_t> > __ios_type;
        typedef basic_ostream<wchar_t, std::char_traits<wchar_t> > __ostream_type;
        typedef num_put<wchar_t, ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_put_type;
        typedef ctype<wchar_t> __ctype_type;
        basic_ostream(__streambuf_type *__sb);
        virtual void ~basic_ostream();
        class sentry {
            class sentry;
            bool _M_ok;
            basic_ostream<wchar_t, std::char_traits<wchar_t> > &_M_os;
        public:
        public:
            sentry(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__os);
            void ~sentry();
            bool operator _Bool() const;
        };
        ;
        __ostream_type &operator<<(__ostream_type &(*__pf)(__ostream_type &));
        __ostream_type &operator<<(__ios_type &(*__pf)(__ios_type &));
        __ostream_type &operator<<(std::ios_base &(*__pf)(std::ios_base &));
        __ostream_type &operator<<(long __n);
        __ostream_type &operator<<(unsigned long __n);
        __ostream_type &operator<<(bool __n);
        __ostream_type &operator<<(short __n);
        __ostream_type &operator<<(unsigned short __n);
        __ostream_type &operator<<(int __n);
        __ostream_type &operator<<(unsigned int __n);
        __ostream_type &operator<<(long long __n);
        __ostream_type &operator<<(unsigned long long __n);
        __ostream_type &operator<<(double __f);
        __ostream_type &operator<<(float __f);
        __ostream_type &operator<<(long double __f);
        __ostream_type &operator<<(const void *__p);
        __ostream_type &operator<<(__streambuf_type *__sb);
        __ostream_type &put(char_type __c);
        void _M_write(const char_type *__s, streamsize __n);
        __ostream_type &write(const char_type *__s, streamsize __n);
        __ostream_type &flush();
        pos_type tellp();
        __ostream_type &seekp(pos_type);
        __ostream_type &seekp(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_ostream();
        template <typename _ValueT = long> __ostream_type &_M_insert(long __v)template <typename _ValueT = long long> __ostream_type &_M_insert(long long __v)template <typename _ValueT = bool> __ostream_type &_M_insert(bool __v)template <typename _ValueT = unsigned long> __ostream_type &_M_insert(unsigned long __v)template <typename _ValueT = double> __ostream_type &_M_insert(double __v)template <typename _ValueT = unsigned long long> __ostream_type &_M_insert(unsigned long long __v)template <typename _ValueT = long double> __ostream_type &_M_insert(long double __v)template <typename _ValueT = const void *> __ostream_type &_M_insert(const void *__v)template <typename _ValueT> __ostream_type &_M_insert(_ValueT __v);
        inline std::basic_ostream<wchar_t> &operator=(const std::basic_ostream<wchar_t> &);
        inline basic_ostream(const std::basic_ostream<wchar_t> &);
    };
}
namespace std {
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_istream : virtual public basic_ios<char, std::char_traits<char> > {
        class basic_istream;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef basic_streambuf<char, std::char_traits<char> > __streambuf_type;
        typedef basic_ios<char, std::char_traits<char> > __ios_type;
        typedef basic_istream<char, std::char_traits<char> > __istream_type;
        typedef num_get<char, istreambuf_iterator<char, std::char_traits<char> > > __num_get_type;
        typedef ctype<char> __ctype_type;
    protected:
    protected:
        streamsize _M_gcount;
    public:
    public:
        basic_istream(__streambuf_type *__sb);
        virtual void ~basic_istream();
        class sentry {
            class sentry;
            bool _M_ok;
        public:
        public:
            typedef std::char_traits<char> traits_type;
            typedef basic_streambuf<char, std::char_traits<char> > __streambuf_type;
            typedef basic_istream<char, std::char_traits<char> > __istream_type;
            typedef typename __istream_type::__ctype_type __ctype_type;
            typedef typename char_traits<char>::int_type __int_type;
            sentry(basic_istream<char, std::char_traits<char> > &__is, bool __noskipws);
            bool operator _Bool() const;
        };
        ;
        __istream_type &operator>>(__istream_type &(*__pf)(__istream_type &));
        __istream_type &operator>>(__ios_type &(*__pf)(__ios_type &));
        __istream_type &operator>>(std::ios_base &(*__pf)(std::ios_base &));
        __istream_type &operator>>(bool &__n);
        __istream_type &operator>>(short &__n);
        __istream_type &operator>>(unsigned short &__n);
        __istream_type &operator>>(int &__n);
        __istream_type &operator>>(unsigned int &__n);
        __istream_type &operator>>(long &__n);
        __istream_type &operator>>(unsigned long &__n);
        __istream_type &operator>>(long long &__n);
        __istream_type &operator>>(unsigned long long &__n);
        __istream_type &operator>>(float &__f);
        __istream_type &operator>>(double &__f);
        __istream_type &operator>>(long double &__f);
        __istream_type &operator>>(void *&__p);
        __istream_type &operator>>(__streambuf_type *__sb);
        streamsize gcount() const;
        int_type get();
        __istream_type &get(char_type &__c);
        __istream_type &get(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &get(char_type *__s, streamsize __n);
        __istream_type &get(__streambuf_type &__sb, char_type __delim);
        __istream_type &get(__streambuf_type &__sb);
        __istream_type &getline(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &getline(char_type *__s, streamsize __n);
        __istream_type &ignore();
        __istream_type &ignore(streamsize __n);
        __istream_type &ignore(streamsize __n, int_type __delim);
        int_type peek();
        __istream_type &read(char_type *__s, streamsize __n);
        streamsize readsome(char_type *__s, streamsize __n);
        __istream_type &putback(char_type __c);
        __istream_type &unget();
        int sync();
        pos_type tellg();
        __istream_type &seekg(pos_type);
        __istream_type &seekg(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_istream();
        template <typename _ValueT = unsigned int> __istream_type &_M_extract(unsigned int &__v)template <typename _ValueT = long> __istream_type &_M_extract(long &__v)template <typename _ValueT = long long> __istream_type &_M_extract(long long &__v)template <typename _ValueT = void *> __istream_type &_M_extract(void *&__v)template <typename _ValueT = bool> __istream_type &_M_extract(bool &__v)template <typename _ValueT = unsigned long> __istream_type &_M_extract(unsigned long &__v)template <typename _ValueT = double> __istream_type &_M_extract(double &__v)template <typename _ValueT = unsigned short> __istream_type &_M_extract(unsigned short &__v)template <typename _ValueT = unsigned long long> __istream_type &_M_extract(unsigned long long &__v)template <typename _ValueT = long double> __istream_type &_M_extract(long double &__v)template <typename _ValueT = float> __istream_type &_M_extract(float &__v)template <typename _ValueT> __istream_type &_M_extract(_ValueT &__v);
        inline std::basic_istream<char> &operator=(const std::basic_istream<char> &);
        inline basic_istream(const std::basic_istream<char> &);
    }
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_istream : virtual public basic_ios<wchar_t, std::char_traits<wchar_t> > {
        class basic_istream;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef basic_streambuf<wchar_t, std::char_traits<wchar_t> > __streambuf_type;
        typedef basic_ios<wchar_t, std::char_traits<wchar_t> > __ios_type;
        typedef basic_istream<wchar_t, std::char_traits<wchar_t> > __istream_type;
        typedef num_get<wchar_t, istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_get_type;
        typedef ctype<wchar_t> __ctype_type;
    protected:
    protected:
        streamsize _M_gcount;
    public:
    public:
        basic_istream(__streambuf_type *__sb);
        virtual void ~basic_istream();
        class sentry {
            class sentry;
            bool _M_ok;
        public:
        public:
            typedef std::char_traits<wchar_t> traits_type;
            typedef basic_streambuf<wchar_t, std::char_traits<wchar_t> > __streambuf_type;
            typedef basic_istream<wchar_t, std::char_traits<wchar_t> > __istream_type;
            typedef typename __istream_type::__ctype_type __ctype_type;
            typedef typename char_traits<wchar_t>::int_type __int_type;
            sentry(basic_istream<wchar_t, std::char_traits<wchar_t> > &__is, bool __noskipws);
            bool operator _Bool() const;
        };
        ;
        __istream_type &operator>>(__istream_type &(*__pf)(__istream_type &));
        __istream_type &operator>>(__ios_type &(*__pf)(__ios_type &));
        __istream_type &operator>>(std::ios_base &(*__pf)(std::ios_base &));
        __istream_type &operator>>(bool &__n);
        __istream_type &operator>>(short &__n);
        __istream_type &operator>>(unsigned short &__n);
        __istream_type &operator>>(int &__n);
        __istream_type &operator>>(unsigned int &__n);
        __istream_type &operator>>(long &__n);
        __istream_type &operator>>(unsigned long &__n);
        __istream_type &operator>>(long long &__n);
        __istream_type &operator>>(unsigned long long &__n);
        __istream_type &operator>>(float &__f);
        __istream_type &operator>>(double &__f);
        __istream_type &operator>>(long double &__f);
        __istream_type &operator>>(void *&__p);
        __istream_type &operator>>(__streambuf_type *__sb);
        streamsize gcount() const;
        int_type get();
        __istream_type &get(char_type &__c);
        __istream_type &get(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &get(char_type *__s, streamsize __n);
        __istream_type &get(__streambuf_type &__sb, char_type __delim);
        __istream_type &get(__streambuf_type &__sb);
        __istream_type &getline(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &getline(char_type *__s, streamsize __n);
        __istream_type &ignore();
        __istream_type &ignore(streamsize __n);
        __istream_type &ignore(streamsize __n, int_type __delim);
        int_type peek();
        __istream_type &read(char_type *__s, streamsize __n);
        streamsize readsome(char_type *__s, streamsize __n);
        __istream_type &putback(char_type __c);
        __istream_type &unget();
        int sync();
        pos_type tellg();
        __istream_type &seekg(pos_type);
        __istream_type &seekg(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_istream();
        template <typename _ValueT = unsigned int> __istream_type &_M_extract(unsigned int &__v)template <typename _ValueT = long> __istream_type &_M_extract(long &__v)template <typename _ValueT = long long> __istream_type &_M_extract(long long &__v)template <typename _ValueT = void *> __istream_type &_M_extract(void *&__v)template <typename _ValueT = bool> __istream_type &_M_extract(bool &__v)template <typename _ValueT = unsigned long> __istream_type &_M_extract(unsigned long &__v)template <typename _ValueT = double> __istream_type &_M_extract(double &__v)template <typename _ValueT = unsigned short> __istream_type &_M_extract(unsigned short &__v)template <typename _ValueT = unsigned long long> __istream_type &_M_extract(unsigned long long &__v)template <typename _ValueT = long double> __istream_type &_M_extract(long double &__v)template <typename _ValueT = float> __istream_type &_M_extract(float &__v)template <typename _ValueT> __istream_type &_M_extract(_ValueT &__v);
        inline std::basic_istream<wchar_t> &operator=(const std::basic_istream<wchar_t> &);
        inline basic_istream(const std::basic_istream<wchar_t> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_istream : virtual public basic_ios<_CharT, _Traits> {
        class basic_istream;
    public:
    public:
        typedef _CharT char_type;
        typedef typename _Traits::int_type int_type;
        typedef typename _Traits::pos_type pos_type;
        typedef typename _Traits::off_type off_type;
        typedef _Traits traits_type;
        typedef basic_streambuf<_CharT, _Traits> __streambuf_type;
        typedef basic_ios<_CharT, _Traits> __ios_type;
        typedef basic_istream<_CharT, _Traits> __istream_type;
        typedef num_get<_CharT, istreambuf_iterator<_CharT, _Traits> > __num_get_type;
        typedef ctype<_CharT> __ctype_type;
    protected:
    protected:
        streamsize _M_gcount;
    public:
    public:
        basic_istream<_CharT, _Traits>(__streambuf_type *__sb) : _M_gcount((CXXFunctionalCastExpr 0x9e831e0 </usr/include/c++/4.6/istream:93:19, col:31> 'streamsize':'int' functional cast to streamsize <NoOp>
  (IntegerLiteral 0x9e831c8 <col:30> 'int' 0))
) (CompoundStmt 0x9e86758 </usr/include/c++/4.6/istream:94:7, col:27>
  (CallExpr 0x9e86738 <col:9, col:24> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9e866e8 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0x9e866d8 <col:9> 'basic_istream<_CharT, _Traits> *' this))
    (DeclRefExpr 0x9e8671c <col:20> '__streambuf_type *' lvalue ParmVar 0x9e800e0 '__sb' '__streambuf_type *')))


        virtual void ~basic_istream<_CharT, _Traits>() (CompoundStmt 0x9e867f0 </usr/include/c++/4.6/istream:103:7, col:36>
  (BinaryOperator 0x9e867d8 <col:9, col:33> '<dependent type>' '='
    (MemberExpr 0x9e86780 <col:9> 'streamsize':'int' lvalue ->_M_gcount 0x9e80030
      (CXXThisExpr 0x9e86770 <col:9> 'basic_istream<_CharT, _Traits> *' this))
    (CXXFunctionalCastExpr 0x9e867c0 <col:21, col:33> 'streamsize':'int' functional cast to streamsize <NoOp>
      (IntegerLiteral 0x9e867a8 <col:32> 'int' 0))))


        class sentry;
        ;
        __istream_type &operator>>(__istream_type &(*__pf)(__istream_type &)) (CompoundStmt 0x9e86878 </usr/include/c++/4.6/istream:122:7, col:29>
  (ReturnStmt 0x9e86868 <col:9, col:26>
    (CallExpr 0x9e86848 <col:16, col:26> '<dependent type>'
      (DeclRefExpr 0x9e86804 <col:16> '__istream_type &(*)(__istream_type &)' lvalue ParmVar 0x9e804a0 '__pf' '__istream_type &(*)(__istream_type &)')
      (UnaryOperator 0x9e86830 <col:21, col:22> '<dependent type>' prefix '*'
        (CXXThisExpr 0x9e86820 <col:22> 'basic_istream<_CharT, _Traits> *' this)))))


        __istream_type &operator>>(__ios_type &(*__pf)(__ios_type &)) (CompoundStmt 0x9e86928 </usr/include/c++/4.6/istream:126:7, line:129:7>
  (CallExpr 0x9e868d0 <line:127:2, col:12> '<dependent type>'
    (DeclRefExpr 0x9e8688c <col:2> '__ios_type &(*)(__ios_type &)' lvalue ParmVar 0x9e806b0 '__pf' '__ios_type &(*)(__ios_type &)')
    (UnaryOperator 0x9e868b8 <col:7, col:8> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9e868a8 <col:8> 'basic_istream<_CharT, _Traits> *' this)))
  (ReturnStmt 0x9e86918 <line:128:2, col:10>
    (UnaryOperator 0x9e86900 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9e868f0 <col:10> 'basic_istream<_CharT, _Traits> *' this))))


        __istream_type &operator>>(std::ios_base &(*__pf)(std::ios_base &)) (CompoundStmt 0x9e869d8 </usr/include/c++/4.6/istream:133:7, line:136:7>
  (CallExpr 0x9e86980 <line:134:2, col:12> '<dependent type>'
    (DeclRefExpr 0x9e86940 <col:2> 'class std::ios_base &(*)(class std::ios_base &)' lvalue ParmVar 0x9e80830 '__pf' 'class std::ios_base &(*)(class std::ios_base &)')
    (UnaryOperator 0x9e86968 <col:7, col:8> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9e86958 <col:8> 'basic_istream<_CharT, _Traits> *' this)))
  (ReturnStmt 0x9e869c8 <line:135:2, col:10>
    (UnaryOperator 0x9e869b0 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9e869a0 <col:10> 'basic_istream<_CharT, _Traits> *' this))))


        __istream_type &operator>>(bool &__n) (CompoundStmt 0x9e86a88 </usr/include/c++/4.6/istream:169:7, col:33>
  (ReturnStmt 0x9e86a78 <col:9, col:30>
    (CallExpr 0x9e86a58 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0x9e86a00 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9e86a3c <col:27> '_Bool' lvalue ParmVar 0x9e80950 '__n' '_Bool &'))))


        __istream_type &operator>>(short &__n);
        __istream_type &operator>>(unsigned short &__n) (CompoundStmt 0x9e86b38 </usr/include/c++/4.6/istream:176:7, col:33>
  (ReturnStmt 0x9e86b28 <col:9, col:30>
    (CallExpr 0x9e86b08 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0x9e86ab0 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9e86aec <col:27> 'unsigned short' lvalue ParmVar 0x9e80b90 '__n' 'unsigned short &'))))


        __istream_type &operator>>(int &__n);
        __istream_type &operator>>(unsigned int &__n) (CompoundStmt 0x9e86be8 </usr/include/c++/4.6/istream:183:7, col:33>
  (ReturnStmt 0x9e86bd8 <col:9, col:30>
    (CallExpr 0x9e86bb8 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0x9e86b60 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9e86b9c <col:27> 'unsigned int' lvalue ParmVar 0x9e80dd0 '__n' 'unsigned int &'))))


        __istream_type &operator>>(long &__n) (CompoundStmt 0x9e86c98 </usr/include/c++/4.6/istream:187:7, col:33>
  (ReturnStmt 0x9e86c88 <col:9, col:30>
    (CallExpr 0x9e86c68 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0x9e86c10 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9e86c4c <col:27> 'long' lvalue ParmVar 0x9e80ef0 '__n' 'long &'))))


        __istream_type &operator>>(unsigned long &__n) (CompoundStmt 0x9e86d48 </usr/include/c++/4.6/istream:191:7, col:33>
  (ReturnStmt 0x9e86d38 <col:9, col:30>
    (CallExpr 0x9e86d18 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0x9e86cc0 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9e86cfc <col:27> 'unsigned long' lvalue ParmVar 0x9e81010 '__n' 'unsigned long &'))))


        __istream_type &operator>>(long long &__n) (CompoundStmt 0x9e86df8 </usr/include/c++/4.6/istream:196:7, col:33>
  (ReturnStmt 0x9e86de8 <col:9, col:30>
    (CallExpr 0x9e86dc8 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0x9e86d70 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9e86dac <col:27> 'long long' lvalue ParmVar 0x9e81130 '__n' 'long long &'))))


        __istream_type &operator>>(unsigned long long &__n) (CompoundStmt 0x9e86ea8 </usr/include/c++/4.6/istream:200:7, col:33>
  (ReturnStmt 0x9e86e98 <col:9, col:30>
    (CallExpr 0x9e86e78 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0x9e86e20 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9e86e5c <col:27> 'unsigned long long' lvalue ParmVar 0x9e81250 '__n' 'unsigned long long &'))))


        __istream_type &operator>>(float &__f) (CompoundStmt 0x9e86f58 </usr/include/c++/4.6/istream:205:7, col:33>
  (ReturnStmt 0x9e86f48 <col:9, col:30>
    (CallExpr 0x9e86f28 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0x9e86ed0 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9e86f0c <col:27> 'float' lvalue ParmVar 0x9e81370 '__f' 'float &'))))


        __istream_type &operator>>(double &__f) (CompoundStmt 0x9e87008 </usr/include/c++/4.6/istream:209:7, col:33>
  (ReturnStmt 0x9e86ff8 <col:9, col:30>
    (CallExpr 0x9e86fd8 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0x9e86f80 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9e86fbc <col:27> 'double' lvalue ParmVar 0x9e81490 '__f' 'double &'))))


        __istream_type &operator>>(long double &__f) (CompoundStmt 0x9e870b8 </usr/include/c++/4.6/istream:213:7, col:33>
  (ReturnStmt 0x9e870a8 <col:9, col:30>
    (CallExpr 0x9e87088 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0x9e87030 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9e8706c <col:27> 'long double' lvalue ParmVar 0x9e815b0 '__f' 'long double &'))))


        __istream_type &operator>>(void *&__p) (CompoundStmt 0x9e87168 </usr/include/c++/4.6/istream:217:7, col:33>
  (ReturnStmt 0x9e87158 <col:9, col:30>
    (CallExpr 0x9e87138 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0x9e870e0 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9e8711c <col:27> 'void *' lvalue ParmVar 0x9e816d0 '__p' 'void *&'))))


        __istream_type &operator>>(__streambuf_type *__sb);
        streamsize gcount() const (CompoundStmt 0x9e871d8 </usr/include/c++/4.6/istream:251:7, col:27>
  (ReturnStmt 0x9e871c8 <col:9, col:16>
    (MemberExpr 0x9e871a8 <col:16> 'const streamsize':'const int' lvalue ->_M_gcount 0x9e80030
      (CXXThisExpr 0x9e87198 <col:16> 'const basic_istream<_CharT, _Traits> *' this))))


        int_type get();
        __istream_type &get(char_type &__c);
        __istream_type &get(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &get(char_type *__s, streamsize __n) (CompoundStmt 0x9e87320 </usr/include/c++/4.6/istream:335:7, col:56>
  (ReturnStmt 0x9e87310 <col:9, col:53>
    (CallExpr 0x9e872e8 <col:16, col:53> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e87200 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9e871f0 <col:16> 'basic_istream<_CharT, _Traits> *' this))
      (DeclRefExpr 0x9e87234 <col:26> 'char_type *' lvalue ParmVar 0x9e81d50 '__s' 'char_type *')
      (DeclRefExpr 0x9e8724c <col:31> 'streamsize':'int' lvalue ParmVar 0x9e81d90 '__n' 'streamsize':'int')
      (CallExpr 0x9e872c8 <col:36, col:52> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e87278 <col:36, col:42> '<dependent type>' lvalue
          (CXXThisExpr 0x9e87268 <col:36> 'basic_istream<_CharT, _Traits> *' this))
        (CharacterLiteral 0x9e872b0 <col:48> 'char'10)))))


        __istream_type &get(__streambuf_type &__sb, char_type __delim);
        __istream_type &get(__streambuf_type &__sb) (CompoundStmt 0x9e87450 </usr/include/c++/4.6/istream:368:7, col:52>
  (ReturnStmt 0x9e87440 <col:9, col:49>
    (CallExpr 0x9e87418 <col:16, col:49> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e87348 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9e87338 <col:16> 'basic_istream<_CharT, _Traits> *' this))
      (DeclRefExpr 0x9e8737c <col:26> '__streambuf_type':'basic_streambuf<_CharT, _Traits>' lvalue ParmVar 0x9e82050 '__sb' '__streambuf_type &')
      (CallExpr 0x9e873f8 <col:32, col:48> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e873a8 <col:32, col:38> '<dependent type>' lvalue
          (CXXThisExpr 0x9e87398 <col:32> 'basic_istream<_CharT, _Traits> *' this))
        (CharacterLiteral 0x9e873e0 <col:44> 'char'10)))))


        __istream_type &getline(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &getline(char_type *__s, streamsize __n) (CompoundStmt 0x9e87598 </usr/include/c++/4.6/istream:408:7, col:60>
  (ReturnStmt 0x9e87588 <col:9, col:57>
    (CallExpr 0x9e87560 <col:16, col:57> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e87478 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9e87468 <col:16> 'basic_istream<_CharT, _Traits> *' this))
      (DeclRefExpr 0x9e874ac <col:30> 'char_type *' lvalue ParmVar 0x9e822d0 '__s' 'char_type *')
      (DeclRefExpr 0x9e874c4 <col:35> 'streamsize':'int' lvalue ParmVar 0x9e82310 '__n' 'streamsize':'int')
      (CallExpr 0x9e87540 <col:40, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e874f0 <col:40, col:46> '<dependent type>' lvalue
          (CXXThisExpr 0x9e874e0 <col:40> 'basic_istream<_CharT, _Traits> *' this))
        (CharacterLiteral 0x9e87528 <col:52> 'char'10)))))


        __istream_type &ignore();
        __istream_type &ignore(streamsize __n);
        __istream_type &ignore(streamsize __n, int_type __delim);
        int_type peek();
        __istream_type &read(char_type *__s, streamsize __n);
        streamsize readsome(char_type *__s, streamsize __n);
        __istream_type &putback(char_type __c);
        __istream_type &unget();
        int sync();
        pos_type tellg();
        __istream_type &seekg(pos_type);
        __istream_type &seekg(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_istream<_CharT, _Traits>() : _M_gcount((CXXFunctionalCastExpr 0x9e875d0 </usr/include/c++/4.6/istream:587:19, col:31> 'streamsize':'int' functional cast to streamsize <NoOp>
  (IntegerLiteral 0x9e875b8 <col:30> 'int' 0))
) (CompoundStmt 0x9e876b0 </usr/include/c++/4.6/istream:588:7, col:24>
  (CallExpr 0x9e87690 <col:9, col:21> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9e87640 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0x9e87630 <col:9> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0x9e87678 <col:20> 'int' 0)))


        template <typename _ValueT> __istream_type &_M_extract(_ValueT &__v);
    };
    basic_istream<char> &getline(char_type *__s, streamsize __n, char_type __delim);
    basic_istream<char> &ignore(streamsize __n);
    basic_istream<char> &ignore(streamsize __n, int_type __delim);
    basic_istream<wchar_t> &getline(char_type *__s, streamsize __n, char_type __delim);
    basic_istream<wchar_t> &ignore(streamsize __n);
    basic_istream<wchar_t> &ignore(streamsize __n, int_type __delim);
    class sentry {
        class sentry;
        bool _M_ok;
    public:
    public:
        typedef _Traits traits_type;
        typedef basic_streambuf<_CharT, _Traits> __streambuf_type;
        typedef basic_istream<_CharT, _Traits> __istream_type;
        typedef typename __istream_type::__ctype_type __ctype_type;
        typedef typename _Traits::int_type __int_type;
        sentry(basic_istream<_CharT, _Traits> &__is, bool __noskipws = (CXXBoolLiteralExpr 0x9e97520 </usr/include/c++/4.6/istream:673:70> '_Bool' false)
);
        bool operator _Bool() const (CompoundStmt 0x9e975a8 </usr/include/c++/4.6/istream:686:7, col:23>
  (ReturnStmt 0x9e97598 <col:9, col:16>
    (MemberExpr 0x9e97574 <col:16> 'const _Bool' lvalue ->_M_ok 0x9e96d40
      (CXXThisExpr 0x9e97548 <col:16> 'const class std::basic_istream::sentry *' this))))


    };
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> basic_istream<char, std::char_traits<char> > &operator>>(basic_istream<char, std::char_traits<char> > &__in, char &__c)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> basic_istream<wchar_t, std::char_traits<wchar_t> > &operator>>(basic_istream<wchar_t, std::char_traits<wchar_t> > &__in, wchar_t &__c)template <typename _CharT, typename _Traits> basic_istream<_CharT, _Traits> &operator>>(basic_istream<_CharT, _Traits> &__in, _CharT &__c);
    template <class _Traits = std::char_traits<char>> inline basic_istream<char, std::char_traits<char> > &operator>>(basic_istream<char, std::char_traits<char> > &__in, unsigned char &__c)template <class _Traits> inline basic_istream<char, _Traits> &operator>>(basic_istream<char, _Traits> &__in, unsigned char &__c) (CompoundStmt 0x9e98020 </usr/include/c++/4.6/istream:709:5, col:54>
  (ReturnStmt 0x9e98010 <col:7, col:51>
    (ParenExpr 0x9e97ff8 <col:14, col:51> '<dependent type>'
      (CXXOperatorCallExpr 0x9e97fd0 <col:15, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x9e97f90 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e97ef0 0x9e97a40 0x9d98c60 0x9d98690)
        (DeclRefExpr 0x9e97f20 <col:15> 'basic_istream<char, _Traits>' lvalue ParmVar 0x9e97d50 '__in' 'basic_istream<char, _Traits> &')
        (CXXReinterpretCastExpr 0x9e97f78 <col:23, col:50> 'char' lvalue reinterpret_cast<char &> <LValueBitCast>
          (DeclRefExpr 0x9e97f38 <col:47> 'unsigned char' lvalue ParmVar 0x9e97da0 '__c' 'unsigned char &'))))))

;
    template <class _Traits = std::char_traits<char>> inline basic_istream<char, std::char_traits<char> > &operator>>(basic_istream<char, std::char_traits<char> > &__in, signed char &__c)template <class _Traits> inline basic_istream<char, _Traits> &operator>>(basic_istream<char, _Traits> &__in, signed char &__c) (CompoundStmt 0x9e98588 </usr/include/c++/4.6/istream:714:5, col:54>
  (ReturnStmt 0x9e98578 <col:7, col:51>
    (ParenExpr 0x9e98560 <col:14, col:51> '<dependent type>'
      (CXXOperatorCallExpr 0x9e98538 <col:15, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x9e984f0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e98450 0x9e97ef0 0x9e97a40 0x9d98c60 0x9d98690)
        (DeclRefExpr 0x9e98480 <col:15> 'basic_istream<char, _Traits>' lvalue ParmVar 0x9e982b0 '__in' 'basic_istream<char, _Traits> &')
        (CXXReinterpretCastExpr 0x9e984d8 <col:23, col:50> 'char' lvalue reinterpret_cast<char &> <LValueBitCast>
          (DeclRefExpr 0x9e98498 <col:47> 'signed char' lvalue ParmVar 0x9e98300 '__c' 'signed char &'))))))

;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> basic_istream<char> &operator>>(basic_istream<char> &__in, char *__s)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> basic_istream<wchar_t, std::char_traits<wchar_t> > &operator>>(basic_istream<wchar_t, std::char_traits<wchar_t> > &__in, wchar_t *__s)template <typename _CharT, typename _Traits> basic_istream<_CharT, _Traits> &operator>>(basic_istream<_CharT, _Traits> &__in, _CharT *__s);
    basic_istream<char> &operator>>(basic_istream<char> &__in, char *__s);
    template <class _Traits = std::char_traits<char>> inline basic_istream<char, std::char_traits<char> > &operator>>(basic_istream<char, std::char_traits<char> > &__in, unsigned char *__s)template <class _Traits> inline basic_istream<char, _Traits> &operator>>(basic_istream<char, _Traits> &__in, unsigned char *__s) (CompoundStmt 0x9e99690 </usr/include/c++/4.6/istream:756:5, col:54>
  (ReturnStmt 0x9e99680 <col:7, col:51>
    (ParenExpr 0x9e99668 <col:14, col:51> '<dependent type>'
      (CXXOperatorCallExpr 0x9e99640 <col:15, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x9e995f8 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e99560 0x9e98a00 0x9e98450 0x9e97ef0 0x9e97a40 0x9d98c60)
        (DeclRefExpr 0x9e99590 <col:15> 'basic_istream<char, _Traits>' lvalue ParmVar 0x9e993c0 '__in' 'basic_istream<char, _Traits> &')
        (CXXReinterpretCastExpr 0x9e995e0 <col:23, col:50> 'char *' reinterpret_cast<char *> <BitCast>
          (ImplicitCastExpr 0x9e995d0 <col:47> 'unsigned char *' <LValueToRValue>
            (DeclRefExpr 0x9e995a8 <col:47> 'unsigned char *' lvalue ParmVar 0x9e99410 '__s' 'unsigned char *')))))))

;
    template <class _Traits = std::char_traits<char>> inline basic_istream<char, std::char_traits<char> > &operator>>(basic_istream<char, std::char_traits<char> > &__in, signed char *__s)template <class _Traits> inline basic_istream<char, _Traits> &operator>>(basic_istream<char, _Traits> &__in, signed char *__s) (CompoundStmt 0x9e99bf8 </usr/include/c++/4.6/istream:761:5, col:54>
  (ReturnStmt 0x9e99be8 <col:7, col:51>
    (ParenExpr 0x9e99bd0 <col:14, col:51> '<dependent type>'
      (CXXOperatorCallExpr 0x9e99ba8 <col:15, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x9e99b58 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e99ac0 0x9e99560 0x9e98a00 0x9e98450 0x9e97ef0 0x9e97a40 0x9d98c60)
        (DeclRefExpr 0x9e99af0 <col:15> 'basic_istream<char, _Traits>' lvalue ParmVar 0x9e99920 '__in' 'basic_istream<char, _Traits> &')
        (CXXReinterpretCastExpr 0x9e99b40 <col:23, col:50> 'char *' reinterpret_cast<char *> <BitCast>
          (ImplicitCastExpr 0x9e99b30 <col:47> 'signed char *' <LValueToRValue>
            (DeclRefExpr 0x9e99b08 <col:47> 'signed char *' lvalue ParmVar 0x9e99970 '__s' 'signed char *')))))))

;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_iostream : public basic_istream<char, std::char_traits<char> >, public basic_ostream<char, std::char_traits<char> > {
        class basic_iostream;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef basic_istream<char, std::char_traits<char> > __istream_type;
        typedef basic_ostream<char, std::char_traits<char> > __ostream_type;
        basic_iostream(basic_streambuf<char, std::char_traits<char> > *__sb);
        virtual void ~basic_iostream();
    protected:
    protected:
        basic_iostream();
        inline std::basic_iostream<char> &operator=(const std::basic_iostream<char> &);
        inline basic_iostream(const std::basic_iostream<char> &);
    }
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_iostream : public basic_istream<wchar_t, std::char_traits<wchar_t> >, public basic_ostream<wchar_t, std::char_traits<wchar_t> > {
        class basic_iostream;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef basic_istream<wchar_t, std::char_traits<wchar_t> > __istream_type;
        typedef basic_ostream<wchar_t, std::char_traits<wchar_t> > __ostream_type;
        basic_iostream(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        virtual void ~basic_iostream();
    protected:
    protected:
        basic_iostream();
        inline std::basic_iostream<wchar_t> &operator=(const std::basic_iostream<wchar_t> &);
        inline basic_iostream(const std::basic_iostream<wchar_t> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_iostream : public basic_istream<_CharT, _Traits>, public basic_ostream<_CharT, _Traits> {
        class basic_iostream;
    public:
    public:
        typedef _CharT char_type;
        typedef typename _Traits::int_type int_type;
        typedef typename _Traits::pos_type pos_type;
        typedef typename _Traits::off_type off_type;
        typedef _Traits traits_type;
        typedef basic_istream<_CharT, _Traits> __istream_type;
        typedef basic_ostream<_CharT, _Traits> __ostream_type;
        basic_iostream<_CharT, _Traits>(basic_streambuf<_CharT, _Traits> *__sb) : __istream_type((DeclRefExpr 0x9e9a8b8 </usr/include/c++/4.6/istream:799:24> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0x9e9a650 '__sb' 'basic_streambuf<_CharT, _Traits> *')
), __ostream_type((DeclRefExpr 0x9e9a928 </usr/include/c++/4.6/istream:799:46> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0x9e9a650 '__sb' 'basic_streambuf<_CharT, _Traits> *')
) (CompoundStmt 0x9e9a9a0 </usr/include/c++/4.6/istream:799:52, col:54>)


        virtual void ~basic_iostream<_CharT, _Traits>() (CompoundStmt 0x9e9a9b0 </usr/include/c++/4.6/istream:805:25, col:27>)


    protected:
    protected:
        basic_iostream<_CharT, _Traits>() : __istream_type(), __ostream_type() (CompoundStmt 0x9e9aa40 </usr/include/c++/4.6/istream:809:44, col:46>)


    };
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> basic_istream<char, std::char_traits<char> > &ws(basic_istream<char, std::char_traits<char> > &__in)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> basic_istream<wchar_t, std::char_traits<wchar_t> > &ws(basic_istream<wchar_t, std::char_traits<wchar_t> > &__in)template <typename _CharT, typename _Traits> basic_istream<_CharT, _Traits> &ws(basic_istream<_CharT, _Traits> &__is);
}
namespace std {
    basic_istream<_CharT, _Traits>::class sentry::sentry(basic_istream<_CharT, _Traits> &__in, bool __noskip = (CXXBoolLiteralExpr 0x9e97520 </usr/include/c++/4.6/istream:673:70> '_Bool' false)
) : _M_ok((CXXBoolLiteralExpr 0x9e9b5e8 </usr/include/c++/4.6/bits/istream.tcc:48:73> '_Bool' false)
) (CompoundStmt 0x9e9c658 </usr/include/c++/4.6/bits/istream.tcc:49:5, line:82:5>
  (DeclStmt 0x9e9b6f8 <line:50:7, col:50>
    0x9e9b670 "ios_base::iostate __err =
      (ImplicitCastExpr 0x9e9b6e8 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9e9b6c4 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6bb00 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (IfStmt 0x9e9c330 <line:51:7, line:73:2>
    <<<NULL>>>
    (CallExpr 0x9e9b758 <line:51:11, col:21> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e9b720 <col:11, col:16> '<dependent type>' lvalue
        (DeclRefExpr 0x9e9b708 <col:11> 'basic_istream<_CharT, _Traits>':'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9e9b480 '__in' 'basic_istream<_CharT, _Traits> &')))
    (CompoundStmt 0x9e9c318 <line:52:2, line:73:2>
      (IfStmt 0x9e9b8b0 <line:53:4, line:54:24>
        <<<NULL>>>
        (CallExpr 0x9e9b7c8 <line:53:8, col:17> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9e9b790 <col:8, col:13> '<dependent type>' lvalue
            (DeclRefExpr 0x9e9b774 <col:8> 'basic_istream<_CharT, _Traits>':'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9e9b480 '__in' 'basic_istream<_CharT, _Traits> &')))
        (CallExpr 0x9e9b890 <line:54:6, col:24> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9e9b858 <col:6, col:18> '<dependent type>' lvalue
            (CallExpr 0x9e9b838 <col:6, col:15> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9e9b800 <col:6, col:11> '<dependent type>' lvalue
                (DeclRefExpr 0x9e9b7e4 <col:6> 'basic_istream<_CharT, _Traits>':'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9e9b480 '__in' 'basic_istream<_CharT, _Traits> &')))))
        <<<NULL>>>)
      (IfStmt 0x9e9c2f8 <line:55:4, line:72:6>
        <<<NULL>>>
        (BinaryOperator 0x9e9ba50 <line:55:8, col:57> '_Bool' '&&'
          (UnaryOperator 0x9e9b8f8 <col:8, col:9> '_Bool' prefix '!'
            (ImplicitCastExpr 0x9e9b8e8 <col:9> '_Bool' <LValueToRValue>
              (DeclRefExpr 0x9e9b8cc <col:9> '_Bool' lvalue ParmVar 0x9e9b4c0 '__noskip' '_Bool')))
          (CXXUnresolvedConstructExpr 0x9e9ba30 <col:21, col:57> '_Bool'
            (CXXOperatorCallExpr 0x9e9ba08 <col:26, col:51> '<dependent type>'
              (UnresolvedLookupExpr 0x9e9b9c8 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9d5b750 0x9d68890 0x9d69b00)
              (CallExpr 0x9e9b968 <col:26, col:37> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9e9b930 <col:26, col:31> '<dependent type>' lvalue
                  (DeclRefExpr 0x9e9b918 <col:26> 'basic_istream<_CharT, _Traits>':'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9e9b480 '__in' 'basic_istream<_CharT, _Traits> &')))
              (DeclRefExpr 0x9e9b9a4 <col:41, col:51> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9d6b750 'skipws' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
        (CompoundStmt 0x9e9c2d0 <line:56:6, line:72:6>
          (DeclStmt 0x9e9bb60 <line:57:8, col:51>
            0x9e9ba90 "const __int_type __eof =
              (CallExpr 0x9e9bb40 <col:33, col:50> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9e9bb08 <col:33, col:46> '<dependent type>' lvalue))")
          (DeclStmt 0x9e9bc58 <line:58:8, col:45>
            0x9e9bbb0 "__streambuf_type *__sb =
              (CallExpr 0x9e9bc38 <col:33, col:44> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9e9bc00 <col:33, col:38> '<dependent type>' lvalue
                  (DeclRefExpr 0x9e9bbe4 <col:33> 'basic_istream<_CharT, _Traits>':'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9e9b480 '__in' 'basic_istream<_CharT, _Traits> &')))")
          (DeclStmt 0x9e9bd18 <line:59:8, col:38>
            0x9e9bc70 "__int_type __c =
              (CallExpr 0x9e9bcf8 <col:25, col:37> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9e9bcc0 <col:25, col:31> '<dependent type>' lvalue
                  (DeclRefExpr 0x9e9bca4 <col:25> '__streambuf_type *' lvalue Var 0x9e9bbb0 '__sb' '__streambuf_type *')))")
          (DeclStmt 0x9e9be50 <line:61:8, col:63>
            0x9e9bd70 "const __ctype_type &__ct =
              (CallExpr 0x9e9be30 <col:35, col:62> '<dependent type>'
                (UnresolvedLookupExpr 0x9e9bda8 <col:35> '<overloaded function type>' lvalue (ADL) = '1' 0x9e3b7e0)
                (CXXDependentScopeMemberExpr 0x9e9bdf8 <col:49, col:54> '<dependent type>' lvalue
                  (DeclRefExpr 0x9e9bddc <col:49> 'basic_istream<_CharT, _Traits>':'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9e9b480 '__in' 'basic_istream<_CharT, _Traits> &')))")
          (WhileStmt 0x9e9c128 <line:62:8, line:65:22>
            <<<NULL>>>
            (BinaryOperator 0x9e9c070 <line:62:15, line:64:35> '<dependent type>' '&&'
              (UnaryOperator 0x9e9bf10 <line:62:15, col:51> '<dependent type>' prefix '!'
                (CallExpr 0x9e9bee8 <col:16, col:51> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9e9be80 <col:16, col:29> '<dependent type>' lvalue)
                  (DeclRefExpr 0x9e9beb4 <col:41> '__int_type':'typename _Traits::int_type' lvalue Var 0x9e9bc70 '__c' '__int_type':'typename _Traits::int_type')
                  (DeclRefExpr 0x9e9becc <col:46> 'const __int_type':'const typename _Traits::int_type' lvalue Var 0x9e9ba90 '__eof' 'const __int_type':'const typename _Traits::int_type')))
              (CallExpr 0x9e9c048 <line:63:11, line:64:35> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9e9bf40 <line:63:11, col:16> '<dependent type>' lvalue
                  (DeclRefExpr 0x9e9bf24 <col:11> 'const __ctype_type':'const ctype<_CharT>' lvalue Var 0x9e9bd70 '__ct' 'const __ctype_type &'))
                (DeclRefExpr 0x9e9bf94 <col:19, col:31> 'const mask':'const unsigned short' lvalue Var 0x9d9fe40 'space' 'const mask':'const unsigned short')
                (CallExpr 0x9e9c028 <line:64:5, col:34> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9e9bfd8 <col:5, col:18> '<dependent type>' lvalue)
                  (DeclRefExpr 0x9e9c00c <col:31> '__int_type':'typename _Traits::int_type' lvalue Var 0x9e9bc70 '__c' '__int_type':'typename _Traits::int_type'))))
            (BinaryOperator 0x9e9c110 <line:65:3, col:22> '<dependent type>' '='
              (DeclRefExpr 0x9e9c088 <col:3> '__int_type':'typename _Traits::int_type' lvalue Var 0x9e9bc70 '__c' '__int_type':'typename _Traits::int_type')
              (CallExpr 0x9e9c0f0 <col:9, col:22> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9e9c0b8 <col:9, col:15> '<dependent type>' lvalue
                  (DeclRefExpr 0x9e9c0a0 <col:9> '__streambuf_type *' lvalue Var 0x9e9bbb0 '__sb' '__streambuf_type *')))))
          (IfStmt 0x9e9c2b0 <line:70:8, line:71:22>
            <<<NULL>>>
            (CallExpr 0x9e9c1d0 <line:70:12, col:47> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9e9c168 <col:12, col:25> '<dependent type>' lvalue)
              (DeclRefExpr 0x9e9c19c <col:37> '__int_type':'typename _Traits::int_type' lvalue Var 0x9e9bc70 '__c' '__int_type':'typename _Traits::int_type')
              (DeclRefExpr 0x9e9c1b4 <col:42> 'const __int_type':'const typename _Traits::int_type' lvalue Var 0x9e9ba90 '__eof' 'const __int_type':'const typename _Traits::int_type'))
            (CXXOperatorCallExpr 0x9e9c288 <line:71:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x9e9c278 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9e9c260 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9d6a3b0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x9e9c1f4 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9e9b670 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0x9e9c250 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x9e9c22c <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6ba40 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0x9e9c638 <line:75:7, line:81:2>
    <<<NULL>>>
    (BinaryOperator 0x9e9c470 <line:75:11, col:45> '<dependent type>' '&&'
      (CallExpr 0x9e9c3a0 <col:11, col:21> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e9c368 <col:11, col:16> '<dependent type>' lvalue
          (DeclRefExpr 0x9e9c34c <col:11> 'basic_istream<_CharT, _Traits>':'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9e9b480 '__in' 'basic_istream<_CharT, _Traits> &')))
      (BinaryOperator 0x9e9c458 <col:26, col:45> '_Bool' '=='
        (ImplicitCastExpr 0x9e9c438 <col:26> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9e9c418 <col:26> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9e9c3bc <col:26> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9e9b670 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (ImplicitCastExpr 0x9e9c448 <col:35, col:45> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9e9c428 <col:35, col:45> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9e9c3f4 <col:35, col:45> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6bb00 'goodbit' 'const iostate':'const enum std::_Ios_Iostate')))))
    (BinaryOperator 0x9e9c4c8 <line:76:2, col:10> '<dependent type>' '='
      (MemberExpr 0x9e9c498 <col:2> '_Bool' lvalue ->_M_ok 0x9e96d40
        (CXXThisExpr 0x9e9c488 <col:2> 'class std::basic_istream::sentry *' this))
      (CXXBoolLiteralExpr 0x9e9c4b8 <col:10> '_Bool' true))
    (CompoundStmt 0x9e9c620 <line:78:2, line:81:2>
      (CXXOperatorCallExpr 0x9e9c570 <line:79:4, col:23> 'const enum std::_Ios_Iostate' lvalue
        (ImplicitCastExpr 0x9e9c560 <col:10, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9e9c548 <col:10, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9d6a3b0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
        (DeclRefExpr 0x9e9c4e0 <col:4> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9e9b670 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
        (ImplicitCastExpr 0x9e9c538 <col:13, col:23> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
          (DeclRefExpr 0x9e9c514 <col:13, col:23> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6baa0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
      (CallExpr 0x9e9c600 <line:80:4, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e9c5b0 <col:4, col:9> '<dependent type>' lvalue
          (DeclRefExpr 0x9e9c594 <col:4> 'basic_istream<_CharT, _Traits>':'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9e9b480 '__in' 'basic_istream<_CharT, _Traits> &'))
        (DeclRefExpr 0x9e9c5e4 <col:18> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9e9b670 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))))


    template <typename _ValueT> basic_istream<_CharT, _Traits> &_M_extract(_ValueT &__v) (CompoundStmt 0x9e9d4c0 </usr/include/c++/4.6/bits/istream.tcc:89:7, line:110:7>
  (DeclStmt 0x9e9cdd0 <line:90:2, col:29>
    0x9e9cd40 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0x9e9cdb0 <col:15, col:28> 'class std::basic_istream::sentry'
        (UnaryOperator 0x9e9cd88 <col:16, col:17> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9e9cd78 <col:17> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0x9e9cda0 <col:23> '_Bool' false))")
  (IfStmt 0x9e9d468 <line:91:2, line:108:4>
    <<<NULL>>>
    (DeclRefExpr 0x9e9cde0 <line:91:6> 'class std::basic_istream::sentry' lvalue Var 0x9e9cd40 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0x9e9d440 <line:92:4, line:108:4>
      (DeclStmt 0x9e9ceb8 <line:93:6, col:49>
        0x9e9ce30 "ios_base::iostate __err =
          (ImplicitCastExpr 0x9e9cea8 <col:32, col:42> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9e9ce84 <col:32, col:42> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6bb00 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0x9e9d158 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:98:8>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9e9cec8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9e9d140 </usr/include/c++/4.6/bits/istream.tcc:95:8, line:98:8>
          (DeclStmt 0x9e9d018 <line:96:3, col:63>
            0x9e9cf40 "const __num_get_type &__ng =
              (CallExpr 0x9e9cff8 <col:32, col:62> '<dependent type>'
                (UnresolvedLookupExpr 0x9e9cf78 <col:32> '<overloaded function type>' lvalue (ADL) = '1' 0x9e3b7e0)
                (CXXDependentScopeMemberExpr 0x9e9cfc0 <col:46, col:52> '<dependent type>' lvalue
                  (CXXThisExpr 0x9e9cfb0 <col:46> 'basic_istream<_CharT, _Traits> *' this)))")
          (CallExpr 0x9e9d110 <line:97:3, col:39> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9e9d040 <col:3, col:8> '<dependent type>' lvalue
              (DeclRefExpr 0x9e9d028 <col:3> 'const __num_get_type':'const num_get<_CharT, istreambuf_iterator<_CharT, _Traits> >' lvalue Var 0x9e9cf40 '__ng' 'const __num_get_type &'))
            (UnaryOperator 0x9e9d088 <col:12, col:13> '<dependent type>' prefix '*'
              (CXXThisExpr 0x9e9d078 <col:13> 'basic_istream<_CharT, _Traits> *' this))
            (IntegerLiteral 0x9e9d0a0 <col:19> 'int' 0)
            (UnaryOperator 0x9e9d0c8 <col:22, col:23> '<dependent type>' prefix '*'
              (CXXThisExpr 0x9e9d0b8 <col:23> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9e9d0dc <col:29> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9e9ce30 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
            (DeclRefExpr 0x9e9d0f4 <col:36> '_ValueT' lvalue ParmVar 0x9e9ca80 '__v' '_ValueT &')))
        <<<NULL>>>)
      (IfStmt 0x9e9d258 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:103:8>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9e9d178 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9e9d240 </usr/include/c++/4.6/bits/istream.tcc:100:8, line:103:8>
          (CallExpr 0x9e9d210 <line:101:3, col:37> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9e9d198 <col:3, col:9> '<dependent type>' lvalue
              (CXXThisExpr 0x9e9d188 <col:3> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9e9d1ec <col:21, col:31> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6b9e0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x9e9d230 <line:102:26>))
        <<<NULL>>>)
      (IfStmt 0x9e9d348 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:105:47>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9e9d278 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9e9d330 </usr/include/c++/4.6/bits/istream.tcc:105:8, col:47>
          (CallExpr 0x9e9d310 <col:10, col:44> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9e9d298 <col:10, col:16> '<dependent type>' lvalue
              (CXXThisExpr 0x9e9d288 <col:10> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9e9d2ec <col:28, col:38> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6b9e0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0x9e9d420 <line:106:6, line:107:28>
        <<<NULL>>>
        (ImplicitCastExpr 0x9e9d390 <line:106:10> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0x9e9d380 <col:10> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9e9d364 <col:10> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9e9ce30 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0x9e9d400 <line:107:8, col:28> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9e9d3b0 <col:8, col:14> '<dependent type>' lvalue
            (CXXThisExpr 0x9e9d3a0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0x9e9d3e4 <col:23> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9e9ce30 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9e9d4b0 <line:109:2, col:10>
    (UnaryOperator 0x9e9d498 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9e9d488 <col:10> 'basic_istream<_CharT, _Traits> *' this))))

;
    basic_istream<_CharT, _Traits> &operator>>(short &__n) (CompoundStmt 0x9ea3ba8 </usr/include/c++/4.6/bits/istream.tcc:116:5, line:155:5>
  (DeclStmt 0x9e9db40 <line:119:7, col:34>
    0x9e9dab0 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0x9e9db20 <col:20, col:33> 'class std::basic_istream::sentry'
        (UnaryOperator 0x9e9daf8 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9e9dae8 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0x9e9db10 <col:28> '_Bool' false))")
  (IfStmt 0x9ea3b50 <line:120:7, line:153:2>
    <<<NULL>>>
    (DeclRefExpr 0x9e9db50 <line:120:11> 'class std::basic_istream::sentry' lvalue Var 0x9e9dab0 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0x9ea3b28 <line:121:2, line:153:2>
      (DeclStmt 0x9e9dc28 <line:122:4, col:47>
        0x9e9dba0 "ios_base::iostate __err =
          (ImplicitCastExpr 0x9e9dc18 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9e9dbf4 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6bb00 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0x9ea3840 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:143:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9e9dc38 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9ea3820 </usr/include/c++/4.6/bits/istream.tcc:124:6, line:143:6>
          (DeclStmt 0x9e9dc98 <line:125:8, col:16>
            0x9e9dc60 "long __l")
          (DeclStmt 0x9e9dd98 <line:126:8, col:68>
            0x9e9dcc0 "const __num_get_type &__ng =
              (CallExpr 0x9e9dd78 <col:37, col:67> '<dependent type>'
                (UnresolvedLookupExpr 0x9e9dcf8 <col:37> '<overloaded function type>' lvalue (ADL) = '1' 0x9e3b7e0)
                (CXXDependentScopeMemberExpr 0x9e9dd40 <col:51, col:57> '<dependent type>' lvalue
                  (CXXThisExpr 0x9e9dd30 <col:51> 'basic_istream<_CharT, _Traits> *' this)))")
          (CallExpr 0x9e9de90 <line:127:8, col:44> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9e9ddc0 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0x9e9dda8 <col:8> 'const __num_get_type':'const num_get<_CharT, istreambuf_iterator<_CharT, _Traits> >' lvalue Var 0x9e9dcc0 '__ng' 'const __num_get_type &'))
            (UnaryOperator 0x9e9de08 <col:17, col:18> '<dependent type>' prefix '*'
              (CXXThisExpr 0x9e9ddf8 <col:18> 'basic_istream<_CharT, _Traits> *' this))
            (IntegerLiteral 0x9e9de20 <col:24> 'int' 0)
            (UnaryOperator 0x9e9de48 <col:27, col:28> '<dependent type>' prefix '*'
              (CXXThisExpr 0x9e9de38 <col:28> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9e9de5c <col:34> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9e9dba0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
            (DeclRefExpr 0x9e9de74 <col:41> 'long' lvalue Var 0x9e9dc60 '__l' 'long'))
          (IfStmt 0x9ea3800 <line:131:8, line:142:18>
            <<<NULL>>>
            (BinaryOperator 0x9ea3238 <line:131:12, col:54> '_Bool' '<'
              (ImplicitCastExpr 0x9ea3208 <col:12> 'long' <LValueToRValue>
                (DeclRefExpr 0x9e9dec0 <col:12> 'long' lvalue Var 0x9e9dc60 '__l' 'long'))
              (ImplicitCastExpr 0x9ea3228 <col:18, col:54> 'long' <IntegralCast>
                (ImplicitCastExpr 0x9ea3218 <col:18, col:54> 'short':'short' <LValueToRValue>
                  (DeclRefExpr 0x9ea31e8 <col:18, col:54> 'const short':'const short' lvalue Var 0x9e9e720 '__min' 'const short':'const short'))))
            (CompoundStmt 0x9ea3428 <line:132:3, line:135:3>
              (CXXOperatorCallExpr 0x9ea3310 <line:133:5, col:24> 'const enum std::_Ios_Iostate' lvalue
                (ImplicitCastExpr 0x9ea3300 <col:11, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                  (DeclRefExpr 0x9ea32e8 <col:11, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9d6a3b0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
                (DeclRefExpr 0x9ea327c <col:5> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9e9dba0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
                (ImplicitCastExpr 0x9ea32d8 <col:14, col:24> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                  (DeclRefExpr 0x9ea32b4 <col:14, col:24> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6baa0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
              (BinaryOperator 0x9ea3410 <line:134:5, col:47> 'short' lvalue '='
                (DeclRefExpr 0x9ea3334 <col:5> 'short' lvalue ParmVar 0x9e9d860 '__n' 'short &')
                (ImplicitCastExpr 0x9ea3400 <col:11, col:47> 'short':'short' <LValueToRValue>
                  (DeclRefExpr 0x9ea33e0 <col:11, col:47> 'const short':'const short' lvalue Var 0x9e9e720 '__min' 'const short':'const short'))))
            (IfStmt 0x9ea37e0 <line:136:13, line:142:18>
              <<<NULL>>>
              (BinaryOperator 0x9ea3540 <line:136:17, col:59> '_Bool' '>'
                (ImplicitCastExpr 0x9ea3510 <col:17> 'long' <LValueToRValue>
                  (DeclRefExpr 0x9ea3440 <col:17> 'long' lvalue Var 0x9e9dc60 '__l' 'long'))
                (ImplicitCastExpr 0x9ea3530 <col:23, col:59> 'long' <IntegralCast>
                  (ImplicitCastExpr 0x9ea3520 <col:23, col:59> 'short':'short' <LValueToRValue>
                    (DeclRefExpr 0x9ea34f0 <col:23, col:59> 'const short':'const short' lvalue Var 0x9e9e9c0 '__max' 'const short':'const short'))))
              (CompoundStmt 0x9ea3738 <line:137:3, line:140:3>
                (CXXOperatorCallExpr 0x9ea3620 <line:138:5, col:24> 'const enum std::_Ios_Iostate' lvalue
                  (ImplicitCastExpr 0x9ea3610 <col:11, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                    (DeclRefExpr 0x9ea35f8 <col:11, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9d6a3b0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
                  (DeclRefExpr 0x9ea358c <col:5> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9e9dba0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
                  (ImplicitCastExpr 0x9ea35e8 <col:14, col:24> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                    (DeclRefExpr 0x9ea35c4 <col:14, col:24> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6baa0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
                (BinaryOperator 0x9ea3720 <line:139:5, col:47> 'short' lvalue '='
                  (DeclRefExpr 0x9ea3644 <col:5> 'short' lvalue ParmVar 0x9e9d860 '__n' 'short &')
                  (ImplicitCastExpr 0x9ea3710 <col:11, col:47> 'short':'short' <LValueToRValue>
                    (DeclRefExpr 0x9ea36f0 <col:11, col:47> 'const short':'const short' lvalue Var 0x9e9e9c0 '__max' 'const short':'const short'))))
              (BinaryOperator 0x9ea37c8 <line:142:3, col:18> 'short' lvalue '='
                (DeclRefExpr 0x9ea3750 <col:3> 'short' lvalue ParmVar 0x9e9d860 '__n' 'short &')
                (CXXFunctionalCastExpr 0x9ea37b0 <col:9, col:18> 'short' functional cast to short <NoOp>
                  (ImplicitCastExpr 0x9ea37a0 <col:15> 'short' <IntegralCast>
                    (ImplicitCastExpr 0x9ea3790 <col:15> 'long' <LValueToRValue>
                      (DeclRefExpr 0x9ea3774 <col:15> 'long' lvalue Var 0x9e9dc60 '__l' 'long'))))))))
        <<<NULL>>>)
      (IfStmt 0x9ea3940 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:148:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9ea3860 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9ea3928 </usr/include/c++/4.6/bits/istream.tcc:145:6, line:148:6>
          (CallExpr 0x9ea38f8 <line:146:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9ea3880 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9ea3870 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9ea38d4 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6b9e0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x9ea3918 <line:147:31>))
        <<<NULL>>>)
      (IfStmt 0x9ea3a30 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:150:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9ea3960 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9ea3a18 </usr/include/c++/4.6/bits/istream.tcc:150:6, col:45>
          (CallExpr 0x9ea39f8 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9ea3980 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9ea3970 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9ea39d4 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6b9e0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0x9ea3b08 <line:151:4, line:152:26>
        <<<NULL>>>
        (ImplicitCastExpr 0x9ea3a78 <line:151:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0x9ea3a68 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9ea3a4c <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9e9dba0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0x9ea3ae8 <line:152:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9ea3a98 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x9ea3a88 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0x9ea3acc <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9e9dba0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9ea3b98 <line:154:7, col:15>
    (UnaryOperator 0x9ea3b80 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9ea3b70 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &operator>>(int &__n) (CompoundStmt 0x9ea5028 </usr/include/c++/4.6/bits/istream.tcc:161:5, line:200:5>
  (DeclStmt 0x9ea4230 <line:164:7, col:34>
    0x9ea41a0 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0x9ea4210 <col:20, col:33> 'class std::basic_istream::sentry'
        (UnaryOperator 0x9ea41e8 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9ea41d8 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0x9ea4200 <col:28> '_Bool' false))")
  (IfStmt 0x9ea4fd0 <line:165:7, line:198:2>
    <<<NULL>>>
    (DeclRefExpr 0x9ea4240 <line:165:11> 'class std::basic_istream::sentry' lvalue Var 0x9ea41a0 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0x9ea4fa8 <line:166:2, line:198:2>
      (DeclStmt 0x9ea4318 <line:167:4, col:47>
        0x9ea4290 "ios_base::iostate __err =
          (ImplicitCastExpr 0x9ea4308 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9ea42e4 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6bb00 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0x9ea4cc0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:188:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9ea4328 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9ea4ca0 </usr/include/c++/4.6/bits/istream.tcc:169:6, line:188:6>
          (DeclStmt 0x9ea4388 <line:170:8, col:16>
            0x9ea4350 "long __l")
          (DeclStmt 0x9ea4488 <line:171:8, col:68>
            0x9ea43b0 "const __num_get_type &__ng =
              (CallExpr 0x9ea4468 <col:37, col:67> '<dependent type>'
                (UnresolvedLookupExpr 0x9ea43e8 <col:37> '<overloaded function type>' lvalue (ADL) = '1' 0x9e3b7e0)
                (CXXDependentScopeMemberExpr 0x9ea4430 <col:51, col:57> '<dependent type>' lvalue
                  (CXXThisExpr 0x9ea4420 <col:51> 'basic_istream<_CharT, _Traits> *' this)))")
          (CallExpr 0x9ea4580 <line:172:8, col:44> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9ea44b0 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0x9ea4498 <col:8> 'const __num_get_type':'const num_get<_CharT, istreambuf_iterator<_CharT, _Traits> >' lvalue Var 0x9ea43b0 '__ng' 'const __num_get_type &'))
            (UnaryOperator 0x9ea44f8 <col:17, col:18> '<dependent type>' prefix '*'
              (CXXThisExpr 0x9ea44e8 <col:18> 'basic_istream<_CharT, _Traits> *' this))
            (IntegerLiteral 0x9ea4510 <col:24> 'int' 0)
            (UnaryOperator 0x9ea4538 <col:27, col:28> '<dependent type>' prefix '*'
              (CXXThisExpr 0x9ea4528 <col:28> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9ea454c <col:34> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9ea4290 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
            (DeclRefExpr 0x9ea4564 <col:41> 'long' lvalue Var 0x9ea4350 '__l' 'long'))
          (IfStmt 0x9ea4c80 <line:176:8, line:187:16>
            <<<NULL>>>
            (BinaryOperator 0x9ea46b0 <line:176:12, col:52> '_Bool' '<'
              (ImplicitCastExpr 0x9ea4680 <col:12> 'long' <LValueToRValue>
                (DeclRefExpr 0x9ea45b0 <col:12> 'long' lvalue Var 0x9ea4350 '__l' 'long'))
              (ImplicitCastExpr 0x9ea46a0 <col:18, col:52> 'long' <IntegralCast>
                (ImplicitCastExpr 0x9ea4690 <col:18, col:52> 'int':'int' <LValueToRValue>
                  (DeclRefExpr 0x9ea4660 <col:18, col:52> 'const int':'const int' lvalue Var 0x9ca5c20 '__min' 'const int':'const int'))))
            (CompoundStmt 0x9ea48a8 <line:177:3, line:180:3>
              (CXXOperatorCallExpr 0x9ea4790 <line:178:5, col:24> 'const enum std::_Ios_Iostate' lvalue
                (ImplicitCastExpr 0x9ea4780 <col:11, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                  (DeclRefExpr 0x9ea4768 <col:11, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9d6a3b0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
                (DeclRefExpr 0x9ea46fc <col:5> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9ea4290 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
                (ImplicitCastExpr 0x9ea4758 <col:14, col:24> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                  (DeclRefExpr 0x9ea4734 <col:14, col:24> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6baa0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
              (BinaryOperator 0x9ea4890 <line:179:5, col:45> 'int' lvalue '='
                (DeclRefExpr 0x9ea47b4 <col:5> 'int' lvalue ParmVar 0x9ea3f50 '__n' 'int &')
                (ImplicitCastExpr 0x9ea4880 <col:11, col:45> 'int':'int' <LValueToRValue>
                  (DeclRefExpr 0x9ea4860 <col:11, col:45> 'const int':'const int' lvalue Var 0x9ca5c20 '__min' 'const int':'const int'))))
            (IfStmt 0x9ea4c60 <line:181:13, line:187:16>
              <<<NULL>>>
              (BinaryOperator 0x9ea49c0 <line:181:17, col:57> '_Bool' '>'
                (ImplicitCastExpr 0x9ea4990 <col:17> 'long' <LValueToRValue>
                  (DeclRefExpr 0x9ea48c0 <col:17> 'long' lvalue Var 0x9ea4350 '__l' 'long'))
                (ImplicitCastExpr 0x9ea49b0 <col:23, col:57> 'long' <IntegralCast>
                  (ImplicitCastExpr 0x9ea49a0 <col:23, col:57> 'int':'int' <LValueToRValue>
                    (DeclRefExpr 0x9ea4970 <col:23, col:57> 'const int':'const int' lvalue Var 0x9ca5e30 '__max' 'const int':'const int'))))
              (CompoundStmt 0x9ea4bb8 <line:182:3, line:185:3>
                (CXXOperatorCallExpr 0x9ea4aa0 <line:183:5, col:24> 'const enum std::_Ios_Iostate' lvalue
                  (ImplicitCastExpr 0x9ea4a90 <col:11, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                    (DeclRefExpr 0x9ea4a78 <col:11, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9d6a3b0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
                  (DeclRefExpr 0x9ea4a0c <col:5> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9ea4290 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
                  (ImplicitCastExpr 0x9ea4a68 <col:14, col:24> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                    (DeclRefExpr 0x9ea4a44 <col:14, col:24> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6baa0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
                (BinaryOperator 0x9ea4ba0 <line:184:5, col:45> 'int' lvalue '='
                  (DeclRefExpr 0x9ea4ac4 <col:5> 'int' lvalue ParmVar 0x9ea3f50 '__n' 'int &')
                  (ImplicitCastExpr 0x9ea4b90 <col:11, col:45> 'int':'int' <LValueToRValue>
                    (DeclRefExpr 0x9ea4b70 <col:11, col:45> 'const int':'const int' lvalue Var 0x9ca5e30 '__max' 'const int':'const int'))))
              (BinaryOperator 0x9ea4c48 <line:187:3, col:16> 'int' lvalue '='
                (DeclRefExpr 0x9ea4bd0 <col:3> 'int' lvalue ParmVar 0x9ea3f50 '__n' 'int &')
                (CXXFunctionalCastExpr 0x9ea4c30 <col:9, col:16> 'int' functional cast to int <NoOp>
                  (ImplicitCastExpr 0x9ea4c20 <col:13> 'int' <IntegralCast>
                    (ImplicitCastExpr 0x9ea4c10 <col:13> 'long' <LValueToRValue>
                      (DeclRefExpr 0x9ea4bf4 <col:13> 'long' lvalue Var 0x9ea4350 '__l' 'long'))))))))
        <<<NULL>>>)
      (IfStmt 0x9ea4dc0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:193:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9ea4ce0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9ea4da8 </usr/include/c++/4.6/bits/istream.tcc:190:6, line:193:6>
          (CallExpr 0x9ea4d78 <line:191:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9ea4d00 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9ea4cf0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9ea4d54 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6b9e0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x9ea4d98 <line:192:31>))
        <<<NULL>>>)
      (IfStmt 0x9ea4eb0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:195:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9ea4de0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9ea4e98 </usr/include/c++/4.6/bits/istream.tcc:195:6, col:45>
          (CallExpr 0x9ea4e78 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9ea4e00 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9ea4df0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9ea4e54 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6b9e0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0x9ea4f88 <line:196:4, line:197:26>
        <<<NULL>>>
        (ImplicitCastExpr 0x9ea4ef8 <line:196:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0x9ea4ee8 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9ea4ecc <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9ea4290 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0x9ea4f68 <line:197:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9ea4f18 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x9ea4f08 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0x9ea4f4c <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9ea4290 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9ea5018 <line:199:7, col:15>
    (UnaryOperator 0x9ea5000 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9ea4ff0 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &operator>>(__streambuf_type *__sbout) (CompoundStmt 0x9ea5fa8 </usr/include/c++/4.6/bits/istream.tcc:206:5, line:232:5>
  (DeclStmt 0x9ea56d8 <line:207:7, col:50>
    0x9ea5650 "ios_base::iostate __err =
      (ImplicitCastExpr 0x9ea56c8 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9ea56a4 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6bb00 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (DeclStmt 0x9ea5780 <line:208:7, col:34>
    0x9ea56f0 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0x9ea5760 <col:20, col:33> 'class std::basic_istream::sentry'
        (UnaryOperator 0x9ea5738 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9ea5728 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0x9ea5750 <col:28> '_Bool' false))")
  (IfStmt 0x9ea5e78 <line:209:7, line:228:21>
    <<<NULL>>>
    (BinaryOperator 0x9ea57c0 <line:209:11, col:21> '<dependent type>' '&&'
      (DeclRefExpr 0x9ea5790 <col:11> 'class std::basic_istream::sentry' lvalue Var 0x9ea56f0 '__cerb' 'class std::basic_istream::sentry')
      (DeclRefExpr 0x9ea57a8 <col:21> '__streambuf_type *' lvalue ParmVar 0x9ea53d0 '__sbout' '__streambuf_type *'))
    (CompoundStmt 0x9ea5d50 <line:210:2, line:226:2>
      (IfStmt 0x9ea5b40 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:218:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9ea57d8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9ea5b20 </usr/include/c++/4.6/bits/istream.tcc:212:6, line:218:6>
          (DeclStmt 0x9ea5828 <line:213:8, col:20>
            0x9ea57f0 "bool __ineof")
          (IfStmt 0x9ea5a00 <line:214:8, line:215:22>
            <<<NULL>>>
            (UnaryOperator 0x9ea5930 <line:214:12, col:66> '<dependent type>' prefix '!'
              (CallExpr 0x9ea5908 <col:13, col:66> '<dependent type>'
                (UnresolvedLookupExpr 0x9ea5838 <col:13> '<overloaded function type>' lvalue (ADL) = '1' 0x9d8b1d0)
                (CallExpr 0x9ea58b8 <col:35, col:47> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9ea5880 <col:35, col:41> '<dependent type>' lvalue
                    (CXXThisExpr 0x9ea5870 <col:35> 'basic_istream<_CharT, _Traits> *' this)))
                (DeclRefExpr 0x9ea58d4 <col:50> '__streambuf_type *' lvalue ParmVar 0x9ea53d0 '__sbout' '__streambuf_type *')
                (DeclRefExpr 0x9ea58ec <col:59> '_Bool' lvalue Var 0x9ea57f0 '__ineof' '_Bool')))
            (CXXOperatorCallExpr 0x9ea59d8 <line:215:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x9ea59c8 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9ea59b0 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9d6a3b0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x9ea5944 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9ea5650 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0x9ea59a0 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x9ea597c <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6baa0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>)
          (IfStmt 0x9ea5b00 <line:216:8, line:217:22>
            <<<NULL>>>
            (ImplicitCastExpr 0x9ea5a38 <line:216:12> '_Bool' <LValueToRValue>
              (DeclRefExpr 0x9ea5a1c <col:12> '_Bool' lvalue Var 0x9ea57f0 '__ineof' '_Bool'))
            (CXXOperatorCallExpr 0x9ea5ad8 <line:217:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x9ea5ac8 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9ea5ab0 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9d6a3b0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x9ea5a44 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9ea5650 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0x9ea5aa0 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x9ea5a7c <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6ba40 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0x9ea5c40 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:223:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9ea5b60 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9ea5c28 </usr/include/c++/4.6/bits/istream.tcc:220:6, line:223:6>
          (CallExpr 0x9ea5bf8 <line:221:8, col:43> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9ea5b80 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9ea5b70 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9ea5bd4 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6baa0 'failbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x9ea5c18 <line:222:31>))
        <<<NULL>>>)
      (IfStmt 0x9ea5d30 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:225:46>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9ea5c60 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9ea5d18 </usr/include/c++/4.6/bits/istream.tcc:225:6, col:46>
          (CallExpr 0x9ea5cf8 <col:8, col:43> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9ea5c80 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9ea5c70 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9ea5cd4 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6baa0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    (IfStmt 0x9ea5e58 <line:227:12, line:228:21>
      <<<NULL>>>
      (UnaryOperator 0x9ea5d88 <line:227:16, col:17> '<dependent type>' prefix '!'
        (DeclRefExpr 0x9ea5d6c <col:17> '__streambuf_type *' lvalue ParmVar 0x9ea53d0 '__sbout' '__streambuf_type *'))
      (CXXOperatorCallExpr 0x9ea5e30 <line:228:2, col:21> 'const enum std::_Ios_Iostate' lvalue
        (ImplicitCastExpr 0x9ea5e20 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9ea5e08 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9d6a3b0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
        (DeclRefExpr 0x9ea5d9c <col:2> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9ea5650 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
        (ImplicitCastExpr 0x9ea5df8 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
          (DeclRefExpr 0x9ea5dd4 <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6baa0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
      <<<NULL>>>))
  (IfStmt 0x9ea5f50 <line:229:7, line:230:22>
    <<<NULL>>>
    (ImplicitCastExpr 0x9ea5ec0 <line:229:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x9ea5eb0 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9ea5e94 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9ea5650 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0x9ea5f30 <line:230:2, col:22> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9ea5ee0 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0x9ea5ed0 <col:2> 'basic_istream<_CharT, _Traits> *' this))
      (DeclRefExpr 0x9ea5f14 <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9ea5650 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0x9ea5f98 <line:231:7, col:15>
    (UnaryOperator 0x9ea5f80 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9ea5f70 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    typename basic_istream<_CharT, _Traits>::int_type get() (CompoundStmt 0x9ea70b0 </usr/include/c++/4.6/bits/istream.tcc:238:5, line:268:5>
  (DeclStmt 0x9ea66a0 <line:239:7, col:48>
    0x9ea65d0 "const int_type __eof =
      (CallExpr 0x9ea6680 <col:30, col:47> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ea6648 <col:30, col:43> '<dependent type>' lvalue))")
  (DeclStmt 0x9ea6710 <line:240:7, col:27>
    0x9ea66c0 "int_type __c =
      (DeclRefExpr 0x9ea66f4 <col:22> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x9ea65d0 '__eof' 'const int_type':'const typename _Traits::int_type')")
  (BinaryOperator 0x9ea6768 <line:241:7, col:19> '<dependent type>' '='
    (MemberExpr 0x9ea6730 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0x9e80030
      (CXXThisExpr 0x9ea6720 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0x9ea6750 <col:19> 'int' 0))
  (DeclStmt 0x9ea6838 <line:242:7, col:50>
    0x9ea67b0 "ios_base::iostate __err =
      (ImplicitCastExpr 0x9ea6828 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9ea6804 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6bb00 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (DeclStmt 0x9ea68e0 <line:243:7, col:33>
    0x9ea6850 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0x9ea68c0 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0x9ea6898 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9ea6888 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0x9ea68b0 <col:28> '_Bool' true))")
  (IfStmt 0x9ea6e50 <line:244:7, line:262:2>
    <<<NULL>>>
    (DeclRefExpr 0x9ea68f0 <line:244:11> 'class std::basic_istream::sentry' lvalue Var 0x9ea6850 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0x9ea6e30 <line:245:2, line:262:2>
      (IfStmt 0x9ea6c20 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:254:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9ea6908 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9ea6c08 </usr/include/c++/4.6/bits/istream.tcc:247:6, line:254:6>
          (BinaryOperator 0x9ea69f0 <line:248:8, col:36> '<dependent type>' '='
            (DeclRefExpr 0x9ea6918 <col:8> 'int_type':'typename _Traits::int_type' lvalue Var 0x9ea66c0 '__c' 'int_type':'typename _Traits::int_type')
            (CallExpr 0x9ea69d0 <col:14, col:36> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9ea6998 <col:14, col:29> '<dependent type>' lvalue
                (CallExpr 0x9ea6978 <col:14, col:26> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9ea6940 <col:14, col:20> '<dependent type>' lvalue
                    (CXXThisExpr 0x9ea6930 <col:14> 'basic_istream<_CharT, _Traits> *' this))))))
          (IfStmt 0x9ea6be8 <line:250:8, line:253:22>
            <<<NULL>>>
            (UnaryOperator 0x9ea6ab8 <line:250:12, col:48> '<dependent type>' prefix '!'
              (CallExpr 0x9ea6a90 <col:13, col:48> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9ea6a28 <col:13, col:26> '<dependent type>' lvalue)
                (DeclRefExpr 0x9ea6a5c <col:38> 'int_type':'typename _Traits::int_type' lvalue Var 0x9ea66c0 '__c' 'int_type':'typename _Traits::int_type')
                (DeclRefExpr 0x9ea6a74 <col:43> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x9ea65d0 '__eof' 'const int_type':'const typename _Traits::int_type')))
            (BinaryOperator 0x9ea6b18 <line:251:3, col:15> '<dependent type>' '='
              (MemberExpr 0x9ea6ae0 <col:3> 'streamsize':'int' lvalue ->_M_gcount 0x9e80030
                (CXXThisExpr 0x9ea6ad0 <col:3> 'basic_istream<_CharT, _Traits> *' this))
              (IntegerLiteral 0x9ea6b00 <col:15> 'int' 1))
            (CXXOperatorCallExpr 0x9ea6bc0 <line:253:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x9ea6bb0 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9ea6b98 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9d6a3b0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x9ea6b30 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9ea67b0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0x9ea6b88 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x9ea6b64 <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6ba40 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))))
        <<<NULL>>>)
      (IfStmt 0x9ea6d20 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:259:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9ea6c40 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9ea6d08 </usr/include/c++/4.6/bits/istream.tcc:256:6, line:259:6>
          (CallExpr 0x9ea6cd8 <line:257:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9ea6c60 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9ea6c50 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9ea6cb4 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6b9e0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x9ea6cf8 <line:258:31>))
        <<<NULL>>>)
      (IfStmt 0x9ea6e10 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:261:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9ea6d40 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9ea6df8 </usr/include/c++/4.6/bits/istream.tcc:261:6, col:45>
          (CallExpr 0x9ea6dd8 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9ea6d60 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9ea6d50 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9ea6db4 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6b9e0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0x9ea6f90 <line:263:7, line:264:21>
    <<<NULL>>>
    (UnaryOperator 0x9ea6ec0 <line:263:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9ea6eb0 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0x9ea6ea0 <col:12> 'streamsize':'int' <LValueToRValue>
          (MemberExpr 0x9ea6e80 <col:12> 'streamsize':'int' lvalue ->_M_gcount 0x9e80030
            (CXXThisExpr 0x9ea6e70 <col:12> 'basic_istream<_CharT, _Traits> *' this)))))
    (CXXOperatorCallExpr 0x9ea6f68 <line:264:2, col:21> 'const enum std::_Ios_Iostate' lvalue
      (ImplicitCastExpr 0x9ea6f58 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9ea6f40 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9d6a3b0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
      (DeclRefExpr 0x9ea6ed4 <col:2> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9ea67b0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
      (ImplicitCastExpr 0x9ea6f30 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9ea6f0c <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6baa0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (IfStmt 0x9ea7068 <line:265:7, line:266:22>
    <<<NULL>>>
    (ImplicitCastExpr 0x9ea6fd8 <line:265:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x9ea6fc8 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9ea6fac <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9ea67b0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0x9ea7048 <line:266:2, col:22> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9ea6ff8 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0x9ea6fe8 <col:2> 'basic_istream<_CharT, _Traits> *' this))
      (DeclRefExpr 0x9ea702c <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9ea67b0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0x9ea70a0 <line:267:7, col:14>
    (DeclRefExpr 0x9ea7084 <col:14> 'int_type':'typename _Traits::int_type' lvalue Var 0x9ea66c0 '__c' 'int_type':'typename _Traits::int_type')))


    basic_istream<_CharT, _Traits> &get(char_type &__c) (CompoundStmt 0x9ea81b8 </usr/include/c++/4.6/bits/istream.tcc:274:5, line:305:5>
  (BinaryOperator 0x9ea7700 <line:275:7, col:19> '<dependent type>' '='
    (MemberExpr 0x9ea76c8 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0x9e80030
      (CXXThisExpr 0x9ea76b8 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0x9ea76e8 <col:19> 'int' 0))
  (DeclStmt 0x9ea77d8 <line:276:7, col:50>
    0x9ea7750 "ios_base::iostate __err =
      (ImplicitCastExpr 0x9ea77c8 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9ea77a4 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6bb00 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (DeclStmt 0x9ea7880 <line:277:7, col:33>
    0x9ea77f0 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0x9ea7860 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0x9ea7838 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9ea7828 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0x9ea7850 <col:28> '_Bool' true))")
  (IfStmt 0x9ea7f48 <line:278:7, line:299:2>
    <<<NULL>>>
    (DeclRefExpr 0x9ea7890 <line:278:11> 'class std::basic_istream::sentry' lvalue Var 0x9ea77f0 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0x9ea7f28 <line:279:2, line:299:2>
      (IfStmt 0x9ea7d18 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:291:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9ea78a8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9ea7d00 </usr/include/c++/4.6/bits/istream.tcc:281:6, line:291:6>
          (DeclStmt 0x9ea79b8 <line:282:8, col:53>
            0x9ea78c0 "const int_type __cb =
              (CallExpr 0x9ea7998 <col:30, col:52> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9ea7960 <col:30, col:45> '<dependent type>' lvalue
                  (CallExpr 0x9ea7940 <col:30, col:42> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9ea7908 <col:30, col:36> '<dependent type>' lvalue
                      (CXXThisExpr 0x9ea78f8 <col:30> 'basic_istream<_CharT, _Traits> *' this)))))")
          (IfStmt 0x9ea7ce0 <line:284:8, line:290:22>
            <<<NULL>>>
            (UnaryOperator 0x9ea7ad8 <line:284:12, col:62> '<dependent type>' prefix '!'
              (CallExpr 0x9ea7ab0 <col:13, col:62> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9ea79e8 <col:13, col:26> '<dependent type>' lvalue)
                (DeclRefExpr 0x9ea7a1c <col:38> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x9ea78c0 '__cb' 'const int_type':'const typename _Traits::int_type')
                (CallExpr 0x9ea7a90 <col:44, col:61> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9ea7a58 <col:44, col:57> '<dependent type>' lvalue))))
            (CompoundStmt 0x9ea7c10 <line:285:3, line:288:3>
              (BinaryOperator 0x9ea7b38 <line:286:5, col:17> '<dependent type>' '='
                (MemberExpr 0x9ea7b00 <col:5> 'streamsize':'int' lvalue ->_M_gcount 0x9e80030
                  (CXXThisExpr 0x9ea7af0 <col:5> 'basic_istream<_CharT, _Traits> *' this))
                (IntegerLiteral 0x9ea7b20 <col:17> 'int' 1))
              (BinaryOperator 0x9ea7bf8 <line:287:5, col:41> '<dependent type>' '='
                (DeclRefExpr 0x9ea7b50 <col:5> 'char_type':'_CharT' lvalue ParmVar 0x9ea7470 '__c' 'char_type &')
                (CallExpr 0x9ea7bd8 <col:11, col:41> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9ea7b88 <col:11, col:24> '<dependent type>' lvalue)
                  (DeclRefExpr 0x9ea7bbc <col:37> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x9ea78c0 '__cb' 'const int_type':'const typename _Traits::int_type'))))
            (CXXOperatorCallExpr 0x9ea7cb8 <line:290:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x9ea7ca8 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9ea7c90 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9d6a3b0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x9ea7c28 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9ea7750 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0x9ea7c80 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x9ea7c5c <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6ba40 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))))
        <<<NULL>>>)
      (IfStmt 0x9ea7e18 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:296:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9ea7d38 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9ea7e00 </usr/include/c++/4.6/bits/istream.tcc:293:6, line:296:6>
          (CallExpr 0x9ea7dd0 <line:294:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9ea7d58 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9ea7d48 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9ea7dac <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6b9e0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x9ea7df0 <line:295:31>))
        <<<NULL>>>)
      (IfStmt 0x9ea7f08 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:298:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9ea7e38 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9ea7ef0 </usr/include/c++/4.6/bits/istream.tcc:298:6, col:45>
          (CallExpr 0x9ea7ed0 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9ea7e58 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9ea7e48 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9ea7eac <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6b9e0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0x9ea8088 <line:300:7, line:301:21>
    <<<NULL>>>
    (UnaryOperator 0x9ea7fb8 <line:300:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9ea7fa8 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0x9ea7f98 <col:12> 'streamsize':'int' <LValueToRValue>
          (MemberExpr 0x9ea7f78 <col:12> 'streamsize':'int' lvalue ->_M_gcount 0x9e80030
            (CXXThisExpr 0x9ea7f68 <col:12> 'basic_istream<_CharT, _Traits> *' this)))))
    (CXXOperatorCallExpr 0x9ea8060 <line:301:2, col:21> 'const enum std::_Ios_Iostate' lvalue
      (ImplicitCastExpr 0x9ea8050 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9ea8038 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9d6a3b0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
      (DeclRefExpr 0x9ea7fcc <col:2> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9ea7750 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
      (ImplicitCastExpr 0x9ea8028 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9ea8004 <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6baa0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (IfStmt 0x9ea8160 <line:302:7, line:303:22>
    <<<NULL>>>
    (ImplicitCastExpr 0x9ea80d0 <line:302:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x9ea80c0 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9ea80a4 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9ea7750 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0x9ea8140 <line:303:2, col:22> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9ea80f0 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0x9ea80e0 <col:2> 'basic_istream<_CharT, _Traits> *' this))
      (DeclRefExpr 0x9ea8124 <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9ea7750 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0x9ea81a8 <line:304:7, col:15>
    (UnaryOperator 0x9ea8190 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9ea8180 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &get(char_type *__s, streamsize __n, char_type __delim) (CompoundStmt 0x9ea99d8 </usr/include/c++/4.6/bits/istream.tcc:311:5, line:352:5>
  (BinaryOperator 0x9ea8898 <line:312:7, col:19> '<dependent type>' '='
    (MemberExpr 0x9ea8860 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0x9e80030
      (CXXThisExpr 0x9ea8850 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0x9ea8880 <col:19> 'int' 0))
  (DeclStmt 0x9ea8968 <line:313:7, col:50>
    0x9ea88e0 "ios_base::iostate __err =
      (ImplicitCastExpr 0x9ea8958 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9ea8934 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6bb00 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (DeclStmt 0x9ea8a10 <line:314:7, col:33>
    0x9ea8980 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0x9ea89f0 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0x9ea89c8 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9ea89b8 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0x9ea89e0 <col:28> '_Bool' true))")
  (IfStmt 0x9ea9688 <line:315:7, line:342:2>
    <<<NULL>>>
    (DeclRefExpr 0x9ea8a20 <line:315:11> 'class std::basic_istream::sentry' lvalue Var 0x9ea8980 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0x9ea9668 <line:316:2, line:342:2>
      (IfStmt 0x9ea9458 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:334:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9ea8a38 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9ea9430 </usr/include/c++/4.6/bits/istream.tcc:318:6, line:334:6>
          (DeclStmt 0x9ea8b18 <line:319:8, col:67>
            0x9ea8a50 "const int_type __idelim =
              (CallExpr 0x9ea8af8 <col:34, col:66> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9ea8aa8 <col:34, col:47> '<dependent type>' lvalue)
                (DeclRefExpr 0x9ea8adc <col:59> 'char_type':'_CharT' lvalue ParmVar 0x9ea85f0 '__delim' 'char_type':'_CharT'))")
          (DeclStmt 0x9ea8be0 <line:320:8, col:49>
            0x9ea8b30 "const int_type __eof =
              (CallExpr 0x9ea8bc0 <col:31, col:48> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9ea8b88 <col:31, col:44> '<dependent type>' lvalue))")
          (DeclStmt 0x9ea8ca0 <line:321:8, col:46>
            0x9ea8c00 "__streambuf_type *__sb =
              (CallExpr 0x9ea8c80 <col:33, col:45> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9ea8c48 <col:33, col:39> '<dependent type>' lvalue
                  (CXXThisExpr 0x9ea8c38 <col:33> 'basic_istream<_CharT, _Traits> *' this)))")
          (DeclStmt 0x9ea8d68 <line:322:8, col:36>
            0x9ea8cc0 "int_type __c =
              (CallExpr 0x9ea8d48 <col:23, col:35> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9ea8d10 <col:23, col:29> '<dependent type>' lvalue
                  (DeclRefExpr 0x9ea8cf4 <col:23> '__streambuf_type *' lvalue Var 0x9ea8c00 '__sb' '__streambuf_type *')))")
          (WhileStmt 0x9ea9288 <line:324:8, line:331:3>
            <<<NULL>>>
            (BinaryOperator 0x9ea9060 <line:324:15, line:326:50> '<dependent type>' '&&'
              (BinaryOperator 0x9ea8f80 <line:324:15, line:325:47> '<dependent type>' '&&'
                (CXXOperatorCallExpr 0x9ea8e90 <line:324:15, col:31> '<dependent type>'
                  (UnresolvedLookupExpr 0x9ea8e48 <col:29, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40ad0 0x9b57c70 0x9b5ddb0 0x9cbc120 0x9cbc650 0x9cbcb80)
                  (CXXOperatorCallExpr 0x9ea8e08 <col:15, col:27> '<dependent type>'
                    (UnresolvedLookupExpr 0x9ea8dc0 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9ce1500 0x9ce2100 0x9cb8030 0x9cb8830)
                    (MemberExpr 0x9ea8d88 <col:15> 'streamsize':'int' lvalue ->_M_gcount 0x9e80030
                      (CXXThisExpr 0x9ea8d78 <col:15> 'basic_istream<_CharT, _Traits> *' this))
                    (IntegerLiteral 0x9ea8da8 <col:27> 'int' 1))
                  (DeclRefExpr 0x9ea8e2c <col:31> 'streamsize':'int' lvalue ParmVar 0x9ea85b0 '__n' 'streamsize':'int'))
                (UnaryOperator 0x9ea8f68 <line:325:11, col:47> '<dependent type>' prefix '!'
                  (CallExpr 0x9ea8f40 <col:12, col:47> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9ea8ed8 <col:12, col:25> '<dependent type>' lvalue)
                    (DeclRefExpr 0x9ea8f0c <col:37> 'int_type':'typename _Traits::int_type' lvalue Var 0x9ea8cc0 '__c' 'int_type':'typename _Traits::int_type')
                    (DeclRefExpr 0x9ea8f24 <col:42> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x9ea8b30 '__eof' 'const int_type':'const typename _Traits::int_type'))))
              (UnaryOperator 0x9ea9048 <line:326:11, col:50> '<dependent type>' prefix '!'
                (CallExpr 0x9ea9020 <col:12, col:50> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9ea8fb8 <col:12, col:25> '<dependent type>' lvalue)
                  (DeclRefExpr 0x9ea8fec <col:37> 'int_type':'typename _Traits::int_type' lvalue Var 0x9ea8cc0 '__c' 'int_type':'typename _Traits::int_type')
                  (DeclRefExpr 0x9ea9004 <col:42> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x9ea8a50 '__idelim' 'const int_type':'const typename _Traits::int_type'))))
            (CompoundStmt 0x9ea9268 <line:327:3, line:331:3>
              (BinaryOperator 0x9ea9168 <line:328:5, col:43> '<dependent type>' '='
                (UnaryOperator 0x9ea90c0 <col:5, col:9> '<dependent type>' prefix '*'
                  (UnaryOperator 0x9ea90a8 <col:6, col:9> '<dependent type>' postfix '++'
                    (DeclRefExpr 0x9ea9078 <col:6> 'char_type *' lvalue ParmVar 0x9ea8570 '__s' 'char_type *')))
                (CallExpr 0x9ea9148 <col:14, col:43> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9ea90f8 <col:14, col:27> '<dependent type>' lvalue)
                  (DeclRefExpr 0x9ea912c <col:40> 'int_type':'typename _Traits::int_type' lvalue Var 0x9ea8cc0 '__c' 'int_type':'typename _Traits::int_type')))
              (UnaryOperator 0x9ea91b0 <line:329:5, col:7> '<dependent type>' prefix '++'
                (MemberExpr 0x9ea9190 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0x9e80030
                  (CXXThisExpr 0x9ea9180 <col:7> 'basic_istream<_CharT, _Traits> *' this)))
              (BinaryOperator 0x9ea9250 <line:330:5, col:24> '<dependent type>' '='
                (DeclRefExpr 0x9ea91c4 <col:5> 'int_type':'typename _Traits::int_type' lvalue Var 0x9ea8cc0 '__c' 'int_type':'typename _Traits::int_type')
                (CallExpr 0x9ea9230 <col:11, col:24> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9ea91f8 <col:11, col:17> '<dependent type>' lvalue
                    (DeclRefExpr 0x9ea91dc <col:11> '__streambuf_type *' lvalue Var 0x9ea8c00 '__sb' '__streambuf_type *'))))))
          (IfStmt 0x9ea9410 <line:332:8, line:333:22>
            <<<NULL>>>
            (CallExpr 0x9ea9330 <line:332:12, col:47> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9ea92c8 <col:12, col:25> '<dependent type>' lvalue)
              (DeclRefExpr 0x9ea92fc <col:37> 'int_type':'typename _Traits::int_type' lvalue Var 0x9ea8cc0 '__c' 'int_type':'typename _Traits::int_type')
              (DeclRefExpr 0x9ea9314 <col:42> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x9ea8b30 '__eof' 'const int_type':'const typename _Traits::int_type'))
            (CXXOperatorCallExpr 0x9ea93e8 <line:333:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x9ea93d8 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9ea93c0 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9d6a3b0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x9ea9354 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9ea88e0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0x9ea93b0 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x9ea938c <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6ba40 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0x9ea9558 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:339:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9ea9478 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9ea9540 </usr/include/c++/4.6/bits/istream.tcc:336:6, line:339:6>
          (CallExpr 0x9ea9510 <line:337:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9ea9498 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9ea9488 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9ea94ec <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6b9e0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x9ea9530 <line:338:31>))
        <<<NULL>>>)
      (IfStmt 0x9ea9648 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:341:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9ea9578 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9ea9630 </usr/include/c++/4.6/bits/istream.tcc:341:6, col:45>
          (CallExpr 0x9ea9610 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9ea9598 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9ea9588 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9ea95ec <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6b9e0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0x9ea9768 <line:345:7, line:346:19>
    <<<NULL>>>
    (BinaryOperator 0x9ea96e8 <line:345:11, col:17> '_Bool' '>'
      (ImplicitCastExpr 0x9ea96d8 <col:11> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0x9ea96a4 <col:11> 'streamsize':'int' lvalue ParmVar 0x9ea85b0 '__n' 'streamsize':'int'))
      (IntegerLiteral 0x9ea96c0 <col:17> 'int' 0))
    (BinaryOperator 0x9ea9750 <line:346:2, col:19> '<dependent type>' '='
      (UnaryOperator 0x9ea9718 <col:2, col:3> '<dependent type>' prefix '*'
        (DeclRefExpr 0x9ea9700 <col:3> 'char_type *' lvalue ParmVar 0x9ea8570 '__s' 'char_type *'))
      (CXXUnresolvedConstructExpr 0x9ea9738 <col:9, col:19> 'char_type':'_CharT'))
    <<<NULL>>>)
  (IfStmt 0x9ea98a8 <line:347:7, line:348:21>
    <<<NULL>>>
    (UnaryOperator 0x9ea97d8 <line:347:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9ea97c8 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0x9ea97b8 <col:12> 'streamsize':'int' <LValueToRValue>
          (MemberExpr 0x9ea9798 <col:12> 'streamsize':'int' lvalue ->_M_gcount 0x9e80030
            (CXXThisExpr 0x9ea9788 <col:12> 'basic_istream<_CharT, _Traits> *' this)))))
    (CXXOperatorCallExpr 0x9ea9880 <line:348:2, col:21> 'const enum std::_Ios_Iostate' lvalue
      (ImplicitCastExpr 0x9ea9870 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9ea9858 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9d6a3b0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
      (DeclRefExpr 0x9ea97ec <col:2> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9ea88e0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
      (ImplicitCastExpr 0x9ea9848 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9ea9824 <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6baa0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (IfStmt 0x9ea9980 <line:349:7, line:350:22>
    <<<NULL>>>
    (ImplicitCastExpr 0x9ea98f0 <line:349:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x9ea98e0 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9ea98c4 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9ea88e0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0x9ea9960 <line:350:2, col:22> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9ea9910 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0x9ea9900 <col:2> 'basic_istream<_CharT, _Traits> *' this))
      (DeclRefExpr 0x9ea9944 <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9ea88e0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0x9ea99c8 <line:351:7, col:15>
    (UnaryOperator 0x9ea99b0 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9ea99a0 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &get(__streambuf_type &__sb, char_type __delim) (CompoundStmt 0x9eab170 </usr/include/c++/4.6/bits/istream.tcc:358:5, line:396:5>
  (BinaryOperator 0x9eaa060 <line:359:7, col:19> '<dependent type>' '='
    (MemberExpr 0x9eaa028 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0x9e80030
      (CXXThisExpr 0x9eaa018 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0x9eaa048 <col:19> 'int' 0))
  (DeclStmt 0x9eaa138 <line:360:7, col:50>
    0x9eaa0b0 "ios_base::iostate __err =
      (ImplicitCastExpr 0x9eaa128 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9eaa104 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6bb00 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (DeclStmt 0x9eaa1e0 <line:361:7, col:33>
    0x9eaa150 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0x9eaa1c0 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0x9eaa198 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9eaa188 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0x9eaa1b0 <col:28> '_Bool' true))")
  (IfStmt 0x9eaaef0 <line:362:7, line:390:2>
    <<<NULL>>>
    (DeclRefExpr 0x9eaa1f0 <line:362:11> 'class std::basic_istream::sentry' lvalue Var 0x9eaa150 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0x9eaaed0 <line:363:2, line:390:2>
      (IfStmt 0x9eaacc0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:382:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9eaa208 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9eaac90 </usr/include/c++/4.6/bits/istream.tcc:365:6, line:382:6>
          (DeclStmt 0x9eaa2e8 <line:366:8, col:67>
            0x9eaa220 "const int_type __idelim =
              (CallExpr 0x9eaa2c8 <col:34, col:66> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9eaa278 <col:34, col:47> '<dependent type>' lvalue)
                (DeclRefExpr 0x9eaa2ac <col:59> 'char_type':'_CharT' lvalue ParmVar 0x9ea9dd0 '__delim' 'char_type':'_CharT'))")
          (DeclStmt 0x9eaa3b0 <line:367:8, col:49>
            0x9eaa300 "const int_type __eof =
              (CallExpr 0x9eaa390 <col:31, col:48> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9eaa358 <col:31, col:44> '<dependent type>' lvalue))")
          (DeclStmt 0x9eaa470 <line:368:8, col:51>
            0x9eaa3d0 "__streambuf_type *__this_sb =
              (CallExpr 0x9eaa450 <col:38, col:50> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9eaa418 <col:38, col:44> '<dependent type>' lvalue
                  (CXXThisExpr 0x9eaa408 <col:38> 'basic_istream<_CharT, _Traits> *' this)))")
          (DeclStmt 0x9eaa538 <line:369:8, col:41>
            0x9eaa490 "int_type __c =
              (CallExpr 0x9eaa518 <col:23, col:40> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9eaa4e0 <col:23, col:34> '<dependent type>' lvalue
                  (DeclRefExpr 0x9eaa4c4 <col:23> '__streambuf_type *' lvalue Var 0x9eaa3d0 '__this_sb' '__streambuf_type *')))")
          (DeclStmt 0x9eaa618 <line:370:8, col:55>
            0x9eaa550 "char_type __c2 =
              (CallExpr 0x9eaa5f8 <col:25, col:54> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9eaa5a8 <col:25, col:38> '<dependent type>' lvalue)
                (DeclRefExpr 0x9eaa5dc <col:51> 'int_type':'typename _Traits::int_type' lvalue Var 0x9eaa490 '__c' 'int_type':'typename _Traits::int_type'))")
          (WhileStmt 0x9eaaae8 <line:372:8, line:379:3>
            <<<NULL>>>
            (BinaryOperator 0x9eaa908 <line:372:15, line:374:60> '<dependent type>' '&&'
              (BinaryOperator 0x9eaa7b8 <line:372:15, line:373:50> '<dependent type>' '&&'
                (UnaryOperator 0x9eaa6d8 <line:372:15, col:51> '<dependent type>' prefix '!'
                  (CallExpr 0x9eaa6b0 <col:16, col:51> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9eaa648 <col:16, col:29> '<dependent type>' lvalue)
                    (DeclRefExpr 0x9eaa67c <col:41> 'int_type':'typename _Traits::int_type' lvalue Var 0x9eaa490 '__c' 'int_type':'typename _Traits::int_type')
                    (DeclRefExpr 0x9eaa694 <col:46> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x9eaa300 '__eof' 'const int_type':'const typename _Traits::int_type')))
                (UnaryOperator 0x9eaa7a0 <line:373:11, col:50> '<dependent type>' prefix '!'
                  (CallExpr 0x9eaa778 <col:12, col:50> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9eaa710 <col:12, col:25> '<dependent type>' lvalue)
                    (DeclRefExpr 0x9eaa744 <col:37> 'int_type':'typename _Traits::int_type' lvalue Var 0x9eaa490 '__c' 'int_type':'typename _Traits::int_type')
                    (DeclRefExpr 0x9eaa75c <col:42> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x9eaa220 '__idelim' 'const int_type':'const typename _Traits::int_type'))))
              (UnaryOperator 0x9eaa8f0 <line:374:11, col:60> '<dependent type>' prefix '!'
                (CallExpr 0x9eaa8c8 <col:12, col:60> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9eaa7f0 <col:12, col:25> '<dependent type>' lvalue)
                  (CallExpr 0x9eaa890 <col:37, col:52> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9eaa840 <col:37, col:42> '<dependent type>' lvalue
                      (DeclRefExpr 0x9eaa824 <col:37> '__streambuf_type':'basic_streambuf<_CharT, _Traits>' lvalue ParmVar 0x9ea9d90 '__sb' '__streambuf_type &'))
                    (DeclRefExpr 0x9eaa874 <col:48> 'char_type':'_CharT' lvalue Var 0x9eaa550 '__c2' 'char_type':'_CharT'))
                  (DeclRefExpr 0x9eaa8b0 <col:55> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x9eaa300 '__eof' 'const int_type':'const typename _Traits::int_type'))))
            (CompoundStmt 0x9eaaac8 <line:375:3, line:379:3>
              (UnaryOperator 0x9eaa950 <line:376:5, col:7> '<dependent type>' prefix '++'
                (MemberExpr 0x9eaa930 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0x9e80030
                  (CXXThisExpr 0x9eaa920 <col:7> 'basic_istream<_CharT, _Traits> *' this)))
              (BinaryOperator 0x9eaa9f0 <line:377:5, col:29> '<dependent type>' '='
                (DeclRefExpr 0x9eaa964 <col:5> 'int_type':'typename _Traits::int_type' lvalue Var 0x9eaa490 '__c' 'int_type':'typename _Traits::int_type')
                (CallExpr 0x9eaa9d0 <col:11, col:29> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9eaa998 <col:11, col:22> '<dependent type>' lvalue
                    (DeclRefExpr 0x9eaa97c <col:11> '__streambuf_type *' lvalue Var 0x9eaa3d0 '__this_sb' '__streambuf_type *'))))
              (BinaryOperator 0x9eaaab0 <line:378:5, col:41> '<dependent type>' '='
                (DeclRefExpr 0x9eaaa08 <col:5> 'char_type':'_CharT' lvalue Var 0x9eaa550 '__c2' 'char_type':'_CharT')
                (CallExpr 0x9eaaa90 <col:12, col:41> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9eaaa40 <col:12, col:25> '<dependent type>' lvalue)
                  (DeclRefExpr 0x9eaaa74 <col:38> 'int_type':'typename _Traits::int_type' lvalue Var 0x9eaa490 '__c' 'int_type':'typename _Traits::int_type')))))
          (IfStmt 0x9eaac70 <line:380:8, line:381:22>
            <<<NULL>>>
            (CallExpr 0x9eaab90 <line:380:12, col:47> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9eaab28 <col:12, col:25> '<dependent type>' lvalue)
              (DeclRefExpr 0x9eaab5c <col:37> 'int_type':'typename _Traits::int_type' lvalue Var 0x9eaa490 '__c' 'int_type':'typename _Traits::int_type')
              (DeclRefExpr 0x9eaab74 <col:42> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x9eaa300 '__eof' 'const int_type':'const typename _Traits::int_type'))
            (CXXOperatorCallExpr 0x9eaac48 <line:381:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x9eaac38 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9eaac20 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9d6a3b0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x9eaabb4 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9eaa0b0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0x9eaac10 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x9eaabec <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6ba40 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0x9eaadc0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:387:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9eaace0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9eaada8 </usr/include/c++/4.6/bits/istream.tcc:384:6, line:387:6>
          (CallExpr 0x9eaad78 <line:385:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9eaad00 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9eaacf0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9eaad54 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6b9e0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x9eaad98 <line:386:31>))
        <<<NULL>>>)
      (IfStmt 0x9eaaeb0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:389:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9eaade0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9eaae98 </usr/include/c++/4.6/bits/istream.tcc:389:6, col:45>
          (CallExpr 0x9eaae78 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9eaae00 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9eaadf0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9eaae54 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6b9e0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0x9eab040 <line:391:7, line:392:21>
    <<<NULL>>>
    (UnaryOperator 0x9eaaf60 <line:391:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9eaaf50 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0x9eaaf40 <col:12> 'streamsize':'int' <LValueToRValue>
          (MemberExpr 0x9eaaf20 <col:12> 'streamsize':'int' lvalue ->_M_gcount 0x9e80030
            (CXXThisExpr 0x9eaaf10 <col:12> 'basic_istream<_CharT, _Traits> *' this)))))
    (CXXOperatorCallExpr 0x9eab018 <line:392:2, col:21> 'const enum std::_Ios_Iostate' lvalue
      (ImplicitCastExpr 0x9eab008 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9eaaff0 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9d6a3b0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
      (DeclRefExpr 0x9eaaf74 <col:2> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9eaa0b0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
      (ImplicitCastExpr 0x9eaafd0 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9eaafac <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6baa0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (IfStmt 0x9eab118 <line:393:7, line:394:22>
    <<<NULL>>>
    (ImplicitCastExpr 0x9eab088 <line:393:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x9eab078 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9eab05c <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9eaa0b0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0x9eab0f8 <line:394:2, col:22> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9eab0a8 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0x9eab098 <col:2> 'basic_istream<_CharT, _Traits> *' this))
      (DeclRefExpr 0x9eab0dc <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9eaa0b0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0x9eab160 <line:395:7, col:15>
    (UnaryOperator 0x9eab148 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9eab138 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &getline(char_type *__s, streamsize __n, char_type __delim) (CompoundStmt 0x9eacc00 </usr/include/c++/4.6/bits/istream.tcc:402:5, line:453:5>
  (BinaryOperator 0x9eab848 <line:403:7, col:19> '<dependent type>' '='
    (MemberExpr 0x9eab810 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0x9e80030
      (CXXThisExpr 0x9eab800 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0x9eab830 <col:19> 'int' 0))
  (DeclStmt 0x9eab918 <line:404:7, col:50>
    0x9eab890 "ios_base::iostate __err =
      (ImplicitCastExpr 0x9eab908 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9eab8e4 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6bb00 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (DeclStmt 0x9eab9c0 <line:405:7, col:33>
    0x9eab930 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0x9eab9a0 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0x9eab978 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9eab968 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0x9eab990 <col:28> '_Bool' true))")
  (IfStmt 0x9eac8b0 <line:406:7, line:443:9>
    <<<NULL>>>
    (DeclRefExpr 0x9eab9d0 <line:406:11> 'class std::basic_istream::sentry' lvalue Var 0x9eab930 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0x9eac890 <line:407:9, line:443:9>
      (IfStmt 0x9eac680 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:435:13>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9eab9e8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9eac658 </usr/include/c++/4.6/bits/istream.tcc:409:13, line:435:13>
          (DeclStmt 0x9eabac8 <line:410:15, col:74>
            0x9eaba00 "const int_type __idelim =
              (CallExpr 0x9eabaa8 <col:41, col:73> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9eaba58 <col:41, col:54> '<dependent type>' lvalue)
                (DeclRefExpr 0x9eaba8c <col:66> 'char_type':'_CharT' lvalue ParmVar 0x9eab5a0 '__delim' 'char_type':'_CharT'))")
          (DeclStmt 0x9eabb90 <line:411:15, col:56>
            0x9eabae0 "const int_type __eof =
              (CallExpr 0x9eabb70 <col:38, col:55> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9eabb38 <col:38, col:51> '<dependent type>' lvalue))")
          (DeclStmt 0x9eabc50 <line:412:15, col:53>
            0x9eabbb0 "__streambuf_type *__sb =
              (CallExpr 0x9eabc30 <col:40, col:52> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9eabbf8 <col:40, col:46> '<dependent type>' lvalue
                  (CXXThisExpr 0x9eabbe8 <col:40> 'basic_istream<_CharT, _Traits> *' this)))")
          (DeclStmt 0x9eabd18 <line:413:15, col:43>
            0x9eabc70 "int_type __c =
              (CallExpr 0x9eabcf8 <col:30, col:42> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9eabcc0 <col:30, col:36> '<dependent type>' lvalue
                  (DeclRefExpr 0x9eabca4 <col:30> '__streambuf_type *' lvalue Var 0x9eabbb0 '__sb' '__streambuf_type *')))")
          (WhileStmt 0x9eac238 <line:415:15, line:422:17>
            <<<NULL>>>
            (BinaryOperator 0x9eac010 <line:415:22, line:417:64> '<dependent type>' '&&'
              (BinaryOperator 0x9eabf30 <line:415:22, line:416:61> '<dependent type>' '&&'
                (CXXOperatorCallExpr 0x9eabe40 <line:415:22, col:38> '<dependent type>'
                  (UnresolvedLookupExpr 0x9eabdf8 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40ad0 0x9b57c70 0x9b5ddb0 0x9cbc120 0x9cbc650 0x9cbcb80)
                  (CXXOperatorCallExpr 0x9eabdb8 <col:22, col:34> '<dependent type>'
                    (UnresolvedLookupExpr 0x9eabd70 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9ce1500 0x9ce2100 0x9cb8030 0x9cb8830)
                    (MemberExpr 0x9eabd38 <col:22> 'streamsize':'int' lvalue ->_M_gcount 0x9e80030
                      (CXXThisExpr 0x9eabd28 <col:22> 'basic_istream<_CharT, _Traits> *' this))
                    (IntegerLiteral 0x9eabd58 <col:34> 'int' 1))
                  (DeclRefExpr 0x9eabddc <col:38> 'streamsize':'int' lvalue ParmVar 0x9eab560 '__n' 'streamsize':'int'))
                (UnaryOperator 0x9eabf18 <line:416:25, col:61> '<dependent type>' prefix '!'
                  (CallExpr 0x9eabef0 <col:26, col:61> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9eabe88 <col:26, col:39> '<dependent type>' lvalue)
                    (DeclRefExpr 0x9eabebc <col:51> 'int_type':'typename _Traits::int_type' lvalue Var 0x9eabc70 '__c' 'int_type':'typename _Traits::int_type')
                    (DeclRefExpr 0x9eabed4 <col:56> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x9eabae0 '__eof' 'const int_type':'const typename _Traits::int_type'))))
              (UnaryOperator 0x9eabff8 <line:417:25, col:64> '<dependent type>' prefix '!'
                (CallExpr 0x9eabfd0 <col:26, col:64> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9eabf68 <col:26, col:39> '<dependent type>' lvalue)
                  (DeclRefExpr 0x9eabf9c <col:51> 'int_type':'typename _Traits::int_type' lvalue Var 0x9eabc70 '__c' 'int_type':'typename _Traits::int_type')
                  (DeclRefExpr 0x9eabfb4 <col:56> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x9eaba00 '__idelim' 'const int_type':'const typename _Traits::int_type'))))
            (CompoundStmt 0x9eac218 <line:418:17, line:422:17>
              (BinaryOperator 0x9eac118 <line:419:19, col:57> '<dependent type>' '='
                (UnaryOperator 0x9eac070 <col:19, col:23> '<dependent type>' prefix '*'
                  (UnaryOperator 0x9eac058 <col:20, col:23> '<dependent type>' postfix '++'
                    (DeclRefExpr 0x9eac028 <col:20> 'char_type *' lvalue ParmVar 0x9eab520 '__s' 'char_type *')))
                (CallExpr 0x9eac0f8 <col:28, col:57> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9eac0a8 <col:28, col:41> '<dependent type>' lvalue)
                  (DeclRefExpr 0x9eac0dc <col:54> 'int_type':'typename _Traits::int_type' lvalue Var 0x9eabc70 '__c' 'int_type':'typename _Traits::int_type')))
              (BinaryOperator 0x9eac1b8 <line:420:19, col:38> '<dependent type>' '='
                (DeclRefExpr 0x9eac130 <col:19> 'int_type':'typename _Traits::int_type' lvalue Var 0x9eabc70 '__c' 'int_type':'typename _Traits::int_type')
                (CallExpr 0x9eac198 <col:25, col:38> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9eac160 <col:25, col:31> '<dependent type>' lvalue
                    (DeclRefExpr 0x9eac148 <col:25> '__streambuf_type *' lvalue Var 0x9eabbb0 '__sb' '__streambuf_type *'))))
              (UnaryOperator 0x9eac200 <line:421:19, col:21> '<dependent type>' prefix '++'
                (MemberExpr 0x9eac1e0 <col:21> 'streamsize':'int' lvalue ->_M_gcount 0x9e80030
                  (CXXThisExpr 0x9eac1d0 <col:21> 'basic_istream<_CharT, _Traits> *' this)))))
          (IfStmt 0x9eac638 <line:423:15, line:434:17>
            <<<NULL>>>
            (CallExpr 0x9eac2e0 <line:423:19, col:54> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9eac278 <col:19, col:32> '<dependent type>' lvalue)
              (DeclRefExpr 0x9eac2ac <col:44> 'int_type':'typename _Traits::int_type' lvalue Var 0x9eabc70 '__c' 'int_type':'typename _Traits::int_type')
              (DeclRefExpr 0x9eac2c4 <col:49> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x9eabae0 '__eof' 'const int_type':'const typename _Traits::int_type'))
            (CXXOperatorCallExpr 0x9eac398 <line:424:17, col:36> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x9eac388 <col:23, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9eac370 <col:23, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9d6a3b0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x9eac304 <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9eab890 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0x9eac360 <col:26, col:36> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x9eac33c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6ba40 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            (CompoundStmt 0x9eac620 <line:426:17, line:434:17>
              (IfStmt 0x9eac600 <line:427:19, line:433:40>
                <<<NULL>>>
                (CallExpr 0x9eac450 <line:427:23, col:61> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9eac3e8 <col:23, col:36> '<dependent type>' lvalue)
                  (DeclRefExpr 0x9eac41c <col:48> 'int_type':'typename _Traits::int_type' lvalue Var 0x9eabc70 '__c' 'int_type':'typename _Traits::int_type')
                  (DeclRefExpr 0x9eac434 <col:53> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x9eaba00 '__idelim' 'const int_type':'const typename _Traits::int_type'))
                (CompoundStmt 0x9eac530 <line:428:21, line:431:21>
                  (CallExpr 0x9eac4c8 <line:429:23, col:36> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9eac490 <col:23, col:29> '<dependent type>' lvalue
                      (DeclRefExpr 0x9eac474 <col:23> '__streambuf_type *' lvalue Var 0x9eabbb0 '__sb' '__streambuf_type *')))
                  (UnaryOperator 0x9eac518 <line:430:23, col:25> '<dependent type>' prefix '++'
                    (MemberExpr 0x9eac4f8 <col:25> 'streamsize':'int' lvalue ->_M_gcount 0x9e80030
                      (CXXThisExpr 0x9eac4e8 <col:25> 'basic_istream<_CharT, _Traits> *' this))))
                (CXXOperatorCallExpr 0x9eac5d8 <line:433:21, col:40> 'const enum std::_Ios_Iostate' lvalue
                  (ImplicitCastExpr 0x9eac5c8 <col:27, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                    (DeclRefExpr 0x9eac5b0 <col:27, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9d6a3b0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
                  (DeclRefExpr 0x9eac548 <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9eab890 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
                  (ImplicitCastExpr 0x9eac5a0 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                    (DeclRefExpr 0x9eac57c <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6baa0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))))))
        <<<NULL>>>)
      (IfStmt 0x9eac780 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:440:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9eac6a0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9eac768 </usr/include/c++/4.6/bits/istream.tcc:437:6, line:440:6>
          (CallExpr 0x9eac738 <line:438:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9eac6c0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9eac6b0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9eac714 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6b9e0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x9eac758 <line:439:31>))
        <<<NULL>>>)
      (IfStmt 0x9eac870 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:442:52>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9eac7a0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9eac858 </usr/include/c++/4.6/bits/istream.tcc:442:13, col:52>
          (CallExpr 0x9eac838 <col:15, col:49> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9eac7c0 <col:15, col:21> '<dependent type>' lvalue
              (CXXThisExpr 0x9eac7b0 <col:15> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9eac814 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6b9e0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0x9eac990 <line:446:7, line:447:19>
    <<<NULL>>>
    (BinaryOperator 0x9eac910 <line:446:11, col:17> '_Bool' '>'
      (ImplicitCastExpr 0x9eac900 <col:11> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0x9eac8cc <col:11> 'streamsize':'int' lvalue ParmVar 0x9eab560 '__n' 'streamsize':'int'))
      (IntegerLiteral 0x9eac8e8 <col:17> 'int' 0))
    (BinaryOperator 0x9eac978 <line:447:2, col:19> '<dependent type>' '='
      (UnaryOperator 0x9eac940 <col:2, col:3> '<dependent type>' prefix '*'
        (DeclRefExpr 0x9eac928 <col:3> 'char_type *' lvalue ParmVar 0x9eab520 '__s' 'char_type *'))
      (CXXUnresolvedConstructExpr 0x9eac960 <col:9, col:19> 'char_type':'_CharT'))
    <<<NULL>>>)
  (IfStmt 0x9eacad0 <line:448:7, line:449:28>
    <<<NULL>>>
    (UnaryOperator 0x9eaca00 <line:448:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9eac9f0 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0x9eac9e0 <col:12> 'streamsize':'int' <LValueToRValue>
          (MemberExpr 0x9eac9c0 <col:12> 'streamsize':'int' lvalue ->_M_gcount 0x9e80030
            (CXXThisExpr 0x9eac9b0 <col:12> 'basic_istream<_CharT, _Traits> *' this)))))
    (CXXOperatorCallExpr 0x9eacaa8 <line:449:9, col:28> 'const enum std::_Ios_Iostate' lvalue
      (ImplicitCastExpr 0x9eaca98 <col:15, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9eaca80 <col:15, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9d6a3b0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
      (DeclRefExpr 0x9eaca14 <col:9> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9eab890 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
      (ImplicitCastExpr 0x9eaca70 <col:18, col:28> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9eaca4c <col:18, col:28> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6baa0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (IfStmt 0x9eacba8 <line:450:7, line:451:29>
    <<<NULL>>>
    (ImplicitCastExpr 0x9eacb18 <line:450:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x9eacb08 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9eacaec <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9eab890 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0x9eacb88 <line:451:9, col:29> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9eacb38 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x9eacb28 <col:9> 'basic_istream<_CharT, _Traits> *' this))
      (DeclRefExpr 0x9eacb6c <col:24> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9eab890 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0x9eacbf0 <line:452:7, col:15>
    (UnaryOperator 0x9eacbd8 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9eacbc8 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &ignore() (CompoundStmt 0x9eadb40 </usr/include/c++/4.6/bits/istream.tcc:462:5, line:489:5>
  (BinaryOperator 0x9ead228 <line:463:7, col:19> '<dependent type>' '='
    (MemberExpr 0x9ead1f0 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0x9e80030
      (CXXThisExpr 0x9ead1e0 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0x9ead210 <col:19> 'int' 0))
  (DeclStmt 0x9ead2e0 <line:464:7, col:33>
    0x9ead250 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0x9ead2c0 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0x9ead298 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9ead288 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0x9ead2b0 <col:28> '_Bool' true))")
  (IfStmt 0x9eadae8 <line:465:7, line:487:2>
    <<<NULL>>>
    (DeclRefExpr 0x9ead2f0 <line:465:11> 'class std::basic_istream::sentry' lvalue Var 0x9ead250 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0x9eadac0 <line:466:2, line:487:2>
      (DeclStmt 0x9ead3c8 <line:467:4, col:47>
        0x9ead340 "ios_base::iostate __err =
          (ImplicitCastExpr 0x9ead3b8 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9ead394 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6bb00 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0x9ead7d8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:477:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9ead3d8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9ead7b8 </usr/include/c++/4.6/bits/istream.tcc:469:6, line:477:6>
          (DeclStmt 0x9ead4a0 <line:470:8, col:49>
            0x9ead3f0 "const int_type __eof =
              (CallExpr 0x9ead480 <col:31, col:48> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9ead448 <col:31, col:44> '<dependent type>' lvalue))")
          (DeclStmt 0x9ead560 <line:471:8, col:46>
            0x9ead4c0 "__streambuf_type *__sb =
              (CallExpr 0x9ead540 <col:33, col:45> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9ead508 <col:33, col:39> '<dependent type>' lvalue
                  (CXXThisExpr 0x9ead4f8 <col:33> 'basic_istream<_CharT, _Traits> *' this)))")
          (IfStmt 0x9ead798 <line:473:8, line:476:15>
            <<<NULL>>>
            (CallExpr 0x9ead658 <line:473:12, col:58> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9ead598 <col:12, col:25> '<dependent type>' lvalue)
              (CallExpr 0x9ead620 <col:37, col:50> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9ead5e8 <col:37, col:43> '<dependent type>' lvalue
                  (DeclRefExpr 0x9ead5cc <col:37> '__streambuf_type *' lvalue Var 0x9ead4c0 '__sb' '__streambuf_type *')))
              (DeclRefExpr 0x9ead63c <col:53> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x9ead3f0 '__eof' 'const int_type':'const typename _Traits::int_type'))
            (CXXOperatorCallExpr 0x9ead710 <line:474:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x9ead700 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9ead6e8 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9d6a3b0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x9ead67c <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9ead340 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0x9ead6d8 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x9ead6b4 <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6ba40 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            (BinaryOperator 0x9ead780 <line:476:3, col:15> '<dependent type>' '='
              (MemberExpr 0x9ead748 <col:3> 'streamsize':'int' lvalue ->_M_gcount 0x9e80030
                (CXXThisExpr 0x9ead738 <col:3> 'basic_istream<_CharT, _Traits> *' this))
              (IntegerLiteral 0x9ead768 <col:15> 'int' 1))))
        <<<NULL>>>)
      (IfStmt 0x9ead8d8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:482:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9ead7f8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9ead8c0 </usr/include/c++/4.6/bits/istream.tcc:479:6, line:482:6>
          (CallExpr 0x9ead890 <line:480:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9ead818 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9ead808 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9ead86c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6b9e0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x9ead8b0 <line:481:31>))
        <<<NULL>>>)
      (IfStmt 0x9ead9c8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:484:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9ead8f8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9ead9b0 </usr/include/c++/4.6/bits/istream.tcc:484:6, col:45>
          (CallExpr 0x9ead990 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9ead918 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9ead908 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9ead96c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6b9e0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0x9eadaa0 <line:485:4, line:486:26>
        <<<NULL>>>
        (ImplicitCastExpr 0x9eada10 <line:485:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0x9eada00 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9ead9e4 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9ead340 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0x9eada80 <line:486:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9eada30 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x9eada20 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0x9eada64 <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9ead340 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9eadb30 <line:488:7, col:15>
    (UnaryOperator 0x9eadb18 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9eadb08 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &ignore(streamsize __n) (CompoundStmt 0x9eaf2f0 </usr/include/c++/4.6/bits/istream.tcc:495:5, line:551:5>
  (BinaryOperator 0x9eae170 <line:496:7, col:19> '<dependent type>' '='
    (MemberExpr 0x9eae138 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0x9e80030
      (CXXThisExpr 0x9eae128 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0x9eae158 <col:19> 'int' 0))
  (DeclStmt 0x9eae220 <line:497:7, col:33>
    0x9eae190 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0x9eae200 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0x9eae1d8 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9eae1c8 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0x9eae1f0 <col:28> '_Bool' true))")
  (IfStmt 0x9eaf298 <line:498:7, line:549:9>
    <<<NULL>>>
    (BinaryOperator 0x9eae2a0 <line:498:11, col:27> '<dependent type>' '&&'
      (DeclRefExpr 0x9eae230 <col:11> 'class std::basic_istream::sentry' lvalue Var 0x9eae190 '__cerb' 'class std::basic_istream::sentry')
      (BinaryOperator 0x9eae288 <col:21, col:27> '_Bool' '>'
        (ImplicitCastExpr 0x9eae278 <col:21> 'streamsize':'int' <LValueToRValue>
          (DeclRefExpr 0x9eae248 <col:21> 'streamsize':'int' lvalue ParmVar 0x9eadee0 '__n' 'streamsize':'int'))
        (IntegerLiteral 0x9eae260 <col:27> 'int' 0)))
    (CompoundStmt 0x9eaf270 <line:499:9, line:549:9>
      (DeclStmt 0x9eae378 <line:500:11, col:54>
        0x9eae2f0 "ios_base::iostate __err =
          (ImplicitCastExpr 0x9eae368 <col:37, col:47> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9eae344 <col:37, col:47> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6bb00 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0x9eaef88 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:539:13>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9eae388 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9eaef58 </usr/include/c++/4.6/bits/istream.tcc:502:13, line:539:13>
          (DeclStmt 0x9eae450 <line:503:15, col:56>
            0x9eae3a0 "const int_type __eof =
              (CallExpr 0x9eae430 <col:38, col:55> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9eae3f8 <col:38, col:51> '<dependent type>' lvalue))")
          (DeclStmt 0x9eae510 <line:504:15, col:53>
            0x9eae470 "__streambuf_type *__sb =
              (CallExpr 0x9eae4f0 <col:40, col:52> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9eae4b8 <col:40, col:46> '<dependent type>' lvalue
                  (CXXThisExpr 0x9eae4a8 <col:40> 'basic_istream<_CharT, _Traits> *' this)))")
          (DeclStmt 0x9eae5d8 <line:505:15, col:43>
            0x9eae530 "int_type __c =
              (CallExpr 0x9eae5b8 <col:30, col:42> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9eae580 <col:30, col:36> '<dependent type>' lvalue
                  (DeclRefExpr 0x9eae564 <col:30> '__streambuf_type *' lvalue Var 0x9eae470 '__sb' '__streambuf_type *')))")
          (DeclStmt 0x9eae638 <line:514:8, col:35>
            0x9eae5f0 "bool __large_ignore =
              (CXXBoolLiteralExpr 0x9eae628 <col:30> '_Bool' false)")
          (WhileStmt 0x9eaec70 <line:515:8, line:532:3>
            <<<NULL>>>
            (CXXBoolLiteralExpr 0x9eae648 <line:515:15> '_Bool' true)
            (CompoundStmt 0x9eaec58 <line:516:3, line:532:3>
              (WhileStmt 0x9eae8f0 <line:517:5, line:522:7>
                <<<NULL>>>
                (BinaryOperator 0x9eae7d8 <line:517:12, line:518:44> '<dependent type>' '&&'
                  (CXXOperatorCallExpr 0x9eae6e8 <line:517:12, col:24> '<dependent type>'
                    (UnresolvedLookupExpr 0x9eae6a0 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40ad0 0x9b57c70 0x9b5ddb0 0x9cbc120 0x9cbc650 0x9cbcb80)
                    (MemberExpr 0x9eae668 <col:12> 'streamsize':'int' lvalue ->_M_gcount 0x9e80030
                      (CXXThisExpr 0x9eae658 <col:12> 'basic_istream<_CharT, _Traits> *' this))
                    (DeclRefExpr 0x9eae688 <col:24> 'streamsize':'int' lvalue ParmVar 0x9eadee0 '__n' 'streamsize':'int'))
                  (UnaryOperator 0x9eae7c0 <line:518:8, col:44> '<dependent type>' prefix '!'
                    (CallExpr 0x9eae798 <col:9, col:44> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0x9eae730 <col:9, col:22> '<dependent type>' lvalue)
                      (DeclRefExpr 0x9eae764 <col:34> 'int_type':'typename _Traits::int_type' lvalue Var 0x9eae530 '__c' 'int_type':'typename _Traits::int_type')
                      (DeclRefExpr 0x9eae77c <col:39> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x9eae3a0 '__eof' 'const int_type':'const typename _Traits::int_type'))))
                (CompoundStmt 0x9eae8d8 <line:519:7, line:522:7>
                  (UnaryOperator 0x9eae820 <line:520:9, col:11> '<dependent type>' prefix '++'
                    (MemberExpr 0x9eae800 <col:11> 'streamsize':'int' lvalue ->_M_gcount 0x9e80030
                      (CXXThisExpr 0x9eae7f0 <col:11> 'basic_istream<_CharT, _Traits> *' this)))
                  (BinaryOperator 0x9eae8c0 <line:521:9, col:28> '<dependent type>' '='
                    (DeclRefExpr 0x9eae834 <col:9> 'int_type':'typename _Traits::int_type' lvalue Var 0x9eae530 '__c' 'int_type':'typename _Traits::int_type')
                    (CallExpr 0x9eae8a0 <col:15, col:28> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0x9eae868 <col:15, col:21> '<dependent type>' lvalue
                        (DeclRefExpr 0x9eae84c <col:15> '__streambuf_type *' lvalue Var 0x9eae470 '__sb' '__streambuf_type *'))))))
              (IfStmt 0x9eaec38 <line:523:5, line:531:7>
                <<<NULL>>>
                (BinaryOperator 0x9eaead0 <line:523:9, line:524:48> '<dependent type>' '&&'
                  (BinaryOperator 0x9eae9f0 <line:523:9, col:57> '_Bool' '=='
                    (ImplicitCastExpr 0x9eae9d0 <col:9> 'streamsize':'int' <LValueToRValue>
                      (DeclRefExpr 0x9eae904 <col:9> 'streamsize':'int' lvalue ParmVar 0x9eadee0 '__n' 'streamsize':'int'))
                    (ImplicitCastExpr 0x9eae9e0 <col:16, col:57> 'int':'int' <LValueToRValue>
                      (DeclRefExpr 0x9eae9b0 <col:16, col:57> 'const int':'const int' lvalue Var 0x9ca5e30 '__max' 'const int':'const int')))
                  (UnaryOperator 0x9eaeab8 <line:524:12, col:48> '<dependent type>' prefix '!'
                    (CallExpr 0x9eaea90 <col:13, col:48> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0x9eaea28 <col:13, col:26> '<dependent type>' lvalue)
                      (DeclRefExpr 0x9eaea5c <col:38> 'int_type':'typename _Traits::int_type' lvalue Var 0x9eae530 '__c' 'int_type':'typename _Traits::int_type')
                      (DeclRefExpr 0x9eaea74 <col:43> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x9eae3a0 '__eof' 'const int_type':'const typename _Traits::int_type'))))
                (CompoundStmt 0x9eaec18 <line:525:7, line:529:7>
                  (BinaryOperator 0x9eaebc0 <line:526:9, line:527:45> '<dependent type>' '='
                    (MemberExpr 0x9eaeaf8 <line:526:9> 'streamsize':'int' lvalue ->_M_gcount 0x9e80030
                      (CXXThisExpr 0x9eaeae8 <col:9> 'basic_istream<_CharT, _Traits> *' this))
                    (DeclRefExpr 0x9eaeba0 <line:527:4, col:45> 'const int':'const int' lvalue Var 0x9ca5c20 '__min' 'const int':'const int'))
                  (BinaryOperator 0x9eaec00 <line:528:9, col:26> '_Bool' lvalue '='
                    (DeclRefExpr 0x9eaebd8 <col:9> '_Bool' lvalue Var 0x9eae5f0 '__large_ignore' '_Bool')
                    (CXXBoolLiteralExpr 0x9eaebf0 <col:26> '_Bool' true)))
                (BreakStmt 0x9eaec30 <line:531:7>))))
          (IfStmt 0x9eaeda8 <line:534:8, line:535:56>
            <<<NULL>>>
            (ImplicitCastExpr 0x9eaeca0 <line:534:12> '_Bool' <LValueToRValue>
              (DeclRefExpr 0x9eaec84 <col:12> '_Bool' lvalue Var 0x9eae5f0 '__large_ignore' '_Bool'))
            (BinaryOperator 0x9eaed90 <line:535:3, col:56> '<dependent type>' '='
              (MemberExpr 0x9eaecc0 <col:3> 'streamsize':'int' lvalue ->_M_gcount 0x9e80030
                (CXXThisExpr 0x9eaecb0 <col:3> 'basic_istream<_CharT, _Traits> *' this))
              (DeclRefExpr 0x9eaed70 <col:15, col:56> 'const int':'const int' lvalue Var 0x9ca5e30 '__max' 'const int':'const int'))
            <<<NULL>>>)
          (IfStmt 0x9eaef38 <line:537:8, line:538:36>
            <<<NULL>>>
            (CallExpr 0x9eaee58 <line:537:12, col:47> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9eaedf0 <col:12, col:25> '<dependent type>' lvalue)
              (DeclRefExpr 0x9eaee24 <col:37> 'int_type':'typename _Traits::int_type' lvalue Var 0x9eae530 '__c' 'int_type':'typename _Traits::int_type')
              (DeclRefExpr 0x9eaee3c <col:42> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x9eae3a0 '__eof' 'const int_type':'const typename _Traits::int_type'))
            (CXXOperatorCallExpr 0x9eaef10 <line:538:17, col:36> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x9eaef00 <col:23, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9eaeee8 <col:23, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9d6a3b0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x9eaee7c <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9eae2f0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0x9eaeed8 <col:26, col:36> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x9eaeeb4 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6ba40 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0x9eaf088 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:544:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9eaefa8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9eaf070 </usr/include/c++/4.6/bits/istream.tcc:541:6, line:544:6>
          (CallExpr 0x9eaf040 <line:542:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9eaefc8 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9eaefb8 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9eaf01c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6b9e0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x9eaf060 <line:543:31>))
        <<<NULL>>>)
      (IfStmt 0x9eaf178 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:546:52>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9eaf0a8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9eaf160 </usr/include/c++/4.6/bits/istream.tcc:546:13, col:52>
          (CallExpr 0x9eaf140 <col:15, col:49> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9eaf0c8 <col:15, col:21> '<dependent type>' lvalue
              (CXXThisExpr 0x9eaf0b8 <col:15> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9eaf11c <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6b9e0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0x9eaf250 <line:547:11, line:548:33>
        <<<NULL>>>
        (ImplicitCastExpr 0x9eaf1c0 <line:547:15> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0x9eaf1b0 <col:15> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9eaf194 <col:15> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9eae2f0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0x9eaf230 <line:548:13, col:33> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9eaf1e0 <col:13, col:19> '<dependent type>' lvalue
            (CXXThisExpr 0x9eaf1d0 <col:13> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0x9eaf214 <col:28> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9eae2f0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9eaf2e0 <line:550:7, col:15>
    (UnaryOperator 0x9eaf2c8 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9eaf2b8 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &ignore(streamsize __n, int_type __delim) (CompoundStmt 0x9eb0fb8 </usr/include/c++/4.6/bits/istream.tcc:557:5, line:616:5>
  (BinaryOperator 0x9eaf960 <line:558:7, col:19> '<dependent type>' '='
    (MemberExpr 0x9eaf928 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0x9e80030
      (CXXThisExpr 0x9eaf918 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0x9eaf948 <col:19> 'int' 0))
  (DeclStmt 0x9eafa10 <line:559:7, col:33>
    0x9eaf980 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0x9eaf9f0 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0x9eaf9c8 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9eaf9b8 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0x9eaf9e0 <col:28> '_Bool' true))")
  (IfStmt 0x9eb0f60 <line:560:7, line:614:9>
    <<<NULL>>>
    (BinaryOperator 0x9eafa90 <line:560:11, col:27> '<dependent type>' '&&'
      (DeclRefExpr 0x9eafa20 <col:11> 'class std::basic_istream::sentry' lvalue Var 0x9eaf980 '__cerb' 'class std::basic_istream::sentry')
      (BinaryOperator 0x9eafa78 <col:21, col:27> '_Bool' '>'
        (ImplicitCastExpr 0x9eafa68 <col:21> 'streamsize':'int' <LValueToRValue>
          (DeclRefExpr 0x9eafa38 <col:21> 'streamsize':'int' lvalue ParmVar 0x9eaf690 '__n' 'streamsize':'int'))
        (IntegerLiteral 0x9eafa50 <col:27> 'int' 0)))
    (CompoundStmt 0x9eb0f38 <line:561:9, line:614:9>
      (DeclStmt 0x9eafb68 <line:562:11, col:54>
        0x9eafae0 "ios_base::iostate __err =
          (ImplicitCastExpr 0x9eafb58 <col:37, col:47> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9eafb34 <col:37, col:47> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6bb00 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0x9eb0c50 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:604:13>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9eafb78 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9eb0c20 </usr/include/c++/4.6/bits/istream.tcc:564:13, line:604:13>
          (DeclStmt 0x9eafc40 <line:565:15, col:56>
            0x9eafb90 "const int_type __eof =
              (CallExpr 0x9eafc20 <col:38, col:55> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9eafbe8 <col:38, col:51> '<dependent type>' lvalue))")
          (DeclStmt 0x9eafd00 <line:566:15, col:53>
            0x9eafc60 "__streambuf_type *__sb =
              (CallExpr 0x9eafce0 <col:40, col:52> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9eafca8 <col:40, col:46> '<dependent type>' lvalue
                  (CXXThisExpr 0x9eafc98 <col:40> 'basic_istream<_CharT, _Traits> *' this)))")
          (DeclStmt 0x9eafdc8 <line:567:15, col:43>
            0x9eafd20 "int_type __c =
              (CallExpr 0x9eafda8 <col:30, col:42> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9eafd70 <col:30, col:36> '<dependent type>' lvalue
                  (DeclRefExpr 0x9eafd54 <col:30> '__streambuf_type *' lvalue Var 0x9eafc60 '__sb' '__streambuf_type *')))")
          (DeclStmt 0x9eafe28 <line:570:8, col:35>
            0x9eafde0 "bool __large_ignore =
              (CXXBoolLiteralExpr 0x9eafe18 <col:30> '_Bool' false)")
          (WhileStmt 0x9eb0620 <line:571:8, line:590:3>
            <<<NULL>>>
            (CXXBoolLiteralExpr 0x9eafe38 <line:571:15> '_Bool' true)
            (CompoundStmt 0x9eb0608 <line:572:3, line:590:3>
              (WhileStmt 0x9eb01c0 <line:573:5, line:579:7>
                <<<NULL>>>
                (BinaryOperator 0x9eb00a8 <line:573:12, line:575:46> '<dependent type>' '&&'
                  (BinaryOperator 0x9eaffc8 <line:573:12, line:574:44> '<dependent type>' '&&'
                    (CXXOperatorCallExpr 0x9eafed8 <line:573:12, col:24> '<dependent type>'
                      (UnresolvedLookupExpr 0x9eafe90 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40ad0 0x9b57c70 0x9b5ddb0 0x9cbc120 0x9cbc650 0x9cbcb80)
                      (MemberExpr 0x9eafe58 <col:12> 'streamsize':'int' lvalue ->_M_gcount 0x9e80030
                        (CXXThisExpr 0x9eafe48 <col:12> 'basic_istream<_CharT, _Traits> *' this))
                      (DeclRefExpr 0x9eafe78 <col:24> 'streamsize':'int' lvalue ParmVar 0x9eaf690 '__n' 'streamsize':'int'))
                    (UnaryOperator 0x9eaffb0 <line:574:8, col:44> '<dependent type>' prefix '!'
                      (CallExpr 0x9eaff88 <col:9, col:44> '<dependent type>'
                        (CXXDependentScopeMemberExpr 0x9eaff20 <col:9, col:22> '<dependent type>' lvalue)
                        (DeclRefExpr 0x9eaff54 <col:34> 'int_type':'typename _Traits::int_type' lvalue Var 0x9eafd20 '__c' 'int_type':'typename _Traits::int_type')
                        (DeclRefExpr 0x9eaff6c <col:39> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x9eafb90 '__eof' 'const int_type':'const typename _Traits::int_type'))))
                  (UnaryOperator 0x9eb0090 <line:575:8, col:46> '<dependent type>' prefix '!'
                    (CallExpr 0x9eb0068 <col:9, col:46> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0x9eb0000 <col:9, col:22> '<dependent type>' lvalue)
                      (DeclRefExpr 0x9eb0034 <col:34> 'int_type':'typename _Traits::int_type' lvalue Var 0x9eafd20 '__c' 'int_type':'typename _Traits::int_type')
                      (DeclRefExpr 0x9eb004c <col:39> 'int_type':'typename _Traits::int_type' lvalue ParmVar 0x9eaf6d0 '__delim' 'int_type':'typename _Traits::int_type'))))
                (CompoundStmt 0x9eb01a8 <line:576:7, line:579:7>
                  (UnaryOperator 0x9eb00f0 <line:577:9, col:11> '<dependent type>' prefix '++'
                    (MemberExpr 0x9eb00d0 <col:11> 'streamsize':'int' lvalue ->_M_gcount 0x9e80030
                      (CXXThisExpr 0x9eb00c0 <col:11> 'basic_istream<_CharT, _Traits> *' this)))
                  (BinaryOperator 0x9eb0190 <line:578:9, col:28> '<dependent type>' '='
                    (DeclRefExpr 0x9eb0104 <col:9> 'int_type':'typename _Traits::int_type' lvalue Var 0x9eafd20 '__c' 'int_type':'typename _Traits::int_type')
                    (CallExpr 0x9eb0170 <col:15, col:28> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0x9eb0138 <col:15, col:21> '<dependent type>' lvalue
                        (DeclRefExpr 0x9eb011c <col:15> '__streambuf_type *' lvalue Var 0x9eafc60 '__sb' '__streambuf_type *'))))))
              (IfStmt 0x9eb05e8 <line:580:5, line:589:7>
                <<<NULL>>>
                (BinaryOperator 0x9eb0480 <line:580:9, line:582:50> '<dependent type>' '&&'
                  (BinaryOperator 0x9eb03a0 <line:580:9, line:581:48> '<dependent type>' '&&'
                    (BinaryOperator 0x9eb02c0 <line:580:9, col:57> '_Bool' '=='
                      (ImplicitCastExpr 0x9eb02a0 <col:9> 'streamsize':'int' <LValueToRValue>
                        (DeclRefExpr 0x9eb01d4 <col:9> 'streamsize':'int' lvalue ParmVar 0x9eaf690 '__n' 'streamsize':'int'))
                      (ImplicitCastExpr 0x9eb02b0 <col:16, col:57> 'int':'int' <LValueToRValue>
                        (DeclRefExpr 0x9eb0280 <col:16, col:57> 'const int':'const int' lvalue Var 0x9ca5e30 '__max' 'const int':'const int')))
                    (UnaryOperator 0x9eb0388 <line:581:12, col:48> '<dependent type>' prefix '!'
                      (CallExpr 0x9eb0360 <col:13, col:48> '<dependent type>'
                        (CXXDependentScopeMemberExpr 0x9eb02f8 <col:13, col:26> '<dependent type>' lvalue)
                        (DeclRefExpr 0x9eb032c <col:38> 'int_type':'typename _Traits::int_type' lvalue Var 0x9eafd20 '__c' 'int_type':'typename _Traits::int_type')
                        (DeclRefExpr 0x9eb0344 <col:43> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x9eafb90 '__eof' 'const int_type':'const typename _Traits::int_type'))))
                  (UnaryOperator 0x9eb0468 <line:582:12, col:50> '<dependent type>' prefix '!'
                    (CallExpr 0x9eb0440 <col:13, col:50> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0x9eb03d8 <col:13, col:26> '<dependent type>' lvalue)
                      (DeclRefExpr 0x9eb040c <col:38> 'int_type':'typename _Traits::int_type' lvalue Var 0x9eafd20 '__c' 'int_type':'typename _Traits::int_type')
                      (DeclRefExpr 0x9eb0424 <col:43> 'int_type':'typename _Traits::int_type' lvalue ParmVar 0x9eaf6d0 '__delim' 'int_type':'typename _Traits::int_type'))))
                (CompoundStmt 0x9eb05c8 <line:583:7, line:587:7>
                  (BinaryOperator 0x9eb0570 <line:584:9, line:585:45> '<dependent type>' '='
                    (MemberExpr 0x9eb04a8 <line:584:9> 'streamsize':'int' lvalue ->_M_gcount 0x9e80030
                      (CXXThisExpr 0x9eb0498 <col:9> 'basic_istream<_CharT, _Traits> *' this))
                    (DeclRefExpr 0x9eb0550 <line:585:4, col:45> 'const int':'const int' lvalue Var 0x9ca5c20 '__min' 'const int':'const int'))
                  (BinaryOperator 0x9eb05b0 <line:586:9, col:26> '_Bool' lvalue '='
                    (DeclRefExpr 0x9eb0588 <col:9> '_Bool' lvalue Var 0x9eafde0 '__large_ignore' '_Bool')
                    (CXXBoolLiteralExpr 0x9eb05a0 <col:26> '_Bool' true)))
                (BreakStmt 0x9eb05e0 <line:589:7>))))
          (IfStmt 0x9eb0758 <line:592:8, line:593:56>
            <<<NULL>>>
            (ImplicitCastExpr 0x9eb0650 <line:592:12> '_Bool' <LValueToRValue>
              (DeclRefExpr 0x9eb0634 <col:12> '_Bool' lvalue Var 0x9eafde0 '__large_ignore' '_Bool'))
            (BinaryOperator 0x9eb0740 <line:593:3, col:56> '<dependent type>' '='
              (MemberExpr 0x9eb0670 <col:3> 'streamsize':'int' lvalue ->_M_gcount 0x9e80030
                (CXXThisExpr 0x9eb0660 <col:3> 'basic_istream<_CharT, _Traits> *' this))
              (DeclRefExpr 0x9eb0720 <col:15, col:56> 'const int':'const int' lvalue Var 0x9ca5e30 '__max' 'const int':'const int'))
            <<<NULL>>>)
          (IfStmt 0x9eb0c00 <line:595:15, line:603:3>
            <<<NULL>>>
            (CallExpr 0x9eb0808 <line:595:19, col:54> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9eb07a0 <col:19, col:32> '<dependent type>' lvalue)
              (DeclRefExpr 0x9eb07d4 <col:44> 'int_type':'typename _Traits::int_type' lvalue Var 0x9eafd20 '__c' 'int_type':'typename _Traits::int_type')
              (DeclRefExpr 0x9eb07ec <col:49> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x9eafb90 '__eof' 'const int_type':'const typename _Traits::int_type'))
            (CXXOperatorCallExpr 0x9eb08c0 <line:596:17, col:36> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x9eb08b0 <col:23, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9eb0898 <col:23, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9d6a3b0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x9eb082c <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9eafae0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0x9eb0888 <col:26, col:36> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x9eb0864 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6ba40 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            (IfStmt 0x9eb0be0 <line:597:13, line:603:3>
              <<<NULL>>>
              (CallExpr 0x9eb0978 <line:597:17, col:54> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9eb0910 <col:17, col:30> '<dependent type>' lvalue)
                (DeclRefExpr 0x9eb0944 <col:42> 'int_type':'typename _Traits::int_type' lvalue Var 0x9eafd20 '__c' 'int_type':'typename _Traits::int_type')
                (DeclRefExpr 0x9eb095c <col:47> 'int_type':'typename _Traits::int_type' lvalue ParmVar 0x9eaf6d0 '__delim' 'int_type':'typename _Traits::int_type'))
              (CompoundStmt 0x9eb0bc8 <line:598:3, line:603:3>
                (IfStmt 0x9eb0b38 <line:599:5, line:601:9>
                  <<<NULL>>>
                  (CXXOperatorCallExpr 0x9eb0ac8 <line:599:9, line:600:52> '<dependent type>'
                    (UnresolvedLookupExpr 0x9eb0a80 <col:9, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40ad0 0x9b57c70 0x9b5ddb0 0x9cbc120 0x9cbc650 0x9cbcb80)
                    (MemberExpr 0x9eb09b0 <line:599:9> 'streamsize':'int' lvalue ->_M_gcount 0x9e80030
                      (CXXThisExpr 0x9eb09a0 <col:9> 'basic_istream<_CharT, _Traits> *' this))
                    (DeclRefExpr 0x9eb0a60 <line:600:11, col:52> 'const int':'const int' lvalue Var 0x9ca5e30 '__max' 'const int':'const int'))
                  (UnaryOperator 0x9eb0b20 <line:601:7, col:9> '<dependent type>' prefix '++'
                    (MemberExpr 0x9eb0b00 <col:9> 'streamsize':'int' lvalue ->_M_gcount 0x9e80030
                      (CXXThisExpr 0x9eb0af0 <col:9> 'basic_istream<_CharT, _Traits> *' this)))
                  <<<NULL>>>)
                (CallExpr 0x9eb0ba8 <line:602:5, col:18> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9eb0b70 <col:5, col:11> '<dependent type>' lvalue
                    (DeclRefExpr 0x9eb0b54 <col:5> '__streambuf_type *' lvalue Var 0x9eafc60 '__sb' '__streambuf_type *'))))
              <<<NULL>>>)))
        <<<NULL>>>)
      (IfStmt 0x9eb0d50 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:609:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9eb0c70 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9eb0d38 </usr/include/c++/4.6/bits/istream.tcc:606:6, line:609:6>
          (CallExpr 0x9eb0d08 <line:607:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9eb0c90 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9eb0c80 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9eb0ce4 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6b9e0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x9eb0d28 <line:608:31>))
        <<<NULL>>>)
      (IfStmt 0x9eb0e40 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:611:52>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9eb0d70 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9eb0e28 </usr/include/c++/4.6/bits/istream.tcc:611:13, col:52>
          (CallExpr 0x9eb0e08 <col:15, col:49> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9eb0d90 <col:15, col:21> '<dependent type>' lvalue
              (CXXThisExpr 0x9eb0d80 <col:15> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9eb0de4 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6b9e0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0x9eb0f18 <line:612:11, line:613:33>
        <<<NULL>>>
        (ImplicitCastExpr 0x9eb0e88 <line:612:15> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0x9eb0e78 <col:15> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9eb0e5c <col:15> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9eafae0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0x9eb0ef8 <line:613:13, col:33> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9eb0ea8 <col:13, col:19> '<dependent type>' lvalue
            (CXXThisExpr 0x9eb0e98 <col:13> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0x9eb0edc <col:28> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9eafae0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9eb0fa8 <line:615:7, col:15>
    (UnaryOperator 0x9eb0f90 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9eb0f80 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    typename basic_istream<_CharT, _Traits>::int_type peek() (CompoundStmt 0x9eb1ef8 </usr/include/c++/4.6/bits/istream.tcc:622:5, line:646:5>
  (DeclStmt 0x9eb1690 <line:623:7, col:40>
    0x9eb15e0 "int_type __c =
      (CallExpr 0x9eb1670 <col:22, col:39> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9eb1638 <col:22, col:35> '<dependent type>' lvalue))")
  (BinaryOperator 0x9eb16e8 <line:624:7, col:19> '<dependent type>' '='
    (MemberExpr 0x9eb16b0 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0x9e80030
      (CXXThisExpr 0x9eb16a0 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0x9eb16d0 <col:19> 'int' 0))
  (DeclStmt 0x9eb17a0 <line:625:7, col:33>
    0x9eb1710 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0x9eb1780 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0x9eb1758 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9eb1748 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0x9eb1770 <col:28> '_Bool' true))")
  (IfStmt 0x9eb1eb0 <line:626:7, line:644:2>
    <<<NULL>>>
    (DeclRefExpr 0x9eb17b0 <line:626:11> 'class std::basic_istream::sentry' lvalue Var 0x9eb1710 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0x9eb1e88 <line:627:2, line:644:2>
      (DeclStmt 0x9eb1888 <line:628:4, col:47>
        0x9eb1800 "ios_base::iostate __err =
          (ImplicitCastExpr 0x9eb1878 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9eb1854 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6bb00 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0x9eb1ba0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:634:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9eb1898 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9eb1b88 </usr/include/c++/4.6/bits/istream.tcc:630:6, line:634:6>
          (BinaryOperator 0x9eb1980 <line:631:8, col:35> '<dependent type>' '='
            (DeclRefExpr 0x9eb18a8 <col:8> 'int_type':'typename _Traits::int_type' lvalue Var 0x9eb15e0 '__c' 'int_type':'typename _Traits::int_type')
            (CallExpr 0x9eb1960 <col:14, col:35> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9eb1928 <col:14, col:29> '<dependent type>' lvalue
                (CallExpr 0x9eb1908 <col:14, col:26> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9eb18d0 <col:14, col:20> '<dependent type>' lvalue
                    (CXXThisExpr 0x9eb18c0 <col:14> 'basic_istream<_CharT, _Traits> *' this))))))
          (IfStmt 0x9eb1b68 <line:632:8, line:633:22>
            <<<NULL>>>
            (CallExpr 0x9eb1a88 <line:632:12, col:60> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9eb19c0 <col:12, col:25> '<dependent type>' lvalue)
              (DeclRefExpr 0x9eb19f4 <col:37> 'int_type':'typename _Traits::int_type' lvalue Var 0x9eb15e0 '__c' 'int_type':'typename _Traits::int_type')
              (CallExpr 0x9eb1a68 <col:42, col:59> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9eb1a30 <col:42, col:55> '<dependent type>' lvalue)))
            (CXXOperatorCallExpr 0x9eb1b40 <line:633:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x9eb1b30 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9eb1b18 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9d6a3b0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x9eb1aac <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9eb1800 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0x9eb1b08 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x9eb1ae4 <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6ba40 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0x9eb1ca0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:639:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9eb1bc0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9eb1c88 </usr/include/c++/4.6/bits/istream.tcc:636:6, line:639:6>
          (CallExpr 0x9eb1c58 <line:637:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9eb1be0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9eb1bd0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9eb1c34 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6b9e0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x9eb1c78 <line:638:31>))
        <<<NULL>>>)
      (IfStmt 0x9eb1d90 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:641:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9eb1cc0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9eb1d78 </usr/include/c++/4.6/bits/istream.tcc:641:6, col:45>
          (CallExpr 0x9eb1d58 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9eb1ce0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9eb1cd0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9eb1d34 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6b9e0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0x9eb1e68 <line:642:4, line:643:26>
        <<<NULL>>>
        (ImplicitCastExpr 0x9eb1dd8 <line:642:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0x9eb1dc8 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9eb1dac <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9eb1800 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0x9eb1e48 <line:643:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9eb1df8 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x9eb1de8 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0x9eb1e2c <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9eb1800 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9eb1ee8 <line:645:7, col:14>
    (DeclRefExpr 0x9eb1ecc <col:14> 'int_type':'typename _Traits::int_type' lvalue Var 0x9eb15e0 '__c' 'int_type':'typename _Traits::int_type')))


    basic_istream<_CharT, _Traits> &read(char_type *__s, streamsize __n) (CompoundStmt 0x9eb2e48 </usr/include/c++/4.6/bits/istream.tcc:652:5, line:675:5>
  (BinaryOperator 0x9eb2570 <line:653:7, col:19> '<dependent type>' '='
    (MemberExpr 0x9eb2538 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0x9e80030
      (CXXThisExpr 0x9eb2528 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0x9eb2558 <col:19> 'int' 0))
  (DeclStmt 0x9eb2620 <line:654:7, col:33>
    0x9eb2590 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0x9eb2600 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0x9eb25d8 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9eb25c8 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0x9eb25f0 <col:28> '_Bool' true))")
  (IfStmt 0x9eb2df0 <line:655:7, line:673:2>
    <<<NULL>>>
    (DeclRefExpr 0x9eb2630 <line:655:11> 'class std::basic_istream::sentry' lvalue Var 0x9eb2590 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0x9eb2dc8 <line:656:2, line:673:2>
      (DeclStmt 0x9eb2708 <line:657:4, col:47>
        0x9eb2680 "ios_base::iostate __err =
          (ImplicitCastExpr 0x9eb26f8 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9eb26d4 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6bb00 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0x9eb2ae0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:663:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9eb2718 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9eb2ac8 </usr/include/c++/4.6/bits/istream.tcc:659:6, line:663:6>
          (BinaryOperator 0x9eb2850 <line:660:8, col:49> '<dependent type>' '='
            (MemberExpr 0x9eb2738 <col:8> 'streamsize':'int' lvalue ->_M_gcount 0x9e80030
              (CXXThisExpr 0x9eb2728 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (CallExpr 0x9eb2828 <col:20, col:49> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9eb27c0 <col:20, col:35> '<dependent type>' lvalue
                (CallExpr 0x9eb27a0 <col:20, col:32> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9eb2768 <col:20, col:26> '<dependent type>' lvalue
                    (CXXThisExpr 0x9eb2758 <col:20> 'basic_istream<_CharT, _Traits> *' this))))
              (DeclRefExpr 0x9eb27f4 <col:41> 'char_type *' lvalue ParmVar 0x9eb22a0 '__s' 'char_type *')
              (DeclRefExpr 0x9eb280c <col:46> 'streamsize':'int' lvalue ParmVar 0x9eb22e0 '__n' 'streamsize':'int')))
          (IfStmt 0x9eb2aa8 <line:661:8, line:662:49>
            <<<NULL>>>
            (CXXOperatorCallExpr 0x9eb2908 <line:661:12, col:25> '<dependent type>'
              (UnresolvedLookupExpr 0x9eb28b0 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b412d0 0x9ac7fa0 0x9b5e2b0 0x9ba7d20 0x9bc7160 0x9bc74d0 0x9cbb090 0x9cbb590 0x9cbbad0 0x9db08a0)
              (MemberExpr 0x9eb2878 <col:12> 'streamsize':'int' lvalue ->_M_gcount 0x9e80030
                (CXXThisExpr 0x9eb2868 <col:12> 'basic_istream<_CharT, _Traits> *' this))
              (DeclRefExpr 0x9eb2898 <col:25> 'streamsize':'int' lvalue ParmVar 0x9eb22e0 '__n' 'streamsize':'int'))
            (CXXOperatorCallExpr 0x9eb2a80 <line:662:3, col:49> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x9eb2a70 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9eb2a58 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9d6a3b0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x9eb292c <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9eb2680 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ParenExpr 0x9eb2a40 <col:12, col:49> 'enum std::_Ios_Iostate'
                (CXXOperatorCallExpr 0x9eb2a18 <col:13, col:42> 'enum std::_Ios_Iostate'
                  (ImplicitCastExpr 0x9eb2a08 <col:30, <invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                    (DeclRefExpr 0x9eb29f0 <col:30, <invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)' lvalue Function 0x9d69d30 'operator|' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)'))
                  (ImplicitCastExpr 0x9eb29d0 <col:13, col:23> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                    (DeclRefExpr 0x9eb2970 <col:13, col:23> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6ba40 'eofbit' 'const iostate':'const enum std::_Ios_Iostate'))
                  (ImplicitCastExpr 0x9eb29e0 <col:32, col:42> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                    (DeclRefExpr 0x9eb29ac <col:32, col:42> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6baa0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0x9eb2be0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:668:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9eb2b00 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9eb2bc8 </usr/include/c++/4.6/bits/istream.tcc:665:6, line:668:6>
          (CallExpr 0x9eb2b98 <line:666:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9eb2b20 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9eb2b10 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9eb2b74 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6b9e0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x9eb2bb8 <line:667:31>))
        <<<NULL>>>)
      (IfStmt 0x9eb2cd0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:670:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9eb2c00 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9eb2cb8 </usr/include/c++/4.6/bits/istream.tcc:670:6, col:45>
          (CallExpr 0x9eb2c98 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9eb2c20 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9eb2c10 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9eb2c74 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6b9e0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0x9eb2da8 <line:671:4, line:672:26>
        <<<NULL>>>
        (ImplicitCastExpr 0x9eb2d18 <line:671:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0x9eb2d08 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9eb2cec <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9eb2680 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0x9eb2d88 <line:672:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9eb2d38 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x9eb2d28 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0x9eb2d6c <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9eb2680 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9eb2e38 <line:674:7, col:15>
    (UnaryOperator 0x9eb2e20 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9eb2e10 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    streamsize readsome(char_type *__s, streamsize __n) (CompoundStmt 0x9eb4f30 </usr/include/c++/4.6/bits/istream.tcc:681:5, line:707:5>
  (BinaryOperator 0x9eb44d0 <line:682:7, col:19> '<dependent type>' '='
    (MemberExpr 0x9eb4498 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0x9e80030
      (CXXThisExpr 0x9eb4488 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0x9eb44b8 <col:19> 'int' 0))
  (DeclStmt 0x9eb4580 <line:683:7, col:33>
    0x9eb44f0 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0x9eb4560 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0x9eb4538 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9eb4528 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0x9eb4550 <col:28> '_Bool' true))")
  (IfStmt 0x9eb4ed0 <line:684:7, line:705:2>
    <<<NULL>>>
    (DeclRefExpr 0x9eb4590 <line:684:11> 'class std::basic_istream::sentry' lvalue Var 0x9eb44f0 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0x9eb4ea8 <line:685:2, line:705:2>
      (DeclStmt 0x9eb4668 <line:686:4, col:47>
        0x9eb45e0 "ios_base::iostate __err =
          (ImplicitCastExpr 0x9eb4658 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9eb4634 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6bb00 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0x9eb4bc0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:695:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9eb4678 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9eb4ba8 </usr/include/c++/4.6/bits/istream.tcc:688:6, line:695:6>
          (DeclStmt 0x9eb4788 <line:690:8, col:58>
            0x9eb4690 "const streamsize __num =
              (CallExpr 0x9eb4768 <col:33, col:57> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9eb4730 <col:33, col:48> '<dependent type>' lvalue
                  (CallExpr 0x9eb4710 <col:33, col:45> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9eb46d8 <col:33, col:39> '<dependent type>' lvalue
                      (CXXThisExpr 0x9eb46c8 <col:33> 'basic_istream<_CharT, _Traits> *' this)))))")
          (IfStmt 0x9eb4b88 <line:691:8, line:694:22>
            <<<NULL>>>
            (BinaryOperator 0x9eb47d8 <line:691:12, col:20> '_Bool' '>'
              (ImplicitCastExpr 0x9eb47c8 <col:12> 'streamsize':'int' <LValueToRValue>
                (DeclRefExpr 0x9eb4798 <col:12> 'const streamsize':'const int' lvalue Var 0x9eb4690 '__num' 'const streamsize':'const int'))
              (IntegerLiteral 0x9eb47b0 <col:20> 'int' 0))
            (BinaryOperator 0x9eb4a28 <line:692:3, col:61> '<dependent type>' '='
              (MemberExpr 0x9eb4800 <col:3> 'streamsize':'int' lvalue ->_M_gcount 0x9e80030
                (CXXThisExpr 0x9eb47f0 <col:3> 'basic_istream<_CharT, _Traits> *' this))
              (CallExpr 0x9eb4a00 <col:15, col:61> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9eb4888 <col:15, col:30> '<dependent type>' lvalue
                  (CallExpr 0x9eb4868 <col:15, col:27> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9eb4830 <col:15, col:21> '<dependent type>' lvalue
                      (CXXThisExpr 0x9eb4820 <col:15> 'basic_istream<_CharT, _Traits> *' this))))
                (DeclRefExpr 0x9eb48bc <col:36> 'char_type *' lvalue ParmVar 0x9eb4350 '__s' 'char_type *')
                (CallExpr 0x9eb49c8 <col:41, col:60> 'const int':'const int' lvalue
                  (ImplicitCastExpr 0x9eb49b8 <col:41, col:46> 'const int &(*)(const int &, const int &)' <FunctionToPointerDecay>
                    (DeclRefExpr 0x9eb4990 <col:41, col:46> 'const int &(const int &, const int &)' lvalue Function 0x9d87e80 'min' 'const int &(const int &, const int &)' (FunctionTemplate 0x9b76440 'min')))
                  (DeclRefExpr 0x9eb4930 <col:50> 'const streamsize':'const int' lvalue Var 0x9eb4690 '__num' 'const streamsize':'const int')
                  (ImplicitCastExpr 0x9eb49f0 <col:57> 'const int':'const int' lvalue <NoOp>
                    (DeclRefExpr 0x9eb4948 <col:57> 'streamsize':'int' lvalue ParmVar 0x9eb4390 '__n' 'streamsize':'int')))))
            (IfStmt 0x9eb4b68 <line:693:13, line:694:22>
              <<<NULL>>>
              (BinaryOperator 0x9eb4a98 <line:693:17, col:27> '_Bool' '=='
                (ImplicitCastExpr 0x9eb4a88 <col:17> 'streamsize':'int' <LValueToRValue>
                  (DeclRefExpr 0x9eb4a40 <col:17> 'const streamsize':'const int' lvalue Var 0x9eb4690 '__num' 'const streamsize':'const int'))
                (UnaryOperator 0x9eb4a70 <col:26, col:27> 'int' prefix '-'
                  (IntegerLiteral 0x9eb4a58 <col:27> 'int' 1)))
              (CXXOperatorCallExpr 0x9eb4b40 <line:694:3, col:22> 'const enum std::_Ios_Iostate' lvalue
                (ImplicitCastExpr 0x9eb4b30 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                  (DeclRefExpr 0x9eb4b18 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9d6a3b0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
                (DeclRefExpr 0x9eb4ab0 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9eb45e0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
                (ImplicitCastExpr 0x9eb4b08 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                  (DeclRefExpr 0x9eb4ae4 <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6ba40 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
              <<<NULL>>>)))
        <<<NULL>>>)
      (IfStmt 0x9eb4cc0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:700:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9eb4be0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9eb4ca8 </usr/include/c++/4.6/bits/istream.tcc:697:6, line:700:6>
          (CallExpr 0x9eb4c78 <line:698:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9eb4c00 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9eb4bf0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9eb4c54 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6b9e0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x9eb4c98 <line:699:31>))
        <<<NULL>>>)
      (IfStmt 0x9eb4db0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:702:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9eb4ce0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9eb4d98 </usr/include/c++/4.6/bits/istream.tcc:702:6, col:45>
          (CallExpr 0x9eb4d78 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9eb4d00 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9eb4cf0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9eb4d54 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6b9e0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0x9eb4e88 <line:703:4, line:704:26>
        <<<NULL>>>
        (ImplicitCastExpr 0x9eb4df8 <line:703:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0x9eb4de8 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9eb4dcc <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9eb45e0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0x9eb4e68 <line:704:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9eb4e18 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x9eb4e08 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0x9eb4e4c <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9eb45e0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9eb4f20 <line:706:7, col:14>
    (MemberExpr 0x9eb4f00 <col:14> 'streamsize':'int' lvalue ->_M_gcount 0x9e80030
      (CXXThisExpr 0x9eb4ef0 <col:14> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &putback(char_type __c) (CompoundStmt 0x9eb6058 </usr/include/c++/4.6/bits/istream.tcc:713:5, line:742:5>
  (BinaryOperator 0x9eb5560 <line:716:7, col:19> '<dependent type>' '='
    (MemberExpr 0x9eb5528 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0x9e80030
      (CXXThisExpr 0x9eb5518 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0x9eb5548 <col:19> 'int' 0))
  (CallExpr 0x9eb5740 <line:718:7, col:54> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9eb5588 <col:7, col:13> '<dependent type>' lvalue
      (CXXThisExpr 0x9eb5578 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (CXXOperatorCallExpr 0x9eb5718 <col:19, col:48> '<dependent type>'
      (UnresolvedLookupExpr 0x9eb56d8 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9d5b750 0x9d68890 0x9d69b00)
      (CallExpr 0x9eb5608 <col:19, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9eb55d0 <col:19, col:25> '<dependent type>' lvalue
          (CXXThisExpr 0x9eb55c0 <col:19> 'basic_istream<_CharT, _Traits> *' this)))
      (CXXOperatorCallExpr 0x9eb56b8 <col:37, col:48> 'enum std::_Ios_Iostate'
        (ImplicitCastExpr 0x9eb56a8 <<invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9eb5678 <<invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate)' lvalue Function 0x9d6a170 'operator~' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate)'))
        (ImplicitCastExpr 0x9eb5668 <col:38, col:48> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
          (DeclRefExpr 0x9eb5644 <col:38, col:48> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6ba40 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))))
  (DeclStmt 0x9eb5800 <line:719:7, col:33>
    0x9eb5770 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0x9eb57e0 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0x9eb57b8 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9eb57a8 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0x9eb57d0 <col:28> '_Bool' true))")
  (IfStmt 0x9eb6000 <line:720:7, line:740:2>
    <<<NULL>>>
    (DeclRefExpr 0x9eb5810 <line:720:11> 'class std::basic_istream::sentry' lvalue Var 0x9eb5770 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0x9eb5fd8 <line:721:2, line:740:2>
      (DeclStmt 0x9eb58e8 <line:722:4, col:47>
        0x9eb5860 "ios_base::iostate __err =
          (ImplicitCastExpr 0x9eb58d8 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9eb58b4 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6bb00 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0x9eb5cf0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:730:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9eb58f8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9eb5cd0 </usr/include/c++/4.6/bits/istream.tcc:724:6, line:730:6>
          (DeclStmt 0x9eb59c0 <line:725:8, col:49>
            0x9eb5910 "const int_type __eof =
              (CallExpr 0x9eb59a0 <col:31, col:48> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9eb5968 <col:31, col:44> '<dependent type>' lvalue))")
          (DeclStmt 0x9eb5a80 <line:726:8, col:46>
            0x9eb59e0 "__streambuf_type *__sb =
              (CallExpr 0x9eb5a60 <col:33, col:45> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9eb5a28 <col:33, col:39> '<dependent type>' lvalue
                  (CXXThisExpr 0x9eb5a18 <col:33> 'basic_istream<_CharT, _Traits> *' this)))")
          (IfStmt 0x9eb5cb0 <line:727:8, line:729:22>
            <<<NULL>>>
            (BinaryOperator 0x9eb5be0 <line:727:12, line:728:60> '<dependent type>' '||'
              (UnaryOperator 0x9eb5aa8 <line:727:12, col:13> '<dependent type>' prefix '!'
                (DeclRefExpr 0x9eb5a90 <col:13> '__streambuf_type *' lvalue Var 0x9eb59e0 '__sb' '__streambuf_type *'))
              (CallExpr 0x9eb5bb8 <line:728:8, col:60> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9eb5ae0 <col:8, col:21> '<dependent type>' lvalue)
                (CallExpr 0x9eb5b80 <col:33, col:52> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9eb5b30 <col:33, col:39> '<dependent type>' lvalue
                    (DeclRefExpr 0x9eb5b14 <col:33> '__streambuf_type *' lvalue Var 0x9eb59e0 '__sb' '__streambuf_type *'))
                  (DeclRefExpr 0x9eb5b64 <col:49> 'char_type':'_CharT' lvalue ParmVar 0x9eb52d0 '__c' 'char_type':'_CharT'))
                (DeclRefExpr 0x9eb5ba0 <col:55> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x9eb5910 '__eof' 'const int_type':'const typename _Traits::int_type')))
            (CXXOperatorCallExpr 0x9eb5c88 <line:729:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x9eb5c78 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9eb5c60 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9d6a3b0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x9eb5bf8 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9eb5860 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0x9eb5c50 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x9eb5c2c <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6b9e0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0x9eb5df0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:735:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9eb5d10 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9eb5dd8 </usr/include/c++/4.6/bits/istream.tcc:732:6, line:735:6>
          (CallExpr 0x9eb5da8 <line:733:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9eb5d30 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9eb5d20 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9eb5d84 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6b9e0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x9eb5dc8 <line:734:31>))
        <<<NULL>>>)
      (IfStmt 0x9eb5ee0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:737:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9eb5e10 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9eb5ec8 </usr/include/c++/4.6/bits/istream.tcc:737:6, col:45>
          (CallExpr 0x9eb5ea8 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9eb5e30 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9eb5e20 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9eb5e84 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6b9e0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0x9eb5fb8 <line:738:4, line:739:26>
        <<<NULL>>>
        (ImplicitCastExpr 0x9eb5f28 <line:738:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0x9eb5f18 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9eb5efc <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9eb5860 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0x9eb5f98 <line:739:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9eb5f48 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x9eb5f38 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0x9eb5f7c <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9eb5860 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9eb6048 <line:741:7, col:15>
    (UnaryOperator 0x9eb6030 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9eb6020 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &unget() (CompoundStmt 0x9eb7140 </usr/include/c++/4.6/bits/istream.tcc:748:5, line:777:5>
  (BinaryOperator 0x9eb6678 <line:751:7, col:19> '<dependent type>' '='
    (MemberExpr 0x9eb6640 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0x9e80030
      (CXXThisExpr 0x9eb6630 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0x9eb6660 <col:19> 'int' 0))
  (CallExpr 0x9eb6840 <line:753:7, col:54> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9eb66a0 <col:7, col:13> '<dependent type>' lvalue
      (CXXThisExpr 0x9eb6690 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (CXXOperatorCallExpr 0x9eb6818 <col:19, col:48> '<dependent type>'
      (UnresolvedLookupExpr 0x9eb67d8 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9d5b750 0x9d68890 0x9d69b00)
      (CallExpr 0x9eb6720 <col:19, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9eb66e8 <col:19, col:25> '<dependent type>' lvalue
          (CXXThisExpr 0x9eb66d8 <col:19> 'basic_istream<_CharT, _Traits> *' this)))
      (CXXOperatorCallExpr 0x9eb67b8 <col:37, col:48> 'enum std::_Ios_Iostate'
        (ImplicitCastExpr 0x9eb67a8 <<invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9eb6790 <<invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate)' lvalue Function 0x9d6a170 'operator~' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate)'))
        (ImplicitCastExpr 0x9eb6780 <col:38, col:48> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
          (DeclRefExpr 0x9eb675c <col:38, col:48> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6ba40 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))))
  (DeclStmt 0x9eb6900 <line:754:7, col:33>
    0x9eb6870 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0x9eb68e0 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0x9eb68b8 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9eb68a8 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0x9eb68d0 <col:28> '_Bool' true))")
  (IfStmt 0x9eb70e8 <line:755:7, line:775:2>
    <<<NULL>>>
    (DeclRefExpr 0x9eb6910 <line:755:11> 'class std::basic_istream::sentry' lvalue Var 0x9eb6870 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0x9eb70c0 <line:756:2, line:775:2>
      (DeclStmt 0x9eb69e8 <line:757:4, col:47>
        0x9eb6960 "ios_base::iostate __err =
          (ImplicitCastExpr 0x9eb69d8 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9eb69b4 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6bb00 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0x9eb6dd8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:765:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9eb69f8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9eb6db8 </usr/include/c++/4.6/bits/istream.tcc:759:6, line:765:6>
          (DeclStmt 0x9eb6ac0 <line:760:8, col:49>
            0x9eb6a10 "const int_type __eof =
              (CallExpr 0x9eb6aa0 <col:31, col:48> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9eb6a68 <col:31, col:44> '<dependent type>' lvalue))")
          (DeclStmt 0x9eb6b80 <line:761:8, col:46>
            0x9eb6ae0 "__streambuf_type *__sb =
              (CallExpr 0x9eb6b60 <col:33, col:45> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9eb6b28 <col:33, col:39> '<dependent type>' lvalue
                  (CXXThisExpr 0x9eb6b18 <col:33> 'basic_istream<_CharT, _Traits> *' this)))")
          (IfStmt 0x9eb6d98 <line:762:8, line:764:22>
            <<<NULL>>>
            (BinaryOperator 0x9eb6cc8 <line:762:12, line:763:55> '<dependent type>' '||'
              (UnaryOperator 0x9eb6ba8 <line:762:12, col:13> '<dependent type>' prefix '!'
                (DeclRefExpr 0x9eb6b90 <col:13> '__streambuf_type *' lvalue Var 0x9eb6ae0 '__sb' '__streambuf_type *'))
              (CallExpr 0x9eb6ca0 <line:763:8, col:55> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9eb6be0 <col:8, col:21> '<dependent type>' lvalue)
                (CallExpr 0x9eb6c68 <col:33, col:47> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9eb6c30 <col:33, col:39> '<dependent type>' lvalue
                    (DeclRefExpr 0x9eb6c14 <col:33> '__streambuf_type *' lvalue Var 0x9eb6ae0 '__sb' '__streambuf_type *')))
                (DeclRefExpr 0x9eb6c84 <col:50> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x9eb6a10 '__eof' 'const int_type':'const typename _Traits::int_type')))
            (CXXOperatorCallExpr 0x9eb6d70 <line:764:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x9eb6d60 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9eb6d48 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9d6a3b0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x9eb6ce0 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9eb6960 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0x9eb6d38 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x9eb6d14 <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6b9e0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0x9eb6ed8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:770:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9eb6df8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9eb6ec0 </usr/include/c++/4.6/bits/istream.tcc:767:6, line:770:6>
          (CallExpr 0x9eb6e90 <line:768:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9eb6e18 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9eb6e08 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9eb6e6c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6b9e0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x9eb6eb0 <line:769:31>))
        <<<NULL>>>)
      (IfStmt 0x9eb6fc8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:772:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9eb6ef8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9eb6fb0 </usr/include/c++/4.6/bits/istream.tcc:772:6, col:45>
          (CallExpr 0x9eb6f90 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9eb6f18 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9eb6f08 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9eb6f6c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6b9e0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0x9eb70a0 <line:773:4, line:774:26>
        <<<NULL>>>
        (ImplicitCastExpr 0x9eb7010 <line:773:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0x9eb7000 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9eb6fe4 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9eb6960 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0x9eb7080 <line:774:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9eb7030 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x9eb7020 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0x9eb7064 <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9eb6960 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9eb7130 <line:776:7, col:15>
    (UnaryOperator 0x9eb7118 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9eb7108 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    int sync() (CompoundStmt 0x9eb7df8 </usr/include/c++/4.6/bits/istream.tcc:783:5, line:813:5>
  (DeclStmt 0x9eb7568 <line:786:7, col:21>
    0x9eb7500 "int __ret =
      (UnaryOperator 0x9eb7550 <col:19, col:20> 'int' prefix '-'
        (IntegerLiteral 0x9eb7538 <col:20> 'int' 1))")
  (DeclStmt 0x9eb7610 <line:787:7, col:33>
    0x9eb7580 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0x9eb75f0 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0x9eb75c8 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9eb75b8 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0x9eb75e0 <col:28> '_Bool' true))")
  (IfStmt 0x9eb7da0 <line:788:7, line:811:2>
    <<<NULL>>>
    (DeclRefExpr 0x9eb7620 <line:788:11> 'class std::basic_istream::sentry' lvalue Var 0x9eb7580 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0x9eb7d78 <line:789:2, line:811:2>
      (DeclStmt 0x9eb76f8 <line:790:4, col:47>
        0x9eb7670 "ios_base::iostate __err =
          (ImplicitCastExpr 0x9eb76e8 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9eb76c4 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6bb00 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0x9eb7a90 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:801:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9eb7708 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9eb7a78 </usr/include/c++/4.6/bits/istream.tcc:792:6, line:801:6>
          (DeclStmt 0x9eb77d0 <line:793:8, col:46>
            0x9eb7730 "__streambuf_type *__sb =
              (CallExpr 0x9eb77b0 <col:33, col:45> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9eb7778 <col:33, col:39> '<dependent type>' lvalue
                  (CXXThisExpr 0x9eb7768 <col:33> 'basic_istream<_CharT, _Traits> *' this)))")
          (IfStmt 0x9eb7a58 <line:794:8, line:800:3>
            <<<NULL>>>
            (DeclRefExpr 0x9eb77e0 <line:794:12> '__streambuf_type *' lvalue Var 0x9eb7730 '__sb' '__streambuf_type *')
            (CompoundStmt 0x9eb7a40 <line:795:3, line:800:3>
              (IfStmt 0x9eb7a20 <line:796:5, line:799:15>
                <<<NULL>>>
                (CXXOperatorCallExpr 0x9eb78f8 <line:796:9, col:29> '<dependent type>'
                  (UnresolvedLookupExpr 0x9eb7898 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90 0x9cb91e0 0x9cb9c50 0x9cba490 0x9cbaa00 0x9db0390)
                  (CallExpr 0x9eb7848 <col:9, col:23> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9eb7810 <col:9, col:15> '<dependent type>' lvalue
                      (DeclRefExpr 0x9eb77f8 <col:9> '__streambuf_type *' lvalue Var 0x9eb7730 '__sb' '__streambuf_type *')))
                  (UnaryOperator 0x9eb7880 <col:28, col:29> 'int' prefix '-'
                    (IntegerLiteral 0x9eb7868 <col:29> 'int' 1)))
                (CXXOperatorCallExpr 0x9eb79b0 <line:797:7, col:26> 'const enum std::_Ios_Iostate' lvalue
                  (ImplicitCastExpr 0x9eb79a0 <col:13, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                    (DeclRefExpr 0x9eb7988 <col:13, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9d6a3b0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
                  (DeclRefExpr 0x9eb791c <col:7> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9eb7670 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
                  (ImplicitCastExpr 0x9eb7978 <col:16, col:26> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                    (DeclRefExpr 0x9eb7954 <col:16, col:26> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6b9e0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
                (BinaryOperator 0x9eb7a08 <line:799:7, col:15> 'int' lvalue '='
                  (DeclRefExpr 0x9eb79d4 <col:7> 'int' lvalue Var 0x9eb7500 '__ret' 'int')
                  (IntegerLiteral 0x9eb79f0 <col:15> 'int' 0))))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0x9eb7b90 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:806:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9eb7ab0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9eb7b78 </usr/include/c++/4.6/bits/istream.tcc:803:6, line:806:6>
          (CallExpr 0x9eb7b48 <line:804:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9eb7ad0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9eb7ac0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9eb7b24 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6b9e0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x9eb7b68 <line:805:31>))
        <<<NULL>>>)
      (IfStmt 0x9eb7c80 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:808:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9eb7bb0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9eb7c68 </usr/include/c++/4.6/bits/istream.tcc:808:6, col:45>
          (CallExpr 0x9eb7c48 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9eb7bd0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9eb7bc0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9eb7c24 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6b9e0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0x9eb7d58 <line:809:4, line:810:26>
        <<<NULL>>>
        (ImplicitCastExpr 0x9eb7cc8 <line:809:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0x9eb7cb8 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9eb7c9c <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9eb7670 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0x9eb7d38 <line:810:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9eb7ce8 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x9eb7cd8 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0x9eb7d1c <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9eb7670 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9eb7de8 <line:812:7, col:14>
    (ImplicitCastExpr 0x9eb7dd8 <col:14> 'int' <LValueToRValue>
      (DeclRefExpr 0x9eb7dbc <col:14> 'int' lvalue Var 0x9eb7500 '__ret' 'int'))))


    typename basic_istream<_CharT, _Traits>::pos_type tellg() (CompoundStmt 0x9eb8a78 </usr/include/c++/4.6/bits/istream.tcc:819:5, line:841:5>
  (DeclStmt 0x9eb84d0 <line:822:7, col:36>
    0x9eb8440 "pos_type __ret =
      (CXXUnresolvedConstructExpr 0x9eb84b0 <col:24, col:35> 'pos_type':'typename _Traits::pos_type'
        (UnaryOperator 0x9eb8498 <col:33, col:34> 'int' prefix '-'
          (IntegerLiteral 0x9eb8480 <col:34> 'int' 1)))")
  (DeclStmt 0x9eb8580 <line:823:7, col:33>
    0x9eb84f0 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0x9eb8560 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0x9eb8538 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9eb8528 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0x9eb8550 <col:28> '_Bool' true))")
  (IfStmt 0x9eb8a30 <line:824:7, line:839:2>
    <<<NULL>>>
    (DeclRefExpr 0x9eb8590 <line:824:11> 'class std::basic_istream::sentry' lvalue Var 0x9eb84f0 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0x9eb8a10 <line:825:2, line:839:2>
      (IfStmt 0x9eb8800 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:831:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9eb85a8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9eb87e8 </usr/include/c++/4.6/bits/istream.tcc:827:6, line:831:6>
          (IfStmt 0x9eb87c8 <line:828:8, line:830:21>
            <<<NULL>>>
            (UnaryOperator 0x9eb8620 <line:828:12, col:24> '<dependent type>' prefix '!'
              (CallExpr 0x9eb8600 <col:13, col:24> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9eb85c8 <col:13, col:19> '<dependent type>' lvalue
                  (CXXThisExpr 0x9eb85b8 <col:13> 'basic_istream<_CharT, _Traits> *' this))))
            (BinaryOperator 0x9eb87b0 <line:829:3, line:830:21> '<dependent type>' '='
              (DeclRefExpr 0x9eb8634 <line:829:3> 'pos_type':'typename _Traits::pos_type' lvalue Var 0x9eb8440 '__ret' 'pos_type':'typename _Traits::pos_type')
              (CallExpr 0x9eb8788 <col:11, line:830:21> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9eb86b8 <line:829:11, col:26> '<dependent type>' lvalue
                  (CallExpr 0x9eb8698 <col:11, col:23> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9eb8660 <col:11, col:17> '<dependent type>' lvalue
                      (CXXThisExpr 0x9eb8650 <col:11> 'basic_istream<_CharT, _Traits> *' this))))
                (IntegerLiteral 0x9eb86f0 <col:37> 'int' 0)
                (DeclRefExpr 0x9eb8724 <col:40, col:50> 'const seekdir':'const enum std::_Ios_Seekdir' lvalue Var 0x9d6bea0 'cur' 'const seekdir':'const enum std::_Ios_Seekdir')
                (DeclRefExpr 0x9eb8764 <line:830:9, col:19> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9d6bcd0 'in' 'const openmode':'const enum std::_Ios_Openmode')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0x9eb8900 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:836:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9eb8820 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9eb88e8 </usr/include/c++/4.6/bits/istream.tcc:833:6, line:836:6>
          (CallExpr 0x9eb88b8 <line:834:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9eb8840 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9eb8830 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9eb8894 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6b9e0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x9eb88d8 <line:835:31>))
        <<<NULL>>>)
      (IfStmt 0x9eb89f0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:838:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9eb8920 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9eb89d8 </usr/include/c++/4.6/bits/istream.tcc:838:6, col:45>
          (CallExpr 0x9eb89b8 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9eb8940 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9eb8930 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9eb8994 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6b9e0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9eb8a68 <line:840:7, col:14>
    (DeclRefExpr 0x9eb8a4c <col:14> 'pos_type':'typename _Traits::pos_type' lvalue Var 0x9eb8440 '__ret' 'pos_type':'typename _Traits::pos_type')))


    basic_istream<_CharT, _Traits> &seekg(pos_type __pos) (CompoundStmt 0x9eb9b78 </usr/include/c++/4.6/bits/istream.tcc:847:5, line:880:5>
  (CallExpr 0x9eb9218 <line:851:7, col:54> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9eb9078 <col:7, col:13> '<dependent type>' lvalue
      (CXXThisExpr 0x9eb9068 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (CXXOperatorCallExpr 0x9eb91f0 <col:19, col:48> '<dependent type>'
      (UnresolvedLookupExpr 0x9eb91b0 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9d5b750 0x9d68890 0x9d69b00)
      (CallExpr 0x9eb90f8 <col:19, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9eb90c0 <col:19, col:25> '<dependent type>' lvalue
          (CXXThisExpr 0x9eb90b0 <col:19> 'basic_istream<_CharT, _Traits> *' this)))
      (CXXOperatorCallExpr 0x9eb9190 <col:37, col:48> 'enum std::_Ios_Iostate'
        (ImplicitCastExpr 0x9eb9180 <<invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9eb9168 <<invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate)' lvalue Function 0x9d6a170 'operator~' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate)'))
        (ImplicitCastExpr 0x9eb9158 <col:38, col:48> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
          (DeclRefExpr 0x9eb9134 <col:38, col:48> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6ba40 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))))
  (DeclStmt 0x9eb92d0 <line:852:7, col:33>
    0x9eb9240 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0x9eb92b0 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0x9eb9288 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9eb9278 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0x9eb92a0 <col:28> '_Bool' true))")
  (IfStmt 0x9eb9b20 <line:853:7, line:878:2>
    <<<NULL>>>
    (DeclRefExpr 0x9eb92e0 <line:853:11> 'class std::basic_istream::sentry' lvalue Var 0x9eb9240 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0x9eb9af8 <line:854:2, line:878:2>
      (DeclStmt 0x9eb93b8 <line:855:4, col:47>
        0x9eb9330 "ios_base::iostate __err =
          (ImplicitCastExpr 0x9eb93a8 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9eb9384 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6bb00 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0x9eb9810 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:868:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9eb93c8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9eb97f8 </usr/include/c++/4.6/bits/istream.tcc:857:6, line:868:6>
          (IfStmt 0x9eb97d8 <line:858:8, line:867:3>
            <<<NULL>>>
            (UnaryOperator 0x9eb9440 <line:858:12, col:24> '<dependent type>' prefix '!'
              (CallExpr 0x9eb9420 <col:13, col:24> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9eb93e8 <col:13, col:19> '<dependent type>' lvalue
                  (CXXThisExpr 0x9eb93d8 <col:13> 'basic_istream<_CharT, _Traits> *' this))))
            (CompoundStmt 0x9eb97c0 <line:859:3, line:867:3>
              (DeclStmt 0x9eb95b8 <line:861:5, line:862:23>
                0x9eb9460 "const pos_type __p =
                  (CallExpr 0x9eb9590 <line:861:26, line:862:22> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9eb9500 <line:861:26, col:41> '<dependent type>' lvalue
                      (CallExpr 0x9eb94e0 <col:26, col:38> '<dependent type>'
                        (CXXDependentScopeMemberExpr 0x9eb94a8 <col:26, col:32> '<dependent type>' lvalue
                          (CXXThisExpr 0x9eb9498 <col:26> 'basic_istream<_CharT, _Traits> *' this))))
                    (DeclRefExpr 0x9eb9534 <col:52> 'pos_type':'typename _Traits::pos_type' lvalue ParmVar 0x9eb8e20 '__pos' 'pos_type':'typename _Traits::pos_type')
                    (DeclRefExpr 0x9eb956c <line:862:10, col:20> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9d6bcd0 'in' 'const openmode':'const enum std::_Ios_Openmode'))")
              (IfStmt 0x9eb97a0 <line:865:5, line:866:26>
                <<<NULL>>>
                (CXXOperatorCallExpr 0x9eb96c0 <line:865:9, col:37> '<dependent type>'
                  (UnresolvedLookupExpr 0x9eb9660 <col:13, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90 0x9cb91e0 0x9cb9c50 0x9cba490 0x9cbaa00 0x9db0390)
                  (DeclRefExpr 0x9eb95c8 <col:9> 'const pos_type':'const typename _Traits::pos_type' lvalue Var 0x9eb9460 '__p' 'const pos_type':'const typename _Traits::pos_type')
                  (CXXUnresolvedConstructExpr 0x9eb9640 <col:16, col:37> 'pos_type':'typename _Traits::pos_type'
                    (CXXUnresolvedConstructExpr 0x9eb9620 <col:25, col:36> 'off_type':'typename _Traits::off_type'
                      (UnaryOperator 0x9eb9608 <col:34, col:35> 'int' prefix '-'
                        (IntegerLiteral 0x9eb95f0 <col:35> 'int' 1)))))
                (CXXOperatorCallExpr 0x9eb9778 <line:866:7, col:26> 'const enum std::_Ios_Iostate' lvalue
                  (ImplicitCastExpr 0x9eb9768 <col:13, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                    (DeclRefExpr 0x9eb9750 <col:13, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9d6a3b0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
                  (DeclRefExpr 0x9eb96e4 <col:7> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9eb9330 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
                  (ImplicitCastExpr 0x9eb9740 <col:16, col:26> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                    (DeclRefExpr 0x9eb971c <col:16, col:26> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6baa0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
                <<<NULL>>>))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0x9eb9910 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:873:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9eb9830 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9eb98f8 </usr/include/c++/4.6/bits/istream.tcc:870:6, line:873:6>
          (CallExpr 0x9eb98c8 <line:871:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9eb9850 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9eb9840 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9eb98a4 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6b9e0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x9eb98e8 <line:872:31>))
        <<<NULL>>>)
      (IfStmt 0x9eb9a00 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:875:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9eb9930 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9eb99e8 </usr/include/c++/4.6/bits/istream.tcc:875:6, col:45>
          (CallExpr 0x9eb99c8 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9eb9950 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9eb9940 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9eb99a4 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6b9e0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0x9eb9ad8 <line:876:4, line:877:26>
        <<<NULL>>>
        (ImplicitCastExpr 0x9eb9a48 <line:876:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0x9eb9a38 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9eb9a1c <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9eb9330 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0x9eb9ab8 <line:877:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9eb9a68 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x9eb9a58 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0x9eb9a9c <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9eb9330 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9eb9b68 <line:879:7, col:15>
    (UnaryOperator 0x9eb9b50 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9eb9b40 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &seekg(off_type __off, ios_base::seekdir __dir) (CompoundStmt 0x9ebad00 </usr/include/c++/4.6/bits/istream.tcc:886:5, line:919:5>
  (CallExpr 0x9eba388 <line:890:7, col:54> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9eba1e8 <col:7, col:13> '<dependent type>' lvalue
      (CXXThisExpr 0x9eba1d8 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (CXXOperatorCallExpr 0x9eba360 <col:19, col:48> '<dependent type>'
      (UnresolvedLookupExpr 0x9eba320 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9d5b750 0x9d68890 0x9d69b00)
      (CallExpr 0x9eba268 <col:19, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9eba230 <col:19, col:25> '<dependent type>' lvalue
          (CXXThisExpr 0x9eba220 <col:19> 'basic_istream<_CharT, _Traits> *' this)))
      (CXXOperatorCallExpr 0x9eba300 <col:37, col:48> 'enum std::_Ios_Iostate'
        (ImplicitCastExpr 0x9eba2f0 <<invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9eba2d8 <<invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate)' lvalue Function 0x9d6a170 'operator~' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate)'))
        (ImplicitCastExpr 0x9eba2c8 <col:38, col:48> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
          (DeclRefExpr 0x9eba2a4 <col:38, col:48> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6ba40 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))))
  (DeclStmt 0x9eba440 <line:891:7, col:33>
    0x9eba3b0 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0x9eba420 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0x9eba3f8 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9eba3e8 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0x9eba410 <col:28> '_Bool' true))")
  (IfStmt 0x9ebaca8 <line:892:7, line:917:2>
    <<<NULL>>>
    (DeclRefExpr 0x9eba450 <line:892:11> 'class std::basic_istream::sentry' lvalue Var 0x9eba3b0 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0x9ebac80 <line:893:2, line:917:2>
      (DeclStmt 0x9eba528 <line:894:4, col:47>
        0x9eba4a0 "ios_base::iostate __err =
          (ImplicitCastExpr 0x9eba518 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9eba4f4 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6bb00 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0x9eba998 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:907:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9eba538 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9eba980 </usr/include/c++/4.6/bits/istream.tcc:896:6, line:907:6>
          (IfStmt 0x9eba960 <line:897:8, line:906:3>
            <<<NULL>>>
            (UnaryOperator 0x9eba5b0 <line:897:12, col:24> '<dependent type>' prefix '!'
              (CallExpr 0x9eba590 <col:13, col:24> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9eba558 <col:13, col:19> '<dependent type>' lvalue
                  (CXXThisExpr 0x9eba548 <col:13> 'basic_istream<_CharT, _Traits> *' this))))
            (CompoundStmt 0x9eba948 <line:898:3, line:906:3>
              (DeclStmt 0x9eba740 <line:900:5, line:901:23>
                0x9eba5d0 "const pos_type __p =
                  (CallExpr 0x9eba718 <line:900:26, line:901:22> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9eba670 <line:900:26, col:41> '<dependent type>' lvalue
                      (CallExpr 0x9eba650 <col:26, col:38> '<dependent type>'
                        (CXXDependentScopeMemberExpr 0x9eba618 <col:26, col:32> '<dependent type>' lvalue
                          (CXXThisExpr 0x9eba608 <col:26> 'basic_istream<_CharT, _Traits> *' this))))
                    (DeclRefExpr 0x9eba6a4 <col:52> 'off_type':'typename _Traits::off_type' lvalue ParmVar 0x9eb9f20 '__off' 'off_type':'typename _Traits::off_type')
                    (DeclRefExpr 0x9eba6bc <col:59> 'class ios_base::seekdir':'enum std::_Ios_Seekdir' lvalue ParmVar 0x9eb9f90 '__dir' 'class ios_base::seekdir':'enum std::_Ios_Seekdir')
                    (DeclRefExpr 0x9eba6f4 <line:901:10, col:20> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9d6bcd0 'in' 'const openmode':'const enum std::_Ios_Openmode'))")
              (IfStmt 0x9eba928 <line:904:5, line:905:26>
                <<<NULL>>>
                (CXXOperatorCallExpr 0x9eba848 <line:904:9, col:37> '<dependent type>'
                  (UnresolvedLookupExpr 0x9eba7e8 <col:13, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90 0x9cb91e0 0x9cb9c50 0x9cba490 0x9cbaa00 0x9db0390)
                  (DeclRefExpr 0x9eba750 <col:9> 'const pos_type':'const typename _Traits::pos_type' lvalue Var 0x9eba5d0 '__p' 'const pos_type':'const typename _Traits::pos_type')
                  (CXXUnresolvedConstructExpr 0x9eba7c8 <col:16, col:37> 'pos_type':'typename _Traits::pos_type'
                    (CXXUnresolvedConstructExpr 0x9eba7a8 <col:25, col:36> 'off_type':'typename _Traits::off_type'
                      (UnaryOperator 0x9eba790 <col:34, col:35> 'int' prefix '-'
                        (IntegerLiteral 0x9eba778 <col:35> 'int' 1)))))
                (CXXOperatorCallExpr 0x9eba900 <line:905:7, col:26> 'const enum std::_Ios_Iostate' lvalue
                  (ImplicitCastExpr 0x9eba8f0 <col:13, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                    (DeclRefExpr 0x9eba8d8 <col:13, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9d6a3b0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
                  (DeclRefExpr 0x9eba86c <col:7> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9eba4a0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
                  (ImplicitCastExpr 0x9eba8c8 <col:16, col:26> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                    (DeclRefExpr 0x9eba8a4 <col:16, col:26> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6baa0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
                <<<NULL>>>))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0x9ebaa98 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:912:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9eba9b8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9ebaa80 </usr/include/c++/4.6/bits/istream.tcc:909:6, line:912:6>
          (CallExpr 0x9ebaa50 <line:910:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9eba9d8 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9eba9c8 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9ebaa2c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6b9e0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x9ebaa70 <line:911:31>))
        <<<NULL>>>)
      (IfStmt 0x9ebab88 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:914:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9ebaab8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9ebab70 </usr/include/c++/4.6/bits/istream.tcc:914:6, col:45>
          (CallExpr 0x9ebab50 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9ebaad8 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9ebaac8 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9ebab2c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6b9e0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0x9ebac60 <line:915:4, line:916:26>
        <<<NULL>>>
        (ImplicitCastExpr 0x9ebabd0 <line:915:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0x9ebabc0 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9ebaba4 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9eba4a0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0x9ebac40 <line:916:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9ebabf0 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x9ebabe0 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0x9ebac24 <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9eba4a0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9ebacf0 <line:918:7, col:15>
    (UnaryOperator 0x9ebacd8 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9ebacc8 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    template <typename _CharT = char, typename _Traits = std::char_traits<char>> basic_istream<char, std::char_traits<char> > &operator>>(basic_istream<char, std::char_traits<char> > &__in, char &__c)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> basic_istream<wchar_t, std::char_traits<wchar_t> > &operator>>(basic_istream<wchar_t, std::char_traits<wchar_t> > &__in, wchar_t &__c)template <typename _CharT, typename _Traits> basic_istream<_CharT, _Traits> &operator>>(basic_istream<_CharT, _Traits> &__in, _CharT &__c) (CompoundStmt 0x9ebbde0 </usr/include/c++/4.6/bits/istream.tcc:925:5, line:952:5>
  (DeclStmt 0x9ebb310 <line:926:7, col:61>
    0x9ebb2e0 "typedef basic_istream<_CharT, _Traits> __istream_type")
  (DeclStmt 0x9ebb3d0 <line:927:7, col:67>
    0x9ebb3a0 "typedef typename __istream_type::int_type __int_type")
  (DeclStmt 0x9ebb4c0 <line:929:7, col:58>
    0x9ebb440 "typename __istream_type::sentry __cerb =
      (ParenListExpr 0x9ebb4a0 <col:45, col:57> 'typename __istream_type::sentry'
        (DeclRefExpr 0x9ebb474 <col:46> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9ebafe0 '__in' 'basic_istream<_CharT, _Traits> &')
        (CXXBoolLiteralExpr 0x9ebb490 <col:52> '_Bool' false))")
  (IfStmt 0x9ebbd98 <line:930:7, line:950:2>
    <<<NULL>>>
    (DeclRefExpr 0x9ebb4d0 <line:930:11> 'typename __istream_type::sentry' lvalue Var 0x9ebb440 '__cerb' 'typename __istream_type::sentry')
    (CompoundStmt 0x9ebbd70 <line:931:2, line:950:2>
      (DeclStmt 0x9ebb5a8 <line:932:4, col:47>
        0x9ebb520 "ios_base::iostate __err =
          (ImplicitCastExpr 0x9ebb598 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9ebb574 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6bb00 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0x9ebba70 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:940:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9ebb5b8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9ebba58 </usr/include/c++/4.6/bits/istream.tcc:934:6, line:940:6>
          (DeclStmt 0x9ebb6f0 <line:935:8, col:54>
            0x9ebb5f0 "const __int_type __cb =
              (CallExpr 0x9ebb6d0 <col:32, col:53> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9ebb698 <col:32, col:46> '<dependent type>' lvalue
                  (CallExpr 0x9ebb678 <col:32, col:43> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9ebb640 <col:32, col:37> '<dependent type>' lvalue
                      (DeclRefExpr 0x9ebb624 <col:32> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9ebafe0 '__in' 'basic_istream<_CharT, _Traits> &')))))")
          (IfStmt 0x9ebba38 <line:936:8, line:939:49>
            <<<NULL>>>
            (UnaryOperator 0x9ebb7f8 <line:936:12, col:54> '<dependent type>' prefix '!'
              (CallExpr 0x9ebb7d0 <col:13, col:54> '<dependent type>'
                (DependentScopeDeclRefExpr 0x9ebb728 <col:13, col:22> '<dependent type>' lvalue)
                (DeclRefExpr 0x9ebb74c <col:34> 'const __int_type':'const typename __istream_type::int_type' lvalue Var 0x9ebb5f0 '__cb' 'const __int_type':'const typename __istream_type::int_type')
                (CallExpr 0x9ebb7b0 <col:40, col:53> '<dependent type>'
                  (DependentScopeDeclRefExpr 0x9ebb788 <col:40, col:49> '<dependent type>' lvalue))))
            (BinaryOperator 0x9ebb8a8 <line:937:3, col:35> '<dependent type>' '='
              (DeclRefExpr 0x9ebb80c <col:3> '_CharT' lvalue ParmVar 0x9ebb050 '__c' '_CharT &')
              (CallExpr 0x9ebb888 <col:9, col:35> '<dependent type>'
                (DependentScopeDeclRefExpr 0x9ebb848 <col:9, col:18> '<dependent type>' lvalue)
                (DeclRefExpr 0x9ebb86c <col:31> 'const __int_type':'const typename __istream_type::int_type' lvalue Var 0x9ebb5f0 '__cb' 'const __int_type':'const typename __istream_type::int_type')))
            (CXXOperatorCallExpr 0x9ebba10 <line:939:3, col:49> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x9ebba00 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9ebb9e8 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9d6a3b0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x9ebb8c0 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9ebb520 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ParenExpr 0x9ebb9d0 <col:12, col:49> 'enum std::_Ios_Iostate'
                (CXXOperatorCallExpr 0x9ebb9a8 <col:13, col:42> 'enum std::_Ios_Iostate'
                  (ImplicitCastExpr 0x9ebb998 <col:30, <invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                    (DeclRefExpr 0x9ebb980 <col:30, <invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)' lvalue Function 0x9d69d30 'operator|' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)'))
                  (ImplicitCastExpr 0x9ebb960 <col:13, col:23> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                    (DeclRefExpr 0x9ebb900 <col:13, col:23> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6ba40 'eofbit' 'const iostate':'const enum std::_Ios_Iostate'))
                  (ImplicitCastExpr 0x9ebb970 <col:32, col:42> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                    (DeclRefExpr 0x9ebb93c <col:32, col:42> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6baa0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))))))
        <<<NULL>>>)
      (IfStmt 0x9ebbb78 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:945:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9ebba90 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9ebbb60 </usr/include/c++/4.6/bits/istream.tcc:942:6, line:945:6>
          (CallExpr 0x9ebbb30 <line:943:8, col:41> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9ebbab8 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0x9ebbaa0 <col:8> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9ebafe0 '__in' 'basic_istream<_CharT, _Traits> &'))
            (DeclRefExpr 0x9ebbb0c <col:25, col:35> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6b9e0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x9ebbb50 <line:944:31>))
        <<<NULL>>>)
      (IfStmt 0x9ebbc70 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:947:44>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9ebbb98 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9ebbc58 </usr/include/c++/4.6/bits/istream.tcc:947:6, col:44>
          (CallExpr 0x9ebbc38 <col:8, col:41> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9ebbbc0 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0x9ebbba8 <col:8> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9ebafe0 '__in' 'basic_istream<_CharT, _Traits> &'))
            (DeclRefExpr 0x9ebbc14 <col:25, col:35> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6b9e0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0x9ebbd50 <line:948:4, line:949:25>
        <<<NULL>>>
        (ImplicitCastExpr 0x9ebbcb8 <line:948:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0x9ebbca8 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9ebbc8c <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9ebb520 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0x9ebbd30 <line:949:6, col:25> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9ebbce0 <col:6, col:11> '<dependent type>' lvalue
            (DeclRefExpr 0x9ebbcc4 <col:6> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9ebafe0 '__in' 'basic_istream<_CharT, _Traits> &'))
          (DeclRefExpr 0x9ebbd14 <col:20> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9ebb520 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9ebbdd0 <line:951:7, col:14>
    (DeclRefExpr 0x9ebbdb4 <col:14> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9ebafe0 '__in' 'basic_istream<_CharT, _Traits> &')))

;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> basic_istream<char> &operator>>(basic_istream<char> &__in, char *__s)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> basic_istream<wchar_t, std::char_traits<wchar_t> > &operator>>(basic_istream<wchar_t, std::char_traits<wchar_t> > &__in, wchar_t *__s)template <typename _CharT, typename _Traits> basic_istream<_CharT, _Traits> &operator>>(basic_istream<_CharT, _Traits> &__in, _CharT *__s) (CompoundStmt 0x9ebec98 </usr/include/c++/4.6/bits/istream.tcc:957:5, line:1012:5>
  (DeclStmt 0x9ebd470 <line:958:7, col:61>
    0x9ebd440 "typedef basic_istream<_CharT, _Traits> __istream_type")
  (DeclStmt 0x9ebd5c0 <line:959:7, col:73>
    0x9ebd590 "typedef basic_streambuf<_CharT, _Traits> __streambuf_type")
  (DeclStmt 0x9ebd670 <line:960:7, col:51>
    0x9ebd640 "typedef typename _Traits::int_type int_type")
  (DeclStmt 0x9ebd6c0 <line:961:7, col:35>
    0x9ebd690 "typedef _CharT char_type")
  (DeclStmt 0x9ebd7b0 <line:962:7, col:44>
    0x9ebd780 "typedef ctype<_CharT> __ctype_type")
  (DeclStmt 0x9ebd820 <line:964:7, col:33>
    0x9ebd7d0 "streamsize __extracted =
      (IntegerLiteral 0x9ebd808 <col:32> 'int' 0)")
  (DeclStmt 0x9ebd8e8 <line:965:7, col:50>
    0x9ebd860 "ios_base::iostate __err =
      (ImplicitCastExpr 0x9ebd8d8 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9ebd8b4 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6bb00 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (DeclStmt 0x9ebda00 <line:966:7, col:58>
    0x9ebd980 "typename __istream_type::sentry __cerb =
      (ParenListExpr 0x9ebd9e0 <col:45, col:57> 'typename __istream_type::sentry'
        (DeclRefExpr 0x9ebd9b4 <col:46> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9ebc0d0 '__in' 'basic_istream<_CharT, _Traits> &')
        (CXXBoolLiteralExpr 0x9ebd9d0 <col:52> '_Bool' false))")
  (IfStmt 0x9ebea48 <line:967:7, line:1006:2>
    <<<NULL>>>
    (DeclRefExpr 0x9ebda10 <line:967:11> 'typename __istream_type::sentry' lvalue Var 0x9ebd980 '__cerb' 'typename __istream_type::sentry')
    (CompoundStmt 0x9ebea28 <line:968:2, line:1006:2>
      (IfStmt 0x9ebe808 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:998:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9ebda28 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9ebe7d0 </usr/include/c++/4.6/bits/istream.tcc:970:6, line:998:6>
          (DeclStmt 0x9ebdae8 <line:972:8, col:39>
            0x9ebda40 "streamsize __num =
              (CallExpr 0x9ebdac8 <col:27, col:38> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9ebda90 <col:27, col:32> '<dependent type>' lvalue
                  (DeclRefExpr 0x9ebda74 <col:27> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9ebc0d0 '__in' 'basic_istream<_CharT, _Traits> &')))")
          (IfStmt 0x9ebdc38 <line:973:8, line:974:52>
            <<<NULL>>>
            (BinaryOperator 0x9ebdb38 <line:973:12, col:21> '_Bool' '<='
              (ImplicitCastExpr 0x9ebdb28 <col:12> 'streamsize':'int' <LValueToRValue>
                (DeclRefExpr 0x9ebdaf8 <col:12> 'streamsize':'int' lvalue Var 0x9ebda40 '__num' 'streamsize':'int'))
              (IntegerLiteral 0x9ebdb10 <col:21> 'int' 0))
            (BinaryOperator 0x9ebdc20 <line:974:3, col:52> 'streamsize':'int' lvalue '='
              (DeclRefExpr 0x9ebdb50 <col:3> 'streamsize':'int' lvalue Var 0x9ebda40 '__num' 'streamsize':'int')
              (ImplicitCastExpr 0x9ebdc10 <col:11, col:52> 'int':'int' <LValueToRValue>
                (DeclRefExpr 0x9ebdbf0 <col:11, col:52> 'const int':'const int' lvalue Var 0x9ca5e30 '__max' 'const int':'const int')))
            <<<NULL>>>)
          (DeclStmt 0x9ebddd8 <line:976:8, col:73>
            0x9ebdca0 "const __ctype_type &__ct =
              (CallExpr 0x9ebddb8 <col:35, col:72> '<dependent type>'
                (UnresolvedLookupExpr 0x9ebdce0 <col:35, col:57> '<dependent type>' lvalue (ADL) = '1' 0x9bf5c50)
                (CallExpr 0x9ebdd98 <col:59, col:71> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9ebdd60 <col:59, col:64> '<dependent type>' lvalue
                    (DeclRefExpr 0x9ebdd48 <col:59> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9ebc0d0 '__in' 'basic_istream<_CharT, _Traits> &'))))")
          (DeclStmt 0x9ebdeb0 <line:978:8, col:45>
            0x9ebde10 "const int_type __eof =
              (CallExpr 0x9ebde90 <col:31, col:44> '<dependent type>'
                (DependentScopeDeclRefExpr 0x9ebde68 <col:31, col:40> '<dependent type>' lvalue))")
          (DeclStmt 0x9ebdfa8 <line:979:8, col:45>
            0x9ebdf00 "__streambuf_type *__sb =
              (CallExpr 0x9ebdf88 <col:33, col:44> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9ebdf50 <col:33, col:38> '<dependent type>' lvalue
                  (DeclRefExpr 0x9ebdf34 <col:33> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9ebc0d0 '__in' 'basic_istream<_CharT, _Traits> &')))")
          (DeclStmt 0x9ebe068 <line:980:8, col:36>
            0x9ebdfc0 "int_type __c =
              (CallExpr 0x9ebe048 <col:23, col:35> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9ebe010 <col:23, col:29> '<dependent type>' lvalue
                  (DeclRefExpr 0x9ebdff4 <col:23> '__streambuf_type *' lvalue Var 0x9ebdf00 '__sb' '__streambuf_type *')))")
          (WhileStmt 0x9ebe530 <line:982:8, line:990:3>
            <<<NULL>>>
            (BinaryOperator 0x9ebe330 <line:982:15, line:985:32> '<dependent type>' '&&'
              (BinaryOperator 0x9ebe1c8 <line:982:15, line:983:43> '<dependent type>' '&&'
                (BinaryOperator 0x9ebe0f8 <line:982:15, col:37> '_Bool' '<'
                  (ImplicitCastExpr 0x9ebe0e8 <col:15> 'streamsize':'int' <LValueToRValue>
                    (DeclRefExpr 0x9ebe078 <col:15> 'streamsize':'int' lvalue Var 0x9ebd7d0 '__extracted' 'streamsize':'int'))
                  (BinaryOperator 0x9ebe0d0 <col:29, col:37> 'int' '-'
                    (ImplicitCastExpr 0x9ebe0c0 <col:29> 'streamsize':'int' <LValueToRValue>
                      (DeclRefExpr 0x9ebe090 <col:29> 'streamsize':'int' lvalue Var 0x9ebda40 '__num' 'streamsize':'int'))
                    (IntegerLiteral 0x9ebe0a8 <col:37> 'int' 1)))
                (UnaryOperator 0x9ebe1b0 <line:983:11, col:43> '<dependent type>' prefix '!'
                  (CallExpr 0x9ebe188 <col:12, col:43> '<dependent type>'
                    (DependentScopeDeclRefExpr 0x9ebe130 <col:12, col:21> '<dependent type>' lvalue)
                    (DeclRefExpr 0x9ebe154 <col:33> 'int_type':'typename _Traits::int_type' lvalue Var 0x9ebdfc0 '__c' 'int_type':'typename _Traits::int_type')
                    (DeclRefExpr 0x9ebe16c <col:38> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x9ebde10 '__eof' 'const int_type':'const typename _Traits::int_type'))))
              (UnaryOperator 0x9ebe318 <line:984:11, line:985:32> '<dependent type>' prefix '!'
                (CallExpr 0x9ebe2f0 <line:984:12, line:985:32> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9ebe1f8 <line:984:12, col:17> '<dependent type>' lvalue
                    (DeclRefExpr 0x9ebe1e0 <col:12> 'const __ctype_type':'const ctype<_CharT>' lvalue Var 0x9ebdca0 '__ct' 'const __ctype_type &'))
                  (DeclRefExpr 0x9ebe24c <col:20, col:32> 'const mask':'const unsigned short' lvalue Var 0x9d9fe40 'space' 'const mask':'const unsigned short')
                  (CallExpr 0x9ebe2d0 <line:985:6, col:31> '<dependent type>'
                    (DependentScopeDeclRefExpr 0x9ebe290 <col:6, col:15> '<dependent type>' lvalue)
                    (DeclRefExpr 0x9ebe2b4 <col:28> 'int_type':'typename _Traits::int_type' lvalue Var 0x9ebdfc0 '__c' 'int_type':'typename _Traits::int_type')))))
            (CompoundStmt 0x9ebe510 <line:986:3, line:990:3>
              (BinaryOperator 0x9ebe428 <line:987:5, col:39> '<dependent type>' '='
                (UnaryOperator 0x9ebe390 <col:5, col:9> '<dependent type>' prefix '*'
                  (UnaryOperator 0x9ebe378 <col:6, col:9> '<dependent type>' postfix '++'
                    (DeclRefExpr 0x9ebe348 <col:6> '_CharT *' lvalue ParmVar 0x9ebc140 '__s' '_CharT *')))
                (CallExpr 0x9ebe408 <col:14, col:39> '<dependent type>'
                  (DependentScopeDeclRefExpr 0x9ebe3c8 <col:14, col:23> '<dependent type>' lvalue)
                  (DeclRefExpr 0x9ebe3ec <col:36> 'int_type':'typename _Traits::int_type' lvalue Var 0x9ebdfc0 '__c' 'int_type':'typename _Traits::int_type')))
              (UnaryOperator 0x9ebe458 <line:988:5, col:7> 'streamsize':'int' lvalue prefix '++'
                (DeclRefExpr 0x9ebe440 <col:7> 'streamsize':'int' lvalue Var 0x9ebd7d0 '__extracted' 'streamsize':'int'))
              (BinaryOperator 0x9ebe4f8 <line:989:5, col:24> '<dependent type>' '='
                (DeclRefExpr 0x9ebe46c <col:5> 'int_type':'typename _Traits::int_type' lvalue Var 0x9ebdfc0 '__c' 'int_type':'typename _Traits::int_type')
                (CallExpr 0x9ebe4d8 <col:11, col:24> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9ebe4a0 <col:11, col:17> '<dependent type>' lvalue
                    (DeclRefExpr 0x9ebe484 <col:11> '__streambuf_type *' lvalue Var 0x9ebdf00 '__sb' '__streambuf_type *'))))))
          (IfStmt 0x9ebe6a8 <line:991:8, line:992:22>
            <<<NULL>>>
            (CallExpr 0x9ebe5c8 <line:991:12, col:43> '<dependent type>'
              (DependentScopeDeclRefExpr 0x9ebe570 <col:12, col:21> '<dependent type>' lvalue)
              (DeclRefExpr 0x9ebe594 <col:33> 'int_type':'typename _Traits::int_type' lvalue Var 0x9ebdfc0 '__c' 'int_type':'typename _Traits::int_type')
              (DeclRefExpr 0x9ebe5ac <col:38> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x9ebde10 '__eof' 'const int_type':'const typename _Traits::int_type'))
            (CXXOperatorCallExpr 0x9ebe680 <line:992:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x9ebe670 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9ebe658 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9d6a3b0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x9ebe5ec <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9ebd860 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0x9ebe648 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x9ebe624 <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6ba40 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>)
          (BinaryOperator 0x9ebe730 <line:996:8, col:25> '<dependent type>' '='
            (UnaryOperator 0x9ebe6e0 <col:8, col:9> '<dependent type>' prefix '*'
              (DeclRefExpr 0x9ebe6c4 <col:9> '_CharT *' lvalue ParmVar 0x9ebc140 '__s' '_CharT *'))
            (CXXUnresolvedConstructExpr 0x9ebe718 <col:15, col:25> 'char_type':'_CharT'))
          (CallExpr 0x9ebe7b0 <line:997:8, col:20> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9ebe760 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0x9ebe748 <col:8> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9ebc0d0 '__in' 'basic_istream<_CharT, _Traits> &'))
            (IntegerLiteral 0x9ebe798 <col:19> 'int' 0)))
        <<<NULL>>>)
      (IfStmt 0x9ebe910 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:1003:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9ebe828 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9ebe8f8 </usr/include/c++/4.6/bits/istream.tcc:1000:6, line:1003:6>
          (CallExpr 0x9ebe8c8 <line:1001:8, col:41> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9ebe850 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0x9ebe838 <col:8> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9ebc0d0 '__in' 'basic_istream<_CharT, _Traits> &'))
            (DeclRefExpr 0x9ebe8a4 <col:25, col:35> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6b9e0 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x9ebe8e8 <line:1002:31>))
        <<<NULL>>>)
      (IfStmt 0x9ebea08 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:1005:44>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9ebe930 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9ebe9f0 </usr/include/c++/4.6/bits/istream.tcc:1005:6, col:44>
          (CallExpr 0x9ebe9d0 <col:8, col:41> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9ebe958 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0x9ebe940 <col:8> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9ebc0d0 '__in' 'basic_istream<_CharT, _Traits> &'))
            (DeclRefExpr 0x9ebe9ac <col:25, col:35> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6b9e0 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0x9ebeb70 <line:1007:7, line:1008:21>
    <<<NULL>>>
    (UnaryOperator 0x9ebeaa0 <line:1007:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9ebea90 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0x9ebea80 <col:12> 'streamsize':'int' <LValueToRValue>
          (DeclRefExpr 0x9ebea64 <col:12> 'streamsize':'int' lvalue Var 0x9ebd7d0 '__extracted' 'streamsize':'int'))))
    (CXXOperatorCallExpr 0x9ebeb48 <line:1008:2, col:21> 'const enum std::_Ios_Iostate' lvalue
      (ImplicitCastExpr 0x9ebeb38 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9ebeb20 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9d6a3b0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
      (DeclRefExpr 0x9ebeab4 <col:2> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9ebd860 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
      (ImplicitCastExpr 0x9ebeb10 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9ebeaec <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6baa0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (IfStmt 0x9ebec50 <line:1009:7, line:1010:21>
    <<<NULL>>>
    (ImplicitCastExpr 0x9ebebb8 <line:1009:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x9ebeba8 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9ebeb8c <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9ebd860 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0x9ebec30 <line:1010:2, col:21> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9ebebe0 <col:2, col:7> '<dependent type>' lvalue
        (DeclRefExpr 0x9ebebc4 <col:2> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9ebc0d0 '__in' 'basic_istream<_CharT, _Traits> &'))
      (DeclRefExpr 0x9ebec14 <col:16> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9ebd860 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0x9ebec88 <line:1011:7, col:14>
    (DeclRefExpr 0x9ebec6c <col:14> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9ebc0d0 '__in' 'basic_istream<_CharT, _Traits> &')))

;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> basic_istream<char, std::char_traits<char> > &ws(basic_istream<char, std::char_traits<char> > &__in)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> basic_istream<wchar_t, std::char_traits<wchar_t> > &ws(basic_istream<wchar_t, std::char_traits<wchar_t> > &__in)template <typename _CharT, typename _Traits> basic_istream<_CharT, _Traits> &ws(basic_istream<_CharT, _Traits> &__in) (CompoundStmt 0x9ebfdf8 </usr/include/c++/4.6/bits/istream.tcc:1018:5, line:1036:5>
  (DeclStmt 0x9ebf260 <line:1019:7, col:61>
    0x9ebf230 "typedef basic_istream<_CharT, _Traits> __istream_type")
  (DeclStmt 0x9ebf3b0 <line:1020:7, col:73>
    0x9ebf380 "typedef basic_streambuf<_CharT, _Traits> __streambuf_type")
  (DeclStmt 0x9ebf470 <line:1021:7, col:60>
    0x9ebf440 "typedef typename __istream_type::int_type __int_type")
  (DeclStmt 0x9ebf560 <line:1022:7, col:44>
    0x9ebf530 "typedef ctype<_CharT> __ctype_type")
  (DeclStmt 0x9ebf6e8 <line:1024:7, col:72>
    0x9ebf5b0 "const __ctype_type &__ct =
      (CallExpr 0x9ebf6c8 <col:34, col:71> '<dependent type>'
        (UnresolvedLookupExpr 0x9ebf5f0 <col:34, col:56> '<dependent type>' lvalue (ADL) = '1' 0x9bf5c50)
        (CallExpr 0x9ebf6a8 <col:58, col:70> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9ebf670 <col:58, col:63> '<dependent type>' lvalue
            (DeclRefExpr 0x9ebf658 <col:58> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9ebefa0 '__in' 'basic_istream<_CharT, _Traits> &'))))")
  (DeclStmt 0x9ebf7c8 <line:1025:7, col:46>
    0x9ebf720 "const __int_type __eof =
      (CallExpr 0x9ebf7a8 <col:32, col:45> '<dependent type>'
        (DependentScopeDeclRefExpr 0x9ebf780 <col:32, col:41> '<dependent type>' lvalue))")
  (DeclStmt 0x9ebf8c8 <line:1026:7, col:44>
    0x9ebf820 "__streambuf_type *__sb =
      (CallExpr 0x9ebf8a8 <col:32, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ebf870 <col:32, col:37> '<dependent type>' lvalue
          (DeclRefExpr 0x9ebf854 <col:32> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9ebefa0 '__in' 'basic_istream<_CharT, _Traits> &')))")
  (DeclStmt 0x9ebf988 <line:1027:7, col:37>
    0x9ebf8e0 "__int_type __c =
      (CallExpr 0x9ebf968 <col:24, col:36> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ebf930 <col:24, col:30> '<dependent type>' lvalue
          (DeclRefExpr 0x9ebf914 <col:24> '__streambuf_type *' lvalue Var 0x9ebf820 '__sb' '__streambuf_type *')))")
  (WhileStmt 0x9ebfc40 <line:1029:7, line:1031:21>
    <<<NULL>>>
    (BinaryOperator 0x9ebfb88 <line:1029:14, line:1030:63> '<dependent type>' '&&'
      (UnaryOperator 0x9ebfa38 <line:1029:14, col:46> '<dependent type>' prefix '!'
        (CallExpr 0x9ebfa10 <col:15, col:46> '<dependent type>'
          (DependentScopeDeclRefExpr 0x9ebf9b8 <col:15, col:24> '<dependent type>' lvalue)
          (DeclRefExpr 0x9ebf9dc <col:36> '__int_type':'typename __istream_type::int_type' lvalue Var 0x9ebf8e0 '__c' '__int_type':'typename __istream_type::int_type')
          (DeclRefExpr 0x9ebf9f4 <col:41> 'const __int_type':'const typename __istream_type::int_type' lvalue Var 0x9ebf720 '__eof' 'const __int_type':'const typename __istream_type::int_type')))
      (CallExpr 0x9ebfb60 <line:1030:10, col:63> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ebfa68 <col:10, col:15> '<dependent type>' lvalue
          (DeclRefExpr 0x9ebfa4c <col:10> 'const __ctype_type':'const ctype<_CharT>' lvalue Var 0x9ebf5b0 '__ct' 'const __ctype_type &'))
        (DeclRefExpr 0x9ebfabc <col:18, col:30> 'const mask':'const unsigned short' lvalue Var 0x9d9fe40 'space' 'const mask':'const unsigned short')
        (CallExpr 0x9ebfb40 <col:37, col:62> '<dependent type>'
          (DependentScopeDeclRefExpr 0x9ebfb00 <col:37, col:46> '<dependent type>' lvalue)
          (DeclRefExpr 0x9ebfb24 <col:59> '__int_type':'typename __istream_type::int_type' lvalue Var 0x9ebf8e0 '__c' '__int_type':'typename __istream_type::int_type'))))
    (BinaryOperator 0x9ebfc28 <line:1031:2, col:21> '<dependent type>' '='
      (DeclRefExpr 0x9ebfba0 <col:2> '__int_type':'typename __istream_type::int_type' lvalue Var 0x9ebf8e0 '__c' '__int_type':'typename __istream_type::int_type')
      (CallExpr 0x9ebfc08 <col:8, col:21> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ebfbd0 <col:8, col:14> '<dependent type>' lvalue
          (DeclRefExpr 0x9ebfbb8 <col:8> '__streambuf_type *' lvalue Var 0x9ebf820 '__sb' '__streambuf_type *')))))
  (IfStmt 0x9ebfdb0 <line:1033:8, line:1034:33>
    <<<NULL>>>
    (CallExpr 0x9ebfcd8 <line:1033:12, col:43> '<dependent type>'
      (DependentScopeDeclRefExpr 0x9ebfc80 <col:12, col:21> '<dependent type>' lvalue)
      (DeclRefExpr 0x9ebfca4 <col:33> '__int_type':'typename __istream_type::int_type' lvalue Var 0x9ebf8e0 '__c' '__int_type':'typename __istream_type::int_type')
      (DeclRefExpr 0x9ebfcbc <col:38> 'const __int_type':'const typename __istream_type::int_type' lvalue Var 0x9ebf720 '__eof' 'const __int_type':'const typename __istream_type::int_type'))
    (CallExpr 0x9ebfd90 <line:1034:3, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9ebfd18 <col:3, col:8> '<dependent type>' lvalue
        (DeclRefExpr 0x9ebfcfc <col:3> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9ebefa0 '__in' 'basic_istream<_CharT, _Traits> &'))
      (DeclRefExpr 0x9ebfd6c <col:17, col:27> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9d6ba40 'eofbit' 'const iostate':'const enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0x9ebfde8 <line:1035:7, col:14>
    (DeclRefExpr 0x9ebfdcc <col:14> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9ebefa0 '__in' 'basic_istream<_CharT, _Traits> &')))

;
    class basic_istream : virtual public basic_ios<char, std::char_traits<char> > {
        class basic_istream;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef basic_streambuf<char, std::char_traits<char> > __streambuf_type;
        typedef basic_ios<char, std::char_traits<char> > __ios_type;
        typedef basic_istream<char, std::char_traits<char> > __istream_type;
        typedef num_get<char, istreambuf_iterator<char, std::char_traits<char> > > __num_get_type;
        typedef ctype<char> __ctype_type;
    protected:
    protected:
        streamsize _M_gcount;
    public:
    public:
        basic_istream(__streambuf_type *__sb);
        virtual void ~basic_istream();
        class sentry {
            class sentry;
            bool _M_ok;
        public:
        public:
            typedef std::char_traits<char> traits_type;
            typedef basic_streambuf<char, std::char_traits<char> > __streambuf_type;
            typedef basic_istream<char, std::char_traits<char> > __istream_type;
            typedef typename __istream_type::__ctype_type __ctype_type;
            typedef typename char_traits<char>::int_type __int_type;
            sentry(basic_istream<char, std::char_traits<char> > &__is, bool __noskipws);
            bool operator _Bool() const;
        };
        ;
        __istream_type &operator>>(__istream_type &(*__pf)(__istream_type &));
        __istream_type &operator>>(__ios_type &(*__pf)(__ios_type &));
        __istream_type &operator>>(std::ios_base &(*__pf)(std::ios_base &));
        __istream_type &operator>>(bool &__n);
        __istream_type &operator>>(short &__n);
        __istream_type &operator>>(unsigned short &__n);
        __istream_type &operator>>(int &__n);
        __istream_type &operator>>(unsigned int &__n);
        __istream_type &operator>>(long &__n);
        __istream_type &operator>>(unsigned long &__n);
        __istream_type &operator>>(long long &__n);
        __istream_type &operator>>(unsigned long long &__n);
        __istream_type &operator>>(float &__f);
        __istream_type &operator>>(double &__f);
        __istream_type &operator>>(long double &__f);
        __istream_type &operator>>(void *&__p);
        __istream_type &operator>>(__streambuf_type *__sb);
        streamsize gcount() const;
        int_type get();
        __istream_type &get(char_type &__c);
        __istream_type &get(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &get(char_type *__s, streamsize __n);
        __istream_type &get(__streambuf_type &__sb, char_type __delim);
        __istream_type &get(__streambuf_type &__sb);
        __istream_type &getline(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &getline(char_type *__s, streamsize __n);
        __istream_type &ignore();
        __istream_type &ignore(streamsize __n);
        __istream_type &ignore(streamsize __n, int_type __delim);
        int_type peek();
        __istream_type &read(char_type *__s, streamsize __n);
        streamsize readsome(char_type *__s, streamsize __n);
        __istream_type &putback(char_type __c);
        __istream_type &unget();
        int sync();
        pos_type tellg();
        __istream_type &seekg(pos_type);
        __istream_type &seekg(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_istream();
        template <typename _ValueT = unsigned int> __istream_type &_M_extract(unsigned int &__v)template <typename _ValueT = long> __istream_type &_M_extract(long &__v)template <typename _ValueT = long long> __istream_type &_M_extract(long long &__v)template <typename _ValueT = void *> __istream_type &_M_extract(void *&__v)template <typename _ValueT = bool> __istream_type &_M_extract(bool &__v)template <typename _ValueT = unsigned long> __istream_type &_M_extract(unsigned long &__v)template <typename _ValueT = double> __istream_type &_M_extract(double &__v)template <typename _ValueT = unsigned short> __istream_type &_M_extract(unsigned short &__v)template <typename _ValueT = unsigned long long> __istream_type &_M_extract(unsigned long long &__v)template <typename _ValueT = long double> __istream_type &_M_extract(long double &__v)template <typename _ValueT = float> __istream_type &_M_extract(float &__v)template <typename _ValueT> __istream_type &_M_extract(_ValueT &__v);
        inline std::basic_istream<char> &operator=(const std::basic_istream<char> &);
        inline basic_istream(const std::basic_istream<char> &);
    };
    class basic_iostream : public basic_istream<char, std::char_traits<char> >, public basic_ostream<char, std::char_traits<char> > {
        class basic_iostream;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef basic_istream<char, std::char_traits<char> > __istream_type;
        typedef basic_ostream<char, std::char_traits<char> > __ostream_type;
        basic_iostream(basic_streambuf<char, std::char_traits<char> > *__sb);
        virtual void ~basic_iostream();
    protected:
    protected:
        basic_iostream();
        inline std::basic_iostream<char> &operator=(const std::basic_iostream<char> &);
        inline basic_iostream(const std::basic_iostream<char> &);
    };
    class basic_istream : virtual public basic_ios<wchar_t, std::char_traits<wchar_t> > {
        class basic_istream;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef basic_streambuf<wchar_t, std::char_traits<wchar_t> > __streambuf_type;
        typedef basic_ios<wchar_t, std::char_traits<wchar_t> > __ios_type;
        typedef basic_istream<wchar_t, std::char_traits<wchar_t> > __istream_type;
        typedef num_get<wchar_t, istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_get_type;
        typedef ctype<wchar_t> __ctype_type;
    protected:
    protected:
        streamsize _M_gcount;
    public:
    public:
        basic_istream(__streambuf_type *__sb);
        virtual void ~basic_istream();
        class sentry {
            class sentry;
            bool _M_ok;
        public:
        public:
            typedef std::char_traits<wchar_t> traits_type;
            typedef basic_streambuf<wchar_t, std::char_traits<wchar_t> > __streambuf_type;
            typedef basic_istream<wchar_t, std::char_traits<wchar_t> > __istream_type;
            typedef typename __istream_type::__ctype_type __ctype_type;
            typedef typename char_traits<wchar_t>::int_type __int_type;
            sentry(basic_istream<wchar_t, std::char_traits<wchar_t> > &__is, bool __noskipws);
            bool operator _Bool() const;
        };
        ;
        __istream_type &operator>>(__istream_type &(*__pf)(__istream_type &));
        __istream_type &operator>>(__ios_type &(*__pf)(__ios_type &));
        __istream_type &operator>>(std::ios_base &(*__pf)(std::ios_base &));
        __istream_type &operator>>(bool &__n);
        __istream_type &operator>>(short &__n);
        __istream_type &operator>>(unsigned short &__n);
        __istream_type &operator>>(int &__n);
        __istream_type &operator>>(unsigned int &__n);
        __istream_type &operator>>(long &__n);
        __istream_type &operator>>(unsigned long &__n);
        __istream_type &operator>>(long long &__n);
        __istream_type &operator>>(unsigned long long &__n);
        __istream_type &operator>>(float &__f);
        __istream_type &operator>>(double &__f);
        __istream_type &operator>>(long double &__f);
        __istream_type &operator>>(void *&__p);
        __istream_type &operator>>(__streambuf_type *__sb);
        streamsize gcount() const;
        int_type get();
        __istream_type &get(char_type &__c);
        __istream_type &get(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &get(char_type *__s, streamsize __n);
        __istream_type &get(__streambuf_type &__sb, char_type __delim);
        __istream_type &get(__streambuf_type &__sb);
        __istream_type &getline(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &getline(char_type *__s, streamsize __n);
        __istream_type &ignore();
        __istream_type &ignore(streamsize __n);
        __istream_type &ignore(streamsize __n, int_type __delim);
        int_type peek();
        __istream_type &read(char_type *__s, streamsize __n);
        streamsize readsome(char_type *__s, streamsize __n);
        __istream_type &putback(char_type __c);
        __istream_type &unget();
        int sync();
        pos_type tellg();
        __istream_type &seekg(pos_type);
        __istream_type &seekg(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_istream();
        template <typename _ValueT = unsigned int> __istream_type &_M_extract(unsigned int &__v)template <typename _ValueT = long> __istream_type &_M_extract(long &__v)template <typename _ValueT = long long> __istream_type &_M_extract(long long &__v)template <typename _ValueT = void *> __istream_type &_M_extract(void *&__v)template <typename _ValueT = bool> __istream_type &_M_extract(bool &__v)template <typename _ValueT = unsigned long> __istream_type &_M_extract(unsigned long &__v)template <typename _ValueT = double> __istream_type &_M_extract(double &__v)template <typename _ValueT = unsigned short> __istream_type &_M_extract(unsigned short &__v)template <typename _ValueT = unsigned long long> __istream_type &_M_extract(unsigned long long &__v)template <typename _ValueT = long double> __istream_type &_M_extract(long double &__v)template <typename _ValueT = float> __istream_type &_M_extract(float &__v)template <typename _ValueT> __istream_type &_M_extract(_ValueT &__v);
        inline std::basic_istream<wchar_t> &operator=(const std::basic_istream<wchar_t> &);
        inline basic_istream(const std::basic_istream<wchar_t> &);
    };
    class basic_iostream : public basic_istream<wchar_t, std::char_traits<wchar_t> >, public basic_ostream<wchar_t, std::char_traits<wchar_t> > {
        class basic_iostream;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef basic_istream<wchar_t, std::char_traits<wchar_t> > __istream_type;
        typedef basic_ostream<wchar_t, std::char_traits<wchar_t> > __ostream_type;
        basic_iostream(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        virtual void ~basic_iostream();
    protected:
    protected:
        basic_iostream();
        inline std::basic_iostream<wchar_t> &operator=(const std::basic_iostream<wchar_t> &);
        inline basic_iostream(const std::basic_iostream<wchar_t> &);
    };
}
namespace std {
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> class basic_stringbuf : public basic_streambuf<wchar_t, std::char_traits<wchar_t> > {
        class basic_stringbuf;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        typedef basic_string<char_type, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef typename __string_type::size_type __size_type;
    protected:
    protected:
        ios_base::openmode _M_mode;
        __string_type _M_string;
    public:
    public:
        basic_stringbuf(ios_base::openmode __mode);
        basic_stringbuf(const __string_type &__str, ios_base::openmode __mode);
        __string_type str() const;
        void str(const __string_type &__s);
    protected:
    protected:
        void _M_stringbuf_init(ios_base::openmode __mode);
        virtual streamsize showmanyc();
        virtual int_type underflow();
        virtual int_type pbackfail(int_type __c);
        virtual int_type overflow(int_type __c);
        virtual __streambuf_type *setbuf(char_type *__s, streamsize __n);
        virtual pos_type seekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        virtual pos_type seekpos(pos_type __sp, ios_base::openmode __mode);
        void _M_sync(char_type *__base, __size_type __i, __size_type __o);
        void _M_update_egptr();
        void _M_pbump(char_type *__pbeg, char_type *__pend, off_type __off);
        inline std::basic_stringbuf<wchar_t> &operator=(const std::basic_stringbuf<wchar_t> &);
        inline void ~basic_stringbuf();
        inline basic_stringbuf(const std::basic_stringbuf<wchar_t> &);
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> class basic_stringbuf : public basic_streambuf<char, std::char_traits<char> > {
        class basic_stringbuf;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        typedef basic_string<char_type, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef typename __string_type::size_type __size_type;
    protected:
    protected:
        ios_base::openmode _M_mode;
        __string_type _M_string;
    public:
    public:
        basic_stringbuf(ios_base::openmode __mode);
        basic_stringbuf(const __string_type &__str, ios_base::openmode __mode);
        __string_type str() const;
        void str(const __string_type &__s);
    protected:
    protected:
        void _M_stringbuf_init(ios_base::openmode __mode);
        virtual streamsize showmanyc();
        virtual int_type underflow();
        virtual int_type pbackfail(int_type __c);
        virtual int_type overflow(int_type __c);
        virtual __streambuf_type *setbuf(char_type *__s, streamsize __n);
        virtual pos_type seekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        virtual pos_type seekpos(pos_type __sp, ios_base::openmode __mode);
        void _M_sync(char_type *__base, __size_type __i, __size_type __o);
        void _M_update_egptr();
        void _M_pbump(char_type *__pbeg, char_type *__pend, off_type __off);
        inline std::basic_stringbuf<char> &operator=(const std::basic_stringbuf<char> &);
        inline void ~basic_stringbuf();
        inline basic_stringbuf(const std::basic_stringbuf<char> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>, typename _Alloc = allocator<_CharT>> class basic_stringbuf : public basic_streambuf<_CharT, _Traits> {
        class basic_stringbuf;
    public:
    public:
        typedef _CharT char_type;
        typedef _Traits traits_type;
        typedef _Alloc allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        typedef basic_string<char_type, _Traits, _Alloc> __string_type;
        typedef typename __string_type::size_type __size_type;
    protected:
    protected:
        ios_base::openmode _M_mode;
        __string_type _M_string;
    public:
    public:
        basic_stringbuf<_CharT, _Traits, _Alloc>(ios_base::openmode __mode = (CXXOperatorCallExpr 0x9ecb818 </usr/include/c++/4.6/sstream:93:51, col:76> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0x9ecb808 <col:64, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0x9ecb7f0 <col:64, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9d68ac0 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0x9ecb7d0 <col:51, col:61> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x9ecb76c <col:51, col:61> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9d6bcd0 'in' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0x9ecb7e0 <col:66, col:76> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x9ecb7ac <col:66, col:76> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9d6bd30 'out' 'const openmode':'const enum std::_Ios_Openmode')))
) : __streambuf_type(), _M_mode((DeclRefExpr 0x9ecbc18 </usr/include/c++/4.6/sstream:94:37> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0x9eca550 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode')
), _M_string() (CompoundStmt 0x9ecbcb8 </usr/include/c++/4.6/sstream:95:7, col:9>)


        basic_stringbuf<_CharT, _Traits, _Alloc>(const __string_type &__str, ios_base::openmode __mode = (CXXOperatorCallExpr 0x9ecb908 </usr/include/c++/4.6/sstream:107:37, col:62> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0x9ecb8f8 <col:50, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0x9ecb8e0 <col:50, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9d68ac0 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0x9ecb8c0 <col:37, col:47> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x9ecb85c <col:37, col:47> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9d6bcd0 'in' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0x9ecb8d0 <col:52, col:62> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x9ecb89c <col:52, col:62> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9d6bd30 'out' 'const openmode':'const enum std::_Ios_Openmode')))
) : __streambuf_type(), _M_mode(), _M_string((CallExpr 0x9ecbd98 </usr/include/c++/4.6/sstream:108:50, col:61> '<dependent type>'
  (CXXDependentScopeMemberExpr 0x9ecbd60 <col:50, col:56> '<dependent type>' lvalue
    (DeclRefExpr 0x9ecbd48 <col:50> 'const __string_type':'const basic_string<char_type, _Traits, _Alloc>' lvalue ParmVar 0x9eca6a0 '__str' 'const __string_type &')))
, (CallExpr 0x9ecbe08 </usr/include/c++/4.6/sstream:108:64, col:75> '<dependent type>'
  (CXXDependentScopeMemberExpr 0x9ecbdd0 <col:64, col:70> '<dependent type>' lvalue
    (DeclRefExpr 0x9ecbdb4 <col:64> 'const __string_type':'const basic_string<char_type, _Traits, _Alloc>' lvalue ParmVar 0x9eca6a0 '__str' 'const __string_type &')))
) (CompoundStmt 0x9ecbf00 </usr/include/c++/4.6/sstream:109:7, col:36>
  (CallExpr 0x9ecbee0 <col:9, col:33> '<dependent type>'
    (MemberExpr 0x9ecbea8 <col:9> '<bound member function type>' ->_M_stringbuf_init 0x9ecaab0
      (CXXThisExpr 0x9ecbe98 <col:9> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9ecbec8 <col:27> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0x9eca710 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode')))


        __string_type str() const (CompoundStmt 0x9ecc460 </usr/include/c++/4.6/sstream:122:7, line:135:7>
  (DeclStmt 0x9ecbf58 <line:123:2, col:21>
    0x9ecbf20 "__string_type __ret")
  (IfStmt 0x9ecc418 <line:124:2, line:133:12>
    <<<NULL>>>
    (CallExpr 0x9ecbfd0 <line:124:6, col:17> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9ecbf98 <col:6, col:12> '<dependent type>' lvalue
        (CXXThisExpr 0x9ecbf88 <col:6> 'const basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
    (CompoundStmt 0x9ecc3a0 <line:125:4, line:131:4>
      (IfStmt 0x9ecc380 <line:127:6, line:130:59>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9ecc108 <line:127:10, col:37> '<dependent type>'
          (UnresolvedLookupExpr 0x9ecc0c0 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b42c70 0x9ac83c0 0x9b5e730 0x9cbd1f0 0x9cbd720 0x9cbdc50)
          (CallExpr 0x9ecc038 <col:10, col:21> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9ecc000 <col:10, col:16> '<dependent type>' lvalue
              (CXXThisExpr 0x9ecbff0 <col:10> 'const basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
          (CallExpr 0x9ecc0a0 <col:25, col:37> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9ecc068 <col:25, col:31> '<dependent type>' lvalue
              (CXXThisExpr 0x9ecc058 <col:25> 'const basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
        (BinaryOperator 0x9ecc240 <line:128:8, col:57> '<dependent type>' '='
          (DeclRefExpr 0x9ecc12c <col:8> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue Var 0x9ecbf20 '__ret' '__string_type':'basic_string<char_type, _Traits, _Alloc>')
          (CXXUnresolvedConstructExpr 0x9ecc220 <col:16, col:57> '__string_type':'basic_string<char_type, _Traits, _Alloc>'
            (CallExpr 0x9ecc198 <col:30, col:42> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9ecc160 <col:30, col:36> '<dependent type>' lvalue
                (CXXThisExpr 0x9ecc150 <col:30> 'const basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
            (CallExpr 0x9ecc200 <col:45, col:56> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9ecc1c8 <col:45, col:51> '<dependent type>' lvalue
                (CXXThisExpr 0x9ecc1b8 <col:45> 'const basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))))
        (BinaryOperator 0x9ecc368 <line:130:9, col:59> '<dependent type>' '='
          (DeclRefExpr 0x9ecc258 <col:9> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue Var 0x9ecbf20 '__ret' '__string_type':'basic_string<char_type, _Traits, _Alloc>')
          (CXXUnresolvedConstructExpr 0x9ecc348 <col:17, col:59> '__string_type':'basic_string<char_type, _Traits, _Alloc>'
            (CallExpr 0x9ecc2c0 <col:31, col:43> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9ecc288 <col:31, col:37> '<dependent type>' lvalue
                (CXXThisExpr 0x9ecc278 <col:31> 'const basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
            (CallExpr 0x9ecc328 <col:46, col:58> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9ecc2f0 <col:46, col:52> '<dependent type>' lvalue
                (CXXThisExpr 0x9ecc2e0 <col:46> 'const basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))))))
    (BinaryOperator 0x9ecc400 <line:133:4, col:12> '<dependent type>' '='
      (DeclRefExpr 0x9ecc3b4 <col:4> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue Var 0x9ecbf20 '__ret' '__string_type':'basic_string<char_type, _Traits, _Alloc>')
      (MemberExpr 0x9ecc3e0 <col:12> 'const __string_type':'const basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0x9eca4b0
        (CXXThisExpr 0x9ecc3d0 <col:12> 'const basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
  (ReturnStmt 0x9ecc450 <line:134:2, col:9>
    (DeclRefExpr 0x9ecc434 <col:9> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue Var 0x9ecbf20 '__ret' '__string_type':'basic_string<char_type, _Traits, _Alloc>')))


        void str(const __string_type &__s) (CompoundStmt 0x9ecc670 </usr/include/c++/4.6/sstream:146:7, line:150:7>
  (CallExpr 0x9ecc5c8 <line:148:2, col:41> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9ecc4b0 <col:2, col:12> '<dependent type>' lvalue
      (MemberExpr 0x9ecc490 <col:2> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0x9eca4b0
        (CXXThisExpr 0x9ecc480 <col:2> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
    (CallExpr 0x9ecc538 <col:19, col:28> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9ecc500 <col:19, col:23> '<dependent type>' lvalue
        (DeclRefExpr 0x9ecc4e4 <col:19> 'const __string_type':'const basic_string<char_type, _Traits, _Alloc>' lvalue ParmVar 0x9eca8e0 '__s' 'const __string_type &')))
    (CallExpr 0x9ecc5a8 <col:31, col:40> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9ecc570 <col:31, col:35> '<dependent type>' lvalue
        (DeclRefExpr 0x9ecc554 <col:31> 'const __string_type':'const basic_string<char_type, _Traits, _Alloc>' lvalue ParmVar 0x9eca8e0 '__s' 'const __string_type &'))))
  (CallExpr 0x9ecc650 <line:149:2, col:27> '<dependent type>'
    (MemberExpr 0x9ecc600 <col:2> '<bound member function type>' ->_M_stringbuf_init 0x9ecaab0
      (CXXThisExpr 0x9ecc5f0 <col:2> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
    (MemberExpr 0x9ecc630 <col:20> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ->_M_mode 0x9eca470
      (CXXThisExpr 0x9ecc620 <col:20> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))


    protected:
    protected:
        void _M_stringbuf_init(ios_base::openmode __mode) (CompoundStmt 0x9eccb00 </usr/include/c++/4.6/sstream:156:7, line:162:7>
  (BinaryOperator 0x9ecc6d0 <line:157:2, col:12> '<dependent type>' '='
    (MemberExpr 0x9ecc698 <col:2> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ->_M_mode 0x9eca470
      (CXXThisExpr 0x9ecc688 <col:2> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9ecc6b8 <col:12> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0x9ecaa60 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode'))
  (DeclStmt 0x9ecc740 <line:158:2, col:23>
    0x9ecc6f0 "__size_type __len =
      (IntegerLiteral 0x9ecc728 <col:22> 'int' 0)")
  (IfStmt 0x9ecc9a8 <line:159:2, line:160:27>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9ecc8c8 <line:159:6, col:46> '<dependent type>'
      (UnresolvedLookupExpr 0x9ecc890 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9d68890)
      (MemberExpr 0x9ecc760 <col:6> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ->_M_mode 0x9eca470
        (CXXThisExpr 0x9ecc750 <col:6> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
      (ParenExpr 0x9ecc878 <col:16, col:46> 'enum std::_Ios_Openmode'
        (CXXOperatorCallExpr 0x9ecc850 <col:17, col:43> 'enum std::_Ios_Openmode'
          (ImplicitCastExpr 0x9ecc840 <col:31, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9ecc828 <col:31, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9d68ac0 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
          (ImplicitCastExpr 0x9ecc808 <col:17, col:27> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
            (DeclRefExpr 0x9ecc7a8 <col:17, col:27> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9d6bc10 'ate' 'const openmode':'const enum std::_Ios_Openmode'))
          (ImplicitCastExpr 0x9ecc818 <col:33, col:43> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
            (DeclRefExpr 0x9ecc7e4 <col:33, col:43> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9d6bbb0 'app' 'const openmode':'const enum std::_Ios_Openmode')))))
    (BinaryOperator 0x9ecc990 <line:160:4, col:27> '<dependent type>' '='
      (DeclRefExpr 0x9ecc8ec <col:4> '__size_type':'typename __string_type::size_type' lvalue Var 0x9ecc6f0 '__len' '__size_type':'typename __string_type::size_type')
      (CallExpr 0x9ecc970 <col:12, col:27> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ecc938 <col:12, col:22> '<dependent type>' lvalue
          (MemberExpr 0x9ecc918 <col:12> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0x9eca4b0
            (CXXThisExpr 0x9ecc908 <col:12> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))))
    <<<NULL>>>)
  (CallExpr 0x9eccad8 <line:161:2, col:60> '<dependent type>'
    (MemberExpr 0x9ecc9d8 <col:2> '<bound member function type>' ->_M_sync 0x9ecb490
      (CXXThisExpr 0x9ecc9c8 <col:2> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
    (CXXConstCastExpr 0x9ecca90 <col:10, col:49> 'char_type *' const_cast<char_type *> <NoOp>
      (CallExpr 0x9ecca60 <col:33, col:48> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ecca28 <col:33, col:43> '<dependent type>' lvalue
          (MemberExpr 0x9ecca08 <col:33> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0x9eca4b0
            (CXXThisExpr 0x9ecc9f8 <col:33> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))))
    (IntegerLiteral 0x9eccaa8 <col:52> 'int' 0)
    (DeclRefExpr 0x9eccac0 <col:55> '__size_type':'typename __string_type::size_type' lvalue Var 0x9ecc6f0 '__len' '__size_type':'typename __string_type::size_type')))


        virtual streamsize showmanyc() (CompoundStmt 0x9ecce98 </usr/include/c++/4.6/sstream:166:7, line:174:7>
  (DeclStmt 0x9eccb98 <line:167:2, col:23>
    0x9eccb30 "streamsize __ret =
      (UnaryOperator 0x9eccb80 <col:21, col:22> 'int' prefix '-'
        (IntegerLiteral 0x9eccb68 <col:22> 'int' 1))")
  (IfStmt 0x9ecce40 <line:168:2, line:172:4>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9eccc50 <line:168:6, col:26> '<dependent type>'
      (UnresolvedLookupExpr 0x9eccc18 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9d68890)
      (MemberExpr 0x9eccbb8 <col:6> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ->_M_mode 0x9eca470
        (CXXThisExpr 0x9eccba8 <col:6> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9eccbf4 <col:16, col:26> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9d6bcd0 'in' 'const openmode':'const enum std::_Ios_Openmode'))
    (CompoundStmt 0x9ecce28 <line:169:4, line:172:4>
      (CallExpr 0x9eccca8 <line:170:6, col:22> '<dependent type>'
        (MemberExpr 0x9eccc88 <col:6> '<bound member function type>' ->_M_update_egptr 0x9ecb520
          (CXXThisExpr 0x9eccc78 <col:6> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
      (BinaryOperator 0x9ecce10 <line:171:6, col:41> '<dependent type>' '='
        (DeclRefExpr 0x9ecccc4 <col:6> 'streamsize':'int' lvalue Var 0x9eccb30 '__ret' 'streamsize':'int')
        (CXXOperatorCallExpr 0x9eccde8 <col:14, col:41> '<dependent type>'
          (UnresolvedLookupExpr 0x9eccdb0 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
          (CallExpr 0x9eccd28 <col:14, col:26> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9ecccf0 <col:14, col:20> '<dependent type>' lvalue
              (CXXThisExpr 0x9eccce0 <col:14> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
          (CallExpr 0x9eccd90 <col:30, col:41> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9eccd58 <col:30, col:36> '<dependent type>' lvalue
              (CXXThisExpr 0x9eccd48 <col:30> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))))
    <<<NULL>>>)
  (ReturnStmt 0x9ecce88 <line:173:2, col:9>
    (ImplicitCastExpr 0x9ecce78 <col:9> 'streamsize':'int' <LValueToRValue>
      (DeclRefExpr 0x9ecce5c <col:9> 'streamsize':'int' lvalue Var 0x9eccb30 '__ret' 'streamsize':'int'))))


        virtual int_type underflow();
        virtual int_type pbackfail(int_type __c = (CallExpr 0x9ecb978 </usr/include/c++/4.6/sstream:180:32, col:49> '<dependent type>'
  (DependentScopeDeclRefExpr 0x9ecb950 <col:32, col:45> '<dependent type>' lvalue))
);
        virtual int_type overflow(int_type __c = (CallExpr 0x9ecb9e0 </usr/include/c++/4.6/sstream:183:31, col:48> '<dependent type>'
  (DependentScopeDeclRefExpr 0x9ecb9b8 <col:31, col:44> '<dependent type>' lvalue))
);
        virtual __streambuf_type *setbuf(char_type *__s, streamsize __n) (CompoundStmt 0x9ecd0c0 </usr/include/c++/4.6/sstream:198:7, line:213:7>
  (IfStmt 0x9ecd080 <line:199:2, line:211:4>
    <<<NULL>>>
    (BinaryOperator 0x9eccf28 <line:199:6, col:20> '<dependent type>' '&&'
      (DeclRefExpr 0x9ecceb4 <col:6> 'char_type *' lvalue ParmVar 0x9ecae30 '__s' 'char_type *')
      (BinaryOperator 0x9eccf10 <col:13, col:20> '_Bool' '>='
        (ImplicitCastExpr 0x9eccf00 <col:13> 'streamsize':'int' <LValueToRValue>
          (DeclRefExpr 0x9eccecc <col:13> 'streamsize':'int' lvalue ParmVar 0x9ecae70 '__n' 'streamsize':'int'))
        (IntegerLiteral 0x9eccee8 <col:20> 'int' 0)))
    (CompoundStmt 0x9ecd068 <line:200:4, line:211:4>
      (CallExpr 0x9eccfa8 <line:207:6, col:22> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9eccf70 <col:6, col:16> '<dependent type>' lvalue
          (MemberExpr 0x9eccf50 <col:6> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0x9eca4b0
            (CXXThisExpr 0x9eccf40 <col:6> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
      (CallExpr 0x9ecd040 <line:210:6, col:25> '<dependent type>'
        (MemberExpr 0x9eccfd8 <col:6> '<bound member function type>' ->_M_sync 0x9ecb490
          (CXXThisExpr 0x9eccfc8 <col:6> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x9eccff8 <col:14> 'char_type *' lvalue ParmVar 0x9ecae30 '__s' 'char_type *')
        (DeclRefExpr 0x9ecd010 <col:19> 'streamsize':'int' lvalue ParmVar 0x9ecae70 '__n' 'streamsize':'int')
        (IntegerLiteral 0x9ecd028 <col:24> 'int' 0)))
    <<<NULL>>>)
  (ReturnStmt 0x9ecd0b0 <line:212:2, col:9>
    (CXXThisExpr 0x9ecd0a0 <col:9> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))


        virtual pos_type seekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode = (CXXOperatorCallExpr 0x9ecbac8 </usr/include/c++/4.6/sstream:217:36, col:61> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0x9ecbab8 <col:49, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0x9ecbaa0 <col:49, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9d68ac0 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0x9ecba80 <col:36, col:46> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x9ecba1c <col:36, col:46> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9d6bcd0 'in' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0x9ecba90 <col:51, col:61> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x9ecba5c <col:51, col:61> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9d6bd30 'out' 'const openmode':'const enum std::_Ios_Openmode')))
);
        virtual pos_type seekpos(pos_type __sp, ios_base::openmode __mode = (CXXOperatorCallExpr 0x9ecbbb8 </usr/include/c++/4.6/sstream:221:36, col:61> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0x9ecbba8 <col:49, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0x9ecbb90 <col:49, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9d68ac0 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0x9ecbb70 <col:36, col:46> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x9ecbb0c <col:36, col:46> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9d6bcd0 'in' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0x9ecbb80 <col:51, col:61> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x9ecbb4c <col:51, col:61> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9d6bd30 'out' 'const openmode':'const enum std::_Ios_Openmode')))
);
        void _M_sync(char_type *__base, __size_type __i, __size_type __o);
        void _M_update_egptr() (CompoundStmt 0x9ecd788 </usr/include/c++/4.6/sstream:233:7, line:242:7>
  (DeclStmt 0x9ecd1e8 <line:234:2, col:46>
    0x9ecd0e0 "const bool __testin =
      (CXXOperatorCallExpr 0x9ecd1c0 <col:24, col:44> '<dependent type>'
        (UnresolvedLookupExpr 0x9ecd188 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9d68890)
        (MemberExpr 0x9ecd128 <col:24> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ->_M_mode 0x9eca470
          (CXXThisExpr 0x9ecd118 <col:24> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x9ecd164 <col:34, col:44> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9d6bcd0 'in' 'const openmode':'const enum std::_Ios_Openmode'))")
  (IfStmt 0x9ecd768 <line:235:2, line:241:4>
    <<<NULL>>>
    (BinaryOperator 0x9ecd3a0 <line:235:6, col:49> '<dependent type>' '&&'
      (CallExpr 0x9ecd240 <col:6, col:17> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ecd208 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0x9ecd1f8 <col:6> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
      (CXXOperatorCallExpr 0x9ecd378 <col:22, col:49> '<dependent type>'
        (UnresolvedLookupExpr 0x9ecd330 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b42c70 0x9ac83c0 0x9b5e730 0x9cbd1f0 0x9cbd720 0x9cbdc50)
        (CallExpr 0x9ecd2a8 <col:22, col:33> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9ecd270 <col:22, col:28> '<dependent type>' lvalue
            (CXXThisExpr 0x9ecd260 <col:22> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
        (CallExpr 0x9ecd310 <col:37, col:49> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9ecd2d8 <col:37, col:43> '<dependent type>' lvalue
            (CXXThisExpr 0x9ecd2c8 <col:37> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))))
    (CompoundStmt 0x9ecd750 <line:236:4, line:241:4>
      (IfStmt 0x9ecd730 <line:237:6, line:240:59>
        <<<NULL>>>
        (ImplicitCastExpr 0x9ecd3d0 <line:237:10> '_Bool' <LValueToRValue>
          (DeclRefExpr 0x9ecd3b8 <col:10> 'const _Bool' lvalue Var 0x9ecd0e0 '__testin' 'const _Bool'))
        (CallExpr 0x9ecd560 <line:238:8, col:60> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9ecd3f0 <col:8, col:14> '<dependent type>' lvalue
            (CXXThisExpr 0x9ecd3e0 <col:8> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
          (CallExpr 0x9ecd470 <col:19, col:31> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9ecd438 <col:19, col:25> '<dependent type>' lvalue
              (CXXThisExpr 0x9ecd428 <col:19> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
          (CallExpr 0x9ecd4d8 <col:34, col:45> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9ecd4a0 <col:34, col:40> '<dependent type>' lvalue
              (CXXThisExpr 0x9ecd490 <col:34> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
          (CallExpr 0x9ecd540 <col:48, col:59> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9ecd508 <col:48, col:54> '<dependent type>' lvalue
              (CXXThisExpr 0x9ecd4f8 <col:48> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
        (CallExpr 0x9ecd708 <line:240:8, col:59> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9ecd598 <col:8, col:14> '<dependent type>' lvalue
            (CXXThisExpr 0x9ecd588 <col:8> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
          (CallExpr 0x9ecd618 <col:19, col:30> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9ecd5e0 <col:19, col:25> '<dependent type>' lvalue
              (CXXThisExpr 0x9ecd5d0 <col:19> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
          (CallExpr 0x9ecd680 <col:33, col:44> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9ecd648 <col:33, col:39> '<dependent type>' lvalue
              (CXXThisExpr 0x9ecd638 <col:33> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
          (CallExpr 0x9ecd6e8 <col:47, col:58> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9ecd6b0 <col:47, col:53> '<dependent type>' lvalue
              (CXXThisExpr 0x9ecd6a0 <col:47> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))))
    <<<NULL>>>))


        void _M_pbump(char_type *__pbeg, char_type *__pend, off_type __off);
    };
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> class basic_istringstream : public basic_istream<wchar_t, std::char_traits<wchar_t> > {
        class basic_istringstream;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __stringbuf_type;
        typedef basic_istream<char_type, traits_type> __istream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_istringstream(ios_base::openmode __mode);
        basic_istringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_istringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_istringstream<wchar_t> &operator=(const std::basic_istringstream<wchar_t> &);
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> class basic_istringstream : public basic_istream<char, std::char_traits<char> > {
        class basic_istringstream;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<char, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef basic_stringbuf<char, std::char_traits<char>, std::allocator<char> > __stringbuf_type;
        typedef basic_istream<char_type, traits_type> __istream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_istringstream(ios_base::openmode __mode);
        basic_istringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_istringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_istringstream<char> &operator=(const std::basic_istringstream<char> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>, typename _Alloc = allocator<_CharT>> class basic_istringstream : public basic_istream<_CharT, _Traits> {
        class basic_istringstream;
    public:
    public:
        typedef _CharT char_type;
        typedef _Traits traits_type;
        typedef _Alloc allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<_CharT, _Traits, _Alloc> __string_type;
        typedef basic_stringbuf<_CharT, _Traits, _Alloc> __stringbuf_type;
        typedef basic_istream<char_type, traits_type> __istream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_istringstream<_CharT, _Traits, _Alloc>(ios_base::openmode __mode = (ImplicitCastExpr 0x9ed24e8 </usr/include/c++/4.6/sstream:298:55, col:65> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
  (DeclRefExpr 0x9ed24c4 <col:55, col:65> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9d6bcd0 'in' 'const openmode':'const enum std::_Ios_Openmode'))
) : __istream_type(), _M_stringbuf((CXXOperatorCallExpr 0x9ed2638 </usr/include/c++/4.6/sstream:299:40, col:59> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0x9ed2628 <col:47, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0x9ed2610 <col:47, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9d68ac0 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0x9ed25f0 <col:40> 'class ios_base::openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x9ed2598 <col:40> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0x9ece330 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0x9ed2600 <col:49, col:59> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x9ed25cc <col:49, col:59> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9d6bcd0 'in' 'const openmode':'const enum std::_Ios_Openmode')))
) (CompoundStmt 0x9ed27b0 </usr/include/c++/4.6/sstream:300:7, col:36>
  (CallExpr 0x9ed2790 <col:9, col:33> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9ed26c8 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0x9ed26b8 <col:9> 'basic_istringstream<_CharT, _Traits, _Alloc> *' this))
    (CXXOperatorCallExpr 0x9ed2770 <col:20, col:21> '<dependent type>'
      (UnresolvedLookupExpr 0x9ed2730 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9d5b750 0x9d68890 0x9d69b00)
      (MemberExpr 0x9ed2710 <col:21> '__stringbuf_type':'basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0x9ece290
        (CXXThisExpr 0x9ed2700 <col:21> 'basic_istringstream<_CharT, _Traits, _Alloc> *' this)))))


        basic_istringstream<_CharT, _Traits, _Alloc>(const __string_type &__str, ios_base::openmode __mode = (ImplicitCastExpr 0x9ed2538 </usr/include/c++/4.6/sstream:317:34, col:44> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
  (DeclRefExpr 0x9ed2514 <col:34, col:44> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9d6bcd0 'in' 'const openmode':'const enum std::_Ios_Openmode'))
) : __istream_type(), _M_stringbuf((DeclRefExpr 0x9ed2808 </usr/include/c++/4.6/sstream:318:40> 'const __string_type':'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9ece450 '__str' 'const __string_type &')
, (CXXOperatorCallExpr 0x9ed28c0 </usr/include/c++/4.6/sstream:318:47, col:66> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0x9ed28b0 <col:54, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0x9ed2898 <col:54, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9d68ac0 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0x9ed2878 <col:47> 'class ios_base::openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x9ed2820 <col:47> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0x9ed20a0 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0x9ed2888 <col:56, col:66> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x9ed2854 <col:56, col:66> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9d6bcd0 'in' 'const openmode':'const enum std::_Ios_Openmode')))
) (CompoundStmt 0x9ed2a28 </usr/include/c++/4.6/sstream:319:7, col:36>
  (CallExpr 0x9ed2a08 <col:9, col:33> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9ed2940 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0x9ed2930 <col:9> 'basic_istringstream<_CharT, _Traits, _Alloc> *' this))
    (CXXOperatorCallExpr 0x9ed29e8 <col:20, col:21> '<dependent type>'
      (UnresolvedLookupExpr 0x9ed29a8 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9d5b750 0x9d68890 0x9d69b00)
      (MemberExpr 0x9ed2988 <col:21> '__stringbuf_type':'basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0x9ece290
        (CXXThisExpr 0x9ed2978 <col:21> 'basic_istringstream<_CharT, _Traits, _Alloc> *' this)))))


        void ~basic_istringstream<_CharT, _Traits, _Alloc>() (CompoundStmt 0x9ed2a40 </usr/include/c++/4.6/sstream:328:7, col:9>)


        __stringbuf_type *rdbuf() const (CompoundStmt 0x9ed2b30 </usr/include/c++/4.6/sstream:339:7, col:62>
  (ReturnStmt 0x9ed2b20 <col:9, col:59>
    (CXXConstCastExpr 0x9ed2b08 <col:16, col:59> '__stringbuf_type *' const_cast<__stringbuf_type *> <NoOp>
      (CXXOperatorCallExpr 0x9ed2ad8 <col:46, col:47> '<dependent type>'
        (UnresolvedLookupExpr 0x9ed2a98 <col:46, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9d5b750 0x9d68890 0x9d69b00)
        (MemberExpr 0x9ed2a78 <col:47> 'const __stringbuf_type':'const basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0x9ece290
          (CXXThisExpr 0x9ed2a68 <col:47> 'const basic_istringstream<_CharT, _Traits, _Alloc> *' this))))))


        __string_type str() const (CompoundStmt 0x9ed2be0 </usr/include/c++/4.6/sstream:347:7, col:36>
  (ReturnStmt 0x9ed2bd0 <col:9, col:33>
    (CallExpr 0x9ed2bb0 <col:16, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9ed2b78 <col:16, col:29> '<dependent type>' lvalue
        (MemberExpr 0x9ed2b58 <col:16> 'const __stringbuf_type':'const basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0x9ece290
          (CXXThisExpr 0x9ed2b48 <col:16> 'const basic_istringstream<_CharT, _Traits, _Alloc> *' this))))))


        void str(const __string_type &__s) (CompoundStmt 0x9ed2c98 </usr/include/c++/4.6/sstream:357:7, col:32>
  (CallExpr 0x9ed2c78 <col:9, col:29> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9ed2c28 <col:9, col:22> '<dependent type>' lvalue
      (MemberExpr 0x9ed2c08 <col:9> '__stringbuf_type':'basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0x9ece290
        (CXXThisExpr 0x9ed2bf8 <col:9> 'basic_istringstream<_CharT, _Traits, _Alloc> *' this)))
    (DeclRefExpr 0x9ed2c5c <col:26> 'const __string_type':'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9ed23c0 '__s' 'const __string_type &')))


    };
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> class basic_ostringstream : public basic_ostream<wchar_t, std::char_traits<wchar_t> > {
        class basic_ostringstream;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __stringbuf_type;
        typedef basic_ostream<char_type, traits_type> __ostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_ostringstream(ios_base::openmode __mode);
        basic_ostringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_ostringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_ostringstream<wchar_t> &operator=(const std::basic_ostringstream<wchar_t> &);
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> class basic_ostringstream : public basic_ostream<char, std::char_traits<char> > {
        class basic_ostringstream;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<char, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef basic_stringbuf<char, std::char_traits<char>, std::allocator<char> > __stringbuf_type;
        typedef basic_ostream<char_type, traits_type> __ostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_ostringstream(ios_base::openmode __mode);
        basic_ostringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_ostringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_ostringstream<char> &operator=(const std::basic_ostringstream<char> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>, typename _Alloc = allocator<_CharT>> class basic_ostringstream : public basic_ostream<_CharT, _Traits> {
        class basic_ostringstream;
    public:
    public:
        typedef _CharT char_type;
        typedef _Traits traits_type;
        typedef _Alloc allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<_CharT, _Traits, _Alloc> __string_type;
        typedef basic_stringbuf<_CharT, _Traits, _Alloc> __stringbuf_type;
        typedef basic_ostream<char_type, traits_type> __ostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_ostringstream<_CharT, _Traits, _Alloc>(ios_base::openmode __mode = (ImplicitCastExpr 0x9ed3dd8 </usr/include/c++/4.6/sstream:408:55, col:65> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
  (DeclRefExpr 0x9ed3db4 <col:55, col:65> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9d6bd30 'out' 'const openmode':'const enum std::_Ios_Openmode'))
) : __ostream_type(), _M_stringbuf((CXXOperatorCallExpr 0x9ed3f28 </usr/include/c++/4.6/sstream:409:40, col:59> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0x9ed3f18 <col:47, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0x9ed3f00 <col:47, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9d68ac0 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0x9ed3ee0 <col:40> 'class ios_base::openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x9ed3e88 <col:40> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0x9ed3840 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0x9ed3ef0 <col:49, col:59> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x9ed3ebc <col:49, col:59> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9d6bd30 'out' 'const openmode':'const enum std::_Ios_Openmode')))
) (CompoundStmt 0x9ed40a0 </usr/include/c++/4.6/sstream:410:7, col:36>
  (CallExpr 0x9ed4080 <col:9, col:33> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9ed3fb8 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0x9ed3fa8 <col:9> 'basic_ostringstream<_CharT, _Traits, _Alloc> *' this))
    (CXXOperatorCallExpr 0x9ed4060 <col:20, col:21> '<dependent type>'
      (UnresolvedLookupExpr 0x9ed4020 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9d5b750 0x9d68890 0x9d69b00)
      (MemberExpr 0x9ed4000 <col:21> '__stringbuf_type':'basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0x9ed37a0
        (CXXThisExpr 0x9ed3ff0 <col:21> 'basic_ostringstream<_CharT, _Traits, _Alloc> *' this)))))


        basic_ostringstream<_CharT, _Traits, _Alloc>(const __string_type &__str, ios_base::openmode __mode = (ImplicitCastExpr 0x9ed3e28 </usr/include/c++/4.6/sstream:427:34, col:44> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
  (DeclRefExpr 0x9ed3e04 <col:34, col:44> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9d6bd30 'out' 'const openmode':'const enum std::_Ios_Openmode'))
) : __ostream_type(), _M_stringbuf((DeclRefExpr 0x9ed40f8 </usr/include/c++/4.6/sstream:428:40> 'const __string_type':'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9ed3960 '__str' 'const __string_type &')
, (CXXOperatorCallExpr 0x9ed41b0 </usr/include/c++/4.6/sstream:428:47, col:66> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0x9ed41a0 <col:54, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0x9ed4188 <col:54, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9d68ac0 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0x9ed4168 <col:47> 'class ios_base::openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x9ed4110 <col:47> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0x9ed39d0 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0x9ed4178 <col:56, col:66> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x9ed4144 <col:56, col:66> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9d6bd30 'out' 'const openmode':'const enum std::_Ios_Openmode')))
) (CompoundStmt 0x9ed4318 </usr/include/c++/4.6/sstream:429:7, col:36>
  (CallExpr 0x9ed42f8 <col:9, col:33> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9ed4230 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0x9ed4220 <col:9> 'basic_ostringstream<_CharT, _Traits, _Alloc> *' this))
    (CXXOperatorCallExpr 0x9ed42d8 <col:20, col:21> '<dependent type>'
      (UnresolvedLookupExpr 0x9ed4298 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9d5b750 0x9d68890 0x9d69b00)
      (MemberExpr 0x9ed4278 <col:21> '__stringbuf_type':'basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0x9ed37a0
        (CXXThisExpr 0x9ed4268 <col:21> 'basic_ostringstream<_CharT, _Traits, _Alloc> *' this)))))


        void ~basic_ostringstream<_CharT, _Traits, _Alloc>() (CompoundStmt 0x9ed4330 </usr/include/c++/4.6/sstream:438:7, col:9>)


        __stringbuf_type *rdbuf() const (CompoundStmt 0x9ed4420 </usr/include/c++/4.6/sstream:449:7, col:62>
  (ReturnStmt 0x9ed4410 <col:9, col:59>
    (CXXConstCastExpr 0x9ed43f8 <col:16, col:59> '__stringbuf_type *' const_cast<__stringbuf_type *> <NoOp>
      (CXXOperatorCallExpr 0x9ed43c8 <col:46, col:47> '<dependent type>'
        (UnresolvedLookupExpr 0x9ed4388 <col:46, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9d5b750 0x9d68890 0x9d69b00)
        (MemberExpr 0x9ed4368 <col:47> 'const __stringbuf_type':'const basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0x9ed37a0
          (CXXThisExpr 0x9ed4358 <col:47> 'const basic_ostringstream<_CharT, _Traits, _Alloc> *' this))))))


        __string_type str() const (CompoundStmt 0x9ed44d0 </usr/include/c++/4.6/sstream:457:7, col:36>
  (ReturnStmt 0x9ed44c0 <col:9, col:33>
    (CallExpr 0x9ed44a0 <col:16, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9ed4468 <col:16, col:29> '<dependent type>' lvalue
        (MemberExpr 0x9ed4448 <col:16> 'const __stringbuf_type':'const basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0x9ed37a0
          (CXXThisExpr 0x9ed4438 <col:16> 'const basic_ostringstream<_CharT, _Traits, _Alloc> *' this))))))


        void str(const __string_type &__s) (CompoundStmt 0x9ed4588 </usr/include/c++/4.6/sstream:467:7, col:32>
  (CallExpr 0x9ed4568 <col:9, col:29> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9ed4518 <col:9, col:22> '<dependent type>' lvalue
      (MemberExpr 0x9ed44f8 <col:9> '__stringbuf_type':'basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0x9ed37a0
        (CXXThisExpr 0x9ed44e8 <col:9> 'basic_ostringstream<_CharT, _Traits, _Alloc> *' this)))
    (DeclRefExpr 0x9ed454c <col:26> 'const __string_type':'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9ed3cb0 '__s' 'const __string_type &')))


    };
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> class basic_stringstream : public basic_iostream<wchar_t, std::char_traits<wchar_t> > {
        class basic_stringstream;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __stringbuf_type;
        typedef basic_iostream<char_type, traits_type> __iostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_stringstream(ios_base::openmode __m);
        basic_stringstream(const __string_type &__str, ios_base::openmode __m);
        void ~basic_stringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_stringstream<wchar_t> &operator=(const std::basic_stringstream<wchar_t> &);
        inline basic_stringstream(const std::basic_stringstream<wchar_t> &);
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> class basic_stringstream : public basic_iostream<char, std::char_traits<char> > {
        class basic_stringstream;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<char, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef basic_stringbuf<char, std::char_traits<char>, std::allocator<char> > __stringbuf_type;
        typedef basic_iostream<char_type, traits_type> __iostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_stringstream(ios_base::openmode __m);
        basic_stringstream(const __string_type &__str, ios_base::openmode __m);
        void ~basic_stringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_stringstream<char> &operator=(const std::basic_stringstream<char> &);
        inline basic_stringstream(const std::basic_stringstream<char> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>, typename _Alloc = allocator<_CharT>> class basic_stringstream : public basic_iostream<_CharT, _Traits> {
        class basic_stringstream;
    public:
    public:
        typedef _CharT char_type;
        typedef _Traits traits_type;
        typedef _Alloc allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<_CharT, _Traits, _Alloc> __string_type;
        typedef basic_stringbuf<_CharT, _Traits, _Alloc> __stringbuf_type;
        typedef basic_iostream<char_type, traits_type> __iostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_stringstream<_CharT, _Traits, _Alloc>(ios_base::openmode __m = (CXXOperatorCallExpr 0x9ed5750 </usr/include/c++/4.6/sstream:516:51, col:77> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0x9ed5740 <col:65, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0x9ed5728 <col:65, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9d68ac0 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0x9ed5708 <col:51, col:61> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x9ed56a4 <col:51, col:61> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9d6bd30 'out' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0x9ed5718 <col:67, col:77> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x9ed56e4 <col:67, col:77> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9d6bcd0 'in' 'const openmode':'const enum std::_Ios_Openmode')))
) : __iostream_type(), _M_stringbuf((DeclRefExpr 0x9ed58b8 </usr/include/c++/4.6/sstream:517:41> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0x9ed5130 '__m' 'class ios_base::openmode':'enum std::_Ios_Openmode')
) (CompoundStmt 0x9ed5a20 </usr/include/c++/4.6/sstream:518:7, col:36>
  (CallExpr 0x9ed5a00 <col:9, col:33> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9ed5938 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0x9ed5928 <col:9> 'basic_stringstream<_CharT, _Traits, _Alloc> *' this))
    (CXXOperatorCallExpr 0x9ed59e0 <col:20, col:21> '<dependent type>'
      (UnresolvedLookupExpr 0x9ed59a0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9d5b750 0x9d68890 0x9d69b00)
      (MemberExpr 0x9ed5980 <col:21> '__stringbuf_type':'basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0x9ed5090
        (CXXThisExpr 0x9ed5970 <col:21> 'basic_stringstream<_CharT, _Traits, _Alloc> *' this)))))


        basic_stringstream<_CharT, _Traits, _Alloc>(const __string_type &__str, ios_base::openmode __m = (CXXOperatorCallExpr 0x9ed5840 </usr/include/c++/4.6/sstream:533:30, col:56> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0x9ed5830 <col:44, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0x9ed5818 <col:44, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9d68ac0 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0x9ed57f8 <col:30, col:40> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x9ed5794 <col:30, col:40> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9d6bd30 'out' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0x9ed5808 <col:46, col:56> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x9ed57d4 <col:46, col:56> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9d6bcd0 'in' 'const openmode':'const enum std::_Ios_Openmode')))
) : __iostream_type(), _M_stringbuf((DeclRefExpr 0x9ed5a78 </usr/include/c++/4.6/sstream:534:41> 'const __string_type':'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9ed5250 '__str' 'const __string_type &')
, (DeclRefExpr 0x9ed5a90 </usr/include/c++/4.6/sstream:534:48> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0x9ed52c0 '__m' 'class ios_base::openmode':'enum std::_Ios_Openmode')
) (CompoundStmt 0x9ed5be8 </usr/include/c++/4.6/sstream:535:7, col:36>
  (CallExpr 0x9ed5bc8 <col:9, col:33> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9ed5b00 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0x9ed5af0 <col:9> 'basic_stringstream<_CharT, _Traits, _Alloc> *' this))
    (CXXOperatorCallExpr 0x9ed5ba8 <col:20, col:21> '<dependent type>'
      (UnresolvedLookupExpr 0x9ed5b68 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9d5b750 0x9d68890 0x9d69b00)
      (MemberExpr 0x9ed5b48 <col:21> '__stringbuf_type':'basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0x9ed5090
        (CXXThisExpr 0x9ed5b38 <col:21> 'basic_stringstream<_CharT, _Traits, _Alloc> *' this)))))


        void ~basic_stringstream<_CharT, _Traits, _Alloc>() (CompoundStmt 0x9ed5c00 </usr/include/c++/4.6/sstream:544:7, col:9>)


        __stringbuf_type *rdbuf() const (CompoundStmt 0x9ed5cf0 </usr/include/c++/4.6/sstream:555:7, col:62>
  (ReturnStmt 0x9ed5ce0 <col:9, col:59>
    (CXXConstCastExpr 0x9ed5cc8 <col:16, col:59> '__stringbuf_type *' const_cast<__stringbuf_type *> <NoOp>
      (CXXOperatorCallExpr 0x9ed5c98 <col:46, col:47> '<dependent type>'
        (UnresolvedLookupExpr 0x9ed5c58 <col:46, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9d5b750 0x9d68890 0x9d69b00)
        (MemberExpr 0x9ed5c38 <col:47> 'const __stringbuf_type':'const basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0x9ed5090
          (CXXThisExpr 0x9ed5c28 <col:47> 'const basic_stringstream<_CharT, _Traits, _Alloc> *' this))))))


        __string_type str() const (CompoundStmt 0x9ed5da0 </usr/include/c++/4.6/sstream:563:7, col:36>
  (ReturnStmt 0x9ed5d90 <col:9, col:33>
    (CallExpr 0x9ed5d70 <col:16, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9ed5d38 <col:16, col:29> '<dependent type>' lvalue
        (MemberExpr 0x9ed5d18 <col:16> 'const __stringbuf_type':'const basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0x9ed5090
          (CXXThisExpr 0x9ed5d08 <col:16> 'const basic_stringstream<_CharT, _Traits, _Alloc> *' this))))))


        void str(const __string_type &__s) (CompoundStmt 0x9ed5e58 </usr/include/c++/4.6/sstream:573:7, col:32>
  (CallExpr 0x9ed5e38 <col:9, col:29> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9ed5de8 <col:9, col:22> '<dependent type>' lvalue
      (MemberExpr 0x9ed5dc8 <col:9> '__stringbuf_type':'basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0x9ed5090
        (CXXThisExpr 0x9ed5db8 <col:9> 'basic_stringstream<_CharT, _Traits, _Alloc> *' this)))
    (DeclRefExpr 0x9ed5e1c <col:26> 'const __string_type':'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9ed55a0 '__s' 'const __string_type &')))


    };
}
namespace std {
    typename basic_stringbuf<_CharT, _Traits, _Alloc>::int_type pbackfail(int_type __c = (CallExpr 0x9ecb978 </usr/include/c++/4.6/sstream:180:32, col:49> '<dependent type>'
  (DependentScopeDeclRefExpr 0x9ecb950 <col:32, col:45> '<dependent type>' lvalue))
) (CompoundStmt 0x9ed7258 </usr/include/c++/4.6/bits/sstream.tcc:48:5, line:76:5>
  (DeclStmt 0x9ed6750 <line:49:7, col:42>
    0x9ed66a0 "int_type __ret =
      (CallExpr 0x9ed6730 <col:24, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ed66f8 <col:24, col:37> '<dependent type>' lvalue))")
  (IfStmt 0x9ed7210 <line:50:7, line:74:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9ed6878 <line:50:11, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0x9ed6830 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40ad0 0x9b57c70 0x9b5ddb0 0x9cbc120 0x9cbc650 0x9cbcb80)
      (CallExpr 0x9ed67a8 <col:11, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ed6770 <col:11, col:17> '<dependent type>' lvalue
          (CXXThisExpr 0x9ed6760 <col:11> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
      (CallExpr 0x9ed6810 <col:27, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ed67d8 <col:27, col:33> '<dependent type>' lvalue
          (CXXThisExpr 0x9ed67c8 <col:27> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
    (CompoundStmt 0x9ed71f8 <line:51:2, line:74:2>
      (DeclStmt 0x9ed6998 <line:54:4, col:63>
        0x9ed68b0 "const bool __testeof =
          (CallExpr 0x9ed6970 <col:27, col:62> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9ed6908 <col:27, col:40> '<dependent type>' lvalue)
            (DeclRefExpr 0x9ed693c <col:52> 'int_type':'typename traits_type::int_type' lvalue ParmVar 0x9ed6420 '__c' 'int_type':'typename traits_type::int_type')
            (DeclRefExpr 0x9ed6954 <col:57> 'int_type':'typename traits_type::int_type' lvalue Var 0x9ed66a0 '__ret' 'int_type':'typename traits_type::int_type'))")
      (IfStmt 0x9ed71d8 <line:55:4, line:73:6>
        <<<NULL>>>
        (UnaryOperator 0x9ed69d0 <line:55:8, col:9> '_Bool' prefix '!'
          (ImplicitCastExpr 0x9ed69c0 <col:9> '_Bool' <LValueToRValue>
            (DeclRefExpr 0x9ed69a8 <col:9> 'const _Bool' lvalue Var 0x9ed68b0 '__testeof' 'const _Bool')))
        (CompoundStmt 0x9ed7048 <line:56:6, line:68:6>
          (DeclStmt 0x9ed6be8 <line:57:8, line:59:28>
            0x9ed69f0 "const bool __testeq =
              (CallExpr 0x9ed6bc0 <line:57:30, line:59:27> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9ed6a48 <line:57:30, col:43> '<dependent type>' lvalue)
                (CallExpr 0x9ed6af0 <col:46, line:58:27> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9ed6aa0 <line:57:46, line:58:11> '<dependent type>' lvalue)
                  (DeclRefExpr 0x9ed6ad4 <col:24> 'int_type':'typename traits_type::int_type' lvalue ParmVar 0x9ed6420 '__c' 'int_type':'typename traits_type::int_type'))
                (ArraySubscriptExpr 0x9ed6ba8 <line:59:11, col:26> '<dependent type>' lvalue
                  (CallExpr 0x9ed6b58 <col:11, col:22> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9ed6b20 <col:11, col:17> '<dependent type>' lvalue
                      (CXXThisExpr 0x9ed6b10 <col:11> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
                  (UnaryOperator 0x9ed6b90 <col:24, col:25> 'int' prefix '-'
                    (IntegerLiteral 0x9ed6b78 <col:25> 'int' 1))))")
          (DeclStmt 0x9ed6d28 <line:60:8, col:60>
            0x9ed6c00 "const bool __testout =
              (CXXOperatorCallExpr 0x9ed6d00 <col:31, col:57> '<dependent type>'
                (UnresolvedLookupExpr 0x9ed6cc0 <col:45, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9d5b750 0x9d68890 0x9d69b00)
                (CXXDependentScopeMemberExpr 0x9ed6c48 <col:31, col:37> '<dependent type>' lvalue
                  (CXXThisExpr 0x9ed6c38 <col:31> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
                (DeclRefExpr 0x9ed6c9c <col:47, col:57> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9d6bd30 'out' 'const openmode':'const enum std::_Ios_Openmode'))")
          (IfStmt 0x9ed7028 <line:61:8, line:67:3>
            <<<NULL>>>
            (BinaryOperator 0x9ed6d88 <line:61:12, col:24> '_Bool' '||'
              (ImplicitCastExpr 0x9ed6d68 <col:12> '_Bool' <LValueToRValue>
                (DeclRefExpr 0x9ed6d38 <col:12> 'const _Bool' lvalue Var 0x9ed69f0 '__testeq' 'const _Bool'))
              (ImplicitCastExpr 0x9ed6d78 <col:24> '_Bool' <LValueToRValue>
                (DeclRefExpr 0x9ed6d50 <col:24> 'const _Bool' lvalue Var 0x9ed6c00 '__testout' 'const _Bool')))
            (CompoundStmt 0x9ed7008 <line:62:3, line:67:3>
              (CallExpr 0x9ed6e18 <line:63:5, col:19> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9ed6db0 <col:5, col:11> '<dependent type>' lvalue
                  (CXXThisExpr 0x9ed6da0 <col:5> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
                (UnaryOperator 0x9ed6e00 <col:17, col:18> 'int' prefix '-'
                  (IntegerLiteral 0x9ed6de8 <col:18> 'int' 1)))
              (IfStmt 0x9ed6fa0 <line:64:5, line:65:52>
                <<<NULL>>>
                (UnaryOperator 0x9ed6e60 <line:64:9, col:10> '_Bool' prefix '!'
                  (ImplicitCastExpr 0x9ed6e50 <col:10> '_Bool' <LValueToRValue>
                    (DeclRefExpr 0x9ed6e38 <col:10> 'const _Bool' lvalue Var 0x9ed69f0 '__testeq' 'const _Bool')))
                (BinaryOperator 0x9ed6f88 <line:65:7, col:52> '<dependent type>' '='
                  (UnaryOperator 0x9ed6ee0 <col:7, col:19> '<dependent type>' prefix '*'
                    (CallExpr 0x9ed6ec0 <col:8, col:19> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0x9ed6e88 <col:8, col:14> '<dependent type>' lvalue
                        (CXXThisExpr 0x9ed6e78 <col:8> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
                  (CallExpr 0x9ed6f68 <col:23, col:52> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9ed6f18 <col:23, col:36> '<dependent type>' lvalue)
                    (DeclRefExpr 0x9ed6f4c <col:49> 'int_type':'typename traits_type::int_type' lvalue ParmVar 0x9ed6420 '__c' 'int_type':'typename traits_type::int_type')))
                <<<NULL>>>)
              (BinaryOperator 0x9ed6ff0 <line:66:5, col:13> '<dependent type>' '='
                (DeclRefExpr 0x9ed6fbc <col:5> 'int_type':'typename traits_type::int_type' lvalue Var 0x9ed66a0 '__ret' 'int_type':'typename traits_type::int_type')
                (DeclRefExpr 0x9ed6fd4 <col:13> 'int_type':'typename traits_type::int_type' lvalue ParmVar 0x9ed6420 '__c' 'int_type':'typename traits_type::int_type')))
            <<<NULL>>>))
        (CompoundStmt 0x9ed71c0 <line:70:6, line:73:6>
          (CallExpr 0x9ed70e0 <line:71:8, col:22> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9ed7078 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9ed7068 <col:8> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
            (UnaryOperator 0x9ed70c8 <col:20, col:21> 'int' prefix '-'
              (IntegerLiteral 0x9ed70b0 <col:21> 'int' 1)))
          (BinaryOperator 0x9ed71a8 <line:72:8, col:40> '<dependent type>' '='
            (DeclRefExpr 0x9ed7100 <col:8> 'int_type':'typename traits_type::int_type' lvalue Var 0x9ed66a0 '__ret' 'int_type':'typename traits_type::int_type')
            (CallExpr 0x9ed7188 <col:16, col:40> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9ed7138 <col:16, col:29> '<dependent type>' lvalue)
              (DeclRefExpr 0x9ed716c <col:37> 'int_type':'typename traits_type::int_type' lvalue ParmVar 0x9ed6420 '__c' 'int_type':'typename traits_type::int_type'))))))
    <<<NULL>>>)
  (ReturnStmt 0x9ed7248 <line:75:7, col:14>
    (DeclRefExpr 0x9ed722c <col:14> 'int_type':'typename traits_type::int_type' lvalue Var 0x9ed66a0 '__ret' 'int_type':'typename traits_type::int_type')))


    typename basic_stringbuf<_CharT, _Traits, _Alloc>::int_type overflow(int_type __c = (CallExpr 0x9ecb9e0 </usr/include/c++/4.6/sstream:183:31, col:48> '<dependent type>'
  (DependentScopeDeclRefExpr 0x9ecb9b8 <col:31, col:44> '<dependent type>' lvalue))
) (CompoundStmt 0x9ed9210 </usr/include/c++/4.6/bits/sstream.tcc:82:5, line:127:5>
  (DeclStmt 0x9ed7af8 <line:83:7, col:59>
    0x9ed79d0 "const bool __testout =
      (CXXOperatorCallExpr 0x9ed7ad0 <col:30, col:56> '<dependent type>'
        (UnresolvedLookupExpr 0x9ed7a90 <col:44, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9d5b750 0x9d68890 0x9d69b00)
        (CXXDependentScopeMemberExpr 0x9ed7a18 <col:30, col:36> '<dependent type>' lvalue
          (CXXThisExpr 0x9ed7a08 <col:30> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x9ed7a6c <col:46, col:56> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9d6bd30 'out' 'const openmode':'const enum std::_Ios_Openmode'))")
  (IfStmt 0x9ed7c60 <line:84:7, line:85:26>
    <<<NULL>>>
    (ImplicitCastExpr 0x9ed7bc8 <line:84:11, col:45> '_Bool' <IntegralToBoolean>
      (CallExpr 0x9ed7b80 <col:11, col:45> 'long'
        (ImplicitCastExpr 0x9ed7b70 <col:11> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9ed7b08 <col:11> 'long (long, long)' lvalue Function 0x9ca0bd0 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0x9ed7ba8 <col:28, col:29> 'long' <IntegralCast>
          (UnaryOperator 0x9ed7b48 <col:28, col:29> '_Bool' prefix '!'
            (ImplicitCastExpr 0x9ed7b38 <col:29> '_Bool' <LValueToRValue>
              (DeclRefExpr 0x9ed7b20 <col:29> 'const _Bool' lvalue Var 0x9ed79d0 '__testout' 'const _Bool'))))
        (ImplicitCastExpr 0x9ed7bb8 <col:40> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0x9ed7b60 <col:40> '_Bool' false))))
    (ReturnStmt 0x9ed7c50 <line:85:2, col:26>
      (CallExpr 0x9ed7c30 <col:9, col:26> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ed7bf8 <col:9, col:22> '<dependent type>' lvalue)))
    <<<NULL>>>)
  (DeclStmt 0x9ed7dd8 <line:87:7, col:79>
    0x9ed7c90 "const bool __testeof =
      (CallExpr 0x9ed7db0 <col:30, col:78> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ed7ce8 <col:30, col:43> '<dependent type>' lvalue)
        (DeclRefExpr 0x9ed7d1c <col:55> 'int_type':'typename traits_type::int_type' lvalue ParmVar 0x9ed7750 '__c' 'int_type':'typename traits_type::int_type')
        (CallExpr 0x9ed7d90 <col:60, col:77> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9ed7d58 <col:60, col:73> '<dependent type>' lvalue)))")
  (IfStmt 0x9ed7f40 <line:88:7, line:89:33>
    <<<NULL>>>
    (ImplicitCastExpr 0x9ed7e90 <line:88:11, col:44> '_Bool' <IntegralToBoolean>
      (CallExpr 0x9ed7e38 <col:11, col:44> 'long'
        (ImplicitCastExpr 0x9ed7e28 <col:11> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9ed7de8 <col:11> 'long (long, long)' lvalue Function 0x9ca0bd0 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0x9ed7e70 <col:28> 'long' <IntegralCast>
          (ImplicitCastExpr 0x9ed7e60 <col:28> '_Bool' <LValueToRValue>
            (DeclRefExpr 0x9ed7e00 <col:28> 'const _Bool' lvalue Var 0x9ed7c90 '__testeof' 'const _Bool')))
        (ImplicitCastExpr 0x9ed7e80 <col:39> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0x9ed7e18 <col:39> '_Bool' false))))
    (ReturnStmt 0x9ed7f30 <line:89:2, col:33>
      (CallExpr 0x9ed7f10 <col:9, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ed7ec0 <col:9, col:22> '<dependent type>' lvalue)
        (DeclRefExpr 0x9ed7ef4 <col:30> 'int_type':'typename traits_type::int_type' lvalue ParmVar 0x9ed7750 '__c' 'int_type':'typename traits_type::int_type')))
    <<<NULL>>>)
  (DeclStmt 0x9ed8030 <line:91:7, col:58>
    0x9ed7f70 "const __size_type __capacity =
      (CallExpr 0x9ed8010 <col:38, col:57> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ed7fd8 <col:38, col:48> '<dependent type>' lvalue
          (MemberExpr 0x9ed7fb8 <col:38> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0x9eca4b0
            (CXXThisExpr 0x9ed7fa8 <col:38> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))")
  (DeclStmt 0x9ed8110 <line:92:7, col:58>
    0x9ed8050 "const __size_type __max_size =
      (CallExpr 0x9ed80f0 <col:38, col:57> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ed80b8 <col:38, col:48> '<dependent type>' lvalue
          (MemberExpr 0x9ed8098 <col:38> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0x9eca4b0
            (CXXThisExpr 0x9ed8088 <col:38> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))")
  (DeclStmt 0x9ed82a8 <line:93:7, col:58>
    0x9ed8130 "const bool __testput =
      (CXXOperatorCallExpr 0x9ed8280 <col:30, col:57> '<dependent type>'
        (UnresolvedLookupExpr 0x9ed8238 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40ad0 0x9b57c70 0x9b5ddb0 0x9cbc120 0x9cbc650 0x9cbcb80)
        (CallExpr 0x9ed81b0 <col:30, col:41> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9ed8178 <col:30, col:36> '<dependent type>' lvalue
            (CXXThisExpr 0x9ed8168 <col:30> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
        (CallExpr 0x9ed8218 <col:45, col:57> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9ed81e0 <col:45, col:51> '<dependent type>' lvalue
            (CXXThisExpr 0x9ed81d0 <col:45> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))")
  (IfStmt 0x9ed84a0 <line:94:7, line:95:26>
    <<<NULL>>>
    (CallExpr 0x9ed83f0 <line:94:11, col:73> '<dependent type>'
      (DeclRefExpr 0x9ed82b8 <col:11> 'long (long, long)' lvalue Function 0x9ca0bd0 '__builtin_expect' 'long (long, long)')
      (BinaryOperator 0x9ed83c8 <col:28, col:56> '<dependent type>' '&&'
        (UnaryOperator 0x9ed82f8 <col:28, col:29> '_Bool' prefix '!'
          (ImplicitCastExpr 0x9ed82e8 <col:29> '_Bool' <LValueToRValue>
            (DeclRefExpr 0x9ed82d0 <col:29> 'const _Bool' lvalue Var 0x9ed8130 '__testput' 'const _Bool')))
        (CXXOperatorCallExpr 0x9ed83a0 <col:42, col:56> '<dependent type>'
          (UnresolvedLookupExpr 0x9ed8340 <col:53, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90 0x9cb91e0 0x9cb9c50 0x9cba490 0x9cbaa00 0x9db0390)
          (DeclRefExpr 0x9ed830c <col:42> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0x9ed7f70 '__capacity' 'const __size_type':'const typename __string_type::size_type')
          (DeclRefExpr 0x9ed8324 <col:56> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0x9ed8050 '__max_size' 'const __size_type':'const typename __string_type::size_type')))
      (CXXBoolLiteralExpr 0x9ed83e0 <col:68> '_Bool' false))
    (ReturnStmt 0x9ed8490 <line:95:2, col:26>
      (CallExpr 0x9ed8470 <col:9, col:26> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ed8438 <col:9, col:22> '<dependent type>' lvalue)))
    <<<NULL>>>)
  (DeclStmt 0x9ed8598 <line:99:7, col:62>
    0x9ed84d0 "const char_type __conv =
      (CallExpr 0x9ed8578 <col:32, col:61> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ed8528 <col:32, col:45> '<dependent type>' lvalue)
        (DeclRefExpr 0x9ed855c <col:58> 'int_type':'typename traits_type::int_type' lvalue ParmVar 0x9ed7750 '__c' 'int_type':'typename traits_type::int_type'))")
  (IfStmt 0x9ed9148 <line:100:7, line:124:18>
    <<<NULL>>>
    (UnaryOperator 0x9ed85d0 <line:100:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9ed85c0 <col:12> '_Bool' <LValueToRValue>
        (DeclRefExpr 0x9ed85a8 <col:12> 'const _Bool' lvalue Var 0x9ed8130 '__testput' 'const _Bool')))
    (CompoundStmt 0x9ed9068 <line:101:2, line:122:2>
      (DeclStmt 0x9ed8758 <line:111:4, line:112:25>
        0x9ed85f0 "const __size_type __opt_len =
          (CallExpr 0x9ed8730 <line:111:34, line:112:24> '<dependent type>'
            (UnresolvedLookupExpr 0x9ed8648 <line:111:34, col:39> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b76750 0x9b76ec0)
            (CXXUnresolvedConstructExpr 0x9ed86d0 <col:43, col:69> '__size_type':'typename __string_type::size_type'
              (BinaryOperator 0x9ed86b8 <col:55, col:59> '<dependent type>' '*'
                (IntegerLiteral 0x9ed8688 <col:55> 'int' 2)
                (DeclRefExpr 0x9ed86a0 <col:59> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0x9ed7f70 '__capacity' 'const __size_type':'const typename __string_type::size_type')))
            (CXXUnresolvedConstructExpr 0x9ed8710 <line:112:8, col:23> '__size_type':'typename __string_type::size_type'
              (IntegerLiteral 0x9ed86f8 <col:20> 'int' 512)))")
      (DeclStmt 0x9ed8850 <line:113:4, col:61>
        0x9ed8770 "const __size_type __len =
          (CallExpr 0x9ed8828 <col:30, col:60> '<dependent type>'
            (UnresolvedLookupExpr 0x9ed87c0 <col:30, col:35> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b76440 0x9b76b30)
            (DeclRefExpr 0x9ed87f8 <col:39> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0x9ed85f0 '__opt_len' 'const __size_type':'const typename __string_type::size_type')
            (DeclRefExpr 0x9ed8810 <col:50> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0x9ed8050 '__max_size' 'const __size_type':'const typename __string_type::size_type'))")
      (DeclStmt 0x9ed88a8 <line:114:4, col:23>
        0x9ed8870 "__string_type __tmp")
      (CallExpr 0x9ed8920 <line:115:4, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ed88d0 <col:4, col:10> '<dependent type>' lvalue
          (DeclRefExpr 0x9ed88b8 <col:4> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue Var 0x9ed8870 '__tmp' '__string_type':'basic_string<char_type, _Traits, _Alloc>'))
        (DeclRefExpr 0x9ed8904 <col:18> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0x9ed8770 '__len' 'const __size_type':'const typename __string_type::size_type'))
      (IfStmt 0x9ed8bb8 <line:116:4, line:117:63>
        <<<NULL>>>
        (CallExpr 0x9ed8988 <line:116:8, col:20> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9ed8950 <col:8, col:14> '<dependent type>' lvalue
            (CXXThisExpr 0x9ed8940 <col:8> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
        (CallExpr 0x9ed8b90 <line:117:6, col:63> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9ed89c0 <col:6, col:12> '<dependent type>' lvalue
            (DeclRefExpr 0x9ed89a4 <col:6> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue Var 0x9ed8870 '__tmp' '__string_type':'basic_string<char_type, _Traits, _Alloc>'))
          (CallExpr 0x9ed8a40 <col:19, col:31> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9ed8a08 <col:19, col:25> '<dependent type>' lvalue
              (CXXThisExpr 0x9ed89f8 <col:19> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
          (CXXOperatorCallExpr 0x9ed8b68 <col:34, col:62> '<dependent type>'
            (UnresolvedLookupExpr 0x9ed8b30 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
            (CallExpr 0x9ed8aa8 <col:34, col:46> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9ed8a70 <col:34, col:40> '<dependent type>' lvalue
                (CXXThisExpr 0x9ed8a60 <col:34> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
            (CallExpr 0x9ed8b10 <col:50, col:62> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9ed8ad8 <col:50, col:56> '<dependent type>' lvalue
                (CXXThisExpr 0x9ed8ac8 <col:50> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))))
        <<<NULL>>>)
      (CallExpr 0x9ed8c40 <line:118:4, col:26> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ed8bf0 <col:4, col:10> '<dependent type>' lvalue
          (DeclRefExpr 0x9ed8bd4 <col:4> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue Var 0x9ed8870 '__tmp' '__string_type':'basic_string<char_type, _Traits, _Alloc>'))
        (DeclRefExpr 0x9ed8c24 <col:20> 'const char_type':'const _CharT' lvalue Var 0x9ed84d0 '__conv' 'const char_type':'const _CharT'))
      (CallExpr 0x9ed8ce0 <line:119:4, col:24> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ed8c90 <col:4, col:14> '<dependent type>' lvalue
          (MemberExpr 0x9ed8c70 <col:4> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0x9eca4b0
            (CXXThisExpr 0x9ed8c60 <col:4> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
        (DeclRefExpr 0x9ed8cc4 <col:19> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue Var 0x9ed8870 '__tmp' '__string_type':'basic_string<char_type, _Traits, _Alloc>'))
      (CallExpr 0x9ed9040 <line:120:4, line:121:63> '<dependent type>'
        (MemberExpr 0x9ed8d10 <line:120:4> '<bound member function type>' ->_M_sync 0x9ecb490
          (CXXThisExpr 0x9ed8d00 <col:4> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
        (CXXConstCastExpr 0x9ed8dc8 <col:12, col:51> 'char_type *' const_cast<char_type *> <NoOp>
          (CallExpr 0x9ed8d98 <col:35, col:50> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9ed8d60 <col:35, col:45> '<dependent type>' lvalue
              (MemberExpr 0x9ed8d40 <col:35> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0x9eca4b0
                (CXXThisExpr 0x9ed8d30 <col:35> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))))
        (CXXOperatorCallExpr 0x9ed8ee8 <line:121:5, col:32> '<dependent type>'
          (UnresolvedLookupExpr 0x9ed8eb0 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
          (CallExpr 0x9ed8e28 <col:5, col:16> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9ed8df0 <col:5, col:11> '<dependent type>' lvalue
              (CXXThisExpr 0x9ed8de0 <col:5> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
          (CallExpr 0x9ed8e90 <col:20, col:32> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9ed8e58 <col:20, col:26> '<dependent type>' lvalue
              (CXXThisExpr 0x9ed8e48 <col:20> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
        (CXXOperatorCallExpr 0x9ed9018 <col:35, col:62> '<dependent type>'
          (UnresolvedLookupExpr 0x9ed8fe0 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
          (CallExpr 0x9ed8f58 <col:35, col:46> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9ed8f20 <col:35, col:41> '<dependent type>' lvalue
              (CXXThisExpr 0x9ed8f10 <col:35> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
          (CallExpr 0x9ed8fc0 <col:50, col:62> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9ed8f88 <col:50, col:56> '<dependent type>' lvalue
              (CXXThisExpr 0x9ed8f78 <col:50> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))))
    (BinaryOperator 0x9ed9130 <line:124:2, col:18> '<dependent type>' '='
      (UnaryOperator 0x9ed9100 <col:2, col:14> '<dependent type>' prefix '*'
        (CallExpr 0x9ed90e0 <col:3, col:14> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9ed90a8 <col:3, col:9> '<dependent type>' lvalue
            (CXXThisExpr 0x9ed9098 <col:3> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
      (DeclRefExpr 0x9ed9114 <col:18> 'const char_type':'const _CharT' lvalue Var 0x9ed84d0 '__conv' 'const char_type':'const _CharT')))
  (CallExpr 0x9ed91c8 <line:125:7, col:20> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9ed9178 <col:7, col:13> '<dependent type>' lvalue
      (CXXThisExpr 0x9ed9168 <col:7> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
    (IntegerLiteral 0x9ed91b0 <col:19> 'int' 1))
  (ReturnStmt 0x9ed9200 <line:126:7, col:14>
    (DeclRefExpr 0x9ed91e8 <col:14> 'int_type':'typename traits_type::int_type' lvalue ParmVar 0x9ed7750 '__c' 'int_type':'typename traits_type::int_type')))


    typename basic_stringbuf<_CharT, _Traits, _Alloc>::int_type underflow() (CompoundStmt 0x9ed9ec8 </usr/include/c++/4.6/bits/sstream.tcc:133:5, line:145:5>
  (DeclStmt 0x9ed9a10 <line:134:7, col:42>
    0x9ed9960 "int_type __ret =
      (CallExpr 0x9ed99f0 <col:24, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ed99b8 <col:24, col:37> '<dependent type>' lvalue))")
  (DeclStmt 0x9ed9b58 <line:135:7, col:57>
    0x9ed9a30 "const bool __testin =
      (CXXOperatorCallExpr 0x9ed9b30 <col:29, col:55> '<dependent type>'
        (UnresolvedLookupExpr 0x9ed9af0 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9d5b750 0x9d68890 0x9d69b00)
        (CXXDependentScopeMemberExpr 0x9ed9a78 <col:29, col:35> '<dependent type>' lvalue
          (CXXThisExpr 0x9ed9a68 <col:29> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x9ed9acc <col:45, col:55> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9d6bcd0 'in' 'const openmode':'const enum std::_Ios_Openmode'))")
  (IfStmt 0x9ed9e80 <line:136:7, line:143:2>
    <<<NULL>>>
    (ImplicitCastExpr 0x9ed9b80 <line:136:11> '_Bool' <LValueToRValue>
      (DeclRefExpr 0x9ed9b68 <col:11> 'const _Bool' lvalue Var 0x9ed9a30 '__testin' 'const _Bool'))
    (CompoundStmt 0x9ed9e68 <line:137:2, line:143:2>
      (CallExpr 0x9ed9bc0 <line:139:4, col:20> '<dependent type>'
        (MemberExpr 0x9ed9ba0 <col:4> '<bound member function type>' ->_M_update_egptr 0x9ecb520
          (CXXThisExpr 0x9ed9b90 <col:4> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
      (IfStmt 0x9ed9e48 <line:141:4, line:142:52>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9ed9cf8 <line:141:8, col:35> '<dependent type>'
          (UnresolvedLookupExpr 0x9ed9cb0 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40ad0 0x9b57c70 0x9b5ddb0 0x9cbc120 0x9cbc650 0x9cbcb80)
          (CallExpr 0x9ed9c28 <col:8, col:19> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9ed9bf0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9ed9be0 <col:8> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
          (CallExpr 0x9ed9c90 <col:23, col:35> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9ed9c58 <col:23, col:29> '<dependent type>' lvalue
              (CXXThisExpr 0x9ed9c48 <col:23> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
        (BinaryOperator 0x9ed9e30 <line:142:6, col:52> '<dependent type>' '='
          (DeclRefExpr 0x9ed9d1c <col:6> 'int_type':'typename traits_type::int_type' lvalue Var 0x9ed9960 '__ret' 'int_type':'typename traits_type::int_type')
          (CallExpr 0x9ed9e10 <col:14, col:52> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9ed9d58 <col:14, col:27> '<dependent type>' lvalue)
            (UnaryOperator 0x9ed9df8 <col:39, col:51> '<dependent type>' prefix '*'
              (CallExpr 0x9ed9dd8 <col:40, col:51> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9ed9da0 <col:40, col:46> '<dependent type>' lvalue
                  (CXXThisExpr 0x9ed9d90 <col:40> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9ed9eb8 <line:144:7, col:14>
    (DeclRefExpr 0x9ed9e9c <col:14> 'int_type':'typename traits_type::int_type' lvalue Var 0x9ed9960 '__ret' 'int_type':'typename traits_type::int_type')))


    typename basic_stringbuf<_CharT, _Traits, _Alloc>::pos_type seekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode = (CXXOperatorCallExpr 0x9ecbac8 </usr/include/c++/4.6/sstream:217:36, col:61> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0x9ecbab8 <col:49, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0x9ecbaa0 <col:49, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9d68ac0 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0x9ecba80 <col:36, col:46> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x9ecba1c <col:36, col:46> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9d6bcd0 'in' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0x9ecba90 <col:51, col:61> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x9ecba5c <col:51, col:61> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9d6bd30 'out' 'const openmode':'const enum std::_Ios_Openmode')))
) (CompoundStmt 0x9edfb58 </usr/include/c++/4.6/bits/sstream.tcc:151:5, line:193:5>
  (DeclStmt 0x9edddd8 <line:152:7, col:47>
    0x9eddd20 "pos_type __ret =
      (CXXUnresolvedConstructExpr 0x9edddb8 <col:25, col:46> 'pos_type':'typename traits_type::pos_type'
        (CXXUnresolvedConstructExpr 0x9eddd98 <col:34, col:45> 'off_type':'typename traits_type::off_type'
          (UnaryOperator 0x9eddd80 <col:43, col:44> 'int' prefix '-'
            (IntegerLiteral 0x9eddd68 <col:44> 'int' 1))))")
  (DeclStmt 0x9ede050 <line:153:7, col:67>
    0x9edddf0 "bool __testin =
      (CXXOperatorCallExpr 0x9ede028 <col:23, col:66> '<dependent type>'
        (UnresolvedLookupExpr 0x9eddfd0 <col:63, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b412d0 0x9ac7fa0 0x9b5e2b0 0x9ba7d20 0x9bc7160 0x9bc74d0 0x9cbb090 0x9cbb590 0x9cbbad0 0x9db08a0)
        (ParenExpr 0x9eddfa0 <col:23, col:61> '<dependent type>'
          (CXXOperatorCallExpr 0x9eddf78 <col:24, col:55> '<dependent type>'
            (UnresolvedLookupExpr 0x9eddf38 <col:53, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9d5b750 0x9d68890 0x9d69b00)
            (CXXOperatorCallExpr 0x9eddef8 <col:24, col:45> '<dependent type>'
              (UnresolvedLookupExpr 0x9eddeb8 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9d5b750 0x9d68890 0x9d69b00)
              (DeclRefExpr 0x9edde50 <col:24, col:34> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9d6bcd0 'in' 'const openmode':'const enum std::_Ios_Openmode')
              (CXXDependentScopeMemberExpr 0x9edde80 <col:39, col:45> '<dependent type>' lvalue
                (CXXThisExpr 0x9edde70 <col:39> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
            (DeclRefExpr 0x9eddf1c <col:55> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0x9edda80 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode')))
        (IntegerLiteral 0x9eddfb8 <col:66> 'int' 0))")
  (DeclStmt 0x9ede2d0 <line:154:7, col:69>
    0x9ede070 "bool __testout =
      (CXXOperatorCallExpr 0x9ede2a8 <col:24, col:68> '<dependent type>'
        (UnresolvedLookupExpr 0x9ede250 <col:65, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b412d0 0x9ac7fa0 0x9b5e2b0 0x9ba7d20 0x9bc7160 0x9bc74d0 0x9cbb090 0x9cbb590 0x9cbbad0 0x9db08a0)
        (ParenExpr 0x9ede220 <col:24, col:63> '<dependent type>'
          (CXXOperatorCallExpr 0x9ede1f8 <col:25, col:57> '<dependent type>'
            (UnresolvedLookupExpr 0x9ede1b8 <col:55, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9d5b750 0x9d68890 0x9d69b00)
            (CXXOperatorCallExpr 0x9ede178 <col:25, col:47> '<dependent type>'
              (UnresolvedLookupExpr 0x9ede138 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9d5b750 0x9d68890 0x9d69b00)
              (DeclRefExpr 0x9ede0d0 <col:25, col:35> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9d6bd30 'out' 'const openmode':'const enum std::_Ios_Openmode')
              (CXXDependentScopeMemberExpr 0x9ede100 <col:41, col:47> '<dependent type>' lvalue
                (CXXThisExpr 0x9ede0f0 <col:41> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
            (DeclRefExpr 0x9ede19c <col:57> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0x9edda80 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode')))
        (IntegerLiteral 0x9ede238 <col:68> 'int' 0))")
  (DeclStmt 0x9ede490 <line:155:7, col:78>
    0x9ede2f0 "const bool __testboth =
      (BinaryOperator 0x9ede440 <col:31, col:75> '_Bool' '&&'
        (BinaryOperator 0x9ede378 <col:31, col:43> '_Bool' '&&'
          (ImplicitCastExpr 0x9ede358 <col:31> '_Bool' <LValueToRValue>
            (DeclRefExpr 0x9ede324 <col:31> '_Bool' lvalue Var 0x9edddf0 '__testin' '_Bool'))
          (ImplicitCastExpr 0x9ede368 <col:43> '_Bool' <LValueToRValue>
            (DeclRefExpr 0x9ede33c <col:43> '_Bool' lvalue Var 0x9ede070 '__testout' '_Bool')))
        (BinaryOperator 0x9ede428 <col:56, col:75> '_Bool' '!='
          (ImplicitCastExpr 0x9ede408 <col:56> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9ede3e8 <col:56> 'class ios_base::seekdir':'enum std::_Ios_Seekdir' <LValueToRValue>
              (DeclRefExpr 0x9ede390 <col:56> 'class ios_base::seekdir':'enum std::_Ios_Seekdir' lvalue ParmVar 0x9edda10 '__way' 'class ios_base::seekdir':'enum std::_Ios_Seekdir')))
          (ImplicitCastExpr 0x9ede418 <col:65, col:75> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9ede3f8 <col:65, col:75> 'seekdir':'enum std::_Ios_Seekdir' <LValueToRValue>
              (DeclRefExpr 0x9ede3c4 <col:65, col:75> 'const seekdir':'const enum std::_Ios_Seekdir' lvalue Var 0x9d6bea0 'cur' 'const seekdir':'const enum std::_Ios_Seekdir')))))")
  (CompoundAssignOperator 0x9ede5d0 <line:156:7, col:43> '_Bool' lvalue '&=' ComputeLHSTy='int' ComputeResultTy='int'
    (DeclRefExpr 0x9ede4a0 <col:7> '_Bool' lvalue Var 0x9edddf0 '__testin' '_Bool')
    (ImplicitCastExpr 0x9ede5c0 <col:19, col:43> 'int' <IntegralCast>
      (UnaryOperator 0x9ede5a8 <col:19, col:43> '_Bool' prefix '!'
        (ImplicitCastExpr 0x9ede598 <col:20, col:43> '_Bool' <IntegralToBoolean>
          (ParenExpr 0x9ede580 <col:20, col:43> 'enum std::_Ios_Openmode'
            (CXXOperatorCallExpr 0x9ede558 <col:21, col:40> 'enum std::_Ios_Openmode'
              (ImplicitCastExpr 0x9ede548 <col:28, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9ede530 <col:28, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9d68890 'operator&' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
              (ImplicitCastExpr 0x9ede510 <col:21> 'class ios_base::openmode':'enum std::_Ios_Openmode' <LValueToRValue>
                (DeclRefExpr 0x9ede4b8 <col:21> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0x9edda80 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode'))
              (ImplicitCastExpr 0x9ede520 <col:30, col:40> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
                (DeclRefExpr 0x9ede4ec <col:30, col:40> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9d6bd30 'out' 'const openmode':'const enum std::_Ios_Openmode'))))))))
  (CompoundAssignOperator 0x9ede720 <line:157:7, col:43> '_Bool' lvalue '&=' ComputeLHSTy='int' ComputeResultTy='int'
    (DeclRefExpr 0x9ede5f0 <col:7> '_Bool' lvalue Var 0x9ede070 '__testout' '_Bool')
    (ImplicitCastExpr 0x9ede710 <col:20, col:43> 'int' <IntegralCast>
      (UnaryOperator 0x9ede6f8 <col:20, col:43> '_Bool' prefix '!'
        (ImplicitCastExpr 0x9ede6e8 <col:21, col:43> '_Bool' <IntegralToBoolean>
          (ParenExpr 0x9ede6d0 <col:21, col:43> 'enum std::_Ios_Openmode'
            (CXXOperatorCallExpr 0x9ede6a8 <col:22, col:41> 'enum std::_Ios_Openmode'
              (ImplicitCastExpr 0x9ede698 <col:29, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9ede680 <col:29, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9d68890 'operator&' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
              (ImplicitCastExpr 0x9ede660 <col:22> 'class ios_base::openmode':'enum std::_Ios_Openmode' <LValueToRValue>
                (DeclRefExpr 0x9ede608 <col:22> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0x9edda80 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode'))
              (ImplicitCastExpr 0x9ede670 <col:31, col:41> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
                (DeclRefExpr 0x9ede63c <col:31, col:41> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9d6bcd0 'in' 'const openmode':'const enum std::_Ios_Openmode'))))))))
  (DeclStmt 0x9ede8c0 <line:161:7, col:72>
    0x9ede770 "const char_type *__beg =
      (ConditionalOperator 0x9ede8a0 <col:32, col:71> '<dependent type>'
        (ImplicitCastExpr 0x9ede890 <col:32> '_Bool' <LValueToRValue>
          (DeclRefExpr 0x9ede7a4 <col:32> '_Bool' lvalue Var 0x9edddf0 '__testin' '_Bool'))
        (CallExpr 0x9ede808 <col:43, col:55> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9ede7d0 <col:43, col:49> '<dependent type>' lvalue
            (CXXThisExpr 0x9ede7c0 <col:43> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
        (CallExpr 0x9ede870 <col:59, col:71> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9ede838 <col:59, col:65> '<dependent type>' lvalue
            (CXXThisExpr 0x9ede828 <col:59> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))")
  (IfStmt 0x9edfb10 <line:162:7, line:191:2>
    <<<NULL>>>
    (BinaryOperator 0x9edea08 <line:162:11, col:68> '<dependent type>' '&&'
      (ParenExpr 0x9ede930 <col:11, col:27> '<dependent type>'
        (BinaryOperator 0x9ede918 <col:12, col:22> '<dependent type>' '||'
          (DeclRefExpr 0x9ede8d0 <col:12> 'const char_type *' lvalue Var 0x9ede770 '__beg' 'const char_type *')
          (UnaryOperator 0x9ede900 <col:21, col:22> '<dependent type>' prefix '!'
            (DeclRefExpr 0x9ede8e8 <col:22> 'off_type':'typename traits_type::off_type' lvalue ParmVar 0x9edd9a0 '__off' 'off_type':'typename traits_type::off_type'))))
      (ParenExpr 0x9ede9f0 <col:32, col:68> '_Bool'
        (BinaryOperator 0x9ede9d8 <col:33, col:58> '_Bool' '||'
          (BinaryOperator 0x9ede998 <col:33, col:45> '_Bool' '||'
            (ImplicitCastExpr 0x9ede978 <col:33> '_Bool' <LValueToRValue>
              (DeclRefExpr 0x9ede944 <col:33> '_Bool' lvalue Var 0x9edddf0 '__testin' '_Bool'))
            (ImplicitCastExpr 0x9ede988 <col:45> '_Bool' <LValueToRValue>
              (DeclRefExpr 0x9ede95c <col:45> '_Bool' lvalue Var 0x9ede070 '__testout' '_Bool')))
          (ImplicitCastExpr 0x9ede9c8 <col:58> '_Bool' <LValueToRValue>
            (DeclRefExpr 0x9ede9b0 <col:58> 'const _Bool' lvalue Var 0x9ede2f0 '__testboth' 'const _Bool')))))
    (CompoundStmt 0x9edfae8 <line:163:2, line:191:2>
      (CallExpr 0x9edea50 <line:164:4, col:20> '<dependent type>'
        (MemberExpr 0x9edea30 <col:4> '<bound member function type>' ->_M_update_egptr 0x9ecb520
          (CXXThisExpr 0x9edea20 <col:4> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
      (DeclStmt 0x9edead0 <line:166:4, col:30>
        0x9edea80 "off_type __newoffi =
          (DeclRefExpr 0x9edeab4 <col:25> 'off_type':'typename traits_type::off_type' lvalue ParmVar 0x9edd9a0 '__off' 'off_type':'typename traits_type::off_type')")
      (DeclStmt 0x9edeb40 <line:167:4, col:34>
        0x9edeaf0 "off_type __newoffo =
          (DeclRefExpr 0x9edeb24 <col:25> 'off_type':'typename traits_type::off_type' lvalue Var 0x9edea80 '__newoffi' 'off_type':'typename traits_type::off_type')")
      (IfStmt 0x9edf098 <line:168:4, line:174:47>
        <<<NULL>>>
        (BinaryOperator 0x9edebe8 <line:168:8, col:27> '_Bool' '=='
          (ImplicitCastExpr 0x9edebc8 <col:8> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9edeba8 <col:8> 'class ios_base::seekdir':'enum std::_Ios_Seekdir' <LValueToRValue>
              (DeclRefExpr 0x9edeb50 <col:8> 'class ios_base::seekdir':'enum std::_Ios_Seekdir' lvalue ParmVar 0x9edda10 '__way' 'class ios_base::seekdir':'enum std::_Ios_Seekdir')))
          (ImplicitCastExpr 0x9edebd8 <col:17, col:27> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9edebb8 <col:17, col:27> 'seekdir':'enum std::_Ios_Seekdir' <LValueToRValue>
              (DeclRefExpr 0x9edeb84 <col:17, col:27> 'const seekdir':'const enum std::_Ios_Seekdir' lvalue Var 0x9d6bea0 'cur' 'const seekdir':'const enum std::_Ios_Seekdir'))))
        (CompoundStmt 0x9edee30 <line:169:6, line:172:6>
          (CompoundAssignOperator 0x9edecf8 <line:170:8, col:36> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
            (DeclRefExpr 0x9edec00 <col:8> 'off_type':'typename traits_type::off_type' lvalue Var 0x9edea80 '__newoffi' 'off_type':'typename traits_type::off_type')
            (CXXOperatorCallExpr 0x9edecd0 <col:21, col:36> '<dependent type>'
              (UnresolvedLookupExpr 0x9edec98 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
              (CallExpr 0x9edec60 <col:21, col:32> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9edec28 <col:21, col:27> '<dependent type>' lvalue
                  (CXXThisExpr 0x9edec18 <col:21> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
              (DeclRefExpr 0x9edec7c <col:36> 'const char_type *' lvalue Var 0x9ede770 '__beg' 'const char_type *')))
          (CompoundAssignOperator 0x9edee10 <line:171:8, col:36> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
            (DeclRefExpr 0x9eded18 <col:8> 'off_type':'typename traits_type::off_type' lvalue Var 0x9edeaf0 '__newoffo' 'off_type':'typename traits_type::off_type')
            (CXXOperatorCallExpr 0x9edede8 <col:21, col:36> '<dependent type>'
              (UnresolvedLookupExpr 0x9ededb0 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
              (CallExpr 0x9eded78 <col:21, col:32> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9eded40 <col:21, col:27> '<dependent type>' lvalue
                  (CXXThisExpr 0x9eded30 <col:21> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
              (DeclRefExpr 0x9eded94 <col:36> 'const char_type *' lvalue Var 0x9ede770 '__beg' 'const char_type *'))))
        (IfStmt 0x9edf078 <line:173:9, line:174:47>
          <<<NULL>>>
          (BinaryOperator 0x9edeee0 <line:173:13, col:32> '_Bool' '=='
            (ImplicitCastExpr 0x9edeec0 <col:13> 'int' <IntegralCast>
              (ImplicitCastExpr 0x9edeea0 <col:13> 'class ios_base::seekdir':'enum std::_Ios_Seekdir' <LValueToRValue>
                (DeclRefExpr 0x9edee48 <col:13> 'class ios_base::seekdir':'enum std::_Ios_Seekdir' lvalue ParmVar 0x9edda10 '__way' 'class ios_base::seekdir':'enum std::_Ios_Seekdir')))
            (ImplicitCastExpr 0x9edeed0 <col:22, col:32> 'int' <IntegralCast>
              (ImplicitCastExpr 0x9edeeb0 <col:22, col:32> 'seekdir':'enum std::_Ios_Seekdir' <LValueToRValue>
                (DeclRefExpr 0x9edee7c <col:22, col:32> 'const seekdir':'const enum std::_Ios_Seekdir' lvalue Var 0x9d6bf00 'end' 'const seekdir':'const enum std::_Ios_Seekdir'))))
          (BinaryOperator 0x9edf060 <line:174:6, col:47> '<dependent type>' '='
            (DeclRefExpr 0x9edef2c <col:6> 'off_type':'typename traits_type::off_type' lvalue Var 0x9edeaf0 '__newoffo' 'off_type':'typename traits_type::off_type')
            (CompoundAssignOperator 0x9edf040 <col:18, col:47> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
              (DeclRefExpr 0x9edef44 <col:18> 'off_type':'typename traits_type::off_type' lvalue Var 0x9edea80 '__newoffi' 'off_type':'typename traits_type::off_type')
              (CXXOperatorCallExpr 0x9edf018 <col:31, col:47> '<dependent type>'
                (UnresolvedLookupExpr 0x9edefe0 <col:45, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
                (CallExpr 0x9edefa8 <col:31, col:43> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9edef70 <col:31, col:37> '<dependent type>' lvalue
                    (CXXThisExpr 0x9edef60 <col:31> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
                (DeclRefExpr 0x9edefc4 <col:47> 'const char_type *' lvalue Var 0x9ede770 '__beg' 'const char_type *'))))
          <<<NULL>>>))
      (IfStmt 0x9edf628 <line:176:4, line:183:6>
        <<<NULL>>>
        (BinaryOperator 0x9edf358 <line:176:8, line:178:36> '<dependent type>' '&&'
          (BinaryOperator 0x9edf1d8 <line:176:8, line:177:24> '<dependent type>' '&&'
            (ParenExpr 0x9edf120 <line:176:8, col:31> '_Bool'
              (BinaryOperator 0x9edf108 <col:9, col:21> '_Bool' '||'
                (ImplicitCastExpr 0x9edf0e8 <col:9> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0x9edf0b4 <col:9> '_Bool' lvalue Var 0x9edddf0 '__testin' '_Bool'))
                (ImplicitCastExpr 0x9edf0f8 <col:21> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0x9edf0cc <col:21> 'const _Bool' lvalue Var 0x9ede2f0 '__testboth' 'const _Bool'))))
            (CXXOperatorCallExpr 0x9edf1b0 <line:177:11, col:24> '<dependent type>'
              (UnresolvedLookupExpr 0x9edf168 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b436e0 0x9ac8bd0 0x9b5f010 0x9cbf3a0 0x9cbf900 0x9cbfe30)
              (DeclRefExpr 0x9edf134 <col:11> 'off_type':'typename traits_type::off_type' lvalue Var 0x9edea80 '__newoffi' 'off_type':'typename traits_type::off_type')
              (IntegerLiteral 0x9edf150 <col:24> 'int' 0)))
          (CXXOperatorCallExpr 0x9edf330 <line:178:11, col:36> '<dependent type>'
            (UnresolvedLookupExpr 0x9edf2e8 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b436e0 0x9ac8bd0 0x9b5f010 0x9cbf3a0 0x9cbf900 0x9cbfe30)
            (CXXOperatorCallExpr 0x9edf2a8 <col:11, col:27> '<dependent type>'
              (UnresolvedLookupExpr 0x9edf270 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
              (CallExpr 0x9edf238 <col:11, col:23> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9edf200 <col:11, col:17> '<dependent type>' lvalue
                  (CXXThisExpr 0x9edf1f0 <col:11> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
              (DeclRefExpr 0x9edf254 <col:27> 'const char_type *' lvalue Var 0x9ede770 '__beg' 'const char_type *'))
            (DeclRefExpr 0x9edf2cc <col:36> 'off_type':'typename traits_type::off_type' lvalue Var 0x9edea80 '__newoffi' 'off_type':'typename traits_type::off_type')))
        (CompoundStmt 0x9edf610 <line:179:6, line:183:6>
          (CallExpr 0x9edf578 <line:180:8, line:181:18> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9edf380 <line:180:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9edf370 <col:8> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
            (CallExpr 0x9edf400 <col:19, col:31> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9edf3c8 <col:19, col:25> '<dependent type>' lvalue
                (CXXThisExpr 0x9edf3b8 <col:19> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
            (CXXOperatorCallExpr 0x9edf4e8 <col:34, col:50> '<dependent type>'
              (UnresolvedLookupExpr 0x9edf4a0 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9ce1500 0x9ce2100 0x9cb8030 0x9cb8830)
              (CallExpr 0x9edf468 <col:34, col:46> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9edf430 <col:34, col:40> '<dependent type>' lvalue
                  (CXXThisExpr 0x9edf420 <col:34> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
              (DeclRefExpr 0x9edf484 <col:50> 'off_type':'typename traits_type::off_type' lvalue Var 0x9edea80 '__newoffi' 'off_type':'typename traits_type::off_type'))
            (CallExpr 0x9edf558 <line:181:5, col:17> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9edf520 <col:5, col:11> '<dependent type>' lvalue
                (CXXThisExpr 0x9edf510 <col:5> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
          (BinaryOperator 0x9edf5f8 <line:182:8, col:34> '<dependent type>' '='
            (DeclRefExpr 0x9edf5a0 <col:8> 'pos_type':'typename traits_type::pos_type' lvalue Var 0x9eddd20 '__ret' 'pos_type':'typename traits_type::pos_type')
            (CXXUnresolvedConstructExpr 0x9edf5d8 <col:16, col:34> 'pos_type':'typename traits_type::pos_type'
              (DeclRefExpr 0x9edf5c0 <col:25> 'off_type':'typename traits_type::off_type' lvalue Var 0x9edea80 '__newoffi' 'off_type':'typename traits_type::off_type'))))
        <<<NULL>>>)
      (IfStmt 0x9edfac8 <line:184:4, line:190:6>
        <<<NULL>>>
        (BinaryOperator 0x9edf8e8 <line:184:8, line:186:36> '<dependent type>' '&&'
          (BinaryOperator 0x9edf768 <line:184:8, line:185:24> '<dependent type>' '&&'
            (ParenExpr 0x9edf6b0 <line:184:8, col:32> '_Bool'
              (BinaryOperator 0x9edf698 <col:9, col:22> '_Bool' '||'
                (ImplicitCastExpr 0x9edf678 <col:9> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0x9edf644 <col:9> '_Bool' lvalue Var 0x9ede070 '__testout' '_Bool'))
                (ImplicitCastExpr 0x9edf688 <col:22> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0x9edf65c <col:22> 'const _Bool' lvalue Var 0x9ede2f0 '__testboth' 'const _Bool'))))
            (CXXOperatorCallExpr 0x9edf740 <line:185:11, col:24> '<dependent type>'
              (UnresolvedLookupExpr 0x9edf6f8 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b436e0 0x9ac8bd0 0x9b5f010 0x9cbf3a0 0x9cbf900 0x9cbfe30)
              (DeclRefExpr 0x9edf6c4 <col:11> 'off_type':'typename traits_type::off_type' lvalue Var 0x9edeaf0 '__newoffo' 'off_type':'typename traits_type::off_type')
              (IntegerLiteral 0x9edf6e0 <col:24> 'int' 0)))
          (CXXOperatorCallExpr 0x9edf8c0 <line:186:11, col:36> '<dependent type>'
            (UnresolvedLookupExpr 0x9edf878 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b436e0 0x9ac8bd0 0x9b5f010 0x9cbf3a0 0x9cbf900 0x9cbfe30)
            (CXXOperatorCallExpr 0x9edf838 <col:11, col:27> '<dependent type>'
              (UnresolvedLookupExpr 0x9edf800 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
              (CallExpr 0x9edf7c8 <col:11, col:23> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9edf790 <col:11, col:17> '<dependent type>' lvalue
                  (CXXThisExpr 0x9edf780 <col:11> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
              (DeclRefExpr 0x9edf7e4 <col:27> 'const char_type *' lvalue Var 0x9ede770 '__beg' 'const char_type *'))
            (DeclRefExpr 0x9edf85c <col:36> 'off_type':'typename traits_type::off_type' lvalue Var 0x9edeaf0 '__newoffo' 'off_type':'typename traits_type::off_type')))
        (CompoundStmt 0x9edfab0 <line:187:6, line:190:6>
          (CallExpr 0x9edfa18 <line:188:8, col:56> '<dependent type>'
            (MemberExpr 0x9edf910 <col:8> '<bound member function type>' ->_M_pbump 0x9ecb6e0
              (CXXThisExpr 0x9edf900 <col:8> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
            (CallExpr 0x9edf978 <col:17, col:29> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9edf940 <col:17, col:23> '<dependent type>' lvalue
                (CXXThisExpr 0x9edf930 <col:17> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
            (CallExpr 0x9edf9e0 <col:32, col:44> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9edf9a8 <col:32, col:38> '<dependent type>' lvalue
                (CXXThisExpr 0x9edf998 <col:32> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
            (DeclRefExpr 0x9edf9fc <col:47> 'off_type':'typename traits_type::off_type' lvalue Var 0x9edeaf0 '__newoffo' 'off_type':'typename traits_type::off_type'))
          (BinaryOperator 0x9edfa98 <line:189:8, col:34> '<dependent type>' '='
            (DeclRefExpr 0x9edfa40 <col:8> 'pos_type':'typename traits_type::pos_type' lvalue Var 0x9eddd20 '__ret' 'pos_type':'typename traits_type::pos_type')
            (CXXUnresolvedConstructExpr 0x9edfa78 <col:16, col:34> 'pos_type':'typename traits_type::pos_type'
              (DeclRefExpr 0x9edfa60 <col:25> 'off_type':'typename traits_type::off_type' lvalue Var 0x9edeaf0 '__newoffo' 'off_type':'typename traits_type::off_type'))))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9edfb48 <line:192:7, col:14>
    (DeclRefExpr 0x9edfb2c <col:14> 'pos_type':'typename traits_type::pos_type' lvalue Var 0x9eddd20 '__ret' 'pos_type':'typename traits_type::pos_type')))


    typename basic_stringbuf<_CharT, _Traits, _Alloc>::pos_type seekpos(pos_type __sp, ios_base::openmode __mode = (CXXOperatorCallExpr 0x9ecbbb8 </usr/include/c++/4.6/sstream:221:36, col:61> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0x9ecbba8 <col:49, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0x9ecbb90 <col:49, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9d68ac0 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0x9ecbb70 <col:36, col:46> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x9ecbb0c <col:36, col:46> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9d6bcd0 'in' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0x9ecbb80 <col:51, col:61> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x9ecbb4c <col:51, col:61> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9d6bd30 'out' 'const openmode':'const enum std::_Ios_Openmode')))
) (CompoundStmt 0x9ee1448 </usr/include/c++/4.6/bits/sstream.tcc:199:5, line:223:5>
  (DeclStmt 0x9ee0418 <line:200:7, col:47>
    0x9ee0360 "pos_type __ret =
      (CXXUnresolvedConstructExpr 0x9ee03f8 <col:25, col:46> 'pos_type':'typename traits_type::pos_type'
        (CXXUnresolvedConstructExpr 0x9ee03d8 <col:34, col:45> 'off_type':'typename traits_type::off_type'
          (UnaryOperator 0x9ee03c0 <col:43, col:44> 'int' prefix '-'
            (IntegerLiteral 0x9ee03a8 <col:44> 'int' 1))))")
  (DeclStmt 0x9ee0690 <line:201:7, col:73>
    0x9ee0430 "const bool __testin =
      (CXXOperatorCallExpr 0x9ee0668 <col:29, col:72> '<dependent type>'
        (UnresolvedLookupExpr 0x9ee0610 <col:69, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b412d0 0x9ac7fa0 0x9b5e2b0 0x9ba7d20 0x9bc7160 0x9bc74d0 0x9cbb090 0x9cbb590 0x9cbbad0 0x9db08a0)
        (ParenExpr 0x9ee05e0 <col:29, col:67> '<dependent type>'
          (CXXOperatorCallExpr 0x9ee05b8 <col:30, col:61> '<dependent type>'
            (UnresolvedLookupExpr 0x9ee0578 <col:59, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9d5b750 0x9d68890 0x9d69b00)
            (CXXOperatorCallExpr 0x9ee0538 <col:30, col:51> '<dependent type>'
              (UnresolvedLookupExpr 0x9ee04f8 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9d5b750 0x9d68890 0x9d69b00)
              (DeclRefExpr 0x9ee0490 <col:30, col:40> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9d6bcd0 'in' 'const openmode':'const enum std::_Ios_Openmode')
              (CXXDependentScopeMemberExpr 0x9ee04c0 <col:45, col:51> '<dependent type>' lvalue
                (CXXThisExpr 0x9ee04b0 <col:45> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
            (DeclRefExpr 0x9ee055c <col:61> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0x9ee00d0 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode')))
        (IntegerLiteral 0x9ee05f8 <col:72> 'int' 0))")
  (DeclStmt 0x9ee0910 <line:202:7, col:75>
    0x9ee06b0 "const bool __testout =
      (CXXOperatorCallExpr 0x9ee08e8 <col:30, col:74> '<dependent type>'
        (UnresolvedLookupExpr 0x9ee0890 <col:71, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b412d0 0x9ac7fa0 0x9b5e2b0 0x9ba7d20 0x9bc7160 0x9bc74d0 0x9cbb090 0x9cbb590 0x9cbbad0 0x9db08a0)
        (ParenExpr 0x9ee0860 <col:30, col:69> '<dependent type>'
          (CXXOperatorCallExpr 0x9ee0838 <col:31, col:63> '<dependent type>'
            (UnresolvedLookupExpr 0x9ee07f8 <col:61, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9d5b750 0x9d68890 0x9d69b00)
            (CXXOperatorCallExpr 0x9ee07b8 <col:31, col:53> '<dependent type>'
              (UnresolvedLookupExpr 0x9ee0778 <col:45, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9d5b750 0x9d68890 0x9d69b00)
              (DeclRefExpr 0x9ee0710 <col:31, col:41> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9d6bd30 'out' 'const openmode':'const enum std::_Ios_Openmode')
              (CXXDependentScopeMemberExpr 0x9ee0740 <col:47, col:53> '<dependent type>' lvalue
                (CXXThisExpr 0x9ee0730 <col:47> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
            (DeclRefExpr 0x9ee07dc <col:63> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0x9ee00d0 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode')))
        (IntegerLiteral 0x9ee0878 <col:74> 'int' 0))")
  (DeclStmt 0x9ee0a80 <line:204:7, col:72>
    0x9ee0930 "const char_type *__beg =
      (ConditionalOperator 0x9ee0a60 <col:32, col:71> '<dependent type>'
        (ImplicitCastExpr 0x9ee0a50 <col:32> '_Bool' <LValueToRValue>
          (DeclRefExpr 0x9ee0964 <col:32> 'const _Bool' lvalue Var 0x9ee0430 '__testin' 'const _Bool'))
        (CallExpr 0x9ee09c8 <col:43, col:55> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9ee0990 <col:43, col:49> '<dependent type>' lvalue
            (CXXThisExpr 0x9ee0980 <col:43> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
        (CallExpr 0x9ee0a30 <col:59, col:71> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9ee09f8 <col:59, col:65> '<dependent type>' lvalue
            (CXXThisExpr 0x9ee09e8 <col:59> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))")
  (IfStmt 0x9ee1400 <line:205:7, line:221:2>
    <<<NULL>>>
    (BinaryOperator 0x9ee0bb0 <line:205:11, col:63> '<dependent type>' '&&'
      (ParenExpr 0x9ee0b18 <col:11, col:36> '<dependent type>'
        (BinaryOperator 0x9ee0b00 <col:12, col:35> '<dependent type>' '||'
          (DeclRefExpr 0x9ee0a90 <col:12> 'const char_type *' lvalue Var 0x9ee0930 '__beg' 'const char_type *')
          (UnaryOperator 0x9ee0ae8 <col:21, col:35> '<dependent type>' prefix '!'
            (CXXUnresolvedConstructExpr 0x9ee0ac8 <col:22, col:35> 'off_type':'typename traits_type::off_type'
              (DeclRefExpr 0x9ee0ab0 <col:31> 'pos_type':'typename traits_type::pos_type' lvalue ParmVar 0x9ee0060 '__sp' 'pos_type':'typename traits_type::pos_type')))))
      (ParenExpr 0x9ee0b98 <col:41, col:63> '_Bool'
        (BinaryOperator 0x9ee0b80 <col:42, col:54> '_Bool' '||'
          (ImplicitCastExpr 0x9ee0b60 <col:42> '_Bool' <LValueToRValue>
            (DeclRefExpr 0x9ee0b2c <col:42> 'const _Bool' lvalue Var 0x9ee0430 '__testin' 'const _Bool'))
          (ImplicitCastExpr 0x9ee0b70 <col:54> '_Bool' <LValueToRValue>
            (DeclRefExpr 0x9ee0b44 <col:54> 'const _Bool' lvalue Var 0x9ee06b0 '__testout' 'const _Bool')))))
    (CompoundStmt 0x9ee13e0 <line:206:2, line:221:2>
      (CallExpr 0x9ee0bf8 <line:207:4, col:20> '<dependent type>'
        (MemberExpr 0x9ee0bd8 <col:4> '<bound member function type>' ->_M_update_egptr 0x9ecb520
          (CXXThisExpr 0x9ee0bc8 <col:4> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
      (DeclStmt 0x9ee0c90 <line:209:4, col:30>
        0x9ee0c20 "const off_type __pos =
          (ParenListExpr 0x9ee0c70 <col:24, col:29> 'const off_type':'const typename traits_type::off_type'
            (DeclRefExpr 0x9ee0c54 <col:25> 'pos_type':'typename traits_type::pos_type' lvalue ParmVar 0x9ee0060 '__sp' 'pos_type':'typename traits_type::pos_type'))")
      (DeclStmt 0x9ee0f20 <line:210:4, line:211:41>
        0x9ee0cb0 "const bool __testpos =
          (ParenExpr 0x9ee0f08 <line:210:27, line:211:40> '<dependent type>'
            (BinaryOperator 0x9ee0ef0 <line:210:28, line:211:35> '<dependent type>' '&&'
              (CXXOperatorCallExpr 0x9ee0d60 <line:210:28, col:33> '<dependent type>'
                (UnresolvedLookupExpr 0x9ee0d18 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b43190 0x9ac87b0 0x9b5eb90 0x9cbe2d0 0x9cbe800 0x9cbed30)
                (IntegerLiteral 0x9ee0ce8 <col:28> 'int' 0)
                (DeclRefExpr 0x9ee0d00 <col:33> 'const off_type':'const typename traits_type::off_type' lvalue Var 0x9ee0c20 '__pos' 'const off_type':'const typename traits_type::off_type'))
              (CXXOperatorCallExpr 0x9ee0ec8 <line:211:10, col:35> '<dependent type>'
                (UnresolvedLookupExpr 0x9ee0e80 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b43190 0x9ac87b0 0x9b5eb90 0x9cbe2d0 0x9cbe800 0x9cbed30)
                (DeclRefExpr 0x9ee0d84 <col:10> 'const off_type':'const typename traits_type::off_type' lvalue Var 0x9ee0c20 '__pos' 'const off_type':'const typename traits_type::off_type')
                (CXXOperatorCallExpr 0x9ee0e58 <col:19, col:35> '<dependent type>'
                  (UnresolvedLookupExpr 0x9ee0e20 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
                  (CallExpr 0x9ee0de8 <col:19, col:31> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9ee0db0 <col:19, col:25> '<dependent type>' lvalue
                      (CXXThisExpr 0x9ee0da0 <col:19> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
                  (DeclRefExpr 0x9ee0e04 <col:35> 'const char_type *' lvalue Var 0x9ee0930 '__beg' 'const char_type *')))))")
      (IfStmt 0x9ee13c0 <line:212:4, line:220:6>
        <<<NULL>>>
        (ImplicitCastExpr 0x9ee0f48 <line:212:8> '_Bool' <LValueToRValue>
          (DeclRefExpr 0x9ee0f30 <col:8> 'const _Bool' lvalue Var 0x9ee0cb0 '__testpos' 'const _Bool'))
        (CompoundStmt 0x9ee13a0 <line:213:6, line:220:6>
          (IfStmt 0x9ee11b0 <line:214:8, line:216:20>
            <<<NULL>>>
            (ImplicitCastExpr 0x9ee0f70 <line:214:12> '_Bool' <LValueToRValue>
              (DeclRefExpr 0x9ee0f54 <col:12> 'const _Bool' lvalue Var 0x9ee0430 '__testin' 'const _Bool'))
            (CallExpr 0x9ee1188 <line:215:3, line:216:20> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9ee0f90 <line:215:3, col:9> '<dependent type>' lvalue
                (CXXThisExpr 0x9ee0f80 <col:3> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
              (CallExpr 0x9ee1010 <col:14, col:26> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9ee0fd8 <col:14, col:20> '<dependent type>' lvalue
                  (CXXThisExpr 0x9ee0fc8 <col:14> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
              (CXXOperatorCallExpr 0x9ee10f8 <col:29, col:45> '<dependent type>'
                (UnresolvedLookupExpr 0x9ee10b0 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9ce1500 0x9ce2100 0x9cb8030 0x9cb8830)
                (CallExpr 0x9ee1078 <col:29, col:41> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9ee1040 <col:29, col:35> '<dependent type>' lvalue
                    (CXXThisExpr 0x9ee1030 <col:29> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
                (DeclRefExpr 0x9ee1094 <col:45> 'const off_type':'const typename traits_type::off_type' lvalue Var 0x9ee0c20 '__pos' 'const off_type':'const typename traits_type::off_type'))
              (CallExpr 0x9ee1168 <line:216:7, col:19> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9ee1130 <col:7, col:13> '<dependent type>' lvalue
                  (CXXThisExpr 0x9ee1120 <col:7> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
            <<<NULL>>>)
          (IfStmt 0x9ee1338 <line:217:8, line:218:47>
            <<<NULL>>>
            (ImplicitCastExpr 0x9ee11e8 <line:217:12> '_Bool' <LValueToRValue>
              (DeclRefExpr 0x9ee11cc <col:12> 'const _Bool' lvalue Var 0x9ee06b0 '__testout' 'const _Bool'))
            (CallExpr 0x9ee1310 <line:218:3, col:47> '<dependent type>'
              (MemberExpr 0x9ee1208 <col:3> '<bound member function type>' ->_M_pbump 0x9ecb6e0
                (CXXThisExpr 0x9ee11f8 <col:3> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
              (CallExpr 0x9ee1270 <col:12, col:24> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9ee1238 <col:12, col:18> '<dependent type>' lvalue
                  (CXXThisExpr 0x9ee1228 <col:12> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
              (CallExpr 0x9ee12d8 <col:27, col:39> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9ee12a0 <col:27, col:33> '<dependent type>' lvalue
                  (CXXThisExpr 0x9ee1290 <col:27> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
              (DeclRefExpr 0x9ee12f4 <col:42> 'const off_type':'const typename traits_type::off_type' lvalue Var 0x9ee0c20 '__pos' 'const off_type':'const typename traits_type::off_type'))
            <<<NULL>>>)
          (BinaryOperator 0x9ee1388 <line:219:8, col:16> '<dependent type>' '='
            (DeclRefExpr 0x9ee1354 <col:8> 'pos_type':'typename traits_type::pos_type' lvalue Var 0x9ee0360 '__ret' 'pos_type':'typename traits_type::pos_type')
            (DeclRefExpr 0x9ee136c <col:16> 'pos_type':'typename traits_type::pos_type' lvalue ParmVar 0x9ee0060 '__sp' 'pos_type':'typename traits_type::pos_type')))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9ee1438 <line:222:7, col:14>
    (DeclRefExpr 0x9ee141c <col:14> 'pos_type':'typename traits_type::pos_type' lvalue Var 0x9ee0360 '__ret' 'pos_type':'typename traits_type::pos_type')))


    void _M_sync(char_type *__base, __size_type __i, __size_type __o) (CompoundStmt 0x9ee2478 </usr/include/c++/4.6/bits/sstream.tcc:229:5, line:254:5>
  (DeclStmt 0x9ee1a88 <line:230:7, col:51>
    0x9ee1980 "const bool __testin =
      (CXXOperatorCallExpr 0x9ee1a60 <col:29, col:49> '<dependent type>'
        (UnresolvedLookupExpr 0x9ee1a28 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9d68890)
        (MemberExpr 0x9ee19c8 <col:29> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ->_M_mode 0x9eca470
          (CXXThisExpr 0x9ee19b8 <col:29> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x9ee1a04 <col:39, col:49> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9d6bcd0 'in' 'const openmode':'const enum std::_Ios_Openmode'))")
  (DeclStmt 0x9ee1ba8 <line:231:7, col:53>
    0x9ee1aa0 "const bool __testout =
      (CXXOperatorCallExpr 0x9ee1b80 <col:30, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x9ee1b48 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9d68890)
        (MemberExpr 0x9ee1ae8 <col:30> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ->_M_mode 0x9eca470
          (CXXThisExpr 0x9ee1ad8 <col:30> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x9ee1b24 <col:40, col:50> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9d6bd30 'out' 'const openmode':'const enum std::_Ios_Openmode'))")
  (DeclStmt 0x9ee1d18 <line:232:7, col:52>
    0x9ee1bd0 "char_type *__endg =
      (CXXOperatorCallExpr 0x9ee1cf0 <col:27, col:51> '<dependent type>'
        (UnresolvedLookupExpr 0x9ee1ca8 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9ce1500 0x9ce2100 0x9cb8030 0x9cb8830)
        (DeclRefExpr 0x9ee1c04 <col:27> 'char_type *' lvalue ParmVar 0x9ee17f0 '__base' 'char_type *')
        (CallExpr 0x9ee1c88 <col:36, col:51> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9ee1c50 <col:36, col:46> '<dependent type>' lvalue
            (MemberExpr 0x9ee1c30 <col:36> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0x9eca4b0
              (CXXThisExpr 0x9ee1c20 <col:36> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))))")
  (DeclStmt 0x9ee1e88 <line:233:7, col:56>
    0x9ee1d40 "char_type *__endp =
      (CXXOperatorCallExpr 0x9ee1e60 <col:27, col:55> '<dependent type>'
        (UnresolvedLookupExpr 0x9ee1e18 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9ce1500 0x9ce2100 0x9cb8030 0x9cb8830)
        (DeclRefExpr 0x9ee1d74 <col:27> 'char_type *' lvalue ParmVar 0x9ee17f0 '__base' 'char_type *')
        (CallExpr 0x9ee1df8 <col:36, col:55> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9ee1dc0 <col:36, col:46> '<dependent type>' lvalue
            (MemberExpr 0x9ee1da0 <col:36> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0x9eca4b0
              (CXXThisExpr 0x9ee1d90 <col:36> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))))")
  (IfStmt 0x9ee20b8 <line:235:7, line:241:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9ee1f90 <line:235:11, col:36> '<dependent type>'
      (UnresolvedLookupExpr 0x9ee1f38 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b412d0 0x9ac7fa0 0x9b5e2b0 0x9ba7d20 0x9bc7160 0x9bc74d0 0x9cbb090 0x9cbb590 0x9cbbad0 0x9db08a0)
      (DeclRefExpr 0x9ee1e98 <col:11> 'char_type *' lvalue ParmVar 0x9ee17f0 '__base' 'char_type *')
      (CallExpr 0x9ee1f18 <col:21, col:36> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ee1ee0 <col:21, col:31> '<dependent type>' lvalue
          (MemberExpr 0x9ee1ec0 <col:21> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0x9eca4b0
            (CXXThisExpr 0x9ee1eb0 <col:21> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))))
    (CompoundStmt 0x9ee2098 <line:236:2, line:241:2>
      (CompoundAssignOperator 0x9ee1fe8 <line:238:4, col:14> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
        (DeclRefExpr 0x9ee1fb4 <col:4> 'char_type *' lvalue Var 0x9ee1bd0 '__endg' 'char_type *')
        (DeclRefExpr 0x9ee1fcc <col:14> '__size_type':'typename __string_type::size_type' lvalue ParmVar 0x9ee1830 '__i' '__size_type':'typename __string_type::size_type'))
      (BinaryOperator 0x9ee2038 <line:239:4, col:10> '<dependent type>' '='
        (DeclRefExpr 0x9ee2008 <col:4> '__size_type':'typename __string_type::size_type' lvalue ParmVar 0x9ee1830 '__i' '__size_type':'typename __string_type::size_type')
        (IntegerLiteral 0x9ee2020 <col:10> 'int' 0))
      (BinaryOperator 0x9ee2080 <line:240:4, col:13> '<dependent type>' '='
        (DeclRefExpr 0x9ee2050 <col:4> 'char_type *' lvalue Var 0x9ee1d40 '__endp' 'char_type *')
        (DeclRefExpr 0x9ee2068 <col:13> 'char_type *' lvalue Var 0x9ee1bd0 '__endg' 'char_type *')))
    <<<NULL>>>)
  (IfStmt 0x9ee2240 <line:243:7, line:244:41>
    <<<NULL>>>
    (ImplicitCastExpr 0x9ee20f0 <line:243:11> '_Bool' <LValueToRValue>
      (DeclRefExpr 0x9ee20d4 <col:11> 'const _Bool' lvalue Var 0x9ee1980 '__testin' 'const _Bool'))
    (CallExpr 0x9ee2218 <line:244:2, col:41> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9ee2110 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0x9ee2100 <col:2> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9ee2144 <col:13> 'char_type *' lvalue ParmVar 0x9ee17f0 '__base' 'char_type *')
      (CXXOperatorCallExpr 0x9ee21d8 <col:21, col:30> '<dependent type>'
        (UnresolvedLookupExpr 0x9ee2190 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9ce1500 0x9ce2100 0x9cb8030 0x9cb8830)
        (DeclRefExpr 0x9ee215c <col:21> 'char_type *' lvalue ParmVar 0x9ee17f0 '__base' 'char_type *')
        (DeclRefExpr 0x9ee2174 <col:30> '__size_type':'typename __string_type::size_type' lvalue ParmVar 0x9ee1830 '__i' '__size_type':'typename __string_type::size_type'))
      (DeclRefExpr 0x9ee21fc <col:35> 'char_type *' lvalue Var 0x9ee1bd0 '__endg' 'char_type *'))
    <<<NULL>>>)
  (IfStmt 0x9ee2458 <line:245:7, line:253:2>
    <<<NULL>>>
    (ImplicitCastExpr 0x9ee2278 <line:245:11> '_Bool' <LValueToRValue>
      (DeclRefExpr 0x9ee225c <col:11> 'const _Bool' lvalue Var 0x9ee1aa0 '__testout' 'const _Bool'))
    (CompoundStmt 0x9ee2440 <line:246:2, line:253:2>
      (CallExpr 0x9ee2300 <line:247:4, col:32> '<dependent type>'
        (MemberExpr 0x9ee2298 <col:4> '<bound member function type>' ->_M_pbump 0x9ecb6e0
          (CXXThisExpr 0x9ee2288 <col:4> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x9ee22b8 <col:13> 'char_type *' lvalue ParmVar 0x9ee17f0 '__base' 'char_type *')
        (DeclRefExpr 0x9ee22d0 <col:21> 'char_type *' lvalue Var 0x9ee1d40 '__endp' 'char_type *')
        (DeclRefExpr 0x9ee22e8 <col:29> '__size_type':'typename __string_type::size_type' lvalue ParmVar 0x9ee1870 '__o' '__size_type':'typename __string_type::size_type'))
      (IfStmt 0x9ee2420 <line:251:4, line:252:39>
        <<<NULL>>>
        (UnaryOperator 0x9ee2350 <line:251:8, col:9> '_Bool' prefix '!'
          (ImplicitCastExpr 0x9ee2340 <col:9> '_Bool' <LValueToRValue>
            (DeclRefExpr 0x9ee2328 <col:9> 'const _Bool' lvalue Var 0x9ee1980 '__testin' 'const _Bool')))
        (CallExpr 0x9ee23f8 <line:252:6, col:39> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9ee2378 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x9ee2368 <col:6> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
          (DeclRefExpr 0x9ee23ac <col:17> 'char_type *' lvalue Var 0x9ee1bd0 '__endg' 'char_type *')
          (DeclRefExpr 0x9ee23c4 <col:25> 'char_type *' lvalue Var 0x9ee1bd0 '__endg' 'char_type *')
          (DeclRefExpr 0x9ee23dc <col:33> 'char_type *' lvalue Var 0x9ee1bd0 '__endg' 'char_type *'))
        <<<NULL>>>))
    <<<NULL>>>))


    void _M_pbump(char_type *__pbeg, char_type *__pend, off_type __off) (CompoundStmt 0x9ee2e60 </usr/include/c++/4.6/bits/sstream.tcc:260:5, line:268:5>
  (CallExpr 0x9ee2a38 <line:261:7, col:32> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9ee29d0 <col:7, col:13> '<dependent type>' lvalue
      (CXXThisExpr 0x9ee29c0 <col:7> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9ee2a04 <col:18> 'char_type *' lvalue ParmVar 0x9ee2830 '__pbeg' 'char_type *')
    (DeclRefExpr 0x9ee2a1c <col:26> 'char_type *' lvalue ParmVar 0x9ee2880 '__pend' 'char_type *'))
  (WhileStmt 0x9ee2dc8 <line:262:7, line:266:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9ee2b78 <line:262:14, col:56> '<dependent type>'
      (UnresolvedLookupExpr 0x9ee2b30 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b42c70 0x9ac83c0 0x9b5e730 0x9cbd1f0 0x9cbd720 0x9cbdc50)
      (DeclRefExpr 0x9ee2a5c <col:14> 'off_type':'typename traits_type::off_type' lvalue ParmVar 0x9ee28c0 '__off' 'off_type':'typename traits_type::off_type')
      (DeclRefExpr 0x9ee2b10 <col:22, col:56> 'const int':'const int' lvalue Var 0x9ca5e30 '__max' 'const int':'const int'))
    (CompoundStmt 0x9ee2db0 <line:263:2, line:266:2>
      (CallExpr 0x9ee2ca0 <line:264:4, col:55> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ee2bb0 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x9ee2ba0 <col:4> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x9ee2c80 <col:16, col:50> 'const int':'const int' lvalue Var 0x9ca5e30 '__max' 'const int':'const int'))
      (CompoundAssignOperator 0x9ee2d90 <line:265:4, col:47> '<dependent type>' lvalue '-=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
        (DeclRefExpr 0x9ee2cc0 <col:4> 'off_type':'typename traits_type::off_type' lvalue ParmVar 0x9ee28c0 '__off' 'off_type':'typename traits_type::off_type')
        (DeclRefExpr 0x9ee2d70 <col:13, col:47> 'const int':'const int' lvalue Var 0x9ca5e30 '__max' 'const int':'const int'))))
  (CallExpr 0x9ee2e40 <line:267:7, col:24> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9ee2df0 <col:7, col:13> '<dependent type>' lvalue
      (CXXThisExpr 0x9ee2de0 <col:7> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9ee2e24 <col:19> 'off_type':'typename traits_type::off_type' lvalue ParmVar 0x9ee28c0 '__off' 'off_type':'typename traits_type::off_type')))


    class basic_stringbuf : public basic_streambuf<char, std::char_traits<char> > {
        class basic_stringbuf;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        typedef basic_string<char_type, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef typename __string_type::size_type __size_type;
    protected:
    protected:
        ios_base::openmode _M_mode;
        __string_type _M_string;
    public:
    public:
        basic_stringbuf(ios_base::openmode __mode);
        basic_stringbuf(const __string_type &__str, ios_base::openmode __mode);
        __string_type str() const;
        void str(const __string_type &__s);
    protected:
    protected:
        void _M_stringbuf_init(ios_base::openmode __mode);
        virtual streamsize showmanyc();
        virtual int_type underflow();
        virtual int_type pbackfail(int_type __c);
        virtual int_type overflow(int_type __c);
        virtual __streambuf_type *setbuf(char_type *__s, streamsize __n);
        virtual pos_type seekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        virtual pos_type seekpos(pos_type __sp, ios_base::openmode __mode);
        void _M_sync(char_type *__base, __size_type __i, __size_type __o);
        void _M_update_egptr();
        void _M_pbump(char_type *__pbeg, char_type *__pend, off_type __off);
        inline std::basic_stringbuf<char> &operator=(const std::basic_stringbuf<char> &);
        inline void ~basic_stringbuf();
        inline basic_stringbuf(const std::basic_stringbuf<char> &);
    };
    class basic_istringstream : public basic_istream<char, std::char_traits<char> > {
        class basic_istringstream;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<char, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef basic_stringbuf<char, std::char_traits<char>, std::allocator<char> > __stringbuf_type;
        typedef basic_istream<char_type, traits_type> __istream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_istringstream(ios_base::openmode __mode);
        basic_istringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_istringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_istringstream<char> &operator=(const std::basic_istringstream<char> &);
    };
    class basic_ostringstream : public basic_ostream<char, std::char_traits<char> > {
        class basic_ostringstream;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<char, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef basic_stringbuf<char, std::char_traits<char>, std::allocator<char> > __stringbuf_type;
        typedef basic_ostream<char_type, traits_type> __ostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_ostringstream(ios_base::openmode __mode);
        basic_ostringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_ostringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_ostringstream<char> &operator=(const std::basic_ostringstream<char> &);
    };
    class basic_stringstream : public basic_iostream<char, std::char_traits<char> > {
        class basic_stringstream;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<char, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef basic_stringbuf<char, std::char_traits<char>, std::allocator<char> > __stringbuf_type;
        typedef basic_iostream<char_type, traits_type> __iostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_stringstream(ios_base::openmode __m);
        basic_stringstream(const __string_type &__str, ios_base::openmode __m);
        void ~basic_stringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_stringstream<char> &operator=(const std::basic_stringstream<char> &);
        inline basic_stringstream(const std::basic_stringstream<char> &);
    };
    class basic_stringbuf : public basic_streambuf<wchar_t, std::char_traits<wchar_t> > {
        class basic_stringbuf;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        typedef basic_string<char_type, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef typename __string_type::size_type __size_type;
    protected:
    protected:
        ios_base::openmode _M_mode;
        __string_type _M_string;
    public:
    public:
        basic_stringbuf(ios_base::openmode __mode);
        basic_stringbuf(const __string_type &__str, ios_base::openmode __mode);
        __string_type str() const;
        void str(const __string_type &__s);
    protected:
    protected:
        void _M_stringbuf_init(ios_base::openmode __mode);
        virtual streamsize showmanyc();
        virtual int_type underflow();
        virtual int_type pbackfail(int_type __c);
        virtual int_type overflow(int_type __c);
        virtual __streambuf_type *setbuf(char_type *__s, streamsize __n);
        virtual pos_type seekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        virtual pos_type seekpos(pos_type __sp, ios_base::openmode __mode);
        void _M_sync(char_type *__base, __size_type __i, __size_type __o);
        void _M_update_egptr();
        void _M_pbump(char_type *__pbeg, char_type *__pend, off_type __off);
        inline std::basic_stringbuf<wchar_t> &operator=(const std::basic_stringbuf<wchar_t> &);
        inline void ~basic_stringbuf();
        inline basic_stringbuf(const std::basic_stringbuf<wchar_t> &);
    };
    class basic_istringstream : public basic_istream<wchar_t, std::char_traits<wchar_t> > {
        class basic_istringstream;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __stringbuf_type;
        typedef basic_istream<char_type, traits_type> __istream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_istringstream(ios_base::openmode __mode);
        basic_istringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_istringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_istringstream<wchar_t> &operator=(const std::basic_istringstream<wchar_t> &);
    };
    class basic_ostringstream : public basic_ostream<wchar_t, std::char_traits<wchar_t> > {
        class basic_ostringstream;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __stringbuf_type;
        typedef basic_ostream<char_type, traits_type> __ostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_ostringstream(ios_base::openmode __mode);
        basic_ostringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_ostringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_ostringstream<wchar_t> &operator=(const std::basic_ostringstream<wchar_t> &);
    };
    class basic_stringstream : public basic_iostream<wchar_t, std::char_traits<wchar_t> > {
        class basic_stringstream;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __stringbuf_type;
        typedef basic_iostream<char_type, traits_type> __iostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_stringstream(ios_base::openmode __m);
        basic_stringstream(const __string_type &__str, ios_base::openmode __m);
        void ~basic_stringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_stringstream<wchar_t> &operator=(const std::basic_stringstream<wchar_t> &);
        inline basic_stringstream(const std::basic_stringstream<wchar_t> &);
    };
}
namespace std {
    template <typename _T1, typename _T2> inline void _Construct(_T1 *__p, const _T2 &__value) (CompoundStmt 0x9ef9010 </usr/include/c++/4.6/bits/stl_construct.h:81:5, line:85:5>
  (CXXNewExpr 0x9ef8fd0 <line:84:7, col:49> '_T1 *'
    (CXXStaticCastExpr 0x9ef8f98 <col:13, col:35> 'void *' static_cast<void *> <Dependent>
      (DeclRefExpr 0x9ef8f70 <col:32> '_T1 *' lvalue ParmVar 0x9ef8dd0 '__p' '_T1 *'))
    (DeclRefExpr 0x9ef8fb0 <col:42> 'const _T2' lvalue ParmVar 0x9ef8e40 '__value' 'const _T2 &')))

;
    template <typename _Tp> inline void _Destroy(_Tp *__pointer) (CompoundStmt 0x9ef9240 </usr/include/c++/4.6/bits/stl_construct.h:94:5, col:26>
  (CallExpr 0x9ef9220 <col:7, col:23> 'void'
    (CXXPseudoDestructorExpr 0x9ef91f0 <col:7, col:19> 'void (*)(void)'
      (DeclRefExpr 0x9ef91cc <col:7> '_Tp *' lvalue ParmVar 0x9ef90c0 '__pointer' '_Tp *'))))

;
    template <bool = true> struct _Destroy_aux {
        struct _Destroy_aux;
        template <typename _ForwardIterator> static void __destroy(_ForwardIterator, _ForwardIterator) (CompoundStmt 0x9ef9cd0 </usr/include/c++/4.6/bits/stl_construct.h:113:55, col:57>)

;
    }
template <bool> struct _Destroy_aux {
        struct _Destroy_aux;
        template <typename _ForwardIterator> static void __destroy(_ForwardIterator __first, _ForwardIterator __last) (CompoundStmt 0x9ef98d0 </usr/include/c++/4.6/bits/stl_construct.h:102:2, line:105:2>
  (ForStmt 0x9ef98a8 <line:103:4, line:104:46>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9ef9728 <line:103:11, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0x9ef96d0 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b412d0 0x9ac7fa0 0x9b5e2b0 0x9ba7d20 0x9bc7160 0x9bc74d0 0x9cbb090 0x9cbb590 0x9cbbad0 0x9db08a0)
      (DeclRefExpr 0x9ef96a0 <col:11> '_ForwardIterator' lvalue ParmVar 0x9ef9520 '__first' '_ForwardIterator')
      (DeclRefExpr 0x9ef96b8 <col:22> '_ForwardIterator' lvalue ParmVar 0x9ef9560 '__last' '_ForwardIterator'))
    (UnaryOperator 0x9ef9768 <col:30, col:32> '<dependent type>' prefix '++'
      (DeclRefExpr 0x9ef974c <col:32> '_ForwardIterator' lvalue ParmVar 0x9ef9520 '__first' '_ForwardIterator'))
    (CallExpr 0x9ef9888 <line:104:6, col:46> '<dependent type>'
      (UnresolvedLookupExpr 0x9ef97b0 <col:6, col:11> '<overloaded function type>' lvalue (no ADL) = '1' 0x9ef91a0)
      (CallExpr 0x9ef9868 <col:20, col:45> '<dependent type>'
        (UnresolvedLookupExpr 0x9ef9800 <col:20, col:25> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b394e0)
        (UnaryOperator 0x9ef9850 <col:37, col:38> '<dependent type>' prefix '*'
          (DeclRefExpr 0x9ef9834 <col:38> '_ForwardIterator' lvalue ParmVar 0x9ef9520 '__first' '_ForwardIterator'))))))

;
    };
    struct _Destroy_aux {
        struct _Destroy_aux;
        template <typename _ForwardIterator> static void __destroy(_ForwardIterator, _ForwardIterator) (CompoundStmt 0x9ef9cd0 </usr/include/c++/4.6/bits/stl_construct.h:113:55, col:57>)

;
    };
    template <typename _ForwardIterator> inline void _Destroy(_ForwardIterator __first, _ForwardIterator __last) (CompoundStmt 0x9efa178 </usr/include/c++/4.6/bits/stl_construct.h:124:5, line:129:5>
  (DeclStmt 0x9ef9fb0 <line:125:7, line:126:35>
    0x9ef9f80 "typedef typename iterator_traits<_ForwardIterator>::value_type _Value_type")
  (CallExpr 0x9efa150 <line:127:7, line:128:27> '<dependent type>'
    (DependentScopeDeclRefExpr 0x9efa0f8 <line:127:7, line:128:2> '<dependent type>' lvalue)
    (DeclRefExpr 0x9efa11c <col:12> '_ForwardIterator' lvalue ParmVar 0x9ef9d40 '__first' '_ForwardIterator')
    (DeclRefExpr 0x9efa134 <col:21> '_ForwardIterator' lvalue ParmVar 0x9ef9d80 '__last' '_ForwardIterator')))

;
    template <typename _Tp = std::basic_string<wchar_t>> class allocator
template <typename _Tp = wchar_t> class allocator : public __gnu_cxx::new_allocator<wchar_t> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef wchar_t *pointer;
        typedef const wchar_t *const_pointer;
        typedef wchar_t &reference;
        typedef const wchar_t &const_reference;
        typedef wchar_t value_type;
        template <typename _Tp1 = wchar_t> struct rebind {
            struct rebind;
            typedef allocator<wchar_t> other;
        }
template <typename _Tp1 = char> struct rebind {
            struct rebind;
            typedef allocator<char> other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw() : __gnu_cxx::new_allocator<wchar_t>() (CompoundStmt 0x9bc64c8 </usr/include/c++/4.6/bits/allocator.h:107:27, col:29>)


        allocator(const std::allocator<wchar_t> &__a) throw() : __gnu_cxx::new_allocator<wchar_t>((ImplicitCastExpr 0x9fcba60 </usr/include/c++/4.6/bits/allocator.h:110:39> 'const class __gnu_cxx::new_allocator<wchar_t>' lvalue <DerivedToBase (new_allocator)>
  (DeclRefExpr 0x9fcb7b4 <col:39> 'const class std::allocator<wchar_t>' lvalue ParmVar 0x9bcd4d0 '__a' 'const class std::allocator<wchar_t> &'))
) (CompoundStmt 0x9bc65e0 </usr/include/c++/4.6/bits/allocator.h:110:44, col:46>)


        template <typename _Tp1 = wchar_t> allocator(const allocator<wchar_t> &) throw()template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw() (CompoundStmt 0x9bc6600 </usr/include/c++/4.6/bits/allocator.h:115:28, col:30>)


    }
template <typename _Tp = std::basic_string<char>> class allocator
template <typename _Tp = void> class allocator {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef void *pointer;
        typedef const void *const_pointer;
        typedef void value_type;
        template <typename _Tp1> struct rebind {
            struct rebind;
            typedef allocator<_Tp1> other;
        };
    }
template <typename _Tp = char> class allocator : public __gnu_cxx::new_allocator<char> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef char *pointer;
        typedef const char *const_pointer;
        typedef char &reference;
        typedef const char &const_reference;
        typedef char value_type;
        template <typename _Tp1 = char> struct rebind {
            struct rebind;
            typedef allocator<char> other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw();
        allocator(const std::allocator<char> &__a) throw();
        template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw();
    }
template <typename _Tp> class allocator;
    template <typename _ForwardIterator, typename _Allocator> void _Destroy(_ForwardIterator __first, _ForwardIterator __last, _Allocator &__alloc) (CompoundStmt 0x9efa750 </usr/include/c++/4.6/bits/stl_construct.h:143:5, line:146:5>
  (ForStmt 0x9efa728 <line:144:7, line:145:44>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9efa5c0 <line:144:14, col:25> '<dependent type>'
      (UnresolvedLookupExpr 0x9efa568 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b412d0 0x9ac7fa0 0x9b5e2b0 0x9ba7d20 0x9bc7160 0x9bc74d0 0x9cbb090 0x9cbb590 0x9cbbad0 0x9db08a0)
      (DeclRefExpr 0x9efa534 <col:14> '_ForwardIterator' lvalue ParmVar 0x9efa330 '__first' '_ForwardIterator')
      (DeclRefExpr 0x9efa54c <col:25> '_ForwardIterator' lvalue ParmVar 0x9efa370 '__last' '_ForwardIterator'))
    (UnaryOperator 0x9efa600 <col:33, col:35> '<dependent type>' prefix '++'
      (DeclRefExpr 0x9efa5e4 <col:35> '_ForwardIterator' lvalue ParmVar 0x9efa330 '__first' '_ForwardIterator'))
    (CallExpr 0x9efa708 <line:145:2, col:44> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9efa630 <col:2, col:10> '<dependent type>' lvalue
        (DeclRefExpr 0x9efa614 <col:2> '_Allocator' lvalue ParmVar 0x9efa3e0 '__alloc' '_Allocator &'))
      (CallExpr 0x9efa6e8 <col:18, col:43> '<dependent type>'
        (UnresolvedLookupExpr 0x9efa680 <col:18, col:23> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b394e0)
        (UnaryOperator 0x9efa6d0 <col:35, col:36> '<dependent type>' prefix '*'
          (DeclRefExpr 0x9efa6b4 <col:36> '_ForwardIterator' lvalue ParmVar 0x9efa330 '__first' '_ForwardIterator'))))))

;
    template <typename _ForwardIterator, typename _Tp> inline void _Destroy(_ForwardIterator __first, _ForwardIterator __last, allocator<_Tp> &) (CompoundStmt 0x9efab80 </usr/include/c++/4.6/bits/stl_construct.h:152:5, line:154:5>
  (CallExpr 0x9efab58 <line:153:7, col:31> '<dependent type>'
    (UnresolvedLookupExpr 0x9efaae8 <col:7> '<overloaded function type>' lvalue (ADL) = '1' 0x9efaab0 0x9efa500 0x9ef9e60 0x9ef91a0)
    (DeclRefExpr 0x9efab28 <col:16> '_ForwardIterator' lvalue ParmVar 0x9efa830 '__first' '_ForwardIterator')
    (DeclRefExpr 0x9efab40 <col:25> '_ForwardIterator' lvalue ParmVar 0x9efa870 '__last' '_ForwardIterator')))

;
}
namespace std {
    template <bool _TrivialValueTypes = true> struct __uninitialized_copy {
        struct __uninitialized_copy;
        template <typename _InputIterator, typename _ForwardIterator> static _ForwardIterator __uninit_copy(_InputIterator __first, _InputIterator __last, _ForwardIterator __result) (CompoundStmt 0x9efbb60 </usr/include/c++/4.6/bits/stl_uninitialized.h:95:9, col:56>
  (ReturnStmt 0x9efbb50 <col:11, col:53>
    (CallExpr 0x9efbb28 <col:18, col:53> '<dependent type>'
      (UnresolvedLookupExpr 0x9efbaa8 <col:18, col:23> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b7fe20 0x9db46a0)
      (DeclRefExpr 0x9efbae0 <col:28> '_InputIterator' lvalue ParmVar 0x9efb8d0 '__first' '_InputIterator')
      (DeclRefExpr 0x9efbaf8 <col:37> '_InputIterator' lvalue ParmVar 0x9efb910 '__last' '_InputIterator')
      (DeclRefExpr 0x9efbb10 <col:45> '_ForwardIterator' lvalue ParmVar 0x9efb950 '__result' '_ForwardIterator'))))

;
    }
template <bool _TrivialValueTypes> struct __uninitialized_copy {
        struct __uninitialized_copy;
        template <typename _InputIterator, typename _ForwardIterator> static _ForwardIterator __uninit_copy(_InputIterator __first, _InputIterator __last, _ForwardIterator __result) (CompoundStmt 0x9efb5e8 </usr/include/c++/4.6/bits/stl_uninitialized.h:72:9, line:85:2>
  (DeclStmt 0x9efb1a0 <line:73:4, col:37>
    0x9efb150 "_ForwardIterator __cur =
      (DeclRefExpr 0x9efb184 <col:29> '_ForwardIterator' lvalue ParmVar 0x9efb000 '__result' '_ForwardIterator')")
  (IfStmt 0x9efb4b0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:79:6>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9efb1b0 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x9efb498 </usr/include/c++/4.6/bits/stl_uninitialized.h:75:6, line:79:6>
      (ForStmt 0x9efb448 <line:76:8, line:77:53>
        <<<NULL>>>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9efb248 <line:76:15, col:26> '<dependent type>'
          (UnresolvedLookupExpr 0x9efb1f0 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b412d0 0x9ac7fa0 0x9b5e2b0 0x9ba7d20 0x9bc7160 0x9bc74d0 0x9cbb090 0x9cbb590 0x9cbbad0 0x9db08a0)
          (DeclRefExpr 0x9efb1c0 <col:15> '_InputIterator' lvalue ParmVar 0x9efaf80 '__first' '_InputIterator')
          (DeclRefExpr 0x9efb1d8 <col:26> '_InputIterator' lvalue ParmVar 0x9efafc0 '__last' '_InputIterator'))
        (BinaryOperator 0x9efb2d0 <col:34, col:47> '<dependent type>' ','
          (UnaryOperator 0x9efb288 <col:34, col:36> '<dependent type>' prefix '++'
            (DeclRefExpr 0x9efb26c <col:36> '_InputIterator' lvalue ParmVar 0x9efaf80 '__first' '_InputIterator'))
          (UnaryOperator 0x9efb2b8 <col:45, col:47> '<dependent type>' prefix '++'
            (DeclRefExpr 0x9efb29c <col:47> '_ForwardIterator' lvalue Var 0x9efb150 '__cur' '_ForwardIterator')))
        (CallExpr 0x9efb420 <line:77:3, col:53> '<dependent type>'
          (UnresolvedLookupExpr 0x9efb318 <col:3, col:8> '<overloaded function type>' lvalue (no ADL) = '1' 0x9ef8f40)
          (CallExpr 0x9efb3d0 <col:19, col:42> '<dependent type>'
            (UnresolvedLookupExpr 0x9efb368 <col:19, col:24> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b394e0)
            (UnaryOperator 0x9efb3b8 <col:36, col:37> '<dependent type>' prefix '*'
              (DeclRefExpr 0x9efb39c <col:37> '_ForwardIterator' lvalue Var 0x9efb150 '__cur' '_ForwardIterator')))
          (UnaryOperator 0x9efb408 <col:45, col:46> '<dependent type>' prefix '*'
            (DeclRefExpr 0x9efb3f0 <col:46> '_InputIterator' lvalue ParmVar 0x9efaf80 '__first' '_InputIterator'))))
      (ReturnStmt 0x9efb488 <line:78:8, col:15>
        (DeclRefExpr 0x9efb46c <col:15> '_ForwardIterator' lvalue Var 0x9efb150 '__cur' '_ForwardIterator')))
    <<<NULL>>>)
  (IfStmt 0x9efb5c8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:84:6>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9efb4d0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9efb5b0 </usr/include/c++/4.6/bits/stl_uninitialized.h:81:6, line:84:6>
      (CallExpr 0x9efb578 <line:82:8, col:37> '<dependent type>'
        (UnresolvedLookupExpr 0x9efb508 <col:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0x9ef91a0 0x9ef9e60 0x9efa500 0x9efaab0)
        (DeclRefExpr 0x9efb548 <col:22> '_ForwardIterator' lvalue ParmVar 0x9efb000 '__result' '_ForwardIterator')
        (DeclRefExpr 0x9efb560 <col:32> '_ForwardIterator' lvalue Var 0x9efb150 '__cur' '_ForwardIterator'))
      (NullStmt 0x9efb5a0 <line:83:31>))
    <<<NULL>>>))

;
    };
    struct __uninitialized_copy {
        struct __uninitialized_copy;
        template <typename _InputIterator, typename _ForwardIterator> static _ForwardIterator __uninit_copy(_InputIterator __first, _InputIterator __last, _ForwardIterator __result) (CompoundStmt 0x9efbb60 </usr/include/c++/4.6/bits/stl_uninitialized.h:95:9, col:56>
  (ReturnStmt 0x9efbb50 <col:11, col:53>
    (CallExpr 0x9efbb28 <col:18, col:53> '<dependent type>'
      (UnresolvedLookupExpr 0x9efbaa8 <col:18, col:23> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b7fe20 0x9db46a0)
      (DeclRefExpr 0x9efbae0 <col:28> '_InputIterator' lvalue ParmVar 0x9efb8d0 '__first' '_InputIterator')
      (DeclRefExpr 0x9efbaf8 <col:37> '_InputIterator' lvalue ParmVar 0x9efb910 '__last' '_InputIterator')
      (DeclRefExpr 0x9efbb10 <col:45> '_ForwardIterator' lvalue ParmVar 0x9efb950 '__result' '_ForwardIterator'))))

;
    };
    template <typename _InputIterator, typename _ForwardIterator> inline _ForwardIterator uninitialized_copy(_InputIterator __first, _InputIterator __last, _ForwardIterator __result) (CompoundStmt 0x9efc268 </usr/include/c++/4.6/bits/stl_uninitialized.h:111:5, line:120:5>
  (DeclStmt 0x9efbf00 <line:112:7, line:113:13>
    0x9efbed0 "typedef typename iterator_traits<_InputIterator>::value_type _ValueType1")
  (DeclStmt 0x9efc030 <line:114:7, line:115:13>
    0x9efc000 "typedef typename iterator_traits<_ForwardIterator>::value_type _ValueType2")
  (ReturnStmt 0x9efc258 <line:117:7, line:119:41>
    (CallExpr 0x9efc230 <line:117:14, line:119:41> '<dependent type>'
      (DependentScopeDeclRefExpr 0x9efc1c0 <line:117:14, line:119:2> '<dependent type>' lvalue)
      (DeclRefExpr 0x9efc1e4 <col:16> '_InputIterator' lvalue ParmVar 0x9efbc40 '__first' '_InputIterator')
      (DeclRefExpr 0x9efc1fc <col:25> '_InputIterator' lvalue ParmVar 0x9efbc80 '__last' '_InputIterator')
      (DeclRefExpr 0x9efc214 <col:33> '_ForwardIterator' lvalue ParmVar 0x9efbcc0 '__result' '_ForwardIterator'))))

;
    template <bool _TrivialValueType = true> struct __uninitialized_fill {
        struct __uninitialized_fill;
        template <typename _ForwardIterator, typename _Tp> static void __uninit_fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__x) (CompoundStmt 0x9efd1a0 </usr/include/c++/4.6/bits/stl_uninitialized.h:152:9, col:44>
  (CallExpr 0x9efd178 <col:11, col:41> '<dependent type>'
    (UnresolvedLookupExpr 0x9efd0f8 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b88110)
    (DeclRefExpr 0x9efd12c <col:21> '_ForwardIterator' lvalue ParmVar 0x9efcee0 '__first' '_ForwardIterator')
    (DeclRefExpr 0x9efd144 <col:30> '_ForwardIterator' lvalue ParmVar 0x9efcf20 '__last' '_ForwardIterator')
    (DeclRefExpr 0x9efd15c <col:38> 'const _Tp' lvalue ParmVar 0x9efcf90 '__x' 'const _Tp &')))

;
    }
template <bool _TrivialValueType> struct __uninitialized_fill {
        struct __uninitialized_fill;
        template <typename _ForwardIterator, typename _Tp> static void __uninit_fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__x) (CompoundStmt 0x9efcc00 </usr/include/c++/4.6/bits/stl_uninitialized.h:130:9, line:142:2>
  (DeclStmt 0x9efc850 <line:131:4, col:36>
    0x9efc800 "_ForwardIterator __cur =
      (DeclRefExpr 0x9efc834 <col:29> '_ForwardIterator' lvalue ParmVar 0x9efc5b0 '__first' '_ForwardIterator')")
  (IfStmt 0x9efcac8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:136:6>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9efc860 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x9efcab0 </usr/include/c++/4.6/bits/stl_uninitialized.h:133:6, line:136:6>
      (ForStmt 0x9efca88 <line:134:8, line:135:48>
        <<<NULL>>>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9efc8f8 <line:134:15, col:24> '<dependent type>'
          (UnresolvedLookupExpr 0x9efc8a0 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b412d0 0x9ac7fa0 0x9b5e2b0 0x9ba7d20 0x9bc7160 0x9bc74d0 0x9cbb090 0x9cbb590 0x9cbbad0 0x9db08a0)
          (DeclRefExpr 0x9efc870 <col:15> '_ForwardIterator' lvalue Var 0x9efc800 '__cur' '_ForwardIterator')
          (DeclRefExpr 0x9efc888 <col:24> '_ForwardIterator' lvalue ParmVar 0x9efc5f0 '__last' '_ForwardIterator'))
        (UnaryOperator 0x9efc938 <col:32, col:34> '<dependent type>' prefix '++'
          (DeclRefExpr 0x9efc91c <col:34> '_ForwardIterator' lvalue Var 0x9efc800 '__cur' '_ForwardIterator'))
        (CallExpr 0x9efca60 <line:135:3, col:48> '<dependent type>'
          (UnresolvedLookupExpr 0x9efc970 <col:3, col:8> '<overloaded function type>' lvalue (no ADL) = '1' 0x9ef8f40)
          (CallExpr 0x9efca28 <col:19, col:42> '<dependent type>'
            (UnresolvedLookupExpr 0x9efc9c0 <col:19, col:24> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b394e0)
            (UnaryOperator 0x9efca10 <col:36, col:37> '<dependent type>' prefix '*'
              (DeclRefExpr 0x9efc9f4 <col:37> '_ForwardIterator' lvalue Var 0x9efc800 '__cur' '_ForwardIterator')))
          (DeclRefExpr 0x9efca48 <col:45> 'const _Tp' lvalue ParmVar 0x9efc680 '__x' 'const _Tp &'))))
    <<<NULL>>>)
  (IfStmt 0x9efcbe0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:141:6>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9efcae8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9efcbc8 </usr/include/c++/4.6/bits/stl_uninitialized.h:138:6, line:141:6>
      (CallExpr 0x9efcb90 <line:139:8, col:36> '<dependent type>'
        (UnresolvedLookupExpr 0x9efcb20 <col:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0x9ef91a0 0x9ef9e60 0x9efa500 0x9efaab0)
        (DeclRefExpr 0x9efcb60 <col:22> '_ForwardIterator' lvalue ParmVar 0x9efc5b0 '__first' '_ForwardIterator')
        (DeclRefExpr 0x9efcb78 <col:31> '_ForwardIterator' lvalue Var 0x9efc800 '__cur' '_ForwardIterator'))
      (NullStmt 0x9efcbb8 <line:140:31>))
    <<<NULL>>>))

;
    };
    struct __uninitialized_fill {
        struct __uninitialized_fill;
        template <typename _ForwardIterator, typename _Tp> static void __uninit_fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__x) (CompoundStmt 0x9efd1a0 </usr/include/c++/4.6/bits/stl_uninitialized.h:152:9, col:44>
  (CallExpr 0x9efd178 <col:11, col:41> '<dependent type>'
    (UnresolvedLookupExpr 0x9efd0f8 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b88110)
    (DeclRefExpr 0x9efd12c <col:21> '_ForwardIterator' lvalue ParmVar 0x9efcee0 '__first' '_ForwardIterator')
    (DeclRefExpr 0x9efd144 <col:30> '_ForwardIterator' lvalue ParmVar 0x9efcf20 '__last' '_ForwardIterator')
    (DeclRefExpr 0x9efd15c <col:38> 'const _Tp' lvalue ParmVar 0x9efcf90 '__x' 'const _Tp &')))

;
    };
    template <typename _ForwardIterator, typename _Tp> inline void uninitialized_fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__x) (CompoundStmt 0x9efd750 </usr/include/c++/4.6/bits/stl_uninitialized.h:168:5, line:174:5>
  (DeclStmt 0x9efd570 <line:169:7, line:170:12>
    0x9efd540 "typedef typename iterator_traits<_ForwardIterator>::value_type _ValueType")
  (CallExpr 0x9efd728 <line:172:7, line:173:36> '<dependent type>'
    (DependentScopeDeclRefExpr 0x9efd6b8 <line:172:7, line:173:2> '<dependent type>' lvalue)
    (DeclRefExpr 0x9efd6dc <col:16> '_ForwardIterator' lvalue ParmVar 0x9efd280 '__first' '_ForwardIterator')
    (DeclRefExpr 0x9efd6f4 <col:25> '_ForwardIterator' lvalue ParmVar 0x9efd2c0 '__last' '_ForwardIterator')
    (DeclRefExpr 0x9efd70c <col:33> 'const _Tp' lvalue ParmVar 0x9efd330 '__x' 'const _Tp &')))

;
    template <bool _TrivialValueType = true> struct __uninitialized_fill_n {
        struct __uninitialized_fill_n;
        template <typename _ForwardIterator, typename _Size, typename _Tp> static void __uninit_fill_n(_ForwardIterator __first, _Size __n, const _Tp &__x) (CompoundStmt 0x9efe790 </usr/include/c++/4.6/bits/stl_uninitialized.h:206:9, col:43>
  (CallExpr 0x9efe768 <col:11, col:40> '<dependent type>'
    (UnresolvedLookupExpr 0x9efe6e8 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b8aa20)
    (DeclRefExpr 0x9efe71c <col:23> '_ForwardIterator' lvalue ParmVar 0x9efe4a0 '__first' '_ForwardIterator')
    (DeclRefExpr 0x9efe734 <col:32> '_Size' lvalue ParmVar 0x9efe4e0 '__n' '_Size')
    (DeclRefExpr 0x9efe74c <col:37> 'const _Tp' lvalue ParmVar 0x9efe550 '__x' 'const _Tp &')))

;
    }
template <bool _TrivialValueType> struct __uninitialized_fill_n {
        struct __uninitialized_fill_n;
        template <typename _ForwardIterator, typename _Size, typename _Tp> static void __uninit_fill_n(_ForwardIterator __first, _Size __n, const _Tp &__x) (CompoundStmt 0x9efe170 </usr/include/c++/4.6/bits/stl_uninitialized.h:184:9, line:196:2>
  (DeclStmt 0x9efdd80 <line:185:4, col:36>
    0x9efdd30 "_ForwardIterator __cur =
      (DeclRefExpr 0x9efdd64 <col:29> '_ForwardIterator' lvalue ParmVar 0x9efdae0 '__first' '_ForwardIterator')")
  (IfStmt 0x9efe038 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:190:6>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9efdd90 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x9efe020 </usr/include/c++/4.6/bits/stl_uninitialized.h:187:6, line:190:6>
      (ForStmt 0x9efdff8 <line:188:8, line:189:48>
        <<<NULL>>>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9efde18 <line:188:15, col:21> '<dependent type>'
          (UnresolvedLookupExpr 0x9efddd0 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b42c70 0x9ac83c0 0x9b5e730 0x9cbd1f0 0x9cbd720 0x9cbdc50)
          (DeclRefExpr 0x9efdda0 <col:15> '_Size' lvalue ParmVar 0x9efdb20 '__n' '_Size')
          (IntegerLiteral 0x9efddb8 <col:21> 'int' 0))
        (BinaryOperator 0x9efdea0 <col:24, col:33> '<dependent type>' ','
          (UnaryOperator 0x9efde58 <col:24, col:26> '<dependent type>' prefix '--'
            (DeclRefExpr 0x9efde3c <col:26> '_Size' lvalue ParmVar 0x9efdb20 '__n' '_Size'))
          (UnaryOperator 0x9efde88 <col:31, col:33> '<dependent type>' prefix '++'
            (DeclRefExpr 0x9efde6c <col:33> '_ForwardIterator' lvalue Var 0x9efdd30 '__cur' '_ForwardIterator')))
        (CallExpr 0x9efdfd0 <line:189:3, col:48> '<dependent type>'
          (UnresolvedLookupExpr 0x9efdee0 <col:3, col:8> '<overloaded function type>' lvalue (no ADL) = '1' 0x9ef8f40)
          (CallExpr 0x9efdf98 <col:19, col:42> '<dependent type>'
            (UnresolvedLookupExpr 0x9efdf30 <col:19, col:24> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b394e0)
            (UnaryOperator 0x9efdf80 <col:36, col:37> '<dependent type>' prefix '*'
              (DeclRefExpr 0x9efdf64 <col:37> '_ForwardIterator' lvalue Var 0x9efdd30 '__cur' '_ForwardIterator')))
          (DeclRefExpr 0x9efdfb8 <col:45> 'const _Tp' lvalue ParmVar 0x9efdbb0 '__x' 'const _Tp &'))))
    <<<NULL>>>)
  (IfStmt 0x9efe150 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:195:6>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9efe058 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9efe138 </usr/include/c++/4.6/bits/stl_uninitialized.h:192:6, line:195:6>
      (CallExpr 0x9efe100 <line:193:8, col:36> '<dependent type>'
        (UnresolvedLookupExpr 0x9efe090 <col:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0x9ef91a0 0x9ef9e60 0x9efa500 0x9efaab0)
        (DeclRefExpr 0x9efe0d0 <col:22> '_ForwardIterator' lvalue ParmVar 0x9efdae0 '__first' '_ForwardIterator')
        (DeclRefExpr 0x9efe0e8 <col:31> '_ForwardIterator' lvalue Var 0x9efdd30 '__cur' '_ForwardIterator'))
      (NullStmt 0x9efe128 <line:194:31>))
    <<<NULL>>>))

;
    };
    struct __uninitialized_fill_n {
        struct __uninitialized_fill_n;
        template <typename _ForwardIterator, typename _Size, typename _Tp> static void __uninit_fill_n(_ForwardIterator __first, _Size __n, const _Tp &__x) (CompoundStmt 0x9efe790 </usr/include/c++/4.6/bits/stl_uninitialized.h:206:9, col:43>
  (CallExpr 0x9efe768 <col:11, col:40> '<dependent type>'
    (UnresolvedLookupExpr 0x9efe6e8 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b8aa20)
    (DeclRefExpr 0x9efe71c <col:23> '_ForwardIterator' lvalue ParmVar 0x9efe4a0 '__first' '_ForwardIterator')
    (DeclRefExpr 0x9efe734 <col:32> '_Size' lvalue ParmVar 0x9efe4e0 '__n' '_Size')
    (DeclRefExpr 0x9efe74c <col:37> 'const _Tp' lvalue ParmVar 0x9efe550 '__x' 'const _Tp &')))

;
    };
    template <typename _ForwardIterator, typename _Size, typename _Tp> inline void uninitialized_fill_n(_ForwardIterator __first, _Size __n, const _Tp &__x) (CompoundStmt 0x9efed90 </usr/include/c++/4.6/bits/stl_uninitialized.h:221:5, line:227:5>
  (DeclStmt 0x9efebb0 <line:222:7, line:223:12>
    0x9efeb80 "typedef typename iterator_traits<_ForwardIterator>::value_type _ValueType")
  (CallExpr 0x9efed68 <line:225:7, line:226:35> '<dependent type>'
    (DependentScopeDeclRefExpr 0x9efecf8 <line:225:7, line:226:2> '<dependent type>' lvalue)
    (DeclRefExpr 0x9efed1c <col:18> '_ForwardIterator' lvalue ParmVar 0x9efe8c0 '__first' '_ForwardIterator')
    (DeclRefExpr 0x9efed34 <col:27> '_Size' lvalue ParmVar 0x9efe900 '__n' '_Size')
    (DeclRefExpr 0x9efed4c <col:32> 'const _Tp' lvalue ParmVar 0x9efe970 '__x' 'const _Tp &')))

;
    template <typename _InputIterator, typename _ForwardIterator, typename _Allocator> _ForwardIterator __uninitialized_copy_a(_InputIterator __first, _InputIterator __last, _ForwardIterator __result, _Allocator &__alloc) (CompoundStmt 0x9eff5c8 </usr/include/c++/4.6/bits/stl_uninitialized.h:240:5, line:253:5>
  (DeclStmt 0x9eff180 <line:241:7, col:40>
    0x9eff130 "_ForwardIterator __cur =
      (DeclRefExpr 0x9eff164 <col:32> '_ForwardIterator' lvalue ParmVar 0x9efef40 '__result' '_ForwardIterator')")
  (IfStmt 0x9eff478 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:247:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9eff190 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x9eff460 </usr/include/c++/4.6/bits/stl_uninitialized.h:243:2, line:247:2>
      (ForStmt 0x9eff410 <line:244:4, line:245:58>
        <<<NULL>>>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9eff228 <line:244:11, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0x9eff1d0 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b412d0 0x9ac7fa0 0x9b5e2b0 0x9ba7d20 0x9bc7160 0x9bc74d0 0x9cbb090 0x9cbb590 0x9cbbad0 0x9db08a0)
          (DeclRefExpr 0x9eff1a0 <col:11> '_InputIterator' lvalue ParmVar 0x9efeec0 '__first' '_InputIterator')
          (DeclRefExpr 0x9eff1b8 <col:22> '_InputIterator' lvalue ParmVar 0x9efef00 '__last' '_InputIterator'))
        (BinaryOperator 0x9eff2b0 <col:30, col:43> '<dependent type>' ','
          (UnaryOperator 0x9eff268 <col:30, col:32> '<dependent type>' prefix '++'
            (DeclRefExpr 0x9eff24c <col:32> '_InputIterator' lvalue ParmVar 0x9efeec0 '__first' '_InputIterator'))
          (UnaryOperator 0x9eff298 <col:41, col:43> '<dependent type>' prefix '++'
            (DeclRefExpr 0x9eff27c <col:43> '_ForwardIterator' lvalue Var 0x9eff130 '__cur' '_ForwardIterator')))
        (CallExpr 0x9eff3e8 <line:245:6, col:58> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9eff2e0 <col:6, col:14> '<dependent type>' lvalue
            (DeclRefExpr 0x9eff2c8 <col:6> '_Allocator' lvalue ParmVar 0x9efefd0 '__alloc' '_Allocator &'))
          (CallExpr 0x9eff398 <col:24, col:47> '<dependent type>'
            (UnresolvedLookupExpr 0x9eff330 <col:24, col:29> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b394e0)
            (UnaryOperator 0x9eff380 <col:41, col:42> '<dependent type>' prefix '*'
              (DeclRefExpr 0x9eff364 <col:42> '_ForwardIterator' lvalue Var 0x9eff130 '__cur' '_ForwardIterator')))
          (UnaryOperator 0x9eff3d0 <col:50, col:51> '<dependent type>' prefix '*'
            (DeclRefExpr 0x9eff3b8 <col:51> '_InputIterator' lvalue ParmVar 0x9efeec0 '__first' '_InputIterator'))))
      (ReturnStmt 0x9eff450 <line:246:4, col:11>
        (DeclRefExpr 0x9eff434 <col:11> '_ForwardIterator' lvalue Var 0x9eff130 '__cur' '_ForwardIterator')))
    <<<NULL>>>)
  (IfStmt 0x9eff5a8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:252:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9eff498 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9eff590 </usr/include/c++/4.6/bits/stl_uninitialized.h:249:2, line:252:2>
      (CallExpr 0x9eff558 <line:250:4, col:42> '<dependent type>'
        (UnresolvedLookupExpr 0x9eff4d0 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x9ef91a0 0x9ef9e60 0x9efa500 0x9efaab0)
        (DeclRefExpr 0x9eff510 <col:18> '_ForwardIterator' lvalue ParmVar 0x9efef40 '__result' '_ForwardIterator')
        (DeclRefExpr 0x9eff528 <col:28> '_ForwardIterator' lvalue Var 0x9eff130 '__cur' '_ForwardIterator')
        (DeclRefExpr 0x9eff540 <col:35> '_Allocator' lvalue ParmVar 0x9efefd0 '__alloc' '_Allocator &'))
      (NullStmt 0x9eff580 <line:251:27>))
    <<<NULL>>>))

;
    template <typename _InputIterator, typename _ForwardIterator, typename _Tp> inline _ForwardIterator __uninitialized_copy_a(_InputIterator __first, _InputIterator __last, _ForwardIterator __result, allocator<_Tp> &) (CompoundStmt 0x9effaf8 </usr/include/c++/4.6/bits/stl_uninitialized.h:259:5, col:66>
  (ReturnStmt 0x9effae8 <col:7, col:63>
    (CallExpr 0x9effac0 <col:14, col:63> '<dependent type>'
      (UnresolvedLookupExpr 0x9effa40 <col:14, col:19> '<overloaded function type>' lvalue (no ADL) = '1' 0x9efbdb0)
      (DeclRefExpr 0x9effa74 <col:38> '_InputIterator' lvalue ParmVar 0x9eff700 '__first' '_InputIterator')
      (DeclRefExpr 0x9effa8c <col:47> '_InputIterator' lvalue ParmVar 0x9eff740 '__last' '_InputIterator')
      (DeclRefExpr 0x9effaa4 <col:55> '_ForwardIterator' lvalue ParmVar 0x9eff780 '__result' '_ForwardIterator'))))

;
    template <typename _InputIterator, typename _ForwardIterator, typename _Allocator> inline _ForwardIterator __uninitialized_move_a(_InputIterator __first, _InputIterator __last, _ForwardIterator __result, _Allocator &__alloc) (CompoundStmt 0x9efff58 </usr/include/c++/4.6/bits/stl_uninitialized.h:266:5, line:270:5>
  (ReturnStmt 0x9efff48 <line:267:7, line:269:24>
    (CallExpr 0x9efff18 <line:267:14, line:269:24> '<dependent type>'
      (UnresolvedLookupExpr 0x9effe50 <line:267:14, col:19> '<overloaded function type>' lvalue (no ADL) = '1' 0x9eff0f0 0x9eff9f0)
      (ParenExpr 0x9effea0 </usr/include/c++/4.6/bits/stl_iterator.h:1128:44, col:50> '_InputIterator' lvalue
        (DeclRefExpr 0x9effe88 </usr/include/c++/4.6/bits/stl_uninitialized.h:267:70> '_InputIterator' lvalue ParmVar 0x9effc20 '__first' '_InputIterator'))
      (ParenExpr 0x9effed0 </usr/include/c++/4.6/bits/stl_iterator.h:1128:44, col:50> '_InputIterator' lvalue
        (DeclRefExpr 0x9effeb4 </usr/include/c++/4.6/bits/stl_uninitialized.h:268:35> '_InputIterator' lvalue ParmVar 0x9effc60 '__last' '_InputIterator'))
      (DeclRefExpr 0x9effee4 <line:269:7> '_ForwardIterator' lvalue ParmVar 0x9effca0 '__result' '_ForwardIterator')
      (DeclRefExpr 0x9effefc <col:17> '_Allocator' lvalue ParmVar 0x9effd10 '__alloc' '_Allocator &'))))

;
    template <typename _ForwardIterator, typename _Tp, typename _Allocator> void __uninitialized_fill_a(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__x, _Allocator &__alloc) (CompoundStmt 0x9f00710 </usr/include/c++/4.6/bits/stl_uninitialized.h:276:5, line:288:5>
  (DeclStmt 0x9f00350 <line:277:7, col:39>
    0x9f00300 "_ForwardIterator __cur =
      (DeclRefExpr 0x9f00334 <col:32> '_ForwardIterator' lvalue ParmVar 0x9f00080 '__first' '_ForwardIterator')")
  (IfStmt 0x9f005c0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:282:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9f00360 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x9f005a8 </usr/include/c++/4.6/bits/stl_uninitialized.h:279:2, line:282:2>
      (ForStmt 0x9f00580 <line:280:4, line:281:53>
        <<<NULL>>>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9f003f8 <line:280:11, col:20> '<dependent type>'
          (UnresolvedLookupExpr 0x9f003a0 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b412d0 0x9ac7fa0 0x9b5e2b0 0x9ba7d20 0x9bc7160 0x9bc74d0 0x9cbb090 0x9cbb590 0x9cbbad0 0x9db08a0)
          (DeclRefExpr 0x9f00370 <col:11> '_ForwardIterator' lvalue Var 0x9f00300 '__cur' '_ForwardIterator')
          (DeclRefExpr 0x9f00388 <col:20> '_ForwardIterator' lvalue ParmVar 0x9f000c0 '__last' '_ForwardIterator'))
        (UnaryOperator 0x9f00438 <col:28, col:30> '<dependent type>' prefix '++'
          (DeclRefExpr 0x9f0041c <col:30> '_ForwardIterator' lvalue Var 0x9f00300 '__cur' '_ForwardIterator'))
        (CallExpr 0x9f00558 <line:281:6, col:53> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9f00468 <col:6, col:14> '<dependent type>' lvalue
            (DeclRefExpr 0x9f0044c <col:6> '_Allocator' lvalue ParmVar 0x9f001a0 '__alloc' '_Allocator &'))
          (CallExpr 0x9f00520 <col:24, col:47> '<dependent type>'
            (UnresolvedLookupExpr 0x9f004b8 <col:24, col:29> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b394e0)
            (UnaryOperator 0x9f00508 <col:41, col:42> '<dependent type>' prefix '*'
              (DeclRefExpr 0x9f004ec <col:42> '_ForwardIterator' lvalue Var 0x9f00300 '__cur' '_ForwardIterator')))
          (DeclRefExpr 0x9f00540 <col:50> 'const _Tp' lvalue ParmVar 0x9f00130 '__x' 'const _Tp &'))))
    <<<NULL>>>)
  (IfStmt 0x9f006f0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:287:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9f005e0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9f006d8 </usr/include/c++/4.6/bits/stl_uninitialized.h:284:2, line:287:2>
      (CallExpr 0x9f006a0 <line:285:4, col:41> '<dependent type>'
        (UnresolvedLookupExpr 0x9f00618 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x9ef91a0 0x9ef9e60 0x9efa500 0x9efaab0)
        (DeclRefExpr 0x9f00658 <col:18> '_ForwardIterator' lvalue ParmVar 0x9f00080 '__first' '_ForwardIterator')
        (DeclRefExpr 0x9f00670 <col:27> '_ForwardIterator' lvalue Var 0x9f00300 '__cur' '_ForwardIterator')
        (DeclRefExpr 0x9f00688 <col:34> '_Allocator' lvalue ParmVar 0x9f001a0 '__alloc' '_Allocator &'))
      (NullStmt 0x9f006c8 <line:286:27>))
    <<<NULL>>>))

;
    template <typename _ForwardIterator, typename _Tp, typename _Tp2> inline void __uninitialized_fill_a(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__x, allocator<_Tp2> &) (CompoundStmt 0x9f074b8 </usr/include/c++/4.6/bits/stl_uninitialized.h:294:5, col:54>
  (CallExpr 0x9f07490 <col:7, col:51> '<dependent type>'
    (UnresolvedLookupExpr 0x9f07410 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9efd420)
    (DeclRefExpr 0x9f07444 <col:31> '_ForwardIterator' lvalue ParmVar 0x9f00840 '__first' '_ForwardIterator')
    (DeclRefExpr 0x9f0745c <col:40> '_ForwardIterator' lvalue ParmVar 0x9f07120 '__last' '_ForwardIterator')
    (DeclRefExpr 0x9f07474 <col:48> 'const _Tp' lvalue ParmVar 0x9f07190 '__x' 'const _Tp &')))

;
    template <typename _ForwardIterator, typename _Size, typename _Tp, typename _Allocator> void __uninitialized_fill_n_a(_ForwardIterator __first, _Size __n, const _Tp &__x, _Allocator &__alloc) (CompoundStmt 0x9f07d18 </usr/include/c++/4.6/bits/stl_uninitialized.h:301:5, line:313:5>
  (DeclStmt 0x9f07920 <line:302:7, col:39>
    0x9f078d0 "_ForwardIterator __cur =
      (DeclRefExpr 0x9f07904 <col:32> '_ForwardIterator' lvalue ParmVar 0x9f07630 '__first' '_ForwardIterator')")
  (IfStmt 0x9f07bc8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:307:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9f07930 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x9f07bb0 </usr/include/c++/4.6/bits/stl_uninitialized.h:304:2, line:307:2>
      (ForStmt 0x9f07b88 <line:305:4, line:306:53>
        <<<NULL>>>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9f079b8 <line:305:11, col:17> '<dependent type>'
          (UnresolvedLookupExpr 0x9f07970 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b42c70 0x9ac83c0 0x9b5e730 0x9cbd1f0 0x9cbd720 0x9cbdc50)
          (DeclRefExpr 0x9f07940 <col:11> '_Size' lvalue ParmVar 0x9f07670 '__n' '_Size')
          (IntegerLiteral 0x9f07958 <col:17> 'int' 0))
        (BinaryOperator 0x9f07a40 <col:20, col:29> '<dependent type>' ','
          (UnaryOperator 0x9f079f8 <col:20, col:22> '<dependent type>' prefix '--'
            (DeclRefExpr 0x9f079dc <col:22> '_Size' lvalue ParmVar 0x9f07670 '__n' '_Size'))
          (UnaryOperator 0x9f07a28 <col:27, col:29> '<dependent type>' prefix '++'
            (DeclRefExpr 0x9f07a0c <col:29> '_ForwardIterator' lvalue Var 0x9f078d0 '__cur' '_ForwardIterator')))
        (CallExpr 0x9f07b60 <line:306:6, col:53> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9f07a70 <col:6, col:14> '<dependent type>' lvalue
            (DeclRefExpr 0x9f07a58 <col:6> '_Allocator' lvalue ParmVar 0x9f07770 '__alloc' '_Allocator &'))
          (CallExpr 0x9f07b28 <col:24, col:47> '<dependent type>'
            (UnresolvedLookupExpr 0x9f07ac0 <col:24, col:29> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b394e0)
            (UnaryOperator 0x9f07b10 <col:41, col:42> '<dependent type>' prefix '*'
              (DeclRefExpr 0x9f07af4 <col:42> '_ForwardIterator' lvalue Var 0x9f078d0 '__cur' '_ForwardIterator')))
          (DeclRefExpr 0x9f07b48 <col:50> 'const _Tp' lvalue ParmVar 0x9f076e0 '__x' 'const _Tp &'))))
    <<<NULL>>>)
  (IfStmt 0x9f07cf8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:312:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9f07be8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9f07ce0 </usr/include/c++/4.6/bits/stl_uninitialized.h:309:2, line:312:2>
      (CallExpr 0x9f07ca8 <line:310:4, col:41> '<dependent type>'
        (UnresolvedLookupExpr 0x9f07c20 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x9ef91a0 0x9ef9e60 0x9efa500 0x9efaab0)
        (DeclRefExpr 0x9f07c60 <col:18> '_ForwardIterator' lvalue ParmVar 0x9f07630 '__first' '_ForwardIterator')
        (DeclRefExpr 0x9f07c78 <col:27> '_ForwardIterator' lvalue Var 0x9f078d0 '__cur' '_ForwardIterator')
        (DeclRefExpr 0x9f07c90 <col:34> '_Allocator' lvalue ParmVar 0x9f07770 '__alloc' '_Allocator &'))
      (NullStmt 0x9f07cd0 <line:311:27>))
    <<<NULL>>>))

;
    template <typename _ForwardIterator, typename _Size, typename _Tp, typename _Tp2> inline void __uninitialized_fill_n_a(_ForwardIterator __first, _Size __n, const _Tp &__x, allocator<_Tp2> &) (CompoundStmt 0x9f082c8 </usr/include/c++/4.6/bits/stl_uninitialized.h:320:5, col:53>
  (CallExpr 0x9f082a0 <col:7, col:50> '<dependent type>'
    (UnresolvedLookupExpr 0x9f08220 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9efea60)
    (DeclRefExpr 0x9f08254 <col:33> '_ForwardIterator' lvalue ParmVar 0x9f07ea0 '__first' '_ForwardIterator')
    (DeclRefExpr 0x9f0826c <col:42> '_Size' lvalue ParmVar 0x9f07ee0 '__n' '_Size')
    (DeclRefExpr 0x9f08284 <col:47> 'const _Tp' lvalue ParmVar 0x9f07f50 '__x' 'const _Tp &')))

;
    template <typename _InputIterator1, typename _InputIterator2, typename _ForwardIterator, typename _Allocator> inline _ForwardIterator __uninitialized_copy_move(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _InputIterator2 __last2, _ForwardIterator __result, _Allocator &__alloc) (CompoundStmt 0x9f08ac0 </usr/include/c++/4.6/bits/stl_uninitialized.h:341:5, line:354:5>
  (DeclStmt 0x9f08848 <line:342:7, line:344:19>
    0x9f08730 "_ForwardIterator __mid =
      (CallExpr 0x9f08818 <line:342:32, line:344:18> '<dependent type>'
        (UnresolvedLookupExpr 0x9f08780 <line:342:32, col:37> '<overloaded function type>' lvalue (no ADL) = '1' 0x9eff0f0 0x9eff9f0)
        (DeclRefExpr 0x9f087b8 <col:60> '_InputIterator1' lvalue ParmVar 0x9f08440 '__first1' '_InputIterator1')
        (DeclRefExpr 0x9f087d0 <col:70> '_InputIterator1' lvalue ParmVar 0x9f08480 '__last1' '_InputIterator1')
        (DeclRefExpr 0x9f087e8 <line:343:11> '_ForwardIterator' lvalue ParmVar 0x9f08540 '__result' '_ForwardIterator')
        (DeclRefExpr 0x9f08800 <line:344:11> '_Allocator' lvalue ParmVar 0x9f085b0 '__alloc' '_Allocator &'))")
  (IfStmt 0x9f08970 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:348:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9f08858 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x9f08958 </usr/include/c++/4.6/bits/stl_uninitialized.h:346:2, line:348:2>
      (ReturnStmt 0x9f08948 <line:347:4, col:72>
        (CallExpr 0x9f08918 <col:11, col:72> '<dependent type>'
          (UnresolvedLookupExpr 0x9f08880 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0x9effe00)
          (DeclRefExpr 0x9f088b4 <col:39> '_InputIterator2' lvalue ParmVar 0x9f084c0 '__first2' '_InputIterator2')
          (DeclRefExpr 0x9f088cc <col:49> '_InputIterator2' lvalue ParmVar 0x9f08500 '__last2' '_InputIterator2')
          (DeclRefExpr 0x9f088e4 <col:58> '_ForwardIterator' lvalue Var 0x9f08730 '__mid' '_ForwardIterator')
          (DeclRefExpr 0x9f088fc <col:65> '_Allocator' lvalue ParmVar 0x9f085b0 '__alloc' '_Allocator &'))))
    <<<NULL>>>)
  (IfStmt 0x9f08aa0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:353:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9f08990 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9f08a88 </usr/include/c++/4.6/bits/stl_uninitialized.h:350:2, line:353:2>
      (CallExpr 0x9f08a50 <line:351:4, col:42> '<dependent type>'
        (UnresolvedLookupExpr 0x9f089c8 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x9ef91a0 0x9ef9e60 0x9efa500 0x9efaab0)
        (DeclRefExpr 0x9f08a08 <col:18> '_ForwardIterator' lvalue ParmVar 0x9f08540 '__result' '_ForwardIterator')
        (DeclRefExpr 0x9f08a20 <col:28> '_ForwardIterator' lvalue Var 0x9f08730 '__mid' '_ForwardIterator')
        (DeclRefExpr 0x9f08a38 <col:35> '_Allocator' lvalue ParmVar 0x9f085b0 '__alloc' '_Allocator &'))
      (NullStmt 0x9f08a78 <line:352:27>))
    <<<NULL>>>))

;
    template <typename _InputIterator1, typename _InputIterator2, typename _ForwardIterator, typename _Allocator> inline _ForwardIterator __uninitialized_move_copy(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _InputIterator2 __last2, _ForwardIterator __result, _Allocator &__alloc) (CompoundStmt 0x9f09290 </usr/include/c++/4.6/bits/stl_uninitialized.h:369:5, line:382:5>
  (DeclStmt 0x9f09018 <line:370:7, line:372:19>
    0x9f08f00 "_ForwardIterator __mid =
      (CallExpr 0x9f08fe8 <line:370:32, line:372:18> '<dependent type>'
        (UnresolvedLookupExpr 0x9f08f50 <line:370:32, col:37> '<overloaded function type>' lvalue (no ADL) = '1' 0x9effe00)
        (DeclRefExpr 0x9f08f84 <col:60> '_InputIterator1' lvalue ParmVar 0x9f08c40 '__first1' '_InputIterator1')
        (DeclRefExpr 0x9f08f9c <col:70> '_InputIterator1' lvalue ParmVar 0x9f08c80 '__last1' '_InputIterator1')
        (DeclRefExpr 0x9f08fb4 <line:371:11> '_ForwardIterator' lvalue ParmVar 0x9f08d40 '__result' '_ForwardIterator')
        (DeclRefExpr 0x9f08fcc <line:372:11> '_Allocator' lvalue ParmVar 0x9f08db0 '__alloc' '_Allocator &'))")
  (IfStmt 0x9f09140 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:376:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9f09028 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x9f09128 </usr/include/c++/4.6/bits/stl_uninitialized.h:374:2, line:376:2>
      (ReturnStmt 0x9f09118 <line:375:4, col:72>
        (CallExpr 0x9f090e8 <col:11, col:72> '<dependent type>'
          (UnresolvedLookupExpr 0x9f09050 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0x9eff0f0 0x9eff9f0)
          (DeclRefExpr 0x9f09088 <col:39> '_InputIterator2' lvalue ParmVar 0x9f08cc0 '__first2' '_InputIterator2')
          (DeclRefExpr 0x9f090a0 <col:49> '_InputIterator2' lvalue ParmVar 0x9f08d00 '__last2' '_InputIterator2')
          (DeclRefExpr 0x9f090b8 <col:58> '_ForwardIterator' lvalue Var 0x9f08f00 '__mid' '_ForwardIterator')
          (DeclRefExpr 0x9f090d0 <col:65> '_Allocator' lvalue ParmVar 0x9f08db0 '__alloc' '_Allocator &'))))
    <<<NULL>>>)
  (IfStmt 0x9f09270 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:381:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9f09160 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9f09258 </usr/include/c++/4.6/bits/stl_uninitialized.h:378:2, line:381:2>
      (CallExpr 0x9f09220 <line:379:4, col:42> '<dependent type>'
        (UnresolvedLookupExpr 0x9f09198 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x9ef91a0 0x9ef9e60 0x9efa500 0x9efaab0)
        (DeclRefExpr 0x9f091d8 <col:18> '_ForwardIterator' lvalue ParmVar 0x9f08d40 '__result' '_ForwardIterator')
        (DeclRefExpr 0x9f091f0 <col:28> '_ForwardIterator' lvalue Var 0x9f08f00 '__mid' '_ForwardIterator')
        (DeclRefExpr 0x9f09208 <col:35> '_Allocator' lvalue ParmVar 0x9f08db0 '__alloc' '_Allocator &'))
      (NullStmt 0x9f09248 <line:380:27>))
    <<<NULL>>>))

;
    template <typename _ForwardIterator, typename _Tp, typename _InputIterator, typename _Allocator> inline _ForwardIterator __uninitialized_fill_move(_ForwardIterator __result, _ForwardIterator __mid, const _Tp &__x, _InputIterator __first, _InputIterator __last, _Allocator &__alloc) (CompoundStmt 0x9f09a78 </usr/include/c++/4.6/bits/stl_uninitialized.h:393:5, line:404:5>
  (CallExpr 0x9f097e0 <line:394:7, col:64> '<dependent type>'
    (UnresolvedLookupExpr 0x9f09748 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9f002c0 0x9f073b0)
    (DeclRefExpr 0x9f09780 <col:35> '_ForwardIterator' lvalue ParmVar 0x9f09410 '__result' '_ForwardIterator')
    (DeclRefExpr 0x9f09798 <col:45> '_ForwardIterator' lvalue ParmVar 0x9f09450 '__mid' '_ForwardIterator')
    (DeclRefExpr 0x9f097b0 <col:52> 'const _Tp' lvalue ParmVar 0x9f094c0 '__x' 'const _Tp &')
    (DeclRefExpr 0x9f097c8 <col:57> '_Allocator' lvalue ParmVar 0x9f095b0 '__alloc' '_Allocator &'))
  (IfStmt 0x9f09928 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:398:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9f09810 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x9f09910 </usr/include/c++/4.6/bits/stl_uninitialized.h:396:2, line:398:2>
      (ReturnStmt 0x9f09900 <line:397:4, col:70>
        (CallExpr 0x9f098d0 <col:11, col:70> '<dependent type>'
          (UnresolvedLookupExpr 0x9f09838 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0x9effe00)
          (DeclRefExpr 0x9f0986c <col:39> '_InputIterator' lvalue ParmVar 0x9f09500 '__first' '_InputIterator')
          (DeclRefExpr 0x9f09884 <col:48> '_InputIterator' lvalue ParmVar 0x9f09540 '__last' '_InputIterator')
          (DeclRefExpr 0x9f0989c <col:56> '_ForwardIterator' lvalue ParmVar 0x9f09450 '__mid' '_ForwardIterator')
          (DeclRefExpr 0x9f098b4 <col:63> '_Allocator' lvalue ParmVar 0x9f095b0 '__alloc' '_Allocator &'))))
    <<<NULL>>>)
  (IfStmt 0x9f09a58 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:403:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9f09948 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9f09a40 </usr/include/c++/4.6/bits/stl_uninitialized.h:400:2, line:403:2>
      (CallExpr 0x9f09a08 <line:401:4, col:42> '<dependent type>'
        (UnresolvedLookupExpr 0x9f09980 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x9ef91a0 0x9ef9e60 0x9efa500 0x9efaab0)
        (DeclRefExpr 0x9f099c0 <col:18> '_ForwardIterator' lvalue ParmVar 0x9f09410 '__result' '_ForwardIterator')
        (DeclRefExpr 0x9f099d8 <col:28> '_ForwardIterator' lvalue ParmVar 0x9f09450 '__mid' '_ForwardIterator')
        (DeclRefExpr 0x9f099f0 <col:35> '_Allocator' lvalue ParmVar 0x9f095b0 '__alloc' '_Allocator &'))
      (NullStmt 0x9f09a30 <line:402:27>))
    <<<NULL>>>))

;
    template <typename _InputIterator, typename _ForwardIterator, typename _Tp, typename _Allocator> inline void __uninitialized_move_fill(_InputIterator __first1, _InputIterator __last1, _ForwardIterator __first2, _ForwardIterator __last2, const _Tp &__x, _Allocator &__alloc) (CompoundStmt 0x9f0a2b0 </usr/include/c++/4.6/bits/stl_uninitialized.h:416:5, line:429:5>
  (DeclStmt 0x9f0a038 <line:417:7, line:419:20>
    0x9f09f20 "_ForwardIterator __mid2 =
      (CallExpr 0x9f0a008 <line:417:33, line:419:19> '<dependent type>'
        (UnresolvedLookupExpr 0x9f09f70 <line:417:33, col:38> '<overloaded function type>' lvalue (no ADL) = '1' 0x9effe00)
        (DeclRefExpr 0x9f09fa4 <col:61> '_InputIterator' lvalue ParmVar 0x9f09c00 '__first1' '_InputIterator')
        (DeclRefExpr 0x9f09fbc <col:71> '_InputIterator' lvalue ParmVar 0x9f09c40 '__last1' '_InputIterator')
        (DeclRefExpr 0x9f09fd4 <line:418:12> '_ForwardIterator' lvalue ParmVar 0x9f09c80 '__first2' '_ForwardIterator')
        (DeclRefExpr 0x9f09fec <line:419:12> '_Allocator' lvalue ParmVar 0x9f09da0 '__alloc' '_Allocator &'))")
  (IfStmt 0x9f0a160 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:423:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9f0a048 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x9f0a148 </usr/include/c++/4.6/bits/stl_uninitialized.h:421:2, line:423:2>
      (CallExpr 0x9f0a118 <line:422:4, col:61> '<dependent type>'
        (UnresolvedLookupExpr 0x9f0a080 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x9f002c0 0x9f073b0)
        (DeclRefExpr 0x9f0a0b8 <col:32> '_ForwardIterator' lvalue Var 0x9f09f20 '__mid2' '_ForwardIterator')
        (DeclRefExpr 0x9f0a0d0 <col:40> '_ForwardIterator' lvalue ParmVar 0x9f09cc0 '__last2' '_ForwardIterator')
        (DeclRefExpr 0x9f0a0e8 <col:49> 'const _Tp' lvalue ParmVar 0x9f09d30 '__x' 'const _Tp &')
        (DeclRefExpr 0x9f0a100 <col:54> '_Allocator' lvalue ParmVar 0x9f09da0 '__alloc' '_Allocator &')))
    <<<NULL>>>)
  (IfStmt 0x9f0a290 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:428:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9f0a180 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9f0a278 </usr/include/c++/4.6/bits/stl_uninitialized.h:425:2, line:428:2>
      (CallExpr 0x9f0a240 <line:426:4, col:43> '<dependent type>'
        (UnresolvedLookupExpr 0x9f0a1b8 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x9ef91a0 0x9ef9e60 0x9efa500 0x9efaab0)
        (DeclRefExpr 0x9f0a1f8 <col:18> '_ForwardIterator' lvalue ParmVar 0x9f09c80 '__first2' '_ForwardIterator')
        (DeclRefExpr 0x9f0a210 <col:28> '_ForwardIterator' lvalue Var 0x9f09f20 '__mid2' '_ForwardIterator')
        (DeclRefExpr 0x9f0a228 <col:36> '_Allocator' lvalue ParmVar 0x9f09da0 '__alloc' '_Allocator &'))
      (NullStmt 0x9f0a268 <line:427:27>))
    <<<NULL>>>))

;
}
namespace std {
    template <typename _Tp, typename _Alloc> struct _Vector_base {
        struct _Vector_base;
        typedef typename _Alloc::_Alloc::rebind<_Tp>::other _Tp_alloc_type;
        struct _Vector_impl : public _Tp_alloc_type {
            struct _Vector_impl;
            typename _Tp_alloc_type::pointer _M_start;
            typename _Tp_alloc_type::pointer _M_finish;
            typename _Tp_alloc_type::pointer _M_end_of_storage;
            _Vector_impl() : _Tp_alloc_type(), _M_start((IntegerLiteral 0x9f0b878 </usr/include/c++/4.6/bits/stl_vector.h:83:31> 'int' 0)
), _M_finish((IntegerLiteral 0x9f0b8c8 </usr/include/c++/4.6/bits/stl_vector.h:83:45> 'int' 0)
), _M_end_of_storage((IntegerLiteral 0x9f0b918 </usr/include/c++/4.6/bits/stl_vector.h:83:67> 'int' 0)
) (CompoundStmt 0x9f0b978 </usr/include/c++/4.6/bits/stl_vector.h:84:2, col:4>)


            _Vector_impl(const _Tp_alloc_type &__a) : _Tp_alloc_type((DeclRefExpr 0x9f0b988 </usr/include/c++/4.6/bits/stl_vector.h:87:19> 'const _Tp_alloc_type':'const typename _Alloc::_Alloc::rebind<_Tp>::other' lvalue ParmVar 0x9f0ac30 '__a' 'const _Tp_alloc_type &')
), _M_start((IntegerLiteral 0x9f0b9e8 </usr/include/c++/4.6/bits/stl_vector.h:87:34> 'int' 0)
), _M_finish((IntegerLiteral 0x9f0ba38 </usr/include/c++/4.6/bits/stl_vector.h:87:48> 'int' 0)
), _M_end_of_storage((IntegerLiteral 0x9f0ba88 </usr/include/c++/4.6/bits/stl_vector.h:87:70> 'int' 0)
) (CompoundStmt 0x9f0bae8 </usr/include/c++/4.6/bits/stl_vector.h:88:2, col:4>)


        };
    public:
    public:
        typedef _Alloc allocator_type;
        _Tp_alloc_type &_M_get_Tp_allocator() (CompoundStmt 0x9f0bc48 </usr/include/c++/4.6/bits/stl_vector.h:96:7, col:63>
  (ReturnStmt 0x9f0bc38 <col:9, col:60>
    (UnaryOperator 0x9f0bc20 <col:16, col:60> '<dependent type>' prefix '*'
      (CXXStaticCastExpr 0x9f0bc08 <col:17, col:60> '_Tp_alloc_type *' static_cast<_Tp_alloc_type *> <Dependent>
        (CXXOperatorCallExpr 0x9f0bba0 <col:46, col:53> '<dependent type>'
          (UnresolvedLookupExpr 0x9f0bb60 <col:46, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9d5b750 0x9d68890 0x9d69b00)
          (CXXDependentScopeMemberExpr 0x9f0bb28 <col:47, col:53> '<dependent type>' lvalue
            (CXXThisExpr 0x9f0bb18 <col:47> '_Vector_base<_Tp, _Alloc> *' this)))))))


        const _Tp_alloc_type &_M_get_Tp_allocator() const (CompoundStmt 0x9f0bda8 </usr/include/c++/4.6/bits/stl_vector.h:100:7, col:69>
  (ReturnStmt 0x9f0bd98 <col:9, col:66>
    (UnaryOperator 0x9f0bd80 <col:16, col:66> '<dependent type>' prefix '*'
      (CXXStaticCastExpr 0x9f0bd68 <col:17, col:66> 'const _Tp_alloc_type *' static_cast<const _Tp_alloc_type *> <Dependent>
        (CXXOperatorCallExpr 0x9f0bd00 <col:52, col:59> '<dependent type>'
          (UnresolvedLookupExpr 0x9f0bcc0 <col:52, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9d5b750 0x9d68890 0x9d69b00)
          (CXXDependentScopeMemberExpr 0x9f0bc88 <col:53, col:59> '<dependent type>' lvalue
            (CXXThisExpr 0x9f0bc78 <col:53> 'const _Vector_base<_Tp, _Alloc> *' this)))))))


        allocator_type get_allocator() const (CompoundStmt 0x9f0be68 </usr/include/c++/4.6/bits/stl_vector.h:104:7, col:55>
  (ReturnStmt 0x9f0be58 <col:9, col:52>
    (CXXUnresolvedConstructExpr 0x9f0be38 <col:16, col:52> 'allocator_type':'_Alloc'
      (CallExpr 0x9f0be18 <col:31, col:51> '<dependent type>'
        (UnresolvedMemberExpr 0x9f0bdd8 <col:31> '<bound member function type>' lvalue)))))


        _Vector_base<_Tp, _Alloc>() : _M_impl() (CompoundStmt 0x9f0bec0 </usr/include/c++/4.6/bits/stl_vector.h:107:19, col:21>)


        _Vector_base<_Tp, _Alloc>(const allocator_type &__a) : _M_impl((DeclRefExpr 0x9f0bed0 </usr/include/c++/4.6/bits/stl_vector.h:110:17> 'const allocator_type':'const _Alloc' lvalue ParmVar 0x9f0b0f0 '__a' 'const allocator_type &')
) (CompoundStmt 0x9f0bf30 </usr/include/c++/4.6/bits/stl_vector.h:110:22, col:24>)


        _Vector_base<_Tp, _Alloc>(size_t __n) : _M_impl() (CompoundStmt 0x9f0c350 </usr/include/c++/4.6/bits/stl_vector.h:114:7, line:118:7>
  (BinaryOperator 0x9f0c080 <line:115:2, col:48> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x9f0bfc8 <col:2, col:16> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9f0bf90 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0x9f0bf80 <col:2> '_Vector_base<_Tp, _Alloc> *' this)))
    (CallExpr 0x9f0c060 <col:27, col:48> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f0c010 <col:27, col:33> '<dependent type>' lvalue
        (CXXThisExpr 0x9f0c000 <col:27> '_Vector_base<_Tp, _Alloc> *' this))
      (DeclRefExpr 0x9f0c044 <col:45> 'size_t':'unsigned int' lvalue ParmVar 0x9f0b210 '__n' 'size_t':'unsigned int')))
  (BinaryOperator 0x9f0c198 <line:116:2, col:42> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x9f0c0e0 <col:2, col:16> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9f0c0a8 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0x9f0c098 <col:2> '_Vector_base<_Tp, _Alloc> *' this)))
    (CXXDependentScopeMemberExpr 0x9f0c160 <col:28, col:42> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9f0c128 <col:28, col:34> '<dependent type>' lvalue
        (CXXThisExpr 0x9f0c118 <col:28> '_Vector_base<_Tp, _Alloc> *' this))))
  (BinaryOperator 0x9f0c338 <line:117:2, col:61> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x9f0c1f8 <col:2, col:16> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9f0c1c0 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0x9f0c1b0 <col:2> '_Vector_base<_Tp, _Alloc> *' this)))
    (CXXOperatorCallExpr 0x9f0c310 <col:36, col:61> '<dependent type>'
      (UnresolvedLookupExpr 0x9f0c2c8 <col:59, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9ce1500 0x9ce2100 0x9cb8030 0x9cb8830)
      (CXXDependentScopeMemberExpr 0x9f0c278 <col:36, col:50> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0x9f0c240 <col:36, col:42> '<dependent type>' lvalue
          (CXXThisExpr 0x9f0c230 <col:36> '_Vector_base<_Tp, _Alloc> *' this)))
      (DeclRefExpr 0x9f0c2ac <col:61> 'size_t':'unsigned int' lvalue ParmVar 0x9f0b210 '__n' 'size_t':'unsigned int'))))


        _Vector_base<_Tp, _Alloc>(size_t __n, const allocator_type &__a) : _M_impl((DeclRefExpr 0x9f0c36c </usr/include/c++/4.6/bits/stl_vector.h:121:17> 'const allocator_type':'const _Alloc' lvalue ParmVar 0x9f0b330 '__a' 'const allocator_type &')
) (CompoundStmt 0x9f0c7a0 </usr/include/c++/4.6/bits/stl_vector.h:122:7, line:126:7>
  (BinaryOperator 0x9f0c4d0 <line:123:2, col:48> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x9f0c418 <col:2, col:16> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9f0c3e0 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0x9f0c3d0 <col:2> '_Vector_base<_Tp, _Alloc> *' this)))
    (CallExpr 0x9f0c4b0 <col:27, col:48> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f0c460 <col:27, col:33> '<dependent type>' lvalue
        (CXXThisExpr 0x9f0c450 <col:27> '_Vector_base<_Tp, _Alloc> *' this))
      (DeclRefExpr 0x9f0c494 <col:45> 'size_t':'unsigned int' lvalue ParmVar 0x9f0b2e0 '__n' 'size_t':'unsigned int')))
  (BinaryOperator 0x9f0c5e8 <line:124:2, col:42> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x9f0c530 <col:2, col:16> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9f0c4f8 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0x9f0c4e8 <col:2> '_Vector_base<_Tp, _Alloc> *' this)))
    (CXXDependentScopeMemberExpr 0x9f0c5b0 <col:28, col:42> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9f0c578 <col:28, col:34> '<dependent type>' lvalue
        (CXXThisExpr 0x9f0c568 <col:28> '_Vector_base<_Tp, _Alloc> *' this))))
  (BinaryOperator 0x9f0c788 <line:125:2, col:61> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x9f0c648 <col:2, col:16> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9f0c610 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0x9f0c600 <col:2> '_Vector_base<_Tp, _Alloc> *' this)))
    (CXXOperatorCallExpr 0x9f0c760 <col:36, col:61> '<dependent type>'
      (UnresolvedLookupExpr 0x9f0c718 <col:59, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9ce1500 0x9ce2100 0x9cb8030 0x9cb8830)
      (CXXDependentScopeMemberExpr 0x9f0c6c8 <col:36, col:50> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0x9f0c690 <col:36, col:42> '<dependent type>' lvalue
          (CXXThisExpr 0x9f0c680 <col:36> '_Vector_base<_Tp, _Alloc> *' this)))
      (DeclRefExpr 0x9f0c6fc <col:61> 'size_t':'unsigned int' lvalue ParmVar 0x9f0b2e0 '__n' 'size_t':'unsigned int'))))


        void ~_Vector_base<_Tp, _Alloc>() (CompoundStmt 0x9f0c9f8 </usr/include/c++/4.6/bits/stl_vector.h:142:7, line:143:36>
  (CallExpr 0x9f0c9d0 <line:142:9, line:143:33> '<dependent type>'
    (MemberExpr 0x9f0c7d0 <line:142:9> '<bound member function type>' ->_M_deallocate 0x9f0b7d0
      (CXXThisExpr 0x9f0c7c0 <col:9> '_Vector_base<_Tp, _Alloc> *' this))
    (CXXDependentScopeMemberExpr 0x9f0c838 <col:23, col:37> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9f0c800 <col:23, col:29> '<dependent type>' lvalue
        (CXXThisExpr 0x9f0c7f0 <col:23> '_Vector_base<_Tp, _Alloc> *' this)))
    (CXXOperatorCallExpr 0x9f0c9a8 <col:47, line:143:25> '<dependent type>'
      (UnresolvedLookupExpr 0x9f0c970 <col:9, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
      (CXXDependentScopeMemberExpr 0x9f0c8b8 <line:142:47, col:61> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0x9f0c880 <col:47, col:53> '<dependent type>' lvalue
          (CXXThisExpr 0x9f0c870 <col:47> '_Vector_base<_Tp, _Alloc> *' this)))
      (CXXDependentScopeMemberExpr 0x9f0c938 <line:143:11, col:25> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0x9f0c900 <col:11, col:17> '<dependent type>' lvalue
          (CXXThisExpr 0x9f0c8f0 <col:11> '_Vector_base<_Tp, _Alloc> *' this))))))


    public:
    public:
        std::_Vector_base::_Vector_impl _M_impl;
        typename _Tp_alloc_type::pointer _M_allocate(size_t __n) (CompoundStmt 0x9f0cb60 </usr/include/c++/4.6/bits/stl_vector.h:150:7, col:54>
  (ReturnStmt 0x9f0cb50 <col:9, col:51>
    (ConditionalOperator 0x9f0cb30 <col:16, col:51> '<dependent type>'
      (BinaryOperator 0x9f0ca60 <col:16, col:23> '_Bool' '!='
        (ImplicitCastExpr 0x9f0ca40 <col:16> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9f0ca0c <col:16> 'size_t':'unsigned int' lvalue ParmVar 0x9f0b590 '__n' 'size_t':'unsigned int'))
        (ImplicitCastExpr 0x9f0ca50 <col:23> 'unsigned int' <IntegralCast>
          (IntegerLiteral 0x9f0ca28 <col:23> 'int' 0)))
      (CallExpr 0x9f0caf8 <col:27, col:47> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f0caa8 <col:27, col:35> '<dependent type>' lvalue
          (MemberExpr 0x9f0ca88 <col:27> 'struct std::_Vector_base::_Vector_impl' lvalue ->_M_impl 0x9f0b530
            (CXXThisExpr 0x9f0ca78 <col:27> '_Vector_base<_Tp, _Alloc> *' this)))
        (DeclRefExpr 0x9f0cadc <col:44> 'size_t':'unsigned int' lvalue ParmVar 0x9f0b590 '__n' 'size_t':'unsigned int'))
      (IntegerLiteral 0x9f0cb18 <col:51> 'int' 0))))


        void _M_deallocate(typename _Tp_alloc_type::pointer __p, size_t __n) (CompoundStmt 0x9f0cc70 </usr/include/c++/4.6/bits/stl_vector.h:154:7, line:157:7>
  (IfStmt 0x9f0cc50 <line:155:2, line:156:31>
    <<<NULL>>>
    (DeclRefExpr 0x9f0cb74 <line:155:6> 'typename _Tp_alloc_type::pointer' lvalue ParmVar 0x9f0b6f0 '__p' 'typename _Tp_alloc_type::pointer')
    (CallExpr 0x9f0cc28 <line:156:4, col:31> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f0cbc0 <col:4, col:12> '<dependent type>' lvalue
        (MemberExpr 0x9f0cba0 <col:4> 'struct std::_Vector_base::_Vector_impl' lvalue ->_M_impl 0x9f0b530
          (CXXThisExpr 0x9f0cb90 <col:4> '_Vector_base<_Tp, _Alloc> *' this)))
      (DeclRefExpr 0x9f0cbf4 <col:23> 'typename _Tp_alloc_type::pointer' lvalue ParmVar 0x9f0b6f0 '__p' 'typename _Tp_alloc_type::pointer')
      (DeclRefExpr 0x9f0cc0c <col:28> 'size_t':'unsigned int' lvalue ParmVar 0x9f0b730 '__n' 'size_t':'unsigned int'))
    <<<NULL>>>))


    };
    template <typename _Tp = std::basic_string<char>, typename _Alloc = std::allocator<std::basic_string<char> >> class vector
template <typename _Tp = std::basic_string<wchar_t>, typename _Alloc = std::allocator<std::basic_string<wchar_t> >> class vector
template <typename _Tp, typename _Alloc = std::allocator<_Tp>> class vector : protected _Vector_base<_Tp, _Alloc> {
        class vector;
        typedef typename _Alloc::value_type _Alloc_value_type;
        typedef _Vector_base<_Tp, _Alloc> _Base;
        typedef typename _Base::_Tp_alloc_type _Tp_alloc_type;
    public:
    public:
        typedef _Tp value_type;
        typedef typename _Tp_alloc_type::pointer pointer;
        typedef typename _Tp_alloc_type::const_pointer const_pointer;
        typedef typename _Tp_alloc_type::reference reference;
        typedef typename _Tp_alloc_type::const_reference const_reference;
        typedef __gnu_cxx::__normal_iterator<pointer, vector<_Tp, _Alloc> > iterator;
        typedef __gnu_cxx::__normal_iterator<const_pointer, vector<_Tp, _Alloc> > const_iterator;
        typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
        typedef std::reverse_iterator<iterator> reverse_iterator;
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef _Alloc allocator_type;
    protected:
    protected:
        using _Base::1;
        using _Base::1;
        using _Base::1;
        using _Base::1;
    public:
    public:
        vector<_Tp, _Alloc>() : _Base() (CompoundStmt 0x9f174a0 </usr/include/c++/4.6/bits/stl_vector.h:218:17, col:19>)


        vector<_Tp, _Alloc>(const allocator_type &__a) : _Base((DeclRefExpr 0x9f174b0 </usr/include/c++/4.6/bits/stl_vector.h:226:15> 'const allocator_type':'const _Alloc' lvalue ParmVar 0x9f0e1c0 '__a' 'const allocator_type &')
) (CompoundStmt 0x9f17510 </usr/include/c++/4.6/bits/stl_vector.h:226:20, col:22>)


        vector<_Tp, _Alloc>(size_type __n, const value_type &__value = (CXXUnresolvedConstructExpr 0x9f173e0 </usr/include/c++/4.6/bits/stl_vector.h:263:57, col:68> 'value_type':'_Tp')
, const allocator_type &__a = (CXXUnresolvedConstructExpr 0x9f17400 </usr/include/c++/4.6/bits/stl_vector.h:264:35, col:50> 'allocator_type':'_Alloc')
) : _Base((DeclRefExpr 0x9f17520 </usr/include/c++/4.6/bits/stl_vector.h:265:15> 'size_type':'unsigned int' lvalue ParmVar 0x9f0e2d0 '__n' 'size_type':'unsigned int')
, (DeclRefExpr 0x9f17538 </usr/include/c++/4.6/bits/stl_vector.h:265:20> 'const allocator_type':'const _Alloc' lvalue ParmVar 0x9f0e3a0 '__a' 'const allocator_type &')
) (CompoundStmt 0x9f17640 </usr/include/c++/4.6/bits/stl_vector.h:266:7, col:43>
  (CallExpr 0x9f17618 <col:9, col:40> '<dependent type>'
    (MemberExpr 0x9f175c8 <col:9> '<bound member function type>' ->_M_fill_initialize 0x9f15a70
      (CXXThisExpr 0x9f175b8 <col:9> 'vector<_Tp, _Alloc> *' this))
    (DeclRefExpr 0x9f175e8 <col:28> 'size_type':'unsigned int' lvalue ParmVar 0x9f0e2d0 '__n' 'size_type':'unsigned int')
    (DeclRefExpr 0x9f17600 <col:33> 'const value_type':'const _Tp' lvalue ParmVar 0x9f0e350 '__value' 'const value_type &')))


        vector<_Tp, _Alloc>(const vector<_Tp, _Alloc> &__x) : _Base((CallExpr 0x9f176a8 </usr/include/c++/4.6/bits/stl_vector.h:279:15, col:24> '<dependent type>'
  (CXXDependentScopeMemberExpr 0x9f17670 <col:15, col:19> '<dependent type>' lvalue
    (DeclRefExpr 0x9f17654 <col:15> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x9f0e510 '__x' 'const vector<_Tp, _Alloc> &')))
, (CallExpr 0x9f17718 </usr/include/c++/4.6/bits/stl_vector.h:279:27, col:51> '<dependent type>'
  (CXXDependentScopeMemberExpr 0x9f176e0 <col:27, col:31> '<dependent type>' lvalue
    (DeclRefExpr 0x9f176c4 <col:27> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x9f0e510 '__x' 'const vector<_Tp, _Alloc> &')))
) (CompoundStmt 0x9f17a50 </usr/include/c++/4.6/bits/stl_vector.h:280:7, line:284:7>
  (BinaryOperator 0x9f17a38 <line:280:9, line:283:32> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x9f177c8 <line:280:9, col:23> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9f17790 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x9f17780 <col:9> 'vector<_Tp, _Alloc> *' this)))
    (CallExpr 0x9f17a08 <line:281:4, line:283:32> '<dependent type>'
      (UnresolvedLookupExpr 0x9f17818 <line:281:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x9eff0f0 0x9eff9f0)
      (CallExpr 0x9f178a0 <col:32, col:42> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f17868 <col:32, col:36> '<dependent type>' lvalue
          (DeclRefExpr 0x9f17850 <col:32> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x9f0e510 '__x' 'const vector<_Tp, _Alloc> &')))
      (CallExpr 0x9f17910 <col:45, col:53> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f178d8 <col:45, col:49> '<dependent type>' lvalue
          (DeclRefExpr 0x9f178bc <col:45> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x9f0e510 '__x' 'const vector<_Tp, _Alloc> &')))
      (CXXDependentScopeMemberExpr 0x9f17978 <line:282:11, col:25> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0x9f17940 <col:11, col:17> '<dependent type>' lvalue
          (CXXThisExpr 0x9f17930 <col:11> 'vector<_Tp, _Alloc> *' this)))
      (CallExpr 0x9f179e8 <line:283:11, col:31> '<dependent type>'
        (UnresolvedMemberExpr 0x9f179ac <col:11> '<dependent type>' lvalue)))))


        template <typename _InputIterator> vector<_Tp, _Alloc>(_InputIterator __first, _InputIterator __last, const allocator_type &__a = (CXXUnresolvedConstructExpr 0x9f17420 </usr/include/c++/4.6/bits/stl_vector.h:335:37, col:52> 'allocator_type':'_Alloc')
) : _Base((DeclRefExpr 0x9f17a64 </usr/include/c++/4.6/bits/stl_vector.h:336:10> 'const allocator_type':'const _Alloc' lvalue ParmVar 0x9f0e6f0 '__a' 'const allocator_type &')
) (CompoundStmt 0x9f17ce8 </usr/include/c++/4.6/bits/stl_vector.h:337:9, line:341:2>
  (DeclStmt 0x9f17c00 <line:339:4, col:72>
    0x9f17bd0 "typedef typename std::__is_integer<_InputIterator>::__type _Integral")
  (CallExpr 0x9f17cc0 <line:340:4, col:55> '<dependent type>'
    (UnresolvedMemberExpr 0x9f17c20 <col:4> '<bound member function type>' lvalue)
    (DeclRefExpr 0x9f17c60 <col:27> '_InputIterator' lvalue ParmVar 0x9f0e660 '__first' '_InputIterator')
    (DeclRefExpr 0x9f17c78 <col:36> '_InputIterator' lvalue ParmVar 0x9f0e6a0 '__last' '_InputIterator')
    (CXXUnresolvedConstructExpr 0x9f17ca8 <col:44, col:54> '_Integral':'typename std::__is_integer<_InputIterator>::__type')))

;
        void ~vector<_Tp, _Alloc>() (CompoundStmt 0x9f17ee8 </usr/include/c++/4.6/bits/stl_vector.h:350:7, line:351:33>
  (CallExpr 0x9f17ec0 <line:350:9, line:351:30> '<dependent type>'
    (UnresolvedLookupExpr 0x9f17d28 <line:350:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0x9ef91a0 0x9ef9e60 0x9efa500 0x9efaab0)
    (CXXDependentScopeMemberExpr 0x9f17db0 <col:23, col:37> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9f17d78 <col:23, col:29> '<dependent type>' lvalue
        (CXXThisExpr 0x9f17d68 <col:23> 'vector<_Tp, _Alloc> *' this)))
    (CXXDependentScopeMemberExpr 0x9f17e30 <col:47, col:61> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9f17df8 <col:47, col:53> '<dependent type>' lvalue
        (CXXThisExpr 0x9f17de8 <col:47> 'vector<_Tp, _Alloc> *' this)))
    (CallExpr 0x9f17ea0 <line:351:9, col:29> '<dependent type>'
      (UnresolvedMemberExpr 0x9f17e64 <col:9> '<dependent type>' lvalue))))


        vector<_Tp, _Alloc> &operator=(const vector<_Tp, _Alloc> &__x);
        void assign(size_type __n, const value_type &__val) (CompoundStmt 0x9f17f88 </usr/include/c++/4.6/bits/stl_vector.h:413:7, col:37>
  (CallExpr 0x9f17f60 <col:9, col:34> '<dependent type>'
    (MemberExpr 0x9f17f10 <col:9> '<bound member function type>' ->_M_fill_assign 0x9f16410
      (CXXThisExpr 0x9f17f00 <col:9> 'vector<_Tp, _Alloc> *' this))
    (DeclRefExpr 0x9f17f30 <col:24> 'size_type':'unsigned int' lvalue ParmVar 0x9f0ea20 '__n' 'size_type':'unsigned int')
    (DeclRefExpr 0x9f17f48 <col:29> 'const value_type':'const _Tp' lvalue ParmVar 0x9f0ea70 '__val' 'const value_type &')))


        template <typename _InputIterator> void assign(_InputIterator __first, _InputIterator __last) (CompoundStmt 0x9f181b8 </usr/include/c++/4.6/bits/stl_vector.h:430:9, line:434:2>
  (DeclStmt 0x9f180d0 <line:432:4, col:72>
    0x9f180a0 "typedef typename std::__is_integer<_InputIterator>::__type _Integral")
  (CallExpr 0x9f18190 <line:433:4, col:51> '<dependent type>'
    (UnresolvedMemberExpr 0x9f180f0 <col:4> '<bound member function type>' lvalue)
    (DeclRefExpr 0x9f18130 <col:23> '_InputIterator' lvalue ParmVar 0x9f0ebe0 '__first' '_InputIterator')
    (DeclRefExpr 0x9f18148 <col:32> '_InputIterator' lvalue ParmVar 0x9f0ec20 '__last' '_InputIterator')
    (CXXUnresolvedConstructExpr 0x9f18178 <col:40, col:50> '_Integral':'typename std::__is_integer<_InputIterator>::__type')))

;
        using _Base::1;
        iterator begin() (CompoundStmt 0x9f18288 </usr/include/c++/4.6/bits/stl_vector.h:464:7, col:50>
  (ReturnStmt 0x9f18278 <col:9, col:47>
    (CXXUnresolvedConstructExpr 0x9f18258 <col:16, col:47> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
      (CXXDependentScopeMemberExpr 0x9f18220 <col:25, col:39> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0x9f181e8 <col:25, col:31> '<dependent type>' lvalue
          (CXXThisExpr 0x9f181d8 <col:25> 'vector<_Tp, _Alloc> *' this))))))


        const_iterator begin() const (CompoundStmt 0x9f18378 </usr/include/c++/4.6/bits/stl_vector.h:473:7, col:56>
  (ReturnStmt 0x9f18368 <col:9, col:53>
    (CXXUnresolvedConstructExpr 0x9f18348 <col:16, col:53> 'const_iterator':'__normal_iterator<const_pointer, vector<_Tp, _Alloc> >'
      (CXXDependentScopeMemberExpr 0x9f18310 <col:31, col:45> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0x9f182d8 <col:31, col:37> '<dependent type>' lvalue
          (CXXThisExpr 0x9f182c8 <col:31> 'const vector<_Tp, _Alloc> *' this))))))


        iterator end() (CompoundStmt 0x9f18448 </usr/include/c++/4.6/bits/stl_vector.h:482:7, col:51>
  (ReturnStmt 0x9f18438 <col:9, col:48>
    (CXXUnresolvedConstructExpr 0x9f18418 <col:16, col:48> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
      (CXXDependentScopeMemberExpr 0x9f183e0 <col:25, col:39> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0x9f183a8 <col:25, col:31> '<dependent type>' lvalue
          (CXXThisExpr 0x9f18398 <col:25> 'vector<_Tp, _Alloc> *' this))))))


        const_iterator end() const (CompoundStmt 0x9f18518 </usr/include/c++/4.6/bits/stl_vector.h:491:7, col:57>
  (ReturnStmt 0x9f18508 <col:9, col:54>
    (CXXUnresolvedConstructExpr 0x9f184e8 <col:16, col:54> 'const_iterator':'__normal_iterator<const_pointer, vector<_Tp, _Alloc> >'
      (CXXDependentScopeMemberExpr 0x9f184b0 <col:31, col:45> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0x9f18478 <col:31, col:37> '<dependent type>' lvalue
          (CXXThisExpr 0x9f18468 <col:31> 'const vector<_Tp, _Alloc> *' this))))))


        reverse_iterator rbegin() (CompoundStmt 0x9f185d8 </usr/include/c++/4.6/bits/stl_vector.h:500:7, col:41>
  (ReturnStmt 0x9f185c8 <col:9, col:38>
    (CXXUnresolvedConstructExpr 0x9f185a8 <col:16, col:38> 'reverse_iterator':'reverse_iterator<iterator>'
      (CallExpr 0x9f18588 <col:33, col:37> '<dependent type>'
        (UnresolvedMemberExpr 0x9f18548 <col:33> '<bound member function type>' lvalue)))))


        const_reverse_iterator rbegin() const (CompoundStmt 0x9f18698 </usr/include/c++/4.6/bits/stl_vector.h:509:7, col:47>
  (ReturnStmt 0x9f18688 <col:9, col:44>
    (CXXUnresolvedConstructExpr 0x9f18668 <col:16, col:44> 'const_reverse_iterator':'reverse_iterator<const_iterator>'
      (CallExpr 0x9f18648 <col:39, col:43> '<dependent type>'
        (UnresolvedMemberExpr 0x9f18608 <col:39> '<bound member function type>' lvalue)))))


        reverse_iterator rend() (CompoundStmt 0x9f18758 </usr/include/c++/4.6/bits/stl_vector.h:518:7, col:43>
  (ReturnStmt 0x9f18748 <col:9, col:40>
    (CXXUnresolvedConstructExpr 0x9f18728 <col:16, col:40> 'reverse_iterator':'reverse_iterator<iterator>'
      (CallExpr 0x9f18708 <col:33, col:39> '<dependent type>'
        (UnresolvedMemberExpr 0x9f186c8 <col:33> '<bound member function type>' lvalue)))))


        const_reverse_iterator rend() const (CompoundStmt 0x9f18818 </usr/include/c++/4.6/bits/stl_vector.h:527:7, col:49>
  (ReturnStmt 0x9f18808 <col:9, col:46>
    (CXXUnresolvedConstructExpr 0x9f187e8 <col:16, col:46> 'const_reverse_iterator':'reverse_iterator<const_iterator>'
      (CallExpr 0x9f187c8 <col:39, col:45> '<dependent type>'
        (UnresolvedMemberExpr 0x9f18788 <col:39> '<bound member function type>' lvalue)))))


        size_type size() const (CompoundStmt 0x9f189c8 </usr/include/c++/4.6/bits/stl_vector.h:571:7, col:77>
  (ReturnStmt 0x9f189b8 <col:9, col:74>
    (CXXUnresolvedConstructExpr 0x9f18998 <col:16, col:74> 'size_type':'unsigned int'
      (CXXOperatorCallExpr 0x9f18970 <col:26, col:66> '<dependent type>'
        (UnresolvedLookupExpr 0x9f18938 <col:50, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
        (CXXDependentScopeMemberExpr 0x9f18880 <col:26, col:40> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9f18848 <col:26, col:32> '<dependent type>' lvalue
            (CXXThisExpr 0x9f18838 <col:26> 'const vector<_Tp, _Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0x9f18900 <col:52, col:66> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9f188c8 <col:52, col:58> '<dependent type>' lvalue
            (CXXThisExpr 0x9f188b8 <col:52> 'const vector<_Tp, _Alloc> *' this)))))))


        size_type max_size() const (CompoundStmt 0x9f18aa0 </usr/include/c++/4.6/bits/stl_vector.h:576:7, col:50>
  (ReturnStmt 0x9f18a90 <col:9, col:47>
    (CallExpr 0x9f18a70 <col:16, col:47> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f18a38 <col:16, col:38> '<dependent type>' lvalue
        (CallExpr 0x9f18a18 <col:16, col:36> '<dependent type>'
          (UnresolvedMemberExpr 0x9f189dc <col:16> '<dependent type>' lvalue))))))


        void resize(size_type __new_size, value_type __x = (CXXUnresolvedConstructExpr 0x9f17440 </usr/include/c++/4.6/bits/stl_vector.h:629:53, col:64> 'value_type':'_Tp')
) (CompoundStmt 0x9f18fd0 </usr/include/c++/4.6/bits/stl_vector.h:630:7, line:635:7>
  (IfStmt 0x9f18fb0 <line:631:2, line:634:55>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9f18b68 <line:631:6, col:24> '<dependent type>'
      (UnresolvedLookupExpr 0x9f18b20 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b42c70 0x9ac83c0 0x9b5e730 0x9cbd1f0 0x9cbd720 0x9cbdc50)
      (DeclRefExpr 0x9f18ab4 <col:6> 'size_type':'unsigned int' lvalue ParmVar 0x9f13680 '__new_size' 'size_type':'unsigned int')
      (CallExpr 0x9f18b00 <col:19, col:24> '<dependent type>'
        (MemberExpr 0x9f18ae0 <col:19> '<bound member function type>' ->size 0x9f13590
          (CXXThisExpr 0x9f18ad0 <col:19> 'vector<_Tp, _Alloc> *' this))))
    (CallExpr 0x9f18d38 <line:632:4, col:42> '<dependent type>'
      (UnresolvedMemberExpr 0x9f18ba0 <col:4> '<bound member function type>' lvalue)
      (CallExpr 0x9f18c38 <col:11, col:15> '<dependent type>'
        (UnresolvedMemberExpr 0x9f18bf8 <col:11> '<bound member function type>' lvalue))
      (CXXOperatorCallExpr 0x9f18cf8 <col:18, col:36> '<dependent type>'
        (UnresolvedLookupExpr 0x9f18cc0 <col:29, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
        (DeclRefExpr 0x9f18c54 <col:18> 'size_type':'unsigned int' lvalue ParmVar 0x9f13680 '__new_size' 'size_type':'unsigned int')
        (CallExpr 0x9f18ca0 <col:31, col:36> '<dependent type>'
          (MemberExpr 0x9f18c80 <col:31> '<bound member function type>' ->size 0x9f13590
            (CXXThisExpr 0x9f18c70 <col:31> 'vector<_Tp, _Alloc> *' this))))
      (DeclRefExpr 0x9f18d1c <col:39> 'value_type':'_Tp' lvalue ParmVar 0x9f136c0 '__x' 'value_type':'_Tp'))
    (IfStmt 0x9f18f90 <line:633:7, line:634:55>
      <<<NULL>>>
      (CXXOperatorCallExpr 0x9f18e10 <line:633:11, col:29> '<dependent type>'
        (UnresolvedLookupExpr 0x9f18dc8 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40ad0 0x9b57c70 0x9b5ddb0 0x9cbc120 0x9cbc650 0x9cbcb80)
        (DeclRefExpr 0x9f18d60 <col:11> 'size_type':'unsigned int' lvalue ParmVar 0x9f13680 '__new_size' 'size_type':'unsigned int')
        (CallExpr 0x9f18da8 <col:24, col:29> '<dependent type>'
          (MemberExpr 0x9f18d88 <col:24> '<bound member function type>' ->size 0x9f13590
            (CXXThisExpr 0x9f18d78 <col:24> 'vector<_Tp, _Alloc> *' this))))
      (CallExpr 0x9f18f70 <line:634:4, col:55> '<dependent type>'
        (MemberExpr 0x9f18e48 <col:4> '<bound member function type>' ->_M_erase_at_end 0x9f17370
          (CXXThisExpr 0x9f18e38 <col:4> 'vector<_Tp, _Alloc> *' this))
        (CXXOperatorCallExpr 0x9f18f48 <col:20, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0x9f18f00 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9ce1500 0x9ce2100 0x9cb8030 0x9cb8830)
          (CXXDependentScopeMemberExpr 0x9f18eb0 <col:20, col:34> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x9f18e78 <col:20, col:26> '<dependent type>' lvalue
              (CXXThisExpr 0x9f18e68 <col:20> 'vector<_Tp, _Alloc> *' this)))
          (DeclRefExpr 0x9f18ee4 <col:45> 'size_type':'unsigned int' lvalue ParmVar 0x9f13680 '__new_size' 'size_type':'unsigned int')))
      <<<NULL>>>)))


        size_type capacity() const (CompoundStmt 0x9f19180 </usr/include/c++/4.6/bits/stl_vector.h:651:7, line:652:32>
  (ReturnStmt 0x9f19170 <line:651:9, line:652:29>
    (CXXUnresolvedConstructExpr 0x9f19150 <line:651:16, line:652:29> 'size_type':'unsigned int'
      (CXXOperatorCallExpr 0x9f19128 <line:651:26, line:652:21> '<dependent type>'
        (UnresolvedLookupExpr 0x9f190f0 <col:5, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
        (CXXDependentScopeMemberExpr 0x9f19038 <line:651:26, col:40> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9f19000 <col:26, col:32> '<dependent type>' lvalue
            (CXXThisExpr 0x9f18ff0 <col:26> 'const vector<_Tp, _Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0x9f190b8 <line:652:7, col:21> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9f19080 <col:7, col:13> '<dependent type>' lvalue
            (CXXThisExpr 0x9f19070 <col:7> 'const vector<_Tp, _Alloc> *' this)))))))


        bool empty() const (CompoundStmt 0x9f19310 </usr/include/c++/4.6/bits/stl_vector.h:660:7, col:34>
  (ReturnStmt 0x9f19300 <col:9, col:31>
    (CXXOperatorCallExpr 0x9f192d8 <col:16, col:31> '<dependent type>'
      (UnresolvedLookupExpr 0x9f19278 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90 0x9cb91e0 0x9cb9c50 0x9cba490 0x9cbaa00 0x9db0390)
      (CallExpr 0x9f191e8 <col:16, col:22> '<dependent type>'
        (UnresolvedMemberExpr 0x9f191a8 <col:16> '<bound member function type>' lvalue))
      (CallExpr 0x9f19258 <col:27, col:31> '<dependent type>'
        (UnresolvedMemberExpr 0x9f19218 <col:27> '<bound member function type>' lvalue)))))


        void reserve(size_type __n);
        reference operator[](size_type __n) (CompoundStmt 0x9f19470 </usr/include/c++/4.6/bits/stl_vector.h:696:7, col:49>
  (ReturnStmt 0x9f19460 <col:9, col:46>
    (UnaryOperator 0x9f19448 <col:16, col:46> '<dependent type>' prefix '*'
      (ParenExpr 0x9f19430 <col:17, col:46> '<dependent type>'
        (CXXOperatorCallExpr 0x9f19408 <col:18, col:43> '<dependent type>'
          (UnresolvedLookupExpr 0x9f193c0 <col:41, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9ce1500 0x9ce2100 0x9cb8030 0x9cb8830)
          (CXXDependentScopeMemberExpr 0x9f19370 <col:18, col:32> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x9f19338 <col:18, col:24> '<dependent type>' lvalue
              (CXXThisExpr 0x9f19328 <col:18> 'vector<_Tp, _Alloc> *' this)))
          (DeclRefExpr 0x9f193a4 <col:43> 'size_type':'unsigned int' lvalue ParmVar 0x9f139e0 '__n' 'size_type':'unsigned int'))))))


        const_reference operator[](size_type __n) const (CompoundStmt 0x9f195d0 </usr/include/c++/4.6/bits/stl_vector.h:711:7, col:49>
  (ReturnStmt 0x9f195c0 <col:9, col:46>
    (UnaryOperator 0x9f195a8 <col:16, col:46> '<dependent type>' prefix '*'
      (ParenExpr 0x9f19590 <col:17, col:46> '<dependent type>'
        (CXXOperatorCallExpr 0x9f19568 <col:18, col:43> '<dependent type>'
          (UnresolvedLookupExpr 0x9f19520 <col:41, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9ce1500 0x9ce2100 0x9cb8030 0x9cb8830)
          (CXXDependentScopeMemberExpr 0x9f194d0 <col:18, col:32> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x9f19498 <col:18, col:24> '<dependent type>' lvalue
              (CXXThisExpr 0x9f19488 <col:18> 'const vector<_Tp, _Alloc> *' this)))
          (DeclRefExpr 0x9f19504 <col:43> 'size_type':'unsigned int' lvalue ParmVar 0x9f13b10 '__n' 'size_type':'unsigned int'))))))


    protected:
    protected:
        void _M_range_check(size_type __n) const (CompoundStmt 0x9f197d0 </usr/include/c++/4.6/bits/stl_vector.h:717:7, line:720:7>
  (IfStmt 0x9f197b0 <line:718:2, line:719:54>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9f196b0 <line:718:6, col:24> '<dependent type>'
      (UnresolvedLookupExpr 0x9f19668 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b436e0 0x9ac8bd0 0x9b5f010 0x9cbf3a0 0x9cbf900 0x9cbfe30)
      (DeclRefExpr 0x9f195e4 <col:6> 'size_type':'unsigned int' lvalue ParmVar 0x9f13c70 '__n' 'size_type':'unsigned int')
      (CallExpr 0x9f19648 <col:13, col:24> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f19610 <col:13, col:19> '<dependent type>' lvalue
          (CXXThisExpr 0x9f19600 <col:13> 'const vector<_Tp, _Alloc> *' this))))
    (CallExpr 0x9f19780 <line:719:4, col:54> 'void'
      (ImplicitCastExpr 0x9f19770 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x9f19754 <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9b0bd90 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0x9f197a0 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0x9f19740 <col:24, col:30> 'const char [23]' lvalue
          (StringLiteral 0x9f1970c </usr/include/c++/4.6/bits/stl_vector.h:719:29> 'const char [23]' lvalue "vector::_M_range_check"))))
    <<<NULL>>>))


    public:
    public:
        reference at(size_type __n) (CompoundStmt 0x9f198d0 </usr/include/c++/4.6/bits/stl_vector.h:736:7, line:739:7>
  (CallExpr 0x9f19830 <line:737:2, col:20> '<dependent type>'
    (MemberExpr 0x9f197f8 <col:2> '<bound member function type>' ->_M_range_check 0x9f13d10
      (CXXThisExpr 0x9f197e8 <col:2> 'vector<_Tp, _Alloc> *' this))
    (DeclRefExpr 0x9f19818 <col:17> 'size_type':'unsigned int' lvalue ParmVar 0x9f13dd0 '__n' 'size_type':'unsigned int'))
  (ReturnStmt 0x9f198c0 <line:738:2, col:20>
    (ArraySubscriptExpr 0x9f198a8 <col:9, col:20> '<dependent type>' lvalue
      (ParenExpr 0x9f19878 <col:9, col:15> '<dependent type>'
        (UnaryOperator 0x9f19860 <col:10, col:11> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9f19850 <col:11> 'vector<_Tp, _Alloc> *' this)))
      (DeclRefExpr 0x9f1988c <col:17> 'size_type':'unsigned int' lvalue ParmVar 0x9f13dd0 '__n' 'size_type':'unsigned int'))))


        const_reference at(size_type __n) const (CompoundStmt 0x9f199d0 </usr/include/c++/4.6/bits/stl_vector.h:754:7, line:757:7>
  (CallExpr 0x9f19930 <line:755:2, col:20> '<dependent type>'
    (MemberExpr 0x9f198f8 <col:2> '<bound member function type>' ->_M_range_check 0x9f13d10
      (CXXThisExpr 0x9f198e8 <col:2> 'const vector<_Tp, _Alloc> *' this))
    (DeclRefExpr 0x9f19918 <col:17> 'size_type':'unsigned int' lvalue ParmVar 0x9f13e90 '__n' 'size_type':'unsigned int'))
  (ReturnStmt 0x9f199c0 <line:756:2, col:20>
    (ArraySubscriptExpr 0x9f199a8 <col:9, col:20> '<dependent type>' lvalue
      (ParenExpr 0x9f19978 <col:9, col:15> '<dependent type>'
        (UnaryOperator 0x9f19960 <col:10, col:11> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9f19950 <col:11> 'const vector<_Tp, _Alloc> *' this)))
      (DeclRefExpr 0x9f1998c <col:17> 'size_type':'unsigned int' lvalue ParmVar 0x9f13e90 '__n' 'size_type':'unsigned int'))))


        reference front() (CompoundStmt 0x9f19a80 </usr/include/c++/4.6/bits/stl_vector.h:765:7, col:26>
  (ReturnStmt 0x9f19a70 <col:9, col:23>
    (UnaryOperator 0x9f19a58 <col:16, col:23> '<dependent type>' prefix '*'
      (CallExpr 0x9f19a38 <col:17, col:23> '<dependent type>'
        (UnresolvedMemberExpr 0x9f199f8 <col:17> '<bound member function type>' lvalue)))))


        const_reference front() const (CompoundStmt 0x9f19b30 </usr/include/c++/4.6/bits/stl_vector.h:773:7, col:26>
  (ReturnStmt 0x9f19b20 <col:9, col:23>
    (UnaryOperator 0x9f19b08 <col:16, col:23> '<dependent type>' prefix '*'
      (CallExpr 0x9f19ae8 <col:17, col:23> '<dependent type>'
        (UnresolvedMemberExpr 0x9f19aa8 <col:17> '<bound member function type>' lvalue)))))


        reference back() (CompoundStmt 0x9f19c70 </usr/include/c++/4.6/bits/stl_vector.h:781:7, col:30>
  (ReturnStmt 0x9f19c60 <col:9, col:27>
    (UnaryOperator 0x9f19c48 <col:16, col:27> '<dependent type>' prefix '*'
      (ParenExpr 0x9f19c30 <col:17, col:27> '<dependent type>'
        (CXXOperatorCallExpr 0x9f19c08 <col:18, col:26> '<dependent type>'
          (UnresolvedLookupExpr 0x9f19bd0 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
          (CallExpr 0x9f19b98 <col:18, col:22> '<dependent type>'
            (UnresolvedMemberExpr 0x9f19b58 <col:18> '<bound member function type>' lvalue))
          (IntegerLiteral 0x9f19bb8 <col:26> 'int' 1))))))


        const_reference back() const (CompoundStmt 0x9f19db0 </usr/include/c++/4.6/bits/stl_vector.h:789:7, col:30>
  (ReturnStmt 0x9f19da0 <col:9, col:27>
    (UnaryOperator 0x9f19d88 <col:16, col:27> '<dependent type>' prefix '*'
      (ParenExpr 0x9f19d70 <col:17, col:27> '<dependent type>'
        (CXXOperatorCallExpr 0x9f19d48 <col:18, col:26> '<dependent type>'
          (UnresolvedLookupExpr 0x9f19d10 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
          (CallExpr 0x9f19cd8 <col:18, col:22> '<dependent type>'
            (UnresolvedMemberExpr 0x9f19c98 <col:18> '<bound member function type>' lvalue))
          (IntegerLiteral 0x9f19cf8 <col:26> 'int' 1))))))


        pointer data() (CompoundStmt 0x9f19eb8 </usr/include/c++/4.6/bits/stl_vector.h:804:7, col:43>
  (ReturnStmt 0x9f19ea8 <col:9, col:40>
    (CallExpr 0x9f19e88 <col:16, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0x9f19de0 <col:16, col:21> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b394e0)
      (CallExpr 0x9f19e68 <col:33, col:39> '<dependent type>'
        (UnresolvedMemberExpr 0x9f19e28 <col:33> '<bound member function type>' lvalue)))))


        const_pointer data() const (CompoundStmt 0x9f19fc0 </usr/include/c++/4.6/bits/stl_vector.h:812:7, col:43>
  (ReturnStmt 0x9f19fb0 <col:9, col:40>
    (CallExpr 0x9f19f90 <col:16, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0x9f19ee8 <col:16, col:21> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b394e0)
      (CallExpr 0x9f19f70 <col:33, col:39> '<dependent type>'
        (UnresolvedMemberExpr 0x9f19f30 <col:33> '<bound member function type>' lvalue)))))


        void push_back(const value_type &__x) (CompoundStmt 0x9f1a448 </usr/include/c++/4.6/bits/stl_vector.h:827:7, line:835:7>
  (IfStmt 0x9f1a428 <line:828:2, line:834:28>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9f1a130 <line:828:6, col:47> '<dependent type>'
      (UnresolvedLookupExpr 0x9f1a0d8 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b412d0 0x9ac7fa0 0x9b5e2b0 0x9ba7d20 0x9bc7160 0x9bc74d0 0x9cbb090 0x9cbb590 0x9cbbad0 0x9db08a0)
      (CXXDependentScopeMemberExpr 0x9f1a020 <col:6, col:20> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0x9f19fe8 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0x9f19fd8 <col:6> 'vector<_Tp, _Alloc> *' this)))
      (CXXDependentScopeMemberExpr 0x9f1a0a0 <col:33, col:47> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0x9f1a068 <col:33, col:39> '<dependent type>' lvalue
          (CXXThisExpr 0x9f1a058 <col:33> 'vector<_Tp, _Alloc> *' this))))
    (CompoundStmt 0x9f1a330 <line:829:4, line:832:4>
      (CallExpr 0x9f1a270 <line:830:6, col:58> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f1a1a0 <col:6, col:20> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9f1a168 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x9f1a158 <col:6> 'vector<_Tp, _Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0x9f1a220 <col:30, col:44> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9f1a1e8 <col:30, col:36> '<dependent type>' lvalue
            (CXXThisExpr 0x9f1a1d8 <col:30> 'vector<_Tp, _Alloc> *' this)))
        (DeclRefExpr 0x9f1a254 <col:55> 'const value_type':'const _Tp' lvalue ParmVar 0x9f14320 '__x' 'const value_type &'))
      (UnaryOperator 0x9f1a318 <line:831:6, col:22> '<dependent type>' prefix '++'
        (CXXDependentScopeMemberExpr 0x9f1a2e0 <col:8, col:22> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9f1a2a8 <col:8, col:14> '<dependent type>' lvalue
            (CXXThisExpr 0x9f1a298 <col:8> 'vector<_Tp, _Alloc> *' this)))))
    (CallExpr 0x9f1a400 <line:834:4, col:28> '<dependent type>'
      (MemberExpr 0x9f1a358 <col:4> '<bound member function type>' ->_M_insert_aux 0x9f17120
        (CXXThisExpr 0x9f1a348 <col:4> 'vector<_Tp, _Alloc> *' this))
      (CallExpr 0x9f1a3c8 <col:18, col:22> '<dependent type>'
        (UnresolvedMemberExpr 0x9f1a388 <col:18> '<bound member function type>' lvalue))
      (DeclRefExpr 0x9f1a3e4 <col:25> 'const value_type':'const _Tp' lvalue ParmVar 0x9f14320 '__x' 'const value_type &'))))


        void pop_back() (CompoundStmt 0x9f1a618 </usr/include/c++/4.6/bits/stl_vector.h:858:7, line:861:7>
  (UnaryOperator 0x9f1a4e0 <line:859:2, col:18> '<dependent type>' prefix '--'
    (CXXDependentScopeMemberExpr 0x9f1a4a8 <col:4, col:18> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9f1a470 <col:4, col:10> '<dependent type>' lvalue
        (CXXThisExpr 0x9f1a460 <col:4> 'vector<_Tp, _Alloc> *' this))))
  (CallExpr 0x9f1a5f8 <line:860:2, col:47> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9f1a540 <col:2, col:16> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9f1a508 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0x9f1a4f8 <col:2> 'vector<_Tp, _Alloc> *' this)))
    (CXXDependentScopeMemberExpr 0x9f1a5c0 <col:24, col:38> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9f1a588 <col:24, col:30> '<dependent type>' lvalue
        (CXXThisExpr 0x9f1a578 <col:24> 'vector<_Tp, _Alloc> *' this)))))


        iterator insert(iterator __position, const value_type &__x);
        void insert(iterator __position, size_type __n, const value_type &__x) (CompoundStmt 0x9f1a6d0 </usr/include/c++/4.6/bits/stl_vector.h:944:7, col:47>
  (CallExpr 0x9f1a6a8 <col:9, col:44> '<dependent type>'
    (MemberExpr 0x9f1a640 <col:9> '<bound member function type>' ->_M_fill_insert 0x9f16fb0
      (CXXThisExpr 0x9f1a630 <col:9> 'vector<_Tp, _Alloc> *' this))
    (DeclRefExpr 0x9f1a660 <col:24> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x9f145f0 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
    (DeclRefExpr 0x9f1a678 <col:36> 'size_type':'unsigned int' lvalue ParmVar 0x9f14630 '__n' 'size_type':'unsigned int')
    (DeclRefExpr 0x9f1a690 <col:41> 'const value_type':'const _Tp' lvalue ParmVar 0x9f14680 '__x' 'const value_type &')))


        template <typename _InputIterator> void insert(iterator __position, _InputIterator __first, _InputIterator __last) (CompoundStmt 0x9f1a920 </usr/include/c++/4.6/bits/stl_vector.h:964:9, line:968:2>
  (DeclStmt 0x9f1a810 <line:966:4, col:72>
    0x9f1a7e0 "typedef typename std::__is_integer<_InputIterator>::__type _Integral")
  (CallExpr 0x9f1a8f0 <line:967:4, col:63> '<dependent type>'
    (UnresolvedMemberExpr 0x9f1a830 <col:4> '<bound member function type>' lvalue)
    (DeclRefExpr 0x9f1a870 <col:23> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x9f14810 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
    (DeclRefExpr 0x9f1a888 <col:35> '_InputIterator' lvalue ParmVar 0x9f14850 '__first' '_InputIterator')
    (DeclRefExpr 0x9f1a8a0 <col:44> '_InputIterator' lvalue ParmVar 0x9f14890 '__last' '_InputIterator')
    (CXXUnresolvedConstructExpr 0x9f1a8d8 <col:52, col:62> '_Integral':'typename std::__is_integer<_InputIterator>::__type')))

;
        iterator erase(iterator __position);
        iterator erase(iterator __first, iterator __last);
        void swap(vector<_Tp, _Alloc> &__x) (CompoundStmt 0x9f1b0a0 </usr/include/c++/4.6/bits/stl_vector.h:1020:7, line:1030:7>
  (CallExpr 0x9f1aaa8 <line:1021:2, col:56> '<dependent type>'
    (UnresolvedLookupExpr 0x9f1a960 <col:2, col:7> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b3e850 0x9b3ed90 0x9cc04f0)
    (CXXDependentScopeMemberExpr 0x9f1a9e8 <col:12, col:26> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9f1a9b0 <col:12, col:18> '<dependent type>' lvalue
        (CXXThisExpr 0x9f1a9a0 <col:12> 'vector<_Tp, _Alloc> *' this)))
    (CXXDependentScopeMemberExpr 0x9f1aa70 <col:36, col:48> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9f1aa38 <col:36, col:40> '<dependent type>' lvalue
        (DeclRefExpr 0x9f1aa1c <col:36> 'vector<_Tp, _Alloc>' lvalue ParmVar 0x9f14c60 '__x' 'vector<_Tp, _Alloc> &'))))
  (CallExpr 0x9f1ac38 <line:1022:2, col:58> '<dependent type>'
    (UnresolvedLookupExpr 0x9f1aaf0 <col:2, col:7> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b3e850 0x9b3ed90 0x9cc04f0)
    (CXXDependentScopeMemberExpr 0x9f1ab78 <col:12, col:26> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9f1ab40 <col:12, col:18> '<dependent type>' lvalue
        (CXXThisExpr 0x9f1ab30 <col:12> 'vector<_Tp, _Alloc> *' this)))
    (CXXDependentScopeMemberExpr 0x9f1ac00 <col:37, col:49> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9f1abc8 <col:37, col:41> '<dependent type>' lvalue
        (DeclRefExpr 0x9f1abac <col:37> 'vector<_Tp, _Alloc>' lvalue ParmVar 0x9f14c60 '__x' 'vector<_Tp, _Alloc> &'))))
  (CallExpr 0x9f1adc8 <line:1023:2, line:1024:34> '<dependent type>'
    (UnresolvedLookupExpr 0x9f1ac80 <line:1023:2, col:7> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b3e850 0x9b3ed90 0x9cc04f0)
    (CXXDependentScopeMemberExpr 0x9f1ad08 <col:12, col:26> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9f1acd0 <col:12, col:18> '<dependent type>' lvalue
        (CXXThisExpr 0x9f1acc0 <col:12> 'vector<_Tp, _Alloc> *' this)))
    (CXXDependentScopeMemberExpr 0x9f1ad90 <line:1024:5, col:17> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9f1ad58 <col:5, col:9> '<dependent type>' lvalue
        (DeclRefExpr 0x9f1ad3c <col:5> 'vector<_Tp, _Alloc>' lvalue ParmVar 0x9f14c60 '__x' 'vector<_Tp, _Alloc> &'))))
  (CallExpr 0x9f1b078 <line:1028:2, line:1029:36> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9f1af78 <line:1028:2, col:37> '<dependent type>' lvalue)
    (CallExpr 0x9f1afe8 <col:46, col:66> '<dependent type>'
      (UnresolvedMemberExpr 0x9f1afac <col:46> '<dependent type>' lvalue))
    (CallExpr 0x9f1b058 <line:1029:11, col:35> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f1b020 <col:11, col:15> '<dependent type>' lvalue
        (DeclRefExpr 0x9f1b004 <col:11> 'vector<_Tp, _Alloc>' lvalue ParmVar 0x9f14c60 '__x' 'vector<_Tp, _Alloc> &')))))


        void clear() (CompoundStmt 0x9f1b190 </usr/include/c++/4.6/bits/stl_vector.h:1040:7, col:50>
  (CallExpr 0x9f1b170 <col:9, col:47> '<dependent type>'
    (MemberExpr 0x9f1b0d0 <col:9> '<bound member function type>' ->_M_erase_at_end 0x9f17370
      (CXXThisExpr 0x9f1b0c0 <col:9> 'vector<_Tp, _Alloc> *' this))
    (CXXDependentScopeMemberExpr 0x9f1b138 <col:25, col:39> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9f1b100 <col:25, col:31> '<dependent type>' lvalue
        (CXXThisExpr 0x9f1b0f0 <col:25> 'vector<_Tp, _Alloc> *' this)))))


    protected:
    protected:
        template <typename _ForwardIterator> pointer _M_allocate_and_copy(size_type __n, _ForwardIterator __first, _ForwardIterator __last) (CompoundStmt 0x9f23bb8 </usr/include/c++/4.6/bits/stl_vector.h:1051:9, line:1064:2>
  (DeclStmt 0x9f1b268 <line:1052:4, col:45>
    0x9f1b1b0 "pointer __result =
      (CallExpr 0x9f1b248 <col:23, col:44> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f1b1f8 <col:23, col:29> '<dependent type>' lvalue
          (CXXThisExpr 0x9f1b1e8 <col:23> 'vector<_Tp, _Alloc> *' this))
        (DeclRefExpr 0x9f1b22c <col:41> 'size_type':'unsigned int' lvalue ParmVar 0x9f14e60 '__n' 'size_type':'unsigned int'))")
  (IfStmt 0x9f23aa8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_vector.h:1058:6>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9f1b278 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x9f1b3e8 </usr/include/c++/4.6/bits/stl_vector.h:1054:6, line:1058:6>
      (CallExpr 0x9f1b390 <line:1055:8, line:1056:29> '<dependent type>'
        (UnresolvedLookupExpr 0x9f1b2b0 <line:1055:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0x9eff0f0 0x9eff9f0)
        (DeclRefExpr 0x9f1b2e8 <col:36> '_ForwardIterator' lvalue ParmVar 0x9f14ea0 '__first' '_ForwardIterator')
        (DeclRefExpr 0x9f1b300 <col:45> '_ForwardIterator' lvalue ParmVar 0x9f14ee0 '__last' '_ForwardIterator')
        (DeclRefExpr 0x9f1b318 <col:53> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x9f1b1b0 '__result' 'pointer':'typename _Tp_alloc_type::pointer')
        (CallExpr 0x9f1b370 <line:1056:8, col:28> '<dependent type>'
          (UnresolvedMemberExpr 0x9f1b330 <col:8> '<dependent type>' lvalue)))
      (ReturnStmt 0x9f1b3d8 <line:1057:8, col:15>
        (DeclRefExpr 0x9f1b3bc <col:15> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x9f1b1b0 '__result' 'pointer':'typename _Tp_alloc_type::pointer')))
    <<<NULL>>>)
  (IfStmt 0x9f23b98 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_vector.h:1063:6>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9f23ac8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9f23b80 </usr/include/c++/4.6/bits/stl_vector.h:1060:6, line:1063:6>
      (CallExpr 0x9f23b48 <line:1061:8, col:35> '<dependent type>'
        (UnresolvedMemberExpr 0x9f23ad8 <col:8> '<dependent type>' lvalue)
        (DeclRefExpr 0x9f23b14 <col:22> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x9f1b1b0 '__result' 'pointer':'typename _Tp_alloc_type::pointer')
        (DeclRefExpr 0x9f23b2c <col:32> 'size_type':'unsigned int' lvalue ParmVar 0x9f14e60 '__n' 'size_type':'unsigned int'))
      (NullStmt 0x9f23b70 <line:1062:31>))
    <<<NULL>>>))

;
        template <typename _Integer> void _M_initialize_dispatch(_Integer __n, _Integer __value, std::__true_type) (CompoundStmt 0x9f23f68 </usr/include/c++/4.6/bits/stl_vector.h:1076:9, line:1081:2>
  (BinaryOperator 0x9f23ce8 <line:1077:4, col:68> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x9f23c20 <col:4, col:18> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9f23be8 <col:4, col:10> '<dependent type>' lvalue
        (CXXThisExpr 0x9f23bd8 <col:4> 'vector<_Tp, _Alloc> *' this)))
    (CallExpr 0x9f23cc8 <col:29, col:68> '<dependent type>'
      (UnresolvedMemberExpr 0x9f23c54 <col:29> '<dependent type>' lvalue)
      (CXXStaticCastExpr 0x9f23cb0 <col:41, col:67> 'size_type':'unsigned int' static_cast<size_type> <Dependent>
        (DeclRefExpr 0x9f23c90 <col:64> '_Integer' lvalue ParmVar 0x9f150a0 '__n' '_Integer'))))
  (BinaryOperator 0x9f23ea8 <line:1078:4, line:1079:57> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x9f23d48 <line:1078:4, col:18> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9f23d10 <col:4, col:10> '<dependent type>' lvalue
        (CXXThisExpr 0x9f23d00 <col:4> 'vector<_Tp, _Alloc> *' this)))
    (CXXOperatorCallExpr 0x9f23e80 <line:1079:6, col:57> '<dependent type>'
      (UnresolvedLookupExpr 0x9f23e38 <col:29, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9ce1500 0x9ce2100 0x9cb8030 0x9cb8830)
      (CXXDependentScopeMemberExpr 0x9f23dc8 <col:6, col:20> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0x9f23d90 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0x9f23d80 <col:6> 'vector<_Tp, _Alloc> *' this)))
      (CXXStaticCastExpr 0x9f23e20 <col:31, col:57> 'size_type':'unsigned int' static_cast<size_type> <Dependent>
        (DeclRefExpr 0x9f23dfc <col:54> '_Integer' lvalue ParmVar 0x9f150a0 '__n' '_Integer'))))
  (CallExpr 0x9f23f40 <line:1080:4, col:59> '<dependent type>'
    (MemberExpr 0x9f23ed0 <col:4> '<bound member function type>' ->_M_fill_initialize 0x9f15a70
      (CXXThisExpr 0x9f23ec0 <col:4> 'vector<_Tp, _Alloc> *' this))
    (CXXStaticCastExpr 0x9f23f10 <col:23, col:49> 'size_type':'unsigned int' static_cast<size_type> <Dependent>
      (DeclRefExpr 0x9f23ef0 <col:46> '_Integer' lvalue ParmVar 0x9f150a0 '__n' '_Integer'))
    (DeclRefExpr 0x9f23f28 <col:52> '_Integer' lvalue ParmVar 0x9f150e0 '__value' '_Integer')))

;
        template <typename _InputIterator> void _M_initialize_dispatch(_InputIterator __first, _InputIterator __last, std::__false_type) (CompoundStmt 0x9f241a8 </usr/include/c++/4.6/bits/stl_vector.h:1088:9, line:1092:2>
  (DeclStmt 0x9f240c0 <line:1089:4, line:1090:37>
    0x9f24090 "typedef typename std::iterator_traits<_InputIterator>::iterator_category _IterCategory")
  (CallExpr 0x9f24180 <line:1091:4, col:56> '<dependent type>'
    (UnresolvedMemberExpr 0x9f240e0 <col:4> '<bound member function type>' lvalue)
    (DeclRefExpr 0x9f24120 <col:24> '_InputIterator' lvalue ParmVar 0x9f152e0 '__first' '_InputIterator')
    (DeclRefExpr 0x9f24138 <col:33> '_InputIterator' lvalue ParmVar 0x9f15320 '__last' '_InputIterator')
    (CXXUnresolvedConstructExpr 0x9f24168 <col:41, col:55> '_IterCategory':'typename std::iterator_traits<_InputIterator>::iterator_category')))

;
        template <typename _InputIterator> void _M_range_initialize(_InputIterator __first, _InputIterator __last, std::input_iterator_tag) (CompoundStmt 0x9f24348 </usr/include/c++/4.6/bits/stl_vector.h:1099:9, line:1102:2>
  (ForStmt 0x9f24320 <line:1100:4, line:1101:24>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9f24248 <line:1100:11, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0x9f241f0 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b412d0 0x9ac7fa0 0x9b5e2b0 0x9ba7d20 0x9bc7160 0x9bc74d0 0x9cbb090 0x9cbb590 0x9cbbad0 0x9db08a0)
      (DeclRefExpr 0x9f241c0 <col:11> '_InputIterator' lvalue ParmVar 0x9f15520 '__first' '_InputIterator')
      (DeclRefExpr 0x9f241d8 <col:22> '_InputIterator' lvalue ParmVar 0x9f15560 '__last' '_InputIterator'))
    (UnaryOperator 0x9f24288 <col:30, col:32> '<dependent type>' prefix '++'
      (DeclRefExpr 0x9f2426c <col:32> '_InputIterator' lvalue ParmVar 0x9f15520 '__first' '_InputIterator'))
    (CallExpr 0x9f24300 <line:1101:6, col:24> '<dependent type>'
      (MemberExpr 0x9f242b0 <col:6> '<bound member function type>' ->push_back 0x9f143a0
        (CXXThisExpr 0x9f242a0 <col:6> 'vector<_Tp, _Alloc> *' this))
      (UnaryOperator 0x9f242e8 <col:16, col:17> '<dependent type>' prefix '*'
        (DeclRefExpr 0x9f242d0 <col:17> '_InputIterator' lvalue ParmVar 0x9f15520 '__first' '_InputIterator')))))

;
        template <typename _ForwardIterator> void _M_range_initialize(_ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag) (CompoundStmt 0x9f24938 </usr/include/c++/4.6/bits/stl_vector.h:1109:9, line:1117:2>
  (DeclStmt 0x9f24450 <line:1110:4, col:56>
    0x9f24370 "const size_type __n =
      (CallExpr 0x9f24428 <col:26, col:55> '<dependent type>'
        (UnresolvedLookupExpr 0x9f243c0 <col:26, col:31> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b4eac0)
        (DeclRefExpr 0x9f243f4 <col:40> '_ForwardIterator' lvalue ParmVar 0x9f157a0 '__first' '_ForwardIterator')
        (DeclRefExpr 0x9f2440c <col:49> '_ForwardIterator' lvalue ParmVar 0x9f157e0 '__last' '_ForwardIterator'))")
  (BinaryOperator 0x9f24560 <line:1111:4, col:50> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x9f244a8 <col:4, col:18> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9f24470 <col:4, col:10> '<dependent type>' lvalue
        (CXXThisExpr 0x9f24460 <col:4> 'vector<_Tp, _Alloc> *' this)))
    (CallExpr 0x9f24540 <col:29, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f244f0 <col:29, col:35> '<dependent type>' lvalue
        (CXXThisExpr 0x9f244e0 <col:29> 'vector<_Tp, _Alloc> *' this))
      (DeclRefExpr 0x9f24524 <col:47> 'const size_type':'const unsigned int' lvalue Var 0x9f24370 '__n' 'const size_type':'const unsigned int')))
  (BinaryOperator 0x9f24700 <line:1112:4, col:63> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x9f245c0 <col:4, col:18> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9f24588 <col:4, col:10> '<dependent type>' lvalue
        (CXXThisExpr 0x9f24578 <col:4> 'vector<_Tp, _Alloc> *' this)))
    (CXXOperatorCallExpr 0x9f246d8 <col:38, col:63> '<dependent type>'
      (UnresolvedLookupExpr 0x9f24690 <col:61, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9ce1500 0x9ce2100 0x9cb8030 0x9cb8830)
      (CXXDependentScopeMemberExpr 0x9f24640 <col:38, col:52> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0x9f24608 <col:38, col:44> '<dependent type>' lvalue
          (CXXThisExpr 0x9f245f8 <col:38> 'vector<_Tp, _Alloc> *' this)))
      (DeclRefExpr 0x9f24674 <col:63> 'const size_type':'const unsigned int' lvalue Var 0x9f24370 '__n' 'const size_type':'const unsigned int')))
  (BinaryOperator 0x9f24920 <line:1113:4, line:1116:27> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x9f24760 <line:1113:4, col:18> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9f24728 <col:4, col:10> '<dependent type>' lvalue
        (CXXThisExpr 0x9f24718 <col:4> 'vector<_Tp, _Alloc> *' this)))
    (CallExpr 0x9f248f0 <line:1114:6, line:1116:27> '<dependent type>'
      (UnresolvedLookupExpr 0x9f247b0 <line:1114:6, col:11> '<overloaded function type>' lvalue (no ADL) = '1' 0x9eff0f0 0x9eff9f0)
      (DeclRefExpr 0x9f247e8 <col:34> '_ForwardIterator' lvalue ParmVar 0x9f157a0 '__first' '_ForwardIterator')
      (DeclRefExpr 0x9f24800 <col:43> '_ForwardIterator' lvalue ParmVar 0x9f157e0 '__last' '_ForwardIterator')
      (CXXDependentScopeMemberExpr 0x9f24860 <line:1115:6, col:20> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0x9f24828 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0x9f24818 <col:6> 'vector<_Tp, _Alloc> *' this)))
      (CallExpr 0x9f248d0 <line:1116:6, col:26> '<dependent type>'
        (UnresolvedMemberExpr 0x9f24894 <col:6> '<dependent type>' lvalue)))))

;
        void _M_fill_initialize(size_type __n, const value_type &__value) (CompoundStmt 0x9f24c08 </usr/include/c++/4.6/bits/stl_vector.h:1123:7, line:1127:7>
  (CallExpr 0x9f24ac0 <line:1124:2, line:1125:32> '<dependent type>'
    (UnresolvedLookupExpr 0x9f24980 <line:1124:2, col:7> '<overloaded function type>' lvalue (no ADL) = '1' 0x9f07890 0x9f081c0)
    (CXXDependentScopeMemberExpr 0x9f24a00 <col:32, col:46> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9f249c8 <col:32, col:38> '<dependent type>' lvalue
        (CXXThisExpr 0x9f249b8 <col:32> 'vector<_Tp, _Alloc> *' this)))
    (DeclRefExpr 0x9f24a34 <col:56> 'size_type':'unsigned int' lvalue ParmVar 0x9f159c0 '__n' 'size_type':'unsigned int')
    (DeclRefExpr 0x9f24a4c <col:61> 'const value_type':'const _Tp' lvalue ParmVar 0x9f15a10 '__value' 'const value_type &')
    (CallExpr 0x9f24aa0 <line:1125:11, col:31> '<dependent type>'
      (UnresolvedMemberExpr 0x9f24a64 <col:11> '<dependent type>' lvalue)))
  (BinaryOperator 0x9f24bf0 <line:1126:2, col:42> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x9f24b38 <col:2, col:16> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9f24b00 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0x9f24af0 <col:2> 'vector<_Tp, _Alloc> *' this)))
    (CXXDependentScopeMemberExpr 0x9f24bb8 <col:28, col:42> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9f24b80 <col:28, col:34> '<dependent type>' lvalue
        (CXXThisExpr 0x9f24b70 <col:28> 'vector<_Tp, _Alloc> *' this)))))


        template <typename _Integer> void _M_assign_dispatch(_Integer __n, _Integer __val, std::__true_type) (CompoundStmt 0x9f24ca8 </usr/include/c++/4.6/bits/stl_vector.h:1150:9, col:39>
  (CallExpr 0x9f24c80 <col:11, col:36> '<dependent type>'
    (MemberExpr 0x9f24c30 <col:11> '<bound member function type>' ->_M_fill_assign 0x9f16410
      (CXXThisExpr 0x9f24c20 <col:11> 'vector<_Tp, _Alloc> *' this))
    (DeclRefExpr 0x9f24c50 <col:26> '_Integer' lvalue ParmVar 0x9f15b40 '__n' '_Integer')
    (DeclRefExpr 0x9f24c68 <col:31> '_Integer' lvalue ParmVar 0x9f15b80 '__val' '_Integer')))

;
        template <typename _InputIterator> void _M_assign_dispatch(_InputIterator __first, _InputIterator __last, std::__false_type) (CompoundStmt 0x9f24ed8 </usr/include/c++/4.6/bits/stl_vector.h:1157:9, line:1161:2>
  (DeclStmt 0x9f24df0 <line:1158:4, line:1159:37>
    0x9f24dc0 "typedef typename std::iterator_traits<_InputIterator>::iterator_category _IterCategory")
  (CallExpr 0x9f24eb0 <line:1160:4, col:50> '<dependent type>'
    (UnresolvedMemberExpr 0x9f24e10 <col:4> '<bound member function type>' lvalue)
    (DeclRefExpr 0x9f24e50 <col:18> '_InputIterator' lvalue ParmVar 0x9f15d50 '__first' '_InputIterator')
    (DeclRefExpr 0x9f24e68 <col:27> '_InputIterator' lvalue ParmVar 0x9f15d90 '__last' '_InputIterator')
    (CXXUnresolvedConstructExpr 0x9f24e98 <col:35, col:49> '_IterCategory':'typename std::iterator_traits<_InputIterator>::iterator_category')))

;
        template <typename _InputIterator> void _M_assign_aux(_InputIterator __first, _InputIterator __last, std::input_iterator_tag);
        template <typename _ForwardIterator> void _M_assign_aux(_ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag);
        void _M_fill_assign(size_type __n, const value_type &__val);
        template <typename _Integer> void _M_insert_dispatch(iterator __pos, _Integer __n, _Integer __val, std::__true_type) (CompoundStmt 0x9f24f90 </usr/include/c++/4.6/bits/stl_vector.h:1191:9, col:46>
  (CallExpr 0x9f24f68 <col:11, col:43> '<dependent type>'
    (MemberExpr 0x9f24f00 <col:11> '<bound member function type>' ->_M_fill_insert 0x9f16fb0
      (CXXThisExpr 0x9f24ef0 <col:11> 'vector<_Tp, _Alloc> *' this))
    (DeclRefExpr 0x9f24f20 <col:26> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x9f164e0 '__pos' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
    (DeclRefExpr 0x9f24f38 <col:33> '_Integer' lvalue ParmVar 0x9f16520 '__n' '_Integer')
    (DeclRefExpr 0x9f24f50 <col:38> '_Integer' lvalue ParmVar 0x9f16560 '__val' '_Integer')))

;
        template <typename _InputIterator> void _M_insert_dispatch(iterator __pos, _InputIterator __first, _InputIterator __last, std::__false_type) (CompoundStmt 0x9f251e0 </usr/include/c++/4.6/bits/stl_vector.h:1198:9, line:1202:2>
  (DeclStmt 0x9f250d0 <line:1199:4, line:1200:37>
    0x9f250a0 "typedef typename std::iterator_traits<_InputIterator>::iterator_category _IterCategory")
  (CallExpr 0x9f251b0 <line:1201:4, col:59> '<dependent type>'
    (UnresolvedMemberExpr 0x9f250f0 <col:4> '<bound member function type>' lvalue)
    (DeclRefExpr 0x9f25130 <col:20> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x9f16760 '__pos' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
    (DeclRefExpr 0x9f25148 <col:27> '_InputIterator' lvalue ParmVar 0x9f167a0 '__first' '_InputIterator')
    (DeclRefExpr 0x9f25160 <col:36> '_InputIterator' lvalue ParmVar 0x9f167e0 '__last' '_InputIterator')
    (CXXUnresolvedConstructExpr 0x9f25198 <col:44, col:58> '_IterCategory':'typename std::iterator_traits<_InputIterator>::iterator_category')))

;
        template <typename _InputIterator> void _M_range_insert(iterator __pos, _InputIterator __first, _InputIterator __last, std::input_iterator_tag);
        template <typename _ForwardIterator> void _M_range_insert(iterator __pos, _ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag);
        void _M_fill_insert(iterator __pos, size_type __n, const value_type &__x);
        void _M_insert_aux(iterator __position, const value_type &__x);
        size_type _M_check_len(size_type __n, const char *__s) const (CompoundStmt 0x9f258d0 </usr/include/c++/4.6/bits/stl_vector.h:1240:7, line:1246:7>
  (IfStmt 0x9f25440 <line:1241:2, line:1242:33>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9f25358 <line:1241:6, col:28> '<dependent type>'
      (UnresolvedLookupExpr 0x9f25310 <col:26, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40ad0 0x9b57c70 0x9b5ddb0 0x9cbc120 0x9cbc650 0x9cbcb80)
      (CXXOperatorCallExpr 0x9f252d0 <col:6, col:24> '<dependent type>'
        (UnresolvedLookupExpr 0x9f25298 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590)
        (CallExpr 0x9f25228 <col:6, col:15> '<dependent type>'
          (MemberExpr 0x9f25208 <col:6> '<bound member function type>' ->max_size 0x9f13610
            (CXXThisExpr 0x9f251f8 <col:6> 'const vector<_Tp, _Alloc> *' this)))
        (CallExpr 0x9f25278 <col:19, col:24> '<dependent type>'
          (MemberExpr 0x9f25258 <col:19> '<bound member function type>' ->size 0x9f13590
            (CXXThisExpr 0x9f25248 <col:19> 'const vector<_Tp, _Alloc> *' this))))
      (DeclRefExpr 0x9f252f4 <col:28> 'size_type':'unsigned int' lvalue ParmVar 0x9f17190 '__n' 'size_type':'unsigned int'))
    (CallExpr 0x9f25410 <line:1242:4, col:33> 'void'
      (ImplicitCastExpr 0x9f25400 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x9f253e4 <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9b0bcc0 '__throw_length_error' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0x9f25430 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <LValueToRValue>
        (ParenExpr 0x9f253d0 <col:24, col:30> 'const char *' lvalue
          (DeclRefExpr 0x9f253b4 </usr/include/c++/4.6/bits/stl_vector.h:1242:29> 'const char *' lvalue ParmVar 0x9f171e0 '__s' 'const char *'))))
    <<<NULL>>>)
  (DeclStmt 0x9f25648 <line:1244:2, col:56>
    0x9f25470 "const size_type __len =
      (CXXOperatorCallExpr 0x9f25620 <col:26, col:55> '<dependent type>'
        (UnresolvedLookupExpr 0x9f255d8 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9ce1500 0x9ce2100 0x9cb8030 0x9cb8830)
        (CallExpr 0x9f254d8 <col:26, col:31> '<dependent type>'
          (MemberExpr 0x9f254b8 <col:26> '<bound member function type>' ->size 0x9f13590
            (CXXThisExpr 0x9f254a8 <col:26> 'const vector<_Tp, _Alloc> *' this)))
        (CallExpr 0x9f255b0 <col:35, col:55> '<dependent type>'
          (UnresolvedLookupExpr 0x9f25510 <col:35, col:40> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b76750 0x9b76ec0)
          (CallExpr 0x9f25578 <col:44, col:49> '<dependent type>'
            (MemberExpr 0x9f25558 <col:44> '<bound member function type>' ->size 0x9f13590
              (CXXThisExpr 0x9f25548 <col:44> 'const vector<_Tp, _Alloc> *' this)))
          (DeclRefExpr 0x9f25594 <col:52> 'size_type':'unsigned int' lvalue ParmVar 0x9f17190 '__n' 'size_type':'unsigned int')))")
  (ReturnStmt 0x9f258c0 <line:1245:2, col:63>
    (ConditionalOperator 0x9f258a0 <col:9, col:63> '<dependent type>'
      (ParenExpr 0x9f25820 <col:9, col:46> '<dependent type>'
        (BinaryOperator 0x9f25808 <col:10, col:45> '<dependent type>' '||'
          (CXXOperatorCallExpr 0x9f25708 <col:10, col:23> '<dependent type>'
            (UnresolvedLookupExpr 0x9f256c0 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40ad0 0x9b57c70 0x9b5ddb0 0x9cbc120 0x9cbc650 0x9cbcb80)
            (DeclRefExpr 0x9f25658 <col:10> 'const size_type':'const unsigned int' lvalue Var 0x9f25470 '__len' 'const size_type':'const unsigned int')
            (CallExpr 0x9f256a0 <col:18, col:23> '<dependent type>'
              (MemberExpr 0x9f25680 <col:18> '<bound member function type>' ->size 0x9f13590
                (CXXThisExpr 0x9f25670 <col:18> 'const vector<_Tp, _Alloc> *' this))))
          (CXXOperatorCallExpr 0x9f257e0 <col:28, col:45> '<dependent type>'
            (UnresolvedLookupExpr 0x9f25798 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b42c70 0x9ac83c0 0x9b5e730 0x9cbd1f0 0x9cbd720 0x9cbdc50)
            (DeclRefExpr 0x9f2572c <col:28> 'const size_type':'const unsigned int' lvalue Var 0x9f25470 '__len' 'const size_type':'const unsigned int')
            (CallExpr 0x9f25778 <col:36, col:45> '<dependent type>'
              (MemberExpr 0x9f25758 <col:36> '<bound member function type>' ->max_size 0x9f13610
                (CXXThisExpr 0x9f25748 <col:36> 'const vector<_Tp, _Alloc> *' this))))))
      (CallExpr 0x9f25868 <col:50, col:59> '<dependent type>'
        (MemberExpr 0x9f25848 <col:50> '<bound member function type>' ->max_size 0x9f13610
          (CXXThisExpr 0x9f25838 <col:50> 'const vector<_Tp, _Alloc> *' this)))
      (DeclRefExpr 0x9f25884 <col:63> 'const size_type':'const unsigned int' lvalue Var 0x9f25470 '__len' 'const size_type':'const unsigned int'))))


        void _M_erase_at_end(pointer __pos) (CompoundStmt 0x9f25b18 </usr/include/c++/4.6/bits/stl_vector.h:1254:7, line:1257:7>
  (CallExpr 0x9f25a40 <line:1255:2, col:69> '<dependent type>'
    (UnresolvedLookupExpr 0x9f25910 <col:2, col:7> '<overloaded function type>' lvalue (no ADL) = '1' 0x9ef91a0 0x9ef9e60 0x9efa500 0x9efaab0)
    (DeclRefExpr 0x9f25950 <col:16> 'pointer':'typename _Tp_alloc_type::pointer' lvalue ParmVar 0x9f172d0 '__pos' 'pointer':'typename _Tp_alloc_type::pointer')
    (CXXDependentScopeMemberExpr 0x9f259b0 <col:23, col:37> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9f25978 <col:23, col:29> '<dependent type>' lvalue
        (CXXThisExpr 0x9f25968 <col:23> 'vector<_Tp, _Alloc> *' this)))
    (CallExpr 0x9f25a20 <col:48, col:68> '<dependent type>'
      (UnresolvedMemberExpr 0x9f259e4 <col:48> '<dependent type>' lvalue)))
  (BinaryOperator 0x9f25b00 <line:1256:2, col:28> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x9f25ab0 <col:2, col:16> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9f25a78 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0x9f25a68 <col:2> 'vector<_Tp, _Alloc> *' this)))
    (DeclRefExpr 0x9f25ae4 <col:28> 'pointer':'typename _Tp_alloc_type::pointer' lvalue ParmVar 0x9f172d0 '__pos' 'pointer':'typename _Tp_alloc_type::pointer')))


    };
    template <typename _Tp, typename _Alloc> inline bool operator==(const vector<_Tp, _Alloc> &__x, const vector<_Tp, _Alloc> &__y) (CompoundStmt 0x9f26340 </usr/include/c++/4.6/bits/stl_vector.h:1274:5, line:1275:61>
  (ReturnStmt 0x9f26330 <line:1274:7, line:1275:58>
    (ParenExpr 0x9f26318 <line:1274:14, line:1275:58> '<dependent type>'
      (BinaryOperator 0x9f26300 <line:1274:15, line:1275:57> '<dependent type>' '&&'
        (CXXOperatorCallExpr 0x9f26110 <line:1274:15, col:38> '<dependent type>'
          (UnresolvedLookupExpr 0x9f260b0 <col:26, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f25fa0 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90 0x9cb91e0 0x9cb9c50 0x9cba490 0x9cbaa00 0x9db0390)
          (CallExpr 0x9f26020 <col:15, col:24> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f25fe8 <col:15, col:19> '<dependent type>' lvalue
              (DeclRefExpr 0x9f25fd0 <col:15> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x9f25d30 '__x' 'const vector<_Tp, _Alloc> &')))
          (CallExpr 0x9f26090 <col:29, col:38> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f26058 <col:29, col:33> '<dependent type>' lvalue
              (DeclRefExpr 0x9f2603c <col:29> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x9f25ea0 '__y' 'const vector<_Tp, _Alloc> &'))))
        (CallExpr 0x9f262d8 <line:1275:11, col:57> '<dependent type>'
          (UnresolvedLookupExpr 0x9f26150 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b964d0 0x9b96a40)
          (CallExpr 0x9f261d8 <col:22, col:32> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f261a0 <col:22, col:26> '<dependent type>' lvalue
              (DeclRefExpr 0x9f26188 <col:22> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x9f25d30 '__x' 'const vector<_Tp, _Alloc> &')))
          (CallExpr 0x9f26248 <col:35, col:43> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f26210 <col:35, col:39> '<dependent type>' lvalue
              (DeclRefExpr 0x9f261f4 <col:35> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x9f25d30 '__x' 'const vector<_Tp, _Alloc> &')))
          (CallExpr 0x9f262b8 <col:46, col:56> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f26280 <col:46, col:50> '<dependent type>' lvalue
              (DeclRefExpr 0x9f26264 <col:46> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x9f25ea0 '__y' 'const vector<_Tp, _Alloc> &'))))))))

;
    template <typename _Tp, typename _Alloc> inline bool operator<(const vector<_Tp, _Alloc> &__x, const vector<_Tp, _Alloc> &__y) (CompoundStmt 0x9f26a10 </usr/include/c++/4.6/bits/stl_vector.h:1291:5, line:1292:33>
  (ReturnStmt 0x9f26a00 <line:1291:7, line:1292:30>
    (CallExpr 0x9f269d0 <line:1291:14, line:1292:30> '<dependent type>'
      (UnresolvedLookupExpr 0x9f267d8 <line:1291:14, col:19> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b96f90 0x9b986b0)
      (CallExpr 0x9f26860 <col:43, col:53> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f26828 <col:43, col:47> '<dependent type>' lvalue
          (DeclRefExpr 0x9f26810 <col:43> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x9f26540 '__x' 'const vector<_Tp, _Alloc> &')))
      (CallExpr 0x9f268d0 <col:56, col:64> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f26898 <col:56, col:60> '<dependent type>' lvalue
          (DeclRefExpr 0x9f2687c <col:56> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x9f26540 '__x' 'const vector<_Tp, _Alloc> &')))
      (CallExpr 0x9f26940 <line:1292:8, col:18> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f26908 <col:8, col:12> '<dependent type>' lvalue
          (DeclRefExpr 0x9f268ec <col:8> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x9f266b0 '__y' 'const vector<_Tp, _Alloc> &')))
      (CallExpr 0x9f269b0 <col:21, col:29> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f26978 <col:21, col:25> '<dependent type>' lvalue
          (DeclRefExpr 0x9f2695c <col:21> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x9f266b0 '__y' 'const vector<_Tp, _Alloc> &'))))))

;
    template <typename _Tp, typename _Alloc> inline bool operator!=(const vector<_Tp, _Alloc> &__x, const vector<_Tp, _Alloc> &__y) (CompoundStmt 0x9f26f88 </usr/include/c++/4.6/bits/stl_vector.h:1298:5, col:29>
  (ReturnStmt 0x9f26f78 <col:7, col:26>
    (UnaryOperator 0x9f26f60 <col:14, col:26> '<dependent type>' prefix '!'
      (ParenExpr 0x9f26f48 <col:15, col:26> '<dependent type>'
        (CXXOperatorCallExpr 0x9f26f20 <col:16, col:23> '<dependent type>'
          (UnresolvedLookupExpr 0x9f26ec0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f25fa0 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90 0x9cb91e0 0x9cb9c50 0x9cba490 0x9cbaa00 0x9db0390)
          (DeclRefExpr 0x9f26e90 <col:16> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x9f26c10 '__x' 'const vector<_Tp, _Alloc> &')
          (DeclRefExpr 0x9f26ea8 <col:23> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x9f26d80 '__y' 'const vector<_Tp, _Alloc> &'))))))

;
    template <typename _Tp, typename _Alloc> inline bool operator>(const vector<_Tp, _Alloc> &__x, const vector<_Tp, _Alloc> &__y) (CompoundStmt 0x9f274b8 </usr/include/c++/4.6/bits/stl_vector.h:1304:5, col:25>
  (ReturnStmt 0x9f274a8 <col:7, col:20>
    (CXXOperatorCallExpr 0x9f27480 <col:14, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0x9f27430 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f26790 0x9b40ad0 0x9b57c70 0x9b5ddb0 0x9cbc120 0x9cbc650 0x9cbcb80)
      (DeclRefExpr 0x9f27400 <col:14> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x9f272f0 '__y' 'const vector<_Tp, _Alloc> &')
      (DeclRefExpr 0x9f27418 <col:20> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x9f27180 '__x' 'const vector<_Tp, _Alloc> &'))))

;
    template <typename _Tp, typename _Alloc> inline bool operator<=(const vector<_Tp, _Alloc> &__x, const vector<_Tp, _Alloc> &__y) (CompoundStmt 0x9f27a18 </usr/include/c++/4.6/bits/stl_vector.h:1310:5, col:28>
  (ReturnStmt 0x9f27a08 <col:7, col:25>
    (UnaryOperator 0x9f279f0 <col:14, col:25> '<dependent type>' prefix '!'
      (ParenExpr 0x9f279d8 <col:15, col:25> '<dependent type>'
        (CXXOperatorCallExpr 0x9f279b0 <col:16, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0x9f27960 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f26790 0x9b40ad0 0x9b57c70 0x9b5ddb0 0x9cbc120 0x9cbc650 0x9cbcb80)
          (DeclRefExpr 0x9f27930 <col:16> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x9f27820 '__y' 'const vector<_Tp, _Alloc> &')
          (DeclRefExpr 0x9f27948 <col:22> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x9f276b0 '__x' 'const vector<_Tp, _Alloc> &'))))))

;
    template <typename _Tp, typename _Alloc> inline bool operator>=(const vector<_Tp, _Alloc> &__x, const vector<_Tp, _Alloc> &__y) (CompoundStmt 0x9f27f78 </usr/include/c++/4.6/bits/stl_vector.h:1316:5, col:28>
  (ReturnStmt 0x9f27f68 <col:7, col:25>
    (UnaryOperator 0x9f27f50 <col:14, col:25> '<dependent type>' prefix '!'
      (ParenExpr 0x9f27f38 <col:15, col:25> '<dependent type>'
        (CXXOperatorCallExpr 0x9f27f10 <col:16, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0x9f27ec0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f26790 0x9b40ad0 0x9b57c70 0x9b5ddb0 0x9cbc120 0x9cbc650 0x9cbcb80)
          (DeclRefExpr 0x9f27e90 <col:16> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x9f27c10 '__x' 'const vector<_Tp, _Alloc> &')
          (DeclRefExpr 0x9f27ea8 <col:22> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x9f27d80 '__y' 'const vector<_Tp, _Alloc> &'))))))

;
    template <typename _Tp, typename _Alloc> inline void swap(vector<_Tp, _Alloc> &__x, vector<_Tp, _Alloc> &__y) (CompoundStmt 0x9f284b8 </usr/include/c++/4.6/bits/stl_vector.h:1322:5, col:22>
  (CallExpr 0x9f28498 <col:7, col:19> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9f28448 <col:7, col:11> '<dependent type>' lvalue
      (DeclRefExpr 0x9f28430 <col:7> 'vector<_Tp, _Alloc>' lvalue ParmVar 0x9f28190 '__x' 'vector<_Tp, _Alloc> &'))
    (DeclRefExpr 0x9f2847c <col:16> 'vector<_Tp, _Alloc>' lvalue ParmVar 0x9f28300 '__y' 'vector<_Tp, _Alloc> &')))

;
}
namespace std {
    typedef unsigned long _Bit_type;
    enum  {
        _S_word_bit = (ImplicitCastExpr 0x9f28708 </usr/include/c++/4.6/bits/stl_bvector.h:67:24, col:60> 'unsigned int' <IntegralCast>
  (CXXFunctionalCastExpr 0x9f286b8 <col:24, col:60> 'int' functional cast to int <NoOp>
    (ImplicitCastExpr 0x9f286a8 <<built-in>:17:22, /usr/include/c++/4.6/bits/stl_bvector.h:67:59> 'int' <IntegralCast>
      (BinaryOperator 0x9f28690 <<built-in>:17:22, /usr/include/c++/4.6/bits/stl_bvector.h:67:59> 'unsigned int' '*'
        (ImplicitCastExpr 0x9f28680 <<built-in>:17:22> 'unsigned int' <IntegralCast>
          (IntegerLiteral 0x9f28630 <col:22> 'int' 8))
        (UnaryExprOrTypeTraitExpr 0x9f28668 </usr/include/c++/4.6/bits/stl_bvector.h:67:43, col:59> 'unsigned int' sizeof '_Bit_type':'unsigned long')))))

    };
    struct _Bit_reference {
        struct _Bit_reference;
        _Bit_type *_M_p;
        _Bit_type _M_mask;
        _Bit_reference(_Bit_type *__x, _Bit_type __y) : _M_p((ImplicitCastExpr 0x9f28ff8 </usr/include/c++/4.6/bits/stl_bvector.h:75:12> '_Bit_type *' <LValueToRValue>
  (DeclRefExpr 0x9f28fdc <col:12> '_Bit_type *' lvalue ParmVar 0x9f288f0 '__x' '_Bit_type *'))
), _M_mask((ImplicitCastExpr 0x9f29040 </usr/include/c++/4.6/bits/stl_bvector.h:75:26> '_Bit_type':'unsigned long' <LValueToRValue>
  (DeclRefExpr 0x9f29028 <col:26> '_Bit_type':'unsigned long' lvalue ParmVar 0x9f28930 '__y' '_Bit_type':'unsigned long'))
) (CompoundStmt 0x9f29070 </usr/include/c++/4.6/bits/stl_bvector.h:75:31, col:33>)


        _Bit_reference() : _M_p((ImplicitCastExpr 0x9f29098 </usr/include/c++/4.6/bits/stl_bvector.h:77:29> '_Bit_type *' <NullToPointer>
  (IntegerLiteral 0x9f29080 <col:29> 'int' 0))
), _M_mask((ImplicitCastExpr 0x9f290e0 </usr/include/c++/4.6/bits/stl_bvector.h:77:41> '_Bit_type':'unsigned long' <IntegralCast>
  (IntegerLiteral 0x9f290c8 <col:41> 'int' 0))
) (CompoundStmt 0x9f29110 </usr/include/c++/4.6/bits/stl_bvector.h:77:44, col:46>)


        bool operator _Bool() const (CompoundStmt 0x9f29280 </usr/include/c++/4.6/bits/stl_bvector.h:80:5, col:35>
  (ReturnStmt 0x9f29270 <col:7, col:32>
    (UnaryOperator 0x9f29258 <col:14, col:32> '_Bool' prefix '!'
      (UnaryOperator 0x9f29240 <col:15, col:32> '_Bool' prefix '!'
        (ImplicitCastExpr 0x9f29230 <col:16, col:32> '_Bool' <IntegralToBoolean>
          (ParenExpr 0x9f29218 <col:16, col:32> 'unsigned long'
            (BinaryOperator 0x9f29200 <col:17, col:25> 'unsigned long' '&'
              (ImplicitCastExpr 0x9f291e0 <col:17, col:18> '_Bit_type':'unsigned long' <LValueToRValue>
                (UnaryOperator 0x9f29198 <col:17, col:18> '_Bit_type':'unsigned long' lvalue prefix '*'
                  (ImplicitCastExpr 0x9f29188 <col:18> '_Bit_type *' <LValueToRValue>
                    (MemberExpr 0x9f29164 <col:18> '_Bit_type *const' lvalue ->_M_p 0x9f28870
                      (CXXThisExpr 0x9f29138 <col:18> 'const struct std::_Bit_reference *' this)))))
              (ImplicitCastExpr 0x9f291f0 <col:25> '_Bit_type':'unsigned long' <LValueToRValue>
                (MemberExpr 0x9f291c0 <col:25> 'const _Bit_type':'const unsigned long' lvalue ->_M_mask 0x9f288b0
                  (CXXThisExpr 0x9f291b0 <col:25> 'const struct std::_Bit_reference *' this))))))))))


        std::_Bit_reference &operator=(bool __x) (CompoundStmt 0x9f294a0 </usr/include/c++/4.6/bits/stl_bvector.h:84:5, line:90:5>
  (IfStmt 0x9f29448 <line:85:7, line:88:12>
    <<<NULL>>>
    (ImplicitCastExpr 0x9f292b0 <line:85:11> '_Bool' <LValueToRValue>
      (DeclRefExpr 0x9f29294 <col:11> '_Bool' lvalue ParmVar 0x9f28b70 '__x' '_Bool'))
    (CompoundAssignOperator 0x9f29358 <line:86:2, col:11> '_Bit_type':'unsigned long' lvalue '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
      (UnaryOperator 0x9f29300 <col:2, col:3> '_Bit_type':'unsigned long' lvalue prefix '*'
        (ImplicitCastExpr 0x9f292f0 <col:3> '_Bit_type *' <LValueToRValue>
          (MemberExpr 0x9f292d0 <col:3> '_Bit_type *' lvalue ->_M_p 0x9f28870
            (CXXThisExpr 0x9f292c0 <col:3> 'struct std::_Bit_reference *' this))))
      (ImplicitCastExpr 0x9f29348 <col:11> '_Bit_type':'unsigned long' <LValueToRValue>
        (MemberExpr 0x9f29328 <col:11> '_Bit_type':'unsigned long' lvalue ->_M_mask 0x9f288b0
          (CXXThisExpr 0x9f29318 <col:11> 'struct std::_Bit_reference *' this))))
    (CompoundAssignOperator 0x9f29428 <line:88:2, col:12> '_Bit_type':'unsigned long' lvalue '&=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
      (UnaryOperator 0x9f293b8 <col:2, col:3> '_Bit_type':'unsigned long' lvalue prefix '*'
        (ImplicitCastExpr 0x9f293a8 <col:3> '_Bit_type *' <LValueToRValue>
          (MemberExpr 0x9f29388 <col:3> '_Bit_type *' lvalue ->_M_p 0x9f28870
            (CXXThisExpr 0x9f29378 <col:3> 'struct std::_Bit_reference *' this))))
      (UnaryOperator 0x9f29410 <col:11, col:12> '_Bit_type':'unsigned long' prefix '~'
        (ImplicitCastExpr 0x9f29400 <col:12> '_Bit_type':'unsigned long' <LValueToRValue>
          (MemberExpr 0x9f293e0 <col:12> '_Bit_type':'unsigned long' lvalue ->_M_mask 0x9f288b0
            (CXXThisExpr 0x9f293d0 <col:12> 'struct std::_Bit_reference *' this))))))
  (ReturnStmt 0x9f29490 <line:89:7, col:15>
    (UnaryOperator 0x9f29478 <col:14, col:15> 'struct std::_Bit_reference' lvalue prefix '*'
      (CXXThisExpr 0x9f29468 <col:15> 'struct std::_Bit_reference *' this))))


        std::_Bit_reference &operator=(const std::_Bit_reference &__x) (CompoundStmt 0x9f29700 </usr/include/c++/4.6/bits/stl_bvector.h:94:5, col:33>
  (ReturnStmt 0x9f296f0 <col:7, col:30>
    (CXXOperatorCallExpr 0x9f296c8 <col:14, col:30> 'struct std::_Bit_reference' lvalue
      (ImplicitCastExpr 0x9f296b8 <col:20, <invalid sloc>> 'struct std::_Bit_reference &(*)(_Bool)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9f29680 <col:20, <invalid sloc>> 'struct std::_Bit_reference &(_Bool)' lvalue CXXMethod 0x9f28c10 'operator=' 'struct std::_Bit_reference &(_Bool)'))
      (UnaryOperator 0x9f294c8 <col:14, col:15> 'struct std::_Bit_reference' lvalue prefix '*'
        (CXXThisExpr 0x9f294b8 <col:15> 'struct std::_Bit_reference *' this))
      (CXXFunctionalCastExpr 0x9f29570 <col:22, col:30> '_Bool' functional cast to _Bool <NoOp>
        (ImplicitCastExpr 0x9f29560 <col:27> '_Bool' <UserDefinedConversion>
          (CXXMemberCallExpr 0x9f29540 <col:27> '_Bool'
            (MemberExpr 0x9f29520 <col:27, <invalid sloc>> '_Bool (void) const' .operator _Bool 0x9f28b00
              (DeclRefExpr 0x9f294e8 <col:27> 'const struct std::_Bit_reference' lvalue ParmVar 0x9f28cb0 '__x' 'const struct std::_Bit_reference &'))))))))


        bool operator==(const std::_Bit_reference &__x) const (CompoundStmt 0x9f29890 </usr/include/c++/4.6/bits/stl_bvector.h:98:5, col:40>
  (ReturnStmt 0x9f29880 <col:7, col:37>
    (BinaryOperator 0x9f29868 <col:14, col:37> '_Bool' '=='
      (ImplicitCastExpr 0x9f29848 <col:14, col:24> 'int' <IntegralCast>
        (CXXFunctionalCastExpr 0x9f297a0 <col:14, col:24> '_Bool' functional cast to _Bool <NoOp>
          (ImplicitCastExpr 0x9f29790 <col:19, col:20> '_Bool' <UserDefinedConversion>
            (CXXMemberCallExpr 0x9f29770 <col:19, col:20> '_Bool'
              (MemberExpr 0x9f29750 <col:19, <invalid sloc>> '_Bool (void) const' .operator _Bool 0x9f28b00
                (UnaryOperator 0x9f29730 <col:19, col:20> 'const struct std::_Bit_reference' lvalue prefix '*'
                  (CXXThisExpr 0x9f29720 <col:20> 'const struct std::_Bit_reference *' this)))))))
      (ImplicitCastExpr 0x9f29858 <col:29, col:37> 'int' <IntegralCast>
        (CXXFunctionalCastExpr 0x9f29830 <col:29, col:37> '_Bool' functional cast to _Bool <NoOp>
          (ImplicitCastExpr 0x9f29820 <col:34> '_Bool' <UserDefinedConversion>
            (CXXMemberCallExpr 0x9f29800 <col:34> '_Bool'
              (MemberExpr 0x9f297e0 <col:34, <invalid sloc>> '_Bool (void) const' .operator _Bool 0x9f28b00
                (DeclRefExpr 0x9f297c0 <col:34> 'const struct std::_Bit_reference' lvalue ParmVar 0x9f28db0 '__x' 'const struct std::_Bit_reference &')))))))))


        bool operator<(const std::_Bit_reference &__x) const (CompoundStmt 0x9f29a18 </usr/include/c++/4.6/bits/stl_bvector.h:102:5, col:41>
  (ReturnStmt 0x9f29a08 <col:7, col:38>
    (BinaryOperator 0x9f299f0 <col:14, col:38> '_Bool' '&&'
      (UnaryOperator 0x9f29948 <col:14, col:25> '_Bool' prefix '!'
        (CXXFunctionalCastExpr 0x9f29930 <col:15, col:25> '_Bool' functional cast to _Bool <NoOp>
          (ImplicitCastExpr 0x9f29920 <col:20, col:21> '_Bool' <UserDefinedConversion>
            (CXXMemberCallExpr 0x9f29900 <col:20, col:21> '_Bool'
              (MemberExpr 0x9f298e0 <col:20, <invalid sloc>> '_Bool (void) const' .operator _Bool 0x9f28b00
                (UnaryOperator 0x9f298c0 <col:20, col:21> 'const struct std::_Bit_reference' lvalue prefix '*'
                  (CXXThisExpr 0x9f298b0 <col:21> 'const struct std::_Bit_reference *' this)))))))
      (CXXFunctionalCastExpr 0x9f299d8 <col:30, col:38> '_Bool' functional cast to _Bool <NoOp>
        (ImplicitCastExpr 0x9f299c8 <col:35> '_Bool' <UserDefinedConversion>
          (CXXMemberCallExpr 0x9f299a8 <col:35> '_Bool'
            (MemberExpr 0x9f29988 <col:35, <invalid sloc>> '_Bool (void) const' .operator _Bool 0x9f28b00
              (DeclRefExpr 0x9f29968 <col:35> 'const struct std::_Bit_reference' lvalue ParmVar 0x9f28eb0 '__x' 'const struct std::_Bit_reference &'))))))))


        void flip() (CompoundStmt 0x9f29ae8 </usr/include/c++/4.6/bits/stl_bvector.h:106:5, col:25>
  (CompoundAssignOperator 0x9f29ac8 <col:7, col:16> '_Bit_type':'unsigned long' lvalue '^=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
    (UnaryOperator 0x9f29a70 <col:7, col:8> '_Bit_type':'unsigned long' lvalue prefix '*'
      (ImplicitCastExpr 0x9f29a60 <col:8> '_Bit_type *' <LValueToRValue>
        (MemberExpr 0x9f29a40 <col:8> '_Bit_type *' lvalue ->_M_p 0x9f28870
          (CXXThisExpr 0x9f29a30 <col:8> 'struct std::_Bit_reference *' this))))
    (ImplicitCastExpr 0x9f29ab8 <col:16> '_Bit_type':'unsigned long' <LValueToRValue>
      (MemberExpr 0x9f29a98 <col:16> '_Bit_type':'unsigned long' lvalue ->_M_mask 0x9f288b0
        (CXXThisExpr 0x9f29a88 <col:16> 'struct std::_Bit_reference *' this)))))


        inline _Bit_reference(const std::_Bit_reference &) throw() : _M_p((ImplicitCastExpr 0x9f2ea10 </usr/include/c++/4.6/bits/stl_bvector.h:69:10> '_Bit_type *' <LValueToRValue>
  (MemberExpr 0x9f2e9ec <col:10> '_Bit_type *const' lvalue ._M_p 0x9f28870
    (DeclRefExpr 0x9f2e9d4 <col:10> 'const struct std::_Bit_reference' lvalue ParmVar 0x9f29640 '' 'const struct std::_Bit_reference &')))
), _M_mask((ImplicitCastExpr 0x9f2ea70 </usr/include/c++/4.6/bits/stl_bvector.h:69:10> '_Bit_type':'unsigned long' <LValueToRValue>
  (MemberExpr 0x9f2ea4c <col:10> 'const _Bit_type':'const unsigned long' lvalue ._M_mask 0x9f288b0
    (DeclRefExpr 0x9f2ea34 <col:10> 'const struct std::_Bit_reference' lvalue ParmVar 0x9f29640 '' 'const struct std::_Bit_reference &')))
) (CompoundStmt 0x9f2eaa0 </usr/include/c++/4.6/bits/stl_bvector.h:69:10>)


    };
    struct _Bit_iterator_base : public std::iterator<std::random_access_iterator_tag, bool> {
        struct _Bit_iterator_base;
        _Bit_type *_M_p;
        unsigned int _M_offset;
        _Bit_iterator_base(_Bit_type *__x, unsigned int __y) : std::iterator<std::random_access_iterator_tag, bool>(), _M_p((ImplicitCastExpr 0x9f2aaa0 </usr/include/c++/4.6/bits/stl_bvector.h:116:12> '_Bit_type *' <LValueToRValue>
  (DeclRefExpr 0x9f2aa84 <col:12> '_Bit_type *' lvalue ParmVar 0x9f2a1f0 '__x' '_Bit_type *'))
), _M_offset((ImplicitCastExpr 0x9f2aae0 </usr/include/c++/4.6/bits/stl_bvector.h:116:28> 'unsigned int' <LValueToRValue>
  (DeclRefExpr 0x9f2aac8 <col:28> 'unsigned int' lvalue ParmVar 0x9f2a240 '__y' 'unsigned int'))
) (CompoundStmt 0x9f2ad58 </usr/include/c++/4.6/bits/stl_bvector.h:116:33, col:35>)


        void _M_bump_up() (CompoundStmt 0x9f2af68 </usr/include/c++/4.6/bits/stl_bvector.h:120:5, line:126:5>
  (IfStmt 0x9f2af48 <line:121:7, line:125:2>
    <<<NULL>>>
    (BinaryOperator 0x9f2ae60 <line:121:11, col:45> '_Bool' '=='
      (UnaryOperator 0x9f2adb8 <col:11, col:20> 'unsigned int' postfix '++'
        (MemberExpr 0x9f2ad98 <col:11> 'unsigned int' lvalue ->_M_offset 0x9f2a1b0
          (CXXThisExpr 0x9f2ad88 <col:11> 'struct std::_Bit_iterator_base *' this)))
      (ImplicitCastExpr 0x9f2ae50 <col:26, col:45> 'unsigned int' <IntegralCast>
        (BinaryOperator 0x9f2ae38 <col:26, col:45> 'int' '-'
          (CXXFunctionalCastExpr 0x9f2ae08 <col:26, col:41> 'int' functional cast to int <NoOp>
            (ImplicitCastExpr 0x9f2adf8 <col:30> 'int' <IntegralCast>
              (DeclRefExpr 0x9f2addc <col:30> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x9f286d0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))
          (IntegerLiteral 0x9f2ae20 <col:45> 'int' 1))))
    (CompoundStmt 0x9f2af30 <line:122:2, line:125:2>
      (BinaryOperator 0x9f2aed0 <line:123:4, col:16> 'unsigned int' lvalue '='
        (MemberExpr 0x9f2ae88 <col:4> 'unsigned int' lvalue ->_M_offset 0x9f2a1b0
          (CXXThisExpr 0x9f2ae78 <col:4> 'struct std::_Bit_iterator_base *' this))
        (ImplicitCastExpr 0x9f2aec0 <col:16> 'unsigned int' <IntegralCast>
          (IntegerLiteral 0x9f2aea8 <col:16> 'int' 0)))
      (UnaryOperator 0x9f2af18 <line:124:4, col:6> '_Bit_type *' lvalue prefix '++'
        (MemberExpr 0x9f2aef8 <col:6> '_Bit_type *' lvalue ->_M_p 0x9f2a170
          (CXXThisExpr 0x9f2aee8 <col:6> 'struct std::_Bit_iterator_base *' this))))
    <<<NULL>>>))


        void _M_bump_down() (CompoundStmt 0x9f2b160 </usr/include/c++/4.6/bits/stl_bvector.h:130:5, line:136:5>
  (IfStmt 0x9f2b140 <line:131:7, line:135:2>
    <<<NULL>>>
    (BinaryOperator 0x9f2aff0 <line:131:11, col:26> '_Bool' '=='
      (UnaryOperator 0x9f2afb0 <col:11, col:20> 'unsigned int' postfix '--'
        (MemberExpr 0x9f2af90 <col:11> 'unsigned int' lvalue ->_M_offset 0x9f2a1b0
          (CXXThisExpr 0x9f2af80 <col:11> 'struct std::_Bit_iterator_base *' this)))
      (ImplicitCastExpr 0x9f2afe0 <col:26> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0x9f2afc8 <col:26> 'int' 0)))
    (CompoundStmt 0x9f2b128 <line:132:2, line:135:2>
      (BinaryOperator 0x9f2b0c8 <line:133:4, col:35> 'unsigned int' lvalue '='
        (MemberExpr 0x9f2b018 <col:4> 'unsigned int' lvalue ->_M_offset 0x9f2a1b0
          (CXXThisExpr 0x9f2b008 <col:4> 'struct std::_Bit_iterator_base *' this))
        (ImplicitCastExpr 0x9f2b0b8 <col:16, col:35> 'unsigned int' <IntegralCast>
          (BinaryOperator 0x9f2b0a0 <col:16, col:35> 'int' '-'
            (CXXFunctionalCastExpr 0x9f2b070 <col:16, col:31> 'int' functional cast to int <NoOp>
              (ImplicitCastExpr 0x9f2b060 <col:20> 'int' <IntegralCast>
                (DeclRefExpr 0x9f2b044 <col:20> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x9f286d0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))
            (IntegerLiteral 0x9f2b088 <col:35> 'int' 1))))
      (UnaryOperator 0x9f2b110 <line:134:4, col:6> '_Bit_type *' lvalue prefix '--'
        (MemberExpr 0x9f2b0f0 <col:6> '_Bit_type *' lvalue ->_M_p 0x9f2a170
          (CXXThisExpr 0x9f2b0e0 <col:6> 'struct std::_Bit_iterator_base *' this))))
    <<<NULL>>>))


        void _M_incr(ptrdiff_t __i) (CompoundStmt 0x9f2b630 </usr/include/c++/4.6/bits/stl_bvector.h:140:5, line:150:5>
  (DeclStmt 0x9f2b278 <line:141:7, col:44>
    0x9f2b1a0 "difference_type __n =
      (ImplicitCastExpr 0x9f2b268 <col:29, col:35> 'difference_type':'int' <IntegralCast>
        (BinaryOperator 0x9f2b250 <col:29, col:35> 'unsigned int' '+'
          (ImplicitCastExpr 0x9f2b240 <col:29> 'unsigned int' <IntegralCast>
            (ImplicitCastExpr 0x9f2b220 <col:29> 'ptrdiff_t':'int' <LValueToRValue>
              (DeclRefExpr 0x9f2b1d4 <col:29> 'ptrdiff_t':'int' lvalue ParmVar 0x9f2a470 '__i' 'ptrdiff_t':'int')))
          (ImplicitCastExpr 0x9f2b230 <col:35> 'unsigned int' <LValueToRValue>
            (MemberExpr 0x9f2b200 <col:35> 'unsigned int' lvalue ->_M_offset 0x9f2a1b0
              (CXXThisExpr 0x9f2b1f0 <col:35> 'struct std::_Bit_iterator_base *' this)))))")
  (CompoundAssignOperator 0x9f2b348 <line:142:7, col:36> '_Bit_type *' lvalue '+=' ComputeLHSTy='_Bit_type *' ComputeResultTy='_Bit_type *'
    (MemberExpr 0x9f2b298 <col:7> '_Bit_type *' lvalue ->_M_p 0x9f2a170
      (CXXThisExpr 0x9f2b288 <col:7> 'struct std::_Bit_iterator_base *' this))
    (BinaryOperator 0x9f2b330 <col:15, col:36> 'int' '/'
      (ImplicitCastExpr 0x9f2b320 <col:15> 'difference_type':'int' <LValueToRValue>
        (DeclRefExpr 0x9f2b2b8 <col:15> 'difference_type':'int' lvalue Var 0x9f2b1a0 '__n' 'difference_type':'int'))
      (CXXFunctionalCastExpr 0x9f2b308 <col:21, col:36> 'int' functional cast to int <NoOp>
        (ImplicitCastExpr 0x9f2b2f8 <col:25> 'int' <IntegralCast>
          (DeclRefExpr 0x9f2b2dc <col:25> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x9f286d0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))
  (BinaryOperator 0x9f2b410 <line:143:7, col:34> 'difference_type':'int' lvalue '='
    (DeclRefExpr 0x9f2b368 <col:7> 'difference_type':'int' lvalue Var 0x9f2b1a0 '__n' 'difference_type':'int')
    (BinaryOperator 0x9f2b3f8 <col:13, col:34> 'int' '%'
      (ImplicitCastExpr 0x9f2b3e8 <col:13> 'difference_type':'int' <LValueToRValue>
        (DeclRefExpr 0x9f2b380 <col:13> 'difference_type':'int' lvalue Var 0x9f2b1a0 '__n' 'difference_type':'int'))
      (CXXFunctionalCastExpr 0x9f2b3d0 <col:19, col:34> 'int' functional cast to int <NoOp>
        (ImplicitCastExpr 0x9f2b3c0 <col:23> 'int' <IntegralCast>
          (DeclRefExpr 0x9f2b3a4 <col:23> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x9f286d0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))
  (IfStmt 0x9f2b568 <line:144:7, line:148:2>
    <<<NULL>>>
    (BinaryOperator 0x9f2b468 <line:144:11, col:17> '_Bool' '<'
      (ImplicitCastExpr 0x9f2b458 <col:11> 'difference_type':'int' <LValueToRValue>
        (DeclRefExpr 0x9f2b428 <col:11> 'difference_type':'int' lvalue Var 0x9f2b1a0 '__n' 'difference_type':'int'))
      (IntegerLiteral 0x9f2b440 <col:17> 'int' 0))
    (CompoundStmt 0x9f2b550 <line:145:2, line:148:2>
      (CompoundAssignOperator 0x9f2b4e8 <line:146:4, col:26> 'difference_type':'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
        (DeclRefExpr 0x9f2b480 <col:4> 'difference_type':'int' lvalue Var 0x9f2b1a0 '__n' 'difference_type':'int')
        (CXXFunctionalCastExpr 0x9f2b4d0 <col:11, col:26> 'int' functional cast to int <NoOp>
          (ImplicitCastExpr 0x9f2b4c0 <col:15> 'int' <IntegralCast>
            (DeclRefExpr 0x9f2b4a4 <col:15> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x9f286d0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>'))))
      (UnaryOperator 0x9f2b538 <line:147:4, col:6> '_Bit_type *' lvalue prefix '--'
        (MemberExpr 0x9f2b518 <col:6> '_Bit_type *' lvalue ->_M_p 0x9f2a170
          (CXXThisExpr 0x9f2b508 <col:6> 'struct std::_Bit_iterator_base *' this))))
    <<<NULL>>>)
  (BinaryOperator 0x9f2b618 <line:149:7, col:48> 'unsigned int' lvalue '='
    (MemberExpr 0x9f2b598 <col:7> 'unsigned int' lvalue ->_M_offset 0x9f2a1b0
      (CXXThisExpr 0x9f2b588 <col:7> 'struct std::_Bit_iterator_base *' this))
    (CXXStaticCastExpr 0x9f2b600 <col:19, col:48> 'unsigned int' static_cast<unsigned int> <NoOp>
      (ImplicitCastExpr 0x9f2b5f0 <col:45> 'unsigned int' <IntegralCast>
        (ImplicitCastExpr 0x9f2b5e0 <col:45> 'difference_type':'int' <LValueToRValue>
          (DeclRefExpr 0x9f2b5b8 <col:45> 'difference_type':'int' lvalue Var 0x9f2b1a0 '__n' 'difference_type':'int'))))))


        bool operator==(const std::_Bit_iterator_base &__i) const (CompoundStmt 0x9f2b7e0 </usr/include/c++/4.6/bits/stl_bvector.h:154:5, col:62>
  (ReturnStmt 0x9f2b7d0 <col:7, col:51>
    (BinaryOperator 0x9f2b7b8 <col:14, col:51> '_Bool' '&&'
      (BinaryOperator 0x9f2b700 <col:14, col:26> '_Bool' '=='
        (ImplicitCastExpr 0x9f2b6e0 <col:14> '_Bit_type *' <LValueToRValue>
          (MemberExpr 0x9f2b688 <col:14> '_Bit_type *const' lvalue ->_M_p 0x9f2a170
            (CXXThisExpr 0x9f2b678 <col:14> 'const struct std::_Bit_iterator_base *' this)))
        (ImplicitCastExpr 0x9f2b6f0 <col:22, col:26> '_Bit_type *' <LValueToRValue>
          (MemberExpr 0x9f2b6c0 <col:22, col:26> '_Bit_type *const' lvalue ._M_p 0x9f2a170
            (DeclRefExpr 0x9f2b6a8 <col:22> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0x9f2a590 '__i' 'const struct std::_Bit_iterator_base &'))))
      (BinaryOperator 0x9f2b7a0 <col:34, col:51> '_Bool' '=='
        (ImplicitCastExpr 0x9f2b780 <col:34> 'unsigned int' <LValueToRValue>
          (MemberExpr 0x9f2b728 <col:34> 'const unsigned int' lvalue ->_M_offset 0x9f2a1b0
            (CXXThisExpr 0x9f2b718 <col:34> 'const struct std::_Bit_iterator_base *' this)))
        (ImplicitCastExpr 0x9f2b790 <col:47, col:51> 'unsigned int' <LValueToRValue>
          (MemberExpr 0x9f2b760 <col:47, col:51> 'const unsigned int' lvalue ._M_offset 0x9f2a1b0
            (DeclRefExpr 0x9f2b748 <col:47> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0x9f2a590 '__i' 'const struct std::_Bit_iterator_base &')))))))


        bool operator<(const std::_Bit_iterator_base &__i) const (CompoundStmt 0x9f2ba30 </usr/include/c++/4.6/bits/stl_bvector.h:158:5, line:161:5>
  (ReturnStmt 0x9f2ba20 <line:159:7, line:160:56>
    (BinaryOperator 0x9f2ba08 <line:159:14, line:160:56> '_Bool' '||'
      (BinaryOperator 0x9f2b880 <line:159:14, col:25> '_Bool' '<'
        (ImplicitCastExpr 0x9f2b860 <col:14> '_Bit_type *' <LValueToRValue>
          (MemberExpr 0x9f2b808 <col:14> '_Bit_type *const' lvalue ->_M_p 0x9f2a170
            (CXXThisExpr 0x9f2b7f8 <col:14> 'const struct std::_Bit_iterator_base *' this)))
        (ImplicitCastExpr 0x9f2b870 <col:21, col:25> '_Bit_type *' <LValueToRValue>
          (MemberExpr 0x9f2b840 <col:21, col:25> '_Bit_type *const' lvalue ._M_p 0x9f2a170
            (DeclRefExpr 0x9f2b828 <col:21> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0x9f2a690 '__i' 'const struct std::_Bit_iterator_base &'))))
      (ParenExpr 0x9f2b9f0 <line:160:10, col:56> '_Bool'
        (BinaryOperator 0x9f2b9d8 <col:11, col:47> '_Bool' '&&'
          (BinaryOperator 0x9f2b920 <col:11, col:23> '_Bool' '=='
            (ImplicitCastExpr 0x9f2b900 <col:11> '_Bit_type *' <LValueToRValue>
              (MemberExpr 0x9f2b8a8 <col:11> '_Bit_type *const' lvalue ->_M_p 0x9f2a170
                (CXXThisExpr 0x9f2b898 <col:11> 'const struct std::_Bit_iterator_base *' this)))
            (ImplicitCastExpr 0x9f2b910 <col:19, col:23> '_Bit_type *' <LValueToRValue>
              (MemberExpr 0x9f2b8e0 <col:19, col:23> '_Bit_type *const' lvalue ._M_p 0x9f2a170
                (DeclRefExpr 0x9f2b8c8 <col:19> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0x9f2a690 '__i' 'const struct std::_Bit_iterator_base &'))))
          (BinaryOperator 0x9f2b9c0 <col:31, col:47> '_Bool' '<'
            (ImplicitCastExpr 0x9f2b9a0 <col:31> 'unsigned int' <LValueToRValue>
              (MemberExpr 0x9f2b948 <col:31> 'const unsigned int' lvalue ->_M_offset 0x9f2a1b0
                (CXXThisExpr 0x9f2b938 <col:31> 'const struct std::_Bit_iterator_base *' this)))
            (ImplicitCastExpr 0x9f2b9b0 <col:43, col:47> 'unsigned int' <LValueToRValue>
              (MemberExpr 0x9f2b980 <col:43, col:47> 'const unsigned int' lvalue ._M_offset 0x9f2a1b0
                (DeclRefExpr 0x9f2b968 <col:43> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0x9f2a690 '__i' 'const struct std::_Bit_iterator_base &')))))))))


        bool operator!=(const std::_Bit_iterator_base &__i) const (CompoundStmt 0x9f2d300 </usr/include/c++/4.6/bits/stl_bvector.h:165:5, col:31>
  (ReturnStmt 0x9f2d2f0 <col:7, col:28>
    (UnaryOperator 0x9f2d2d8 <col:14, col:28> '_Bool' prefix '!'
      (ParenExpr 0x9f2d2c0 <col:15, col:28> '_Bool'
        (CXXOperatorCallExpr 0x9f2d298 <col:16, col:25> '_Bool'
          (ImplicitCastExpr 0x9f2d288 <col:22, <invalid sloc>> '_Bool (*)(const struct std::_Bit_iterator_base &) const' <FunctionToPointerDecay>
            (DeclRefExpr 0x9f2d258 <col:22, <invalid sloc>> '_Bool (const struct std::_Bit_iterator_base &) const' lvalue CXXMethod 0x9f2a610 'operator==' '_Bool (const struct std::_Bit_iterator_base &) const'))
          (UnaryOperator 0x9f2ba58 <col:16, col:17> 'const struct std::_Bit_iterator_base' lvalue prefix '*'
            (CXXThisExpr 0x9f2ba48 <col:17> 'const struct std::_Bit_iterator_base *' this))
          (DeclRefExpr 0x9f2ba6c <col:25> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0x9f2a760 '__i' 'const struct std::_Bit_iterator_base &'))))))


        bool operator>(const std::_Bit_iterator_base &__i) const (CompoundStmt 0x9f2d3b8 </usr/include/c++/4.6/bits/stl_bvector.h:169:5, col:27>
  (ReturnStmt 0x9f2d3a8 <col:7, col:21>
    (CXXOperatorCallExpr 0x9f2d380 <col:14, col:21> '_Bool'
      (ImplicitCastExpr 0x9f2d370 <col:18, <invalid sloc>> '_Bool (*)(const struct std::_Bit_iterator_base &) const' <FunctionToPointerDecay>
        (DeclRefExpr 0x9f2d358 <col:18, <invalid sloc>> '_Bool (const struct std::_Bit_iterator_base &) const' lvalue CXXMethod 0x9f2a6e0 'operator<' '_Bool (const struct std::_Bit_iterator_base &) const'))
      (DeclRefExpr 0x9f2d314 <col:14> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0x9f2a830 '__i' 'const struct std::_Bit_iterator_base &')
      (UnaryOperator 0x9f2d340 <col:20, col:21> 'const struct std::_Bit_iterator_base' lvalue prefix '*'
        (CXXThisExpr 0x9f2d330 <col:21> 'const struct std::_Bit_iterator_base *' this)))))


        bool operator<=(const std::_Bit_iterator_base &__i) const (CompoundStmt 0x9f2d4a0 </usr/include/c++/4.6/bits/stl_bvector.h:173:5, col:30>
  (ReturnStmt 0x9f2d490 <col:7, col:27>
    (UnaryOperator 0x9f2d478 <col:14, col:27> '_Bool' prefix '!'
      (ParenExpr 0x9f2d460 <col:15, col:27> '_Bool'
        (CXXOperatorCallExpr 0x9f2d438 <col:16, col:23> '_Bool'
          (ImplicitCastExpr 0x9f2d428 <col:20, <invalid sloc>> '_Bool (*)(const struct std::_Bit_iterator_base &) const' <FunctionToPointerDecay>
            (DeclRefExpr 0x9f2d410 <col:20, <invalid sloc>> '_Bool (const struct std::_Bit_iterator_base &) const' lvalue CXXMethod 0x9f2a6e0 'operator<' '_Bool (const struct std::_Bit_iterator_base &) const'))
          (DeclRefExpr 0x9f2d3cc <col:16> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0x9f2a900 '__i' 'const struct std::_Bit_iterator_base &')
          (UnaryOperator 0x9f2d3f8 <col:22, col:23> 'const struct std::_Bit_iterator_base' lvalue prefix '*'
            (CXXThisExpr 0x9f2d3e8 <col:23> 'const struct std::_Bit_iterator_base *' this)))))))


        bool operator>=(const std::_Bit_iterator_base &__i) const (CompoundStmt 0x9f2d588 </usr/include/c++/4.6/bits/stl_bvector.h:177:5, col:30>
  (ReturnStmt 0x9f2d578 <col:7, col:27>
    (UnaryOperator 0x9f2d560 <col:14, col:27> '_Bool' prefix '!'
      (ParenExpr 0x9f2d548 <col:15, col:27> '_Bool'
        (CXXOperatorCallExpr 0x9f2d520 <col:16, col:24> '_Bool'
          (ImplicitCastExpr 0x9f2d510 <col:22, <invalid sloc>> '_Bool (*)(const struct std::_Bit_iterator_base &) const' <FunctionToPointerDecay>
            (DeclRefExpr 0x9f2d4f8 <col:22, <invalid sloc>> '_Bool (const struct std::_Bit_iterator_base &) const' lvalue CXXMethod 0x9f2a6e0 'operator<' '_Bool (const struct std::_Bit_iterator_base &) const'))
          (UnaryOperator 0x9f2d4c8 <col:16, col:17> 'const struct std::_Bit_iterator_base' lvalue prefix '*'
            (CXXThisExpr 0x9f2d4b8 <col:17> 'const struct std::_Bit_iterator_base *' this))
          (DeclRefExpr 0x9f2d4dc <col:24> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0x9f2a9d0 '__i' 'const struct std::_Bit_iterator_base &'))))))


        inline _Bit_iterator_base(const std::_Bit_iterator_base &) throw() : std::iterator<std::random_access_iterator_tag, bool>((ImplicitCastExpr 0x9f2edb0 </usr/include/c++/4.6/bits/stl_bvector.h:109:10> 'const std::iterator<std::random_access_iterator_tag, _Bool>':'const struct std::iterator<struct std::random_access_iterator_tag, _Bool, int, _Bool *, _Bool &>' lvalue <UncheckedDerivedToBase (iterator)>
  (DeclRefExpr 0x9f2ed98 <col:10> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0x9f2e720 '' 'const struct std::_Bit_iterator_base &'))
), _M_p((ImplicitCastExpr 0x9f2eeb0 </usr/include/c++/4.6/bits/stl_bvector.h:109:10> '_Bit_type *' <LValueToRValue>
  (MemberExpr 0x9f2ee90 <col:10> '_Bit_type *const' lvalue ._M_p 0x9f2a170
    (DeclRefExpr 0x9f2ee78 <col:10> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0x9f2e720 '' 'const struct std::_Bit_iterator_base &')))
), _M_offset((ImplicitCastExpr 0x9f2ef10 </usr/include/c++/4.6/bits/stl_bvector.h:109:10> 'unsigned int' <LValueToRValue>
  (MemberExpr 0x9f2eeec <col:10> 'const unsigned int' lvalue ._M_offset 0x9f2a1b0
    (DeclRefExpr 0x9f2eed4 <col:10> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0x9f2e720 '' 'const struct std::_Bit_iterator_base &')))
) (CompoundStmt 0x9f2ef48 </usr/include/c++/4.6/bits/stl_bvector.h:109:10>)


    };
    inline ptrdiff_t operator-(const std::_Bit_iterator_base &__x, const std::_Bit_iterator_base &__y) (CompoundStmt 0x9f2d938 </usr/include/c++/4.6/bits/stl_bvector.h:182:3, line:185:3>
  (ReturnStmt 0x9f2d928 <line:183:5, line:184:37>
    (ImplicitCastExpr 0x9f2d918 <line:183:12, line:184:37> 'ptrdiff_t':'int' <IntegralCast>
      (ParenExpr 0x9f2d900 <line:183:12, line:184:37> 'unsigned int'
        (BinaryOperator 0x9f2d8e8 <line:183:13, line:184:28> 'unsigned int' '-'
          (BinaryOperator 0x9f2d888 <line:183:13, line:184:12> 'unsigned int' '+'
            (ImplicitCastExpr 0x9f2d878 <line:183:13, col:52> 'unsigned int' <IntegralCast>
              (BinaryOperator 0x9f2d818 <col:13, col:52> 'int' '*'
                (CXXFunctionalCastExpr 0x9f2d740 <col:13, col:28> 'int' functional cast to int <NoOp>
                  (ImplicitCastExpr 0x9f2d730 <col:17> 'int' <IntegralCast>
                    (DeclRefExpr 0x9f2d714 <col:17> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x9f286d0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))
                (ParenExpr 0x9f2d800 <col:32, col:52> 'int'
                  (BinaryOperator 0x9f2d7e8 <col:33, col:48> 'int' '-'
                    (ImplicitCastExpr 0x9f2d7c8 <col:33, col:37> '_Bit_type *' <LValueToRValue>
                      (MemberExpr 0x9f2d770 <col:33, col:37> '_Bit_type *const' lvalue ._M_p 0x9f2a170
                        (DeclRefExpr 0x9f2d758 <col:33> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0x9f2d5b0 '__x' 'const struct std::_Bit_iterator_base &')))
                    (ImplicitCastExpr 0x9f2d7d8 <col:44, col:48> '_Bit_type *' <LValueToRValue>
                      (MemberExpr 0x9f2d7a8 <col:44, col:48> '_Bit_type *const' lvalue ._M_p 0x9f2a170
                        (DeclRefExpr 0x9f2d790 <col:44> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0x9f2d600 '__y' 'const struct std::_Bit_iterator_base &')))))))
            (ImplicitCastExpr 0x9f2d868 <line:184:8, col:12> 'unsigned int' <LValueToRValue>
              (MemberExpr 0x9f2d848 <col:8, col:12> 'const unsigned int' lvalue ._M_offset 0x9f2a1b0
                (DeclRefExpr 0x9f2d830 <col:8> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0x9f2d5b0 '__x' 'const struct std::_Bit_iterator_base &'))))
          (ImplicitCastExpr 0x9f2d8d8 <col:24, col:28> 'unsigned int' <LValueToRValue>
            (MemberExpr 0x9f2d8b8 <col:24, col:28> 'const unsigned int' lvalue ._M_offset 0x9f2a1b0
              (DeclRefExpr 0x9f2d8a0 <col:24> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0x9f2d600 '__y' 'const struct std::_Bit_iterator_base &'))))))))


    struct _Bit_iterator : public std::_Bit_iterator_base {
        struct _Bit_iterator;
        typedef std::_Bit_reference reference;
        typedef std::_Bit_reference *pointer;
        typedef std::_Bit_iterator iterator;
        _Bit_iterator() : std::_Bit_iterator_base((ImplicitCastExpr 0x9f2e760 </usr/include/c++/4.6/bits/stl_bvector.h:193:42> '_Bit_type *' <NullToPointer>
  (IntegerLiteral 0x9f2e618 <col:42> 'int' 0))
, (ImplicitCastExpr 0x9f2e770 </usr/include/c++/4.6/bits/stl_bvector.h:193:45> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f2e630 <col:45> 'int' 0))
) (CompoundStmt 0x9f2e7d0 </usr/include/c++/4.6/bits/stl_bvector.h:193:48, col:50>)


        _Bit_iterator(_Bit_type *__x, unsigned int __y) : std::_Bit_iterator_base((ImplicitCastExpr 0x9f2e818 </usr/include/c++/4.6/bits/stl_bvector.h:196:26> '_Bit_type *' <LValueToRValue>
  (DeclRefExpr 0x9f2e7e0 <col:26> '_Bit_type *' lvalue ParmVar 0x9f2dc20 '__x' '_Bit_type *'))
, (ImplicitCastExpr 0x9f2e828 </usr/include/c++/4.6/bits/stl_bvector.h:196:31> 'unsigned int' <LValueToRValue>
  (DeclRefExpr 0x9f2e7f8 <col:31> 'unsigned int' lvalue ParmVar 0x9f2dc70 '__y' 'unsigned int'))
) (CompoundStmt 0x9f2e880 </usr/include/c++/4.6/bits/stl_bvector.h:196:36, col:38>)


        reference operator*() const (CompoundStmt 0x9f2eae8 </usr/include/c++/4.6/bits/stl_bvector.h:200:5, col:49>
  (ReturnStmt 0x9f2ead8 <col:7, col:46>
    (CXXConstructExpr 0x9f2eab0 <col:14, col:46> 'reference':'struct std::_Bit_reference''void (const struct std::_Bit_reference &) throw()' elidable
      (MaterializeTemporaryExpr 0x9f2e9c8 <col:14, col:46> 'const struct std::_Bit_reference' lvalue
        (ImplicitCastExpr 0x9f2e9b8 <col:14, col:46> 'const struct std::_Bit_reference' <NoOp>
          (CXXTemporaryObjectExpr 0x9f2e988 <col:14, col:46> 'reference':'struct std::_Bit_reference''void (_Bit_type *, _Bit_type)'
            (ImplicitCastExpr 0x9f2e978 <col:24> '_Bit_type *' <LValueToRValue>
              (MemberExpr 0x9f2e8d8 <col:24> '_Bit_type *const' lvalue ->_M_p 0x9f2a170
                (ImplicitCastExpr 0x9f2e8c8 <col:24> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
                  (CXXThisExpr 0x9f2e8b8 <col:24> 'const struct std::_Bit_iterator *' this))))
            (BinaryOperator 0x9f2e960 <col:30, col:37> 'unsigned long' '<<'
              (IntegerLiteral 0x9f2e8f8 <col:30> 'unsigned long' 1)
              (ImplicitCastExpr 0x9f2e950 <col:37> 'unsigned int' <LValueToRValue>
                (MemberExpr 0x9f2e930 <col:37> 'const unsigned int' lvalue ->_M_offset 0x9f2a1b0
                  (ImplicitCastExpr 0x9f2e920 <col:37> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
                    (CXXThisExpr 0x9f2e910 <col:37> 'const struct std::_Bit_iterator *' this)))))))))))


        iterator &operator++() (CompoundStmt 0x9f2ebb0 </usr/include/c++/4.6/bits/stl_bvector.h:204:5, line:207:5>
  (CXXMemberCallExpr 0x9f2eb48 <line:205:7, col:18> 'void'
    (MemberExpr 0x9f2eb28 <col:7> '<bound member function type>' ->_M_bump_up 0x9f2a380
      (ImplicitCastExpr 0x9f2eb68 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
        (CXXThisExpr 0x9f2eb18 <col:7> 'struct std::_Bit_iterator *' this))))
  (ReturnStmt 0x9f2eba0 <line:206:7, col:15>
    (UnaryOperator 0x9f2eb88 <col:14, col:15> 'struct std::_Bit_iterator' lvalue prefix '*'
      (CXXThisExpr 0x9f2eb78 <col:15> 'struct std::_Bit_iterator *' this))))


        iterator operator++(int) (CompoundStmt 0x9f2f0b8 </usr/include/c++/4.6/bits/stl_bvector.h:211:5, line:215:5>
  (DeclStmt 0x9f2efe8 <line:212:7, col:29>
    0x9f2ebd0 "iterator __tmp =
      (CXXConstructExpr 0x9f2efc0 <col:24, col:25> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
        (ImplicitCastExpr 0x9f2ed60 <col:24, col:25> 'const struct std::_Bit_iterator' lvalue <NoOp>
          (UnaryOperator 0x9f2ec18 <col:24, col:25> 'struct std::_Bit_iterator' lvalue prefix '*'
            (CXXThisExpr 0x9f2ec08 <col:25> 'struct std::_Bit_iterator *' this))))")
  (CXXMemberCallExpr 0x9f2f028 <line:213:7, col:18> 'void'
    (MemberExpr 0x9f2f008 <col:7> '<bound member function type>' ->_M_bump_up 0x9f2a380
      (ImplicitCastExpr 0x9f2f048 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
        (CXXThisExpr 0x9f2eff8 <col:7> 'struct std::_Bit_iterator *' this))))
  (ReturnStmt 0x9f2f0a8 <line:214:7, col:14>
    (CXXConstructExpr 0x9f2f080 <col:14> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()' elidable
      (ImplicitCastExpr 0x9f2f070 <col:14> 'const struct std::_Bit_iterator' lvalue <NoOp>
        (DeclRefExpr 0x9f2f058 <col:14> 'iterator':'struct std::_Bit_iterator' lvalue Var 0x9f2ebd0 '__tmp' 'iterator':'struct std::_Bit_iterator')))))


        iterator &operator--() (CompoundStmt 0x9f2f170 </usr/include/c++/4.6/bits/stl_bvector.h:219:5, line:222:5>
  (CXXMemberCallExpr 0x9f2f108 <line:220:7, col:20> 'void'
    (MemberExpr 0x9f2f0e8 <col:7> '<bound member function type>' ->_M_bump_down 0x9f2a400
      (ImplicitCastExpr 0x9f2f128 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
        (CXXThisExpr 0x9f2f0d8 <col:7> 'struct std::_Bit_iterator *' this))))
  (ReturnStmt 0x9f2f160 <line:221:7, col:15>
    (UnaryOperator 0x9f2f148 <col:14, col:15> 'struct std::_Bit_iterator' lvalue prefix '*'
      (CXXThisExpr 0x9f2f138 <col:15> 'struct std::_Bit_iterator *' this))))


        iterator operator--(int) (CompoundStmt 0x9f2f2f8 </usr/include/c++/4.6/bits/stl_bvector.h:226:5, line:230:5>
  (DeclStmt 0x9f2f228 <line:227:7, col:29>
    0x9f2f190 "iterator __tmp =
      (CXXConstructExpr 0x9f2f200 <col:24, col:25> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
        (ImplicitCastExpr 0x9f2f1f0 <col:24, col:25> 'const struct std::_Bit_iterator' lvalue <NoOp>
          (UnaryOperator 0x9f2f1d8 <col:24, col:25> 'struct std::_Bit_iterator' lvalue prefix '*'
            (CXXThisExpr 0x9f2f1c8 <col:25> 'struct std::_Bit_iterator *' this))))")
  (CXXMemberCallExpr 0x9f2f268 <line:228:7, col:20> 'void'
    (MemberExpr 0x9f2f248 <col:7> '<bound member function type>' ->_M_bump_down 0x9f2a400
      (ImplicitCastExpr 0x9f2f288 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
        (CXXThisExpr 0x9f2f238 <col:7> 'struct std::_Bit_iterator *' this))))
  (ReturnStmt 0x9f2f2e8 <line:229:7, col:14>
    (CXXConstructExpr 0x9f2f2c0 <col:14> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()' elidable
      (ImplicitCastExpr 0x9f2f2b0 <col:14> 'const struct std::_Bit_iterator' lvalue <NoOp>
        (DeclRefExpr 0x9f2f298 <col:14> 'iterator':'struct std::_Bit_iterator' lvalue Var 0x9f2f190 '__tmp' 'iterator':'struct std::_Bit_iterator')))))


        iterator &operator+=(difference_type __i) (CompoundStmt 0x9f2f3d8 </usr/include/c++/4.6/bits/stl_bvector.h:234:5, line:237:5>
  (CXXMemberCallExpr 0x9f2f360 <line:235:7, col:18> 'void'
    (MemberExpr 0x9f2f328 <col:7> '<bound member function type>' ->_M_incr 0x9f2a4f0
      (ImplicitCastExpr 0x9f2f380 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
        (CXXThisExpr 0x9f2f318 <col:7> 'struct std::_Bit_iterator *' this)))
    (ImplicitCastExpr 0x9f2f390 <col:15> 'difference_type':'int' <LValueToRValue>
      (DeclRefExpr 0x9f2f348 <col:15> 'difference_type':'int' lvalue ParmVar 0x9f2e160 '__i' 'difference_type':'int')))
  (ReturnStmt 0x9f2f3c8 <line:236:7, col:15>
    (UnaryOperator 0x9f2f3b0 <col:14, col:15> 'struct std::_Bit_iterator' lvalue prefix '*'
      (CXXThisExpr 0x9f2f3a0 <col:15> 'struct std::_Bit_iterator *' this))))


        iterator &operator-=(difference_type __i) (CompoundStmt 0x9f2f518 </usr/include/c++/4.6/bits/stl_bvector.h:241:5, line:244:5>
  (CXXOperatorCallExpr 0x9f2f4b8 <line:242:7, col:17> 'iterator':'struct std::_Bit_iterator' lvalue
    (ImplicitCastExpr 0x9f2f4a8 <col:13, <invalid sloc>> 'iterator &(*)(difference_type)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9f2f458 <col:13, <invalid sloc>> 'iterator &(difference_type)' lvalue CXXMethod 0x9f2e200 'operator+=' 'iterator &(difference_type)'))
    (UnaryOperator 0x9f2f400 <col:7, col:8> 'struct std::_Bit_iterator' lvalue prefix '*'
      (CXXThisExpr 0x9f2f3f0 <col:8> 'struct std::_Bit_iterator *' this))
    (UnaryOperator 0x9f2f440 <col:16, col:17> 'difference_type':'int' prefix '-'
      (ImplicitCastExpr 0x9f2f430 <col:17> 'difference_type':'int' <LValueToRValue>
        (DeclRefExpr 0x9f2f414 <col:17> 'difference_type':'int' lvalue ParmVar 0x9f2e270 '__i' 'difference_type':'int'))))
  (ReturnStmt 0x9f2f508 <line:243:7, col:15>
    (UnaryOperator 0x9f2f4f0 <col:14, col:15> 'struct std::_Bit_iterator' lvalue prefix '*'
      (CXXThisExpr 0x9f2f4e0 <col:15> 'struct std::_Bit_iterator *' this))))


        iterator operator+(difference_type __i) const (CompoundStmt 0x9f2f6b0 </usr/include/c++/4.6/bits/stl_bvector.h:248:5, line:251:5>
  (DeclStmt 0x9f2f5c8 <line:249:7, col:29>
    0x9f2f540 "iterator __tmp =
      (CXXConstructExpr 0x9f2f5a0 <col:24, col:25> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
        (UnaryOperator 0x9f2f588 <col:24, col:25> 'const struct std::_Bit_iterator' lvalue prefix '*'
          (CXXThisExpr 0x9f2f578 <col:25> 'const struct std::_Bit_iterator *' this)))")
  (ReturnStmt 0x9f2f6a0 <line:250:7, col:23>
    (CXXConstructExpr 0x9f2f678 <col:14, col:23> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
      (ImplicitCastExpr 0x9f2f668 <col:14, col:23> 'const struct std::_Bit_iterator' lvalue <NoOp>
        (CXXOperatorCallExpr 0x9f2f640 <col:14, col:23> 'iterator':'struct std::_Bit_iterator' lvalue
          (ImplicitCastExpr 0x9f2f630 <col:20, <invalid sloc>> 'iterator &(*)(difference_type)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9f2f618 <col:20, <invalid sloc>> 'iterator &(difference_type)' lvalue CXXMethod 0x9f2e200 'operator+=' 'iterator &(difference_type)'))
          (DeclRefExpr 0x9f2f5d8 <col:14> 'iterator':'struct std::_Bit_iterator' lvalue Var 0x9f2f540 '__tmp' 'iterator':'struct std::_Bit_iterator')
          (ImplicitCastExpr 0x9f2f608 <col:23> 'difference_type':'int' <LValueToRValue>
            (DeclRefExpr 0x9f2f5f0 <col:23> 'difference_type':'int' lvalue ParmVar 0x9f2e340 '__i' 'difference_type':'int')))))))


        iterator operator-(difference_type __i) const (CompoundStmt 0x9f2f840 </usr/include/c++/4.6/bits/stl_bvector.h:255:5, line:258:5>
  (DeclStmt 0x9f2f758 <line:256:7, col:29>
    0x9f2f6d0 "iterator __tmp =
      (CXXConstructExpr 0x9f2f730 <col:24, col:25> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
        (UnaryOperator 0x9f2f718 <col:24, col:25> 'const struct std::_Bit_iterator' lvalue prefix '*'
          (CXXThisExpr 0x9f2f708 <col:25> 'const struct std::_Bit_iterator *' this)))")
  (ReturnStmt 0x9f2f830 <line:257:7, col:23>
    (CXXConstructExpr 0x9f2f808 <col:14, col:23> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
      (ImplicitCastExpr 0x9f2f7f8 <col:14, col:23> 'const struct std::_Bit_iterator' lvalue <NoOp>
        (CXXOperatorCallExpr 0x9f2f7d0 <col:14, col:23> 'iterator':'struct std::_Bit_iterator' lvalue
          (ImplicitCastExpr 0x9f2f7c0 <col:20, <invalid sloc>> 'iterator &(*)(difference_type)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9f2f7a8 <col:20, <invalid sloc>> 'iterator &(difference_type)' lvalue CXXMethod 0x9f2e2d0 'operator-=' 'iterator &(difference_type)'))
          (DeclRefExpr 0x9f2f768 <col:14> 'iterator':'struct std::_Bit_iterator' lvalue Var 0x9f2f6d0 '__tmp' 'iterator':'struct std::_Bit_iterator')
          (ImplicitCastExpr 0x9f2f798 <col:23> 'difference_type':'int' <LValueToRValue>
            (DeclRefExpr 0x9f2f780 <col:23> 'difference_type':'int' lvalue ParmVar 0x9f2e450 '__i' 'difference_type':'int')))))))


        reference operator[](difference_type __i) const (CompoundStmt 0x9f2fa30 </usr/include/c++/4.6/bits/stl_bvector.h:262:5, col:30>
  (ReturnStmt 0x9f2fa20 <col:7, col:27>
    (CXXConstructExpr 0x9f2f9f8 <col:14, col:27> 'reference':'struct std::_Bit_reference''void (const struct std::_Bit_reference &) throw()' elidable
      (MaterializeTemporaryExpr 0x9f2f9e8 <col:14, col:27> 'const struct std::_Bit_reference' lvalue
        (ImplicitCastExpr 0x9f2f9d8 <col:14, col:27> 'const struct std::_Bit_reference' <NoOp>
          (CXXOperatorCallExpr 0x9f2f9b8 <col:14, col:27> 'reference':'struct std::_Bit_reference'
            (ImplicitCastExpr 0x9f2f9a8 <<invalid sloc>> 'reference (*)(void) const' <FunctionToPointerDecay>
              (DeclRefExpr 0x9f2f958 <<invalid sloc>> 'reference (void) const' lvalue CXXMethod 0x9f2dda0 'operator*' 'reference (void) const'))
            (ImplicitCastExpr 0x9f2f948 <col:15, col:27> 'const struct std::_Bit_iterator' lvalue <NoOp>
              (ParenExpr 0x9f2f930 <col:15, col:27> 'iterator':'struct std::_Bit_iterator'
                (CXXOperatorCallExpr 0x9f2f908 <col:16, col:24> 'iterator':'struct std::_Bit_iterator'
                  (ImplicitCastExpr 0x9f2f8f8 <col:22, <invalid sloc>> 'iterator (*)(difference_type) const' <FunctionToPointerDecay>
                    (DeclRefExpr 0x9f2f8a8 <col:22, <invalid sloc>> 'iterator (difference_type) const' lvalue CXXMethod 0x9f2e3e0 'operator+' 'iterator (difference_type) const'))
                  (UnaryOperator 0x9f2f868 <col:16, col:17> 'const struct std::_Bit_iterator' lvalue prefix '*'
                    (CXXThisExpr 0x9f2f858 <col:17> 'const struct std::_Bit_iterator *' this))
                  (ImplicitCastExpr 0x9f2f898 <col:24> 'difference_type':'int' <LValueToRValue>
                    (DeclRefExpr 0x9f2f87c <col:24> 'difference_type':'int' lvalue ParmVar 0x9f2e510 '__i' 'difference_type':'int')))))))))))


        inline _Bit_iterator(const std::_Bit_iterator &) throw() : std::_Bit_iterator_base((ImplicitCastExpr 0x9f2ed88 </usr/include/c++/4.6/bits/stl_bvector.h:187:10> 'const struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
  (DeclRefExpr 0x9f2ed6c <col:10> 'const struct std::_Bit_iterator' lvalue ParmVar 0x9f2ed20 '' 'const struct std::_Bit_iterator &'))
) (CompoundStmt 0x9f2efb0 </usr/include/c++/4.6/bits/stl_bvector.h:187:10>)


    };
    inline std::_Bit_iterator operator+(ptrdiff_t __n, const std::_Bit_iterator &__x) (CompoundStmt 0x9f2fc90 </usr/include/c++/4.6/bits/stl_bvector.h:267:3, col:23>
  (ReturnStmt 0x9f2fc80 <col:5, col:18>
    (CXXConstructExpr 0x9f2fc58 <col:12, col:18> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()' elidable
      (MaterializeTemporaryExpr 0x9f2fc48 <col:12, col:18> 'const struct std::_Bit_iterator' lvalue
        (ImplicitCastExpr 0x9f2fc38 <col:12, col:18> 'const struct std::_Bit_iterator' <NoOp>
          (CXXOperatorCallExpr 0x9f2fc10 <col:12, col:18> 'iterator':'struct std::_Bit_iterator'
            (ImplicitCastExpr 0x9f2fc00 <col:16, <invalid sloc>> 'iterator (*)(difference_type) const' <FunctionToPointerDecay>
              (DeclRefExpr 0x9f2fbe8 <col:16, <invalid sloc>> 'iterator (difference_type) const' lvalue CXXMethod 0x9f2e3e0 'operator+' 'iterator (difference_type) const'))
            (DeclRefExpr 0x9f2fba8 <col:12> 'const struct std::_Bit_iterator' lvalue ParmVar 0x9f2faa0 '__x' 'const struct std::_Bit_iterator &')
            (ImplicitCastExpr 0x9f2fbd8 <col:18> 'ptrdiff_t':'int' <LValueToRValue>
              (DeclRefExpr 0x9f2fbc0 <col:18> 'ptrdiff_t':'int' lvalue ParmVar 0x9f2fa50 '__n' 'ptrdiff_t':'int'))))))))


    struct _Bit_const_iterator : public std::_Bit_iterator_base {
        struct _Bit_const_iterator;
        typedef bool reference;
        typedef bool const_reference;
        typedef const bool *pointer;
        typedef std::_Bit_const_iterator const_iterator;
        _Bit_const_iterator() : std::_Bit_iterator_base((ImplicitCastExpr 0x9f30ac0 </usr/include/c++/4.6/bits/stl_bvector.h:276:48> '_Bit_type *' <NullToPointer>
  (IntegerLiteral 0x9f30a88 <col:48> 'int' 0))
, (ImplicitCastExpr 0x9f30ad0 </usr/include/c++/4.6/bits/stl_bvector.h:276:51> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f30aa0 <col:51> 'int' 0))
) (CompoundStmt 0x9f30b30 </usr/include/c++/4.6/bits/stl_bvector.h:276:54, col:56>)


        _Bit_const_iterator(_Bit_type *__x, unsigned int __y) : std::_Bit_iterator_base((ImplicitCastExpr 0x9f30b78 </usr/include/c++/4.6/bits/stl_bvector.h:279:26> '_Bit_type *' <LValueToRValue>
  (DeclRefExpr 0x9f30b40 <col:26> '_Bit_type *' lvalue ParmVar 0x9f2ffe0 '__x' '_Bit_type *'))
, (ImplicitCastExpr 0x9f30b88 </usr/include/c++/4.6/bits/stl_bvector.h:279:31> 'unsigned int' <LValueToRValue>
  (DeclRefExpr 0x9f30b58 <col:31> 'unsigned int' lvalue ParmVar 0x9f30030 '__y' 'unsigned int'))
) (CompoundStmt 0x9f30be0 </usr/include/c++/4.6/bits/stl_bvector.h:279:36, col:38>)


        _Bit_const_iterator(const std::_Bit_iterator &__x) : std::_Bit_iterator_base((ImplicitCastExpr 0x9f30c88 </usr/include/c++/4.6/bits/stl_bvector.h:282:26, col:30> '_Bit_type *' <LValueToRValue>
  (MemberExpr 0x9f30c18 <col:26, col:30> '_Bit_type *const' lvalue ._M_p 0x9f2a170
    (ImplicitCastExpr 0x9f30c08 <col:26> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
      (DeclRefExpr 0x9f30bf0 <col:26> 'const struct std::_Bit_iterator' lvalue ParmVar 0x9f30110 '__x' 'const struct std::_Bit_iterator &'))))
, (ImplicitCastExpr 0x9f30c98 </usr/include/c++/4.6/bits/stl_bvector.h:282:36, col:40> 'unsigned int' <LValueToRValue>
  (MemberExpr 0x9f30c60 <col:36, col:40> 'const unsigned int' lvalue ._M_offset 0x9f2a1b0
    (ImplicitCastExpr 0x9f30c50 <col:36> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
      (DeclRefExpr 0x9f30c38 <col:36> 'const struct std::_Bit_iterator' lvalue ParmVar 0x9f30110 '__x' 'const struct std::_Bit_iterator &'))))
) (CompoundStmt 0x9f30cf0 </usr/include/c++/4.6/bits/stl_bvector.h:282:51, col:53>)


        const_reference operator*() const (CompoundStmt 0x9f30ea0 </usr/include/c++/4.6/bits/stl_bvector.h:286:5, col:54>
  (ReturnStmt 0x9f30e90 <col:7, col:51>
    (ImplicitCastExpr 0x9f30e80 <col:14, col:51> '_Bool' <UserDefinedConversion>
      (CXXMemberCallExpr 0x9f30e60 <col:14, col:51> '_Bool'
        (MemberExpr 0x9f30e40 <col:14, <invalid sloc>> '_Bool (void) const' .operator _Bool 0x9f28b00
          (ImplicitCastExpr 0x9f30e30 <col:14, col:51> 'const struct std::_Bit_reference' lvalue <NoOp>
            (CXXTemporaryObjectExpr 0x9f30df8 <col:14, col:51> 'struct std::_Bit_reference''void (_Bit_type *, _Bit_type)'
              (ImplicitCastExpr 0x9f30de8 <col:29> '_Bit_type *' <LValueToRValue>
                (MemberExpr 0x9f30d48 <col:29> '_Bit_type *const' lvalue ->_M_p 0x9f2a170
                  (ImplicitCastExpr 0x9f30d38 <col:29> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
                    (CXXThisExpr 0x9f30d28 <col:29> 'const struct std::_Bit_const_iterator *' this))))
              (BinaryOperator 0x9f30dd0 <col:35, col:42> 'unsigned long' '<<'
                (IntegerLiteral 0x9f30d68 <col:35> 'unsigned long' 1)
                (ImplicitCastExpr 0x9f30dc0 <col:42> 'unsigned int' <LValueToRValue>
                  (MemberExpr 0x9f30da0 <col:42> 'const unsigned int' lvalue ->_M_offset 0x9f2a1b0
                    (ImplicitCastExpr 0x9f30d90 <col:42> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
                      (CXXThisExpr 0x9f30d80 <col:42> 'const struct std::_Bit_const_iterator *' this))))))))))))


        const_iterator &operator++() (CompoundStmt 0x9f30f70 </usr/include/c++/4.6/bits/stl_bvector.h:290:5, line:293:5>
  (CXXMemberCallExpr 0x9f30f08 <line:291:7, col:18> 'void'
    (MemberExpr 0x9f30ee8 <col:7> '<bound member function type>' ->_M_bump_up 0x9f2a380
      (ImplicitCastExpr 0x9f30f28 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
        (CXXThisExpr 0x9f30ed8 <col:7> 'struct std::_Bit_const_iterator *' this))))
  (ReturnStmt 0x9f30f60 <line:292:7, col:15>
    (UnaryOperator 0x9f30f48 <col:14, col:15> 'struct std::_Bit_const_iterator' lvalue prefix '*'
      (CXXThisExpr 0x9f30f38 <col:15> 'struct std::_Bit_const_iterator *' this))))


        const_iterator operator++(int) (CompoundStmt 0x9f31298 </usr/include/c++/4.6/bits/stl_bvector.h:297:5, line:301:5>
  (DeclStmt 0x9f311c8 <line:298:7, col:35>
    0x9f30f90 "const_iterator __tmp =
      (CXXConstructExpr 0x9f311a0 <col:30, col:31> 'const_iterator':'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()'
        (ImplicitCastExpr 0x9f31100 <col:30, col:31> 'const struct std::_Bit_const_iterator' lvalue <NoOp>
          (UnaryOperator 0x9f30fd8 <col:30, col:31> 'struct std::_Bit_const_iterator' lvalue prefix '*'
            (CXXThisExpr 0x9f30fc8 <col:31> 'struct std::_Bit_const_iterator *' this))))")
  (CXXMemberCallExpr 0x9f31208 <line:299:7, col:18> 'void'
    (MemberExpr 0x9f311e8 <col:7> '<bound member function type>' ->_M_bump_up 0x9f2a380
      (ImplicitCastExpr 0x9f31228 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
        (CXXThisExpr 0x9f311d8 <col:7> 'struct std::_Bit_const_iterator *' this))))
  (ReturnStmt 0x9f31288 <line:300:7, col:14>
    (CXXConstructExpr 0x9f31260 <col:14> 'const_iterator':'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()' elidable
      (ImplicitCastExpr 0x9f31250 <col:14> 'const struct std::_Bit_const_iterator' lvalue <NoOp>
        (DeclRefExpr 0x9f31238 <col:14> 'const_iterator':'struct std::_Bit_const_iterator' lvalue Var 0x9f30f90 '__tmp' 'const_iterator':'struct std::_Bit_const_iterator')))))


        const_iterator &operator--() (CompoundStmt 0x9f31350 </usr/include/c++/4.6/bits/stl_bvector.h:305:5, line:308:5>
  (CXXMemberCallExpr 0x9f312e8 <line:306:7, col:20> 'void'
    (MemberExpr 0x9f312c8 <col:7> '<bound member function type>' ->_M_bump_down 0x9f2a400
      (ImplicitCastExpr 0x9f31308 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
        (CXXThisExpr 0x9f312b8 <col:7> 'struct std::_Bit_const_iterator *' this))))
  (ReturnStmt 0x9f31340 <line:307:7, col:15>
    (UnaryOperator 0x9f31328 <col:14, col:15> 'struct std::_Bit_const_iterator' lvalue prefix '*'
      (CXXThisExpr 0x9f31318 <col:15> 'struct std::_Bit_const_iterator *' this))))


        const_iterator operator--(int) (CompoundStmt 0x9f314d8 </usr/include/c++/4.6/bits/stl_bvector.h:312:5, line:316:5>
  (DeclStmt 0x9f31408 <line:313:7, col:35>
    0x9f31370 "const_iterator __tmp =
      (CXXConstructExpr 0x9f313e0 <col:30, col:31> 'const_iterator':'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()'
        (ImplicitCastExpr 0x9f313d0 <col:30, col:31> 'const struct std::_Bit_const_iterator' lvalue <NoOp>
          (UnaryOperator 0x9f313b8 <col:30, col:31> 'struct std::_Bit_const_iterator' lvalue prefix '*'
            (CXXThisExpr 0x9f313a8 <col:31> 'struct std::_Bit_const_iterator *' this))))")
  (CXXMemberCallExpr 0x9f31448 <line:314:7, col:20> 'void'
    (MemberExpr 0x9f31428 <col:7> '<bound member function type>' ->_M_bump_down 0x9f2a400
      (ImplicitCastExpr 0x9f31468 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
        (CXXThisExpr 0x9f31418 <col:7> 'struct std::_Bit_const_iterator *' this))))
  (ReturnStmt 0x9f314c8 <line:315:7, col:14>
    (CXXConstructExpr 0x9f314a0 <col:14> 'const_iterator':'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()' elidable
      (ImplicitCastExpr 0x9f31490 <col:14> 'const struct std::_Bit_const_iterator' lvalue <NoOp>
        (DeclRefExpr 0x9f31478 <col:14> 'const_iterator':'struct std::_Bit_const_iterator' lvalue Var 0x9f31370 '__tmp' 'const_iterator':'struct std::_Bit_const_iterator')))))


        const_iterator &operator+=(difference_type __i) (CompoundStmt 0x9f315b8 </usr/include/c++/4.6/bits/stl_bvector.h:320:5, line:323:5>
  (CXXMemberCallExpr 0x9f31540 <line:321:7, col:18> 'void'
    (MemberExpr 0x9f31508 <col:7> '<bound member function type>' ->_M_incr 0x9f2a4f0
      (ImplicitCastExpr 0x9f31560 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
        (CXXThisExpr 0x9f314f8 <col:7> 'struct std::_Bit_const_iterator *' this)))
    (ImplicitCastExpr 0x9f31570 <col:15> 'difference_type':'int' <LValueToRValue>
      (DeclRefExpr 0x9f31528 <col:15> 'difference_type':'int' lvalue ParmVar 0x9f305d0 '__i' 'difference_type':'int')))
  (ReturnStmt 0x9f315a8 <line:322:7, col:15>
    (UnaryOperator 0x9f31590 <col:14, col:15> 'struct std::_Bit_const_iterator' lvalue prefix '*'
      (CXXThisExpr 0x9f31580 <col:15> 'struct std::_Bit_const_iterator *' this))))


        const_iterator &operator-=(difference_type __i) (CompoundStmt 0x9f316f8 </usr/include/c++/4.6/bits/stl_bvector.h:327:5, line:330:5>
  (CXXOperatorCallExpr 0x9f31698 <line:328:7, col:17> 'const_iterator':'struct std::_Bit_const_iterator' lvalue
    (ImplicitCastExpr 0x9f31688 <col:13, <invalid sloc>> 'const_iterator &(*)(difference_type)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9f31638 <col:13, <invalid sloc>> 'const_iterator &(difference_type)' lvalue CXXMethod 0x9f30670 'operator+=' 'const_iterator &(difference_type)'))
    (UnaryOperator 0x9f315e0 <col:7, col:8> 'struct std::_Bit_const_iterator' lvalue prefix '*'
      (CXXThisExpr 0x9f315d0 <col:8> 'struct std::_Bit_const_iterator *' this))
    (UnaryOperator 0x9f31620 <col:16, col:17> 'difference_type':'int' prefix '-'
      (ImplicitCastExpr 0x9f31610 <col:17> 'difference_type':'int' <LValueToRValue>
        (DeclRefExpr 0x9f315f4 <col:17> 'difference_type':'int' lvalue ParmVar 0x9f306e0 '__i' 'difference_type':'int'))))
  (ReturnStmt 0x9f316e8 <line:329:7, col:15>
    (UnaryOperator 0x9f316d0 <col:14, col:15> 'struct std::_Bit_const_iterator' lvalue prefix '*'
      (CXXThisExpr 0x9f316c0 <col:15> 'struct std::_Bit_const_iterator *' this))))


        const_iterator operator+(difference_type __i) const (CompoundStmt 0x9f31890 </usr/include/c++/4.6/bits/stl_bvector.h:334:5, line:337:5>
  (DeclStmt 0x9f317a8 <line:335:7, col:35>
    0x9f31720 "const_iterator __tmp =
      (CXXConstructExpr 0x9f31780 <col:30, col:31> 'const_iterator':'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()'
        (UnaryOperator 0x9f31768 <col:30, col:31> 'const struct std::_Bit_const_iterator' lvalue prefix '*'
          (CXXThisExpr 0x9f31758 <col:31> 'const struct std::_Bit_const_iterator *' this)))")
  (ReturnStmt 0x9f31880 <line:336:7, col:23>
    (CXXConstructExpr 0x9f31858 <col:14, col:23> 'const_iterator':'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()'
      (ImplicitCastExpr 0x9f31848 <col:14, col:23> 'const struct std::_Bit_const_iterator' lvalue <NoOp>
        (CXXOperatorCallExpr 0x9f31820 <col:14, col:23> 'const_iterator':'struct std::_Bit_const_iterator' lvalue
          (ImplicitCastExpr 0x9f31810 <col:20, <invalid sloc>> 'const_iterator &(*)(difference_type)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9f317f8 <col:20, <invalid sloc>> 'const_iterator &(difference_type)' lvalue CXXMethod 0x9f30670 'operator+=' 'const_iterator &(difference_type)'))
          (DeclRefExpr 0x9f317b8 <col:14> 'const_iterator':'struct std::_Bit_const_iterator' lvalue Var 0x9f31720 '__tmp' 'const_iterator':'struct std::_Bit_const_iterator')
          (ImplicitCastExpr 0x9f317e8 <col:23> 'difference_type':'int' <LValueToRValue>
            (DeclRefExpr 0x9f317d0 <col:23> 'difference_type':'int' lvalue ParmVar 0x9f307b0 '__i' 'difference_type':'int')))))))


        const_iterator operator-(difference_type __i) const (CompoundStmt 0x9f31a20 </usr/include/c++/4.6/bits/stl_bvector.h:341:5, line:344:5>
  (DeclStmt 0x9f31938 <line:342:7, col:35>
    0x9f318b0 "const_iterator __tmp =
      (CXXConstructExpr 0x9f31910 <col:30, col:31> 'const_iterator':'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()'
        (UnaryOperator 0x9f318f8 <col:30, col:31> 'const struct std::_Bit_const_iterator' lvalue prefix '*'
          (CXXThisExpr 0x9f318e8 <col:31> 'const struct std::_Bit_const_iterator *' this)))")
  (ReturnStmt 0x9f31a10 <line:343:7, col:23>
    (CXXConstructExpr 0x9f319e8 <col:14, col:23> 'const_iterator':'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()'
      (ImplicitCastExpr 0x9f319d8 <col:14, col:23> 'const struct std::_Bit_const_iterator' lvalue <NoOp>
        (CXXOperatorCallExpr 0x9f319b0 <col:14, col:23> 'const_iterator':'struct std::_Bit_const_iterator' lvalue
          (ImplicitCastExpr 0x9f319a0 <col:20, <invalid sloc>> 'const_iterator &(*)(difference_type)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9f31988 <col:20, <invalid sloc>> 'const_iterator &(difference_type)' lvalue CXXMethod 0x9f30740 'operator-=' 'const_iterator &(difference_type)'))
          (DeclRefExpr 0x9f31948 <col:14> 'const_iterator':'struct std::_Bit_const_iterator' lvalue Var 0x9f318b0 '__tmp' 'const_iterator':'struct std::_Bit_const_iterator')
          (ImplicitCastExpr 0x9f31978 <col:23> 'difference_type':'int' <LValueToRValue>
            (DeclRefExpr 0x9f31960 <col:23> 'difference_type':'int' lvalue ParmVar 0x9f308c0 '__i' 'difference_type':'int')))))))


        const_reference operator[](difference_type __i) const (CompoundStmt 0x9f31ba8 </usr/include/c++/4.6/bits/stl_bvector.h:348:5, col:30>
  (ReturnStmt 0x9f31b98 <col:7, col:27>
    (CXXOperatorCallExpr 0x9f31b78 <col:14, col:27> 'const_reference':'_Bool'
      (ImplicitCastExpr 0x9f31b68 <<invalid sloc>> 'const_reference (*)(void) const' <FunctionToPointerDecay>
        (DeclRefExpr 0x9f31b38 <<invalid sloc>> 'const_reference (void) const' lvalue CXXMethod 0x9f30210 'operator*' 'const_reference (void) const'))
      (ImplicitCastExpr 0x9f31b28 <col:15, col:27> 'const struct std::_Bit_const_iterator' lvalue <NoOp>
        (ParenExpr 0x9f31b10 <col:15, col:27> 'const_iterator':'struct std::_Bit_const_iterator'
          (CXXOperatorCallExpr 0x9f31ae8 <col:16, col:24> 'const_iterator':'struct std::_Bit_const_iterator'
            (ImplicitCastExpr 0x9f31ad8 <col:22, <invalid sloc>> 'const_iterator (*)(difference_type) const' <FunctionToPointerDecay>
              (DeclRefExpr 0x9f31a88 <col:22, <invalid sloc>> 'const_iterator (difference_type) const' lvalue CXXMethod 0x9f30850 'operator+' 'const_iterator (difference_type) const'))
            (UnaryOperator 0x9f31a48 <col:16, col:17> 'const struct std::_Bit_const_iterator' lvalue prefix '*'
              (CXXThisExpr 0x9f31a38 <col:17> 'const struct std::_Bit_const_iterator *' this))
            (ImplicitCastExpr 0x9f31a78 <col:24> 'difference_type':'int' <LValueToRValue>
              (DeclRefExpr 0x9f31a5c <col:24> 'difference_type':'int' lvalue ParmVar 0x9f30980 '__i' 'difference_type':'int'))))))))


        inline _Bit_const_iterator(const std::_Bit_const_iterator &) throw() : std::_Bit_iterator_base((ImplicitCastExpr 0x9f31128 </usr/include/c++/4.6/bits/stl_bvector.h:269:10> 'const struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
  (DeclRefExpr 0x9f3110c <col:10> 'const struct std::_Bit_const_iterator' lvalue ParmVar 0x9f310c0 '' 'const struct std::_Bit_const_iterator &'))
) (CompoundStmt 0x9f31190 </usr/include/c++/4.6/bits/stl_bvector.h:269:10>)


    };
    inline std::_Bit_const_iterator operator+(ptrdiff_t __n, const std::_Bit_const_iterator &__x) (CompoundStmt 0x9f31e10 </usr/include/c++/4.6/bits/stl_bvector.h:353:3, col:23>
  (ReturnStmt 0x9f31e00 <col:5, col:18>
    (CXXConstructExpr 0x9f31dd8 <col:12, col:18> 'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()' elidable
      (MaterializeTemporaryExpr 0x9f31dc8 <col:12, col:18> 'const struct std::_Bit_const_iterator' lvalue
        (ImplicitCastExpr 0x9f31db8 <col:12, col:18> 'const struct std::_Bit_const_iterator' <NoOp>
          (CXXOperatorCallExpr 0x9f31d90 <col:12, col:18> 'const_iterator':'struct std::_Bit_const_iterator'
            (ImplicitCastExpr 0x9f31d80 <col:16, <invalid sloc>> 'const_iterator (*)(difference_type) const' <FunctionToPointerDecay>
              (DeclRefExpr 0x9f31d68 <col:16, <invalid sloc>> 'const_iterator (difference_type) const' lvalue CXXMethod 0x9f30850 'operator+' 'const_iterator (difference_type) const'))
            (DeclRefExpr 0x9f31d28 <col:12> 'const struct std::_Bit_const_iterator' lvalue ParmVar 0x9f31c20 '__x' 'const struct std::_Bit_const_iterator &')
            (ImplicitCastExpr 0x9f31d58 <col:18> 'ptrdiff_t':'int' <LValueToRValue>
              (DeclRefExpr 0x9f31d40 <col:18> 'ptrdiff_t':'int' lvalue ParmVar 0x9f31bd0 '__n' 'ptrdiff_t':'int'))))))))


    inline void __fill_bvector(std::_Bit_iterator __first, std::_Bit_iterator __last, bool __x) (CompoundStmt 0x9f32208 </usr/include/c++/4.6/bits/stl_bvector.h:357:3, line:360:3>
  (ForStmt 0x9f321e0 <line:358:5, line:359:18>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9f32038 <line:358:12, col:23> '_Bool'
      (ImplicitCastExpr 0x9f32028 <col:20, <invalid sloc>> '_Bool (*)(const struct std::_Bit_iterator_base &) const' <FunctionToPointerDecay>
        (DeclRefExpr 0x9f32010 <col:20, <invalid sloc>> '_Bool (const struct std::_Bit_iterator_base &) const' lvalue CXXMethod 0x9f2a7b0 'operator!=' '_Bool (const struct std::_Bit_iterator_base &) const'))
      (ImplicitCastExpr 0x9f32000 <col:12> 'const struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
        (DeclRefExpr 0x9f31fac <col:12> 'struct std::_Bit_iterator' lvalue ParmVar 0x9f31e30 '__first' 'struct std::_Bit_iterator'))
      (ImplicitCastExpr 0x9f31ff0 <col:23> 'const struct std::_Bit_iterator_base' lvalue <NoOp>
        (ImplicitCastExpr 0x9f31fe0 <col:23> 'struct std::_Bit_iterator_base' lvalue <DerivedToBase (_Bit_iterator_base)>
          (DeclRefExpr 0x9f31fc4 <col:23> 'struct std::_Bit_iterator' lvalue ParmVar 0x9f31e70 '__last' 'struct std::_Bit_iterator'))))
    (CXXOperatorCallExpr 0x9f320d8 <col:31, col:33> 'iterator':'struct std::_Bit_iterator' lvalue
      (ImplicitCastExpr 0x9f320c8 <<invalid sloc>> 'iterator &(*)(void)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9f32078 <<invalid sloc>> 'iterator &(void)' lvalue CXXMethod 0x9f2dea0 'operator++' 'iterator &(void)'))
      (DeclRefExpr 0x9f3205c <col:33> 'struct std::_Bit_iterator' lvalue ParmVar 0x9f31e30 '__first' 'struct std::_Bit_iterator'))
    (CXXOperatorCallExpr 0x9f321b8 <line:359:7, col:18> 'struct std::_Bit_reference' lvalue
      (ImplicitCastExpr 0x9f321a8 <col:16, <invalid sloc>> 'struct std::_Bit_reference &(*)(_Bool)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9f32190 <col:16, <invalid sloc>> 'struct std::_Bit_reference &(_Bool)' lvalue CXXMethod 0x9f28c10 'operator=' 'struct std::_Bit_reference &(_Bool)'))
      (CXXOperatorCallExpr 0x9f32148 <col:7, col:8> 'reference':'struct std::_Bit_reference'
        (ImplicitCastExpr 0x9f32138 <<invalid sloc>> 'reference (*)(void) const' <FunctionToPointerDecay>
          (DeclRefExpr 0x9f32120 <<invalid sloc>> 'reference (void) const' lvalue CXXMethod 0x9f2dda0 'operator*' 'reference (void) const'))
        (ImplicitCastExpr 0x9f32110 <col:8> 'const struct std::_Bit_iterator' lvalue <NoOp>
          (DeclRefExpr 0x9f320f8 <col:8> 'struct std::_Bit_iterator' lvalue ParmVar 0x9f31e30 '__first' 'struct std::_Bit_iterator')))
      (ImplicitCastExpr 0x9f32180 <col:18> '_Bool' <LValueToRValue>
        (DeclRefExpr 0x9f32168 <col:18> '_Bool' lvalue ParmVar 0x9f31eb0 '__x' '_Bool')))))


    inline void fill(std::_Bit_iterator __first, std::_Bit_iterator __last, const bool &__x) (CompoundStmt 0x9f32ff0 </usr/include/c++/4.6/bits/stl_bvector.h:364:3, line:373:3>
  (IfStmt 0x9f32fd0 <line:365:5, line:372:42>
    <<<NULL>>>
    (BinaryOperator 0x9f32490 <line:365:9, col:32> '_Bool' '!='
      (ImplicitCastExpr 0x9f32470 <col:9, col:17> '_Bit_type *' <LValueToRValue>
        (MemberExpr 0x9f32408 <col:9, col:17> '_Bit_type *' lvalue ._M_p 0x9f2a170
          (ImplicitCastExpr 0x9f323f8 <col:9> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
            (DeclRefExpr 0x9f323dc <col:9> 'struct std::_Bit_iterator' lvalue ParmVar 0x9f32230 '__first' 'struct std::_Bit_iterator'))))
      (ImplicitCastExpr 0x9f32480 <col:25, col:32> '_Bit_type *' <LValueToRValue>
        (MemberExpr 0x9f32450 <col:25, col:32> '_Bit_type *' lvalue ._M_p 0x9f2a170
          (ImplicitCastExpr 0x9f32440 <col:25> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
            (DeclRefExpr 0x9f32428 <col:25> 'struct std::_Bit_iterator' lvalue ParmVar 0x9f32270 '__last' 'struct std::_Bit_iterator')))))
    (CompoundStmt 0x9f32e60 <line:366:7, line:370:7>
      (CallExpr 0x9f329c8 <line:367:2, col:55> 'void'
        (ImplicitCastExpr 0x9f329b8 <col:2, col:7> 'void (*)(unsigned long *, unsigned long *, const int &)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9f32958 <col:2, col:7> 'void (unsigned long *, unsigned long *, const int &)' lvalue Function 0x9f32890 'fill' 'void (unsigned long *, unsigned long *, const int &)' (FunctionTemplate 0x9b88110 'fill')))
        (BinaryOperator 0x9f32578 <col:12, col:27> '_Bit_type *' '+'
          (ImplicitCastExpr 0x9f32568 <col:12, col:20> '_Bit_type *' <LValueToRValue>
            (MemberExpr 0x9f32530 <col:12, col:20> '_Bit_type *' lvalue ._M_p 0x9f2a170
              (ImplicitCastExpr 0x9f32520 <col:12> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
                (DeclRefExpr 0x9f32508 <col:12> 'struct std::_Bit_iterator' lvalue ParmVar 0x9f32230 '__first' 'struct std::_Bit_iterator'))))
          (IntegerLiteral 0x9f32550 <col:27> 'int' 1))
        (ImplicitCastExpr 0x9f329f0 <col:30, col:37> '_Bit_type *' <LValueToRValue>
          (MemberExpr 0x9f325b8 <col:30, col:37> '_Bit_type *' lvalue ._M_p 0x9f2a170
            (ImplicitCastExpr 0x9f325a8 <col:30> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
              (DeclRefExpr 0x9f32590 <col:30> 'struct std::_Bit_iterator' lvalue ParmVar 0x9f32270 '__last' 'struct std::_Bit_iterator'))))
        (MaterializeTemporaryExpr 0x9f32a00 <col:43, col:54> 'const int':'const int' lvalue
          (ConditionalOperator 0x9f32648 <col:43, col:54> 'int'
            (ImplicitCastExpr 0x9f32638 <col:43> '_Bool' <LValueToRValue>
              (DeclRefExpr 0x9f325d8 <col:43> 'const _Bool' lvalue ParmVar 0x9f322e0 '__x' 'const _Bool &'))
            (UnaryOperator 0x9f32608 <col:49, col:50> 'int' prefix '~'
              (IntegerLiteral 0x9f325f0 <col:50> 'int' 0))
            (IntegerLiteral 0x9f32620 <col:54> 'int' 0))))
      (CallExpr 0x9f32ba8 <line:368:2, col:65> 'void'
        (ImplicitCastExpr 0x9f32b98 <col:2> 'void (*)(struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9f32b60 <col:2> 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool)' lvalue Function 0x9f31f40 '__fill_bvector' 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool)'))
        (CXXConstructExpr 0x9f32be0 <col:17> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
          (ImplicitCastExpr 0x9f32bd0 <col:17> 'const struct std::_Bit_iterator' lvalue <NoOp>
            (DeclRefExpr 0x9f32a44 <col:17> 'struct std::_Bit_iterator' lvalue ParmVar 0x9f32230 '__first' 'struct std::_Bit_iterator')))
        (CXXConstructExpr 0x9f32c28 <col:26, col:59> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()' elidable
          (MaterializeTemporaryExpr 0x9f32c18 <col:26, col:59> 'const struct std::_Bit_iterator' lvalue
            (ImplicitCastExpr 0x9f32c08 <col:26, col:59> 'const struct std::_Bit_iterator' <NoOp>
              (CXXTemporaryObjectExpr 0x9f32b18 <col:26, col:59> 'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
                (BinaryOperator 0x9f32ad8 <col:40, col:55> '_Bit_type *' '+'
                  (ImplicitCastExpr 0x9f32ac8 <col:40, col:48> '_Bit_type *' <LValueToRValue>
                    (MemberExpr 0x9f32a90 <col:40, col:48> '_Bit_type *' lvalue ._M_p 0x9f2a170
                      (ImplicitCastExpr 0x9f32a80 <col:40> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
                        (DeclRefExpr 0x9f32a68 <col:40> 'struct std::_Bit_iterator' lvalue ParmVar 0x9f32230 '__first' 'struct std::_Bit_iterator'))))
                  (IntegerLiteral 0x9f32ab0 <col:55> 'int' 1))
                (ImplicitCastExpr 0x9f32b08 <col:58> 'unsigned int' <IntegralCast>
                  (IntegerLiteral 0x9f32af0 <col:58> 'int' 0))))))
        (ImplicitCastExpr 0x9f32c50 <col:62> '_Bool' <LValueToRValue>
          (DeclRefExpr 0x9f32b48 <col:62> 'const _Bool' lvalue ParmVar 0x9f322e0 '__x' 'const _Bool &')))
      (CallExpr 0x9f32da8 <line:369:2, col:59> 'void'
        (ImplicitCastExpr 0x9f32d98 <col:2> 'void (*)(struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9f32d80 <col:2> 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool)' lvalue Function 0x9f31f40 '__fill_bvector' 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool)'))
        (CXXConstructExpr 0x9f32df0 <col:17, col:45> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()' elidable
          (MaterializeTemporaryExpr 0x9f32de0 <col:17, col:45> 'const struct std::_Bit_iterator' lvalue
            (ImplicitCastExpr 0x9f32dd0 <col:17, col:45> 'const struct std::_Bit_iterator' <NoOp>
              (CXXTemporaryObjectExpr 0x9f32d20 <col:17, col:45> 'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
                (ImplicitCastExpr 0x9f32d00 <col:31, col:38> '_Bit_type *' <LValueToRValue>
                  (MemberExpr 0x9f32cc8 <col:31, col:38> '_Bit_type *' lvalue ._M_p 0x9f2a170
                    (ImplicitCastExpr 0x9f32cb8 <col:31> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
                      (DeclRefExpr 0x9f32ca0 <col:31> 'struct std::_Bit_iterator' lvalue ParmVar 0x9f32270 '__last' 'struct std::_Bit_iterator'))))
                (ImplicitCastExpr 0x9f32d10 <col:44> 'unsigned int' <IntegralCast>
                  (IntegerLiteral 0x9f32ce8 <col:44> 'int' 0))))))
        (CXXConstructExpr 0x9f32e28 <col:48> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
          (ImplicitCastExpr 0x9f32e18 <col:48> 'const struct std::_Bit_iterator' lvalue <NoOp>
            (DeclRefExpr 0x9f32d50 <col:48> 'struct std::_Bit_iterator' lvalue ParmVar 0x9f32270 '__last' 'struct std::_Bit_iterator')))
        (ImplicitCastExpr 0x9f32e50 <col:56> '_Bool' <LValueToRValue>
          (DeclRefExpr 0x9f32d68 <col:56> 'const _Bool' lvalue ParmVar 0x9f322e0 '__x' 'const _Bool &'))))
    (CallExpr 0x9f32f28 <line:372:7, col:42> 'void'
      (ImplicitCastExpr 0x9f32f18 <col:7> 'void (*)(struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9f32efc <col:7> 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool)' lvalue Function 0x9f31f40 '__fill_bvector' 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool)'))
      (CXXConstructExpr 0x9f32f60 <col:22> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
        (ImplicitCastExpr 0x9f32f50 <col:22> 'const struct std::_Bit_iterator' lvalue <NoOp>
          (DeclRefExpr 0x9f32eb4 <col:22> 'struct std::_Bit_iterator' lvalue ParmVar 0x9f32230 '__first' 'struct std::_Bit_iterator')))
      (CXXConstructExpr 0x9f32f98 <col:31> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
        (ImplicitCastExpr 0x9f32f88 <col:31> 'const struct std::_Bit_iterator' lvalue <NoOp>
          (DeclRefExpr 0x9f32ecc <col:31> 'struct std::_Bit_iterator' lvalue ParmVar 0x9f32270 '__last' 'struct std::_Bit_iterator')))
      (ImplicitCastExpr 0x9f32fc0 <col:39> '_Bool' <LValueToRValue>
        (DeclRefExpr 0x9f32ee4 <col:39> 'const _Bool' lvalue ParmVar 0x9f322e0 '__x' 'const _Bool &')))))


    template <typename _Alloc> struct _Bvector_base {
        struct _Bvector_base;
        typedef typename _Alloc::_Alloc::rebind<_Bit_type>::other _Bit_alloc_type;
        struct _Bvector_impl : public _Bit_alloc_type {
            struct _Bvector_impl;
            std::_Bit_iterator _M_start;
            std::_Bit_iterator _M_finish;
            _Bit_type *_M_end_of_storage;
            _Bvector_impl() : _Bit_alloc_type(), _M_start(), _M_finish(), _M_end_of_storage((IntegerLiteral 0x9f34058 </usr/include/c++/4.6/bits/stl_bvector.h:389:66> 'int' 0)
) (CompoundStmt 0x9f340c8 </usr/include/c++/4.6/bits/stl_bvector.h:390:2, col:4>)


            _Bvector_impl(const _Bit_alloc_type &__a) : _Bit_alloc_type((DeclRefExpr 0x9f340d8 </usr/include/c++/4.6/bits/stl_bvector.h:393:20> 'const _Bit_alloc_type':'const typename _Alloc::_Alloc::rebind<_Bit_type>::other' lvalue ParmVar 0x9f33740 '__a' 'const _Bit_alloc_type &')
), _M_start(), _M_finish(), _M_end_of_storage((IntegerLiteral 0x9f341d8 </usr/include/c++/4.6/bits/stl_bvector.h:393:69> 'int' 0)
) (CompoundStmt 0x9f34248 </usr/include/c++/4.6/bits/stl_bvector.h:394:2, col:4>)


        };
    public:
    public:
        typedef _Alloc allocator_type;
        _Bit_alloc_type &_M_get_Bit_allocator() (CompoundStmt 0x9f343a8 </usr/include/c++/4.6/bits/stl_bvector.h:402:7, col:64>
  (ReturnStmt 0x9f34398 <col:9, col:61>
    (UnaryOperator 0x9f34380 <col:16, col:61> '<dependent type>' prefix '*'
      (CXXStaticCastExpr 0x9f34368 <col:17, col:61> '_Bit_alloc_type *' static_cast<_Bit_alloc_type *> <Dependent>
        (CXXOperatorCallExpr 0x9f34300 <col:47, col:54> '<dependent type>'
          (UnresolvedLookupExpr 0x9f342c0 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9d5b750 0x9d68890 0x9d69b00)
          (CXXDependentScopeMemberExpr 0x9f34288 <col:48, col:54> '<dependent type>' lvalue
            (CXXThisExpr 0x9f34278 <col:48> '_Bvector_base<_Alloc> *' this)))))))


        const _Bit_alloc_type &_M_get_Bit_allocator() const (CompoundStmt 0x9f34508 </usr/include/c++/4.6/bits/stl_bvector.h:406:7, col:70>
  (ReturnStmt 0x9f344f8 <col:9, col:67>
    (UnaryOperator 0x9f344e0 <col:16, col:67> '<dependent type>' prefix '*'
      (CXXStaticCastExpr 0x9f344c8 <col:17, col:67> 'const _Bit_alloc_type *' static_cast<const _Bit_alloc_type *> <Dependent>
        (CXXOperatorCallExpr 0x9f34460 <col:53, col:60> '<dependent type>'
          (UnresolvedLookupExpr 0x9f34420 <col:53, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9d5b750 0x9d68890 0x9d69b00)
          (CXXDependentScopeMemberExpr 0x9f343e8 <col:54, col:60> '<dependent type>' lvalue
            (CXXThisExpr 0x9f343d8 <col:54> 'const _Bvector_base<_Alloc> *' this)))))))


        allocator_type get_allocator() const (CompoundStmt 0x9f345c8 </usr/include/c++/4.6/bits/stl_bvector.h:410:7, col:56>
  (ReturnStmt 0x9f345b8 <col:9, col:53>
    (CXXUnresolvedConstructExpr 0x9f34598 <col:16, col:53> 'allocator_type':'_Alloc'
      (CallExpr 0x9f34578 <col:31, col:52> '<dependent type>'
        (UnresolvedMemberExpr 0x9f34538 <col:31> '<bound member function type>' lvalue)))))


        _Bvector_base<_Alloc>() : _M_impl() (CompoundStmt 0x9f34620 </usr/include/c++/4.6/bits/stl_bvector.h:413:19, col:21>)


        _Bvector_base<_Alloc>(const allocator_type &__a) : _M_impl((DeclRefExpr 0x9f34630 </usr/include/c++/4.6/bits/stl_bvector.h:416:17> 'const allocator_type':'const _Alloc' lvalue ParmVar 0x9f33be0 '__a' 'const allocator_type &')
) (CompoundStmt 0x9f34690 </usr/include/c++/4.6/bits/stl_bvector.h:416:22, col:24>)


        void ~_Bvector_base<_Alloc>() (CompoundStmt 0x9f34708 </usr/include/c++/4.6/bits/stl_bvector.h:432:7, col:32>
  (CallExpr 0x9f346e8 <col:9, col:29> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9f346b0 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0x9f346a0 <col:9> '_Bvector_base<_Alloc> *' this))))


    protected:
    protected:
        std::_Bvector_base::_Bvector_impl _M_impl;
        _Bit_type *_M_allocate(size_t __n) (CompoundStmt 0x9f34928 </usr/include/c++/4.6/bits/stl_bvector.h:439:7, line:440:26>
  (ReturnStmt 0x9f34918 <line:439:9, line:440:23>
    (CallExpr 0x9f348f8 <line:439:16, line:440:23> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f34750 <line:439:16, col:24> '<dependent type>' lvalue
        (MemberExpr 0x9f34730 <col:16> 'struct std::_Bvector_base::_Bvector_impl' lvalue ->_M_impl 0x9f33dc0
          (CXXThisExpr 0x9f34720 <col:16> '_Bvector_base<_Alloc> *' this)))
      (BinaryOperator 0x9f348e0 <col:33, line:440:22> 'unsigned int' '/'
        (ParenExpr 0x9f34868 <line:439:33, col:60> 'unsigned int'
          (BinaryOperator 0x9f34850 <col:34, col:59> 'unsigned int' '-'
            (BinaryOperator 0x9f34810 <col:34, col:55> 'unsigned int' '+'
              (ImplicitCastExpr 0x9f347f0 <col:34> 'size_t':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0x9f34784 <col:34> 'size_t':'unsigned int' lvalue ParmVar 0x9f33e00 '__n' 'size_t':'unsigned int'))
              (ImplicitCastExpr 0x9f34800 <col:40, col:55> 'unsigned int' <IntegralCast>
                (CXXFunctionalCastExpr 0x9f347d8 <col:40, col:55> 'int' functional cast to int <NoOp>
                  (ImplicitCastExpr 0x9f347c8 <col:44> 'int' <IntegralCast>
                    (DeclRefExpr 0x9f347ac <col:44> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x9f286d0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))
            (ImplicitCastExpr 0x9f34840 <col:59> 'unsigned int' <IntegralCast>
              (IntegerLiteral 0x9f34828 <col:59> 'int' 1))))
        (ImplicitCastExpr 0x9f348d0 <line:440:7, col:22> 'unsigned int' <IntegralCast>
          (CXXFunctionalCastExpr 0x9f348b8 <col:7, col:22> 'int' functional cast to int <NoOp>
            (ImplicitCastExpr 0x9f348a8 <col:11> 'int' <IntegralCast>
              (DeclRefExpr 0x9f3488c <col:11> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x9f286d0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>'))))))))


        void _M_deallocate() (CompoundStmt 0x9f34ca0 </usr/include/c++/4.6/bits/stl_bvector.h:444:7, line:448:7>
  (IfStmt 0x9f34c80 <line:445:2, line:447:58>
    <<<NULL>>>
    (CXXDependentScopeMemberExpr 0x9f349a8 <line:445:6, col:23> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9f34970 <col:6, col:14> '<dependent type>' lvalue
        (MemberExpr 0x9f34950 <col:6> 'struct std::_Bvector_base::_Bvector_impl' lvalue ->_M_impl 0x9f33dc0
          (CXXThisExpr 0x9f34940 <col:6> '_Bvector_base<_Alloc> *' this))))
    (CallExpr 0x9f34c58 <line:446:4, line:447:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f34a10 <line:446:4, col:12> '<dependent type>' lvalue
        (MemberExpr 0x9f349f0 <col:4> 'struct std::_Bvector_base::_Bvector_impl' lvalue ->_M_impl 0x9f33dc0
          (CXXThisExpr 0x9f349e0 <col:4> '_Bvector_base<_Alloc> *' this)))
      (CXXDependentScopeMemberExpr 0x9f34ab0 <col:23, col:40> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0x9f34a78 <col:23, col:31> '<dependent type>' lvalue
          (MemberExpr 0x9f34a58 <col:23> 'struct std::_Bvector_base::_Bvector_impl' lvalue ->_M_impl 0x9f33dc0
            (CXXThisExpr 0x9f34a48 <col:23> '_Bvector_base<_Alloc> *' this))))
      (CXXOperatorCallExpr 0x9f34c30 <line:447:9, col:54> '<dependent type>'
        (UnresolvedLookupExpr 0x9f34bf0 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f2d6a0 0x9b5cd20 0x9b5f590)
        (CXXDependentScopeMemberExpr 0x9f34b18 <col:9, col:17> '<dependent type>' lvalue
          (MemberExpr 0x9f34af8 <col:9> 'struct std::_Bvector_base::_Bvector_impl' lvalue ->_M_impl 0x9f33dc0
            (CXXThisExpr 0x9f34ae8 <col:9> '_Bvector_base<_Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0x9f34bb8 <col:37, col:54> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9f34b80 <col:37, col:45> '<dependent type>' lvalue
            (MemberExpr 0x9f34b60 <col:37> 'struct std::_Bvector_base::_Bvector_impl' lvalue ->_M_impl 0x9f33dc0
              (CXXThisExpr 0x9f34b50 <col:37> '_Bvector_base<_Alloc> *' this))))))
    <<<NULL>>>))


    };
}
namespace std {
    class vector : protected _Bvector_base<_Alloc> {
        class vector;
        typedef _Bvector_base<_Alloc> _Base;
    public:
    public:
        typedef bool value_type;
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef std::_Bit_reference reference;
        typedef bool const_reference;
        typedef std::_Bit_reference *pointer;
        typedef const bool *const_pointer;
        typedef std::_Bit_iterator iterator;
        typedef std::_Bit_const_iterator const_iterator;
        typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
        typedef std::reverse_iterator<iterator> reverse_iterator;
        typedef _Alloc allocator_type;
        allocator_type get_allocator() const (CompoundStmt 0x9f3ab50 </usr/include/c++/4.6/bits/stl_bvector.h:502:5, col:38>
  (ReturnStmt 0x9f3ab40 <col:7, col:35>
    (CallExpr 0x9f3ab20 <col:14, col:35> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f3aae8 <col:14, col:21> '<dependent type>' lvalue))))


    protected:
    protected:
        using _Base::1;
        using _Base::1;
        using _Base::1;
    public:
    public:
        vector<_Bool, type-parameter-0-0>() : _Base() (CompoundStmt 0x9f3abb0 </usr/include/c++/4.6/bits/stl_bvector.h:511:15, col:17>)


        vector<_Bool, type-parameter-0-0>(const allocator_type &__a) : _Base((DeclRefExpr 0x9f3abc0 </usr/include/c++/4.6/bits/stl_bvector.h:515:13> 'const allocator_type':'const _Alloc' lvalue ParmVar 0x9f35c10 '__a' 'const allocator_type &')
) (CompoundStmt 0x9f3ac20 </usr/include/c++/4.6/bits/stl_bvector.h:515:18, col:20>)


        vector<_Bool, type-parameter-0-0>(size_type __n, const bool &__value = (MaterializeTemporaryExpr 0x9f3aa20 </usr/include/c++/4.6/bits/stl_bvector.h:518:49, col:54> 'const _Bool' lvalue
  (CXXScalarValueInitExpr 0x9f3aa10 <col:49, col:54> '_Bool'))
, const allocator_type &__a = (CXXUnresolvedConstructExpr 0x9f3aa38 </usr/include/c++/4.6/bits/stl_bvector.h:519:33, col:48> 'allocator_type':'_Alloc')
) : _Base((DeclRefExpr 0x9f3ac30 </usr/include/c++/4.6/bits/stl_bvector.h:520:13> 'const allocator_type':'const _Alloc' lvalue ParmVar 0x9f35dc0 '__a' 'const allocator_type &')
) (CompoundStmt 0x9f3af60 </usr/include/c++/4.6/bits/stl_bvector.h:521:5, line:525:5>
  (CallExpr 0x9f3acf0 <line:522:7, col:24> '<dependent type>'
    (MemberExpr 0x9f3acb8 <col:7> '<bound member function type>' ->_M_initialize 0x9f387a0
      (CXXThisExpr 0x9f3aca8 <col:7> 'vector<_Bool, type-parameter-0-0> *' this))
    (DeclRefExpr 0x9f3acd8 <col:21> 'size_type':'unsigned int' lvalue ParmVar 0x9f35d20 '__n' 'size_type':'unsigned int'))
  (CallExpr 0x9f3af38 <line:523:7, line:524:19> '<dependent type>'
    (UnresolvedLookupExpr 0x9f3ad38 <line:523:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b88110 0x9f32370)
    (CXXDependentScopeMemberExpr 0x9f3adf0 <col:17, col:40> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9f3adb8 <col:17, col:31> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0x9f3ad80 <col:17, col:23> '<dependent type>' lvalue
          (CXXThisExpr 0x9f3ad70 <col:17> 'vector<_Bool, type-parameter-0-0> *' this))))
    (CXXDependentScopeMemberExpr 0x9f3ae70 <col:46, col:60> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9f3ae38 <col:46, col:52> '<dependent type>' lvalue
        (CXXThisExpr 0x9f3ae28 <col:46> 'vector<_Bool, type-parameter-0-0> *' this)))
    (ConditionalOperator 0x9f3af18 <line:524:3, col:18> 'int'
      (ImplicitCastExpr 0x9f3af08 <col:3> '_Bool' <LValueToRValue>
        (DeclRefExpr 0x9f3aea4 <col:3> 'const _Bool' lvalue ParmVar 0x9f35d70 '__value' 'const _Bool &'))
      (UnaryOperator 0x9f3aed8 <col:13, col:14> 'int' prefix '~'
        (IntegerLiteral 0x9f3aec0 <col:14> 'int' 0))
      (IntegerLiteral 0x9f3aef0 <col:18> 'int' 0))))


        vector<_Bool, type-parameter-0-0>(const vector<bool, type-parameter-0-0> &__x) : _Base((CallExpr 0x9f3afc8 </usr/include/c++/4.6/bits/stl_bvector.h:528:13, col:38> '<dependent type>'
  (CXXDependentScopeMemberExpr 0x9f3af90 <col:13, col:17> '<dependent type>' lvalue
    (DeclRefExpr 0x9f3af78 <col:13> 'const vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0x9f35f30 '__x' 'const vector<_Bool, type-parameter-0-0> &')))
) (CompoundStmt 0x9f3b2a8 </usr/include/c++/4.6/bits/stl_bvector.h:529:5, line:532:5>
  (CallExpr 0x9f3b0d0 <line:530:7, col:31> '<dependent type>'
    (MemberExpr 0x9f3b040 <col:7> '<bound member function type>' ->_M_initialize 0x9f387a0
      (CXXThisExpr 0x9f3b030 <col:7> 'vector<_Bool, type-parameter-0-0> *' this))
    (CallExpr 0x9f3b0b0 <col:21, col:30> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f3b078 <col:21, col:25> '<dependent type>' lvalue
        (DeclRefExpr 0x9f3b060 <col:21> 'const vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0x9f35f30 '__x' 'const vector<_Bool, type-parameter-0-0> &'))))
  (CallExpr 0x9f3b280 <line:531:7, col:69> '<dependent type>'
    (MemberExpr 0x9f3b100 <col:7> '<bound member function type>' ->_M_copy_aligned 0x9f386d0
      (CXXThisExpr 0x9f3b0f0 <col:7> 'vector<_Bool, type-parameter-0-0> *' this))
    (CallExpr 0x9f3b170 <col:23, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f3b138 <col:23, col:27> '<dependent type>' lvalue
        (DeclRefExpr 0x9f3b120 <col:23> 'const vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0x9f35f30 '__x' 'const vector<_Bool, type-parameter-0-0> &')))
    (CallExpr 0x9f3b1e0 <col:36, col:44> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f3b1a8 <col:36, col:40> '<dependent type>' lvalue
        (DeclRefExpr 0x9f3b18c <col:36> 'const vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0x9f35f30 '__x' 'const vector<_Bool, type-parameter-0-0> &')))
    (CXXDependentScopeMemberExpr 0x9f3b248 <col:47, col:61> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9f3b210 <col:47, col:53> '<dependent type>' lvalue
        (CXXThisExpr 0x9f3b200 <col:47> 'vector<_Bool, type-parameter-0-0> *' this)))))


        template <typename _InputIterator> vector<_Bool, type-parameter-0-0>(_InputIterator __first, _InputIterator __last, const allocator_type &__a = (CXXUnresolvedConstructExpr 0x9f3aa58 </usr/include/c++/4.6/bits/stl_bvector.h:549:35, col:50> 'allocator_type':'_Alloc')
) : _Base((DeclRefExpr 0x9f3b2c0 </usr/include/c++/4.6/bits/stl_bvector.h:550:15> 'const allocator_type':'const _Alloc' lvalue ParmVar 0x9f36110 '__a' 'const allocator_type &')
) (CompoundStmt 0x9f3b538 </usr/include/c++/4.6/bits/stl_bvector.h:551:7, line:554:7>
  (DeclStmt 0x9f3b450 <line:552:2, col:70>
    0x9f3b420 "typedef typename std::__is_integer<_InputIterator>::__type _Integral")
  (CallExpr 0x9f3b510 <line:553:2, col:53> '<dependent type>'
    (UnresolvedMemberExpr 0x9f3b470 <col:2> '<bound member function type>' lvalue)
    (DeclRefExpr 0x9f3b4b0 <col:25> '_InputIterator' lvalue ParmVar 0x9f36080 '__first' '_InputIterator')
    (DeclRefExpr 0x9f3b4c8 <col:34> '_InputIterator' lvalue ParmVar 0x9f360c0 '__last' '_InputIterator')
    (CXXUnresolvedConstructExpr 0x9f3b4f8 <col:42, col:52> '_Integral':'typename std::__is_integer<_InputIterator>::__type')))

;
        void ~vector<_Bool, type-parameter-0-0>() (CompoundStmt 0x9f3b550 </usr/include/c++/4.6/bits/stl_bvector.h:556:15, col:17>)


        vector<bool, type-parameter-0-0> &operator=(const vector<bool, type-parameter-0-0> &__x) (CompoundStmt 0x9f3bbd8 </usr/include/c++/4.6/bits/stl_bvector.h:560:5, line:571:5>
  (IfStmt 0x9f3b6a8 <line:561:7, line:562:10>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9f3b648 <line:561:11, col:19> '<dependent type>'
      (UnresolvedLookupExpr 0x9f3b5e8 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90 0x9cb91e0 0x9cb9c50 0x9cba490 0x9cbaa00 0x9db0390 0x9f25fa0)
      (CXXOperatorCallExpr 0x9f3b5b8 <col:11, col:12> '<dependent type>'
        (UnresolvedLookupExpr 0x9f3b578 <col:11, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9d5b750 0x9d68890 0x9d69b00)
        (DeclRefExpr 0x9f3b560 <col:12> 'const vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0x9f36330 '__x' 'const vector<_Bool, type-parameter-0-0> &'))
      (CXXThisExpr 0x9f3b5d8 <col:19> 'vector<_Bool, type-parameter-0-0> *' this))
    (ReturnStmt 0x9f3b698 <line:562:2, col:10>
      (UnaryOperator 0x9f3b680 <col:9, col:10> '<dependent type>' prefix '*'
        (CXXThisExpr 0x9f3b670 <col:10> 'vector<_Bool, type-parameter-0-0> *' this)))
    <<<NULL>>>)
  (IfStmt 0x9f3b940 <line:563:7, line:567:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9f3b7d8 <line:563:11, col:33> '<dependent type>'
      (UnresolvedLookupExpr 0x9f3b788 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b42c70 0x9ac83c0 0x9b5e730 0x9cbd1f0 0x9cbd720 0x9cbdc50 0x9f273d0)
      (CallExpr 0x9f3b718 <col:11, col:20> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f3b6e0 <col:11, col:15> '<dependent type>' lvalue
          (DeclRefExpr 0x9f3b6c4 <col:11> 'const vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0x9f36330 '__x' 'const vector<_Bool, type-parameter-0-0> &')))
      (CallExpr 0x9f3b768 <col:24, col:33> '<dependent type>'
        (MemberExpr 0x9f3b748 <col:24> '<bound member function type>' ->capacity 0x9f36d60
          (CXXThisExpr 0x9f3b738 <col:24> 'vector<_Bool, type-parameter-0-0> *' this))))
    (CompoundStmt 0x9f3b928 <line:564:2, line:567:2>
      (CallExpr 0x9f3b848 <line:565:4, col:24> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f3b810 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x9f3b800 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
      (CallExpr 0x9f3b908 <line:566:4, col:28> '<dependent type>'
        (MemberExpr 0x9f3b878 <col:4> '<bound member function type>' ->_M_initialize 0x9f387a0
          (CXXThisExpr 0x9f3b868 <col:4> 'vector<_Bool, type-parameter-0-0> *' this))
        (CallExpr 0x9f3b8e8 <col:18, col:27> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9f3b8b0 <col:18, col:22> '<dependent type>' lvalue
            (DeclRefExpr 0x9f3b898 <col:18> 'const vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0x9f36330 '__x' 'const vector<_Bool, type-parameter-0-0> &')))))
    <<<NULL>>>)
  (BinaryOperator 0x9f3bb88 <line:568:7, line:569:14> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x9f3b9a8 <line:568:7, col:21> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9f3b970 <col:7, col:13> '<dependent type>' lvalue
        (CXXThisExpr 0x9f3b960 <col:7> 'vector<_Bool, type-parameter-0-0> *' this)))
    (CallExpr 0x9f3bb60 <col:33, line:569:14> '<dependent type>'
      (MemberExpr 0x9f3b9f0 <line:568:33> '<bound member function type>' ->_M_copy_aligned 0x9f386d0
        (CXXThisExpr 0x9f3b9e0 <col:33> 'vector<_Bool, type-parameter-0-0> *' this))
      (CallExpr 0x9f3ba60 <col:49, col:59> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f3ba28 <col:49, col:53> '<dependent type>' lvalue
          (DeclRefExpr 0x9f3ba10 <col:49> 'const vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0x9f36330 '__x' 'const vector<_Bool, type-parameter-0-0> &')))
      (CallExpr 0x9f3bad0 <col:62, col:70> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f3ba98 <col:62, col:66> '<dependent type>' lvalue
          (DeclRefExpr 0x9f3ba7c <col:62> 'const vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0x9f36330 '__x' 'const vector<_Bool, type-parameter-0-0> &')))
      (CallExpr 0x9f3bb40 <line:569:7, col:13> '<dependent type>'
        (UnresolvedMemberExpr 0x9f3bb00 <col:7> '<bound member function type>' lvalue))))
  (ReturnStmt 0x9f3bbc8 <line:570:7, col:15>
    (UnaryOperator 0x9f3bbb0 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9f3bba0 <col:15> 'vector<_Bool, type-parameter-0-0> *' this))))


        void assign(size_type __n, const bool &__x) (CompoundStmt 0x9f3bc80 </usr/include/c++/4.6/bits/stl_bvector.h:598:5, col:33>
  (CallExpr 0x9f3bc58 <col:7, col:30> '<dependent type>'
    (MemberExpr 0x9f3bc08 <col:7> '<bound member function type>' ->_M_fill_assign 0x9f395b0
      (CXXThisExpr 0x9f3bbf8 <col:7> 'vector<_Bool, type-parameter-0-0> *' this))
    (DeclRefExpr 0x9f3bc28 <col:22> 'size_type':'unsigned int' lvalue ParmVar 0x9f36440 '__n' 'size_type':'unsigned int')
    (DeclRefExpr 0x9f3bc40 <col:27> 'const _Bool' lvalue ParmVar 0x9f36490 '__x' 'const _Bool &')))


        template <typename _InputIterator> void assign(_InputIterator __first, _InputIterator __last) (CompoundStmt 0x9f3bea8 </usr/include/c++/4.6/bits/stl_bvector.h:603:7, line:606:7>
  (DeclStmt 0x9f3bdc0 <line:604:2, col:70>
    0x9f3bd90 "typedef typename std::__is_integer<_InputIterator>::__type _Integral")
  (CallExpr 0x9f3be80 <line:605:2, col:49> '<dependent type>'
    (UnresolvedMemberExpr 0x9f3bde0 <col:2> '<bound member function type>' lvalue)
    (DeclRefExpr 0x9f3be20 <col:21> '_InputIterator' lvalue ParmVar 0x9f36600 '__first' '_InputIterator')
    (DeclRefExpr 0x9f3be38 <col:30> '_InputIterator' lvalue ParmVar 0x9f36640 '__last' '_InputIterator')
    (CXXUnresolvedConstructExpr 0x9f3be68 <col:38, col:48> '_Integral':'typename std::__is_integer<_InputIterator>::__type')))

;
        iterator begin() (CompoundStmt 0x9f3bf50 </usr/include/c++/4.6/bits/stl_bvector.h:616:5, col:38>
  (ReturnStmt 0x9f3bf40 <col:7, col:28>
    (CXXDependentScopeMemberExpr 0x9f3bf08 <col:14, col:28> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9f3bed0 <col:14, col:20> '<dependent type>' lvalue
        (CXXThisExpr 0x9f3bec0 <col:14> 'vector<_Bool, type-parameter-0-0> *' this)))))


        const_iterator begin() const (CompoundStmt 0x9f3bff8 </usr/include/c++/4.6/bits/stl_bvector.h:620:5, col:38>
  (ReturnStmt 0x9f3bfe8 <col:7, col:28>
    (CXXDependentScopeMemberExpr 0x9f3bfb0 <col:14, col:28> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9f3bf78 <col:14, col:20> '<dependent type>' lvalue
        (CXXThisExpr 0x9f3bf68 <col:14> 'const vector<_Bool, type-parameter-0-0> *' this)))))


        iterator end() (CompoundStmt 0x9f3c0a0 </usr/include/c++/4.6/bits/stl_bvector.h:624:5, col:39>
  (ReturnStmt 0x9f3c090 <col:7, col:28>
    (CXXDependentScopeMemberExpr 0x9f3c058 <col:14, col:28> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9f3c020 <col:14, col:20> '<dependent type>' lvalue
        (CXXThisExpr 0x9f3c010 <col:14> 'vector<_Bool, type-parameter-0-0> *' this)))))


        const_iterator end() const (CompoundStmt 0x9f3c148 </usr/include/c++/4.6/bits/stl_bvector.h:628:5, col:39>
  (ReturnStmt 0x9f3c138 <col:7, col:28>
    (CXXDependentScopeMemberExpr 0x9f3c100 <col:14, col:28> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9f3c0c8 <col:14, col:20> '<dependent type>' lvalue
        (CXXThisExpr 0x9f3c0b8 <col:14> 'const vector<_Bool, type-parameter-0-0> *' this)))))


        reverse_iterator rbegin() (CompoundStmt 0x9f486b0 </usr/include/c++/4.6/bits/stl_bvector.h:632:5, col:39>
  (ReturnStmt 0x9f486a0 <col:7, col:36>
    (CXXConstructExpr 0x9f48678 <col:14, col:36> 'reverse_iterator':'class std::reverse_iterator<struct std::_Bit_iterator>''void (const class std::reverse_iterator<struct std::_Bit_iterator> &)' elidable
      (MaterializeTemporaryExpr 0x9f48668 <col:14, col:36> 'const class std::reverse_iterator<struct std::_Bit_iterator>' lvalue
        (ImplicitCastExpr 0x9f48658 <col:14, col:36> 'const class std::reverse_iterator<struct std::_Bit_iterator>' <NoOp>
          (CXXUnresolvedConstructExpr 0x9f48428 <col:14, col:36> 'reverse_iterator':'class std::reverse_iterator<struct std::_Bit_iterator>'
            (CallExpr 0x9f48408 <col:31, col:35> '<dependent type>'
              (UnresolvedMemberExpr 0x9f483c8 <col:31> '<bound member function type>' lvalue))))))))


        const_reverse_iterator rbegin() const (CompoundStmt 0x9f4b610 </usr/include/c++/4.6/bits/stl_bvector.h:636:5, col:45>
  (ReturnStmt 0x9f4b600 <col:7, col:42>
    (CXXConstructExpr 0x9f4b5d8 <col:14, col:42> 'const_reverse_iterator':'class std::reverse_iterator<struct std::_Bit_const_iterator>''void (const class std::reverse_iterator<struct std::_Bit_const_iterator> &)' elidable
      (MaterializeTemporaryExpr 0x9f4b5c8 <col:14, col:42> 'const class std::reverse_iterator<struct std::_Bit_const_iterator>' lvalue
        (ImplicitCastExpr 0x9f4b5b8 <col:14, col:42> 'const class std::reverse_iterator<struct std::_Bit_const_iterator>' <NoOp>
          (CXXUnresolvedConstructExpr 0x9f4b388 <col:14, col:42> 'const_reverse_iterator':'class std::reverse_iterator<struct std::_Bit_const_iterator>'
            (CallExpr 0x9f4b368 <col:37, col:41> '<dependent type>'
              (UnresolvedMemberExpr 0x9f4b328 <col:37> '<bound member function type>' lvalue))))))))


        reverse_iterator rend() (CompoundStmt 0x9f4b768 </usr/include/c++/4.6/bits/stl_bvector.h:640:5, col:41>
  (ReturnStmt 0x9f4b758 <col:7, col:38>
    (CXXConstructExpr 0x9f4b730 <col:14, col:38> 'reverse_iterator':'class std::reverse_iterator<struct std::_Bit_iterator>''void (const class std::reverse_iterator<struct std::_Bit_iterator> &)' elidable
      (MaterializeTemporaryExpr 0x9f4b720 <col:14, col:38> 'const class std::reverse_iterator<struct std::_Bit_iterator>' lvalue
        (ImplicitCastExpr 0x9f4b710 <col:14, col:38> 'const class std::reverse_iterator<struct std::_Bit_iterator>' <NoOp>
          (CXXUnresolvedConstructExpr 0x9f4b6a0 <col:14, col:38> 'reverse_iterator':'class std::reverse_iterator<struct std::_Bit_iterator>'
            (CallExpr 0x9f4b680 <col:31, col:37> '<dependent type>'
              (UnresolvedMemberExpr 0x9f4b640 <col:31> '<bound member function type>' lvalue))))))))


        const_reverse_iterator rend() const (CompoundStmt 0x9f4b8c0 </usr/include/c++/4.6/bits/stl_bvector.h:644:5, col:47>
  (ReturnStmt 0x9f4b8b0 <col:7, col:44>
    (CXXConstructExpr 0x9f4b888 <col:14, col:44> 'const_reverse_iterator':'class std::reverse_iterator<struct std::_Bit_const_iterator>''void (const class std::reverse_iterator<struct std::_Bit_const_iterator> &)' elidable
      (MaterializeTemporaryExpr 0x9f4b878 <col:14, col:44> 'const class std::reverse_iterator<struct std::_Bit_const_iterator>' lvalue
        (ImplicitCastExpr 0x9f4b868 <col:14, col:44> 'const class std::reverse_iterator<struct std::_Bit_const_iterator>' <NoOp>
          (CXXUnresolvedConstructExpr 0x9f4b7f8 <col:14, col:44> 'const_reverse_iterator':'class std::reverse_iterator<struct std::_Bit_const_iterator>'
            (CallExpr 0x9f4b7d8 <col:37, col:43> '<dependent type>'
              (UnresolvedMemberExpr 0x9f4b798 <col:37> '<bound member function type>' lvalue))))))))


        size_type size() const (CompoundStmt 0x9f4ba58 </usr/include/c++/4.6/bits/stl_bvector.h:666:5, col:42>
  (ReturnStmt 0x9f4ba48 <col:7, col:39>
    (CXXUnresolvedConstructExpr 0x9f4ba28 <col:14, col:39> 'size_type':'unsigned int'
      (CXXOperatorCallExpr 0x9f4ba00 <col:24, col:38> '<dependent type>'
        (UnresolvedLookupExpr 0x9f4b9c0 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590 0x9f2d6a0)
        (CallExpr 0x9f4b930 <col:24, col:28> '<dependent type>'
          (UnresolvedMemberExpr 0x9f4b8f0 <col:24> '<bound member function type>' lvalue))
        (CallExpr 0x9f4b9a0 <col:32, col:38> '<dependent type>'
          (UnresolvedMemberExpr 0x9f4b960 <col:32> '<bound member function type>' lvalue))))))


        size_type max_size() const (CompoundStmt 0x9f4bf38 </usr/include/c++/4.6/bits/stl_bvector.h:670:5, line:677:5>
  (DeclStmt 0x9f4bc38 <line:671:7, line:673:24>
    0x9f4ba80 "const size_type __isize =
      (ImplicitCastExpr 0x9f4bc28 <line:672:2, line:673:23> 'const size_type':'const unsigned int' <IntegralCast>
        (BinaryOperator 0x9f4bc10 <line:672:2, line:673:23> 'int' '+'
          (BinaryOperator 0x9f4bbe0 <line:672:2, line:673:19> 'int' '-'
            (ImplicitCastExpr 0x9f4bbd0 <line:672:2, col:48> 'int':'int' <LValueToRValue>
              (DeclRefExpr 0x9f4bb60 <col:2, col:48> 'const int':'const int' lvalue Var 0x9ca5e30 '__max' 'const int':'const int'))
            (CXXFunctionalCastExpr 0x9f4bbb8 <line:673:4, col:19> 'int' functional cast to int <NoOp>
              (ImplicitCastExpr 0x9f4bba8 <col:8> 'int' <IntegralCast>
                (DeclRefExpr 0x9f4bb8c <col:8> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x9f286d0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>'))))
          (IntegerLiteral 0x9f4bbf8 <col:23> 'int' 1)))")
  (DeclStmt 0x9f4bd38 <line:674:7, col:66>
    0x9f4bc50 "const size_type __asize =
      (CallExpr 0x9f4bd18 <col:33, col:65> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f4bce0 <col:33, col:56> '<dependent type>' lvalue
          (CallExpr 0x9f4bcc0 <col:33, col:54> '<dependent type>'
            (UnresolvedMemberExpr 0x9f4bc84 <col:33> '<dependent type>' lvalue))))")
  (ReturnStmt 0x9f4bf28 <line:675:7, line:676:46>
    (ParenExpr 0x9f4bf10 <line:675:14, line:676:46> 'unsigned int'
      (ConditionalOperator 0x9f4bef0 <line:675:15, line:676:39> 'unsigned int'
        (BinaryOperator 0x9f4be10 <line:675:15, col:51> '_Bool' '<='
          (ImplicitCastExpr 0x9f4be00 <col:15> 'size_type':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0x9f4bd48 <col:15> 'const size_type':'const unsigned int' lvalue Var 0x9f4bc50 '__asize' 'const size_type':'const unsigned int'))
          (BinaryOperator 0x9f4bde8 <col:26, col:51> 'unsigned int' '/'
            (ImplicitCastExpr 0x9f4bdc8 <col:26> 'size_type':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0x9f4bd60 <col:26> 'const size_type':'const unsigned int' lvalue Var 0x9f4ba80 '__isize' 'const size_type':'const unsigned int'))
            (ImplicitCastExpr 0x9f4bdd8 <col:36, col:51> 'unsigned int' <IntegralCast>
              (CXXFunctionalCastExpr 0x9f4bdb0 <col:36, col:51> 'int' functional cast to int <NoOp>
                (ImplicitCastExpr 0x9f4bda0 <col:40> 'int' <IntegralCast>
                  (DeclRefExpr 0x9f4bd84 <col:40> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x9f286d0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>'))))))
        (BinaryOperator 0x9f4beb0 <line:676:10, col:35> 'unsigned int' '*'
          (ImplicitCastExpr 0x9f4be90 <col:10> 'size_type':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0x9f4be28 <col:10> 'const size_type':'const unsigned int' lvalue Var 0x9f4bc50 '__asize' 'const size_type':'const unsigned int'))
          (ImplicitCastExpr 0x9f4bea0 <col:20, col:35> 'unsigned int' <IntegralCast>
            (CXXFunctionalCastExpr 0x9f4be78 <col:20, col:35> 'int' functional cast to int <NoOp>
              (ImplicitCastExpr 0x9f4be68 <col:24> 'int' <IntegralCast>
                (DeclRefExpr 0x9f4be4c <col:24> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x9f286d0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))
        (ImplicitCastExpr 0x9f4bee0 <col:39> 'size_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9f4bec8 <col:39> 'const size_type':'const unsigned int' lvalue Var 0x9f4ba80 '__isize' 'const size_type':'const unsigned int'))))))


        size_type capacity() const (CompoundStmt 0x9f4c128 </usr/include/c++/4.6/bits/stl_bvector.h:681:5, line:682:22>
  (ReturnStmt 0x9f4c118 <line:681:7, line:682:19>
    (CXXUnresolvedConstructExpr 0x9f4c0f8 <line:681:14, line:682:19> 'size_type':'unsigned int'
      (CXXOperatorCallExpr 0x9f4c0d0 <line:681:24, line:682:18> '<dependent type>'
        (UnresolvedLookupExpr 0x9f4c090 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590 0x9f2d6a0)
        (CXXUnresolvedConstructExpr 0x9f4c000 <line:681:24, col:73> 'const_iterator':'struct std::_Bit_const_iterator'
          (CXXDependentScopeMemberExpr 0x9f4bfb0 <col:39, col:53> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x9f4bf78 <col:39, col:45> '<dependent type>' lvalue
              (CXXThisExpr 0x9f4bf68 <col:39> 'const vector<_Bool, type-parameter-0-0> *' this)))
          (IntegerLiteral 0x9f4bfe8 <col:72> 'int' 0))
        (CallExpr 0x9f4c070 <line:682:12, col:18> '<dependent type>'
          (UnresolvedMemberExpr 0x9f4c030 <col:12> '<bound member function type>' lvalue))))))


        bool empty() const (CompoundStmt 0x9f4c2b8 </usr/include/c++/4.6/bits/stl_bvector.h:686:5, col:32>
  (ReturnStmt 0x9f4c2a8 <col:7, col:29>
    (CXXOperatorCallExpr 0x9f4c280 <col:14, col:29> '<dependent type>'
      (UnresolvedLookupExpr 0x9f4c220 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90 0x9cb91e0 0x9cb9c50 0x9cba490 0x9cbaa00 0x9db0390 0x9f25fa0)
      (CallExpr 0x9f4c190 <col:14, col:20> '<dependent type>'
        (UnresolvedMemberExpr 0x9f4c150 <col:14> '<bound member function type>' lvalue))
      (CallExpr 0x9f4c200 <col:25, col:29> '<dependent type>'
        (UnresolvedMemberExpr 0x9f4c1c0 <col:25> '<bound member function type>' lvalue)))))


        reference operator[](size_type __n) (CompoundStmt 0x9f4c618 </usr/include/c++/4.6/bits/stl_bvector.h:690:5, line:693:5>
  (ReturnStmt 0x9f4c608 <line:691:7, line:692:58>
    (CXXConstructExpr 0x9f4c5e0 <line:691:14, line:692:58> 'reference':'struct std::_Bit_reference''void (const struct std::_Bit_reference &) throw()' elidable
      (MaterializeTemporaryExpr 0x9f4c5d0 <line:691:14, line:692:58> 'const struct std::_Bit_reference' lvalue
        (ImplicitCastExpr 0x9f4c5c0 <line:691:14, line:692:58> 'const struct std::_Bit_reference' <NoOp>
          (CXXOperatorCallExpr 0x9f4c5a0 <line:691:14, line:692:58> 'reference':'struct std::_Bit_reference'
            (ImplicitCastExpr 0x9f4c590 <<invalid sloc>> 'reference (*)(void) const' <FunctionToPointerDecay>
              (DeclRefExpr 0x9f4c578 <<invalid sloc>> 'reference (void) const' lvalue CXXMethod 0x9f2dda0 'operator*' 'reference (void) const'))
            (ImplicitCastExpr 0x9f4c568 <line:691:15, line:692:58> 'const struct std::_Bit_iterator' lvalue <NoOp>
              (CXXUnresolvedConstructExpr 0x9f4c548 <line:691:15, line:692:58> 'iterator':'struct std::_Bit_iterator'
                (CXXOperatorCallExpr 0x9f4c480 <line:691:24, line:692:33> '<dependent type>'
                  (UnresolvedLookupExpr 0x9f4c430 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9ce1500 0x9ce2100 0x9cb8030 0x9cb8830 0x9f2fb40 0x9f31cc0)
                  (CXXDependentScopeMemberExpr 0x9f4c358 <line:691:24, col:47> '<dependent type>' lvalue
                    (CXXDependentScopeMemberExpr 0x9f4c320 <col:24, col:38> '<dependent type>' lvalue
                      (CXXDependentScopeMemberExpr 0x9f4c2e8 <col:24, col:30> '<dependent type>' lvalue
                        (CXXThisExpr 0x9f4c2d8 <col:24> 'vector<_Bool, type-parameter-0-0> *' this))))
                  (BinaryOperator 0x9f4c418 <line:692:12, col:33> 'unsigned int' '/'
                    (ImplicitCastExpr 0x9f4c3f8 <col:12> 'size_type':'unsigned int' <LValueToRValue>
                      (DeclRefExpr 0x9f4c38c <col:12> 'size_type':'unsigned int' lvalue ParmVar 0x9f36e60 '__n' 'size_type':'unsigned int'))
                    (ImplicitCastExpr 0x9f4c408 <col:18, col:33> 'unsigned int' <IntegralCast>
                      (CXXFunctionalCastExpr 0x9f4c3e0 <col:18, col:33> 'int' functional cast to int <NoOp>
                        (ImplicitCastExpr 0x9f4c3d0 <col:22> 'int' <IntegralCast>
                          (DeclRefExpr 0x9f4c3b4 <col:22> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x9f286d0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>'))))))
                (BinaryOperator 0x9f4c530 <col:36, col:57> 'unsigned int' '%'
                  (ImplicitCastExpr 0x9f4c510 <col:36> 'size_type':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0x9f4c4a4 <col:36> 'size_type':'unsigned int' lvalue ParmVar 0x9f36e60 '__n' 'size_type':'unsigned int'))
                  (ImplicitCastExpr 0x9f4c520 <col:42, col:57> 'unsigned int' <IntegralCast>
                    (CXXFunctionalCastExpr 0x9f4c4f8 <col:42, col:57> 'int' functional cast to int <NoOp>
                      (ImplicitCastExpr 0x9f4c4e8 <col:46> 'int' <IntegralCast>
                        (DeclRefExpr 0x9f4c4cc <col:46> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x9f286d0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))))))))))


        const_reference operator[](size_type __n) const (CompoundStmt 0x9f4c930 </usr/include/c++/4.6/bits/stl_bvector.h:697:5, line:700:5>
  (ReturnStmt 0x9f4c920 <line:698:7, line:699:57>
    (CXXOperatorCallExpr 0x9f4c900 <line:698:14, line:699:57> 'const_reference':'_Bool'
      (ImplicitCastExpr 0x9f4c8f0 <<invalid sloc>> 'const_reference (*)(void) const' <FunctionToPointerDecay>
        (DeclRefExpr 0x9f4c8d8 <<invalid sloc>> 'const_reference (void) const' lvalue CXXMethod 0x9f30210 'operator*' 'const_reference (void) const'))
      (ImplicitCastExpr 0x9f4c8c8 <line:698:15, line:699:57> 'const struct std::_Bit_const_iterator' lvalue <NoOp>
        (CXXUnresolvedConstructExpr 0x9f4c8a8 <line:698:15, line:699:57> 'const_iterator':'struct std::_Bit_const_iterator'
          (CXXOperatorCallExpr 0x9f4c7e0 <line:698:30, line:699:32> '<dependent type>'
            (UnresolvedLookupExpr 0x9f4c790 <col:9, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9ce1500 0x9ce2100 0x9cb8030 0x9cb8830 0x9f2fb40 0x9f31cc0)
            (CXXDependentScopeMemberExpr 0x9f4c6b8 <line:698:30, col:53> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0x9f4c680 <col:30, col:44> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0x9f4c648 <col:30, col:36> '<dependent type>' lvalue
                  (CXXThisExpr 0x9f4c638 <col:30> 'const vector<_Bool, type-parameter-0-0> *' this))))
            (BinaryOperator 0x9f4c778 <line:699:11, col:32> 'unsigned int' '/'
              (ImplicitCastExpr 0x9f4c758 <col:11> 'size_type':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0x9f4c6ec <col:11> 'size_type':'unsigned int' lvalue ParmVar 0x9f36f90 '__n' 'size_type':'unsigned int'))
              (ImplicitCastExpr 0x9f4c768 <col:17, col:32> 'unsigned int' <IntegralCast>
                (CXXFunctionalCastExpr 0x9f4c740 <col:17, col:32> 'int' functional cast to int <NoOp>
                  (ImplicitCastExpr 0x9f4c730 <col:21> 'int' <IntegralCast>
                    (DeclRefExpr 0x9f4c714 <col:21> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x9f286d0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>'))))))
          (BinaryOperator 0x9f4c890 <col:35, col:56> 'unsigned int' '%'
            (ImplicitCastExpr 0x9f4c870 <col:35> 'size_type':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0x9f4c804 <col:35> 'size_type':'unsigned int' lvalue ParmVar 0x9f36f90 '__n' 'size_type':'unsigned int'))
            (ImplicitCastExpr 0x9f4c880 <col:41, col:56> 'unsigned int' <IntegralCast>
              (CXXFunctionalCastExpr 0x9f4c858 <col:41, col:56> 'int' functional cast to int <NoOp>
                (ImplicitCastExpr 0x9f4c848 <col:45> 'int' <IntegralCast>
                  (DeclRefExpr 0x9f4c82c <col:45> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x9f286d0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>'))))))))))


    protected:
    protected:
        void _M_range_check(size_type __n) const (CompoundStmt 0x9f4cb40 </usr/include/c++/4.6/bits/stl_bvector.h:705:5, line:708:5>
  (IfStmt 0x9f4cb20 <line:706:7, line:707:65>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9f4ca18 <line:706:11, col:29> '<dependent type>'
      (UnresolvedLookupExpr 0x9f4c9c8 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b436e0 0x9ac8bd0 0x9b5f010 0x9cbf3a0 0x9cbf900 0x9cbfe30 0x9f27e60)
      (DeclRefExpr 0x9f4c944 <col:11> 'size_type':'unsigned int' lvalue ParmVar 0x9f370f0 '__n' 'size_type':'unsigned int')
      (CallExpr 0x9f4c9a8 <col:18, col:29> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f4c970 <col:18, col:24> '<dependent type>' lvalue
          (CXXThisExpr 0x9f4c960 <col:18> 'const vector<_Bool, type-parameter-0-0> *' this))))
    (CallExpr 0x9f4caf0 <line:707:9, col:65> 'void'
      (ImplicitCastExpr 0x9f4cae0 <col:9> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x9f4cac4 <col:9> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9b0bd90 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0x9f4cb10 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0x9f4cab0 <col:24, col:30> 'const char [29]' lvalue
          (StringLiteral 0x9f4ca74 </usr/include/c++/4.6/bits/stl_bvector.h:707:34> 'const char [29]' lvalue "vector<bool>::_M_range_check"))))
    <<<NULL>>>))


    public:
    public:
        reference at(size_type __n) (CompoundStmt 0x9f4cc40 </usr/include/c++/4.6/bits/stl_bvector.h:713:5, col:49>
  (CallExpr 0x9f4cba0 <col:7, col:25> '<dependent type>'
    (MemberExpr 0x9f4cb68 <col:7> '<bound member function type>' ->_M_range_check 0x9f37170
      (CXXThisExpr 0x9f4cb58 <col:7> 'vector<_Bool, type-parameter-0-0> *' this))
    (DeclRefExpr 0x9f4cb88 <col:22> 'size_type':'unsigned int' lvalue ParmVar 0x9f37230 '__n' 'size_type':'unsigned int'))
  (ReturnStmt 0x9f4cc30 <col:28, col:46>
    (ArraySubscriptExpr 0x9f4cc18 <col:35, col:46> '<dependent type>' lvalue
      (ParenExpr 0x9f4cbe8 <col:35, col:41> '<dependent type>'
        (UnaryOperator 0x9f4cbd0 <col:36, col:37> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9f4cbc0 <col:37> 'vector<_Bool, type-parameter-0-0> *' this)))
      (DeclRefExpr 0x9f4cbfc <col:43> 'size_type':'unsigned int' lvalue ParmVar 0x9f37230 '__n' 'size_type':'unsigned int'))))


        const_reference at(size_type __n) const (CompoundStmt 0x9f4cd40 </usr/include/c++/4.6/bits/stl_bvector.h:717:5, col:49>
  (CallExpr 0x9f4cca0 <col:7, col:25> '<dependent type>'
    (MemberExpr 0x9f4cc68 <col:7> '<bound member function type>' ->_M_range_check 0x9f37170
      (CXXThisExpr 0x9f4cc58 <col:7> 'const vector<_Bool, type-parameter-0-0> *' this))
    (DeclRefExpr 0x9f4cc88 <col:22> 'size_type':'unsigned int' lvalue ParmVar 0x9f372f0 '__n' 'size_type':'unsigned int'))
  (ReturnStmt 0x9f4cd30 <col:28, col:46>
    (ArraySubscriptExpr 0x9f4cd18 <col:35, col:46> '<dependent type>' lvalue
      (ParenExpr 0x9f4cce8 <col:35, col:41> '<dependent type>'
        (UnaryOperator 0x9f4ccd0 <col:36, col:37> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9f4ccc0 <col:37> 'const vector<_Bool, type-parameter-0-0> *' this)))
      (DeclRefExpr 0x9f4ccfc <col:43> 'size_type':'unsigned int' lvalue ParmVar 0x9f372f0 '__n' 'size_type':'unsigned int'))))


        void reserve(size_type __n);
        reference front() (CompoundStmt 0x9f4cdf0 </usr/include/c++/4.6/bits/stl_bvector.h:724:5, col:24>
  (ReturnStmt 0x9f4cde0 <col:7, col:21>
    (UnaryOperator 0x9f4cdc8 <col:14, col:21> '<dependent type>' prefix '*'
      (CallExpr 0x9f4cda8 <col:15, col:21> '<dependent type>'
        (UnresolvedMemberExpr 0x9f4cd68 <col:15> '<bound member function type>' lvalue)))))


        const_reference front() const (CompoundStmt 0x9f4cea0 </usr/include/c++/4.6/bits/stl_bvector.h:728:5, col:24>
  (ReturnStmt 0x9f4ce90 <col:7, col:21>
    (UnaryOperator 0x9f4ce78 <col:14, col:21> '<dependent type>' prefix '*'
      (CallExpr 0x9f4ce58 <col:15, col:21> '<dependent type>'
        (UnresolvedMemberExpr 0x9f4ce18 <col:15> '<bound member function type>' lvalue)))))


        reference back() (CompoundStmt 0x9f4cfe8 </usr/include/c++/4.6/bits/stl_bvector.h:732:5, col:28>
  (ReturnStmt 0x9f4cfd8 <col:7, col:25>
    (UnaryOperator 0x9f4cfc0 <col:14, col:25> '<dependent type>' prefix '*'
      (ParenExpr 0x9f4cfa8 <col:15, col:25> '<dependent type>'
        (CXXOperatorCallExpr 0x9f4cf80 <col:16, col:24> '<dependent type>'
          (UnresolvedLookupExpr 0x9f4cf40 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590 0x9f2d6a0)
          (CallExpr 0x9f4cf08 <col:16, col:20> '<dependent type>'
            (UnresolvedMemberExpr 0x9f4cec8 <col:16> '<bound member function type>' lvalue))
          (IntegerLiteral 0x9f4cf28 <col:24> 'int' 1))))))


        const_reference back() const (CompoundStmt 0x9f4d130 </usr/include/c++/4.6/bits/stl_bvector.h:736:5, col:28>
  (ReturnStmt 0x9f4d120 <col:7, col:25>
    (UnaryOperator 0x9f4d108 <col:14, col:25> '<dependent type>' prefix '*'
      (ParenExpr 0x9f4d0f0 <col:15, col:25> '<dependent type>'
        (CXXOperatorCallExpr 0x9f4d0c8 <col:16, col:24> '<dependent type>'
          (UnresolvedLookupExpr 0x9f4d088 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590 0x9f2d6a0)
          (CallExpr 0x9f4d050 <col:16, col:20> '<dependent type>'
            (UnresolvedMemberExpr 0x9f4d010 <col:16> '<bound member function type>' lvalue))
          (IntegerLiteral 0x9f4d070 <col:24> 'int' 1))))))


        void data() (CompoundStmt 0x9f4d148 </usr/include/c++/4.6/bits/stl_bvector.h:744:12, col:14>)


        void push_back(bool __x) (CompoundStmt 0x9f4d510 </usr/include/c++/4.6/bits/stl_bvector.h:748:5, line:753:5>
  (IfStmt 0x9f4d4f0 <line:749:7, line:752:33>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9f4d2f0 <line:749:11, col:57> '<dependent type>'
      (UnresolvedLookupExpr 0x9f4d290 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b412d0 0x9ac7fa0 0x9b5e2b0 0x9ba7d20 0x9bc7160 0x9bc74d0 0x9cbb090 0x9cbb590 0x9cbbad0 0x9db08a0 0x9f26e60)
      (CXXDependentScopeMemberExpr 0x9f4d1d8 <col:11, col:35> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0x9f4d1a0 <col:11, col:25> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9f4d168 <col:11, col:17> '<dependent type>' lvalue
            (CXXThisExpr 0x9f4d158 <col:11> 'vector<_Bool, type-parameter-0-0> *' this))))
      (CXXDependentScopeMemberExpr 0x9f4d258 <col:43, col:57> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0x9f4d220 <col:43, col:49> '<dependent type>' lvalue
          (CXXThisExpr 0x9f4d210 <col:43> 'vector<_Bool, type-parameter-0-0> *' this))))
    (BinaryOperator 0x9f4d3f8 <line:750:9, col:38> '<dependent type>' '='
      (UnaryOperator 0x9f4d3c8 <col:9, col:33> '<dependent type>' prefix '*'
        (UnaryOperator 0x9f4d3b0 <col:10, col:33> '<dependent type>' postfix '++'
          (CXXDependentScopeMemberExpr 0x9f4d360 <col:10, col:24> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x9f4d328 <col:10, col:16> '<dependent type>' lvalue
              (CXXThisExpr 0x9f4d318 <col:10> 'vector<_Bool, type-parameter-0-0> *' this)))))
      (DeclRefExpr 0x9f4d3dc <col:38> '_Bool' lvalue ParmVar 0x9f37770 '__x' '_Bool'))
    (CallExpr 0x9f4d4c8 <line:752:9, col:33> '<dependent type>'
      (MemberExpr 0x9f4d420 <col:9> '<bound member function type>' ->_M_insert_aux 0x9f3a750
        (CXXThisExpr 0x9f4d410 <col:9> 'vector<_Bool, type-parameter-0-0> *' this))
      (CallExpr 0x9f4d490 <col:23, col:27> '<dependent type>'
        (UnresolvedMemberExpr 0x9f4d450 <col:23> '<bound member function type>' lvalue))
      (DeclRefExpr 0x9f4d4ac <col:30> '_Bool' lvalue ParmVar 0x9f37770 '__x' '_Bool'))))


        void swap(vector<bool, type-parameter-0-0> &__x) (CompoundStmt 0x9f4dd10 </usr/include/c++/4.6/bits/stl_bvector.h:757:5, line:767:5>
  (CallExpr 0x9f4d690 <line:758:7, col:61> '<dependent type>'
    (UnresolvedLookupExpr 0x9f4d548 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b3e850 0x9b3ed90 0x9cc04f0 0x9f28400)
    (CXXDependentScopeMemberExpr 0x9f4d5d0 <col:17, col:31> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9f4d598 <col:17, col:23> '<dependent type>' lvalue
        (CXXThisExpr 0x9f4d588 <col:17> 'vector<_Bool, type-parameter-0-0> *' this)))
    (CXXDependentScopeMemberExpr 0x9f4d658 <col:41, col:53> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9f4d620 <col:41, col:45> '<dependent type>' lvalue
        (DeclRefExpr 0x9f4d604 <col:41> 'vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0x9f37870 '__x' 'vector<_Bool, type-parameter-0-0> &'))))
  (CallExpr 0x9f4d820 <line:759:7, col:63> '<dependent type>'
    (UnresolvedLookupExpr 0x9f4d6d8 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b3e850 0x9b3ed90 0x9cc04f0 0x9f28400)
    (CXXDependentScopeMemberExpr 0x9f4d760 <col:17, col:31> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9f4d728 <col:17, col:23> '<dependent type>' lvalue
        (CXXThisExpr 0x9f4d718 <col:17> 'vector<_Bool, type-parameter-0-0> *' this)))
    (CXXDependentScopeMemberExpr 0x9f4d7e8 <col:42, col:54> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9f4d7b0 <col:42, col:46> '<dependent type>' lvalue
        (DeclRefExpr 0x9f4d794 <col:42> 'vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0x9f37870 '__x' 'vector<_Bool, type-parameter-0-0> &'))))
  (CallExpr 0x9f4d9b0 <line:760:7, line:761:32> '<dependent type>'
    (UnresolvedLookupExpr 0x9f4d868 <line:760:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b3e850 0x9b3ed90 0x9cc04f0 0x9f28400)
    (CXXDependentScopeMemberExpr 0x9f4d8f0 <col:17, col:31> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9f4d8b8 <col:17, col:23> '<dependent type>' lvalue
        (CXXThisExpr 0x9f4d8a8 <col:17> 'vector<_Bool, type-parameter-0-0> *' this)))
    (CXXDependentScopeMemberExpr 0x9f4d978 <line:761:3, col:15> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9f4d940 <col:3, col:7> '<dependent type>' lvalue
        (DeclRefExpr 0x9f4d924 <col:3> 'vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0x9f37870 '__x' 'vector<_Bool, type-parameter-0-0> &'))))
  (CallExpr 0x9f4dce8 <line:765:7, line:766:61> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9f4dbe8 <line:765:7, line:766:2> '<dependent type>' lvalue)
    (CallExpr 0x9f4dc58 <col:11, col:32> '<dependent type>'
      (UnresolvedMemberExpr 0x9f4dc1c <col:11> '<dependent type>' lvalue))
    (CallExpr 0x9f4dcc8 <col:35, col:60> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f4dc90 <col:35, col:39> '<dependent type>' lvalue
        (DeclRefExpr 0x9f4dc74 <col:35> 'vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0x9f37870 '__x' 'vector<_Bool, type-parameter-0-0> &')))))


        static void swap(reference __x, reference __y) (CompoundStmt 0x9f4df50 </usr/include/c++/4.6/bits/stl_bvector.h:772:5, line:776:5>
  (DeclStmt 0x9f4ddf8 <line:773:7, col:23>
    0x9f4dd40 "bool __tmp =
      (ImplicitCastExpr 0x9f4dde8 <col:20> '_Bool' <UserDefinedConversion>
        (CXXMemberCallExpr 0x9f4ddc8 <col:20> '_Bool'
          (MemberExpr 0x9f4dda8 <col:20, <invalid sloc>> '_Bool (void) const' .operator _Bool 0x9f28b00
            (ImplicitCastExpr 0x9f4dd98 <col:20> 'const struct std::_Bit_reference' lvalue <NoOp>
              (DeclRefExpr 0x9f4dd74 <col:20> 'reference':'struct std::_Bit_reference' lvalue ParmVar 0x9f37960 '__x' 'reference':'struct std::_Bit_reference')))))")
  (CXXOperatorCallExpr 0x9f4de98 <line:774:7, col:13> 'struct std::_Bit_reference' lvalue
    (ImplicitCastExpr 0x9f4de88 <col:11, <invalid sloc>> 'struct std::_Bit_reference &(*)(const struct std::_Bit_reference &)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9f4de50 <col:11, <invalid sloc>> 'struct std::_Bit_reference &(const struct std::_Bit_reference &)' lvalue CXXMethod 0x9f28d30 'operator=' 'struct std::_Bit_reference &(const struct std::_Bit_reference &)'))
    (DeclRefExpr 0x9f4de08 <col:7> 'reference':'struct std::_Bit_reference' lvalue ParmVar 0x9f37960 '__x' 'reference':'struct std::_Bit_reference')
    (ImplicitCastExpr 0x9f4de40 <col:13> 'const struct std::_Bit_reference' lvalue <NoOp>
      (DeclRefExpr 0x9f4de20 <col:13> 'reference':'struct std::_Bit_reference' lvalue ParmVar 0x9f379a0 '__y' 'reference':'struct std::_Bit_reference')))
  (CXXOperatorCallExpr 0x9f4df28 <line:775:7, col:13> 'struct std::_Bit_reference' lvalue
    (ImplicitCastExpr 0x9f4df18 <col:11, <invalid sloc>> 'struct std::_Bit_reference &(*)(_Bool)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9f4df00 <col:11, <invalid sloc>> 'struct std::_Bit_reference &(_Bool)' lvalue CXXMethod 0x9f28c10 'operator=' 'struct std::_Bit_reference &(_Bool)'))
    (DeclRefExpr 0x9f4debc <col:7> 'reference':'struct std::_Bit_reference' lvalue ParmVar 0x9f379a0 '__y' 'reference':'struct std::_Bit_reference')
    (ImplicitCastExpr 0x9f4def0 <col:13> '_Bool' <LValueToRValue>
      (DeclRefExpr 0x9f4ded4 <col:13> '_Bool' lvalue Var 0x9f4dd40 '__tmp' '_Bool'))))


        iterator insert(iterator __position, const bool &__x = (MaterializeTemporaryExpr 0x9f3aa88 </usr/include/c++/4.6/bits/stl_bvector.h:779:51, col:56> 'const _Bool' lvalue
  (CXXScalarValueInitExpr 0x9f3aa78 <col:51, col:56> '_Bool'))
) (CompoundStmt 0x9f4e650 </usr/include/c++/4.6/bits/stl_bvector.h:780:5, line:788:5>
  (DeclStmt 0x9f4e0a8 <line:781:7, col:55>
    0x9f4df80 "const difference_type __n =
      (CXXOperatorCallExpr 0x9f4e080 <col:35, col:54> '<dependent type>'
        (UnresolvedLookupExpr 0x9f4e040 <col:46, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590 0x9f2d6a0)
        (DeclRefExpr 0x9f4dfb4 <col:35> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9f37ab0 '__position' 'iterator':'struct std::_Bit_iterator')
        (CallExpr 0x9f4e020 <col:48, col:54> '<dependent type>'
          (UnresolvedMemberExpr 0x9f4dfe0 <col:48> '<bound member function type>' lvalue)))")
  (IfStmt 0x9f4e520 <line:782:7, line:786:38>
    <<<NULL>>>
    (BinaryOperator 0x9f4e388 <line:782:11, line:783:25> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x9f4e250 <line:782:11, col:57> '<dependent type>'
        (UnresolvedLookupExpr 0x9f4e1f0 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b412d0 0x9ac7fa0 0x9b5e2b0 0x9ba7d20 0x9bc7160 0x9bc74d0 0x9cbb090 0x9cbb590 0x9cbbad0 0x9db08a0 0x9f26e60)
        (CXXDependentScopeMemberExpr 0x9f4e138 <col:11, col:35> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9f4e100 <col:11, col:25> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x9f4e0c8 <col:11, col:17> '<dependent type>' lvalue
              (CXXThisExpr 0x9f4e0b8 <col:11> 'vector<_Bool, type-parameter-0-0> *' this))))
        (CXXDependentScopeMemberExpr 0x9f4e1b8 <col:43, col:57> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9f4e180 <col:43, col:49> '<dependent type>' lvalue
            (CXXThisExpr 0x9f4e170 <col:43> 'vector<_Bool, type-parameter-0-0> *' this))))
      (CXXOperatorCallExpr 0x9f4e360 <line:783:7, col:25> '<dependent type>'
        (UnresolvedLookupExpr 0x9f4e300 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90 0x9cb91e0 0x9cb9c50 0x9cba490 0x9cbaa00 0x9db0390 0x9f25fa0)
        (DeclRefExpr 0x9f4e274 <col:7> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9f37ab0 '__position' 'iterator':'struct std::_Bit_iterator')
        (CallExpr 0x9f4e2e0 <col:21, col:25> '<dependent type>'
          (UnresolvedMemberExpr 0x9f4e2a0 <col:21> '<bound member function type>' lvalue))))
    (BinaryOperator 0x9f4e480 <line:784:9, col:38> '<dependent type>' '='
      (UnaryOperator 0x9f4e450 <col:9, col:33> '<dependent type>' prefix '*'
        (UnaryOperator 0x9f4e438 <col:10, col:33> '<dependent type>' postfix '++'
          (CXXDependentScopeMemberExpr 0x9f4e3e8 <col:10, col:24> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x9f4e3b0 <col:10, col:16> '<dependent type>' lvalue
              (CXXThisExpr 0x9f4e3a0 <col:10> 'vector<_Bool, type-parameter-0-0> *' this)))))
      (DeclRefExpr 0x9f4e464 <col:38> 'const _Bool' lvalue ParmVar 0x9f37b00 '__x' 'const _Bool &'))
    (CallExpr 0x9f4e4f8 <line:786:9, col:38> '<dependent type>'
      (MemberExpr 0x9f4e4a8 <col:9> '<bound member function type>' ->_M_insert_aux 0x9f3a750
        (CXXThisExpr 0x9f4e498 <col:9> 'vector<_Bool, type-parameter-0-0> *' this))
      (DeclRefExpr 0x9f4e4c8 <col:23> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9f37ab0 '__position' 'iterator':'struct std::_Bit_iterator')
      (DeclRefExpr 0x9f4e4e0 <col:35> 'const _Bool' lvalue ParmVar 0x9f37b00 '__x' 'const _Bool &')))
  (ReturnStmt 0x9f4e640 <line:787:7, col:24>
    (CXXOperatorCallExpr 0x9f4e618 <col:14, col:24> '<dependent type>'
      (UnresolvedLookupExpr 0x9f4e5c8 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9ce1500 0x9ce2100 0x9cb8030 0x9cb8830 0x9f2fb40 0x9f31cc0)
      (CallExpr 0x9f4e590 <col:14, col:20> '<dependent type>'
        (UnresolvedMemberExpr 0x9f4e550 <col:14> '<bound member function type>' lvalue))
      (DeclRefExpr 0x9f4e5ac <col:24> 'const difference_type':'const int' lvalue Var 0x9f4df80 '__n' 'const difference_type':'const int'))))


        template <typename _InputIterator> void insert(iterator __position, _InputIterator __first, _InputIterator __last) (CompoundStmt 0x9f50ce0 </usr/include/c++/4.6/bits/stl_bvector.h:794:7, line:797:7>
  (DeclStmt 0x9f4e7a0 <line:795:2, col:70>
    0x9f4e770 "typedef typename std::__is_integer<_InputIterator>::__type _Integral")
  (CallExpr 0x9f50cb0 <line:796:2, col:61> '<dependent type>'
    (UnresolvedMemberExpr 0x9f4e7c0 <col:2> '<bound member function type>' lvalue)
    (DeclRefExpr 0x9f4e800 <col:21> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9f37c70 '__position' 'iterator':'struct std::_Bit_iterator')
    (DeclRefExpr 0x9f50c48 <col:33> '_InputIterator' lvalue ParmVar 0x9f37cb0 '__first' '_InputIterator')
    (DeclRefExpr 0x9f50c60 <col:42> '_InputIterator' lvalue ParmVar 0x9f37cf0 '__last' '_InputIterator')
    (CXXUnresolvedConstructExpr 0x9f50c98 <col:50, col:60> '_Integral':'typename std::__is_integer<_InputIterator>::__type')))

;
        void insert(iterator __position, size_type __n, const bool &__x) (CompoundStmt 0x9f50d98 </usr/include/c++/4.6/bits/stl_bvector.h:801:5, col:45>
  (CallExpr 0x9f50d70 <col:7, col:42> '<dependent type>'
    (MemberExpr 0x9f50d08 <col:7> '<bound member function type>' ->_M_fill_insert 0x9f3a0c0
      (CXXThisExpr 0x9f50cf8 <col:7> 'vector<_Bool, type-parameter-0-0> *' this))
    (DeclRefExpr 0x9f50d28 <col:22> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9f37e50 '__position' 'iterator':'struct std::_Bit_iterator')
    (DeclRefExpr 0x9f50d40 <col:34> 'size_type':'unsigned int' lvalue ParmVar 0x9f37e90 '__n' 'size_type':'unsigned int')
    (DeclRefExpr 0x9f50d58 <col:39> 'const _Bool' lvalue ParmVar 0x9f37ee0 '__x' 'const _Bool &')))


        void pop_back() (CompoundStmt 0x9f50e48 </usr/include/c++/4.6/bits/stl_bvector.h:810:5, col:34>
  (UnaryOperator 0x9f50e30 <col:7, col:23> '<dependent type>' prefix '--'
    (CXXDependentScopeMemberExpr 0x9f50df8 <col:9, col:23> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9f50dc0 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x9f50db0 <col:9> 'vector<_Bool, type-parameter-0-0> *' this)))))


        iterator erase(iterator __position) (CompoundStmt 0x9f51298 </usr/include/c++/4.6/bits/stl_bvector.h:814:5, line:819:5>
  (IfStmt 0x9f51180 <line:815:7, line:816:52>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9f50fc0 <line:815:11, col:33> '<dependent type>'
      (UnresolvedLookupExpr 0x9f50f60 <col:26, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b412d0 0x9ac7fa0 0x9b5e2b0 0x9ba7d20 0x9bc7160 0x9bc74d0 0x9cbb090 0x9cbb590 0x9cbbad0 0x9db08a0 0x9f26e60)
      (CXXOperatorCallExpr 0x9f50ec8 <col:11, col:24> 'iterator':'struct std::_Bit_iterator'
        (ImplicitCastExpr 0x9f50eb8 <col:22, <invalid sloc>> 'iterator (*)(difference_type) const' <FunctionToPointerDecay>
          (DeclRefExpr 0x9f50ea0 <col:22, <invalid sloc>> 'iterator (difference_type) const' lvalue CXXMethod 0x9f2e3e0 'operator+' 'iterator (difference_type) const'))
        (ImplicitCastExpr 0x9f50e90 <col:11> 'const struct std::_Bit_iterator' lvalue <NoOp>
          (DeclRefExpr 0x9f50e5c <col:11> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9f380a0 '__position' 'iterator':'struct std::_Bit_iterator'))
        (IntegerLiteral 0x9f50e78 <col:24> 'int' 1))
      (CallExpr 0x9f50f40 <col:29, col:33> '<dependent type>'
        (UnresolvedMemberExpr 0x9f50f00 <col:29> '<bound member function type>' lvalue)))
    (CallExpr 0x9f51158 <line:816:9, col:52> '<dependent type>'
      (UnresolvedLookupExpr 0x9f51008 <col:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b7fe20 0x9db46a0)
      (CXXOperatorCallExpr 0x9f510a8 <col:19, col:32> 'iterator':'struct std::_Bit_iterator'
        (ImplicitCastExpr 0x9f51098 <col:30, <invalid sloc>> 'iterator (*)(difference_type) const' <FunctionToPointerDecay>
          (DeclRefExpr 0x9f51080 <col:30, <invalid sloc>> 'iterator (difference_type) const' lvalue CXXMethod 0x9f2e3e0 'operator+' 'iterator (difference_type) const'))
        (ImplicitCastExpr 0x9f51070 <col:19> 'const struct std::_Bit_iterator' lvalue <NoOp>
          (DeclRefExpr 0x9f51040 <col:19> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9f380a0 '__position' 'iterator':'struct std::_Bit_iterator'))
        (IntegerLiteral 0x9f51058 <col:32> 'int' 1))
      (CallExpr 0x9f51120 <col:35, col:39> '<dependent type>'
        (UnresolvedMemberExpr 0x9f510e0 <col:35> '<bound member function type>' lvalue))
      (DeclRefExpr 0x9f5113c <col:42> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9f380a0 '__position' 'iterator':'struct std::_Bit_iterator'))
    <<<NULL>>>)
  (UnaryOperator 0x9f51220 <line:817:7, col:23> '<dependent type>' prefix '--'
    (CXXDependentScopeMemberExpr 0x9f511e8 <col:9, col:23> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9f511b0 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x9f511a0 <col:9> 'vector<_Bool, type-parameter-0-0> *' this))))
  (ReturnStmt 0x9f51288 <line:818:7, col:14>
    (CXXConstructExpr 0x9f51260 <col:14> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
      (ImplicitCastExpr 0x9f51250 <col:14> 'const struct std::_Bit_iterator' lvalue <NoOp>
        (DeclRefExpr 0x9f51234 <col:14> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9f380a0 '__position' 'iterator':'struct std::_Bit_iterator')))))


        iterator erase(iterator __first, iterator __last) (CompoundStmt 0x9f51550 </usr/include/c++/4.6/bits/stl_bvector.h:823:5, line:827:5>
  (IfStmt 0x9f514d0 <line:824:7, line:825:51>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9f51340 <line:824:11, col:22> '_Bool'
      (ImplicitCastExpr 0x9f51330 <col:19, <invalid sloc>> '_Bool (*)(const struct std::_Bit_iterator_base &) const' <FunctionToPointerDecay>
        (DeclRefExpr 0x9f51318 <col:19, <invalid sloc>> '_Bool (const struct std::_Bit_iterator_base &) const' lvalue CXXMethod 0x9f2a7b0 'operator!=' '_Bool (const struct std::_Bit_iterator_base &) const'))
      (ImplicitCastExpr 0x9f51308 <col:11> 'const struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
        (DeclRefExpr 0x9f512b4 <col:11> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9f381b0 '__first' 'iterator':'struct std::_Bit_iterator'))
      (ImplicitCastExpr 0x9f512f8 <col:22> 'const struct std::_Bit_iterator_base' lvalue <NoOp>
        (ImplicitCastExpr 0x9f512e8 <col:22> 'struct std::_Bit_iterator_base' lvalue <DerivedToBase (_Bit_iterator_base)>
          (DeclRefExpr 0x9f512cc <col:22> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9f381f0 '__last' 'iterator':'struct std::_Bit_iterator'))))
    (CallExpr 0x9f514b0 <line:825:2, col:51> '<dependent type>'
      (MemberExpr 0x9f51378 <col:2> '<bound member function type>' ->_M_erase_at_end 0x9f3a9a0
        (CXXThisExpr 0x9f51368 <col:2> 'vector<_Bool, type-parameter-0-0> *' this))
      (CallExpr 0x9f51488 <col:18, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x9f513b0 <col:18, col:23> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b7fe20 0x9db46a0)
        (DeclRefExpr 0x9f513e8 <col:28> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9f381f0 '__last' 'iterator':'struct std::_Bit_iterator')
        (CallExpr 0x9f51450 <col:36, col:40> '<dependent type>'
          (UnresolvedMemberExpr 0x9f51410 <col:36> '<bound member function type>' lvalue))
        (DeclRefExpr 0x9f5146c <col:43> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9f381b0 '__first' 'iterator':'struct std::_Bit_iterator')))
    <<<NULL>>>)
  (ReturnStmt 0x9f51540 <line:826:7, col:14>
    (CXXConstructExpr 0x9f51518 <col:14> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
      (ImplicitCastExpr 0x9f51508 <col:14> 'const struct std::_Bit_iterator' lvalue <NoOp>
        (DeclRefExpr 0x9f514ec <col:14> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9f381b0 '__first' 'iterator':'struct std::_Bit_iterator')))))


        void resize(size_type __new_size, bool __x = (CXXScalarValueInitExpr 0x9f3aaa0 </usr/include/c++/4.6/bits/stl_bvector.h:830:45, col:50> '_Bool')
) (CompoundStmt 0x9f519d0 </usr/include/c++/4.6/bits/stl_bvector.h:831:5, line:836:5>
  (IfStmt 0x9f519b0 <line:832:7, line:835:47>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9f51620 <line:832:11, col:29> '<dependent type>'
      (UnresolvedLookupExpr 0x9f515d0 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40ad0 0x9b57c70 0x9b5ddb0 0x9cbc120 0x9cbc650 0x9cbcb80 0x9f26790)
      (DeclRefExpr 0x9f51568 <col:11> 'size_type':'unsigned int' lvalue ParmVar 0x9f38300 '__new_size' 'size_type':'unsigned int')
      (CallExpr 0x9f515b0 <col:24, col:29> '<dependent type>'
        (MemberExpr 0x9f51590 <col:24> '<bound member function type>' ->size 0x9f36c60
          (CXXThisExpr 0x9f51580 <col:24> 'vector<_Bool, type-parameter-0-0> *' this))))
    (CallExpr 0x9f517b8 <line:833:9, col:62> '<dependent type>'
      (MemberExpr 0x9f51658 <col:9> '<bound member function type>' ->_M_erase_at_end 0x9f3a9a0
        (CXXThisExpr 0x9f51648 <col:9> 'vector<_Bool, type-parameter-0-0> *' this))
      (CXXOperatorCallExpr 0x9f51790 <col:25, col:61> '<dependent type>'
        (UnresolvedLookupExpr 0x9f51740 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9ce1500 0x9ce2100 0x9cb8030 0x9cb8830 0x9f2fb40 0x9f31cc0)
        (CallExpr 0x9f516c8 <col:25, col:31> '<dependent type>'
          (UnresolvedMemberExpr 0x9f51688 <col:25> '<bound member function type>' lvalue))
        (CXXFunctionalCastExpr 0x9f51728 <col:35, col:61> 'difference_type':'int' functional cast to difference_type <NoOp>
          (ImplicitCastExpr 0x9f51718 <col:51> 'difference_type':'int' <IntegralCast>
            (ImplicitCastExpr 0x9f51708 <col:51> 'size_type':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0x9f516f0 <col:51> 'size_type':'unsigned int' lvalue ParmVar 0x9f38300 '__new_size' 'size_type':'unsigned int'))))))
    (CallExpr 0x9f51988 <line:835:9, col:47> '<dependent type>'
      (UnresolvedMemberExpr 0x9f517e8 <col:9> '<bound member function type>' lvalue)
      (CallExpr 0x9f51880 <col:16, col:20> '<dependent type>'
        (UnresolvedMemberExpr 0x9f51840 <col:16> '<bound member function type>' lvalue))
      (CXXOperatorCallExpr 0x9f51948 <col:23, col:41> '<dependent type>'
        (UnresolvedLookupExpr 0x9f51908 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590 0x9f2d6a0)
        (DeclRefExpr 0x9f5189c <col:23> 'size_type':'unsigned int' lvalue ParmVar 0x9f38300 '__new_size' 'size_type':'unsigned int')
        (CallExpr 0x9f518e8 <col:36, col:41> '<dependent type>'
          (MemberExpr 0x9f518c8 <col:36> '<bound member function type>' ->size 0x9f36c60
            (CXXThisExpr 0x9f518b8 <col:36> 'vector<_Bool, type-parameter-0-0> *' this))))
      (DeclRefExpr 0x9f5196c <col:44> '_Bool' lvalue ParmVar 0x9f38340 '__x' '_Bool'))))


        void flip() (CompoundStmt 0x9f51d38 </usr/include/c++/4.6/bits/stl_bvector.h:846:5, line:850:5>
  (ForStmt 0x9f51d10 <line:847:7, line:849:18>
    (DeclStmt 0x9f51af0 <line:847:12, col:57>
      0x9f51a00 "_Bit_type *__p =
        (CXXDependentScopeMemberExpr 0x9f51ab8 <col:30, col:53> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9f51a80 <col:30, col:44> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x9f51a48 <col:30, col:36> '<dependent type>' lvalue
              (CXXThisExpr 0x9f51a38 <col:30> 'vector<_Bool, type-parameter-0-0> *' this))))")
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9f51bf8 <line:848:5, col:26> '<dependent type>'
      (UnresolvedLookupExpr 0x9f51b98 <col:9, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b412d0 0x9ac7fa0 0x9b5e2b0 0x9ba7d20 0x9bc7160 0x9bc74d0 0x9cbb090 0x9cbb590 0x9cbbad0 0x9db08a0 0x9f26e60)
      (DeclRefExpr 0x9f51b00 <col:5> '_Bit_type *' lvalue Var 0x9f51a00 '__p' '_Bit_type *')
      (CXXDependentScopeMemberExpr 0x9f51b60 <col:12, col:26> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0x9f51b28 <col:12, col:18> '<dependent type>' lvalue
          (CXXThisExpr 0x9f51b18 <col:12> 'vector<_Bool, type-parameter-0-0> *' this))))
    (UnaryOperator 0x9f51c38 <col:45, col:47> '_Bit_type *' lvalue prefix '++'
      (DeclRefExpr 0x9f51c1c <col:47> '_Bit_type *' lvalue Var 0x9f51a00 '__p' '_Bit_type *'))
    (BinaryOperator 0x9f51cf8 <line:849:9, col:18> '_Bit_type':'unsigned long' lvalue '='
      (UnaryOperator 0x9f51c78 <col:9, col:10> '_Bit_type':'unsigned long' lvalue prefix '*'
        (ImplicitCastExpr 0x9f51c68 <col:10> '_Bit_type *' <LValueToRValue>
          (DeclRefExpr 0x9f51c4c <col:10> '_Bit_type *' lvalue Var 0x9f51a00 '__p' '_Bit_type *')))
      (UnaryOperator 0x9f51ce0 <col:16, col:18> '_Bit_type':'unsigned long' prefix '~'
        (ImplicitCastExpr 0x9f51cd0 <col:17, col:18> '_Bit_type':'unsigned long' <LValueToRValue>
          (UnaryOperator 0x9f51cb8 <col:17, col:18> '_Bit_type':'unsigned long' lvalue prefix '*'
            (ImplicitCastExpr 0x9f51ca8 <col:18> '_Bit_type *' <LValueToRValue>
              (DeclRefExpr 0x9f51c8c <col:18> '_Bit_type *' lvalue Var 0x9f51a00 '__p' '_Bit_type *'))))))))


        void clear() (CompoundStmt 0x9f51e10 </usr/include/c++/4.6/bits/stl_bvector.h:854:5, col:33>
  (CallExpr 0x9f51df0 <col:7, col:30> '<dependent type>'
    (MemberExpr 0x9f51d60 <col:7> '<bound member function type>' ->_M_erase_at_end 0x9f3a9a0
      (CXXThisExpr 0x9f51d50 <col:7> 'vector<_Bool, type-parameter-0-0> *' this))
    (CallExpr 0x9f51dd0 <col:23, col:29> '<dependent type>'
      (UnresolvedMemberExpr 0x9f51d90 <col:23> '<bound member function type>' lvalue))))


    protected:
    protected:
        iterator _M_copy_aligned(const_iterator __first, const_iterator __last, iterator __result) (CompoundStmt 0x9f52900 </usr/include/c++/4.6/bits/stl_bvector.h:862:5, line:866:5>
  (DeclStmt 0x9f52330 <line:863:7, col:75>
    0x9f51e40 "_Bit_type *__q =
      (CallExpr 0x9f522d8 <col:24, col:74> 'unsigned long *':'unsigned long *'
        (ImplicitCastExpr 0x9f522c8 <col:24, col:29> 'unsigned long *(*)(unsigned long *, unsigned long *, unsigned long *)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9f52268 <col:24, col:29> 'unsigned long *(unsigned long *, unsigned long *, unsigned long *)' lvalue Function 0x9f521a0 'copy' 'unsigned long *(unsigned long *, unsigned long *, unsigned long *)' (FunctionTemplate 0x9b7fe20 'copy')))
        (ImplicitCastExpr 0x9f52300 <col:34, col:42> '_Bit_type *' <LValueToRValue>
          (MemberExpr 0x9f51ef0 <col:34, col:42> '_Bit_type *' lvalue ._M_p 0x9f2a170
            (ImplicitCastExpr 0x9f51ee0 <col:34> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
              (DeclRefExpr 0x9f51ec8 <col:34> 'const_iterator':'struct std::_Bit_const_iterator' lvalue ParmVar 0x9f38590 '__first' 'const_iterator':'struct std::_Bit_const_iterator'))))
        (ImplicitCastExpr 0x9f52310 <col:48, col:55> '_Bit_type *' <LValueToRValue>
          (MemberExpr 0x9f51f38 <col:48, col:55> '_Bit_type *' lvalue ._M_p 0x9f2a170
            (ImplicitCastExpr 0x9f51f28 <col:48> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
              (DeclRefExpr 0x9f51f10 <col:48> 'const_iterator':'struct std::_Bit_const_iterator' lvalue ParmVar 0x9f385d0 '__last' 'const_iterator':'struct std::_Bit_const_iterator'))))
        (ImplicitCastExpr 0x9f52320 <col:61, col:70> '_Bit_type *' <LValueToRValue>
          (MemberExpr 0x9f51f80 <col:61, col:70> '_Bit_type *' lvalue ._M_p 0x9f2a170
            (ImplicitCastExpr 0x9f51f70 <col:61> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
              (DeclRefExpr 0x9f51f58 <col:61> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9f38610 '__result' 'iterator':'struct std::_Bit_iterator')))))")
  (ReturnStmt 0x9f528f0 <line:864:7, line:865:26>
    (CXXConstructExpr 0x9f528c8 <line:864:14, line:865:26> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()' elidable
      (MaterializeTemporaryExpr 0x9f528b8 <line:864:14, line:865:26> 'const struct std::_Bit_iterator' lvalue
        (ImplicitCastExpr 0x9f528a8 <line:864:14, line:865:26> 'const struct std::_Bit_iterator' <NoOp>
          (CallExpr 0x9f527b8 <line:864:14, line:865:26> 'struct std::_Bit_iterator':'struct std::_Bit_iterator'
            (ImplicitCastExpr 0x9f527a8 <line:864:14, col:19> 'struct std::_Bit_iterator (*)(struct std::_Bit_const_iterator, struct std::_Bit_const_iterator, struct std::_Bit_iterator)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9f52748 <col:14, col:19> 'struct std::_Bit_iterator (struct std::_Bit_const_iterator, struct std::_Bit_const_iterator, struct std::_Bit_iterator)' lvalue Function 0x9f52680 'copy' 'struct std::_Bit_iterator (struct std::_Bit_const_iterator, struct std::_Bit_const_iterator, struct std::_Bit_iterator)' (FunctionTemplate 0x9b7fe20 'copy')))
            (CXXConstructExpr 0x9f52800 <col:24, col:53> 'struct std::_Bit_const_iterator':'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()' elidable
              (MaterializeTemporaryExpr 0x9f527f0 <col:24, col:53> 'const struct std::_Bit_const_iterator' lvalue
                (ImplicitCastExpr 0x9f527e0 <col:24, col:53> 'const struct std::_Bit_const_iterator' <NoOp>
                  (CXXTemporaryObjectExpr 0x9f52418 <col:24, col:53> 'const_iterator':'struct std::_Bit_const_iterator''void (_Bit_type *, unsigned int)'
                    (ImplicitCastExpr 0x9f523f8 <col:39, col:46> '_Bit_type *' <LValueToRValue>
                      (MemberExpr 0x9f523c0 <col:39, col:46> '_Bit_type *' lvalue ._M_p 0x9f2a170
                        (ImplicitCastExpr 0x9f523b0 <col:39> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
                          (DeclRefExpr 0x9f52398 <col:39> 'const_iterator':'struct std::_Bit_const_iterator' lvalue ParmVar 0x9f385d0 '__last' 'const_iterator':'struct std::_Bit_const_iterator'))))
                    (ImplicitCastExpr 0x9f52408 <col:52> 'unsigned int' <IntegralCast>
                      (IntegerLiteral 0x9f523e0 <col:52> 'int' 0))))))
            (CXXConstructExpr 0x9f52838 <col:56> 'struct std::_Bit_const_iterator':'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()'
              (ImplicitCastExpr 0x9f52828 <col:56> 'const struct std::_Bit_const_iterator' lvalue <NoOp>
                (DeclRefExpr 0x9f52448 <col:56> 'const_iterator':'struct std::_Bit_const_iterator' lvalue ParmVar 0x9f385d0 '__last' 'const_iterator':'struct std::_Bit_const_iterator')))
            (CXXConstructExpr 0x9f52880 <line:865:10, col:25> 'struct std::_Bit_iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()' elidable
              (MaterializeTemporaryExpr 0x9f52870 <col:10, col:25> 'const struct std::_Bit_iterator' lvalue
                (ImplicitCastExpr 0x9f52860 <col:10, col:25> 'const struct std::_Bit_iterator' <NoOp>
                  (CXXTemporaryObjectExpr 0x9f524b8 <col:10, col:25> 'iterator':'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
                    (ImplicitCastExpr 0x9f52498 <col:19> '_Bit_type *' <LValueToRValue>
                      (DeclRefExpr 0x9f52468 <col:19> '_Bit_type *' lvalue Var 0x9f51e40 '__q' '_Bit_type *'))
                    (ImplicitCastExpr 0x9f524a8 <col:24> 'unsigned int' <IntegralCast>
                      (IntegerLiteral 0x9f52480 <col:24> 'int' 0))))))))))))


        void _M_initialize(size_type __n) (CompoundStmt 0x9f52f78 </usr/include/c++/4.6/bits/stl_bvector.h:870:5, line:877:5>
  (DeclStmt 0x9f529e8 <line:871:7, col:46>
    0x9f52930 "_Bit_type *__q =
      (CallExpr 0x9f529c8 <col:24, col:45> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f52978 <col:24, col:30> '<dependent type>' lvalue
          (CXXThisExpr 0x9f52968 <col:24> 'vector<_Bool, type-parameter-0-0> *' this))
        (DeclRefExpr 0x9f529ac <col:42> 'size_type':'unsigned int' lvalue ParmVar 0x9f38750 '__n' 'size_type':'unsigned int'))")
  (BinaryOperator 0x9f52c58 <line:872:7, line:874:29> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x9f52a40 <line:872:7, col:21> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9f52a08 <col:7, col:13> '<dependent type>' lvalue
        (CXXThisExpr 0x9f529f8 <col:7> 'vector<_Bool, type-parameter-0-0> *' this)))
    (ParenExpr 0x9f52c40 <col:41, line:874:29> '_Bit_type *'
      (BinaryOperator 0x9f52c28 <line:872:42, line:874:28> '_Bit_type *' '+'
        (ImplicitCastExpr 0x9f52c18 <line:872:42> '_Bit_type *' <LValueToRValue>
          (DeclRefExpr 0x9f52a74 <col:42> '_Bit_type *' lvalue Var 0x9f52930 '__q' '_Bit_type *'))
        (ParenExpr 0x9f52c00 <line:873:9, line:874:28> 'unsigned int'
          (BinaryOperator 0x9f52be8 <line:873:10, line:874:27> 'unsigned int' '/'
            (ParenExpr 0x9f52b70 <line:873:10, col:37> 'unsigned int'
              (BinaryOperator 0x9f52b58 <col:11, col:36> 'unsigned int' '-'
                (BinaryOperator 0x9f52b18 <col:11, col:32> 'unsigned int' '+'
                  (ImplicitCastExpr 0x9f52af8 <col:11> 'size_type':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0x9f52a8c <col:11> 'size_type':'unsigned int' lvalue ParmVar 0x9f38750 '__n' 'size_type':'unsigned int'))
                  (ImplicitCastExpr 0x9f52b08 <col:17, col:32> 'unsigned int' <IntegralCast>
                    (CXXFunctionalCastExpr 0x9f52ae0 <col:17, col:32> 'int' functional cast to int <NoOp>
                      (ImplicitCastExpr 0x9f52ad0 <col:21> 'int' <IntegralCast>
                        (DeclRefExpr 0x9f52ab4 <col:21> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x9f286d0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))
                (ImplicitCastExpr 0x9f52b48 <col:36> 'unsigned int' <IntegralCast>
                  (IntegerLiteral 0x9f52b30 <col:36> 'int' 1))))
            (ImplicitCastExpr 0x9f52bd8 <line:874:12, col:27> 'unsigned int' <IntegralCast>
              (CXXFunctionalCastExpr 0x9f52bc0 <col:12, col:27> 'int' functional cast to int <NoOp>
                (ImplicitCastExpr 0x9f52bb0 <col:16> 'int' <IntegralCast>
                  (DeclRefExpr 0x9f52b94 <col:16> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x9f286d0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))))))
  (BinaryOperator 0x9f52d78 <line:875:7, col:47> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x9f52cb8 <col:7, col:21> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9f52c80 <col:7, col:13> '<dependent type>' lvalue
        (CXXThisExpr 0x9f52c70 <col:7> 'vector<_Bool, type-parameter-0-0> *' this)))
    (CXXTemporaryObjectExpr 0x9f52d48 <col:32, col:47> 'iterator':'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
      (ImplicitCastExpr 0x9f52d28 <col:41> '_Bit_type *' <LValueToRValue>
        (DeclRefExpr 0x9f52cf8 <col:41> '_Bit_type *' lvalue Var 0x9f52930 '__q' '_Bit_type *'))
      (ImplicitCastExpr 0x9f52d38 <col:46> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0x9f52d10 <col:46> 'int' 0))))
  (BinaryOperator 0x9f52f60 <line:876:7, col:77> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x9f52dd8 <col:7, col:21> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9f52da0 <col:7, col:13> '<dependent type>' lvalue
        (CXXThisExpr 0x9f52d90 <col:7> 'vector<_Bool, type-parameter-0-0> *' this)))
    (CXXOperatorCallExpr 0x9f52f38 <col:33, col:77> '<dependent type>'
      (UnresolvedLookupExpr 0x9f52ee8 <col:56, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9ce1500 0x9ce2100 0x9cb8030 0x9cb8830 0x9f2fb40 0x9f31cc0)
      (CXXDependentScopeMemberExpr 0x9f52e58 <col:33, col:47> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0x9f52e20 <col:33, col:39> '<dependent type>' lvalue
          (CXXThisExpr 0x9f52e10 <col:33> 'vector<_Bool, type-parameter-0-0> *' this)))
      (CXXFunctionalCastExpr 0x9f52ed0 <col:58, col:77> 'difference_type':'int' functional cast to difference_type <NoOp>
        (ImplicitCastExpr 0x9f52ec0 <col:74> 'difference_type':'int' <IntegralCast>
          (ImplicitCastExpr 0x9f52eb0 <col:74> 'size_type':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0x9f52e98 <col:74> 'size_type':'unsigned int' lvalue ParmVar 0x9f38750 '__n' 'size_type':'unsigned int')))))))


        template <typename _Integer> void _M_initialize_dispatch(_Integer __n, _Integer __x, std::__true_type) (CompoundStmt 0x9f53260 </usr/include/c++/4.6/bits/stl_bvector.h:886:7, line:890:7>
  (CallExpr 0x9f53000 <line:887:2, col:43> '<dependent type>'
    (MemberExpr 0x9f52fa8 <col:2> '<bound member function type>' ->_M_initialize 0x9f387a0
      (CXXThisExpr 0x9f52f98 <col:2> 'vector<_Bool, type-parameter-0-0> *' this))
    (CXXStaticCastExpr 0x9f52fe8 <col:16, col:42> 'size_type':'unsigned int' static_cast<size_type> <Dependent>
      (DeclRefExpr 0x9f52fc8 <col:39> '_Integer' lvalue ParmVar 0x9f38870 '__n' '_Integer')))
  (CallExpr 0x9f53238 <line:888:2, line:889:50> '<dependent type>'
    (UnresolvedLookupExpr 0x9f53048 <line:888:2, col:7> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b88110 0x9f32370)
    (CXXDependentScopeMemberExpr 0x9f53100 <col:12, col:35> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9f530c8 <col:12, col:26> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0x9f53090 <col:12, col:18> '<dependent type>' lvalue
          (CXXThisExpr 0x9f53080 <col:12> 'vector<_Bool, type-parameter-0-0> *' this))))
    (CXXDependentScopeMemberExpr 0x9f53180 <line:889:5, col:19> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9f53148 <col:5, col:11> '<dependent type>' lvalue
        (CXXThisExpr 0x9f53138 <col:5> 'vector<_Bool, type-parameter-0-0> *' this)))
    (ConditionalOperator 0x9f53218 <col:38, col:49> 'int'
      (DeclRefExpr 0x9f531b4 <col:38> '_Integer' lvalue ParmVar 0x9f388b0 '__x' '_Integer')
      (UnaryOperator 0x9f531e8 <col:44, col:45> 'int' prefix '~'
        (IntegerLiteral 0x9f531d0 <col:45> 'int' 0))
      (IntegerLiteral 0x9f53200 <col:49> 'int' 0))))

;
        template <typename _InputIterator> void _M_initialize_dispatch(_InputIterator __first, _InputIterator __last, std::__false_type) (CompoundStmt 0x9f533a8 </usr/include/c++/4.6/bits/stl_bvector.h:896:7, line:897:44>
  (CallExpr 0x9f53380 <line:896:9, line:897:41> '<dependent type>'
    (UnresolvedMemberExpr 0x9f53288 <line:896:9> '<bound member function type>' lvalue)
    (DeclRefExpr 0x9f532c8 <col:29> '_InputIterator' lvalue ParmVar 0x9f38a80 '__first' '_InputIterator')
    (DeclRefExpr 0x9f532e0 <col:38> '_InputIterator' lvalue ParmVar 0x9f38ac0 '__last' '_InputIterator')
    (CallExpr 0x9f53360 <line:897:8, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0x9f53310 <col:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b4aed0)
      (DeclRefExpr 0x9f53344 <col:33> '_InputIterator' lvalue ParmVar 0x9f38a80 '__first' '_InputIterator'))))

;
        template <typename _InputIterator> void _M_initialize_range(_InputIterator __first, _InputIterator __last, std::input_iterator_tag) (CompoundStmt 0x9f53550 </usr/include/c++/4.6/bits/stl_bvector.h:903:7, line:906:7>
  (ForStmt 0x9f53528 <line:904:2, line:905:22>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9f53450 <line:904:9, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0x9f533f0 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b412d0 0x9ac7fa0 0x9b5e2b0 0x9ba7d20 0x9bc7160 0x9bc74d0 0x9cbb090 0x9cbb590 0x9cbbad0 0x9db08a0 0x9f26e60)
      (DeclRefExpr 0x9f533bc <col:9> '_InputIterator' lvalue ParmVar 0x9f38c90 '__first' '_InputIterator')
      (DeclRefExpr 0x9f533d4 <col:20> '_InputIterator' lvalue ParmVar 0x9f38cd0 '__last' '_InputIterator'))
    (UnaryOperator 0x9f53490 <col:28, col:30> '<dependent type>' prefix '++'
      (DeclRefExpr 0x9f53474 <col:30> '_InputIterator' lvalue ParmVar 0x9f38c90 '__first' '_InputIterator'))
    (CallExpr 0x9f53508 <line:905:4, col:22> '<dependent type>'
      (MemberExpr 0x9f534b8 <col:4> '<bound member function type>' ->push_back 0x9f377f0
        (CXXThisExpr 0x9f534a8 <col:4> 'vector<_Bool, type-parameter-0-0> *' this))
      (UnaryOperator 0x9f534f0 <col:14, col:15> '<dependent type>' prefix '*'
        (DeclRefExpr 0x9f534d8 <col:15> '_InputIterator' lvalue ParmVar 0x9f38c90 '__first' '_InputIterator')))))

;
        template <typename _ForwardIterator> void _M_initialize_range(_ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag) (CompoundStmt 0x9f53800 </usr/include/c++/4.6/bits/stl_bvector.h:912:7, line:916:7>
  (DeclStmt 0x9f53650 <line:913:2, col:54>
    0x9f53570 "const size_type __n =
      (CallExpr 0x9f53628 <col:24, col:53> '<dependent type>'
        (UnresolvedLookupExpr 0x9f535c0 <col:24, col:29> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b4eac0)
        (DeclRefExpr 0x9f535f4 <col:38> '_ForwardIterator' lvalue ParmVar 0x9f38ee0 '__first' '_ForwardIterator')
        (DeclRefExpr 0x9f5360c <col:47> '_ForwardIterator' lvalue ParmVar 0x9f38f20 '__last' '_ForwardIterator'))")
  (CallExpr 0x9f536a8 <line:914:2, col:19> '<dependent type>'
    (MemberExpr 0x9f53670 <col:2> '<bound member function type>' ->_M_initialize 0x9f387a0
      (CXXThisExpr 0x9f53660 <col:2> 'vector<_Bool, type-parameter-0-0> *' this))
    (DeclRefExpr 0x9f53690 <col:16> 'const size_type':'const unsigned int' lvalue Var 0x9f53570 '__n' 'const size_type':'const unsigned int'))
  (CallExpr 0x9f537d8 <line:915:2, col:51> '<dependent type>'
    (UnresolvedLookupExpr 0x9f536f0 <col:2, col:7> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b7fe20 0x9db46a0)
    (DeclRefExpr 0x9f53728 <col:12> '_ForwardIterator' lvalue ParmVar 0x9f38ee0 '__first' '_ForwardIterator')
    (DeclRefExpr 0x9f53740 <col:21> '_ForwardIterator' lvalue ParmVar 0x9f38f20 '__last' '_ForwardIterator')
    (CXXDependentScopeMemberExpr 0x9f537a0 <col:29, col:43> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9f53768 <col:29, col:35> '<dependent type>' lvalue
        (CXXThisExpr 0x9f53758 <col:29> 'vector<_Bool, type-parameter-0-0> *' this)))))

;
        template <typename _Integer> void _M_assign_dispatch(_Integer __n, _Integer __val, std::__true_type) (CompoundStmt 0x9f538a8 </usr/include/c++/4.6/bits/stl_bvector.h:923:7, col:37>
  (CallExpr 0x9f53880 <col:9, col:34> '<dependent type>'
    (MemberExpr 0x9f53830 <col:9> '<bound member function type>' ->_M_fill_assign 0x9f395b0
      (CXXThisExpr 0x9f53820 <col:9> 'vector<_Bool, type-parameter-0-0> *' this))
    (DeclRefExpr 0x9f53850 <col:24> '_Integer' lvalue ParmVar 0x9f39130 '__n' '_Integer')
    (DeclRefExpr 0x9f53868 <col:29> '_Integer' lvalue ParmVar 0x9f39170 '__val' '_Integer')))

;
        template <class _InputIterator> void _M_assign_dispatch(_InputIterator __first, _InputIterator __last, std::__false_type) (CompoundStmt 0x9f539f0 </usr/include/c++/4.6/bits/stl_bvector.h:929:7, col:76>
  (CallExpr 0x9f539c8 <col:9, col:73> '<dependent type>'
    (UnresolvedMemberExpr 0x9f538d0 <col:9> '<bound member function type>' lvalue)
    (DeclRefExpr 0x9f53910 <col:23> '_InputIterator' lvalue ParmVar 0x9f39340 '__first' '_InputIterator')
    (DeclRefExpr 0x9f53928 <col:32> '_InputIterator' lvalue ParmVar 0x9f39380 '__last' '_InputIterator')
    (CallExpr 0x9f539a8 <col:40, col:72> '<dependent type>'
      (UnresolvedLookupExpr 0x9f53958 <col:40, col:45> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b4aed0)
      (DeclRefExpr 0x9f5398c <col:65> '_InputIterator' lvalue ParmVar 0x9f39340 '__first' '_InputIterator'))))

;
        void _M_fill_assign(size_t __n, bool __x) (CompoundStmt 0x9f542f8 </usr/include/c++/4.6/bits/stl_bvector.h:933:5, line:946:5>
  (IfStmt 0x9f542d8 <line:934:7, line:945:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9f53ac0 <line:934:11, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0x9f53a70 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b42c70 0x9ac83c0 0x9b5e730 0x9cbd1f0 0x9cbd720 0x9cbdc50 0x9f273d0)
      (DeclRefExpr 0x9f53a04 <col:11> 'size_t':'unsigned int' lvalue ParmVar 0x9f394f0 '__n' 'size_t':'unsigned int')
      (CallExpr 0x9f53a50 <col:17, col:22> '<dependent type>'
        (MemberExpr 0x9f53a30 <col:17> '<bound member function type>' ->size 0x9f36c60
          (CXXThisExpr 0x9f53a20 <col:17> 'vector<_Bool, type-parameter-0-0> *' this))))
    (CompoundStmt 0x9f53f08 <line:935:2, line:939:2>
      (CallExpr 0x9f53d08 <line:936:4, line:937:52> '<dependent type>'
        (UnresolvedLookupExpr 0x9f53b08 <line:936:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b88110 0x9f32370)
        (CXXDependentScopeMemberExpr 0x9f53bc0 <col:14, col:37> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9f53b88 <col:14, col:28> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x9f53b50 <col:14, col:20> '<dependent type>' lvalue
              (CXXThisExpr 0x9f53b40 <col:14> 'vector<_Bool, type-parameter-0-0> *' this))))
        (CXXDependentScopeMemberExpr 0x9f53c40 <line:937:7, col:21> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9f53c08 <col:7, col:13> '<dependent type>' lvalue
            (CXXThisExpr 0x9f53bf8 <col:7> 'vector<_Bool, type-parameter-0-0> *' this)))
        (ConditionalOperator 0x9f53ce8 <col:40, col:51> 'int'
          (ImplicitCastExpr 0x9f53cd8 <col:40> '_Bool' <LValueToRValue>
            (DeclRefExpr 0x9f53c74 <col:40> '_Bool' lvalue ParmVar 0x9f39530 '__x' '_Bool'))
          (UnaryOperator 0x9f53ca8 <col:46, col:47> 'int' prefix '~'
            (IntegerLiteral 0x9f53c90 <col:47> 'int' 0))
          (IntegerLiteral 0x9f53cc0 <col:51> 'int' 0)))
      (CallExpr 0x9f53ee0 <line:938:4, col:35> '<dependent type>'
        (UnresolvedMemberExpr 0x9f53d40 <col:4> '<bound member function type>' lvalue)
        (CallExpr 0x9f53dd8 <col:11, col:15> '<dependent type>'
          (UnresolvedMemberExpr 0x9f53d98 <col:11> '<bound member function type>' lvalue))
        (CXXOperatorCallExpr 0x9f53ea0 <col:18, col:29> '<dependent type>'
          (UnresolvedLookupExpr 0x9f53e60 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590 0x9f2d6a0)
          (DeclRefExpr 0x9f53df4 <col:18> 'size_t':'unsigned int' lvalue ParmVar 0x9f394f0 '__n' 'size_t':'unsigned int')
          (CallExpr 0x9f53e40 <col:24, col:29> '<dependent type>'
            (MemberExpr 0x9f53e20 <col:24> '<bound member function type>' ->size 0x9f36c60
              (CXXThisExpr 0x9f53e10 <col:24> 'vector<_Bool, type-parameter-0-0> *' this))))
        (DeclRefExpr 0x9f53ec4 <col:32> '_Bool' lvalue ParmVar 0x9f39530 '__x' '_Bool')))
    (CompoundStmt 0x9f542c0 <line:941:2, line:945:2>
      (CallExpr 0x9f54050 <line:942:4, col:33> '<dependent type>'
        (MemberExpr 0x9f53f30 <col:4> '<bound member function type>' ->_M_erase_at_end 0x9f3a9a0
          (CXXThisExpr 0x9f53f20 <col:4> 'vector<_Bool, type-parameter-0-0> *' this))
        (CXXOperatorCallExpr 0x9f54028 <col:20, col:30> '<dependent type>'
          (UnresolvedLookupExpr 0x9f53fd8 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9ce1500 0x9ce2100 0x9cb8030 0x9cb8830 0x9f2fb40 0x9f31cc0)
          (CallExpr 0x9f53fa0 <col:20, col:26> '<dependent type>'
            (UnresolvedMemberExpr 0x9f53f60 <col:20> '<bound member function type>' lvalue))
          (DeclRefExpr 0x9f53fbc <col:30> 'size_t':'unsigned int' lvalue ParmVar 0x9f394f0 '__n' 'size_t':'unsigned int')))
      (CallExpr 0x9f54298 <line:943:4, line:944:52> '<dependent type>'
        (UnresolvedLookupExpr 0x9f54098 <line:943:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b88110 0x9f32370)
        (CXXDependentScopeMemberExpr 0x9f54150 <col:14, col:37> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9f54118 <col:14, col:28> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x9f540e0 <col:14, col:20> '<dependent type>' lvalue
              (CXXThisExpr 0x9f540d0 <col:14> 'vector<_Bool, type-parameter-0-0> *' this))))
        (CXXDependentScopeMemberExpr 0x9f541d0 <line:944:7, col:21> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9f54198 <col:7, col:13> '<dependent type>' lvalue
            (CXXThisExpr 0x9f54188 <col:7> 'vector<_Bool, type-parameter-0-0> *' this)))
        (ConditionalOperator 0x9f54278 <col:40, col:51> 'int'
          (ImplicitCastExpr 0x9f54268 <col:40> '_Bool' <LValueToRValue>
            (DeclRefExpr 0x9f54204 <col:40> '_Bool' lvalue ParmVar 0x9f39530 '__x' '_Bool'))
          (UnaryOperator 0x9f54238 <col:46, col:47> 'int' prefix '~'
            (IntegerLiteral 0x9f54220 <col:47> 'int' 0))
          (IntegerLiteral 0x9f54250 <col:51> 'int' 0))))))


        template <typename _InputIterator> void _M_assign_aux(_InputIterator __first, _InputIterator __last, std::input_iterator_tag) (CompoundStmt 0x9f549a0 </usr/include/c++/4.6/bits/stl_bvector.h:952:7, line:960:7>
  (DeclStmt 0x9f543c8 <line:953:2, col:26>
    0x9f54320 "iterator __cur =
      (CallExpr 0x9f543a8 <col:19, col:25> '<dependent type>'
        (UnresolvedMemberExpr 0x9f54368 <col:19> '<bound member function type>' lvalue))")
  (ForStmt 0x9f54718 <line:954:2, line:955:14>
    <<<NULL>>>
    <<<NULL>>>
    (BinaryOperator 0x9f545a0 <line:954:9, col:43> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x9f54468 <col:9, col:20> '<dependent type>'
        (UnresolvedLookupExpr 0x9f54408 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b412d0 0x9ac7fa0 0x9b5e2b0 0x9ba7d20 0x9bc7160 0x9bc74d0 0x9cbb090 0x9cbb590 0x9cbbad0 0x9db08a0 0x9f26e60)
        (DeclRefExpr 0x9f543d8 <col:9> '_InputIterator' lvalue ParmVar 0x9f39680 '__first' '_InputIterator')
        (DeclRefExpr 0x9f543f0 <col:20> '_InputIterator' lvalue ParmVar 0x9f396c0 '__last' '_InputIterator'))
      (CXXOperatorCallExpr 0x9f54578 <col:30, col:43> '<dependent type>'
        (UnresolvedLookupExpr 0x9f54518 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b412d0 0x9ac7fa0 0x9b5e2b0 0x9ba7d20 0x9bc7160 0x9bc74d0 0x9cbb090 0x9cbb590 0x9cbbad0 0x9db08a0 0x9f26e60)
        (DeclRefExpr 0x9f5448c <col:30> 'iterator':'struct std::_Bit_iterator' lvalue Var 0x9f54320 '__cur' 'iterator':'struct std::_Bit_iterator')
        (CallExpr 0x9f544f8 <col:39, col:43> '<dependent type>'
          (UnresolvedMemberExpr 0x9f544b8 <col:39> '<bound member function type>' lvalue))))
    (BinaryOperator 0x9f54648 <col:46, col:57> '<dependent type>' ','
      (CXXOperatorCallExpr 0x9f545f8 <col:46, col:48> 'iterator':'struct std::_Bit_iterator' lvalue
        (ImplicitCastExpr 0x9f545e8 <<invalid sloc>> 'iterator &(*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9f545d0 <<invalid sloc>> 'iterator &(void)' lvalue CXXMethod 0x9f2dea0 'operator++' 'iterator &(void)'))
        (DeclRefExpr 0x9f545b8 <col:48> 'iterator':'struct std::_Bit_iterator' lvalue Var 0x9f54320 '__cur' 'iterator':'struct std::_Bit_iterator'))
      (UnaryOperator 0x9f54630 <col:55, col:57> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9f54618 <col:57> '_InputIterator' lvalue ParmVar 0x9f39680 '__first' '_InputIterator')))
    (BinaryOperator 0x9f54700 <line:955:4, col:14> '<dependent type>' '='
      (CXXOperatorCallExpr 0x9f546b0 <col:4, col:5> 'reference':'struct std::_Bit_reference'
        (ImplicitCastExpr 0x9f546a0 <<invalid sloc>> 'reference (*)(void) const' <FunctionToPointerDecay>
          (DeclRefExpr 0x9f54688 <<invalid sloc>> 'reference (void) const' lvalue CXXMethod 0x9f2dda0 'operator*' 'reference (void) const'))
        (ImplicitCastExpr 0x9f54678 <col:5> 'const struct std::_Bit_iterator' lvalue <NoOp>
          (DeclRefExpr 0x9f54660 <col:5> 'iterator':'struct std::_Bit_iterator' lvalue Var 0x9f54320 '__cur' 'iterator':'struct std::_Bit_iterator')))
      (UnaryOperator 0x9f546e8 <col:13, col:14> '<dependent type>' prefix '*'
        (DeclRefExpr 0x9f546d0 <col:14> '_InputIterator' lvalue ParmVar 0x9f39680 '__first' '_InputIterator'))))
  (IfStmt 0x9f54980 <line:956:2, line:959:33>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9f547d0 <line:956:6, col:17> '<dependent type>'
      (UnresolvedLookupExpr 0x9f54770 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90 0x9cb91e0 0x9cb9c50 0x9cba490 0x9cbaa00 0x9db0390 0x9f25fa0)
      (DeclRefExpr 0x9f5473c <col:6> '_InputIterator' lvalue ParmVar 0x9f39680 '__first' '_InputIterator')
      (DeclRefExpr 0x9f54754 <col:17> '_InputIterator' lvalue ParmVar 0x9f396c0 '__last' '_InputIterator'))
    (CallExpr 0x9f54840 <line:957:4, col:25> '<dependent type>'
      (MemberExpr 0x9f54808 <col:4> '<bound member function type>' ->_M_erase_at_end 0x9f3a9a0
        (CXXThisExpr 0x9f547f8 <col:4> 'vector<_Bool, type-parameter-0-0> *' this))
      (DeclRefExpr 0x9f54828 <col:20> 'iterator':'struct std::_Bit_iterator' lvalue Var 0x9f54320 '__cur' 'iterator':'struct std::_Bit_iterator'))
    (CallExpr 0x9f54958 <line:959:4, col:33> '<dependent type>'
      (UnresolvedMemberExpr 0x9f54870 <col:4> '<bound member function type>' lvalue)
      (CallExpr 0x9f54908 <col:11, col:15> '<dependent type>'
        (UnresolvedMemberExpr 0x9f548c8 <col:11> '<bound member function type>' lvalue))
      (DeclRefExpr 0x9f54924 <col:18> '_InputIterator' lvalue ParmVar 0x9f39680 '__first' '_InputIterator')
      (DeclRefExpr 0x9f5493c <col:27> '_InputIterator' lvalue ParmVar 0x9f396c0 '__last' '_InputIterator'))))

;
        template <typename _ForwardIterator> void _M_assign_aux(_ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag) (CompoundStmt 0x9f550e0 </usr/include/c++/4.6/bits/stl_bvector.h:966:7, line:977:7>
  (DeclStmt 0x9f54ab0 <line:967:2, col:56>
    0x9f549d0 "const size_type __len =
      (CallExpr 0x9f54a88 <col:26, col:55> '<dependent type>'
        (UnresolvedLookupExpr 0x9f54a20 <col:26, col:31> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b4eac0)
        (DeclRefExpr 0x9f54a54 <col:40> '_ForwardIterator' lvalue ParmVar 0x9f398b0 '__first' '_ForwardIterator')
        (DeclRefExpr 0x9f54a6c <col:49> '_ForwardIterator' lvalue ParmVar 0x9f398f0 '__last' '_ForwardIterator'))")
  (IfStmt 0x9f550c0 <line:968:2, line:976:4>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9f54b78 <line:968:6, col:19> '<dependent type>'
      (UnresolvedLookupExpr 0x9f54b28 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40ad0 0x9b57c70 0x9b5ddb0 0x9cbc120 0x9cbc650 0x9cbcb80 0x9f26790)
      (DeclRefExpr 0x9f54ac0 <col:6> 'const size_type':'const unsigned int' lvalue Var 0x9f549d0 '__len' 'const size_type':'const unsigned int')
      (CallExpr 0x9f54b08 <col:14, col:19> '<dependent type>'
        (MemberExpr 0x9f54ae8 <col:14> '<bound member function type>' ->size 0x9f36c60
          (CXXThisExpr 0x9f54ad8 <col:14> 'vector<_Bool, type-parameter-0-0> *' this))))
    (CallExpr 0x9f54ce8 <line:969:4, col:55> '<dependent type>'
      (MemberExpr 0x9f54bb0 <col:4> '<bound member function type>' ->_M_erase_at_end 0x9f3a9a0
        (CXXThisExpr 0x9f54ba0 <col:4> 'vector<_Bool, type-parameter-0-0> *' this))
      (CallExpr 0x9f54cc0 <col:20, col:54> '<dependent type>'
        (UnresolvedLookupExpr 0x9f54be8 <col:20, col:25> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b7fe20 0x9db46a0)
        (DeclRefExpr 0x9f54c20 <col:30> '_ForwardIterator' lvalue ParmVar 0x9f398b0 '__first' '_ForwardIterator')
        (DeclRefExpr 0x9f54c38 <col:39> '_ForwardIterator' lvalue ParmVar 0x9f398f0 '__last' '_ForwardIterator')
        (CallExpr 0x9f54ca0 <col:47, col:53> '<dependent type>'
          (UnresolvedMemberExpr 0x9f54c60 <col:47> '<bound member function type>' lvalue))))
    (CompoundStmt 0x9f550a0 <line:971:4, line:976:4>
      (DeclStmt 0x9f54d60 <line:972:6, col:38>
        0x9f54d10 "_ForwardIterator __mid =
          (DeclRefExpr 0x9f54d44 <col:31> '_ForwardIterator' lvalue ParmVar 0x9f398b0 '__first' '_ForwardIterator')")
      (CallExpr 0x9f54e38 <line:973:6, col:32> '<dependent type>'
        (UnresolvedLookupExpr 0x9f54d98 <col:6, col:11> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b51250)
        (DeclRefExpr 0x9f54dcc <col:19> '_ForwardIterator' lvalue Var 0x9f54d10 '__mid' '_ForwardIterator')
        (CallExpr 0x9f54e18 <col:26, col:31> '<dependent type>'
          (MemberExpr 0x9f54df8 <col:26> '<bound member function type>' ->size 0x9f36c60
            (CXXThisExpr 0x9f54de8 <col:26> 'vector<_Bool, type-parameter-0-0> *' this))))
      (CallExpr 0x9f54f58 <line:974:6, col:39> '<dependent type>'
        (UnresolvedLookupExpr 0x9f54e80 <col:6, col:11> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b7fe20 0x9db46a0)
        (DeclRefExpr 0x9f54eb8 <col:16> '_ForwardIterator' lvalue ParmVar 0x9f398b0 '__first' '_ForwardIterator')
        (DeclRefExpr 0x9f54ed0 <col:25> '_ForwardIterator' lvalue Var 0x9f54d10 '__mid' '_ForwardIterator')
        (CallExpr 0x9f54f38 <col:32, col:38> '<dependent type>'
          (UnresolvedMemberExpr 0x9f54ef8 <col:32> '<bound member function type>' lvalue)))
      (CallExpr 0x9f55078 <line:975:6, col:33> '<dependent type>'
        (UnresolvedMemberExpr 0x9f54f90 <col:6> '<bound member function type>' lvalue)
        (CallExpr 0x9f55028 <col:13, col:17> '<dependent type>'
          (UnresolvedMemberExpr 0x9f54fe8 <col:13> '<bound member function type>' lvalue))
        (DeclRefExpr 0x9f55044 <col:20> '_ForwardIterator' lvalue Var 0x9f54d10 '__mid' '_ForwardIterator')
        (DeclRefExpr 0x9f5505c <col:27> '_ForwardIterator' lvalue ParmVar 0x9f398f0 '__last' '_ForwardIterator')))))

;
        template <typename _Integer> void _M_insert_dispatch(iterator __pos, _Integer __n, _Integer __x, std::__true_type) (CompoundStmt 0x9f55198 </usr/include/c++/4.6/bits/stl_bvector.h:987:7, col:42>
  (CallExpr 0x9f55170 <col:9, col:39> '<dependent type>'
    (MemberExpr 0x9f55108 <col:9> '<bound member function type>' ->_M_fill_insert 0x9f3a0c0
      (CXXThisExpr 0x9f550f8 <col:9> 'vector<_Bool, type-parameter-0-0> *' this))
    (DeclRefExpr 0x9f55128 <col:24> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9f39ae0 '__pos' 'iterator':'struct std::_Bit_iterator')
    (DeclRefExpr 0x9f55140 <col:31> '_Integer' lvalue ParmVar 0x9f39b20 '__n' '_Integer')
    (DeclRefExpr 0x9f55158 <col:36> '_Integer' lvalue ParmVar 0x9f39b60 '__x' '_Integer')))

;
        template <typename _InputIterator> void _M_insert_dispatch(iterator __pos, _InputIterator __first, _InputIterator __last, std::__false_type) (CompoundStmt 0x9f55300 </usr/include/c++/4.6/bits/stl_bvector.h:994:7, line:995:40>
  (CallExpr 0x9f552d0 <line:994:9, line:995:37> '<dependent type>'
    (UnresolvedMemberExpr 0x9f551c0 <line:994:9> '<bound member function type>' lvalue)
    (DeclRefExpr 0x9f55200 <col:25> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9f39d60 '__pos' 'iterator':'struct std::_Bit_iterator')
    (DeclRefExpr 0x9f55218 <col:32> '_InputIterator' lvalue ParmVar 0x9f39da0 '__first' '_InputIterator')
    (DeclRefExpr 0x9f55230 <col:41> '_InputIterator' lvalue ParmVar 0x9f39de0 '__last' '_InputIterator')
    (CallExpr 0x9f552b0 <line:995:4, col:36> '<dependent type>'
      (UnresolvedLookupExpr 0x9f55260 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b4aed0)
      (DeclRefExpr 0x9f55294 <col:29> '_InputIterator' lvalue ParmVar 0x9f39da0 '__first' '_InputIterator'))))

;
        void _M_fill_insert(iterator __position, size_type __n, bool __x);
        template <typename _InputIterator> void _M_insert_range(iterator __pos, _InputIterator __first, _InputIterator __last, std::input_iterator_tag) (CompoundStmt 0x9f55598 </usr/include/c++/4.6/bits/stl_bvector.h:1004:7, line:1010:7>
  (ForStmt 0x9f55570 <line:1005:2, line:1009:4>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9f553a8 <line:1005:9, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0x9f55348 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b412d0 0x9ac7fa0 0x9b5e2b0 0x9ba7d20 0x9bc7160 0x9bc74d0 0x9cbb090 0x9cbb590 0x9cbbad0 0x9db08a0 0x9f26e60)
      (DeclRefExpr 0x9f55314 <col:9> '_InputIterator' lvalue ParmVar 0x9f3a1d0 '__first' '_InputIterator')
      (DeclRefExpr 0x9f5532c <col:20> '_InputIterator' lvalue ParmVar 0x9f3a210 '__last' '_InputIterator'))
    (UnaryOperator 0x9f553e8 <col:28, col:30> '<dependent type>' prefix '++'
      (DeclRefExpr 0x9f553cc <col:30> '_InputIterator' lvalue ParmVar 0x9f3a1d0 '__first' '_InputIterator'))
    (CompoundStmt 0x9f55558 <line:1006:4, line:1009:4>
      (BinaryOperator 0x9f554e0 <line:1007:6, col:36> '<dependent type>' '='
        (DeclRefExpr 0x9f553fc <col:6> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9f3a190 '__pos' 'iterator':'struct std::_Bit_iterator')
        (CallExpr 0x9f554b8 <col:14, col:36> '<dependent type>'
          (UnresolvedMemberExpr 0x9f55428 <col:14> '<bound member function type>' lvalue)
          (DeclRefExpr 0x9f5546c <col:21> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9f3a190 '__pos' 'iterator':'struct std::_Bit_iterator')
          (UnaryOperator 0x9f554a0 <col:28, col:29> '<dependent type>' prefix '*'
            (DeclRefExpr 0x9f55484 <col:29> '_InputIterator' lvalue ParmVar 0x9f3a1d0 '__first' '_InputIterator'))))
      (CXXOperatorCallExpr 0x9f55538 <line:1008:6, col:8> 'iterator':'struct std::_Bit_iterator' lvalue
        (ImplicitCastExpr 0x9f55528 <<invalid sloc>> 'iterator &(*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9f55510 <<invalid sloc>> 'iterator &(void)' lvalue CXXMethod 0x9f2dea0 'operator++' 'iterator &(void)'))
        (DeclRefExpr 0x9f554f8 <col:8> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9f3a190 '__pos' 'iterator':'struct std::_Bit_iterator')))))

;
        template <typename _ForwardIterator> void _M_insert_range(iterator __position, _ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag);
        void _M_insert_aux(iterator __position, bool __x);
        size_type _M_check_len(size_type __n, const char *__s) const (CompoundStmt 0x9f55ca8 </usr/include/c++/4.6/bits/stl_bvector.h:1022:5, line:1028:5>
  (IfStmt 0x9f55808 <line:1023:7, line:1024:31>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9f55720 <line:1023:11, col:33> '<dependent type>'
      (UnresolvedLookupExpr 0x9f556d0 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40ad0 0x9b57c70 0x9b5ddb0 0x9cbc120 0x9cbc650 0x9cbcb80 0x9f26790)
      (CXXOperatorCallExpr 0x9f55690 <col:11, col:29> '<dependent type>'
        (UnresolvedLookupExpr 0x9f55650 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590 0x9f2d6a0)
        (CallExpr 0x9f555e0 <col:11, col:20> '<dependent type>'
          (MemberExpr 0x9f555c0 <col:11> '<bound member function type>' ->max_size 0x9f36ce0
            (CXXThisExpr 0x9f555b0 <col:11> 'const vector<_Bool, type-parameter-0-0> *' this)))
        (CallExpr 0x9f55630 <col:24, col:29> '<dependent type>'
          (MemberExpr 0x9f55610 <col:24> '<bound member function type>' ->size 0x9f36c60
            (CXXThisExpr 0x9f55600 <col:24> 'const vector<_Bool, type-parameter-0-0> *' this))))
      (DeclRefExpr 0x9f556b4 <col:33> 'size_type':'unsigned int' lvalue ParmVar 0x9f3a7c0 '__n' 'size_type':'unsigned int'))
    (CallExpr 0x9f557d8 <line:1024:2, col:31> 'void'
      (ImplicitCastExpr 0x9f557c8 <col:2> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x9f557ac <col:2> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9b0bcc0 '__throw_length_error' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0x9f557f8 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <LValueToRValue>
        (ParenExpr 0x9f55798 <col:24, col:30> 'const char *' lvalue
          (DeclRefExpr 0x9f5577c </usr/include/c++/4.6/bits/stl_bvector.h:1024:27> 'const char *' lvalue ParmVar 0x9f3a810 '__s' 'const char *'))))
    <<<NULL>>>)
  (DeclStmt 0x9f55a10 <line:1026:7, col:61>
    0x9f55830 "const size_type __len =
      (CXXOperatorCallExpr 0x9f559e8 <col:31, col:60> '<dependent type>'
        (UnresolvedLookupExpr 0x9f55998 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9ce1500 0x9ce2100 0x9cb8030 0x9cb8830 0x9f2fb40 0x9f31cc0)
        (CallExpr 0x9f55898 <col:31, col:36> '<dependent type>'
          (MemberExpr 0x9f55878 <col:31> '<bound member function type>' ->size 0x9f36c60
            (CXXThisExpr 0x9f55868 <col:31> 'const vector<_Bool, type-parameter-0-0> *' this)))
        (CallExpr 0x9f55970 <col:40, col:60> '<dependent type>'
          (UnresolvedLookupExpr 0x9f558d0 <col:40, col:45> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b76750 0x9b76ec0)
          (CallExpr 0x9f55938 <col:49, col:54> '<dependent type>'
            (MemberExpr 0x9f55918 <col:49> '<bound member function type>' ->size 0x9f36c60
              (CXXThisExpr 0x9f55908 <col:49> 'const vector<_Bool, type-parameter-0-0> *' this)))
          (DeclRefExpr 0x9f55954 <col:57> 'size_type':'unsigned int' lvalue ParmVar 0x9f3a7c0 '__n' 'size_type':'unsigned int')))")
  (ReturnStmt 0x9f55c98 <line:1027:7, col:68>
    (ConditionalOperator 0x9f55c78 <col:14, col:68> '<dependent type>'
      (ParenExpr 0x9f55bf8 <col:14, col:51> '<dependent type>'
        (BinaryOperator 0x9f55be0 <col:15, col:50> '<dependent type>' '||'
          (CXXOperatorCallExpr 0x9f55ad8 <col:15, col:28> '<dependent type>'
            (UnresolvedLookupExpr 0x9f55a88 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40ad0 0x9b57c70 0x9b5ddb0 0x9cbc120 0x9cbc650 0x9cbcb80 0x9f26790)
            (DeclRefExpr 0x9f55a20 <col:15> 'const size_type':'const unsigned int' lvalue Var 0x9f55830 '__len' 'const size_type':'const unsigned int')
            (CallExpr 0x9f55a68 <col:23, col:28> '<dependent type>'
              (MemberExpr 0x9f55a48 <col:23> '<bound member function type>' ->size 0x9f36c60
                (CXXThisExpr 0x9f55a38 <col:23> 'const vector<_Bool, type-parameter-0-0> *' this))))
          (CXXOperatorCallExpr 0x9f55bb8 <col:33, col:50> '<dependent type>'
            (UnresolvedLookupExpr 0x9f55b68 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b42c70 0x9ac83c0 0x9b5e730 0x9cbd1f0 0x9cbd720 0x9cbdc50 0x9f273d0)
            (DeclRefExpr 0x9f55afc <col:33> 'const size_type':'const unsigned int' lvalue Var 0x9f55830 '__len' 'const size_type':'const unsigned int')
            (CallExpr 0x9f55b48 <col:41, col:50> '<dependent type>'
              (MemberExpr 0x9f55b28 <col:41> '<bound member function type>' ->max_size 0x9f36ce0
                (CXXThisExpr 0x9f55b18 <col:41> 'const vector<_Bool, type-parameter-0-0> *' this))))))
      (CallExpr 0x9f55c40 <col:55, col:64> '<dependent type>'
        (MemberExpr 0x9f55c20 <col:55> '<bound member function type>' ->max_size 0x9f36ce0
          (CXXThisExpr 0x9f55c10 <col:55> 'const vector<_Bool, type-parameter-0-0> *' this)))
      (DeclRefExpr 0x9f55c5c <col:68> 'const size_type':'const unsigned int' lvalue Var 0x9f55830 '__len' 'const size_type':'const unsigned int'))))


        void _M_erase_at_end(iterator __pos) (CompoundStmt 0x9f55d78 </usr/include/c++/4.6/bits/stl_bvector.h:1032:5, col:40>
  (BinaryOperator 0x9f55d60 <col:7, col:33> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x9f55d10 <col:7, col:21> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9f55cd8 <col:7, col:13> '<dependent type>' lvalue
        (CXXThisExpr 0x9f55cc8 <col:7> 'vector<_Bool, type-parameter-0-0> *' this)))
    (DeclRefExpr 0x9f55d44 <col:33> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9f3a900 '__pos' 'iterator':'struct std::_Bit_iterator')))


    };
}
namespace std {
    void reserve(size_type __n) (CompoundStmt 0x9f56fb0 </usr/include/c++/4.6/bits/vector.tcc:68:5, line:86:5>
  (IfStmt 0x9f563c0 <line:69:7, line:70:45>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9f56298 <line:69:11, col:32> '<dependent type>'
      (UnresolvedLookupExpr 0x9f56248 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b42c70 0x9ac83c0 0x9b5e730 0x9cbd1f0 0x9cbd720 0x9cbdc50 0x9f273d0)
      (DeclRefExpr 0x9f561c4 <col:11> 'size_type':'unsigned int' lvalue ParmVar 0x9f560e0 '__n' 'size_type':'unsigned int')
      (CallExpr 0x9f56228 <col:17, col:32> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f561f0 <col:17, col:23> '<dependent type>' lvalue
          (CXXThisExpr 0x9f561e0 <col:17> 'vector<_Tp, _Alloc> *' this))))
    (CallExpr 0x9f56390 <line:70:2, col:45> 'void'
      (ImplicitCastExpr 0x9f56380 <col:2> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x9f56364 <col:2> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9b0bcc0 '__throw_length_error' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0x9f563b0 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0x9f56350 <col:24, col:30> 'const char [16]' lvalue
          (StringLiteral 0x9f56320 </usr/include/c++/4.6/bits/vector.tcc:70:27> 'const char [16]' lvalue "vector::reserve"))))
    <<<NULL>>>)
  (IfStmt 0x9f56f90 <line:71:7, line:85:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9f564b0 <line:71:11, col:30> '<dependent type>'
      (UnresolvedLookupExpr 0x9f56460 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40ad0 0x9b57c70 0x9b5ddb0 0x9cbc120 0x9cbc650 0x9cbcb80 0x9f26790)
      (CallExpr 0x9f56428 <col:11, col:26> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f563f0 <col:11, col:17> '<dependent type>' lvalue
          (CXXThisExpr 0x9f563e0 <col:11> 'vector<_Tp, _Alloc> *' this)))
      (DeclRefExpr 0x9f56444 <col:30> 'size_type':'unsigned int' lvalue ParmVar 0x9f560e0 '__n' 'size_type':'unsigned int'))
    (CompoundStmt 0x9f56f60 <line:72:2, line:85:2>
      (DeclStmt 0x9f56568 <line:73:4, col:39>
        0x9f564e0 "const size_type __old_size =
          (CallExpr 0x9f56548 <col:33, col:38> '<dependent type>'
            (MemberExpr 0x9f56528 <col:33> '<bound member function type>' ->size 0x9f13590
              (CXXThisExpr 0x9f56518 <col:33> 'vector<_Tp, _Alloc> *' this)))")
      (DeclStmt 0x9f56778 <line:74:4, line:76:57>
        0x9f56580 "pointer __tmp =
          (CallExpr 0x9f56750 <line:74:20, line:76:56> '<dependent type>'
            (UnresolvedMemberExpr 0x9f565c8 <line:74:20> '<bound member function type>' lvalue)
            (DeclRefExpr 0x9f56604 <col:41> 'size_type':'unsigned int' lvalue ParmVar 0x9f560e0 '__n' 'size_type':'unsigned int')
            (ParenExpr 0x9f566a0 </usr/include/c++/4.6/bits/stl_iterator.h:1128:44, col:50> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0x9f56668 </usr/include/c++/4.6/bits/vector.tcc:75:32, col:46> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0x9f56630 <col:32, col:38> '<dependent type>' lvalue
                  (CXXThisExpr 0x9f56620 <col:32> 'vector<_Tp, _Alloc> *' this))))
            (ParenExpr 0x9f56738 </usr/include/c++/4.6/bits/stl_iterator.h:1128:44, col:50> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0x9f56700 </usr/include/c++/4.6/bits/vector.tcc:76:32, col:46> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0x9f566c8 <col:32, col:38> '<dependent type>' lvalue
                  (CXXThisExpr 0x9f566b8 <col:32> 'vector<_Tp, _Alloc> *' this)))))")
      (CallExpr 0x9f56950 <line:77:4, line:78:25> '<dependent type>'
        (UnresolvedLookupExpr 0x9f567b8 <line:77:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x9ef91a0 0x9ef9e60 0x9efa500 0x9efaab0)
        (CXXDependentScopeMemberExpr 0x9f56840 <col:18, col:32> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9f56808 <col:18, col:24> '<dependent type>' lvalue
            (CXXThisExpr 0x9f567f8 <col:18> 'vector<_Tp, _Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0x9f568c0 <col:42, col:56> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9f56888 <col:42, col:48> '<dependent type>' lvalue
            (CXXThisExpr 0x9f56878 <col:42> 'vector<_Tp, _Alloc> *' this)))
        (CallExpr 0x9f56930 <line:78:4, col:24> '<dependent type>'
          (UnresolvedMemberExpr 0x9f568f4 <col:4> '<dependent type>' lvalue)))
      (CallExpr 0x9f56ba0 <line:79:4, line:81:28> '<dependent type>'
        (UnresolvedMemberExpr 0x9f56978 <line:79:4> '<dependent type>' lvalue)
        (CXXDependentScopeMemberExpr 0x9f56a00 <col:18, col:32> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9f569c8 <col:18, col:24> '<dependent type>' lvalue
            (CXXThisExpr 0x9f569b8 <col:18> 'vector<_Tp, _Alloc> *' this)))
        (CXXOperatorCallExpr 0x9f56b78 <line:80:4, line:81:20> '<dependent type>'
          (UnresolvedLookupExpr 0x9f56b38 <col:4, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590 0x9f2d6a0)
          (CXXDependentScopeMemberExpr 0x9f56a80 <line:80:4, col:18> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x9f56a48 <col:4, col:10> '<dependent type>' lvalue
              (CXXThisExpr 0x9f56a38 <col:4> 'vector<_Tp, _Alloc> *' this)))
          (CXXDependentScopeMemberExpr 0x9f56b00 <line:81:6, col:20> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x9f56ac8 <col:6, col:12> '<dependent type>' lvalue
              (CXXThisExpr 0x9f56ab8 <col:6> 'vector<_Tp, _Alloc> *' this)))))
      (BinaryOperator 0x9f56c60 <line:82:4, col:29> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0x9f56c10 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9f56bd8 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0x9f56bc8 <col:4> 'vector<_Tp, _Alloc> *' this)))
        (DeclRefExpr 0x9f56c44 <col:29> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x9f56580 '__tmp' 'pointer':'typename _Tp_alloc_type::pointer'))
      (BinaryOperator 0x9f56da0 <line:83:4, col:38> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0x9f56cc0 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9f56c88 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0x9f56c78 <col:4> 'vector<_Tp, _Alloc> *' this)))
        (CXXOperatorCallExpr 0x9f56d78 <col:30, col:38> '<dependent type>'
          (UnresolvedLookupExpr 0x9f56d28 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9ce1500 0x9ce2100 0x9cb8030 0x9cb8830 0x9f2fb40 0x9f31cc0)
          (DeclRefExpr 0x9f56cf4 <col:30> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x9f56580 '__tmp' 'pointer':'typename _Tp_alloc_type::pointer')
          (DeclRefExpr 0x9f56d0c <col:38> 'const size_type':'const unsigned int' lvalue Var 0x9f564e0 '__old_size' 'const size_type':'const unsigned int')))
      (BinaryOperator 0x9f56f48 <line:84:4, col:63> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0x9f56e00 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9f56dc8 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0x9f56db8 <col:4> 'vector<_Tp, _Alloc> *' this)))
        (CXXOperatorCallExpr 0x9f56f20 <col:38, col:63> '<dependent type>'
          (UnresolvedLookupExpr 0x9f56ed0 <col:61, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9ce1500 0x9ce2100 0x9cb8030 0x9cb8830 0x9f2fb40 0x9f31cc0)
          (CXXDependentScopeMemberExpr 0x9f56e80 <col:38, col:52> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x9f56e48 <col:38, col:44> '<dependent type>' lvalue
              (CXXThisExpr 0x9f56e38 <col:38> 'vector<_Tp, _Alloc> *' this)))
          (DeclRefExpr 0x9f56eb4 <col:63> 'size_type':'unsigned int' lvalue ParmVar 0x9f560e0 '__n' 'size_type':'unsigned int'))))
    <<<NULL>>>))


    typename vector<_Tp, _Alloc>::iterator insert(iterator __position, const value_type &__x) (CompoundStmt 0x9f57e40 </usr/include/c++/4.6/bits/vector.tcc:110:5, line:131:5>
  (DeclStmt 0x9f57788 <line:111:7, col:49>
    0x9f57660 "const size_type __n =
      (CXXOperatorCallExpr 0x9f57760 <col:29, col:48> '<dependent type>'
        (UnresolvedLookupExpr 0x9f57720 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590 0x9f2d6a0)
        (DeclRefExpr 0x9f57694 <col:29> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x9f573c0 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
        (CallExpr 0x9f57700 <col:42, col:48> '<dependent type>'
          (UnresolvedMemberExpr 0x9f576c0 <col:42> '<bound member function type>' lvalue)))")
  (IfStmt 0x9f57cd8 <line:112:7, line:129:2>
    <<<NULL>>>
    (BinaryOperator 0x9f57a30 <line:112:11, line:113:25> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x9f578f8 <line:112:11, col:52> '<dependent type>'
        (UnresolvedLookupExpr 0x9f57898 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b412d0 0x9ac7fa0 0x9b5e2b0 0x9ba7d20 0x9bc7160 0x9bc74d0 0x9cbb090 0x9cbb590 0x9cbbad0 0x9db08a0 0x9f26e60)
        (CXXDependentScopeMemberExpr 0x9f577e0 <col:11, col:25> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9f577a8 <col:11, col:17> '<dependent type>' lvalue
            (CXXThisExpr 0x9f57798 <col:11> 'vector<_Tp, _Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0x9f57860 <col:38, col:52> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9f57828 <col:38, col:44> '<dependent type>' lvalue
            (CXXThisExpr 0x9f57818 <col:38> 'vector<_Tp, _Alloc> *' this))))
      (CXXOperatorCallExpr 0x9f57a08 <line:113:7, col:25> '<dependent type>'
        (UnresolvedLookupExpr 0x9f579a8 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90 0x9cb91e0 0x9cb9c50 0x9cba490 0x9cbaa00 0x9db0390 0x9f25fa0)
        (DeclRefExpr 0x9f5791c <col:7> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x9f573c0 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
        (CallExpr 0x9f57988 <col:21, col:25> '<dependent type>'
          (UnresolvedMemberExpr 0x9f57948 <col:21> '<bound member function type>' lvalue))))
    (CompoundStmt 0x9f57c20 <line:114:2, line:117:2>
      (CallExpr 0x9f57b60 <line:115:4, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f57a90 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9f57a58 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0x9f57a48 <col:4> 'vector<_Tp, _Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0x9f57b10 <col:28, col:42> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9f57ad8 <col:28, col:34> '<dependent type>' lvalue
            (CXXThisExpr 0x9f57ac8 <col:28> 'vector<_Tp, _Alloc> *' this)))
        (DeclRefExpr 0x9f57b44 <col:53> 'const value_type':'const _Tp' lvalue ParmVar 0x9f57410 '__x' 'const value_type &'))
      (UnaryOperator 0x9f57c08 <line:116:4, col:20> '<dependent type>' prefix '++'
        (CXXDependentScopeMemberExpr 0x9f57bd0 <col:6, col:20> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9f57b98 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x9f57b88 <col:6> 'vector<_Tp, _Alloc> *' this)))))
    (CompoundStmt 0x9f57cc0 <line:119:2, line:129:2>
      (CallExpr 0x9f57c98 <line:128:6, col:35> '<dependent type>'
        (MemberExpr 0x9f57c48 <col:6> '<bound member function type>' ->_M_insert_aux 0x9f17120
          (CXXThisExpr 0x9f57c38 <col:6> 'vector<_Tp, _Alloc> *' this))
        (DeclRefExpr 0x9f57c68 <col:20> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x9f573c0 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
        (DeclRefExpr 0x9f57c80 <col:32> 'const value_type':'const _Tp' lvalue ParmVar 0x9f57410 '__x' 'const value_type &'))))
  (ReturnStmt 0x9f57e30 <line:130:7, col:51>
    (CXXUnresolvedConstructExpr 0x9f57e10 <col:14, col:51> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
      (CXXOperatorCallExpr 0x9f57de8 <col:23, col:48> '<dependent type>'
        (UnresolvedLookupExpr 0x9f57d98 <col:46, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9ce1500 0x9ce2100 0x9cb8030 0x9cb8830 0x9f2fb40 0x9f31cc0)
        (CXXDependentScopeMemberExpr 0x9f57d48 <col:23, col:37> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9f57d10 <col:23, col:29> '<dependent type>' lvalue
            (CXXThisExpr 0x9f57d00 <col:23> 'vector<_Tp, _Alloc> *' this)))
        (DeclRefExpr 0x9f57d7c <col:48> 'const size_type':'const unsigned int' lvalue Var 0x9f57660 '__n' 'const size_type':'const unsigned int')))))


    typename vector<_Tp, _Alloc>::iterator erase(iterator __position) (CompoundStmt 0x9f589a8 </usr/include/c++/4.6/bits/vector.tcc:137:5, line:143:5>
  (IfStmt 0x9f587a8 <line:138:7, /usr/include/c++/4.6/bits/stl_algobase.h:491:62>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9f585d0 </usr/include/c++/4.6/bits/vector.tcc:138:11, col:33> '<dependent type>'
      (UnresolvedLookupExpr 0x9f58570 <col:26, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b412d0 0x9ac7fa0 0x9b5e2b0 0x9ba7d20 0x9bc7160 0x9bc74d0 0x9cbb090 0x9cbb590 0x9cbbad0 0x9db08a0 0x9f26e60)
      (CXXOperatorCallExpr 0x9f584d8 <col:11, col:24> '<dependent type>'
        (UnresolvedLookupExpr 0x9f58488 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9ce1500 0x9ce2100 0x9cb8030 0x9cb8830 0x9f2fb40 0x9f31cc0)
        (DeclRefExpr 0x9f58454 <col:11> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x9f58220 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
        (IntegerLiteral 0x9f58470 <col:24> 'int' 1))
      (CallExpr 0x9f58550 <col:29, col:33> '<dependent type>'
        (UnresolvedMemberExpr 0x9f58510 <col:29> '<bound member function type>' lvalue)))
    (CallExpr 0x9f58780 </usr/include/c++/4.6/bits/stl_algobase.h:491:39, col:62> '<dependent type>'
      (UnresolvedLookupExpr 0x9f58618 <col:39, col:44> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b7fe20 0x9db46a0)
      (CXXOperatorCallExpr 0x9f586d0 </usr/include/c++/4.6/bits/vector.tcc:139:17, col:30> '<dependent type>'
        (UnresolvedLookupExpr 0x9f58680 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9ce1500 0x9ce2100 0x9cb8030 0x9cb8830 0x9f2fb40 0x9f31cc0)
        (DeclRefExpr 0x9f58650 <col:17> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x9f58220 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
        (IntegerLiteral 0x9f58668 <col:30> 'int' 1))
      (CallExpr 0x9f58748 <col:33, col:37> '<dependent type>'
        (UnresolvedMemberExpr 0x9f58708 <col:33> '<bound member function type>' lvalue))
      (DeclRefExpr 0x9f58764 <col:40> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x9f58220 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'))
    <<<NULL>>>)
  (UnaryOperator 0x9f58848 <line:140:7, col:23> '<dependent type>' prefix '--'
    (CXXDependentScopeMemberExpr 0x9f58810 <col:9, col:23> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9f587d8 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x9f587c8 <col:9> 'vector<_Tp, _Alloc> *' this))))
  (CallExpr 0x9f58960 <line:141:7, col:52> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9f588a8 <col:7, col:21> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9f58870 <col:7, col:13> '<dependent type>' lvalue
        (CXXThisExpr 0x9f58860 <col:7> 'vector<_Tp, _Alloc> *' this)))
    (CXXDependentScopeMemberExpr 0x9f58928 <col:29, col:43> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9f588f0 <col:29, col:35> '<dependent type>' lvalue
        (CXXThisExpr 0x9f588e0 <col:29> 'vector<_Tp, _Alloc> *' this))))
  (ReturnStmt 0x9f58998 <line:142:7, col:14>
    (DeclRefExpr 0x9f58980 <col:14> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x9f58220 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))


    typename vector<_Tp, _Alloc>::iterator erase(iterator __first, iterator __last) (CompoundStmt 0x9f5c770 </usr/include/c++/4.6/bits/vector.tcc:149:5, line:157:5>
  (IfStmt 0x9f5c728 <line:150:7, line:155:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9f5c258 <line:150:11, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0x9f5c1f8 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b412d0 0x9ac7fa0 0x9b5e2b0 0x9ba7d20 0x9bc7160 0x9bc74d0 0x9cbb090 0x9cbb590 0x9cbbad0 0x9db08a0 0x9f26e60)
      (DeclRefExpr 0x9f5c1c8 <col:11> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x9f5bf40 '__first' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
      (DeclRefExpr 0x9f5c1e0 <col:22> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x9f5bf80 '__last' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'))
    (CompoundStmt 0x9f5c710 <line:151:2, line:155:2>
      (IfStmt 0x9f5c4b0 <line:152:4, /usr/include/c++/4.6/bits/stl_algobase.h:491:62>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9f5c368 </usr/include/c++/4.6/bits/vector.tcc:152:8, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0x9f5c308 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b412d0 0x9ac7fa0 0x9b5e2b0 0x9ba7d20 0x9bc7160 0x9bc74d0 0x9cbb090 0x9cbb590 0x9cbbad0 0x9db08a0 0x9f26e60)
          (DeclRefExpr 0x9f5c27c <col:8> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x9f5bf80 '__last' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
          (CallExpr 0x9f5c2e8 <col:18, col:22> '<dependent type>'
            (UnresolvedMemberExpr 0x9f5c2a8 <col:18> '<bound member function type>' lvalue)))
        (CallExpr 0x9f5c488 </usr/include/c++/4.6/bits/stl_algobase.h:491:39, col:62> '<dependent type>'
          (UnresolvedLookupExpr 0x9f5c3b0 <col:39, col:44> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b7fe20 0x9db46a0)
          (DeclRefExpr 0x9f5c3e8 </usr/include/c++/4.6/bits/vector.tcc:153:21> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x9f5bf80 '__last' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
          (CallExpr 0x9f5c450 <col:29, col:33> '<dependent type>'
            (UnresolvedMemberExpr 0x9f5c410 <col:29> '<bound member function type>' lvalue))
          (DeclRefExpr 0x9f5c46c <col:36> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x9f5bf40 '__first' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'))
        <<<NULL>>>)
      (CallExpr 0x9f5c6f0 <line:154:4, col:53> '<dependent type>'
        (MemberExpr 0x9f5c4e0 <col:4> '<bound member function type>' ->_M_erase_at_end 0x9f17370
          (CXXThisExpr 0x9f5c4d0 <col:4> 'vector<_Tp, _Alloc> *' this))
        (CXXOperatorCallExpr 0x9f5c6c8 <col:20, col:52> '<dependent type>'
          (UnresolvedLookupExpr 0x9f5c678 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9ce1500 0x9ce2100 0x9cb8030 0x9cb8830 0x9f2fb40 0x9f31cc0)
          (CallExpr 0x9f5c550 <col:20, col:33> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f5c518 <col:20, col:28> '<dependent type>' lvalue
              (DeclRefExpr 0x9f5c500 <col:20> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x9f5bf40 '__first' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
          (ParenExpr 0x9f5c660 <col:37, col:52> '<dependent type>'
            (CXXOperatorCallExpr 0x9f5c638 <col:38, col:46> '<dependent type>'
              (UnresolvedLookupExpr 0x9f5c5f8 <col:44, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590 0x9f2d6a0)
              (CallExpr 0x9f5c5c0 <col:38, col:42> '<dependent type>'
                (UnresolvedMemberExpr 0x9f5c580 <col:38> '<bound member function type>' lvalue))
              (DeclRefExpr 0x9f5c5dc <col:46> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x9f5bf80 '__last' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'))))))
    <<<NULL>>>)
  (ReturnStmt 0x9f5c760 <line:156:7, col:14>
    (DeclRefExpr 0x9f5c744 <col:14> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x9f5bf40 '__first' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))


    vector<_Tp, _Alloc> &operator=(const vector<_Tp, _Alloc> &__x) (CompoundStmt 0x9f5e640 </usr/include/c++/4.6/bits/vector.tcc:163:5, line:196:5>
  (IfStmt 0x9f5e5e8 <line:164:7, line:194:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9f5cf60 <line:164:11, col:19> '<dependent type>'
      (UnresolvedLookupExpr 0x9f5cf00 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b412d0 0x9ac7fa0 0x9b5e2b0 0x9ba7d20 0x9bc7160 0x9bc74d0 0x9cbb090 0x9cbb590 0x9cbbad0 0x9db08a0 0x9f26e60)
      (CXXOperatorCallExpr 0x9f5ced0 <col:11, col:12> '<dependent type>'
        (UnresolvedLookupExpr 0x9f5ce90 <col:11, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9d5b750 0x9d68890 0x9d69b00)
        (DeclRefExpr 0x9f5ce74 <col:12> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0x9f5cc30 '__x' 'const vector<_Tp, _Alloc> &'))
      (CXXThisExpr 0x9f5cef0 <col:19> 'vector<_Tp, _Alloc> *' this))
    (CompoundStmt 0x9f5e5c8 <line:165:2, line:194:2>
      (DeclStmt 0x9f5d038 <line:166:4, col:39>
        0x9f5cf90 "const size_type __xlen =
          (CallExpr 0x9f5d018 <col:29, col:38> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f5cfe0 <col:29, col:33> '<dependent type>' lvalue
              (DeclRefExpr 0x9f5cfc4 <col:29> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0x9f5cc30 '__x' 'const vector<_Tp, _Alloc> &')))")
      (IfStmt 0x9f5e400 <line:167:4, line:192:6>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9f5d100 <line:167:8, col:26> '<dependent type>'
          (UnresolvedLookupExpr 0x9f5d0b0 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b42c70 0x9ac83c0 0x9b5e730 0x9cbd1f0 0x9cbd720 0x9cbdc50 0x9f273d0)
          (DeclRefExpr 0x9f5d048 <col:8> 'const size_type':'const unsigned int' lvalue Var 0x9f5cf90 '__xlen' 'const size_type':'const unsigned int')
          (CallExpr 0x9f5d090 <col:17, col:26> '<dependent type>'
            (MemberExpr 0x9f5d070 <col:17> '<bound member function type>' ->capacity 0x9f137e0
              (CXXThisExpr 0x9f5d060 <col:17> 'vector<_Tp, _Alloc> *' this))))
        (CompoundStmt 0x9f5d978 <line:168:6, line:178:6>
          (DeclStmt 0x9f5d2d8 <line:169:8, line:170:20>
            0x9f5d130 "pointer __tmp =
              (CallExpr 0x9f5d2b0 <line:169:24, line:170:19> '<dependent type>'
                (UnresolvedMemberExpr 0x9f5d178 <line:169:24> '<bound member function type>' lvalue)
                (DeclRefExpr 0x9f5d1b4 <col:45> 'const size_type':'const unsigned int' lvalue Var 0x9f5cf90 '__xlen' 'const size_type':'const unsigned int')
                (CallExpr 0x9f5d220 <col:53, col:63> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9f5d1e8 <col:53, col:57> '<dependent type>' lvalue
                    (DeclRefExpr 0x9f5d1cc <col:53> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0x9f5cc30 '__x' 'const vector<_Tp, _Alloc> &')))
                (CallExpr 0x9f5d290 <line:170:10, col:18> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9f5d258 <col:10, col:14> '<dependent type>' lvalue
                    (DeclRefExpr 0x9f5d23c <col:10> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0x9f5cc30 '__x' 'const vector<_Tp, _Alloc> &'))))")
          (CallExpr 0x9f5d4a8 <line:171:8, line:172:29> '<dependent type>'
            (UnresolvedLookupExpr 0x9f5d310 <line:171:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0x9ef91a0 0x9ef9e60 0x9efa500 0x9efaab0)
            (CXXDependentScopeMemberExpr 0x9f5d398 <col:22, col:36> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0x9f5d360 <col:22, col:28> '<dependent type>' lvalue
                (CXXThisExpr 0x9f5d350 <col:22> 'vector<_Tp, _Alloc> *' this)))
            (CXXDependentScopeMemberExpr 0x9f5d418 <col:46, col:60> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0x9f5d3e0 <col:46, col:52> '<dependent type>' lvalue
                (CXXThisExpr 0x9f5d3d0 <col:46> 'vector<_Tp, _Alloc> *' this)))
            (CallExpr 0x9f5d488 <line:172:8, col:28> '<dependent type>'
              (UnresolvedMemberExpr 0x9f5d44c <col:8> '<dependent type>' lvalue)))
          (CallExpr 0x9f5d6f8 <line:173:8, line:175:32> '<dependent type>'
            (UnresolvedMemberExpr 0x9f5d4d0 <line:173:8> '<dependent type>' lvalue)
            (CXXDependentScopeMemberExpr 0x9f5d558 <col:22, col:36> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0x9f5d520 <col:22, col:28> '<dependent type>' lvalue
                (CXXThisExpr 0x9f5d510 <col:22> 'vector<_Tp, _Alloc> *' this)))
            (CXXOperatorCallExpr 0x9f5d6d0 <line:174:8, line:175:24> '<dependent type>'
              (UnresolvedLookupExpr 0x9f5d690 <col:8, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590 0x9f2d6a0)
              (CXXDependentScopeMemberExpr 0x9f5d5d8 <line:174:8, col:22> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0x9f5d5a0 <col:8, col:14> '<dependent type>' lvalue
                  (CXXThisExpr 0x9f5d590 <col:8> 'vector<_Tp, _Alloc> *' this)))
              (CXXDependentScopeMemberExpr 0x9f5d658 <line:175:10, col:24> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0x9f5d620 <col:10, col:16> '<dependent type>' lvalue
                  (CXXThisExpr 0x9f5d610 <col:10> 'vector<_Tp, _Alloc> *' this)))))
          (BinaryOperator 0x9f5d7b8 <line:176:8, col:33> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0x9f5d768 <col:8, col:22> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0x9f5d730 <col:8, col:14> '<dependent type>' lvalue
                (CXXThisExpr 0x9f5d720 <col:8> 'vector<_Tp, _Alloc> *' this)))
            (DeclRefExpr 0x9f5d79c <col:33> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x9f5d130 '__tmp' 'pointer':'typename _Tp_alloc_type::pointer'))
          (BinaryOperator 0x9f5d960 <line:177:8, col:67> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0x9f5d818 <col:8, col:22> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0x9f5d7e0 <col:8, col:14> '<dependent type>' lvalue
                (CXXThisExpr 0x9f5d7d0 <col:8> 'vector<_Tp, _Alloc> *' this)))
            (CXXOperatorCallExpr 0x9f5d938 <col:42, col:67> '<dependent type>'
              (UnresolvedLookupExpr 0x9f5d8e8 <col:65, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9ce1500 0x9ce2100 0x9cb8030 0x9cb8830 0x9f2fb40 0x9f31cc0)
              (CXXDependentScopeMemberExpr 0x9f5d898 <col:42, col:56> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0x9f5d860 <col:42, col:48> '<dependent type>' lvalue
                  (CXXThisExpr 0x9f5d850 <col:42> 'vector<_Tp, _Alloc> *' this)))
              (DeclRefExpr 0x9f5d8cc <col:67> 'const size_type':'const unsigned int' lvalue Var 0x9f5cf90 '__xlen' 'const size_type':'const unsigned int'))))
        (IfStmt 0x9f5e3e0 <line:179:9, line:192:6>
          <<<NULL>>>
          (CXXOperatorCallExpr 0x9f5da58 <line:179:13, col:23> '<dependent type>'
            (UnresolvedLookupExpr 0x9f5da08 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b436e0 0x9ac8bd0 0x9b5f010 0x9cbf3a0 0x9cbf900 0x9cbfe30 0x9f27e60)
            (CallExpr 0x9f5d9d0 <col:13, col:18> '<dependent type>'
              (MemberExpr 0x9f5d9b0 <col:13> '<bound member function type>' ->size 0x9f13590
                (CXXThisExpr 0x9f5d9a0 <col:13> 'vector<_Tp, _Alloc> *' this)))
            (DeclRefExpr 0x9f5d9ec <col:23> 'const size_type':'const unsigned int' lvalue Var 0x9f5cf90 '__xlen' 'const size_type':'const unsigned int'))
          (CompoundStmt 0x9f5dd98 <line:180:6, line:183:6>
            (CallExpr 0x9f5dd70 <line:181:8, line:182:36> '<dependent type>'
              (UnresolvedLookupExpr 0x9f5daa0 <line:181:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0x9ef91a0 0x9ef9e60 0x9efa500 0x9efaab0)
              (CallExpr 0x9f5dc80 <col:22, col:63> '<dependent type>'
                (UnresolvedLookupExpr 0x9f5daf8 <col:22, col:27> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b7fe20 0x9db46a0)
                (CallExpr 0x9f5db80 <col:32, col:42> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9f5db48 <col:32, col:36> '<dependent type>' lvalue
                    (DeclRefExpr 0x9f5db30 <col:32> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0x9f5cc30 '__x' 'const vector<_Tp, _Alloc> &')))
                (CallExpr 0x9f5dbf0 <col:45, col:53> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9f5dbb8 <col:45, col:49> '<dependent type>' lvalue
                    (DeclRefExpr 0x9f5db9c <col:45> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0x9f5cc30 '__x' 'const vector<_Tp, _Alloc> &')))
                (CallExpr 0x9f5dc60 <col:56, col:62> '<dependent type>'
                  (UnresolvedMemberExpr 0x9f5dc20 <col:56> '<bound member function type>' lvalue)))
              (CallExpr 0x9f5dcf8 <line:182:8, col:12> '<dependent type>'
                (UnresolvedMemberExpr 0x9f5dcb8 <col:8> '<bound member function type>' lvalue))
              (CallExpr 0x9f5dd50 <col:15, col:35> '<dependent type>'
                (UnresolvedMemberExpr 0x9f5dd14 <col:15> '<dependent type>' lvalue))))
          (CompoundStmt 0x9f5e3c8 <line:185:6, line:192:6>
            (CallExpr 0x9f5e060 <line:186:8, line:187:26> '<dependent type>'
              (UnresolvedLookupExpr 0x9f5ddd0 <line:186:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b7fe20 0x9db46a0)
              (CXXDependentScopeMemberExpr 0x9f5de58 <col:18, col:30> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0x9f5de20 <col:18, col:22> '<dependent type>' lvalue
                  (DeclRefExpr 0x9f5de08 <col:18> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0x9f5cc30 '__x' 'const vector<_Tp, _Alloc> &')))
              (CXXOperatorCallExpr 0x9f5dfb8 <col:40, col:68> '<dependent type>'
                (UnresolvedLookupExpr 0x9f5df68 <col:61, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9ce1500 0x9ce2100 0x9cb8030 0x9cb8830 0x9f2fb40 0x9f31cc0)
                (CXXDependentScopeMemberExpr 0x9f5dee0 <col:40, col:52> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0x9f5dea8 <col:40, col:44> '<dependent type>' lvalue
                    (DeclRefExpr 0x9f5de8c <col:40> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0x9f5cc30 '__x' 'const vector<_Tp, _Alloc> &')))
                (CallExpr 0x9f5df48 <col:63, col:68> '<dependent type>'
                  (MemberExpr 0x9f5df28 <col:63> '<bound member function type>' ->size 0x9f13590
                    (CXXThisExpr 0x9f5df18 <col:63> 'vector<_Tp, _Alloc> *' this))))
              (CXXDependentScopeMemberExpr 0x9f5e028 <line:187:4, col:18> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0x9f5dff0 <col:4, col:10> '<dependent type>' lvalue
                  (CXXThisExpr 0x9f5dfe0 <col:4> 'vector<_Tp, _Alloc> *' this))))
            (CallExpr 0x9f5e398 <line:188:8, line:191:29> '<dependent type>'
              (UnresolvedLookupExpr 0x9f5e0b0 <line:188:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0x9eff0f0 0x9eff9f0)
              (CXXOperatorCallExpr 0x9f5e210 <col:36, col:64> '<dependent type>'
                (UnresolvedLookupExpr 0x9f5e1c0 <col:57, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9ce1500 0x9ce2100 0x9cb8030 0x9cb8830 0x9f2fb40 0x9f31cc0)
                (CXXDependentScopeMemberExpr 0x9f5e138 <col:36, col:48> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0x9f5e100 <col:36, col:40> '<dependent type>' lvalue
                    (DeclRefExpr 0x9f5e0e8 <col:36> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0x9f5cc30 '__x' 'const vector<_Tp, _Alloc> &')))
                (CallExpr 0x9f5e1a0 <col:59, col:64> '<dependent type>'
                  (MemberExpr 0x9f5e180 <col:59> '<bound member function type>' ->size 0x9f13590
                    (CXXThisExpr 0x9f5e170 <col:59> 'vector<_Tp, _Alloc> *' this))))
              (CXXDependentScopeMemberExpr 0x9f5e288 <line:189:8, col:20> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0x9f5e250 <col:8, col:12> '<dependent type>' lvalue
                  (DeclRefExpr 0x9f5e234 <col:8> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0x9f5cc30 '__x' 'const vector<_Tp, _Alloc> &')))
              (CXXDependentScopeMemberExpr 0x9f5e308 <line:190:8, col:22> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0x9f5e2d0 <col:8, col:14> '<dependent type>' lvalue
                  (CXXThisExpr 0x9f5e2c0 <col:8> 'vector<_Tp, _Alloc> *' this)))
              (CallExpr 0x9f5e378 <line:191:8, col:28> '<dependent type>'
                (UnresolvedMemberExpr 0x9f5e33c <col:8> '<dependent type>' lvalue))))))
      (BinaryOperator 0x9f5e5b0 <line:193:4, col:55> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0x9f5e468 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9f5e430 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0x9f5e420 <col:4> 'vector<_Tp, _Alloc> *' this)))
        (CXXOperatorCallExpr 0x9f5e588 <col:30, col:55> '<dependent type>'
          (UnresolvedLookupExpr 0x9f5e538 <col:53, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9ce1500 0x9ce2100 0x9cb8030 0x9cb8830 0x9f2fb40 0x9f31cc0)
          (CXXDependentScopeMemberExpr 0x9f5e4e8 <col:30, col:44> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x9f5e4b0 <col:30, col:36> '<dependent type>' lvalue
              (CXXThisExpr 0x9f5e4a0 <col:30> 'vector<_Tp, _Alloc> *' this)))
          (DeclRefExpr 0x9f5e51c <col:55> 'const size_type':'const unsigned int' lvalue Var 0x9f5cf90 '__xlen' 'const size_type':'const unsigned int'))))
    <<<NULL>>>)
  (ReturnStmt 0x9f5e630 <line:195:7, col:15>
    (UnaryOperator 0x9f5e618 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9f5e608 <col:15> 'vector<_Tp, _Alloc> *' this))))


    void _M_fill_assign(size_t __n, const value_type &__val) (CompoundStmt 0x9f5f4e8 </usr/include/c++/4.6/bits/vector.tcc:202:5, line:218:5>
  (IfStmt 0x9f5f4c8 <line:203:7, line:217:72>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9f5eb20 <line:203:11, col:26> '<dependent type>'
      (UnresolvedLookupExpr 0x9f5ead0 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b42c70 0x9ac83c0 0x9b5e730 0x9cbd1f0 0x9cbd720 0x9cbdc50 0x9f273d0)
      (DeclRefExpr 0x9f5ea68 <col:11> 'size_t':'unsigned int' lvalue ParmVar 0x9f5e900 '__n' 'size_t':'unsigned int')
      (CallExpr 0x9f5eab0 <col:17, col:26> '<dependent type>'
        (MemberExpr 0x9f5ea90 <col:17> '<bound member function type>' ->capacity 0x9f137e0
          (CXXThisExpr 0x9f5ea80 <col:17> 'vector<_Tp, _Alloc> *' this))))
    (CompoundStmt 0x9f5ece0 <line:204:2, line:207:2>
      (DeclStmt 0x9f5ec38 <line:205:4, col:51>
        0x9f5eb50 "vector<_Tp, _Alloc> __tmp =
          (ParenListExpr 0x9f5ec10 <col:16, col:50> 'vector<_Tp, _Alloc>'
            (DeclRefExpr 0x9f5eb84 <col:17> 'size_t':'unsigned int' lvalue ParmVar 0x9f5e900 '__n' 'size_t':'unsigned int')
            (DeclRefExpr 0x9f5eb9c <col:22> 'const value_type':'const _Tp' lvalue ParmVar 0x9f5e950 '__val' 'const value_type &')
            (CallExpr 0x9f5ebf0 <col:29, col:49> '<dependent type>'
              (UnresolvedMemberExpr 0x9f5ebb4 <col:29> '<dependent type>' lvalue)))")
      (CallExpr 0x9f5ecc0 <line:206:4, col:20> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f5ec60 <col:4, col:10> '<dependent type>' lvalue
          (DeclRefExpr 0x9f5ec48 <col:4> 'vector<_Tp, _Alloc>' lvalue Var 0x9f5eb50 '__tmp' 'vector<_Tp, _Alloc>'))
        (UnaryOperator 0x9f5eca8 <col:15, col:16> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9f5ec98 <col:16> 'vector<_Tp, _Alloc> *' this))))
    (IfStmt 0x9f5f4a8 <line:208:12, line:217:72>
      <<<NULL>>>
      (CXXOperatorCallExpr 0x9f5edb0 <line:208:16, col:27> '<dependent type>'
        (UnresolvedLookupExpr 0x9f5ed60 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b42c70 0x9ac83c0 0x9b5e730 0x9cbd1f0 0x9cbd720 0x9cbdc50 0x9f273d0)
        (DeclRefExpr 0x9f5ecf8 <col:16> 'size_t':'unsigned int' lvalue ParmVar 0x9f5e900 '__n' 'size_t':'unsigned int')
        (CallExpr 0x9f5ed40 <col:22, col:27> '<dependent type>'
          (MemberExpr 0x9f5ed20 <col:22> '<bound member function type>' ->size 0x9f13590
            (CXXThisExpr 0x9f5ed10 <col:22> 'vector<_Tp, _Alloc> *' this))))
      (CompoundStmt 0x9f5f310 <line:209:2, line:215:2>
        (CallExpr 0x9f5ef28 <line:210:4, col:35> '<dependent type>'
          (UnresolvedLookupExpr 0x9f5edf8 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b88110 0x9f32370)
          (CallExpr 0x9f5ee80 <col:14, col:20> '<dependent type>'
            (UnresolvedMemberExpr 0x9f5ee40 <col:14> '<bound member function type>' lvalue))
          (CallExpr 0x9f5eef0 <col:23, col:27> '<dependent type>'
            (UnresolvedMemberExpr 0x9f5eeb0 <col:23> '<bound member function type>' lvalue))
          (DeclRefExpr 0x9f5ef0c <col:30> 'const value_type':'const _Tp' lvalue ParmVar 0x9f5e950 '__val' 'const value_type &'))
        (CallExpr 0x9f5f170 <line:211:4, line:213:27> '<dependent type>'
          (UnresolvedLookupExpr 0x9f5ef78 <line:211:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x9f07890 0x9f081c0)
          (CXXDependentScopeMemberExpr 0x9f5eff8 <col:34, col:48> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x9f5efc0 <col:34, col:40> '<dependent type>' lvalue
              (CXXThisExpr 0x9f5efb0 <col:34> 'vector<_Tp, _Alloc> *' this)))
          (CXXOperatorCallExpr 0x9f5f0d8 <line:212:6, col:17> '<dependent type>'
            (UnresolvedLookupExpr 0x9f5f098 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590 0x9f2d6a0)
            (DeclRefExpr 0x9f5f02c <col:6> 'size_t':'unsigned int' lvalue ParmVar 0x9f5e900 '__n' 'size_t':'unsigned int')
            (CallExpr 0x9f5f078 <col:12, col:17> '<dependent type>'
              (MemberExpr 0x9f5f058 <col:12> '<bound member function type>' ->size 0x9f13590
                (CXXThisExpr 0x9f5f048 <col:12> 'vector<_Tp, _Alloc> *' this))))
          (DeclRefExpr 0x9f5f0fc <col:20> 'const value_type':'const _Tp' lvalue ParmVar 0x9f5e950 '__val' 'const value_type &')
          (CallExpr 0x9f5f150 <line:213:6, col:26> '<dependent type>'
            (UnresolvedMemberExpr 0x9f5f114 <col:6> '<dependent type>' lvalue)))
        (CompoundAssignOperator 0x9f5f2f0 <line:214:4, col:42> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
          (CXXDependentScopeMemberExpr 0x9f5f1e8 <col:4, col:18> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x9f5f1b0 <col:4, col:10> '<dependent type>' lvalue
              (CXXThisExpr 0x9f5f1a0 <col:4> 'vector<_Tp, _Alloc> *' this)))
          (CXXOperatorCallExpr 0x9f5f2c8 <col:31, col:42> '<dependent type>'
            (UnresolvedLookupExpr 0x9f5f288 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590 0x9f2d6a0)
            (DeclRefExpr 0x9f5f21c <col:31> 'size_t':'unsigned int' lvalue ParmVar 0x9f5e900 '__n' 'size_t':'unsigned int')
            (CallExpr 0x9f5f268 <col:37, col:42> '<dependent type>'
              (MemberExpr 0x9f5f248 <col:37> '<bound member function type>' ->size 0x9f13590
                (CXXThisExpr 0x9f5f238 <col:37> 'vector<_Tp, _Alloc> *' this))))))
      (CallExpr 0x9f5f488 <line:217:9, col:72> '<dependent type>'
        (MemberExpr 0x9f5f340 <col:9> '<bound member function type>' ->_M_erase_at_end 0x9f17370
          (CXXThisExpr 0x9f5f330 <col:9> 'vector<_Tp, _Alloc> *' this))
        (CallExpr 0x9f5f460 <col:25, col:71> '<dependent type>'
          (UnresolvedLookupExpr 0x9f5f378 <col:25, col:30> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b8aa20)
          (CXXDependentScopeMemberExpr 0x9f5f3f8 <col:37, col:51> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x9f5f3c0 <col:37, col:43> '<dependent type>' lvalue
              (CXXThisExpr 0x9f5f3b0 <col:37> 'vector<_Tp, _Alloc> *' this)))
          (DeclRefExpr 0x9f5f42c <col:61> 'size_t':'unsigned int' lvalue ParmVar 0x9f5e900 '__n' 'size_t':'unsigned int')
          (DeclRefExpr 0x9f5f444 <col:66> 'const value_type':'const _Tp' lvalue ParmVar 0x9f5e950 '__val' 'const value_type &'))))))


    template <typename _InputIterator> void _M_assign_aux(_InputIterator __first, _InputIterator __last, std::input_iterator_tag) (CompoundStmt 0x9f600b0 </usr/include/c++/4.6/bits/vector.tcc:226:7, line:235:7>
  (DeclStmt 0x9f5fb38 <line:227:2, col:39>
    0x9f5fa60 "pointer __cur =
      (ParenListExpr 0x9f5fb18 <col:15, col:38> 'pointer':'typename _Tp_alloc_type::pointer'
        (CXXDependentScopeMemberExpr 0x9f5fae0 <col:16, col:30> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9f5faa8 <col:16, col:22> '<dependent type>' lvalue
            (CXXThisExpr 0x9f5fa98 <col:16> 'vector<_Tp, _Alloc> *' this))))")
  (ForStmt 0x9f5fe28 <line:228:2, line:230:14>
    <<<NULL>>>
    <<<NULL>>>
    (BinaryOperator 0x9f5fd20 <line:228:9, col:53> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x9f5fbd8 <col:9, col:20> '<dependent type>'
        (UnresolvedLookupExpr 0x9f5fb78 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b412d0 0x9ac7fa0 0x9b5e2b0 0x9ba7d20 0x9bc7160 0x9bc74d0 0x9cbb090 0x9cbb590 0x9cbbad0 0x9db08a0 0x9f26e60)
        (DeclRefExpr 0x9f5fb48 <col:9> '_InputIterator' lvalue ParmVar 0x9f5f800 '__first' '_InputIterator')
        (DeclRefExpr 0x9f5fb60 <col:20> '_InputIterator' lvalue ParmVar 0x9f5f840 '__last' '_InputIterator'))
      (CXXOperatorCallExpr 0x9f5fcf8 <col:30, col:53> '<dependent type>'
        (UnresolvedLookupExpr 0x9f5fc98 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b412d0 0x9ac7fa0 0x9b5e2b0 0x9ba7d20 0x9bc7160 0x9bc74d0 0x9cbb090 0x9cbb590 0x9cbbad0 0x9db08a0 0x9f26e60)
        (DeclRefExpr 0x9f5fbfc <col:30> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x9f5fa60 '__cur' 'pointer':'typename _Tp_alloc_type::pointer')
        (CXXDependentScopeMemberExpr 0x9f5fc60 <col:39, col:53> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9f5fc28 <col:39, col:45> '<dependent type>' lvalue
            (CXXThisExpr 0x9f5fc18 <col:39> 'vector<_Tp, _Alloc> *' this)))))
    (BinaryOperator 0x9f5fd98 <line:229:7, col:18> '<dependent type>' ','
      (UnaryOperator 0x9f5fd50 <col:7, col:9> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9f5fd38 <col:9> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x9f5fa60 '__cur' 'pointer':'typename _Tp_alloc_type::pointer'))
      (UnaryOperator 0x9f5fd80 <col:16, col:18> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9f5fd64 <col:18> '_InputIterator' lvalue ParmVar 0x9f5f800 '__first' '_InputIterator')))
    (BinaryOperator 0x9f5fe10 <line:230:4, col:14> '<dependent type>' '='
      (UnaryOperator 0x9f5fdc8 <col:4, col:5> '<dependent type>' prefix '*'
        (DeclRefExpr 0x9f5fdb0 <col:5> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x9f5fa60 '__cur' 'pointer':'typename _Tp_alloc_type::pointer'))
      (UnaryOperator 0x9f5fdf8 <col:13, col:14> '<dependent type>' prefix '*'
        (DeclRefExpr 0x9f5fddc <col:14> '_InputIterator' lvalue ParmVar 0x9f5f800 '__first' '_InputIterator'))))
  (IfStmt 0x9f60090 <line:231:2, line:234:33>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9f5fee0 <line:231:6, col:17> '<dependent type>'
      (UnresolvedLookupExpr 0x9f5fe80 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90 0x9cb91e0 0x9cb9c50 0x9cba490 0x9cbaa00 0x9db0390 0x9f25fa0)
      (DeclRefExpr 0x9f5fe4c <col:6> '_InputIterator' lvalue ParmVar 0x9f5f800 '__first' '_InputIterator')
      (DeclRefExpr 0x9f5fe64 <col:17> '_InputIterator' lvalue ParmVar 0x9f5f840 '__last' '_InputIterator'))
    (CallExpr 0x9f5ff50 <line:232:4, col:25> '<dependent type>'
      (MemberExpr 0x9f5ff18 <col:4> '<bound member function type>' ->_M_erase_at_end 0x9f17370
        (CXXThisExpr 0x9f5ff08 <col:4> 'vector<_Tp, _Alloc> *' this))
      (DeclRefExpr 0x9f5ff38 <col:20> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x9f5fa60 '__cur' 'pointer':'typename _Tp_alloc_type::pointer'))
    (CallExpr 0x9f60068 <line:234:4, col:33> '<dependent type>'
      (UnresolvedMemberExpr 0x9f5ff80 <col:4> '<bound member function type>' lvalue)
      (CallExpr 0x9f60018 <col:11, col:15> '<dependent type>'
        (UnresolvedMemberExpr 0x9f5ffd8 <col:11> '<bound member function type>' lvalue))
      (DeclRefExpr 0x9f60034 <col:18> '_InputIterator' lvalue ParmVar 0x9f5f800 '__first' '_InputIterator')
      (DeclRefExpr 0x9f6004c <col:27> '_InputIterator' lvalue ParmVar 0x9f5f840 '__last' '_InputIterator'))))

;
    template <typename _ForwardIterator> void _M_assign_aux(_ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag) (CompoundStmt 0x9f61870 </usr/include/c++/4.6/bits/vector.tcc:243:7, line:270:7>
  (DeclStmt 0x9f60710 <line:244:2, col:56>
    0x9f60630 "const size_type __len =
      (CallExpr 0x9f606e8 <col:26, col:55> '<dependent type>'
        (UnresolvedLookupExpr 0x9f60680 <col:26, col:31> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b4eac0)
        (DeclRefExpr 0x9f606b4 <col:40> '_ForwardIterator' lvalue ParmVar 0x9f603d0 '__first' '_ForwardIterator')
        (DeclRefExpr 0x9f606cc <col:49> '_ForwardIterator' lvalue ParmVar 0x9f60410 '__last' '_ForwardIterator'))")
  (IfStmt 0x9f61850 <line:246:2, line:269:4>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9f607d8 <line:246:6, col:23> '<dependent type>'
      (UnresolvedLookupExpr 0x9f60788 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b42c70 0x9ac83c0 0x9b5e730 0x9cbd1f0 0x9cbd720 0x9cbdc50 0x9f273d0)
      (DeclRefExpr 0x9f60720 <col:6> 'const size_type':'const unsigned int' lvalue Var 0x9f60630 '__len' 'const size_type':'const unsigned int')
      (CallExpr 0x9f60768 <col:14, col:23> '<dependent type>'
        (MemberExpr 0x9f60748 <col:14> '<bound member function type>' ->capacity 0x9f137e0
          (CXXThisExpr 0x9f60738 <col:14> 'vector<_Tp, _Alloc> *' this))))
    (CompoundStmt 0x9f610e0 <line:247:4, line:257:4>
      (DeclStmt 0x9f60928 <line:248:6, col:65>
        0x9f60810 "pointer __tmp =
          (ParenListExpr 0x9f60908 <col:19, col:64> 'pointer':'typename _Tp_alloc_type::pointer'
            (CallExpr 0x9f608e0 <col:20, col:63> '<dependent type>'
              (UnresolvedMemberExpr 0x9f60858 <col:20> '<bound member function type>' lvalue)
              (DeclRefExpr 0x9f60894 <col:41> 'const size_type':'const unsigned int' lvalue Var 0x9f60630 '__len' 'const size_type':'const unsigned int')
              (DeclRefExpr 0x9f608ac <col:48> '_ForwardIterator' lvalue ParmVar 0x9f603d0 '__first' '_ForwardIterator')
              (DeclRefExpr 0x9f608c4 <col:57> '_ForwardIterator' lvalue ParmVar 0x9f60410 '__last' '_ForwardIterator')))")
      (CallExpr 0x9f60af8 <line:249:6, line:250:27> '<dependent type>'
        (UnresolvedLookupExpr 0x9f60960 <line:249:6, col:11> '<overloaded function type>' lvalue (no ADL) = '1' 0x9ef91a0 0x9ef9e60 0x9efa500 0x9efaab0)
        (CXXDependentScopeMemberExpr 0x9f609e8 <col:20, col:34> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9f609b0 <col:20, col:26> '<dependent type>' lvalue
            (CXXThisExpr 0x9f609a0 <col:20> 'vector<_Tp, _Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0x9f60a68 <col:44, col:58> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9f60a30 <col:44, col:50> '<dependent type>' lvalue
            (CXXThisExpr 0x9f60a20 <col:44> 'vector<_Tp, _Alloc> *' this)))
        (CallExpr 0x9f60ad8 <line:250:6, col:26> '<dependent type>'
          (UnresolvedMemberExpr 0x9f60a9c <col:6> '<dependent type>' lvalue)))
      (CallExpr 0x9f60d48 <line:251:6, line:253:30> '<dependent type>'
        (UnresolvedMemberExpr 0x9f60b20 <line:251:6> '<dependent type>' lvalue)
        (CXXDependentScopeMemberExpr 0x9f60ba8 <col:20, col:34> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9f60b70 <col:20, col:26> '<dependent type>' lvalue
            (CXXThisExpr 0x9f60b60 <col:20> 'vector<_Tp, _Alloc> *' this)))
        (CXXOperatorCallExpr 0x9f60d20 <line:252:6, line:253:22> '<dependent type>'
          (UnresolvedLookupExpr 0x9f60ce0 <col:6, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590 0x9f2d6a0)
          (CXXDependentScopeMemberExpr 0x9f60c28 <line:252:6, col:20> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x9f60bf0 <col:6, col:12> '<dependent type>' lvalue
              (CXXThisExpr 0x9f60be0 <col:6> 'vector<_Tp, _Alloc> *' this)))
          (CXXDependentScopeMemberExpr 0x9f60ca8 <line:253:8, col:22> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x9f60c70 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9f60c60 <col:8> 'vector<_Tp, _Alloc> *' this)))))
      (BinaryOperator 0x9f60e08 <line:254:6, col:31> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0x9f60db8 <col:6, col:20> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9f60d80 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x9f60d70 <col:6> 'vector<_Tp, _Alloc> *' this)))
        (DeclRefExpr 0x9f60dec <col:31> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x9f60810 '__tmp' 'pointer':'typename _Tp_alloc_type::pointer'))
      (BinaryOperator 0x9f60fb0 <line:255:6, col:57> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0x9f60e68 <col:6, col:20> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9f60e30 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x9f60e20 <col:6> 'vector<_Tp, _Alloc> *' this)))
        (CXXOperatorCallExpr 0x9f60f88 <col:32, col:57> '<dependent type>'
          (UnresolvedLookupExpr 0x9f60f38 <col:55, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9ce1500 0x9ce2100 0x9cb8030 0x9cb8830 0x9f2fb40 0x9f31cc0)
          (CXXDependentScopeMemberExpr 0x9f60ee8 <col:32, col:46> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x9f60eb0 <col:32, col:38> '<dependent type>' lvalue
              (CXXThisExpr 0x9f60ea0 <col:32> 'vector<_Tp, _Alloc> *' this)))
          (DeclRefExpr 0x9f60f1c <col:57> 'const size_type':'const unsigned int' lvalue Var 0x9f60630 '__len' 'const size_type':'const unsigned int')))
      (BinaryOperator 0x9f610c8 <line:256:6, col:54> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0x9f61010 <col:6, col:20> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9f60fd8 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x9f60fc8 <col:6> 'vector<_Tp, _Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0x9f61090 <col:40, col:54> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9f61058 <col:40, col:46> '<dependent type>' lvalue
            (CXXThisExpr 0x9f61048 <col:40> 'vector<_Tp, _Alloc> *' this)))))
    (IfStmt 0x9f61830 <line:258:7, line:269:4>
      <<<NULL>>>
      (CXXOperatorCallExpr 0x9f611c0 <line:258:11, col:21> '<dependent type>'
        (UnresolvedLookupExpr 0x9f61170 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b436e0 0x9ac8bd0 0x9b5f010 0x9cbf3a0 0x9cbf900 0x9cbfe30 0x9f27e60)
        (CallExpr 0x9f61138 <col:11, col:16> '<dependent type>'
          (MemberExpr 0x9f61118 <col:11> '<bound member function type>' ->size 0x9f13590
            (CXXThisExpr 0x9f61108 <col:11> 'vector<_Tp, _Alloc> *' this)))
        (DeclRefExpr 0x9f61154 <col:21> 'const size_type':'const unsigned int' lvalue Var 0x9f60630 '__len' 'const size_type':'const unsigned int'))
      (CallExpr 0x9f61340 <line:259:4, col:70> '<dependent type>'
        (MemberExpr 0x9f611f8 <col:4> '<bound member function type>' ->_M_erase_at_end 0x9f17370
          (CXXThisExpr 0x9f611e8 <col:4> 'vector<_Tp, _Alloc> *' this))
        (CallExpr 0x9f61318 <col:20, col:69> '<dependent type>'
          (UnresolvedLookupExpr 0x9f61230 <col:20, col:25> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b7fe20 0x9db46a0)
          (DeclRefExpr 0x9f61268 <col:30> '_ForwardIterator' lvalue ParmVar 0x9f603d0 '__first' '_ForwardIterator')
          (DeclRefExpr 0x9f61280 <col:39> '_ForwardIterator' lvalue ParmVar 0x9f60410 '__last' '_ForwardIterator')
          (CXXDependentScopeMemberExpr 0x9f612e0 <col:47, col:61> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x9f612a8 <col:47, col:53> '<dependent type>' lvalue
              (CXXThisExpr 0x9f61298 <col:47> 'vector<_Tp, _Alloc> *' this)))))
      (CompoundStmt 0x9f61810 <line:261:4, line:269:4>
        (DeclStmt 0x9f613c0 <line:262:6, col:38>
          0x9f61370 "_ForwardIterator __mid =
            (DeclRefExpr 0x9f613a4 <col:31> '_ForwardIterator' lvalue ParmVar 0x9f603d0 '__first' '_ForwardIterator')")
        (CallExpr 0x9f61498 <line:263:6, col:32> '<dependent type>'
          (UnresolvedLookupExpr 0x9f613f8 <col:6, col:11> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b51250)
          (DeclRefExpr 0x9f6142c <col:19> '_ForwardIterator' lvalue Var 0x9f61370 '__mid' '_ForwardIterator')
          (CallExpr 0x9f61478 <col:26, col:31> '<dependent type>'
            (MemberExpr 0x9f61458 <col:26> '<bound member function type>' ->size 0x9f13590
              (CXXThisExpr 0x9f61448 <col:26> 'vector<_Tp, _Alloc> *' this))))
        (CallExpr 0x9f615c8 <line:264:6, col:54> '<dependent type>'
          (UnresolvedLookupExpr 0x9f614e0 <col:6, col:11> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b7fe20 0x9db46a0)
          (DeclRefExpr 0x9f61518 <col:16> '_ForwardIterator' lvalue ParmVar 0x9f603d0 '__first' '_ForwardIterator')
          (DeclRefExpr 0x9f61530 <col:25> '_ForwardIterator' lvalue Var 0x9f61370 '__mid' '_ForwardIterator')
          (CXXDependentScopeMemberExpr 0x9f61590 <col:32, col:46> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x9f61558 <col:32, col:38> '<dependent type>' lvalue
              (CXXThisExpr 0x9f61548 <col:32> 'vector<_Tp, _Alloc> *' this))))
        (BinaryOperator 0x9f617f8 <line:265:6, line:268:29> '<dependent type>' '='
          (CXXDependentScopeMemberExpr 0x9f61638 <line:265:6, col:20> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x9f61600 <col:6, col:12> '<dependent type>' lvalue
              (CXXThisExpr 0x9f615f0 <col:6> 'vector<_Tp, _Alloc> *' this)))
          (CallExpr 0x9f617c8 <line:266:8, line:268:29> '<dependent type>'
            (UnresolvedLookupExpr 0x9f61688 <line:266:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0x9eff0f0 0x9eff9f0)
            (DeclRefExpr 0x9f616c0 <col:36> '_ForwardIterator' lvalue Var 0x9f61370 '__mid' '_ForwardIterator')
            (DeclRefExpr 0x9f616d8 <col:43> '_ForwardIterator' lvalue ParmVar 0x9f60410 '__last' '_ForwardIterator')
            (CXXDependentScopeMemberExpr 0x9f61738 <line:267:8, col:22> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0x9f61700 <col:8, col:14> '<dependent type>' lvalue
                (CXXThisExpr 0x9f616f0 <col:8> 'vector<_Tp, _Alloc> *' this)))
            (CallExpr 0x9f617a8 <line:268:8, col:28> '<dependent type>'
              (UnresolvedMemberExpr 0x9f6176c <col:8> '<dependent type>' lvalue))))))))

;
    void _M_insert_aux(iterator __position, const _Tp &__x) (CompoundStmt 0x9f63a50 </usr/include/c++/4.6/bits/vector.tcc:303:5, line:373:5>
  (IfStmt 0x9f63a30 <line:304:7, line:372:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9f61e18 <line:304:11, col:52> '<dependent type>'
      (UnresolvedLookupExpr 0x9f61db8 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b412d0 0x9ac7fa0 0x9b5e2b0 0x9ba7d20 0x9bc7160 0x9bc74d0 0x9cbb090 0x9cbb590 0x9cbbad0 0x9db08a0 0x9f26e60)
      (CXXDependentScopeMemberExpr 0x9f61d00 <col:11, col:25> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0x9f61cc8 <col:11, col:17> '<dependent type>' lvalue
          (CXXThisExpr 0x9f61cb8 <col:11> 'vector<_Tp, _Alloc> *' this)))
      (CXXDependentScopeMemberExpr 0x9f61d80 <col:38, col:52> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0x9f61d48 <col:38, col:44> '<dependent type>' lvalue
          (CXXThisExpr 0x9f61d38 <col:38> 'vector<_Tp, _Alloc> *' this))))
    (CompoundStmt 0x9f62508 <line:305:2, line:321:2>
      (CallExpr 0x9f62088 <line:306:4, line:308:14> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f61e88 <line:306:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9f61e50 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0x9f61e40 <col:4> 'vector<_Tp, _Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0x9f61f08 <col:28, col:42> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9f61ed0 <col:28, col:34> '<dependent type>' lvalue
            (CXXThisExpr 0x9f61ec0 <col:28> 'vector<_Tp, _Alloc> *' this)))
        (ParenExpr 0x9f62070 </usr/include/c++/4.6/bits/move.h:105:30, col:36> '<dependent type>'
          (UnaryOperator 0x9f62058 </usr/include/c++/4.6/bits/vector.tcc:307:21, line:308:12> '<dependent type>' prefix '*'
            (ParenExpr 0x9f62040 <line:307:22, line:308:12> '<dependent type>'
              (CXXOperatorCallExpr 0x9f62018 <line:307:23, line:308:11> '<dependent type>'
                (UnresolvedLookupExpr 0x9f61fd8 <col:9, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590 0x9f2d6a0)
                (CXXDependentScopeMemberExpr 0x9f61f88 <line:307:23, col:37> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0x9f61f50 <col:23, col:29> '<dependent type>' lvalue
                    (CXXThisExpr 0x9f61f40 <col:23> 'vector<_Tp, _Alloc> *' this)))
                (IntegerLiteral 0x9f61fc0 <line:308:11> 'int' 1))))))
      (UnaryOperator 0x9f62130 <line:309:4, col:20> '<dependent type>' prefix '++'
        (CXXDependentScopeMemberExpr 0x9f620f8 <col:6, col:20> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9f620c0 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x9f620b0 <col:6> 'vector<_Tp, _Alloc> *' this))))
      (DeclStmt 0x9f621a0 <line:311:4, col:22>
        0x9f62150 "_Tp __x_copy =
          (DeclRefExpr 0x9f62184 <col:19> 'const _Tp' lvalue ParmVar 0x9f61ba0 '__x' 'const _Tp &')")
      (CallExpr 0x9f62480 </usr/include/c++/4.6/bits/stl_algobase.h:666:48, col:80> '<dependent type>'
        (UnresolvedLookupExpr 0x9f621d8 <col:48, col:53> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b84c00)
        (CallExpr 0x9f62260 </usr/include/c++/4.6/bits/vector.tcc:313:28, col:44> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9f62228 <col:28, col:39> '<dependent type>' lvalue
            (DeclRefExpr 0x9f6220c <col:28> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x9f61b30 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
        (CXXOperatorCallExpr 0x9f62358 <line:314:7, col:33> '<dependent type>'
          (UnresolvedLookupExpr 0x9f62318 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590 0x9f2d6a0)
          (CXXDependentScopeMemberExpr 0x9f622c8 <col:7, col:21> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x9f62290 <col:7, col:13> '<dependent type>' lvalue
              (CXXThisExpr 0x9f62280 <col:7> 'vector<_Tp, _Alloc> *' this)))
          (IntegerLiteral 0x9f62300 <col:33> 'int' 2))
        (CXXOperatorCallExpr 0x9f62458 <line:315:7, col:33> '<dependent type>'
          (UnresolvedLookupExpr 0x9f62418 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590 0x9f2d6a0)
          (CXXDependentScopeMemberExpr 0x9f623c8 <col:7, col:21> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x9f62390 <col:7, col:13> '<dependent type>' lvalue
              (CXXThisExpr 0x9f62380 <col:7> 'vector<_Tp, _Alloc> *' this)))
          (IntegerLiteral 0x9f62400 <col:33> 'int' 1)))
      (BinaryOperator 0x9f624f0 <line:317:4, col:18> '<dependent type>' '='
        (UnaryOperator 0x9f624c0 <col:4, col:5> '<dependent type>' prefix '*'
          (DeclRefExpr 0x9f624a8 <col:5> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x9f61b30 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'))
        (DeclRefExpr 0x9f624d4 <col:18> '_Tp' lvalue Var 0x9f62150 '__x_copy' '_Tp')))
    (CompoundStmt 0x9f639f0 <line:323:2, line:372:2>
      (DeclStmt 0x9f62650 <line:324:4, line:325:57>
        0x9f62540 "const size_type __len =
          (CallExpr 0x9f62628 <col:6, col:56> '<dependent type>'
            (MemberExpr 0x9f62588 <col:6> '<bound member function type>' ->_M_check_len 0x9f17260
              (CXXThisExpr 0x9f62578 <col:6> 'vector<_Tp, _Alloc> *' this))
            (CXXFunctionalCastExpr 0x9f625d8 <col:19, col:30> 'size_type':'unsigned int' functional cast to size_type <NoOp>
              (ImplicitCastExpr 0x9f625c8 <col:29> 'size_type':'unsigned int' <IntegralCast>
                (IntegerLiteral 0x9f625b0 <col:29> 'int' 1)))
            (StringLiteral 0x9f625f0 <col:33> 'const char [22]' lvalue "vector::_M_insert_aux"))")
      (DeclStmt 0x9f62798 <line:326:4, col:57>
        0x9f62670 "const size_type __elems_before =
          (CXXOperatorCallExpr 0x9f62770 <col:37, col:56> '<dependent type>'
            (UnresolvedLookupExpr 0x9f62730 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590 0x9f2d6a0)
            (DeclRefExpr 0x9f626a4 <col:37> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x9f61b30 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
            (CallExpr 0x9f62710 <col:50, col:56> '<dependent type>'
              (UnresolvedMemberExpr 0x9f626d0 <col:50> '<bound member function type>' lvalue)))")
      (DeclStmt 0x9f62888 <line:327:4, col:49>
        0x9f627b0 "pointer __new_start =
          (ParenListExpr 0x9f62868 <col:23, col:48> 'pointer':'typename _Tp_alloc_type::pointer'
            (CallExpr 0x9f62848 <col:24, col:47> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9f627f8 <col:24, col:30> '<dependent type>' lvalue
                (CXXThisExpr 0x9f627e8 <col:24> 'vector<_Tp, _Alloc> *' this))
              (DeclRefExpr 0x9f6282c <col:42> 'const size_type':'const unsigned int' lvalue Var 0x9f62540 '__len' 'const size_type':'const unsigned int')))")
      (DeclStmt 0x9f62910 <line:328:4, col:37>
        0x9f628a0 "pointer __new_finish =
          (ParenListExpr 0x9f628f0 <col:24, col:36> 'pointer':'typename _Tp_alloc_type::pointer'
            (DeclRefExpr 0x9f628d4 <col:25> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x9f627b0 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer'))")
      (IfStmt 0x9f62f58 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/vector.tcc:354:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9f62920 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9f62f30 </usr/include/c++/4.6/bits/vector.tcc:330:6, line:354:6>
          (CallExpr 0x9f62a70 <line:335:8, line:339:35> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f62978 <line:335:8, col:22> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0x9f62940 <col:8, col:14> '<dependent type>' lvalue
                (CXXThisExpr 0x9f62930 <col:8> 'vector<_Tp, _Alloc> *' this)))
            (CXXOperatorCallExpr 0x9f62a30 <col:32, col:46> '<dependent type>'
              (UnresolvedLookupExpr 0x9f629e0 <col:44, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9ce1500 0x9ce2100 0x9cb8030 0x9cb8830 0x9f2fb40 0x9f31cc0)
              (DeclRefExpr 0x9f629ac <col:32> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x9f627b0 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
              (DeclRefExpr 0x9f629c4 <col:46> 'const size_type':'const unsigned int' lvalue Var 0x9f62670 '__elems_before' 'const size_type':'const unsigned int'))
            (DeclRefExpr 0x9f62a54 <line:339:32> 'const _Tp' lvalue ParmVar 0x9f61ba0 '__x' 'const _Tp &'))
          (BinaryOperator 0x9f62ac8 <line:341:8, col:23> '<dependent type>' '='
            (DeclRefExpr 0x9f62a94 <col:8> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x9f628a0 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
            (IntegerLiteral 0x9f62ab0 <col:23> 'int' 0))
          (BinaryOperator 0x9f62cd8 <line:343:8, line:346:31> '<dependent type>' '='
            (DeclRefExpr 0x9f62ae0 <line:343:8> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x9f628a0 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
            (CallExpr 0x9f62ca8 <line:344:3, line:346:31> '<dependent type>'
              (UnresolvedLookupExpr 0x9f62b10 <line:344:3, col:8> '<overloaded function type>' lvalue (no ADL) = '1' 0x9effe00)
              (CXXDependentScopeMemberExpr 0x9f62b90 <col:31, col:45> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0x9f62b58 <col:31, col:37> '<dependent type>' lvalue
                  (CXXThisExpr 0x9f62b48 <col:31> 'vector<_Tp, _Alloc> *' this)))
              (CallExpr 0x9f62c18 <line:345:10, col:26> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9f62be0 <col:10, col:21> '<dependent type>' lvalue
                  (DeclRefExpr 0x9f62bc4 <col:10> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x9f61b30 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
              (DeclRefExpr 0x9f62c34 <col:29> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x9f627b0 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
              (CallExpr 0x9f62c88 <line:346:10, col:30> '<dependent type>'
                (UnresolvedMemberExpr 0x9f62c4c <col:10> '<dependent type>' lvalue))))
          (UnaryOperator 0x9f62d08 <line:347:8, col:10> '<dependent type>' prefix '++'
            (DeclRefExpr 0x9f62cf0 <col:10> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x9f628a0 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer'))
          (BinaryOperator 0x9f62f18 <line:349:8, line:353:31> '<dependent type>' '='
            (DeclRefExpr 0x9f62d1c <line:349:8> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x9f628a0 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
            (CallExpr 0x9f62ee8 <line:350:3, line:353:31> '<dependent type>'
              (UnresolvedLookupExpr 0x9f62d50 <line:350:3, col:8> '<overloaded function type>' lvalue (no ADL) = '1' 0x9effe00)
              (CallExpr 0x9f62dd8 <col:31, col:47> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9f62da0 <col:31, col:42> '<dependent type>' lvalue
                  (DeclRefExpr 0x9f62d84 <col:31> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x9f61b30 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
              (CXXDependentScopeMemberExpr 0x9f62e40 <line:351:10, col:24> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0x9f62e08 <col:10, col:16> '<dependent type>' lvalue
                  (CXXThisExpr 0x9f62df8 <col:10> 'vector<_Tp, _Alloc> *' this)))
              (DeclRefExpr 0x9f62e74 <line:352:10> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x9f628a0 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
              (CallExpr 0x9f62ec8 <line:353:10, col:30> '<dependent type>'
                (UnresolvedMemberExpr 0x9f62e8c <col:10> '<dependent type>' lvalue)))))
        <<<NULL>>>)
      (IfStmt 0x9f63300 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/vector.tcc:363:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9f62f78 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9f632e0 </usr/include/c++/4.6/bits/vector.tcc:356:6, line:363:6>
          (IfStmt 0x9f63220 <line:357:8, line:360:65>
            <<<NULL>>>
            (UnaryOperator 0x9f62fa0 <line:357:12, col:13> '<dependent type>' prefix '!'
              (DeclRefExpr 0x9f62f88 <col:13> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x9f628a0 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer'))
            (CallExpr 0x9f630e0 <line:358:3, col:53> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9f63000 <col:3, col:17> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0x9f62fc8 <col:3, col:9> '<dependent type>' lvalue
                  (CXXThisExpr 0x9f62fb8 <col:3> 'vector<_Tp, _Alloc> *' this)))
              (CXXOperatorCallExpr 0x9f630b8 <col:25, col:39> '<dependent type>'
                (UnresolvedLookupExpr 0x9f63068 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9ce1500 0x9ce2100 0x9cb8030 0x9cb8830 0x9f2fb40 0x9f31cc0)
                (DeclRefExpr 0x9f63034 <col:25> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x9f627b0 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
                (DeclRefExpr 0x9f6304c <col:39> 'const size_type':'const unsigned int' lvalue Var 0x9f62670 '__elems_before' 'const size_type':'const unsigned int')))
            (CallExpr 0x9f631f8 <line:360:3, col:65> '<dependent type>'
              (UnresolvedLookupExpr 0x9f63128 <col:3, col:8> '<overloaded function type>' lvalue (no ADL) = '1' 0x9ef91a0 0x9ef9e60 0x9efa500 0x9efaab0)
              (DeclRefExpr 0x9f63168 <col:17> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x9f627b0 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
              (DeclRefExpr 0x9f63180 <col:30> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x9f628a0 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
              (CallExpr 0x9f631d8 <col:44, col:64> '<dependent type>'
                (UnresolvedMemberExpr 0x9f63198 <col:44> '<dependent type>' lvalue))))
          (CallExpr 0x9f632a8 <line:361:8, col:40> '<dependent type>'
            (UnresolvedMemberExpr 0x9f6323c <col:8> '<dependent type>' lvalue)
            (DeclRefExpr 0x9f63278 <col:22> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x9f627b0 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
            (DeclRefExpr 0x9f63290 <col:35> 'const size_type':'const unsigned int' lvalue Var 0x9f62540 '__len' 'const size_type':'const unsigned int'))
          (NullStmt 0x9f632d0 <line:362:31>))
        <<<NULL>>>)
      (CallExpr 0x9f634d8 <line:364:4, line:365:25> '<dependent type>'
        (UnresolvedLookupExpr 0x9f63340 <line:364:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x9ef91a0 0x9ef9e60 0x9efa500 0x9efaab0)
        (CXXDependentScopeMemberExpr 0x9f633c8 <col:18, col:32> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9f63390 <col:18, col:24> '<dependent type>' lvalue
            (CXXThisExpr 0x9f63380 <col:18> 'vector<_Tp, _Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0x9f63448 <col:42, col:56> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9f63410 <col:42, col:48> '<dependent type>' lvalue
            (CXXThisExpr 0x9f63400 <col:42> 'vector<_Tp, _Alloc> *' this)))
        (CallExpr 0x9f634b8 <line:365:4, col:24> '<dependent type>'
          (UnresolvedMemberExpr 0x9f6347c <col:4> '<dependent type>' lvalue)))
      (CallExpr 0x9f63728 <line:366:4, line:368:28> '<dependent type>'
        (UnresolvedMemberExpr 0x9f63500 <line:366:4> '<dependent type>' lvalue)
        (CXXDependentScopeMemberExpr 0x9f63588 <col:18, col:32> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9f63550 <col:18, col:24> '<dependent type>' lvalue
            (CXXThisExpr 0x9f63540 <col:18> 'vector<_Tp, _Alloc> *' this)))
        (CXXOperatorCallExpr 0x9f63700 <line:367:4, line:368:20> '<dependent type>'
          (UnresolvedLookupExpr 0x9f636c0 <col:4, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590 0x9f2d6a0)
          (CXXDependentScopeMemberExpr 0x9f63608 <line:367:4, col:18> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x9f635d0 <col:4, col:10> '<dependent type>' lvalue
              (CXXThisExpr 0x9f635c0 <col:4> 'vector<_Tp, _Alloc> *' this)))
          (CXXDependentScopeMemberExpr 0x9f63688 <line:368:6, col:20> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x9f63650 <col:6, col:12> '<dependent type>' lvalue
              (CXXThisExpr 0x9f63640 <col:6> 'vector<_Tp, _Alloc> *' this)))))
      (BinaryOperator 0x9f637e8 <line:369:4, col:29> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0x9f63798 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9f63760 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0x9f63750 <col:4> 'vector<_Tp, _Alloc> *' this)))
        (DeclRefExpr 0x9f637cc <col:29> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x9f627b0 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer'))
      (BinaryOperator 0x9f63898 <line:370:4, col:30> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0x9f63848 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9f63810 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0x9f63800 <col:4> 'vector<_Tp, _Alloc> *' this)))
        (DeclRefExpr 0x9f6387c <col:30> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x9f628a0 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer'))
      (BinaryOperator 0x9f639d8 <line:371:4, col:52> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0x9f638f8 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9f638c0 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0x9f638b0 <col:4> 'vector<_Tp, _Alloc> *' this)))
        (CXXOperatorCallExpr 0x9f639b0 <col:38, col:52> '<dependent type>'
          (UnresolvedLookupExpr 0x9f63960 <col:50, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9ce1500 0x9ce2100 0x9cb8030 0x9cb8830 0x9f2fb40 0x9f31cc0)
          (DeclRefExpr 0x9f6392c <col:38> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x9f627b0 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
          (DeclRefExpr 0x9f63944 <col:52> 'const size_type':'const unsigned int' lvalue Var 0x9f62540 '__len' 'const size_type':'const unsigned int'))))))


    void _M_fill_insert(iterator __position, size_type __n, const value_type &__x) (CompoundStmt 0x9f669a8 </usr/include/c++/4.6/bits/vector.tcc:379:5, line:464:5>
  (IfStmt 0x9f66988 <line:380:7, line:463:2>
    <<<NULL>>>
    (BinaryOperator 0x9f63f00 <line:380:11, col:18> '_Bool' '!='
      (ImplicitCastExpr 0x9f63ee0 <col:11> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9f63eac <col:11> 'size_type':'unsigned int' lvalue ParmVar 0x9f63d50 '__n' 'size_type':'unsigned int'))
      (ImplicitCastExpr 0x9f63ef0 <col:18> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0x9f63ec8 <col:18> 'int' 0)))
    (CompoundStmt 0x9f66970 <line:381:2, line:463:2>
      (IfStmt 0x9f66950 <line:382:4, line:462:6>
        <<<NULL>>>
        (BinaryOperator 0x9f640d0 <line:382:8, line:383:34> '_Bool' '>='
          (CXXUnresolvedConstructExpr 0x9f64088 <line:382:8, line:383:29> 'size_type':'unsigned int'
            (CXXOperatorCallExpr 0x9f64060 <line:382:18, line:383:20> '<dependent type>'
              (UnresolvedLookupExpr 0x9f64020 <col:4, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590 0x9f2d6a0)
              (CXXDependentScopeMemberExpr 0x9f63f68 <line:382:18, col:32> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0x9f63f30 <col:18, col:24> '<dependent type>' lvalue
                  (CXXThisExpr 0x9f63f20 <col:18> 'vector<_Tp, _Alloc> *' this)))
              (CXXDependentScopeMemberExpr 0x9f63fe8 <line:383:6, col:20> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0x9f63fb0 <col:6, col:12> '<dependent type>' lvalue
                  (CXXThisExpr 0x9f63fa0 <col:6> 'vector<_Tp, _Alloc> *' this)))))
          (ImplicitCastExpr 0x9f640c0 <col:34> 'size_type':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0x9f640a4 <col:34> 'size_type':'unsigned int' lvalue ParmVar 0x9f63d50 '__n' 'size_type':'unsigned int')))
        (CompoundStmt 0x9f65278 <line:384:6, line:413:6>
          (DeclStmt 0x9f64140 <line:385:8, col:33>
            0x9f640f0 "value_type __x_copy =
              (DeclRefExpr 0x9f64124 <col:30> 'const value_type':'const _Tp' lvalue ParmVar 0x9f63db0 '__x' 'const value_type &')")
          (DeclStmt 0x9f64288 <line:386:8, col:58>
            0x9f64160 "const size_type __elems_after =
              (CXXOperatorCallExpr 0x9f64260 <col:40, col:48> '<dependent type>'
                (UnresolvedLookupExpr 0x9f64220 <col:46, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590 0x9f2d6a0)
                (CallExpr 0x9f641e8 <col:40, col:44> '<dependent type>'
                  (UnresolvedMemberExpr 0x9f641a8 <col:40> '<bound member function type>' lvalue))
                (DeclRefExpr 0x9f64204 <col:48> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x9f63d10 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'))")
          (DeclStmt 0x9f64378 <line:387:8, col:53>
            0x9f642a0 "pointer __old_finish =
              (ParenListExpr 0x9f64358 <col:28, col:52> 'pointer':'typename _Tp_alloc_type::pointer'
                (CXXDependentScopeMemberExpr 0x9f64320 <col:29, col:43> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0x9f642e8 <col:29, col:35> '<dependent type>' lvalue
                    (CXXThisExpr 0x9f642d8 <col:29> 'vector<_Tp, _Alloc> *' this))))")
          (IfStmt 0x9f65258 <line:388:8, line:412:3>
            <<<NULL>>>
            (BinaryOperator 0x9f643d8 <line:388:12, col:28> '_Bool' '>'
              (ImplicitCastExpr 0x9f643b8 <col:12> 'size_type':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0x9f64388 <col:12> 'const size_type':'const unsigned int' lvalue Var 0x9f64160 '__elems_after' 'const size_type':'const unsigned int'))
              (ImplicitCastExpr 0x9f643c8 <col:28> 'size_type':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0x9f643a0 <col:28> 'size_type':'unsigned int' lvalue ParmVar 0x9f63d50 '__n' 'size_type':'unsigned int')))
            (CompoundStmt 0x9f64b48 <line:389:3, line:399:3>
              (CallExpr 0x9f646a8 <line:390:5, line:393:33> '<dependent type>'
                (UnresolvedLookupExpr 0x9f64418 <line:390:5, col:10> '<overloaded function type>' lvalue (no ADL) = '1' 0x9effe00)
                (CXXOperatorCallExpr 0x9f64528 <col:33, col:59> '<dependent type>'
                  (UnresolvedLookupExpr 0x9f644e8 <col:57, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590 0x9f2d6a0)
                  (CXXDependentScopeMemberExpr 0x9f64498 <col:33, col:47> '<dependent type>' lvalue
                    (CXXDependentScopeMemberExpr 0x9f64460 <col:33, col:39> '<dependent type>' lvalue
                      (CXXThisExpr 0x9f64450 <col:33> 'vector<_Tp, _Alloc> *' this)))
                  (DeclRefExpr 0x9f644cc <col:59> 'size_type':'unsigned int' lvalue ParmVar 0x9f63d50 '__n' 'size_type':'unsigned int'))
                (CXXDependentScopeMemberExpr 0x9f64598 <line:391:12, col:26> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0x9f64560 <col:12, col:18> '<dependent type>' lvalue
                    (CXXThisExpr 0x9f64550 <col:12> 'vector<_Tp, _Alloc> *' this)))
                (CXXDependentScopeMemberExpr 0x9f64618 <line:392:12, col:26> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0x9f645e0 <col:12, col:18> '<dependent type>' lvalue
                    (CXXThisExpr 0x9f645d0 <col:12> 'vector<_Tp, _Alloc> *' this)))
                (CallExpr 0x9f64688 <line:393:12, col:32> '<dependent type>'
                  (UnresolvedMemberExpr 0x9f6464c <col:12> '<dependent type>' lvalue)))
              (CompoundAssignOperator 0x9f64770 <line:394:5, col:32> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                (CXXDependentScopeMemberExpr 0x9f64720 <col:5, col:19> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0x9f646e8 <col:5, col:11> '<dependent type>' lvalue
                    (CXXThisExpr 0x9f646d8 <col:5> 'vector<_Tp, _Alloc> *' this)))
                (DeclRefExpr 0x9f64754 <col:32> 'size_type':'unsigned int' lvalue ParmVar 0x9f63d50 '__n' 'size_type':'unsigned int'))
              (CallExpr 0x9f64910 </usr/include/c++/4.6/bits/stl_algobase.h:666:48, col:80> '<dependent type>'
                (UnresolvedLookupExpr 0x9f647b8 <col:48, col:53> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b84c00)
                (CallExpr 0x9f64840 </usr/include/c++/4.6/bits/vector.tcc:395:29, col:45> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9f64808 <col:29, col:40> '<dependent type>' lvalue
                    (DeclRefExpr 0x9f647ec <col:29> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x9f63d10 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                (CXXOperatorCallExpr 0x9f648d0 <line:396:8, col:23> '<dependent type>'
                  (UnresolvedLookupExpr 0x9f64890 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590 0x9f2d6a0)
                  (DeclRefExpr 0x9f6485c <col:8> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x9f642a0 '__old_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                  (DeclRefExpr 0x9f64874 <col:23> 'size_type':'unsigned int' lvalue ParmVar 0x9f63d50 '__n' 'size_type':'unsigned int'))
                (DeclRefExpr 0x9f648f4 <col:28> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x9f642a0 '__old_finish' 'pointer':'typename _Tp_alloc_type::pointer'))
              (CallExpr 0x9f64b20 <line:397:5, line:398:16> '<dependent type>'
                (UnresolvedLookupExpr 0x9f64960 <line:397:5, col:10> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b88110 0x9f32370)
                (CallExpr 0x9f649e8 <col:15, col:31> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9f649b0 <col:15, col:26> '<dependent type>' lvalue
                    (DeclRefExpr 0x9f64998 <col:15> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x9f63d10 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                (CXXOperatorCallExpr 0x9f64ae0 <col:34, col:54> '<dependent type>'
                  (UnresolvedLookupExpr 0x9f64a90 <col:52, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9ce1500 0x9ce2100 0x9cb8030 0x9cb8830 0x9f2fb40 0x9f31cc0)
                  (CallExpr 0x9f64a58 <col:34, col:50> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9f64a20 <col:34, col:45> '<dependent type>' lvalue
                      (DeclRefExpr 0x9f64a04 <col:34> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x9f63d10 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                  (DeclRefExpr 0x9f64a74 <col:54> 'size_type':'unsigned int' lvalue ParmVar 0x9f63d50 '__n' 'size_type':'unsigned int'))
                (DeclRefExpr 0x9f64b04 <line:398:8> 'value_type':'_Tp' lvalue Var 0x9f640f0 '__x_copy' 'value_type':'_Tp')))
            (CompoundStmt 0x9f65230 <line:401:3, line:412:3>
              (CallExpr 0x9f64d28 <line:402:5, line:405:28> '<dependent type>'
                (UnresolvedLookupExpr 0x9f64b90 <line:402:5, col:10> '<overloaded function type>' lvalue (no ADL) = '1' 0x9f07890 0x9f081c0)
                (CXXDependentScopeMemberExpr 0x9f64c10 <col:35, col:49> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0x9f64bd8 <col:35, col:41> '<dependent type>' lvalue
                    (CXXThisExpr 0x9f64bc8 <col:35> 'vector<_Tp, _Alloc> *' this)))
                (BinaryOperator 0x9f64c98 <line:403:7, col:13> 'unsigned int' '-'
                  (ImplicitCastExpr 0x9f64c78 <col:7> 'size_type':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0x9f64c44 <col:7> 'size_type':'unsigned int' lvalue ParmVar 0x9f63d50 '__n' 'size_type':'unsigned int'))
                  (ImplicitCastExpr 0x9f64c88 <col:13> 'size_type':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0x9f64c5c <col:13> 'const size_type':'const unsigned int' lvalue Var 0x9f64160 '__elems_after' 'const size_type':'const unsigned int')))
                (DeclRefExpr 0x9f64cb0 <line:404:7> 'value_type':'_Tp' lvalue Var 0x9f640f0 '__x_copy' 'value_type':'_Tp')
                (CallExpr 0x9f64d08 <line:405:7, col:27> '<dependent type>'
                  (UnresolvedMemberExpr 0x9f64cc8 <col:7> '<dependent type>' lvalue)))
              (CompoundAssignOperator 0x9f64e40 <line:406:5, col:38> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                (CXXDependentScopeMemberExpr 0x9f64da0 <col:5, col:19> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0x9f64d68 <col:5, col:11> '<dependent type>' lvalue
                    (CXXThisExpr 0x9f64d58 <col:5> 'vector<_Tp, _Alloc> *' this)))
                (BinaryOperator 0x9f64e28 <col:32, col:38> 'unsigned int' '-'
                  (ImplicitCastExpr 0x9f64e08 <col:32> 'size_type':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0x9f64dd4 <col:32> 'size_type':'unsigned int' lvalue ParmVar 0x9f63d50 '__n' 'size_type':'unsigned int'))
                  (ImplicitCastExpr 0x9f64e18 <col:38> 'size_type':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0x9f64dec <col:38> 'const size_type':'const unsigned int' lvalue Var 0x9f64160 '__elems_after' 'const size_type':'const unsigned int'))))
              (CallExpr 0x9f65020 <line:407:5, line:409:33> '<dependent type>'
                (UnresolvedLookupExpr 0x9f64e88 <line:407:5, col:10> '<overloaded function type>' lvalue (no ADL) = '1' 0x9effe00)
                (CallExpr 0x9f64f10 <col:33, col:49> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9f64ed8 <col:33, col:44> '<dependent type>' lvalue
                    (DeclRefExpr 0x9f64ebc <col:33> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x9f63d10 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                (DeclRefExpr 0x9f64f2c <col:52> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x9f642a0 '__old_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (CXXDependentScopeMemberExpr 0x9f64f90 <line:408:12, col:26> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0x9f64f58 <col:12, col:18> '<dependent type>' lvalue
                    (CXXThisExpr 0x9f64f48 <col:12> 'vector<_Tp, _Alloc> *' this)))
                (CallExpr 0x9f65000 <line:409:12, col:32> '<dependent type>'
                  (UnresolvedMemberExpr 0x9f64fc4 <col:12> '<dependent type>' lvalue)))
              (CompoundAssignOperator 0x9f650e8 <line:410:5, col:32> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                (CXXDependentScopeMemberExpr 0x9f65098 <col:5, col:19> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0x9f65060 <col:5, col:11> '<dependent type>' lvalue
                    (CXXThisExpr 0x9f65050 <col:5> 'vector<_Tp, _Alloc> *' this)))
                (DeclRefExpr 0x9f650cc <col:32> 'const size_type':'const unsigned int' lvalue Var 0x9f64160 '__elems_after' 'const size_type':'const unsigned int'))
              (CallExpr 0x9f65208 <line:411:5, col:56> '<dependent type>'
                (UnresolvedLookupExpr 0x9f65130 <col:5, col:10> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b88110 0x9f32370)
                (CallExpr 0x9f651b8 <col:15, col:31> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9f65180 <col:15, col:26> '<dependent type>' lvalue
                    (DeclRefExpr 0x9f65168 <col:15> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x9f63d10 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                (DeclRefExpr 0x9f651d4 <col:34> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x9f642a0 '__old_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (DeclRefExpr 0x9f651ec <col:48> 'value_type':'_Tp' lvalue Var 0x9f640f0 '__x_copy' 'value_type':'_Tp')))))
        (CompoundStmt 0x9f66910 <line:415:6, line:462:6>
          (DeclStmt 0x9f65380 <line:416:8, line:417:46>
            0x9f652a0 "const size_type __len =
              (CallExpr 0x9f65358 <col:3, col:45> '<dependent type>'
                (MemberExpr 0x9f652e8 <col:3> '<bound member function type>' ->_M_check_len 0x9f17260
                  (CXXThisExpr 0x9f652d8 <col:3> 'vector<_Tp, _Alloc> *' this))
                (DeclRefExpr 0x9f65308 <col:16> 'size_type':'unsigned int' lvalue ParmVar 0x9f63d50 '__n' 'size_type':'unsigned int')
                (StringLiteral 0x9f65320 <col:21> 'const char [23]' lvalue "vector::_M_fill_insert"))")
          (DeclStmt 0x9f654c8 <line:418:8, col:61>
            0x9f653a0 "const size_type __elems_before =
              (CXXOperatorCallExpr 0x9f654a0 <col:41, col:60> '<dependent type>'
                (UnresolvedLookupExpr 0x9f65460 <col:52, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590 0x9f2d6a0)
                (DeclRefExpr 0x9f653d4 <col:41> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x9f63d10 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
                (CallExpr 0x9f65440 <col:54, col:60> '<dependent type>'
                  (UnresolvedMemberExpr 0x9f65400 <col:54> '<bound member function type>' lvalue)))")
          (DeclStmt 0x9f655b8 <line:419:8, col:53>
            0x9f654e0 "pointer __new_start =
              (ParenListExpr 0x9f65598 <col:27, col:52> 'pointer':'typename _Tp_alloc_type::pointer'
                (CallExpr 0x9f65578 <col:28, col:51> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9f65528 <col:28, col:34> '<dependent type>' lvalue
                    (CXXThisExpr 0x9f65518 <col:28> 'vector<_Tp, _Alloc> *' this))
                  (DeclRefExpr 0x9f6555c <col:46> 'const size_type':'const unsigned int' lvalue Var 0x9f652a0 '__len' 'const size_type':'const unsigned int')))")
          (DeclStmt 0x9f65640 <line:420:8, col:41>
            0x9f655d0 "pointer __new_finish =
              (ParenListExpr 0x9f65620 <col:28, col:40> 'pointer':'typename _Tp_alloc_type::pointer'
                (DeclRefExpr 0x9f65604 <col:29> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x9f654e0 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer'))")
          (IfStmt 0x9f65d00 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/vector.tcc:441:3>
            <<<NULL>>>
            (CXXBoolLiteralExpr 0x9f65650 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
            (CompoundStmt 0x9f65cd8 </usr/include/c++/4.6/bits/vector.tcc:422:3, line:441:3>
              (CallExpr 0x9f657f0 <line:424:5, line:426:28> '<dependent type>'
                (UnresolvedLookupExpr 0x9f65688 <line:424:5, col:10> '<overloaded function type>' lvalue (no ADL) = '1' 0x9f07890 0x9f081c0)
                (CXXOperatorCallExpr 0x9f65740 <col:35, col:49> '<dependent type>'
                  (UnresolvedLookupExpr 0x9f656f0 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9ce1500 0x9ce2100 0x9cb8030 0x9cb8830 0x9f2fb40 0x9f31cc0)
                  (DeclRefExpr 0x9f656c0 <col:35> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x9f654e0 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
                  (DeclRefExpr 0x9f656d8 <col:49> 'const size_type':'const unsigned int' lvalue Var 0x9f653a0 '__elems_before' 'const size_type':'const unsigned int'))
                (DeclRefExpr 0x9f65764 <line:425:7> 'size_type':'unsigned int' lvalue ParmVar 0x9f63d50 '__n' 'size_type':'unsigned int')
                (DeclRefExpr 0x9f6577c <col:12> 'const value_type':'const _Tp' lvalue ParmVar 0x9f63db0 '__x' 'const value_type &')
                (CallExpr 0x9f657d0 <line:426:7, col:27> '<dependent type>'
                  (UnresolvedMemberExpr 0x9f65794 <col:7> '<dependent type>' lvalue)))
              (BinaryOperator 0x9f65850 <line:427:5, col:20> '<dependent type>' '='
                (DeclRefExpr 0x9f6581c <col:5> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x9f655d0 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (IntegerLiteral 0x9f65838 <col:20> 'int' 0))
              (BinaryOperator 0x9f65a60 <line:429:5, line:433:28> '<dependent type>' '='
                (DeclRefExpr 0x9f65868 <line:429:5> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x9f655d0 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (CallExpr 0x9f65a30 <line:430:7, line:433:28> '<dependent type>'
                  (UnresolvedLookupExpr 0x9f65898 <line:430:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9effe00)
                  (CXXDependentScopeMemberExpr 0x9f65918 <col:35, col:49> '<dependent type>' lvalue
                    (CXXDependentScopeMemberExpr 0x9f658e0 <col:35, col:41> '<dependent type>' lvalue
                      (CXXThisExpr 0x9f658d0 <col:35> 'vector<_Tp, _Alloc> *' this)))
                  (CallExpr 0x9f659a0 <line:431:7, col:23> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9f65968 <col:7, col:18> '<dependent type>' lvalue
                      (DeclRefExpr 0x9f6594c <col:7> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x9f63d10 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                  (DeclRefExpr 0x9f659bc <line:432:7> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x9f654e0 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
                  (CallExpr 0x9f65a10 <line:433:7, col:27> '<dependent type>'
                    (UnresolvedMemberExpr 0x9f659d4 <col:7> '<dependent type>' lvalue))))
              (CompoundAssignOperator 0x9f65aa8 <line:434:5, col:21> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                (DeclRefExpr 0x9f65a78 <col:5> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x9f655d0 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (DeclRefExpr 0x9f65a90 <col:21> 'size_type':'unsigned int' lvalue ParmVar 0x9f63d50 '__n' 'size_type':'unsigned int'))
              (BinaryOperator 0x9f65cc0 <line:436:5, line:440:28> '<dependent type>' '='
                (DeclRefExpr 0x9f65ac8 <line:436:5> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x9f655d0 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (CallExpr 0x9f65c90 <line:437:7, line:440:28> '<dependent type>'
                  (UnresolvedLookupExpr 0x9f65af8 <line:437:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9effe00)
                  (CallExpr 0x9f65b80 <col:35, col:51> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9f65b48 <col:35, col:46> '<dependent type>' lvalue
                      (DeclRefExpr 0x9f65b2c <col:35> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x9f63d10 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                  (CXXDependentScopeMemberExpr 0x9f65be8 <line:438:7, col:21> '<dependent type>' lvalue
                    (CXXDependentScopeMemberExpr 0x9f65bb0 <col:7, col:13> '<dependent type>' lvalue
                      (CXXThisExpr 0x9f65ba0 <col:7> 'vector<_Tp, _Alloc> *' this)))
                  (DeclRefExpr 0x9f65c1c <line:439:7> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x9f655d0 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                  (CallExpr 0x9f65c70 <line:440:7, col:27> '<dependent type>'
                    (UnresolvedMemberExpr 0x9f65c34 <col:7> '<dependent type>' lvalue)))))
            <<<NULL>>>)
          (IfStmt 0x9f66220 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/vector.tcc:453:3>
            <<<NULL>>>
            (CXXBoolLiteralExpr 0x9f65d20 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
            (CompoundStmt 0x9f66200 </usr/include/c++/4.6/bits/vector.tcc:443:3, line:453:3>
              (IfStmt 0x9f66140 <line:444:5, line:450:28>
                <<<NULL>>>
                (UnaryOperator 0x9f65d48 <line:444:9, col:10> '<dependent type>' prefix '!'
                  (DeclRefExpr 0x9f65d30 <col:10> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x9f655d0 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer'))
                (CallExpr 0x9f65ff8 <line:445:7, line:447:28> '<dependent type>'
                  (UnresolvedLookupExpr 0x9f65d80 <line:445:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9ef91a0 0x9ef9e60 0x9efa500 0x9efaab0)
                  (CXXOperatorCallExpr 0x9f65e40 <col:21, col:35> '<dependent type>'
                    (UnresolvedLookupExpr 0x9f65df0 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9ce1500 0x9ce2100 0x9cb8030 0x9cb8830 0x9f2fb40 0x9f31cc0)
                    (DeclRefExpr 0x9f65dc0 <col:21> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x9f654e0 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
                    (DeclRefExpr 0x9f65dd8 <col:35> 'const size_type':'const unsigned int' lvalue Var 0x9f653a0 '__elems_before' 'const size_type':'const unsigned int'))
                  (CXXOperatorCallExpr 0x9f65f78 <line:446:7, col:38> '<dependent type>'
                    (UnresolvedLookupExpr 0x9f65f28 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9ce1500 0x9ce2100 0x9cb8030 0x9cb8830 0x9f2fb40 0x9f31cc0)
                    (CXXOperatorCallExpr 0x9f65ee8 <col:7, col:21> '<dependent type>'
                      (UnresolvedLookupExpr 0x9f65e98 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9ce1500 0x9ce2100 0x9cb8030 0x9cb8830 0x9f2fb40 0x9f31cc0)
                      (DeclRefExpr 0x9f65e64 <col:7> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x9f654e0 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
                      (DeclRefExpr 0x9f65e7c <col:21> 'const size_type':'const unsigned int' lvalue Var 0x9f653a0 '__elems_before' 'const size_type':'const unsigned int'))
                    (DeclRefExpr 0x9f65f0c <col:38> 'size_type':'unsigned int' lvalue ParmVar 0x9f63d50 '__n' 'size_type':'unsigned int'))
                  (CallExpr 0x9f65fd8 <line:447:7, col:27> '<dependent type>'
                    (UnresolvedMemberExpr 0x9f65f9c <col:7> '<dependent type>' lvalue)))
                (CallExpr 0x9f66118 <line:449:7, line:450:28> '<dependent type>'
                  (UnresolvedLookupExpr 0x9f66048 <line:449:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9ef91a0 0x9ef9e60 0x9efa500 0x9efaab0)
                  (DeclRefExpr 0x9f66088 <col:21> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x9f654e0 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
                  (DeclRefExpr 0x9f660a0 <col:34> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x9f655d0 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                  (CallExpr 0x9f660f8 <line:450:7, col:27> '<dependent type>'
                    (UnresolvedMemberExpr 0x9f660b8 <col:7> '<dependent type>' lvalue))))
              (CallExpr 0x9f661c8 <line:451:5, col:37> '<dependent type>'
                (UnresolvedMemberExpr 0x9f6615c <col:5> '<dependent type>' lvalue)
                (DeclRefExpr 0x9f66198 <col:19> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x9f654e0 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
                (DeclRefExpr 0x9f661b0 <col:32> 'const size_type':'const unsigned int' lvalue Var 0x9f652a0 '__len' 'const size_type':'const unsigned int'))
              (NullStmt 0x9f661f0 <line:452:28>))
            <<<NULL>>>)
          (CallExpr 0x9f663f8 <line:454:8, line:455:29> '<dependent type>'
            (UnresolvedLookupExpr 0x9f66260 <line:454:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0x9ef91a0 0x9ef9e60 0x9efa500 0x9efaab0)
            (CXXDependentScopeMemberExpr 0x9f662e8 <col:22, col:36> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0x9f662b0 <col:22, col:28> '<dependent type>' lvalue
                (CXXThisExpr 0x9f662a0 <col:22> 'vector<_Tp, _Alloc> *' this)))
            (CXXDependentScopeMemberExpr 0x9f66368 <col:46, col:60> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0x9f66330 <col:46, col:52> '<dependent type>' lvalue
                (CXXThisExpr 0x9f66320 <col:46> 'vector<_Tp, _Alloc> *' this)))
            (CallExpr 0x9f663d8 <line:455:8, col:28> '<dependent type>'
              (UnresolvedMemberExpr 0x9f6639c <col:8> '<dependent type>' lvalue)))
          (CallExpr 0x9f66648 <line:456:8, line:458:32> '<dependent type>'
            (UnresolvedMemberExpr 0x9f66420 <line:456:8> '<dependent type>' lvalue)
            (CXXDependentScopeMemberExpr 0x9f664a8 <col:22, col:36> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0x9f66470 <col:22, col:28> '<dependent type>' lvalue
                (CXXThisExpr 0x9f66460 <col:22> 'vector<_Tp, _Alloc> *' this)))
            (CXXOperatorCallExpr 0x9f66620 <line:457:8, line:458:24> '<dependent type>'
              (UnresolvedLookupExpr 0x9f665e0 <col:8, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590 0x9f2d6a0)
              (CXXDependentScopeMemberExpr 0x9f66528 <line:457:8, col:22> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0x9f664f0 <col:8, col:14> '<dependent type>' lvalue
                  (CXXThisExpr 0x9f664e0 <col:8> 'vector<_Tp, _Alloc> *' this)))
              (CXXDependentScopeMemberExpr 0x9f665a8 <line:458:10, col:24> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0x9f66570 <col:10, col:16> '<dependent type>' lvalue
                  (CXXThisExpr 0x9f66560 <col:10> 'vector<_Tp, _Alloc> *' this)))))
          (BinaryOperator 0x9f66708 <line:459:8, col:33> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0x9f666b8 <col:8, col:22> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0x9f66680 <col:8, col:14> '<dependent type>' lvalue
                (CXXThisExpr 0x9f66670 <col:8> 'vector<_Tp, _Alloc> *' this)))
            (DeclRefExpr 0x9f666ec <col:33> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x9f654e0 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer'))
          (BinaryOperator 0x9f667b8 <line:460:8, col:34> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0x9f66768 <col:8, col:22> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0x9f66730 <col:8, col:14> '<dependent type>' lvalue
                (CXXThisExpr 0x9f66720 <col:8> 'vector<_Tp, _Alloc> *' this)))
            (DeclRefExpr 0x9f6679c <col:34> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x9f655d0 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer'))
          (BinaryOperator 0x9f668f8 <line:461:8, col:56> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0x9f66818 <col:8, col:22> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0x9f667e0 <col:8, col:14> '<dependent type>' lvalue
                (CXXThisExpr 0x9f667d0 <col:8> 'vector<_Tp, _Alloc> *' this)))
            (CXXOperatorCallExpr 0x9f668d0 <col:42, col:56> '<dependent type>'
              (UnresolvedLookupExpr 0x9f66880 <col:54, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9ce1500 0x9ce2100 0x9cb8030 0x9cb8830 0x9f2fb40 0x9f31cc0)
              (DeclRefExpr 0x9f6684c <col:42> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x9f654e0 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
              (DeclRefExpr 0x9f66864 <col:56> 'const size_type':'const unsigned int' lvalue Var 0x9f652a0 '__len' 'const size_type':'const unsigned int'))))))
    <<<NULL>>>))


    template <typename _InputIterator> void _M_range_insert(iterator __pos, _InputIterator __first, _InputIterator __last, std::input_iterator_tag) (CompoundStmt 0x9f67180 </usr/include/c++/4.6/bits/vector.tcc:525:7, line:531:7>
  (ForStmt 0x9f67158 <line:526:2, line:530:4>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9f66fc0 <line:526:9, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0x9f66f60 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b412d0 0x9ac7fa0 0x9b5e2b0 0x9ba7d20 0x9bc7160 0x9bc74d0 0x9cbb090 0x9cbb590 0x9cbbad0 0x9db08a0 0x9f26e60)
      (DeclRefExpr 0x9f66f2c <col:9> '_InputIterator' lvalue ParmVar 0x9f66d00 '__first' '_InputIterator')
      (DeclRefExpr 0x9f66f44 <col:20> '_InputIterator' lvalue ParmVar 0x9f66d40 '__last' '_InputIterator'))
    (UnaryOperator 0x9f67000 <col:28, col:30> '<dependent type>' prefix '++'
      (DeclRefExpr 0x9f66fe4 <col:30> '_InputIterator' lvalue ParmVar 0x9f66d00 '__first' '_InputIterator'))
    (CompoundStmt 0x9f67140 <line:527:4, line:530:4>
      (BinaryOperator 0x9f670f8 <line:528:6, col:36> '<dependent type>' '='
        (DeclRefExpr 0x9f67014 <col:6> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x9f66cc0 '__pos' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
        (CallExpr 0x9f670d0 <col:14, col:36> '<dependent type>'
          (UnresolvedMemberExpr 0x9f67040 <col:14> '<bound member function type>' lvalue)
          (DeclRefExpr 0x9f67084 <col:21> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x9f66cc0 '__pos' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
          (UnaryOperator 0x9f670b8 <col:28, col:29> '<dependent type>' prefix '*'
            (DeclRefExpr 0x9f6709c <col:29> '_InputIterator' lvalue ParmVar 0x9f66d00 '__first' '_InputIterator'))))
      (UnaryOperator 0x9f67128 <line:529:6, col:8> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9f67110 <col:8> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x9f66cc0 '__pos' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))))

;
    template <typename _ForwardIterator> void _M_range_insert(iterator __position, _ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag) (CompoundStmt 0x9f69cc0 </usr/include/c++/4.6/bits/vector.tcc:539:7, line:615:7>
  (IfStmt 0x9f69ca0 <line:540:2, line:614:4>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9f677a0 <line:540:6, col:17> '<dependent type>'
      (UnresolvedLookupExpr 0x9f67740 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b412d0 0x9ac7fa0 0x9b5e2b0 0x9ba7d20 0x9bc7160 0x9bc74d0 0x9cbb090 0x9cbb590 0x9cbbad0 0x9db08a0 0x9f26e60)
      (DeclRefExpr 0x9f6770c <col:6> '_ForwardIterator' lvalue ParmVar 0x9f674e0 '__first' '_ForwardIterator')
      (DeclRefExpr 0x9f67724 <col:17> '_ForwardIterator' lvalue ParmVar 0x9f67520 '__last' '_ForwardIterator'))
    (CompoundStmt 0x9f69c88 <line:541:4, line:614:4>
      (DeclStmt 0x9f678b0 <line:542:6, col:58>
        0x9f677d0 "const size_type __n =
          (CallExpr 0x9f67888 <col:28, col:57> '<dependent type>'
            (UnresolvedLookupExpr 0x9f67820 <col:28, col:33> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b4eac0)
            (DeclRefExpr 0x9f67854 <col:42> '_ForwardIterator' lvalue ParmVar 0x9f674e0 '__first' '_ForwardIterator')
            (DeclRefExpr 0x9f6786c <col:51> '_ForwardIterator' lvalue ParmVar 0x9f67520 '__last' '_ForwardIterator'))")
      (IfStmt 0x9f69c68 <line:543:6, line:613:8>
        <<<NULL>>>
        (BinaryOperator 0x9f67a78 <line:543:10, line:544:36> '_Bool' '>='
          (CXXUnresolvedConstructExpr 0x9f67a30 <line:543:10, line:544:31> 'size_type':'unsigned int'
            (CXXOperatorCallExpr 0x9f67a08 <line:543:20, line:544:22> '<dependent type>'
              (UnresolvedLookupExpr 0x9f679c8 <col:6, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590 0x9f2d6a0)
              (CXXDependentScopeMemberExpr 0x9f67910 <line:543:20, col:34> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0x9f678d8 <col:20, col:26> '<dependent type>' lvalue
                  (CXXThisExpr 0x9f678c8 <col:20> 'vector<_Tp, _Alloc> *' this)))
              (CXXDependentScopeMemberExpr 0x9f67990 <line:544:8, col:22> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0x9f67958 <col:8, col:14> '<dependent type>' lvalue
                  (CXXThisExpr 0x9f67948 <col:8> 'vector<_Tp, _Alloc> *' this)))))
          (ImplicitCastExpr 0x9f67a68 <col:36> 'size_type':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0x9f67a4c <col:36> 'const size_type':'const unsigned int' lvalue Var 0x9f677d0 '__n' 'const size_type':'const unsigned int')))
        (CompoundStmt 0x9f68ae8 <line:545:8, line:574:8>
          (DeclStmt 0x9f67bc8 <line:546:3, col:53>
            0x9f67aa0 "const size_type __elems_after =
              (CXXOperatorCallExpr 0x9f67ba0 <col:35, col:43> '<dependent type>'
                (UnresolvedLookupExpr 0x9f67b60 <col:41, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590 0x9f2d6a0)
                (CallExpr 0x9f67b28 <col:35, col:39> '<dependent type>'
                  (UnresolvedMemberExpr 0x9f67ae8 <col:35> '<bound member function type>' lvalue))
                (DeclRefExpr 0x9f67b44 <col:43> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x9f674a0 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'))")
          (DeclStmt 0x9f67cb8 <line:547:3, col:48>
            0x9f67be0 "pointer __old_finish =
              (ParenListExpr 0x9f67c98 <col:23, col:47> 'pointer':'typename _Tp_alloc_type::pointer'
                (CXXDependentScopeMemberExpr 0x9f67c60 <col:24, col:38> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0x9f67c28 <col:24, col:30> '<dependent type>' lvalue
                    (CXXThisExpr 0x9f67c18 <col:24> 'vector<_Tp, _Alloc> *' this))))")
          (IfStmt 0x9f68ac8 <line:548:3, line:573:5>
            <<<NULL>>>
            (BinaryOperator 0x9f67d18 <line:548:7, col:23> '_Bool' '>'
              (ImplicitCastExpr 0x9f67cf8 <col:7> 'size_type':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0x9f67cc8 <col:7> 'const size_type':'const unsigned int' lvalue Var 0x9f67aa0 '__elems_after' 'const size_type':'const unsigned int'))
              (ImplicitCastExpr 0x9f67d08 <col:23> 'size_type':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0x9f67ce0 <col:23> 'const size_type':'const unsigned int' lvalue Var 0x9f677d0 '__n' 'const size_type':'const unsigned int')))
            (CompoundStmt 0x9f68348 <line:549:5, line:558:5>
              (CallExpr 0x9f67fe8 <line:550:7, line:553:28> '<dependent type>'
                (UnresolvedLookupExpr 0x9f67d58 <line:550:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9effe00)
                (CXXOperatorCallExpr 0x9f67e68 <col:35, col:61> '<dependent type>'
                  (UnresolvedLookupExpr 0x9f67e28 <col:59, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590 0x9f2d6a0)
                  (CXXDependentScopeMemberExpr 0x9f67dd8 <col:35, col:49> '<dependent type>' lvalue
                    (CXXDependentScopeMemberExpr 0x9f67da0 <col:35, col:41> '<dependent type>' lvalue
                      (CXXThisExpr 0x9f67d90 <col:35> 'vector<_Tp, _Alloc> *' this)))
                  (DeclRefExpr 0x9f67e0c <col:61> 'const size_type':'const unsigned int' lvalue Var 0x9f677d0 '__n' 'const size_type':'const unsigned int'))
                (CXXDependentScopeMemberExpr 0x9f67ed8 <line:551:7, col:21> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0x9f67ea0 <col:7, col:13> '<dependent type>' lvalue
                    (CXXThisExpr 0x9f67e90 <col:7> 'vector<_Tp, _Alloc> *' this)))
                (CXXDependentScopeMemberExpr 0x9f67f58 <line:552:7, col:21> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0x9f67f20 <col:7, col:13> '<dependent type>' lvalue
                    (CXXThisExpr 0x9f67f10 <col:7> 'vector<_Tp, _Alloc> *' this)))
                (CallExpr 0x9f67fc8 <line:553:7, col:27> '<dependent type>'
                  (UnresolvedMemberExpr 0x9f67f8c <col:7> '<dependent type>' lvalue)))
              (CompoundAssignOperator 0x9f680b0 <line:554:7, col:34> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                (CXXDependentScopeMemberExpr 0x9f68060 <col:7, col:21> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0x9f68028 <col:7, col:13> '<dependent type>' lvalue
                    (CXXThisExpr 0x9f68018 <col:7> 'vector<_Tp, _Alloc> *' this)))
                (DeclRefExpr 0x9f68094 <col:34> 'const size_type':'const unsigned int' lvalue Var 0x9f677d0 '__n' 'const size_type':'const unsigned int'))
              (CallExpr 0x9f68250 </usr/include/c++/4.6/bits/stl_algobase.h:666:48, col:80> '<dependent type>'
                (UnresolvedLookupExpr 0x9f680f8 <col:48, col:53> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b84c00)
                (CallExpr 0x9f68180 </usr/include/c++/4.6/bits/vector.tcc:555:31, col:47> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9f68148 <col:31, col:42> '<dependent type>' lvalue
                    (DeclRefExpr 0x9f6812c <col:31> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x9f674a0 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                (CXXOperatorCallExpr 0x9f68210 <line:556:10, col:25> '<dependent type>'
                  (UnresolvedLookupExpr 0x9f681d0 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590 0x9f2d6a0)
                  (DeclRefExpr 0x9f6819c <col:10> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x9f67be0 '__old_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                  (DeclRefExpr 0x9f681b4 <col:25> 'const size_type':'const unsigned int' lvalue Var 0x9f677d0 '__n' 'const size_type':'const unsigned int'))
                (DeclRefExpr 0x9f68234 <col:30> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x9f67be0 '__old_finish' 'pointer':'typename _Tp_alloc_type::pointer'))
              (CallExpr 0x9f68320 <line:557:7, col:44> '<dependent type>'
                (UnresolvedLookupExpr 0x9f682a0 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b7fe20 0x9db46a0)
                (DeclRefExpr 0x9f682d8 <col:17> '_ForwardIterator' lvalue ParmVar 0x9f674e0 '__first' '_ForwardIterator')
                (DeclRefExpr 0x9f682f0 <col:26> '_ForwardIterator' lvalue ParmVar 0x9f67520 '__last' '_ForwardIterator')
                (DeclRefExpr 0x9f68308 <col:34> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x9f674a0 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
            (CompoundStmt 0x9f68a98 <line:560:5, line:573:5>
              (DeclStmt 0x9f683c0 <line:561:7, col:39>
                0x9f68370 "_ForwardIterator __mid =
                  (DeclRefExpr 0x9f683a4 <col:32> '_ForwardIterator' lvalue ParmVar 0x9f674e0 '__first' '_ForwardIterator')")
              (CallExpr 0x9f68460 <line:562:7, col:40> '<dependent type>'
                (UnresolvedLookupExpr 0x9f683f8 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b51250)
                (DeclRefExpr 0x9f6842c <col:20> '_ForwardIterator' lvalue Var 0x9f68370 '__mid' '_ForwardIterator')
                (DeclRefExpr 0x9f68444 <col:27> 'const size_type':'const unsigned int' lvalue Var 0x9f67aa0 '__elems_after' 'const size_type':'const unsigned int'))
              (CallExpr 0x9f685e8 <line:563:7, line:565:28> '<dependent type>'
                (UnresolvedLookupExpr 0x9f684a8 <line:563:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9eff0f0 0x9eff9f0)
                (DeclRefExpr 0x9f684e0 <col:35> '_ForwardIterator' lvalue Var 0x9f68370 '__mid' '_ForwardIterator')
                (DeclRefExpr 0x9f684f8 <col:42> '_ForwardIterator' lvalue ParmVar 0x9f67520 '__last' '_ForwardIterator')
                (CXXDependentScopeMemberExpr 0x9f68558 <line:564:7, col:21> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0x9f68520 <col:7, col:13> '<dependent type>' lvalue
                    (CXXThisExpr 0x9f68510 <col:7> 'vector<_Tp, _Alloc> *' this)))
                (CallExpr 0x9f685c8 <line:565:7, col:27> '<dependent type>'
                  (UnresolvedMemberExpr 0x9f6858c <col:7> '<dependent type>' lvalue)))
              (CompoundAssignOperator 0x9f68700 <line:566:7, col:40> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                (CXXDependentScopeMemberExpr 0x9f68660 <col:7, col:21> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0x9f68628 <col:7, col:13> '<dependent type>' lvalue
                    (CXXThisExpr 0x9f68618 <col:7> 'vector<_Tp, _Alloc> *' this)))
                (BinaryOperator 0x9f686e8 <col:34, col:40> 'unsigned int' '-'
                  (ImplicitCastExpr 0x9f686c8 <col:34> 'size_type':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0x9f68694 <col:34> 'const size_type':'const unsigned int' lvalue Var 0x9f677d0 '__n' 'const size_type':'const unsigned int'))
                  (ImplicitCastExpr 0x9f686d8 <col:40> 'size_type':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0x9f686ac <col:40> 'const size_type':'const unsigned int' lvalue Var 0x9f67aa0 '__elems_after' 'const size_type':'const unsigned int'))))
              (CallExpr 0x9f688e0 <line:567:7, line:570:28> '<dependent type>'
                (UnresolvedLookupExpr 0x9f68748 <line:567:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9effe00)
                (CallExpr 0x9f687d0 <col:35, col:51> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9f68798 <col:35, col:46> '<dependent type>' lvalue
                    (DeclRefExpr 0x9f6877c <col:35> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x9f674a0 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                (DeclRefExpr 0x9f687ec <line:568:7> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x9f67be0 '__old_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (CXXDependentScopeMemberExpr 0x9f68850 <line:569:7, col:21> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0x9f68818 <col:7, col:13> '<dependent type>' lvalue
                    (CXXThisExpr 0x9f68808 <col:7> 'vector<_Tp, _Alloc> *' this)))
                (CallExpr 0x9f688c0 <line:570:7, col:27> '<dependent type>'
                  (UnresolvedMemberExpr 0x9f68884 <col:7> '<dependent type>' lvalue)))
              (CompoundAssignOperator 0x9f689a8 <line:571:7, col:34> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                (CXXDependentScopeMemberExpr 0x9f68958 <col:7, col:21> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0x9f68920 <col:7, col:13> '<dependent type>' lvalue
                    (CXXThisExpr 0x9f68910 <col:7> 'vector<_Tp, _Alloc> *' this)))
                (DeclRefExpr 0x9f6898c <col:34> 'const size_type':'const unsigned int' lvalue Var 0x9f67aa0 '__elems_after' 'const size_type':'const unsigned int'))
              (CallExpr 0x9f68a70 <line:572:7, col:43> '<dependent type>'
                (UnresolvedLookupExpr 0x9f689f0 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b7fe20 0x9db46a0)
                (DeclRefExpr 0x9f68a28 <col:17> '_ForwardIterator' lvalue ParmVar 0x9f674e0 '__first' '_ForwardIterator')
                (DeclRefExpr 0x9f68a40 <col:26> '_ForwardIterator' lvalue Var 0x9f68370 '__mid' '_ForwardIterator')
                (DeclRefExpr 0x9f68a58 <col:33> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x9f674a0 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))))
        (CompoundStmt 0x9f69c30 <line:576:8, line:613:8>
          (DeclStmt 0x9f68bf0 <line:577:3, line:578:49>
            0x9f68b10 "const size_type __len =
              (CallExpr 0x9f68bc8 <col:5, col:48> '<dependent type>'
                (MemberExpr 0x9f68b58 <col:5> '<bound member function type>' ->_M_check_len 0x9f17260
                  (CXXThisExpr 0x9f68b48 <col:5> 'vector<_Tp, _Alloc> *' this))
                (DeclRefExpr 0x9f68b78 <col:18> 'const size_type':'const unsigned int' lvalue Var 0x9f677d0 '__n' 'const size_type':'const unsigned int')
                (StringLiteral 0x9f68b90 <col:23> 'const char [24]' lvalue "vector::_M_range_insert"))")
          (DeclStmt 0x9f68ce8 <line:579:3, col:48>
            0x9f68c10 "pointer __new_start =
              (ParenListExpr 0x9f68cc8 <col:22, col:47> 'pointer':'typename _Tp_alloc_type::pointer'
                (CallExpr 0x9f68ca8 <col:23, col:46> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9f68c58 <col:23, col:29> '<dependent type>' lvalue
                    (CXXThisExpr 0x9f68c48 <col:23> 'vector<_Tp, _Alloc> *' this))
                  (DeclRefExpr 0x9f68c8c <col:41> 'const size_type':'const unsigned int' lvalue Var 0x9f68b10 '__len' 'const size_type':'const unsigned int')))")
          (DeclStmt 0x9f68d70 <line:580:3, col:36>
            0x9f68d00 "pointer __new_finish =
              (ParenListExpr 0x9f68d50 <col:23, col:35> 'pointer':'typename _Tp_alloc_type::pointer'
                (DeclRefExpr 0x9f68d34 <col:24> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x9f68c10 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer'))")
          (IfStmt 0x9f69328 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/vector.tcc:597:5>
            <<<NULL>>>
            (CXXBoolLiteralExpr 0x9f68d80 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
            (CompoundStmt 0x9f69308 </usr/include/c++/4.6/bits/vector.tcc:582:5, line:597:5>
              (BinaryOperator 0x9f68f88 <line:583:7, line:587:30> '<dependent type>' '='
                (DeclRefExpr 0x9f68d90 <line:583:7> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x9f68d00 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (CallExpr 0x9f68f58 <line:584:9, line:587:30> '<dependent type>'
                  (UnresolvedLookupExpr 0x9f68dc0 <line:584:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0x9effe00)
                  (CXXDependentScopeMemberExpr 0x9f68e40 <col:37, col:51> '<dependent type>' lvalue
                    (CXXDependentScopeMemberExpr 0x9f68e08 <col:37, col:43> '<dependent type>' lvalue
                      (CXXThisExpr 0x9f68df8 <col:37> 'vector<_Tp, _Alloc> *' this)))
                  (CallExpr 0x9f68ec8 <line:585:9, col:25> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9f68e90 <col:9, col:20> '<dependent type>' lvalue
                      (DeclRefExpr 0x9f68e74 <col:9> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x9f674a0 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                  (DeclRefExpr 0x9f68ee4 <line:586:9> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x9f68c10 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
                  (CallExpr 0x9f68f38 <line:587:9, col:29> '<dependent type>'
                    (UnresolvedMemberExpr 0x9f68efc <col:9> '<dependent type>' lvalue))))
              (BinaryOperator 0x9f690e0 <line:588:7, line:591:30> '<dependent type>' '='
                (DeclRefExpr 0x9f68fa0 <line:588:7> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x9f68d00 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (CallExpr 0x9f690b0 <line:589:9, line:591:30> '<dependent type>'
                  (UnresolvedLookupExpr 0x9f68fd0 <line:589:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0x9eff0f0 0x9eff9f0)
                  (DeclRefExpr 0x9f69008 <col:37> '_ForwardIterator' lvalue ParmVar 0x9f674e0 '__first' '_ForwardIterator')
                  (DeclRefExpr 0x9f69020 <col:46> '_ForwardIterator' lvalue ParmVar 0x9f67520 '__last' '_ForwardIterator')
                  (DeclRefExpr 0x9f69038 <line:590:9> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x9f68d00 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                  (CallExpr 0x9f69090 <line:591:9, col:29> '<dependent type>'
                    (UnresolvedMemberExpr 0x9f69050 <col:9> '<dependent type>' lvalue))))
              (BinaryOperator 0x9f692f0 <line:592:7, line:596:30> '<dependent type>' '='
                (DeclRefExpr 0x9f690f8 <line:592:7> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x9f68d00 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (CallExpr 0x9f692c0 <line:593:9, line:596:30> '<dependent type>'
                  (UnresolvedLookupExpr 0x9f69128 <line:593:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0x9effe00)
                  (CallExpr 0x9f691b0 <col:37, col:53> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9f69178 <col:37, col:48> '<dependent type>' lvalue
                      (DeclRefExpr 0x9f6915c <col:37> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x9f674a0 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                  (CXXDependentScopeMemberExpr 0x9f69218 <line:594:9, col:23> '<dependent type>' lvalue
                    (CXXDependentScopeMemberExpr 0x9f691e0 <col:9, col:15> '<dependent type>' lvalue
                      (CXXThisExpr 0x9f691d0 <col:9> 'vector<_Tp, _Alloc> *' this)))
                  (DeclRefExpr 0x9f6924c <line:595:9> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x9f68d00 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                  (CallExpr 0x9f692a0 <line:596:9, col:29> '<dependent type>'
                    (UnresolvedMemberExpr 0x9f69264 <col:9> '<dependent type>' lvalue)))))
            <<<NULL>>>)
          (IfStmt 0x9f69540 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/vector.tcc:604:5>
            <<<NULL>>>
            (CXXBoolLiteralExpr 0x9f69348 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
            (CompoundStmt 0x9f69520 </usr/include/c++/4.6/bits/vector.tcc:599:5, line:604:5>
              (CallExpr 0x9f69450 <line:600:7, line:601:28> '<dependent type>'
                (UnresolvedLookupExpr 0x9f69380 <line:600:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9ef91a0 0x9ef9e60 0x9efa500 0x9efaab0)
                (DeclRefExpr 0x9f693c0 <col:21> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x9f68c10 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
                (DeclRefExpr 0x9f693d8 <col:34> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x9f68d00 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (CallExpr 0x9f69430 <line:601:7, col:27> '<dependent type>'
                  (UnresolvedMemberExpr 0x9f693f0 <col:7> '<dependent type>' lvalue)))
              (CallExpr 0x9f694e8 <line:602:7, col:39> '<dependent type>'
                (UnresolvedMemberExpr 0x9f69478 <col:7> '<dependent type>' lvalue)
                (DeclRefExpr 0x9f694b4 <col:21> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x9f68c10 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
                (DeclRefExpr 0x9f694cc <col:34> 'const size_type':'const unsigned int' lvalue Var 0x9f68b10 '__len' 'const size_type':'const unsigned int'))
              (NullStmt 0x9f69510 <line:603:30>))
            <<<NULL>>>)
          (CallExpr 0x9f69718 <line:605:3, line:606:31> '<dependent type>'
            (UnresolvedLookupExpr 0x9f69580 <line:605:3, col:8> '<overloaded function type>' lvalue (no ADL) = '1' 0x9ef91a0 0x9ef9e60 0x9efa500 0x9efaab0)
            (CXXDependentScopeMemberExpr 0x9f69608 <col:17, col:31> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0x9f695d0 <col:17, col:23> '<dependent type>' lvalue
                (CXXThisExpr 0x9f695c0 <col:17> 'vector<_Tp, _Alloc> *' this)))
            (CXXDependentScopeMemberExpr 0x9f69688 <col:41, col:55> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0x9f69650 <col:41, col:47> '<dependent type>' lvalue
                (CXXThisExpr 0x9f69640 <col:41> 'vector<_Tp, _Alloc> *' this)))
            (CallExpr 0x9f696f8 <line:606:10, col:30> '<dependent type>'
              (UnresolvedMemberExpr 0x9f696bc <col:10> '<dependent type>' lvalue)))
          (CallExpr 0x9f69968 <line:607:3, line:609:34> '<dependent type>'
            (UnresolvedMemberExpr 0x9f69740 <line:607:3> '<dependent type>' lvalue)
            (CXXDependentScopeMemberExpr 0x9f697c8 <col:17, col:31> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0x9f69790 <col:17, col:23> '<dependent type>' lvalue
                (CXXThisExpr 0x9f69780 <col:17> 'vector<_Tp, _Alloc> *' this)))
            (CXXOperatorCallExpr 0x9f69940 <line:608:10, line:609:26> '<dependent type>'
              (UnresolvedLookupExpr 0x9f69900 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590 0x9f2d6a0)
              (CXXDependentScopeMemberExpr 0x9f69848 <line:608:10, col:24> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0x9f69810 <col:10, col:16> '<dependent type>' lvalue
                  (CXXThisExpr 0x9f69800 <col:10> 'vector<_Tp, _Alloc> *' this)))
              (CXXDependentScopeMemberExpr 0x9f698c8 <line:609:12, col:26> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0x9f69890 <col:12, col:18> '<dependent type>' lvalue
                  (CXXThisExpr 0x9f69880 <col:12> 'vector<_Tp, _Alloc> *' this)))))
          (BinaryOperator 0x9f69a28 <line:610:3, col:28> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0x9f699d8 <col:3, col:17> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0x9f699a0 <col:3, col:9> '<dependent type>' lvalue
                (CXXThisExpr 0x9f69990 <col:3> 'vector<_Tp, _Alloc> *' this)))
            (DeclRefExpr 0x9f69a0c <col:28> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x9f68c10 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer'))
          (BinaryOperator 0x9f69ad8 <line:611:3, col:29> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0x9f69a88 <col:3, col:17> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0x9f69a50 <col:3, col:9> '<dependent type>' lvalue
                (CXXThisExpr 0x9f69a40 <col:3> 'vector<_Tp, _Alloc> *' this)))
            (DeclRefExpr 0x9f69abc <col:29> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x9f68d00 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer'))
          (BinaryOperator 0x9f69c18 <line:612:3, col:51> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0x9f69b38 <col:3, col:17> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0x9f69b00 <col:3, col:9> '<dependent type>' lvalue
                (CXXThisExpr 0x9f69af0 <col:3> 'vector<_Tp, _Alloc> *' this)))
            (CXXOperatorCallExpr 0x9f69bf0 <col:37, col:51> '<dependent type>'
              (UnresolvedLookupExpr 0x9f69ba0 <col:49, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9ce1500 0x9ce2100 0x9cb8030 0x9cb8830 0x9f2fb40 0x9f31cc0)
              (DeclRefExpr 0x9f69b6c <col:37> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x9f68c10 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
              (DeclRefExpr 0x9f69b84 <col:51> 'const size_type':'const unsigned int' lvalue Var 0x9f68b10 '__len' 'const size_type':'const unsigned int'))))))
    <<<NULL>>>))

;
    void reserve(size_type __n) (CompoundStmt 0x9f6aa60 </usr/include/c++/4.6/bits/vector.tcc:624:5, line:637:5>
  (IfStmt 0x9f6a1e0 <line:625:7, line:626:45>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9f6a0e8 <line:625:11, col:32> '<dependent type>'
      (UnresolvedLookupExpr 0x9f6a098 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b42c70 0x9ac83c0 0x9b5e730 0x9cbd1f0 0x9cbd720 0x9cbdc50 0x9f273d0)
      (DeclRefExpr 0x9f6a014 <col:11> 'size_type':'unsigned int' lvalue ParmVar 0x9f69f30 '__n' 'size_type':'unsigned int')
      (CallExpr 0x9f6a078 <col:17, col:32> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f6a040 <col:17, col:23> '<dependent type>' lvalue
          (CXXThisExpr 0x9f6a030 <col:17> 'vector<_Bool, type-parameter-0-0> *' this))))
    (CallExpr 0x9f6a1b0 <line:626:2, col:45> 'void'
      (ImplicitCastExpr 0x9f6a1a0 <col:2> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x9f6a184 <col:2> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9b0bcc0 '__throw_length_error' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0x9f6a1d0 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0x9f6a170 <col:24, col:30> 'const char [16]' lvalue
          (StringLiteral 0x9f6a144 </usr/include/c++/4.6/bits/vector.tcc:626:27> 'const char [16]' lvalue "vector::reserve"))))
    <<<NULL>>>)
  (IfStmt 0x9f6aa40 <line:627:7, line:636:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9f6a2d0 <line:627:11, col:30> '<dependent type>'
      (UnresolvedLookupExpr 0x9f6a280 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40ad0 0x9b57c70 0x9b5ddb0 0x9cbc120 0x9cbc650 0x9cbcb80 0x9f26790)
      (CallExpr 0x9f6a248 <col:11, col:26> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f6a210 <col:11, col:17> '<dependent type>' lvalue
          (CXXThisExpr 0x9f6a200 <col:11> 'vector<_Bool, type-parameter-0-0> *' this)))
      (DeclRefExpr 0x9f6a264 <col:30> 'size_type':'unsigned int' lvalue ParmVar 0x9f69f30 '__n' 'size_type':'unsigned int'))
    (CompoundStmt 0x9f6aa18 <line:628:2, line:636:2>
      (DeclStmt 0x9f6a3c8 <line:629:4, col:43>
        0x9f6a310 "_Bit_type *__q =
          (CallExpr 0x9f6a3a8 <col:21, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f6a358 <col:21, col:27> '<dependent type>' lvalue
              (CXXThisExpr 0x9f6a348 <col:21> 'vector<_Bool, type-parameter-0-0> *' this))
            (DeclRefExpr 0x9f6a38c <col:39> 'size_type':'unsigned int' lvalue ParmVar 0x9f69f30 '__n' 'size_type':'unsigned int'))")
      (BinaryOperator 0x9f6a618 <line:630:4, line:631:27> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0x9f6a420 <line:630:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9f6a3e8 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0x9f6a3d8 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
        (CallExpr 0x9f6a5f0 <col:30, line:631:27> '<dependent type>'
          (MemberExpr 0x9f6a468 <line:630:30> '<bound member function type>' ->_M_copy_aligned 0x9f386d0
            (CXXThisExpr 0x9f6a458 <col:30> 'vector<_Bool, type-parameter-0-0> *' this))
          (CallExpr 0x9f6a4d8 <col:46, col:52> '<dependent type>'
            (UnresolvedMemberExpr 0x9f6a498 <col:46> '<bound member function type>' lvalue))
          (CallExpr 0x9f6a548 <col:55, col:59> '<dependent type>'
            (UnresolvedMemberExpr 0x9f6a508 <col:55> '<bound member function type>' lvalue))
          (CXXTemporaryObjectExpr 0x9f6a5c0 <line:631:11, col:26> 'iterator':'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
            (ImplicitCastExpr 0x9f6a5a0 <col:20> '_Bit_type *' <LValueToRValue>
              (DeclRefExpr 0x9f6a570 <col:20> '_Bit_type *' lvalue Var 0x9f6a310 '__q' '_Bit_type *'))
            (ImplicitCastExpr 0x9f6a5b0 <col:25> 'unsigned int' <IntegralCast>
              (IntegerLiteral 0x9f6a588 <col:25> 'int' 0)))))
      (CallExpr 0x9f6a678 <line:632:4, col:24> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f6a640 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x9f6a630 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
      (BinaryOperator 0x9f6a7a0 <line:633:4, col:44> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0x9f6a6e0 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9f6a6a8 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0x9f6a698 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
        (CXXTemporaryObjectExpr 0x9f6a770 <col:29, col:44> 'iterator':'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
          (ImplicitCastExpr 0x9f6a750 <col:38> '_Bit_type *' <LValueToRValue>
            (DeclRefExpr 0x9f6a720 <col:38> '_Bit_type *' lvalue Var 0x9f6a310 '__q' '_Bit_type *'))
          (ImplicitCastExpr 0x9f6a760 <col:43> 'unsigned int' <IntegralCast>
            (IntegerLiteral 0x9f6a738 <col:43> 'int' 0))))
      (BinaryOperator 0x9f6aa00 <line:634:4, line:635:29> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0x9f6a800 <line:634:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9f6a7c8 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0x9f6a7b8 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
        (ParenExpr 0x9f6a9e8 <col:38, line:635:29> '_Bit_type *'
          (BinaryOperator 0x9f6a9d0 <line:634:39, line:635:28> '_Bit_type *' '+'
            (ImplicitCastExpr 0x9f6a9c0 <line:634:39> '_Bit_type *' <LValueToRValue>
              (DeclRefExpr 0x9f6a834 <col:39> '_Bit_type *' lvalue Var 0x9f6a310 '__q' '_Bit_type *'))
            (BinaryOperator 0x9f6a9a8 <col:45, line:635:28> 'unsigned int' '/'
              (ParenExpr 0x9f6a930 <line:634:45, col:72> 'unsigned int'
                (BinaryOperator 0x9f6a918 <col:46, col:71> 'unsigned int' '-'
                  (BinaryOperator 0x9f6a8d8 <col:46, col:67> 'unsigned int' '+'
                    (ImplicitCastExpr 0x9f6a8b8 <col:46> 'size_type':'unsigned int' <LValueToRValue>
                      (DeclRefExpr 0x9f6a84c <col:46> 'size_type':'unsigned int' lvalue ParmVar 0x9f69f30 '__n' 'size_type':'unsigned int'))
                    (ImplicitCastExpr 0x9f6a8c8 <col:52, col:67> 'unsigned int' <IntegralCast>
                      (CXXFunctionalCastExpr 0x9f6a8a0 <col:52, col:67> 'int' functional cast to int <NoOp>
                        (ImplicitCastExpr 0x9f6a890 <col:56> 'int' <IntegralCast>
                          (DeclRefExpr 0x9f6a874 <col:56> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x9f286d0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))
                  (ImplicitCastExpr 0x9f6a908 <col:71> 'unsigned int' <IntegralCast>
                    (IntegerLiteral 0x9f6a8f0 <col:71> 'int' 1))))
              (ImplicitCastExpr 0x9f6a998 <line:635:13, col:28> 'unsigned int' <IntegralCast>
                (CXXFunctionalCastExpr 0x9f6a980 <col:13, col:28> 'int' functional cast to int <NoOp>
                  (ImplicitCastExpr 0x9f6a970 <col:17> 'int' <IntegralCast>
                    (DeclRefExpr 0x9f6a954 <col:17> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x9f286d0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))))))
    <<<NULL>>>))


    void _M_fill_insert(iterator __position, size_type __n, bool __x) (CompoundStmt 0x9f6c5c8 </usr/include/c++/4.6/bits/vector.tcc:643:5, line:669:5>
  (IfStmt 0x9f6aec8 <line:644:7, line:645:2>
    <<<NULL>>>
    (BinaryOperator 0x9f6aea0 <line:644:11, col:18> '_Bool' '=='
      (ImplicitCastExpr 0x9f6ae80 <col:11> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9f6ae4c <col:11> 'size_type':'unsigned int' lvalue ParmVar 0x9f6ad10 '__n' 'size_type':'unsigned int'))
      (ImplicitCastExpr 0x9f6ae90 <col:18> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0x9f6ae68 <col:18> 'int' 0)))
    (ReturnStmt 0x9f6aeb8 <line:645:2>)
    <<<NULL>>>)
  (IfStmt 0x9f6c5a8 <line:646:7, line:668:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9f6b058 <line:646:11, col:34> '<dependent type>'
      (UnresolvedLookupExpr 0x9f6b008 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b436e0 0x9ac8bd0 0x9b5f010 0x9cbf3a0 0x9cbf900 0x9cbfe30 0x9f27e60)
      (CXXOperatorCallExpr 0x9f6afc8 <col:11, col:29> '<dependent type>'
        (UnresolvedLookupExpr 0x9f6af88 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590 0x9f2d6a0)
        (CallExpr 0x9f6af18 <col:11, col:20> '<dependent type>'
          (MemberExpr 0x9f6aef8 <col:11> '<bound member function type>' ->capacity 0x9f36d60
            (CXXThisExpr 0x9f6aee8 <col:11> 'vector<_Bool, type-parameter-0-0> *' this)))
        (CallExpr 0x9f6af68 <col:24, col:29> '<dependent type>'
          (MemberExpr 0x9f6af48 <col:24> '<bound member function type>' ->size 0x9f36c60
            (CXXThisExpr 0x9f6af38 <col:24> 'vector<_Bool, type-parameter-0-0> *' this))))
      (DeclRefExpr 0x9f6afec <col:34> 'size_type':'unsigned int' lvalue ParmVar 0x9f6ad10 '__n' 'size_type':'unsigned int'))
    (CompoundStmt 0x9f6b8c8 <line:647:2, line:652:2>
      (CallExpr 0x9f6b2b0 <line:648:4, line:649:55> '<dependent type>'
        (UnresolvedLookupExpr 0x9f6b0a0 <line:648:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b84c00)
        (DeclRefExpr 0x9f6b0d4 <col:23> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9f6acd0 '__position' 'iterator':'struct std::_Bit_iterator')
        (CallExpr 0x9f6b140 <col:35, col:39> '<dependent type>'
          (UnresolvedMemberExpr 0x9f6b100 <col:35> '<bound member function type>' lvalue))
        (CXXOperatorCallExpr 0x9f6b288 <line:649:9, col:54> '<dependent type>'
          (UnresolvedLookupExpr 0x9f6b238 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9ce1500 0x9ce2100 0x9cb8030 0x9cb8830 0x9f2fb40 0x9f31cc0)
          (CXXDependentScopeMemberExpr 0x9f6b1a8 <col:9, col:23> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x9f6b170 <col:9, col:15> '<dependent type>' lvalue
              (CXXThisExpr 0x9f6b160 <col:9> 'vector<_Bool, type-parameter-0-0> *' this)))
          (CXXFunctionalCastExpr 0x9f6b220 <col:35, col:54> 'difference_type':'int' functional cast to difference_type <NoOp>
            (ImplicitCastExpr 0x9f6b210 <col:51> 'difference_type':'int' <IntegralCast>
              (ImplicitCastExpr 0x9f6b200 <col:51> 'size_type':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0x9f6b1e8 <col:51> 'size_type':'unsigned int' lvalue ParmVar 0x9f6ad10 '__n' 'size_type':'unsigned int'))))))
      (CallExpr 0x9f6b718 <line:650:4, col:64> 'void'
        (ImplicitCastExpr 0x9f6b708 <col:4, col:9> 'void (*)(struct std::_Bit_iterator, struct std::_Bit_iterator, const _Bool &)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9f6b6c8 <col:4, col:9> 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, const _Bool &)' lvalue Function 0x9f32370 'fill' 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, const _Bool &)'))
        (CXXConstructExpr 0x9f6b750 <col:14> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
          (ImplicitCastExpr 0x9f6b740 <col:14> 'const struct std::_Bit_iterator' lvalue <NoOp>
            (DeclRefExpr 0x9f6b338 <col:14> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9f6acd0 '__position' 'iterator':'struct std::_Bit_iterator')))
        (CXXConstructExpr 0x9f6b798 <col:26, col:58> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()' elidable
          (MaterializeTemporaryExpr 0x9f6b788 <col:26, col:58> 'const struct std::_Bit_iterator' lvalue
            (ImplicitCastExpr 0x9f6b778 <col:26, col:58> 'const struct std::_Bit_iterator' <NoOp>
              (CXXOperatorCallExpr 0x9f6b3f8 <col:26, col:58> 'iterator':'struct std::_Bit_iterator'
                (ImplicitCastExpr 0x9f6b3e8 <col:37, <invalid sloc>> 'iterator (*)(difference_type) const' <FunctionToPointerDecay>
                  (DeclRefExpr 0x9f6b3d0 <col:37, <invalid sloc>> 'iterator (difference_type) const' lvalue CXXMethod 0x9f2e3e0 'operator+' 'iterator (difference_type) const'))
                (ImplicitCastExpr 0x9f6b3c0 <col:26> 'const struct std::_Bit_iterator' lvalue <NoOp>
                  (DeclRefExpr 0x9f6b350 <col:26> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9f6acd0 '__position' 'iterator':'struct std::_Bit_iterator'))
                (CXXFunctionalCastExpr 0x9f6b3a8 <col:39, col:58> 'difference_type':'int' functional cast to difference_type <NoOp>
                  (ImplicitCastExpr 0x9f6b398 <col:55> 'difference_type':'int' <IntegralCast>
                    (ImplicitCastExpr 0x9f6b388 <col:55> 'size_type':'unsigned int' <LValueToRValue>
                      (DeclRefExpr 0x9f6b370 <col:55> 'size_type':'unsigned int' lvalue ParmVar 0x9f6ad10 '__n' 'size_type':'unsigned int'))))))))
        (ImplicitCastExpr 0x9f6b7c0 <col:61> 'const _Bool' lvalue <NoOp>
          (DeclRefExpr 0x9f6b41c <col:61> '_Bool' lvalue ParmVar 0x9f6ad50 '__x' '_Bool')))
      (CompoundAssignOperator 0x9f6b8a8 <line:651:4, col:50> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f6b818 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9f6b7e0 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0x9f6b7d0 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
        (CXXFunctionalCastExpr 0x9f6b890 <col:31, col:50> 'difference_type':'int' functional cast to difference_type <NoOp>
          (ImplicitCastExpr 0x9f6b880 <col:47> 'difference_type':'int' <IntegralCast>
            (ImplicitCastExpr 0x9f6b870 <col:47> 'size_type':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0x9f6b858 <col:47> 'size_type':'unsigned int' lvalue ParmVar 0x9f6ad10 '__n' 'size_type':'unsigned int'))))))
    (CompoundStmt 0x9f6c578 <line:654:2, line:668:2>
      (DeclStmt 0x9f6b9d0 <line:655:4, line:656:55>
        0x9f6b8f0 "const size_type __len =
          (CallExpr 0x9f6b9a8 <col:6, col:54> '<dependent type>'
            (MemberExpr 0x9f6b938 <col:6> '<bound member function type>' ->_M_check_len 0x9f3a890
              (CXXThisExpr 0x9f6b928 <col:6> 'vector<_Bool, type-parameter-0-0> *' this))
            (DeclRefExpr 0x9f6b958 <col:19> 'size_type':'unsigned int' lvalue ParmVar 0x9f6ad10 '__n' 'size_type':'unsigned int')
            (StringLiteral 0x9f6b970 <col:24> 'const char [29]' lvalue "vector<bool>::_M_fill_insert"))")
      (DeclStmt 0x9f6baa8 <line:657:4, col:46>
        0x9f6b9f0 "_Bit_type *__q =
          (CallExpr 0x9f6ba88 <col:22, col:45> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f6ba38 <col:22, col:28> '<dependent type>' lvalue
              (CXXThisExpr 0x9f6ba28 <col:22> 'vector<_Bool, type-parameter-0-0> *' this))
            (DeclRefExpr 0x9f6ba6c <col:40> 'const size_type':'const unsigned int' lvalue Var 0x9f6b8f0 '__len' 'const size_type':'const unsigned int'))")
      (DeclStmt 0x9f6bc60 <line:658:4, line:659:24>
        0x9f6bac0 "iterator __i =
          (CallExpr 0x9f6bc38 <line:658:19, line:659:23> '<dependent type>'
            (MemberExpr 0x9f6bb08 <line:658:19> '<bound member function type>' ->_M_copy_aligned 0x9f386d0
              (CXXThisExpr 0x9f6baf8 <col:19> 'vector<_Bool, type-parameter-0-0> *' this))
            (CallExpr 0x9f6bb78 <col:35, col:41> '<dependent type>'
              (UnresolvedMemberExpr 0x9f6bb38 <col:35> '<bound member function type>' lvalue))
            (DeclRefExpr 0x9f6bb94 <col:44> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9f6acd0 '__position' 'iterator':'struct std::_Bit_iterator')
            (CXXTemporaryObjectExpr 0x9f6bc08 <line:659:7, col:22> 'iterator':'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
              (ImplicitCastExpr 0x9f6bbe8 <col:16> '_Bit_type *' <LValueToRValue>
                (DeclRefExpr 0x9f6bbb8 <col:16> '_Bit_type *' lvalue Var 0x9f6b9f0 '__q' '_Bit_type *'))
              (ImplicitCastExpr 0x9f6bbf8 <col:21> 'unsigned int' <IntegralCast>
                (IntegerLiteral 0x9f6bbd0 <col:21> 'int' 0))))")
      (CallExpr 0x9f6be58 <line:660:4, col:50> 'void'
        (ImplicitCastExpr 0x9f6be48 <col:4, col:9> 'void (*)(struct std::_Bit_iterator, struct std::_Bit_iterator, const _Bool &)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9f6be28 <col:4, col:9> 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, const _Bool &)' lvalue Function 0x9f32370 'fill' 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, const _Bool &)'))
        (CXXConstructExpr 0x9f6be90 <col:14> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
          (ImplicitCastExpr 0x9f6be80 <col:14> 'const struct std::_Bit_iterator' lvalue <NoOp>
            (DeclRefExpr 0x9f6bcd0 <col:14> 'iterator':'struct std::_Bit_iterator' lvalue Var 0x9f6bac0 '__i' 'iterator':'struct std::_Bit_iterator')))
        (CXXConstructExpr 0x9f6bed8 <col:19, col:44> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()' elidable
          (MaterializeTemporaryExpr 0x9f6bec8 <col:19, col:44> 'const struct std::_Bit_iterator' lvalue
            (ImplicitCastExpr 0x9f6beb8 <col:19, col:44> 'const struct std::_Bit_iterator' <NoOp>
              (CXXOperatorCallExpr 0x9f6bd90 <col:19, col:44> 'iterator':'struct std::_Bit_iterator'
                (ImplicitCastExpr 0x9f6bd80 <col:23, <invalid sloc>> 'iterator (*)(difference_type) const' <FunctionToPointerDecay>
                  (DeclRefExpr 0x9f6bd68 <col:23, <invalid sloc>> 'iterator (difference_type) const' lvalue CXXMethod 0x9f2e3e0 'operator+' 'iterator (difference_type) const'))
                (ImplicitCastExpr 0x9f6bd58 <col:19> 'const struct std::_Bit_iterator' lvalue <NoOp>
                  (DeclRefExpr 0x9f6bce8 <col:19> 'iterator':'struct std::_Bit_iterator' lvalue Var 0x9f6bac0 '__i' 'iterator':'struct std::_Bit_iterator'))
                (CXXFunctionalCastExpr 0x9f6bd40 <col:25, col:44> 'difference_type':'int' functional cast to difference_type <NoOp>
                  (ImplicitCastExpr 0x9f6bd30 <col:41> 'difference_type':'int' <IntegralCast>
                    (ImplicitCastExpr 0x9f6bd20 <col:41> 'size_type':'unsigned int' <LValueToRValue>
                      (DeclRefExpr 0x9f6bd08 <col:41> 'size_type':'unsigned int' lvalue ParmVar 0x9f6ad10 '__n' 'size_type':'unsigned int'))))))))
        (ImplicitCastExpr 0x9f6bf00 <col:47> 'const _Bool' lvalue <NoOp>
          (DeclRefExpr 0x9f6bdc4 <col:47> '_Bool' lvalue ParmVar 0x9f6ad50 '__x' '_Bool')))
      (BinaryOperator 0x9f6c160 <line:661:4, line:662:38> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0x9f6bf58 <line:661:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9f6bf20 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0x9f6bf10 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
        (CallExpr 0x9f6c138 <col:30, line:662:38> '<dependent type>'
          (UnresolvedLookupExpr 0x9f6bfa8 <line:661:30, col:35> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b7fe20 0x9db46a0)
          (DeclRefExpr 0x9f6bfe0 <col:40> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9f6acd0 '__position' 'iterator':'struct std::_Bit_iterator')
          (CallExpr 0x9f6c048 <col:52, col:56> '<dependent type>'
            (UnresolvedMemberExpr 0x9f6c008 <col:52> '<bound member function type>' lvalue))
          (CXXOperatorCallExpr 0x9f6c110 <line:662:12, col:37> 'iterator':'struct std::_Bit_iterator'
            (ImplicitCastExpr 0x9f6c100 <col:16, <invalid sloc>> 'iterator (*)(difference_type) const' <FunctionToPointerDecay>
              (DeclRefExpr 0x9f6c0e8 <col:16, <invalid sloc>> 'iterator (difference_type) const' lvalue CXXMethod 0x9f2e3e0 'operator+' 'iterator (difference_type) const'))
            (ImplicitCastExpr 0x9f6c0d8 <col:12> 'const struct std::_Bit_iterator' lvalue <NoOp>
              (DeclRefExpr 0x9f6c064 <col:12> 'iterator':'struct std::_Bit_iterator' lvalue Var 0x9f6bac0 '__i' 'iterator':'struct std::_Bit_iterator'))
            (CXXFunctionalCastExpr 0x9f6c0c0 <col:18, col:37> 'difference_type':'int' functional cast to difference_type <NoOp>
              (ImplicitCastExpr 0x9f6c0b0 <col:34> 'difference_type':'int' <IntegralCast>
                (ImplicitCastExpr 0x9f6c0a0 <col:34> 'size_type':'unsigned int' <LValueToRValue>
                  (DeclRefExpr 0x9f6c088 <col:34> 'size_type':'unsigned int' lvalue ParmVar 0x9f6ad10 '__n' 'size_type':'unsigned int')))))))
      (CallExpr 0x9f6c1c0 <line:663:4, col:24> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f6c188 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x9f6c178 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
      (BinaryOperator 0x9f6c440 <line:664:4, line:666:30> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0x9f6c228 <line:664:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9f6c1f0 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0x9f6c1e0 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
        (ParenExpr 0x9f6c428 <col:38, line:666:30> '_Bit_type *'
          (BinaryOperator 0x9f6c410 <line:664:39, line:666:29> '_Bit_type *' '+'
            (ImplicitCastExpr 0x9f6c400 <line:664:39> '_Bit_type *' <LValueToRValue>
              (DeclRefExpr 0x9f6c25c <col:39> '_Bit_type *' lvalue Var 0x9f6b9f0 '__q' '_Bit_type *'))
            (ParenExpr 0x9f6c3e8 <col:45, line:666:29> 'unsigned int'
              (BinaryOperator 0x9f6c3d0 <line:664:46, line:666:28> 'unsigned int' '/'
                (ParenExpr 0x9f6c358 <line:664:46, line:665:34> 'unsigned int'
                  (BinaryOperator 0x9f6c340 <line:664:47, line:665:33> 'unsigned int' '-'
                    (BinaryOperator 0x9f6c300 <line:664:47, line:665:29> 'unsigned int' '+'
                      (ImplicitCastExpr 0x9f6c2e0 <line:664:47> 'size_type':'unsigned int' <LValueToRValue>
                        (DeclRefExpr 0x9f6c274 <col:47> 'const size_type':'const unsigned int' lvalue Var 0x9f6b8f0 '__len' 'const size_type':'const unsigned int'))
                      (ImplicitCastExpr 0x9f6c2f0 <line:665:14, col:29> 'unsigned int' <IntegralCast>
                        (CXXFunctionalCastExpr 0x9f6c2c8 <col:14, col:29> 'int' functional cast to int <NoOp>
                          (ImplicitCastExpr 0x9f6c2b8 <col:18> 'int' <IntegralCast>
                            (DeclRefExpr 0x9f6c29c <col:18> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x9f286d0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))
                    (ImplicitCastExpr 0x9f6c330 <col:33> 'unsigned int' <IntegralCast>
                      (IntegerLiteral 0x9f6c318 <col:33> 'int' 1))))
                (ImplicitCastExpr 0x9f6c3c0 <line:666:13, col:28> 'unsigned int' <IntegralCast>
                  (CXXFunctionalCastExpr 0x9f6c3a8 <col:13, col:28> 'int' functional cast to int <NoOp>
                    (ImplicitCastExpr 0x9f6c398 <col:17> 'int' <IntegralCast>
                      (DeclRefExpr 0x9f6c37c <col:17> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x9f286d0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))))))
      (BinaryOperator 0x9f6c560 <line:667:4, col:44> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0x9f6c4a0 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9f6c468 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0x9f6c458 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
        (CXXTemporaryObjectExpr 0x9f6c530 <col:29, col:44> 'iterator':'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
          (ImplicitCastExpr 0x9f6c510 <col:38> '_Bit_type *' <LValueToRValue>
            (DeclRefExpr 0x9f6c4e0 <col:38> '_Bit_type *' lvalue Var 0x9f6b9f0 '__q' '_Bit_type *'))
          (ImplicitCastExpr 0x9f6c520 <col:43> 'unsigned int' <IntegralCast>
            (IntegerLiteral 0x9f6c4f8 <col:43> 'int' 0)))))))


    template <typename _ForwardIterator> void _M_insert_range(iterator __position, _ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag) (CompoundStmt 0x9f6dd88 </usr/include/c++/4.6/bits/vector.tcc:677:7, line:706:7>
  (IfStmt 0x9f6dd68 <line:678:2, line:705:4>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9f6cb90 <line:678:6, col:17> '<dependent type>'
      (UnresolvedLookupExpr 0x9f6cb30 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b412d0 0x9ac7fa0 0x9b5e2b0 0x9ba7d20 0x9bc7160 0x9bc74d0 0x9cbb090 0x9cbb590 0x9cbbad0 0x9db08a0 0x9f26e60)
      (DeclRefExpr 0x9f6cafc <col:6> '_ForwardIterator' lvalue ParmVar 0x9f6c8d0 '__first' '_ForwardIterator')
      (DeclRefExpr 0x9f6cb14 <col:17> '_ForwardIterator' lvalue ParmVar 0x9f6c910 '__last' '_ForwardIterator'))
    (CompoundStmt 0x9f6dd50 <line:679:4, line:705:4>
      (DeclStmt 0x9f6cca0 <line:680:6, col:52>
        0x9f6cbc0 "size_type __n =
          (CallExpr 0x9f6cc78 <col:22, col:51> '<dependent type>'
            (UnresolvedLookupExpr 0x9f6cc10 <col:22, col:27> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b4eac0)
            (DeclRefExpr 0x9f6cc44 <col:36> '_ForwardIterator' lvalue ParmVar 0x9f6c8d0 '__first' '_ForwardIterator')
            (DeclRefExpr 0x9f6cc5c <col:45> '_ForwardIterator' lvalue ParmVar 0x9f6c910 '__last' '_ForwardIterator'))")
      (IfStmt 0x9f6dd30 <line:681:6, line:704:8>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9f6ce20 <line:681:10, col:33> '<dependent type>'
          (UnresolvedLookupExpr 0x9f6cdd0 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b436e0 0x9ac8bd0 0x9b5f010 0x9cbf3a0 0x9cbf900 0x9cbfe30 0x9f27e60)
          (CXXOperatorCallExpr 0x9f6cd90 <col:10, col:28> '<dependent type>'
            (UnresolvedLookupExpr 0x9f6cd50 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5cd20 0x9b5f590 0x9f2d6a0)
            (CallExpr 0x9f6cce0 <col:10, col:19> '<dependent type>'
              (MemberExpr 0x9f6ccc0 <col:10> '<bound member function type>' ->capacity 0x9f36d60
                (CXXThisExpr 0x9f6ccb0 <col:10> 'vector<_Bool, type-parameter-0-0> *' this)))
            (CallExpr 0x9f6cd30 <col:23, col:28> '<dependent type>'
              (MemberExpr 0x9f6cd10 <col:23> '<bound member function type>' ->size 0x9f36c60
                (CXXThisExpr 0x9f6cd00 <col:23> 'vector<_Bool, type-parameter-0-0> *' this))))
          (DeclRefExpr 0x9f6cdb4 <col:33> 'size_type':'unsigned int' lvalue Var 0x9f6cbc0 '__n' 'size_type':'unsigned int'))
        (CompoundStmt 0x9f6d268 <line:682:8, line:688:8>
          (CallExpr 0x9f6d078 <line:683:3, line:685:30> '<dependent type>'
            (UnresolvedLookupExpr 0x9f6ce68 <line:683:3, col:8> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b84c00)
            (DeclRefExpr 0x9f6ce9c <col:22> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9f6c890 '__position' 'iterator':'struct std::_Bit_iterator')
            (CallExpr 0x9f6cf08 <col:34, col:38> '<dependent type>'
              (UnresolvedMemberExpr 0x9f6cec8 <col:34> '<bound member function type>' lvalue))
            (CXXOperatorCallExpr 0x9f6d050 <line:684:8, line:685:29> '<dependent type>'
              (UnresolvedLookupExpr 0x9f6d000 <col:8, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9ce1500 0x9ce2100 0x9cb8030 0x9cb8830 0x9f2fb40 0x9f31cc0)
              (CXXDependentScopeMemberExpr 0x9f6cf70 <line:684:8, col:22> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0x9f6cf38 <col:8, col:14> '<dependent type>' lvalue
                  (CXXThisExpr 0x9f6cf28 <col:8> 'vector<_Bool, type-parameter-0-0> *' this)))
              (CXXFunctionalCastExpr 0x9f6cfe8 <line:685:10, col:29> 'difference_type':'int' functional cast to difference_type <NoOp>
                (ImplicitCastExpr 0x9f6cfd8 <col:26> 'difference_type':'int' <IntegralCast>
                  (ImplicitCastExpr 0x9f6cfc8 <col:26> 'size_type':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0x9f6cfb0 <col:26> 'size_type':'unsigned int' lvalue Var 0x9f6cbc0 '__n' 'size_type':'unsigned int'))))))
          (CallExpr 0x9f6d148 <line:686:3, col:40> '<dependent type>'
            (UnresolvedLookupExpr 0x9f6d0c8 <col:3, col:8> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b7fe20 0x9db46a0)
            (DeclRefExpr 0x9f6d100 <col:13> '_ForwardIterator' lvalue ParmVar 0x9f6c8d0 '__first' '_ForwardIterator')
            (DeclRefExpr 0x9f6d118 <col:22> '_ForwardIterator' lvalue ParmVar 0x9f6c910 '__last' '_ForwardIterator')
            (DeclRefExpr 0x9f6d130 <col:30> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9f6c890 '__position' 'iterator':'struct std::_Bit_iterator'))
          (CompoundAssignOperator 0x9f6d248 <line:687:3, col:49> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f6d1b8 <col:3, col:17> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0x9f6d180 <col:3, col:9> '<dependent type>' lvalue
                (CXXThisExpr 0x9f6d170 <col:3> 'vector<_Bool, type-parameter-0-0> *' this)))
            (CXXFunctionalCastExpr 0x9f6d230 <col:30, col:49> 'difference_type':'int' functional cast to difference_type <NoOp>
              (ImplicitCastExpr 0x9f6d220 <col:46> 'difference_type':'int' <IntegralCast>
                (ImplicitCastExpr 0x9f6d210 <col:46> 'size_type':'unsigned int' <LValueToRValue>
                  (DeclRefExpr 0x9f6d1f8 <col:46> 'size_type':'unsigned int' lvalue Var 0x9f6cbc0 '__n' 'size_type':'unsigned int'))))))
        (CompoundStmt 0x9f6dd00 <line:690:8, line:704:8>
          (DeclStmt 0x9f6d3b8 <line:691:3, line:692:55>
            0x9f6d290 "const size_type __len =
              (CallExpr 0x9f6d390 <col:5, col:54> '<dependent type>'
                (MemberExpr 0x9f6d2d8 <col:5> '<bound member function type>' ->_M_check_len 0x9f3a890
                  (CXXThisExpr 0x9f6d2c8 <col:5> 'vector<_Bool, type-parameter-0-0> *' this))
                (DeclRefExpr 0x9f6d2f8 <col:18> 'size_type':'unsigned int' lvalue Var 0x9f6cbc0 '__n' 'size_type':'unsigned int')
                (StringLiteral 0x9f6d350 <col:23> 'const char [30]' lvalue "vector<bool>::_M_insert_range"))")
          (DeclStmt 0x9f6d498 <line:693:3, col:45>
            0x9f6d3e0 "_Bit_type *__q =
              (CallExpr 0x9f6d478 <col:21, col:44> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9f6d428 <col:21, col:27> '<dependent type>' lvalue
                  (CXXThisExpr 0x9f6d418 <col:21> 'vector<_Bool, type-parameter-0-0> *' this))
                (DeclRefExpr 0x9f6d45c <col:39> 'const size_type':'const unsigned int' lvalue Var 0x9f6d290 '__len' 'const size_type':'const unsigned int'))")
          (DeclStmt 0x9f6d650 <line:694:3, line:695:30>
            0x9f6d4b0 "iterator __i =
              (CallExpr 0x9f6d628 <line:694:18, line:695:29> '<dependent type>'
                (MemberExpr 0x9f6d4f8 <line:694:18> '<bound member function type>' ->_M_copy_aligned 0x9f386d0
                  (CXXThisExpr 0x9f6d4e8 <col:18> 'vector<_Bool, type-parameter-0-0> *' this))
                (CallExpr 0x9f6d568 <col:34, col:40> '<dependent type>'
                  (UnresolvedMemberExpr 0x9f6d528 <col:34> '<bound member function type>' lvalue))
                (DeclRefExpr 0x9f6d584 <col:43> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9f6c890 '__position' 'iterator':'struct std::_Bit_iterator')
                (CXXTemporaryObjectExpr 0x9f6d5f8 <line:695:13, col:28> 'iterator':'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
                  (ImplicitCastExpr 0x9f6d5d8 <col:22> '_Bit_type *' <LValueToRValue>
                    (DeclRefExpr 0x9f6d5a8 <col:22> '_Bit_type *' lvalue Var 0x9f6d3e0 '__q' '_Bit_type *'))
                  (ImplicitCastExpr 0x9f6d5e8 <col:27> 'unsigned int' <IntegralCast>
                    (IntegerLiteral 0x9f6d5c0 <col:27> 'int' 0))))")
          (BinaryOperator 0x9f6d738 <line:696:3, col:39> '<dependent type>' '='
            (DeclRefExpr 0x9f6d660 <col:3> 'iterator':'struct std::_Bit_iterator' lvalue Var 0x9f6d4b0 '__i' 'iterator':'struct std::_Bit_iterator')
            (CallExpr 0x9f6d710 <col:9, col:39> '<dependent type>'
              (UnresolvedLookupExpr 0x9f6d690 <col:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b7fe20 0x9db46a0)
              (DeclRefExpr 0x9f6d6c8 <col:19> '_ForwardIterator' lvalue ParmVar 0x9f6c8d0 '__first' '_ForwardIterator')
              (DeclRefExpr 0x9f6d6e0 <col:28> '_ForwardIterator' lvalue ParmVar 0x9f6c910 '__last' '_ForwardIterator')
              (DeclRefExpr 0x9f6d6f8 <col:36> 'iterator':'struct std::_Bit_iterator' lvalue Var 0x9f6d4b0 '__i' 'iterator':'struct std::_Bit_iterator')))
          (BinaryOperator 0x9f6d8e8 <line:697:3, col:61> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0x9f6d798 <col:3, col:17> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0x9f6d760 <col:3, col:9> '<dependent type>' lvalue
                (CXXThisExpr 0x9f6d750 <col:3> 'vector<_Bool, type-parameter-0-0> *' this)))
            (CallExpr 0x9f6d8c0 <col:29, col:61> '<dependent type>'
              (UnresolvedLookupExpr 0x9f6d7e8 <col:29, col:34> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b7fe20 0x9db46a0)
              (DeclRefExpr 0x9f6d820 <col:39> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9f6c890 '__position' 'iterator':'struct std::_Bit_iterator')
              (CallExpr 0x9f6d888 <col:51, col:55> '<dependent type>'
                (UnresolvedMemberExpr 0x9f6d848 <col:51> '<bound member function type>' lvalue))
              (DeclRefExpr 0x9f6d8a4 <col:58> 'iterator':'struct std::_Bit_iterator' lvalue Var 0x9f6d4b0 '__i' 'iterator':'struct std::_Bit_iterator')))
          (CallExpr 0x9f6d948 <line:698:3, col:23> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f6d910 <col:3, col:9> '<dependent type>' lvalue
              (CXXThisExpr 0x9f6d900 <col:3> 'vector<_Bool, type-parameter-0-0> *' this)))
          (BinaryOperator 0x9f6dbc8 <line:699:3, line:702:32> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0x9f6d9b0 <line:699:3, col:17> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0x9f6d978 <col:3, col:9> '<dependent type>' lvalue
                (CXXThisExpr 0x9f6d968 <col:3> 'vector<_Bool, type-parameter-0-0> *' this)))
            (ParenExpr 0x9f6dbb0 <col:37, line:702:32> '_Bit_type *'
              (BinaryOperator 0x9f6db98 <line:699:38, line:702:31> '_Bit_type *' '+'
                (ImplicitCastExpr 0x9f6db88 <line:699:38> '_Bit_type *' <LValueToRValue>
                  (DeclRefExpr 0x9f6d9e4 <col:38> '_Bit_type *' lvalue Var 0x9f6d3e0 '__q' '_Bit_type *'))
                (ParenExpr 0x9f6db70 <line:700:12, line:702:31> 'unsigned int'
                  (BinaryOperator 0x9f6db58 <line:700:13, line:702:30> 'unsigned int' '/'
                    (ParenExpr 0x9f6dae0 <line:700:13, line:701:36> 'unsigned int'
                      (BinaryOperator 0x9f6dac8 <line:700:14, line:701:35> 'unsigned int' '-'
                        (BinaryOperator 0x9f6da88 <line:700:14, line:701:31> 'unsigned int' '+'
                          (ImplicitCastExpr 0x9f6da68 <line:700:14> 'size_type':'unsigned int' <LValueToRValue>
                            (DeclRefExpr 0x9f6d9fc <col:14> 'const size_type':'const unsigned int' lvalue Var 0x9f6d290 '__len' 'const size_type':'const unsigned int'))
                          (ImplicitCastExpr 0x9f6da78 <line:701:16, col:31> 'unsigned int' <IntegralCast>
                            (CXXFunctionalCastExpr 0x9f6da50 <col:16, col:31> 'int' functional cast to int <NoOp>
                              (ImplicitCastExpr 0x9f6da40 <col:20> 'int' <IntegralCast>
                                (DeclRefExpr 0x9f6da24 <col:20> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x9f286d0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))
                        (ImplicitCastExpr 0x9f6dab8 <col:35> 'unsigned int' <IntegralCast>
                          (IntegerLiteral 0x9f6daa0 <col:35> 'int' 1))))
                    (ImplicitCastExpr 0x9f6db48 <line:702:15, col:30> 'unsigned int' <IntegralCast>
                      (CXXFunctionalCastExpr 0x9f6db30 <col:15, col:30> 'int' functional cast to int <NoOp>
                        (ImplicitCastExpr 0x9f6db20 <col:19> 'int' <IntegralCast>
                          (DeclRefExpr 0x9f6db04 <col:19> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x9f286d0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))))))
          (BinaryOperator 0x9f6dce8 <line:703:3, col:43> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0x9f6dc28 <col:3, col:17> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0x9f6dbf0 <col:3, col:9> '<dependent type>' lvalue
                (CXXThisExpr 0x9f6dbe0 <col:3> 'vector<_Bool, type-parameter-0-0> *' this)))
            (CXXTemporaryObjectExpr 0x9f6dcb8 <col:28, col:43> 'iterator':'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
              (ImplicitCastExpr 0x9f6dc98 <col:37> '_Bit_type *' <LValueToRValue>
                (DeclRefExpr 0x9f6dc68 <col:37> '_Bit_type *' lvalue Var 0x9f6d3e0 '__q' '_Bit_type *'))
              (ImplicitCastExpr 0x9f6dca8 <col:42> 'unsigned int' <IntegralCast>
                (IntegerLiteral 0x9f6dc80 <col:42> 'int' 0)))))))
    <<<NULL>>>))

;
    void _M_insert_aux(iterator __position, bool __x) (CompoundStmt 0x9f6f240 </usr/include/c++/4.6/bits/vector.tcc:712:5, line:735:5>
  (IfStmt 0x9f6f220 <line:713:7, line:734:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9f6e2c0 <line:713:11, col:57> '<dependent type>'
      (UnresolvedLookupExpr 0x9f6e260 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b412d0 0x9ac7fa0 0x9b5e2b0 0x9ba7d20 0x9bc7160 0x9bc74d0 0x9cbb090 0x9cbb590 0x9cbbad0 0x9db08a0 0x9f26e60)
      (CXXDependentScopeMemberExpr 0x9f6e1a8 <col:11, col:35> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0x9f6e170 <col:11, col:25> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9f6e138 <col:11, col:17> '<dependent type>' lvalue
            (CXXThisExpr 0x9f6e128 <col:11> 'vector<_Bool, type-parameter-0-0> *' this))))
      (CXXDependentScopeMemberExpr 0x9f6e228 <col:43, col:57> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0x9f6e1f0 <col:43, col:49> '<dependent type>' lvalue
          (CXXThisExpr 0x9f6e1e0 <col:43> 'vector<_Bool, type-parameter-0-0> *' this))))
    (CompoundStmt 0x9f6e690 <line:714:2, line:719:2>
      (CallExpr 0x9f6e4e8 <line:715:4, line:716:36> '<dependent type>'
        (UnresolvedLookupExpr 0x9f6e308 <line:715:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b84c00)
        (DeclRefExpr 0x9f6e33c <col:23> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9f6dff0 '__position' 'iterator':'struct std::_Bit_iterator')
        (CXXDependentScopeMemberExpr 0x9f6e3a0 <col:35, col:49> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9f6e368 <col:35, col:41> '<dependent type>' lvalue
            (CXXThisExpr 0x9f6e358 <col:35> 'vector<_Bool, type-parameter-0-0> *' this)))
        (CXXOperatorCallExpr 0x9f6e4c0 <line:716:9, col:35> '<dependent type>'
          (UnresolvedLookupExpr 0x9f6e470 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b5d2b0 0x9cb44e0 0x9ce1500 0x9ce2100 0x9cb8030 0x9cb8830 0x9f2fb40 0x9f31cc0)
          (CXXDependentScopeMemberExpr 0x9f6e420 <col:9, col:23> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x9f6e3e8 <col:9, col:15> '<dependent type>' lvalue
              (CXXThisExpr 0x9f6e3d8 <col:9> 'vector<_Bool, type-parameter-0-0> *' this)))
          (IntegerLiteral 0x9f6e458 <col:35> 'int' 1)))
      (CXXOperatorCallExpr 0x9f6e5d0 <line:717:4, col:18> 'struct std::_Bit_reference' lvalue
        (ImplicitCastExpr 0x9f6e5c0 <col:16, <invalid sloc>> 'struct std::_Bit_reference &(*)(_Bool)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9f6e5a8 <col:16, <invalid sloc>> 'struct std::_Bit_reference &(_Bool)' lvalue CXXMethod 0x9f28c10 'operator=' 'struct std::_Bit_reference &(_Bool)'))
        (CXXOperatorCallExpr 0x9f6e560 <col:4, col:5> 'reference':'struct std::_Bit_reference'
          (ImplicitCastExpr 0x9f6e550 <<invalid sloc>> 'reference (*)(void) const' <FunctionToPointerDecay>
            (DeclRefExpr 0x9f6e538 <<invalid sloc>> 'reference (void) const' lvalue CXXMethod 0x9f2dda0 'operator*' 'reference (void) const'))
          (ImplicitCastExpr 0x9f6e528 <col:5> 'const struct std::_Bit_iterator' lvalue <NoOp>
            (DeclRefExpr 0x9f6e510 <col:5> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9f6dff0 '__position' 'iterator':'struct std::_Bit_iterator')))
        (ImplicitCastExpr 0x9f6e598 <col:18> '_Bool' <LValueToRValue>
          (DeclRefExpr 0x9f6e580 <col:18> '_Bool' lvalue ParmVar 0x9f6e030 '__x' '_Bool')))
      (UnaryOperator 0x9f6e678 <line:718:4, col:20> '<dependent type>' prefix '++'
        (CXXDependentScopeMemberExpr 0x9f6e640 <col:6, col:20> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9f6e608 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x9f6e5f8 <col:6> 'vector<_Bool, type-parameter-0-0> *' this)))))
    (CompoundStmt 0x9f6f1f0 <line:721:2, line:734:2>
      (DeclStmt 0x9f6e810 <line:722:4, line:723:63>
        0x9f6e6c0 "const size_type __len =
          (CallExpr 0x9f6e7e8 <col:6, col:62> '<dependent type>'
            (MemberExpr 0x9f6e708 <col:6> '<bound member function type>' ->_M_check_len 0x9f3a890
              (CXXThisExpr 0x9f6e6f8 <col:6> 'vector<_Bool, type-parameter-0-0> *' this))
            (CXXFunctionalCastExpr 0x9f6e758 <col:19, col:30> 'size_type':'unsigned int' functional cast to size_type <NoOp>
              (ImplicitCastExpr 0x9f6e748 <col:29> 'size_type':'unsigned int' <IntegralCast>
                (IntegerLiteral 0x9f6e730 <col:29> 'int' 1)))
            (StringLiteral 0x9f6e7b0 <col:33> 'const char [28]' lvalue "vector<bool>::_M_insert_aux"))")
      (DeclStmt 0x9f6e8e8 <line:724:4, col:46>
        0x9f6e830 "_Bit_type *__q =
          (CallExpr 0x9f6e8c8 <col:22, col:45> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f6e878 <col:22, col:28> '<dependent type>' lvalue
              (CXXThisExpr 0x9f6e868 <col:22> 'vector<_Bool, type-parameter-0-0> *' this))
            (DeclRefExpr 0x9f6e8ac <col:40> 'const size_type':'const unsigned int' lvalue Var 0x9f6e6c0 '__len' 'const size_type':'const unsigned int'))")
      (DeclStmt 0x9f6eaa0 <line:725:4, line:726:24>
        0x9f6e900 "iterator __i =
          (CallExpr 0x9f6ea78 <line:725:19, line:726:23> '<dependent type>'
            (MemberExpr 0x9f6e948 <line:725:19> '<bound member function type>' ->_M_copy_aligned 0x9f386d0
              (CXXThisExpr 0x9f6e938 <col:19> 'vector<_Bool, type-parameter-0-0> *' this))
            (CallExpr 0x9f6e9b8 <col:35, col:41> '<dependent type>'
              (UnresolvedMemberExpr 0x9f6e978 <col:35> '<bound member function type>' lvalue))
            (DeclRefExpr 0x9f6e9d4 <col:44> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9f6dff0 '__position' 'iterator':'struct std::_Bit_iterator')
            (CXXTemporaryObjectExpr 0x9f6ea48 <line:726:7, col:22> 'iterator':'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
              (ImplicitCastExpr 0x9f6ea28 <col:16> '_Bit_type *' <LValueToRValue>
                (DeclRefExpr 0x9f6e9f8 <col:16> '_Bit_type *' lvalue Var 0x9f6e830 '__q' '_Bit_type *'))
              (ImplicitCastExpr 0x9f6ea38 <col:21> 'unsigned int' <IntegralCast>
                (IntegerLiteral 0x9f6ea10 <col:21> 'int' 0))))")
      (CXXOperatorCallExpr 0x9f6ec18 <line:727:4, col:13> 'struct std::_Bit_reference' lvalue
        (ImplicitCastExpr 0x9f6ec08 <col:11, <invalid sloc>> 'struct std::_Bit_reference &(*)(_Bool)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9f6ebf0 <col:11, <invalid sloc>> 'struct std::_Bit_reference &(_Bool)' lvalue CXXMethod 0x9f28c10 'operator=' 'struct std::_Bit_reference &(_Bool)'))
        (CXXOperatorCallExpr 0x9f6eba8 <col:4, col:8> 'reference':'struct std::_Bit_reference'
          (ImplicitCastExpr 0x9f6eb98 <<invalid sloc>> 'reference (*)(void) const' <FunctionToPointerDecay>
            (DeclRefExpr 0x9f6eb80 <<invalid sloc>> 'reference (void) const' lvalue CXXMethod 0x9f2dda0 'operator*' 'reference (void) const'))
          (ImplicitCastExpr 0x9f6eb70 <col:5, col:8> 'const struct std::_Bit_iterator' lvalue <NoOp>
            (CXXOperatorCallExpr 0x9f6eb48 <col:5, col:8> 'iterator':'struct std::_Bit_iterator'
              (ImplicitCastExpr 0x9f6eb38 <<invalid sloc>> 'iterator (*)(int)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9f6eae0 <<invalid sloc>> 'iterator (int)' lvalue CXXMethod 0x9f2dfb0 'operator++' 'iterator (int)'))
              (DeclRefExpr 0x9f6eab0 <col:5> 'iterator':'struct std::_Bit_iterator' lvalue Var 0x9f6e900 '__i' 'iterator':'struct std::_Bit_iterator')
              (IntegerLiteral 0x9f6eac8 <<invalid sloc>> 'int' 0))))
        (ImplicitCastExpr 0x9f6ebe0 <col:13> '_Bool' <LValueToRValue>
          (DeclRefExpr 0x9f6ebc8 <col:13> '_Bool' lvalue ParmVar 0x9f6e030 '__x' '_Bool')))
      (BinaryOperator 0x9f6edd8 <line:728:4, col:62> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0x9f6ec88 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9f6ec50 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0x9f6ec40 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
        (CallExpr 0x9f6edb0 <col:30, col:62> '<dependent type>'
          (UnresolvedLookupExpr 0x9f6ecd8 <col:30, col:35> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b7fe20 0x9db46a0)
          (DeclRefExpr 0x9f6ed10 <col:40> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9f6dff0 '__position' 'iterator':'struct std::_Bit_iterator')
          (CallExpr 0x9f6ed78 <col:52, col:56> '<dependent type>'
            (UnresolvedMemberExpr 0x9f6ed38 <col:52> '<bound member function type>' lvalue))
          (DeclRefExpr 0x9f6ed94 <col:59> 'iterator':'struct std::_Bit_iterator' lvalue Var 0x9f6e900 '__i' 'iterator':'struct std::_Bit_iterator')))
      (CallExpr 0x9f6ee38 <line:729:4, col:24> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f6ee00 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x9f6edf0 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
      (BinaryOperator 0x9f6f0b8 <line:730:4, line:732:30> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0x9f6eea0 <line:730:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9f6ee68 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0x9f6ee58 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
        (ParenExpr 0x9f6f0a0 <col:38, line:732:30> '_Bit_type *'
          (BinaryOperator 0x9f6f088 <line:730:39, line:732:29> '_Bit_type *' '+'
            (ImplicitCastExpr 0x9f6f078 <line:730:39> '_Bit_type *' <LValueToRValue>
              (DeclRefExpr 0x9f6eed4 <col:39> '_Bit_type *' lvalue Var 0x9f6e830 '__q' '_Bit_type *'))
            (ParenExpr 0x9f6f060 <col:45, line:732:29> 'unsigned int'
              (BinaryOperator 0x9f6f048 <line:730:46, line:732:28> 'unsigned int' '/'
                (ParenExpr 0x9f6efd0 <line:730:46, line:731:34> 'unsigned int'
                  (BinaryOperator 0x9f6efb8 <line:730:47, line:731:33> 'unsigned int' '-'
                    (BinaryOperator 0x9f6ef78 <line:730:47, line:731:29> 'unsigned int' '+'
                      (ImplicitCastExpr 0x9f6ef58 <line:730:47> 'size_type':'unsigned int' <LValueToRValue>
                        (DeclRefExpr 0x9f6eeec <col:47> 'const size_type':'const unsigned int' lvalue Var 0x9f6e6c0 '__len' 'const size_type':'const unsigned int'))
                      (ImplicitCastExpr 0x9f6ef68 <line:731:14, col:29> 'unsigned int' <IntegralCast>
                        (CXXFunctionalCastExpr 0x9f6ef40 <col:14, col:29> 'int' functional cast to int <NoOp>
                          (ImplicitCastExpr 0x9f6ef30 <col:18> 'int' <IntegralCast>
                            (DeclRefExpr 0x9f6ef14 <col:18> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x9f286d0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))
                    (ImplicitCastExpr 0x9f6efa8 <col:33> 'unsigned int' <IntegralCast>
                      (IntegerLiteral 0x9f6ef90 <col:33> 'int' 1))))
                (ImplicitCastExpr 0x9f6f038 <line:732:13, col:28> 'unsigned int' <IntegralCast>
                  (CXXFunctionalCastExpr 0x9f6f020 <col:13, col:28> 'int' functional cast to int <NoOp>
                    (ImplicitCastExpr 0x9f6f010 <col:17> 'int' <IntegralCast>
                      (DeclRefExpr 0x9f6eff4 <col:17> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x9f286d0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))))))
      (BinaryOperator 0x9f6f1d8 <line:733:4, col:44> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0x9f6f118 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9f6f0e0 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0x9f6f0d0 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
        (CXXTemporaryObjectExpr 0x9f6f1a8 <col:29, col:44> 'iterator':'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
          (ImplicitCastExpr 0x9f6f188 <col:38> '_Bit_type *' <LValueToRValue>
            (DeclRefExpr 0x9f6f158 <col:38> '_Bit_type *' lvalue Var 0x9f6e830 '__q' '_Bit_type *'))
          (ImplicitCastExpr 0x9f6f198 <col:43> 'unsigned int' <IntegralCast>
            (IntegerLiteral 0x9f6f170 <col:43> 'int' 0)))))))


}
extern "C" {
    extern void __assert_fail(const char *__assertion, const char *__file, unsigned int __line, const char *__function) throw();
    extern void __assert_perror_fail(int __errnum, const char *__file, unsigned int __line, const char *__function) throw();
    extern void __assert(const char *__assertion, const char *__file, int __line) throw();
}
class completion_t;
typedef std::wstring wcstring;
typedef std::vector<wcstring> wcstring_list_t;
enum  {
    ESCAPE_ALL = (ImplicitCastExpr 0x9f6ffd8 <../codeBase/fish-shell-master/common.h:76:18, col:23> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9f6fe80 <col:18, col:23> 'int' '<<'
    (IntegerLiteral 0x9f6fe50 <col:18> 'int' 1)
    (IntegerLiteral 0x9f6fe68 <col:23> 'int' 0)))
,
    ESCAPE_NO_QUOTED = (ImplicitCastExpr 0x9f6ffe8 <../codeBase/fish-shell-master/common.h:79:24, col:29> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9f6ff08 <col:24, col:29> 'int' '<<'
    (IntegerLiteral 0x9f6fed8 <col:24> 'int' 1)
    (IntegerLiteral 0x9f6fef0 <col:29> 'int' 1)))
,
    ESCAPE_NO_TILDE = (ImplicitCastExpr 0x9f6fff8 <../codeBase/fish-shell-master/common.h:82:23, col:28> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9f6ff88 <col:23, col:28> 'int' '<<'
    (IntegerLiteral 0x9f6ff58 <col:23> 'int' 1)
    (IntegerLiteral 0x9f6ff70 <col:28> 'int' 2)))

};
typedef unsigned int escape_flags_t;
void exit_without_destructors(int code);
extern struct termios shell_modes;
extern wchar_t ellipsis_char;
extern wchar_t omitted_newline_char;
extern int debug_level;
extern char *profile;
extern const wchar_t *program_name;
void show_stackframe();
int fgetws2(wcstring *s, FILE *f);
wcstring str2wcstring(const char *in);
wcstring str2wcstring(const char *in, size_t len);
wcstring str2wcstring(const std::string &in);
char *wcs2str(const wchar_t *in);
char *wcs2str(const wcstring &in);
std::string wcs2string(const wcstring &input);
bool string_prefixes_string(const wcstring &proposed_prefix, const wcstring &value);
bool string_prefixes_string(const wchar_t *proposed_prefix, const wcstring &value);
bool string_suffixes_string(const wcstring &proposed_suffix, const wcstring &value);
bool string_suffixes_string(const wchar_t *proposed_suffix, const wcstring &value);
bool string_prefixes_string_case_insensitive(const wcstring &proposed_prefix, const wcstring &value);
enum fuzzy_match_type_t {
    fuzzy_match_exact = (ImplicitCastExpr 0x9f71518 <../codeBase/fish-shell-master/common.h:252:25> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f71340 <col:25> 'int' 0))
,
    fuzzy_match_prefix,
    fuzzy_match_case_insensitive,
    fuzzy_match_prefix_case_insensitive,
    fuzzy_match_substring,
    fuzzy_match_subsequence_insertions_only,
    fuzzy_match_none
};
static inline bool match_type_requires_full_replacement(fuzzy_match_type_t t) (CompoundStmt 0x9f71770 <../codeBase/fish-shell-master/common.h:275:1, line:284:1>
  (SwitchStmt 0x9f71650 <line:276:5, line:283:5>
    <<<NULL>>>
    (ImplicitCastExpr 0x9f71640 <line:276:13> 'int' <IntegralCast>
      (ImplicitCastExpr 0x9f71630 <col:13> 'enum fuzzy_match_type_t' <LValueToRValue>
        (DeclRefExpr 0x9f71614 <col:13> 'enum fuzzy_match_type_t' lvalue ParmVar 0x9f71530 't' 'enum fuzzy_match_type_t')))
    (CompoundStmt 0x9f71738 <line:277:5, line:283:5>
      (CaseStmt 0x9f71688 <line:278:9, line:280:20>
        (ImplicitCastExpr 0x9f71760 <line:278:14> 'int' <IntegralCast>
          (DeclRefExpr 0x9f7166c <col:14> 'enum fuzzy_match_type_t' EnumConstant 0x9f71360 'fuzzy_match_exact' 'enum fuzzy_match_type_t'))
        <<<NULL>>>
        (CaseStmt 0x9f716c0 <line:279:9, line:280:20>
          (ImplicitCastExpr 0x9f71750 <line:279:14> 'int' <IntegralCast>
            (DeclRefExpr 0x9f716a8 <col:14> 'enum fuzzy_match_type_t' EnumConstant 0x9f713a0 'fuzzy_match_prefix' 'enum fuzzy_match_type_t'))
          <<<NULL>>>
          (ReturnStmt 0x9f716f0 <line:280:13, col:20>
            (CXXBoolLiteralExpr 0x9f716e0 <col:20> '_Bool' false))))
      (DefaultStmt 0x9f71720 <line:281:9, line:282:20>
        (ReturnStmt 0x9f71710 <col:13, col:20>
          (CXXBoolLiteralExpr 0x9f71700 <col:20> '_Bool' true))))))


static inline bool match_type_shares_prefix(fuzzy_match_type_t t) (CompoundStmt 0x9f71a30 <../codeBase/fish-shell-master/common.h:288:1, line:299:1>
  (SwitchStmt 0x9f71880 <line:289:5, line:298:5>
    <<<NULL>>>
    (ImplicitCastExpr 0x9f71870 <line:289:13> 'int' <IntegralCast>
      (ImplicitCastExpr 0x9f71860 <col:13> 'enum fuzzy_match_type_t' <LValueToRValue>
        (DeclRefExpr 0x9f71844 <col:13> 'enum fuzzy_match_type_t' lvalue ParmVar 0x9f71790 't' 'enum fuzzy_match_type_t')))
    (CompoundStmt 0x9f719d8 <line:290:5, line:298:5>
      (CaseStmt 0x9f718b8 <line:291:9, line:295:20>
        (ImplicitCastExpr 0x9f71a20 <line:291:14> 'int' <IntegralCast>
          (DeclRefExpr 0x9f7189c <col:14> 'enum fuzzy_match_type_t' EnumConstant 0x9f71360 'fuzzy_match_exact' 'enum fuzzy_match_type_t'))
        <<<NULL>>>
        (CaseStmt 0x9f718f0 <line:292:9, line:295:20>
          (ImplicitCastExpr 0x9f71a10 <line:292:14> 'int' <IntegralCast>
            (DeclRefExpr 0x9f718d8 <col:14> 'enum fuzzy_match_type_t' EnumConstant 0x9f713a0 'fuzzy_match_prefix' 'enum fuzzy_match_type_t'))
          <<<NULL>>>
          (CaseStmt 0x9f71928 <line:293:9, line:295:20>
            (ImplicitCastExpr 0x9f71a00 <line:293:14> 'int' <IntegralCast>
              (DeclRefExpr 0x9f71910 <col:14> 'enum fuzzy_match_type_t' EnumConstant 0x9f713e0 'fuzzy_match_case_insensitive' 'enum fuzzy_match_type_t'))
            <<<NULL>>>
            (CaseStmt 0x9f71960 <line:294:9, line:295:20>
              (ImplicitCastExpr 0x9f719f0 <line:294:14> 'int' <IntegralCast>
                (DeclRefExpr 0x9f71948 <col:14> 'enum fuzzy_match_type_t' EnumConstant 0x9f71420 'fuzzy_match_prefix_case_insensitive' 'enum fuzzy_match_type_t'))
              <<<NULL>>>
              (ReturnStmt 0x9f71990 <line:295:13, col:20>
                (CXXBoolLiteralExpr 0x9f71980 <col:20> '_Bool' true))))))
      (DefaultStmt 0x9f719c0 <line:296:9, line:297:20>
        (ReturnStmt 0x9f719b0 <col:13, col:20>
          (CXXBoolLiteralExpr 0x9f719a0 <col:20> '_Bool' false))))))


struct string_fuzzy_match_t {
    struct string_fuzzy_match_t;
    enum fuzzy_match_type_t type;
    size_t match_distance_first;
    size_t match_distance_second;
    string_fuzzy_match_t(enum fuzzy_match_type_t t, size_t distance_first = (ImplicitCastExpr 0x9f71f60 <../codeBase/fish-shell-master/common.h:311:77> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f71f48 <col:77> 'int' 0))
, size_t distance_second = (ImplicitCastExpr 0x9f71f88 <../codeBase/fish-shell-master/common.h:311:105> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f71f70 <col:105> 'int' 0))
);
    int compare(const string_fuzzy_match_t &rhs) const;
};
string_fuzzy_match_t string_fuzzy_match_string(const wcstring &string, const wcstring &match_against, fuzzy_match_type_t limit_type = (DeclRefExpr 0x9f72074 <../codeBase/fish-shell-master/common.h:318:135> 'enum fuzzy_match_type_t' EnumConstant 0x9f714e0 'fuzzy_match_none' 'enum fuzzy_match_type_t')
);
bool list_contains_string(const wcstring_list_t &list, const wcstring &str);
void assert_is_main_thread(const char *who);
void assert_is_background_thread(const char *who);
void assert_is_locked(void *mutex, const char *who, const char *caller);
wcstring format_size(long long sz);
void format_size_safe(char buff[128], unsigned long long sz);
void debug_safe(int level, const char *msg, const char *param1 = (ImplicitCastExpr 0x9f72a20 </usr/include/linux/stddef.h:8:14> 'const char *' <NullToPointer>
  (IntegerLiteral 0x9f72a08 <col:14> 'int' 0))
, const char *param2 = (ImplicitCastExpr 0x9f72a90 </usr/include/linux/stddef.h:8:14> 'const char *' <NullToPointer>
  (IntegerLiteral 0x9f72a78 <col:14> 'int' 0))
, const char *param3 = (ImplicitCastExpr 0x9f72b00 </usr/include/linux/stddef.h:8:14> 'const char *' <NullToPointer>
  (IntegerLiteral 0x9f72ae8 <col:14> 'int' 0))
, const char *param4 = (ImplicitCastExpr 0x9f72b70 </usr/include/linux/stddef.h:8:14> 'const char *' <NullToPointer>
  (IntegerLiteral 0x9f72b58 <col:14> 'int' 0))
, const char *param5 = (ImplicitCastExpr 0x9f72be0 </usr/include/linux/stddef.h:8:14> 'const char *' <NullToPointer>
  (IntegerLiteral 0x9f72bc8 <col:14> 'int' 0))
, const char *param6 = (ImplicitCastExpr 0x9f72c50 </usr/include/linux/stddef.h:8:14> 'const char *' <NullToPointer>
  (IntegerLiteral 0x9f72c38 <col:14> 'int' 0))
, const char *param7 = (ImplicitCastExpr 0x9f72cc0 </usr/include/linux/stddef.h:8:14> 'const char *' <NullToPointer>
  (IntegerLiteral 0x9f72ca8 <col:14> 'int' 0))
, const char *param8 = (ImplicitCastExpr 0x9f72d30 </usr/include/linux/stddef.h:8:14> 'const char *' <NullToPointer>
  (IntegerLiteral 0x9f72d18 <col:14> 'int' 0))
, const char *param9 = (ImplicitCastExpr 0x9f72da0 </usr/include/linux/stddef.h:8:14> 'const char *' <NullToPointer>
  (IntegerLiteral 0x9f72d88 <col:14> 'int' 0))
, const char *param10 = (ImplicitCastExpr 0x9f72e10 </usr/include/linux/stddef.h:8:14> 'const char *' <NullToPointer>
  (IntegerLiteral 0x9f72df8 <col:14> 'int' 0))
, const char *param11 = (ImplicitCastExpr 0x9f72e80 </usr/include/linux/stddef.h:8:14> 'const char *' <NullToPointer>
  (IntegerLiteral 0x9f72e68 <col:14> 'int' 0))
, const char *param12 = (ImplicitCastExpr 0x9f72ef0 </usr/include/linux/stddef.h:8:14> 'const char *' <NullToPointer>
  (IntegerLiteral 0x9f72ed8 <col:14> 'int' 0))
);
void format_long_safe(char buff[128], long val);
void format_long_safe(wchar_t buff[128], long val);
template <typename T = bool> inline bool from_string(const wcstring &x) (CompoundStmt 0x9f75fd8 <../codeBase/fish-shell-master/common.h:394:1, line:396:1>
  (ReturnStmt 0x9f75fc8 <line:395:5, col:51>
    (BinaryOperator 0x9f75fb0 <col:12, col:51> '_Bool' '&&'
      (UnaryOperator 0x9f75da8 <col:12, col:22> '_Bool' prefix '!'
        (CXXMemberCallExpr 0x9f75d70 <col:14, col:22> '_Bool'
          (MemberExpr 0x9f75d50 <col:14, col:16> '<bound member function type>' .empty 0x9d256d0
            (DeclRefExpr 0x9f75d38 <col:14> 'const wcstring':'const class std::basic_string<wchar_t>' lvalue ParmVar 0x9f75a50 'x' 'const wcstring &'))))
      (ImplicitCastExpr 0x9f75fa0 <col:27, col:51> '_Bool' <PointerToBoolean>
        (CallExpr 0x9f75f58 <col:27, col:51> 'wchar_t *'
          (ImplicitCastExpr 0x9f75f48 <col:27> 'wchar_t *(*)(const wchar_t *, wchar_t) throw()' <FunctionToPointerDecay>
            (DeclRefExpr 0x9f75f2c <col:27> 'wchar_t *(const wchar_t *, wchar_t) throw()' lvalue Function 0x9a3a480 'wcschr' 'wchar_t *(const wchar_t *, wchar_t) throw()'))
          (ImplicitCastExpr 0x9f75f80 <col:34> 'const wchar_t *' <ArrayToPointerDecay>
            (StringLiteral 0x9f75e40 <col:34> 'const wchar_t [6]' lvalue L"Y\000\000\000T\000\000\000y\000\000\000t\000\000\0001\000\000\000"))
          (ImplicitCastExpr 0x9f75f90 <col:44, col:50> 'wchar_t':'wchar_t' <LValueToRValue>
            (CXXMemberCallExpr 0x9f75f00 <col:44, col:50> 'const wchar_t':'const wchar_t' lvalue
              (MemberExpr 0x9f75ee0 <col:44, col:46> '<bound member function type>' .at 0x9d26080
                (DeclRefExpr 0x9f75e70 <col:44> 'const wcstring':'const class std::basic_string<wchar_t>' lvalue ParmVar 0x9f75a50 'x' 'const wcstring &'))
              (ImplicitCastExpr 0x9f75f20 <col:49> 'size_type':'unsigned int' <IntegralCast>
                (IntegerLiteral 0x9f75ec8 <col:49> 'int' 0)))))))))

template <typename T> T from_string(const wcstring &x) (CompoundStmt 0x9f73cf0 <../codeBase/fish-shell-master/common.h:353:1, line:358:1>
  (DeclStmt 0x9f73528 <line:354:5, col:13>
    0x9f734f0 "T result")
  (DeclStmt 0x9f73c70 <line:355:5, col:33>
    0x9f73590 "std::wstringstream stream =
      (CXXConstructExpr 0x9f73c48 <col:24, col:32> 'std::wstringstream':'class std::basic_stringstream<wchar_t>''void (const __string_type &, class ios_base::openmode)'
        (DeclRefExpr 0x9f735c4 <col:31> 'const wcstring':'const class std::basic_string<wchar_t>' lvalue ParmVar 0x9f733b0 'x' 'const wcstring &')
        (CXXDefaultArgExpr 0x9f73c30 <<invalid sloc>> 'enum std::_Ios_Openmode'))")
  (BinaryOperator 0x9f73cb0 <line:356:5, col:15> '<dependent type>' '>>'
    (DeclRefExpr 0x9f73c80 <col:5> 'std::wstringstream':'class std::basic_stringstream<wchar_t>' lvalue Var 0x9f73590 'stream' 'std::wstringstream':'class std::basic_stringstream<wchar_t>')
    (DeclRefExpr 0x9f73c98 <col:15> 'T' lvalue Var 0x9f734f0 'result' 'T'))
  (ReturnStmt 0x9f73ce0 <line:357:5, col:12>
    (DeclRefExpr 0x9f73cc8 <col:12> 'T' lvalue Var 0x9f734f0 'result' 'T')))

;
template <typename T = bool> inline bool from_string(const std::string &x) (CompoundStmt 0x9f75a18 <../codeBase/fish-shell-master/common.h:388:1, line:390:1>
  (ReturnStmt 0x9f75a08 <line:389:5, col:50>
    (BinaryOperator 0x9f759f0 <col:12, col:50> '_Bool' '&&'
      (UnaryOperator 0x9f757f0 <col:12, col:22> '_Bool' prefix '!'
        (CXXMemberCallExpr 0x9f757d0 <col:14, col:22> '_Bool'
          (MemberExpr 0x9f757b0 <col:14, col:16> '<bound member function type>' .empty 0x9cfe190
            (DeclRefExpr 0x9f75798 <col:14> 'const std::string':'const class std::basic_string<char>' lvalue ParmVar 0x9f754b0 'x' 'const std::string &'))))
      (ImplicitCastExpr 0x9f759e0 <col:27, col:50> '_Bool' <PointerToBoolean>
        (CallExpr 0x9f75988 <col:27, col:50> 'char *'
          (ImplicitCastExpr 0x9f75978 <col:27> 'char *(*)(const char *, int) throw()' <FunctionToPointerDecay>
            (DeclRefExpr 0x9f7591c <col:27> 'char *(const char *, int) throw()' lvalue Function 0x9a466c0 'strchr' 'char *(const char *, int) throw()'))
          (ImplicitCastExpr 0x9f759b0 <col:34> 'const char *' <ArrayToPointerDecay>
            (StringLiteral 0x9f7583c <col:34> 'const char [6]' lvalue "YTyt1"))
          (ImplicitCastExpr 0x9f759d0 <col:43, col:49> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9f759c0 <col:43, col:49> 'char':'char' <LValueToRValue>
              (CXXMemberCallExpr 0x9f758f0 <col:43, col:49> 'const char':'const char' lvalue
                (MemberExpr 0x9f758d0 <col:43, col:45> '<bound member function type>' .at 0x9cfeb20
                  (DeclRefExpr 0x9f75860 <col:43> 'const std::string':'const class std::basic_string<char>' lvalue ParmVar 0x9f754b0 'x' 'const std::string &'))
                (ImplicitCastExpr 0x9f75910 <col:48> 'size_type':'unsigned int' <IntegralCast>
                  (IntegerLiteral 0x9f758b8 <col:48> 'int' 0))))))))))

template <typename T> T from_string(const std::string &x) (CompoundStmt 0x9f74700 <../codeBase/fish-shell-master/common.h:362:1, line:367:1>
  (DeclStmt 0x9f73f58 <line:363:5, col:19>
    0x9f73f00 "T result =
      (CXXUnresolvedConstructExpr 0x9f73f40 <col:16, col:18> 'T')")
  (DeclStmt 0x9f74680 <line:364:5, col:32>
    0x9f73fc0 "std::stringstream stream =
      (CXXConstructExpr 0x9f74658 <col:23, col:31> 'std::stringstream':'class std::basic_stringstream<char>''void (const __string_type &, class ios_base::openmode)'
        (DeclRefExpr 0x9f73ff4 <col:30> 'const std::string':'const class std::basic_string<char>' lvalue ParmVar 0x9f73dc0 'x' 'const std::string &')
        (CXXDefaultArgExpr 0x9f74640 <<invalid sloc>> 'enum std::_Ios_Openmode'))")
  (BinaryOperator 0x9f746c0 <line:365:5, col:15> '<dependent type>' '>>'
    (DeclRefExpr 0x9f74690 <col:5> 'std::stringstream':'class std::basic_stringstream<char>' lvalue Var 0x9f73fc0 'stream' 'std::stringstream':'class std::basic_stringstream<char>')
    (DeclRefExpr 0x9f746a8 <col:15> 'T' lvalue Var 0x9f73f00 'result' 'T'))
  (ReturnStmt 0x9f746f0 <line:366:5, col:12>
    (DeclRefExpr 0x9f746d8 <col:12> 'T' lvalue Var 0x9f73f00 'result' 'T')))

;
template <typename T = long> inline wcstring to_string(const long &x) (CompoundStmt 0x9f75448 <../codeBase/fish-shell-master/common.h:380:1, line:384:1>
  (DeclStmt 0x9f74fa8 <line:381:5, col:22>
    0x9f74f70 "wchar_t buff[128]")
  (CallExpr 0x9f75068 <line:382:5, col:29> 'void'
    (ImplicitCastExpr 0x9f75058 <col:5> 'void (*)(wchar_t *, long)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9f75020 <col:5> 'void (wchar_t *, long)' lvalue Function 0x9f732d0 'format_long_safe' 'void (wchar_t *, long)'))
    (ImplicitCastExpr 0x9f75090 <col:22> 'wchar_t *' <ArrayToPointerDecay>
      (DeclRefExpr 0x9f74ff0 <col:22> 'wchar_t [128]' lvalue Var 0x9f74f70 'buff' 'wchar_t [128]'))
    (ImplicitCastExpr 0x9f750a0 <col:28> 'long' <LValueToRValue>
      (DeclRefExpr 0x9f75008 <col:28> 'const long' lvalue ParmVar 0x9f74c10 'x' 'const long &')))
  (ReturnStmt 0x9f75438 <line:383:5, col:25>
    (ExprWithCleanups 0x9f75418 <col:12, col:25> 'wcstring':'class std::basic_string<wchar_t>'
      (CXXTemporary 0x9f75120)
      (CXXTemporary 0x9f753a0)
      (CXXConstructExpr 0x9f753f0 <col:12, col:25> 'wcstring':'class std::basic_string<wchar_t>''void (const class std::basic_string<wchar_t> &)' elidable
        (MaterializeTemporaryExpr 0x9f753e0 <col:12, col:25> 'const class std::basic_string<wchar_t>' lvalue
          (ImplicitCastExpr 0x9f753d0 <col:12, col:25> 'const class std::basic_string<wchar_t>' <NoOp>
            (CXXFunctionalCastExpr 0x9f753b8 <col:12, col:25> 'wcstring':'class std::basic_string<wchar_t>' functional cast to wcstring <ConstructorConversion>
              (CXXBindTemporaryExpr 0x9f753a8 <col:12, col:21> 'wcstring':'class std::basic_string<wchar_t>' (CXXTemporary 0x9f753a0)
                (CXXConstructExpr 0x9f75378 <col:12, col:21> 'wcstring':'class std::basic_string<wchar_t>''void (const wchar_t *, const class std::allocator<wchar_t> &)'
                  (ImplicitCastExpr 0x9f750e0 <col:21> 'const wchar_t *' <NoOp>
                    (ImplicitCastExpr 0x9f750d0 <col:21> 'wchar_t *' <ArrayToPointerDecay>
                      (DeclRefExpr 0x9f750b8 <col:21> 'wchar_t [128]' lvalue Var 0x9f74f70 'buff' 'wchar_t [128]')))
                  (CXXDefaultArgExpr 0x9f75360 <<invalid sloc>> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue))))))))))

template <typename T = int> inline wcstring to_string(const int &x) (CompoundStmt 0x9f76510 <../codeBase/fish-shell-master/common.h:400:1, line:402:1>
  (ReturnStmt 0x9f76500 <line:401:5, col:42>
    (ExprWithCleanups 0x9f764e0 <col:12, col:42> 'wcstring':'class std::basic_string<wchar_t>'
      (CXXTemporary 0x9f76480)
      (CXXConstructExpr 0x9f764b8 <col:12, col:42> 'wcstring':'class std::basic_string<wchar_t>''void (const class std::basic_string<wchar_t> &)' elidable
        (MaterializeTemporaryExpr 0x9f764a8 <col:12, col:42> 'const class std::basic_string<wchar_t>' lvalue
          (ImplicitCastExpr 0x9f76498 <col:12, col:42> 'const class std::basic_string<wchar_t>' <NoOp>
            (CXXBindTemporaryExpr 0x9f76488 <col:12, col:42> 'wcstring':'class std::basic_string<wchar_t>' (CXXTemporary 0x9f76480)
              (CallExpr 0x9f76448 <col:12, col:42> 'wcstring':'class std::basic_string<wchar_t>'
                (ImplicitCastExpr 0x9f76438 <col:12> 'wcstring (*)(const long &)' <FunctionToPointerDecay>
                  (DeclRefExpr 0x9f763e0 <col:12> 'wcstring (const long &)' lvalue Function 0x9f74cb0 'to_string' 'wcstring (const long &)' (FunctionTemplate 0x9f748b0 'to_string')))
                (MaterializeTemporaryExpr 0x9f76468 <col:22, col:41> 'const long' lvalue
                  (CXXStaticCastExpr 0x9f76398 <col:22, col:41> 'long' static_cast<long> <NoOp>
                    (ImplicitCastExpr 0x9f76388 <col:40> 'long' <IntegralCast>
                      (ImplicitCastExpr 0x9f76378 <col:40> 'int' <LValueToRValue>
                        (DeclRefExpr 0x9f7634c <col:40> 'const int' lvalue ParmVar 0x9f76010 'x' 'const int &')))))))))))))

template <typename T> wcstring to_string(const T &x) (CompoundStmt 0x9f74bb0 <../codeBase/fish-shell-master/common.h:371:1, line:375:1>
  (DeclStmt 0x9f749f8 <line:372:5, col:30>
    0x9f74910 "std::wstringstream stream =
      (CXXConstructExpr 0x9f749d0 <col:24> 'std::wstringstream':'class std::basic_stringstream<wchar_t>''void (class ios_base::openmode)'
        (CXXDefaultArgExpr 0x9f749b8 <<invalid sloc>> 'enum std::_Ios_Openmode'))")
  (BinaryOperator 0x9f74a38 <line:373:5, col:15> '<dependent type>' '<<'
    (DeclRefExpr 0x9f74a08 <col:5> 'std::wstringstream':'class std::basic_stringstream<wchar_t>' lvalue Var 0x9f74910 'stream' 'std::wstringstream':'class std::basic_stringstream<wchar_t>')
    (DeclRefExpr 0x9f74a20 <col:15> 'const T' lvalue ParmVar 0x9f747b0 'x' 'const T &'))
  (ReturnStmt 0x9f74ba0 <line:374:5, col:23>
    (ExprWithCleanups 0x9f74b80 <col:12, col:23> 'wcstring':'class std::basic_string<wchar_t>'
      (CXXTemporary 0x9f74b20)
      (CXXConstructExpr 0x9f74b58 <col:12, col:23> 'wcstring':'class std::basic_string<wchar_t>''void (const class std::basic_string<wchar_t> &)' elidable
        (MaterializeTemporaryExpr 0x9f74b48 <col:12, col:23> 'const class std::basic_string<wchar_t>' lvalue
          (ImplicitCastExpr 0x9f74b38 <col:12, col:23> 'const class std::basic_string<wchar_t>' <NoOp>
            (CXXBindTemporaryExpr 0x9f74b28 <col:12, col:23> '__string_type':'class std::basic_string<wchar_t>' (CXXTemporary 0x9f74b20)
              (CXXMemberCallExpr 0x9f74ac8 <col:12, col:23> '__string_type':'class std::basic_string<wchar_t>'
                (MemberExpr 0x9f74aa8 <col:12, col:19> '<bound member function type>' .str 0x9ef88a0
                  (ImplicitCastExpr 0x9f74b08 <col:12> 'const class std::basic_stringstream<wchar_t>' lvalue <NoOp>
                    (DeclRefExpr 0x9f74a50 <col:12> 'std::wstringstream':'class std::basic_stringstream<wchar_t>' lvalue Var 0x9f74910 'stream' 'std::wstringstream':'class std::basic_stringstream<wchar_t>')))))))))))

;
inline wcstring to_string(const long &x) (CompoundStmt 0x9f75448 <../codeBase/fish-shell-master/common.h:380:1, line:384:1>
  (DeclStmt 0x9f74fa8 <line:381:5, col:22>
    0x9f74f70 "wchar_t buff[128]")
  (CallExpr 0x9f75068 <line:382:5, col:29> 'void'
    (ImplicitCastExpr 0x9f75058 <col:5> 'void (*)(wchar_t *, long)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9f75020 <col:5> 'void (wchar_t *, long)' lvalue Function 0x9f732d0 'format_long_safe' 'void (wchar_t *, long)'))
    (ImplicitCastExpr 0x9f75090 <col:22> 'wchar_t *' <ArrayToPointerDecay>
      (DeclRefExpr 0x9f74ff0 <col:22> 'wchar_t [128]' lvalue Var 0x9f74f70 'buff' 'wchar_t [128]'))
    (ImplicitCastExpr 0x9f750a0 <col:28> 'long' <LValueToRValue>
      (DeclRefExpr 0x9f75008 <col:28> 'const long' lvalue ParmVar 0x9f74c10 'x' 'const long &')))
  (ReturnStmt 0x9f75438 <line:383:5, col:25>
    (ExprWithCleanups 0x9f75418 <col:12, col:25> 'wcstring':'class std::basic_string<wchar_t>'
      (CXXTemporary 0x9f75120)
      (CXXTemporary 0x9f753a0)
      (CXXConstructExpr 0x9f753f0 <col:12, col:25> 'wcstring':'class std::basic_string<wchar_t>''void (const class std::basic_string<wchar_t> &)' elidable
        (MaterializeTemporaryExpr 0x9f753e0 <col:12, col:25> 'const class std::basic_string<wchar_t>' lvalue
          (ImplicitCastExpr 0x9f753d0 <col:12, col:25> 'const class std::basic_string<wchar_t>' <NoOp>
            (CXXFunctionalCastExpr 0x9f753b8 <col:12, col:25> 'wcstring':'class std::basic_string<wchar_t>' functional cast to wcstring <ConstructorConversion>
              (CXXBindTemporaryExpr 0x9f753a8 <col:12, col:21> 'wcstring':'class std::basic_string<wchar_t>' (CXXTemporary 0x9f753a0)
                (CXXConstructExpr 0x9f75378 <col:12, col:21> 'wcstring':'class std::basic_string<wchar_t>''void (const wchar_t *, const class std::allocator<wchar_t> &)'
                  (ImplicitCastExpr 0x9f750e0 <col:21> 'const wchar_t *' <NoOp>
                    (ImplicitCastExpr 0x9f750d0 <col:21> 'wchar_t *' <ArrayToPointerDecay>
                      (DeclRefExpr 0x9f750b8 <col:21> 'wchar_t [128]' lvalue Var 0x9f74f70 'buff' 'wchar_t [128]')))
                  (CXXDefaultArgExpr 0x9f75360 <<invalid sloc>> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue))))))))))


inline bool from_string(const std::string &x) (CompoundStmt 0x9f75a18 <../codeBase/fish-shell-master/common.h:388:1, line:390:1>
  (ReturnStmt 0x9f75a08 <line:389:5, col:50>
    (BinaryOperator 0x9f759f0 <col:12, col:50> '_Bool' '&&'
      (UnaryOperator 0x9f757f0 <col:12, col:22> '_Bool' prefix '!'
        (CXXMemberCallExpr 0x9f757d0 <col:14, col:22> '_Bool'
          (MemberExpr 0x9f757b0 <col:14, col:16> '<bound member function type>' .empty 0x9cfe190
            (DeclRefExpr 0x9f75798 <col:14> 'const std::string':'const class std::basic_string<char>' lvalue ParmVar 0x9f754b0 'x' 'const std::string &'))))
      (ImplicitCastExpr 0x9f759e0 <col:27, col:50> '_Bool' <PointerToBoolean>
        (CallExpr 0x9f75988 <col:27, col:50> 'char *'
          (ImplicitCastExpr 0x9f75978 <col:27> 'char *(*)(const char *, int) throw()' <FunctionToPointerDecay>
            (DeclRefExpr 0x9f7591c <col:27> 'char *(const char *, int) throw()' lvalue Function 0x9a466c0 'strchr' 'char *(const char *, int) throw()'))
          (ImplicitCastExpr 0x9f759b0 <col:34> 'const char *' <ArrayToPointerDecay>
            (StringLiteral 0x9f7583c <col:34> 'const char [6]' lvalue "YTyt1"))
          (ImplicitCastExpr 0x9f759d0 <col:43, col:49> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9f759c0 <col:43, col:49> 'char':'char' <LValueToRValue>
              (CXXMemberCallExpr 0x9f758f0 <col:43, col:49> 'const char':'const char' lvalue
                (MemberExpr 0x9f758d0 <col:43, col:45> '<bound member function type>' .at 0x9cfeb20
                  (DeclRefExpr 0x9f75860 <col:43> 'const std::string':'const class std::basic_string<char>' lvalue ParmVar 0x9f754b0 'x' 'const std::string &'))
                (ImplicitCastExpr 0x9f75910 <col:48> 'size_type':'unsigned int' <IntegralCast>
                  (IntegerLiteral 0x9f758b8 <col:48> 'int' 0))))))))))


inline bool from_string(const wcstring &x) (CompoundStmt 0x9f75fd8 <../codeBase/fish-shell-master/common.h:394:1, line:396:1>
  (ReturnStmt 0x9f75fc8 <line:395:5, col:51>
    (BinaryOperator 0x9f75fb0 <col:12, col:51> '_Bool' '&&'
      (UnaryOperator 0x9f75da8 <col:12, col:22> '_Bool' prefix '!'
        (CXXMemberCallExpr 0x9f75d70 <col:14, col:22> '_Bool'
          (MemberExpr 0x9f75d50 <col:14, col:16> '<bound member function type>' .empty 0x9d256d0
            (DeclRefExpr 0x9f75d38 <col:14> 'const wcstring':'const class std::basic_string<wchar_t>' lvalue ParmVar 0x9f75a50 'x' 'const wcstring &'))))
      (ImplicitCastExpr 0x9f75fa0 <col:27, col:51> '_Bool' <PointerToBoolean>
        (CallExpr 0x9f75f58 <col:27, col:51> 'wchar_t *'
          (ImplicitCastExpr 0x9f75f48 <col:27> 'wchar_t *(*)(const wchar_t *, wchar_t) throw()' <FunctionToPointerDecay>
            (DeclRefExpr 0x9f75f2c <col:27> 'wchar_t *(const wchar_t *, wchar_t) throw()' lvalue Function 0x9a3a480 'wcschr' 'wchar_t *(const wchar_t *, wchar_t) throw()'))
          (ImplicitCastExpr 0x9f75f80 <col:34> 'const wchar_t *' <ArrayToPointerDecay>
            (StringLiteral 0x9f75e40 <col:34> 'const wchar_t [6]' lvalue L"Y\000\000\000T\000\000\000y\000\000\000t\000\000\0001\000\000\000"))
          (ImplicitCastExpr 0x9f75f90 <col:44, col:50> 'wchar_t':'wchar_t' <LValueToRValue>
            (CXXMemberCallExpr 0x9f75f00 <col:44, col:50> 'const wchar_t':'const wchar_t' lvalue
              (MemberExpr 0x9f75ee0 <col:44, col:46> '<bound member function type>' .at 0x9d26080
                (DeclRefExpr 0x9f75e70 <col:44> 'const wcstring':'const class std::basic_string<wchar_t>' lvalue ParmVar 0x9f75a50 'x' 'const wcstring &'))
              (ImplicitCastExpr 0x9f75f20 <col:49> 'size_type':'unsigned int' <IntegralCast>
                (IntegerLiteral 0x9f75ec8 <col:49> 'int' 0)))))))))


inline wcstring to_string(const int &x) (CompoundStmt 0x9f76510 <../codeBase/fish-shell-master/common.h:400:1, line:402:1>
  (ReturnStmt 0x9f76500 <line:401:5, col:42>
    (ExprWithCleanups 0x9f764e0 <col:12, col:42> 'wcstring':'class std::basic_string<wchar_t>'
      (CXXTemporary 0x9f76480)
      (CXXConstructExpr 0x9f764b8 <col:12, col:42> 'wcstring':'class std::basic_string<wchar_t>''void (const class std::basic_string<wchar_t> &)' elidable
        (MaterializeTemporaryExpr 0x9f764a8 <col:12, col:42> 'const class std::basic_string<wchar_t>' lvalue
          (ImplicitCastExpr 0x9f76498 <col:12, col:42> 'const class std::basic_string<wchar_t>' <NoOp>
            (CXXBindTemporaryExpr 0x9f76488 <col:12, col:42> 'wcstring':'class std::basic_string<wchar_t>' (CXXTemporary 0x9f76480)
              (CallExpr 0x9f76448 <col:12, col:42> 'wcstring':'class std::basic_string<wchar_t>'
                (ImplicitCastExpr 0x9f76438 <col:12> 'wcstring (*)(const long &)' <FunctionToPointerDecay>
                  (DeclRefExpr 0x9f763e0 <col:12> 'wcstring (const long &)' lvalue Function 0x9f74cb0 'to_string' 'wcstring (const long &)' (FunctionTemplate 0x9f748b0 'to_string')))
                (MaterializeTemporaryExpr 0x9f76468 <col:22, col:41> 'const long' lvalue
                  (CXXStaticCastExpr 0x9f76398 <col:22, col:41> 'long' static_cast<long> <NoOp>
                    (ImplicitCastExpr 0x9f76388 <col:40> 'long' <IntegralCast>
                      (ImplicitCastExpr 0x9f76378 <col:40> 'int' <LValueToRValue>
                        (DeclRefExpr 0x9f7634c <col:40> 'const int' lvalue ParmVar 0x9f76010 'x' 'const int &')))))))))))))


wchar_t **make_null_terminated_array(const wcstring_list_t &lst);
char **make_null_terminated_array(const std::vector<std::string> &lst);
template <typename CharType_t = wchar_t> class null_terminated_array_t
template <typename CharType_t = char> class null_terminated_array_t
template <typename CharType_t> class null_terminated_array_t {
    class null_terminated_array_t;
    CharType_t **array;
    void operator=(null_terminated_array_t<CharType_t> rhs);
    null_terminated_array_t<CharType_t>(const null_terminated_array_t<CharType_t> &);
    typedef std::vector<std::basic_string<CharType_t> > string_list_t;
    size_t size() const (CompoundStmt 0x9f77d58 <../codeBase/fish-shell-master/common.h:420:5, line:430:5>
  (DeclStmt 0x9f77b50 <line:421:9, col:23>
    0x9f77af0 "size_t len =
      (ImplicitCastExpr 0x9f77b40 <col:22> 'size_t':'unsigned int' <IntegralCast>
        (IntegerLiteral 0x9f77b28 <col:22> 'int' 0))")
  (IfStmt 0x9f77d00 <line:422:9, line:428:9>
    <<<NULL>>>
    (BinaryOperator 0x9f77be0 <line:422:13, /usr/include/linux/stddef.h:8:14> '<dependent type>' '!='
      (MemberExpr 0x9f77ba4 <../codeBase/fish-shell-master/common.h:422:13> 'CharType_t **const' lvalue ->array 0x9f76d40
        (CXXThisExpr 0x9f77b78 <col:13> 'const null_terminated_array_t<CharType_t> *' this))
      (IntegerLiteral 0x9f77bc8 </usr/include/linux/stddef.h:8:14> 'int' 0))
    (CompoundStmt 0x9f77ce8 <../codeBase/fish-shell-master/common.h:423:9, line:428:9>
      (WhileStmt 0x9f77cd0 <line:424:13, line:427:13>
        <<<NULL>>>
        (BinaryOperator 0x9f77c70 <line:424:20, /usr/include/linux/stddef.h:8:14> '<dependent type>' '!='
          (ArraySubscriptExpr 0x9f77c40 <../codeBase/fish-shell-master/common.h:424:20, col:29> '<dependent type>' lvalue
            (MemberExpr 0x9f77c08 <col:20> 'CharType_t **const' lvalue ->array 0x9f76d40
              (CXXThisExpr 0x9f77bf8 <col:20> 'const null_terminated_array_t<CharType_t> *' this))
            (DeclRefExpr 0x9f77c28 <col:26> 'size_t':'unsigned int' lvalue Var 0x9f77af0 'len' 'size_t':'unsigned int'))
          (IntegerLiteral 0x9f77c58 </usr/include/linux/stddef.h:8:14> 'int' 0))
        (CompoundStmt 0x9f77cb8 <../codeBase/fish-shell-master/common.h:425:13, line:427:13>
          (UnaryOperator 0x9f77ca0 <line:426:17, col:20> 'size_t':'unsigned int' postfix '++'
            (DeclRefExpr 0x9f77c88 <col:17> 'size_t':'unsigned int' lvalue Var 0x9f77af0 'len' 'size_t':'unsigned int')))))
    <<<NULL>>>)
  (ReturnStmt 0x9f77d48 <line:429:9, col:16>
    (ImplicitCastExpr 0x9f77d38 <col:16> 'size_t':'unsigned int' <LValueToRValue>
      (DeclRefExpr 0x9f77d1c <col:16> 'size_t':'unsigned int' lvalue Var 0x9f77af0 'len' 'size_t':'unsigned int'))))


    void free() (CompoundStmt 0x9f77eb8 <../codeBase/fish-shell-master/common.h:433:5, line:436:5>
  (CallExpr 0x9f77e38 <line:434:9, col:29> 'void'
    (ImplicitCastExpr 0x9f77e28 <col:9, col:11> 'void (*)(void *) throw()' <FunctionToPointerDecay>
      (DeclRefExpr 0x9f77d8c <col:9, col:11> 'void (void *) throw()' lvalue Function 0x9a0a470 'free' 'void (void *) throw()'))
    (CStyleCastExpr 0x9f77df0 <col:16, col:24> 'void *' <Dependent>
      (MemberExpr 0x9f77dc0 <col:24> 'CharType_t **' lvalue ->array 0x9f76d40
        (CXXThisExpr 0x9f77db0 <col:24> 'null_terminated_array_t<CharType_t> *' this))))
  (BinaryOperator 0x9f77ea0 <line:435:9, /usr/include/linux/stddef.h:8:14> '<dependent type>' '='
    (MemberExpr 0x9f77e68 <../codeBase/fish-shell-master/common.h:435:9> 'CharType_t **' lvalue ->array 0x9f76d40
      (CXXThisExpr 0x9f77e58 <col:9> 'null_terminated_array_t<CharType_t> *' this))
    (IntegerLiteral 0x9f77e88 </usr/include/linux/stddef.h:8:14> 'int' 0)))


public:
public:
    null_terminated_array_t<CharType_t>() : array((IntegerLiteral 0x9f77ed0 </usr/include/linux/stddef.h:8:14> 'int' 0)
) (CompoundStmt 0x9f77f30 <../codeBase/fish-shell-master/common.h:439:45, col:47>)


    null_terminated_array_t<CharType_t>(const string_list_t &argv) : array((CallExpr 0x9f77f90 <../codeBase/fish-shell-master/common.h:440:64, col:95> '<dependent type>'
  (UnresolvedLookupExpr 0x9f77f40 <col:64> '<overloaded function type>' lvalue (ADL) = '1' 0x9f76a10 0x9f765e0)
  (DeclRefExpr 0x9f77f78 <col:91> 'const string_list_t':'const vector<std::basic_string<CharType_t> >' lvalue ParmVar 0x9f776c0 'argv' 'const string_list_t &'))
) (CompoundStmt 0x9f77ff0 <../codeBase/fish-shell-master/common.h:441:5, line:442:5>)


    void ~null_terminated_array_t<CharType_t>() (CompoundStmt 0x9f78068 <../codeBase/fish-shell-master/common.h:445:5, line:447:5>
  (CallExpr 0x9f78048 <line:446:9, col:20> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9f78010 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0x9f78000 <col:9> 'null_terminated_array_t<CharType_t> *' this))))


    void set(const string_list_t &argv) (CompoundStmt 0x9f781b8 <../codeBase/fish-shell-master/common.h:450:5, line:453:5>
  (CallExpr 0x9f780c8 <line:451:9, col:20> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9f78090 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0x9f78080 <col:9> 'null_terminated_array_t<CharType_t> *' this)))
  (BinaryOperator 0x9f781a0 <line:452:9, col:54> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x9f780f8 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0x9f780e8 <col:9> 'null_terminated_array_t<CharType_t> *' this))
    (CallExpr 0x9f78180 <col:23, col:54> '<dependent type>'
      (UnresolvedLookupExpr 0x9f78130 <col:23> '<overloaded function type>' lvalue (ADL) = '1' 0x9f76a10 0x9f765e0)
      (DeclRefExpr 0x9f78168 <col:50> 'const string_list_t':'const vector<std::basic_string<CharType_t> >' lvalue ParmVar 0x9f77880 'argv' 'const string_list_t &'))))


    const CharType_t *const *get() const (CompoundStmt 0x9f78210 <../codeBase/fish-shell-master/common.h:456:5, line:458:5>
  (ReturnStmt 0x9f78200 <line:457:9, col:16>
    (MemberExpr 0x9f781e0 <col:16> 'CharType_t **const' lvalue ->array 0x9f76d40
      (CXXThisExpr 0x9f781d0 <col:16> 'const null_terminated_array_t<CharType_t> *' this))))


    void clear() (CompoundStmt 0x9f78290 <../codeBase/fish-shell-master/common.h:461:5, line:463:5>
  (CallExpr 0x9f78270 <line:462:9, col:20> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9f78238 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0x9f78228 <col:9> 'null_terminated_array_t<CharType_t> *' this))))


};
void convert_wide_array_to_narrow(const null_terminated_array_t<wchar_t> &arr, null_terminated_array_t<char> *output);
class narrow_string_rep_t {
    class narrow_string_rep_t;
private:
private:
    const char *str;
    narrow_string_rep_t &operator=(const narrow_string_rep_t &);
    narrow_string_rep_t(const narrow_string_rep_t &x);
public:
public:
    void ~narrow_string_rep_t() (CompoundStmt 0x9f78e78 <../codeBase/fish-shell-master/common.h:481:5, line:483:5>
  (CallExpr 0x9f78e58 <line:482:9, col:25> 'void'
    (ImplicitCastExpr 0x9f78e48 <col:9> 'void (*)(void *) throw()' <FunctionToPointerDecay>
      (DeclRefExpr 0x9f78e30 <col:9> 'void (void *) throw()' lvalue Function 0x9a0a470 'free' 'void (void *) throw()'))
    (CStyleCastExpr 0x9f78e18 <col:14, col:22> 'void *' <NoOp>
      (ImplicitCastExpr 0x9f78e08 <col:22> 'void *' <BitCast>
        (ImplicitCastExpr 0x9f78df8 <col:22> 'const char *' <LValueToRValue>
          (MemberExpr 0x9f78dc8 <col:22> 'const char *' lvalue ->str 0x9f78810
            (CXXThisExpr 0x9f78db8 <col:22> 'class narrow_string_rep_t *' this)))))))


    narrow_string_rep_t() : str((ImplicitCastExpr 0x9f78ea8 </usr/include/linux/stddef.h:8:14> 'const char *' <NullToPointer>
  (IntegerLiteral 0x9f78e90 <col:14> 'int' 0))
) (CompoundStmt 0x9f78ee0 <../codeBase/fish-shell-master/common.h:485:39, col:40>)


    void set(const wcstring &s) (CompoundStmt 0x9f79130 <../codeBase/fish-shell-master/common.h:488:5, line:491:5>
  (CallExpr 0x9f78fc8 <line:489:9, col:25> 'void'
    (ImplicitCastExpr 0x9f78fb8 <col:9> 'void (*)(void *) throw()' <FunctionToPointerDecay>
      (DeclRefExpr 0x9f78fa0 <col:9> 'void (void *) throw()' lvalue Function 0x9a0a470 'free' 'void (void *) throw()'))
    (CStyleCastExpr 0x9f78f88 <col:14, col:22> 'void *' <NoOp>
      (ImplicitCastExpr 0x9f78f78 <col:22> 'void *' <BitCast>
        (ImplicitCastExpr 0x9f78f68 <col:22> 'const char *' <LValueToRValue>
          (MemberExpr 0x9f78f38 <col:22> 'const char *' lvalue ->str 0x9f78810
            (CXXThisExpr 0x9f78f28 <col:22> 'class narrow_string_rep_t *' this))))))
  (BinaryOperator 0x9f79118 <line:490:9, col:32> 'const char *' lvalue '='
    (MemberExpr 0x9f78ff8 <col:9> 'const char *' lvalue ->str 0x9f78810
      (CXXThisExpr 0x9f78fe8 <col:9> 'class narrow_string_rep_t *' this))
    (ImplicitCastExpr 0x9f79108 <col:15, col:32> 'const char *' <NoOp>
      (CallExpr 0x9f790e8 <col:15, col:32> 'char *'
        (ImplicitCastExpr 0x9f790d8 <col:15> 'char *(*)(const wchar_t *)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9f790a4 <col:15> 'char *(const wchar_t *)' lvalue Function 0x9f70990 'wcs2str' 'char *(const wchar_t *)'))
        (CXXMemberCallExpr 0x9f79088 <col:23, col:31> 'const wchar_t *'
          (MemberExpr 0x9f79068 <col:23, col:25> '<bound member function type>' .c_str 0x9d35400
            (DeclRefExpr 0x9f79050 <col:23> 'const wcstring':'const class std::basic_string<wchar_t>' lvalue ParmVar 0x9f78c00 's' 'const wcstring &')))))))


    const char *get() const (CompoundStmt 0x9f791b8 <../codeBase/fish-shell-master/common.h:494:5, line:496:5>
  (ReturnStmt 0x9f791a8 <line:495:9, col:16>
    (ImplicitCastExpr 0x9f79198 <col:16> 'const char *' <LValueToRValue>
      (MemberExpr 0x9f79178 <col:16> 'const char *const' lvalue ->str 0x9f78810
        (CXXThisExpr 0x9f79168 <col:16> 'const class narrow_string_rep_t *' this)))))


};
bool is_forked_child();
class scoped_lock {
    class scoped_lock;
    pthread_mutex_t *lock_obj;
    bool locked;
    scoped_lock &operator=(const scoped_lock &);
    scoped_lock(const scoped_lock &);
public:
public:
    void lock();
    void unlock();
    scoped_lock(pthread_mutex_t &mutex);
    void ~scoped_lock();
};
template <typename T> class scoped_push {
    class scoped_push;
    T *const ref;
    T saved_value;
    bool restored;
public:
public:
    scoped_push<T>(T *r) : ref((DeclRefExpr 0x9f7a0fc <../codeBase/fish-shell-master/common.h:534:28> 'T *' lvalue ParmVar 0x9f79d80 'r' 'T *')
), saved_value((UnaryOperator 0x9f7a170 <../codeBase/fish-shell-master/common.h:534:44, col:45> '<dependent type>' prefix '*'
  (DeclRefExpr 0x9f7a158 <col:45> 'T *' lvalue ParmVar 0x9f79d80 'r' 'T *'))
), restored((CXXBoolLiteralExpr 0x9f7a1c8 <../codeBase/fish-shell-master/common.h:534:58> '_Bool' false)
) (CompoundStmt 0x9f7a228 <../codeBase/fish-shell-master/common.h:535:5, line:536:5>)


    scoped_push<T>(T *r, const T &new_value) : ref((DeclRefExpr 0x9f7a238 <../codeBase/fish-shell-master/common.h:538:49> 'T *' lvalue ParmVar 0x9f79e90 'r' 'T *')
), saved_value((UnaryOperator 0x9f7a2a0 <../codeBase/fish-shell-master/common.h:538:65, col:66> '<dependent type>' prefix '*'
  (DeclRefExpr 0x9f7a288 <col:66> 'T *' lvalue ParmVar 0x9f79e90 'r' 'T *'))
), restored((CXXBoolLiteralExpr 0x9f7a2f8 <../codeBase/fish-shell-master/common.h:538:79> '_Bool' false)
) (CompoundStmt 0x9f7a3b8 <../codeBase/fish-shell-master/common.h:539:5, line:541:5>
  (BinaryOperator 0x9f7a3a0 <line:540:9, col:14> '<dependent type>' '='
    (UnaryOperator 0x9f7a370 <col:9, col:10> '<dependent type>' prefix '*'
      (DeclRefExpr 0x9f7a354 <col:10> 'T *' lvalue ParmVar 0x9f79e90 'r' 'T *'))
    (DeclRefExpr 0x9f7a384 <col:14> 'const T' lvalue ParmVar 0x9f79f00 'new_value' 'const T &')))


    void ~scoped_push<T>() (CompoundStmt 0x9f7a438 <../codeBase/fish-shell-master/common.h:544:5, line:546:5>
  (CallExpr 0x9f7a418 <line:545:9, col:17> '<dependent type>'
    (MemberExpr 0x9f7a3f8 <col:9> '<bound member function type>' ->restore 0x9f7a0a0
      (CXXThisExpr 0x9f7a3e8 <col:9> 'scoped_push<T> *' this))))


    void restore() (CompoundStmt 0x9f7a638 <../codeBase/fish-shell-master/common.h:549:5, line:555:5>
  (IfStmt 0x9f7a618 <line:550:9, line:554:9>
    <<<NULL>>>
    (UnaryOperator 0x9f7a490 <line:550:13, col:14> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9f7a480 <col:14> '_Bool' <LValueToRValue>
        (MemberExpr 0x9f7a460 <col:14> '_Bool' lvalue ->restored 0x9f79d00
          (CXXThisExpr 0x9f7a450 <col:14> 'scoped_push<T> *' this))))
    (CompoundStmt 0x9f7a600 <line:551:9, line:554:9>
      (CallExpr 0x9f7a580 <line:552:13, col:40> '<dependent type>'
        (UnresolvedLookupExpr 0x9f7a4c8 <col:13, col:18> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b3e850 0x9b3ed90 0x9cc04f0 0x9f28400)
        (UnaryOperator 0x9f7a538 <col:23, col:24> '<dependent type>' prefix '*'
          (MemberExpr 0x9f7a518 <col:24> 'T *const' lvalue ->ref 0x9f79c80
            (CXXThisExpr 0x9f7a508 <col:24> 'scoped_push<T> *' this)))
        (MemberExpr 0x9f7a560 <col:29> 'T' lvalue ->saved_value 0x9f79cc0
          (CXXThisExpr 0x9f7a550 <col:29> 'scoped_push<T> *' this)))
      (BinaryOperator 0x9f7a5e8 <line:553:13, col:24> '<dependent type>' '='
        (MemberExpr 0x9f7a5b8 <col:13> '_Bool' lvalue ->restored 0x9f79d00
          (CXXThisExpr 0x9f7a5a8 <col:13> 'scoped_push<T> *' this))
        (CXXBoolLiteralExpr 0x9f7a5d8 <col:24> '_Bool' true)))
    <<<NULL>>>))


};
class wcstokenizer {
    class wcstokenizer;
    wchar_t *buffer;
    wchar_t *str;
    wchar_t *state;
    const wcstring sep;
    wcstokenizer &operator=(const wcstokenizer &);
    wcstokenizer(const wcstokenizer &);
public:
public:
    wcstokenizer(const wcstring &s, const wcstring &separator);
    bool next(wcstring &result);
    void ~wcstokenizer();
};
void append_path_component(wcstring &path, const wcstring &component);
wcstring format_string(const wchar_t *format, ...);
wcstring vformat_string(const wchar_t *format, va_list va_orig);
void append_format(wcstring &str, const wchar_t *format, ...);
void append_formatv(wcstring &str, const wchar_t *format, va_list ap);
char **wcsv2strv(const wchar_t *const *in);
wchar_t *wcsvarname(const wchar_t *str);
const wchar_t *wcsfuncname(const wchar_t *str);
int wcsvarchr(wchar_t chr);
int my_wcswidth(const wchar_t *c);
wchar_t *quote_end(const wchar_t *in);
void error_reset();
wcstring wsetlocale(int category, const wchar_t *locale);
bool contains_internal(const wchar_t *needle, ...);
bool contains_internal(const wcstring &needle, ...);
long read_blocked(int fd, void *buf, size_t count);
ssize_t write_loop(int fd, const char *buff, size_t count);
ssize_t read_loop(int fd, void *buff, size_t count);
void debug(int level, const char *msg, ...);
void debug(int level, const wchar_t *msg, ...);
wchar_t *escape(const wchar_t *in, escape_flags_t flags);
wcstring escape_string(const wcstring &in, escape_flags_t flags);
wchar_t *unescape(const wchar_t *in, int escape_special);
bool unescape_string(wcstring &str, int escape_special);
int common_get_width();
int common_get_height();
void common_handle_winch(int signal);
void write_screen(const wcstring &msg, wcstring &buff);
void tokenize_variable_array(const wcstring &val, wcstring_list_t &out);
int create_directory(const wcstring &d);
void bugreport();
double timef();
void set_main_thread();
bool is_main_thread();
void configure_thread_assertions_for_testing();
void setup_fork_guards();
void save_term_foreground_process_group();
void restore_term_foreground_process_group();
bool is_forked_child();
void assert_is_not_forked_child(const char *who);
extern "C" {
    void debug_thread_error();
}
extern "C" {
    struct dirent {
        struct dirent;
        __ino_t d_ino;
        __off_t d_off;
        unsigned short d_reclen;
        unsigned char d_type;
        char d_name[256];
    };
    struct dirent64 {
        struct dirent64;
        __ino64_t d_ino;
        __off64_t d_off;
        unsigned short d_reclen;
        unsigned char d_type;
        char d_name[256];
    };
    enum  {
        DT_UNKNOWN = (ImplicitCastExpr 0x9f848d8 </usr/include/dirent.h:101:18> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f84600 <col:18> 'int' 0))
,
        DT_FIFO = (ImplicitCastExpr 0x9f848e8 </usr/include/dirent.h:103:15> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f84658 <col:15> 'int' 1))
,
        DT_CHR = (ImplicitCastExpr 0x9f848f8 </usr/include/dirent.h:105:14> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f846a8 <col:14> 'int' 2))
,
        DT_DIR = (ImplicitCastExpr 0x9f84908 </usr/include/dirent.h:107:14> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f846f8 <col:14> 'int' 4))
,
        DT_BLK = (ImplicitCastExpr 0x9f84918 </usr/include/dirent.h:109:14> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f84748 <col:14> 'int' 6))
,
        DT_REG = (ImplicitCastExpr 0x9f84928 </usr/include/dirent.h:111:14> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f84798 <col:14> 'int' 8))
,
        DT_LNK = (ImplicitCastExpr 0x9f84938 </usr/include/dirent.h:113:14> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f847e8 <col:14> 'int' 10))
,
        DT_SOCK = (ImplicitCastExpr 0x9f84948 </usr/include/dirent.h:115:15> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f84838 <col:15> 'int' 12))
,
        DT_WHT = (ImplicitCastExpr 0x9f84958 </usr/include/dirent.h:117:14> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f84888 <col:14> 'int' 14))

    };
    struct __dirstream;
    typedef struct __dirstream DIR;
    extern DIR *opendir(const char *__name);
    extern DIR *fdopendir(int __fd);
    extern int closedir(DIR *__dirp);
    extern struct dirent *readdir(DIR *__dirp);
    extern struct dirent64 *readdir64(DIR *__dirp);
    extern int readdir_r(DIR *restrict __dirp, struct dirent *restrict __entry, struct dirent **restrict __result);
    extern int readdir64_r(DIR *restrict __dirp, struct dirent64 *restrict __entry, struct dirent64 **restrict __result);
    extern void rewinddir(DIR *__dirp) throw();
    extern void seekdir(DIR *__dirp, long __pos) throw();
    extern long telldir(DIR *__dirp) throw();
    extern int dirfd(DIR *__dirp) throw();
    extern int scandir(const char *restrict __dir, struct dirent ***restrict __namelist, int (*__selector)(const struct dirent *), int (*__cmp)(const struct dirent **, const struct dirent **));
    extern int scandir64(const char *restrict __dir, struct dirent64 ***restrict __namelist, int (*__selector)(const struct dirent64 *), int (*__cmp)(const struct dirent64 **, const struct dirent64 **));
    extern int scandirat(int __dfd, const char *restrict __dir, struct dirent ***restrict __namelist, int (*__selector)(const struct dirent *), int (*__cmp)(const struct dirent **, const struct dirent **));
    extern int scandirat64(int __dfd, const char *restrict __dir, struct dirent64 ***restrict __namelist, int (*__selector)(const struct dirent64 *), int (*__cmp)(const struct dirent64 **, const struct dirent64 **));
    extern int alphasort(const struct dirent **__e1, const struct dirent **__e2) throw();
    extern int alphasort64(const struct dirent64 **__e1, const struct dirent64 **__e2) throw();
    extern __ssize_t getdirentries(int __fd, char *restrict __buf, size_t __nbytes, __off_t *restrict __basep) throw();
    extern __ssize_t getdirentries64(int __fd, char *restrict __buf, size_t __nbytes, __off64_t *restrict __basep) throw();
    extern int versionsort(const struct dirent **__e1, const struct dirent **__e2) throw();
    extern int versionsort64(const struct dirent64 **__e1, const struct dirent64 **__e2) throw();
}
extern "C" {
    struct stat {
        struct stat;
        __dev_t st_dev;
        unsigned short __pad1;
        __ino_t st_ino;
        __mode_t st_mode;
        __nlink_t st_nlink;
        __uid_t st_uid;
        __gid_t st_gid;
        __dev_t st_rdev;
        unsigned short __pad2;
        __off_t st_size;
        __blksize_t st_blksize;
        __blkcnt_t st_blocks;
        struct timespec st_atim;
        struct timespec st_mtim;
        struct timespec st_ctim;
        unsigned long __unused4;
        unsigned long __unused5;
    };
    struct stat64 {
        struct stat64;
        __dev_t st_dev;
        unsigned int __pad1;
        __ino_t __st_ino;
        __mode_t st_mode;
        __nlink_t st_nlink;
        __uid_t st_uid;
        __gid_t st_gid;
        __dev_t st_rdev;
        unsigned int __pad2;
        __off64_t st_size;
        __blksize_t st_blksize;
        __blkcnt64_t st_blocks;
        struct timespec st_atim;
        struct timespec st_mtim;
        struct timespec st_ctim;
        __ino64_t st_ino;
    };
    extern int stat(const char *restrict __file, struct stat *restrict __buf) throw();
    extern int fstat(int __fd, struct stat *__buf) throw();
    extern int stat64(const char *restrict __file, struct stat64 *restrict __buf) throw();
    extern int fstat64(int __fd, struct stat64 *__buf) throw();
    extern int fstatat(int __fd, const char *restrict __file, struct stat *restrict __buf, int __flag) throw();
    extern int fstatat64(int __fd, const char *restrict __file, struct stat64 *restrict __buf, int __flag) throw();
    extern int lstat(const char *restrict __file, struct stat *restrict __buf) throw();
    extern int lstat64(const char *restrict __file, struct stat64 *restrict __buf) throw();
    extern int chmod(const char *__file, __mode_t __mode) throw();
    extern int lchmod(const char *__file, __mode_t __mode) throw();
    extern int fchmod(int __fd, __mode_t __mode) throw();
    extern int fchmodat(int __fd, const char *__file, __mode_t __mode, int __flag) throw();
    extern __mode_t umask(__mode_t __mask) throw();
    extern __mode_t getumask() throw();
    extern int mkdir(const char *__path, __mode_t __mode) throw();
    extern int mkdirat(int __fd, const char *__path, __mode_t __mode) throw();
    extern int mknod(const char *__path, __mode_t __mode, __dev_t __dev) throw();
    extern int mknodat(int __fd, const char *__path, __mode_t __mode, __dev_t __dev) throw();
    extern int mkfifo(const char *__path, __mode_t __mode) throw();
    extern int mkfifoat(int __fd, const char *__path, __mode_t __mode) throw();
    extern int utimensat(int __fd, const char *__path, const struct timespec __times[2], int __flags) throw();
    extern int futimens(int __fd, const struct timespec __times[2]) throw();
    extern int __fxstat(int __ver, int __fildes, struct stat *__stat_buf) throw();
    extern int __xstat(int __ver, const char *__filename, struct stat *__stat_buf) throw();
    extern int __lxstat(int __ver, const char *__filename, struct stat *__stat_buf) throw();
    extern int __fxstatat(int __ver, int __fildes, const char *__filename, struct stat *__stat_buf, int __flag) throw();
    extern int __fxstat64(int __ver, int __fildes, struct stat64 *__stat_buf) throw();
    extern int __xstat64(int __ver, const char *__filename, struct stat64 *__stat_buf) throw();
    extern int __lxstat64(int __ver, const char *__filename, struct stat64 *__stat_buf) throw();
    extern int __fxstatat64(int __ver, int __fildes, const char *__filename, struct stat64 *__stat_buf, int __flag) throw();
    extern int __xmknod(int __ver, const char *__path, __mode_t __mode, __dev_t *__dev) throw();
    extern int __xmknodat(int __ver, int __fd, const char *__path, __mode_t __mode, __dev_t *__dev) throw();
}
namespace std {
    namespace rel_ops {
        template <class _Tp> inline bool operator!=(const _Tp &__x, const _Tp &__y) (CompoundStmt 0x9f9ee08 </usr/include/c++/4.6/bits/stl_relops.h:89:7, col:31>
  (ReturnStmt 0x9f9edf8 <col:9, col:28>
    (UnaryOperator 0x9f9ede0 <col:16, col:28> '<dependent type>' prefix '!'
      (ParenExpr 0x9f9edc8 <col:17, col:28> '<dependent type>'
        (CXXOperatorCallExpr 0x9f9eda0 <col:18, col:25> '<dependent type>'
          (UnresolvedLookupExpr 0x9f9ed40 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40200 0x9b577d0 0x9b5d890 0x9ba7930 0x9bc6a00 0x9bc6d90 0x9cb91e0 0x9cb9c50 0x9cba490 0x9cbaa00 0x9db0390 0x9f25fa0)
          (DeclRefExpr 0x9f9ed10 <col:18> 'const _Tp' lvalue ParmVar 0x9f9ebb0 '__x' 'const _Tp &')
          (DeclRefExpr 0x9f9ed28 <col:25> 'const _Tp' lvalue ParmVar 0x9f9ec00 '__y' 'const _Tp &'))))))

;
        template <class _Tp> inline bool operator>(const _Tp &__x, const _Tp &__y) (CompoundStmt 0x9f9f0c8 </usr/include/c++/4.6/bits/stl_relops.h:102:7, col:27>
  (ReturnStmt 0x9f9f0b8 <col:9, col:22>
    (CXXOperatorCallExpr 0x9f9f090 <col:16, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0x9f9f040 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40ad0 0x9b57c70 0x9b5ddb0 0x9cbc120 0x9cbc650 0x9cbcb80 0x9f26790)
      (DeclRefExpr 0x9f9f010 <col:16> 'const _Tp' lvalue ParmVar 0x9f9ef00 '__y' 'const _Tp &')
      (DeclRefExpr 0x9f9f028 <col:22> 'const _Tp' lvalue ParmVar 0x9f9eeb0 '__x' 'const _Tp &'))))

;
        template <class _Tp> inline bool operator<=(const _Tp &__x, const _Tp &__y) (CompoundStmt 0x9f9f3b8 </usr/include/c++/4.6/bits/stl_relops.h:115:7, col:30>
  (ReturnStmt 0x9f9f3a8 <col:9, col:27>
    (UnaryOperator 0x9f9f390 <col:16, col:27> '<dependent type>' prefix '!'
      (ParenExpr 0x9f9f378 <col:17, col:27> '<dependent type>'
        (CXXOperatorCallExpr 0x9f9f350 <col:18, col:24> '<dependent type>'
          (UnresolvedLookupExpr 0x9f9f300 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40ad0 0x9b57c70 0x9b5ddb0 0x9cbc120 0x9cbc650 0x9cbcb80 0x9f26790)
          (DeclRefExpr 0x9f9f2d0 <col:18> 'const _Tp' lvalue ParmVar 0x9f9f1c0 '__y' 'const _Tp &')
          (DeclRefExpr 0x9f9f2e8 <col:24> 'const _Tp' lvalue ParmVar 0x9f9f170 '__x' 'const _Tp &'))))))

;
        template <class _Tp> inline bool operator>=(const _Tp &__x, const _Tp &__y) (CompoundStmt 0x9f9f6a8 </usr/include/c++/4.6/bits/stl_relops.h:128:7, col:30>
  (ReturnStmt 0x9f9f698 <col:9, col:27>
    (UnaryOperator 0x9f9f680 <col:16, col:27> '<dependent type>' prefix '!'
      (ParenExpr 0x9f9f668 <col:17, col:27> '<dependent type>'
        (CXXOperatorCallExpr 0x9f9f640 <col:18, col:24> '<dependent type>'
          (UnresolvedLookupExpr 0x9f9f5f0 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9b40ad0 0x9b57c70 0x9b5ddb0 0x9cbc120 0x9cbc650 0x9cbcb80 0x9f26790)
          (DeclRefExpr 0x9f9f5c0 <col:18> 'const _Tp' lvalue ParmVar 0x9f9f460 '__x' 'const _Tp &')
          (DeclRefExpr 0x9f9f5d8 <col:24> 'const _Tp' lvalue ParmVar 0x9f9f4b0 '__y' 'const _Tp &'))))))

;
    }
}
void wutil_init();
void wutil_destroy();
FILE *wfopen(const wcstring &path, const char *mode);
bool set_cloexec(int fd);
FILE *wfreopen(const wcstring &path, const char *mode, FILE *stream);
int wopen(const wcstring &pathname, int flags, mode_t mode = (ImplicitCastExpr 0x9f9fd20 <../codeBase/fish-shell-master/wutil.h:46:62> 'mode_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f9fd08 <col:62> 'int' 0))
);
int wopen_cloexec(const wcstring &pathname, int flags, mode_t mode = (ImplicitCastExpr 0x9f9ff10 <../codeBase/fish-shell-master/wutil.h:49:70> 'mode_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f9fef8 <col:70> 'int' 0))
);
int make_fd_nonblocking(int fd);
int make_fd_blocking(int fd);
int wcreat(const wcstring &pathname, mode_t mode);
DIR *wopendir(const wcstring &name);
int wstat(const wcstring &file_name, struct stat *buf);
int lwstat(const wcstring &file_name, struct stat *buf);
int waccess(const wcstring &pathname, int mode);
int wunlink(const wcstring &pathname);
void wperror(const wcstring &s);
void safe_perror(const char *message);
const char *safe_strerror(int err);
wchar_t *wgetcwd(wchar_t *buff, size_t sz);
int wchdir(const wcstring &dir);
wchar_t *wrealpath(const wcstring &pathname, wchar_t *resolved_path);
bool wreaddir(DIR *dir, std::wstring &out_name);
bool wreaddir_resolving(DIR *dir, const std::wstring &dir_path, std::wstring &out_name, bool *out_is_dir);
std::wstring wdirname(const std::wstring &path);
std::wstring wbasename(const std::wstring &path);
const wchar_t *wgettext(const wchar_t *in);
const wchar_t *wgetenv(const wcstring &name);
int wmkdir(const wcstring &dir, int mode);
int wrename(const wcstring &oldName, const wcstring &newName);
int fish_wcstoi(const wchar_t *str, wchar_t **endptr, int base);
typedef std::pair<dev_t, ino_t> file_id_t;
enum token_type {
    TOK_NONE,
    TOK_ERROR,
    TOK_INVALID,
    TOK_STRING,
    TOK_PIPE,
    TOK_END,
    TOK_REDIRECT_OUT,
    TOK_REDIRECT_APPEND,
    TOK_REDIRECT_IN,
    TOK_REDIRECT_FD,
    TOK_REDIRECT_NOCLOB,
    TOK_BACKGROUND,
    TOK_COMMENT
};
enum tokenizer_error {
    TOK_UNTERMINATED_QUOTE,
    TOK_UNTERMINATED_SUBSHELL,
    TOK_UNTERMINATED_ESCAPE,
    TOK_OTHER
};
typedef unsigned int tok_flags_t;
struct tokenizer_t {
    struct tokenizer_t;
    const wchar_t *buff;
    const wchar_t *orig_buff;
    wcstring last_token;
    enum token_type last_type;
    size_t last_pos;
    bool has_next;
    bool accept_unfinished;
    bool show_comments;
    wchar_t last_quote;
    int error;
    bool squash_errors;
    size_t cached_lineno_offset;
    int cached_lineno_count;
    int line_number_of_character_at_offset(size_t offset);
    tokenizer_t(const wchar_t *b, tok_flags_t flags);
    inline tokenizer_t(const tokenizer_t &);
    inline void ~tokenizer_t() (CompoundStmt 0x9facf50 <../codeBase/fish-shell-master/tokenizer.h:70:8>)


};
void tok_next(tokenizer_t *tok);
enum token_type tok_last_type(tokenizer_t *tok);
const wchar_t *tok_last(tokenizer_t *tok);
wchar_t tok_last_quote(tokenizer_t *tok);
int tok_has_next(tokenizer_t *tok);
int tok_get_pos(tokenizer_t *tok);
enum token_type tok_peek_next(tokenizer_t *tok, wcstring *out_next_string);
const wchar_t *tok_string(tokenizer_t *tok);
wcstring tok_first(const wchar_t *str);
bool tok_is_string_character(wchar_t c, bool is_first);
void tok_set_pos(tokenizer_t *tok, int pos);
const wchar_t *tok_get_desc(int type);
int tok_get_error(tokenizer_t *tok);
enum move_word_style_t {
    move_word_style_punctuation,
    move_word_style_path_components
};
class move_word_state_machine_t {
    class move_word_state_machine_t;
private:
private:
    bool consume_char_punctuation(wchar_t c);
    bool consume_char_path_components(wchar_t c);
    bool is_path_component_character(wchar_t c);
    int state;
    move_word_style_t style;
public:
public:
    move_word_state_machine_t(move_word_style_t st);
    bool consume_char(wchar_t c);
    void reset();
};
void print_help(const char *cmd, int fd);
enum  {
    ARG_NON_SWITCH,
    ARG_SWITCH,
    ARG_SKIP
};
bool parser_keywords_is_switch(const wcstring &cmd);
bool parser_keywords_is_subcommand(const wcstring &cmd);
bool parser_keywords_is_reserved(const wcstring &word);
bool parser_keywords_is_block(const wcstring &word);
bool parser_keywords_skip_arguments(const wcstring &cmd);
static void read_file(FILE *f, wcstring &b) (CompoundStmt 0x9fac4d8 <../codeBase/fish-shell-master/fish_indent.cpp:53:1, line:70:1>
  (WhileStmt 0x9fac4c0 <line:54:5, line:69:5>
    <<<NULL>>>
    (ImplicitCastExpr 0x9fabcb0 <line:54:12> '_Bool' <IntegralToBoolean>
      (IntegerLiteral 0x9fabc98 <col:12> 'int' 1))
    (CompoundStmt 0x9fac4a0 <line:55:5, line:69:5>
      (BinaryOperator 0x9fabdc0 </usr/include/i386-linux-gnu/bits/errno.h:51:18, ../codeBase/fish-shell-master/fish_indent.cpp:56:15> 'int' lvalue '='
        (ParenExpr 0x9fabd90 </usr/include/i386-linux-gnu/bits/errno.h:51:18, col:39> 'int' lvalue
          (UnaryOperator 0x9fabd78 <col:19, col:38> 'int' lvalue prefix '*'
            (CallExpr 0x9fabd58 <col:20, col:38> 'int *'
              (ImplicitCastExpr 0x9fabd48 <col:20> 'int *(*)(void) throw()' <FunctionToPointerDecay>
                (DeclRefExpr 0x9fabcf4 <col:20> 'int *(void) throw()' lvalue Function 0x9a4b9b0 '__errno_location' 'int *(void) throw()')))))
        (IntegerLiteral 0x9fabda8 <../codeBase/fish-shell-master/fish_indent.cpp:56:15> 'int' 0))
      (DeclStmt 0x9fabef8 <line:57:9, col:29>
        0x9fabde0 "wint_t c =
          (CallExpr 0x9fabec8 <col:20, col:28> 'wint_t':'unsigned int'
            (ImplicitCastExpr 0x9fabeb8 <col:20> 'wint_t (*)(__FILE *)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9fabe64 <col:20> 'wint_t (__FILE *)' lvalue Function 0x9a40b90 'fgetwc' 'wint_t (__FILE *)'))
            (ImplicitCastExpr 0x9fabee8 <col:27> 'FILE *' <LValueToRValue>
              (DeclRefExpr 0x9fabe4c <col:27> 'FILE *' lvalue ParmVar 0x9fabb40 'f' 'FILE *')))")
      (IfStmt 0x9fac3d0 <line:58:9, line:67:9>
        <<<NULL>>>
        (BinaryOperator 0x9fabf60 <line:58:13, /usr/include/wchar.h:119:27> '_Bool' '=='
          (ImplicitCastExpr 0x9fabf50 <../codeBase/fish-shell-master/fish_indent.cpp:58:13> 'wint_t':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0x9fabf08 <col:13> 'wint_t':'unsigned int' lvalue Var 0x9fabde0 'c' 'wint_t':'unsigned int'))
          (ParenExpr 0x9fabf38 </usr/include/wchar.h:119:15, col:27> 'unsigned int'
            (IntegerLiteral 0x9fabf20 <col:16> 'unsigned int' 4294967295)))
        (CompoundStmt 0x9fac3b8 <../codeBase/fish-shell-master/fish_indent.cpp:59:9, line:67:9>
          (IfStmt 0x9fac390 <line:60:13, line:64:13>
            <<<NULL>>>
            (ImplicitCastExpr 0x9fac038 </usr/include/i386-linux-gnu/bits/errno.h:51:18, col:39> '_Bool' <IntegralToBoolean>
              (ImplicitCastExpr 0x9fac028 <col:18, col:39> 'int' <LValueToRValue>
                (ParenExpr 0x9fac010 <col:18, col:39> 'int' lvalue
                  (UnaryOperator 0x9fabff8 <col:19, col:38> 'int' lvalue prefix '*'
                    (CallExpr 0x9fabfd8 <col:20, col:38> 'int *'
                      (ImplicitCastExpr 0x9fabfc8 <col:20> 'int *(*)(void) throw()' <FunctionToPointerDecay>
                        (DeclRefExpr 0x9fabfac <col:20> 'int *(void) throw()' lvalue Function 0x9a4b9b0 '__errno_location' 'int *(void) throw()')))))))
            (CompoundStmt 0x9fac378 <../codeBase/fish-shell-master/fish_indent.cpp:61:13, line:64:13>
              (ExprWithCleanups 0x9fac288 <line:62:17, col:34> 'void'
                (CXXTemporary 0x9fac1c0)
                (CXXTemporary 0x9fac260)
                (CallExpr 0x9fac158 <col:17, col:34> 'void'
                  (ImplicitCastExpr 0x9fac148 <col:17> 'void (*)(const wcstring &)' <FunctionToPointerDecay>
                    (DeclRefExpr 0x9fac0f4 <col:17> 'void (const wcstring &)' lvalue Function 0x9fa0950 'wperror' 'void (const wcstring &)'))
                  (MaterializeTemporaryExpr 0x9fac278 <col:25> 'const wcstring':'const class std::basic_string<wchar_t>' lvalue
                    (CXXBindTemporaryExpr 0x9fac268 <col:25> 'const wcstring':'const class std::basic_string<wchar_t>' (CXXTemporary 0x9fac260)
                      (CXXConstructExpr 0x9fac238 <col:25> 'const wcstring':'const class std::basic_string<wchar_t>''void (const wchar_t *, const class std::allocator<wchar_t> &)'
                        (ImplicitCastExpr 0x9fac178 <col:25> 'const wchar_t *' <ArrayToPointerDecay>
                          (StringLiteral 0x9fac0c0 <col:25> 'const wchar_t [7]' lvalue L"f\000\000\000g\000\000\000e\000\000\000t\000\000\000w\000\000\000c\000\000\000"))
                        (CXXDefaultArgExpr 0x9fac220 <<invalid sloc>> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue))))))
              (CallExpr 0x9fac358 <line:63:17, col:23> 'void'
                (ImplicitCastExpr 0x9fac348 <col:17> 'void (*)(int) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
                  (DeclRefExpr 0x9fac2f8 <col:17> 'void (int) __attribute__((noreturn)) throw()' lvalue Function 0x9a0e430 'exit' 'void (int) __attribute__((noreturn)) throw()'))
                (IntegerLiteral 0x9fac2e0 <col:22> 'int' 1)))
            <<<NULL>>>)
          (BreakStmt 0x9fac3b0 <line:66:13>))
        <<<NULL>>>)
      (CXXMemberCallExpr 0x9fac480 <line:68:9, col:31> 'void'
        (MemberExpr 0x9fac404 <col:9, col:11> '<bound member function type>' .push_back 0x9d280b0
          (DeclRefExpr 0x9fac3ec <col:9> 'wcstring':'class std::basic_string<wchar_t>' lvalue ParmVar 0x9fabb90 'b' 'wcstring &'))
        (CStyleCastExpr 0x9fac468 <col:21, col:30> 'wchar_t' <NoOp>
          (ImplicitCastExpr 0x9fac458 <col:30> 'wchar_t' <IntegralCast>
            (ImplicitCastExpr 0x9fac448 <col:30> 'wint_t':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0x9fac424 <col:30> 'wint_t':'unsigned int' lvalue Var 0x9fabde0 'c' 'wint_t':'unsigned int'))))))))


static void insert_tabs(wcstring &out, int indent) (CompoundStmt 0x9fac830 <../codeBase/fish-shell-master/fish_indent.cpp:76:1, line:80:1>
  (IfStmt 0x9fac810 <line:77:5, line:78:41>
    <<<NULL>>>
    (BinaryOperator 0x9fac698 <line:77:9, col:18> '_Bool' '>'
      (ImplicitCastExpr 0x9fac688 <col:9> 'int' <LValueToRValue>
        (DeclRefExpr 0x9fac658 <col:9> 'int' lvalue ParmVar 0x9fac550 'indent' 'int'))
      (IntegerLiteral 0x9fac670 <col:18> 'int' 0))
    (CXXMemberCallExpr 0x9fac7e8 <line:78:9, col:41> 'class std::basic_string<wchar_t>' lvalue
      (MemberExpr 0x9fac7c4 <col:9, col:13> '<bound member function type>' .append 0x9d27c80
        (DeclRefExpr 0x9fac6b0 <col:9> 'wcstring':'class std::basic_string<wchar_t>' lvalue ParmVar 0x9fac500 'out' 'wcstring &'))
      (CStyleCastExpr 0x9fac758 <col:20, col:28> 'size_t':'unsigned int' <NoOp>
        (ImplicitCastExpr 0x9fac748 <col:28> 'size_t':'unsigned int' <IntegralCast>
          (ImplicitCastExpr 0x9fac738 <col:28> 'int' <LValueToRValue>
            (DeclRefExpr 0x9fac718 <col:28> 'int' lvalue ParmVar 0x9fac550 'indent' 'int'))))
      (CharacterLiteral 0x9fac770 <col:36> 'wchar_t'9))
    <<<NULL>>>))


static int indent(wcstring &out, const wcstring &in, int flags) (CompoundStmt 0x9fb1288 <../codeBase/fish-shell-master/fish_indent.cpp:86:1, line:261:1>
  (DeclStmt 0x9faca90 <line:87:5, col:14>
    0x9faca40 "int res =
      (IntegerLiteral 0x9faca78 <col:13> 'int' 0)")
  (DeclStmt 0x9facb00 <line:88:5, col:23>
    0x9facab0 "int is_command =
      (IntegerLiteral 0x9facae8 <col:22> 'int' 1)")
  (DeclStmt 0x9facb70 <line:89:5, col:19>
    0x9facb20 "int indent =
      (IntegerLiteral 0x9facb58 <col:18> 'int' 0)")
  (DeclStmt 0x9facbe0 <line:90:5, col:22>
    0x9facb90 "int do_indent =
      (IntegerLiteral 0x9facbc8 <col:21> 'int' 1)")
  (DeclStmt 0x9facc50 <line:91:5, col:22>
    0x9facc00 "int prev_type =
      (IntegerLiteral 0x9facc38 <col:21> 'int' 0)")
  (DeclStmt 0x9faccc0 <line:92:5, col:27>
    0x9facc70 "int prev_prev_type =
      (IntegerLiteral 0x9facca8 <col:26> 'int' 0)")
  (DeclStmt 0x9facf60 <line:94:5, col:51>
    0x9facce0 "tokenizer_t tok =
      (CXXConstructExpr 0x9face90 <col:17, col:50> 'struct tokenizer_t''void (const wchar_t *, tok_flags_t)'
        (CXXMemberCallExpr 0x9facd50 <col:21, col:30> 'const wchar_t *'
          (MemberExpr 0x9facd2c <col:21, col:24> '<bound member function type>' .c_str 0x9d35400
            (DeclRefExpr 0x9facd14 <col:21> 'const wcstring':'const class std::basic_string<wchar_t>' lvalue ParmVar 0x9fac8b0 'in' 'const wcstring &')))
        (ImplicitCastExpr 0x9face80 <../codeBase/fish-shell-master/tokenizer.h:59:27> 'tok_flags_t':'unsigned int' <IntegralCast>
          (IntegerLiteral 0x9facd70 <col:27> 'int' 2)))")
  (ForStmt 0x9fb1228 <../codeBase/fish-shell-master/fish_indent.cpp:95:5, line:258:5>
    <<<NULL>>>
    <<<NULL>>>
    (ImplicitCastExpr 0x9fad038 <line:95:12, col:29> '_Bool' <IntegralToBoolean>
      (CallExpr 0x9fad018 <col:12, col:29> 'int'
        (ImplicitCastExpr 0x9fad008 <col:12> 'int (*)(struct tokenizer_t *)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9facfd4 <col:12> 'int (struct tokenizer_t *)' lvalue Function 0x9fa2fc0 'tok_has_next' 'int (struct tokenizer_t *)'))
        (UnaryOperator 0x9facfc0 <col:25, col:26> 'struct tokenizer_t *' prefix '&'
          (DeclRefExpr 0x9facfa4 <col:26> 'struct tokenizer_t' lvalue Var 0x9facce0 'tok' 'struct tokenizer_t'))))
    (CallExpr 0x9fad0f8 <col:32, col:45> 'void'
      (ImplicitCastExpr 0x9fad0e8 <col:32> 'void (*)(struct tokenizer_t *)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9fad0ac <col:32> 'void (struct tokenizer_t *)' lvalue Function 0x9fa2ba0 'tok_next' 'void (struct tokenizer_t *)'))
      (UnaryOperator 0x9fad098 <col:41, col:42> 'struct tokenizer_t *' prefix '&'
        (DeclRefExpr 0x9fad07c <col:42> 'struct tokenizer_t' lvalue Var 0x9facce0 'tok' 'struct tokenizer_t')))
    (CompoundStmt 0x9fb1200 <line:96:5, line:258:5>
      (DeclStmt 0x9fad268 <line:97:9, col:39>
        0x9fad130 "int type =
          (ImplicitCastExpr 0x9fad258 <col:20, col:38> 'int' <IntegralCast>
            (CallExpr 0x9fad238 <col:20, col:38> 'enum token_type':'enum token_type'
              (ImplicitCastExpr 0x9fad228 <col:20> 'enum token_type (*)(struct tokenizer_t *)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9fad1cc <col:20> 'enum token_type (struct tokenizer_t *)' lvalue Function 0x9fa2cc0 'tok_last_type' 'enum token_type (struct tokenizer_t *)'))
              (UnaryOperator 0x9fad1b8 <col:34, col:35> 'struct tokenizer_t *' prefix '&'
                (DeclRefExpr 0x9fad19c <col:35> 'struct tokenizer_t' lvalue Var 0x9facce0 'tok' 'struct tokenizer_t'))))")
      (DeclStmt 0x9fad398 <line:98:9, col:45>
        0x9fad290 "const wchar_t *last =
          (CallExpr 0x9fad378 <col:31, col:44> 'const wchar_t *'
            (ImplicitCastExpr 0x9fad368 <col:31> 'const wchar_t *(*)(struct tokenizer_t *)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9fad32c <col:31> 'const wchar_t *(struct tokenizer_t *)' lvalue Function 0x9fa2dc0 'tok_last' 'const wchar_t *(struct tokenizer_t *)'))
            (UnaryOperator 0x9fad318 <col:40, col:41> 'struct tokenizer_t *' prefix '&'
              (DeclRefExpr 0x9fad2fc <col:41> 'struct tokenizer_t' lvalue Var 0x9facce0 'tok' 'struct tokenizer_t')))")
      (SwitchStmt 0x9fad3d0 <line:100:9, line:253:9>
        <<<NULL>>>
        (ImplicitCastExpr 0x9fad3c0 <line:100:17> 'int' <LValueToRValue>
          (DeclRefExpr 0x9fad3a8 <col:17> 'int' lvalue Var 0x9fad130 'type' 'int'))
        (CompoundStmt 0x9fb1088 <line:101:9, line:253:9>
          (CaseStmt 0x9fad408 <line:102:13, line:150:13>
            (ImplicitCastExpr 0x9fb1140 <line:102:18> 'int' <IntegralCast>
              (DeclRefExpr 0x9fad3ec <col:18> 'enum token_type' EnumConstant 0x9fa1fc0 'TOK_STRING' 'enum token_type'))
            <<<NULL>>>
            (CompoundStmt 0x9fae900 <line:103:13, line:150:13>
              (IfStmt 0x9fae8d8 <line:104:17, line:147:17>
                <<<NULL>>>
                (ImplicitCastExpr 0x9fad450 <line:104:21> '_Bool' <IntegralToBoolean>
                  (ImplicitCastExpr 0x9fad440 <col:21> 'int' <LValueToRValue>
                    (DeclRefExpr 0x9fad428 <col:21> 'int' lvalue Var 0x9facab0 'is_command' 'int')))
                (CompoundStmt 0x9fae618 <line:105:17, line:141:17>
                  (DeclStmt 0x9fad4d0 <line:106:21, col:45>
                    0x9fad470 "int next_indent =
                      (ImplicitCastExpr 0x9fad4c0 <col:39> 'int' <LValueToRValue>
                        (DeclRefExpr 0x9fad4a4 <col:39> 'int' lvalue Var 0x9facb20 'indent' 'int'))")
                  (BinaryOperator 0x9fad510 <line:107:21, col:34> 'int' lvalue '='
                    (DeclRefExpr 0x9fad4e0 <col:21> 'int' lvalue Var 0x9facab0 'is_command' 'int')
                    (IntegerLiteral 0x9fad4f8 <col:34> 'int' 0))
                  (DeclStmt 0x9fad6f0 <line:109:21, col:42>
                    0x9fad530 "wcstring unesc =
                      (ExprWithCleanups 0x9fad6d0 <col:30, col:38> 'wcstring':'class std::basic_string<wchar_t>'
                        (CXXTemporary 0x9fad5c0)
                        (CXXTemporary 0x9fad660)
                        (CXXConstructExpr 0x9fad6a8 <col:30, col:38> 'wcstring':'class std::basic_string<wchar_t>''void (const class std::basic_string<wchar_t> &)' elidable
                          (MaterializeTemporaryExpr 0x9fad698 <col:38> 'const class std::basic_string<wchar_t>' lvalue
                            (ImplicitCastExpr 0x9fad688 <col:38> 'const class std::basic_string<wchar_t>' <NoOp>
                              (ImplicitCastExpr 0x9fad678 <col:38> 'wcstring':'class std::basic_string<wchar_t>' <ConstructorConversion>
                                (CXXBindTemporaryExpr 0x9fad668 <col:38> 'wcstring':'class std::basic_string<wchar_t>' (CXXTemporary 0x9fad660)
                                  (CXXConstructExpr 0x9fad638 <col:38> 'wcstring':'class std::basic_string<wchar_t>''void (const wchar_t *, const class std::allocator<wchar_t> &)'
                                    (ImplicitCastExpr 0x9fad580 <col:38> 'const wchar_t *' <LValueToRValue>
                                      (DeclRefExpr 0x9fad564 <col:38> 'const wchar_t *' lvalue Var 0x9fad290 'last' 'const wchar_t *'))
                                    (CXXDefaultArgExpr 0x9fad620 <<invalid sloc>> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue))))))))")
                  (CallExpr 0x9fad7c8 <line:110:21, col:60> '_Bool'
                    (ImplicitCastExpr 0x9fad7b8 <col:21> '_Bool (*)(wcstring &, int)' <FunctionToPointerDecay>
                      (DeclRefExpr 0x9fad768 <col:21> '_Bool (wcstring &, int)' lvalue Function 0x9f83260 'unescape_string' '_Bool (wcstring &, int)'))
                    (DeclRefExpr 0x9fad734 <col:37> 'wcstring':'class std::basic_string<wchar_t>' lvalue Var 0x9fad530 'unesc' 'wcstring':'class std::basic_string<wchar_t>')
                    (IntegerLiteral 0x9fad750 <../codeBase/fish-shell-master/common.h:65:26> 'int' 1))
                  (IfStmt 0x9fae228 <../codeBase/fish-shell-master/fish_indent.cpp:112:21, line:129:21>
                    <<<NULL>>>
                    (CallExpr 0x9fad8a8 <line:112:25, col:55> '_Bool'
                      (ImplicitCastExpr 0x9fad898 <col:25> '_Bool (*)(const wcstring &)' <FunctionToPointerDecay>
                        (DeclRefExpr 0x9fad83c <col:25> '_Bool (const wcstring &)' lvalue Function 0x9fab9f0 'parser_keywords_is_block' '_Bool (const wcstring &)'))
                      (ImplicitCastExpr 0x9fad8c8 <col:50> 'const wcstring':'const class std::basic_string<wchar_t>' lvalue <NoOp>
                        (DeclRefExpr 0x9fad824 <col:50> 'wcstring':'class std::basic_string<wchar_t>' lvalue Var 0x9fad530 'unesc' 'wcstring':'class std::basic_string<wchar_t>')))
                    (CompoundStmt 0x9fad908 <line:113:21, line:115:21>
                      (UnaryOperator 0x9fad8f0 <line:114:25, col:36> 'int' postfix '++'
                        (DeclRefExpr 0x9fad8d4 <col:25> 'int' lvalue Var 0x9fad470 'next_indent' 'int')))
                    (IfStmt 0x9fae208 <line:116:26, line:129:21>
                      <<<NULL>>>
                      (CXXOperatorCallExpr 0x9fade28 <line:116:30, col:39> '_Bool'
                        (ImplicitCastExpr 0x9fade18 <col:36, <invalid sloc>> '_Bool (*)(const basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> > &, const wchar_t *)' <FunctionToPointerDecay>
                          (DeclRefExpr 0x9faddc8 <col:36, <invalid sloc>> '_Bool (const basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> > &, const wchar_t *)' lvalue Function 0x9fadc70 'operator==' '_Bool (const basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> > &, const wchar_t *)'))
                        (ImplicitCastExpr 0x9fadda8 <col:30> 'const basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >':'const class std::basic_string<wchar_t>' lvalue <NoOp>
                          (DeclRefExpr 0x9fad91c <col:30> 'wcstring':'class std::basic_string<wchar_t>' lvalue Var 0x9fad530 'unesc' 'wcstring':'class std::basic_string<wchar_t>'))
                        (ImplicitCastExpr 0x9faddb8 <col:39> 'const wchar_t *' <ArrayToPointerDecay>
                          (StringLiteral 0x9fad980 <col:39> 'const wchar_t [5]' lvalue L"e\000\000\000l\000\000\000s\000\000\000e\000\000\000")))
                      (CompoundStmt 0x9fade80 <line:117:21, line:119:21>
                        (UnaryOperator 0x9fade68 <line:118:25, col:31> 'int' postfix '--'
                          (DeclRefExpr 0x9fade4c <col:25> 'int' lvalue Var 0x9facb20 'indent' 'int')))
                      (IfStmt 0x9fae1e8 <line:121:26, line:129:21>
                        <<<NULL>>>
                        (CXXOperatorCallExpr 0x9fadf88 <line:121:30, col:39> '_Bool'
                          (ImplicitCastExpr 0x9fadf78 <col:36, <invalid sloc>> '_Bool (*)(const basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> > &, const wchar_t *)' <FunctionToPointerDecay>
                            (DeclRefExpr 0x9fadf60 <col:36, <invalid sloc>> '_Bool (const basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> > &, const wchar_t *)' lvalue Function 0x9fadc70 'operator==' '_Bool (const basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> > &, const wchar_t *)'))
                          (ImplicitCastExpr 0x9fadf40 <col:30> 'const basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >':'const class std::basic_string<wchar_t>' lvalue <NoOp>
                            (DeclRefExpr 0x9fade94 <col:30> 'wcstring':'class std::basic_string<wchar_t>' lvalue Var 0x9fad530 'unesc' 'wcstring':'class std::basic_string<wchar_t>'))
                          (ImplicitCastExpr 0x9fadf50 <col:39> 'const wchar_t *' <ArrayToPointerDecay>
                            (StringLiteral 0x9fadeac <col:39> 'const wchar_t [5]' lvalue L"c\000\000\000a\000\000\000s\000\000\000e\000\000\000")))
                        (CompoundStmt 0x9fadfe0 <line:122:21, line:124:21>
                          (UnaryOperator 0x9fadfc8 <line:123:25, col:31> 'int' postfix '--'
                            (DeclRefExpr 0x9fadfac <col:25> 'int' lvalue Var 0x9facb20 'indent' 'int')))
                        (IfStmt 0x9fae1c8 <line:125:26, line:129:21>
                          <<<NULL>>>
                          (CXXOperatorCallExpr 0x9fae128 <line:125:30, col:39> '_Bool'
                            (ImplicitCastExpr 0x9fae118 <col:36, <invalid sloc>> '_Bool (*)(const basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> > &, const wchar_t *)' <FunctionToPointerDecay>
                              (DeclRefExpr 0x9fae100 <col:36, <invalid sloc>> '_Bool (const basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> > &, const wchar_t *)' lvalue Function 0x9fadc70 'operator==' '_Bool (const basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> > &, const wchar_t *)'))
                            (ImplicitCastExpr 0x9fae0e0 <col:30> 'const basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >':'const class std::basic_string<wchar_t>' lvalue <NoOp>
                              (DeclRefExpr 0x9fadff4 <col:30> 'wcstring':'class std::basic_string<wchar_t>' lvalue Var 0x9fad530 'unesc' 'wcstring':'class std::basic_string<wchar_t>'))
                            (ImplicitCastExpr 0x9fae0f0 <col:39> 'const wchar_t *' <ArrayToPointerDecay>
                              (StringLiteral 0x9fae050 <col:39> 'const wchar_t [4]' lvalue L"e\000\000\000n\000\000\000d\000\000\000")))
                          (CompoundStmt 0x9fae1b0 <line:126:21, line:129:21>
                            (UnaryOperator 0x9fae168 <line:127:25, col:31> 'int' postfix '--'
                              (DeclRefExpr 0x9fae14c <col:25> 'int' lvalue Var 0x9facb20 'indent' 'int'))
                            (UnaryOperator 0x9fae198 <line:128:25, col:36> 'int' postfix '--'
                              (DeclRefExpr 0x9fae17c <col:25> 'int' lvalue Var 0x9fad470 'next_indent' 'int')))
                          <<<NULL>>>))))
                  (IfStmt 0x9fae468 <line:132:21, line:135:21>
                    <<<NULL>>>
                    (BinaryOperator 0x9fae338 <line:132:25, col:60> '_Bool' '&&'
                      (BinaryOperator 0x9fae2b8 <col:25, col:38> '_Bool' '&&'
                        (ImplicitCastExpr 0x9fae288 <col:25> '_Bool' <IntegralToBoolean>
                          (ImplicitCastExpr 0x9fae278 <col:25> 'int' <LValueToRValue>
                            (DeclRefExpr 0x9fae244 <col:25> 'int' lvalue Var 0x9facb90 'do_indent' 'int')))
                        (ImplicitCastExpr 0x9fae2a8 <col:38> '_Bool' <IntegralToBoolean>
                          (ImplicitCastExpr 0x9fae298 <col:38> 'int' <LValueToRValue>
                            (DeclRefExpr 0x9fae25c <col:38> 'int' lvalue ParmVar 0x9fac900 'flags' 'int'))))
                      (BinaryOperator 0x9fae320 <col:47, col:60> '_Bool' '!='
                        (ImplicitCastExpr 0x9fae300 <col:47> 'int' <LValueToRValue>
                          (DeclRefExpr 0x9fae2d0 <col:47> 'int' lvalue Var 0x9facc00 'prev_type' 'int'))
                        (ImplicitCastExpr 0x9fae310 <col:60> 'int' <IntegralCast>
                          (DeclRefExpr 0x9fae2e8 <col:60> 'enum token_type' EnumConstant 0x9fa2000 'TOK_PIPE' 'enum token_type'))))
                    (CompoundStmt 0x9fae450 <line:133:21, line:135:21>
                      (CallExpr 0x9fae418 <line:134:25, col:48> 'void'
                        (ImplicitCastExpr 0x9fae408 <col:25> 'void (*)(wcstring &, int)' <FunctionToPointerDecay>
                          (DeclRefExpr 0x9fae3b4 <col:25> 'void (wcstring &, int)' lvalue Function 0x9fac5f0 'insert_tabs' 'void (wcstring &, int)'))
                        (DeclRefExpr 0x9fae384 <col:37> 'wcstring':'class std::basic_string<wchar_t>' lvalue ParmVar 0x9fac860 'out' 'wcstring &')
                        (ImplicitCastExpr 0x9fae440 <col:42> 'int' <LValueToRValue>
                          (DeclRefExpr 0x9fae39c <col:42> 'int' lvalue Var 0x9facb20 'indent' 'int'))))
                    <<<NULL>>>)
                  (CallExpr 0x9fae578 <line:137:21, col:52> 'void'
                    (ImplicitCastExpr 0x9fae568 <col:21> 'void (*)(wcstring &, const wchar_t *, ...)' <FunctionToPointerDecay>
                      (DeclRefExpr 0x9fae514 <col:21> 'void (wcstring &, const wchar_t *, ...)' lvalue Function 0x9f7b370 'append_format' 'void (wcstring &, const wchar_t *, ...)'))
                    (DeclRefExpr 0x9fae4bc <col:35> 'wcstring':'class std::basic_string<wchar_t>' lvalue ParmVar 0x9fac860 'out' 'wcstring &')
                    (ImplicitCastExpr 0x9fae5a0 <col:40> 'const wchar_t *' <ArrayToPointerDecay>
                      (StringLiteral 0x9fae4d4 <col:40> 'const wchar_t [4]' lvalue L"%\000\000\000l\000\000\000s\000\000\000"))
                    (ImplicitCastExpr 0x9fae5b0 <col:48> 'const wchar_t *' <LValueToRValue>
                      (DeclRefExpr 0x9fae4fc <col:48> 'const wchar_t *' lvalue Var 0x9fad290 'last' 'const wchar_t *')))
                  (BinaryOperator 0x9fae600 <line:139:21, col:30> 'int' lvalue '='
                    (DeclRefExpr 0x9fae5bc <col:21> 'int' lvalue Var 0x9facb20 'indent' 'int')
                    (ImplicitCastExpr 0x9fae5f0 <col:30> 'int' <LValueToRValue>
                      (DeclRefExpr 0x9fae5d4 <col:30> 'int' lvalue Var 0x9fad470 'next_indent' 'int'))))
                (CompoundStmt 0x9fae8c0 <line:143:17, line:147:17>
                  (IfStmt 0x9fae7d0 <line:144:21, line:145:40>
                    <<<NULL>>>
                    (BinaryOperator 0x9fae698 <line:144:25, col:38> '_Bool' '!='
                      (ImplicitCastExpr 0x9fae678 <col:25> 'int' <LValueToRValue>
                        (DeclRefExpr 0x9fae648 <col:25> 'int' lvalue Var 0x9facc00 'prev_type' 'int'))
                      (ImplicitCastExpr 0x9fae688 <col:38> 'int' <IntegralCast>
                        (DeclRefExpr 0x9fae660 <col:38> 'enum token_type' EnumConstant 0x9fa2140 'TOK_REDIRECT_FD' 'enum token_type')))
                    (CXXMemberCallExpr 0x9fae7a0 <line:145:25, col:40> 'class std::basic_string<wchar_t>' lvalue
                      (MemberExpr 0x9fae780 <col:25, col:29> '<bound member function type>' .append 0x9d27900
                        (DeclRefExpr 0x9fae6b0 <col:25> 'wcstring':'class std::basic_string<wchar_t>' lvalue ParmVar 0x9fac860 'out' 'wcstring &'))
                      (ImplicitCastExpr 0x9fae7c0 <col:36> 'const wchar_t *' <ArrayToPointerDecay>
                        (StringLiteral 0x9fae760 <col:36> 'const wchar_t [2]' lvalue L" \000\000\000")))
                    <<<NULL>>>)
                  (CXXMemberCallExpr 0x9fae890 <line:146:21, col:36> 'class std::basic_string<wchar_t>' lvalue
                    (MemberExpr 0x9fae86c <col:21, col:25> '<bound member function type>' .append 0x9d27900
                      (DeclRefExpr 0x9fae7ec <col:21> 'wcstring':'class std::basic_string<wchar_t>' lvalue ParmVar 0x9fac860 'out' 'wcstring &'))
                    (ImplicitCastExpr 0x9fae8b0 <col:32> 'const wchar_t *' <LValueToRValue>
                      (DeclRefExpr 0x9fae854 <col:32> 'const wchar_t *' lvalue Var 0x9fad290 'last' 'const wchar_t *')))))
              (BreakStmt 0x9fae8f8 <line:149:17>)))
          (CaseStmt 0x9fae930 <line:152:13, line:159:13>
            (ImplicitCastExpr 0x9fb1130 <line:152:18> 'int' <IntegralCast>
              (DeclRefExpr 0x9fae918 <col:18> 'enum token_type' EnumConstant 0x9fa2040 'TOK_END' 'enum token_type'))
            <<<NULL>>>
            (CompoundStmt 0x9faebc8 <line:153:13, line:159:13>
              (IfStmt 0x9faeb10 <line:154:17, line:155:37>
                <<<NULL>>>
                (BinaryOperator 0x9faea20 <line:154:21, col:63> '_Bool' '||'
                  (BinaryOperator 0x9fae9a0 <col:21, col:34> '_Bool' '!='
                    (ImplicitCastExpr 0x9fae980 <col:21> 'int' <LValueToRValue>
                      (DeclRefExpr 0x9fae950 <col:21> 'int' lvalue Var 0x9facc00 'prev_type' 'int'))
                    (ImplicitCastExpr 0x9fae990 <col:34> 'int' <IntegralCast>
                      (DeclRefExpr 0x9fae968 <col:34> 'enum token_type' EnumConstant 0x9fa2040 'TOK_END' 'enum token_type')))
                  (BinaryOperator 0x9faea08 <col:45, col:63> '_Bool' '!='
                    (ImplicitCastExpr 0x9fae9e8 <col:45> 'int' <LValueToRValue>
                      (DeclRefExpr 0x9fae9b8 <col:45> 'int' lvalue Var 0x9facc70 'prev_prev_type' 'int'))
                    (ImplicitCastExpr 0x9fae9f8 <col:63> 'int' <IntegralCast>
                      (DeclRefExpr 0x9fae9d0 <col:63> 'enum token_type' EnumConstant 0x9fa2040 'TOK_END' 'enum token_type'))))
                (CXXMemberCallExpr 0x9faeae0 <line:155:21, col:37> 'class std::basic_string<wchar_t>' lvalue
                  (MemberExpr 0x9faeac0 <col:21, col:25> '<bound member function type>' .append 0x9d27900
                    (DeclRefExpr 0x9faea38 <col:21> 'wcstring':'class std::basic_string<wchar_t>' lvalue ParmVar 0x9fac860 'out' 'wcstring &'))
                  (ImplicitCastExpr 0x9faeb00 <col:32> 'const wchar_t *' <ArrayToPointerDecay>
                    (StringLiteral 0x9faeaa0 <col:32> 'const wchar_t [2]' lvalue L"\n\000\000\000")))
                <<<NULL>>>)
              (BinaryOperator 0x9faeb60 <line:156:17, col:29> 'int' lvalue '='
                (DeclRefExpr 0x9faeb2c <col:17> 'int' lvalue Var 0x9facb90 'do_indent' 'int')
                (IntegerLiteral 0x9faeb48 <col:29> 'int' 1))
              (BinaryOperator 0x9faeba8 <line:157:17, col:30> 'int' lvalue '='
                (DeclRefExpr 0x9faeb78 <col:17> 'int' lvalue Var 0x9facab0 'is_command' 'int')
                (IntegerLiteral 0x9faeb90 <col:30> 'int' 1))
              (BreakStmt 0x9faebc0 <line:158:17>)))
          (CaseStmt 0x9faec00 <line:161:13, line:176:13>
            (ImplicitCastExpr 0x9fb1120 <line:161:18> 'int' <IntegralCast>
              (DeclRefExpr 0x9faebe8 <col:18> 'enum token_type' EnumConstant 0x9fa2000 'TOK_PIPE' 'enum token_type'))
            <<<NULL>>>
            (CompoundStmt 0x9faf3a0 <line:162:13, line:176:13>
              (CXXMemberCallExpr 0x9faecc8 <line:163:17, col:32> 'class std::basic_string<wchar_t>' lvalue
                (MemberExpr 0x9faeca8 <col:17, col:21> '<bound member function type>' .append 0x9d27900
                  (DeclRefExpr 0x9faec20 <col:17> 'wcstring':'class std::basic_string<wchar_t>' lvalue ParmVar 0x9fac860 'out' 'wcstring &'))
                (ImplicitCastExpr 0x9faece8 <col:28> 'const wchar_t *' <ArrayToPointerDecay>
                  (StringLiteral 0x9faec88 <col:28> 'const wchar_t [2]' lvalue L" \000\000\000")))
              (IfStmt 0x9faf250 <line:164:17, line:172:17>
                <<<NULL>>>
                (BinaryOperator 0x9faee30 <line:164:21, col:46> '_Bool' '&&'
                  (BinaryOperator 0x9faed88 <col:21, col:32> '_Bool' '=='
                    (ImplicitCastExpr 0x9faed68 <col:21, col:27> 'wchar_t' <LValueToRValue>
                      (ArraySubscriptExpr 0x9faed38 <col:21, col:27> 'const wchar_t' lvalue
                        (ImplicitCastExpr 0x9faed28 <col:21> 'const wchar_t *' <LValueToRValue>
                          (DeclRefExpr 0x9faecf4 <col:21> 'const wchar_t *' lvalue Var 0x9fad290 'last' 'const wchar_t *'))
                        (IntegerLiteral 0x9faed10 <col:26> 'int' 0)))
                    (ImplicitCastExpr 0x9faed78 <col:32> 'wchar_t' <IntegralCast>
                      (CharacterLiteral 0x9faed50 <col:32> 'char'50)))
                  (UnaryOperator 0x9faee18 <col:39, col:46> '_Bool' prefix '!'
                    (ImplicitCastExpr 0x9faee08 <col:40, col:46> '_Bool' <IntegralToBoolean>
                      (ImplicitCastExpr 0x9faedf8 <col:40, col:46> 'wchar_t' <LValueToRValue>
                        (ArraySubscriptExpr 0x9faede0 <col:40, col:46> 'const wchar_t' lvalue
                          (ImplicitCastExpr 0x9faedd0 <col:40> 'const wchar_t *' <LValueToRValue>
                            (DeclRefExpr 0x9faeda0 <col:40> 'const wchar_t *' lvalue Var 0x9fad290 'last' 'const wchar_t *'))
                          (IntegerLiteral 0x9faedb8 <col:45> 'int' 1))))))
                (CompoundStmt 0x9faef20 <line:165:17, line:167:17>
                  (CXXMemberCallExpr 0x9faeef0 <line:166:21, col:36> 'class std::basic_string<wchar_t>' lvalue
                    (MemberExpr 0x9faeed0 <col:21, col:25> '<bound member function type>' .append 0x9d27900
                      (DeclRefExpr 0x9faee48 <col:21> 'wcstring':'class std::basic_string<wchar_t>' lvalue ParmVar 0x9fac860 'out' 'wcstring &'))
                    (ImplicitCastExpr 0x9faef10 <col:32> 'const wchar_t *' <ArrayToPointerDecay>
                      (StringLiteral 0x9faeeb0 <col:32> 'const wchar_t [2]' lvalue L"^\000\000\000"))))
                (IfStmt 0x9faf230 <line:168:22, line:172:17>
                  <<<NULL>>>
                  (BinaryOperator 0x9faf058 <line:168:26, col:50> '_Bool' '||'
                    (BinaryOperator 0x9faefc8 <col:26, col:37> '_Bool' '!='
                      (ImplicitCastExpr 0x9faefa8 <col:26, col:32> 'wchar_t' <LValueToRValue>
                        (ArraySubscriptExpr 0x9faef78 <col:26, col:32> 'const wchar_t' lvalue
                          (ImplicitCastExpr 0x9faef68 <col:26> 'const wchar_t *' <LValueToRValue>
                            (DeclRefExpr 0x9faef34 <col:26> 'const wchar_t *' lvalue Var 0x9fad290 'last' 'const wchar_t *'))
                          (IntegerLiteral 0x9faef50 <col:31> 'int' 0)))
                      (ImplicitCastExpr 0x9faefb8 <col:37> 'wchar_t' <IntegralCast>
                        (CharacterLiteral 0x9faef90 <col:37> 'char'49)))
                    (ImplicitCastExpr 0x9faf048 <col:44, col:50> '_Bool' <IntegralToBoolean>
                      (ImplicitCastExpr 0x9faf038 <col:44, col:50> 'wchar_t' <LValueToRValue>
                        (ArraySubscriptExpr 0x9faf020 <col:44, col:50> 'const wchar_t' lvalue
                          (ImplicitCastExpr 0x9faf010 <col:44> 'const wchar_t *' <LValueToRValue>
                            (DeclRefExpr 0x9faefe0 <col:44> 'const wchar_t *' lvalue Var 0x9fad290 'last' 'const wchar_t *'))
                          (IntegerLiteral 0x9faeff8 <col:49> 'int' 1)))))
                  (CompoundStmt 0x9faf218 <line:169:17, line:172:17>
                    (CXXMemberCallExpr 0x9faf110 <line:170:21, col:36> 'class std::basic_string<wchar_t>' lvalue
                      (MemberExpr 0x9faf0f0 <col:21, col:25> '<bound member function type>' .append 0x9d27900
                        (DeclRefExpr 0x9faf070 <col:21> 'wcstring':'class std::basic_string<wchar_t>' lvalue ParmVar 0x9fac860 'out' 'wcstring &'))
                      (ImplicitCastExpr 0x9faf130 <col:32> 'const wchar_t *' <LValueToRValue>
                        (DeclRefExpr 0x9faf0d8 <col:32> 'const wchar_t *' lvalue Var 0x9fad290 'last' 'const wchar_t *')))
                    (CXXMemberCallExpr 0x9faf1e8 <line:171:21, col:36> 'class std::basic_string<wchar_t>' lvalue
                      (MemberExpr 0x9faf1c4 <col:21, col:25> '<bound member function type>' .append 0x9d27900
                        (DeclRefExpr 0x9faf13c <col:21> 'wcstring':'class std::basic_string<wchar_t>' lvalue ParmVar 0x9fac860 'out' 'wcstring &'))
                      (ImplicitCastExpr 0x9faf208 <col:32> 'const wchar_t *' <ArrayToPointerDecay>
                        (StringLiteral 0x9faf1a4 <col:32> 'const wchar_t [2]' lvalue L">\000\000\000"))))
                  <<<NULL>>>))
              (CXXMemberCallExpr 0x9faf320 <line:173:17, col:34> 'class std::basic_string<wchar_t>' lvalue
                (MemberExpr 0x9faf2fc <col:17, col:21> '<bound member function type>' .append 0x9d27900
                  (DeclRefExpr 0x9faf26c <col:17> 'wcstring':'class std::basic_string<wchar_t>' lvalue ParmVar 0x9fac860 'out' 'wcstring &'))
                (ImplicitCastExpr 0x9faf340 <col:28> 'const wchar_t *' <ArrayToPointerDecay>
                  (StringLiteral 0x9faf2d4 <col:28> 'const wchar_t [4]' lvalue L" \000\000\000|\000\000\000 \000\000\000")))
              (BinaryOperator 0x9faf380 <line:174:17, col:30> 'int' lvalue '='
                (DeclRefExpr 0x9faf34c <col:17> 'int' lvalue Var 0x9facab0 'is_command' 'int')
                (IntegerLiteral 0x9faf368 <col:30> 'int' 1))
              (BreakStmt 0x9faf398 <line:175:17>)))
          (CaseStmt 0x9faf3e0 <line:178:13, line:192:13>
            (ImplicitCastExpr 0x9fb1110 <line:178:18> 'int' <IntegralCast>
              (DeclRefExpr 0x9faf3c4 <col:18> 'enum token_type' EnumConstant 0x9fa2080 'TOK_REDIRECT_OUT' 'enum token_type'))
            <<<NULL>>>
            (CompoundStmt 0x9fafa78 <line:179:13, line:192:13>
              (CXXMemberCallExpr 0x9faf4a8 <line:180:17, col:32> 'class std::basic_string<wchar_t>' lvalue
                (MemberExpr 0x9faf488 <col:17, col:21> '<bound member function type>' .append 0x9d27900
                  (DeclRefExpr 0x9faf400 <col:17> 'wcstring':'class std::basic_string<wchar_t>' lvalue ParmVar 0x9fac860 'out' 'wcstring &'))
                (ImplicitCastExpr 0x9faf4c8 <col:28> 'const wchar_t *' <ArrayToPointerDecay>
                  (StringLiteral 0x9faf468 <col:28> 'const wchar_t [2]' lvalue L" \000\000\000")))
              (IfStmt 0x9fafa50 <line:181:17, line:190:17>
                <<<NULL>>>
                (BinaryOperator 0x9faf608 <line:181:21, col:43> '_Bool' '=='
                  (CallExpr 0x9faf5a8 <col:21, col:38> 'int'
                    (ImplicitCastExpr 0x9faf598 <col:21> 'int (*)(const wchar_t *, const wchar_t *) throw()' <FunctionToPointerDecay>
                      (DeclRefExpr 0x9faf544 <col:21> 'int (const wchar_t *, const wchar_t *) throw()' lvalue Function 0x9a39210 'wcscmp' 'int (const wchar_t *, const wchar_t *) throw()'))
                    (ImplicitCastExpr 0x9faf5d0 <col:28> 'const wchar_t *' <LValueToRValue>
                      (DeclRefExpr 0x9faf50c <col:28> 'const wchar_t *' lvalue Var 0x9fad290 'last' 'const wchar_t *'))
                    (ImplicitCastExpr 0x9faf5e0 <col:34> 'const wchar_t *' <ArrayToPointerDecay>
                      (StringLiteral 0x9faf524 <col:34> 'const wchar_t [2]' lvalue L"2\000\000\000")))
                  (IntegerLiteral 0x9faf5f0 <col:43> 'int' 0))
                (CompoundStmt 0x9faf6f8 <line:182:17, line:184:17>
                  (CXXMemberCallExpr 0x9faf6c8 <line:183:21, col:36> 'class std::basic_string<wchar_t>' lvalue
                    (MemberExpr 0x9faf6a8 <col:21, col:25> '<bound member function type>' .append 0x9d27900
                      (DeclRefExpr 0x9faf620 <col:21> 'wcstring':'class std::basic_string<wchar_t>' lvalue ParmVar 0x9fac860 'out' 'wcstring &'))
                    (ImplicitCastExpr 0x9faf6e8 <col:32> 'const wchar_t *' <ArrayToPointerDecay>
                      (StringLiteral 0x9faf688 <col:32> 'const wchar_t [2]' lvalue L"^\000\000\000"))))
                (CompoundStmt 0x9fafa38 <line:186:17, line:190:17>
                  (IfStmt 0x9faf8f0 <line:187:21, line:188:40>
                    <<<NULL>>>
                    (BinaryOperator 0x9faf808 <line:187:25, col:47> '_Bool' '!='
                      (CallExpr 0x9faf7a8 <col:25, col:42> 'int'
                        (ImplicitCastExpr 0x9faf798 <col:25> 'int (*)(const wchar_t *, const wchar_t *) throw()' <FunctionToPointerDecay>
                          (DeclRefExpr 0x9faf77c <col:25> 'int (const wchar_t *, const wchar_t *) throw()' lvalue Function 0x9a39210 'wcscmp' 'int (const wchar_t *, const wchar_t *) throw()'))
                        (ImplicitCastExpr 0x9faf7d0 <col:32> 'const wchar_t *' <LValueToRValue>
                          (DeclRefExpr 0x9faf744 <col:32> 'const wchar_t *' lvalue Var 0x9fad290 'last' 'const wchar_t *'))
                        (ImplicitCastExpr 0x9faf7e0 <col:38> 'const wchar_t *' <ArrayToPointerDecay>
                          (StringLiteral 0x9faf75c <col:38> 'const wchar_t [2]' lvalue L"1\000\000\000")))
                      (IntegerLiteral 0x9faf7f0 <col:47> 'int' 0))
                    (CXXMemberCallExpr 0x9faf8c0 <line:188:25, col:40> 'class std::basic_string<wchar_t>' lvalue
                      (MemberExpr 0x9faf8a0 <col:25, col:29> '<bound member function type>' .append 0x9d27900
                        (DeclRefExpr 0x9faf820 <col:25> 'wcstring':'class std::basic_string<wchar_t>' lvalue ParmVar 0x9fac860 'out' 'wcstring &'))
                      (ImplicitCastExpr 0x9faf8e0 <col:36> 'const wchar_t *' <LValueToRValue>
                        (DeclRefExpr 0x9faf888 <col:36> 'const wchar_t *' lvalue Var 0x9fad290 'last' 'const wchar_t *')))
                    <<<NULL>>>)
                  (CXXMemberCallExpr 0x9fafa08 <line:189:21, col:37> 'class std::basic_string<wchar_t>' lvalue
                    (MemberExpr 0x9faf9e4 <col:21, col:25> '<bound member function type>' .append 0x9d27900
                      (DeclRefExpr 0x9faf90c <col:21> 'wcstring':'class std::basic_string<wchar_t>' lvalue ParmVar 0x9fac860 'out' 'wcstring &'))
                    (ImplicitCastExpr 0x9fafa28 <col:32> 'const wchar_t *' <ArrayToPointerDecay>
                      (StringLiteral 0x9faf9c0 <col:32> 'const wchar_t [3]' lvalue L">\000\000\000 \000\000\000")))))
              (BreakStmt 0x9fafa70 <line:191:17>)))
          (CaseStmt 0x9fafab0 <line:194:13, line:208:13>
            (ImplicitCastExpr 0x9fb1100 <line:194:18> 'int' <IntegralCast>
              (DeclRefExpr 0x9fafa94 <col:18> 'enum token_type' EnumConstant 0x9fa20c0 'TOK_REDIRECT_APPEND' 'enum token_type'))
            <<<NULL>>>
            (CompoundStmt 0x9fb00d0 <line:195:13, line:208:13>
              (CXXMemberCallExpr 0x9fafb78 <line:196:17, col:32> 'class std::basic_string<wchar_t>' lvalue
                (MemberExpr 0x9fafb58 <col:17, col:21> '<bound member function type>' .append 0x9d27900
                  (DeclRefExpr 0x9fafad0 <col:17> 'wcstring':'class std::basic_string<wchar_t>' lvalue ParmVar 0x9fac860 'out' 'wcstring &'))
                (ImplicitCastExpr 0x9fafb98 <col:28> 'const wchar_t *' <ArrayToPointerDecay>
                  (StringLiteral 0x9fafb38 <col:28> 'const wchar_t [2]' lvalue L" \000\000\000")))
              (IfStmt 0x9fb00a8 <line:197:17, line:206:17>
                <<<NULL>>>
                (BinaryOperator 0x9fafca0 <line:197:21, col:43> '_Bool' '=='
                  (CallExpr 0x9fafc40 <col:21, col:38> 'int'
                    (ImplicitCastExpr 0x9fafc30 <col:21> 'int (*)(const wchar_t *, const wchar_t *) throw()' <FunctionToPointerDecay>
                      (DeclRefExpr 0x9fafc14 <col:21> 'int (const wchar_t *, const wchar_t *) throw()' lvalue Function 0x9a39210 'wcscmp' 'int (const wchar_t *, const wchar_t *) throw()'))
                    (ImplicitCastExpr 0x9fafc68 <col:28> 'const wchar_t *' <LValueToRValue>
                      (DeclRefExpr 0x9fafbdc <col:28> 'const wchar_t *' lvalue Var 0x9fad290 'last' 'const wchar_t *'))
                    (ImplicitCastExpr 0x9fafc78 <col:34> 'const wchar_t *' <ArrayToPointerDecay>
                      (StringLiteral 0x9fafbf4 <col:34> 'const wchar_t [2]' lvalue L"2\000\000\000")))
                  (IntegerLiteral 0x9fafc88 <col:43> 'int' 0))
                (CompoundStmt 0x9fafd98 <line:198:17, line:200:17>
                  (CXXMemberCallExpr 0x9fafd68 <line:199:21, col:37> 'class std::basic_string<wchar_t>' lvalue
                    (MemberExpr 0x9fafd44 <col:21, col:25> '<bound member function type>' .append 0x9d27900
                      (DeclRefExpr 0x9fafcb8 <col:21> 'wcstring':'class std::basic_string<wchar_t>' lvalue ParmVar 0x9fac860 'out' 'wcstring &'))
                    (ImplicitCastExpr 0x9fafd88 <col:32> 'const wchar_t *' <ArrayToPointerDecay>
                      (StringLiteral 0x9fafd20 <col:32> 'const wchar_t [3]' lvalue L"^\000\000\000^\000\000\000"))))
                (CompoundStmt 0x9fb0090 <line:202:17, line:206:17>
                  (IfStmt 0x9faff90 <line:203:21, line:204:40>
                    <<<NULL>>>
                    (BinaryOperator 0x9fafea8 <line:203:25, col:47> '_Bool' '!='
                      (CallExpr 0x9fafe48 <col:25, col:42> 'int'
                        (ImplicitCastExpr 0x9fafe38 <col:25> 'int (*)(const wchar_t *, const wchar_t *) throw()' <FunctionToPointerDecay>
                          (DeclRefExpr 0x9fafe1c <col:25> 'int (const wchar_t *, const wchar_t *) throw()' lvalue Function 0x9a39210 'wcscmp' 'int (const wchar_t *, const wchar_t *) throw()'))
                        (ImplicitCastExpr 0x9fafe70 <col:32> 'const wchar_t *' <LValueToRValue>
                          (DeclRefExpr 0x9fafde4 <col:32> 'const wchar_t *' lvalue Var 0x9fad290 'last' 'const wchar_t *'))
                        (ImplicitCastExpr 0x9fafe80 <col:38> 'const wchar_t *' <ArrayToPointerDecay>
                          (StringLiteral 0x9fafdfc <col:38> 'const wchar_t [2]' lvalue L"1\000\000\000")))
                      (IntegerLiteral 0x9fafe90 <col:47> 'int' 0))
                    (CXXMemberCallExpr 0x9faff60 <line:204:25, col:40> 'class std::basic_string<wchar_t>' lvalue
                      (MemberExpr 0x9faff40 <col:25, col:29> '<bound member function type>' .append 0x9d27900
                        (DeclRefExpr 0x9fafec0 <col:25> 'wcstring':'class std::basic_string<wchar_t>' lvalue ParmVar 0x9fac860 'out' 'wcstring &'))
                      (ImplicitCastExpr 0x9faff80 <col:36> 'const wchar_t *' <LValueToRValue>
                        (DeclRefExpr 0x9faff28 <col:36> 'const wchar_t *' lvalue Var 0x9fad290 'last' 'const wchar_t *')))
                    <<<NULL>>>)
                  (CXXMemberCallExpr 0x9fb0060 <line:205:21, col:38> 'class std::basic_string<wchar_t>' lvalue
                    (MemberExpr 0x9fb003c <col:21, col:25> '<bound member function type>' .append 0x9d27900
                      (DeclRefExpr 0x9faffac <col:21> 'wcstring':'class std::basic_string<wchar_t>' lvalue ParmVar 0x9fac860 'out' 'wcstring &'))
                    (ImplicitCastExpr 0x9fb0080 <col:32> 'const wchar_t *' <ArrayToPointerDecay>
                      (StringLiteral 0x9fb0014 <col:32> 'const wchar_t [4]' lvalue L">\000\000\000>\000\000\000 \000\000\000")))))
              (BreakStmt 0x9fb00c8 <line:207:17>)))
          (CaseStmt 0x9fb0108 <line:210:13, line:217:13>
            (ImplicitCastExpr 0x9fb10f0 <line:210:18> 'int' <IntegralCast>
              (DeclRefExpr 0x9fb00ec <col:18> 'enum token_type' EnumConstant 0x9fa2100 'TOK_REDIRECT_IN' 'enum token_type'))
            <<<NULL>>>
            (CompoundStmt 0x9fb04e0 <line:211:13, line:217:13>
              (CXXMemberCallExpr 0x9fb01d0 <line:212:17, col:32> 'class std::basic_string<wchar_t>' lvalue
                (MemberExpr 0x9fb01b0 <col:17, col:21> '<bound member function type>' .append 0x9d27900
                  (DeclRefExpr 0x9fb0128 <col:17> 'wcstring':'class std::basic_string<wchar_t>' lvalue ParmVar 0x9fac860 'out' 'wcstring &'))
                (ImplicitCastExpr 0x9fb01f0 <col:28> 'const wchar_t *' <ArrayToPointerDecay>
                  (StringLiteral 0x9fb0190 <col:28> 'const wchar_t [2]' lvalue L" \000\000\000")))
              (IfStmt 0x9fb03e0 <line:213:17, line:214:36>
                <<<NULL>>>
                (BinaryOperator 0x9fb02f8 <line:213:21, col:43> '_Bool' '!='
                  (CallExpr 0x9fb0298 <col:21, col:38> 'int'
                    (ImplicitCastExpr 0x9fb0288 <col:21> 'int (*)(const wchar_t *, const wchar_t *) throw()' <FunctionToPointerDecay>
                      (DeclRefExpr 0x9fb026c <col:21> 'int (const wchar_t *, const wchar_t *) throw()' lvalue Function 0x9a39210 'wcscmp' 'int (const wchar_t *, const wchar_t *) throw()'))
                    (ImplicitCastExpr 0x9fb02c0 <col:28> 'const wchar_t *' <LValueToRValue>
                      (DeclRefExpr 0x9fb0234 <col:28> 'const wchar_t *' lvalue Var 0x9fad290 'last' 'const wchar_t *'))
                    (ImplicitCastExpr 0x9fb02d0 <col:34> 'const wchar_t *' <ArrayToPointerDecay>
                      (StringLiteral 0x9fb024c <col:34> 'const wchar_t [2]' lvalue L"0\000\000\000")))
                  (IntegerLiteral 0x9fb02e0 <col:43> 'int' 0))
                (CXXMemberCallExpr 0x9fb03b0 <line:214:21, col:36> 'class std::basic_string<wchar_t>' lvalue
                  (MemberExpr 0x9fb0390 <col:21, col:25> '<bound member function type>' .append 0x9d27900
                    (DeclRefExpr 0x9fb0310 <col:21> 'wcstring':'class std::basic_string<wchar_t>' lvalue ParmVar 0x9fac860 'out' 'wcstring &'))
                  (ImplicitCastExpr 0x9fb03d0 <col:32> 'const wchar_t *' <LValueToRValue>
                    (DeclRefExpr 0x9fb0378 <col:32> 'const wchar_t *' lvalue Var 0x9fad290 'last' 'const wchar_t *')))
                <<<NULL>>>)
              (CXXMemberCallExpr 0x9fb04a8 <line:215:17, col:33> 'class std::basic_string<wchar_t>' lvalue
                (MemberExpr 0x9fb0488 <col:17, col:21> '<bound member function type>' .append 0x9d27900
                  (DeclRefExpr 0x9fb03fc <col:17> 'wcstring':'class std::basic_string<wchar_t>' lvalue ParmVar 0x9fac860 'out' 'wcstring &'))
                (ImplicitCastExpr 0x9fb04c8 <col:28> 'const wchar_t *' <ArrayToPointerDecay>
                  (StringLiteral 0x9fb0464 <col:28> 'const wchar_t [3]' lvalue L"<\000\000\000 \000\000\000")))
              (BreakStmt 0x9fb04d8 <line:216:17>)))
          (CaseStmt 0x9fb0518 <line:219:13, line:226:13>
            (ImplicitCastExpr 0x9fb10e0 <line:219:18> 'int' <IntegralCast>
              (DeclRefExpr 0x9fb0500 <col:18> 'enum token_type' EnumConstant 0x9fa2140 'TOK_REDIRECT_FD' 'enum token_type'))
            <<<NULL>>>
            (CompoundStmt 0x9fb08f8 <line:220:13, line:226:13>
              (CXXMemberCallExpr 0x9fb05e0 <line:221:17, col:32> 'class std::basic_string<wchar_t>' lvalue
                (MemberExpr 0x9fb05c0 <col:17, col:21> '<bound member function type>' .append 0x9d27900
                  (DeclRefExpr 0x9fb0538 <col:17> 'wcstring':'class std::basic_string<wchar_t>' lvalue ParmVar 0x9fac860 'out' 'wcstring &'))
                (ImplicitCastExpr 0x9fb0600 <col:28> 'const wchar_t *' <ArrayToPointerDecay>
                  (StringLiteral 0x9fb05a0 <col:28> 'const wchar_t [2]' lvalue L" \000\000\000")))
              (IfStmt 0x9fb07f0 <line:222:17, line:223:36>
                <<<NULL>>>
                (BinaryOperator 0x9fb0708 <line:222:21, col:43> '_Bool' '!='
                  (CallExpr 0x9fb06a8 <col:21, col:38> 'int'
                    (ImplicitCastExpr 0x9fb0698 <col:21> 'int (*)(const wchar_t *, const wchar_t *) throw()' <FunctionToPointerDecay>
                      (DeclRefExpr 0x9fb067c <col:21> 'int (const wchar_t *, const wchar_t *) throw()' lvalue Function 0x9a39210 'wcscmp' 'int (const wchar_t *, const wchar_t *) throw()'))
                    (ImplicitCastExpr 0x9fb06d0 <col:28> 'const wchar_t *' <LValueToRValue>
                      (DeclRefExpr 0x9fb0644 <col:28> 'const wchar_t *' lvalue Var 0x9fad290 'last' 'const wchar_t *'))
                    (ImplicitCastExpr 0x9fb06e0 <col:34> 'const wchar_t *' <ArrayToPointerDecay>
                      (StringLiteral 0x9fb065c <col:34> 'const wchar_t [2]' lvalue L"1\000\000\000")))
                  (IntegerLiteral 0x9fb06f0 <col:43> 'int' 0))
                (CXXMemberCallExpr 0x9fb07c0 <line:223:21, col:36> 'class std::basic_string<wchar_t>' lvalue
                  (MemberExpr 0x9fb07a0 <col:21, col:25> '<bound member function type>' .append 0x9d27900
                    (DeclRefExpr 0x9fb0720 <col:21> 'wcstring':'class std::basic_string<wchar_t>' lvalue ParmVar 0x9fac860 'out' 'wcstring &'))
                  (ImplicitCastExpr 0x9fb07e0 <col:32> 'const wchar_t *' <LValueToRValue>
                    (DeclRefExpr 0x9fb0788 <col:32> 'const wchar_t *' lvalue Var 0x9fad290 'last' 'const wchar_t *')))
                <<<NULL>>>)
              (CXXMemberCallExpr 0x9fb08c0 <line:224:17, col:34> 'class std::basic_string<wchar_t>' lvalue
                (MemberExpr 0x9fb089c <col:17, col:21> '<bound member function type>' .append 0x9d27900
                  (DeclRefExpr 0x9fb080c <col:17> 'wcstring':'class std::basic_string<wchar_t>' lvalue ParmVar 0x9fac860 'out' 'wcstring &'))
                (ImplicitCastExpr 0x9fb08e0 <col:28> 'const wchar_t *' <ArrayToPointerDecay>
                  (StringLiteral 0x9fb0874 <col:28> 'const wchar_t [4]' lvalue L">\000\000\000&\000\000\000 \000\000\000")))
              (BreakStmt 0x9fb08f0 <line:225:17>)))
          (CaseStmt 0x9fb0930 <line:228:13, line:234:13>
            (ImplicitCastExpr 0x9fb10d0 <line:228:18> 'int' <IntegralCast>
              (DeclRefExpr 0x9fb0918 <col:18> 'enum token_type' EnumConstant 0x9fa21c0 'TOK_BACKGROUND' 'enum token_type'))
            <<<NULL>>>
            (CompoundStmt 0x9fb0ac8 <line:229:13, line:234:13>
              (CXXMemberCallExpr 0x9fb0a00 <line:230:17, col:34> 'class std::basic_string<wchar_t>' lvalue
                (MemberExpr 0x9fb09dc <col:17, col:21> '<bound member function type>' .append 0x9d27900
                  (DeclRefExpr 0x9fb0950 <col:17> 'wcstring':'class std::basic_string<wchar_t>' lvalue ParmVar 0x9fac860 'out' 'wcstring &'))
                (ImplicitCastExpr 0x9fb0a20 <col:28> 'const wchar_t *' <ArrayToPointerDecay>
                  (StringLiteral 0x9fb09b8 <col:28> 'const wchar_t [3]' lvalue L"&\000\000\000\n\000\000\000")))
              (BinaryOperator 0x9fb0a60 <line:231:17, col:29> 'int' lvalue '='
                (DeclRefExpr 0x9fb0a2c <col:17> 'int' lvalue Var 0x9facb90 'do_indent' 'int')
                (IntegerLiteral 0x9fb0a48 <col:29> 'int' 1))
              (BinaryOperator 0x9fb0aa8 <line:232:17, col:30> 'int' lvalue '='
                (DeclRefExpr 0x9fb0a78 <col:17> 'int' lvalue Var 0x9facab0 'is_command' 'int')
                (IntegerLiteral 0x9fb0a90 <col:30> 'int' 1))
              (BreakStmt 0x9fb0ac0 <line:233:17>)))
          (CaseStmt 0x9fb0b00 <line:236:13, line:246:13>
            (ImplicitCastExpr 0x9fb10c0 <line:236:18> 'int' <IntegralCast>
              (DeclRefExpr 0x9fb0ae8 <col:18> 'enum token_type' EnumConstant 0x9fa2200 'TOK_COMMENT' 'enum token_type'))
            <<<NULL>>>
            (CompoundStmt 0x9fb0df8 <line:237:13, line:246:13>
              (IfStmt 0x9fb0c88 <line:238:17, line:241:17>
                <<<NULL>>>
                (BinaryOperator 0x9fb0b90 <line:238:21, col:34> '_Bool' '&&'
                  (ImplicitCastExpr 0x9fb0b60 <col:21> '_Bool' <IntegralToBoolean>
                    (ImplicitCastExpr 0x9fb0b50 <col:21> 'int' <LValueToRValue>
                      (DeclRefExpr 0x9fb0b20 <col:21> 'int' lvalue Var 0x9facb90 'do_indent' 'int')))
                  (ImplicitCastExpr 0x9fb0b80 <col:34> '_Bool' <IntegralToBoolean>
                    (ImplicitCastExpr 0x9fb0b70 <col:34> 'int' <LValueToRValue>
                      (DeclRefExpr 0x9fb0b38 <col:34> 'int' lvalue ParmVar 0x9fac900 'flags' 'int'))))
                (CompoundStmt 0x9fb0c70 <line:239:17, line:241:17>
                  (CallExpr 0x9fb0c38 <line:240:21, col:44> 'void'
                    (ImplicitCastExpr 0x9fb0c28 <col:21> 'void (*)(wcstring &, int)' <FunctionToPointerDecay>
                      (DeclRefExpr 0x9fb0c0c <col:21> 'void (wcstring &, int)' lvalue Function 0x9fac5f0 'insert_tabs' 'void (wcstring &, int)'))
                    (DeclRefExpr 0x9fb0bdc <col:33> 'wcstring':'class std::basic_string<wchar_t>' lvalue ParmVar 0x9fac860 'out' 'wcstring &')
                    (ImplicitCastExpr 0x9fb0c60 <col:38> 'int' <LValueToRValue>
                      (DeclRefExpr 0x9fb0bf4 <col:38> 'int' lvalue Var 0x9facb20 'indent' 'int'))))
                <<<NULL>>>)
              (CallExpr 0x9fb0d60 <line:243:17, col:48> 'void'
                (ImplicitCastExpr 0x9fb0d50 <col:17> 'void (*)(wcstring &, const wchar_t *, ...)' <FunctionToPointerDecay>
                  (DeclRefExpr 0x9fb0d34 <col:17> 'void (wcstring &, const wchar_t *, ...)' lvalue Function 0x9f7b370 'append_format' 'void (wcstring &, const wchar_t *, ...)'))
                (DeclRefExpr 0x9fb0cdc <col:31> 'wcstring':'class std::basic_string<wchar_t>' lvalue ParmVar 0x9fac860 'out' 'wcstring &')
                (ImplicitCastExpr 0x9fb0d88 <col:36> 'const wchar_t *' <ArrayToPointerDecay>
                  (StringLiteral 0x9fb0cf4 <col:36> 'const wchar_t [4]' lvalue L"%\000\000\000l\000\000\000s\000\000\000"))
                (ImplicitCastExpr 0x9fb0d98 <col:44> 'const wchar_t *' <LValueToRValue>
                  (DeclRefExpr 0x9fb0d1c <col:44> 'const wchar_t *' lvalue Var 0x9fad290 'last' 'const wchar_t *')))
              (BinaryOperator 0x9fb0dd8 <line:244:17, col:29> 'int' lvalue '='
                (DeclRefExpr 0x9fb0da4 <col:17> 'int' lvalue Var 0x9facb90 'do_indent' 'int')
                (IntegerLiteral 0x9fb0dc0 <col:29> 'int' 1))
              (BreakStmt 0x9fb0df0 <line:245:17>)))
          (DefaultStmt 0x9fb1070 <line:248:13, line:252:13>
            (CompoundStmt 0x9fb1058 <line:249:13, line:252:13>
              (CallExpr 0x9fb0f78 <line:250:17, col:54> 'void'
                (ImplicitCastExpr 0x9fb0f68 <col:17> 'void (*)(int, const wchar_t *, ...)' <FunctionToPointerDecay>
                  (DeclRefExpr 0x9fb0f30 <col:17> 'void (int, const wchar_t *, ...)' lvalue Function 0x9f82ce0 'debug' 'void (int, const wchar_t *, ...)'))
                (IntegerLiteral 0x9fb0e50 <col:23> 'int' 0)
                (ImplicitCastExpr 0x9fb0fa0 <col:26> 'const wchar_t *' <ArrayToPointerDecay>
                  (StringLiteral 0x9fb0eb0 <col:26> 'const wchar_t [20]' lvalue L"U\000\000\000n\000\000\000k\000\000\000n\000\000\000o\000\000\000w\000\000\000n\000\000\000 \000\000\000t\000\000\000o\000\000\000k\000\000\000e\000\000\000n\000\000\000 \000\000\000'\000\000\000%\000\000\000l\000\000\000s\000\000\000'\000\000\000"))
                (ImplicitCastExpr 0x9fb0fb0 <col:50> 'const wchar_t *' <LValueToRValue>
                  (DeclRefExpr 0x9fb0f18 <col:50> 'const wchar_t *' lvalue Var 0x9fad290 'last' 'const wchar_t *')))
              (CallExpr 0x9fb1038 <line:251:17, col:23> 'void'
                (ImplicitCastExpr 0x9fb1028 <col:17> 'void (*)(int) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
                  (DeclRefExpr 0x9fb1010 <col:17> 'void (int) __attribute__((noreturn)) throw()' lvalue Function 0x9a0e430 'exit' 'void (int) __attribute__((noreturn)) throw()'))
                (IntegerLiteral 0x9fb0ff8 <col:22> 'int' 1))))))
      (BinaryOperator 0x9fb1190 <line:255:9, col:26> 'int' lvalue '='
        (DeclRefExpr 0x9fb114c <col:9> 'int' lvalue Var 0x9facc70 'prev_prev_type' 'int')
        (ImplicitCastExpr 0x9fb1180 <col:26> 'int' <LValueToRValue>
          (DeclRefExpr 0x9fb1164 <col:26> 'int' lvalue Var 0x9facc00 'prev_type' 'int')))
      (BinaryOperator 0x9fb11e8 <line:256:9, col:21> 'int' lvalue '='
        (DeclRefExpr 0x9fb11a8 <col:9> 'int' lvalue Var 0x9facc00 'prev_type' 'int')
        (ImplicitCastExpr 0x9fb11d8 <col:21> 'int' <LValueToRValue>
          (DeclRefExpr 0x9fb11c0 <col:21> 'int' lvalue Var 0x9fad130 'type' 'int')))))
  (ReturnStmt 0x9fb1278 <line:260:5, col:12>
    (ImplicitCastExpr 0x9fb1268 <col:12> 'int' <LValueToRValue>
      (DeclRefExpr 0x9fb124c <col:12> 'int' lvalue Var 0x9faca40 'res' 'int'))))


static void trim(wcstring &str) (CompoundStmt 0x9fb64d0 <../codeBase/fish-shell-master/fish_indent.cpp:268:1, line:279:1>
  (IfStmt 0x9fb1430 <line:269:5, line:270:9>
    <<<NULL>>>
    (CXXMemberCallExpr 0x9fb13f0 <line:269:9, col:19> '_Bool'
      (MemberExpr 0x9fb13cc <col:9, col:13> '<bound member function type>' .empty 0x9d256d0
        (ImplicitCastExpr 0x9fb1410 <col:9> 'const class std::basic_string<wchar_t>' lvalue <NoOp>
          (DeclRefExpr 0x9fb13b4 <col:9> 'wcstring':'class std::basic_string<wchar_t>' lvalue ParmVar 0x9fb12d0 'str' 'wcstring &'))))
    (ReturnStmt 0x9fb1420 <line:270:9>)
    <<<NULL>>>)
  (DeclStmt 0x9fb15b0 <line:272:5, col:47>
    0x9fb1460 "size_t pos =
      (CXXMemberCallExpr 0x9fb1538 <col:18, col:46> 'size_type':'unsigned int'
        (MemberExpr 0x9fb1518 <col:18, col:22> '<bound member function type>' .find_first_not_of 0x9d3a340
          (ImplicitCastExpr 0x9fb1558 <col:18> 'const class std::basic_string<wchar_t>' lvalue <NoOp>
            (DeclRefExpr 0x9fb1494 <col:18> 'wcstring':'class std::basic_string<wchar_t>' lvalue ParmVar 0x9fb12d0 'str' 'wcstring &')))
        (ImplicitCastExpr 0x9fb1578 <col:40> 'const wchar_t *' <ArrayToPointerDecay>
          (StringLiteral 0x9fb14f4 <col:40> 'const wchar_t [3]' lvalue L" \000\000\000\n\000\000\000"))
        (CXXDefaultArgExpr 0x9fb1598 <<invalid sloc>> 'size_type':'unsigned int'))")
  (IfStmt 0x9fb5df8 <line:273:5, line:274:25>
    <<<NULL>>>
    (BinaryOperator 0x9fb1610 <line:273:9, col:15> '_Bool' '>'
      (ImplicitCastExpr 0x9fb15f0 <col:9> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9fb15c0 <col:9> 'size_t':'unsigned int' lvalue Var 0x9fb1460 'pos' 'size_t':'unsigned int'))
      (ImplicitCastExpr 0x9fb1600 <col:15> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0x9fb15d8 <col:15> 'int' 0)))
    (CXXMemberCallExpr 0x9fb5db0 <line:274:9, col:25> 'class std::basic_string<wchar_t>' lvalue
      (MemberExpr 0x9fb5d8c <col:9, col:13> '<bound member function type>' .erase 0x9d2bea0
        (DeclRefExpr 0x9fb1628 <col:9> 'wcstring':'class std::basic_string<wchar_t>' lvalue ParmVar 0x9fb12d0 'str' 'wcstring &'))
      (ImplicitCastExpr 0x9fb5dd8 <col:19> 'size_type':'unsigned int' <IntegralCast>
        (IntegerLiteral 0x9fb1688 <col:19> 'int' 0))
      (ImplicitCastExpr 0x9fb5de8 <col:22> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9fb16a0 <col:22> 'size_t':'unsigned int' lvalue Var 0x9fb1460 'pos' 'size_t':'unsigned int')))
    <<<NULL>>>)
  (BinaryOperator 0x9fb6070 <line:276:5, col:38> 'size_t':'unsigned int' lvalue '='
    (DeclRefExpr 0x9fb5e14 <col:5> 'size_t':'unsigned int' lvalue Var 0x9fb1460 'pos' 'size_t':'unsigned int')
    (CXXMemberCallExpr 0x9fb5ed0 <col:11, col:38> 'size_type':'unsigned int'
      (MemberExpr 0x9fb5eb0 <col:11, col:15> '<bound member function type>' .find_last_not_of 0x9d3b300
        (ImplicitCastExpr 0x9fb5ef0 <col:11> 'const class std::basic_string<wchar_t>' lvalue <NoOp>
          (DeclRefExpr 0x9fb5e2c <col:11> 'wcstring':'class std::basic_string<wchar_t>' lvalue ParmVar 0x9fb12d0 'str' 'wcstring &')))
      (ImplicitCastExpr 0x9fb5f10 <col:32> 'const wchar_t *' <ArrayToPointerDecay>
        (StringLiteral 0x9fb5e8c <col:32> 'const wchar_t [3]' lvalue L" \000\000\000\n\000\000\000"))
      (CXXDefaultArgExpr 0x9fb6058 <<invalid sloc>> 'size_type':'unsigned int')))
  (IfStmt 0x9fb64b0 <line:277:5, line:278:26>
    <<<NULL>>>
    (BinaryOperator 0x9fb6208 <line:277:9, col:55> '_Bool' '&&'
      (BinaryOperator 0x9fb6108 <col:9, col:26> '_Bool' '!='
        (ImplicitCastExpr 0x9fb60e8 <col:9> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9fb6088 <col:9> 'size_t':'unsigned int' lvalue Var 0x9fb1460 'pos' 'size_t':'unsigned int'))
        (ImplicitCastExpr 0x9fb60f8 <col:16, col:26> 'size_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9fb60c8 <col:16, col:26> 'const size_type':'const unsigned int' lvalue Var 0x9d1b0c0 'npos' 'const size_type':'const unsigned int')))
      (BinaryOperator 0x9fb61f0 <col:34, col:55> '_Bool' '<'
        (BinaryOperator 0x9fb6170 <col:34, col:40> 'unsigned int' '+'
          (ImplicitCastExpr 0x9fb6150 <col:34> 'size_t':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0x9fb6120 <col:34> 'size_t':'unsigned int' lvalue Var 0x9fb1460 'pos' 'size_t':'unsigned int'))
          (ImplicitCastExpr 0x9fb6160 <col:40> 'unsigned int' <IntegralCast>
            (IntegerLiteral 0x9fb6138 <col:40> 'int' 1)))
        (CXXMemberCallExpr 0x9fb61c0 <col:44, col:55> 'size_type':'unsigned int'
          (MemberExpr 0x9fb61a0 <col:44, col:48> '<bound member function type>' .length 0x9d24c50
            (ImplicitCastExpr 0x9fb61e0 <col:44> 'const class std::basic_string<wchar_t>' lvalue <NoOp>
              (DeclRefExpr 0x9fb6188 <col:44> 'wcstring':'class std::basic_string<wchar_t>' lvalue ParmVar 0x9fb12d0 'str' 'wcstring &'))))))
    (CXXMemberCallExpr 0x9fb6330 <line:278:9, col:26> 'class std::basic_string<wchar_t>' lvalue
      (MemberExpr 0x9fb6310 <col:9, col:13> '<bound member function type>' .erase 0x9d2bea0
        (DeclRefExpr 0x9fb624c <col:9> 'wcstring':'class std::basic_string<wchar_t>' lvalue ParmVar 0x9fb12d0 'str' 'wcstring &'))
      (BinaryOperator 0x9fb62f8 <col:19, col:25> 'unsigned int' '+'
        (ImplicitCastExpr 0x9fb62d8 <col:19> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9fb62a8 <col:19> 'size_t':'unsigned int' lvalue Var 0x9fb1460 'pos' 'size_t':'unsigned int'))
        (ImplicitCastExpr 0x9fb62e8 <col:25> 'unsigned int' <IntegralCast>
          (IntegerLiteral 0x9fb62c0 <col:25> 'int' 1)))
      (CXXDefaultArgExpr 0x9fb6498 <<invalid sloc>> 'size_type':'unsigned int'))
    <<<NULL>>>))


int main(int argc, char **argv) (CompoundStmt 0x9fc6fc8 <../codeBase/fish-shell-master/fish_indent.cpp:286:1, line:388:1>
  (DeclStmt 0x9fb66b0 <line:287:5, col:20>
    0x9fb6660 "int do_indent =
      (IntegerLiteral 0x9fb6698 <col:19> 'int' 1)")
  (CallExpr 0x9fb6720 <line:288:5, col:21> 'void'
    (ImplicitCastExpr 0x9fb6710 <col:5> 'void (*)(void)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9fb66f4 <col:5> 'void (void)' lvalue Function 0x9f839e0 'set_main_thread' 'void (void)')))
  (CallExpr 0x9fb67a0 <line:289:5, col:23> 'void'
    (ImplicitCastExpr 0x9fb6790 <col:5> 'void (*)(void)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9fb6774 <col:5> 'void (void)' lvalue Function 0x9f83ba0 'setup_fork_guards' 'void (void)')))
  (ExprWithCleanups 0x9fb6938 <line:291:5, col:27> 'wcstring':'class std::basic_string<wchar_t>'
    (CXXTemporary 0x9fb6920)
    (CXXBindTemporaryExpr 0x9fb6928 <col:5, col:27> 'wcstring':'class std::basic_string<wchar_t>' (CXXTemporary 0x9fb6920)
      (CallExpr 0x9fb68d8 <col:5, col:27> 'wcstring':'class std::basic_string<wchar_t>'
        (ImplicitCastExpr 0x9fb68c8 <col:5> 'wcstring (*)(int, const wchar_t *)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9fb686c <col:5> 'wcstring (int, const wchar_t *)' lvalue Function 0x9f7bcd0 'wsetlocale' 'wcstring (int, const wchar_t *)'))
        (ImplicitCastExpr 0x9fb6900 </usr/include/locale.h:42:19> 'int' <IntegralCast>
          (DeclRefExpr 0x9fb67f4 <col:19> 'enum <anonymous at /usr/include/i386-linux-gnu/bits/locale.h:27:1>' EnumConstant 0x9a933d0 '__LC_ALL' 'enum <anonymous at /usr/include/i386-linux-gnu/bits/locale.h:27:1>'))
        (ImplicitCastExpr 0x9fb6910 <../codeBase/fish-shell-master/fish_indent.cpp:291:24> 'const wchar_t *' <ArrayToPointerDecay>
          (StringLiteral 0x9fb6850 <col:24> 'const wchar_t [1]' lvalue L"")))))
  (BinaryOperator 0x9fb6a08 <line:292:5, col:18> 'const wchar_t *' lvalue '='
    (DeclRefExpr 0x9fb6954 <col:5> 'const wchar_t *' lvalue Var 0x9f702a0 'program_name' 'const wchar_t *')
    (ImplicitCastExpr 0x9fb69f8 <col:18> 'const wchar_t *' <ArrayToPointerDecay>
      (StringLiteral 0x9fb69b0 <col:18> 'const wchar_t [12]' lvalue L"f\000\000\000i\000\000\000s\000\000\000h\000\000\000_\000\000\000i\000\000\000n\000\000\000d\000\000\000e\000\000\000n\000\000\000t\000\000\000")))
  (WhileStmt 0xa032d08 <line:294:5, line:364:5>
    <<<NULL>>>
    (ImplicitCastExpr 0x9fb6a38 <line:294:12> '_Bool' <IntegralToBoolean>
      (IntegerLiteral 0x9fb6a20 <col:12> 'int' 1))
    (CompoundStmt 0xa032ce0 <line:295:5, line:364:5>
      (DeclStmt 0x9fb7050 <line:296:9, line:315:9>
        0x9fb6ab0 "static struct option long_options[4] =
          (InitListExpr 0x9fb6e38 <line:298:9, line:314:9> 'struct option [4]'
            (InitListExpr 0x9fb6e60 <line:299:13, line:301:13> 'struct option':'struct option'
              (ImplicitCastExpr 0x9fb6ea0 <line:300:17> 'const char *' <ArrayToPointerDecay>
                (StringLiteral 0x9fb6b30 <col:17> 'const char [10]' lvalue "no-indent"))
              (IntegerLiteral 0x9fb6b58 </usr/include/getopt.h:118:23> 'int' 0)
              (ImplicitCastExpr 0x9fb6eb0 <../codeBase/fish-shell-master/fish_indent.cpp:300:43> 'int *' <NullToPointer>
                (IntegerLiteral 0x9fb6b70 <col:43> 'int' 0))
              (ImplicitCastExpr 0x9fb6ec0 <col:46> 'int' <IntegralCast>
                (CharacterLiteral 0x9fb6b88 <col:46> 'char'105)))
            (InitListExpr 0x9fb6ed0 <line:303:13, line:305:13> 'struct option':'struct option'
              (ImplicitCastExpr 0x9fb6f10 <line:304:17> 'const char *' <ArrayToPointerDecay>
                (StringLiteral 0x9fb6c20 <col:17> 'const char [5]' lvalue "help"))
              (IntegerLiteral 0x9fb6c40 </usr/include/getopt.h:118:23> 'int' 0)
              (ImplicitCastExpr 0x9fb6f20 <../codeBase/fish-shell-master/fish_indent.cpp:304:38> 'int *' <NullToPointer>
                (IntegerLiteral 0x9fb6c58 <col:38> 'int' 0))
              (ImplicitCastExpr 0x9fb6f30 <col:41> 'int' <IntegralCast>
                (CharacterLiteral 0x9fb6c70 <col:41> 'char'104)))
            (InitListExpr 0x9fb6f40 <line:307:13, line:309:13> 'struct option':'struct option'
              (ImplicitCastExpr 0x9fb6f88 <line:308:17> 'const char *' <ArrayToPointerDecay>
                (StringLiteral 0x9fb6cc0 <col:17> 'const char [8]' lvalue "version"))
              (IntegerLiteral 0x9fb6ce8 </usr/include/getopt.h:118:23> 'int' 0)
              (ImplicitCastExpr 0x9fb6f98 <../codeBase/fish-shell-master/fish_indent.cpp:308:41> 'int *' <NullToPointer>
                (IntegerLiteral 0x9fb6d00 <col:41> 'int' 0))
              (ImplicitCastExpr 0x9fb6fa8 <col:44> 'int' <IntegralCast>
                (CharacterLiteral 0x9fb6d18 <col:44> 'char'118)))
            (InitListExpr 0x9fb6fb8 <line:311:13, line:313:13> 'struct option':'struct option'
              (ImplicitCastExpr 0x9fb6ff0 <line:312:17> 'const char *' <NullToPointer>
                (IntegerLiteral 0x9fb6d68 <col:17> 'int' 0))
              (IntegerLiteral 0x9fb6d80 <col:20> 'int' 0)
              (ImplicitCastExpr 0x9fb7000 <col:23> 'int *' <NullToPointer>
                (IntegerLiteral 0x9fb6d98 <col:23> 'int' 0))
              (IntegerLiteral 0x9fb6db0 <col:26> 'int' 0)))")
      (DeclStmt 0x9fb70c0 <line:317:9, col:26>
        0x9fb7070 "int opt_index =
          (IntegerLiteral 0x9fb70a8 <col:25> 'int' 0)")
      (DeclStmt 0x9fb7338 <line:319:9, line:323:42>
        0x9fb70e0 "int opt =
          (CallExpr 0x9fb72a8 <line:319:19, line:323:41> 'int'
            (ImplicitCastExpr 0x9fb7298 <line:319:19> 'int (*)(int, char *const *, const char *, const struct option *, int *) throw()' <FunctionToPointerDecay>
              (DeclRefExpr 0x9fb7244 <col:19> 'int (int, char *const *, const char *, const struct option *, int *) throw()' lvalue Function 0x9a92eb0 'getopt_long' 'int (int, char *const *, const char *, const struct option *, int *) throw()'))
            (ImplicitCastExpr 0x9fb72d8 <col:31> 'int' <LValueToRValue>
              (DeclRefExpr 0x9fb714c <col:31> 'int' lvalue ParmVar 0x9fb6510 'argc' 'int'))
            (ImplicitCastExpr 0x9fb72f8 <line:320:31> 'char *const *' <NoOp>
              (ImplicitCastExpr 0x9fb72e8 <col:31> 'char **' <LValueToRValue>
                (DeclRefExpr 0x9fb7164 <col:31> 'char **' lvalue ParmVar 0x9fb6560 'argv' 'char **')))
            (ImplicitCastExpr 0x9fb7308 <line:47:23> 'const char *' <ArrayToPointerDecay>
              (StringLiteral 0x9fb71a0 <col:23> 'const char [4]' lvalue "hvi"))
            (ImplicitCastExpr 0x9fb7328 <line:322:31> 'const struct option *' <NoOp>
              (ImplicitCastExpr 0x9fb7318 <col:31> 'struct option *' <ArrayToPointerDecay>
                (DeclRefExpr 0x9fb71c0 <col:31> 'struct option [4]' lvalue Var 0x9fb6ab0 'long_options' 'struct option [4]')))
            (UnaryOperator 0x9fb71f0 <line:323:31, col:32> 'int *' prefix '&'
              (DeclRefExpr 0x9fb71d8 <col:32> 'int' lvalue Var 0x9fb7070 'opt_index' 'int')))")
      (IfStmt 0x9fb73c0 <line:325:9, line:326:13>
        <<<NULL>>>
        (BinaryOperator 0x9fb73a0 <line:325:13, col:21> '_Bool' '=='
          (ImplicitCastExpr 0x9fb7390 <col:13> 'int' <LValueToRValue>
            (DeclRefExpr 0x9fb7348 <col:13> 'int' lvalue Var 0x9fb70e0 'opt' 'int'))
          (UnaryOperator 0x9fb7378 <col:20, col:21> 'int' prefix '-'
            (IntegerLiteral 0x9fb7360 <col:21> 'int' 1)))
        (BreakStmt 0x9fb73b8 <line:326:13>)
        <<<NULL>>>)
      (SwitchStmt 0x9fb7408 <line:328:9, line:363:9>
        <<<NULL>>>
        (ImplicitCastExpr 0x9fb73f8 <line:328:17> 'int' <LValueToRValue>
          (DeclRefExpr 0x9fb73dc <col:17> 'int' lvalue Var 0x9fb70e0 'opt' 'int'))
        (CompoundStmt 0xa032c78 <line:329:9, line:363:9>
          (CaseStmt 0x9fb7440 <line:330:13, line:333:13>
            (IntegerLiteral 0x9fb7428 <line:330:18> 'int' 0)
            <<<NULL>>>
            (CompoundStmt 0x9fb7468 <line:331:13, line:333:13>
              (BreakStmt 0x9fb7460 <line:332:17>)))
          (CaseStmt 0x9fb7498 <line:335:13, line:340:13>
            (ImplicitCastExpr 0xa032cd0 <line:335:18> 'int' <IntegralCast>
              (CharacterLiteral 0x9fb7480 <col:18> 'char'104))
            <<<NULL>>>
            (CompoundStmt 0x9fb7650 <line:336:13, line:340:13>
              (CallExpr 0x9fb7578 <line:337:17, col:44> 'void'
                (ImplicitCastExpr 0x9fb7568 <col:17> 'void (*)(const char *, int)' <FunctionToPointerDecay>
                  (DeclRefExpr 0x9fb7530 <col:17> 'void (const char *, int)' lvalue Function 0x9fab590 'print_help' 'void (const char *, int)'))
                (ImplicitCastExpr 0x9fb75a0 <col:28> 'const char *' <ArrayToPointerDecay>
                  (StringLiteral 0x9fb74ec <col:28> 'const char [12]' lvalue "fish_indent"))
                (IntegerLiteral 0x9fb7518 <col:43> 'int' 1))
              (CallExpr 0x9fb7628 <line:338:17, col:23> 'void'
                (ImplicitCastExpr 0x9fb7618 <col:17> 'void (*)(int) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
                  (DeclRefExpr 0x9fb7600 <col:17> 'void (int) __attribute__((noreturn)) throw()' lvalue Function 0x9a0e430 'exit' 'void (int) __attribute__((noreturn)) throw()'))
                (IntegerLiteral 0x9fb75e8 <col:22> 'int' 0))
              (BreakStmt 0x9fb7648 <line:339:17>)))
          (CaseStmt 0x9fb7688 <line:342:13, line:349:13>
            (ImplicitCastExpr 0xa032cc0 <line:342:18> 'int' <IntegralCast>
              (CharacterLiteral 0x9fb7670 <col:18> 'char'118))
            <<<NULL>>>
            (CompoundStmt 0xa032ad8 <line:343:13, line:349:13>
              (CallExpr 0xa032ab8 <line:348:17, col:23> 'void'
                (ImplicitCastExpr 0xa032aa8 <col:17> 'void (*)(int) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
                  (DeclRefExpr 0xa032a90 <col:17> 'void (int) __attribute__((noreturn)) throw()' lvalue Function 0x9a0e430 'exit' 'void (int) __attribute__((noreturn)) throw()'))
                (IntegerLiteral 0xa032a78 <col:22> 'int' 0))))
          (CaseStmt 0xa032b08 <line:351:13, line:355:13>
            (ImplicitCastExpr 0xa032cb0 <line:351:18> 'int' <IntegralCast>
              (CharacterLiteral 0xa032af0 <col:18> 'char'105))
            <<<NULL>>>
            (CompoundStmt 0xa032b78 <line:352:13, line:355:13>
              (BinaryOperator 0xa032b58 <line:353:17, col:29> 'int' lvalue '='
                (DeclRefExpr 0xa032b28 <col:17> 'int' lvalue Var 0x9fb6660 'do_indent' 'int')
                (IntegerLiteral 0xa032b40 <col:29> 'int' 0))
              (BreakStmt 0xa032b70 <line:354:17>)))
          (CaseStmt 0xa032ba8 <line:358:13, line:361:13>
            (ImplicitCastExpr 0xa032ca0 <line:358:18> 'int' <IntegralCast>
              (CharacterLiteral 0xa032b90 <col:18> 'char'63))
            <<<NULL>>>
            (CompoundStmt 0xa032c60 <line:359:13, line:361:13>
              (CallExpr 0xa032c40 <line:360:17, col:23> 'void'
                (ImplicitCastExpr 0xa032c30 <col:17> 'void (*)(int) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
                  (DeclRefExpr 0xa032c18 <col:17> 'void (int) __attribute__((noreturn)) throw()' lvalue Function 0x9a0e430 'exit' 'void (int) __attribute__((noreturn)) throw()'))
                (IntegerLiteral 0xa032c00 <col:22> 'int' 1))))))))
  (DeclStmt 0xa032df8 <line:366:5, col:27>
    0xa032d30 "wcstring sb_in =
      (CXXConstructExpr 0xa032d68 <col:14> 'wcstring':'class std::basic_string<wchar_t>''void (void)')"
    0xa032d90 "wcstring sb_out =
      (CXXConstructExpr 0xa032dc8 <col:21> 'wcstring':'class std::basic_string<wchar_t>''void (void)')")
  (CallExpr 0xa032ed8 <line:367:5, col:27> 'void'
    (ImplicitCastExpr 0xa032ec8 <col:5> 'void (*)(FILE *, wcstring &)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa032e6c <col:5> 'void (FILE *, wcstring &)' lvalue Function 0x9fabc30 'read_file' 'void (FILE *, wcstring &)'))
    (ImplicitCastExpr 0xa032f00 </usr/include/stdio.h:173:15> 'struct _IO_FILE *' <LValueToRValue>
      (DeclRefExpr 0xa032e3c <col:15> 'struct _IO_FILE *' lvalue Var 0x9a26e40 'stdin' 'struct _IO_FILE *'))
    (DeclRefExpr 0xa032e54 <../codeBase/fish-shell-master/fish_indent.cpp:367:22> 'wcstring':'class std::basic_string<wchar_t>' lvalue Var 0xa032d30 'sb_in' 'wcstring':'class std::basic_string<wchar_t>'))
  (CallExpr 0xa032f70 <line:369:5, col:16> 'void'
    (ImplicitCastExpr 0xa032f60 <col:5> 'void (*)(void)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa032f44 <col:5> 'void (void)' lvalue Function 0x9f9f6e0 'wutil_init' 'void (void)')))
  (IfStmt 0x9fc6f00 <line:371:5, line:382:5>
    <<<NULL>>>
    (UnaryOperator 0x9fc6b08 <line:371:9, col:41> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9fc6af8 <col:10, col:41> '_Bool' <IntegralToBoolean>
        (CallExpr 0xa033078 <col:10, col:41> 'int'
          (ImplicitCastExpr 0xa033068 <col:10> 'int (*)(wcstring &, const wcstring &, int)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa03300c <col:10> 'int (wcstring &, const wcstring &, int)' lvalue Function 0x9fac9c0 'indent' 'int (wcstring &, const wcstring &, int)'))
          (DeclRefExpr 0xa032fc4 <col:17> 'wcstring':'class std::basic_string<wchar_t>' lvalue Var 0xa032d90 'sb_out' 'wcstring':'class std::basic_string<wchar_t>')
          (ImplicitCastExpr 0xa0330a0 <col:25> 'const wcstring':'const class std::basic_string<wchar_t>' lvalue <NoOp>
            (DeclRefExpr 0xa032fdc <col:25> 'wcstring':'class std::basic_string<wchar_t>' lvalue Var 0xa032d30 'sb_in' 'wcstring':'class std::basic_string<wchar_t>'))
          (ImplicitCastExpr 0x9fc6ae8 <col:32> 'int' <LValueToRValue>
            (DeclRefExpr 0xa032ff4 <col:32> 'int' lvalue Var 0x9fb6660 'do_indent' 'int')))))
    (CompoundStmt 0x9fc6d80 <line:372:5, line:375:5>
      (CallExpr 0x9fc6bd8 <line:373:9, col:20> 'void'
        (ImplicitCastExpr 0x9fc6bc8 <col:9> 'void (*)(wcstring &)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9fc6b6c <col:9> 'void (wcstring &)' lvalue Function 0x9fb1350 'trim' 'void (wcstring &)'))
        (DeclRefExpr 0x9fc6b54 <col:14> 'wcstring':'class std::basic_string<wchar_t>' lvalue Var 0xa032d90 'sb_out' 'wcstring':'class std::basic_string<wchar_t>'))
      (CallExpr 0x9fc6d38 <line:374:9, col:48> 'int'
        (ImplicitCastExpr 0x9fc6d28 <col:9> 'int (*)(__FILE *restrict, const wchar_t *restrict, ...)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9fc6cd4 <col:9> 'int (__FILE *restrict, const wchar_t *restrict, ...)' lvalue Function 0x9a3fa00 'fwprintf' 'int (__FILE *restrict, const wchar_t *restrict, ...)'))
        (ImplicitCastExpr 0x9fc6d60 </usr/include/stdio.h:174:16> 'struct _IO_FILE *' <LValueToRValue>
          (DeclRefExpr 0x9fc6c2c <col:16> 'struct _IO_FILE *' lvalue Var 0x9a26e90 'stdout' 'struct _IO_FILE *'))
        (ImplicitCastExpr 0x9fc6d70 <../codeBase/fish-shell-master/fish_indent.cpp:374:26> 'const wchar_t *' <ArrayToPointerDecay>
          (StringLiteral 0x9fc6c44 <col:26> 'const wchar_t [4]' lvalue L"%\000\000\000l\000\000\000s\000\000\000"))
        (CXXMemberCallExpr 0x9fc6ca8 <col:34, col:47> 'const wchar_t *'
          (MemberExpr 0x9fc6c84 <col:34, col:41> '<bound member function type>' .c_str 0x9d35400
            (ImplicitCastExpr 0x9fc6cc8 <col:34> 'const class std::basic_string<wchar_t>' lvalue <NoOp>
              (DeclRefExpr 0x9fc6c6c <col:34> 'wcstring':'class std::basic_string<wchar_t>' lvalue Var 0xa032d90 'sb_out' 'wcstring':'class std::basic_string<wchar_t>'))))))
    (CompoundStmt 0x9fc6ee8 <line:377:5, line:382:5>
      (CallExpr 0x9fc6ea0 <line:381:9, col:47> 'int'
        (ImplicitCastExpr 0x9fc6e90 <col:9> 'int (*)(__FILE *restrict, const wchar_t *restrict, ...)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9fc6e74 <col:9> 'int (__FILE *restrict, const wchar_t *restrict, ...)' lvalue Function 0x9a3fa00 'fwprintf' 'int (__FILE *restrict, const wchar_t *restrict, ...)'))
        (ImplicitCastExpr 0x9fc6ec8 </usr/include/stdio.h:174:16> 'struct _IO_FILE *' <LValueToRValue>
          (DeclRefExpr 0x9fc6dcc <col:16> 'struct _IO_FILE *' lvalue Var 0x9a26e90 'stdout' 'struct _IO_FILE *'))
        (ImplicitCastExpr 0x9fc6ed8 <../codeBase/fish-shell-master/fish_indent.cpp:381:26> 'const wchar_t *' <ArrayToPointerDecay>
          (StringLiteral 0x9fc6de4 <col:26> 'const wchar_t [4]' lvalue L"%\000\000\000l\000\000\000s\000\000\000"))
        (CXXMemberCallExpr 0x9fc6e48 <col:34, col:46> 'const wchar_t *'
          (MemberExpr 0x9fc6e24 <col:34, col:40> '<bound member function type>' .c_str 0x9d35400
            (ImplicitCastExpr 0x9fc6e68 <col:34> 'const class std::basic_string<wchar_t>' lvalue <NoOp>
              (DeclRefExpr 0x9fc6e0c <col:34> 'wcstring':'class std::basic_string<wchar_t>' lvalue Var 0xa032d30 'sb_in' 'wcstring':'class std::basic_string<wchar_t>')))))))
  (CallExpr 0x9fc6f80 <line:385:5, col:19> 'void'
    (ImplicitCastExpr 0x9fc6f70 <col:5> 'void (*)(void)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9fc6f54 <col:5> 'void (void)' lvalue Function 0x9f9f760 'wutil_destroy' 'void (void)')))
  (ReturnStmt 0x9fc6fb8 <line:387:5, col:12>
    (IntegerLiteral 0x9fc6fa0 <col:12> 'int' 0)))


extern float __builtin_tanhf(float);
extern __attribute__((__vector_size__(2 * sizeof(double)))) double __builtin_ia32_addsubpd(__attribute__((__vector_size__(2 * sizeof(double)))) double, __attribute__((__vector_size__(2 * sizeof(double)))) double);
extern __attribute__((__vector_size__(4 * sizeof(float)))) float __builtin_ia32_rcpps(__attribute__((__vector_size__(4 * sizeof(float)))) float);
extern long double __builtin_tanhl(long double);
extern __attribute__((__vector_size__(8 * sizeof(char)))) char __builtin_ia32_psubusb(__attribute__((__vector_size__(8 * sizeof(char)))) char, __attribute__((__vector_size__(8 * sizeof(char)))) char);
extern __attribute__((__vector_size__(4 * sizeof(float)))) float __builtin_ia32_addsubps(__attribute__((__vector_size__(4 * sizeof(float)))) float, __attribute__((__vector_size__(4 * sizeof(float)))) float);
extern int __builtin_isunordered();
extern __attribute__((__vector_size__(4 * sizeof(short)))) short __builtin_ia32_psubusw(__attribute__((__vector_size__(4 * sizeof(short)))) short, __attribute__((__vector_size__(4 * sizeof(short)))) short);
extern int __builtin_islessequal();
extern float __builtin_sqrtf(float);
extern float __builtin_expf(float);
extern long double __builtin_sqrtl(long double);
extern long double __builtin_expl(long double);
extern void __builtin_ia32_vzeroall();
extern __attribute__((__vector_size__(2 * sizeof(float)))) float __builtin_ia32_pi2fd(__attribute__((__vector_size__(2 * sizeof(int)))) int);
extern float __builtin_erfcf(float);
extern long double __builtin_erfcl(long double);
extern __attribute__((__vector_size__(8 * sizeof(short)))) short __builtin_ia32_psubsw128(__attribute__((__vector_size__(8 * sizeof(short)))) short, __attribute__((__vector_size__(8 * sizeof(short)))) short);
extern int __builtin___fprintf_chk(FILE *, int, const char *, ...);
extern __attribute__((__vector_size__(2 * sizeof(float)))) float __builtin_ia32_pi2fw(__attribute__((__vector_size__(2 * sizeof(int)))) int);
extern float __builtin_cargf(_Complex float);
extern __attribute__((__vector_size__(4 * sizeof(int)))) int __builtin_ia32_cvttps2dq(__attribute__((__vector_size__(4 * sizeof(float)))) float);
extern long double __builtin_cargl(_Complex long double);
extern void __sync_add_and_fetch();
extern int __builtin_ffsl(unsigned long);
extern long long __builtin_llrint(double);
extern __attribute__((__vector_size__(4 * sizeof(float)))) float __builtin_ia32_rcpss(__attribute__((__vector_size__(4 * sizeof(float)))) float);
extern int __builtin_isnan();
extern void __builtin_abort();
extern float __builtin_atan2f(float, float);
extern long double __builtin_atan2l(long double, long double);
extern float __builtin_nexttowardf(float, float);
extern long double __builtin_nexttowardl(long double, long double);
extern __attribute__((__vector_size__(4 * sizeof(short)))) short __builtin_ia32_pmulhrw(__attribute__((__vector_size__(4 * sizeof(short)))) short, __attribute__((__vector_size__(4 * sizeof(short)))) short);
extern __attribute__((__vector_size__(4 * sizeof(double)))) double __builtin_ia32_minpd256(__attribute__((__vector_size__(4 * sizeof(double)))) double, __attribute__((__vector_size__(4 * sizeof(double)))) double);
extern void __sync_synchronize();
extern __attribute__((__vector_size__(4 * sizeof(short)))) short __builtin_ia32_psrlwi(__attribute__((__vector_size__(4 * sizeof(short)))) short, int);
extern __attribute__((__vector_size__(32 * sizeof(char)))) char __builtin_ia32_lddqu256(const char *);
extern _Complex double __builtin_conj(_Complex double);
extern __attribute__((__vector_size__(8 * sizeof(short)))) short __builtin_ia32_paddsw128(__attribute__((__vector_size__(8 * sizeof(short)))) short, __attribute__((__vector_size__(8 * sizeof(short)))) short);
extern void *__builtin_dwarf_cfa();
extern __attribute__((__vector_size__(4 * sizeof(double)))) double __builtin_ia32_maxpd256(__attribute__((__vector_size__(4 * sizeof(double)))) double, __attribute__((__vector_size__(4 * sizeof(double)))) double);
extern __attribute__((__vector_size__(4 * sizeof(short)))) short __builtin_ia32_punpcklwd(__attribute__((__vector_size__(4 * sizeof(short)))) short, __attribute__((__vector_size__(4 * sizeof(short)))) short);
extern __attribute__((__vector_size__(4 * sizeof(short)))) short __builtin_ia32_pmulhw(__attribute__((__vector_size__(4 * sizeof(short)))) short, __attribute__((__vector_size__(4 * sizeof(short)))) short);
extern double __builtin_trunc(double);
extern float __builtin_huge_valf();
extern float __builtin_copysignf(float, float);
extern long double __builtin_huge_vall();
extern long double __builtin_copysignl(long double, long double);
extern __attribute__((__vector_size__(4 * sizeof(short)))) short __builtin_ia32_pmulhuw(__attribute__((__vector_size__(4 * sizeof(short)))) short, __attribute__((__vector_size__(4 * sizeof(short)))) short);
extern void __builtin_ia32_sfence();
extern double __builtin_rint(double);
extern float __builtin_fmodf(float, float);
extern _Complex double __builtin_csin(_Complex double);
extern long double __builtin_fmodl(long double, long double);
extern long __builtin_lround(double);
extern __attribute__((__vector_size__(2 * sizeof(int)))) int __builtin_ia32_cvtpd2pi(__attribute__((__vector_size__(2 * sizeof(double)))) double);
extern int __builtin_ia32_ptestc256(__attribute__((__vector_size__(4 * sizeof(long long)))) long long, __attribute__((__vector_size__(4 * sizeof(long long)))) long long);
extern int __builtin_bcmp(void *, void *, unsigned int);
extern int __builtin_popcountl(unsigned long);
extern __attribute__((__vector_size__(4 * sizeof(float)))) float __builtin_ia32_cvtpd2ps(__attribute__((__vector_size__(2 * sizeof(double)))) double);
extern float __builtin_truncf(float);
extern long double __builtin_truncl(long double);
extern __attribute__((__vector_size__(8 * sizeof(short)))) short __builtin_ia32_pminsw128(__attribute__((__vector_size__(8 * sizeof(short)))) short, __attribute__((__vector_size__(8 * sizeof(short)))) short);
extern float __builtin_floorf(float);
extern float __builtin_cosf(float);
extern double __builtin_cosh(double);
extern __attribute__((__vector_size__(4 * sizeof(short)))) short __builtin_ia32_pmullw(__attribute__((__vector_size__(4 * sizeof(short)))) short, __attribute__((__vector_size__(4 * sizeof(short)))) short);
extern long double __builtin_cosl(long double);
extern __attribute__((__vector_size__(2 * sizeof(float)))) float __builtin_ia32_pfsub(__attribute__((__vector_size__(2 * sizeof(float)))) float, __attribute__((__vector_size__(2 * sizeof(float)))) float);
extern long double __builtin_floorl(long double);
extern _Complex long double __builtin_casinl(_Complex long double);
extern _Complex double __builtin_casinh(_Complex double);
extern _Complex float __builtin_casinf(_Complex float);
extern _Complex double __builtin_cacos(_Complex double);
extern int __builtin_ia32_comieq(__attribute__((__vector_size__(4 * sizeof(float)))) float, __attribute__((__vector_size__(4 * sizeof(float)))) float);
extern void __sync_fetch_and_sub();
extern __attribute__((__vector_size__(2 * sizeof(int)))) int __builtin_ia32_paddd(__attribute__((__vector_size__(2 * sizeof(int)))) int, __attribute__((__vector_size__(2 * sizeof(int)))) int);
extern __attribute__((__vector_size__(1 * sizeof(long long)))) long long __builtin_ia32_paddq(__attribute__((__vector_size__(1 * sizeof(long long)))) long long, __attribute__((__vector_size__(1 * sizeof(long long)))) long long);
extern __attribute__((__vector_size__(8 * sizeof(char)))) char __builtin_ia32_paddb(__attribute__((__vector_size__(8 * sizeof(char)))) char, __attribute__((__vector_size__(8 * sizeof(char)))) char);
extern __attribute__((__vector_size__(4 * sizeof(short)))) short __builtin_ia32_paddw(__attribute__((__vector_size__(4 * sizeof(short)))) short, __attribute__((__vector_size__(4 * sizeof(short)))) short);
extern float __builtin_powif(float, int);
extern void __atomic_fetch_xor();
extern __attribute__((__vector_size__(8 * sizeof(short)))) short __builtin_ia32_pmaxsw128(__attribute__((__vector_size__(8 * sizeof(short)))) short, __attribute__((__vector_size__(8 * sizeof(short)))) short);
extern long double __builtin_powil(long double, int);
extern char __sync_fetch_and_sub_1(volatile char *, char, ...);
extern short __sync_fetch_and_sub_2(volatile short *, short, ...);
extern int __sync_fetch_and_sub_4(volatile int *, int, ...);
extern __attribute__((__vector_size__(8 * sizeof(float)))) float __builtin_ia32_hsubps256(__attribute__((__vector_size__(8 * sizeof(float)))) float, __attribute__((__vector_size__(8 * sizeof(float)))) float);
extern long long __sync_fetch_and_sub_8(volatile long long *, long long, ...);
extern int __builtin_ia32_comige(__attribute__((__vector_size__(4 * sizeof(float)))) float, __attribute__((__vector_size__(4 * sizeof(float)))) float);
extern __attribute__((__vector_size__(8 * sizeof(short)))) short __builtin_ia32_pabsw128(__attribute__((__vector_size__(8 * sizeof(short)))) short);
extern int __builtin_ia32_comigt(__attribute__((__vector_size__(4 * sizeof(float)))) float, __attribute__((__vector_size__(4 * sizeof(float)))) float);
extern __attribute__((__vector_size__(2 * sizeof(int)))) int __builtin_ia32_cvttps2pi(__attribute__((__vector_size__(4 * sizeof(float)))) float);
extern int __builtin_flt_rounds();
extern void __builtin_ia32_emms();
extern __attribute__((__vector_size__(2 * sizeof(long long)))) long long __builtin_ia32_psrlqi128(__attribute__((__vector_size__(2 * sizeof(long long)))) long long, int);
extern double __builtin_cos(double);
extern __attribute__((__vector_size__(4 * sizeof(short)))) short __builtin_ia32_psrawi(__attribute__((__vector_size__(4 * sizeof(short)))) short, int);
extern __attribute__((__vector_size__(4 * sizeof(int)))) int __builtin_ia32_phaddd128(__attribute__((__vector_size__(4 * sizeof(int)))) int, __attribute__((__vector_size__(4 * sizeof(int)))) int);
extern float __builtin_nearbyintf(float);
extern float __builtin_coshf(float);
extern __attribute__((__vector_size__(2 * sizeof(long long)))) long long __builtin_ia32_psadbw128(__attribute__((__vector_size__(16 * sizeof(char)))) char, __attribute__((__vector_size__(16 * sizeof(char)))) char);
extern long double __builtin_nearbyintl(long double);
extern long double __builtin_coshl(long double);
extern long double __builtin_asinhl(long double);
extern float __builtin_asinhf(float);
extern int __builtin___printf_chk(int, const char *, ...);
extern int __builtin_signbitf(float);
extern int __builtin_signbitl(long double);
extern __attribute__((__vector_size__(2 * sizeof(float)))) float __builtin_ia32_pfsubr(__attribute__((__vector_size__(2 * sizeof(float)))) float, __attribute__((__vector_size__(2 * sizeof(float)))) float);
extern unsigned int __builtin_bswap32(unsigned int);
extern __attribute__((__vector_size__(8 * sizeof(short)))) short __builtin_ia32_psllw128(__attribute__((__vector_size__(8 * sizeof(short)))) short, __attribute__((__vector_size__(8 * sizeof(short)))) short);
extern char *__builtin___stpncpy_chk(char *, const char *, unsigned int, unsigned int);
extern int __builtin_isfinite();
extern __attribute__((__vector_size__(2 * sizeof(double)))) double __builtin_ia32_haddpd(__attribute__((__vector_size__(2 * sizeof(double)))) double, __attribute__((__vector_size__(2 * sizeof(double)))) double);
extern __attribute__((__vector_size__(8 * sizeof(float)))) float __builtin_ia32_haddps256(__attribute__((__vector_size__(8 * sizeof(float)))) float, __attribute__((__vector_size__(8 * sizeof(float)))) float);
extern __attribute__((__vector_size__(4 * sizeof(float)))) float __builtin_ia32_haddps(__attribute__((__vector_size__(4 * sizeof(float)))) float, __attribute__((__vector_size__(4 * sizeof(float)))) float);
extern __int128_t __sync_swap_16(volatile __int128_t *, __int128_t, ...);
extern __attribute__((__vector_size__(8 * sizeof(short)))) short __builtin_ia32_pminuw128(__attribute__((__vector_size__(8 * sizeof(short)))) short, __attribute__((__vector_size__(8 * sizeof(short)))) short);
extern float __builtin_crealf(_Complex float);
extern int __builtin_ia32_comile(__attribute__((__vector_size__(4 * sizeof(float)))) float, __attribute__((__vector_size__(4 * sizeof(float)))) float);
extern long double __builtin_creall(_Complex long double);
extern int __builtin_ia32_comilt(__attribute__((__vector_size__(4 * sizeof(float)))) float, __attribute__((__vector_size__(4 * sizeof(float)))) float);
extern __attribute__((__vector_size__(4 * sizeof(int)))) int __builtin_ia32_pmulld128(__attribute__((__vector_size__(4 * sizeof(int)))) int, __attribute__((__vector_size__(4 * sizeof(int)))) int);
extern unsigned long long __builtin_bswap64(unsigned long long);
extern __attribute__((__vector_size__(2 * sizeof(float)))) float __builtin_ia32_pfacc(__attribute__((__vector_size__(2 * sizeof(float)))) float, __attribute__((__vector_size__(2 * sizeof(float)))) float);
extern int __builtin_ctz(unsigned int);
extern __attribute__((__vector_size__(2 * sizeof(double)))) double __builtin_ia32_dppd(__attribute__((__vector_size__(2 * sizeof(double)))) double, __attribute__((__vector_size__(2 * sizeof(double)))) double, int);
extern __attribute__((__vector_size__(8 * sizeof(char)))) char __builtin_ia32_palignr(__attribute__((__vector_size__(8 * sizeof(char)))) char, __attribute__((__vector_size__(8 * sizeof(char)))) char, char);
extern float __builtin_remainderf(float, float);
extern __attribute__((__vector_size__(4 * sizeof(float)))) float __builtin_ia32_dpps(__attribute__((__vector_size__(4 * sizeof(float)))) float, __attribute__((__vector_size__(4 * sizeof(float)))) float, int);
extern long double __builtin_remainderl(long double, long double);
extern __attribute__((__vector_size__(2 * sizeof(float)))) float __builtin_ia32_pfpnacc(__attribute__((__vector_size__(2 * sizeof(float)))) float, __attribute__((__vector_size__(2 * sizeof(float)))) float);
extern char *__builtin_rindex(const char *, int);
extern __attribute__((__vector_size__(8 * sizeof(short)))) short __builtin_ia32_pmaxuw128(__attribute__((__vector_size__(8 * sizeof(short)))) short, __attribute__((__vector_size__(8 * sizeof(short)))) short);
extern __attribute__((__vector_size__(2 * sizeof(float)))) float __builtin_ia32_pfadd(__attribute__((__vector_size__(2 * sizeof(float)))) float, __attribute__((__vector_size__(2 * sizeof(float)))) float);
extern void __builtin_prefetch(const void *, ...);
extern int __builtin_ia32_ucomisdeq(__attribute__((__vector_size__(2 * sizeof(double)))) double, __attribute__((__vector_size__(2 * sizeof(double)))) double);
extern __attribute__((__vector_size__(2 * sizeof(double)))) double __builtin_ia32_roundpd(__attribute__((__vector_size__(2 * sizeof(double)))) double, int);
extern double __builtin_atan2(double, double);
extern __attribute__((__vector_size__(4 * sizeof(float)))) float __builtin_ia32_roundps(__attribute__((__vector_size__(4 * sizeof(float)))) float, int);
extern float __builtin_powf(float, float);
extern double __builtin_powi(double, int);
extern long double __builtin_powl(long double, long double);
extern int __builtin_ia32_ucomisdge(__attribute__((__vector_size__(2 * sizeof(double)))) double, __attribute__((__vector_size__(2 * sizeof(double)))) double);
extern int __builtin_ia32_vtestcpd(__attribute__((__vector_size__(2 * sizeof(double)))) double, __attribute__((__vector_size__(2 * sizeof(double)))) double);
extern float __builtin_tgammaf(float);
extern int __builtin_ia32_ucomisdgt(__attribute__((__vector_size__(2 * sizeof(double)))) double, __attribute__((__vector_size__(2 * sizeof(double)))) double);
extern long double __builtin_tgammal(long double);
extern float __builtin_atanf(float);
extern double __builtin_atanh(double);
extern long double __builtin_atanl(long double);
extern __attribute__((__vector_size__(2 * sizeof(int)))) int __builtin_ia32_pmaddwd(__attribute__((__vector_size__(4 * sizeof(short)))) short, __attribute__((__vector_size__(4 * sizeof(short)))) short);
extern int __builtin_ia32_vtestcps(__attribute__((__vector_size__(4 * sizeof(float)))) float, __attribute__((__vector_size__(4 * sizeof(float)))) float);
extern __attribute__((__vector_size__(2 * sizeof(int)))) int __builtin_ia32_phsubd(__attribute__((__vector_size__(2 * sizeof(int)))) int, __attribute__((__vector_size__(2 * sizeof(int)))) int);
extern float __builtin_nextafterf(float, float);
extern _Complex float __builtin_casinhf(_Complex float);
extern long double __builtin_nextafterl(long double, long double);
extern _Complex long double __builtin_casinhl(_Complex long double);
extern __attribute__((__vector_size__(4 * sizeof(short)))) short __builtin_ia32_phsubw(__attribute__((__vector_size__(4 * sizeof(short)))) short, __attribute__((__vector_size__(4 * sizeof(short)))) short);
extern __attribute__((__vector_size__(2 * sizeof(double)))) double __builtin_ia32_roundsd(__attribute__((__vector_size__(2 * sizeof(double)))) double, __attribute__((__vector_size__(2 * sizeof(double)))) double, int);
extern _Complex float __builtin_csinhf(_Complex float);
extern __attribute__((__vector_size__(4 * sizeof(float)))) float __builtin_ia32_roundss(__attribute__((__vector_size__(4 * sizeof(float)))) float, __attribute__((__vector_size__(4 * sizeof(float)))) float, int);
extern _Complex long double __builtin_csinhl(_Complex long double);
extern __attribute__((__vector_size__(4 * sizeof(int)))) int __builtin_ia32_psrldi128(__attribute__((__vector_size__(4 * sizeof(int)))) int, int);
extern int __builtin_popcount(unsigned int);
extern __attribute__((__vector_size__(2 * sizeof(int)))) int __builtin_ia32_pslld(__attribute__((__vector_size__(2 * sizeof(int)))) int, __attribute__((__vector_size__(1 * sizeof(long long)))) long long);
extern __attribute__((__vector_size__(1 * sizeof(long long)))) long long __builtin_ia32_psllq(__attribute__((__vector_size__(1 * sizeof(long long)))) long long, __attribute__((__vector_size__(1 * sizeof(long long)))) long long);
extern __attribute__((__vector_size__(4 * sizeof(short)))) short __builtin_ia32_psllw(__attribute__((__vector_size__(4 * sizeof(short)))) short, __attribute__((__vector_size__(1 * sizeof(long long)))) long long);
extern float __builtin_rintf(float);
extern long double __builtin_rintl(long double);
extern int __builtin_ia32_ucomisdle(__attribute__((__vector_size__(2 * sizeof(double)))) double, __attribute__((__vector_size__(2 * sizeof(double)))) double);
extern __attribute__((__vector_size__(2 * sizeof(float)))) float __builtin_ia32_pfrcpit1(__attribute__((__vector_size__(2 * sizeof(float)))) float, __attribute__((__vector_size__(2 * sizeof(float)))) float);
extern __attribute__((__vector_size__(2 * sizeof(float)))) float __builtin_ia32_pfrcpit2(__attribute__((__vector_size__(2 * sizeof(float)))) float, __attribute__((__vector_size__(2 * sizeof(float)))) float);
extern float __builtin_remquof(float, float, int *);
extern int __builtin_ia32_ucomisdlt(__attribute__((__vector_size__(2 * sizeof(double)))) double, __attribute__((__vector_size__(2 * sizeof(double)))) double);
extern long double __builtin_remquol(long double, long double, int *);
extern float __builtin_log1pf(float);
extern int __builtin_parityll(unsigned long long);
extern long double __builtin_log1pl(long double);
extern void __sync_lock_release_16(volatile __int128_t *, ...);
extern unsigned long long __builtin_ia32_crc32di(unsigned long long, unsigned long long);
extern double __builtin_cabs(_Complex double);
extern __attribute__((__vector_size__(8 * sizeof(char)))) char __builtin_ia32_pcmpgtb(__attribute__((__vector_size__(8 * sizeof(char)))) char, __attribute__((__vector_size__(8 * sizeof(char)))) char);
extern __attribute__((__vector_size__(2 * sizeof(int)))) int __builtin_ia32_pcmpgtd(__attribute__((__vector_size__(2 * sizeof(int)))) int, __attribute__((__vector_size__(2 * sizeof(int)))) int);
extern __attribute__((__vector_size__(2 * sizeof(long long)))) long long __builtin_ia32_pcmpgtq(__attribute__((__vector_size__(2 * sizeof(long long)))) long long, __attribute__((__vector_size__(2 * sizeof(long long)))) long long);
extern __attribute__((__vector_size__(16 * sizeof(char)))) char __builtin_ia32_psignb128(__attribute__((__vector_size__(16 * sizeof(char)))) char, __attribute__((__vector_size__(16 * sizeof(char)))) char);
extern __attribute__((__vector_size__(4 * sizeof(short)))) short __builtin_ia32_pcmpgtw(__attribute__((__vector_size__(4 * sizeof(short)))) short, __attribute__((__vector_size__(4 * sizeof(short)))) short);
extern __attribute__((__vector_size__(2 * sizeof(long long)))) long long __builtin_ia32_movntdqa(__attribute__((__vector_size__(2 * sizeof(long long)))) long long *);
extern void __builtin_unreachable();
extern int __builtin_fprintf(FILE *, const char *, ...);
extern void __sync_lock_release();
extern __attribute__((__vector_size__(2 * sizeof(int)))) int __builtin_ia32_pslldi(__attribute__((__vector_size__(2 * sizeof(int)))) int, int);
extern int __builtin_isgreaterequal();
extern void __builtin_unwind_init();
extern _Complex float __builtin_ctanf(_Complex float);
extern _Complex double __builtin_ctanh(_Complex double);
extern _Complex long double __builtin_ctanl(_Complex long double);
extern void __sync_fetch_and_and();
extern __attribute__((__vector_size__(4 * sizeof(double)))) double __builtin_ia32_cmppd256(__attribute__((__vector_size__(4 * sizeof(double)))) double, __attribute__((__vector_size__(4 * sizeof(double)))) double, char);
extern _Complex double __builtin_clog(_Complex double);
extern char *__builtin___strncpy_chk(char *, const char *, unsigned int, unsigned int);
extern double __builtin_log10(double);
extern double __builtin_lgamma(double);
extern unsigned int __builtin_ia32_crc32hi(unsigned int, unsigned short);
extern int __builtin___vprintf_chk(int, const char *, __builtin_va_list);
extern __attribute__((__vector_size__(4 * sizeof(short)))) short __builtin_ia32_packssdw(__attribute__((__vector_size__(2 * sizeof(int)))) int, __attribute__((__vector_size__(2 * sizeof(int)))) int);
extern void __sync_sub_and_fetch();
extern __attribute__((__vector_size__(16 * sizeof(char)))) char __builtin_ia32_pavgb128(__attribute__((__vector_size__(16 * sizeof(char)))) char, __attribute__((__vector_size__(16 * sizeof(char)))) char);
extern __attribute__((__vector_size__(1 * sizeof(long long)))) long long __builtin_ia32_por(__attribute__((__vector_size__(1 * sizeof(long long)))) long long, __attribute__((__vector_size__(1 * sizeof(long long)))) long long);
extern __attribute__((__vector_size__(8 * sizeof(short)))) short __builtin_ia32_phsubw128(__attribute__((__vector_size__(8 * sizeof(short)))) short, __attribute__((__vector_size__(8 * sizeof(short)))) short);
extern double __builtin_log1p(double);
extern _Complex double __builtin_ctan(_Complex double);
extern __attribute__((__vector_size__(4 * sizeof(int)))) int __builtin_ia32_psradi128(__attribute__((__vector_size__(4 * sizeof(int)))) int, int);
extern int __builtin___sprintf_chk(char *, int, unsigned int, const char *, ...);
extern short __sync_sub_and_fetch_2(volatile short *, short, ...);
extern float __builtin_log2f(float);
extern long double __builtin_log2l(long double);
extern int __sync_sub_and_fetch_4(volatile int *, int, ...);
extern char __sync_sub_and_fetch_1(volatile char *, char, ...);
extern long long __sync_sub_and_fetch_8(volatile long long *, long long, ...);
extern void __builtin_ia32_lfence();
extern __attribute__((__vector_size__(2 * sizeof(double)))) double __builtin_ia32_blendpd(__attribute__((__vector_size__(2 * sizeof(double)))) double, __attribute__((__vector_size__(2 * sizeof(double)))) double, int);
extern _Complex double __builtin_casin(_Complex double);
extern int __builtin_ia32_cvtss2si(__attribute__((__vector_size__(4 * sizeof(float)))) float);
extern int __builtin_ia32_vtestzpd(__attribute__((__vector_size__(2 * sizeof(double)))) double, __attribute__((__vector_size__(2 * sizeof(double)))) double);
extern __attribute__((__vector_size__(4 * sizeof(float)))) float __builtin_ia32_blendps(__attribute__((__vector_size__(4 * sizeof(float)))) float, __attribute__((__vector_size__(4 * sizeof(float)))) float, int);
extern double __builtin_remainder(double, double);
extern int __builtin_ia32_vtestzps(__attribute__((__vector_size__(4 * sizeof(float)))) float, __attribute__((__vector_size__(4 * sizeof(float)))) float);
extern __attribute__((__vector_size__(8 * sizeof(short)))) short __builtin_ia32_psrlwi128(__attribute__((__vector_size__(8 * sizeof(short)))) short, int);
extern void __builtin_bcopy(void *, void *, unsigned int);
extern void __builtin_ia32_storeupd(double *, __attribute__((__vector_size__(2 * sizeof(double)))) double);
extern int __builtin_ia32_comisdneq(__attribute__((__vector_size__(2 * sizeof(double)))) double, __attribute__((__vector_size__(2 * sizeof(double)))) double);
extern void __builtin_ia32_storeups(float *, __attribute__((__vector_size__(4 * sizeof(float)))) float);
extern __attribute__((__vector_size__(2 * sizeof(long long)))) long long __builtin_ia32_aesimc128(__attribute__((__vector_size__(2 * sizeof(long long)))) long long);
extern long long __builtin_llround(double);
extern double __builtin_acos(double);
extern double __builtin_sin(double);
extern _Complex double __builtin_cpow(_Complex double, _Complex double);
extern double __builtin_erfc(double);
extern float __builtin_erff(float);
extern long double __builtin_erfl(long double);
extern __attribute__((__vector_size__(2 * sizeof(double)))) double __builtin_ia32_hsubpd(__attribute__((__vector_size__(2 * sizeof(double)))) double, __attribute__((__vector_size__(2 * sizeof(double)))) double);
extern __attribute__((__vector_size__(2 * sizeof(long long)))) long long __builtin_ia32_psllqi128(__attribute__((__vector_size__(2 * sizeof(long long)))) long long, int);
extern __attribute__((__vector_size__(4 * sizeof(float)))) float __builtin_ia32_hsubps(__attribute__((__vector_size__(4 * sizeof(float)))) float, __attribute__((__vector_size__(4 * sizeof(float)))) float);
extern unsigned int __builtin_ia32_crc32qi(unsigned int, unsigned char);
extern __attribute__((__vector_size__(2 * sizeof(float)))) float __builtin_ia32_pfmax(__attribute__((__vector_size__(2 * sizeof(float)))) float, __attribute__((__vector_size__(2 * sizeof(float)))) float);
extern void __builtin_ia32_femms();
extern int __sync_fetch_and_max(volatile int *, int);
extern _Complex float __builtin_cacosf(_Complex float);
extern _Complex double __builtin_cacosh(_Complex double);
extern char *__builtin_strcat(char *, const char *);
extern _Complex long double __builtin_cacosl(_Complex long double);
extern double __builtin_ceil(double);
extern __attribute__((__vector_size__(1 * sizeof(long long)))) long long __builtin_ia32_psllqi(__attribute__((__vector_size__(1 * sizeof(long long)))) long long, int);
extern unsigned int __builtin_ia32_crc32si(unsigned int, unsigned int);
extern double __builtin_carg(_Complex double);
extern float __builtin_inff();
extern long double __builtin_infl();
extern __attribute__((__vector_size__(8 * sizeof(char)))) char __builtin_ia32_pmaddubsw(__attribute__((__vector_size__(8 * sizeof(char)))) char, __attribute__((__vector_size__(8 * sizeof(char)))) char);
extern __attribute__((__vector_size__(8 * sizeof(short)))) short __builtin_ia32_psrlw128(__attribute__((__vector_size__(8 * sizeof(short)))) short, __attribute__((__vector_size__(8 * sizeof(short)))) short);
extern __attribute__((__vector_size__(2 * sizeof(long long)))) long long __builtin_ia32_aesdec128(__attribute__((__vector_size__(2 * sizeof(long long)))) long long, __attribute__((__vector_size__(2 * sizeof(long long)))) long long);
extern __attribute__((__vector_size__(8 * sizeof(short)))) short __builtin_ia32_psrawi128(__attribute__((__vector_size__(8 * sizeof(short)))) short, int);
extern int __builtin_ia32_ucomieq(__attribute__((__vector_size__(4 * sizeof(float)))) float, __attribute__((__vector_size__(4 * sizeof(float)))) float);
extern char __sync_fetch_and_xor_1(volatile char *, char, ...);
extern double __builtin_expm1(double);
extern int __sync_fetch_and_xor_4(volatile int *, int, ...);
extern short __sync_fetch_and_xor_2(volatile short *, short, ...);
extern void __builtin_stdarg_start(__builtin_va_list &, ...);
extern void __sync_and_and_fetch();
extern long long __sync_fetch_and_xor_8(volatile long long *, long long, ...);
extern void __sync_fetch_and_xor();
extern char *__builtin___strcpy_chk(char *, const char *, unsigned int);
extern __attribute__((__vector_size__(1 * sizeof(long long)))) long long __builtin_ia32_pmuludq(__attribute__((__vector_size__(2 * sizeof(int)))) int, __attribute__((__vector_size__(2 * sizeof(int)))) int);
extern int __builtin_parity(unsigned int);
extern __int128_t __sync_add_and_fetch_16(volatile __int128_t *, __int128_t, ...);
extern __attribute__((__vector_size__(4 * sizeof(int)))) int __builtin_ia32_pminsd128(__attribute__((__vector_size__(4 * sizeof(int)))) int, __attribute__((__vector_size__(4 * sizeof(int)))) int);
extern int __builtin_ia32_ucomige(__attribute__((__vector_size__(4 * sizeof(float)))) float, __attribute__((__vector_size__(4 * sizeof(float)))) float);
extern double __builtin_floor(double);
extern int __builtin_ia32_ucomigt(__attribute__((__vector_size__(4 * sizeof(float)))) float, __attribute__((__vector_size__(4 * sizeof(float)))) float);
extern __attribute__((__vector_size__(4 * sizeof(short)))) short __builtin_ia32_pminsw(__attribute__((__vector_size__(4 * sizeof(short)))) short, __attribute__((__vector_size__(4 * sizeof(short)))) short);
extern __attribute__((__vector_size__(16 * sizeof(char)))) char __builtin_ia32_lddqu(const char *);
extern __attribute__((__vector_size__(4 * sizeof(short)))) short __builtin_ia32_psllwi(__attribute__((__vector_size__(4 * sizeof(short)))) short, int);
extern void __builtin_va_copy(__builtin_va_list &, __builtin_va_list &);
extern __attribute__((__vector_size__(2 * sizeof(float)))) float __builtin_ia32_pfmin(__attribute__((__vector_size__(2 * sizeof(float)))) float, __attribute__((__vector_size__(2 * sizeof(float)))) float);
extern __attribute__((__vector_size__(4 * sizeof(int)))) int __builtin_ia32_pmaxsd128(__attribute__((__vector_size__(4 * sizeof(int)))) int, __attribute__((__vector_size__(4 * sizeof(int)))) int);
extern char *__builtin_strchr(const char *, int);
extern __attribute__((__vector_size__(8 * sizeof(char)))) char __builtin_ia32_pminub(__attribute__((__vector_size__(8 * sizeof(char)))) char, __attribute__((__vector_size__(8 * sizeof(char)))) char);
extern double __builtin_fdim(double, double);
extern int __sync_fetch_and_min(volatile int *, int);
extern __attribute__((__vector_size__(4 * sizeof(int)))) int __builtin_ia32_cvttpd2dq(__attribute__((__vector_size__(2 * sizeof(double)))) double);
extern __int128_t __sync_sub_and_fetch_16(volatile __int128_t *, __int128_t, ...);
extern __attribute__((__vector_size__(4 * sizeof(int)))) int __builtin_ia32_pabsd128(__attribute__((__vector_size__(4 * sizeof(int)))) int);
extern __attribute__((__vector_size__(8 * sizeof(char)))) char __builtin_ia32_packsswb(__attribute__((__vector_size__(4 * sizeof(short)))) short, __attribute__((__vector_size__(4 * sizeof(short)))) short);
extern float __builtin_roundf(float);
extern __attribute__((__vector_size__(4 * sizeof(short)))) short __builtin_ia32_pmulhrsw(__attribute__((__vector_size__(4 * sizeof(short)))) short, __attribute__((__vector_size__(4 * sizeof(short)))) short);
extern long double __builtin_roundl(long double);
extern unsigned int __builtin_strcspn(const char *, const char *);
extern void __builtin_ia32_maskmovq(__attribute__((__vector_size__(8 * sizeof(char)))) char, __attribute__((__vector_size__(8 * sizeof(char)))) char, char *);
extern __attribute__((__vector_size__(4 * sizeof(int)))) int __builtin_ia32_pslldi128(__attribute__((__vector_size__(4 * sizeof(int)))) int, int);
extern int __builtin_ia32_ucomile(__attribute__((__vector_size__(4 * sizeof(float)))) float, __attribute__((__vector_size__(4 * sizeof(float)))) float);
extern __attribute__((__vector_size__(4 * sizeof(int)))) int __builtin_ia32_pslld128(__attribute__((__vector_size__(4 * sizeof(int)))) int, __attribute__((__vector_size__(4 * sizeof(int)))) int);
extern int __builtin_ia32_ucomilt(__attribute__((__vector_size__(4 * sizeof(float)))) float, __attribute__((__vector_size__(4 * sizeof(float)))) float);
extern float __builtin_modff(float, float *);
extern char __sync_fetch_and_or_1(volatile char *, char, ...);
extern short __sync_fetch_and_or_2(volatile short *, short, ...);
extern int __sync_fetch_and_or_4(volatile int *, int, ...);
extern long double __builtin_modfl(long double, long double *);
extern long long __sync_fetch_and_or_8(volatile long long *, long long, ...);
extern unsigned int __builtin_annotation(unsigned int, const char *);
extern void __atomic_signal_fence(int);
extern __attribute__((__vector_size__(1 * sizeof(long long)))) long long __builtin_ia32_pand(__attribute__((__vector_size__(1 * sizeof(long long)))) long long, __attribute__((__vector_size__(1 * sizeof(long long)))) long long);
extern double __builtin_frexp(double, int *);
extern __attribute__((__vector_size__(2 * sizeof(double)))) double __builtin_ia32_minpd(__attribute__((__vector_size__(2 * sizeof(double)))) double, __attribute__((__vector_size__(2 * sizeof(double)))) double);
extern __attribute__((__vector_size__(4 * sizeof(float)))) float __builtin_ia32_minps(__attribute__((__vector_size__(4 * sizeof(float)))) float, __attribute__((__vector_size__(4 * sizeof(float)))) float);
extern __attribute__((__vector_size__(4 * sizeof(int)))) int __builtin_ia32_pminud128(__attribute__((__vector_size__(4 * sizeof(int)))) int, __attribute__((__vector_size__(4 * sizeof(int)))) int);
extern int __builtin_ilogbl(long double);
extern float __builtin_fabsf(float);
extern long double __builtin_fabsl(long double);
extern int __builtin_isless();
extern int __builtin_ilogbf(float);
extern void __builtin_bzero(void *, unsigned int);
extern float __builtin_atanhf(float);
extern __attribute__((__vector_size__(8 * sizeof(float)))) float __builtin_ia32_rcpps256(__attribute__((__vector_size__(8 * sizeof(float)))) float);
extern __attribute__((__vector_size__(4 * sizeof(int)))) int __builtin_ia32_pmaxud128(__attribute__((__vector_size__(4 * sizeof(int)))) int, __attribute__((__vector_size__(4 * sizeof(int)))) int);
extern __attribute__((__vector_size__(4 * sizeof(short)))) short __builtin_ia32_phaddsw(__attribute__((__vector_size__(4 * sizeof(short)))) short, __attribute__((__vector_size__(4 * sizeof(short)))) short);
extern long double __builtin_atanhl(long double);
extern int __builtin_isgreater();
extern char *__builtin_strcpy(char *, const char *);
extern __attribute__((__vector_size__(2 * sizeof(double)))) double __builtin_ia32_minsd(__attribute__((__vector_size__(2 * sizeof(double)))) double, __attribute__((__vector_size__(2 * sizeof(double)))) double);
extern char __sync_xor_and_fetch_1(volatile char *, char, ...);
extern short __sync_xor_and_fetch_2(volatile short *, short, ...);
extern int __sync_xor_and_fetch_4(volatile int *, int, ...);
extern long long __sync_xor_and_fetch_8(volatile long long *, long long, ...);
extern __attribute__((__vector_size__(4 * sizeof(float)))) float __builtin_ia32_minss(__attribute__((__vector_size__(4 * sizeof(float)))) float, __attribute__((__vector_size__(4 * sizeof(float)))) float);
extern void __sync_xor_and_fetch();
extern _Complex double __builtin_cexp(_Complex double);
extern __attribute__((__vector_size__(2 * sizeof(float)))) float __builtin_ia32_pfrsqrt(__attribute__((__vector_size__(2 * sizeof(float)))) float);
extern int __builtin_ctzl(unsigned long);
extern float __builtin_tanf(float);
extern double __builtin_tanh(double);
extern long double __builtin_tanl(long double);
extern int __builtin_abs(int);
extern double __builtin_nexttoward(double, double);
extern __attribute__((__vector_size__(8 * sizeof(char)))) char __builtin_ia32_paddsb(__attribute__((__vector_size__(8 * sizeof(char)))) char, __attribute__((__vector_size__(8 * sizeof(char)))) char);
extern __attribute__((__vector_size__(8 * sizeof(short)))) short __builtin_ia32_psignw128(__attribute__((__vector_size__(8 * sizeof(short)))) short, __attribute__((__vector_size__(8 * sizeof(short)))) short);
extern __attribute__((__vector_size__(4 * sizeof(short)))) short __builtin_ia32_paddsw(__attribute__((__vector_size__(4 * sizeof(short)))) short, __attribute__((__vector_size__(4 * sizeof(short)))) short);
extern __attribute__((__vector_size__(2 * sizeof(long long)))) long long __builtin_ia32_psllq128(__attribute__((__vector_size__(2 * sizeof(long long)))) long long, __attribute__((__vector_size__(2 * sizeof(long long)))) long long);
extern __attribute__((__vector_size__(2 * sizeof(int)))) int __builtin_ia32_pfcmpeq(__attribute__((__vector_size__(2 * sizeof(float)))) float, __attribute__((__vector_size__(2 * sizeof(float)))) float);
extern void *__builtin___memcpy_chk(void *, const void *, unsigned int, unsigned int);
extern int __builtin_strncasecmp(const char *, const char *, unsigned int);
extern __int128_t __sync_fetch_and_or_16(volatile __int128_t *, __int128_t, ...);
extern __attribute__((__vector_size__(2 * sizeof(float)))) float __builtin_ia32_pfmul(__attribute__((__vector_size__(2 * sizeof(float)))) float, __attribute__((__vector_size__(2 * sizeof(float)))) float);
extern _Complex double __builtin_catan(_Complex double);
extern __attribute__((__vector_size__(2 * sizeof(float)))) float __builtin_ia32_pfrsqit1(__attribute__((__vector_size__(2 * sizeof(float)))) float, __attribute__((__vector_size__(2 * sizeof(float)))) float);
extern __attribute__((__vector_size__(2 * sizeof(int)))) int __builtin_ia32_cvttpd2pi(__attribute__((__vector_size__(2 * sizeof(double)))) double);
extern __attribute__((__vector_size__(2 * sizeof(int)))) int __builtin_ia32_pfcmpge(__attribute__((__vector_size__(2 * sizeof(float)))) float, __attribute__((__vector_size__(2 * sizeof(float)))) float);
extern __attribute__((__vector_size__(4 * sizeof(double)))) double __builtin_ia32_hsubpd256(__attribute__((__vector_size__(4 * sizeof(double)))) double, __attribute__((__vector_size__(4 * sizeof(double)))) double);
extern __attribute__((__vector_size__(8 * sizeof(float)))) float __builtin_ia32_sqrtps256(__attribute__((__vector_size__(8 * sizeof(float)))) float);
extern __attribute__((__vector_size__(2 * sizeof(int)))) int __builtin_ia32_pfcmpgt(__attribute__((__vector_size__(2 * sizeof(float)))) float, __attribute__((__vector_size__(2 * sizeof(float)))) float);
extern double __builtin_log(double);
extern float __builtin_fmaxf(float, float);
extern char *__builtin___strncat_chk(char *, const char *, unsigned int, unsigned int);
extern long double __builtin_fmaxl(long double, long double);
extern float __builtin_cimagf(_Complex float);
extern long double __builtin_cimagl(_Complex long double);
extern __attribute__((__vector_size__(8 * sizeof(short)))) short __builtin_ia32_pavgw128(__attribute__((__vector_size__(8 * sizeof(short)))) short, __attribute__((__vector_size__(8 * sizeof(short)))) short);
extern __attribute__((__vector_size__(8 * sizeof(short)))) short __builtin_ia32_psraw128(__attribute__((__vector_size__(8 * sizeof(short)))) short, __attribute__((__vector_size__(8 * sizeof(short)))) short);
extern __attribute__((__vector_size__(2 * sizeof(double)))) double __builtin_ia32_vpermilpd(__attribute__((__vector_size__(2 * sizeof(double)))) double, char);
extern double __builtin_tan(double);
extern __attribute__((__vector_size__(8 * sizeof(short)))) short __builtin_ia32_psllwi128(__attribute__((__vector_size__(8 * sizeof(short)))) short, int);
extern __attribute__((__vector_size__(8 * sizeof(char)))) char __builtin_ia32_psubb(__attribute__((__vector_size__(8 * sizeof(char)))) char, __attribute__((__vector_size__(8 * sizeof(char)))) char);
extern double __builtin_asin(double);
extern void *__builtin___mempcpy_chk(void *, const void *, unsigned int, unsigned int);
extern __attribute__((__vector_size__(4 * sizeof(float)))) float __builtin_ia32_vpermilps(__attribute__((__vector_size__(4 * sizeof(float)))) float, char);
extern char *__builtin_index(const char *, int);
extern __attribute__((__vector_size__(1 * sizeof(long long)))) long long __builtin_ia32_psubq(__attribute__((__vector_size__(1 * sizeof(long long)))) long long, __attribute__((__vector_size__(1 * sizeof(long long)))) long long);
extern __attribute__((__vector_size__(4 * sizeof(short)))) short __builtin_ia32_psubw(__attribute__((__vector_size__(4 * sizeof(short)))) short, __attribute__((__vector_size__(4 * sizeof(short)))) short);
extern __attribute__((__vector_size__(2 * sizeof(int)))) int __builtin_ia32_psubd(__attribute__((__vector_size__(2 * sizeof(int)))) int, __attribute__((__vector_size__(2 * sizeof(int)))) int);
extern _Complex float __builtin_catanhf(_Complex float);
extern _Complex long double __builtin_catanhl(_Complex long double);
extern int __builtin_isinf_sign();
extern double __builtin_huge_val();
extern __int128_t __sync_fetch_and_add_16(volatile __int128_t *, __int128_t, ...);
extern float __builtin_asinf(float);
extern double __builtin_asinh(double);
extern __attribute__((__vector_size__(4 * sizeof(double)))) double __builtin_ia32_haddpd256(__attribute__((__vector_size__(4 * sizeof(double)))) double, __attribute__((__vector_size__(4 * sizeof(double)))) double);
extern long double __builtin_asinl(long double);
extern _Complex long double __builtin_ctanhl(_Complex long double);
extern _Complex float __builtin_ctanhf(_Complex float);
extern void __builtin_eh_return(unsigned int, void *);
extern _Complex float __builtin_csqrtf(_Complex float);
extern _Complex long double __builtin_csqrtl(_Complex long double);
extern double __builtin_fabs(double);
extern char *__builtin_strncat(char *, const char *, unsigned int);
extern void __atomic_load();
extern unsigned long long __builtin_extend_pointer(void *);
extern __attribute__((__vector_size__(4 * sizeof(float)))) float __builtin_ia32_rsqrtps(__attribute__((__vector_size__(4 * sizeof(float)))) float);
extern float __builtin_fminf(float, float);
extern double __builtin_scalbn(double, int);
extern long double __builtin_fminl(long double, long double);
extern __attribute__((__vector_size__(8 * sizeof(char)))) char __builtin_ia32_pshufb(__attribute__((__vector_size__(8 * sizeof(char)))) char, __attribute__((__vector_size__(8 * sizeof(char)))) char);
extern int __builtin_ia32_pmovmskb(__attribute__((__vector_size__(8 * sizeof(char)))) char);
extern __attribute__((__vector_size__(4 * sizeof(short)))) short __builtin_ia32_pshufw(__attribute__((__vector_size__(4 * sizeof(short)))) short, char);
extern __attribute__((__vector_size__(1 * sizeof(long long)))) long long __builtin_ia32_pxor(__attribute__((__vector_size__(1 * sizeof(long long)))) long long, __attribute__((__vector_size__(1 * sizeof(long long)))) long long);
extern int __builtin___vfprintf_chk(FILE *, int, const char *, __builtin_va_list);
extern int __builtin_signbit(double);
extern double __builtin_pow(double, double);
extern double __builtin_tgamma(double);
extern __attribute__((__vector_size__(4 * sizeof(int)))) int __builtin_ia32_phsubd128(__attribute__((__vector_size__(4 * sizeof(int)))) int, __attribute__((__vector_size__(4 * sizeof(int)))) int);
extern __attribute__((__vector_size__(4 * sizeof(float)))) float __builtin_ia32_rsqrtss(__attribute__((__vector_size__(4 * sizeof(float)))) float);
extern int __builtin_ia32_ptestz128(__attribute__((__vector_size__(2 * sizeof(long long)))) long long, __attribute__((__vector_size__(2 * sizeof(long long)))) long long);
extern __attribute__((__vector_size__(4 * sizeof(int)))) int __builtin_ia32_cvtps2dq(__attribute__((__vector_size__(4 * sizeof(float)))) float);
extern float __builtin_fdimf(float, float);
extern long double __builtin_fdiml(long double, long double);
extern float __builtin_acoshf(float);
extern long double __builtin_acoshl(long double);
extern __attribute__((__vector_size__(4 * sizeof(short)))) short __builtin_ia32_psadbw(__attribute__((__vector_size__(8 * sizeof(char)))) char, __attribute__((__vector_size__(8 * sizeof(char)))) char);
extern void *__builtin_frame_address(unsigned int);
extern _Complex float __builtin_csinf(_Complex float);
extern _Complex double __builtin_csinh(_Complex double);
extern _Complex long double __builtin_csinl(_Complex long double);
extern char *__builtin_stpncpy(char *, const char *, unsigned int);
extern long __builtin_lrint(double);
extern long __builtin_lrintf(float);
extern long __builtin_lrintl(long double);
extern void __builtin_ia32_clflush(const void *);
extern double __builtin_scalbln(double, long);
extern __int128_t __sync_fetch_and_xor_16(volatile __int128_t *, __int128_t, ...);
extern double __builtin_cbrt(double);
extern char *__builtin___strcat_chk(char *, const char *, unsigned int);
extern float __builtin_scalbnf(float, int);
extern long double __builtin_scalbnl(long double, int);
extern float __builtin_expm1f(float);
extern __attribute__((__vector_size__(8 * sizeof(float)))) float __builtin_ia32_minps256(__attribute__((__vector_size__(8 * sizeof(float)))) float, __attribute__((__vector_size__(8 * sizeof(float)))) float);
extern int __builtin_fpclassify(int, int, int, int, ...);
extern long double __builtin_expm1l(long double);
extern int __builtin_classify_type();
extern int __builtin_isnormal();
extern int __builtin_strncmp(const char *, const char *, unsigned int);
extern float __builtin_sinhf(float);
extern __attribute__((__vector_size__(4 * sizeof(short)))) short __builtin_ia32_phsubsw(__attribute__((__vector_size__(4 * sizeof(short)))) short, __attribute__((__vector_size__(4 * sizeof(short)))) short);
extern void *__builtin___memset_chk(void *, int, unsigned int, unsigned int);
extern long double __builtin_sinhl(long double);
extern char __sync_fetch_and_and_1(volatile char *, char, ...);
extern short __sync_fetch_and_and_2(volatile short *, short, ...);
extern __attribute__((__vector_size__(8 * sizeof(float)))) float __builtin_ia32_maxps256(__attribute__((__vector_size__(8 * sizeof(float)))) float, __attribute__((__vector_size__(8 * sizeof(float)))) float);
extern long long __sync_fetch_and_and_8(volatile long long *, long long, ...);
extern void __debugbreak();
extern long __builtin_lroundf(float);
extern long __builtin_lroundl(long double);
extern double __builtin_creal(_Complex double);
extern float __builtin_logbf(float);
extern int __sync_fetch_and_and_4(volatile int *, int, ...);
extern _Complex float __builtin_cacoshf(_Complex float);
extern __attribute__((__vector_size__(4 * sizeof(int)))) int __builtin_ia32_psrld128(__attribute__((__vector_size__(4 * sizeof(int)))) int, __attribute__((__vector_size__(4 * sizeof(int)))) int);
extern __attribute__((__vector_size__(2 * sizeof(double)))) double __builtin_ia32_sqrtpd(__attribute__((__vector_size__(2 * sizeof(double)))) double);
extern long double __builtin_logbl(long double);
extern _Complex float __builtin_ccoshf(_Complex float);
extern _Complex long double __builtin_ccoshl(_Complex long double);
extern __attribute__((__vector_size__(8 * sizeof(char)))) char __builtin_ia32_psubsb(__attribute__((__vector_size__(8 * sizeof(char)))) char, __attribute__((__vector_size__(8 * sizeof(char)))) char);
extern double __builtin_erf(double);
extern int __builtin_ia32_comineq(__attribute__((__vector_size__(4 * sizeof(float)))) float, __attribute__((__vector_size__(4 * sizeof(float)))) float);
extern __int128_t __sync_or_and_fetch_16(volatile __int128_t *, __int128_t, ...);
extern _Complex long double __builtin_cacoshl(_Complex long double);
extern __attribute__((__vector_size__(8 * sizeof(char)))) char __builtin_ia32_psignb(__attribute__((__vector_size__(8 * sizeof(char)))) char, __attribute__((__vector_size__(8 * sizeof(char)))) char);
extern __attribute__((__vector_size__(4 * sizeof(short)))) short __builtin_ia32_psubsw(__attribute__((__vector_size__(4 * sizeof(short)))) short, __attribute__((__vector_size__(4 * sizeof(short)))) short);
extern __attribute__((__vector_size__(2 * sizeof(int)))) int __builtin_ia32_psignd(__attribute__((__vector_size__(2 * sizeof(int)))) int, __attribute__((__vector_size__(2 * sizeof(int)))) int);
extern __attribute__((__vector_size__(8 * sizeof(char)))) char __builtin_ia32_pcmpeqb(__attribute__((__vector_size__(8 * sizeof(char)))) char, __attribute__((__vector_size__(8 * sizeof(char)))) char);
extern __attribute__((__vector_size__(2 * sizeof(int)))) int __builtin_ia32_pcmpeqd(__attribute__((__vector_size__(2 * sizeof(int)))) int, __attribute__((__vector_size__(2 * sizeof(int)))) int);
extern char *__builtin_strncpy(char *, const char *, unsigned int);
extern __attribute__((__vector_size__(4 * sizeof(float)))) float __builtin_ia32_sqrtps(__attribute__((__vector_size__(4 * sizeof(float)))) float);
extern __attribute__((__vector_size__(2 * sizeof(long long)))) long long __builtin_ia32_pcmpeqq(__attribute__((__vector_size__(2 * sizeof(long long)))) long long, __attribute__((__vector_size__(2 * sizeof(long long)))) long long);
extern __attribute__((__vector_size__(4 * sizeof(short)))) short __builtin_ia32_psignw(__attribute__((__vector_size__(4 * sizeof(short)))) short, __attribute__((__vector_size__(4 * sizeof(short)))) short);
extern __attribute__((__vector_size__(2 * sizeof(double)))) double __builtin_ia32_cvtps2pd(__attribute__((__vector_size__(4 * sizeof(float)))) float);
extern __attribute__((__vector_size__(2 * sizeof(float)))) float __builtin_ia32_pfrcp(__attribute__((__vector_size__(2 * sizeof(float)))) float);
extern __attribute__((__vector_size__(2 * sizeof(int)))) int __builtin_ia32_cvtps2pi(__attribute__((__vector_size__(4 * sizeof(float)))) float);
extern __attribute__((__vector_size__(4 * sizeof(short)))) short __builtin_ia32_pcmpeqw(__attribute__((__vector_size__(4 * sizeof(short)))) short, __attribute__((__vector_size__(4 * sizeof(short)))) short);
extern double __builtin_round(double);
extern __attribute__((__vector_size__(8 * sizeof(char)))) char __builtin_ia32_pabsb(__attribute__((__vector_size__(8 * sizeof(char)))) char);
extern __attribute__((__vector_size__(2 * sizeof(int)))) int __builtin_ia32_pabsd(__attribute__((__vector_size__(2 * sizeof(int)))) int);
extern _Complex double __builtin_cproj(_Complex double);
extern __attribute__((__vector_size__(8 * sizeof(char)))) char __builtin_ia32_pavgusb(__attribute__((__vector_size__(8 * sizeof(char)))) char, __attribute__((__vector_size__(8 * sizeof(char)))) char);
extern int __builtin___snprintf_chk(char *, unsigned int, int, unsigned int, const char *, ...);
extern __attribute__((__vector_size__(4 * sizeof(short)))) short __builtin_ia32_pabsw(__attribute__((__vector_size__(4 * sizeof(short)))) short);
extern __attribute__((__vector_size__(2 * sizeof(double)))) double __builtin_ia32_sqrtsd(__attribute__((__vector_size__(2 * sizeof(double)))) double);
extern void __builtin_longjmp(void **, int);
extern __attribute__((__vector_size__(2 * sizeof(long long)))) long long __builtin_ia32_aesenc128(__attribute__((__vector_size__(2 * sizeof(long long)))) long long, __attribute__((__vector_size__(2 * sizeof(long long)))) long long);
extern void *__builtin_mempcpy(void *, const void *, unsigned int);
extern int __builtin_ia32_cvtsd2si(__attribute__((__vector_size__(2 * sizeof(double)))) double);
extern __attribute__((__vector_size__(4 * sizeof(float)))) float __builtin_ia32_sqrtss(__attribute__((__vector_size__(4 * sizeof(float)))) float);
extern double __builtin_inf();
extern double __builtin_modf(double, double *);
extern char *__builtin_strrchr(const char *, int);
extern void __builtin_ia32_ldmxcsr(unsigned int);
extern float __builtin_log10f(float);
extern long double __builtin_log10l(long double);
extern long double __builtin_ldexpl(long double, int);
extern __attribute__((__vector_size__(2 * sizeof(int)))) int __builtin_ia32_pf2iw(__attribute__((__vector_size__(2 * sizeof(float)))) float);
extern __int128_t __sync_xor_and_fetch_16(volatile __int128_t *, __int128_t, ...);
extern __attribute__((__vector_size__(2 * sizeof(int)))) int __builtin_ia32_psrad(__attribute__((__vector_size__(2 * sizeof(int)))) int, __attribute__((__vector_size__(1 * sizeof(long long)))) long long);
extern unsigned int __builtin_strspn(const char *, const char *);
extern double __builtin_exp(double);
extern float __builtin_ldexpf(float, int);
extern __attribute__((__vector_size__(2 * sizeof(long long)))) long long __builtin_ia32_psrlq128(__attribute__((__vector_size__(2 * sizeof(long long)))) long long, __attribute__((__vector_size__(2 * sizeof(long long)))) long long);
extern __attribute__((__vector_size__(4 * sizeof(short)))) short __builtin_ia32_psraw(__attribute__((__vector_size__(4 * sizeof(short)))) short, __attribute__((__vector_size__(1 * sizeof(long long)))) long long);
extern __attribute__((__vector_size__(2 * sizeof(double)))) double __builtin_ia32_blendvpd(__attribute__((__vector_size__(2 * sizeof(double)))) double, __attribute__((__vector_size__(2 * sizeof(double)))) double, __attribute__((__vector_size__(2 * sizeof(double)))) double);
extern double __builtin_atan(double);
extern __attribute__((__vector_size__(2 * sizeof(int)))) int __builtin_ia32_pf2id(__attribute__((__vector_size__(2 * sizeof(float)))) float);
extern __attribute__((__vector_size__(8 * sizeof(short)))) short __builtin_ia32_pmulhw128(__attribute__((__vector_size__(8 * sizeof(short)))) short, __attribute__((__vector_size__(8 * sizeof(short)))) short);
extern _Complex float __builtin_clogf(_Complex float);
extern _Complex long double __builtin_clogl(_Complex long double);
extern __attribute__((__vector_size__(4 * sizeof(float)))) float __builtin_ia32_blendvps(__attribute__((__vector_size__(4 * sizeof(float)))) float, __attribute__((__vector_size__(4 * sizeof(float)))) float, __attribute__((__vector_size__(4 * sizeof(float)))) float);
extern float __builtin_fmaf(float, float, float);
extern long double __builtin_fmal(long double, long double, long double);
extern _Complex float __builtin_catanf(_Complex float);
extern _Complex double __builtin_catanh(_Complex double);
extern __attribute__((__vector_size__(16 * sizeof(char)))) char __builtin_ia32_pshufb128(__attribute__((__vector_size__(16 * sizeof(char)))) char, __attribute__((__vector_size__(16 * sizeof(char)))) char);
extern double __builtin_fmax(double, double);
extern _Complex long double __builtin_catanl(_Complex long double);
extern int __builtin_vsprintf(char *, const char *, __builtin_va_list);
extern __int128_t __sync_fetch_and_sub_16(volatile __int128_t *, __int128_t, ...);
extern void __sync_or_and_fetch();
extern long long __builtin_llroundf(float);
extern long long __builtin_llroundl(long double);
extern char *__builtin_strstr(const char *, const char *);
extern __attribute__((__vector_size__(2 * sizeof(double)))) double __builtin_ia32_cvtdq2pd(__attribute__((__vector_size__(4 * sizeof(int)))) int);
extern __attribute__((__vector_size__(1 * sizeof(long long)))) long long __builtin_ia32_pandn(__attribute__((__vector_size__(1 * sizeof(long long)))) long long, __attribute__((__vector_size__(1 * sizeof(long long)))) long long);
extern __attribute__((__vector_size__(2 * sizeof(double)))) double __builtin_ia32_cmppd(__attribute__((__vector_size__(2 * sizeof(double)))) double, __attribute__((__vector_size__(2 * sizeof(double)))) double, char);
extern float __builtin_ceilf(float);
extern __attribute__((__vector_size__(4 * sizeof(float)))) float __builtin_ia32_cvtdq2ps(__attribute__((__vector_size__(4 * sizeof(int)))) int);
extern int __builtin_parityl(unsigned long);
extern long double __builtin_ceill(long double);
extern void __atomic_exchange();
extern __attribute__((__vector_size__(4 * sizeof(float)))) float __builtin_ia32_cmpps(__attribute__((__vector_size__(4 * sizeof(float)))) float, __attribute__((__vector_size__(4 * sizeof(float)))) float, char);
extern __attribute__((__vector_size__(2 * sizeof(int)))) int __builtin_ia32_phaddd(__attribute__((__vector_size__(2 * sizeof(int)))) int, __attribute__((__vector_size__(2 * sizeof(int)))) int);
extern char __sync_add_and_fetch_1(volatile char *, char, ...);
extern __attribute__((__vector_size__(16 * sizeof(char)))) char __builtin_ia32_psubsb128(__attribute__((__vector_size__(16 * sizeof(char)))) char, __attribute__((__vector_size__(16 * sizeof(char)))) char);
extern short __sync_add_and_fetch_2(volatile short *, short, ...);
extern long long __sync_add_and_fetch_8(volatile long long *, long long, ...);
extern __attribute__((__vector_size__(4 * sizeof(short)))) short __builtin_ia32_phaddw(__attribute__((__vector_size__(4 * sizeof(short)))) short, __attribute__((__vector_size__(4 * sizeof(short)))) short);
extern void __builtin_ia32_mwait(unsigned int, unsigned int);
extern int __sync_add_and_fetch_4(volatile int *, int, ...);
extern char *__builtin___stpcpy_chk(char *, const char *, unsigned int);
extern _Complex double __builtin_csqrt(_Complex double);
extern char *__builtin_strdup(const char *);
extern int __builtin_printf(const char *, ...);
extern double __builtin_hypot(double, double);
extern _Complex float __builtin_cexpf(_Complex float);
extern _Complex long double __builtin_cexpl(_Complex long double);
extern __attribute__((__vector_size__(2 * sizeof(double)))) double __builtin_ia32_cmpsd(__attribute__((__vector_size__(2 * sizeof(double)))) double, __attribute__((__vector_size__(2 * sizeof(double)))) double, char);
extern char __sync_and_and_fetch_1(volatile char *, char, ...);
extern void __atomic_thread_fence(int);
extern void *__builtin___memmove_chk(void *, const void *, unsigned int, unsigned int);
extern int __sync_and_and_fetch_4(volatile int *, int, ...);
extern unsigned int __sync_fetch_and_umax(volatile unsigned int *, unsigned int);
extern double __builtin_copysign(double, double);
extern __attribute__((__vector_size__(4 * sizeof(int)))) int __builtin_ia32_psignd128(__attribute__((__vector_size__(4 * sizeof(int)))) int, __attribute__((__vector_size__(4 * sizeof(int)))) int);
extern __attribute__((__vector_size__(4 * sizeof(float)))) float __builtin_ia32_cmpss(__attribute__((__vector_size__(4 * sizeof(float)))) float, __attribute__((__vector_size__(4 * sizeof(float)))) float, char);
extern int __builtin_ffsll(unsigned long long);
extern int __builtin_ia32_ptestc128(__attribute__((__vector_size__(2 * sizeof(long long)))) long long, __attribute__((__vector_size__(2 * sizeof(long long)))) long long);
extern long long __sync_and_and_fetch_8(volatile long long *, long long, ...);
extern short __sync_and_and_fetch_2(volatile short *, short, ...);
extern int __builtin_ia32_movmskpd(__attribute__((__vector_size__(2 * sizeof(double)))) double);
extern int __builtin_ia32_movmskps(__attribute__((__vector_size__(4 * sizeof(float)))) float);
extern int __builtin_popcountll(unsigned long long);
extern int __builtin_isinf();
extern float __builtin_scalblnf(float, long);
extern double __builtin_fmin(double, double);
extern float __builtin_acosf(float);
extern double __builtin_acosh(double);
extern __attribute__((__vector_size__(8 * sizeof(char)))) char __builtin_ia32_paddusb(__attribute__((__vector_size__(8 * sizeof(char)))) char, __attribute__((__vector_size__(8 * sizeof(char)))) char);
extern long double __builtin_acosl(long double);
extern long double __builtin_scalblnl(long double, long);
extern __attribute__((__vector_size__(16 * sizeof(char)))) char __builtin_ia32_paddsb128(__attribute__((__vector_size__(16 * sizeof(char)))) char, __attribute__((__vector_size__(16 * sizeof(char)))) char);
extern unsigned int __builtin_object_size(const void *, int);
extern double __builtin_ldexp(double, int);
extern void __builtin_ia32_storedqu(char *, __attribute__((__vector_size__(16 * sizeof(char)))) char);
extern __attribute__((__vector_size__(4 * sizeof(short)))) short __builtin_ia32_paddusw(__attribute__((__vector_size__(4 * sizeof(short)))) short, __attribute__((__vector_size__(4 * sizeof(short)))) short);
extern _Complex float __builtin_conjf(_Complex float);
extern __attribute__((__vector_size__(2 * sizeof(int)))) int __builtin_ia32_psrld(__attribute__((__vector_size__(2 * sizeof(int)))) int, __attribute__((__vector_size__(1 * sizeof(long long)))) long long);
extern float __builtin_lgammaf(float);
extern _Complex long double __builtin_conjl(_Complex long double);
extern long double __builtin_lgammal(long double);
extern __attribute__((__vector_size__(1 * sizeof(long long)))) long long __builtin_ia32_psrlq(__attribute__((__vector_size__(1 * sizeof(long long)))) long long, __attribute__((__vector_size__(1 * sizeof(long long)))) long long);
extern void __sync_fetch_and_or();
extern __attribute__((__vector_size__(4 * sizeof(short)))) short __builtin_ia32_psrlw(__attribute__((__vector_size__(4 * sizeof(short)))) short, __attribute__((__vector_size__(1 * sizeof(long long)))) long long);
extern int __builtin_ia32_comisdeq(__attribute__((__vector_size__(2 * sizeof(double)))) double, __attribute__((__vector_size__(2 * sizeof(double)))) double);
extern void __atomic_fetch_sub();
extern void __sync_lock_release_1(volatile char *, ...);
extern void __sync_lock_release_2(volatile short *, ...);
extern __attribute__((__vector_size__(8 * sizeof(short)))) short __builtin_ia32_phaddw128(__attribute__((__vector_size__(8 * sizeof(short)))) short, __attribute__((__vector_size__(8 * sizeof(short)))) short);
extern void __sync_lock_release_4(volatile int *, ...);
extern __attribute__((__vector_size__(4 * sizeof(int)))) int __builtin_ia32_psrad128(__attribute__((__vector_size__(4 * sizeof(int)))) int, __attribute__((__vector_size__(4 * sizeof(int)))) int);
extern void __sync_lock_release_8(volatile long long *, ...);
extern int __builtin_ia32_comisdge(__attribute__((__vector_size__(2 * sizeof(double)))) double, __attribute__((__vector_size__(2 * sizeof(double)))) double);
extern __attribute__((__vector_size__(8 * sizeof(char)))) char __builtin_ia32_punpckhbw(__attribute__((__vector_size__(8 * sizeof(char)))) char, __attribute__((__vector_size__(8 * sizeof(char)))) char);
extern double __builtin_cimag(_Complex double);
extern void __builtin_ia32_mfence();
extern int __builtin_ia32_comisdgt(__attribute__((__vector_size__(2 * sizeof(double)))) double, __attribute__((__vector_size__(2 * sizeof(double)))) double);
extern float __builtin_sinf(float);
extern double __builtin_sinh(double);
extern long double __builtin_sinl(long double);
extern int __builtin_islessgreater();
extern float __builtin_nanf(const char *);
extern long double __builtin_nanl(const char *);
extern int __builtin___vsprintf_chk(char *, int, unsigned int, const char *, __builtin_va_list);
extern double __builtin_nans(const char *);
extern __attribute__((__vector_size__(16 * sizeof(char)))) char __builtin_ia32_pminsb128(__attribute__((__vector_size__(16 * sizeof(char)))) char, __attribute__((__vector_size__(16 * sizeof(char)))) char);
extern int __builtin_snprintf(char *, unsigned int, const char *, ...);
extern int __builtin_strcasecmp(const char *, const char *);
extern unsigned int __sync_fetch_and_umin(volatile unsigned int *, unsigned int);
extern __attribute__((__vector_size__(2 * sizeof(int)))) int __builtin_ia32_punpckhdq(__attribute__((__vector_size__(2 * sizeof(int)))) int, __attribute__((__vector_size__(2 * sizeof(int)))) int);
extern int __builtin_ffs(unsigned int);
extern void __builtin_shufflevector();
extern double __builtin_fmod(double, double);
extern double __builtin_nearbyint(double);
extern char __sync_swap_1(volatile char *, char, ...);
extern short __sync_swap_2(volatile short *, short, ...);
extern int __sync_swap_4(volatile int *, int, ...);
extern long long __sync_swap_8(volatile long long *, long long, ...);
extern double __builtin_remquo(double, double, int *);
extern void __builtin_ia32_monitor(void *, unsigned int, unsigned int);
extern _Complex float __builtin_cprojf(_Complex float);
extern _Complex long double __builtin_cprojl(_Complex long double);
extern __attribute__((__vector_size__(16 * sizeof(char)))) char __builtin_ia32_pmaxsb128(__attribute__((__vector_size__(16 * sizeof(char)))) char, __attribute__((__vector_size__(16 * sizeof(char)))) char);
extern __int128_t __sync_fetch_and_and_16(volatile __int128_t *, __int128_t, ...);
extern float __builtin_cabsf(_Complex float);
extern long double __builtin_cabsl(_Complex long double);
extern void __builtin_ia32_storehps(__attribute__((__vector_size__(2 * sizeof(int)))) int *, __attribute__((__vector_size__(4 * sizeof(float)))) float);
extern __attribute__((__vector_size__(8 * sizeof(float)))) float __builtin_ia32_cmpps256(__attribute__((__vector_size__(8 * sizeof(float)))) float, __attribute__((__vector_size__(8 * sizeof(float)))) float, char);
extern _Complex double __builtin_ccosh(_Complex double);
extern _Complex float __builtin_ccosf(_Complex float);
extern char __sync_or_and_fetch_1(volatile char *, char, ...);
extern _Complex long double __builtin_ccosl(_Complex long double);
extern short __sync_or_and_fetch_2(volatile short *, short, ...);
extern __attribute__((__vector_size__(4 * sizeof(short)))) short __builtin_ia32_pmaxsw(__attribute__((__vector_size__(4 * sizeof(short)))) short, __attribute__((__vector_size__(4 * sizeof(short)))) short);
extern long long __sync_or_and_fetch_8(volatile long long *, long long, ...);
extern float __builtin_hypotf(float, float);
extern int __sync_or_and_fetch_4(volatile int *, int, ...);
extern long long __builtin_llrintf(float);
extern __attribute__((__vector_size__(16 * sizeof(char)))) char __builtin_ia32_pabsb128(__attribute__((__vector_size__(16 * sizeof(char)))) char);
extern long long __builtin_llrintl(long double);
extern int __builtin_ia32_ucomineq(__attribute__((__vector_size__(4 * sizeof(float)))) float, __attribute__((__vector_size__(4 * sizeof(float)))) float);
extern long double __builtin_hypotl(long double, long double);
extern _Complex double __builtin_ccos(_Complex double);
extern int __builtin_ia32_comisdle(__attribute__((__vector_size__(2 * sizeof(double)))) double, __attribute__((__vector_size__(2 * sizeof(double)))) double);
extern int __builtin_ia32_comisdlt(__attribute__((__vector_size__(2 * sizeof(double)))) double, __attribute__((__vector_size__(2 * sizeof(double)))) double);
extern int __builtin_ia32_ptestz256(__attribute__((__vector_size__(4 * sizeof(long long)))) long long, __attribute__((__vector_size__(4 * sizeof(long long)))) long long);
extern __attribute__((__vector_size__(8 * sizeof(char)))) char __builtin_ia32_pmaxub(__attribute__((__vector_size__(8 * sizeof(char)))) char, __attribute__((__vector_size__(8 * sizeof(char)))) char);
extern double __builtin_nextafter(double, double);
extern int __builtin_setjmp(void **) __attribute((returns_twice));
extern void __builtin_ia32_movntdq(__attribute__((__vector_size__(2 * sizeof(long long)))) long long *, __attribute__((__vector_size__(2 * sizeof(long long)))) long long);
extern int __builtin_ctzll(unsigned long long);
extern __attribute__((__vector_size__(2 * sizeof(int)))) int __builtin_ia32_psrldi(__attribute__((__vector_size__(2 * sizeof(int)))) int, int);
extern __attribute__((__vector_size__(8 * sizeof(char)))) char __builtin_ia32_punpcklbw(__attribute__((__vector_size__(8 * sizeof(char)))) char, __attribute__((__vector_size__(8 * sizeof(char)))) char);
extern double __builtin_fma(double, double, double);
extern float __builtin_nansf(const char *);
extern float __builtin_cbrtf(float);
extern void __atomic_fetch_add();
extern long double __builtin_cbrtl(long double);
extern long double __builtin_nansl(const char *);
extern void __builtin_trap();
extern __attribute__((__vector_size__(2 * sizeof(int)))) int __builtin_ia32_pswapdsi(__attribute__((__vector_size__(2 * sizeof(int)))) int);
extern __attribute__((__vector_size__(2 * sizeof(float)))) float __builtin_ia32_pswapdsf(__attribute__((__vector_size__(2 * sizeof(float)))) float);
extern __attribute__((__vector_size__(4 * sizeof(double)))) double __builtin_ia32_sqrtpd256(__attribute__((__vector_size__(4 * sizeof(double)))) double);
extern void __builtin_ia32_movnti(int *, int);
extern void __builtin_ia32_movntq(__attribute__((__vector_size__(1 * sizeof(long long)))) long long *, __attribute__((__vector_size__(1 * sizeof(long long)))) long long);
extern __attribute__((__vector_size__(16 * sizeof(char)))) char __builtin_ia32_pminub128(__attribute__((__vector_size__(16 * sizeof(char)))) char, __attribute__((__vector_size__(16 * sizeof(char)))) char);
extern __attribute__((__vector_size__(8 * sizeof(char)))) char __builtin_ia32_pavgb(__attribute__((__vector_size__(8 * sizeof(char)))) char, __attribute__((__vector_size__(8 * sizeof(char)))) char);
extern __attribute__((__vector_size__(2 * sizeof(int)))) int __builtin_ia32_punpckldq(__attribute__((__vector_size__(2 * sizeof(int)))) int, __attribute__((__vector_size__(2 * sizeof(int)))) int);
extern __attribute__((__vector_size__(4 * sizeof(short)))) short __builtin_ia32_pavgw(__attribute__((__vector_size__(4 * sizeof(short)))) short, __attribute__((__vector_size__(4 * sizeof(short)))) short);
extern unsigned int __builtin_ia32_stmxcsr();
extern float __builtin_exp2f(float);
extern __attribute__((__vector_size__(2 * sizeof(double)))) double __builtin_ia32_maxpd(__attribute__((__vector_size__(2 * sizeof(double)))) double, __attribute__((__vector_size__(2 * sizeof(double)))) double);
extern long double __builtin_exp2l(long double);
extern int __builtin_ilogb(double);
extern float __builtin_frexpf(float, int *);
extern long double __builtin_frexpl(long double, int *);
extern __attribute__((__vector_size__(4 * sizeof(float)))) float __builtin_ia32_maxps(__attribute__((__vector_size__(4 * sizeof(float)))) float, __attribute__((__vector_size__(4 * sizeof(float)))) float);
extern __attribute__((__vector_size__(16 * sizeof(char)))) char __builtin_ia32_pmaxub128(__attribute__((__vector_size__(16 * sizeof(char)))) char, __attribute__((__vector_size__(16 * sizeof(char)))) char);
extern short __sync_fetch_and_add_2(volatile short *, short, ...);
extern char *__builtin_stpcpy(char *, const char *);
extern void __builtin_ia32_storelps(__attribute__((__vector_size__(2 * sizeof(int)))) int *, __attribute__((__vector_size__(4 * sizeof(float)))) float);
extern long long __sync_fetch_and_add_8(volatile long long *, long long, ...);
extern char __sync_fetch_and_add_1(volatile char *, char, ...);
extern void __atomic_fetch_or();
extern void *__builtin_return_address(unsigned int);
extern double __builtin_nan(const char *);
extern void __sync_lock_test_and_set();
extern __attribute__((__vector_size__(2 * sizeof(double)))) double __builtin_ia32_maxsd(__attribute__((__vector_size__(2 * sizeof(double)))) double, __attribute__((__vector_size__(2 * sizeof(double)))) double);
extern __attribute__((__vector_size__(2 * sizeof(double)))) double __builtin_ia32_cvtpi2pd(__attribute__((__vector_size__(2 * sizeof(int)))) int);
extern __attribute__((__vector_size__(4 * sizeof(float)))) float __builtin_ia32_maxss(__attribute__((__vector_size__(4 * sizeof(float)))) float, __attribute__((__vector_size__(4 * sizeof(float)))) float);
extern double __builtin_log2(double);
extern __attribute__((__vector_size__(4 * sizeof(float)))) float __builtin_ia32_cvtpi2ps(__attribute__((__vector_size__(4 * sizeof(float)))) float, __attribute__((__vector_size__(2 * sizeof(int)))) int);
extern __attribute__((__vector_size__(2 * sizeof(float)))) float __builtin_ia32_pfnacc(__attribute__((__vector_size__(2 * sizeof(float)))) float, __attribute__((__vector_size__(2 * sizeof(float)))) float);
extern _Complex float __builtin_cpowf(_Complex float, _Complex float);
extern double __builtin_logb(double);
extern _Complex long double __builtin_cpowl(_Complex long double, _Complex long double);
extern float __builtin_logf(float);
extern long double __builtin_logl(long double);
extern void __atomic_store();
extern __attribute__((__vector_size__(2 * sizeof(long long)))) long long __builtin_ia32_pmuldq128(__attribute__((__vector_size__(4 * sizeof(int)))) int, __attribute__((__vector_size__(4 * sizeof(int)))) int);
extern __attribute__((__vector_size__(2 * sizeof(int)))) int __builtin_ia32_psradi(__attribute__((__vector_size__(2 * sizeof(int)))) int, int);
extern __attribute__((__vector_size__(8 * sizeof(char)))) char __builtin_ia32_packuswb(__attribute__((__vector_size__(4 * sizeof(short)))) short, __attribute__((__vector_size__(4 * sizeof(short)))) short);
extern char *__builtin_strpbrk(const char *, const char *);
extern void __builtin_ia32_movntpd(double *, __attribute__((__vector_size__(2 * sizeof(double)))) double);
extern void __atomic_fetch_and();
extern char *__builtin_strndup(const char *, unsigned int);
extern __attribute__((__vector_size__(2 * sizeof(long long)))) long long __builtin_ia32_cvtpd2dq(__attribute__((__vector_size__(2 * sizeof(double)))) double);
extern __int128_t __sync_and_and_fetch_16(volatile __int128_t *, __int128_t, ...);
extern int __builtin_constant_p();
extern __attribute__((__vector_size__(8 * sizeof(float)))) float __builtin_ia32_dpps256(__attribute__((__vector_size__(8 * sizeof(float)))) float, __attribute__((__vector_size__(8 * sizeof(float)))) float, int);
extern void __builtin_ia32_movntps(float *, __attribute__((__vector_size__(4 * sizeof(float)))) float);
extern double __builtin_exp2(double);
extern __attribute__((__vector_size__(4 * sizeof(short)))) short __builtin_ia32_punpckhwd(__attribute__((__vector_size__(4 * sizeof(short)))) short, __attribute__((__vector_size__(4 * sizeof(short)))) short);
extern __attribute__((__vector_size__(1 * sizeof(long long)))) long long __builtin_ia32_psrlqi(__attribute__((__vector_size__(1 * sizeof(long long)))) long long, int);
extern double __builtin_sqrt(double);

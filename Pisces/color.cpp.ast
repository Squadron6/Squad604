typedef char *__builtin_va_list;
typedef signed char int8_t;
typedef short int16_t;
typedef int int32_t;
typedef long long int64_t;
typedef unsigned char uint8_t;
typedef unsigned short uint16_t;
typedef unsigned int uint32_t;
typedef unsigned long long uint64_t;
typedef signed char int_least8_t;
typedef short int_least16_t;
typedef int int_least32_t;
typedef long long int_least64_t;
typedef unsigned char uint_least8_t;
typedef unsigned short uint_least16_t;
typedef unsigned int uint_least32_t;
typedef unsigned long long uint_least64_t;
typedef signed char int_fast8_t;
typedef int int_fast16_t;
typedef int int_fast32_t;
typedef long long int_fast64_t;
typedef unsigned char uint_fast8_t;
typedef unsigned int uint_fast16_t;
typedef unsigned int uint_fast32_t;
typedef unsigned long long uint_fast64_t;
typedef int intptr_t;
typedef unsigned int uintptr_t;
typedef long long intmax_t;
typedef unsigned long long uintmax_t;
namespace std {
    typedef unsigned int size_t;
    typedef int ptrdiff_t;
}
typedef typeof (((int *)0) - ((int *)0)) ptrdiff_t;
typedef typeof (sizeof(int)) size_t;
extern "C" {
    union wait {
        union wait;
        int w_status;
        struct {
            unsigned int __w_termsig : (IntegerLiteral 0x9afb860 </usr/include/i386-linux-gnu/bits/waitstatus.h:73:27> 'int' 7)
;
            unsigned int __w_coredump : (IntegerLiteral 0x9afb8c0 </usr/include/i386-linux-gnu/bits/waitstatus.h:74:28> 'int' 1)
;
            unsigned int __w_retcode : (IntegerLiteral 0x9afb920 </usr/include/i386-linux-gnu/bits/waitstatus.h:75:27> 'int' 8)
;
            unsigned int : (IntegerLiteral 0x9afb980 </usr/include/i386-linux-gnu/bits/waitstatus.h:76:15> 'int' 16)
;
        };
        struct <anonymous struct at /usr/include/i386-linux-gnu/bits/waitstatus.h:70:5> __wait_terminated;
        struct {
            unsigned int __w_stopval : (IntegerLiteral 0x9afbb20 </usr/include/i386-linux-gnu/bits/waitstatus.h:88:27> 'int' 8)
;
            unsigned int __w_stopsig : (IntegerLiteral 0x9afbb80 </usr/include/i386-linux-gnu/bits/waitstatus.h:89:27> 'int' 8)
;
            unsigned int : (IntegerLiteral 0x9afbbe0 </usr/include/i386-linux-gnu/bits/waitstatus.h:90:15> 'int' 16)
;
        };
        struct <anonymous struct at /usr/include/i386-linux-gnu/bits/waitstatus.h:85:5> __wait_stopped;
    };
    struct {
        int quot;
        int rem;
    };
    typedef struct div_t div_t;
    struct {
        long quot;
        long rem;
    };
    typedef struct ldiv_t ldiv_t;
    struct {
        long long quot;
        long long rem;
    };
    typedef struct lldiv_t lldiv_t;
    extern size_t __ctype_get_mb_cur_max() throw();
    extern double atof(const char *__nptr) throw();
    extern int atoi(const char *__nptr) throw();
    extern long atol(const char *__nptr) throw();
    extern long long atoll(const char *__nptr) throw();
    extern double strtod(const char *restrict __nptr, char **restrict __endptr) throw();
    extern float strtof(const char *restrict __nptr, char **restrict __endptr) throw();
    extern long double strtold(const char *restrict __nptr, char **restrict __endptr) throw();
    extern long strtol(const char *restrict __nptr, char **restrict __endptr, int __base) throw();
    extern unsigned long strtoul(const char *restrict __nptr, char **restrict __endptr, int __base) throw();
    extern long long strtoq(const char *restrict __nptr, char **restrict __endptr, int __base) throw();
    extern unsigned long long strtouq(const char *restrict __nptr, char **restrict __endptr, int __base) throw();
    extern long long strtoll(const char *restrict __nptr, char **restrict __endptr, int __base) throw();
    extern unsigned long long strtoull(const char *restrict __nptr, char **restrict __endptr, int __base) throw();
    struct __locale_struct {
        struct __locale_struct;
        struct __locale_data;
        struct __locale_data *__locales[13];
        const unsigned short *__ctype_b;
        const int *__ctype_tolower;
        const int *__ctype_toupper;
        const char *__names[13];
    };
    typedef struct __locale_struct *__locale_t;
    typedef __locale_t locale_t;
    extern long strtol_l(const char *restrict __nptr, char **restrict __endptr, int __base, __locale_t __loc) throw();
    extern unsigned long strtoul_l(const char *restrict __nptr, char **restrict __endptr, int __base, __locale_t __loc) throw();
    extern long long strtoll_l(const char *restrict __nptr, char **restrict __endptr, int __base, __locale_t __loc) throw();
    extern unsigned long long strtoull_l(const char *restrict __nptr, char **restrict __endptr, int __base, __locale_t __loc) throw();
    extern double strtod_l(const char *restrict __nptr, char **restrict __endptr, __locale_t __loc) throw();
    extern float strtof_l(const char *restrict __nptr, char **restrict __endptr, __locale_t __loc) throw();
    extern long double strtold_l(const char *restrict __nptr, char **restrict __endptr, __locale_t __loc) throw();
    extern char *l64a(long __n) throw();
    extern long a64l(const char *__s) throw();
    extern "C" {
        typedef unsigned char __u_char;
        typedef unsigned short __u_short;
        typedef unsigned int __u_int;
        typedef unsigned long __u_long;
        typedef signed char __int8_t;
        typedef unsigned char __uint8_t;
        typedef short __int16_t;
        typedef unsigned short __uint16_t;
        typedef int __int32_t;
        typedef unsigned int __uint32_t;
        typedef long long __int64_t;
        typedef unsigned long long __uint64_t;
        typedef long long __quad_t;
        typedef unsigned long long __u_quad_t;
        typedef __u_quad_t __dev_t;
        typedef unsigned int __uid_t;
        typedef unsigned int __gid_t;
        typedef unsigned long __ino_t;
        typedef __u_quad_t __ino64_t;
        typedef unsigned int __mode_t;
        typedef unsigned int __nlink_t;
        typedef long __off_t;
        typedef __quad_t __off64_t;
        typedef int __pid_t;
        struct {
            int __val[2];
        };
        typedef struct __fsid_t __fsid_t;
        typedef long __clock_t;
        typedef unsigned long __rlim_t;
        typedef __u_quad_t __rlim64_t;
        typedef unsigned int __id_t;
        typedef long __time_t;
        typedef unsigned int __useconds_t;
        typedef long __suseconds_t;
        typedef int __daddr_t;
        typedef long __swblk_t;
        typedef int __key_t;
        typedef int __clockid_t;
        typedef void *__timer_t;
        typedef long __blksize_t;
        typedef long __blkcnt_t;
        typedef __quad_t __blkcnt64_t;
        typedef unsigned long __fsblkcnt_t;
        typedef __u_quad_t __fsblkcnt64_t;
        typedef unsigned long __fsfilcnt_t;
        typedef __u_quad_t __fsfilcnt64_t;
        typedef int __ssize_t;
        typedef __off64_t __loff_t;
        typedef __quad_t *__qaddr_t;
        typedef char *__caddr_t;
        typedef int __intptr_t;
        typedef unsigned int __socklen_t;
        typedef __u_char u_char;
        typedef __u_short u_short;
        typedef __u_int u_int;
        typedef __u_long u_long;
        typedef __quad_t quad_t;
        typedef __u_quad_t u_quad_t;
        typedef __fsid_t fsid_t;
        typedef __loff_t loff_t;
        typedef __ino_t ino_t;
        typedef __ino64_t ino64_t;
        typedef __dev_t dev_t;
        typedef __gid_t gid_t;
        typedef __mode_t mode_t;
        typedef __nlink_t nlink_t;
        typedef __uid_t uid_t;
        typedef __off_t off_t;
        typedef __off64_t off64_t;
        typedef __pid_t pid_t;
        typedef __id_t id_t;
        typedef __ssize_t ssize_t;
        typedef __daddr_t daddr_t;
        typedef __caddr_t caddr_t;
        typedef __key_t key_t;
        typedef __clock_t clock_t;
        typedef __time_t time_t;
        typedef __clockid_t clockid_t;
        typedef __timer_t timer_t;
        typedef __useconds_t useconds_t;
        typedef __suseconds_t suseconds_t;
        typedef unsigned long ulong;
        typedef unsigned short ushort;
        typedef unsigned int uint;
        typedef unsigned char u_int8_t;
        typedef unsigned short u_int16_t;
        typedef unsigned int u_int32_t;
        typedef unsigned long long u_int64_t;
        typedef int register_t;
        typedef int __sig_atomic_t;
        struct {
            unsigned long __val[32];
        };
        typedef struct __sigset_t __sigset_t;
        typedef __sigset_t sigset_t;
        struct timespec {
            struct timespec;
            __time_t tv_sec;
            long tv_nsec;
        };
        struct timeval {
            struct timeval;
            __time_t tv_sec;
            __suseconds_t tv_usec;
        };
        typedef long __fd_mask;
        struct {
            __fd_mask fds_bits[32];
        };
        typedef struct fd_set fd_set;
        typedef __fd_mask fd_mask;
        extern "C" {
            extern int select(int __nfds, fd_set *restrict __readfds, fd_set *restrict __writefds, fd_set *restrict __exceptfds, struct timeval *restrict __timeout);
            extern int pselect(int __nfds, fd_set *restrict __readfds, fd_set *restrict __writefds, fd_set *restrict __exceptfds, const struct timespec *restrict __timeout, const __sigset_t *restrict __sigmask);
        }
        extern "C" {
            extern unsigned int gnu_dev_major(unsigned long long __dev) throw();
            extern unsigned int gnu_dev_minor(unsigned long long __dev) throw();
            extern unsigned long long gnu_dev_makedev(unsigned int __major, unsigned int __minor) throw();
        }
        typedef __blksize_t blksize_t;
        typedef __blkcnt_t blkcnt_t;
        typedef __fsblkcnt_t fsblkcnt_t;
        typedef __fsfilcnt_t fsfilcnt_t;
        typedef __blkcnt64_t blkcnt64_t;
        typedef __fsblkcnt64_t fsblkcnt64_t;
        typedef __fsfilcnt64_t fsfilcnt64_t;
        typedef unsigned long pthread_t;
        union {
            char __size[36];
            long __align;
        };
        typedef union pthread_attr_t pthread_attr_t;
        struct __pthread_internal_slist {
            struct __pthread_internal_slist;
            struct __pthread_internal_slist *__next;
        };
        typedef struct __pthread_internal_slist __pthread_slist_t;
        union {
            struct __pthread_mutex_s {
                struct __pthread_mutex_s;
                int __lock;
                unsigned int __count;
                int __owner;
                int __kind;
                unsigned int __nusers;
                union {
                    int __spins;
                    __pthread_slist_t __list;
                } ;
                ;
                ;
            };
            struct __pthread_mutex_s __data;
            char __size[24];
            long __align;
        };
        typedef union pthread_mutex_t pthread_mutex_t;
        union {
            char __size[4];
            long __align;
        };
        typedef union pthread_mutexattr_t pthread_mutexattr_t;
        union {
            struct {
                int __lock;
                unsigned int __futex;
                unsigned long long __total_seq;
                unsigned long long __wakeup_seq;
                unsigned long long __woken_seq;
                void *__mutex;
                unsigned int __nwaiters;
                unsigned int __broadcast_seq;
            };
            struct <anonymous struct at /usr/include/i386-linux-gnu/bits/pthreadtypes.h:86:3> __data;
            char __size[48];
            long long __align;
        };
        typedef union pthread_cond_t pthread_cond_t;
        union {
            char __size[4];
            long __align;
        };
        typedef union pthread_condattr_t pthread_condattr_t;
        typedef unsigned int pthread_key_t;
        typedef int pthread_once_t;
        union {
            struct {
                int __lock;
                unsigned int __nr_readers;
                unsigned int __readers_wakeup;
                unsigned int __writer_wakeup;
                unsigned int __nr_readers_queued;
                unsigned int __nr_writers_queued;
                unsigned char __flags;
                unsigned char __shared;
                unsigned char __pad1;
                unsigned char __pad2;
                int __writer;
            };
            struct <anonymous struct at /usr/include/i386-linux-gnu/bits/pthreadtypes.h:121:3> __data;
            char __size[32];
            long __align;
        };
        typedef union pthread_rwlock_t pthread_rwlock_t;
        union {
            char __size[8];
            long __align;
        };
        typedef union pthread_rwlockattr_t pthread_rwlockattr_t;
        typedef volatile int pthread_spinlock_t;
        union {
            char __size[20];
            long __align;
        };
        typedef union pthread_barrier_t pthread_barrier_t;
        union {
            char __size[4];
            int __align;
        };
        typedef union pthread_barrierattr_t pthread_barrierattr_t;
    }
    extern long random() throw();
    extern void srandom(unsigned int __seed) throw();
    extern char *initstate(unsigned int __seed, char *__statebuf, size_t __statelen) throw();
    extern char *setstate(char *__statebuf) throw();
    struct random_data {
        struct random_data;
        int32_t *fptr;
        int32_t *rptr;
        int32_t *state;
        int rand_type;
        int rand_deg;
        int rand_sep;
        int32_t *end_ptr;
    };
    extern int random_r(struct random_data *restrict __buf, int32_t *restrict __result) throw();
    extern int srandom_r(unsigned int __seed, struct random_data *__buf) throw();
    extern int initstate_r(unsigned int __seed, char *restrict __statebuf, size_t __statelen, struct random_data *restrict __buf) throw();
    extern int setstate_r(char *restrict __statebuf, struct random_data *restrict __buf) throw();
    extern int rand() throw();
    extern void srand(unsigned int __seed) throw();
    extern int rand_r(unsigned int *__seed) throw();
    extern double drand48() throw();
    extern double erand48(unsigned short __xsubi[3]) throw();
    extern long lrand48() throw();
    extern long nrand48(unsigned short __xsubi[3]) throw();
    extern long mrand48() throw();
    extern long jrand48(unsigned short __xsubi[3]) throw();
    extern void srand48(long __seedval) throw();
    extern unsigned short *seed48(unsigned short __seed16v[3]) throw();
    extern void lcong48(unsigned short __param[7]) throw();
    struct drand48_data {
        struct drand48_data;
        unsigned short __x[3];
        unsigned short __old_x[3];
        unsigned short __c;
        unsigned short __init;
        unsigned long long __a;
    };
    extern int drand48_r(struct drand48_data *restrict __buffer, double *restrict __result) throw();
    extern int erand48_r(unsigned short __xsubi[3], struct drand48_data *restrict __buffer, double *restrict __result) throw();
    extern int lrand48_r(struct drand48_data *restrict __buffer, long *restrict __result) throw();
    extern int nrand48_r(unsigned short __xsubi[3], struct drand48_data *restrict __buffer, long *restrict __result) throw();
    extern int mrand48_r(struct drand48_data *restrict __buffer, long *restrict __result) throw();
    extern int jrand48_r(unsigned short __xsubi[3], struct drand48_data *restrict __buffer, long *restrict __result) throw();
    extern int srand48_r(long __seedval, struct drand48_data *__buffer) throw();
    extern int seed48_r(unsigned short __seed16v[3], struct drand48_data *__buffer) throw();
    extern int lcong48_r(unsigned short __param[7], struct drand48_data *__buffer) throw();
    extern void *malloc(size_t __size) throw();
    extern void *calloc(size_t __nmemb, size_t __size) throw();
    extern void *realloc(void *__ptr, size_t __size) throw();
    extern void free(void *__ptr) throw();
    extern void cfree(void *__ptr) throw();
    extern "C" {
        extern void *alloca(size_t __size) throw();
    }
    extern void *valloc(size_t __size) throw();
    extern int posix_memalign(void **__memptr, size_t __alignment, size_t __size) throw();
    extern void abort() throw();
    extern int atexit(void (*__func)()) throw();
    extern "C++" extern int at_quick_exit(void (*__func)()) throw()
    extern int on_exit(void (*__func)(int, void *), void *__arg) throw();
    extern void exit(int __status) throw();
    extern void quick_exit(int __status) throw();
    extern void _Exit(int __status) throw();
    extern char *getenv(const char *__name) throw();
    extern char *__secure_getenv(const char *__name) throw();
    extern int putenv(char *__string) throw();
    extern int setenv(const char *__name, const char *__value, int __replace) throw();
    extern int unsetenv(const char *__name) throw();
    extern int clearenv() throw();
    extern char *mktemp(char *__template) throw();
    extern int mkstemp(char *__template);
    extern int mkstemp64(char *__template);
    extern int mkstemps(char *__template, int __suffixlen);
    extern int mkstemps64(char *__template, int __suffixlen);
    extern char *mkdtemp(char *__template) throw();
    extern int mkostemp(char *__template, int __flags);
    extern int mkostemp64(char *__template, int __flags);
    extern int mkostemps(char *__template, int __suffixlen, int __flags);
    extern int mkostemps64(char *__template, int __suffixlen, int __flags);
    extern int system(const char *__command);
    extern char *canonicalize_file_name(const char *__name) throw();
    extern char *realpath(const char *restrict __name, char *restrict __resolved) throw();
    typedef int (*__compar_fn_t)(const void *, const void *);
    typedef __compar_fn_t comparison_fn_t;
    typedef int (*__compar_d_fn_t)(const void *, const void *, void *);
    extern void *bsearch(const void *__key, const void *__base, size_t __nmemb, size_t __size, __compar_fn_t __compar);
    extern void qsort(void *__base, size_t __nmemb, size_t __size, __compar_fn_t __compar);
    extern void qsort_r(void *__base, size_t __nmemb, size_t __size, __compar_d_fn_t __compar, void *__arg);
    extern int abs(int __x) throw();
    extern long labs(long __x) throw();
    extern long long llabs(long long __x) throw();
    extern div_t div(int __numer, int __denom) throw();
    extern ldiv_t ldiv(long __numer, long __denom) throw();
    extern lldiv_t lldiv(long long __numer, long long __denom) throw();
    extern char *ecvt(double __value, int __ndigit, int *restrict __decpt, int *restrict __sign) throw();
    extern char *fcvt(double __value, int __ndigit, int *restrict __decpt, int *restrict __sign) throw();
    extern char *gcvt(double __value, int __ndigit, char *__buf) throw();
    extern char *qecvt(long double __value, int __ndigit, int *restrict __decpt, int *restrict __sign) throw();
    extern char *qfcvt(long double __value, int __ndigit, int *restrict __decpt, int *restrict __sign) throw();
    extern char *qgcvt(long double __value, int __ndigit, char *__buf) throw();
    extern int ecvt_r(double __value, int __ndigit, int *restrict __decpt, int *restrict __sign, char *restrict __buf, size_t __len) throw();
    extern int fcvt_r(double __value, int __ndigit, int *restrict __decpt, int *restrict __sign, char *restrict __buf, size_t __len) throw();
    extern int qecvt_r(long double __value, int __ndigit, int *restrict __decpt, int *restrict __sign, char *restrict __buf, size_t __len) throw();
    extern int qfcvt_r(long double __value, int __ndigit, int *restrict __decpt, int *restrict __sign, char *restrict __buf, size_t __len) throw();
    extern int mblen(const char *__s, size_t __n) throw();
    extern int mbtowc(wchar_t *restrict __pwc, const char *restrict __s, size_t __n) throw();
    extern int wctomb(char *__s, wchar_t __wchar) throw();
    extern size_t mbstowcs(wchar_t *restrict __pwcs, const char *restrict __s, size_t __n) throw();
    extern size_t wcstombs(char *restrict __s, const wchar_t *restrict __pwcs, size_t __n) throw();
    extern int rpmatch(const char *__response) throw();
    extern int getsubopt(char **restrict __optionp, char *const *restrict __tokens, char **restrict __valuep) throw();
    extern void setkey(const char *__key) throw();
    extern int posix_openpt(int __oflag);
    extern int grantpt(int __fd) throw();
    extern int unlockpt(int __fd) throw();
    extern char *ptsname(int __fd) throw();
    extern int ptsname_r(int __fd, char *__buf, size_t __buflen) throw();
    extern int getpt();
    extern int getloadavg(double __loadavg[], int __nelem) throw();
}
extern "C" {
    struct _IO_FILE;
    typedef struct _IO_FILE FILE;
    typedef struct _IO_FILE __FILE;
    struct {
        int __count;
        union {
            unsigned int __wch;
            char __wchb[4];
        };
        union <anonymous union at /usr/include/wchar.h:86:3> __value;
    };
    typedef struct __mbstate_t __mbstate_t;
    struct {
        __off_t __pos;
        __mbstate_t __state;
    };
    typedef struct _G_fpos_t _G_fpos_t;
    struct {
        __off64_t __pos;
        __mbstate_t __state;
    };
    typedef struct _G_fpos64_t _G_fpos64_t;
    typedef short _G_int16_t;
    typedef int _G_int32_t;
    typedef unsigned short _G_uint16_t;
    typedef unsigned int _G_uint32_t;
    typedef __builtin_va_list va_list;
    typedef __builtin_va_list __gnuc_va_list;
    struct _IO_jump_t;
    struct _IO_FILE;
    typedef void _IO_lock_t;
    struct _IO_marker {
        struct _IO_marker;
        struct _IO_marker *_next;
        struct _IO_FILE *_sbuf;
        int _pos;
    };
    enum __codecvt_result {
        __codecvt_ok,
        __codecvt_partial,
        __codecvt_error,
        __codecvt_noconv
    };
    struct _IO_FILE {
        struct _IO_FILE;
        int _flags;
        char *_IO_read_ptr;
        char *_IO_read_end;
        char *_IO_read_base;
        char *_IO_write_base;
        char *_IO_write_ptr;
        char *_IO_write_end;
        char *_IO_buf_base;
        char *_IO_buf_end;
        char *_IO_save_base;
        char *_IO_backup_base;
        char *_IO_save_end;
        struct _IO_marker *_markers;
        struct _IO_FILE *_chain;
        int _fileno;
        int _flags2;
        __off_t _old_offset;
        unsigned short _cur_column;
        signed char _vtable_offset;
        char _shortbuf[1];
        _IO_lock_t *_lock;
        __off64_t _offset;
        void *__pad1;
        void *__pad2;
        void *__pad3;
        void *__pad4;
        size_t __pad5;
        int _mode;
        char _unused2[40];
    };
    struct _IO_FILE_plus;
    extern struct _IO_FILE_plus _IO_2_1_stdin_;
    extern struct _IO_FILE_plus _IO_2_1_stdout_;
    extern struct _IO_FILE_plus _IO_2_1_stderr_;
    typedef __ssize_t (__io_read_fn)(void *, char *, size_t);
    typedef __ssize_t (__io_write_fn)(void *, const char *, size_t);
    typedef int (__io_seek_fn)(void *, __off64_t *, int);
    typedef int (__io_close_fn)(void *);
    typedef __io_read_fn cookie_read_function_t;
    typedef __io_write_fn cookie_write_function_t;
    typedef __io_seek_fn cookie_seek_function_t;
    typedef __io_close_fn cookie_close_function_t;
    struct {
        __io_read_fn *read;
        __io_write_fn *write;
        __io_seek_fn *seek;
        __io_close_fn *close;
    };
    typedef struct _IO_cookie_io_functions_t _IO_cookie_io_functions_t;
    typedef _IO_cookie_io_functions_t cookie_io_functions_t;
    struct _IO_cookie_file;
    extern void _IO_cookie_init(struct _IO_cookie_file *__cfile, int __read_write, void *__cookie, _IO_cookie_io_functions_t __fns);
    extern "C" {
        extern int __underflow(_IO_FILE *);
        extern int __uflow(_IO_FILE *);
        extern int __overflow(_IO_FILE *, int);
        extern int _IO_getc(_IO_FILE *__fp);
        extern int _IO_putc(int __c, _IO_FILE *__fp);
        extern int _IO_feof(_IO_FILE *__fp) throw();
        extern int _IO_ferror(_IO_FILE *__fp) throw();
        extern int _IO_peekc_locked(_IO_FILE *__fp);
        extern void _IO_flockfile(_IO_FILE *) throw();
        extern void _IO_funlockfile(_IO_FILE *) throw();
        extern int _IO_ftrylockfile(_IO_FILE *) throw();
        extern int _IO_vfscanf(_IO_FILE *restrict, const char *restrict, __gnuc_va_list, int *restrict);
        extern int _IO_vfprintf(_IO_FILE *restrict, const char *restrict, __gnuc_va_list);
        extern __ssize_t _IO_padn(_IO_FILE *, int, __ssize_t);
        extern size_t _IO_sgetn(_IO_FILE *, void *, size_t);
        extern __off64_t _IO_seekoff(_IO_FILE *, __off64_t, int, int);
        extern __off64_t _IO_seekpos(_IO_FILE *, __off64_t, int);
        extern void _IO_free_backup_area(_IO_FILE *) throw();
    }
    typedef __gnuc_va_list va_list;
    typedef _G_fpos_t fpos_t;
    typedef _G_fpos64_t fpos64_t;
    extern struct _IO_FILE *stdin;
    extern struct _IO_FILE *stdout;
    extern struct _IO_FILE *stderr;
    extern int remove(const char *__filename) throw();
    extern int rename(const char *__old, const char *__new) throw();
    extern int renameat(int __oldfd, const char *__old, int __newfd, const char *__new) throw();
    extern FILE *tmpfile();
    extern FILE *tmpfile64();
    extern char *tmpnam(char *__s) throw();
    extern char *tmpnam_r(char *__s) throw();
    extern char *tempnam(const char *__dir, const char *__pfx) throw();
    extern int fclose(FILE *__stream);
    extern int fflush(FILE *__stream);
    extern int fflush_unlocked(FILE *__stream);
    extern int fcloseall();
    extern FILE *fopen(const char *restrict __filename, const char *restrict __modes);
    extern FILE *freopen(const char *restrict __filename, const char *restrict __modes, FILE *restrict __stream);
    extern FILE *fopen64(const char *restrict __filename, const char *restrict __modes);
    extern FILE *freopen64(const char *restrict __filename, const char *restrict __modes, FILE *restrict __stream);
    extern FILE *fdopen(int __fd, const char *__modes) throw();
    extern FILE *fopencookie(void *restrict __magic_cookie, const char *restrict __modes, _IO_cookie_io_functions_t __io_funcs) throw();
    extern FILE *fmemopen(void *__s, size_t __len, const char *__modes) throw();
    extern FILE *open_memstream(char **__bufloc, size_t *__sizeloc) throw();
    extern void setbuf(FILE *restrict __stream, char *restrict __buf) throw();
    extern int setvbuf(FILE *restrict __stream, char *restrict __buf, int __modes, size_t __n) throw();
    extern void setbuffer(FILE *restrict __stream, char *restrict __buf, size_t __size) throw();
    extern void setlinebuf(FILE *__stream) throw();
    extern int fprintf(FILE *restrict __stream, const char *restrict __format, ...);
    extern int printf(const char *restrict __format, ...);
    extern int sprintf(char *restrict __s, const char *restrict __format, ...) throw();
    extern int vfprintf(FILE *restrict __s, const char *restrict __format, __gnuc_va_list __arg);
    extern int vprintf(const char *restrict __format, __gnuc_va_list __arg);
    extern int vsprintf(char *restrict __s, const char *restrict __format, __gnuc_va_list __arg) throw();
    extern int snprintf(char *restrict __s, size_t __maxlen, const char *restrict __format, ...) throw();
    extern int vsnprintf(char *restrict __s, size_t __maxlen, const char *restrict __format, __gnuc_va_list __arg) throw();
    extern int vasprintf(char **restrict __ptr, const char *restrict __f, __gnuc_va_list __arg) throw();
    extern int __asprintf(char **restrict __ptr, const char *restrict __fmt, ...) throw();
    extern int asprintf(char **restrict __ptr, const char *restrict __fmt, ...) throw();
    extern int vdprintf(int __fd, const char *restrict __fmt, __gnuc_va_list __arg);
    extern int dprintf(int __fd, const char *restrict __fmt, ...);
    extern int fscanf(FILE *restrict __stream, const char *restrict __format, ...);
    extern int scanf(const char *restrict __format, ...);
    extern int sscanf(const char *restrict __s, const char *restrict __format, ...) throw();
    extern int vfscanf(FILE *restrict __s, const char *restrict __format, __gnuc_va_list __arg);
    extern int vscanf(const char *restrict __format, __gnuc_va_list __arg);
    extern int vsscanf(const char *restrict __s, const char *restrict __format, __gnuc_va_list __arg) throw();
    extern int fgetc(FILE *__stream);
    extern int getc(FILE *__stream);
    extern int getchar();
    extern int getc_unlocked(FILE *__stream);
    extern int getchar_unlocked();
    extern int fgetc_unlocked(FILE *__stream);
    extern int fputc(int __c, FILE *__stream);
    extern int putc(int __c, FILE *__stream);
    extern int putchar(int __c);
    extern int fputc_unlocked(int __c, FILE *__stream);
    extern int putc_unlocked(int __c, FILE *__stream);
    extern int putchar_unlocked(int __c);
    extern int getw(FILE *__stream);
    extern int putw(int __w, FILE *__stream);
    extern char *fgets(char *restrict __s, int __n, FILE *restrict __stream);
    extern char *gets(char *__s);
    extern char *fgets_unlocked(char *restrict __s, int __n, FILE *restrict __stream);
    extern __ssize_t __getdelim(char **restrict __lineptr, size_t *restrict __n, int __delimiter, FILE *restrict __stream);
    extern __ssize_t getdelim(char **restrict __lineptr, size_t *restrict __n, int __delimiter, FILE *restrict __stream);
    extern __ssize_t getline(char **restrict __lineptr, size_t *restrict __n, FILE *restrict __stream);
    extern int fputs(const char *restrict __s, FILE *restrict __stream);
    extern int puts(const char *__s);
    extern int ungetc(int __c, FILE *__stream);
    extern size_t fread(void *restrict __ptr, size_t __size, size_t __n, FILE *restrict __stream);
    extern size_t fwrite(const void *restrict __ptr, size_t __size, size_t __n, FILE *restrict __s);
    extern int fputs_unlocked(const char *restrict __s, FILE *restrict __stream);
    extern size_t fread_unlocked(void *restrict __ptr, size_t __size, size_t __n, FILE *restrict __stream);
    extern size_t fwrite_unlocked(const void *restrict __ptr, size_t __size, size_t __n, FILE *restrict __stream);
    extern int fseek(FILE *__stream, long __off, int __whence);
    extern long ftell(FILE *__stream);
    extern void rewind(FILE *__stream);
    extern int fseeko(FILE *__stream, __off_t __off, int __whence);
    extern __off_t ftello(FILE *__stream);
    extern int fgetpos(FILE *restrict __stream, fpos_t *restrict __pos);
    extern int fsetpos(FILE *__stream, const fpos_t *__pos);
    extern int fseeko64(FILE *__stream, __off64_t __off, int __whence);
    extern __off64_t ftello64(FILE *__stream);
    extern int fgetpos64(FILE *restrict __stream, fpos64_t *restrict __pos);
    extern int fsetpos64(FILE *__stream, const fpos64_t *__pos);
    extern void clearerr(FILE *__stream) throw();
    extern int feof(FILE *__stream) throw();
    extern int ferror(FILE *__stream) throw();
    extern void clearerr_unlocked(FILE *__stream) throw();
    extern int feof_unlocked(FILE *__stream) throw();
    extern int ferror_unlocked(FILE *__stream) throw();
    extern void perror(const char *__s);
    extern int sys_nerr;
    extern const char *const sys_errlist[];
    extern int _sys_nerr;
    extern const char *const _sys_errlist[];
    extern int fileno(FILE *__stream) throw();
    extern int fileno_unlocked(FILE *__stream) throw();
    extern FILE *popen(const char *__command, const char *__modes);
    extern int pclose(FILE *__stream);
    extern char *ctermid(char *__s) throw();
    extern char *cuserid(char *__s);
    struct obstack;
    extern int obstack_printf(struct obstack *restrict __obstack, const char *restrict __format, ...) throw();
    extern int obstack_vprintf(struct obstack *restrict __obstack, const char *restrict __format, __gnuc_va_list __args) throw();
    extern void flockfile(FILE *__stream) throw();
    extern int ftrylockfile(FILE *__stream) throw();
    extern void funlockfile(FILE *__stream) throw();
}
typedef unsigned int wint_t;
typedef __mbstate_t mbstate_t;
extern "C" {
    struct tm;
    extern wchar_t *wcscpy(wchar_t *restrict __dest, const wchar_t *restrict __src) throw();
    extern wchar_t *wcsncpy(wchar_t *restrict __dest, const wchar_t *restrict __src, size_t __n) throw();
    extern wchar_t *wcscat(wchar_t *restrict __dest, const wchar_t *restrict __src) throw();
    extern wchar_t *wcsncat(wchar_t *restrict __dest, const wchar_t *restrict __src, size_t __n) throw();
    extern int wcscmp(const wchar_t *__s1, const wchar_t *__s2) throw();
    extern int wcsncmp(const wchar_t *__s1, const wchar_t *__s2, size_t __n) throw();
    extern int wcscasecmp(const wchar_t *__s1, const wchar_t *__s2) throw();
    extern int wcsncasecmp(const wchar_t *__s1, const wchar_t *__s2, size_t __n) throw();
    extern int wcscasecmp_l(const wchar_t *__s1, const wchar_t *__s2, __locale_t __loc) throw();
    extern int wcsncasecmp_l(const wchar_t *__s1, const wchar_t *__s2, size_t __n, __locale_t __loc) throw();
    extern int wcscoll(const wchar_t *__s1, const wchar_t *__s2) throw();
    extern size_t wcsxfrm(wchar_t *restrict __s1, const wchar_t *restrict __s2, size_t __n) throw();
    extern int wcscoll_l(const wchar_t *__s1, const wchar_t *__s2, __locale_t __loc) throw();
    extern size_t wcsxfrm_l(wchar_t *__s1, const wchar_t *__s2, size_t __n, __locale_t __loc) throw();
    extern wchar_t *wcsdup(const wchar_t *__s) throw();
    extern wchar_t *wcschr(const wchar_t *__wcs, wchar_t __wc) throw();
    extern wchar_t *wcsrchr(const wchar_t *__wcs, wchar_t __wc) throw();
    extern wchar_t *wcschrnul(const wchar_t *__s, wchar_t __wc) throw();
    extern size_t wcscspn(const wchar_t *__wcs, const wchar_t *__reject) throw();
    extern size_t wcsspn(const wchar_t *__wcs, const wchar_t *__accept) throw();
    extern wchar_t *wcspbrk(const wchar_t *__wcs, const wchar_t *__accept) throw();
    extern wchar_t *wcsstr(const wchar_t *__haystack, const wchar_t *__needle) throw();
    extern wchar_t *wcstok(wchar_t *restrict __s, const wchar_t *restrict __delim, wchar_t **restrict __ptr) throw();
    extern size_t wcslen(const wchar_t *__s) throw();
    extern wchar_t *wcswcs(const wchar_t *__haystack, const wchar_t *__needle) throw();
    extern size_t wcsnlen(const wchar_t *__s, size_t __maxlen) throw();
    extern wchar_t *wmemchr(const wchar_t *__s, wchar_t __c, size_t __n) throw();
    extern int wmemcmp(const wchar_t *__s1, const wchar_t *__s2, size_t __n) throw();
    extern wchar_t *wmemcpy(wchar_t *restrict __s1, const wchar_t *restrict __s2, size_t __n) throw();
    extern wchar_t *wmemmove(wchar_t *__s1, const wchar_t *__s2, size_t __n) throw();
    extern wchar_t *wmemset(wchar_t *__s, wchar_t __c, size_t __n) throw();
    extern wchar_t *wmempcpy(wchar_t *restrict __s1, const wchar_t *restrict __s2, size_t __n) throw();
    extern wint_t btowc(int __c) throw();
    extern int wctob(wint_t __c) throw();
    extern int mbsinit(const mbstate_t *__ps) throw();
    extern size_t mbrtowc(wchar_t *restrict __pwc, const char *restrict __s, size_t __n, mbstate_t *__p) throw();
    extern size_t wcrtomb(char *restrict __s, wchar_t __wc, mbstate_t *restrict __ps) throw();
    extern size_t __mbrlen(const char *restrict __s, size_t __n, mbstate_t *restrict __ps) throw();
    extern size_t mbrlen(const char *restrict __s, size_t __n, mbstate_t *restrict __ps) throw();
    extern size_t mbsrtowcs(wchar_t *restrict __dst, const char **restrict __src, size_t __len, mbstate_t *restrict __ps) throw();
    extern size_t wcsrtombs(char *restrict __dst, const wchar_t **restrict __src, size_t __len, mbstate_t *restrict __ps) throw();
    extern size_t mbsnrtowcs(wchar_t *restrict __dst, const char **restrict __src, size_t __nmc, size_t __len, mbstate_t *restrict __ps) throw();
    extern size_t wcsnrtombs(char *restrict __dst, const wchar_t **restrict __src, size_t __nwc, size_t __len, mbstate_t *restrict __ps) throw();
    extern int wcwidth(wchar_t __c) throw();
    extern int wcswidth(const wchar_t *__s, size_t __n) throw();
    extern double wcstod(const wchar_t *restrict __nptr, wchar_t **restrict __endptr) throw();
    extern float wcstof(const wchar_t *restrict __nptr, wchar_t **restrict __endptr) throw();
    extern long double wcstold(const wchar_t *restrict __nptr, wchar_t **restrict __endptr) throw();
    extern long wcstol(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base) throw();
    extern unsigned long wcstoul(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base) throw();
    extern long long wcstoll(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base) throw();
    extern unsigned long long wcstoull(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base) throw();
    extern long long wcstoq(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base) throw();
    extern unsigned long long wcstouq(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base) throw();
    extern long wcstol_l(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base, __locale_t __loc) throw();
    extern unsigned long wcstoul_l(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base, __locale_t __loc) throw();
    extern long long wcstoll_l(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base, __locale_t __loc) throw();
    extern unsigned long long wcstoull_l(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base, __locale_t __loc) throw();
    extern double wcstod_l(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, __locale_t __loc) throw();
    extern float wcstof_l(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, __locale_t __loc) throw();
    extern long double wcstold_l(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, __locale_t __loc) throw();
    extern wchar_t *wcpcpy(wchar_t *restrict __dest, const wchar_t *restrict __src) throw();
    extern wchar_t *wcpncpy(wchar_t *restrict __dest, const wchar_t *restrict __src, size_t __n) throw();
    extern __FILE *open_wmemstream(wchar_t **__bufloc, size_t *__sizeloc) throw();
    extern int fwide(__FILE *__fp, int __mode) throw();
    extern int fwprintf(__FILE *restrict __stream, const wchar_t *restrict __format, ...);
    extern int wprintf(const wchar_t *restrict __format, ...);
    extern int swprintf(wchar_t *restrict __s, size_t __n, const wchar_t *restrict __format, ...) throw();
    extern int vfwprintf(__FILE *restrict __s, const wchar_t *restrict __format, __gnuc_va_list __arg);
    extern int vwprintf(const wchar_t *restrict __format, __gnuc_va_list __arg);
    extern int vswprintf(wchar_t *restrict __s, size_t __n, const wchar_t *restrict __format, __gnuc_va_list __arg) throw();
    extern int fwscanf(__FILE *restrict __stream, const wchar_t *restrict __format, ...);
    extern int wscanf(const wchar_t *restrict __format, ...);
    extern int swscanf(const wchar_t *restrict __s, const wchar_t *restrict __format, ...) throw();
    extern int vfwscanf(__FILE *restrict __s, const wchar_t *restrict __format, __gnuc_va_list __arg);
    extern int vwscanf(const wchar_t *restrict __format, __gnuc_va_list __arg);
    extern int vswscanf(const wchar_t *restrict __s, const wchar_t *restrict __format, __gnuc_va_list __arg) throw();
    extern wint_t fgetwc(__FILE *__stream);
    extern wint_t getwc(__FILE *__stream);
    extern wint_t getwchar();
    extern wint_t fputwc(wchar_t __wc, __FILE *__stream);
    extern wint_t putwc(wchar_t __wc, __FILE *__stream);
    extern wint_t putwchar(wchar_t __wc);
    extern wchar_t *fgetws(wchar_t *restrict __ws, int __n, __FILE *restrict __stream);
    extern int fputws(const wchar_t *restrict __ws, __FILE *restrict __stream);
    extern wint_t ungetwc(wint_t __wc, __FILE *__stream);
    extern wint_t getwc_unlocked(__FILE *__stream);
    extern wint_t getwchar_unlocked();
    extern wint_t fgetwc_unlocked(__FILE *__stream);
    extern wint_t fputwc_unlocked(wchar_t __wc, __FILE *__stream);
    extern wint_t putwc_unlocked(wchar_t __wc, __FILE *__stream);
    extern wint_t putwchar_unlocked(wchar_t __wc);
    extern wchar_t *fgetws_unlocked(wchar_t *restrict __ws, int __n, __FILE *restrict __stream);
    extern int fputws_unlocked(const wchar_t *restrict __ws, __FILE *restrict __stream);
    extern size_t wcsftime(wchar_t *restrict __s, size_t __maxsize, const wchar_t *restrict __format, const struct tm *restrict __tp) throw();
    extern size_t wcsftime_l(wchar_t *restrict __s, size_t __maxsize, const wchar_t *restrict __format, const struct tm *restrict __tp, __locale_t __loc) throw();
}
extern "C" {
    typedef unsigned char cc_t;
    typedef unsigned int speed_t;
    typedef unsigned int tcflag_t;
    struct termios {
        struct termios;
        tcflag_t c_iflag;
        tcflag_t c_oflag;
        tcflag_t c_cflag;
        tcflag_t c_lflag;
        cc_t c_line;
        cc_t c_cc[32];
        speed_t c_ispeed;
        speed_t c_ospeed;
    };
    extern speed_t cfgetospeed(const struct termios *__termios_p) throw();
    extern speed_t cfgetispeed(const struct termios *__termios_p) throw();
    extern int cfsetospeed(struct termios *__termios_p, speed_t __speed) throw();
    extern int cfsetispeed(struct termios *__termios_p, speed_t __speed) throw();
    extern int cfsetspeed(struct termios *__termios_p, speed_t __speed) throw();
    extern int tcgetattr(int __fd, struct termios *__termios_p) throw();
    extern int tcsetattr(int __fd, int __optional_actions, const struct termios *__termios_p) throw();
    extern void cfmakeraw(struct termios *__termios_p) throw();
    extern int tcsendbreak(int __fd, int __duration) throw();
    extern int tcdrain(int __fd);
    extern int tcflush(int __fd, int __queue_selector) throw();
    extern int tcflow(int __fd, int __action) throw();
    extern __pid_t tcgetsid(int __fd) throw();
}
namespace std {
    template <typename _Alloc = char> class allocator : public __gnu_cxx::new_allocator<char> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef char *pointer;
        typedef const char *const_pointer;
        typedef char &reference;
        typedef const char &const_reference;
        typedef char value_type;
        template <typename _Tp1 = char> struct rebind {
            struct rebind;
            typedef allocator<char> other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw();
        allocator(const std::allocator<char> &__a) throw();
        template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw();
    }
template <typename _Alloc = wchar_t> class allocator : public __gnu_cxx::new_allocator<wchar_t> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef wchar_t *pointer;
        typedef const wchar_t *const_pointer;
        typedef wchar_t &reference;
        typedef const wchar_t &const_reference;
        typedef wchar_t value_type;
        template <typename _Tp1 = char> struct rebind {
            struct rebind;
            typedef allocator<char> other;
        }
template <typename _Tp1 = wchar_t> struct rebind {
            struct rebind;
            typedef allocator<wchar_t> other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw() : __gnu_cxx::new_allocator<wchar_t>() (CompoundStmt 0x9c31668 </usr/include/c++/4.6/bits/allocator.h:107:27, col:29>)


        allocator(const std::allocator<wchar_t> &__a) throw() : __gnu_cxx::new_allocator<wchar_t>((ImplicitCastExpr 0xa0d6e10 </usr/include/c++/4.6/bits/allocator.h:110:39> 'const class __gnu_cxx::new_allocator<wchar_t>' lvalue <DerivedToBase (new_allocator)>
  (DeclRefExpr 0xa0d6b64 <col:39> 'const class std::allocator<wchar_t>' lvalue ParmVar 0x9c37df0 '__a' 'const class std::allocator<wchar_t> &'))
) (CompoundStmt 0x9c31780 </usr/include/c++/4.6/bits/allocator.h:110:44, col:46>)


        template <typename _Tp1 = wchar_t> allocator(const allocator<wchar_t> &) throw()template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw() (CompoundStmt 0x9c317a0 </usr/include/c++/4.6/bits/allocator.h:115:28, col:30>)


    }
template <typename _Alloc = std::basic_string<wchar_t>> class allocator : public __gnu_cxx::new_allocator<basic_string<wchar_t> > {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef std::basic_string<wchar_t> *pointer;
        typedef const std::basic_string<wchar_t> *const_pointer;
        typedef std::basic_string<wchar_t> &reference;
        typedef const std::basic_string<wchar_t> &const_reference;
        typedef std::basic_string<wchar_t> value_type;
        template <typename _Tp1 = std::basic_string<wchar_t>> struct rebind {
            struct rebind;
            typedef allocator<std::basic_string<wchar_t> > other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw() : __gnu_cxx::new_allocator<basic_string<wchar_t> >() (CompoundStmt 0x9c31668 </usr/include/c++/4.6/bits/allocator.h:107:27, col:29>)


        allocator(const std::allocator<std::basic_string<wchar_t> > &__a) throw() : __gnu_cxx::new_allocator<basic_string<wchar_t> >((ImplicitCastExpr 0x9e295f0 </usr/include/c++/4.6/bits/allocator.h:110:39> 'const class __gnu_cxx::new_allocator<class std::basic_string<wchar_t> >' lvalue <DerivedToBase (new_allocator)>
  (DeclRefExpr 0x9e29348 <col:39> 'const class std::allocator<class std::basic_string<wchar_t> >' lvalue ParmVar 0xa0b9cb0 '__a' 'const class std::allocator<class std::basic_string<wchar_t> > &'))
) (CompoundStmt 0x9c31780 </usr/include/c++/4.6/bits/allocator.h:110:44, col:46>)


        template <typename _Tp1 = std::basic_string<wchar_t>> allocator(const allocator<std::basic_string<wchar_t> > &) throw()template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw() (CompoundStmt 0x9c317a0 </usr/include/c++/4.6/bits/allocator.h:115:28, col:30>)


    }
template <typename _Alloc = void> class allocator {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef void *pointer;
        typedef const void *const_pointer;
        typedef void value_type;
        template <typename _Tp1> struct rebind {
            struct rebind;
            typedef allocator<_Tp1> other;
        };
    }
template <typename _Alloc = std::basic_string<char>> class allocator
template <typename _Alloc> class allocator;
    template <class _CharT = char> struct char_traits {
        struct char_traits;
        typedef char char_type;
        typedef int int_type;
        typedef streampos pos_type;
        typedef streamoff off_type;
        typedef mbstate_t state_type;
        static void assign(char_type &__c1, const char_type &__c2) (CompoundStmt 0x9c1cf98 </usr/include/c++/4.6/bits/char_traits.h:244:7, col:22>
  (BinaryOperator 0x9c1cf80 <col:9, col:16> 'char_type':'char' lvalue '='
    (DeclRefExpr 0x9c1cf40 <col:9> 'char_type':'char' lvalue ParmVar 0x9c1a310 '__c1' 'char_type &')
    (ImplicitCastExpr 0x9c1cf70 <col:16> 'char_type':'char' <LValueToRValue>
      (DeclRefExpr 0x9c1cf58 <col:16> 'const char_type':'const char' lvalue ParmVar 0x9c1a3a0 '__c2' 'const char_type &'))))


        static bool eq(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x9c1d048 </usr/include/c++/4.6/bits/char_traits.h:248:7, col:30>
  (ReturnStmt 0x9c1d038 <col:9, col:24>
    (BinaryOperator 0x9c1d020 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x9c1cff0 <col:16> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9c1cfe0 <col:16> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9c1cfac <col:16> 'const char_type':'const char' lvalue ParmVar 0x9c1a4c0 '__c1' 'const char_type &')))
      (ImplicitCastExpr 0x9c1d010 <col:24> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9c1d000 <col:24> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9c1cfc4 <col:24> 'const char_type':'const char' lvalue ParmVar 0x9c1a510 '__c2' 'const char_type &'))))))


        static bool lt(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x9c1d0f8 </usr/include/c++/4.6/bits/char_traits.h:252:7, col:29>
  (ReturnStmt 0x9c1d0e8 <col:9, col:23>
    (BinaryOperator 0x9c1d0d0 <col:16, col:23> '_Bool' '<'
      (ImplicitCastExpr 0x9c1d0a0 <col:16> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9c1d090 <col:16> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9c1d05c <col:16> 'const char_type':'const char' lvalue ParmVar 0x9c1ac50 '__c1' 'const char_type &')))
      (ImplicitCastExpr 0x9c1d0c0 <col:23> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9c1d0b0 <col:23> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9c1d074 <col:23> 'const char_type':'const char' lvalue ParmVar 0x9c1aca0 '__c2' 'const char_type &'))))))


        static int compare(const char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9c1d220 </usr/include/c++/4.6/bits/char_traits.h:256:7, col:51>
  (ReturnStmt 0x9c1d210 <col:9, col:48>
    (CallExpr 0x9c1d198 <col:16, col:48> 'int'
      (ImplicitCastExpr 0x9c1d188 <col:16> 'int (*)(const void *, const void *, unsigned int)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9c1d10c <col:16> 'int (const void *, const void *, unsigned int)' lvalue Function 0x9bf74d0 '__builtin_memcmp' 'int (const void *, const void *, unsigned int)'))
      (ImplicitCastExpr 0x9c1d1d0 <col:33> 'const void *' <BitCast>
        (ImplicitCastExpr 0x9c1d1c0 <col:33> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9c1d124 <col:33> 'const char_type *' lvalue ParmVar 0x9c1ada0 '__s1' 'const char_type *')))
      (ImplicitCastExpr 0x9c1d1f0 <col:39> 'const void *' <BitCast>
        (ImplicitCastExpr 0x9c1d1e0 <col:39> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9c1d13c <col:39> 'const char_type *' lvalue ParmVar 0x9c1adf0 '__s2' 'const char_type *')))
      (ImplicitCastExpr 0x9c1d200 <col:45> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9c1d154 <col:45> 'size_t':'unsigned int' lvalue ParmVar 0x9c1ae30 '__n' 'size_t':'unsigned int')))))


        static size_t length(const char_type *__s) (CompoundStmt 0x9c1d3b8 </usr/include/c++/4.6/bits/char_traits.h:260:7, col:39>
  (ReturnStmt 0x9c1d3a8 <col:9, col:36>
    (CallExpr 0x9c1d378 <col:16, col:36> 'unsigned int'
      (ImplicitCastExpr 0x9c1d368 <col:16> 'unsigned int (*)(const char *)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9c1d314 <col:16> 'unsigned int (const char *)' lvalue Function 0x9c1d240 '__builtin_strlen' 'unsigned int (const char *)'))
      (ImplicitCastExpr 0x9c1d398 <col:33> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9c1d32c <col:33> 'const char_type *' lvalue ParmVar 0x9c1af70 '__s' 'const char_type *')))))


        static const char_type *find(const char_type *__s, size_t __n, const char_type &__a) (CompoundStmt 0x9c1d6a8 </usr/include/c++/4.6/bits/char_traits.h:264:7, col:80>
  (ReturnStmt 0x9c1d698 <col:9, col:77>
    (CXXStaticCastExpr 0x9c1d680 <col:16, col:77> 'const char_type *' static_cast<const char_type *> <BitCast>
      (CallExpr 0x9c1d5f8 <col:46, col:76> 'void *'
        (ImplicitCastExpr 0x9c1d5e8 <col:46> 'void *(*)(const void *, int, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9c1d564 <col:46> 'void *(const void *, int, unsigned int)' lvalue Function 0x9c1d400 '__builtin_memchr' 'void *(const void *, int, unsigned int)'))
        (ImplicitCastExpr 0x9c1d630 <col:63> 'const void *' <BitCast>
          (ImplicitCastExpr 0x9c1d620 <col:63> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x9c1d57c <col:63> 'const char_type *' lvalue ParmVar 0x9c1b090 '__s' 'const char_type *')))
        (ImplicitCastExpr 0x9c1d650 <col:68> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9c1d640 <col:68> 'char_type':'char' <LValueToRValue>
            (DeclRefExpr 0x9c1d594 <col:68> 'const char_type':'const char' lvalue ParmVar 0x9c1b120 '__a' 'const char_type &')))
        (ImplicitCastExpr 0x9c1d660 <col:73> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9c1d5ac <col:73> 'size_t':'unsigned int' lvalue ParmVar 0x9c1b0d0 '__n' 'size_t':'unsigned int'))))))


        static char_type *move(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9c1d7f8 </usr/include/c++/4.6/bits/char_traits.h:268:7, col:77>
  (ReturnStmt 0x9c1d7e8 <col:9, col:74>
    (CXXStaticCastExpr 0x9c1d7d0 <col:16, col:74> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0x9c1d748 <col:40, col:73> 'void *'
        (ImplicitCastExpr 0x9c1d738 <col:40> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9c1d6bc <col:40> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9be7b30 '__builtin_memmove' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0x9c1d780 <col:58> 'void *' <BitCast>
          (ImplicitCastExpr 0x9c1d770 <col:58> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x9c1d6d4 <col:58> 'char_type *' lvalue ParmVar 0x9c1b280 '__s1' 'char_type *')))
        (ImplicitCastExpr 0x9c1d7a0 <col:64> 'const void *' <BitCast>
          (ImplicitCastExpr 0x9c1d790 <col:64> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x9c1d6ec <col:64> 'const char_type *' lvalue ParmVar 0x9c1b2d0 '__s2' 'const char_type *')))
        (ImplicitCastExpr 0x9c1d7b0 <col:70> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9c1d704 <col:70> 'size_t':'unsigned int' lvalue ParmVar 0x9c1b310 '__n' 'size_t':'unsigned int'))))))


        static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9c1da98 </usr/include/c++/4.6/bits/char_traits.h:272:7, col:76>
  (ReturnStmt 0x9c1da88 <col:9, col:73>
    (CXXStaticCastExpr 0x9c1da70 <col:16, col:73> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0x9c1d9e8 <col:40, col:72> 'void *'
        (ImplicitCastExpr 0x9c1d9d8 <col:40> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9c1d974 <col:40> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9c1d810 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0x9c1da20 <col:57> 'void *' <BitCast>
          (ImplicitCastExpr 0x9c1da10 <col:57> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x9c1d98c <col:57> 'char_type *' lvalue ParmVar 0x9c1b450 '__s1' 'char_type *')))
        (ImplicitCastExpr 0x9c1da40 <col:63> 'const void *' <BitCast>
          (ImplicitCastExpr 0x9c1da30 <col:63> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x9c1d9a4 <col:63> 'const char_type *' lvalue ParmVar 0x9c1b4a0 '__s2' 'const char_type *')))
        (ImplicitCastExpr 0x9c1da50 <col:69> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9c1d9bc <col:69> 'size_t':'unsigned int' lvalue ParmVar 0x9c1b4e0 '__n' 'size_t':'unsigned int'))))))


        static char_type *assign(char_type *__s, size_t __n, char_type __a) (CompoundStmt 0x9c1dbe8 </usr/include/c++/4.6/bits/char_traits.h:276:7, col:74>
  (ReturnStmt 0x9c1dbd8 <col:9, col:71>
    (CXXStaticCastExpr 0x9c1dbc0 <col:16, col:71> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0x9c1db38 <col:40, col:70> 'void *'
        (ImplicitCastExpr 0x9c1db28 <col:40> 'void *(*)(void *, int, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9c1daac <col:40> 'void *(void *, int, unsigned int)' lvalue Function 0x9bf2ba0 '__builtin_memset' 'void *(void *, int, unsigned int)'))
        (ImplicitCastExpr 0x9c1db70 <col:57> 'void *' <BitCast>
          (ImplicitCastExpr 0x9c1db60 <col:57> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x9c1dac4 <col:57> 'char_type *' lvalue ParmVar 0x9c1b5c0 '__s' 'char_type *')))
        (ImplicitCastExpr 0x9c1db90 <col:62> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9c1db80 <col:62> 'char_type':'char' <LValueToRValue>
            (DeclRefExpr 0x9c1dadc <col:62> 'char_type':'char' lvalue ParmVar 0x9c1b640 '__a' 'char_type':'char')))
        (ImplicitCastExpr 0x9c1dba0 <col:67> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9c1daf4 <col:67> 'size_t':'unsigned int' lvalue ParmVar 0x9c1b600 '__n' 'size_t':'unsigned int'))))))


        static char_type to_char_type(const int_type &__c) (CompoundStmt 0x9c1dc68 </usr/include/c++/4.6/bits/char_traits.h:280:7, col:45>
  (ReturnStmt 0x9c1dc58 <col:9, col:42>
    (CXXStaticCastExpr 0x9c1dc40 <col:16, col:42> 'char_type':'char' static_cast<char_type> <NoOp>
      (ImplicitCastExpr 0x9c1dc30 <col:39> 'char_type':'char' <IntegralCast>
        (ImplicitCastExpr 0x9c1dc20 <col:39> 'int_type':'int' <LValueToRValue>
          (DeclRefExpr 0x9c1dbfc <col:39> 'const int_type':'const int' lvalue ParmVar 0x9c1b7d0 '__c' 'const int_type &'))))))


        static int_type to_int_type(const char_type &__c) (CompoundStmt 0x9c1dd20 </usr/include/c++/4.6/bits/char_traits.h:286:7, col:72>
  (ReturnStmt 0x9c1dd10 <col:9, col:69>
    (CXXStaticCastExpr 0x9c1dcf8 <col:16, col:69> 'int_type':'int' static_cast<int_type> <NoOp>
      (ImplicitCastExpr 0x9c1dce8 <col:38, col:68> 'int_type':'int' <IntegralCast>
        (CXXStaticCastExpr 0x9c1dcc8 <col:38, col:68> 'unsigned char' static_cast<unsigned char> <NoOp>
          (ImplicitCastExpr 0x9c1dcb8 <col:65> 'unsigned char' <IntegralCast>
            (ImplicitCastExpr 0x9c1dca8 <col:65> 'char_type':'char' <LValueToRValue>
              (DeclRefExpr 0x9c1dc7c <col:65> 'const char_type':'const char' lvalue ParmVar 0x9c1b8f0 '__c' 'const char_type &'))))))))


        static bool eq_int_type(const int_type &__c1, const int_type &__c2) (CompoundStmt 0x9c1ddb0 </usr/include/c++/4.6/bits/char_traits.h:290:7, col:30>
  (ReturnStmt 0x9c1dda0 <col:9, col:24>
    (BinaryOperator 0x9c1dd88 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x9c1dd68 <col:16> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0x9c1dd34 <col:16> 'const int_type':'const int' lvalue ParmVar 0x9c1ba10 '__c1' 'const int_type &'))
      (ImplicitCastExpr 0x9c1dd78 <col:24> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0x9c1dd4c <col:24> 'const int_type':'const int' lvalue ParmVar 0x9c1ba60 '__c2' 'const int_type &')))))


        static int_type eof() (CompoundStmt 0x9c1f3f0 </usr/include/c++/4.6/bits/char_traits.h:294:7, col:59>
  (ReturnStmt 0x9c1f3e0 <col:9, col:56>
    (CXXStaticCastExpr 0x9c1f3c8 <col:16, col:56> 'int_type':'int' static_cast<int_type> <NoOp>
      (UnaryOperator 0x9c1dde0 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:1149:28, col:29> 'int' prefix '-'
        (IntegerLiteral 0x9c1ddc8 <col:29> 'int' 1)))))


        static int_type not_eof(const int_type &__c) (CompoundStmt 0x9c1f558 </usr/include/c++/4.6/bits/char_traits.h:298:7, col:42>
  (ReturnStmt 0x9c1f548 <col:9, col:37>
    (ConditionalOperator 0x9c1f528 <col:16, col:37> 'int'
      (ParenExpr 0x9c1f4d0 <col:16, col:29> '_Bool'
        (BinaryOperator 0x9c1f4b8 <col:17, col:28> '_Bool' '=='
          (ImplicitCastExpr 0x9c1f4a8 <col:17> 'int_type':'int' <LValueToRValue>
            (DeclRefExpr 0x9c1f404 <col:17> 'const int_type':'const int' lvalue ParmVar 0x9c1ce20 '__c' 'const int_type &'))
          (CallExpr 0x9c1f488 <col:24, col:28> 'int_type':'int'
            (ImplicitCastExpr 0x9c1f478 <col:24> 'int_type (*)(void)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9c1f41c <col:24> 'int_type (void)' lvalue CXXMethod 0x9c1bba0 'eof' 'int_type (void)')))))
      (IntegerLiteral 0x9c1f4e8 <col:33> 'int' 0)
      (ImplicitCastExpr 0x9c1f518 <col:37> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0x9c1f500 <col:37> 'const int_type':'const int' lvalue ParmVar 0x9c1ce20 '__c' 'const int_type &')))))


    }
template <class _CharT = wchar_t> struct char_traits {
        struct char_traits;
        typedef wchar_t char_type;
        typedef wint_t int_type;
        typedef streamoff off_type;
        typedef wstreampos pos_type;
        typedef mbstate_t state_type;
        static void assign(char_type &__c1, const char_type &__c2) (CompoundStmt 0x9c20ce8 </usr/include/c++/4.6/bits/char_traits.h:315:7, col:22>
  (BinaryOperator 0x9c20cd0 <col:9, col:16> 'char_type':'wchar_t' lvalue '='
    (DeclRefExpr 0x9c20c90 <col:9> 'char_type':'wchar_t' lvalue ParmVar 0x9c1f910 '__c1' 'char_type &')
    (ImplicitCastExpr 0x9c20cc0 <col:16> 'char_type':'wchar_t' <LValueToRValue>
      (DeclRefExpr 0x9c20ca8 <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0x9c1f9a0 '__c2' 'const char_type &'))))


        static bool eq(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x9c20d78 </usr/include/c++/4.6/bits/char_traits.h:319:7, col:30>
  (ReturnStmt 0x9c20d68 <col:9, col:24>
    (BinaryOperator 0x9c20d50 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x9c20d30 <col:16> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9c20cfc <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0x9c1fac0 '__c1' 'const char_type &'))
      (ImplicitCastExpr 0x9c20d40 <col:24> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9c20d14 <col:24> 'const char_type':'const wchar_t' lvalue ParmVar 0x9c1fb10 '__c2' 'const char_type &')))))


        static bool lt(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x9c20e08 </usr/include/c++/4.6/bits/char_traits.h:323:7, col:29>
  (ReturnStmt 0x9c20df8 <col:9, col:23>
    (BinaryOperator 0x9c20de0 <col:16, col:23> '_Bool' '<'
      (ImplicitCastExpr 0x9c20dc0 <col:16> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9c20d8c <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0x9c1fc30 '__c1' 'const char_type &'))
      (ImplicitCastExpr 0x9c20dd0 <col:23> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9c20da4 <col:23> 'const char_type':'const wchar_t' lvalue ParmVar 0x9c1fc80 '__c2' 'const char_type &')))))


        static int compare(const char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9c20f70 </usr/include/c++/4.6/bits/char_traits.h:327:7, col:42>
  (ReturnStmt 0x9c20f60 <col:9, col:39>
    (CallExpr 0x9c20f08 <col:16, col:39> 'int'
      (ImplicitCastExpr 0x9c20ef8 <col:16> 'int (*)(const wchar_t *, const wchar_t *, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9c20e9c <col:16> 'int (const wchar_t *, const wchar_t *, size_t) throw()' lvalue Function 0x9b5b500 'wmemcmp' 'int (const wchar_t *, const wchar_t *, size_t) throw()' (UsingShadow 0x9c0b3b0 'wmemcmp')))
      (ImplicitCastExpr 0x9c20f30 <col:24> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9c20e54 <col:24> 'const char_type *' lvalue ParmVar 0x9c1fd80 '__s1' 'const char_type *'))
      (ImplicitCastExpr 0x9c20f40 <col:30> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9c20e6c <col:30> 'const char_type *' lvalue ParmVar 0x9c1fdd0 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0x9c20f50 <col:36> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9c20e84 <col:36> 'size_t':'unsigned int' lvalue ParmVar 0x9c1fe10 '__n' 'size_t':'unsigned int')))))


        static size_t length(const char_type *__s) (CompoundStmt 0x9c21078 </usr/include/c++/4.6/bits/char_traits.h:331:7, col:29>
  (ReturnStmt 0x9c21068 <col:9, col:26>
    (CallExpr 0x9c21038 <col:16, col:26> 'size_t':'unsigned int'
      (ImplicitCastExpr 0x9c21028 <col:16> 'size_t (*)(const wchar_t *) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9c20fd4 <col:16> 'size_t (const wchar_t *) throw()' lvalue Function 0x9b5ae30 'wcslen' 'size_t (const wchar_t *) throw()' (UsingShadow 0x9c0ad90 'wcslen')))
      (ImplicitCastExpr 0x9c21058 <col:23> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9c20fbc <col:23> 'const char_type *' lvalue ParmVar 0x9c1ff20 '__s' 'const char_type *')))))


        static const char_type *find(const char_type *__s, size_t __n, const char_type &__a) (CompoundStmt 0x9c211b8 </usr/include/c++/4.6/bits/char_traits.h:335:7, col:40>
  (ReturnStmt 0x9c211a8 <col:9, col:37>
    (ImplicitCastExpr 0x9c21198 <col:16, col:37> 'const char_type *' <NoOp>
      (CallExpr 0x9c21140 <col:16, col:37> 'wchar_t *'
        (ImplicitCastExpr 0x9c21130 <col:16> 'wchar_t *(*)(const wchar_t *, wchar_t, size_t) throw()' <FunctionToPointerDecay>
          (DeclRefExpr 0x9c21110 <col:16> 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' lvalue Function 0x9b5b350 'wmemchr' 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' (UsingShadow 0x9c0b810 'wmemchr')))
        (ImplicitCastExpr 0x9c21168 <col:24> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9c210c8 <col:24> 'const char_type *' lvalue ParmVar 0x9c20020 '__s' 'const char_type *'))
        (ImplicitCastExpr 0x9c21178 <col:29> 'char_type':'wchar_t' <LValueToRValue>
          (DeclRefExpr 0x9c210e0 <col:29> 'const char_type':'const wchar_t' lvalue ParmVar 0x9c200b0 '__a' 'const char_type &'))
        (ImplicitCastExpr 0x9c21188 <col:34> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9c210f8 <col:34> 'size_t':'unsigned int' lvalue ParmVar 0x9c20060 '__n' 'size_t':'unsigned int'))))))


        static char_type *move(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9c21320 </usr/include/c++/4.6/bits/char_traits.h:339:7, col:43>
  (ReturnStmt 0x9c21310 <col:9, col:40>
    (CallExpr 0x9c212b8 <col:16, col:40> 'wchar_t *'
      (ImplicitCastExpr 0x9c212a8 <col:16> 'wchar_t *(*)(wchar_t *, const wchar_t *, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9c2124c <col:16> 'wchar_t *(wchar_t *, const wchar_t *, size_t) throw()' lvalue Function 0x9b5b850 'wmemmove' 'wchar_t *(wchar_t *, const wchar_t *, size_t) throw()' (UsingShadow 0x9c0b490 'wmemmove')))
      (ImplicitCastExpr 0x9c212e0 <col:25> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9c21204 <col:25> 'char_type *' lvalue ParmVar 0x9c20210 '__s1' 'char_type *'))
      (ImplicitCastExpr 0x9c212f0 <col:31> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9c2121c <col:31> 'const char_type *' lvalue ParmVar 0x9c20260 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0x9c21300 <col:37> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9c21234 <col:37> 'size_t':'unsigned int' lvalue ParmVar 0x9c202a0 '__n' 'size_t':'unsigned int')))))


        static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9c21aa0 </usr/include/c++/4.6/bits/char_traits.h:343:7, col:42>
  (ReturnStmt 0x9c21a90 <col:9, col:39>
    (CallExpr 0x9c21a38 <col:16, col:39> 'wchar_t *'
      (ImplicitCastExpr 0x9c21a28 <col:16> 'wchar_t *(*)(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9c219f0 <col:16> 'wchar_t *(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' lvalue Function 0x9b5b6b0 'wmemcpy' 'wchar_t *(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' (UsingShadow 0x9c0b420 'wmemcpy')))
      (ImplicitCastExpr 0x9c21a60 <col:24> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9c2136c <col:24> 'char_type *' lvalue ParmVar 0x9c203d0 '__s1' 'char_type *'))
      (ImplicitCastExpr 0x9c21a70 <col:30> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9c21384 <col:30> 'const char_type *' lvalue ParmVar 0x9c20420 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0x9c21a80 <col:36> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9c2139c <col:36> 'size_t':'unsigned int' lvalue ParmVar 0x9c20460 '__n' 'size_t':'unsigned int')))))


        static char_type *assign(char_type *__s, size_t __n, char_type __a) (CompoundStmt 0x9c21c00 </usr/include/c++/4.6/bits/char_traits.h:347:7, col:40>
  (ReturnStmt 0x9c21bf0 <col:9, col:37>
    (CallExpr 0x9c21b98 <col:16, col:37> 'wchar_t *'
      (ImplicitCastExpr 0x9c21b88 <col:16> 'wchar_t *(*)(wchar_t *, wchar_t, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9c21b34 <col:16> 'wchar_t *(wchar_t *, wchar_t, size_t) throw()' lvalue Function 0x9b5ba10 'wmemset' 'wchar_t *(wchar_t *, wchar_t, size_t) throw()' (UsingShadow 0x9c0b500 'wmemset')))
      (ImplicitCastExpr 0x9c21bc0 <col:24> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9c21aec <col:24> 'char_type *' lvalue ParmVar 0x9c20540 '__s' 'char_type *'))
      (ImplicitCastExpr 0x9c21bd0 <col:29> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9c21b04 <col:29> 'char_type':'wchar_t' lvalue ParmVar 0x9c205c0 '__a' 'char_type':'wchar_t'))
      (ImplicitCastExpr 0x9c21be0 <col:34> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9c21b1c <col:34> 'size_t':'unsigned int' lvalue ParmVar 0x9c20580 '__n' 'size_t':'unsigned int')))))


        static char_type to_char_type(const int_type &__c) (CompoundStmt 0x9c21c80 </usr/include/c++/4.6/bits/char_traits.h:351:7, col:32>
  (ReturnStmt 0x9c21c70 <col:9, col:29>
    (CXXFunctionalCastExpr 0x9c21c58 <col:16, col:29> 'char_type':'wchar_t' functional cast to char_type <NoOp>
      (ImplicitCastExpr 0x9c21c48 <col:26> 'char_type':'wchar_t' <IntegralCast>
        (ImplicitCastExpr 0x9c21c38 <col:26> 'int_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9c21c20 <col:26> 'const int_type':'const unsigned int' lvalue ParmVar 0x9c20730 '__c' 'const int_type &'))))))


        static int_type to_int_type(const char_type &__c) (CompoundStmt 0x9c21d00 </usr/include/c++/4.6/bits/char_traits.h:355:7, col:31>
  (ReturnStmt 0x9c21cf0 <col:9, col:28>
    (CXXFunctionalCastExpr 0x9c21cd8 <col:16, col:28> 'int_type':'unsigned int' functional cast to int_type <NoOp>
      (ImplicitCastExpr 0x9c21cc8 <col:25> 'int_type':'unsigned int' <IntegralCast>
        (ImplicitCastExpr 0x9c21cb8 <col:25> 'char_type':'wchar_t' <LValueToRValue>
          (DeclRefExpr 0x9c21ca0 <col:25> 'const char_type':'const wchar_t' lvalue ParmVar 0x9c20850 '__c' 'const char_type &'))))))


        static bool eq_int_type(const int_type &__c1, const int_type &__c2) (CompoundStmt 0x9c21d90 </usr/include/c++/4.6/bits/char_traits.h:359:7, col:30>
  (ReturnStmt 0x9c21d80 <col:9, col:24>
    (BinaryOperator 0x9c21d68 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x9c21d48 <col:16> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9c21d14 <col:16> 'const int_type':'const unsigned int' lvalue ParmVar 0x9c20970 '__c1' 'const int_type &'))
      (ImplicitCastExpr 0x9c21d58 <col:24> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9c21d2c <col:24> 'const int_type':'const unsigned int' lvalue ParmVar 0x9c209c0 '__c2' 'const int_type &')))))


        static int_type eof() (CompoundStmt 0x9c21e08 </usr/include/c++/4.6/bits/char_traits.h:363:7, col:45>
  (ReturnStmt 0x9c21df8 <col:9, col:42>
    (CXXStaticCastExpr 0x9c21de0 <col:16, col:42> 'int_type':'unsigned int' static_cast<int_type> <NoOp>
      (ParenExpr 0x9c21dc0 </usr/include/wchar.h:119:15, col:27> 'unsigned int'
        (IntegerLiteral 0x9c21da8 <col:16> 'unsigned int' 4294967295)))))


        static int_type not_eof(const int_type &__c) (CompoundStmt 0x9c21fe0 </usr/include/c++/4.6/bits/char_traits.h:367:7, col:51>
  (ReturnStmt 0x9c21fd0 <col:9, col:46>
    (ConditionalOperator 0x9c21fb0 <col:16, col:46> 'unsigned int'
      (CallExpr 0x9c21f28 <col:16, col:38> '_Bool'
        (ImplicitCastExpr 0x9c21f18 <col:16> '_Bool (*)(const int_type &, const int_type &)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9c21e1c <col:16> '_Bool (const int_type &, const int_type &)' lvalue CXXMethod 0x9c20a60 'eq_int_type' '_Bool (const int_type &, const int_type &)'))
        (DeclRefExpr 0x9c21e34 <col:28> 'const int_type':'const unsigned int' lvalue ParmVar 0x9c20b70 '__c' 'const int_type &')
        (MaterializeTemporaryExpr 0x9c21f50 <col:33, col:37> 'const int_type':'const unsigned int' lvalue
          (CallExpr 0x9c21eb8 <col:33, col:37> 'int_type':'unsigned int'
            (ImplicitCastExpr 0x9c21ea8 <col:33> 'int_type (*)(void)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9c21e4c <col:33> 'int_type (void)' lvalue CXXMethod 0x9c20b00 'eof' 'int_type (void)')))))
      (ImplicitCastExpr 0x9c21fa0 <col:42> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0x9c21f60 <col:42> 'int' 0))
      (ImplicitCastExpr 0x9c21f90 <col:46> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9c21f78 <col:46> 'const int_type':'const unsigned int' lvalue ParmVar 0x9c20b70 '__c' 'const int_type &')))))


    }
template <class _CharT> struct char_traits;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> class basic_string {
        class basic_string;
        typedef typename allocator<char>::rebind<char>::other _CharT_alloc_type;
    public:
    public:
        typedef std::char_traits<char> traits_type;
        typedef typename char_traits<char>::char_type value_type;
        typedef std::allocator<char> allocator_type;
        typedef typename _CharT_alloc_type::size_type size_type;
        typedef typename _CharT_alloc_type::difference_type difference_type;
        typedef typename _CharT_alloc_type::reference reference;
        typedef typename _CharT_alloc_type::const_reference const_reference;
        typedef typename _CharT_alloc_type::pointer pointer;
        typedef typename _CharT_alloc_type::const_pointer const_pointer;
        typedef __gnu_cxx::__normal_iterator<pointer, basic_string<char> > iterator;
        typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string<char> > const_iterator;
        typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
        typedef std::reverse_iterator<iterator> reverse_iterator;
    private:
    private:
        struct _Rep_base {
            struct _Rep_base;
            size_type _M_length;
            size_type _M_capacity;
            _Atomic_word _M_refcount;
        };
        struct _Rep :  std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep_base {
            struct _Rep;
            typedef typename allocator<char>::rebind<char>::other _Raw_bytes_alloc;
            static const size_type _S_max_size;
            static const char _S_terminal;
            static size_type _S_empty_rep_storage[];
            static std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep &_S_empty_rep();
            bool _M_is_leaked() const;
            bool _M_is_shared() const;
            void _M_set_leaked();
            void _M_set_sharable();
            void _M_set_length_and_sharable(size_type __n);
            char *_M_refdata() throw();
            char *_M_grab(const std::allocator<char> &__alloc1, const std::allocator<char> &__alloc2);
            static std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep *_S_create(size_type, size_type, const std::allocator<char> &);
            void _M_dispose(const std::allocator<char> &__a);
            void _M_destroy(const std::allocator<char> &) throw();
            char *_M_refcopy() throw();
            char *_M_clone(const std::allocator<char> &, size_type __res);
        };
        struct _Alloc_hider :  std::allocator<char> {
            struct _Alloc_hider;
            _Alloc_hider(char *__dat, const std::allocator<char> &__a);
            char *_M_p;
        };
    public:
    public:
        static const size_type npos = (CXXStaticCastExpr 0x9d9ae98 </usr/include/c++/4.6/bits/basic_string.h:279:37, col:62> 'size_type':'unsigned int' static_cast<size_type> <NoOp>
  (ImplicitCastExpr 0x9d9ae88 <col:60, col:61> 'size_type':'unsigned int' <IntegralCast>
    (UnaryOperator 0x9d24990 <col:60, col:61> 'int' prefix '-'
      (IntegerLiteral 0x9d24978 <col:61> 'int' 1))))
;
    private:
    private:
        mutable std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider _M_dataplus;
        char *_M_data() const (CompoundStmt 0xa0d7970 </usr/include/c++/4.6/bits/basic_string.h:287:7, col:35>
  (ReturnStmt 0xa0d7960 <col:9, col:29>
    (ImplicitCastExpr 0xa0d7950 <col:17, col:29> 'char *' <LValueToRValue>
      (MemberExpr 0xa0d7930 <col:17, col:29> 'char *' lvalue ._M_p 0x9d9b420
        (MemberExpr 0xa0d7910 <col:17> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Alloc_hider' lvalue ->_M_dataplus 0x9d9b450
          (CXXThisExpr 0xa0d77f0 <col:17> 'const class std::basic_string<char> *' this))))))


        char *_M_data(char *__p);
        std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep *_M_rep() const (CompoundStmt 0xa0d77d8 </usr/include/c++/4.6/bits/basic_string.h:295:7, col:62>
  (ReturnStmt 0xa0d77c8 <col:9, col:59>
    (UnaryOperator 0xa0d77b0 <col:16, col:59> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *' prefix '&'
      (ParenExpr 0xa0d7798 <col:17, col:59> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep' lvalue
        (ArraySubscriptExpr 0xa0d7780 <col:18, col:58> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep' lvalue
          (ParenExpr 0xa0d7768 <col:18, col:54> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *'
            (CXXReinterpretCastExpr 0xa0d7750 <col:19, col:53> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *' reinterpret_cast<struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *> <BitCast>
              (CXXMemberCallExpr 0xa0d7730 <col:44, col:52> 'char *'
                (MemberExpr 0xa0d7710 <col:44> '<bound member function type>' ->_M_data 0x9d9b4d0
                  (CXXThisExpr 0xa0d7700 <col:44> 'const class std::basic_string<char> *' this)))))
          (UnaryOperator 0x9d46d68 <col:56, col:57> 'int' prefix '-'
            (IntegerLiteral 0x9d46d50 <col:57> 'int' 1)))))))


        iterator _M_ibegin() const;
        iterator _M_iend() const;
        void _M_leak();
        size_type _M_check(size_type __pos, const char *__s) const;
        void _M_check_length(size_type __n1, size_type __n2, const char *__s) const;
        size_type _M_limit(size_type __pos, size_type __off) const;
        bool _M_disjunct(const char *__s) const;
        static void _M_copy(char *__d, const char *__s, size_type __n);
        static void _M_move(char *__d, const char *__s, size_type __n);
        static void _M_assign(char *__d, size_type __n, char __c);
        template <class _Iterator> static void _S_copy_chars(char *__p, _Iterator __k1, _Iterator __k2);
        static void _S_copy_chars(char *__p, iterator __k1, iterator __k2);
        static void _S_copy_chars(char *__p, const_iterator __k1, const_iterator __k2);
        static void _S_copy_chars(char *__p, char *__k1, char *__k2);
        static void _S_copy_chars(char *__p, const char *__k1, const char *__k2);
        static int _S_compare(size_type __n1, size_type __n2);
        void _M_mutate(size_type __pos, size_type __len1, size_type __len2);
        void _M_leak_hard();
        static std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep &_S_empty_rep();
    public:
    public:
        basic_string();
        basic_string(const std::allocator<char> &__a);
        basic_string(const std::basic_string<char> &__str);
        basic_string(const std::basic_string<char> &__str, size_type __pos, size_type __n);
        basic_string(const std::basic_string<char> &__str, size_type __pos, size_type __n, const std::allocator<char> &__a);
        basic_string(const char *__s, size_type __n, const std::allocator<char> &__a);
        basic_string(const char *__s, const std::allocator<char> &__a);
        basic_string(size_type __n, char __c, const std::allocator<char> &__a);
        template <class _InputIterator> basic_string(_InputIterator __beg, _InputIterator __end, const std::allocator<char> &__a);
        void ~basic_string();
        std::basic_string<char> &operator=(const std::basic_string<char> &__str);
        std::basic_string<char> &operator=(const char *__s);
        std::basic_string<char> &operator=(char __c);
        iterator begin();
        const_iterator begin() const;
        iterator end();
        const_iterator end() const;
        reverse_iterator rbegin();
        const_reverse_iterator rbegin() const;
        reverse_iterator rend();
        const_reverse_iterator rend() const;
    public:
    public:
        size_type size() const (CompoundStmt 0xa0d7128 </usr/include/c++/4.6/bits/basic_string.h:710:7, col:37>
  (ReturnStmt 0xa0d7118 <col:9, col:26>
    (ImplicitCastExpr 0xa0d7108 <col:16, col:26> 'size_type':'unsigned int' <LValueToRValue>
      (MemberExpr 0xa0d70e8 <col:16, col:26> 'size_type':'unsigned int' lvalue ->_M_length 0x9dbb390
        (ImplicitCastExpr 0xa0d70d8 <col:16, col:23> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
          (CXXMemberCallExpr 0xa0d70a0 <col:16, col:23> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *'
            (MemberExpr 0xa0d7080 <col:16> '<bound member function type>' ->_M_rep 0x9d9b7a0
              (CXXThisExpr 0xa0d6f58 <col:16> 'const class std::basic_string<char> *' this))))))))


        size_type length() const;
        size_type max_size() const;
        void resize(size_type __n, char __c);
        void resize(size_type __n);
        size_type capacity() const;
        void reserve(size_type __res_arg);
        void clear();
        bool empty() const (CompoundStmt 0xa0d6f40 </usr/include/c++/4.6/bits/basic_string.h:803:7, col:35>
  (ReturnStmt 0xa0d6f30 <col:9, col:32>
    (BinaryOperator 0xa0d6f18 <col:16, col:32> '_Bool' '=='
      (CXXMemberCallExpr 0xa0d6ee8 <col:16, col:27> 'size_type':'unsigned int'
        (MemberExpr 0xa0d6ec8 <col:16, col:22> '<bound member function type>' ->size 0x9da2750
          (CXXThisExpr 0xa0d6eb8 <col:16> 'const class std::basic_string<char> *' this)))
      (ImplicitCastExpr 0xa0d6f08 <col:32> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0x9d4f748 <col:32> 'int' 0)))))


        const_reference operator[](size_type __pos) const;
        reference operator[](size_type __pos);
        const_reference at(size_type __n) const (CompoundStmt 0xa0d8010 </usr/include/c++/4.6/bits/basic_string.h:856:7, line:860:7>
  (IfStmt 0xa0d7a98 <line:857:2, line:858:48>
    <<<NULL>>>
    (BinaryOperator 0xa0d7a40 <line:857:6, col:24> '_Bool' '>='
      (ImplicitCastExpr 0xa0d7a30 <col:6> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa0d79c4 <col:6> 'size_type':'unsigned int' lvalue ParmVar 0x9da3cb0 '__n' 'size_type':'unsigned int'))
      (CXXMemberCallExpr 0xa0d7a10 <col:13, col:24> 'size_type':'unsigned int'
        (MemberExpr 0xa0d79f0 <col:13, col:19> '<bound member function type>' ->size 0x9da2750
          (CXXThisExpr 0xa0d79e0 <col:13> 'const class std::basic_string<char> *' this))))
    (CallExpr 0xa0d7a68 <line:858:4, col:48> 'void'
      (ImplicitCastExpr 0xa0d7a58 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x9d4fbb4 <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9b766b0 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa0d7a88 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0x9d4fba0 <col:24, col:30> 'const char [17]' lvalue
          (StringLiteral 0x9d4fb70 </usr/include/c++/4.6/bits/basic_string.h:858:29> 'const char [17]' lvalue "basic_string::at"))))
    <<<NULL>>>)
  (ReturnStmt 0xa0d8000 <line:859:2, col:22>
    (ImplicitCastExpr 0xa0d7ff0 <col:9, col:22> 'const char':'const char' lvalue <NoOp>
      (ArraySubscriptExpr 0xa0d7fd8 <col:9, col:22> 'char':'char' lvalue
        (CXXMemberCallExpr 0xa0d7f90 <col:9, col:17> 'char *'
          (MemberExpr 0xa0d7f70 <col:9> '<bound member function type>' ->_M_data 0x9d9b4d0
            (CXXThisExpr 0xa0d7f60 <col:9> 'const class std::basic_string<char> *' this)))
        (ImplicitCastExpr 0xa0d7fc8 <col:19> 'size_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa0d7fac <col:19> 'size_type':'unsigned int' lvalue ParmVar 0x9da3cb0 '__n' 'size_type':'unsigned int'))))))


        reference at(size_type __n);
        std::basic_string<char> &operator+=(const std::basic_string<char> &__str);
        std::basic_string<char> &operator+=(const char *__s);
        std::basic_string<char> &operator+=(char __c);
        std::basic_string<char> &append(const std::basic_string<char> &__str);
        std::basic_string<char> &append(const std::basic_string<char> &__str, size_type __pos, size_type __n);
        std::basic_string<char> &append(const char *__s, size_type __n);
        std::basic_string<char> &append(const char *__s);
        std::basic_string<char> &append(size_type __n, char __c);
        template <class _InputIterator> std::basic_string<char> &append(_InputIterator __first, _InputIterator __last);
        void push_back(char __c);
        std::basic_string<char> &assign(const std::basic_string<char> &__str);
        std::basic_string<char> &assign(const std::basic_string<char> &__str, size_type __pos, size_type __n);
        std::basic_string<char> &assign(const char *__s, size_type __n);
        std::basic_string<char> &assign(const char *__s);
        std::basic_string<char> &assign(size_type __n, char __c);
        template <class _InputIterator> std::basic_string<char> &assign(_InputIterator __first, _InputIterator __last);
        void insert(iterator __p, size_type __n, char __c);
        template <class _InputIterator> void insert(iterator __p, _InputIterator __beg, _InputIterator __end);
        std::basic_string<char> &insert(size_type __pos1, const std::basic_string<char> &__str);
        std::basic_string<char> &insert(size_type __pos1, const std::basic_string<char> &__str, size_type __pos2, size_type __n);
        std::basic_string<char> &insert(size_type __pos, const char *__s, size_type __n);
        std::basic_string<char> &insert(size_type __pos, const char *__s);
        std::basic_string<char> &insert(size_type __pos, size_type __n, char __c);
        iterator insert(iterator __p, char __c);
        std::basic_string<char> &erase(size_type __pos, size_type __n);
        iterator erase(iterator __position);
        iterator erase(iterator __first, iterator __last);
        std::basic_string<char> &replace(size_type __pos, size_type __n, const std::basic_string<char> &__str);
        std::basic_string<char> &replace(size_type __pos1, size_type __n1, const std::basic_string<char> &__str, size_type __pos2, size_type __n2);
        std::basic_string<char> &replace(size_type __pos, size_type __n1, const char *__s, size_type __n2);
        std::basic_string<char> &replace(size_type __pos, size_type __n1, const char *__s);
        std::basic_string<char> &replace(size_type __pos, size_type __n1, size_type __n2, char __c);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const std::basic_string<char> &__str);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const char *__s, size_type __n);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const char *__s);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, size_type __n, char __c);
        template <class _InputIterator> std::basic_string<char> &replace(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, char *__k1, char *__k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const char *__k1, const char *__k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const_iterator __k1, const_iterator __k2);
    private:
    private:
        template <class _Integer> std::basic_string<char> &_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n, _Integer __val, std::__true_type);
        template <class _InputIterator> std::basic_string<char> &_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2, std::__false_type);
        std::basic_string<char> &_M_replace_aux(size_type __pos1, size_type __n1, size_type __n2, char __c);
        std::basic_string<char> &_M_replace_safe(size_type __pos1, size_type __n1, const char *__s, size_type __n2);
        template <class _InIterator> static char *_S_construct_aux(_InIterator __beg, _InIterator __end, const std::allocator<char> &__a, std::__false_type);
        template <class _Integer> static char *_S_construct_aux(_Integer __beg, _Integer __end, const std::allocator<char> &__a, std::__true_type);
        static char *_S_construct_aux_2(size_type __req, char __c, const std::allocator<char> &__a);
        template <class _InIterator> static char *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<char> &__a);
        template <class _InIterator> static char *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<char> &__a, std::input_iterator_tag);
        template <class _FwdIterator> static char *_S_construct(_FwdIterator __beg, _FwdIterator __end, const std::allocator<char> &__a, std::forward_iterator_tag);
        static char *_S_construct(size_type __req, char __c, const std::allocator<char> &__a);
    public:
    public:
        size_type copy(char *__s, size_type __n, size_type __pos) const;
        void swap(std::basic_string<char> &__s);
        const char *c_str() const;
        const char *data() const;
        allocator_type get_allocator() const;
        size_type find(const char *__s, size_type __pos, size_type __n) const;
        size_type find(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find(const char *__s, size_type __pos) const;
        size_type find(char __c, size_type __pos) const;
        size_type rfind(const std::basic_string<char> &__str, size_type __pos) const;
        size_type rfind(const char *__s, size_type __pos, size_type __n) const;
        size_type rfind(const char *__s, size_type __pos) const;
        size_type rfind(char __c, size_type __pos) const;
        size_type find_first_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_first_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_first_of(const char *__s, size_type __pos) const;
        size_type find_first_of(char __c, size_type __pos) const;
        size_type find_last_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_last_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_last_of(const char *__s, size_type __pos) const;
        size_type find_last_of(char __c, size_type __pos) const;
        size_type find_first_not_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_first_not_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_first_not_of(const char *__s, size_type __pos) const;
        size_type find_first_not_of(char __c, size_type __pos) const;
        size_type find_last_not_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_last_not_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_last_not_of(const char *__s, size_type __pos) const;
        size_type find_last_not_of(char __c, size_type __pos) const;
        std::basic_string<char> substr(size_type __pos, size_type __n) const;
        int compare(const std::basic_string<char> &__str) const;
        int compare(size_type __pos, size_type __n, const std::basic_string<char> &__str) const;
        int compare(size_type __pos1, size_type __n1, const std::basic_string<char> &__str, size_type __pos2, size_type __n2) const;
        int compare(const char *__s) const;
        int compare(size_type __pos, size_type __n1, const char *__s) const;
        int compare(size_type __pos, size_type __n1, const char *__s, size_type __n2) const;
    }
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> class basic_string {
        class basic_string;
        typedef typename allocator<wchar_t>::rebind<wchar_t>::other _CharT_alloc_type;
    public:
    public:
        typedef std::char_traits<wchar_t> traits_type;
        typedef typename char_traits<wchar_t>::char_type value_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename _CharT_alloc_type::size_type size_type;
        typedef typename _CharT_alloc_type::difference_type difference_type;
        typedef typename _CharT_alloc_type::reference reference;
        typedef typename _CharT_alloc_type::const_reference const_reference;
        typedef typename _CharT_alloc_type::pointer pointer;
        typedef typename _CharT_alloc_type::const_pointer const_pointer;
        typedef __gnu_cxx::__normal_iterator<pointer, basic_string<wchar_t> > iterator;
        typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string<wchar_t> > const_iterator;
        typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
        typedef std::reverse_iterator<iterator> reverse_iterator;
    private:
    private:
        struct _Rep_base {
            struct _Rep_base;
            size_type _M_length;
            size_type _M_capacity;
            _Atomic_word _M_refcount;
        };
        struct _Rep :  std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep_base {
            struct _Rep;
            typedef typename allocator<wchar_t>::rebind<char>::other _Raw_bytes_alloc;
            static const size_type _S_max_size;
            static const wchar_t _S_terminal;
            static size_type _S_empty_rep_storage[];
            static std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep &_S_empty_rep() (CompoundStmt 0xa0d6978 </usr/include/c++/4.6/bits/basic_string.h:176:9, line:182:2>
  (DeclStmt 0xa0d67d8 <line:180:4, col:62>
    0xa0d6600 "void *__p =
      (CXXReinterpretCastExpr 0xa0d67c0 <col:16, col:61> 'void *' reinterpret_cast<void *> <BitCast>
        (UnaryOperator 0xa0d67a8 <col:40, col:41> 'size_type (*)[]' prefix '&'
          (DeclRefExpr 0xa0d6750 <col:41> 'size_type []' lvalue Var 0x9de11c0 '_S_empty_rep_storage' 'size_type []')))")
  (ReturnStmt 0xa0d6968 <line:181:4, col:39>
    (UnaryOperator 0xa0d6950 <col:11, col:39> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue prefix '*'
      (CXXReinterpretCastExpr 0xa0d6938 <col:12, col:39> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' reinterpret_cast<struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *> <BitCast>
        (ImplicitCastExpr 0xa0d6928 <col:36> 'void *' <LValueToRValue>
          (DeclRefExpr 0xa0d690c <col:36> 'void *' lvalue Var 0xa0d6600 '__p' 'void *'))))))


            bool _M_is_leaked() const;
            bool _M_is_shared() const;
            void _M_set_leaked();
            void _M_set_sharable();
            void _M_set_length_and_sharable(size_type __n);
            wchar_t *_M_refdata() throw();
            wchar_t *_M_grab(const std::allocator<wchar_t> &__alloc1, const std::allocator<wchar_t> &__alloc2);
            static std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep *_S_create(size_type, size_type, const std::allocator<wchar_t> &);
            void _M_dispose(const std::allocator<wchar_t> &__a) (CompoundStmt 0xa0d65e8 </usr/include/c++/4.6/bits/basic_string.h:232:2, line:246:2>
  (IfStmt 0xa0d65c8 <line:234:4, line:245:6>
    <<<NULL>>>
    (ImplicitCastExpr 0xa0d62f0 <line:234:8, col:55> '_Bool' <IntegralToBoolean>
      (CallExpr 0xa0d62a8 <col:8, col:55> 'long'
        (ImplicitCastExpr 0xa0d6298 <col:8> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9d463fc <col:8> 'long (long, long)' lvalue Function 0x9d45c10 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0xa0d62d0 <col:25, col:47> 'long' <IntegralCast>
          (BinaryOperator 0xa0d6280 <col:25, col:47> '_Bool' '!='
            (CXXThisExpr 0xa0d60e0 <col:25> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this)
            (UnaryOperator 0xa0d6268 <col:33, col:47> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' prefix '&'
              (CallExpr 0xa0d6248 <col:34, col:47> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
                (ImplicitCastExpr 0xa0d6238 <col:34> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(*)(void)' <FunctionToPointerDecay>
                  (DeclRefExpr 0xa0d6200 <col:34> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(void)' lvalue CXXMethod 0x9de1340 '_S_empty_rep' 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(void)'))))))
        (ImplicitCastExpr 0xa0d62e0 <col:50> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0x9d464e8 <col:50> '_Bool' false))))
    (CompoundStmt 0xa0d65b0 <line:236:6, line:245:6>
      (NullStmt 0x9d46520 <line:238:67>)
      (IfStmt 0xa0d6590 <line:239:8, line:244:3>
        <<<NULL>>>
        (BinaryOperator 0xa0d63e8 <line:239:12, line:240:16> '_Bool' '<='
          (CallExpr 0xa0d63c0 <line:239:12, line:240:11> '_Atomic_word':'int'
            (ImplicitCastExpr 0xa0d63b0 <line:239:12, col:23> '_Atomic_word (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9d46550 <col:12, col:23> '_Atomic_word (_Atomic_word *, int)' lvalue Function 0x9d1fa80 '__exchange_and_add_dispatch' '_Atomic_word (_Atomic_word *, int)'))
            (UnaryOperator 0xa0d6398 <col:51, col:58> '_Atomic_word *' prefix '&'
              (MemberExpr 0xa0d6378 <col:52, col:58> '_Atomic_word':'int' lvalue ->_M_refcount 0x9de0990
                (ImplicitCastExpr 0xa0d6368 <col:52> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
                  (CXXThisExpr 0xa0d6340 <col:52> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this))))
            (UnaryOperator 0x9d465e8 <line:240:9, col:10> 'int' prefix '-'
              (IntegerLiteral 0x9d465d0 <col:10> 'int' 1)))
          (IntegerLiteral 0x9d46628 <col:16> 'int' 0))
        (CompoundStmt 0xa0d6578 <line:241:3, line:244:3>
          (NullStmt 0x9d466a8 <line:242:63>)
          (CXXMemberCallExpr 0xa0d6558 <line:243:5, col:19> 'void'
            (MemberExpr 0xa0d6520 <col:5> '<bound member function type>' ->_M_destroy 0x9de1ff0
              (CXXThisExpr 0xa0d6400 <col:5> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this))
            (DeclRefExpr 0xa0d6540 <col:16> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue ParmVar 0x9de1ed0 '__a' 'const class std::allocator<wchar_t> &')))
        <<<NULL>>>))
    <<<NULL>>>))


            void _M_destroy(const std::allocator<wchar_t> &) throw();
            wchar_t *_M_refcopy() throw();
            wchar_t *_M_clone(const std::allocator<wchar_t> &, size_type __res);
        };
        struct _Alloc_hider :  std::allocator<wchar_t> {
            struct _Alloc_hider;
            _Alloc_hider(wchar_t *__dat, const std::allocator<wchar_t> &__a);
            wchar_t *_M_p;
            inline void ~_Alloc_hider() throw() (CompoundStmt 0xa0d5840 </usr/include/c++/4.6/bits/basic_string.h:266:14>)


        };
    public:
    public:
        static const size_type npos = (CXXStaticCastExpr 0x9dc03e8 </usr/include/c++/4.6/bits/basic_string.h:279:37, col:62> 'size_type':'unsigned int' static_cast<size_type> <NoOp>
  (ImplicitCastExpr 0x9dc03d8 <col:60, col:61> 'size_type':'unsigned int' <IntegralCast>
    (UnaryOperator 0x9d24990 <col:60, col:61> 'int' prefix '-'
      (IntegerLiteral 0x9d24978 <col:61> 'int' 1))))
;
    private:
    private:
        mutable std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Alloc_hider _M_dataplus;
        wchar_t *_M_data() const (CompoundStmt 0xa0d6080 </usr/include/c++/4.6/bits/basic_string.h:287:7, col:35>
  (ReturnStmt 0xa0d6070 <col:9, col:29>
    (ImplicitCastExpr 0xa0d6060 <col:17, col:29> 'wchar_t *' <LValueToRValue>
      (MemberExpr 0xa0d6040 <col:17, col:29> 'wchar_t *' lvalue ._M_p 0x9dc0970
        (MemberExpr 0xa0d6020 <col:17> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Alloc_hider' lvalue ->_M_dataplus 0x9dc09a0
          (CXXThisExpr 0xa0d5f00 <col:17> 'const class std::basic_string<wchar_t> *' this))))))


        wchar_t *_M_data(wchar_t *__p);
        std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep *_M_rep() const (CompoundStmt 0xa0d5ee8 </usr/include/c++/4.6/bits/basic_string.h:295:7, col:62>
  (ReturnStmt 0xa0d5ed8 <col:9, col:59>
    (UnaryOperator 0xa0d5ec0 <col:16, col:59> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' prefix '&'
      (ParenExpr 0xa0d5ea8 <col:17, col:59> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
        (ArraySubscriptExpr 0xa0d5e90 <col:18, col:58> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
          (ParenExpr 0xa0d5e78 <col:18, col:54> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
            (CXXReinterpretCastExpr 0xa0d5e60 <col:19, col:53> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' reinterpret_cast<struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *> <BitCast>
              (CXXMemberCallExpr 0xa0d5e40 <col:44, col:52> 'wchar_t *'
                (MemberExpr 0xa0d5e20 <col:44> '<bound member function type>' ->_M_data 0x9dc0a20
                  (CXXThisExpr 0xa0d5e10 <col:44> 'const class std::basic_string<wchar_t> *' this)))))
          (UnaryOperator 0x9d46d68 <col:56, col:57> 'int' prefix '-'
            (IntegerLiteral 0x9d46d50 <col:57> 'int' 1)))))))


        iterator _M_ibegin() const;
        iterator _M_iend() const;
        void _M_leak();
        size_type _M_check(size_type __pos, const char *__s) const;
        void _M_check_length(size_type __n1, size_type __n2, const char *__s) const;
        size_type _M_limit(size_type __pos, size_type __off) const;
        bool _M_disjunct(const wchar_t *__s) const;
        static void _M_copy(wchar_t *__d, const wchar_t *__s, size_type __n);
        static void _M_move(wchar_t *__d, const wchar_t *__s, size_type __n);
        static void _M_assign(wchar_t *__d, size_type __n, wchar_t __c);
        template <class _Iterator> static void _S_copy_chars(wchar_t *__p, _Iterator __k1, _Iterator __k2);
        static void _S_copy_chars(wchar_t *__p, iterator __k1, iterator __k2);
        static void _S_copy_chars(wchar_t *__p, const_iterator __k1, const_iterator __k2);
        static void _S_copy_chars(wchar_t *__p, wchar_t *__k1, wchar_t *__k2);
        static void _S_copy_chars(wchar_t *__p, const wchar_t *__k1, const wchar_t *__k2);
        static int _S_compare(size_type __n1, size_type __n2);
        void _M_mutate(size_type __pos, size_type __len1, size_type __len2);
        void _M_leak_hard();
        static std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep &_S_empty_rep();
    public:
    public:
        basic_string();
        basic_string(const std::allocator<wchar_t> &__a);
        basic_string(const std::basic_string<wchar_t> &__str);
        basic_string(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n);
        basic_string(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n, const std::allocator<wchar_t> &__a);
        basic_string(const wchar_t *__s, size_type __n, const std::allocator<wchar_t> &__a);
        basic_string(const wchar_t *__s, const std::allocator<wchar_t> &__a);
        basic_string(size_type __n, wchar_t __c, const std::allocator<wchar_t> &__a);
        template <class _InputIterator> basic_string(_InputIterator __beg, _InputIterator __end, const std::allocator<wchar_t> &__a);
        void ~basic_string() (CompoundStmt 0xa0d5790 </usr/include/c++/4.6/bits/basic_string.h:533:7, col:54>
  (ExprWithCleanups 0xa0d5770 <col:9, col:51> 'void'
    (CXXTemporary 0xa0d56f0)
    (CXXMemberCallExpr 0xa0d5708 <col:9, col:51> 'void'
      (MemberExpr 0xa0d566c <col:9, col:19> '<bound member function type>' ->_M_dispose 0x9de1f20
        (CXXMemberCallExpr 0xa0d5640 <col:9, col:16> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
          (MemberExpr 0xa0d5620 <col:9> '<bound member function type>' ->_M_rep 0x9dc0d10
            (ImplicitCastExpr 0xa0d5660 <col:9> 'const class std::basic_string<wchar_t> *' <NoOp>
              (CXXThisExpr 0xa0d5500 <col:9> 'class std::basic_string<wchar_t> *' this)))))
      (MaterializeTemporaryExpr 0xa0d5760 <col:30, col:50> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue
        (ImplicitCastExpr 0xa0d5750 <col:30, col:50> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' <NoOp>
          (CXXBindTemporaryExpr 0xa0d56f8 <col:30, col:50> 'allocator_type':'class std::allocator<wchar_t>' (CXXTemporary 0xa0d56f0)
            (CXXMemberCallExpr 0xa0d56c0 <col:30, col:50> 'allocator_type':'class std::allocator<wchar_t>'
              (MemberExpr 0xa0d56a0 <col:30, col:36> '<bound member function type>' ->get_allocator 0x9dd8770
                (ImplicitCastExpr 0xa0d56e0 <col:30> 'const class std::basic_string<wchar_t> *' <NoOp>
                  (CXXThisExpr 0xa0d5690 <col:30> 'class std::basic_string<wchar_t> *' this))))))))))


        std::basic_string<wchar_t> &operator=(const std::basic_string<wchar_t> &__str) (CompoundStmt 0xa0f5380 </usr/include/c++/4.6/bits/basic_string.h:541:7, col:37>
  (ReturnStmt 0xa0f5370 <col:9, col:34>
    (CXXMemberCallExpr 0xa0f5350 <col:16, col:34> 'class std::basic_string<wchar_t>' lvalue
      (MemberExpr 0xa0f5330 <col:16, col:22> '<bound member function type>' ->assign 0x9dcb4d0
        (CXXThisExpr 0xa0f52b8 <col:16> 'class std::basic_string<wchar_t> *' this))
      (DeclRefExpr 0xa0f5318 <col:29> 'const class std::basic_string<wchar_t>' lvalue ParmVar 0x9dc6730 '__str' 'const class std::basic_string<wchar_t> &'))))


        std::basic_string<wchar_t> &operator=(const wchar_t *__s);
        std::basic_string<wchar_t> &operator=(wchar_t __c);
        iterator begin();
        const_iterator begin() const;
        iterator end();
        const_iterator end() const;
        reverse_iterator rbegin();
        const_reverse_iterator rbegin() const;
        reverse_iterator rend();
        const_reverse_iterator rend() const;
    public:
    public:
        size_type size() const (CompoundStmt 0xa0db590 </usr/include/c++/4.6/bits/basic_string.h:710:7, col:37>
  (ReturnStmt 0xa0db580 <col:9, col:26>
    (ImplicitCastExpr 0xa0db570 <col:16, col:26> 'size_type':'unsigned int' <LValueToRValue>
      (MemberExpr 0xa0db550 <col:16, col:26> 'size_type':'unsigned int' lvalue ->_M_length 0x9de0810
        (ImplicitCastExpr 0xa0db540 <col:16, col:23> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
          (CXXMemberCallExpr 0xa0db520 <col:16, col:23> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
            (MemberExpr 0xa0db500 <col:16> '<bound member function type>' ->_M_rep 0x9dc0d10
              (CXXThisExpr 0xa0d8cd8 <col:16> 'const class std::basic_string<wchar_t> *' this))))))))


        size_type length() const;
        size_type max_size() const;
        void resize(size_type __n, wchar_t __c);
        void resize(size_type __n);
        size_type capacity() const;
        void reserve(size_type __res_arg);
        void clear();
        bool empty() const (CompoundStmt 0xa0d80f8 </usr/include/c++/4.6/bits/basic_string.h:803:7, col:35>
  (ReturnStmt 0xa0d80e8 <col:9, col:32>
    (BinaryOperator 0xa0d80d0 <col:16, col:32> '_Bool' '=='
      (CXXMemberCallExpr 0xa0d80a0 <col:16, col:27> 'size_type':'unsigned int'
        (MemberExpr 0xa0d8080 <col:16, col:22> '<bound member function type>' ->size 0x9dc7be0
          (CXXThisExpr 0xa0d8070 <col:16> 'const class std::basic_string<wchar_t> *' this)))
      (ImplicitCastExpr 0xa0d80c0 <col:32> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0x9d4f748 <col:32> 'int' 0)))))


        const_reference operator[](size_type __pos) const;
        reference operator[](size_type __pos);
        const_reference at(size_type __n) const (CompoundStmt 0xa0d8790 </usr/include/c++/4.6/bits/basic_string.h:856:7, line:860:7>
  (IfStmt 0xa0d8220 <line:857:2, line:858:48>
    <<<NULL>>>
    (BinaryOperator 0xa0d81c8 <line:857:6, col:24> '_Bool' '>='
      (ImplicitCastExpr 0xa0d81b8 <col:6> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa0d814c <col:6> 'size_type':'unsigned int' lvalue ParmVar 0x9dc9140 '__n' 'size_type':'unsigned int'))
      (CXXMemberCallExpr 0xa0d8198 <col:13, col:24> 'size_type':'unsigned int'
        (MemberExpr 0xa0d8178 <col:13, col:19> '<bound member function type>' ->size 0x9dc7be0
          (CXXThisExpr 0xa0d8168 <col:13> 'const class std::basic_string<wchar_t> *' this))))
    (CallExpr 0xa0d81f0 <line:858:4, col:48> 'void'
      (ImplicitCastExpr 0xa0d81e0 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x9d4fbb4 <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9b766b0 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa0d8210 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0x9d4fba0 <col:24, col:30> 'const char [17]' lvalue
          (StringLiteral 0x9d4fb70 </usr/include/c++/4.6/bits/basic_string.h:858:29> 'const char [17]' lvalue "basic_string::at"))))
    <<<NULL>>>)
  (ReturnStmt 0xa0d8780 <line:859:2, col:22>
    (ImplicitCastExpr 0xa0d8770 <col:9, col:22> 'const wchar_t':'const wchar_t' lvalue <NoOp>
      (ArraySubscriptExpr 0xa0d8758 <col:9, col:22> 'wchar_t':'wchar_t' lvalue
        (CXXMemberCallExpr 0xa0d8710 <col:9, col:17> 'wchar_t *'
          (MemberExpr 0xa0d86f0 <col:9> '<bound member function type>' ->_M_data 0x9dc0a20
            (CXXThisExpr 0xa0d86e0 <col:9> 'const class std::basic_string<wchar_t> *' this)))
        (ImplicitCastExpr 0xa0d8748 <col:19> 'size_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa0d872c <col:19> 'size_type':'unsigned int' lvalue ParmVar 0x9dc9140 '__n' 'size_type':'unsigned int'))))))


        reference at(size_type __n);
        std::basic_string<wchar_t> &operator+=(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &operator+=(const wchar_t *__s);
        std::basic_string<wchar_t> &operator+=(wchar_t __c);
        std::basic_string<wchar_t> &append(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &append(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n);
        std::basic_string<wchar_t> &append(const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &append(const wchar_t *__s);
        std::basic_string<wchar_t> &append(size_type __n, wchar_t __c);
        template <class _InputIterator> std::basic_string<wchar_t> &append(_InputIterator __first, _InputIterator __last);
        void push_back(wchar_t __c);
        std::basic_string<wchar_t> &assign(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &assign(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n);
        std::basic_string<wchar_t> &assign(const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &assign(const wchar_t *__s);
        std::basic_string<wchar_t> &assign(size_type __n, wchar_t __c);
        template <class _InputIterator> std::basic_string<wchar_t> &assign(_InputIterator __first, _InputIterator __last);
        void insert(iterator __p, size_type __n, wchar_t __c);
        template <class _InputIterator> void insert(iterator __p, _InputIterator __beg, _InputIterator __end);
        std::basic_string<wchar_t> &insert(size_type __pos1, const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &insert(size_type __pos1, const std::basic_string<wchar_t> &__str, size_type __pos2, size_type __n);
        std::basic_string<wchar_t> &insert(size_type __pos, const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &insert(size_type __pos, const wchar_t *__s);
        std::basic_string<wchar_t> &insert(size_type __pos, size_type __n, wchar_t __c);
        iterator insert(iterator __p, wchar_t __c);
        std::basic_string<wchar_t> &erase(size_type __pos, size_type __n);
        iterator erase(iterator __position);
        iterator erase(iterator __first, iterator __last);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n, const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &replace(size_type __pos1, size_type __n1, const std::basic_string<wchar_t> &__str, size_type __pos2, size_type __n2);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n1, const wchar_t *__s, size_type __n2);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n1, const wchar_t *__s);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n1, size_type __n2, wchar_t __c);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const wchar_t *__s);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, size_type __n, wchar_t __c);
        template <class _InputIterator> std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, wchar_t *__k1, wchar_t *__k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const wchar_t *__k1, const wchar_t *__k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const_iterator __k1, const_iterator __k2);
    private:
    private:
        template <class _Integer> std::basic_string<wchar_t> &_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n, _Integer __val, std::__true_type);
        template <class _InputIterator> std::basic_string<wchar_t> &_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2, std::__false_type);
        std::basic_string<wchar_t> &_M_replace_aux(size_type __pos1, size_type __n1, size_type __n2, wchar_t __c);
        std::basic_string<wchar_t> &_M_replace_safe(size_type __pos1, size_type __n1, const wchar_t *__s, size_type __n2);
        template <class _InIterator> static wchar_t *_S_construct_aux(_InIterator __beg, _InIterator __end, const std::allocator<wchar_t> &__a, std::__false_type);
        template <class _Integer> static wchar_t *_S_construct_aux(_Integer __beg, _Integer __end, const std::allocator<wchar_t> &__a, std::__true_type);
        static wchar_t *_S_construct_aux_2(size_type __req, wchar_t __c, const std::allocator<wchar_t> &__a);
        template <class _InIterator> static wchar_t *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<wchar_t> &__a);
        template <class _InIterator> static wchar_t *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<wchar_t> &__a, std::input_iterator_tag);
        template <class _FwdIterator> static wchar_t *_S_construct(_FwdIterator __beg, _FwdIterator __end, const std::allocator<wchar_t> &__a, std::forward_iterator_tag);
        static wchar_t *_S_construct(size_type __req, wchar_t __c, const std::allocator<wchar_t> &__a);
    public:
    public:
        size_type copy(wchar_t *__s, size_type __n, size_type __pos) const;
        void swap(std::basic_string<wchar_t> &__s);
        const wchar_t *c_str() const (CompoundStmt 0xa0d8cc0 </usr/include/c++/4.6/bits/basic_string.h:1766:7, col:27>
  (ReturnStmt 0xa0d8cb0 <col:9, col:24>
    (ImplicitCastExpr 0xa0d8ca0 <col:16, col:24> 'const wchar_t *' <NoOp>
      (CXXMemberCallExpr 0xa0d8c80 <col:16, col:24> 'wchar_t *'
        (MemberExpr 0xa0d8c60 <col:16> '<bound member function type>' ->_M_data 0x9dc0a20
          (CXXThisExpr 0xa0d8c50 <col:16> 'const class std::basic_string<wchar_t> *' this))))))


        const wchar_t *data() const;
        allocator_type get_allocator() const (CompoundStmt 0xa0d6b50 </usr/include/c++/4.6/bits/basic_string.h:1783:7, col:29>
  (ReturnStmt 0xa0d6b40 <col:9, col:16>
    (CXXConstructExpr 0xa0d6b18 <col:16> 'allocator_type':'class std::allocator<wchar_t>''void (const class std::allocator<wchar_t> &) throw()'
      (ImplicitCastExpr 0xa0d6b08 <col:16> 'const class std::allocator<wchar_t>' lvalue <NoOp>
        (ImplicitCastExpr 0xa0d6af8 <col:16> 'class std::allocator<wchar_t>' lvalue <DerivedToBase (allocator)>
          (MemberExpr 0xa0d6ab0 <col:16> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Alloc_hider' lvalue ->_M_dataplus 0x9dc09a0
            (CXXThisExpr 0xa0d6990 <col:16> 'const class std::basic_string<wchar_t> *' this)))))))


        size_type find(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find(const wchar_t *__s, size_type __pos) const;
        size_type find(wchar_t __c, size_type __pos) const;
        size_type rfind(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type rfind(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type rfind(const wchar_t *__s, size_type __pos) const;
        size_type rfind(wchar_t __c, size_type __pos) const;
        size_type find_first_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_first_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_first_of(const wchar_t *__s, size_type __pos) const;
        size_type find_first_of(wchar_t __c, size_type __pos) const;
        size_type find_last_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_last_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_last_of(const wchar_t *__s, size_type __pos) const;
        size_type find_last_of(wchar_t __c, size_type __pos) const;
        size_type find_first_not_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_first_not_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_first_not_of(const wchar_t *__s, size_type __pos) const;
        size_type find_first_not_of(wchar_t __c, size_type __pos) const;
        size_type find_last_not_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_last_not_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_last_not_of(const wchar_t *__s, size_type __pos) const;
        size_type find_last_not_of(wchar_t __c, size_type __pos) const;
        std::basic_string<wchar_t> substr(size_type __pos, size_type __n) const;
        int compare(const std::basic_string<wchar_t> &__str) const;
        int compare(size_type __pos, size_type __n, const std::basic_string<wchar_t> &__str) const;
        int compare(size_type __pos1, size_type __n1, const std::basic_string<wchar_t> &__str, size_type __pos2, size_type __n2) const;
        int compare(const wchar_t *__s) const;
        int compare(size_type __pos, size_type __n1, const wchar_t *__s) const;
        int compare(size_type __pos, size_type __n1, const wchar_t *__s, size_type __n2) const;
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>, typename _Alloc = allocator<_CharT>> class basic_string;
    struct char_traits;
    typedef basic_string<char> string;
    struct char_traits;
    typedef basic_string<wchar_t> wstring;
}
namespace std {
    void __throw_bad_exception();
    void __throw_bad_alloc();
    void __throw_bad_cast();
    void __throw_bad_typeid();
    void __throw_logic_error(const char *);
    void __throw_domain_error(const char *);
    void __throw_invalid_argument(const char *);
    void __throw_length_error(const char *);
    void __throw_out_of_range(const char *);
    void __throw_runtime_error(const char *);
    void __throw_range_error(const char *);
    void __throw_overflow_error(const char *);
    void __throw_underflow_error(const char *);
    void __throw_ios_failure(const char *);
    void __throw_system_error(int);
    void __throw_future_error(int);
    void __throw_bad_function_call();
}
namespace __gnu_cxx {
    template <typename _Iterator = const std::basic_string<wchar_t> *, typename _Container = std::vector<std::basic_string<wchar_t>, std::allocator<std::basic_string<wchar_t> > >> class __normal_iterator {
        class __normal_iterator;
    protected:
    protected:
        const std::basic_string<wchar_t> *_M_current;
        typedef iterator_traits<const std::basic_string<wchar_t> *> __traits_type;
    public:
    public:
        typedef const std::basic_string<wchar_t> *iterator_type;
        typedef typename __traits_type::iterator_category iterator_category;
        typedef typename __traits_type::value_type value_type;
        typedef typename __traits_type::difference_type difference_type;
        typedef typename __traits_type::reference reference;
        typedef typename __traits_type::pointer pointer;
        __normal_iterator();
        __normal_iterator(const std::basic_string<wchar_t> *const &__i) : _M_current((ImplicitCastExpr 0x9e29cb8 </usr/include/c++/4.6/bits/stl_iterator.h:720:60> 'const class std::basic_string<wchar_t> *':'const class std::basic_string<wchar_t> *' <LValueToRValue>
  (DeclRefExpr 0x9e29bcc <col:60> 'const class std::basic_string<wchar_t> *const':'const class std::basic_string<wchar_t> *const' lvalue ParmVar 0xa0f8070 '__i' 'const class std::basic_string<wchar_t> *const &'))
) (CompoundStmt 0x9bcf6c0 </usr/include/c++/4.6/bits/stl_iterator.h:720:65, col:67>)


        template <typename _Iter> __normal_iterator(const __normal_iterator<_Iter, typename __enable_if<(std::__are_same<_Iter, typename vector<basic_string<wchar_t>, allocator<basic_string<wchar_t> > >::pointer>::__value), vector<basic_string<wchar_t>, allocator<basic_string<wchar_t> > > >::__type> &__i);
        reference operator*() const (CompoundStmt 0x9e2ccc0 </usr/include/c++/4.6/bits/stl_iterator.h:733:7, col:29>
  (ReturnStmt 0x9e2ccb0 <col:9, col:17>
    (UnaryOperator 0x9e2cc98 <col:16, col:17> 'const class std::basic_string<wchar_t>' lvalue prefix '*'
      (ImplicitCastExpr 0x9e2cc88 <col:17> 'const class std::basic_string<wchar_t> *':'const class std::basic_string<wchar_t> *' <LValueToRValue>
        (MemberExpr 0x9e2cc68 <col:17> 'const class std::basic_string<wchar_t> *const':'const class std::basic_string<wchar_t> *const' lvalue ->_M_current 0xa0f7250
          (CXXThisExpr 0x9e2cb90 <col:17> 'const class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > > *' this))))))


        pointer operator->() const;
        __gnu_cxx::__normal_iterator<const std::basic_string<wchar_t> *, std::vector<std::basic_string<wchar_t>, std::allocator<std::basic_string<wchar_t> > > > &operator++() (CompoundStmt 0x9e2cb78 </usr/include/c++/4.6/bits/stl_iterator.h:741:7, line:744:7>
  (UnaryOperator 0x9e2cb28 <line:742:2, col:4> 'const class std::basic_string<wchar_t> *':'const class std::basic_string<wchar_t> *' lvalue prefix '++'
    (MemberExpr 0x9e2cb08 <col:4> 'const class std::basic_string<wchar_t> *':'const class std::basic_string<wchar_t> *' lvalue ->_M_current 0xa0f7250
      (CXXThisExpr 0x9e2ca30 <col:4> 'class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > > *' this)))
  (ReturnStmt 0x9e2cb68 <line:743:2, col:10>
    (UnaryOperator 0x9e2cb50 <col:9, col:10> 'class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >' lvalue prefix '*'
      (CXXThisExpr 0x9e2cb40 <col:10> 'class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > > *' this))))


        __gnu_cxx::__normal_iterator<const std::basic_string<wchar_t> *, std::vector<std::basic_string<wchar_t>, std::allocator<std::basic_string<wchar_t> > > > operator++(int);
        __gnu_cxx::__normal_iterator<const std::basic_string<wchar_t> *, std::vector<std::basic_string<wchar_t>, std::allocator<std::basic_string<wchar_t> > > > &operator--();
        __gnu_cxx::__normal_iterator<const std::basic_string<wchar_t> *, std::vector<std::basic_string<wchar_t>, std::allocator<std::basic_string<wchar_t> > > > operator--(int);
        reference operator[](const difference_type &__n) const;
        __gnu_cxx::__normal_iterator<const std::basic_string<wchar_t> *, std::vector<std::basic_string<wchar_t>, std::allocator<std::basic_string<wchar_t> > > > &operator+=(const difference_type &__n);
        __gnu_cxx::__normal_iterator<const std::basic_string<wchar_t> *, std::vector<std::basic_string<wchar_t>, std::allocator<std::basic_string<wchar_t> > > > operator+(const difference_type &__n) const;
        __gnu_cxx::__normal_iterator<const std::basic_string<wchar_t> *, std::vector<std::basic_string<wchar_t>, std::allocator<std::basic_string<wchar_t> > > > &operator-=(const difference_type &__n);
        __gnu_cxx::__normal_iterator<const std::basic_string<wchar_t> *, std::vector<std::basic_string<wchar_t>, std::allocator<std::basic_string<wchar_t> > > > operator-(const difference_type &__n) const;
        const std::basic_string<wchar_t> *const &base() const (CompoundStmt 0x9e2ca18 </usr/include/c++/4.6/bits/stl_iterator.h:785:7, col:28>
  (ReturnStmt 0x9e2ca08 <col:9, col:16>
    (MemberExpr 0x9e2c9e8 <col:16> 'const class std::basic_string<wchar_t> *const':'const class std::basic_string<wchar_t> *const' lvalue ->_M_current 0xa0f7250
      (CXXThisExpr 0x9e2c908 <col:16> 'const class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > > *' this))))


        inline __normal_iterator(const __gnu_cxx::__normal_iterator<const std::basic_string<wchar_t> *, std::vector<std::basic_string<wchar_t>, std::allocator<std::basic_string<wchar_t> > > > &) throw() : _M_current((ImplicitCastExpr 0x9e28650 </usr/include/c++/4.6/bits/stl_iterator.h:702:11> 'const class std::basic_string<wchar_t> *':'const class std::basic_string<wchar_t> *' <LValueToRValue>
  (MemberExpr 0x9e28624 <col:11> 'const class std::basic_string<wchar_t> *const':'const class std::basic_string<wchar_t> *const' lvalue ._M_current 0xa0f7250
    (DeclRefExpr 0x9e2860c <col:11> 'const class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >' lvalue ParmVar 0x9e27e40 '' 'const class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > > &')))
) (CompoundStmt 0x9e28680 </usr/include/c++/4.6/bits/stl_iterator.h:702:11>)


    }
template <typename _Iterator = char *, typename _Container = std::basic_string<char>> class __normal_iterator
template <typename _Iterator = wchar_t *, typename _Container = std::basic_string<wchar_t>> class __normal_iterator
template <typename _Iterator = const char *, typename _Container = std::basic_string<char>> class __normal_iterator
template <typename _Iterator = std::basic_string<wchar_t> *, typename _Container = std::vector<std::basic_string<wchar_t>, std::allocator<std::basic_string<wchar_t> > >> class __normal_iterator {
        class __normal_iterator;
    protected:
    protected:
        std::basic_string<wchar_t> *_M_current;
        typedef iterator_traits<std::basic_string<wchar_t> *> __traits_type;
    public:
    public:
        typedef std::basic_string<wchar_t> *iterator_type;
        typedef typename __traits_type::iterator_category iterator_category;
        typedef typename __traits_type::value_type value_type;
        typedef typename __traits_type::difference_type difference_type;
        typedef typename __traits_type::reference reference;
        typedef typename __traits_type::pointer pointer;
        __normal_iterator();
        __normal_iterator(std::basic_string<wchar_t> *const &__i) : _M_current((ImplicitCastExpr 0xa0f66d8 </usr/include/c++/4.6/bits/stl_iterator.h:720:60> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' <LValueToRValue>
  (DeclRefExpr 0xa0f65ec <col:60> 'class std::basic_string<wchar_t> *const':'class std::basic_string<wchar_t> *const' lvalue ParmVar 0xa0ea1b0 '__i' 'class std::basic_string<wchar_t> *const &'))
) (CompoundStmt 0x9bcf6c0 </usr/include/c++/4.6/bits/stl_iterator.h:720:65, col:67>)


        template <typename _Iter = std::basic_string<wchar_t> *> __normal_iterator(const __normal_iterator<std::basic_string<wchar_t> *, typename __enable_if<(std::__are_same<basic_string<wchar_t> *, typename vector<basic_string<wchar_t>, allocator<basic_string<wchar_t> > >::pointer>::__value), vector<basic_string<wchar_t>, allocator<basic_string<wchar_t> > > >::__type> &__i)template <typename _Iter> __normal_iterator(const __normal_iterator<_Iter, typename __enable_if<(std::__are_same<_Iter, typename vector<basic_string<wchar_t>, allocator<basic_string<wchar_t> > >::pointer>::__value), vector<basic_string<wchar_t>, allocator<basic_string<wchar_t> > > >::__type> &__i);
        reference operator*() const (CompoundStmt 0xa0f52a0 </usr/include/c++/4.6/bits/stl_iterator.h:733:7, col:29>
  (ReturnStmt 0xa0f5290 <col:9, col:17>
    (UnaryOperator 0xa0f5278 <col:16, col:17> 'class std::basic_string<wchar_t>' lvalue prefix '*'
      (ImplicitCastExpr 0xa0f5268 <col:17> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' <LValueToRValue>
        (MemberExpr 0xa0f5248 <col:17> 'class std::basic_string<wchar_t> *const':'class std::basic_string<wchar_t> *const' lvalue ->_M_current 0xa0e97e0
          (CXXThisExpr 0xa0f5168 <col:17> 'const class __gnu_cxx::__normal_iterator<class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > > *' this))))))


        pointer operator->() const;
        __gnu_cxx::__normal_iterator<std::basic_string<wchar_t> *, std::vector<std::basic_string<wchar_t>, std::allocator<std::basic_string<wchar_t> > > > &operator++();
        __gnu_cxx::__normal_iterator<std::basic_string<wchar_t> *, std::vector<std::basic_string<wchar_t>, std::allocator<std::basic_string<wchar_t> > > > operator++(int);
        __gnu_cxx::__normal_iterator<std::basic_string<wchar_t> *, std::vector<std::basic_string<wchar_t>, std::allocator<std::basic_string<wchar_t> > > > &operator--();
        __gnu_cxx::__normal_iterator<std::basic_string<wchar_t> *, std::vector<std::basic_string<wchar_t>, std::allocator<std::basic_string<wchar_t> > > > operator--(int);
        reference operator[](const difference_type &__n) const;
        __gnu_cxx::__normal_iterator<std::basic_string<wchar_t> *, std::vector<std::basic_string<wchar_t>, std::allocator<std::basic_string<wchar_t> > > > &operator+=(const difference_type &__n);
        __gnu_cxx::__normal_iterator<std::basic_string<wchar_t> *, std::vector<std::basic_string<wchar_t>, std::allocator<std::basic_string<wchar_t> > > > operator+(const difference_type &__n) const;
        __gnu_cxx::__normal_iterator<std::basic_string<wchar_t> *, std::vector<std::basic_string<wchar_t>, std::allocator<std::basic_string<wchar_t> > > > &operator-=(const difference_type &__n);
        __gnu_cxx::__normal_iterator<std::basic_string<wchar_t> *, std::vector<std::basic_string<wchar_t>, std::allocator<std::basic_string<wchar_t> > > > operator-(const difference_type &__n) const;
        std::basic_string<wchar_t> *const &base() const (CompoundStmt 0xa0f17b8 </usr/include/c++/4.6/bits/stl_iterator.h:785:7, col:28>
  (ReturnStmt 0xa0f17a8 <col:9, col:16>
    (MemberExpr 0xa0f1784 <col:16> 'class std::basic_string<wchar_t> *const':'class std::basic_string<wchar_t> *const' lvalue ->_M_current 0xa0e97e0
      (CXXThisExpr 0xa0f1690 <col:16> 'const class __gnu_cxx::__normal_iterator<class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > > *' this))))


        inline __normal_iterator(const __gnu_cxx::__normal_iterator<std::basic_string<wchar_t> *, std::vector<std::basic_string<wchar_t>, std::allocator<std::basic_string<wchar_t> > > > &) throw() : _M_current((ImplicitCastExpr 0xa0ecd80 </usr/include/c++/4.6/bits/stl_iterator.h:702:11> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' <LValueToRValue>
  (MemberExpr 0xa0ecd54 <col:11> 'class std::basic_string<wchar_t> *const':'class std::basic_string<wchar_t> *const' lvalue ._M_current 0xa0e97e0
    (DeclRefExpr 0xa0ecd3c <col:11> 'const class __gnu_cxx::__normal_iterator<class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >' lvalue ParmVar 0xa0ec3d0 '' 'const class __gnu_cxx::__normal_iterator<class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > > &')))
) (CompoundStmt 0xa0ecdb0 </usr/include/c++/4.6/bits/stl_iterator.h:702:11>)


    }
template <typename _Iterator = const wchar_t *, typename _Container = std::basic_string<wchar_t>> class __normal_iterator
template <typename _Iterator, typename _Container> class __normal_iterator;
}
namespace std {
    struct __true_type {
        struct __true_type;
    };
    struct __false_type {
        struct __false_type;
    };
    template <bool = true> struct __truth_type {
        struct __truth_type;
        typedef std::__true_type __type;
    }
template <bool> struct __truth_type {
        struct __truth_type;
        typedef std::__false_type __type;
    };
    struct __truth_type {
        struct __truth_type;
        typedef std::__true_type __type;
    };
    template <class _Sp = std::__is_arithmetic<int>, class _Tp = std::__is_pointer<int>> struct __traitor {
        struct __traitor;
        enum  {
            __value = (ImplicitCastExpr 0xa0d44b8 </usr/include/c++/4.6/bits/cpp_type_traits.h:98:24, col:63> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa0d4468 <col:24, col:63> '_Bool' '||'
    (CXXFunctionalCastExpr 0xa0d4220 <col:24, col:41> '_Bool' functional cast to _Bool <NoOp>
      (ImplicitCastExpr 0xa0d4210 <col:29, col:34> '_Bool' <IntegralToBoolean>
        (DeclRefExpr 0xa0d41f0 <col:29, col:34> 'enum std::__traitor<struct std::__is_integer<int>, struct std::__is_floating<int> >::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:98:7>' EnumConstant 0xa0d3f50 '__value' 'enum std::__traitor<struct std::__is_integer<int>, struct std::__is_floating<int> >::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:98:7>')))
    (CXXFunctionalCastExpr 0xa0d4450 <col:46, col:63> '_Bool' functional cast to _Bool <NoOp>
      (ImplicitCastExpr 0xa0d4440 <col:51, col:56> '_Bool' <IntegralToBoolean>
        (DeclRefExpr 0xa0d441c <col:51, col:56> 'enum std::__is_pointer<int>::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:292:7>' EnumConstant 0xa0d43a0 '__value' 'enum std::__is_pointer<int>::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:292:7>')))))

        };
        typedef typename __truth_type<__value>::__type __type;
    }
template <class _Sp = std::__is_integer<int>, class _Tp = std::__is_floating<int>> struct __traitor {
        struct __traitor;
        enum  {
            __value = (ImplicitCastExpr 0xa0d3f88 </usr/include/c++/4.6/bits/cpp_type_traits.h:98:24, col:63> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa0d3f38 <col:24, col:63> '_Bool' '||'
    (CXXFunctionalCastExpr 0xa0d3cf8 <col:24, col:41> '_Bool' functional cast to _Bool <NoOp>
      (ImplicitCastExpr 0xa0d3ce8 <col:29, col:34> '_Bool' <IntegralToBoolean>
        (DeclRefExpr 0xa0d3cc4 <col:29, col:34> 'enum std::__is_integer<int>::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:215:7>' EnumConstant 0x9b82d70 '__value' 'enum std::__is_integer<int>::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:215:7>')))
    (CXXFunctionalCastExpr 0xa0d3f20 <col:46, col:63> '_Bool' functional cast to _Bool <NoOp>
      (ImplicitCastExpr 0xa0d3f10 <col:51, col:56> '_Bool' <IntegralToBoolean>
        (DeclRefExpr 0xa0d3eec <col:51, col:56> 'enum std::__is_floating<int>::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:260:7>' EnumConstant 0xa0d3e70 '__value' 'enum std::__is_floating<int>::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:260:7>')))))

        };
        typedef typename __truth_type<__value>::__type __type;
    }
template <class _Sp, class _Tp> struct __traitor {
        struct __traitor;
        enum  {
            __value = (BinaryOperator 0x9b7e810 </usr/include/c++/4.6/bits/cpp_type_traits.h:98:24, col:63> '_Bool' '||'
  (CXXUnresolvedConstructExpr 0x9b7e778 <col:24, col:41> '_Bool'
    (DependentScopeDeclRefExpr 0x9b7e750 <col:29, col:34> '<dependent type>' lvalue))
  (CXXUnresolvedConstructExpr 0x9b7e7f0 <col:46, col:63> '_Bool'
    (DependentScopeDeclRefExpr 0x9b7e7c8 <col:51, col:56> '<dependent type>' lvalue)))

        };
        typedef typename __truth_type<__value>::__type __type;
    };
    template <typename  = const std::basic_string<wchar_t> *, typename  = std::basic_string<wchar_t> *> struct __are_same {
        struct __are_same;
        enum  {
            __value = (ImplicitCastExpr 0x9e28198 </usr/include/c++/4.6/bits/cpp_type_traits.h:106:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b7ed40 <col:24> 'int' 0))

        };
        typedef std::__false_type __type;
    }
template <typename  = std::basic_string<wchar_t> *, typename  = std::basic_string<wchar_t> *> struct __are_same {
        struct __are_same;
        enum  {
            __value = (ImplicitCastExpr 0xa0ec798 </usr/include/c++/4.6/bits/cpp_type_traits.h:113:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b7f1d0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename  = std::basic_string<wchar_t>, typename  = std::basic_string<wchar_t>> struct __are_same {
        struct __are_same;
        enum  {
            __value = (ImplicitCastExpr 0xa0f4768 </usr/include/c++/4.6/bits/cpp_type_traits.h:113:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b7f1d0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename , typename > struct __are_same {
        struct __are_same;
        enum  {
            __value = (IntegerLiteral 0x9b7ed40 </usr/include/c++/4.6/bits/cpp_type_traits.h:106:24> 'int' 0)

        };
        typedef std::__false_type __type;
    };
    struct __are_same {
        struct __are_same;
        enum  {
            __value = (IntegerLiteral 0x9b7f1d0 </usr/include/c++/4.6/bits/cpp_type_traits.h:113:24> 'int' 1)

        };
        typedef std::__true_type __type;
    };
    template <typename _Tp = void> struct __is_void {
        struct __is_void;
        enum  {
            __value = (ImplicitCastExpr 0x9b80568 </usr/include/c++/4.6/bits/cpp_type_traits.h:128:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b80510 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp> struct __is_void {
        struct __is_void;
        enum  {
            __value = (IntegerLiteral 0x9b7f520 </usr/include/c++/4.6/bits/cpp_type_traits.h:121:24> 'int' 0)

        };
        typedef std::__false_type __type;
    };
    struct __is_void {
        struct __is_void;
        enum  {
            __value = (ImplicitCastExpr 0x9b80568 </usr/include/c++/4.6/bits/cpp_type_traits.h:128:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b80510 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    template <typename _Tp = unsigned char> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9b82168 </usr/include/c++/4.6/bits/cpp_type_traits.h:169:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b82110 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = float> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9b99108 </usr/include/c++/4.6/bits/cpp_type_traits.h:138:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b80870 <col:24> 'int' 0))

        };
        typedef std::__false_type __type;
    }
template <typename _Tp = char> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9b80ed8 </usr/include/c++/4.6/bits/cpp_type_traits.h:155:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b80e80 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = wchar_t> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9b82478 </usr/include/c++/4.6/bits/cpp_type_traits.h:177:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b82420 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = unsigned long long> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9b847b8 </usr/include/c++/4.6/bits/cpp_type_traits.h:250:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b84760 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = signed char> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9b811e8 </usr/include/c++/4.6/bits/cpp_type_traits.h:162:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b81190 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = double> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9b98b98 </usr/include/c++/4.6/bits/cpp_type_traits.h:138:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b80870 <col:24> 'int' 0))

        };
        typedef std::__false_type __type;
    }
template <typename _Tp = long> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9b83e88 </usr/include/c++/4.6/bits/cpp_type_traits.h:229:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b83e30 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = int> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9b82da8 </usr/include/c++/4.6/bits/cpp_type_traits.h:215:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b82d50 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = unsigned short> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9b82a98 </usr/include/c++/4.6/bits/cpp_type_traits.h:208:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b82a40 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = long double> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9b98628 </usr/include/c++/4.6/bits/cpp_type_traits.h:138:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b80870 <col:24> 'int' 0))

        };
        typedef std::__false_type __type;
    }
template <typename _Tp = unsigned long> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9b84198 </usr/include/c++/4.6/bits/cpp_type_traits.h:236:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b84140 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = unsigned int> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9b83b78 </usr/include/c++/4.6/bits/cpp_type_traits.h:222:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b83b20 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = bool> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9b80bc8 </usr/include/c++/4.6/bits/cpp_type_traits.h:148:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b80b70 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = long long> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9b844a8 </usr/include/c++/4.6/bits/cpp_type_traits.h:243:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b84450 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = short> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9b82788 </usr/include/c++/4.6/bits/cpp_type_traits.h:201:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b82730 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (IntegerLiteral 0x9b80870 </usr/include/c++/4.6/bits/cpp_type_traits.h:138:24> 'int' 0)

        };
        typedef std::__false_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9b80bc8 </usr/include/c++/4.6/bits/cpp_type_traits.h:148:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b80b70 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9b80ed8 </usr/include/c++/4.6/bits/cpp_type_traits.h:155:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b80e80 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9b811e8 </usr/include/c++/4.6/bits/cpp_type_traits.h:162:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b81190 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9b82168 </usr/include/c++/4.6/bits/cpp_type_traits.h:169:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b82110 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9b82478 </usr/include/c++/4.6/bits/cpp_type_traits.h:177:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b82420 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9b82788 </usr/include/c++/4.6/bits/cpp_type_traits.h:201:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b82730 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9b82a98 </usr/include/c++/4.6/bits/cpp_type_traits.h:208:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b82a40 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9b82da8 </usr/include/c++/4.6/bits/cpp_type_traits.h:215:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b82d50 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9b83b78 </usr/include/c++/4.6/bits/cpp_type_traits.h:222:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b83b20 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9b83e88 </usr/include/c++/4.6/bits/cpp_type_traits.h:229:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b83e30 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9b84198 </usr/include/c++/4.6/bits/cpp_type_traits.h:236:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b84140 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9b844a8 </usr/include/c++/4.6/bits/cpp_type_traits.h:243:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b84450 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9b847b8 </usr/include/c++/4.6/bits/cpp_type_traits.h:250:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b84760 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    template <typename _Tp = float> struct __is_floating {
        struct __is_floating;
        enum  {
            __value = (ImplicitCastExpr 0x9b85b18 </usr/include/c++/4.6/bits/cpp_type_traits.h:268:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b85ac0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = double> struct __is_floating {
        struct __is_floating;
        enum  {
            __value = (ImplicitCastExpr 0x9b85e28 </usr/include/c++/4.6/bits/cpp_type_traits.h:275:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b85dd0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = int> struct __is_floating {
        struct __is_floating;
        enum  {
            __value = (ImplicitCastExpr 0xa0d3ea8 </usr/include/c++/4.6/bits/cpp_type_traits.h:260:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b857c0 <col:24> 'int' 0))

        };
        typedef std::__false_type __type;
    }
template <typename _Tp = long double> struct __is_floating {
        struct __is_floating;
        enum  {
            __value = (ImplicitCastExpr 0x9b86138 </usr/include/c++/4.6/bits/cpp_type_traits.h:282:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b860e0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp> struct __is_floating {
        struct __is_floating;
        enum  {
            __value = (IntegerLiteral 0x9b857c0 </usr/include/c++/4.6/bits/cpp_type_traits.h:260:24> 'int' 0)

        };
        typedef std::__false_type __type;
    };
    struct __is_floating {
        struct __is_floating;
        enum  {
            __value = (ImplicitCastExpr 0x9b85b18 </usr/include/c++/4.6/bits/cpp_type_traits.h:268:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b85ac0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_floating {
        struct __is_floating;
        enum  {
            __value = (ImplicitCastExpr 0x9b85e28 </usr/include/c++/4.6/bits/cpp_type_traits.h:275:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b85dd0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_floating {
        struct __is_floating;
        enum  {
            __value = (ImplicitCastExpr 0x9b86138 </usr/include/c++/4.6/bits/cpp_type_traits.h:282:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b860e0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    template <typename _Tp = int> struct __is_pointer {
        struct __is_pointer;
        enum  {
            __value = (ImplicitCastExpr 0xa0d43d8 </usr/include/c++/4.6/bits/cpp_type_traits.h:292:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b86440 <col:24> 'int' 0))

        };
        typedef std::__false_type __type;
    }
template <typename _Tp = std::basic_string<wchar_t> *> struct __is_pointer {
        struct __is_pointer;
        enum  {
            __value = (ImplicitCastExpr 0xa0f42d8 </usr/include/c++/4.6/bits/cpp_type_traits.h:299:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b875f0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp> struct __is_pointer {
        struct __is_pointer;
        enum  {
            __value = (IntegerLiteral 0x9b86440 </usr/include/c++/4.6/bits/cpp_type_traits.h:292:24> 'int' 0)

        };
        typedef std::__false_type __type;
    };
    struct __is_pointer {
        struct __is_pointer;
        enum  {
            __value = (IntegerLiteral 0x9b875f0 </usr/include/c++/4.6/bits/cpp_type_traits.h:299:24> 'int' 1)

        };
        typedef std::__true_type __type;
    };
    template <typename _Tp = std::basic_string<wchar_t> *> struct __is_normal_iterator {
        struct __is_normal_iterator;
        enum  {
            __value = (ImplicitCastExpr 0xa0f31d8 </usr/include/c++/4.6/bits/cpp_type_traits.h:309:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b87940 <col:24> 'int' 0))

        };
        typedef std::__false_type __type;
    }
template <typename _Tp = unsigned long *> struct __is_normal_iterator {
        struct __is_normal_iterator;
        enum  {
            __value = (ImplicitCastExpr 0xa0d28f8 </usr/include/c++/4.6/bits/cpp_type_traits.h:309:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b87940 <col:24> 'int' 0))

        };
        typedef std::__false_type __type;
    }
template <typename _Tp> struct __is_normal_iterator {
        struct __is_normal_iterator;
        enum  {
            __value = (IntegerLiteral 0x9b87940 </usr/include/c++/4.6/bits/cpp_type_traits.h:309:24> 'int' 0)

        };
        typedef std::__false_type __type;
    };
    struct __is_normal_iterator {
        struct __is_normal_iterator;
        enum  {
            __value = (IntegerLiteral 0x9b87ec0 </usr/include/c++/4.6/bits/cpp_type_traits.h:317:24> 'int' 1)

        };
        typedef std::__true_type __type;
    };
    template <typename _Tp = int> struct __is_arithmetic : public __traitor<__is_integer<int>, __is_floating<int> > {
        struct __is_arithmetic;
    }
template <typename _Tp> struct __is_arithmetic : public __traitor<__is_integer<_Tp>, __is_floating<_Tp> > {
        struct __is_arithmetic;
    };
    template <typename _Tp> struct __is_fundamental : public __traitor<__is_void<_Tp>, __is_arithmetic<_Tp> > {
        struct __is_fundamental;
    };
    template <typename _Tp = int> struct __is_scalar : public __traitor<__is_arithmetic<int>, __is_pointer<int> > {
        struct __is_scalar;
    }
template <typename _Tp> struct __is_scalar : public __traitor<__is_arithmetic<_Tp>, __is_pointer<_Tp> > {
        struct __is_scalar;
    };
    template <typename _Tp = char> struct __is_char {
        struct __is_char;
        enum  {
            __value = (ImplicitCastExpr 0x9b8b1b8 </usr/include/c++/4.6/bits/cpp_type_traits.h:358:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b8b160 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = wchar_t> struct __is_char {
        struct __is_char;
        enum  {
            __value = (ImplicitCastExpr 0x9b8b4c8 </usr/include/c++/4.6/bits/cpp_type_traits.h:366:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b8b470 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp> struct __is_char {
        struct __is_char;
        enum  {
            __value = (IntegerLiteral 0x9b89f60 </usr/include/c++/4.6/bits/cpp_type_traits.h:351:24> 'int' 0)

        };
        typedef std::__false_type __type;
    };
    struct __is_char {
        struct __is_char;
        enum  {
            __value = (ImplicitCastExpr 0x9b8b1b8 </usr/include/c++/4.6/bits/cpp_type_traits.h:358:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b8b160 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_char {
        struct __is_char;
        enum  {
            __value = (ImplicitCastExpr 0x9b8b4c8 </usr/include/c++/4.6/bits/cpp_type_traits.h:366:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b8b470 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    template <typename _Tp = unsigned char> struct __is_byte {
        struct __is_byte;
        enum  {
            __value = (ImplicitCastExpr 0x9b8ceb8 </usr/include/c++/4.6/bits/cpp_type_traits.h:395:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b8ce60 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = char> struct __is_byte {
        struct __is_byte;
        enum  {
            __value = (ImplicitCastExpr 0x9b8bb28 </usr/include/c++/4.6/bits/cpp_type_traits.h:381:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b8bad0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = signed char> struct __is_byte {
        struct __is_byte;
        enum  {
            __value = (ImplicitCastExpr 0x9b8be38 </usr/include/c++/4.6/bits/cpp_type_traits.h:388:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b8bde0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp> struct __is_byte {
        struct __is_byte;
        enum  {
            __value = (IntegerLiteral 0x9b8b7d0 </usr/include/c++/4.6/bits/cpp_type_traits.h:374:24> 'int' 0)

        };
        typedef std::__false_type __type;
    };
    struct __is_byte {
        struct __is_byte;
        enum  {
            __value = (ImplicitCastExpr 0x9b8bb28 </usr/include/c++/4.6/bits/cpp_type_traits.h:381:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b8bad0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_byte {
        struct __is_byte;
        enum  {
            __value = (ImplicitCastExpr 0x9b8be38 </usr/include/c++/4.6/bits/cpp_type_traits.h:388:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b8bde0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_byte {
        struct __is_byte;
        enum  {
            __value = (ImplicitCastExpr 0x9b8ceb8 </usr/include/c++/4.6/bits/cpp_type_traits.h:395:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b8ce60 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    template <typename _Tp = std::basic_string<wchar_t> *> struct __is_move_iterator {
        struct __is_move_iterator;
        enum  {
            __value = (ImplicitCastExpr 0xa0f1a58 </usr/include/c++/4.6/bits/cpp_type_traits.h:405:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9b8d1c0 <col:24> 'int' 0))

        };
        typedef std::__false_type __type;
    }
template <typename _Tp> struct __is_move_iterator {
        struct __is_move_iterator;
        enum  {
            __value = (IntegerLiteral 0x9b8d1c0 </usr/include/c++/4.6/bits/cpp_type_traits.h:405:24> 'int' 0)

        };
        typedef std::__false_type __type;
    };
}
namespace __gnu_cxx {
    template <bool = true, typename  = std::vector<std::basic_string<wchar_t>, std::allocator<std::basic_string<wchar_t> > >> struct __enable_if {
        struct __enable_if;
        typedef std::vector<std::basic_string<wchar_t>, std::allocator<std::basic_string<wchar_t> > > __type;
    }
template <bool = false, typename  = void> struct __enable_if {
        struct __enable_if;
    }
template <bool = true, typename  = void> struct __enable_if {
        struct __enable_if;
        typedef void __type;
    }
template <bool = false, typename  = std::vector<std::basic_string<wchar_t>, std::allocator<std::basic_string<wchar_t> > >> struct __enable_if {
        struct __enable_if;
    }
template <bool, typename > struct __enable_if {
        struct __enable_if;
    };
    struct __enable_if {
        struct __enable_if;
        typedef _Tp __type;
    };
    template <bool _Cond = true, typename _Iftrue = unsigned long, typename _Iffalse = unsigned long long> struct __conditional_type {
        struct __conditional_type;
        typedef unsigned long __type;
    }
template <bool _Cond = true, typename _Iftrue = __gnu_cxx::__numeric_traits_integer<char>, typename _Iffalse = __gnu_cxx::__numeric_traits_floating<char>> struct __conditional_type {
        struct __conditional_type;
        typedef __gnu_cxx::__numeric_traits_integer<char> __type;
    }
template <bool _Cond = true, typename _Iftrue = __gnu_cxx::__numeric_traits_integer<short>, typename _Iffalse = __gnu_cxx::__numeric_traits_floating<short>> struct __conditional_type {
        struct __conditional_type;
        typedef __gnu_cxx::__numeric_traits_integer<short> __type;
    }
template <bool _Cond = true, typename _Iftrue = __gnu_cxx::__numeric_traits_integer<unsigned long>, typename _Iffalse = __gnu_cxx::__numeric_traits_floating<unsigned long>> struct __conditional_type {
        struct __conditional_type;
        typedef __gnu_cxx::__numeric_traits_integer<unsigned long> __type;
    }
template <bool _Cond = true, typename _Iftrue = __gnu_cxx::__numeric_traits_integer<int>, typename _Iffalse = __gnu_cxx::__numeric_traits_floating<int>> struct __conditional_type {
        struct __conditional_type;
        typedef __gnu_cxx::__numeric_traits_integer<int> __type;
    }
template <bool _Cond, typename _Iftrue, typename _Iffalse> struct __conditional_type {
        struct __conditional_type;
        typedef _Iftrue __type;
    };
    struct __conditional_type {
        struct __conditional_type;
        typedef _Iffalse __type;
    };
    template <typename _Tp = char> struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned char __type;
    }
template <typename _Tp = wchar_t> struct __add_unsigned
template <typename _Tp = signed char> struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned char __type;
    }
template <typename _Tp = long> struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned long __type;
    }
template <typename _Tp = int> struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned int __type;
    }
template <typename _Tp = bool> struct __add_unsigned
template <typename _Tp = long long> struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned long long __type;
    }
template <typename _Tp = short> struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned short __type;
    }
template <typename _Tp> struct __add_unsigned {
        struct __add_unsigned;
    private:
    private:
        typedef __enable_if<std::__is_integer<_Tp>::__value, _Tp> __if_type;
    public:
    public:
        typedef typename __if_type::__type __type;
    };
    struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned char __type;
    };
    struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned char __type;
    };
    struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned short __type;
    };
    struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned int __type;
    };
    struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned long __type;
    };
    struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned long long __type;
    };
    struct __add_unsigned;
    struct __add_unsigned;
    template <typename _Tp = unsigned char> struct __remove_unsigned {
        struct __remove_unsigned;
        typedef signed char __type;
    }
template <typename _Tp = char> struct __remove_unsigned {
        struct __remove_unsigned;
        typedef signed char __type;
    }
template <typename _Tp = wchar_t> struct __remove_unsigned
template <typename _Tp = unsigned long long> struct __remove_unsigned {
        struct __remove_unsigned;
        typedef long long __type;
    }
template <typename _Tp = unsigned short> struct __remove_unsigned {
        struct __remove_unsigned;
        typedef short __type;
    }
template <typename _Tp = unsigned long> struct __remove_unsigned {
        struct __remove_unsigned;
        typedef long __type;
    }
template <typename _Tp = bool> struct __remove_unsigned
template <typename _Tp = unsigned int> struct __remove_unsigned {
        struct __remove_unsigned;
        typedef int __type;
    }
template <typename _Tp> struct __remove_unsigned {
        struct __remove_unsigned;
    private:
    private:
        typedef __enable_if<std::__is_integer<_Tp>::__value, _Tp> __if_type;
    public:
    public:
        typedef typename __if_type::__type __type;
    };
    struct __remove_unsigned {
        struct __remove_unsigned;
        typedef signed char __type;
    };
    struct __remove_unsigned {
        struct __remove_unsigned;
        typedef signed char __type;
    };
    struct __remove_unsigned {
        struct __remove_unsigned;
        typedef short __type;
    };
    struct __remove_unsigned {
        struct __remove_unsigned;
        typedef int __type;
    };
    struct __remove_unsigned {
        struct __remove_unsigned;
        typedef long __type;
    };
    struct __remove_unsigned {
        struct __remove_unsigned;
        typedef long long __type;
    };
    struct __remove_unsigned;
    struct __remove_unsigned;
    template <typename _Type> inline bool __is_null_pointer(_Type *__ptr) (CompoundStmt 0x9b97378 </usr/include/c++/4.6/ext/type_traits.h:151:5, col:26>
  (ReturnStmt 0x9b97368 <col:7, col:23>
    (BinaryOperator 0x9b97350 <col:14, col:23> '<dependent type>' '=='
      (DeclRefExpr 0x9b9731c <col:14> '_Type *' lvalue ParmVar 0x9b971f0 '__ptr' '_Type *')
      (IntegerLiteral 0x9b97338 <col:23> 'int' 0))))

;
    template <typename _Type> inline bool __is_null_pointer(_Type) (CompoundStmt 0x9b97540 </usr/include/c++/4.6/ext/type_traits.h:156:5, col:21>
  (ReturnStmt 0x9b97530 <col:7, col:14>
    (CXXBoolLiteralExpr 0x9b97520 <col:14> '_Bool' false)))

;
    template <typename _Tp = double, bool = false> struct __promote {
        struct __promote;
        typedef double __type;
    }
template <typename _Tp = float, bool = false> struct __promote {
        struct __promote;
        typedef float __type;
    }
template <typename _Tp = long double, bool = false> struct __promote {
        struct __promote;
        typedef long double __type;
    }
template <typename _Tp, bool = (DependentScopeDeclRefExpr 0x9b97660 </usr/include/c++/4.6/ext/type_traits.h:160:33, col:57> '<dependent type>' lvalue)
> struct __promote {
        struct __promote;
        typedef double __type;
    };
    struct __promote {
        struct __promote;
    };
    struct __promote {
        struct __promote;
        typedef long double __type;
    };
    struct __promote {
        struct __promote;
        typedef double __type;
    };
    struct __promote {
        struct __promote;
        typedef float __type;
    };
    template <typename _Tp, typename _Up, typename _Tp2 = typename __promote<_Tp>::__type, typename _Up2 = typename __promote<_Up>::__type> struct __promote_2 {
        struct __promote_2;
        typedef typeof (_Tp2() + _Up2()) __type;
    };
    template <typename _Tp, typename _Up, typename _Vp, typename _Tp2 = typename __promote<_Tp>::__type, typename _Up2 = typename __promote<_Up>::__type, typename _Vp2 = typename __promote<_Vp>::__type> struct __promote_3 {
        struct __promote_3;
        typedef typeof (_Tp2() + _Up2() + _Vp2()) __type;
    };
    template <typename _Tp, typename _Up, typename _Vp, typename _Wp, typename _Tp2 = typename __promote<_Tp>::__type, typename _Up2 = typename __promote<_Up>::__type, typename _Vp2 = typename __promote<_Vp>::__type, typename _Wp2 = typename __promote<_Wp>::__type> struct __promote_4 {
        struct __promote_4;
        typedef typeof (_Tp2() + _Up2() + _Vp2() + _Wp2()) __type;
    };
}
namespace __gnu_cxx {
    template <typename _Value = char> struct __numeric_traits_integer {
        struct __numeric_traits_integer;
        static const char __min = (ImplicitCastExpr 0x9eb6aa0 </usr/include/c++/4.6/ext/numeric_traits.h:47:3, col:68> 'const char':'const char' <IntegralCast>
  (ParenExpr 0x9eb6a88 <col:3, col:68> 'int'
    (ConditionalOperator 0x9eb6a68 <line:42:31, line:47:67> 'int'
      (ParenExpr 0x9eb68c0 <line:42:31, col:45> '_Bool'
        (BinaryOperator 0x9eb68a8 <col:32, col:44> '_Bool' '<'
          (ImplicitCastExpr 0x9eb6898 <col:32, col:40> 'int' <IntegralCast>
            (CStyleCastExpr 0x9eb6880 <col:32, col:40> 'char':'char' <NoOp>
              (ImplicitCastExpr 0x9eb6870 <col:37, col:40> 'char':'char' <IntegralCast>
                (ParenExpr 0x9b9d458 <col:37, col:40> 'int'
                  (UnaryOperator 0x9b9d440 <col:38, col:39> 'int' prefix '-'
                    (IntegerLiteral 0x9b9d428 <col:39> 'int' 1))))))
          (IntegerLiteral 0x9b9d490 <col:44> 'int' 0)))
      (BinaryOperator 0x9eb6a10 <line:47:28, line:44:54> 'int' '<<'
        (ImplicitCastExpr 0x9eb6a00 <line:47:28, col:33> 'int' <IntegralCast>
          (CStyleCastExpr 0x9eb68f0 <col:28, col:33> 'char':'char' <NoOp>
            (ImplicitCastExpr 0x9eb68e0 <col:33> 'char':'char' <IntegralCast>
              (IntegerLiteral 0x9b9d4d8 <col:33> 'int' 1))))
        (ParenExpr 0x9eb69e8 <line:44:3, col:54> 'unsigned int'
          (BinaryOperator 0x9eb69d0 <col:4, line:42:45> 'unsigned int' '-'
            (BinaryOperator 0x9eb6938 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
              (UnaryExprOrTypeTraitExpr 0x9eb6910 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'char':'char')
              (ImplicitCastExpr 0x9eb6928 <<built-in>:17:22> 'unsigned int' <IntegralCast>
                (IntegerLiteral 0x9b9d530 <col:22> 'int' 8)))
            (ImplicitCastExpr 0x9eb69c0 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
              (ParenExpr 0x9eb69a8 <col:31, col:45> '_Bool'
                (BinaryOperator 0x9eb6990 <col:32, col:44> '_Bool' '<'
                  (ImplicitCastExpr 0x9eb6980 <col:32, col:40> 'int' <IntegralCast>
                    (CStyleCastExpr 0x9eb6968 <col:32, col:40> 'char':'char' <NoOp>
                      (ImplicitCastExpr 0x9eb6958 <col:37, col:40> 'char':'char' <IntegralCast>
                        (ParenExpr 0x9b9d5a0 <col:37, col:40> 'int'
                          (UnaryOperator 0x9b9d588 <col:38, col:39> 'int' prefix '-'
                            (IntegerLiteral 0x9b9d570 <col:39> 'int' 1))))))
                  (IntegerLiteral 0x9b9d5d8 <col:44> 'int' 0)))))))
      (ImplicitCastExpr 0x9eb6a58 <line:47:62, col:67> 'int' <IntegralCast>
        (CStyleCastExpr 0x9eb6a40 <col:62, col:67> 'char':'char' <NoOp>
          (ImplicitCastExpr 0x9eb6a30 <col:67> 'char':'char' <IntegralCast>
            (IntegerLiteral 0x9b9d668 <col:67> 'int' 0)))))))
;
        static const char __max = (ImplicitCastExpr 0x9eb6e40 </usr/include/c++/4.6/ext/numeric_traits.h:50:3, line:51:72> 'const char':'const char' <IntegralCast>
  (ParenExpr 0x9eb6e28 <line:50:3, line:51:72> 'int'
    (ConditionalOperator 0x9eb6e08 <line:42:31, line:51:71> 'int'
      (ParenExpr 0x9eb6b60 <line:42:31, col:45> '_Bool'
        (BinaryOperator 0x9eb6b48 <col:32, col:44> '_Bool' '<'
          (ImplicitCastExpr 0x9eb6b38 <col:32, col:40> 'int' <IntegralCast>
            (CStyleCastExpr 0x9eb6b20 <col:32, col:40> 'char':'char' <NoOp>
              (ImplicitCastExpr 0x9eb6b10 <col:37, col:40> 'char':'char' <IntegralCast>
                (ParenExpr 0x9b9d748 <col:37, col:40> 'int'
                  (UnaryOperator 0x9b9d730 <col:38, col:39> 'int' prefix '-'
                    (IntegerLiteral 0x9b9d718 <col:39> 'int' 1))))))
          (IntegerLiteral 0x9b9d780 <col:44> 'int' 0)))
      (ParenExpr 0x9eb6d98 <line:51:4, col:61> 'int'
        (BinaryOperator 0x9eb6d80 <col:5, col:60> 'int' '+'
          (ParenExpr 0x9eb6d68 <col:5, col:56> 'int'
            (BinaryOperator 0x9eb6d50 <col:6, col:55> 'int' '<<'
              (ParenExpr 0x9eb6d38 <col:6, col:50> 'int'
                (BinaryOperator 0x9eb6d20 <col:7, col:49> 'int' '-'
                  (ParenExpr 0x9eb6d08 <col:7, col:45> 'int'
                    (BinaryOperator 0x9eb6cf0 <col:8, col:44> 'int' '<<'
                      (ImplicitCastExpr 0x9eb6ce0 <col:8, col:13> 'int' <IntegralCast>
                        (CStyleCastExpr 0x9eb6b90 <col:8, col:13> 'char':'char' <NoOp>
                          (ImplicitCastExpr 0x9eb6b80 <col:13> 'char':'char' <IntegralCast>
                            (IntegerLiteral 0x9b9d7c8 <col:13> 'int' 1))))
                      (ParenExpr 0x9eb6cc8 <col:18, col:44> 'unsigned int'
                        (BinaryOperator 0x9eb6cb0 <line:44:3, line:51:43> 'unsigned int' '-'
                          (ParenExpr 0x9eb6c88 <line:44:3, col:54> 'unsigned int'
                            (BinaryOperator 0x9eb6c70 <col:4, line:42:45> 'unsigned int' '-'
                              (BinaryOperator 0x9eb6bd8 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
                                (UnaryExprOrTypeTraitExpr 0x9eb6bb0 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'char':'char')
                                (ImplicitCastExpr 0x9eb6bc8 <<built-in>:17:22> 'unsigned int' <IntegralCast>
                                  (IntegerLiteral 0x9b9d820 <col:22> 'int' 8)))
                              (ImplicitCastExpr 0x9eb6c60 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
                                (ParenExpr 0x9eb6c48 <col:31, col:45> '_Bool'
                                  (BinaryOperator 0x9eb6c30 <col:32, col:44> '_Bool' '<'
                                    (ImplicitCastExpr 0x9eb6c20 <col:32, col:40> 'int' <IntegralCast>
                                      (CStyleCastExpr 0x9eb6c08 <col:32, col:40> 'char':'char' <NoOp>
                                        (ImplicitCastExpr 0x9eb6bf8 <col:37, col:40> 'char':'char' <IntegralCast>
                                          (ParenExpr 0x9b9d890 <col:37, col:40> 'int'
                                            (UnaryOperator 0x9b9d878 <col:38, col:39> 'int' prefix '-'
                                              (IntegerLiteral 0x9b9d860 <col:39> 'int' 1))))))
                                    (IntegerLiteral 0x9b9d8c8 <col:44> 'int' 0))))))
                          (ImplicitCastExpr 0x9eb6ca0 <line:51:43> 'unsigned int' <IntegralCast>
                            (IntegerLiteral 0x9b9d940 <col:43> 'int' 1))))))
                  (IntegerLiteral 0x9b9d9b8 <col:49> 'int' 1)))
              (IntegerLiteral 0x9b9da00 <col:55> 'int' 1)))
          (IntegerLiteral 0x9b9da48 <col:60> 'int' 1)))
      (UnaryOperator 0x9eb6df0 <col:65, col:71> 'int' prefix '~'
        (ImplicitCastExpr 0x9eb6de0 <col:66, col:71> 'int' <IntegralCast>
          (CStyleCastExpr 0x9eb6dc8 <col:66, col:71> 'char':'char' <NoOp>
            (ImplicitCastExpr 0x9eb6db8 <col:71> 'char':'char' <IntegralCast>
              (IntegerLiteral 0x9b9da90 <col:71> 'int' 0))))))))
;
        static const bool __is_signed = (ParenExpr 0x9eb6ef0 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> '_Bool'
  (BinaryOperator 0x9eb6ed8 <col:32, col:44> '_Bool' '<'
    (ImplicitCastExpr 0x9eb6ec8 <col:32, col:40> 'int' <IntegralCast>
      (CStyleCastExpr 0x9eb6eb0 <col:32, col:40> 'char':'char' <NoOp>
        (ImplicitCastExpr 0x9eb6ea0 <col:37, col:40> 'char':'char' <IntegralCast>
          (ParenExpr 0x9b9db88 <col:37, col:40> 'int'
            (UnaryOperator 0x9b9db70 <col:38, col:39> 'int' prefix '-'
              (IntegerLiteral 0x9b9db58 <col:39> 'int' 1))))))
    (IntegerLiteral 0x9ba14e0 <col:44> 'int' 0)))
;
        static const int __digits = (ImplicitCastExpr 0x9eb7050 </usr/include/c++/4.6/ext/numeric_traits.h:44:3, col:54> 'const int' <IntegralCast>
  (ParenExpr 0x9eb7038 <col:3, col:54> 'unsigned int'
    (BinaryOperator 0x9eb7020 <col:4, line:42:45> 'unsigned int' '-'
      (BinaryOperator 0x9eb6f88 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
        (UnaryExprOrTypeTraitExpr 0x9eb6f60 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'char':'char')
        (ImplicitCastExpr 0x9eb6f78 <<built-in>:17:22> 'unsigned int' <IntegralCast>
          (IntegerLiteral 0x9ba1598 <col:22> 'int' 8)))
      (ImplicitCastExpr 0x9eb7010 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
        (ParenExpr 0x9eb6ff8 <col:31, col:45> '_Bool'
          (BinaryOperator 0x9eb6fe0 <col:32, col:44> '_Bool' '<'
            (ImplicitCastExpr 0x9eb6fd0 <col:32, col:40> 'int' <IntegralCast>
              (CStyleCastExpr 0x9eb6fb8 <col:32, col:40> 'char':'char' <NoOp>
                (ImplicitCastExpr 0x9eb6fa8 <col:37, col:40> 'char':'char' <IntegralCast>
                  (ParenExpr 0x9ba1608 <col:37, col:40> 'int'
                    (UnaryOperator 0x9ba15f0 <col:38, col:39> 'int' prefix '-'
                      (IntegerLiteral 0x9ba15d8 <col:39> 'int' 1))))))
            (IntegerLiteral 0x9ba1640 <col:44> 'int' 0)))))))
;
    }
template <typename _Value = int> struct __numeric_traits_integer {
        struct __numeric_traits_integer;
        static const int __min = (ParenExpr 0x9d4cfb8 </usr/include/c++/4.6/ext/numeric_traits.h:47:3, col:68> 'int':'int'
  (ConditionalOperator 0x9d4cf98 <line:42:31, line:47:67> 'int':'int'
    (ParenExpr 0x9d4ce50 <line:42:31, col:45> '_Bool'
      (BinaryOperator 0x9d4ce38 <col:32, col:44> '_Bool' '<'
        (CStyleCastExpr 0x9d4ce20 <col:32, col:40> 'int':'int' <NoOp>
          (ParenExpr 0x9b9d458 <col:37, col:40> 'int'
            (UnaryOperator 0x9b9d440 <col:38, col:39> 'int' prefix '-'
              (IntegerLiteral 0x9b9d428 <col:39> 'int' 1))))
        (IntegerLiteral 0x9b9d490 <col:44> 'int' 0)))
    (BinaryOperator 0x9d4cf60 <line:47:28, line:44:54> 'int':'int' '<<'
      (CStyleCastExpr 0x9d4ce70 <line:47:28, col:33> 'int':'int' <NoOp>
        (IntegerLiteral 0x9b9d4d8 <col:33> 'int' 1))
      (ParenExpr 0x9d4cf48 <line:44:3, col:54> 'unsigned int'
        (BinaryOperator 0x9d4cf30 <col:4, line:42:45> 'unsigned int' '-'
          (BinaryOperator 0x9d4ceb8 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
            (UnaryExprOrTypeTraitExpr 0x9d4ce90 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'int':'int')
            (ImplicitCastExpr 0x9d4cea8 <<built-in>:17:22> 'unsigned int' <IntegralCast>
              (IntegerLiteral 0x9b9d530 <col:22> 'int' 8)))
          (ImplicitCastExpr 0x9d4cf20 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
            (ParenExpr 0x9d4cf08 <col:31, col:45> '_Bool'
              (BinaryOperator 0x9d4cef0 <col:32, col:44> '_Bool' '<'
                (CStyleCastExpr 0x9d4ced8 <col:32, col:40> 'int':'int' <NoOp>
                  (ParenExpr 0x9b9d5a0 <col:37, col:40> 'int'
                    (UnaryOperator 0x9b9d588 <col:38, col:39> 'int' prefix '-'
                      (IntegerLiteral 0x9b9d570 <col:39> 'int' 1))))
                (IntegerLiteral 0x9b9d5d8 <col:44> 'int' 0)))))))
    (CStyleCastExpr 0x9d4cf80 <line:47:62, col:67> 'int':'int' <NoOp>
      (IntegerLiteral 0x9b9d668 <col:67> 'int' 0))))
;
        static const int __max = (ParenExpr 0x9d4d2c8 </usr/include/c++/4.6/ext/numeric_traits.h:50:3, line:51:72> 'int'
  (ConditionalOperator 0x9d4d2a8 <line:42:31, line:51:71> 'int'
    (ParenExpr 0x9d4d060 <line:42:31, col:45> '_Bool'
      (BinaryOperator 0x9d4d048 <col:32, col:44> '_Bool' '<'
        (CStyleCastExpr 0x9d4d030 <col:32, col:40> 'int':'int' <NoOp>
          (ParenExpr 0x9b9d748 <col:37, col:40> 'int'
            (UnaryOperator 0x9b9d730 <col:38, col:39> 'int' prefix '-'
              (IntegerLiteral 0x9b9d718 <col:39> 'int' 1))))
        (IntegerLiteral 0x9b9d780 <col:44> 'int' 0)))
    (ParenExpr 0x9d4d258 <line:51:4, col:61> 'int'
      (BinaryOperator 0x9d4d240 <col:5, col:60> 'int' '+'
        (ParenExpr 0x9d4d228 <col:5, col:56> 'int'
          (BinaryOperator 0x9d4d210 <col:6, col:55> 'int' '<<'
            (ParenExpr 0x9d4d1f8 <col:6, col:50> 'int'
              (BinaryOperator 0x9d4d1e0 <col:7, col:49> 'int' '-'
                (ParenExpr 0x9d4d1c8 <col:7, col:45> 'int':'int'
                  (BinaryOperator 0x9d4d1b0 <col:8, col:44> 'int':'int' '<<'
                    (CStyleCastExpr 0x9d4d080 <col:8, col:13> 'int':'int' <NoOp>
                      (IntegerLiteral 0x9b9d7c8 <col:13> 'int' 1))
                    (ParenExpr 0x9d4d198 <col:18, col:44> 'unsigned int'
                      (BinaryOperator 0x9d4d180 <line:44:3, line:51:43> 'unsigned int' '-'
                        (ParenExpr 0x9d4d158 <line:44:3, col:54> 'unsigned int'
                          (BinaryOperator 0x9d4d140 <col:4, line:42:45> 'unsigned int' '-'
                            (BinaryOperator 0x9d4d0c8 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
                              (UnaryExprOrTypeTraitExpr 0x9d4d0a0 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'int':'int')
                              (ImplicitCastExpr 0x9d4d0b8 <<built-in>:17:22> 'unsigned int' <IntegralCast>
                                (IntegerLiteral 0x9b9d820 <col:22> 'int' 8)))
                            (ImplicitCastExpr 0x9d4d130 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
                              (ParenExpr 0x9d4d118 <col:31, col:45> '_Bool'
                                (BinaryOperator 0x9d4d100 <col:32, col:44> '_Bool' '<'
                                  (CStyleCastExpr 0x9d4d0e8 <col:32, col:40> 'int':'int' <NoOp>
                                    (ParenExpr 0x9b9d890 <col:37, col:40> 'int'
                                      (UnaryOperator 0x9b9d878 <col:38, col:39> 'int' prefix '-'
                                        (IntegerLiteral 0x9b9d860 <col:39> 'int' 1))))
                                  (IntegerLiteral 0x9b9d8c8 <col:44> 'int' 0))))))
                        (ImplicitCastExpr 0x9d4d170 <line:51:43> 'unsigned int' <IntegralCast>
                          (IntegerLiteral 0x9b9d940 <col:43> 'int' 1))))))
                (IntegerLiteral 0x9b9d9b8 <col:49> 'int' 1)))
            (IntegerLiteral 0x9b9da00 <col:55> 'int' 1)))
        (IntegerLiteral 0x9b9da48 <col:60> 'int' 1)))
    (UnaryOperator 0x9d4d290 <col:65, col:71> 'int':'int' prefix '~'
      (CStyleCastExpr 0x9d4d278 <col:66, col:71> 'int':'int' <NoOp>
        (IntegerLiteral 0x9b9da90 <col:71> 'int' 0)))))
;
        static const bool __is_signed = (ParenExpr 0x9d4d360 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> '_Bool'
  (BinaryOperator 0x9d4d348 <col:32, col:44> '_Bool' '<'
    (CStyleCastExpr 0x9d4d330 <col:32, col:40> 'int':'int' <NoOp>
      (ParenExpr 0x9b9db88 <col:37, col:40> 'int'
        (UnaryOperator 0x9b9db70 <col:38, col:39> 'int' prefix '-'
          (IntegerLiteral 0x9b9db58 <col:39> 'int' 1))))
    (IntegerLiteral 0x9ba14e0 <col:44> 'int' 0)))
;
        static const int __digits = (ImplicitCastExpr 0x9d4d4a0 </usr/include/c++/4.6/ext/numeric_traits.h:44:3, col:54> 'const int' <IntegralCast>
  (ParenExpr 0x9d4d488 <col:3, col:54> 'unsigned int'
    (BinaryOperator 0x9d4d470 <col:4, line:42:45> 'unsigned int' '-'
      (BinaryOperator 0x9d4d3f8 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
        (UnaryExprOrTypeTraitExpr 0x9d4d3d0 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'int':'int')
        (ImplicitCastExpr 0x9d4d3e8 <<built-in>:17:22> 'unsigned int' <IntegralCast>
          (IntegerLiteral 0x9ba1598 <col:22> 'int' 8)))
      (ImplicitCastExpr 0x9d4d460 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
        (ParenExpr 0x9d4d448 <col:31, col:45> '_Bool'
          (BinaryOperator 0x9d4d430 <col:32, col:44> '_Bool' '<'
            (CStyleCastExpr 0x9d4d418 <col:32, col:40> 'int':'int' <NoOp>
              (ParenExpr 0x9ba1608 <col:37, col:40> 'int'
                (UnaryOperator 0x9ba15f0 <col:38, col:39> 'int' prefix '-'
                  (IntegerLiteral 0x9ba15d8 <col:39> 'int' 1))))
            (IntegerLiteral 0x9ba1640 <col:44> 'int' 0)))))))
;
    }
template <typename _Value = unsigned long> struct __numeric_traits_integer {
        struct __numeric_traits_integer;
        static const unsigned long __min = (ParenExpr 0x9e06328 </usr/include/c++/4.6/ext/numeric_traits.h:47:3, col:68> 'unsigned long':'unsigned long'
  (ConditionalOperator 0x9e06308 <line:42:31, line:47:67> 'unsigned long':'unsigned long'
    (ParenExpr 0x9e06180 <line:42:31, col:45> '_Bool'
      (BinaryOperator 0x9e06168 <col:32, col:44> '_Bool' '<'
        (CStyleCastExpr 0x9e06140 <col:32, col:40> 'unsigned long':'unsigned long' <NoOp>
          (ImplicitCastExpr 0x9e06130 <col:37, col:40> 'unsigned long':'unsigned long' <IntegralCast>
            (ParenExpr 0x9b9d458 <col:37, col:40> 'int'
              (UnaryOperator 0x9b9d440 <col:38, col:39> 'int' prefix '-'
                (IntegerLiteral 0x9b9d428 <col:39> 'int' 1)))))
        (ImplicitCastExpr 0x9e06158 <col:44> 'unsigned long' <IntegralCast>
          (IntegerLiteral 0x9b9d490 <col:44> 'int' 0))))
    (BinaryOperator 0x9e062c0 <line:47:28, line:44:54> 'unsigned long':'unsigned long' '<<'
      (CStyleCastExpr 0x9e061b0 <line:47:28, col:33> 'unsigned long':'unsigned long' <NoOp>
        (ImplicitCastExpr 0x9e061a0 <col:33> 'unsigned long':'unsigned long' <IntegralCast>
          (IntegerLiteral 0x9b9d4d8 <col:33> 'int' 1)))
      (ParenExpr 0x9e062a8 <line:44:3, col:54> 'unsigned int'
        (BinaryOperator 0x9e06290 <col:4, line:42:45> 'unsigned int' '-'
          (BinaryOperator 0x9e061f8 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
            (UnaryExprOrTypeTraitExpr 0x9e061d0 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'unsigned long':'unsigned long')
            (ImplicitCastExpr 0x9e061e8 <<built-in>:17:22> 'unsigned int' <IntegralCast>
              (IntegerLiteral 0x9b9d530 <col:22> 'int' 8)))
          (ImplicitCastExpr 0x9e06280 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
            (ParenExpr 0x9e06268 <col:31, col:45> '_Bool'
              (BinaryOperator 0x9e06250 <col:32, col:44> '_Bool' '<'
                (CStyleCastExpr 0x9e06228 <col:32, col:40> 'unsigned long':'unsigned long' <NoOp>
                  (ImplicitCastExpr 0x9e06218 <col:37, col:40> 'unsigned long':'unsigned long' <IntegralCast>
                    (ParenExpr 0x9b9d5a0 <col:37, col:40> 'int'
                      (UnaryOperator 0x9b9d588 <col:38, col:39> 'int' prefix '-'
                        (IntegerLiteral 0x9b9d570 <col:39> 'int' 1)))))
                (ImplicitCastExpr 0x9e06240 <col:44> 'unsigned long' <IntegralCast>
                  (IntegerLiteral 0x9b9d5d8 <col:44> 'int' 0))))))))
    (CStyleCastExpr 0x9e062f0 <line:47:62, col:67> 'unsigned long':'unsigned long' <NoOp>
      (ImplicitCastExpr 0x9e062e0 <col:67> 'unsigned long':'unsigned long' <IntegralCast>
        (IntegerLiteral 0x9b9d668 <col:67> 'int' 0)))))
;
        static const unsigned long __max = (ParenExpr 0x9e066b8 </usr/include/c++/4.6/ext/numeric_traits.h:50:3, line:51:72> 'unsigned long'
  (ConditionalOperator 0x9e06698 <line:42:31, line:51:71> 'unsigned long'
    (ParenExpr 0x9e063f0 <line:42:31, col:45> '_Bool'
      (BinaryOperator 0x9e063d8 <col:32, col:44> '_Bool' '<'
        (CStyleCastExpr 0x9e063b0 <col:32, col:40> 'unsigned long':'unsigned long' <NoOp>
          (ImplicitCastExpr 0x9e063a0 <col:37, col:40> 'unsigned long':'unsigned long' <IntegralCast>
            (ParenExpr 0x9b9d748 <col:37, col:40> 'int'
              (UnaryOperator 0x9b9d730 <col:38, col:39> 'int' prefix '-'
                (IntegerLiteral 0x9b9d718 <col:39> 'int' 1)))))
        (ImplicitCastExpr 0x9e063c8 <col:44> 'unsigned long' <IntegralCast>
          (IntegerLiteral 0x9b9d780 <col:44> 'int' 0))))
    (ParenExpr 0x9e06638 <line:51:4, col:61> 'unsigned long'
      (BinaryOperator 0x9e06620 <col:5, col:60> 'unsigned long' '+'
        (ParenExpr 0x9e065f8 <col:5, col:56> 'unsigned long'
          (BinaryOperator 0x9e065e0 <col:6, col:55> 'unsigned long' '<<'
            (ParenExpr 0x9e065c8 <col:6, col:50> 'unsigned long'
              (BinaryOperator 0x9e065b0 <col:7, col:49> 'unsigned long' '-'
                (ParenExpr 0x9e06588 <col:7, col:45> 'unsigned long':'unsigned long'
                  (BinaryOperator 0x9e06570 <col:8, col:44> 'unsigned long':'unsigned long' '<<'
                    (CStyleCastExpr 0x9e06420 <col:8, col:13> 'unsigned long':'unsigned long' <NoOp>
                      (ImplicitCastExpr 0x9e06410 <col:13> 'unsigned long':'unsigned long' <IntegralCast>
                        (IntegerLiteral 0x9b9d7c8 <col:13> 'int' 1)))
                    (ParenExpr 0x9e06558 <col:18, col:44> 'unsigned int'
                      (BinaryOperator 0x9e06540 <line:44:3, line:51:43> 'unsigned int' '-'
                        (ParenExpr 0x9e06518 <line:44:3, col:54> 'unsigned int'
                          (BinaryOperator 0x9e06500 <col:4, line:42:45> 'unsigned int' '-'
                            (BinaryOperator 0x9e06468 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
                              (UnaryExprOrTypeTraitExpr 0x9e06440 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'unsigned long':'unsigned long')
                              (ImplicitCastExpr 0x9e06458 <<built-in>:17:22> 'unsigned int' <IntegralCast>
                                (IntegerLiteral 0x9b9d820 <col:22> 'int' 8)))
                            (ImplicitCastExpr 0x9e064f0 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
                              (ParenExpr 0x9e064d8 <col:31, col:45> '_Bool'
                                (BinaryOperator 0x9e064c0 <col:32, col:44> '_Bool' '<'
                                  (CStyleCastExpr 0x9e06498 <col:32, col:40> 'unsigned long':'unsigned long' <NoOp>
                                    (ImplicitCastExpr 0x9e06488 <col:37, col:40> 'unsigned long':'unsigned long' <IntegralCast>
                                      (ParenExpr 0x9b9d890 <col:37, col:40> 'int'
                                        (UnaryOperator 0x9b9d878 <col:38, col:39> 'int' prefix '-'
                                          (IntegerLiteral 0x9b9d860 <col:39> 'int' 1)))))
                                  (ImplicitCastExpr 0x9e064b0 <col:44> 'unsigned long' <IntegralCast>
                                    (IntegerLiteral 0x9b9d8c8 <col:44> 'int' 0)))))))
                        (ImplicitCastExpr 0x9e06530 <line:51:43> 'unsigned int' <IntegralCast>
                          (IntegerLiteral 0x9b9d940 <col:43> 'int' 1))))))
                (ImplicitCastExpr 0x9e065a0 <col:49> 'unsigned long' <IntegralCast>
                  (IntegerLiteral 0x9b9d9b8 <col:49> 'int' 1))))
            (IntegerLiteral 0x9b9da00 <col:55> 'int' 1)))
        (ImplicitCastExpr 0x9e06610 <col:60> 'unsigned long' <IntegralCast>
          (IntegerLiteral 0x9b9da48 <col:60> 'int' 1))))
    (UnaryOperator 0x9e06680 <col:65, col:71> 'unsigned long':'unsigned long' prefix '~'
      (CStyleCastExpr 0x9e06668 <col:66, col:71> 'unsigned long':'unsigned long' <NoOp>
        (ImplicitCastExpr 0x9e06658 <col:71> 'unsigned long':'unsigned long' <IntegralCast>
          (IntegerLiteral 0x9b9da90 <col:71> 'int' 0))))))
;
        static const bool __is_signed = (ParenExpr 0x9e06770 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> '_Bool'
  (BinaryOperator 0x9e06758 <col:32, col:44> '_Bool' '<'
    (CStyleCastExpr 0x9e06730 <col:32, col:40> 'unsigned long':'unsigned long' <NoOp>
      (ImplicitCastExpr 0x9e06720 <col:37, col:40> 'unsigned long':'unsigned long' <IntegralCast>
        (ParenExpr 0x9b9db88 <col:37, col:40> 'int'
          (UnaryOperator 0x9b9db70 <col:38, col:39> 'int' prefix '-'
            (IntegerLiteral 0x9b9db58 <col:39> 'int' 1)))))
    (ImplicitCastExpr 0x9e06748 <col:44> 'unsigned long' <IntegralCast>
      (IntegerLiteral 0x9ba14e0 <col:44> 'int' 0))))
;
        static const int __digits = (ImplicitCastExpr 0x9e068d0 </usr/include/c++/4.6/ext/numeric_traits.h:44:3, col:54> 'const int' <IntegralCast>
  (ParenExpr 0x9e068b8 <col:3, col:54> 'unsigned int'
    (BinaryOperator 0x9e068a0 <col:4, line:42:45> 'unsigned int' '-'
      (BinaryOperator 0x9e06808 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
        (UnaryExprOrTypeTraitExpr 0x9e067e0 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'unsigned long':'unsigned long')
        (ImplicitCastExpr 0x9e067f8 <<built-in>:17:22> 'unsigned int' <IntegralCast>
          (IntegerLiteral 0x9ba1598 <col:22> 'int' 8)))
      (ImplicitCastExpr 0x9e06890 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
        (ParenExpr 0x9e06878 <col:31, col:45> '_Bool'
          (BinaryOperator 0x9e06860 <col:32, col:44> '_Bool' '<'
            (CStyleCastExpr 0x9e06838 <col:32, col:40> 'unsigned long':'unsigned long' <NoOp>
              (ImplicitCastExpr 0x9e06828 <col:37, col:40> 'unsigned long':'unsigned long' <IntegralCast>
                (ParenExpr 0x9ba1608 <col:37, col:40> 'int'
                  (UnaryOperator 0x9ba15f0 <col:38, col:39> 'int' prefix '-'
                    (IntegerLiteral 0x9ba15d8 <col:39> 'int' 1)))))
            (ImplicitCastExpr 0x9e06850 <col:44> 'unsigned long' <IntegralCast>
              (IntegerLiteral 0x9ba1640 <col:44> 'int' 0))))))))
;
    }
template <typename _Value = short> struct __numeric_traits_integer {
        struct __numeric_traits_integer;
        static const short __min = (ImplicitCastExpr 0x9f67280 </usr/include/c++/4.6/ext/numeric_traits.h:47:3, col:68> 'const short':'const short' <IntegralCast>
  (ParenExpr 0x9f67268 <col:3, col:68> 'int'
    (ConditionalOperator 0x9f67248 <line:42:31, line:47:67> 'int'
      (ParenExpr 0x9f670a0 <line:42:31, col:45> '_Bool'
        (BinaryOperator 0x9f67088 <col:32, col:44> '_Bool' '<'
          (ImplicitCastExpr 0x9f67078 <col:32, col:40> 'int' <IntegralCast>
            (CStyleCastExpr 0x9f67060 <col:32, col:40> 'short':'short' <NoOp>
              (ImplicitCastExpr 0x9f67050 <col:37, col:40> 'short':'short' <IntegralCast>
                (ParenExpr 0x9b9d458 <col:37, col:40> 'int'
                  (UnaryOperator 0x9b9d440 <col:38, col:39> 'int' prefix '-'
                    (IntegerLiteral 0x9b9d428 <col:39> 'int' 1))))))
          (IntegerLiteral 0x9b9d490 <col:44> 'int' 0)))
      (BinaryOperator 0x9f671f0 <line:47:28, line:44:54> 'int' '<<'
        (ImplicitCastExpr 0x9f671e0 <line:47:28, col:33> 'int' <IntegralCast>
          (CStyleCastExpr 0x9f670d0 <col:28, col:33> 'short':'short' <NoOp>
            (ImplicitCastExpr 0x9f670c0 <col:33> 'short':'short' <IntegralCast>
              (IntegerLiteral 0x9b9d4d8 <col:33> 'int' 1))))
        (ParenExpr 0x9f671c8 <line:44:3, col:54> 'unsigned int'
          (BinaryOperator 0x9f671b0 <col:4, line:42:45> 'unsigned int' '-'
            (BinaryOperator 0x9f67118 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
              (UnaryExprOrTypeTraitExpr 0x9f670f0 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'short':'short')
              (ImplicitCastExpr 0x9f67108 <<built-in>:17:22> 'unsigned int' <IntegralCast>
                (IntegerLiteral 0x9b9d530 <col:22> 'int' 8)))
            (ImplicitCastExpr 0x9f671a0 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
              (ParenExpr 0x9f67188 <col:31, col:45> '_Bool'
                (BinaryOperator 0x9f67170 <col:32, col:44> '_Bool' '<'
                  (ImplicitCastExpr 0x9f67160 <col:32, col:40> 'int' <IntegralCast>
                    (CStyleCastExpr 0x9f67148 <col:32, col:40> 'short':'short' <NoOp>
                      (ImplicitCastExpr 0x9f67138 <col:37, col:40> 'short':'short' <IntegralCast>
                        (ParenExpr 0x9b9d5a0 <col:37, col:40> 'int'
                          (UnaryOperator 0x9b9d588 <col:38, col:39> 'int' prefix '-'
                            (IntegerLiteral 0x9b9d570 <col:39> 'int' 1))))))
                  (IntegerLiteral 0x9b9d5d8 <col:44> 'int' 0)))))))
      (ImplicitCastExpr 0x9f67238 <line:47:62, col:67> 'int' <IntegralCast>
        (CStyleCastExpr 0x9f67220 <col:62, col:67> 'short':'short' <NoOp>
          (ImplicitCastExpr 0x9f67210 <col:67> 'short':'short' <IntegralCast>
            (IntegerLiteral 0x9b9d668 <col:67> 'int' 0)))))))
;
        static const short __max = (ImplicitCastExpr 0x9f67620 </usr/include/c++/4.6/ext/numeric_traits.h:50:3, line:51:72> 'const short':'const short' <IntegralCast>
  (ParenExpr 0x9f67608 <line:50:3, line:51:72> 'int'
    (ConditionalOperator 0x9f675e8 <line:42:31, line:51:71> 'int'
      (ParenExpr 0x9f67340 <line:42:31, col:45> '_Bool'
        (BinaryOperator 0x9f67328 <col:32, col:44> '_Bool' '<'
          (ImplicitCastExpr 0x9f67318 <col:32, col:40> 'int' <IntegralCast>
            (CStyleCastExpr 0x9f67300 <col:32, col:40> 'short':'short' <NoOp>
              (ImplicitCastExpr 0x9f672f0 <col:37, col:40> 'short':'short' <IntegralCast>
                (ParenExpr 0x9b9d748 <col:37, col:40> 'int'
                  (UnaryOperator 0x9b9d730 <col:38, col:39> 'int' prefix '-'
                    (IntegerLiteral 0x9b9d718 <col:39> 'int' 1))))))
          (IntegerLiteral 0x9b9d780 <col:44> 'int' 0)))
      (ParenExpr 0x9f67578 <line:51:4, col:61> 'int'
        (BinaryOperator 0x9f67560 <col:5, col:60> 'int' '+'
          (ParenExpr 0x9f67548 <col:5, col:56> 'int'
            (BinaryOperator 0x9f67530 <col:6, col:55> 'int' '<<'
              (ParenExpr 0x9f67518 <col:6, col:50> 'int'
                (BinaryOperator 0x9f67500 <col:7, col:49> 'int' '-'
                  (ParenExpr 0x9f674e8 <col:7, col:45> 'int'
                    (BinaryOperator 0x9f674d0 <col:8, col:44> 'int' '<<'
                      (ImplicitCastExpr 0x9f674c0 <col:8, col:13> 'int' <IntegralCast>
                        (CStyleCastExpr 0x9f67370 <col:8, col:13> 'short':'short' <NoOp>
                          (ImplicitCastExpr 0x9f67360 <col:13> 'short':'short' <IntegralCast>
                            (IntegerLiteral 0x9b9d7c8 <col:13> 'int' 1))))
                      (ParenExpr 0x9f674a8 <col:18, col:44> 'unsigned int'
                        (BinaryOperator 0x9f67490 <line:44:3, line:51:43> 'unsigned int' '-'
                          (ParenExpr 0x9f67468 <line:44:3, col:54> 'unsigned int'
                            (BinaryOperator 0x9f67450 <col:4, line:42:45> 'unsigned int' '-'
                              (BinaryOperator 0x9f673b8 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
                                (UnaryExprOrTypeTraitExpr 0x9f67390 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'short':'short')
                                (ImplicitCastExpr 0x9f673a8 <<built-in>:17:22> 'unsigned int' <IntegralCast>
                                  (IntegerLiteral 0x9b9d820 <col:22> 'int' 8)))
                              (ImplicitCastExpr 0x9f67440 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
                                (ParenExpr 0x9f67428 <col:31, col:45> '_Bool'
                                  (BinaryOperator 0x9f67410 <col:32, col:44> '_Bool' '<'
                                    (ImplicitCastExpr 0x9f67400 <col:32, col:40> 'int' <IntegralCast>
                                      (CStyleCastExpr 0x9f673e8 <col:32, col:40> 'short':'short' <NoOp>
                                        (ImplicitCastExpr 0x9f673d8 <col:37, col:40> 'short':'short' <IntegralCast>
                                          (ParenExpr 0x9b9d890 <col:37, col:40> 'int'
                                            (UnaryOperator 0x9b9d878 <col:38, col:39> 'int' prefix '-'
                                              (IntegerLiteral 0x9b9d860 <col:39> 'int' 1))))))
                                    (IntegerLiteral 0x9b9d8c8 <col:44> 'int' 0))))))
                          (ImplicitCastExpr 0x9f67480 <line:51:43> 'unsigned int' <IntegralCast>
                            (IntegerLiteral 0x9b9d940 <col:43> 'int' 1))))))
                  (IntegerLiteral 0x9b9d9b8 <col:49> 'int' 1)))
              (IntegerLiteral 0x9b9da00 <col:55> 'int' 1)))
          (IntegerLiteral 0x9b9da48 <col:60> 'int' 1)))
      (UnaryOperator 0x9f675d0 <col:65, col:71> 'int' prefix '~'
        (ImplicitCastExpr 0x9f675c0 <col:66, col:71> 'int' <IntegralCast>
          (CStyleCastExpr 0x9f675a8 <col:66, col:71> 'short':'short' <NoOp>
            (ImplicitCastExpr 0x9f67598 <col:71> 'short':'short' <IntegralCast>
              (IntegerLiteral 0x9b9da90 <col:71> 'int' 0))))))))
;
        static const bool __is_signed = (ParenExpr 0x9f676d0 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> '_Bool'
  (BinaryOperator 0x9f676b8 <col:32, col:44> '_Bool' '<'
    (ImplicitCastExpr 0x9f676a8 <col:32, col:40> 'int' <IntegralCast>
      (CStyleCastExpr 0x9f67690 <col:32, col:40> 'short':'short' <NoOp>
        (ImplicitCastExpr 0x9f67680 <col:37, col:40> 'short':'short' <IntegralCast>
          (ParenExpr 0x9b9db88 <col:37, col:40> 'int'
            (UnaryOperator 0x9b9db70 <col:38, col:39> 'int' prefix '-'
              (IntegerLiteral 0x9b9db58 <col:39> 'int' 1))))))
    (IntegerLiteral 0x9ba14e0 <col:44> 'int' 0)))
;
        static const int __digits = (ImplicitCastExpr 0x9f67830 </usr/include/c++/4.6/ext/numeric_traits.h:44:3, col:54> 'const int' <IntegralCast>
  (ParenExpr 0x9f67818 <col:3, col:54> 'unsigned int'
    (BinaryOperator 0x9f67800 <col:4, line:42:45> 'unsigned int' '-'
      (BinaryOperator 0x9f67768 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
        (UnaryExprOrTypeTraitExpr 0x9f67740 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'short':'short')
        (ImplicitCastExpr 0x9f67758 <<built-in>:17:22> 'unsigned int' <IntegralCast>
          (IntegerLiteral 0x9ba1598 <col:22> 'int' 8)))
      (ImplicitCastExpr 0x9f677f0 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
        (ParenExpr 0x9f677d8 <col:31, col:45> '_Bool'
          (BinaryOperator 0x9f677c0 <col:32, col:44> '_Bool' '<'
            (ImplicitCastExpr 0x9f677b0 <col:32, col:40> 'int' <IntegralCast>
              (CStyleCastExpr 0x9f67798 <col:32, col:40> 'short':'short' <NoOp>
                (ImplicitCastExpr 0x9f67788 <col:37, col:40> 'short':'short' <IntegralCast>
                  (ParenExpr 0x9ba1608 <col:37, col:40> 'int'
                    (UnaryOperator 0x9ba15f0 <col:38, col:39> 'int' prefix '-'
                      (IntegerLiteral 0x9ba15d8 <col:39> 'int' 1))))))
            (IntegerLiteral 0x9ba1640 <col:44> 'int' 0)))))))
;
    }
template <typename _Value> struct __numeric_traits_integer {
        struct __numeric_traits_integer;
        static const _Value __min = (ParenExpr 0x9b9d6c0 </usr/include/c++/4.6/ext/numeric_traits.h:47:3, col:68> '<dependent type>'
  (ConditionalOperator 0x9b9d6a0 <line:42:31, line:47:67> '<dependent type>'
    (ParenExpr 0x9b9d4c0 <line:42:31, col:45> '<dependent type>'
      (BinaryOperator 0x9b9d4a8 <col:32, col:44> '<dependent type>' '<'
        (CStyleCastExpr 0x9b9d478 <col:32, col:40> '_Value' <Dependent>
          (ParenExpr 0x9b9d458 <col:37, col:40> 'int'
            (UnaryOperator 0x9b9d440 <col:38, col:39> 'int' prefix '-'
              (IntegerLiteral 0x9b9d428 <col:39> 'int' 1))))
        (IntegerLiteral 0x9b9d490 <col:44> 'int' 0)))
    (BinaryOperator 0x9b9d650 <line:47:28, line:44:54> '<dependent type>' '<<'
      (CStyleCastExpr 0x9b9d4f8 <line:47:28, col:33> '_Value' <Dependent>
        (IntegerLiteral 0x9b9d4d8 <col:33> 'int' 1))
      (ParenExpr 0x9b9d638 <line:44:3, col:54> '<dependent type>'
        (BinaryOperator 0x9b9d620 <col:4, line:42:45> '<dependent type>' '-'
          (BinaryOperator 0x9b9d558 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
            (UnaryExprOrTypeTraitExpr 0x9b9d518 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof '_Value')
            (ImplicitCastExpr 0x9b9d548 <<built-in>:17:22> 'unsigned int' <IntegralCast>
              (IntegerLiteral 0x9b9d530 <col:22> 'int' 8)))
          (ParenExpr 0x9b9d608 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> '<dependent type>'
            (BinaryOperator 0x9b9d5f0 <col:32, col:44> '<dependent type>' '<'
              (CStyleCastExpr 0x9b9d5c0 <col:32, col:40> '_Value' <Dependent>
                (ParenExpr 0x9b9d5a0 <col:37, col:40> 'int'
                  (UnaryOperator 0x9b9d588 <col:38, col:39> 'int' prefix '-'
                    (IntegerLiteral 0x9b9d570 <col:39> 'int' 1))))
              (IntegerLiteral 0x9b9d5d8 <col:44> 'int' 0))))))
    (CStyleCastExpr 0x9b9d688 <line:47:62, col:67> '_Value' <Dependent>
      (IntegerLiteral 0x9b9d668 <col:67> 'int' 0))))
;
        static const _Value __max = (ParenExpr 0x9b9db00 </usr/include/c++/4.6/ext/numeric_traits.h:50:3, line:51:72> '<dependent type>'
  (ConditionalOperator 0x9b9dae0 <line:42:31, line:51:71> '<dependent type>'
    (ParenExpr 0x9b9d7b0 <line:42:31, col:45> '<dependent type>'
      (BinaryOperator 0x9b9d798 <col:32, col:44> '<dependent type>' '<'
        (CStyleCastExpr 0x9b9d768 <col:32, col:40> '_Value' <Dependent>
          (ParenExpr 0x9b9d748 <col:37, col:40> 'int'
            (UnaryOperator 0x9b9d730 <col:38, col:39> 'int' prefix '-'
              (IntegerLiteral 0x9b9d718 <col:39> 'int' 1))))
        (IntegerLiteral 0x9b9d780 <col:44> 'int' 0)))
    (ParenExpr 0x9b9da78 <line:51:4, col:61> '<dependent type>'
      (BinaryOperator 0x9b9da60 <col:5, col:60> '<dependent type>' '+'
        (ParenExpr 0x9b9da30 <col:5, col:56> '<dependent type>'
          (BinaryOperator 0x9b9da18 <col:6, col:55> '<dependent type>' '<<'
            (ParenExpr 0x9b9d9e8 <col:6, col:50> '<dependent type>'
              (BinaryOperator 0x9b9d9d0 <col:7, col:49> '<dependent type>' '-'
                (ParenExpr 0x9b9d9a0 <col:7, col:45> '<dependent type>'
                  (BinaryOperator 0x9b9d988 <col:8, col:44> '<dependent type>' '<<'
                    (CStyleCastExpr 0x9b9d7e8 <col:8, col:13> '_Value' <Dependent>
                      (IntegerLiteral 0x9b9d7c8 <col:13> 'int' 1))
                    (ParenExpr 0x9b9d970 <col:18, col:44> '<dependent type>'
                      (BinaryOperator 0x9b9d958 <line:44:3, line:51:43> '<dependent type>' '-'
                        (ParenExpr 0x9b9d928 <line:44:3, col:54> '<dependent type>'
                          (BinaryOperator 0x9b9d910 <col:4, line:42:45> '<dependent type>' '-'
                            (BinaryOperator 0x9b9d848 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
                              (UnaryExprOrTypeTraitExpr 0x9b9d808 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof '_Value')
                              (ImplicitCastExpr 0x9b9d838 <<built-in>:17:22> 'unsigned int' <IntegralCast>
                                (IntegerLiteral 0x9b9d820 <col:22> 'int' 8)))
                            (ParenExpr 0x9b9d8f8 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> '<dependent type>'
                              (BinaryOperator 0x9b9d8e0 <col:32, col:44> '<dependent type>' '<'
                                (CStyleCastExpr 0x9b9d8b0 <col:32, col:40> '_Value' <Dependent>
                                  (ParenExpr 0x9b9d890 <col:37, col:40> 'int'
                                    (UnaryOperator 0x9b9d878 <col:38, col:39> 'int' prefix '-'
                                      (IntegerLiteral 0x9b9d860 <col:39> 'int' 1))))
                                (IntegerLiteral 0x9b9d8c8 <col:44> 'int' 0)))))
                        (IntegerLiteral 0x9b9d940 <line:51:43> 'int' 1)))))
                (IntegerLiteral 0x9b9d9b8 <col:49> 'int' 1)))
            (IntegerLiteral 0x9b9da00 <col:55> 'int' 1)))
        (IntegerLiteral 0x9b9da48 <col:60> 'int' 1)))
    (UnaryOperator 0x9b9dac8 <col:65, col:71> '<dependent type>' prefix '~'
      (CStyleCastExpr 0x9b9dab0 <col:66, col:71> '_Value' <Dependent>
        (IntegerLiteral 0x9b9da90 <col:71> 'int' 0)))))
;
        static const bool __is_signed = (ParenExpr 0x9ba1510 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> '<dependent type>'
  (BinaryOperator 0x9ba14f8 <col:32, col:44> '<dependent type>' '<'
    (CStyleCastExpr 0x9ba14c8 <col:32, col:40> '_Value' <Dependent>
      (ParenExpr 0x9b9db88 <col:37, col:40> 'int'
        (UnaryOperator 0x9b9db70 <col:38, col:39> 'int' prefix '-'
          (IntegerLiteral 0x9b9db58 <col:39> 'int' 1))))
    (IntegerLiteral 0x9ba14e0 <col:44> 'int' 0)))
;
        static const int __digits = (ParenExpr 0x9ba16a0 </usr/include/c++/4.6/ext/numeric_traits.h:44:3, col:54> '<dependent type>'
  (BinaryOperator 0x9ba1688 <col:4, line:42:45> '<dependent type>' '-'
    (BinaryOperator 0x9ba15c0 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
      (UnaryExprOrTypeTraitExpr 0x9ba1580 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof '_Value')
      (ImplicitCastExpr 0x9ba15b0 <<built-in>:17:22> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0x9ba1598 <col:22> 'int' 8)))
    (ParenExpr 0x9ba1670 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> '<dependent type>'
      (BinaryOperator 0x9ba1658 <col:32, col:44> '<dependent type>' '<'
        (CStyleCastExpr 0x9ba1628 <col:32, col:40> '_Value' <Dependent>
          (ParenExpr 0x9ba1608 <col:37, col:40> 'int'
            (UnaryOperator 0x9ba15f0 <col:38, col:39> 'int' prefix '-'
              (IntegerLiteral 0x9ba15d8 <col:39> 'int' 1))))
        (IntegerLiteral 0x9ba1640 <col:44> 'int' 0)))))
;
    };
    static const _Value __min;
    static const _Value __max;
    static const bool __is_signed;
    static const int __digits;
    template <typename _Value = char> struct __numeric_traits_floating
template <typename _Value = int> struct __numeric_traits_floating
template <typename _Value = unsigned long> struct __numeric_traits_floating
template <typename _Value = short> struct __numeric_traits_floating
template <typename _Value> struct __numeric_traits_floating {
        struct __numeric_traits_floating;
        static const int __max_digits10 = (ImplicitCastExpr 0x9ba28f8 </usr/include/c++/4.6/ext/numeric_traits.h:88:3, line:89:38> 'const int' <IntegralCast>
  (ParenExpr 0x9ba28e0 <line:88:3, line:89:38> 'long'
    (BinaryOperator 0x9ba28c8 <line:88:4, line:89:34> 'long' '+'
      (ImplicitCastExpr 0x9ba28b8 <line:88:4> 'long' <IntegralCast>
        (IntegerLiteral 0x9ba21d8 <col:4> 'int' 2))
      (BinaryOperator 0x9ba28a0 <line:84:3, line:89:34> 'long' '/'
        (BinaryOperator 0x9ba2860 <line:84:3, line:89:27> 'long' '*'
          (ImplicitCastExpr 0x9ba2850 <line:84:3, line:85:60> 'long' <IntegralCast>
            (ParenExpr 0x9ba2820 <line:84:3, line:85:60> 'int'
              (ConditionalOperator 0x9ba2800 <line:84:4, <built-in>:85:27> 'int'
                (DependentScopeDeclRefExpr 0x9ba2380 </usr/include/c++/4.6/ext/numeric_traits.h:84:4, col:33> '<dependent type>' lvalue)
                (IntegerLiteral 0x9ba23a8 <<built-in>:59:26> 'int' 24)
                (ConditionalOperator 0x9ba27e0 </usr/include/c++/4.6/ext/numeric_traits.h:85:6, <built-in>:85:27> 'int'
                  (DependentScopeDeclRefExpr 0x9ba2788 </usr/include/c++/4.6/ext/numeric_traits.h:85:6, col:36> '<dependent type>' lvalue)
                  (IntegerLiteral 0x9ba27b0 <<built-in>:72:26> 'int' 53)
                  (IntegerLiteral 0x9ba27c8 <line:85:27> 'int' 64)))))
          (IntegerLiteral 0x9ba2838 </usr/include/c++/4.6/ext/numeric_traits.h:89:27> 'long' 643))
        (ImplicitCastExpr 0x9ba2890 <col:34> 'long' <IntegralCast>
          (IntegerLiteral 0x9ba2878 <col:34> 'int' 2136))))))
;
        static const bool __is_signed = (CXXBoolLiteralExpr 0x9ba2948 </usr/include/c++/4.6/ext/numeric_traits.h:105:39> '_Bool' true)
;
        static const int __digits10 = (ParenExpr 0x9ba2cc0 </usr/include/c++/4.6/ext/numeric_traits.h:84:3, line:85:60> 'int'
  (ConditionalOperator 0x9ba2ca0 <line:84:4, <built-in>:81:22> 'int'
    (DependentScopeDeclRefExpr 0x9ba2ad0 </usr/include/c++/4.6/ext/numeric_traits.h:84:4, col:33> '<dependent type>' lvalue)
    (IntegerLiteral 0x9ba2af8 <<built-in>:55:21> 'int' 6)
    (ConditionalOperator 0x9ba2c80 </usr/include/c++/4.6/ext/numeric_traits.h:85:6, <built-in>:81:22> 'int'
      (DependentScopeDeclRefExpr 0x9ba2c28 </usr/include/c++/4.6/ext/numeric_traits.h:85:6, col:36> '<dependent type>' lvalue)
      (IntegerLiteral 0x9ba2c50 <<built-in>:68:21> 'int' 15)
      (IntegerLiteral 0x9ba2c68 <line:81:22> 'int' 18))))
;
        static const int __max_exponent10 = (ParenExpr 0x9ba3040 </usr/include/c++/4.6/ext/numeric_traits.h:84:3, line:85:60> 'int'
  (ConditionalOperator 0x9ba3020 <line:84:4, <built-in>:86:29> 'int'
    (DependentScopeDeclRefExpr 0x9ba2e50 </usr/include/c++/4.6/ext/numeric_traits.h:84:4, col:33> '<dependent type>' lvalue)
    (IntegerLiteral 0x9ba2e78 <<built-in>:60:28> 'int' 38)
    (ConditionalOperator 0x9ba3000 </usr/include/c++/4.6/ext/numeric_traits.h:85:6, <built-in>:86:29> 'int'
      (DependentScopeDeclRefExpr 0x9ba2fa8 </usr/include/c++/4.6/ext/numeric_traits.h:85:6, col:36> '<dependent type>' lvalue)
      (IntegerLiteral 0x9ba2fd0 <<built-in>:73:28> 'int' 308)
      (IntegerLiteral 0x9ba2fe8 <line:86:29> 'int' 4932))))
;
    };
    static const int __max_digits10;
    static const bool __is_signed;
    static const int __digits10;
    static const int __max_exponent10;
    template <typename _Value = char> struct __numeric_traits : public typename __conditional_type<std::__is_integer<char>::__value, __numeric_traits_integer<char>, __numeric_traits_floating<char> >::__type {
        struct __numeric_traits;
    }
template <typename _Value = int> struct __numeric_traits : public typename __conditional_type<std::__is_integer<int>::__value, __numeric_traits_integer<int>, __numeric_traits_floating<int> >::__type {
        struct __numeric_traits;
    }
template <typename _Value = unsigned long> struct __numeric_traits : public typename __conditional_type<std::__is_integer<unsigned long>::__value, __numeric_traits_integer<unsigned long>, __numeric_traits_floating<unsigned long> >::__type {
        struct __numeric_traits;
    }
template <typename _Value = short> struct __numeric_traits : public typename __conditional_type<std::__is_integer<short>::__value, __numeric_traits_integer<short>, __numeric_traits_floating<short> >::__type {
        struct __numeric_traits;
    }
template <typename _Value> struct __numeric_traits : public __conditional_type<std::__is_integer<_Value>::__value, __numeric_traits_integer<_Value>, __numeric_traits_floating<_Value> >::__type {
        struct __numeric_traits;
    };
}
namespace std {
    template <typename _Tp = std::basic_string<wchar_t>> inline std::basic_string<wchar_t> *__addressof(std::basic_string<wchar_t> &__r) (CompoundStmt 0xa0dea68 </usr/include/c++/4.6/bits/move.h:44:5, line:47:5>
  (ReturnStmt 0xa0dea58 <line:45:7, line:46:66>
    (CXXReinterpretCastExpr 0xa0dea40 <line:45:14, line:46:66> 'class std::basic_string<wchar_t> *' reinterpret_cast<class std::basic_string<wchar_t> *> <BitCast>
      (UnaryOperator 0xa0dea28 <col:3, col:65> 'char *' prefix '&'
        (CXXConstCastExpr 0xa0dea10 <col:4, col:65> 'char' lvalue const_cast<char &> <NoOp>
          (CXXReinterpretCastExpr 0xa0de9f8 <col:22, col:64> 'const volatile char' lvalue reinterpret_cast<const volatile char &> <LValueBitCast>
            (DeclRefExpr 0xa0de9c4 <col:61> 'class std::basic_string<wchar_t>':'class std::basic_string<wchar_t>' lvalue ParmVar 0xa0de550 '__r' 'class std::basic_string<wchar_t> &')))))))

template <typename _Tp> inline _Tp *__addressof(_Tp &__r) (CompoundStmt 0x9ba43b0 </usr/include/c++/4.6/bits/move.h:44:5, line:47:5>
  (ReturnStmt 0x9ba43a0 <line:45:7, line:46:66>
    (CXXReinterpretCastExpr 0x9ba4388 <line:45:14, line:46:66> '_Tp *' reinterpret_cast<_Tp *> <Dependent>
      (UnaryOperator 0x9ba4360 <col:3, col:65> 'char *' prefix '&'
        (CXXConstCastExpr 0x9ba4348 <col:4, col:65> 'char' lvalue const_cast<char &> <NoOp>
          (CXXReinterpretCastExpr 0x9ba42e8 <col:22, col:64> 'const volatile char' lvalue reinterpret_cast<const volatile char &> <Dependent>
            (DeclRefExpr 0x9ba429c <col:61> '_Tp' lvalue ParmVar 0x9ba4150 '__r' '_Tp &')))))))

;
}
namespace std {
    template <typename _Tp> inline void swap(_Tp &__a, _Tp &__b) (CompoundStmt 0x9ba9f88 </usr/include/c++/4.6/bits/move.h:123:5, line:130:5>
  (DeclStmt 0x9ba9eb8 <line:127:7, col:37>
    0x9ba46a0 "_Tp __tmp =
      (ParenExpr 0x9ba9ea0 <line:105:30, col:36> '_Tp' lvalue
        (DeclRefExpr 0x9ba9e88 <line:127:33> '_Tp' lvalue ParmVar 0x9ba4510 '__a' '_Tp &'))")
  (BinaryOperator 0x9ba9f10 <line:128:7, line:105:36> '<dependent type>' '='
    (DeclRefExpr 0x9ba9ec8 <line:128:7> '_Tp' lvalue ParmVar 0x9ba4510 '__a' '_Tp &')
    (ParenExpr 0x9ba9ef8 <line:105:30, col:36> '_Tp' lvalue
      (DeclRefExpr 0x9ba9ee0 <line:128:27> '_Tp' lvalue ParmVar 0x9ba4560 '__b' '_Tp &')))
  (BinaryOperator 0x9ba9f70 <line:129:7, line:105:36> '<dependent type>' '='
    (DeclRefExpr 0x9ba9f28 <line:129:7> '_Tp' lvalue ParmVar 0x9ba4560 '__b' '_Tp &')
    (ParenExpr 0x9ba9f58 <line:105:30, col:36> '_Tp' lvalue
      (DeclRefExpr 0x9ba9f40 <line:129:27> '_Tp' lvalue Var 0x9ba46a0 '__tmp' '_Tp'))))

;
    template <typename _Tp, size_t _Nm> inline void swap(_Tp (&__a)[_Nm], _Tp (&__b)[_Nm]) (CompoundStmt 0x9baa5a0 </usr/include/c++/4.6/bits/move.h:137:5, line:140:5>
  (ForStmt 0x9baa578 <line:138:7, line:139:25>
    (DeclStmt 0x9baa3f0 <line:138:12, col:26>
      0x9baa390 "size_t __n =
        (ImplicitCastExpr 0x9baa3e0 <col:25> 'size_t':'unsigned int' <IntegralCast>
          (IntegerLiteral 0x9baa3c8 <col:25> 'int' 0))")
    <<<NULL>>>
    (BinaryOperator 0x9baa440 <col:28, col:34> '_Bool' '<'
      (ImplicitCastExpr 0x9baa430 <col:28> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9baa400 <col:28> 'size_t':'unsigned int' lvalue Var 0x9baa390 '__n' 'size_t':'unsigned int'))
      (DeclRefExpr 0x9baa418 <col:34> 'size_t':'unsigned int' NonTypeTemplateParm 0x9baa020 '_Nm' 'size_t':'unsigned int'))
    (UnaryOperator 0x9baa470 <col:39, col:41> 'size_t':'unsigned int' lvalue prefix '++'
      (DeclRefExpr 0x9baa458 <col:41> 'size_t':'unsigned int' lvalue Var 0x9baa390 '__n' 'size_t':'unsigned int'))
    (CallExpr 0x9baa550 <line:139:2, col:25> '<dependent type>'
      (UnresolvedLookupExpr 0x9baa488 <col:2> '<overloaded function type>' lvalue (ADL) = '1' 0x9baa350 0x9ba4660)
      (ArraySubscriptExpr 0x9baa4f0 <col:7, col:14> '<dependent type>' lvalue
        (DeclRefExpr 0x9baa4c0 <col:7> '_Tp [_Nm]':'_Tp [_Nm]' lvalue ParmVar 0x9baa170 '__a' '_Tp (&)[_Nm]')
        (DeclRefExpr 0x9baa4d8 <col:11> 'size_t':'unsigned int' lvalue Var 0x9baa390 '__n' 'size_t':'unsigned int'))
      (ArraySubscriptExpr 0x9baa538 <col:17, col:24> '<dependent type>' lvalue
        (DeclRefExpr 0x9baa504 <col:17> '_Tp [_Nm]':'_Tp [_Nm]' lvalue ParmVar 0x9baa250 '__b' '_Tp (&)[_Nm]')
        (DeclRefExpr 0x9baa51c <col:21> 'size_t':'unsigned int' lvalue Var 0x9baa390 '__n' 'size_t':'unsigned int')))))

;
}
namespace std {
    template <class _T1, class _T2> struct pair {
        struct pair;
        typedef _T1 first_type;
        typedef _T2 second_type;
        _T1 first;
        _T2 second;
        pair<_T1, _T2>() : first(), second() (CompoundStmt 0x9bab6b0 </usr/include/c++/4.6/bits/stl_pair.h:100:27, col:29>)


        pair<_T1, _T2>(const _T1 &__a, const _T2 &__b) : first((DeclRefExpr 0x9bab6c0 </usr/include/c++/4.6/bits/stl_pair.h:104:15> 'const _T1' lvalue ParmVar 0x9baab40 '__a' 'const _T1 &')
), second((DeclRefExpr 0x9bab718 </usr/include/c++/4.6/bits/stl_pair.h:104:28> 'const _T2' lvalue ParmVar 0x9baabd0 '__b' 'const _T2 &')
) (CompoundStmt 0x9bab770 </usr/include/c++/4.6/bits/stl_pair.h:104:33, col:35>)


        template <class _U1, class _U2> pair<_T1, _T2>(const pair<_U1, _U2> &__p) : first((CXXDependentScopeMemberExpr 0x9bab798 </usr/include/c++/4.6/bits/stl_pair.h:109:10, col:14> '<dependent type>' lvalue
  (DeclRefExpr 0x9bab780 <col:10> 'const pair<_U1, _U2>' lvalue ParmVar 0x9bab500 '__p' 'const pair<_U1, _U2> &'))
), second((CXXDependentScopeMemberExpr 0x9bab820 </usr/include/c++/4.6/bits/stl_pair.h:109:29, col:33> '<dependent type>' lvalue
  (DeclRefExpr 0x9bab808 <col:29> 'const pair<_U1, _U2>' lvalue ParmVar 0x9bab500 '__p' 'const pair<_U1, _U2> &'))
) (CompoundStmt 0x9bab8a0 </usr/include/c++/4.6/bits/stl_pair.h:109:41, col:43>)

;
    };
    template <class _T1, class _T2> inline bool operator==(const pair<_T1, _T2> &__x, const pair<_T1, _T2> &__y) (CompoundStmt 0x9babf78 </usr/include/c++/4.6/bits/stl_pair.h:202:5, col:66>
  (ReturnStmt 0x9babf68 <col:7, col:58>
    (BinaryOperator 0x9babf50 <col:14, col:58> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x9babe28 <col:14, col:31> '<dependent type>'
        (UnresolvedLookupExpr 0x9babdf0 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20)
        (CXXDependentScopeMemberExpr 0x9babd68 <col:14, col:18> '<dependent type>' lvalue
          (DeclRefExpr 0x9babd50 <col:14> 'const pair<_T1, _T2>' lvalue ParmVar 0x9babab0 '__x' 'const pair<_T1, _T2> &'))
        (CXXDependentScopeMemberExpr 0x9babdb8 <col:27, col:31> '<dependent type>' lvalue
          (DeclRefExpr 0x9babd9c <col:27> 'const pair<_T1, _T2>' lvalue ParmVar 0x9babc20 '__y' 'const pair<_T1, _T2> &')))
      (CXXOperatorCallExpr 0x9babf28 <col:40, col:58> '<dependent type>'
        (UnresolvedLookupExpr 0x9babef0 <col:51, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20)
        (CXXDependentScopeMemberExpr 0x9babe68 <col:40, col:44> '<dependent type>' lvalue
          (DeclRefExpr 0x9babe4c <col:40> 'const pair<_T1, _T2>' lvalue ParmVar 0x9babab0 '__x' 'const pair<_T1, _T2> &'))
        (CXXDependentScopeMemberExpr 0x9babeb8 <col:54, col:58> '<dependent type>' lvalue
          (DeclRefExpr 0x9babe9c <col:54> 'const pair<_T1, _T2>' lvalue ParmVar 0x9babc20 '__y' 'const pair<_T1, _T2> &'))))))

;
    template <class _T1, class _T2> inline bool operator<(const pair<_T1, _T2> &__x, const pair<_T1, _T2> &__y) (CompoundStmt 0x9bac990 </usr/include/c++/4.6/bits/stl_pair.h:208:5, line:209:65>
  (ReturnStmt 0x9bac980 <line:208:7, line:209:62>
    (BinaryOperator 0x9bac968 <line:208:14, line:209:62> '<dependent type>' '||'
      (CXXOperatorCallExpr 0x9bac6e0 <line:208:14, col:30> '<dependent type>'
        (UnresolvedLookupExpr 0x9bac6a8 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bac3c0)
        (CXXDependentScopeMemberExpr 0x9bac620 <col:14, col:18> '<dependent type>' lvalue
          (DeclRefExpr 0x9bac3f0 <col:14> 'const pair<_T1, _T2>' lvalue ParmVar 0x9bac170 '__x' 'const pair<_T1, _T2> &'))
        (CXXDependentScopeMemberExpr 0x9bac670 <col:26, col:30> '<dependent type>' lvalue
          (DeclRefExpr 0x9bac654 <col:26> 'const pair<_T1, _T2>' lvalue ParmVar 0x9bac2e0 '__y' 'const pair<_T1, _T2> &')))
      (ParenExpr 0x9bac950 <line:209:10, col:62> '<dependent type>'
        (BinaryOperator 0x9bac938 <col:11, col:56> '<dependent type>' '&&'
          (UnaryOperator 0x9bac820 <col:11, col:34> '<dependent type>' prefix '!'
            (ParenExpr 0x9bac808 <col:12, col:34> '<dependent type>'
              (CXXOperatorCallExpr 0x9bac7e0 <col:13, col:29> '<dependent type>'
                (UnresolvedLookupExpr 0x9bac7a8 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bac3c0)
                (CXXDependentScopeMemberExpr 0x9bac720 <col:13, col:17> '<dependent type>' lvalue
                  (DeclRefExpr 0x9bac704 <col:13> 'const pair<_T1, _T2>' lvalue ParmVar 0x9bac2e0 '__y' 'const pair<_T1, _T2> &'))
                (CXXDependentScopeMemberExpr 0x9bac770 <col:25, col:29> '<dependent type>' lvalue
                  (DeclRefExpr 0x9bac754 <col:25> 'const pair<_T1, _T2>' lvalue ParmVar 0x9bac170 '__x' 'const pair<_T1, _T2> &')))))
          (CXXOperatorCallExpr 0x9bac910 <col:39, col:56> '<dependent type>'
            (UnresolvedLookupExpr 0x9bac8d8 <col:50, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bac3c0)
            (CXXDependentScopeMemberExpr 0x9bac850 <col:39, col:43> '<dependent type>' lvalue
              (DeclRefExpr 0x9bac834 <col:39> 'const pair<_T1, _T2>' lvalue ParmVar 0x9bac170 '__x' 'const pair<_T1, _T2> &'))
            (CXXDependentScopeMemberExpr 0x9bac8a0 <col:52, col:56> '<dependent type>' lvalue
              (DeclRefExpr 0x9bac884 <col:52> 'const pair<_T1, _T2>' lvalue ParmVar 0x9bac2e0 '__y' 'const pair<_T1, _T2> &'))))))))

;
    template <class _T1, class _T2> inline bool operator!=(const pair<_T1, _T2> &__x, const pair<_T1, _T2> &__y) (CompoundStmt 0x9bacee0 </usr/include/c++/4.6/bits/stl_pair.h:215:5, col:29>
  (ReturnStmt 0x9baced0 <col:7, col:26>
    (UnaryOperator 0x9baceb8 <col:14, col:26> '<dependent type>' prefix '!'
      (ParenExpr 0x9bacea0 <col:15, col:26> '<dependent type>'
        (CXXOperatorCallExpr 0x9bace78 <col:16, col:23> '<dependent type>'
          (UnresolvedLookupExpr 0x9bace40 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20)
          (DeclRefExpr 0x9bace10 <col:16> 'const pair<_T1, _T2>' lvalue ParmVar 0x9bacb90 '__x' 'const pair<_T1, _T2> &')
          (DeclRefExpr 0x9bace28 <col:23> 'const pair<_T1, _T2>' lvalue ParmVar 0x9bacd00 '__y' 'const pair<_T1, _T2> &'))))))

;
    template <class _T1, class _T2> inline bool operator>(const pair<_T1, _T2> &__x, const pair<_T1, _T2> &__y) (CompoundStmt 0x9bad400 </usr/include/c++/4.6/bits/stl_pair.h:221:5, col:25>
  (ReturnStmt 0x9bad3f0 <col:7, col:20>
    (CXXOperatorCallExpr 0x9bad3c8 <col:14, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0x9bad390 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bac3c0)
      (DeclRefExpr 0x9bad360 <col:14> 'const pair<_T1, _T2>' lvalue ParmVar 0x9bad250 '__y' 'const pair<_T1, _T2> &')
      (DeclRefExpr 0x9bad378 <col:20> 'const pair<_T1, _T2>' lvalue ParmVar 0x9bad0e0 '__x' 'const pair<_T1, _T2> &'))))

;
    template <class _T1, class _T2> inline bool operator<=(const pair<_T1, _T2> &__x, const pair<_T1, _T2> &__y) (CompoundStmt 0x9badd90 </usr/include/c++/4.6/bits/stl_pair.h:227:5, col:28>
  (ReturnStmt 0x9badd80 <col:7, col:25>
    (UnaryOperator 0x9badd68 <col:14, col:25> '<dependent type>' prefix '!'
      (ParenExpr 0x9badd50 <col:15, col:25> '<dependent type>'
        (CXXOperatorCallExpr 0x9badd28 <col:16, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0x9badcf0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bac3c0)
          (DeclRefExpr 0x9badcc0 <col:16> 'const pair<_T1, _T2>' lvalue ParmVar 0x9badbb0 '__y' 'const pair<_T1, _T2> &')
          (DeclRefExpr 0x9badcd8 <col:22> 'const pair<_T1, _T2>' lvalue ParmVar 0x9bada40 '__x' 'const pair<_T1, _T2> &'))))))

;
    template <class _T1, class _T2> inline bool operator>=(const pair<_T1, _T2> &__x, const pair<_T1, _T2> &__y) (CompoundStmt 0x9bae2e0 </usr/include/c++/4.6/bits/stl_pair.h:233:5, col:28>
  (ReturnStmt 0x9bae2d0 <col:7, col:25>
    (UnaryOperator 0x9bae2b8 <col:14, col:25> '<dependent type>' prefix '!'
      (ParenExpr 0x9bae2a0 <col:15, col:25> '<dependent type>'
        (CXXOperatorCallExpr 0x9bae278 <col:16, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0x9bae240 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bac3c0)
          (DeclRefExpr 0x9bae210 <col:16> 'const pair<_T1, _T2>' lvalue ParmVar 0x9badf90 '__x' 'const pair<_T1, _T2> &')
          (DeclRefExpr 0x9bae228 <col:22> 'const pair<_T1, _T2>' lvalue ParmVar 0x9bae100 '__y' 'const pair<_T1, _T2> &'))))))

;
    template <class _T1, class _T2> inline pair<_T1, _T2> make_pair(_T1 __x, _T2 __y) (CompoundStmt 0x9bae798 </usr/include/c++/4.6/bits/stl_pair.h:273:5, col:40>
  (ReturnStmt 0x9bae788 <col:7, col:37>
    (CXXUnresolvedConstructExpr 0x9bae768 <col:14, col:37> 'pair<_T1, _T2>'
      (DeclRefExpr 0x9bae738 <col:29> '_T1' lvalue ParmVar 0x9bae490 '__x' '_T1')
      (DeclRefExpr 0x9bae750 <col:34> '_T2' lvalue ParmVar 0x9bae4d0 '__y' '_T2'))))

;
}
namespace std {
    struct input_iterator_tag {
        struct input_iterator_tag;
    };
    struct output_iterator_tag {
        struct output_iterator_tag;
    };
    struct forward_iterator_tag : public std::input_iterator_tag {
        struct forward_iterator_tag;
    };
    struct bidirectional_iterator_tag : public std::forward_iterator_tag {
        struct bidirectional_iterator_tag;
    };
    struct random_access_iterator_tag : public std::bidirectional_iterator_tag {
        struct random_access_iterator_tag;
    };
    template <typename _Category = std::output_iterator_tag, typename _Tp = void, typename _Distance = void, typename _Pointer = void, typename _Reference = void> struct iterator {
        struct iterator;
        typedef std::output_iterator_tag iterator_category;
        typedef void value_type;
        typedef void difference_type;
        typedef void pointer;
        typedef void reference;
    }
template <typename _Category = std::random_access_iterator_tag, typename _Tp = bool, typename _Distance = int, typename _Pointer = bool *, typename _Reference = bool &> struct iterator {
        struct iterator;
        typedef std::random_access_iterator_tag iterator_category;
        typedef bool value_type;
        typedef int difference_type;
        typedef bool *pointer;
        typedef bool &reference;
        inline iterator() throw() (CompoundStmt 0x9fef820 </usr/include/c++/4.6/bits/stl_iterator_base_types.h:118:12>)


        inline iterator(const std::iterator<std::random_access_iterator_tag, bool, int, bool *, bool &> &) throw() (CompoundStmt 0x9ff2170 </usr/include/c++/4.6/bits/stl_iterator_base_types.h:118:12>)


    }
template <typename _Category = std::random_access_iterator_tag, typename _Tp = bool, typename _Distance = int, typename _Pointer = const bool *, typename _Reference = bool> struct iterator {
        struct iterator;
        typedef std::random_access_iterator_tag iterator_category;
        typedef bool value_type;
        typedef int difference_type;
        typedef const bool *pointer;
        typedef bool reference;
    }
template <typename _Category = std::random_access_iterator_tag, typename _Tp = bool, typename _Distance = int, typename _Pointer = std::_Bit_reference *, typename _Reference = std::_Bit_reference> struct iterator {
        struct iterator;
        typedef std::random_access_iterator_tag iterator_category;
        typedef bool value_type;
        typedef int difference_type;
        typedef std::_Bit_reference *pointer;
        typedef std::_Bit_reference reference;
    }
template <typename _Category, typename _Tp, typename _Distance = ptrdiff_t, typename _Pointer = _Tp *, typename _Reference = _Tp &> struct iterator {
        struct iterator;
        typedef _Category iterator_category;
        typedef _Tp value_type;
        typedef _Distance difference_type;
        typedef _Pointer pointer;
        typedef _Reference reference;
    };
    template <typename _Iterator = std::_Bit_const_iterator> struct iterator_traits {
        struct iterator_traits;
        typedef typename _Bit_const_iterator::iterator_category iterator_category;
        typedef typename _Bit_const_iterator::value_type value_type;
        typedef typename _Bit_const_iterator::difference_type difference_type;
        typedef typename _Bit_const_iterator::pointer pointer;
        typedef typename _Bit_const_iterator::reference reference;
    }
template <typename _Iterator = std::_Bit_iterator> struct iterator_traits {
        struct iterator_traits;
        typedef typename _Bit_iterator::iterator_category iterator_category;
        typedef typename _Bit_iterator::value_type value_type;
        typedef typename _Bit_iterator::difference_type difference_type;
        typedef typename _Bit_iterator::pointer pointer;
        typedef typename _Bit_iterator::reference reference;
    }
template <typename _Iterator = const std::basic_string<wchar_t> *> struct iterator_traits {
        struct iterator_traits;
        typedef std::random_access_iterator_tag iterator_category;
        typedef std::basic_string<wchar_t> value_type;
        typedef ptrdiff_t difference_type;
        typedef const std::basic_string<wchar_t> *pointer;
        typedef const std::basic_string<wchar_t> &reference;
    }
template <typename _Iterator = __gnu_cxx::__normal_iterator<const std::basic_string<wchar_t> *, std::vector<std::basic_string<wchar_t>, std::allocator<std::basic_string<wchar_t> > > >> struct iterator_traits {
        struct iterator_traits;
        typedef typename __normal_iterator<const basic_string<wchar_t> *, vector<basic_string<wchar_t>, allocator<basic_string<wchar_t> > > >::iterator_category iterator_category;
        typedef typename __normal_iterator<const basic_string<wchar_t> *, vector<basic_string<wchar_t>, allocator<basic_string<wchar_t> > > >::value_type value_type;
        typedef typename __normal_iterator<const basic_string<wchar_t> *, vector<basic_string<wchar_t>, allocator<basic_string<wchar_t> > > >::difference_type difference_type;
        typedef typename __normal_iterator<const basic_string<wchar_t> *, vector<basic_string<wchar_t>, allocator<basic_string<wchar_t> > > >::pointer pointer;
        typedef typename __normal_iterator<const basic_string<wchar_t> *, vector<basic_string<wchar_t>, allocator<basic_string<wchar_t> > > >::reference reference;
    }
template <typename _Iterator = std::basic_string<wchar_t> *> struct iterator_traits {
        struct iterator_traits;
        typedef std::random_access_iterator_tag iterator_category;
        typedef std::basic_string<wchar_t> value_type;
        typedef ptrdiff_t difference_type;
        typedef std::basic_string<wchar_t> *pointer;
        typedef std::basic_string<wchar_t> &reference;
    }
template <typename _Iterator> struct iterator_traits {
        struct iterator_traits;
        typedef typename _Iterator::iterator_category iterator_category;
        typedef typename _Iterator::value_type value_type;
        typedef typename _Iterator::difference_type difference_type;
        typedef typename _Iterator::pointer pointer;
        typedef typename _Iterator::reference reference;
    };
    struct iterator_traits {
        struct iterator_traits;
        typedef std::random_access_iterator_tag iterator_category;
        typedef _Tp value_type;
        typedef ptrdiff_t difference_type;
        typedef _Tp *pointer;
        typedef _Tp &reference;
    };
    struct iterator_traits {
        struct iterator_traits;
        typedef std::random_access_iterator_tag iterator_category;
        typedef _Tp value_type;
        typedef ptrdiff_t difference_type;
        typedef const _Tp *pointer;
        typedef const _Tp &reference;
    };
    template <typename _Iter> inline typename iterator_traits<_Iter>::iterator_category __iterator_category(const _Iter &) (CompoundStmt 0x9bb5380 </usr/include/c++/4.6/bits/stl_iterator_base_types.h:202:5, col:68>
  (ReturnStmt 0x9bb5370 <col:7, col:65>
    (CXXUnresolvedConstructExpr 0x9bb5358 <col:14, col:65> 'typename iterator_traits<_Iter>::iterator_category')))

;
    template <typename _Iterator = std::basic_string<wchar_t> *, bool _HasBase = false> struct _Iter_base {
        struct _Iter_base;
        typedef std::basic_string<wchar_t> *iterator_type;
        static iterator_type _S_base(std::basic_string<wchar_t> *__it) (CompoundStmt 0xa0f2c48 </usr/include/c++/4.6/bits/stl_iterator_base_types.h:213:7, col:22>
  (ReturnStmt 0xa0f2c38 <col:9, col:16>
    (ImplicitCastExpr 0xa0f2c28 <col:16> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' <LValueToRValue>
      (DeclRefExpr 0xa0f2c0c <col:16> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' lvalue ParmVar 0xa0f21b0 '__it' 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *'))))


    }
template <typename _Iterator = unsigned long *, bool _HasBase = false> struct _Iter_base {
        struct _Iter_base;
        typedef unsigned long *iterator_type;
        static iterator_type _S_base(unsigned long *__it) (CompoundStmt 0xa0d5208 </usr/include/c++/4.6/bits/stl_iterator_base_types.h:213:7, col:22>
  (ReturnStmt 0xa0d51f8 <col:9, col:16>
    (ImplicitCastExpr 0xa0d51e8 <col:16> 'unsigned long *':'unsigned long *' <LValueToRValue>
      (DeclRefExpr 0xa0d51cc <col:16> 'unsigned long *':'unsigned long *' lvalue ParmVar 0xa0d2cd0 '__it' 'unsigned long *':'unsigned long *'))))


    }
template <typename _Iterator, bool _HasBase> struct _Iter_base {
        struct _Iter_base;
        typedef _Iterator iterator_type;
        static iterator_type _S_base(_Iterator __it) (CompoundStmt 0x9bb5f08 </usr/include/c++/4.6/bits/stl_iterator_base_types.h:213:7, col:22>
  (ReturnStmt 0x9bb5ef8 <col:9, col:16>
    (DeclRefExpr 0x9bb5ee0 <col:16> '_Iterator' lvalue ParmVar 0x9bb5dc0 '__it' '_Iterator')))


    };
    struct _Iter_base {
        struct _Iter_base;
        typedef typename _Iterator::iterator_type iterator_type;
        static iterator_type _S_base(_Iterator __it) (CompoundStmt 0x9bb6530 </usr/include/c++/4.6/bits/stl_iterator_base_types.h:221:7, col:29>
  (ReturnStmt 0x9bb6520 <col:9, col:26>
    (CallExpr 0x9bb6500 <col:16, col:26> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9bb64c8 <col:16, col:21> '<dependent type>' lvalue
        (DeclRefExpr 0x9bb64b0 <col:16> '_Iterator' lvalue ParmVar 0x9bb6390 '__it' '_Iterator')))))


    };
}
namespace std {
    template <typename _InputIterator> inline typename iterator_traits<_InputIterator>::difference_type __distance(_InputIterator __first, _InputIterator __last, std::input_iterator_tag) (CompoundStmt 0x9bb9ec8 </usr/include/c++/4.6/bits/stl_iterator_base_funcs.h:74:5, line:85:5>
  (DeclStmt 0x9bb6a70 <line:78:7, col:72>
    0x9bb6a20 "typename iterator_traits<_InputIterator>::difference_type __n =
      (IntegerLiteral 0x9bb6a58 <col:71> 'int' 0)")
  (WhileStmt 0x9bb6b88 <line:79:7, line:83:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9bb6ae8 <line:79:14, col:25> '<dependent type>'
      (UnresolvedLookupExpr 0x9bb6ab0 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bacde0)
      (DeclRefExpr 0x9bb6a80 <col:14> '_InputIterator' lvalue ParmVar 0x9bb6750 '__first' '_InputIterator')
      (DeclRefExpr 0x9bb6a98 <col:25> '_InputIterator' lvalue ParmVar 0x9bb6790 '__last' '_InputIterator'))
    (CompoundStmt 0x9bb6b70 <line:80:2, line:83:2>
      (UnaryOperator 0x9bb6b28 <line:81:4, col:6> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9bb6b0c <col:6> '_InputIterator' lvalue ParmVar 0x9bb6750 '__first' '_InputIterator'))
      (UnaryOperator 0x9bb6b58 <line:82:4, col:6> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9bb6b3c <col:6> 'typename iterator_traits<_InputIterator>::difference_type' lvalue Var 0x9bb6a20 '__n' 'typename iterator_traits<_InputIterator>::difference_type'))))
  (ReturnStmt 0x9bb9eb8 <line:84:7, col:14>
    (DeclRefExpr 0x9bb6b9c <col:14> 'typename iterator_traits<_InputIterator>::difference_type' lvalue Var 0x9bb6a20 '__n' 'typename iterator_traits<_InputIterator>::difference_type')))

;
    template <typename _RandomAccessIterator> inline typename iterator_traits<_RandomAccessIterator>::difference_type __distance(_RandomAccessIterator __first, _RandomAccessIterator __last, std::random_access_iterator_tag) (CompoundStmt 0x9bba260 </usr/include/c++/4.6/bits/stl_iterator_base_funcs.h:91:5, line:96:5>
  (ReturnStmt 0x9bba250 <line:95:7, col:23>
    (BinaryOperator 0x9bba238 <col:14, col:23> '<dependent type>' '-'
      (DeclRefExpr 0x9bba204 <col:14> '_RandomAccessIterator' lvalue ParmVar 0x9bba060 '__last' '_RandomAccessIterator')
      (DeclRefExpr 0x9bba21c <col:23> '_RandomAccessIterator' lvalue ParmVar 0x9bba020 '__first' '_RandomAccessIterator'))))

;
    template <typename _InputIterator> inline typename iterator_traits<_InputIterator>::difference_type distance(_InputIterator __first, _InputIterator __last) (CompoundStmt 0x9bba680 </usr/include/c++/4.6/bits/stl_iterator_base_funcs.h:113:5, line:117:5>
  (ReturnStmt 0x9bba670 <line:115:7, line:116:42>
    (CallExpr 0x9bba648 <line:115:14, line:116:42> '<dependent type>'
      (UnresolvedLookupExpr 0x9bba558 <line:115:14, col:19> '<overloaded function type>' lvalue (no ADL) = '1' 0x9bb6900 0x9bba1d0)
      (DeclRefExpr 0x9bba590 <col:30> '_InputIterator' lvalue ParmVar 0x9bba3b0 '__first' '_InputIterator')
      (DeclRefExpr 0x9bba5a8 <col:39> '_InputIterator' lvalue ParmVar 0x9bba3f0 '__last' '_InputIterator')
      (CallExpr 0x9bba628 <line:116:9, col:41> '<dependent type>'
        (UnresolvedLookupExpr 0x9bba5d8 <col:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0x9bb5240)
        (DeclRefExpr 0x9bba60c <col:34> '_InputIterator' lvalue ParmVar 0x9bba3b0 '__first' '_InputIterator')))))

;
    template <typename _InputIterator, typename _Distance> inline void __advance(_InputIterator &__i, _Distance __n, std::input_iterator_tag) (CompoundStmt 0x9bba9e8 </usr/include/c++/4.6/bits/stl_iterator_base_funcs.h:122:5, line:127:5>
  (WhileStmt 0x9bba9d0 <line:125:7, line:126:4>
    <<<NULL>>>
    (UnaryOperator 0x9bba988 <line:125:14, col:17> '<dependent type>' postfix '--'
      (DeclRefExpr 0x9bba954 <col:14> '_Distance' lvalue ParmVar 0x9bba7c0 '__n' '_Distance'))
    (UnaryOperator 0x9bba9b8 <line:126:2, col:4> '<dependent type>' prefix '++'
      (DeclRefExpr 0x9bba99c <col:4> '_InputIterator' lvalue ParmVar 0x9bba780 '__i' '_InputIterator &'))))

;
    template <typename _BidirectionalIterator, typename _Distance> inline void __advance(_BidirectionalIterator &__i, _Distance __n, std::bidirectional_iterator_tag) (CompoundStmt 0x9bbae88 </usr/include/c++/4.6/bits/stl_iterator_base_funcs.h:133:5, line:143:5>
  (IfStmt 0x9bbae68 <line:137:7, line:142:6>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9bbad20 <line:137:11, col:17> '<dependent type>'
      (UnresolvedLookupExpr 0x9bbace8 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bad330)
      (DeclRefExpr 0x9bbacb4 <col:11> '_Distance' lvalue ParmVar 0x9bbab20 '__n' '_Distance')
      (IntegerLiteral 0x9bbacd0 <col:17> 'int' 0))
    (WhileStmt 0x9bbadc0 <line:138:9, line:139:6>
      <<<NULL>>>
      (UnaryOperator 0x9bbad78 <line:138:16, col:19> '<dependent type>' postfix '--'
        (DeclRefExpr 0x9bbad44 <col:16> '_Distance' lvalue ParmVar 0x9bbab20 '__n' '_Distance'))
      (UnaryOperator 0x9bbada8 <line:139:4, col:6> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9bbad8c <col:6> '_BidirectionalIterator' lvalue ParmVar 0x9bbaae0 '__i' '_BidirectionalIterator &')))
    (WhileStmt 0x9bbae50 <line:141:9, line:142:6>
      <<<NULL>>>
      (UnaryOperator 0x9bbae08 <line:141:16, col:19> '<dependent type>' postfix '++'
        (DeclRefExpr 0x9bbadd4 <col:16> '_Distance' lvalue ParmVar 0x9bbab20 '__n' '_Distance'))
      (UnaryOperator 0x9bbae38 <line:142:4, col:6> '<dependent type>' prefix '--'
        (DeclRefExpr 0x9bbae1c <col:6> '_BidirectionalIterator' lvalue ParmVar 0x9bbaae0 '__i' '_BidirectionalIterator &')))))

;
    template <typename _RandomAccessIterator, typename _Distance> inline void __advance(_RandomAccessIterator &__i, _Distance __n, std::random_access_iterator_tag) (CompoundStmt 0x9bbbbd8 </usr/include/c++/4.6/bits/stl_iterator_base_funcs.h:149:5, line:154:5>
  (CompoundAssignOperator 0x9bbbbb8 <line:153:7, col:14> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (DeclRefExpr 0x9bbbb84 <col:7> '_RandomAccessIterator' lvalue ParmVar 0x9bbb9b0 '__i' '_RandomAccessIterator &')
    (DeclRefExpr 0x9bbbb9c <col:14> '_Distance' lvalue ParmVar 0x9bbb9f0 '__n' '_Distance')))

;
    template <typename _InputIterator, typename _Distance> inline void advance(_InputIterator &__i, _Distance __n) (CompoundStmt 0x9bbc0d8 </usr/include/c++/4.6/bits/stl_iterator_base_funcs.h:171:5, line:175:5>
  (DeclStmt 0x9bbbf80 <line:173:7, col:74>
    0x9bbbf30 "typename iterator_traits<_InputIterator>::difference_type __d =
      (DeclRefExpr 0x9bbbf64 <col:71> '_Distance' lvalue ParmVar 0x9bbbd10 '__n' '_Distance')")
  (CallExpr 0x9bbc0b0 <line:174:7, col:61> '<dependent type>'
    (UnresolvedLookupExpr 0x9bbbfb8 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9bba920 0x9bbac80 0x9bbbb50)
    (DeclRefExpr 0x9bbbff4 <col:22> '_InputIterator' lvalue ParmVar 0x9bbbcd0 '__i' '_InputIterator &')
    (DeclRefExpr 0x9bbc00c <col:27> 'typename iterator_traits<_InputIterator>::difference_type' lvalue Var 0x9bbbf30 '__d' 'typename iterator_traits<_InputIterator>::difference_type')
    (CallExpr 0x9bbc090 <col:32, col:60> '<dependent type>'
      (UnresolvedLookupExpr 0x9bbc040 <col:32, col:37> '<overloaded function type>' lvalue (no ADL) = '1' 0x9bb5240)
      (DeclRefExpr 0x9bbc074 <col:57> '_InputIterator' lvalue ParmVar 0x9bbbcd0 '__i' '_InputIterator &'))))

;
}
namespace std {
    template <typename _Iterator = std::_Bit_const_iterator> class reverse_iterator : public iterator<typename iterator_traits<_Bit_const_iterator>::iterator_category, typename iterator_traits<_Bit_const_iterator>::value_type, typename iterator_traits<_Bit_const_iterator>::difference_type, typename iterator_traits<_Bit_const_iterator>::pointer, typename iterator_traits<_Bit_const_iterator>::reference> {
        class reverse_iterator;
    protected:
    protected:
        std::_Bit_const_iterator current;
        typedef iterator_traits<std::_Bit_const_iterator> __traits_type;
    public:
    public:
        typedef std::_Bit_const_iterator iterator_type;
        typedef typename __traits_type::difference_type difference_type;
        typedef typename __traits_type::pointer pointer;
        typedef typename __traits_type::reference reference;
        reverse_iterator();
        reverse_iterator(iterator_type __x);
        reverse_iterator(const std::reverse_iterator<std::_Bit_const_iterator> &__x);
        template <typename _Iter = std::_Bit_const_iterator> reverse_iterator(const reverse_iterator<std::_Bit_const_iterator> &__x)template <typename _Iter> reverse_iterator(const reverse_iterator<_Iter> &__x);
        iterator_type base() const;
        reference operator*() const;
        pointer operator->() const;
        std::reverse_iterator<std::_Bit_const_iterator> &operator++();
        std::reverse_iterator<std::_Bit_const_iterator> operator++(int);
        std::reverse_iterator<std::_Bit_const_iterator> &operator--();
        std::reverse_iterator<std::_Bit_const_iterator> operator--(int);
        std::reverse_iterator<std::_Bit_const_iterator> operator+(difference_type __n) const;
        std::reverse_iterator<std::_Bit_const_iterator> &operator+=(difference_type __n);
        std::reverse_iterator<std::_Bit_const_iterator> operator-(difference_type __n) const;
        std::reverse_iterator<std::_Bit_const_iterator> &operator-=(difference_type __n);
        reference operator[](difference_type __n) const;
    }
template <typename _Iterator = __gnu_cxx::__normal_iterator<const wchar_t *, std::basic_string<wchar_t> >> class reverse_iterator
template <typename _Iterator = __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >> class reverse_iterator
template <typename _Iterator = __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >> class reverse_iterator
template <typename _Iterator = __gnu_cxx::__normal_iterator<wchar_t *, std::basic_string<wchar_t> >> class reverse_iterator
template <typename _Iterator = std::_Bit_iterator> class reverse_iterator : public iterator<typename iterator_traits<_Bit_iterator>::iterator_category, typename iterator_traits<_Bit_iterator>::value_type, typename iterator_traits<_Bit_iterator>::difference_type, typename iterator_traits<_Bit_iterator>::pointer, typename iterator_traits<_Bit_iterator>::reference> {
        class reverse_iterator;
    protected:
    protected:
        std::_Bit_iterator current;
        typedef iterator_traits<std::_Bit_iterator> __traits_type;
    public:
    public:
        typedef std::_Bit_iterator iterator_type;
        typedef typename __traits_type::difference_type difference_type;
        typedef typename __traits_type::pointer pointer;
        typedef typename __traits_type::reference reference;
        reverse_iterator();
        reverse_iterator(iterator_type __x);
        reverse_iterator(const std::reverse_iterator<std::_Bit_iterator> &__x);
        template <typename _Iter = std::_Bit_iterator> reverse_iterator(const reverse_iterator<std::_Bit_iterator> &__x)template <typename _Iter> reverse_iterator(const reverse_iterator<_Iter> &__x);
        iterator_type base() const;
        reference operator*() const;
        pointer operator->() const;
        std::reverse_iterator<std::_Bit_iterator> &operator++();
        std::reverse_iterator<std::_Bit_iterator> operator++(int);
        std::reverse_iterator<std::_Bit_iterator> &operator--();
        std::reverse_iterator<std::_Bit_iterator> operator--(int);
        std::reverse_iterator<std::_Bit_iterator> operator+(difference_type __n) const;
        std::reverse_iterator<std::_Bit_iterator> &operator+=(difference_type __n);
        std::reverse_iterator<std::_Bit_iterator> operator-(difference_type __n) const;
        std::reverse_iterator<std::_Bit_iterator> &operator-=(difference_type __n);
        reference operator[](difference_type __n) const;
    }
template <typename _Iterator = __gnu_cxx::__normal_iterator<std::basic_string<wchar_t> *, std::vector<std::basic_string<wchar_t>, std::allocator<std::basic_string<wchar_t> > > >> class reverse_iterator
template <typename _Iterator = __gnu_cxx::__normal_iterator<const std::basic_string<wchar_t> *, std::vector<std::basic_string<wchar_t>, std::allocator<std::basic_string<wchar_t> > > >> class reverse_iterator
template <typename _Iterator> class reverse_iterator : public iterator<typename iterator_traits<_Iterator>::iterator_category, typename iterator_traits<_Iterator>::value_type, typename iterator_traits<_Iterator>::difference_type, typename iterator_traits<_Iterator>::pointer, typename iterator_traits<_Iterator>::reference> {
        class reverse_iterator;
    protected:
    protected:
        _Iterator current;
        typedef iterator_traits<_Iterator> __traits_type;
    public:
    public:
        typedef _Iterator iterator_type;
        typedef typename __traits_type::difference_type difference_type;
        typedef typename __traits_type::pointer pointer;
        typedef typename __traits_type::reference reference;
        reverse_iterator<_Iterator>() : current() (CompoundStmt 0x9bbf950 </usr/include/c++/4.6/bits/stl_iterator.h:121:38, col:40>)


        reverse_iterator<_Iterator>(iterator_type __x) : current((DeclRefExpr 0x9bbf960 </usr/include/c++/4.6/bits/stl_iterator.h:127:53> 'iterator_type':'_Iterator' lvalue ParmVar 0x9bbdcb0 '__x' 'iterator_type':'_Iterator')
) (CompoundStmt 0x9bbf9c0 </usr/include/c++/4.6/bits/stl_iterator.h:127:58, col:60>)


        reverse_iterator<_Iterator>(const reverse_iterator<_Iterator> &__x) : current((CXXDependentScopeMemberExpr 0x9bbf9e8 </usr/include/c++/4.6/bits/stl_iterator.h:133:17, col:21> '<dependent type>' lvalue
  (DeclRefExpr 0x9bbf9d0 <col:17> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x9bbddf0 '__x' 'const reverse_iterator<_Iterator> &'))
) (CompoundStmt 0x9bbfa60 </usr/include/c++/4.6/bits/stl_iterator.h:133:30, col:32>)


        template <typename _Iter> reverse_iterator<_Iterator>(const reverse_iterator<_Iter> &__x) : current((CallExpr 0x9bbfac0 </usr/include/c++/4.6/bits/stl_iterator.h:141:12, col:21> '<dependent type>'
  (CXXDependentScopeMemberExpr 0x9bbfa88 <col:12, col:16> '<dependent type>' lvalue
    (DeclRefExpr 0x9bbfa70 <col:12> 'const reverse_iterator<_Iter>' lvalue ParmVar 0x9bbe050 '__x' 'const reverse_iterator<_Iter> &')))
) (CompoundStmt 0x9bbfb20 </usr/include/c++/4.6/bits/stl_iterator.h:141:24, col:26>)

;
        iterator_type base() const (CompoundStmt 0x9bbfba8 </usr/include/c++/4.6/bits/stl_iterator.h:148:7, col:25>
  (ReturnStmt 0x9bbfb98 <col:9, col:16>
    (MemberExpr 0x9bbfb74 <col:16> 'const _Iterator' lvalue ->current 0x9bbd890
      (CXXThisExpr 0x9bbfb48 <col:16> 'const reverse_iterator<_Iterator> *' this))))


        reference operator*() const (CompoundStmt 0x9bbfca0 </usr/include/c++/4.6/bits/stl_iterator.h:157:7, line:160:7>
  (DeclStmt 0x9bbfc38 <line:158:2, col:27>
    0x9bbfbd0 "_Iterator __tmp =
      (MemberExpr 0x9bbfc18 <col:20> 'const _Iterator' lvalue ->current 0x9bbd890
        (CXXThisExpr 0x9bbfc08 <col:20> 'const reverse_iterator<_Iterator> *' this))")
  (ReturnStmt 0x9bbfc90 <line:159:2, col:12>
    (UnaryOperator 0x9bbfc78 <col:9, col:12> '<dependent type>' prefix '*'
      (UnaryOperator 0x9bbfc60 <col:10, col:12> '<dependent type>' prefix '--'
        (DeclRefExpr 0x9bbfc48 <col:12> '_Iterator' lvalue Var 0x9bbfbd0 '__tmp' '_Iterator')))))


        pointer operator->() const (CompoundStmt 0x9bbfd48 </usr/include/c++/4.6/bits/stl_iterator.h:169:7, col:32>
  (ReturnStmt 0x9bbfd38 <col:9, col:29>
    (UnaryOperator 0x9bbfd20 <col:16, col:29> '<dependent type>' prefix '&'
      (ParenExpr 0x9bbfd08 <col:17, col:29> '<dependent type>'
        (CallExpr 0x9bbfce8 <col:18, col:28> '<dependent type>'
          (MemberExpr 0x9bbfcc8 <col:18, col:26> '<bound member function type>' ->operator* 0x9bbe2a0
            (CXXThisExpr 0x9bbfcb8 <col:18> 'const reverse_iterator<_Iterator> *' this)))))))


        reverse_iterator<_Iterator> &operator++() (CompoundStmt 0x9bbfde0 </usr/include/c++/4.6/bits/stl_iterator.h:178:7, line:181:7>
  (UnaryOperator 0x9bbfd90 <line:179:2, col:4> '<dependent type>' prefix '--'
    (MemberExpr 0x9bbfd70 <col:4> '_Iterator' lvalue ->current 0x9bbd890
      (CXXThisExpr 0x9bbfd60 <col:4> 'reverse_iterator<_Iterator> *' this)))
  (ReturnStmt 0x9bbfdd0 <line:180:2, col:10>
    (UnaryOperator 0x9bbfdb8 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9bbfda8 <col:10> 'reverse_iterator<_Iterator> *' this))))


        reverse_iterator<_Iterator> operator++(int) (CompoundStmt 0x9bbfee0 </usr/include/c++/4.6/bits/stl_iterator.h:190:7, line:194:7>
  (DeclStmt 0x9bbfe60 <line:191:2, col:32>
    0x9bbfe00 "reverse_iterator<_Iterator> __tmp =
      (UnaryOperator 0x9bbfe48 <col:27, col:28> '<dependent type>' prefix '*'
        (CXXThisExpr 0x9bbfe38 <col:28> 'reverse_iterator<_Iterator> *' this))")
  (UnaryOperator 0x9bbfea0 <line:192:2, col:4> '<dependent type>' prefix '--'
    (MemberExpr 0x9bbfe80 <col:4> '_Iterator' lvalue ->current 0x9bbd890
      (CXXThisExpr 0x9bbfe70 <col:4> 'reverse_iterator<_Iterator> *' this)))
  (ReturnStmt 0x9bbfed0 <line:193:2, col:9>
    (DeclRefExpr 0x9bbfeb4 <col:9> 'reverse_iterator<_Iterator>' lvalue Var 0x9bbfe00 '__tmp' 'reverse_iterator<_Iterator>')))


        reverse_iterator<_Iterator> &operator--() (CompoundStmt 0x9bbff80 </usr/include/c++/4.6/bits/stl_iterator.h:203:7, line:206:7>
  (UnaryOperator 0x9bbff30 <line:204:2, col:4> '<dependent type>' prefix '++'
    (MemberExpr 0x9bbff10 <col:4> '_Iterator' lvalue ->current 0x9bbd890
      (CXXThisExpr 0x9bbff00 <col:4> 'reverse_iterator<_Iterator> *' this)))
  (ReturnStmt 0x9bbff70 <line:205:2, col:10>
    (UnaryOperator 0x9bbff58 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9bbff48 <col:10> 'reverse_iterator<_Iterator> *' this))))


        reverse_iterator<_Iterator> operator--(int) (CompoundStmt 0x9bc0080 </usr/include/c++/4.6/bits/stl_iterator.h:215:7, line:219:7>
  (DeclStmt 0x9bc0000 <line:216:2, col:32>
    0x9bbffa0 "reverse_iterator<_Iterator> __tmp =
      (UnaryOperator 0x9bbffe8 <col:27, col:28> '<dependent type>' prefix '*'
        (CXXThisExpr 0x9bbffd8 <col:28> 'reverse_iterator<_Iterator> *' this))")
  (UnaryOperator 0x9bc0040 <line:217:2, col:4> '<dependent type>' prefix '++'
    (MemberExpr 0x9bc0020 <col:4> '_Iterator' lvalue ->current 0x9bbd890
      (CXXThisExpr 0x9bc0010 <col:4> 'reverse_iterator<_Iterator> *' this)))
  (ReturnStmt 0x9bc0070 <line:218:2, col:9>
    (DeclRefExpr 0x9bc0054 <col:9> 'reverse_iterator<_Iterator>' lvalue Var 0x9bbffa0 '__tmp' 'reverse_iterator<_Iterator>')))


        reverse_iterator<_Iterator> operator+(difference_type __n) const (CompoundStmt 0x9bc0138 </usr/include/c++/4.6/bits/stl_iterator.h:228:7, col:49>
  (ReturnStmt 0x9bc0128 <col:9, col:46>
    (CXXUnresolvedConstructExpr 0x9bc0108 <col:16, col:46> 'reverse_iterator<_Iterator>'
      (BinaryOperator 0x9bc00f0 <col:33, col:43> '<dependent type>' '-'
        (MemberExpr 0x9bc00b8 <col:33> 'const _Iterator' lvalue ->current 0x9bbd890
          (CXXThisExpr 0x9bc00a8 <col:33> 'const reverse_iterator<_Iterator> *' this))
        (DeclRefExpr 0x9bc00d8 <col:43> 'difference_type':'typename __traits_type::difference_type' lvalue ParmVar 0x9bbf460 '__n' 'difference_type':'typename __traits_type::difference_type')))))


        reverse_iterator<_Iterator> &operator+=(difference_type __n) (CompoundStmt 0x9bc01f0 </usr/include/c++/4.6/bits/stl_iterator.h:237:7, line:240:7>
  (CompoundAssignOperator 0x9bc0198 <line:238:2, col:13> '<dependent type>' lvalue '-=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (MemberExpr 0x9bc0160 <col:2> '_Iterator' lvalue ->current 0x9bbd890
      (CXXThisExpr 0x9bc0150 <col:2> 'reverse_iterator<_Iterator> *' this))
    (DeclRefExpr 0x9bc0180 <col:13> 'difference_type':'typename __traits_type::difference_type' lvalue ParmVar 0x9bbf570 '__n' 'difference_type':'typename __traits_type::difference_type'))
  (ReturnStmt 0x9bc01e0 <line:239:2, col:10>
    (UnaryOperator 0x9bc01c8 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9bc01b8 <col:10> 'reverse_iterator<_Iterator> *' this))))


        reverse_iterator<_Iterator> operator-(difference_type __n) const (CompoundStmt 0x9bc02a0 </usr/include/c++/4.6/bits/stl_iterator.h:249:7, col:49>
  (ReturnStmt 0x9bc0290 <col:9, col:46>
    (CXXUnresolvedConstructExpr 0x9bc0270 <col:16, col:46> 'reverse_iterator<_Iterator>'
      (BinaryOperator 0x9bc0258 <col:33, col:43> '<dependent type>' '+'
        (MemberExpr 0x9bc0220 <col:33> 'const _Iterator' lvalue ->current 0x9bbd890
          (CXXThisExpr 0x9bc0210 <col:33> 'const reverse_iterator<_Iterator> *' this))
        (DeclRefExpr 0x9bc0240 <col:43> 'difference_type':'typename __traits_type::difference_type' lvalue ParmVar 0x9bbf680 '__n' 'difference_type':'typename __traits_type::difference_type')))))


        reverse_iterator<_Iterator> &operator-=(difference_type __n) (CompoundStmt 0x9bc23e0 </usr/include/c++/4.6/bits/stl_iterator.h:258:7, line:261:7>
  (CompoundAssignOperator 0x9bc2388 <line:259:2, col:13> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (MemberExpr 0x9bc02c8 <col:2> '_Iterator' lvalue ->current 0x9bbd890
      (CXXThisExpr 0x9bc02b8 <col:2> 'reverse_iterator<_Iterator> *' this))
    (DeclRefExpr 0x9bc02e8 <col:13> 'difference_type':'typename __traits_type::difference_type' lvalue ParmVar 0x9bbf740 '__n' 'difference_type':'typename __traits_type::difference_type'))
  (ReturnStmt 0x9bc23d0 <line:260:2, col:10>
    (UnaryOperator 0x9bc23b8 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9bc23a8 <col:10> 'reverse_iterator<_Iterator> *' this))))


        reference operator[](difference_type __n) const (CompoundStmt 0x9bc2490 </usr/include/c++/4.6/bits/stl_iterator.h:270:7, col:32>
  (ReturnStmt 0x9bc2480 <col:9, col:29>
    (UnaryOperator 0x9bc2468 <col:16, col:29> '<dependent type>' prefix '*'
      (ParenExpr 0x9bc2450 <col:17, col:29> '<dependent type>'
        (BinaryOperator 0x9bc2438 <col:18, col:26> '<dependent type>' '+'
          (UnaryOperator 0x9bc2408 <col:18, col:19> '<dependent type>' prefix '*'
            (CXXThisExpr 0x9bc23f8 <col:19> 'const reverse_iterator<_Iterator> *' this))
          (DeclRefExpr 0x9bc241c <col:26> 'difference_type':'typename __traits_type::difference_type' lvalue ParmVar 0x9bbf810 '__n' 'difference_type':'typename __traits_type::difference_type'))))))


    };
    template <typename _Iterator> inline bool operator==(const reverse_iterator<_Iterator> &__x, const reverse_iterator<_Iterator> &__y) (CompoundStmt 0x9bc2970 </usr/include/c++/4.6/bits/stl_iterator.h:287:5, col:40>
  (ReturnStmt 0x9bc2960 <col:7, col:37>
    (CXXOperatorCallExpr 0x9bc2938 <col:14, col:37> '<dependent type>'
      (UnresolvedLookupExpr 0x9bc2900 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc27f0 0x9babd20)
      (CallExpr 0x9bc2870 <col:14, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9bc2838 <col:14, col:18> '<dependent type>' lvalue
          (DeclRefExpr 0x9bc2820 <col:14> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x9bc25f0 '__x' 'const reverse_iterator<_Iterator> &')))
      (CallExpr 0x9bc28e0 <col:28, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9bc28a8 <col:28, col:32> '<dependent type>' lvalue
          (DeclRefExpr 0x9bc288c <col:28> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x9bc26f0 '__y' 'const reverse_iterator<_Iterator> &'))))))

;
    template <typename _Iterator> inline bool operator<(const reverse_iterator<_Iterator> &__x, const reverse_iterator<_Iterator> &__y) (CompoundStmt 0x9bc2e10 </usr/include/c++/4.6/bits/stl_iterator.h:293:5, col:39>
  (ReturnStmt 0x9bc2e00 <col:7, col:36>
    (CXXOperatorCallExpr 0x9bc2dd8 <col:14, col:36> '<dependent type>'
      (UnresolvedLookupExpr 0x9bc2da0 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc2c90 0x9bac3c0)
      (CallExpr 0x9bc2d10 <col:14, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9bc2cd8 <col:14, col:18> '<dependent type>' lvalue
          (DeclRefExpr 0x9bc2cc0 <col:14> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x9bc2bb0 '__y' 'const reverse_iterator<_Iterator> &')))
      (CallExpr 0x9bc2d80 <col:27, col:36> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9bc2d48 <col:27, col:31> '<dependent type>' lvalue
          (DeclRefExpr 0x9bc2d2c <col:27> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x9bc2ab0 '__x' 'const reverse_iterator<_Iterator> &'))))))

;
    template <typename _Iterator> inline bool operator!=(const reverse_iterator<_Iterator> &__x, const reverse_iterator<_Iterator> &__y) (CompoundStmt 0x9bc3230 </usr/include/c++/4.6/bits/stl_iterator.h:299:5, col:29>
  (ReturnStmt 0x9bc3220 <col:7, col:26>
    (UnaryOperator 0x9bc3208 <col:14, col:26> '<dependent type>' prefix '!'
      (ParenExpr 0x9bc31f0 <col:15, col:26> '<dependent type>'
        (CXXOperatorCallExpr 0x9bc31c8 <col:16, col:23> '<dependent type>'
          (UnresolvedLookupExpr 0x9bc3190 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc27f0 0x9babd20)
          (DeclRefExpr 0x9bc3160 <col:16> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x9bc2f50 '__x' 'const reverse_iterator<_Iterator> &')
          (DeclRefExpr 0x9bc3178 <col:23> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x9bc3050 '__y' 'const reverse_iterator<_Iterator> &'))))))

;
    template <typename _Iterator> inline bool operator>(const reverse_iterator<_Iterator> &__x, const reverse_iterator<_Iterator> &__y) (CompoundStmt 0x9bc3880 </usr/include/c++/4.6/bits/stl_iterator.h:305:5, col:25>
  (ReturnStmt 0x9bc3870 <col:7, col:20>
    (CXXOperatorCallExpr 0x9bc3848 <col:14, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0x9bc3810 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc2c90 0x9bac3c0)
      (DeclRefExpr 0x9bc37e0 <col:14> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x9bc36d0 '__y' 'const reverse_iterator<_Iterator> &')
      (DeclRefExpr 0x9bc37f8 <col:20> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x9bc35d0 '__x' 'const reverse_iterator<_Iterator> &'))))

;
    template <typename _Iterator> inline bool operator<=(const reverse_iterator<_Iterator> &__x, const reverse_iterator<_Iterator> &__y) (CompoundStmt 0x9bc3ca0 </usr/include/c++/4.6/bits/stl_iterator.h:311:5, col:28>
  (ReturnStmt 0x9bc3c90 <col:7, col:25>
    (UnaryOperator 0x9bc3c78 <col:14, col:25> '<dependent type>' prefix '!'
      (ParenExpr 0x9bc3c60 <col:15, col:25> '<dependent type>'
        (CXXOperatorCallExpr 0x9bc3c38 <col:16, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0x9bc3c00 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc2c90 0x9bac3c0)
          (DeclRefExpr 0x9bc3bd0 <col:16> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x9bc3ac0 '__y' 'const reverse_iterator<_Iterator> &')
          (DeclRefExpr 0x9bc3be8 <col:22> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x9bc39c0 '__x' 'const reverse_iterator<_Iterator> &'))))))

;
    template <typename _Iterator> inline bool operator>=(const reverse_iterator<_Iterator> &__x, const reverse_iterator<_Iterator> &__y) (CompoundStmt 0x9bc40c0 </usr/include/c++/4.6/bits/stl_iterator.h:317:5, col:28>
  (ReturnStmt 0x9bc40b0 <col:7, col:25>
    (UnaryOperator 0x9bc4098 <col:14, col:25> '<dependent type>' prefix '!'
      (ParenExpr 0x9bc4080 <col:15, col:25> '<dependent type>'
        (CXXOperatorCallExpr 0x9bc4058 <col:16, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0x9bc4020 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc2c90 0x9bac3c0)
          (DeclRefExpr 0x9bc3ff0 <col:16> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x9bc3de0 '__x' 'const reverse_iterator<_Iterator> &')
          (DeclRefExpr 0x9bc4008 <col:22> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x9bc3ee0 '__y' 'const reverse_iterator<_Iterator> &'))))))

;
    template <typename _Iterator> inline typename reverse_iterator<_Iterator>::difference_type operator-(const reverse_iterator<_Iterator> &__x, const reverse_iterator<_Iterator> &__y) (CompoundStmt 0x9bc46a0 </usr/include/c++/4.6/bits/stl_iterator.h:323:5, col:39>
  (ReturnStmt 0x9bc4690 <col:7, col:36>
    (CXXOperatorCallExpr 0x9bc4668 <col:14, col:36> '<dependent type>'
      (UnresolvedLookupExpr 0x9bc4630 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510)
      (CallExpr 0x9bc4590 <col:14, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9bc4558 <col:14, col:18> '<dependent type>' lvalue
          (DeclRefExpr 0x9bc4540 <col:14> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x9bc4400 '__y' 'const reverse_iterator<_Iterator> &')))
      (CallExpr 0x9bc4610 <col:27, col:36> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9bc45d8 <col:27, col:31> '<dependent type>' lvalue
          (DeclRefExpr 0x9bc45ac <col:27> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x9bc4300 '__x' 'const reverse_iterator<_Iterator> &'))))))

;
    template <typename _Iterator> inline reverse_iterator<_Iterator> operator+(typename reverse_iterator<_Iterator>::difference_type __n, const reverse_iterator<_Iterator> &__x) (CompoundStmt 0x9bc4ca8 </usr/include/c++/4.6/bits/stl_iterator.h:329:5, col:61>
  (ReturnStmt 0x9bc4c98 <col:7, col:58>
    (CXXUnresolvedConstructExpr 0x9bc4c78 <col:14, col:58> 'reverse_iterator<_Iterator>'
      (CXXOperatorCallExpr 0x9bc4c50 <col:42, col:55> '<dependent type>'
        (UnresolvedLookupExpr 0x9bc4c18 <col:53, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510)
        (CallExpr 0x9bc4be0 <col:42, col:51> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9bc4ba8 <col:42, col:46> '<dependent type>' lvalue
            (DeclRefExpr 0x9bc4b90 <col:42> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x9bc4990 '__x' 'const reverse_iterator<_Iterator> &')))
        (DeclRefExpr 0x9bc4bfc <col:55> 'typename reverse_iterator<_Iterator>::difference_type' lvalue ParmVar 0x9bc4890 '__n' 'typename reverse_iterator<_Iterator>::difference_type')))))

;
    template <typename _IteratorL, typename _IteratorR> inline bool operator==(const reverse_iterator<_IteratorL> &__x, const reverse_iterator<_IteratorR> &__y) (CompoundStmt 0x9bc5218 </usr/include/c++/4.6/bits/stl_iterator.h:337:5, col:40>
  (ReturnStmt 0x9bc5208 <col:7, col:37>
    (CXXOperatorCallExpr 0x9bc51e0 <col:14, col:37> '<dependent type>'
      (UnresolvedLookupExpr 0x9bc51a0 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc5090 0x9bc27f0 0x9babd20)
      (CallExpr 0x9bc5110 <col:14, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9bc50d8 <col:14, col:18> '<dependent type>' lvalue
          (DeclRefExpr 0x9bc50c0 <col:14> 'const reverse_iterator<_IteratorL>' lvalue ParmVar 0x9bc4e40 '__x' 'const reverse_iterator<_IteratorL> &')))
      (CallExpr 0x9bc5180 <col:28, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9bc5148 <col:28, col:32> '<dependent type>' lvalue
          (DeclRefExpr 0x9bc512c <col:28> 'const reverse_iterator<_IteratorR>' lvalue ParmVar 0x9bc4f90 '__y' 'const reverse_iterator<_IteratorR> &'))))))

;
    template <typename _IteratorL, typename _IteratorR> inline bool operator<(const reverse_iterator<_IteratorL> &__x, const reverse_iterator<_IteratorR> &__y) (CompoundStmt 0x9bc5f40 </usr/include/c++/4.6/bits/stl_iterator.h:343:5, col:39>
  (ReturnStmt 0x9bc5f30 <col:7, col:36>
    (CXXOperatorCallExpr 0x9bc5f08 <col:14, col:36> '<dependent type>'
      (UnresolvedLookupExpr 0x9bc5ec8 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc5590 0x9bc2c90 0x9bac3c0)
      (CallExpr 0x9bc5e38 <col:14, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9bc5e00 <col:14, col:18> '<dependent type>' lvalue
          (DeclRefExpr 0x9bc5de8 <col:14> 'const reverse_iterator<_IteratorR>' lvalue ParmVar 0x9bc54b0 '__y' 'const reverse_iterator<_IteratorR> &')))
      (CallExpr 0x9bc5ea8 <col:27, col:36> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9bc5e70 <col:27, col:31> '<dependent type>' lvalue
          (DeclRefExpr 0x9bc5e54 <col:27> 'const reverse_iterator<_IteratorL>' lvalue ParmVar 0x9bc53b0 '__x' 'const reverse_iterator<_IteratorL> &'))))))

;
    template <typename _IteratorL, typename _IteratorR> inline bool operator!=(const reverse_iterator<_IteratorL> &__x, const reverse_iterator<_IteratorR> &__y) (CompoundStmt 0x9bc63c8 </usr/include/c++/4.6/bits/stl_iterator.h:349:5, col:29>
  (ReturnStmt 0x9bc63b8 <col:7, col:26>
    (UnaryOperator 0x9bc63a0 <col:14, col:26> '<dependent type>' prefix '!'
      (ParenExpr 0x9bc6388 <col:15, col:26> '<dependent type>'
        (CXXOperatorCallExpr 0x9bc6360 <col:16, col:23> '<dependent type>'
          (UnresolvedLookupExpr 0x9bc6320 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc5090 0x9bc27f0 0x9babd20)
          (DeclRefExpr 0x9bc62f0 <col:16> 'const reverse_iterator<_IteratorL>' lvalue ParmVar 0x9bc60e0 '__x' 'const reverse_iterator<_IteratorL> &')
          (DeclRefExpr 0x9bc6308 <col:23> 'const reverse_iterator<_IteratorR>' lvalue ParmVar 0x9bc61e0 '__y' 'const reverse_iterator<_IteratorR> &'))))))

;
    template <typename _IteratorL, typename _IteratorR> inline bool operator>(const reverse_iterator<_IteratorL> &__x, const reverse_iterator<_IteratorR> &__y) (CompoundStmt 0x9bc6818 </usr/include/c++/4.6/bits/stl_iterator.h:355:5, col:25>
  (ReturnStmt 0x9bc6808 <col:7, col:20>
    (CXXOperatorCallExpr 0x9bc67e0 <col:14, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0x9bc67a0 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc5590 0x9bc2c90 0x9bac3c0)
      (DeclRefExpr 0x9bc6770 <col:14> 'const reverse_iterator<_IteratorR>' lvalue ParmVar 0x9bc6660 '__y' 'const reverse_iterator<_IteratorR> &')
      (DeclRefExpr 0x9bc6788 <col:20> 'const reverse_iterator<_IteratorL>' lvalue ParmVar 0x9bc6560 '__x' 'const reverse_iterator<_IteratorL> &'))))

;
    template <typename _IteratorL, typename _IteratorR> inline bool operator<=(const reverse_iterator<_IteratorL> &__x, const reverse_iterator<_IteratorR> &__y) (CompoundStmt 0x9bc6c98 </usr/include/c++/4.6/bits/stl_iterator.h:361:5, col:28>
  (ReturnStmt 0x9bc6c88 <col:7, col:25>
    (UnaryOperator 0x9bc6c70 <col:14, col:25> '<dependent type>' prefix '!'
      (ParenExpr 0x9bc6c58 <col:15, col:25> '<dependent type>'
        (CXXOperatorCallExpr 0x9bc6c30 <col:16, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0x9bc6bf0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc5590 0x9bc2c90 0x9bac3c0)
          (DeclRefExpr 0x9bc6bc0 <col:16> 'const reverse_iterator<_IteratorR>' lvalue ParmVar 0x9bc6ab0 '__y' 'const reverse_iterator<_IteratorR> &')
          (DeclRefExpr 0x9bc6bd8 <col:22> 'const reverse_iterator<_IteratorL>' lvalue ParmVar 0x9bc69b0 '__x' 'const reverse_iterator<_IteratorL> &'))))))

;
    template <typename _IteratorL, typename _IteratorR> inline bool operator>=(const reverse_iterator<_IteratorL> &__x, const reverse_iterator<_IteratorR> &__y) (CompoundStmt 0x9bc7958 </usr/include/c++/4.6/bits/stl_iterator.h:367:5, col:28>
  (ReturnStmt 0x9bc7948 <col:7, col:25>
    (UnaryOperator 0x9bc7930 <col:14, col:25> '<dependent type>' prefix '!'
      (ParenExpr 0x9bc7918 <col:15, col:25> '<dependent type>'
        (CXXOperatorCallExpr 0x9bc78f0 <col:16, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0x9bc78b0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc5590 0x9bc2c90 0x9bac3c0)
          (DeclRefExpr 0x9bc7880 <col:16> 'const reverse_iterator<_IteratorL>' lvalue ParmVar 0x9bc7670 '__x' 'const reverse_iterator<_IteratorL> &')
          (DeclRefExpr 0x9bc7898 <col:22> 'const reverse_iterator<_IteratorR>' lvalue ParmVar 0x9bc7770 '__y' 'const reverse_iterator<_IteratorR> &'))))))

;
    template <typename _IteratorL, typename _IteratorR> inline typename reverse_iterator<_IteratorL>::difference_type operator-(const reverse_iterator<_IteratorL> &__x, const reverse_iterator<_IteratorR> &__y) (CompoundStmt 0x9bc7f50 </usr/include/c++/4.6/bits/stl_iterator.h:381:5, col:39>
  (ReturnStmt 0x9bc7f40 <col:7, col:36>
    (CXXOperatorCallExpr 0x9bc7f18 <col:14, col:36> '<dependent type>'
      (UnresolvedLookupExpr 0x9bc7ee0 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc7dd0 0x9bc4510)
      (CallExpr 0x9bc7e50 <col:14, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9bc7e18 <col:14, col:18> '<dependent type>' lvalue
          (DeclRefExpr 0x9bc7e00 <col:14> 'const reverse_iterator<_IteratorR>' lvalue ParmVar 0x9bc7cc0 '__y' 'const reverse_iterator<_IteratorR> &')))
      (CallExpr 0x9bc7ec0 <col:27, col:36> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9bc7e88 <col:27, col:31> '<dependent type>' lvalue
          (DeclRefExpr 0x9bc7e6c <col:27> 'const reverse_iterator<_IteratorL>' lvalue ParmVar 0x9bc7bc0 '__x' 'const reverse_iterator<_IteratorL> &'))))))

;
    template <typename _Container> class back_insert_iterator : public iterator<std::output_iterator_tag, void, void, void, void> {
        class back_insert_iterator;
    protected:
    protected:
        _Container *container;
    public:
    public:
        typedef _Container container_type;
        back_insert_iterator<_Container>(_Container &__x) : container((UnaryOperator 0x9bc92f0 </usr/include/c++/4.6/bits/stl_iterator.h:408:57, col:58> '<dependent type>' prefix '&'
  (DeclRefExpr 0x9bc92d4 <col:58> '_Container' lvalue ParmVar 0x9bc8df0 '__x' '_Container &'))
) (CompoundStmt 0x9bc9350 </usr/include/c++/4.6/bits/stl_iterator.h:408:63, col:65>)


        back_insert_iterator<_Container> &operator=(typename _Container::const_reference __value) (CompoundStmt 0x9bc9450 </usr/include/c++/4.6/bits/stl_iterator.h:424:7, line:427:7>
  (CallExpr 0x9bc93f8 <line:425:2, col:30> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9bc93a8 <col:2, col:13> '<dependent type>' lvalue
      (MemberExpr 0x9bc9388 <col:2> '_Container *' lvalue ->container 0x9bc8d10
        (CXXThisExpr 0x9bc9378 <col:2> 'back_insert_iterator<_Container> *' this)))
    (DeclRefExpr 0x9bc93dc <col:23> 'typename _Container::const_reference' lvalue ParmVar 0x9bc8fa0 '__value' 'typename _Container::const_reference'))
  (ReturnStmt 0x9bc9440 <line:426:2, col:10>
    (UnaryOperator 0x9bc9428 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9bc9418 <col:10> 'back_insert_iterator<_Container> *' this))))


        back_insert_iterator<_Container> &operator*() (CompoundStmt 0x9bc94a0 </usr/include/c++/4.6/bits/stl_iterator.h:447:7, col:23>
  (ReturnStmt 0x9bc9490 <col:9, col:17>
    (UnaryOperator 0x9bc9478 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9bc9468 <col:17> 'back_insert_iterator<_Container> *' this))))


        back_insert_iterator<_Container> &operator++() (CompoundStmt 0x9bc94f0 </usr/include/c++/4.6/bits/stl_iterator.h:452:7, col:23>
  (ReturnStmt 0x9bc94e0 <col:9, col:17>
    (UnaryOperator 0x9bc94c8 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9bc94b8 <col:17> 'back_insert_iterator<_Container> *' this))))


        back_insert_iterator<_Container> operator++(int) (CompoundStmt 0x9bc9540 </usr/include/c++/4.6/bits/stl_iterator.h:457:7, col:23>
  (ReturnStmt 0x9bc9530 <col:9, col:17>
    (UnaryOperator 0x9bc9518 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9bc9508 <col:17> 'back_insert_iterator<_Container> *' this))))


    };
    template <typename _Container> inline back_insert_iterator<_Container> back_inserter(_Container &__x) (CompoundStmt 0x9bc98a8 </usr/include/c++/4.6/bits/stl_iterator.h:474:5, col:53>
  (ReturnStmt 0x9bc9898 <col:7, col:50>
    (CXXUnresolvedConstructExpr 0x9bc9878 <col:14, col:50> 'back_insert_iterator<_Container>'
      (DeclRefExpr 0x9bc9860 <col:47> '_Container' lvalue ParmVar 0x9bc9670 '__x' '_Container &'))))

;
    template <typename _Container> class front_insert_iterator : public iterator<std::output_iterator_tag, void, void, void, void> {
        class front_insert_iterator;
    protected:
    protected:
        _Container *container;
    public:
    public:
        typedef _Container container_type;
        front_insert_iterator<_Container>(_Container &__x) : container((UnaryOperator 0x9bcaac0 </usr/include/c++/4.6/bits/stl_iterator.h:498:67, col:68> '<dependent type>' prefix '&'
  (DeclRefExpr 0x9bcaaa4 <col:68> '_Container' lvalue ParmVar 0x9bca600 '__x' '_Container &'))
) (CompoundStmt 0x9bcab20 </usr/include/c++/4.6/bits/stl_iterator.h:498:73, col:75>)


        front_insert_iterator<_Container> &operator=(typename _Container::const_reference __value) (CompoundStmt 0x9bcac20 </usr/include/c++/4.6/bits/stl_iterator.h:514:7, line:517:7>
  (CallExpr 0x9bcabc8 <line:515:2, col:31> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9bcab78 <col:2, col:13> '<dependent type>' lvalue
      (MemberExpr 0x9bcab58 <col:2> '_Container *' lvalue ->container 0x9bca520
        (CXXThisExpr 0x9bcab48 <col:2> 'front_insert_iterator<_Container> *' this)))
    (DeclRefExpr 0x9bcabac <col:24> 'typename _Container::const_reference' lvalue ParmVar 0x9bca770 '__value' 'typename _Container::const_reference'))
  (ReturnStmt 0x9bcac10 <line:516:2, col:10>
    (UnaryOperator 0x9bcabf8 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9bcabe8 <col:10> 'front_insert_iterator<_Container> *' this))))


        front_insert_iterator<_Container> &operator*() (CompoundStmt 0x9bcac70 </usr/include/c++/4.6/bits/stl_iterator.h:537:7, col:23>
  (ReturnStmt 0x9bcac60 <col:9, col:17>
    (UnaryOperator 0x9bcac48 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9bcac38 <col:17> 'front_insert_iterator<_Container> *' this))))


        front_insert_iterator<_Container> &operator++() (CompoundStmt 0x9bcacc0 </usr/include/c++/4.6/bits/stl_iterator.h:542:7, col:23>
  (ReturnStmt 0x9bcacb0 <col:9, col:17>
    (UnaryOperator 0x9bcac98 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9bcac88 <col:17> 'front_insert_iterator<_Container> *' this))))


        front_insert_iterator<_Container> operator++(int) (CompoundStmt 0x9bcad10 </usr/include/c++/4.6/bits/stl_iterator.h:547:7, col:23>
  (ReturnStmt 0x9bcad00 <col:9, col:17>
    (UnaryOperator 0x9bcace8 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9bcacd8 <col:17> 'front_insert_iterator<_Container> *' this))))


    };
    template <typename _Container> inline front_insert_iterator<_Container> front_inserter(_Container &__x) (CompoundStmt 0x9bcb078 </usr/include/c++/4.6/bits/stl_iterator.h:564:5, col:54>
  (ReturnStmt 0x9bcb068 <col:7, col:51>
    (CXXUnresolvedConstructExpr 0x9bcb048 <col:14, col:51> 'front_insert_iterator<_Container>'
      (DeclRefExpr 0x9bcb030 <col:48> '_Container' lvalue ParmVar 0x9bcae40 '__x' '_Container &'))))

;
    template <typename _Container> class insert_iterator : public iterator<std::output_iterator_tag, void, void, void, void> {
        class insert_iterator;
    protected:
    protected:
        _Container *container;
        typename _Container::iterator iter;
    public:
    public:
        typedef _Container container_type;
        insert_iterator<_Container>(_Container &__x, typename _Container::iterator __i) : container((UnaryOperator 0x9bcc5d0 </usr/include/c++/4.6/bits/stl_iterator.h:597:19, col:20> '<dependent type>' prefix '&'
  (DeclRefExpr 0x9bcc5b4 <col:20> '_Container' lvalue ParmVar 0x9bcc080 '__x' '_Container &'))
), iter((DeclRefExpr 0x9bcc628 </usr/include/c++/4.6/bits/stl_iterator.h:597:31> 'typename _Container::iterator' lvalue ParmVar 0x9bcc100 '__i' 'typename _Container::iterator')
) (CompoundStmt 0x9bcc680 </usr/include/c++/4.6/bits/stl_iterator.h:597:36, col:37>)


        insert_iterator<_Container> &operator=(typename _Container::const_reference __value) (CompoundStmt 0x9bcc848 </usr/include/c++/4.6/bits/stl_iterator.h:625:7, line:629:7>
  (BinaryOperator 0x9bcc7b0 <line:626:2, col:40> '<dependent type>' '='
    (MemberExpr 0x9bcc6b8 <col:2> 'typename _Container::iterator' lvalue ->iter 0x9bcbfa0
      (CXXThisExpr 0x9bcc6a8 <col:2> 'insert_iterator<_Container> *' this))
    (CallExpr 0x9bcc788 <col:9, col:40> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9bcc708 <col:9, col:20> '<dependent type>' lvalue
        (MemberExpr 0x9bcc6e8 <col:9> '_Container *' lvalue ->container 0x9bcbee0
          (CXXThisExpr 0x9bcc6d8 <col:9> 'insert_iterator<_Container> *' this)))
      (MemberExpr 0x9bcc750 <col:27> 'typename _Container::iterator' lvalue ->iter 0x9bcbfa0
        (CXXThisExpr 0x9bcc740 <col:27> 'insert_iterator<_Container> *' this))
      (DeclRefExpr 0x9bcc770 <col:33> 'typename _Container::const_reference' lvalue ParmVar 0x9bcc280 '__value' 'typename _Container::const_reference')))
  (UnaryOperator 0x9bcc7f8 <line:627:2, col:4> '<dependent type>' prefix '++'
    (MemberExpr 0x9bcc7d8 <col:4> 'typename _Container::iterator' lvalue ->iter 0x9bcbfa0
      (CXXThisExpr 0x9bcc7c8 <col:4> 'insert_iterator<_Container> *' this)))
  (ReturnStmt 0x9bcc838 <line:628:2, col:10>
    (UnaryOperator 0x9bcc820 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9bcc810 <col:10> 'insert_iterator<_Container> *' this))))


        insert_iterator<_Container> &operator*() (CompoundStmt 0x9bcc8a0 </usr/include/c++/4.6/bits/stl_iterator.h:651:7, col:23>
  (ReturnStmt 0x9bcc890 <col:9, col:17>
    (UnaryOperator 0x9bcc878 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9bcc868 <col:17> 'insert_iterator<_Container> *' this))))


        insert_iterator<_Container> &operator++() (CompoundStmt 0x9bcc8f0 </usr/include/c++/4.6/bits/stl_iterator.h:656:7, col:23>
  (ReturnStmt 0x9bcc8e0 <col:9, col:17>
    (UnaryOperator 0x9bcc8c8 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9bcc8b8 <col:17> 'insert_iterator<_Container> *' this))))


        insert_iterator<_Container> &operator++(int) (CompoundStmt 0x9bcc940 </usr/include/c++/4.6/bits/stl_iterator.h:661:7, col:23>
  (ReturnStmt 0x9bcc930 <col:9, col:17>
    (UnaryOperator 0x9bcc918 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9bcc908 <col:17> 'insert_iterator<_Container> *' this))))


    };
    template <typename _Container, typename _Iterator> inline insert_iterator<_Container> inserter(_Container &__x, _Iterator __i) (CompoundStmt 0x9bccdf0 </usr/include/c++/4.6/bits/stl_iterator.h:678:5, line:681:5>
  (ReturnStmt 0x9bccde0 <line:679:7, line:680:41>
    (CXXUnresolvedConstructExpr 0x9bccdc0 <line:679:14, line:680:41> 'insert_iterator<_Container>'
      (DeclRefExpr 0x9bccd10 <line:679:42> '_Container' lvalue ParmVar 0x9bccad0 '__x' '_Container &')
      (CXXUnresolvedConstructExpr 0x9bccda0 <line:680:7, col:40> 'typename _Container::iterator'
        (DeclRefExpr 0x9bccd84 <col:37> '_Iterator' lvalue ParmVar 0x9bccb10 '__i' '_Iterator')))))

;
}
namespace __gnu_cxx {
    using std::iterator_traits;
    ;
    using std::iterator;
    ;
    template <typename _Iterator = const std::basic_string<wchar_t> *, typename _Container = std::vector<std::basic_string<wchar_t>, std::allocator<std::basic_string<wchar_t> > >> class __normal_iterator {
        class __normal_iterator;
    protected:
    protected:
        const std::basic_string<wchar_t> *_M_current;
        typedef iterator_traits<const std::basic_string<wchar_t> *> __traits_type;
    public:
    public:
        typedef const std::basic_string<wchar_t> *iterator_type;
        typedef typename __traits_type::iterator_category iterator_category;
        typedef typename __traits_type::value_type value_type;
        typedef typename __traits_type::difference_type difference_type;
        typedef typename __traits_type::reference reference;
        typedef typename __traits_type::pointer pointer;
        __normal_iterator();
        __normal_iterator(const std::basic_string<wchar_t> *const &__i) : _M_current((ImplicitCastExpr 0x9e29cb8 </usr/include/c++/4.6/bits/stl_iterator.h:720:60> 'const class std::basic_string<wchar_t> *':'const class std::basic_string<wchar_t> *' <LValueToRValue>
  (DeclRefExpr 0x9e29bcc <col:60> 'const class std::basic_string<wchar_t> *const':'const class std::basic_string<wchar_t> *const' lvalue ParmVar 0xa0f8070 '__i' 'const class std::basic_string<wchar_t> *const &'))
) (CompoundStmt 0x9bcf6c0 </usr/include/c++/4.6/bits/stl_iterator.h:720:65, col:67>)


        template <typename _Iter> __normal_iterator(const __normal_iterator<_Iter, typename __enable_if<(std::__are_same<_Iter, typename vector<basic_string<wchar_t>, allocator<basic_string<wchar_t> > >::pointer>::__value), vector<basic_string<wchar_t>, allocator<basic_string<wchar_t> > > >::__type> &__i);
        reference operator*() const (CompoundStmt 0x9e2ccc0 </usr/include/c++/4.6/bits/stl_iterator.h:733:7, col:29>
  (ReturnStmt 0x9e2ccb0 <col:9, col:17>
    (UnaryOperator 0x9e2cc98 <col:16, col:17> 'const class std::basic_string<wchar_t>' lvalue prefix '*'
      (ImplicitCastExpr 0x9e2cc88 <col:17> 'const class std::basic_string<wchar_t> *':'const class std::basic_string<wchar_t> *' <LValueToRValue>
        (MemberExpr 0x9e2cc68 <col:17> 'const class std::basic_string<wchar_t> *const':'const class std::basic_string<wchar_t> *const' lvalue ->_M_current 0xa0f7250
          (CXXThisExpr 0x9e2cb90 <col:17> 'const class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > > *' this))))))


        pointer operator->() const;
        __gnu_cxx::__normal_iterator<const std::basic_string<wchar_t> *, std::vector<std::basic_string<wchar_t>, std::allocator<std::basic_string<wchar_t> > > > &operator++() (CompoundStmt 0x9e2cb78 </usr/include/c++/4.6/bits/stl_iterator.h:741:7, line:744:7>
  (UnaryOperator 0x9e2cb28 <line:742:2, col:4> 'const class std::basic_string<wchar_t> *':'const class std::basic_string<wchar_t> *' lvalue prefix '++'
    (MemberExpr 0x9e2cb08 <col:4> 'const class std::basic_string<wchar_t> *':'const class std::basic_string<wchar_t> *' lvalue ->_M_current 0xa0f7250
      (CXXThisExpr 0x9e2ca30 <col:4> 'class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > > *' this)))
  (ReturnStmt 0x9e2cb68 <line:743:2, col:10>
    (UnaryOperator 0x9e2cb50 <col:9, col:10> 'class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >' lvalue prefix '*'
      (CXXThisExpr 0x9e2cb40 <col:10> 'class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > > *' this))))


        __gnu_cxx::__normal_iterator<const std::basic_string<wchar_t> *, std::vector<std::basic_string<wchar_t>, std::allocator<std::basic_string<wchar_t> > > > operator++(int);
        __gnu_cxx::__normal_iterator<const std::basic_string<wchar_t> *, std::vector<std::basic_string<wchar_t>, std::allocator<std::basic_string<wchar_t> > > > &operator--();
        __gnu_cxx::__normal_iterator<const std::basic_string<wchar_t> *, std::vector<std::basic_string<wchar_t>, std::allocator<std::basic_string<wchar_t> > > > operator--(int);
        reference operator[](const difference_type &__n) const;
        __gnu_cxx::__normal_iterator<const std::basic_string<wchar_t> *, std::vector<std::basic_string<wchar_t>, std::allocator<std::basic_string<wchar_t> > > > &operator+=(const difference_type &__n);
        __gnu_cxx::__normal_iterator<const std::basic_string<wchar_t> *, std::vector<std::basic_string<wchar_t>, std::allocator<std::basic_string<wchar_t> > > > operator+(const difference_type &__n) const;
        __gnu_cxx::__normal_iterator<const std::basic_string<wchar_t> *, std::vector<std::basic_string<wchar_t>, std::allocator<std::basic_string<wchar_t> > > > &operator-=(const difference_type &__n);
        __gnu_cxx::__normal_iterator<const std::basic_string<wchar_t> *, std::vector<std::basic_string<wchar_t>, std::allocator<std::basic_string<wchar_t> > > > operator-(const difference_type &__n) const;
        const std::basic_string<wchar_t> *const &base() const (CompoundStmt 0x9e2ca18 </usr/include/c++/4.6/bits/stl_iterator.h:785:7, col:28>
  (ReturnStmt 0x9e2ca08 <col:9, col:16>
    (MemberExpr 0x9e2c9e8 <col:16> 'const class std::basic_string<wchar_t> *const':'const class std::basic_string<wchar_t> *const' lvalue ->_M_current 0xa0f7250
      (CXXThisExpr 0x9e2c908 <col:16> 'const class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > > *' this))))


        inline __normal_iterator(const __gnu_cxx::__normal_iterator<const std::basic_string<wchar_t> *, std::vector<std::basic_string<wchar_t>, std::allocator<std::basic_string<wchar_t> > > > &) throw() : _M_current((ImplicitCastExpr 0x9e28650 </usr/include/c++/4.6/bits/stl_iterator.h:702:11> 'const class std::basic_string<wchar_t> *':'const class std::basic_string<wchar_t> *' <LValueToRValue>
  (MemberExpr 0x9e28624 <col:11> 'const class std::basic_string<wchar_t> *const':'const class std::basic_string<wchar_t> *const' lvalue ._M_current 0xa0f7250
    (DeclRefExpr 0x9e2860c <col:11> 'const class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >' lvalue ParmVar 0x9e27e40 '' 'const class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > > &')))
) (CompoundStmt 0x9e28680 </usr/include/c++/4.6/bits/stl_iterator.h:702:11>)


    }
template <typename _Iterator = char *, typename _Container = std::basic_string<char>> class __normal_iterator
template <typename _Iterator = wchar_t *, typename _Container = std::basic_string<wchar_t>> class __normal_iterator
template <typename _Iterator = const char *, typename _Container = std::basic_string<char>> class __normal_iterator
template <typename _Iterator = std::basic_string<wchar_t> *, typename _Container = std::vector<std::basic_string<wchar_t>, std::allocator<std::basic_string<wchar_t> > >> class __normal_iterator {
        class __normal_iterator;
    protected:
    protected:
        std::basic_string<wchar_t> *_M_current;
        typedef iterator_traits<std::basic_string<wchar_t> *> __traits_type;
    public:
    public:
        typedef std::basic_string<wchar_t> *iterator_type;
        typedef typename __traits_type::iterator_category iterator_category;
        typedef typename __traits_type::value_type value_type;
        typedef typename __traits_type::difference_type difference_type;
        typedef typename __traits_type::reference reference;
        typedef typename __traits_type::pointer pointer;
        __normal_iterator();
        __normal_iterator(std::basic_string<wchar_t> *const &__i) : _M_current((ImplicitCastExpr 0xa0f66d8 </usr/include/c++/4.6/bits/stl_iterator.h:720:60> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' <LValueToRValue>
  (DeclRefExpr 0xa0f65ec <col:60> 'class std::basic_string<wchar_t> *const':'class std::basic_string<wchar_t> *const' lvalue ParmVar 0xa0ea1b0 '__i' 'class std::basic_string<wchar_t> *const &'))
) (CompoundStmt 0x9bcf6c0 </usr/include/c++/4.6/bits/stl_iterator.h:720:65, col:67>)


        template <typename _Iter = std::basic_string<wchar_t> *> __normal_iterator(const __normal_iterator<std::basic_string<wchar_t> *, typename __enable_if<(std::__are_same<basic_string<wchar_t> *, typename vector<basic_string<wchar_t>, allocator<basic_string<wchar_t> > >::pointer>::__value), vector<basic_string<wchar_t>, allocator<basic_string<wchar_t> > > >::__type> &__i)template <typename _Iter> __normal_iterator(const __normal_iterator<_Iter, typename __enable_if<(std::__are_same<_Iter, typename vector<basic_string<wchar_t>, allocator<basic_string<wchar_t> > >::pointer>::__value), vector<basic_string<wchar_t>, allocator<basic_string<wchar_t> > > >::__type> &__i);
        reference operator*() const (CompoundStmt 0xa0f52a0 </usr/include/c++/4.6/bits/stl_iterator.h:733:7, col:29>
  (ReturnStmt 0xa0f5290 <col:9, col:17>
    (UnaryOperator 0xa0f5278 <col:16, col:17> 'class std::basic_string<wchar_t>' lvalue prefix '*'
      (ImplicitCastExpr 0xa0f5268 <col:17> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' <LValueToRValue>
        (MemberExpr 0xa0f5248 <col:17> 'class std::basic_string<wchar_t> *const':'class std::basic_string<wchar_t> *const' lvalue ->_M_current 0xa0e97e0
          (CXXThisExpr 0xa0f5168 <col:17> 'const class __gnu_cxx::__normal_iterator<class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > > *' this))))))


        pointer operator->() const;
        __gnu_cxx::__normal_iterator<std::basic_string<wchar_t> *, std::vector<std::basic_string<wchar_t>, std::allocator<std::basic_string<wchar_t> > > > &operator++();
        __gnu_cxx::__normal_iterator<std::basic_string<wchar_t> *, std::vector<std::basic_string<wchar_t>, std::allocator<std::basic_string<wchar_t> > > > operator++(int);
        __gnu_cxx::__normal_iterator<std::basic_string<wchar_t> *, std::vector<std::basic_string<wchar_t>, std::allocator<std::basic_string<wchar_t> > > > &operator--();
        __gnu_cxx::__normal_iterator<std::basic_string<wchar_t> *, std::vector<std::basic_string<wchar_t>, std::allocator<std::basic_string<wchar_t> > > > operator--(int);
        reference operator[](const difference_type &__n) const;
        __gnu_cxx::__normal_iterator<std::basic_string<wchar_t> *, std::vector<std::basic_string<wchar_t>, std::allocator<std::basic_string<wchar_t> > > > &operator+=(const difference_type &__n);
        __gnu_cxx::__normal_iterator<std::basic_string<wchar_t> *, std::vector<std::basic_string<wchar_t>, std::allocator<std::basic_string<wchar_t> > > > operator+(const difference_type &__n) const;
        __gnu_cxx::__normal_iterator<std::basic_string<wchar_t> *, std::vector<std::basic_string<wchar_t>, std::allocator<std::basic_string<wchar_t> > > > &operator-=(const difference_type &__n);
        __gnu_cxx::__normal_iterator<std::basic_string<wchar_t> *, std::vector<std::basic_string<wchar_t>, std::allocator<std::basic_string<wchar_t> > > > operator-(const difference_type &__n) const;
        std::basic_string<wchar_t> *const &base() const (CompoundStmt 0xa0f17b8 </usr/include/c++/4.6/bits/stl_iterator.h:785:7, col:28>
  (ReturnStmt 0xa0f17a8 <col:9, col:16>
    (MemberExpr 0xa0f1784 <col:16> 'class std::basic_string<wchar_t> *const':'class std::basic_string<wchar_t> *const' lvalue ->_M_current 0xa0e97e0
      (CXXThisExpr 0xa0f1690 <col:16> 'const class __gnu_cxx::__normal_iterator<class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > > *' this))))


        inline __normal_iterator(const __gnu_cxx::__normal_iterator<std::basic_string<wchar_t> *, std::vector<std::basic_string<wchar_t>, std::allocator<std::basic_string<wchar_t> > > > &) throw() : _M_current((ImplicitCastExpr 0xa0ecd80 </usr/include/c++/4.6/bits/stl_iterator.h:702:11> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' <LValueToRValue>
  (MemberExpr 0xa0ecd54 <col:11> 'class std::basic_string<wchar_t> *const':'class std::basic_string<wchar_t> *const' lvalue ._M_current 0xa0e97e0
    (DeclRefExpr 0xa0ecd3c <col:11> 'const class __gnu_cxx::__normal_iterator<class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >' lvalue ParmVar 0xa0ec3d0 '' 'const class __gnu_cxx::__normal_iterator<class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > > &')))
) (CompoundStmt 0xa0ecdb0 </usr/include/c++/4.6/bits/stl_iterator.h:702:11>)


    }
template <typename _Iterator = const wchar_t *, typename _Container = std::basic_string<wchar_t>> class __normal_iterator
template <typename _Iterator, typename _Container> class __normal_iterator {
        class __normal_iterator;
    protected:
    protected:
        _Iterator _M_current;
        typedef iterator_traits<_Iterator> __traits_type;
    public:
    public:
        typedef _Iterator iterator_type;
        typedef typename __traits_type::iterator_category iterator_category;
        typedef typename __traits_type::value_type value_type;
        typedef typename __traits_type::difference_type difference_type;
        typedef typename __traits_type::reference reference;
        typedef typename __traits_type::pointer pointer;
        __normal_iterator<_Iterator, _Container>() : _M_current((CXXUnresolvedConstructExpr 0x9bcf5f8 </usr/include/c++/4.6/bits/stl_iterator.h:717:59, col:69> '_Iterator')
) (CompoundStmt 0x9bcf650 </usr/include/c++/4.6/bits/stl_iterator.h:717:72, col:74>)


        __normal_iterator<_Iterator, _Container>(const _Iterator &__i) : _M_current((DeclRefExpr 0x9bcf660 </usr/include/c++/4.6/bits/stl_iterator.h:720:60> 'const _Iterator' lvalue ParmVar 0x9bce120 '__i' 'const _Iterator &')
) (CompoundStmt 0x9bcf6c0 </usr/include/c++/4.6/bits/stl_iterator.h:720:65, col:67>)


        template <typename _Iter> __normal_iterator<_Iterator, _Container>(const __normal_iterator<_Iter, typename __enable_if<(std::__are_same<_Iter, typename _Container::pointer>::__value), _Container>::__type> &__i) : _M_current((CallExpr 0x9bcf720 </usr/include/c++/4.6/bits/stl_iterator.h:728:22, col:31> '<dependent type>'
  (CXXDependentScopeMemberExpr 0x9bcf6e8 <col:22, col:26> '<dependent type>' lvalue
    (DeclRefExpr 0x9bcf6d0 <col:22> 'const __normal_iterator<_Iter, typename __enable_if<(std::__are_same<_Iter, typename _Container::pointer>::__value), _Container>::__type>' lvalue ParmVar 0x9bcea70 '__i' 'const __normal_iterator<_Iter, typename __enable_if<(std::__are_same<_Iter, typename _Container::pointer>::__value), _Container>::__type> &')))
) (CompoundStmt 0x9bcf780 </usr/include/c++/4.6/bits/stl_iterator.h:728:34, col:36>)

;
        reference operator*() const (CompoundStmt 0x9bcf820 </usr/include/c++/4.6/bits/stl_iterator.h:733:7, col:29>
  (ReturnStmt 0x9bcf810 <col:9, col:17>
    (UnaryOperator 0x9bcf7f8 <col:16, col:17> '<dependent type>' prefix '*'
      (MemberExpr 0x9bcf7d4 <col:17> 'const _Iterator' lvalue ->_M_current 0x9bcdbd0
        (CXXThisExpr 0x9bcf7a8 <col:17> 'const __normal_iterator<_Iterator, _Container> *' this)))))


        pointer operator->() const (CompoundStmt 0x9bcf878 </usr/include/c++/4.6/bits/stl_iterator.h:737:7, col:28>
  (ReturnStmt 0x9bcf868 <col:9, col:16>
    (MemberExpr 0x9bcf848 <col:16> 'const _Iterator' lvalue ->_M_current 0x9bcdbd0
      (CXXThisExpr 0x9bcf838 <col:16> 'const __normal_iterator<_Iterator, _Container> *' this))))


        __normal_iterator<_Iterator, _Container> &operator++() (CompoundStmt 0x9bcf910 </usr/include/c++/4.6/bits/stl_iterator.h:741:7, line:744:7>
  (UnaryOperator 0x9bcf8c0 <line:742:2, col:4> '<dependent type>' prefix '++'
    (MemberExpr 0x9bcf8a0 <col:4> '_Iterator' lvalue ->_M_current 0x9bcdbd0
      (CXXThisExpr 0x9bcf890 <col:4> '__normal_iterator<_Iterator, _Container> *' this)))
  (ReturnStmt 0x9bcf900 <line:743:2, col:10>
    (UnaryOperator 0x9bcf8e8 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9bcf8d8 <col:10> '__normal_iterator<_Iterator, _Container> *' this))))


        __normal_iterator<_Iterator, _Container> operator++(int) (CompoundStmt 0x9bcf9c0 </usr/include/c++/4.6/bits/stl_iterator.h:748:7, col:49>
  (ReturnStmt 0x9bcf9b0 <col:9, col:46>
    (CXXUnresolvedConstructExpr 0x9bcf990 <col:16, col:46> '__normal_iterator<_Iterator, _Container>'
      (UnaryOperator 0x9bcf978 <col:34, col:44> '<dependent type>' postfix '++'
        (MemberExpr 0x9bcf940 <col:34> '_Iterator' lvalue ->_M_current 0x9bcdbd0
          (CXXThisExpr 0x9bcf930 <col:34> '__normal_iterator<_Iterator, _Container> *' this))))))


        __normal_iterator<_Iterator, _Container> &operator--() (CompoundStmt 0x9bd0ed0 </usr/include/c++/4.6/bits/stl_iterator.h:753:7, line:756:7>
  (UnaryOperator 0x9bcfa08 <line:754:2, col:4> '<dependent type>' prefix '--'
    (MemberExpr 0x9bcf9e8 <col:4> '_Iterator' lvalue ->_M_current 0x9bcdbd0
      (CXXThisExpr 0x9bcf9d8 <col:4> '__normal_iterator<_Iterator, _Container> *' this)))
  (ReturnStmt 0x9bcfa48 <line:755:2, col:10>
    (UnaryOperator 0x9bcfa30 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9bcfa20 <col:10> '__normal_iterator<_Iterator, _Container> *' this))))


        __normal_iterator<_Iterator, _Container> operator--(int) (CompoundStmt 0x9bd0f80 </usr/include/c++/4.6/bits/stl_iterator.h:760:7, col:49>
  (ReturnStmt 0x9bd0f70 <col:9, col:46>
    (CXXUnresolvedConstructExpr 0x9bd0f50 <col:16, col:46> '__normal_iterator<_Iterator, _Container>'
      (UnaryOperator 0x9bd0f38 <col:34, col:44> '<dependent type>' postfix '--'
        (MemberExpr 0x9bd0f00 <col:34> '_Iterator' lvalue ->_M_current 0x9bcdbd0
          (CXXThisExpr 0x9bd0ef0 <col:34> '__normal_iterator<_Iterator, _Container> *' this))))))


        reference operator[](const difference_type &__n) const (CompoundStmt 0x9bd1008 </usr/include/c++/4.6/bits/stl_iterator.h:765:7, col:33>
  (ReturnStmt 0x9bd0ff8 <col:9, col:30>
    (ArraySubscriptExpr 0x9bd0fe0 <col:16, col:30> '<dependent type>' lvalue
      (MemberExpr 0x9bd0fa8 <col:16> 'const _Iterator' lvalue ->_M_current 0x9bcdbd0
        (CXXThisExpr 0x9bd0f98 <col:16> 'const __normal_iterator<_Iterator, _Container> *' this))
      (DeclRefExpr 0x9bd0fc8 <col:27> 'const difference_type':'const typename __traits_type::difference_type' lvalue ParmVar 0x9bcf040 '__n' 'const difference_type &'))))


        __normal_iterator<_Iterator, _Container> &operator+=(const difference_type &__n) (CompoundStmt 0x9bd10c0 </usr/include/c++/4.6/bits/stl_iterator.h:769:7, col:42>
  (CompoundAssignOperator 0x9bd1068 <col:9, col:23> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (MemberExpr 0x9bd1030 <col:9> '_Iterator' lvalue ->_M_current 0x9bcdbd0
      (CXXThisExpr 0x9bd1020 <col:9> '__normal_iterator<_Iterator, _Container> *' this))
    (DeclRefExpr 0x9bd1050 <col:23> 'const difference_type':'const typename __traits_type::difference_type' lvalue ParmVar 0x9bcf160 '__n' 'const difference_type &'))
  (ReturnStmt 0x9bd10b0 <col:28, col:36>
    (UnaryOperator 0x9bd1098 <col:35, col:36> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9bd1088 <col:36> '__normal_iterator<_Iterator, _Container> *' this))))


        __normal_iterator<_Iterator, _Container> operator+(const difference_type &__n) const (CompoundStmt 0x9bd1170 </usr/include/c++/4.6/bits/stl_iterator.h:773:7, col:53>
  (ReturnStmt 0x9bd1160 <col:9, col:50>
    (CXXUnresolvedConstructExpr 0x9bd1140 <col:16, col:50> '__normal_iterator<_Iterator, _Container>'
      (BinaryOperator 0x9bd1128 <col:34, col:47> '<dependent type>' '+'
        (MemberExpr 0x9bd10f0 <col:34> 'const _Iterator' lvalue ->_M_current 0x9bcdbd0
          (CXXThisExpr 0x9bd10e0 <col:34> 'const __normal_iterator<_Iterator, _Container> *' this))
        (DeclRefExpr 0x9bd1110 <col:47> 'const difference_type':'const typename __traits_type::difference_type' lvalue ParmVar 0x9bcf280 '__n' 'const difference_type &')))))


        __normal_iterator<_Iterator, _Container> &operator-=(const difference_type &__n) (CompoundStmt 0x9bd1228 </usr/include/c++/4.6/bits/stl_iterator.h:777:7, col:42>
  (CompoundAssignOperator 0x9bd11d0 <col:9, col:23> '<dependent type>' lvalue '-=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (MemberExpr 0x9bd1198 <col:9> '_Iterator' lvalue ->_M_current 0x9bcdbd0
      (CXXThisExpr 0x9bd1188 <col:9> '__normal_iterator<_Iterator, _Container> *' this))
    (DeclRefExpr 0x9bd11b8 <col:23> 'const difference_type':'const typename __traits_type::difference_type' lvalue ParmVar 0x9bcf3a0 '__n' 'const difference_type &'))
  (ReturnStmt 0x9bd1218 <col:28, col:36>
    (UnaryOperator 0x9bd1200 <col:35, col:36> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9bd11f0 <col:36> '__normal_iterator<_Iterator, _Container> *' this))))


        __normal_iterator<_Iterator, _Container> operator-(const difference_type &__n) const (CompoundStmt 0x9bd12d8 </usr/include/c++/4.6/bits/stl_iterator.h:781:7, col:53>
  (ReturnStmt 0x9bd12c8 <col:9, col:50>
    (CXXUnresolvedConstructExpr 0x9bd12a8 <col:16, col:50> '__normal_iterator<_Iterator, _Container>'
      (BinaryOperator 0x9bd1290 <col:34, col:47> '<dependent type>' '-'
        (MemberExpr 0x9bd1258 <col:34> 'const _Iterator' lvalue ->_M_current 0x9bcdbd0
          (CXXThisExpr 0x9bd1248 <col:34> 'const __normal_iterator<_Iterator, _Container> *' this))
        (DeclRefExpr 0x9bd1278 <col:47> 'const difference_type':'const typename __traits_type::difference_type' lvalue ParmVar 0x9bcf480 '__n' 'const difference_type &')))))


        const _Iterator &base() const (CompoundStmt 0x9bd1330 </usr/include/c++/4.6/bits/stl_iterator.h:785:7, col:28>
  (ReturnStmt 0x9bd1320 <col:9, col:16>
    (MemberExpr 0x9bd1300 <col:16> 'const _Iterator' lvalue ->_M_current 0x9bcdbd0
      (CXXThisExpr 0x9bd12f0 <col:16> 'const __normal_iterator<_Iterator, _Container> *' this))))


    };
    template <typename _IteratorL, typename _IteratorR, typename _Container> inline bool operator==(const __normal_iterator<_IteratorL, _Container> &__lhs, const __normal_iterator<_IteratorR, _Container> &__rhs) (CompoundStmt 0x9bd1a50 </usr/include/c++/4.6/bits/stl_iterator.h:801:5, col:44>
  (ReturnStmt 0x9bd1a40 <col:7, col:41>
    (CXXOperatorCallExpr 0x9bd1a18 <col:14, col:41> '<dependent type>'
      (UnresolvedLookupExpr 0x9bd19e0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bd18d0)
      (CallExpr 0x9bd1950 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9bd1918 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9bd1900 <col:14> 'const __normal_iterator<_IteratorL, _Container>' lvalue ParmVar 0x9bd15f0 '__lhs' 'const __normal_iterator<_IteratorL, _Container> &')))
      (CallExpr 0x9bd19c0 <col:30, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9bd1988 <col:30, col:36> '<dependent type>' lvalue
          (DeclRefExpr 0x9bd196c <col:30> 'const __normal_iterator<_IteratorR, _Container>' lvalue ParmVar 0x9bd17d0 '__rhs' 'const __normal_iterator<_IteratorR, _Container> &'))))))

;
    template <typename _Iterator, typename _Container> inline bool operator==(const __normal_iterator<_Iterator, _Container> &__lhs, const __normal_iterator<_Iterator, _Container> &__rhs) (CompoundStmt 0x9bd2a10 </usr/include/c++/4.6/bits/stl_iterator.h:807:5, col:44>
  (ReturnStmt 0x9bd2a00 <col:7, col:41>
    (CXXOperatorCallExpr 0x9bd29d8 <col:14, col:41> '<dependent type>'
      (UnresolvedLookupExpr 0x9bd29a0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bd2890 0x9bd18d0)
      (CallExpr 0x9bd2910 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9bd28d8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9bd28c0 <col:14> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x9bd1c70 '__lhs' 'const __normal_iterator<_Iterator, _Container> &')))
      (CallExpr 0x9bd2980 <col:30, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9bd2948 <col:30, col:36> '<dependent type>' lvalue
          (DeclRefExpr 0x9bd292c <col:30> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x9bd1de0 '__rhs' 'const __normal_iterator<_Iterator, _Container> &'))))))

;
    template <typename _IteratorL = const std::basic_string<wchar_t> *, typename _IteratorR = const std::basic_string<wchar_t> *, typename _Container = std::vector<std::basic_string<wchar_t>, std::allocator<std::basic_string<wchar_t> > >> inline bool operator!=(const __normal_iterator<const std::basic_string<wchar_t> *, std::vector<std::basic_string<wchar_t>, std::allocator<std::basic_string<wchar_t> > > > &__lhs, const __normal_iterator<const std::basic_string<wchar_t> *, std::vector<std::basic_string<wchar_t>, std::allocator<std::basic_string<wchar_t> > > > &__rhs)template <typename _IteratorL, typename _IteratorR, typename _Container> inline bool operator!=(const __normal_iterator<_IteratorL, _Container> &__lhs, const __normal_iterator<_IteratorR, _Container> &__rhs) (CompoundStmt 0x9bd3030 </usr/include/c++/4.6/bits/stl_iterator.h:813:5, col:44>
  (ReturnStmt 0x9bd3020 <col:7, col:41>
    (CXXOperatorCallExpr 0x9bd2ff8 <col:14, col:41> '<dependent type>'
      (UnresolvedLookupExpr 0x9bd2fc0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bd2eb0)
      (CallExpr 0x9bd2f30 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9bd2ef8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9bd2ee0 <col:14> 'const __normal_iterator<_IteratorL, _Container>' lvalue ParmVar 0x9bd2c60 '__lhs' 'const __normal_iterator<_IteratorL, _Container> &')))
      (CallExpr 0x9bd2fa0 <col:30, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9bd2f68 <col:30, col:36> '<dependent type>' lvalue
          (DeclRefExpr 0x9bd2f4c <col:30> 'const __normal_iterator<_IteratorR, _Container>' lvalue ParmVar 0x9bd2dd0 '__rhs' 'const __normal_iterator<_IteratorR, _Container> &'))))))

;
    template <typename _Iterator = const std::basic_string<wchar_t> *, typename _Container = std::vector<std::basic_string<wchar_t>, std::allocator<std::basic_string<wchar_t> > >> inline bool operator!=(const __normal_iterator<const std::basic_string<wchar_t> *, std::vector<std::basic_string<wchar_t>, std::allocator<std::basic_string<wchar_t> > > > &__lhs, const __normal_iterator<const std::basic_string<wchar_t> *, std::vector<std::basic_string<wchar_t>, std::allocator<std::basic_string<wchar_t> > > > &__rhs) (CompoundStmt 0x9e2c8f0 </usr/include/c++/4.6/bits/stl_iterator.h:819:5, col:44>
  (ReturnStmt 0x9e2c8e0 <col:7, col:41>
    (BinaryOperator 0x9e2c8c8 <col:14, col:41> '_Bool' '!='
      (ImplicitCastExpr 0x9e2c8a8 <col:14, col:25> 'const class std::basic_string<wchar_t> *':'const class std::basic_string<wchar_t> *' <LValueToRValue>
        (CXXMemberCallExpr 0x9e2c830 <col:14, col:25> 'const class std::basic_string<wchar_t> *const':'const class std::basic_string<wchar_t> *const' lvalue
          (MemberExpr 0x9e2c810 <col:14, col:20> '<bound member function type>' .base 0x9e271f0
            (DeclRefExpr 0x9e2c7f8 <col:14> 'const __normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >':'const class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >' lvalue ParmVar 0x9e2baa0 '__lhs' 'const __normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > > &'))))
      (ImplicitCastExpr 0x9e2c8b8 <col:30, col:41> 'const class std::basic_string<wchar_t> *':'const class std::basic_string<wchar_t> *' <LValueToRValue>
        (CXXMemberCallExpr 0x9e2c888 <col:30, col:41> 'const class std::basic_string<wchar_t> *const':'const class std::basic_string<wchar_t> *const' lvalue
          (MemberExpr 0x9e2c864 <col:30, col:36> '<bound member function type>' .base 0x9e271f0
            (DeclRefExpr 0x9e2c84c <col:30> 'const __normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >':'const class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >' lvalue ParmVar 0x9e2bb90 '__rhs' 'const __normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > > &')))))))

template <typename _Iterator, typename _Container> inline bool operator!=(const __normal_iterator<_Iterator, _Container> &__lhs, const __normal_iterator<_Iterator, _Container> &__rhs) (CompoundStmt 0x9bd3600 </usr/include/c++/4.6/bits/stl_iterator.h:819:5, col:44>
  (ReturnStmt 0x9bd35f0 <col:7, col:41>
    (CXXOperatorCallExpr 0x9bd35c8 <col:14, col:41> '<dependent type>'
      (UnresolvedLookupExpr 0x9bd3590 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bd3480 0x9bd2eb0)
      (CallExpr 0x9bd3500 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9bd34c8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9bd34b0 <col:14> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x9bd3230 '__lhs' 'const __normal_iterator<_Iterator, _Container> &')))
      (CallExpr 0x9bd3570 <col:30, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9bd3538 <col:30, col:36> '<dependent type>' lvalue
          (DeclRefExpr 0x9bd351c <col:30> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x9bd33a0 '__rhs' 'const __normal_iterator<_Iterator, _Container> &'))))))

;
    template <typename _IteratorL, typename _IteratorR, typename _Container> inline bool operator<(const __normal_iterator<_IteratorL, _Container> &__lhs, const __normal_iterator<_IteratorR, _Container> &__rhs) (CompoundStmt 0x9bd3c40 </usr/include/c++/4.6/bits/stl_iterator.h:826:5, col:43>
  (ReturnStmt 0x9bd3c30 <col:7, col:40>
    (CXXOperatorCallExpr 0x9bd3c08 <col:14, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0x9bd3bd0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bd3ac0)
      (CallExpr 0x9bd3b40 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9bd3b08 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9bd3af0 <col:14> 'const __normal_iterator<_IteratorL, _Container>' lvalue ParmVar 0x9bd3870 '__lhs' 'const __normal_iterator<_IteratorL, _Container> &')))
      (CallExpr 0x9bd3bb0 <col:29, col:40> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9bd3b78 <col:29, col:35> '<dependent type>' lvalue
          (DeclRefExpr 0x9bd3b5c <col:29> 'const __normal_iterator<_IteratorR, _Container>' lvalue ParmVar 0x9bd39e0 '__rhs' 'const __normal_iterator<_IteratorR, _Container> &'))))))

;
    template <typename _Iterator, typename _Container> inline bool operator<(const __normal_iterator<_Iterator, _Container> &__lhs, const __normal_iterator<_Iterator, _Container> &__rhs) (CompoundStmt 0x9bd4210 </usr/include/c++/4.6/bits/stl_iterator.h:832:5, col:43>
  (ReturnStmt 0x9bd4200 <col:7, col:40>
    (CXXOperatorCallExpr 0x9bd41d8 <col:14, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0x9bd41a0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bd4090 0x9bd3ac0)
      (CallExpr 0x9bd4110 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9bd40d8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9bd40c0 <col:14> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x9bd3e40 '__lhs' 'const __normal_iterator<_Iterator, _Container> &')))
      (CallExpr 0x9bd4180 <col:29, col:40> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9bd4148 <col:29, col:35> '<dependent type>' lvalue
          (DeclRefExpr 0x9bd412c <col:29> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x9bd3fb0 '__rhs' 'const __normal_iterator<_Iterator, _Container> &'))))))

;
    template <typename _IteratorL, typename _IteratorR, typename _Container> inline bool operator>(const __normal_iterator<_IteratorL, _Container> &__lhs, const __normal_iterator<_IteratorR, _Container> &__rhs) (CompoundStmt 0x9bd4840 </usr/include/c++/4.6/bits/stl_iterator.h:838:5, col:43>
  (ReturnStmt 0x9bd4820 <col:7, col:40>
    (CXXOperatorCallExpr 0x9bd47f8 <col:14, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0x9bd47c0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bd46b0)
      (CallExpr 0x9bd4730 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9bd46f8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9bd46e0 <col:14> 'const __normal_iterator<_IteratorL, _Container>' lvalue ParmVar 0x9bd4460 '__lhs' 'const __normal_iterator<_IteratorL, _Container> &')))
      (CallExpr 0x9bd47a0 <col:29, col:40> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9bd4768 <col:29, col:35> '<dependent type>' lvalue
          (DeclRefExpr 0x9bd474c <col:29> 'const __normal_iterator<_IteratorR, _Container>' lvalue ParmVar 0x9bd45d0 '__rhs' 'const __normal_iterator<_IteratorR, _Container> &'))))))

;
    template <typename _Iterator, typename _Container> inline bool operator>(const __normal_iterator<_Iterator, _Container> &__lhs, const __normal_iterator<_Iterator, _Container> &__rhs) (CompoundStmt 0x9bd4e10 </usr/include/c++/4.6/bits/stl_iterator.h:844:5, col:43>
  (ReturnStmt 0x9bd4e00 <col:7, col:40>
    (CXXOperatorCallExpr 0x9bd4dd8 <col:14, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0x9bd4da0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bd4c90 0x9bd46b0)
      (CallExpr 0x9bd4d10 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9bd4cd8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9bd4cc0 <col:14> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x9bd4a40 '__lhs' 'const __normal_iterator<_Iterator, _Container> &')))
      (CallExpr 0x9bd4d80 <col:29, col:40> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9bd4d48 <col:29, col:35> '<dependent type>' lvalue
          (DeclRefExpr 0x9bd4d2c <col:29> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x9bd4bb0 '__rhs' 'const __normal_iterator<_Iterator, _Container> &'))))))

;
    template <typename _IteratorL, typename _IteratorR, typename _Container> inline bool operator<=(const __normal_iterator<_IteratorL, _Container> &__lhs, const __normal_iterator<_IteratorR, _Container> &__rhs) (CompoundStmt 0x9bd5430 </usr/include/c++/4.6/bits/stl_iterator.h:850:5, col:44>
  (ReturnStmt 0x9bd5420 <col:7, col:41>
    (CXXOperatorCallExpr 0x9bd53f8 <col:14, col:41> '<dependent type>'
      (UnresolvedLookupExpr 0x9bd53c0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bd52b0)
      (CallExpr 0x9bd5330 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9bd52f8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9bd52e0 <col:14> 'const __normal_iterator<_IteratorL, _Container>' lvalue ParmVar 0x9bd5060 '__lhs' 'const __normal_iterator<_IteratorL, _Container> &')))
      (CallExpr 0x9bd53a0 <col:30, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9bd5368 <col:30, col:36> '<dependent type>' lvalue
          (DeclRefExpr 0x9bd534c <col:30> 'const __normal_iterator<_IteratorR, _Container>' lvalue ParmVar 0x9bd51d0 '__rhs' 'const __normal_iterator<_IteratorR, _Container> &'))))))

;
    template <typename _Iterator, typename _Container> inline bool operator<=(const __normal_iterator<_Iterator, _Container> &__lhs, const __normal_iterator<_Iterator, _Container> &__rhs) (CompoundStmt 0x9bd5c30 </usr/include/c++/4.6/bits/stl_iterator.h:856:5, col:44>
  (ReturnStmt 0x9bd5c20 <col:7, col:41>
    (CXXOperatorCallExpr 0x9bd5bf8 <col:14, col:41> '<dependent type>'
      (UnresolvedLookupExpr 0x9bd5bc0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bd5ab0 0x9bd52b0)
      (CallExpr 0x9bd5b30 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9bd5af8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9bd5ae0 <col:14> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x9bd5630 '__lhs' 'const __normal_iterator<_Iterator, _Container> &')))
      (CallExpr 0x9bd5ba0 <col:30, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9bd5b68 <col:30, col:36> '<dependent type>' lvalue
          (DeclRefExpr 0x9bd5b4c <col:30> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x9bd57a0 '__rhs' 'const __normal_iterator<_Iterator, _Container> &'))))))

;
    template <typename _IteratorL, typename _IteratorR, typename _Container> inline bool operator>=(const __normal_iterator<_IteratorL, _Container> &__lhs, const __normal_iterator<_IteratorR, _Container> &__rhs) (CompoundStmt 0x9bd6250 </usr/include/c++/4.6/bits/stl_iterator.h:862:5, col:44>
  (ReturnStmt 0x9bd6240 <col:7, col:41>
    (CXXOperatorCallExpr 0x9bd6218 <col:14, col:41> '<dependent type>'
      (UnresolvedLookupExpr 0x9bd61e0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bd60d0)
      (CallExpr 0x9bd6150 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9bd6118 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9bd6100 <col:14> 'const __normal_iterator<_IteratorL, _Container>' lvalue ParmVar 0x9bd5e80 '__lhs' 'const __normal_iterator<_IteratorL, _Container> &')))
      (CallExpr 0x9bd61c0 <col:30, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9bd6188 <col:30, col:36> '<dependent type>' lvalue
          (DeclRefExpr 0x9bd616c <col:30> 'const __normal_iterator<_IteratorR, _Container>' lvalue ParmVar 0x9bd5ff0 '__rhs' 'const __normal_iterator<_IteratorR, _Container> &'))))))

;
    template <typename _Iterator, typename _Container> inline bool operator>=(const __normal_iterator<_Iterator, _Container> &__lhs, const __normal_iterator<_Iterator, _Container> &__rhs) (CompoundStmt 0x9bd6820 </usr/include/c++/4.6/bits/stl_iterator.h:868:5, col:44>
  (ReturnStmt 0x9bd6810 <col:7, col:41>
    (CXXOperatorCallExpr 0x9bd67e8 <col:14, col:41> '<dependent type>'
      (UnresolvedLookupExpr 0x9bd67b0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bd66a0 0x9bd60d0)
      (CallExpr 0x9bd6720 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9bd66e8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9bd66d0 <col:14> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x9bd6450 '__lhs' 'const __normal_iterator<_Iterator, _Container> &')))
      (CallExpr 0x9bd6790 <col:30, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9bd6758 <col:30, col:36> '<dependent type>' lvalue
          (DeclRefExpr 0x9bd673c <col:30> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x9bd65c0 '__rhs' 'const __normal_iterator<_Iterator, _Container> &'))))))

;
    template <typename _IteratorL = std::basic_string<wchar_t> *, typename _IteratorR = std::basic_string<wchar_t> *, typename _Container = std::vector<std::basic_string<wchar_t>, std::allocator<std::basic_string<wchar_t> > >> inline typename __normal_iterator<basic_string<wchar_t> *, vector<basic_string<wchar_t>, allocator<basic_string<wchar_t> > > >::difference_type operator-(const __normal_iterator<std::basic_string<wchar_t> *, std::vector<std::basic_string<wchar_t>, std::allocator<std::basic_string<wchar_t> > > > &__lhs, const __normal_iterator<std::basic_string<wchar_t> *, std::vector<std::basic_string<wchar_t>, std::allocator<std::basic_string<wchar_t> > > > &__rhs)template <typename _IteratorL, typename _IteratorR, typename _Container> inline typename __normal_iterator<_IteratorL, _Container>::difference_type operator-(const __normal_iterator<_IteratorL, _Container> &__lhs, const __normal_iterator<_IteratorR, _Container> &__rhs) (CompoundStmt 0x9bd75f0 </usr/include/c++/4.6/bits/stl_iterator.h:886:5, col:43>
  (ReturnStmt 0x9bd75e0 <col:7, col:40>
    (CXXOperatorCallExpr 0x9bd75b8 <col:14, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0x9bd7580 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bd7470)
      (CallExpr 0x9bd74f0 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9bd74b8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9bd74a0 <col:14> 'const __normal_iterator<_IteratorL, _Container>' lvalue ParmVar 0x9bd71f0 '__lhs' 'const __normal_iterator<_IteratorL, _Container> &')))
      (CallExpr 0x9bd7560 <col:29, col:40> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9bd7528 <col:29, col:35> '<dependent type>' lvalue
          (DeclRefExpr 0x9bd750c <col:29> 'const __normal_iterator<_IteratorR, _Container>' lvalue ParmVar 0x9bd7360 '__rhs' 'const __normal_iterator<_IteratorR, _Container> &'))))))

;
    template <typename _Iterator = std::basic_string<wchar_t> *, typename _Container = std::vector<std::basic_string<wchar_t>, std::allocator<std::basic_string<wchar_t> > >> inline typename __normal_iterator<basic_string<wchar_t> *, vector<basic_string<wchar_t>, allocator<basic_string<wchar_t> > > >::difference_type operator-(const __normal_iterator<std::basic_string<wchar_t> *, std::vector<std::basic_string<wchar_t>, std::allocator<std::basic_string<wchar_t> > > > &__lhs, const __normal_iterator<std::basic_string<wchar_t> *, std::vector<std::basic_string<wchar_t>, std::allocator<std::basic_string<wchar_t> > > > &__rhs) (CompoundStmt 0xa0f6840 </usr/include/c++/4.6/bits/stl_iterator.h:892:5, col:43>
  (ReturnStmt 0xa0f6830 <col:7, col:40>
    (BinaryOperator 0xa0f6818 <col:14, col:40> 'int' '-'
      (ImplicitCastExpr 0xa0f67f8 <col:14, col:25> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' <LValueToRValue>
        (CXXMemberCallExpr 0xa0f6780 <col:14, col:25> 'class std::basic_string<wchar_t> *const':'class std::basic_string<wchar_t> *const' lvalue
          (MemberExpr 0xa0f6760 <col:14, col:20> '<bound member function type>' .base 0xa0ec250
            (DeclRefExpr 0xa0f6748 <col:14> 'const __normal_iterator<class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >':'const class __gnu_cxx::__normal_iterator<class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >' lvalue ParmVar 0xa0ee360 '__lhs' 'const __normal_iterator<class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > > &'))))
      (ImplicitCastExpr 0xa0f6808 <col:29, col:40> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' <LValueToRValue>
        (CXXMemberCallExpr 0xa0f67d8 <col:29, col:40> 'class std::basic_string<wchar_t> *const':'class std::basic_string<wchar_t> *const' lvalue
          (MemberExpr 0xa0f67b4 <col:29, col:35> '<bound member function type>' .base 0xa0ec250
            (DeclRefExpr 0xa0f679c <col:29> 'const __normal_iterator<class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >':'const class __gnu_cxx::__normal_iterator<class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >' lvalue ParmVar 0xa0ee450 '__rhs' 'const __normal_iterator<class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > > &')))))))

template <typename _Iterator, typename _Container> inline typename __normal_iterator<_Iterator, _Container>::difference_type operator-(const __normal_iterator<_Iterator, _Container> &__lhs, const __normal_iterator<_Iterator, _Container> &__rhs) (CompoundStmt 0x9bd7d40 </usr/include/c++/4.6/bits/stl_iterator.h:892:5, col:43>
  (ReturnStmt 0x9bd7d30 <col:7, col:40>
    (CXXOperatorCallExpr 0x9bd7d08 <col:14, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0x9bd7cd0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bd7bc0 0x9bd7470)
      (CallExpr 0x9bd7c40 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9bd7c08 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9bd7bf0 <col:14> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x9bd7940 '__lhs' 'const __normal_iterator<_Iterator, _Container> &')))
      (CallExpr 0x9bd7cb0 <col:29, col:40> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9bd7c78 <col:29, col:35> '<dependent type>' lvalue
          (DeclRefExpr 0x9bd7c5c <col:29> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x9bd7ab0 '__rhs' 'const __normal_iterator<_Iterator, _Container> &'))))))

;
    template <typename _Iterator, typename _Container> inline __normal_iterator<_Iterator, _Container> operator+(typename __normal_iterator<_Iterator, _Container>::difference_type __n, const __normal_iterator<_Iterator, _Container> &__i) (CompoundStmt 0x9bd9940 </usr/include/c++/4.6/bits/stl_iterator.h:898:5, col:74>
  (ReturnStmt 0x9bd9930 <col:7, col:71>
    (CXXUnresolvedConstructExpr 0x9bd9910 <col:14, col:71> '__normal_iterator<_Iterator, _Container>'
      (CXXOperatorCallExpr 0x9bd98e8 <col:55, col:68> '<dependent type>'
        (UnresolvedLookupExpr 0x9bd98b0 <col:66, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bd96f0)
        (CallExpr 0x9bd9878 <col:55, col:64> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9bd9840 <col:55, col:59> '<dependent type>' lvalue
            (DeclRefExpr 0x9bd9828 <col:55> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x9bd95c0 '__i' 'const __normal_iterator<_Iterator, _Container> &')))
        (DeclRefExpr 0x9bd9894 <col:68> 'typename __normal_iterator<_Iterator, _Container>::difference_type' lvalue ParmVar 0x9bd8030 '__n' 'typename __normal_iterator<_Iterator, _Container>::difference_type')))))

;
}
namespace std {
    namespace __debug {
    }
}
namespace __gnu_debug {
    using namespace std::__debug;
}
namespace std {
    template <bool _BoolType = true> struct __iter_swap {
        struct __iter_swap;
        template <typename _ForwardIterator1, typename _ForwardIterator2> static void iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b) (CompoundStmt 0x9bde5d0 </usr/include/c++/4.6/bits/stl_algobase.h:101:9, line:103:9>
  (CallExpr 0x9bde5a8 <line:102:11, col:26> '<dependent type>'
    (UnresolvedLookupExpr 0x9bde510 <col:11> '<overloaded function type>' lvalue (ADL) = '1' 0x9ba4660 0x9baa350)
    (UnaryOperator 0x9bde560 <col:16, col:17> '<dependent type>' prefix '*'
      (DeclRefExpr 0x9bde548 <col:17> '_ForwardIterator1' lvalue ParmVar 0x9bde390 '__a' '_ForwardIterator1'))
    (UnaryOperator 0x9bde590 <col:22, col:23> '<dependent type>' prefix '*'
      (DeclRefExpr 0x9bde574 <col:23> '_ForwardIterator2' lvalue ParmVar 0x9bde3d0 '__b' '_ForwardIterator2'))))

;
    }
template <bool _BoolType> struct __iter_swap {
        struct __iter_swap;
        template <typename _ForwardIterator1, typename _ForwardIterator2> static void iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b) (CompoundStmt 0x9bda348 </usr/include/c++/4.6/bits/stl_algobase.h:86:9, line:92:2>
  (DeclStmt 0x9bda180 <line:87:11, line:88:24>
    0x9bda150 "typedef typename iterator_traits<_ForwardIterator1>::value_type _ValueType1")
  (DeclStmt 0x9bda230 <line:89:11, col:50>
    0x9bda1b0 "_ValueType1 __tmp =
      (ParenExpr 0x9bda218 </usr/include/c++/4.6/bits/move.h:105:30, col:36> '<dependent type>'
        (UnaryOperator 0x9bda200 </usr/include/c++/4.6/bits/stl_algobase.h:89:45, col:46> '<dependent type>' prefix '*'
          (DeclRefExpr 0x9bda1e4 <col:46> '_ForwardIterator1' lvalue ParmVar 0x9bd9e80 '__a' '_ForwardIterator1')))")
  (BinaryOperator 0x9bda2b8 <line:90:11, /usr/include/c++/4.6/bits/move.h:105:36> '<dependent type>' '='
    (UnaryOperator 0x9bda258 </usr/include/c++/4.6/bits/stl_algobase.h:90:11, col:12> '<dependent type>' prefix '*'
      (DeclRefExpr 0x9bda240 <col:12> '_ForwardIterator1' lvalue ParmVar 0x9bd9e80 '__a' '_ForwardIterator1'))
    (ParenExpr 0x9bda2a0 </usr/include/c++/4.6/bits/move.h:105:30, col:36> '<dependent type>'
      (UnaryOperator 0x9bda288 </usr/include/c++/4.6/bits/stl_algobase.h:90:32, col:33> '<dependent type>' prefix '*'
        (DeclRefExpr 0x9bda26c <col:33> '_ForwardIterator2' lvalue ParmVar 0x9bd9ec0 '__b' '_ForwardIterator2'))))
  (BinaryOperator 0x9bda330 <line:91:11, /usr/include/c++/4.6/bits/move.h:105:36> '<dependent type>' '='
    (UnaryOperator 0x9bda2e8 </usr/include/c++/4.6/bits/stl_algobase.h:91:11, col:12> '<dependent type>' prefix '*'
      (DeclRefExpr 0x9bda2d0 <col:12> '_ForwardIterator2' lvalue ParmVar 0x9bd9ec0 '__b' '_ForwardIterator2'))
    (ParenExpr 0x9bda318 </usr/include/c++/4.6/bits/move.h:105:30, col:36> '_ValueType1':'typename iterator_traits<_ForwardIterator1>::value_type' lvalue
      (DeclRefExpr 0x9bda2fc </usr/include/c++/4.6/bits/stl_algobase.h:91:32> '_ValueType1':'typename iterator_traits<_ForwardIterator1>::value_type' lvalue Var 0x9bda1b0 '__tmp' '_ValueType1':'typename iterator_traits<_ForwardIterator1>::value_type'))))

;
    };
    struct __iter_swap {
        struct __iter_swap;
        template <typename _ForwardIterator1, typename _ForwardIterator2> static void iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b) (CompoundStmt 0x9bde5d0 </usr/include/c++/4.6/bits/stl_algobase.h:101:9, line:103:9>
  (CallExpr 0x9bde5a8 <line:102:11, col:26> '<dependent type>'
    (UnresolvedLookupExpr 0x9bde510 <col:11> '<overloaded function type>' lvalue (ADL) = '1' 0x9ba4660 0x9baa350)
    (UnaryOperator 0x9bde560 <col:16, col:17> '<dependent type>' prefix '*'
      (DeclRefExpr 0x9bde548 <col:17> '_ForwardIterator1' lvalue ParmVar 0x9bde390 '__a' '_ForwardIterator1'))
    (UnaryOperator 0x9bde590 <col:22, col:23> '<dependent type>' prefix '*'
      (DeclRefExpr 0x9bde574 <col:23> '_ForwardIterator2' lvalue ParmVar 0x9bde3d0 '__b' '_ForwardIterator2'))))

;
    };
    template <typename _ForwardIterator1, typename _ForwardIterator2> inline void iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b) (CompoundStmt 0x9bdf8b8 </usr/include/c++/4.6/bits/stl_algobase.h:119:5, line:143:5>
  (DeclStmt 0x9bde920 <line:120:7, line:121:13>
    0x9bde8f0 "typedef typename iterator_traits<_ForwardIterator1>::value_type _ValueType1")
  (DeclStmt 0x9bdeab0 <line:122:7, line:123:13>
    0x9bdea80 "typedef typename iterator_traits<_ForwardIterator2>::value_type _ValueType2")
  (DeclStmt 0x9bdebe0 <line:135:7, line:136:17>
    0x9bdebb0 "typedef typename iterator_traits<_ForwardIterator1>::reference _ReferenceType1")
  (DeclStmt 0x9bded30 <line:137:7, line:138:17>
    0x9bded00 "typedef typename iterator_traits<_ForwardIterator2>::reference _ReferenceType2")
  (CallExpr 0x9bdf890 <line:139:7, line:142:20> '<dependent type>'
    (DependentScopeDeclRefExpr 0x9bdf838 <line:139:7, line:142:2> '<dependent type>' lvalue)
    (DeclRefExpr 0x9bdf85c <col:12> '_ForwardIterator1' lvalue ParmVar 0x9bde6b0 '__a' '_ForwardIterator1')
    (DeclRefExpr 0x9bdf874 <col:17> '_ForwardIterator2' lvalue ParmVar 0x9bde6f0 '__b' '_ForwardIterator2')))

;
    template <typename _ForwardIterator1, typename _ForwardIterator2> _ForwardIterator2 swap_ranges(_ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2) (CompoundStmt 0x9bdfda0 </usr/include/c++/4.6/bits/stl_algobase.h:161:5, line:172:5>
  (NullStmt 0x9bdfb78 <line:167:56>)
  (ForStmt 0x9bdfd50 <line:169:7, line:170:35>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9bdfbf8 <line:169:14, col:26> '<dependent type>'
      (UnresolvedLookupExpr 0x9bdfbb8 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bacde0 0x9bc3130 0x9bc62c0)
      (DeclRefExpr 0x9bdfb84 <col:14> '_ForwardIterator1' lvalue ParmVar 0x9bdf9a0 '__first1' '_ForwardIterator1')
      (DeclRefExpr 0x9bdfb9c <col:26> '_ForwardIterator1' lvalue ParmVar 0x9bdf9e0 '__last1' '_ForwardIterator1'))
    (BinaryOperator 0x9bdfc80 <col:35, col:49> '<dependent type>' ','
      (UnaryOperator 0x9bdfc38 <col:35, col:37> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9bdfc1c <col:37> '_ForwardIterator1' lvalue ParmVar 0x9bdf9a0 '__first1' '_ForwardIterator1'))
      (UnaryOperator 0x9bdfc68 <col:47, col:49> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9bdfc4c <col:49> '_ForwardIterator2' lvalue ParmVar 0x9bdfa20 '__first2' '_ForwardIterator2')))
    (CallExpr 0x9bdfd28 <line:170:2, col:35> '<dependent type>'
      (UnresolvedLookupExpr 0x9bdfcc0 <col:2, col:7> '<overloaded function type>' lvalue (no ADL) = '1' 0x9bde7d0)
      (DeclRefExpr 0x9bdfcf4 <col:17> '_ForwardIterator1' lvalue ParmVar 0x9bdf9a0 '__first1' '_ForwardIterator1')
      (DeclRefExpr 0x9bdfd0c <col:27> '_ForwardIterator2' lvalue ParmVar 0x9bdfa20 '__first2' '_ForwardIterator2')))
  (ReturnStmt 0x9bdfd90 <line:171:7, col:14>
    (DeclRefExpr 0x9bdfd74 <col:14> '_ForwardIterator2' lvalue ParmVar 0x9bdfa20 '__first2' '_ForwardIterator2')))

;
    template <typename _Tp = int> inline const int &min(const int &__a, const int &__b)template <typename _Tp = unsigned int> inline const unsigned int &min(const unsigned int &__a, const unsigned int &__b)template <typename _Tp> inline const _Tp &min(const _Tp &__a, const _Tp &__b) (CompoundStmt 0x9be00d8 </usr/include/c++/4.6/bits/stl_algobase.h:188:5, line:195:5>
  (IfStmt 0x9be0090 <line:192:7, line:193:9>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9be0040 <line:192:11, col:17> '<dependent type>'
      (UnresolvedLookupExpr 0x9be0000 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bac3c0 0x9bc2c90 0x9bc5590)
      (DeclRefExpr 0x9bdffd0 <col:11> 'const _Tp' lvalue ParmVar 0x9bdfea0 '__b' 'const _Tp &')
      (DeclRefExpr 0x9bdffe8 <col:17> 'const _Tp' lvalue ParmVar 0x9bdfe50 '__a' 'const _Tp &'))
    (ReturnStmt 0x9be0080 <line:193:2, col:9>
      (DeclRefExpr 0x9be0064 <col:9> 'const _Tp' lvalue ParmVar 0x9bdfea0 '__b' 'const _Tp &'))
    <<<NULL>>>)
  (ReturnStmt 0x9be00c8 <line:194:7, col:14>
    (DeclRefExpr 0x9be00ac <col:14> 'const _Tp' lvalue ParmVar 0x9bdfe50 '__a' 'const _Tp &')))

;
    template <typename _Tp = unsigned int> inline const unsigned int &max(const unsigned int &__a, const unsigned int &__b) (CompoundStmt 0xa0f6378 </usr/include/c++/4.6/bits/stl_algobase.h:211:5, line:218:5>
  (IfStmt 0xa0f6330 <line:215:7, line:216:9>
    <<<NULL>>>
    (BinaryOperator 0xa0f62f0 <line:215:11, col:17> '_Bool' '<'
      (ImplicitCastExpr 0xa0f62d0 <col:11> 'unsigned int':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa0f629c <col:11> 'const unsigned int':'const unsigned int' lvalue ParmVar 0xa0f5ae0 '__a' 'const unsigned int &'))
      (ImplicitCastExpr 0xa0f62e0 <col:17> 'unsigned int':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa0f62b4 <col:17> 'const unsigned int':'const unsigned int' lvalue ParmVar 0xa0f5b30 '__b' 'const unsigned int &')))
    (ReturnStmt 0xa0f6320 <line:216:2, col:9>
      (DeclRefExpr 0xa0f6308 <col:9> 'const unsigned int':'const unsigned int' lvalue ParmVar 0xa0f5b30 '__b' 'const unsigned int &'))
    <<<NULL>>>)
  (ReturnStmt 0xa0f6368 <line:217:7, col:14>
    (DeclRefExpr 0xa0f634c <col:14> 'const unsigned int':'const unsigned int' lvalue ParmVar 0xa0f5ae0 '__a' 'const unsigned int &')))

template <typename _Tp> inline const _Tp &max(const _Tp &__a, const _Tp &__b) (CompoundStmt 0x9be03e8 </usr/include/c++/4.6/bits/stl_algobase.h:211:5, line:218:5>
  (IfStmt 0x9be03a0 <line:215:7, line:216:9>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9be0350 <line:215:11, col:17> '<dependent type>'
      (UnresolvedLookupExpr 0x9be0310 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bac3c0 0x9bc2c90 0x9bc5590)
      (DeclRefExpr 0x9be02e0 <col:11> 'const _Tp' lvalue ParmVar 0x9be0180 '__a' 'const _Tp &')
      (DeclRefExpr 0x9be02f8 <col:17> 'const _Tp' lvalue ParmVar 0x9be01d0 '__b' 'const _Tp &'))
    (ReturnStmt 0x9be0390 <line:216:2, col:9>
      (DeclRefExpr 0x9be0374 <col:9> 'const _Tp' lvalue ParmVar 0x9be01d0 '__b' 'const _Tp &'))
    <<<NULL>>>)
  (ReturnStmt 0x9be03d8 <line:217:7, col:14>
    (DeclRefExpr 0x9be03bc <col:14> 'const _Tp' lvalue ParmVar 0x9be0180 '__a' 'const _Tp &')))

;
    template <typename _Tp, typename _Compare> inline const _Tp &min(const _Tp &__a, const _Tp &__b, _Compare __comp) (CompoundStmt 0x9b94738 </usr/include/c++/4.6/bits/stl_algobase.h:234:5, line:239:5>
  (IfStmt 0x9b946f0 <line:236:7, line:237:9>
    <<<NULL>>>
    (CallExpr 0x9b946a0 <line:236:11, col:26> '<dependent type>'
      (DeclRefExpr 0x9b94654 <col:11> '_Compare' lvalue ParmVar 0x9be0570 '__comp' '_Compare')
      (DeclRefExpr 0x9b9466c <col:18> 'const _Tp' lvalue ParmVar 0x9be0530 '__b' 'const _Tp &')
      (DeclRefExpr 0x9b94684 <col:23> 'const _Tp' lvalue ParmVar 0x9be04e0 '__a' 'const _Tp &'))
    (ReturnStmt 0x9b946e0 <line:237:2, col:9>
      (DeclRefExpr 0x9b946c4 <col:9> 'const _Tp' lvalue ParmVar 0x9be0530 '__b' 'const _Tp &'))
    <<<NULL>>>)
  (ReturnStmt 0x9b94728 <line:238:7, col:14>
    (DeclRefExpr 0x9b9470c <col:14> 'const _Tp' lvalue ParmVar 0x9be04e0 '__a' 'const _Tp &')))

;
    template <typename _Tp, typename _Compare> inline const _Tp &max(const _Tp &__a, const _Tp &__b, _Compare __comp) (CompoundStmt 0x9b94ac8 </usr/include/c++/4.6/bits/stl_algobase.h:255:5, line:260:5>
  (IfStmt 0x9b94a80 <line:257:7, line:258:9>
    <<<NULL>>>
    (CallExpr 0x9b94a30 <line:257:11, col:26> '<dependent type>'
      (DeclRefExpr 0x9b949e4 <col:11> '_Compare' lvalue ParmVar 0x9b948c0 '__comp' '_Compare')
      (DeclRefExpr 0x9b949fc <col:18> 'const _Tp' lvalue ParmVar 0x9b94830 '__a' 'const _Tp &')
      (DeclRefExpr 0x9b94a14 <col:23> 'const _Tp' lvalue ParmVar 0x9b94880 '__b' 'const _Tp &'))
    (ReturnStmt 0x9b94a70 <line:258:2, col:9>
      (DeclRefExpr 0x9b94a54 <col:9> 'const _Tp' lvalue ParmVar 0x9b94880 '__b' 'const _Tp &'))
    <<<NULL>>>)
  (ReturnStmt 0x9b94ab8 <line:259:7, col:14>
    (DeclRefExpr 0x9b94a9c <col:14> 'const _Tp' lvalue ParmVar 0x9b94830 '__a' 'const _Tp &')))

;
    template <typename _Iterator = std::basic_string<wchar_t> *> struct _Niter_base :  _Iter_base<std::basic_string<wchar_t> *, __is_normal_iterator<basic_string<wchar_t> *>::__value> {
        struct _Niter_base;
    }
template <typename _Iterator = unsigned long *> struct _Niter_base :  _Iter_base<unsigned long *, __is_normal_iterator<unsigned long *>::__value> {
        struct _Niter_base;
    }
template <typename _Iterator> struct _Niter_base :  _Iter_base<_Iterator, __is_normal_iterator<_Iterator>::__value> {
        struct _Niter_base;
    };
    template <typename _Iterator = std::basic_string<wchar_t> *> inline typename _Niter_base<basic_string<wchar_t> *>::iterator_type __niter_base(std::basic_string<wchar_t> *__it) (CompoundStmt 0xa0f3c78 </usr/include/c++/4.6/bits/stl_algobase.h:272:5, col:58>
  (ReturnStmt 0xa0f3c68 <col:7, col:55>
    (CallExpr 0xa0f3c38 <col:14, col:55> 'iterator_type':'class std::basic_string<wchar_t> *'
      (ImplicitCastExpr 0xa0f3c28 <col:14, col:43> 'iterator_type (*)(class std::basic_string<wchar_t> *)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0f3bec <col:14, col:43> 'iterator_type (class std::basic_string<wchar_t> *)' lvalue CXXMethod 0xa0f2250 '_S_base' 'iterator_type (class std::basic_string<wchar_t> *)'))
      (ImplicitCastExpr 0xa0f3c58 <col:51> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' <LValueToRValue>
        (DeclRefExpr 0xa0f3c0c <col:51> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' lvalue ParmVar 0xa0f3370 '__it' 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *')))))

template <typename _Iterator = unsigned long *> inline typename _Niter_base<unsigned long *>::iterator_type __niter_base(unsigned long *__it) (CompoundStmt 0xa0d51b8 </usr/include/c++/4.6/bits/stl_algobase.h:272:5, col:58>
  (ReturnStmt 0xa0d51a8 <col:7, col:55>
    (CallExpr 0xa0d5178 <col:14, col:55> 'iterator_type':'unsigned long *'
      (ImplicitCastExpr 0xa0d5168 <col:14, col:43> 'iterator_type (*)(unsigned long *)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0d510c <col:14, col:43> 'iterator_type (unsigned long *)' lvalue CXXMethod 0xa0d2d70 '_S_base' 'iterator_type (unsigned long *)'))
      (ImplicitCastExpr 0xa0d5198 <col:51> 'unsigned long *':'unsigned long *' <LValueToRValue>
        (DeclRefExpr 0xa0d512c <col:51> 'unsigned long *':'unsigned long *' lvalue ParmVar 0xa0d2e80 '__it' 'unsigned long *':'unsigned long *')))))

template <typename _Iterator> inline typename _Niter_base<_Iterator>::iterator_type __niter_base(_Iterator __it) (CompoundStmt 0x9b95350 </usr/include/c++/4.6/bits/stl_algobase.h:272:5, col:58>
  (ReturnStmt 0x9b95340 <col:7, col:55>
    (CallExpr 0x9b95320 <col:14, col:55> '<dependent type>'
      (DependentScopeDeclRefExpr 0x9b952e0 <col:14, col:43> '<dependent type>' lvalue)
      (DeclRefExpr 0x9b95304 <col:51> '_Iterator' lvalue ParmVar 0x9b950e0 '__it' '_Iterator'))))

;
    template <typename _Iterator = std::basic_string<wchar_t> *> struct _Miter_base :  _Iter_base<std::basic_string<wchar_t> *, __is_move_iterator<basic_string<wchar_t> *>::__value> {
        struct _Miter_base;
    }
template <typename _Iterator> struct _Miter_base :  _Iter_base<_Iterator, __is_move_iterator<_Iterator>::__value> {
        struct _Miter_base;
    };
    template <typename _Iterator = std::basic_string<wchar_t> *> inline typename _Miter_base<basic_string<wchar_t> *>::iterator_type __miter_base(std::basic_string<wchar_t> *__it) (CompoundStmt 0xa0f2bf8 </usr/include/c++/4.6/bits/stl_algobase.h:283:5, col:58>
  (ReturnStmt 0xa0f2be8 <col:7, col:55>
    (CallExpr 0xa0f2bb8 <col:14, col:55> 'iterator_type':'class std::basic_string<wchar_t> *'
      (ImplicitCastExpr 0xa0f2ba8 <col:14, col:43> 'iterator_type (*)(class std::basic_string<wchar_t> *)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0f2b4c <col:14, col:43> 'iterator_type (class std::basic_string<wchar_t> *)' lvalue CXXMethod 0xa0f2250 '_S_base' 'iterator_type (class std::basic_string<wchar_t> *)'))
      (ImplicitCastExpr 0xa0f2bd8 <col:51> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' <LValueToRValue>
        (DeclRefExpr 0xa0f2b6c <col:51> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' lvalue ParmVar 0xa0f2360 '__it' 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *')))))

template <typename _Iterator> inline typename _Miter_base<_Iterator>::iterator_type __miter_base(_Iterator __it) (CompoundStmt 0x9be4ce0 </usr/include/c++/4.6/bits/stl_algobase.h:283:5, col:58>
  (ReturnStmt 0x9be4cd0 <col:7, col:55>
    (CallExpr 0x9be4cb0 <col:14, col:55> '<dependent type>'
      (DependentScopeDeclRefExpr 0x9be4c70 <col:14, col:43> '<dependent type>' lvalue)
      (DeclRefExpr 0x9be4c94 <col:51> '_Iterator' lvalue ParmVar 0x9be4a70 '__it' '_Iterator'))))

;
    template <bool = false, bool = false, typename  = std::random_access_iterator_tag> struct __copy_move {
        struct __copy_move;
        template <typename _II, typename _OI> static _OI __copy_m(_II __first, _II __last, _OI __result) (CompoundStmt 0x9be6b78 </usr/include/c++/4.6/bits/stl_algobase.h:325:9, line:334:2>
  (DeclStmt 0x9be6740 <line:326:4, col:68>
    0x9be6710 "typedef typename iterator_traits<_II>::difference_type _Distance")
  (ForStmt 0x9be6b28 <line:327:4, line:332:6>
    (DeclStmt 0x9be6838 <line:327:8, col:40>
      0x9be6770 "_Distance __n =
        (CXXOperatorCallExpr 0x9be6810 <col:24, col:33> '<dependent type>'
          (UnresolvedLookupExpr 0x9be67d8 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
          (DeclRefExpr 0x9be67a4 <col:24> '_II' lvalue ParmVar 0x9be64a0 '__last' '_II')
          (DeclRefExpr 0x9be67bc <col:33> '_II' lvalue ParmVar 0x9be6460 '__first' '_II'))")
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9be68b8 <col:42, col:48> '<dependent type>'
      (UnresolvedLookupExpr 0x9be6878 <col:46, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bad330 0x9bc37b0 0x9bc6740)
      (DeclRefExpr 0x9be6848 <col:42> '_Distance':'typename iterator_traits<_II>::difference_type' lvalue Var 0x9be6770 '__n' '_Distance':'typename iterator_traits<_II>::difference_type')
      (IntegerLiteral 0x9be6860 <col:48> 'int' 0))
    (UnaryOperator 0x9be68f8 <col:51, col:53> '<dependent type>' prefix '--'
      (DeclRefExpr 0x9be68dc <col:53> '_Distance':'typename iterator_traits<_II>::difference_type' lvalue Var 0x9be6770 '__n' '_Distance':'typename iterator_traits<_II>::difference_type'))
    (CompoundStmt 0x9be6b08 <line:328:6, line:332:6>
      (BinaryOperator 0x9be6a90 <line:329:8, col:21> '<dependent type>' '='
        (UnaryOperator 0x9be6928 <col:8, col:9> '<dependent type>' prefix '*'
          (DeclRefExpr 0x9be690c <col:9> '_OI' lvalue ParmVar 0x9be64e0 '__result' '_OI'))
        (UnaryOperator 0x9be6958 <col:20, col:21> '<dependent type>' prefix '*'
          (DeclRefExpr 0x9be693c <col:21> '_II' lvalue ParmVar 0x9be6460 '__first' '_II')))
      (UnaryOperator 0x9be6ac0 <line:330:8, col:10> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9be6aa8 <col:10> '_II' lvalue ParmVar 0x9be6460 '__first' '_II'))
      (UnaryOperator 0x9be6af0 <line:331:8, col:10> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9be6ad4 <col:10> '_OI' lvalue ParmVar 0x9be64e0 '__result' '_OI'))))
  (ReturnStmt 0x9be6b68 <line:333:4, col:11>
    (DeclRefExpr 0x9be6b4c <col:11> '_OI' lvalue ParmVar 0x9be64e0 '__result' '_OI')))

;
        inline std::__copy_move<false, false, std::random_access_iterator_tag> &operator=(const std::__copy_move<false, false, std::random_access_iterator_tag> &) throw();
    }
template <bool, bool, typename > struct __copy_move {
        struct __copy_move;
        template <typename _II, typename _OI> static _OI __copy_m(_II __first, _II __last, _OI __result) (CompoundStmt 0x9be54f8 </usr/include/c++/4.6/bits/stl_algobase.h:297:9, line:301:2>
  (ForStmt 0x9be54a8 <line:298:4, line:299:19>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9be5390 <line:298:11, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0x9be5350 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bacde0 0x9bc3130 0x9bc62c0)
      (DeclRefExpr 0x9be5320 <col:11> '_II' lvalue ParmVar 0x9be5130 '__first' '_II')
      (DeclRefExpr 0x9be5338 <col:22> '_II' lvalue ParmVar 0x9be5170 '__last' '_II'))
    (BinaryOperator 0x9be5418 <col:30, col:44> '<dependent type>' ','
      (UnaryOperator 0x9be53d0 <col:30, col:32> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9be53b4 <col:32> '_OI' lvalue ParmVar 0x9be51b0 '__result' '_OI'))
      (UnaryOperator 0x9be5400 <col:42, col:44> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9be53e4 <col:44> '_II' lvalue ParmVar 0x9be5130 '__first' '_II')))
    (BinaryOperator 0x9be5490 <line:299:6, col:19> '<dependent type>' '='
      (UnaryOperator 0x9be5448 <col:6, col:7> '<dependent type>' prefix '*'
        (DeclRefExpr 0x9be5430 <col:7> '_OI' lvalue ParmVar 0x9be51b0 '__result' '_OI'))
      (UnaryOperator 0x9be5478 <col:18, col:19> '<dependent type>' prefix '*'
        (DeclRefExpr 0x9be545c <col:19> '_II' lvalue ParmVar 0x9be5130 '__first' '_II'))))
  (ReturnStmt 0x9be54e8 <line:300:4, col:11>
    (DeclRefExpr 0x9be54cc <col:11> '_OI' lvalue ParmVar 0x9be51b0 '__result' '_OI')))

;
    };
    struct __copy_move {
        struct __copy_move;
        template <typename _II, typename _OI> static _OI __copy_m(_II __first, _II __last, _OI __result) (CompoundStmt 0x9be6b78 </usr/include/c++/4.6/bits/stl_algobase.h:325:9, line:334:2>
  (DeclStmt 0x9be6740 <line:326:4, col:68>
    0x9be6710 "typedef typename iterator_traits<_II>::difference_type _Distance")
  (ForStmt 0x9be6b28 <line:327:4, line:332:6>
    (DeclStmt 0x9be6838 <line:327:8, col:40>
      0x9be6770 "_Distance __n =
        (CXXOperatorCallExpr 0x9be6810 <col:24, col:33> '<dependent type>'
          (UnresolvedLookupExpr 0x9be67d8 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
          (DeclRefExpr 0x9be67a4 <col:24> '_II' lvalue ParmVar 0x9be64a0 '__last' '_II')
          (DeclRefExpr 0x9be67bc <col:33> '_II' lvalue ParmVar 0x9be6460 '__first' '_II'))")
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9be68b8 <col:42, col:48> '<dependent type>'
      (UnresolvedLookupExpr 0x9be6878 <col:46, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bad330 0x9bc37b0 0x9bc6740)
      (DeclRefExpr 0x9be6848 <col:42> '_Distance':'typename iterator_traits<_II>::difference_type' lvalue Var 0x9be6770 '__n' '_Distance':'typename iterator_traits<_II>::difference_type')
      (IntegerLiteral 0x9be6860 <col:48> 'int' 0))
    (UnaryOperator 0x9be68f8 <col:51, col:53> '<dependent type>' prefix '--'
      (DeclRefExpr 0x9be68dc <col:53> '_Distance':'typename iterator_traits<_II>::difference_type' lvalue Var 0x9be6770 '__n' '_Distance':'typename iterator_traits<_II>::difference_type'))
    (CompoundStmt 0x9be6b08 <line:328:6, line:332:6>
      (BinaryOperator 0x9be6a90 <line:329:8, col:21> '<dependent type>' '='
        (UnaryOperator 0x9be6928 <col:8, col:9> '<dependent type>' prefix '*'
          (DeclRefExpr 0x9be690c <col:9> '_OI' lvalue ParmVar 0x9be64e0 '__result' '_OI'))
        (UnaryOperator 0x9be6958 <col:20, col:21> '<dependent type>' prefix '*'
          (DeclRefExpr 0x9be693c <col:21> '_II' lvalue ParmVar 0x9be6460 '__first' '_II')))
      (UnaryOperator 0x9be6ac0 <line:330:8, col:10> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9be6aa8 <col:10> '_II' lvalue ParmVar 0x9be6460 '__first' '_II'))
      (UnaryOperator 0x9be6af0 <line:331:8, col:10> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9be6ad4 <col:10> '_OI' lvalue ParmVar 0x9be64e0 '__result' '_OI'))))
  (ReturnStmt 0x9be6b68 <line:333:4, col:11>
    (DeclRefExpr 0x9be6b4c <col:11> '_OI' lvalue ParmVar 0x9be64e0 '__result' '_OI')))

;
        inline std::__copy_move<false, false, std::random_access_iterator_tag> &operator=(const std::__copy_move<false, false, std::random_access_iterator_tag> &) throw();
    };
    struct __copy_move {
        struct __copy_move;
        template <typename _Tp> static _Tp *__copy_m(const _Tp *__first, const _Tp *__last, _Tp *__result) (CompoundStmt 0x9be7e38 </usr/include/c++/4.6/bits/stl_algobase.h:363:9, line:368:2>
  (DeclStmt 0x9be7ab8 <line:364:4, col:43>
    0x9be79f0 "const ptrdiff_t _Num =
      (CXXOperatorCallExpr 0x9be7a90 <col:27, col:36> '<dependent type>'
        (UnresolvedLookupExpr 0x9be7a58 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
        (DeclRefExpr 0x9be7a24 <col:27> 'const _Tp *' lvalue ParmVar 0x9be70c0 '__last' 'const _Tp *')
        (DeclRefExpr 0x9be7a3c <col:36> 'const _Tp *' lvalue ParmVar 0x9be7070 '__first' 'const _Tp *'))")
  (IfStmt 0x9be7d78 <line:365:4, line:366:61>
    <<<NULL>>>
    (ImplicitCastExpr 0x9be7af0 <line:365:8> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x9be7ae0 <col:8> 'ptrdiff_t':'int' <LValueToRValue>
        (DeclRefExpr 0x9be7ac8 <col:8> 'const ptrdiff_t':'const int' lvalue Var 0x9be79f0 '_Num' 'const ptrdiff_t':'const int')))
    (CallExpr 0x9be7d50 <line:366:6, col:61> '<dependent type>'
      (DeclRefExpr 0x9be7c94 <col:6> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9be7b30 '__builtin_memmove' 'void *(void *, const void *, unsigned int)')
      (DeclRefExpr 0x9be7cac <col:24> '_Tp *' lvalue ParmVar 0x9be7150 '__result' '_Tp *')
      (DeclRefExpr 0x9be7cc4 <col:34> 'const _Tp *' lvalue ParmVar 0x9be7070 '__first' 'const _Tp *')
      (BinaryOperator 0x9be7d38 <col:43, col:57> 'unsigned int' '*'
        (UnaryExprOrTypeTraitExpr 0x9be7ce8 <col:43, col:53> 'unsigned int' sizeof '_Tp')
        (ImplicitCastExpr 0x9be7d28 <col:57> 'unsigned int' <IntegralCast>
          (ImplicitCastExpr 0x9be7d18 <col:57> 'ptrdiff_t':'int' <LValueToRValue>
            (DeclRefExpr 0x9be7d00 <col:57> 'const ptrdiff_t':'const int' lvalue Var 0x9be79f0 '_Num' 'const ptrdiff_t':'const int')))))
    <<<NULL>>>)
  (ReturnStmt 0x9be7e28 <line:367:4, col:22>
    (CXXOperatorCallExpr 0x9be7e00 <col:11, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0x9be7dc8 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0)
      (DeclRefExpr 0x9be7d94 <col:11> '_Tp *' lvalue ParmVar 0x9be7150 '__result' '_Tp *')
      (DeclRefExpr 0x9be7dac <col:22> 'const ptrdiff_t':'const int' lvalue Var 0x9be79f0 '_Num' 'const ptrdiff_t':'const int'))))

;
    };
    template <bool _IsMove, typename _II, typename _OI> inline _OI __copy_move_a(_II __first, _II __last, _OI __result) (CompoundStmt 0x9be8f38 </usr/include/c++/4.6/bits/stl_algobase.h:374:5, line:385:5>
  (DeclStmt 0x9be8250 <line:375:7, col:68>
    0x9be8220 "typedef typename iterator_traits<_II>::value_type _ValueTypeI")
  (DeclStmt 0x9be83e0 <line:376:7, col:68>
    0x9be83b0 "typedef typename iterator_traits<_OI>::value_type _ValueTypeO")
  (DeclStmt 0x9be8530 <line:377:7, col:73>
    0x9be8500 "typedef typename iterator_traits<_II>::iterator_category _Category")
  (DeclStmt 0x9be8c90 <line:378:7, line:381:58>
    0x9be8550 "const bool __simple =
      (ParenExpr 0x9be8c78 <line:378:29, line:381:57> '<dependent type>'
        (BinaryOperator 0x9be8c60 <line:378:30, line:381:50> '<dependent type>' '&&'
          (BinaryOperator 0x9be87e8 <line:378:30, line:380:45> '<dependent type>' '&&'
            (BinaryOperator 0x9be86c8 <line:378:30, line:379:45> '<dependent type>' '&&'
              (UnaryTypeTraitExpr 0x9be85a8 <line:378:30, col:54> '_Bool')
              (DependentScopeDeclRefExpr 0x9be86a0 <line:379:26, col:45> '<dependent type>' lvalue))
            (DependentScopeDeclRefExpr 0x9be87c0 <line:380:26, col:45> '<dependent type>' lvalue))
          (DependentScopeDeclRefExpr 0x9be8c38 <line:381:12, col:50> '<dependent type>' lvalue)))")
  (ReturnStmt 0x9be8f28 <line:383:7, line:384:70>
    (CallExpr 0x9be8f00 <line:383:14, line:384:70> '<dependent type>'
      (DependentScopeDeclRefExpr 0x9be8e90 <line:383:14, line:384:36> '<dependent type>' lvalue)
      (DeclRefExpr 0x9be8eb4 <col:45> '_II' lvalue ParmVar 0x9be7f60 '__first' '_II')
      (DeclRefExpr 0x9be8ecc <col:54> '_II' lvalue ParmVar 0x9be7fa0 '__last' '_II')
      (DeclRefExpr 0x9be8ee4 <col:62> '_OI' lvalue ParmVar 0x9be7fe0 '__result' '_OI'))))

;
    template <typename _CharT = char> struct char_traits {
        struct char_traits;
        typedef char char_type;
        typedef int int_type;
        typedef streampos pos_type;
        typedef streamoff off_type;
        typedef mbstate_t state_type;
        static void assign(char_type &__c1, const char_type &__c2) (CompoundStmt 0x9c1cf98 </usr/include/c++/4.6/bits/char_traits.h:244:7, col:22>
  (BinaryOperator 0x9c1cf80 <col:9, col:16> 'char_type':'char' lvalue '='
    (DeclRefExpr 0x9c1cf40 <col:9> 'char_type':'char' lvalue ParmVar 0x9c1a310 '__c1' 'char_type &')
    (ImplicitCastExpr 0x9c1cf70 <col:16> 'char_type':'char' <LValueToRValue>
      (DeclRefExpr 0x9c1cf58 <col:16> 'const char_type':'const char' lvalue ParmVar 0x9c1a3a0 '__c2' 'const char_type &'))))


        static bool eq(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x9c1d048 </usr/include/c++/4.6/bits/char_traits.h:248:7, col:30>
  (ReturnStmt 0x9c1d038 <col:9, col:24>
    (BinaryOperator 0x9c1d020 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x9c1cff0 <col:16> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9c1cfe0 <col:16> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9c1cfac <col:16> 'const char_type':'const char' lvalue ParmVar 0x9c1a4c0 '__c1' 'const char_type &')))
      (ImplicitCastExpr 0x9c1d010 <col:24> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9c1d000 <col:24> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9c1cfc4 <col:24> 'const char_type':'const char' lvalue ParmVar 0x9c1a510 '__c2' 'const char_type &'))))))


        static bool lt(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x9c1d0f8 </usr/include/c++/4.6/bits/char_traits.h:252:7, col:29>
  (ReturnStmt 0x9c1d0e8 <col:9, col:23>
    (BinaryOperator 0x9c1d0d0 <col:16, col:23> '_Bool' '<'
      (ImplicitCastExpr 0x9c1d0a0 <col:16> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9c1d090 <col:16> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9c1d05c <col:16> 'const char_type':'const char' lvalue ParmVar 0x9c1ac50 '__c1' 'const char_type &')))
      (ImplicitCastExpr 0x9c1d0c0 <col:23> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9c1d0b0 <col:23> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9c1d074 <col:23> 'const char_type':'const char' lvalue ParmVar 0x9c1aca0 '__c2' 'const char_type &'))))))


        static int compare(const char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9c1d220 </usr/include/c++/4.6/bits/char_traits.h:256:7, col:51>
  (ReturnStmt 0x9c1d210 <col:9, col:48>
    (CallExpr 0x9c1d198 <col:16, col:48> 'int'
      (ImplicitCastExpr 0x9c1d188 <col:16> 'int (*)(const void *, const void *, unsigned int)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9c1d10c <col:16> 'int (const void *, const void *, unsigned int)' lvalue Function 0x9bf74d0 '__builtin_memcmp' 'int (const void *, const void *, unsigned int)'))
      (ImplicitCastExpr 0x9c1d1d0 <col:33> 'const void *' <BitCast>
        (ImplicitCastExpr 0x9c1d1c0 <col:33> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9c1d124 <col:33> 'const char_type *' lvalue ParmVar 0x9c1ada0 '__s1' 'const char_type *')))
      (ImplicitCastExpr 0x9c1d1f0 <col:39> 'const void *' <BitCast>
        (ImplicitCastExpr 0x9c1d1e0 <col:39> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9c1d13c <col:39> 'const char_type *' lvalue ParmVar 0x9c1adf0 '__s2' 'const char_type *')))
      (ImplicitCastExpr 0x9c1d200 <col:45> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9c1d154 <col:45> 'size_t':'unsigned int' lvalue ParmVar 0x9c1ae30 '__n' 'size_t':'unsigned int')))))


        static size_t length(const char_type *__s) (CompoundStmt 0x9c1d3b8 </usr/include/c++/4.6/bits/char_traits.h:260:7, col:39>
  (ReturnStmt 0x9c1d3a8 <col:9, col:36>
    (CallExpr 0x9c1d378 <col:16, col:36> 'unsigned int'
      (ImplicitCastExpr 0x9c1d368 <col:16> 'unsigned int (*)(const char *)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9c1d314 <col:16> 'unsigned int (const char *)' lvalue Function 0x9c1d240 '__builtin_strlen' 'unsigned int (const char *)'))
      (ImplicitCastExpr 0x9c1d398 <col:33> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9c1d32c <col:33> 'const char_type *' lvalue ParmVar 0x9c1af70 '__s' 'const char_type *')))))


        static const char_type *find(const char_type *__s, size_t __n, const char_type &__a) (CompoundStmt 0x9c1d6a8 </usr/include/c++/4.6/bits/char_traits.h:264:7, col:80>
  (ReturnStmt 0x9c1d698 <col:9, col:77>
    (CXXStaticCastExpr 0x9c1d680 <col:16, col:77> 'const char_type *' static_cast<const char_type *> <BitCast>
      (CallExpr 0x9c1d5f8 <col:46, col:76> 'void *'
        (ImplicitCastExpr 0x9c1d5e8 <col:46> 'void *(*)(const void *, int, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9c1d564 <col:46> 'void *(const void *, int, unsigned int)' lvalue Function 0x9c1d400 '__builtin_memchr' 'void *(const void *, int, unsigned int)'))
        (ImplicitCastExpr 0x9c1d630 <col:63> 'const void *' <BitCast>
          (ImplicitCastExpr 0x9c1d620 <col:63> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x9c1d57c <col:63> 'const char_type *' lvalue ParmVar 0x9c1b090 '__s' 'const char_type *')))
        (ImplicitCastExpr 0x9c1d650 <col:68> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9c1d640 <col:68> 'char_type':'char' <LValueToRValue>
            (DeclRefExpr 0x9c1d594 <col:68> 'const char_type':'const char' lvalue ParmVar 0x9c1b120 '__a' 'const char_type &')))
        (ImplicitCastExpr 0x9c1d660 <col:73> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9c1d5ac <col:73> 'size_t':'unsigned int' lvalue ParmVar 0x9c1b0d0 '__n' 'size_t':'unsigned int'))))))


        static char_type *move(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9c1d7f8 </usr/include/c++/4.6/bits/char_traits.h:268:7, col:77>
  (ReturnStmt 0x9c1d7e8 <col:9, col:74>
    (CXXStaticCastExpr 0x9c1d7d0 <col:16, col:74> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0x9c1d748 <col:40, col:73> 'void *'
        (ImplicitCastExpr 0x9c1d738 <col:40> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9c1d6bc <col:40> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9be7b30 '__builtin_memmove' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0x9c1d780 <col:58> 'void *' <BitCast>
          (ImplicitCastExpr 0x9c1d770 <col:58> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x9c1d6d4 <col:58> 'char_type *' lvalue ParmVar 0x9c1b280 '__s1' 'char_type *')))
        (ImplicitCastExpr 0x9c1d7a0 <col:64> 'const void *' <BitCast>
          (ImplicitCastExpr 0x9c1d790 <col:64> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x9c1d6ec <col:64> 'const char_type *' lvalue ParmVar 0x9c1b2d0 '__s2' 'const char_type *')))
        (ImplicitCastExpr 0x9c1d7b0 <col:70> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9c1d704 <col:70> 'size_t':'unsigned int' lvalue ParmVar 0x9c1b310 '__n' 'size_t':'unsigned int'))))))


        static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9c1da98 </usr/include/c++/4.6/bits/char_traits.h:272:7, col:76>
  (ReturnStmt 0x9c1da88 <col:9, col:73>
    (CXXStaticCastExpr 0x9c1da70 <col:16, col:73> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0x9c1d9e8 <col:40, col:72> 'void *'
        (ImplicitCastExpr 0x9c1d9d8 <col:40> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9c1d974 <col:40> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9c1d810 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0x9c1da20 <col:57> 'void *' <BitCast>
          (ImplicitCastExpr 0x9c1da10 <col:57> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x9c1d98c <col:57> 'char_type *' lvalue ParmVar 0x9c1b450 '__s1' 'char_type *')))
        (ImplicitCastExpr 0x9c1da40 <col:63> 'const void *' <BitCast>
          (ImplicitCastExpr 0x9c1da30 <col:63> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x9c1d9a4 <col:63> 'const char_type *' lvalue ParmVar 0x9c1b4a0 '__s2' 'const char_type *')))
        (ImplicitCastExpr 0x9c1da50 <col:69> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9c1d9bc <col:69> 'size_t':'unsigned int' lvalue ParmVar 0x9c1b4e0 '__n' 'size_t':'unsigned int'))))))


        static char_type *assign(char_type *__s, size_t __n, char_type __a) (CompoundStmt 0x9c1dbe8 </usr/include/c++/4.6/bits/char_traits.h:276:7, col:74>
  (ReturnStmt 0x9c1dbd8 <col:9, col:71>
    (CXXStaticCastExpr 0x9c1dbc0 <col:16, col:71> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0x9c1db38 <col:40, col:70> 'void *'
        (ImplicitCastExpr 0x9c1db28 <col:40> 'void *(*)(void *, int, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9c1daac <col:40> 'void *(void *, int, unsigned int)' lvalue Function 0x9bf2ba0 '__builtin_memset' 'void *(void *, int, unsigned int)'))
        (ImplicitCastExpr 0x9c1db70 <col:57> 'void *' <BitCast>
          (ImplicitCastExpr 0x9c1db60 <col:57> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x9c1dac4 <col:57> 'char_type *' lvalue ParmVar 0x9c1b5c0 '__s' 'char_type *')))
        (ImplicitCastExpr 0x9c1db90 <col:62> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9c1db80 <col:62> 'char_type':'char' <LValueToRValue>
            (DeclRefExpr 0x9c1dadc <col:62> 'char_type':'char' lvalue ParmVar 0x9c1b640 '__a' 'char_type':'char')))
        (ImplicitCastExpr 0x9c1dba0 <col:67> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9c1daf4 <col:67> 'size_t':'unsigned int' lvalue ParmVar 0x9c1b600 '__n' 'size_t':'unsigned int'))))))


        static char_type to_char_type(const int_type &__c) (CompoundStmt 0x9c1dc68 </usr/include/c++/4.6/bits/char_traits.h:280:7, col:45>
  (ReturnStmt 0x9c1dc58 <col:9, col:42>
    (CXXStaticCastExpr 0x9c1dc40 <col:16, col:42> 'char_type':'char' static_cast<char_type> <NoOp>
      (ImplicitCastExpr 0x9c1dc30 <col:39> 'char_type':'char' <IntegralCast>
        (ImplicitCastExpr 0x9c1dc20 <col:39> 'int_type':'int' <LValueToRValue>
          (DeclRefExpr 0x9c1dbfc <col:39> 'const int_type':'const int' lvalue ParmVar 0x9c1b7d0 '__c' 'const int_type &'))))))


        static int_type to_int_type(const char_type &__c) (CompoundStmt 0x9c1dd20 </usr/include/c++/4.6/bits/char_traits.h:286:7, col:72>
  (ReturnStmt 0x9c1dd10 <col:9, col:69>
    (CXXStaticCastExpr 0x9c1dcf8 <col:16, col:69> 'int_type':'int' static_cast<int_type> <NoOp>
      (ImplicitCastExpr 0x9c1dce8 <col:38, col:68> 'int_type':'int' <IntegralCast>
        (CXXStaticCastExpr 0x9c1dcc8 <col:38, col:68> 'unsigned char' static_cast<unsigned char> <NoOp>
          (ImplicitCastExpr 0x9c1dcb8 <col:65> 'unsigned char' <IntegralCast>
            (ImplicitCastExpr 0x9c1dca8 <col:65> 'char_type':'char' <LValueToRValue>
              (DeclRefExpr 0x9c1dc7c <col:65> 'const char_type':'const char' lvalue ParmVar 0x9c1b8f0 '__c' 'const char_type &'))))))))


        static bool eq_int_type(const int_type &__c1, const int_type &__c2) (CompoundStmt 0x9c1ddb0 </usr/include/c++/4.6/bits/char_traits.h:290:7, col:30>
  (ReturnStmt 0x9c1dda0 <col:9, col:24>
    (BinaryOperator 0x9c1dd88 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x9c1dd68 <col:16> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0x9c1dd34 <col:16> 'const int_type':'const int' lvalue ParmVar 0x9c1ba10 '__c1' 'const int_type &'))
      (ImplicitCastExpr 0x9c1dd78 <col:24> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0x9c1dd4c <col:24> 'const int_type':'const int' lvalue ParmVar 0x9c1ba60 '__c2' 'const int_type &')))))


        static int_type eof() (CompoundStmt 0x9c1f3f0 </usr/include/c++/4.6/bits/char_traits.h:294:7, col:59>
  (ReturnStmt 0x9c1f3e0 <col:9, col:56>
    (CXXStaticCastExpr 0x9c1f3c8 <col:16, col:56> 'int_type':'int' static_cast<int_type> <NoOp>
      (UnaryOperator 0x9c1dde0 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:1149:28, col:29> 'int' prefix '-'
        (IntegerLiteral 0x9c1ddc8 <col:29> 'int' 1)))))


        static int_type not_eof(const int_type &__c) (CompoundStmt 0x9c1f558 </usr/include/c++/4.6/bits/char_traits.h:298:7, col:42>
  (ReturnStmt 0x9c1f548 <col:9, col:37>
    (ConditionalOperator 0x9c1f528 <col:16, col:37> 'int'
      (ParenExpr 0x9c1f4d0 <col:16, col:29> '_Bool'
        (BinaryOperator 0x9c1f4b8 <col:17, col:28> '_Bool' '=='
          (ImplicitCastExpr 0x9c1f4a8 <col:17> 'int_type':'int' <LValueToRValue>
            (DeclRefExpr 0x9c1f404 <col:17> 'const int_type':'const int' lvalue ParmVar 0x9c1ce20 '__c' 'const int_type &'))
          (CallExpr 0x9c1f488 <col:24, col:28> 'int_type':'int'
            (ImplicitCastExpr 0x9c1f478 <col:24> 'int_type (*)(void)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9c1f41c <col:24> 'int_type (void)' lvalue CXXMethod 0x9c1bba0 'eof' 'int_type (void)')))))
      (IntegerLiteral 0x9c1f4e8 <col:33> 'int' 0)
      (ImplicitCastExpr 0x9c1f518 <col:37> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0x9c1f500 <col:37> 'const int_type':'const int' lvalue ParmVar 0x9c1ce20 '__c' 'const int_type &')))))


    }
template <typename _CharT = wchar_t> struct char_traits {
        struct char_traits;
        typedef wchar_t char_type;
        typedef wint_t int_type;
        typedef streamoff off_type;
        typedef wstreampos pos_type;
        typedef mbstate_t state_type;
        static void assign(char_type &__c1, const char_type &__c2) (CompoundStmt 0x9c20ce8 </usr/include/c++/4.6/bits/char_traits.h:315:7, col:22>
  (BinaryOperator 0x9c20cd0 <col:9, col:16> 'char_type':'wchar_t' lvalue '='
    (DeclRefExpr 0x9c20c90 <col:9> 'char_type':'wchar_t' lvalue ParmVar 0x9c1f910 '__c1' 'char_type &')
    (ImplicitCastExpr 0x9c20cc0 <col:16> 'char_type':'wchar_t' <LValueToRValue>
      (DeclRefExpr 0x9c20ca8 <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0x9c1f9a0 '__c2' 'const char_type &'))))


        static bool eq(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x9c20d78 </usr/include/c++/4.6/bits/char_traits.h:319:7, col:30>
  (ReturnStmt 0x9c20d68 <col:9, col:24>
    (BinaryOperator 0x9c20d50 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x9c20d30 <col:16> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9c20cfc <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0x9c1fac0 '__c1' 'const char_type &'))
      (ImplicitCastExpr 0x9c20d40 <col:24> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9c20d14 <col:24> 'const char_type':'const wchar_t' lvalue ParmVar 0x9c1fb10 '__c2' 'const char_type &')))))


        static bool lt(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x9c20e08 </usr/include/c++/4.6/bits/char_traits.h:323:7, col:29>
  (ReturnStmt 0x9c20df8 <col:9, col:23>
    (BinaryOperator 0x9c20de0 <col:16, col:23> '_Bool' '<'
      (ImplicitCastExpr 0x9c20dc0 <col:16> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9c20d8c <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0x9c1fc30 '__c1' 'const char_type &'))
      (ImplicitCastExpr 0x9c20dd0 <col:23> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9c20da4 <col:23> 'const char_type':'const wchar_t' lvalue ParmVar 0x9c1fc80 '__c2' 'const char_type &')))))


        static int compare(const char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9c20f70 </usr/include/c++/4.6/bits/char_traits.h:327:7, col:42>
  (ReturnStmt 0x9c20f60 <col:9, col:39>
    (CallExpr 0x9c20f08 <col:16, col:39> 'int'
      (ImplicitCastExpr 0x9c20ef8 <col:16> 'int (*)(const wchar_t *, const wchar_t *, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9c20e9c <col:16> 'int (const wchar_t *, const wchar_t *, size_t) throw()' lvalue Function 0x9b5b500 'wmemcmp' 'int (const wchar_t *, const wchar_t *, size_t) throw()' (UsingShadow 0x9c0b3b0 'wmemcmp')))
      (ImplicitCastExpr 0x9c20f30 <col:24> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9c20e54 <col:24> 'const char_type *' lvalue ParmVar 0x9c1fd80 '__s1' 'const char_type *'))
      (ImplicitCastExpr 0x9c20f40 <col:30> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9c20e6c <col:30> 'const char_type *' lvalue ParmVar 0x9c1fdd0 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0x9c20f50 <col:36> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9c20e84 <col:36> 'size_t':'unsigned int' lvalue ParmVar 0x9c1fe10 '__n' 'size_t':'unsigned int')))))


        static size_t length(const char_type *__s) (CompoundStmt 0x9c21078 </usr/include/c++/4.6/bits/char_traits.h:331:7, col:29>
  (ReturnStmt 0x9c21068 <col:9, col:26>
    (CallExpr 0x9c21038 <col:16, col:26> 'size_t':'unsigned int'
      (ImplicitCastExpr 0x9c21028 <col:16> 'size_t (*)(const wchar_t *) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9c20fd4 <col:16> 'size_t (const wchar_t *) throw()' lvalue Function 0x9b5ae30 'wcslen' 'size_t (const wchar_t *) throw()' (UsingShadow 0x9c0ad90 'wcslen')))
      (ImplicitCastExpr 0x9c21058 <col:23> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9c20fbc <col:23> 'const char_type *' lvalue ParmVar 0x9c1ff20 '__s' 'const char_type *')))))


        static const char_type *find(const char_type *__s, size_t __n, const char_type &__a) (CompoundStmt 0x9c211b8 </usr/include/c++/4.6/bits/char_traits.h:335:7, col:40>
  (ReturnStmt 0x9c211a8 <col:9, col:37>
    (ImplicitCastExpr 0x9c21198 <col:16, col:37> 'const char_type *' <NoOp>
      (CallExpr 0x9c21140 <col:16, col:37> 'wchar_t *'
        (ImplicitCastExpr 0x9c21130 <col:16> 'wchar_t *(*)(const wchar_t *, wchar_t, size_t) throw()' <FunctionToPointerDecay>
          (DeclRefExpr 0x9c21110 <col:16> 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' lvalue Function 0x9b5b350 'wmemchr' 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' (UsingShadow 0x9c0b810 'wmemchr')))
        (ImplicitCastExpr 0x9c21168 <col:24> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9c210c8 <col:24> 'const char_type *' lvalue ParmVar 0x9c20020 '__s' 'const char_type *'))
        (ImplicitCastExpr 0x9c21178 <col:29> 'char_type':'wchar_t' <LValueToRValue>
          (DeclRefExpr 0x9c210e0 <col:29> 'const char_type':'const wchar_t' lvalue ParmVar 0x9c200b0 '__a' 'const char_type &'))
        (ImplicitCastExpr 0x9c21188 <col:34> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9c210f8 <col:34> 'size_t':'unsigned int' lvalue ParmVar 0x9c20060 '__n' 'size_t':'unsigned int'))))))


        static char_type *move(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9c21320 </usr/include/c++/4.6/bits/char_traits.h:339:7, col:43>
  (ReturnStmt 0x9c21310 <col:9, col:40>
    (CallExpr 0x9c212b8 <col:16, col:40> 'wchar_t *'
      (ImplicitCastExpr 0x9c212a8 <col:16> 'wchar_t *(*)(wchar_t *, const wchar_t *, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9c2124c <col:16> 'wchar_t *(wchar_t *, const wchar_t *, size_t) throw()' lvalue Function 0x9b5b850 'wmemmove' 'wchar_t *(wchar_t *, const wchar_t *, size_t) throw()' (UsingShadow 0x9c0b490 'wmemmove')))
      (ImplicitCastExpr 0x9c212e0 <col:25> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9c21204 <col:25> 'char_type *' lvalue ParmVar 0x9c20210 '__s1' 'char_type *'))
      (ImplicitCastExpr 0x9c212f0 <col:31> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9c2121c <col:31> 'const char_type *' lvalue ParmVar 0x9c20260 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0x9c21300 <col:37> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9c21234 <col:37> 'size_t':'unsigned int' lvalue ParmVar 0x9c202a0 '__n' 'size_t':'unsigned int')))))


        static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9c21aa0 </usr/include/c++/4.6/bits/char_traits.h:343:7, col:42>
  (ReturnStmt 0x9c21a90 <col:9, col:39>
    (CallExpr 0x9c21a38 <col:16, col:39> 'wchar_t *'
      (ImplicitCastExpr 0x9c21a28 <col:16> 'wchar_t *(*)(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9c219f0 <col:16> 'wchar_t *(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' lvalue Function 0x9b5b6b0 'wmemcpy' 'wchar_t *(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' (UsingShadow 0x9c0b420 'wmemcpy')))
      (ImplicitCastExpr 0x9c21a60 <col:24> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9c2136c <col:24> 'char_type *' lvalue ParmVar 0x9c203d0 '__s1' 'char_type *'))
      (ImplicitCastExpr 0x9c21a70 <col:30> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9c21384 <col:30> 'const char_type *' lvalue ParmVar 0x9c20420 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0x9c21a80 <col:36> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9c2139c <col:36> 'size_t':'unsigned int' lvalue ParmVar 0x9c20460 '__n' 'size_t':'unsigned int')))))


        static char_type *assign(char_type *__s, size_t __n, char_type __a) (CompoundStmt 0x9c21c00 </usr/include/c++/4.6/bits/char_traits.h:347:7, col:40>
  (ReturnStmt 0x9c21bf0 <col:9, col:37>
    (CallExpr 0x9c21b98 <col:16, col:37> 'wchar_t *'
      (ImplicitCastExpr 0x9c21b88 <col:16> 'wchar_t *(*)(wchar_t *, wchar_t, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9c21b34 <col:16> 'wchar_t *(wchar_t *, wchar_t, size_t) throw()' lvalue Function 0x9b5ba10 'wmemset' 'wchar_t *(wchar_t *, wchar_t, size_t) throw()' (UsingShadow 0x9c0b500 'wmemset')))
      (ImplicitCastExpr 0x9c21bc0 <col:24> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9c21aec <col:24> 'char_type *' lvalue ParmVar 0x9c20540 '__s' 'char_type *'))
      (ImplicitCastExpr 0x9c21bd0 <col:29> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9c21b04 <col:29> 'char_type':'wchar_t' lvalue ParmVar 0x9c205c0 '__a' 'char_type':'wchar_t'))
      (ImplicitCastExpr 0x9c21be0 <col:34> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9c21b1c <col:34> 'size_t':'unsigned int' lvalue ParmVar 0x9c20580 '__n' 'size_t':'unsigned int')))))


        static char_type to_char_type(const int_type &__c) (CompoundStmt 0x9c21c80 </usr/include/c++/4.6/bits/char_traits.h:351:7, col:32>
  (ReturnStmt 0x9c21c70 <col:9, col:29>
    (CXXFunctionalCastExpr 0x9c21c58 <col:16, col:29> 'char_type':'wchar_t' functional cast to char_type <NoOp>
      (ImplicitCastExpr 0x9c21c48 <col:26> 'char_type':'wchar_t' <IntegralCast>
        (ImplicitCastExpr 0x9c21c38 <col:26> 'int_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9c21c20 <col:26> 'const int_type':'const unsigned int' lvalue ParmVar 0x9c20730 '__c' 'const int_type &'))))))


        static int_type to_int_type(const char_type &__c) (CompoundStmt 0x9c21d00 </usr/include/c++/4.6/bits/char_traits.h:355:7, col:31>
  (ReturnStmt 0x9c21cf0 <col:9, col:28>
    (CXXFunctionalCastExpr 0x9c21cd8 <col:16, col:28> 'int_type':'unsigned int' functional cast to int_type <NoOp>
      (ImplicitCastExpr 0x9c21cc8 <col:25> 'int_type':'unsigned int' <IntegralCast>
        (ImplicitCastExpr 0x9c21cb8 <col:25> 'char_type':'wchar_t' <LValueToRValue>
          (DeclRefExpr 0x9c21ca0 <col:25> 'const char_type':'const wchar_t' lvalue ParmVar 0x9c20850 '__c' 'const char_type &'))))))


        static bool eq_int_type(const int_type &__c1, const int_type &__c2) (CompoundStmt 0x9c21d90 </usr/include/c++/4.6/bits/char_traits.h:359:7, col:30>
  (ReturnStmt 0x9c21d80 <col:9, col:24>
    (BinaryOperator 0x9c21d68 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x9c21d48 <col:16> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9c21d14 <col:16> 'const int_type':'const unsigned int' lvalue ParmVar 0x9c20970 '__c1' 'const int_type &'))
      (ImplicitCastExpr 0x9c21d58 <col:24> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9c21d2c <col:24> 'const int_type':'const unsigned int' lvalue ParmVar 0x9c209c0 '__c2' 'const int_type &')))))


        static int_type eof() (CompoundStmt 0x9c21e08 </usr/include/c++/4.6/bits/char_traits.h:363:7, col:45>
  (ReturnStmt 0x9c21df8 <col:9, col:42>
    (CXXStaticCastExpr 0x9c21de0 <col:16, col:42> 'int_type':'unsigned int' static_cast<int_type> <NoOp>
      (ParenExpr 0x9c21dc0 </usr/include/wchar.h:119:15, col:27> 'unsigned int'
        (IntegerLiteral 0x9c21da8 <col:16> 'unsigned int' 4294967295)))))


        static int_type not_eof(const int_type &__c) (CompoundStmt 0x9c21fe0 </usr/include/c++/4.6/bits/char_traits.h:367:7, col:51>
  (ReturnStmt 0x9c21fd0 <col:9, col:46>
    (ConditionalOperator 0x9c21fb0 <col:16, col:46> 'unsigned int'
      (CallExpr 0x9c21f28 <col:16, col:38> '_Bool'
        (ImplicitCastExpr 0x9c21f18 <col:16> '_Bool (*)(const int_type &, const int_type &)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9c21e1c <col:16> '_Bool (const int_type &, const int_type &)' lvalue CXXMethod 0x9c20a60 'eq_int_type' '_Bool (const int_type &, const int_type &)'))
        (DeclRefExpr 0x9c21e34 <col:28> 'const int_type':'const unsigned int' lvalue ParmVar 0x9c20b70 '__c' 'const int_type &')
        (MaterializeTemporaryExpr 0x9c21f50 <col:33, col:37> 'const int_type':'const unsigned int' lvalue
          (CallExpr 0x9c21eb8 <col:33, col:37> 'int_type':'unsigned int'
            (ImplicitCastExpr 0x9c21ea8 <col:33> 'int_type (*)(void)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9c21e4c <col:33> 'int_type (void)' lvalue CXXMethod 0x9c20b00 'eof' 'int_type (void)')))))
      (ImplicitCastExpr 0x9c21fa0 <col:42> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0x9c21f60 <col:42> 'int' 0))
      (ImplicitCastExpr 0x9c21f90 <col:46> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9c21f78 <col:46> 'const int_type':'const unsigned int' lvalue ParmVar 0x9c20b70 '__c' 'const int_type &')))))


    }
template <typename _CharT> struct char_traits;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class istreambuf_iterator
template <typename _CharT = char, typename _Traits = std::char_traits<char>> class istreambuf_iterator
template <typename _CharT, typename _Traits> class istreambuf_iterator;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class ostreambuf_iterator
template <typename _CharT = char, typename _Traits = std::char_traits<char>> class ostreambuf_iterator
template <typename _CharT, typename _Traits> class ostreambuf_iterator;
    template <bool _IsMove, typename _CharT> typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type __copy_move_a2(_CharT *, _CharT *, ostreambuf_iterator<_CharT, char_traits<_CharT> >);
    template <bool _IsMove, typename _CharT> typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type __copy_move_a2(const _CharT *, const _CharT *, ostreambuf_iterator<_CharT, char_traits<_CharT> >);
    template <bool _IsMove, typename _CharT> typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, _CharT *>::__type __copy_move_a2(istreambuf_iterator<_CharT, char_traits<_CharT> >, istreambuf_iterator<_CharT, char_traits<_CharT> >, _CharT *);
    template <bool _IsMove, typename _II, typename _OI> inline _OI __copy_move_a2(_II __first, _II __last, _OI __result) (CompoundStmt 0x9beb928 </usr/include/c++/4.6/bits/stl_algobase.h:419:5, line:423:5>
  (ReturnStmt 0x9beb918 <line:420:7, line:422:39>
    (CXXUnresolvedConstructExpr 0x9beb8f8 <line:420:14, line:422:39> '_OI'
      (CallExpr 0x9beb8d0 <line:420:18, line:422:38> '<dependent type>'
        (UnresolvedLookupExpr 0x9beb6d0 <line:420:18, col:44> '<dependent type>' lvalue (no ADL) = '1' 0x9be8100)
        (CallExpr 0x9beb7a0 <col:46, col:71> '<dependent type>'
          (UnresolvedLookupExpr 0x9beb750 <col:46, col:51> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b951f0)
          (DeclRefExpr 0x9beb784 <col:64> '_II' lvalue ParmVar 0x9beb4e0 '__first' '_II'))
        (CallExpr 0x9beb828 <line:421:11, col:35> '<dependent type>'
          (UnresolvedLookupExpr 0x9beb7d8 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b951f0)
          (DeclRefExpr 0x9beb80c <col:29> '_II' lvalue ParmVar 0x9beb520 '__last' '_II'))
        (CallExpr 0x9beb8b0 <line:422:11, col:37> '<dependent type>'
          (UnresolvedLookupExpr 0x9beb860 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b951f0)
          (DeclRefExpr 0x9beb894 <col:29> '_OI' lvalue ParmVar 0x9beb560 '__result' '_OI'))))))

;
    template <typename _II = unsigned long *, typename _OI = unsigned long *> inline unsigned long *copy(unsigned long *__first, unsigned long *__last, unsigned long *__result)template <typename _II = std::_Bit_const_iterator, typename _OI = std::_Bit_iterator> inline std::_Bit_iterator copy(std::_Bit_const_iterator __first, std::_Bit_const_iterator __last, std::_Bit_iterator __result)template <typename _II, typename _OI> inline _OI copy(_II __first, _II __last, _OI __result) (CompoundStmt 0x9bebec8 </usr/include/c++/4.6/bits/stl_algobase.h:445:5, line:455:5>
  (NullStmt 0x9bebba8 <line:450:54>)
  (ReturnStmt 0x9bebeb8 <line:452:7, line:454:18>
    (ParenExpr 0x9bebea0 <line:452:14, line:454:18> '<dependent type>'
      (CallExpr 0x9bebe78 <line:452:15, line:454:17> '<dependent type>'
        (UnresolvedLookupExpr 0x9bebcd8 <line:452:15, col:67> '<dependent type>' lvalue (no ADL) = '1' 0x9bea220 0x9beaa70 0x9beb3a0 0x9beb650)
        (CallExpr 0x9bebdb8 <line:453:9, col:34> '<dependent type>'
          (UnresolvedLookupExpr 0x9bebd68 <col:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0x9be4b80)
          (DeclRefExpr 0x9bebd9c <col:27> '_II' lvalue ParmVar 0x9beba00 '__first' '_II'))
        (CallExpr 0x9bebe40 <col:37, col:61> '<dependent type>'
          (UnresolvedLookupExpr 0x9bebdf0 <col:37, col:42> '<overloaded function type>' lvalue (no ADL) = '1' 0x9be4b80)
          (DeclRefExpr 0x9bebe24 <col:55> '_II' lvalue ParmVar 0x9beba40 '__last' '_II'))
        (DeclRefExpr 0x9bebe60 <line:454:9> '_OI' lvalue ParmVar 0x9beba80 '__result' '_OI')))))

;
    template <bool = false, bool = false, typename  = std::random_access_iterator_tag> struct __copy_move_backward {
        struct __copy_move_backward;
        template <typename _BI1 = std::basic_string<wchar_t> *, typename _BI2 = std::basic_string<wchar_t> *> static std::basic_string<wchar_t> *__copy_move_b(std::basic_string<wchar_t> *__first, std::basic_string<wchar_t> *__last, std::basic_string<wchar_t> *__result) (CompoundStmt 0xa0f5148 </usr/include/c++/4.6/bits/stl_algobase.h:528:9, line:533:2>
  (DeclStmt 0xa0f4e48 <line:529:4, col:55>
    0xa0f4e10 "typename iterator_traits<basic_string<wchar_t> *>::difference_type __n")
  (ForStmt 0xa0f50e8 <line:530:4, line:531:23>
    (BinaryOperator 0xa0f4f10 <line:530:9, col:24> 'typename iterator_traits<class basic_string<wchar_t> *>::difference_type':'int' lvalue '='
      (DeclRefExpr 0xa0f4e58 <col:9> 'typename iterator_traits<class basic_string<wchar_t> *>::difference_type':'int' lvalue Var 0xa0f4e10 '__n' 'typename iterator_traits<class basic_string<wchar_t> *>::difference_type':'int')
      (BinaryOperator 0xa0f4ef8 <col:15, col:24> 'int' '-'
        (ImplicitCastExpr 0xa0f4ed8 <col:15> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' <LValueToRValue>
          (DeclRefExpr 0xa0f4ea8 <col:15> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' lvalue ParmVar 0xa0f4af0 '__last' 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *'))
        (ImplicitCastExpr 0xa0f4ee8 <col:24> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' <LValueToRValue>
          (DeclRefExpr 0xa0f4ec0 <col:24> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' lvalue ParmVar 0xa0f4ab0 '__first' 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *'))))
    <<<NULL>>>
    (BinaryOperator 0xa0f4f90 <col:33, col:39> '_Bool' '>'
      (ImplicitCastExpr 0xa0f4f80 <col:33> 'typename iterator_traits<class basic_string<wchar_t> *>::difference_type':'int' <LValueToRValue>
        (DeclRefExpr 0xa0f4f64 <col:33> 'typename iterator_traits<class basic_string<wchar_t> *>::difference_type':'int' lvalue Var 0xa0f4e10 '__n' 'typename iterator_traits<class basic_string<wchar_t> *>::difference_type':'int'))
      (IntegerLiteral 0x9bed530 <col:39> 'int' 0))
    (UnaryOperator 0xa0f4fc0 <col:42, col:44> 'typename iterator_traits<class basic_string<wchar_t> *>::difference_type':'int' lvalue prefix '--'
      (DeclRefExpr 0xa0f4fa8 <col:44> 'typename iterator_traits<class basic_string<wchar_t> *>::difference_type':'int' lvalue Var 0xa0f4e10 '__n' 'typename iterator_traits<class basic_string<wchar_t> *>::difference_type':'int'))
    (CXXOperatorCallExpr 0xa0f50c0 <line:531:6, col:23> 'class std::basic_string<wchar_t>' lvalue
      (ImplicitCastExpr 0xa0f50b0 <col:18, <invalid sloc>> 'class std::basic_string<wchar_t> &(*)(const class std::basic_string<wchar_t> &)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0f5098 <col:18, <invalid sloc>> 'class std::basic_string<wchar_t> &(const class std::basic_string<wchar_t> &)' lvalue CXXMethod 0x9dc67b0 'operator=' 'class std::basic_string<wchar_t> &(const class std::basic_string<wchar_t> &)'))
      (UnaryOperator 0xa0f5018 <col:6, col:9> 'class std::basic_string<wchar_t>' lvalue prefix '*'
        (ImplicitCastExpr 0xa0f5008 <col:7, col:9> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' <LValueToRValue>
          (UnaryOperator 0xa0f4ff0 <col:7, col:9> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' lvalue prefix '--'
            (DeclRefExpr 0xa0f4fd4 <col:9> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' lvalue ParmVar 0xa0f4b30 '__result' 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *'))))
      (ImplicitCastExpr 0xa0f5088 <col:20, col:23> 'const class std::basic_string<wchar_t>' lvalue <NoOp>
        (UnaryOperator 0xa0f5070 <col:20, col:23> 'class std::basic_string<wchar_t>' lvalue prefix '*'
          (ImplicitCastExpr 0xa0f5060 <col:21, col:23> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' <LValueToRValue>
            (UnaryOperator 0xa0f5048 <col:21, col:23> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' lvalue prefix '--'
              (DeclRefExpr 0xa0f502c <col:23> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' lvalue ParmVar 0xa0f4af0 '__last' 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *')))))))
  (ReturnStmt 0xa0f5138 <line:532:4, col:11>
    (ImplicitCastExpr 0xa0f5128 <col:11> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' <LValueToRValue>
      (DeclRefExpr 0xa0f510c <col:11> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' lvalue ParmVar 0xa0f4b30 '__result' 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *'))))

template <typename _BI1, typename _BI2> static _BI2 __copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result) (CompoundStmt 0x9bee608 </usr/include/c++/4.6/bits/stl_algobase.h:528:9, line:533:2>
  (DeclStmt 0x9bed328 <line:529:4, col:55>
    0x9bed2f0 "typename iterator_traits<_BI1>::difference_type __n")
  (ForStmt 0x9bee5b8 <line:530:4, line:531:23>
    (BinaryOperator 0x9bed500 <line:530:9, col:24> '<dependent type>' '='
      (DeclRefExpr 0x9bed338 <col:9> 'typename iterator_traits<_BI1>::difference_type' lvalue Var 0x9bed2f0 '__n' 'typename iterator_traits<_BI1>::difference_type')
      (CXXOperatorCallExpr 0x9bed3b8 <col:15, col:24> '<dependent type>'
        (UnresolvedLookupExpr 0x9bed380 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
        (DeclRefExpr 0x9bed350 <col:15> '_BI1' lvalue ParmVar 0x9bed080 '__last' '_BI1')
        (DeclRefExpr 0x9bed368 <col:24> '_BI1' lvalue ParmVar 0x9bed040 '__first' '_BI1')))
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9bed588 <col:33, col:39> '<dependent type>'
      (UnresolvedLookupExpr 0x9bed548 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bad330 0x9bc37b0 0x9bc6740)
      (DeclRefExpr 0x9bed518 <col:33> 'typename iterator_traits<_BI1>::difference_type' lvalue Var 0x9bed2f0 '__n' 'typename iterator_traits<_BI1>::difference_type')
      (IntegerLiteral 0x9bed530 <col:39> 'int' 0))
    (UnaryOperator 0x9bee4f8 <col:42, col:44> '<dependent type>' prefix '--'
      (DeclRefExpr 0x9bee4dc <col:44> 'typename iterator_traits<_BI1>::difference_type' lvalue Var 0x9bed2f0 '__n' 'typename iterator_traits<_BI1>::difference_type'))
    (BinaryOperator 0x9bee5a0 <line:531:6, col:23> '<dependent type>' '='
      (UnaryOperator 0x9bee540 <col:6, col:9> '<dependent type>' prefix '*'
        (UnaryOperator 0x9bee528 <col:7, col:9> '<dependent type>' prefix '--'
          (DeclRefExpr 0x9bee50c <col:9> '_BI2' lvalue ParmVar 0x9bed0c0 '__result' '_BI2')))
      (UnaryOperator 0x9bee588 <col:20, col:23> '<dependent type>' prefix '*'
        (UnaryOperator 0x9bee570 <col:21, col:23> '<dependent type>' prefix '--'
          (DeclRefExpr 0x9bee554 <col:23> '_BI1' lvalue ParmVar 0x9bed080 '__last' '_BI1')))))
  (ReturnStmt 0x9bee5f8 <line:532:4, col:11>
    (DeclRefExpr 0x9bee5dc <col:11> '_BI2' lvalue ParmVar 0x9bed0c0 '__result' '_BI2')))

;
        inline std::__copy_move_backward<false, false, std::random_access_iterator_tag> &operator=(const std::__copy_move_backward<false, false, std::random_access_iterator_tag> &) throw();
    }
template <bool, bool, typename > struct __copy_move_backward {
        struct __copy_move_backward;
        template <typename _BI1, typename _BI2> static _BI2 __copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result) (CompoundStmt 0x9beccd0 </usr/include/c++/4.6/bits/stl_algobase.h:500:9, line:504:2>
  (WhileStmt 0x9becc90 <line:501:4, line:502:23>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9becbc0 <line:501:11, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0x9becb80 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bacde0 0x9bc3130 0x9bc62c0)
      (DeclRefExpr 0x9becb50 <col:11> '_BI1' lvalue ParmVar 0x9bec990 '__first' '_BI1')
      (DeclRefExpr 0x9becb68 <col:22> '_BI1' lvalue ParmVar 0x9bec9d0 '__last' '_BI1'))
    (BinaryOperator 0x9becc78 <line:502:6, col:23> '<dependent type>' '='
      (UnaryOperator 0x9becc18 <col:6, col:9> '<dependent type>' prefix '*'
        (UnaryOperator 0x9becc00 <col:7, col:9> '<dependent type>' prefix '--'
          (DeclRefExpr 0x9becbe4 <col:9> '_BI2' lvalue ParmVar 0x9beca10 '__result' '_BI2')))
      (UnaryOperator 0x9becc60 <col:20, col:23> '<dependent type>' prefix '*'
        (UnaryOperator 0x9becc48 <col:21, col:23> '<dependent type>' prefix '--'
          (DeclRefExpr 0x9becc2c <col:23> '_BI1' lvalue ParmVar 0x9bec9d0 '__last' '_BI1')))))
  (ReturnStmt 0x9beccc0 <line:503:4, col:11>
    (DeclRefExpr 0x9becca4 <col:11> '_BI2' lvalue ParmVar 0x9beca10 '__result' '_BI2')))

;
    };
    struct __copy_move_backward {
        struct __copy_move_backward;
        template <typename _BI1 = std::basic_string<wchar_t> *, typename _BI2 = std::basic_string<wchar_t> *> static std::basic_string<wchar_t> *__copy_move_b(std::basic_string<wchar_t> *__first, std::basic_string<wchar_t> *__last, std::basic_string<wchar_t> *__result) (CompoundStmt 0xa0f5148 </usr/include/c++/4.6/bits/stl_algobase.h:528:9, line:533:2>
  (DeclStmt 0xa0f4e48 <line:529:4, col:55>
    0xa0f4e10 "typename iterator_traits<basic_string<wchar_t> *>::difference_type __n")
  (ForStmt 0xa0f50e8 <line:530:4, line:531:23>
    (BinaryOperator 0xa0f4f10 <line:530:9, col:24> 'typename iterator_traits<class basic_string<wchar_t> *>::difference_type':'int' lvalue '='
      (DeclRefExpr 0xa0f4e58 <col:9> 'typename iterator_traits<class basic_string<wchar_t> *>::difference_type':'int' lvalue Var 0xa0f4e10 '__n' 'typename iterator_traits<class basic_string<wchar_t> *>::difference_type':'int')
      (BinaryOperator 0xa0f4ef8 <col:15, col:24> 'int' '-'
        (ImplicitCastExpr 0xa0f4ed8 <col:15> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' <LValueToRValue>
          (DeclRefExpr 0xa0f4ea8 <col:15> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' lvalue ParmVar 0xa0f4af0 '__last' 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *'))
        (ImplicitCastExpr 0xa0f4ee8 <col:24> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' <LValueToRValue>
          (DeclRefExpr 0xa0f4ec0 <col:24> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' lvalue ParmVar 0xa0f4ab0 '__first' 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *'))))
    <<<NULL>>>
    (BinaryOperator 0xa0f4f90 <col:33, col:39> '_Bool' '>'
      (ImplicitCastExpr 0xa0f4f80 <col:33> 'typename iterator_traits<class basic_string<wchar_t> *>::difference_type':'int' <LValueToRValue>
        (DeclRefExpr 0xa0f4f64 <col:33> 'typename iterator_traits<class basic_string<wchar_t> *>::difference_type':'int' lvalue Var 0xa0f4e10 '__n' 'typename iterator_traits<class basic_string<wchar_t> *>::difference_type':'int'))
      (IntegerLiteral 0x9bed530 <col:39> 'int' 0))
    (UnaryOperator 0xa0f4fc0 <col:42, col:44> 'typename iterator_traits<class basic_string<wchar_t> *>::difference_type':'int' lvalue prefix '--'
      (DeclRefExpr 0xa0f4fa8 <col:44> 'typename iterator_traits<class basic_string<wchar_t> *>::difference_type':'int' lvalue Var 0xa0f4e10 '__n' 'typename iterator_traits<class basic_string<wchar_t> *>::difference_type':'int'))
    (CXXOperatorCallExpr 0xa0f50c0 <line:531:6, col:23> 'class std::basic_string<wchar_t>' lvalue
      (ImplicitCastExpr 0xa0f50b0 <col:18, <invalid sloc>> 'class std::basic_string<wchar_t> &(*)(const class std::basic_string<wchar_t> &)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0f5098 <col:18, <invalid sloc>> 'class std::basic_string<wchar_t> &(const class std::basic_string<wchar_t> &)' lvalue CXXMethod 0x9dc67b0 'operator=' 'class std::basic_string<wchar_t> &(const class std::basic_string<wchar_t> &)'))
      (UnaryOperator 0xa0f5018 <col:6, col:9> 'class std::basic_string<wchar_t>' lvalue prefix '*'
        (ImplicitCastExpr 0xa0f5008 <col:7, col:9> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' <LValueToRValue>
          (UnaryOperator 0xa0f4ff0 <col:7, col:9> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' lvalue prefix '--'
            (DeclRefExpr 0xa0f4fd4 <col:9> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' lvalue ParmVar 0xa0f4b30 '__result' 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *'))))
      (ImplicitCastExpr 0xa0f5088 <col:20, col:23> 'const class std::basic_string<wchar_t>' lvalue <NoOp>
        (UnaryOperator 0xa0f5070 <col:20, col:23> 'class std::basic_string<wchar_t>' lvalue prefix '*'
          (ImplicitCastExpr 0xa0f5060 <col:21, col:23> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' <LValueToRValue>
            (UnaryOperator 0xa0f5048 <col:21, col:23> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' lvalue prefix '--'
              (DeclRefExpr 0xa0f502c <col:23> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' lvalue ParmVar 0xa0f4af0 '__last' 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *')))))))
  (ReturnStmt 0xa0f5138 <line:532:4, col:11>
    (ImplicitCastExpr 0xa0f5128 <col:11> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' <LValueToRValue>
      (DeclRefExpr 0xa0f510c <col:11> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' lvalue ParmVar 0xa0f4b30 '__result' 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *'))))

template <typename _BI1, typename _BI2> static _BI2 __copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result) (CompoundStmt 0x9bee608 </usr/include/c++/4.6/bits/stl_algobase.h:528:9, line:533:2>
  (DeclStmt 0x9bed328 <line:529:4, col:55>
    0x9bed2f0 "typename iterator_traits<_BI1>::difference_type __n")
  (ForStmt 0x9bee5b8 <line:530:4, line:531:23>
    (BinaryOperator 0x9bed500 <line:530:9, col:24> '<dependent type>' '='
      (DeclRefExpr 0x9bed338 <col:9> 'typename iterator_traits<_BI1>::difference_type' lvalue Var 0x9bed2f0 '__n' 'typename iterator_traits<_BI1>::difference_type')
      (CXXOperatorCallExpr 0x9bed3b8 <col:15, col:24> '<dependent type>'
        (UnresolvedLookupExpr 0x9bed380 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
        (DeclRefExpr 0x9bed350 <col:15> '_BI1' lvalue ParmVar 0x9bed080 '__last' '_BI1')
        (DeclRefExpr 0x9bed368 <col:24> '_BI1' lvalue ParmVar 0x9bed040 '__first' '_BI1')))
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9bed588 <col:33, col:39> '<dependent type>'
      (UnresolvedLookupExpr 0x9bed548 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bad330 0x9bc37b0 0x9bc6740)
      (DeclRefExpr 0x9bed518 <col:33> 'typename iterator_traits<_BI1>::difference_type' lvalue Var 0x9bed2f0 '__n' 'typename iterator_traits<_BI1>::difference_type')
      (IntegerLiteral 0x9bed530 <col:39> 'int' 0))
    (UnaryOperator 0x9bee4f8 <col:42, col:44> '<dependent type>' prefix '--'
      (DeclRefExpr 0x9bee4dc <col:44> 'typename iterator_traits<_BI1>::difference_type' lvalue Var 0x9bed2f0 '__n' 'typename iterator_traits<_BI1>::difference_type'))
    (BinaryOperator 0x9bee5a0 <line:531:6, col:23> '<dependent type>' '='
      (UnaryOperator 0x9bee540 <col:6, col:9> '<dependent type>' prefix '*'
        (UnaryOperator 0x9bee528 <col:7, col:9> '<dependent type>' prefix '--'
          (DeclRefExpr 0x9bee50c <col:9> '_BI2' lvalue ParmVar 0x9bed0c0 '__result' '_BI2')))
      (UnaryOperator 0x9bee588 <col:20, col:23> '<dependent type>' prefix '*'
        (UnaryOperator 0x9bee570 <col:21, col:23> '<dependent type>' prefix '--'
          (DeclRefExpr 0x9bee554 <col:23> '_BI1' lvalue ParmVar 0x9bed080 '__last' '_BI1')))))
  (ReturnStmt 0x9bee5f8 <line:532:4, col:11>
    (DeclRefExpr 0x9bee5dc <col:11> '_BI2' lvalue ParmVar 0x9bed0c0 '__result' '_BI2')))

;
        inline std::__copy_move_backward<false, false, std::random_access_iterator_tag> &operator=(const std::__copy_move_backward<false, false, std::random_access_iterator_tag> &) throw();
    };
    struct __copy_move_backward {
        struct __copy_move_backward;
        template <typename _Tp> static _Tp *__copy_move_b(const _Tp *__first, const _Tp *__last, _Tp *__result) (CompoundStmt 0x9bef018 </usr/include/c++/4.6/bits/stl_algobase.h:558:9, line:563:2>
  (DeclStmt 0x9beedb8 <line:559:4, col:43>
    0x9beecf0 "const ptrdiff_t _Num =
      (CXXOperatorCallExpr 0x9beed90 <col:27, col:36> '<dependent type>'
        (UnresolvedLookupExpr 0x9beed58 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
        (DeclRefExpr 0x9beed24 <col:27> 'const _Tp *' lvalue ParmVar 0x9beeb30 '__last' 'const _Tp *')
        (DeclRefExpr 0x9beed3c <col:36> 'const _Tp *' lvalue ParmVar 0x9beeae0 '__first' 'const _Tp *'))")
  (IfStmt 0x9beef58 <line:560:4, line:561:68>
    <<<NULL>>>
    (ImplicitCastExpr 0x9beedf0 <line:560:8> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x9beede0 <col:8> 'ptrdiff_t':'int' <LValueToRValue>
        (DeclRefExpr 0x9beedc8 <col:8> 'const ptrdiff_t':'const int' lvalue Var 0x9beecf0 '_Num' 'const ptrdiff_t':'const int')))
    (CallExpr 0x9beef30 <line:561:6, col:68> '<dependent type>'
      (DeclRefExpr 0x9beedfc <col:6> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9be7b30 '__builtin_memmove' 'void *(void *, const void *, unsigned int)')
      (CXXOperatorCallExpr 0x9beee80 <col:24, col:35> '<dependent type>'
        (UnresolvedLookupExpr 0x9beee48 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
        (DeclRefExpr 0x9beee14 <col:24> '_Tp *' lvalue ParmVar 0x9beeba0 '__result' '_Tp *')
        (DeclRefExpr 0x9beee2c <col:35> 'const ptrdiff_t':'const int' lvalue Var 0x9beecf0 '_Num' 'const ptrdiff_t':'const int'))
      (DeclRefExpr 0x9beeea4 <col:41> 'const _Tp *' lvalue ParmVar 0x9beeae0 '__first' 'const _Tp *')
      (BinaryOperator 0x9beef18 <col:50, col:64> 'unsigned int' '*'
        (UnaryExprOrTypeTraitExpr 0x9beeec8 <col:50, col:60> 'unsigned int' sizeof '_Tp')
        (ImplicitCastExpr 0x9beef08 <col:64> 'unsigned int' <IntegralCast>
          (ImplicitCastExpr 0x9beeef8 <col:64> 'ptrdiff_t':'int' <LValueToRValue>
            (DeclRefExpr 0x9beeee0 <col:64> 'const ptrdiff_t':'const int' lvalue Var 0x9beecf0 '_Num' 'const ptrdiff_t':'const int')))))
    <<<NULL>>>)
  (ReturnStmt 0x9bef008 <line:562:4, col:22>
    (CXXOperatorCallExpr 0x9beefe0 <col:11, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0x9beefa8 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
      (DeclRefExpr 0x9beef74 <col:11> '_Tp *' lvalue ParmVar 0x9beeba0 '__result' '_Tp *')
      (DeclRefExpr 0x9beef8c <col:22> 'const ptrdiff_t':'const int' lvalue Var 0x9beecf0 '_Num' 'const ptrdiff_t':'const int'))))

;
    };
    template <bool _IsMove = false, typename _BI1 = std::basic_string<wchar_t> *, typename _BI2 = std::basic_string<wchar_t> *> inline std::basic_string<wchar_t> *__copy_move_backward_a(std::basic_string<wchar_t> *__first, std::basic_string<wchar_t> *__last, std::basic_string<wchar_t> *__result) (CompoundStmt 0xa0f4d40 </usr/include/c++/4.6/bits/stl_algobase.h:569:5, line:582:5>
  (DeclStmt 0xa0f3d70 <line:570:7, col:69>
    0xa0f3d40 "typedef typename iterator_traits<class basic_string<wchar_t> *>::value_type _ValueType1")
  (DeclStmt 0xa0f3e60 <line:571:7, col:69>
    0xa0f3e30 "typedef typename iterator_traits<class basic_string<wchar_t> *>::value_type _ValueType2")
  (DeclStmt 0xa0f3f50 <line:572:7, col:74>
    0xa0f3f20 "typedef typename iterator_traits<class basic_string<wchar_t> *>::iterator_category _Category")
  (DeclStmt 0xa0f4810 <line:573:7, line:576:58>
    0xa0f3f60 "const bool __simple =
      (ParenExpr 0xa0f47f8 <line:573:29, line:576:57> '_Bool'
        (BinaryOperator 0xa0f47e0 <line:573:30, line:576:50> '_Bool' '&&'
          (BinaryOperator 0xa0f4408 <line:573:30, line:575:46> '_Bool' '&&'
            (BinaryOperator 0xa0f4350 <line:573:30, line:574:46> '_Bool' '&&'
              (UnaryTypeTraitExpr 0xa0f3fb8 <line:573:30, col:54> '_Bool')
              (ImplicitCastExpr 0xa0f4340 <line:574:26, col:46> '_Bool' <IntegralToBoolean>
                (DeclRefExpr 0xa0f431c <col:26, col:46> 'enum std::__is_pointer<class std::basic_string<wchar_t> *>::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:299:7>' EnumConstant 0xa0f42a0 '__value' 'enum std::__is_pointer<class std::basic_string<wchar_t> *>::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:299:7>')))
            (ImplicitCastExpr 0xa0f43f8 <line:575:26, col:46> '_Bool' <IntegralToBoolean>
              (DeclRefExpr 0xa0f43d4 <col:26, col:46> 'enum std::__is_pointer<class std::basic_string<wchar_t> *>::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:299:7>' EnumConstant 0xa0f42a0 '__value' 'enum std::__is_pointer<class std::basic_string<wchar_t> *>::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:299:7>')))
          (ImplicitCastExpr 0xa0f47d0 <line:576:12, col:50> '_Bool' <IntegralToBoolean>
            (DeclRefExpr 0xa0f47ac <col:12, col:50> 'enum std::__are_same<class std::basic_string<wchar_t>, class std::basic_string<wchar_t> >::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:113:7>' EnumConstant 0xa0f4730 '__value' 'enum std::__are_same<class std::basic_string<wchar_t>, class std::basic_string<wchar_t> >::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:113:7>'))))")
  (ReturnStmt 0xa0f4d30 <line:578:7, line:581:18>
    (CallExpr 0xa0f4cd8 <line:578:14, line:581:18> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *'
      (ImplicitCastExpr 0xa0f4cc8 <line:578:14, line:579:45> 'class std::basic_string<wchar_t> *(*)(class std::basic_string<wchar_t> *, class std::basic_string<wchar_t> *, class std::basic_string<wchar_t> *)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0f4c84 <line:578:14, line:579:45> 'class std::basic_string<wchar_t> *(class std::basic_string<wchar_t> *, class std::basic_string<wchar_t> *, class std::basic_string<wchar_t> *)' lvalue CXXMethod 0xa0f4bc0 '__copy_move_b' 'class std::basic_string<wchar_t> *(class std::basic_string<wchar_t> *, class std::basic_string<wchar_t> *, class std::basic_string<wchar_t> *)' (FunctionTemplate 0x9bed1b0 '__copy_move_b')))
      (ImplicitCastExpr 0xa0f4d00 <col:59> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' <LValueToRValue>
        (DeclRefExpr 0xa0f49a4 <col:59> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' lvalue ParmVar 0xa0f38a0 '__first' 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *'))
      (ImplicitCastExpr 0xa0f4d10 <line:580:10> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' <LValueToRValue>
        (DeclRefExpr 0xa0f49bc <col:10> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' lvalue ParmVar 0xa0f38e0 '__last' 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *'))
      (ImplicitCastExpr 0xa0f4d20 <line:581:10> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' <LValueToRValue>
        (DeclRefExpr 0xa0f49d4 <col:10> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' lvalue ParmVar 0xa0f3920 '__result' 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *')))))

template <bool _IsMove, typename _BI1, typename _BI2> inline _BI2 __copy_move_backward_a(_BI1 __first, _BI1 __last, _BI2 __result) (CompoundStmt 0x9bf0178 </usr/include/c++/4.6/bits/stl_algobase.h:569:5, line:582:5>
  (DeclStmt 0x9bef400 <line:570:7, col:69>
    0x9bef3d0 "typedef typename iterator_traits<_BI1>::value_type _ValueType1")
  (DeclStmt 0x9bef9c0 <line:571:7, col:69>
    0x9bef990 "typedef typename iterator_traits<_BI2>::value_type _ValueType2")
  (DeclStmt 0x9befaf0 <line:572:7, col:74>
    0x9befac0 "typedef typename iterator_traits<_BI1>::iterator_category _Category")
  (DeclStmt 0x9befed0 <line:573:7, line:576:58>
    0x9befb10 "const bool __simple =
      (ParenExpr 0x9befeb8 <line:573:29, line:576:57> '<dependent type>'
        (BinaryOperator 0x9befea0 <line:573:30, line:576:50> '<dependent type>' '&&'
          (BinaryOperator 0x9befd48 <line:573:30, line:575:46> '<dependent type>' '&&'
            (BinaryOperator 0x9befc58 <line:573:30, line:574:46> '<dependent type>' '&&'
              (UnaryTypeTraitExpr 0x9befb68 <line:573:30, col:54> '_Bool')
              (DependentScopeDeclRefExpr 0x9befc30 <line:574:26, col:46> '<dependent type>' lvalue))
            (DependentScopeDeclRefExpr 0x9befd20 <line:575:26, col:46> '<dependent type>' lvalue))
          (DependentScopeDeclRefExpr 0x9befe78 <line:576:12, col:50> '<dependent type>' lvalue)))")
  (ReturnStmt 0x9bf0168 <line:578:7, line:581:18>
    (CallExpr 0x9bf0140 <line:578:14, line:581:18> '<dependent type>'
      (DependentScopeDeclRefExpr 0x9bf00d0 <line:578:14, line:579:45> '<dependent type>' lvalue)
      (DeclRefExpr 0x9bf00f4 <col:59> '_BI1' lvalue ParmVar 0x9bef140 '__first' '_BI1')
      (DeclRefExpr 0x9bf010c <line:580:10> '_BI1' lvalue ParmVar 0x9bef180 '__last' '_BI1')
      (DeclRefExpr 0x9bf0124 <line:581:10> '_BI2' lvalue ParmVar 0x9bef1c0 '__result' '_BI2'))))

;
    template <bool _IsMove = false, typename _BI1 = std::basic_string<wchar_t> *, typename _BI2 = std::basic_string<wchar_t> *> inline std::basic_string<wchar_t> *__copy_move_backward_a2(std::basic_string<wchar_t> *__first, std::basic_string<wchar_t> *__last, std::basic_string<wchar_t> *__result) (CompoundStmt 0xa0f3b58 </usr/include/c++/4.6/bits/stl_algobase.h:587:5, line:591:5>
  (ReturnStmt 0xa0f3b48 <line:588:7, line:590:34>
    (CXXFunctionalCastExpr 0xa0f3b30 <line:588:14, line:590:34> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' functional cast to class std::basic_string<wchar_t> * <NoOp>
      (CallExpr 0xa0f3b08 <line:588:19, line:590:33> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *'
        (ImplicitCastExpr 0xa0f3af8 <line:588:19, col:54> 'class std::basic_string<wchar_t> *(*)(class std::basic_string<wchar_t> *, class std::basic_string<wchar_t> *, class std::basic_string<wchar_t> *)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa0f3a88 <col:19, col:54> 'class std::basic_string<wchar_t> *(class std::basic_string<wchar_t> *, class std::basic_string<wchar_t> *, class std::basic_string<wchar_t> *)' lvalue Function 0xa0f39b0 '__copy_move_backward_a' 'class std::basic_string<wchar_t> *(class std::basic_string<wchar_t> *, class std::basic_string<wchar_t> *, class std::basic_string<wchar_t> *)' (FunctionTemplate 0x9bef2b0 '__copy_move_backward_a')))
        (CallExpr 0xa0f34e8 <line:589:6, col:31> 'typename _Niter_base<class basic_string<wchar_t> *>::iterator_type':'class std::basic_string<wchar_t> *'
          (ImplicitCastExpr 0xa0f34d8 <col:6, col:11> 'typename _Niter_base<class basic_string<wchar_t> *>::iterator_type (*)(class std::basic_string<wchar_t> *)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa0f3498 <col:6, col:11> 'typename _Niter_base<class basic_string<wchar_t> *>::iterator_type (class std::basic_string<wchar_t> *)' lvalue Function 0xa0f33f0 '__niter_base' 'typename _Niter_base<class basic_string<wchar_t> *>::iterator_type (class std::basic_string<wchar_t> *)' (FunctionTemplate 0x9b951f0 '__niter_base')))
          (ImplicitCastExpr 0xa0f3508 <col:24> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' <LValueToRValue>
            (DeclRefExpr 0xa0f2d2c <col:24> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' lvalue ParmVar 0xa0f27f0 '__first' 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *')))
        (CallExpr 0xa0f35d0 <col:34, col:58> 'typename _Niter_base<class basic_string<wchar_t> *>::iterator_type':'class std::basic_string<wchar_t> *'
          (ImplicitCastExpr 0xa0f35c0 <col:34, col:39> 'typename _Niter_base<class basic_string<wchar_t> *>::iterator_type (*)(class std::basic_string<wchar_t> *)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa0f3598 <col:34, col:39> 'typename _Niter_base<class basic_string<wchar_t> *>::iterator_type (class std::basic_string<wchar_t> *)' lvalue Function 0xa0f33f0 '__niter_base' 'typename _Niter_base<class basic_string<wchar_t> *>::iterator_type (class std::basic_string<wchar_t> *)' (FunctionTemplate 0x9b951f0 '__niter_base')))
          (ImplicitCastExpr 0xa0f35f0 <col:52> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' <LValueToRValue>
            (DeclRefExpr 0xa0f354c <col:52> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' lvalue ParmVar 0xa0f2830 '__last' 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *')))
        (CallExpr 0xa0f36b8 <line:590:6, col:32> 'typename _Niter_base<class basic_string<wchar_t> *>::iterator_type':'class std::basic_string<wchar_t> *'
          (ImplicitCastExpr 0xa0f36a8 <col:6, col:11> 'typename _Niter_base<class basic_string<wchar_t> *>::iterator_type (*)(class std::basic_string<wchar_t> *)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa0f3680 <col:6, col:11> 'typename _Niter_base<class basic_string<wchar_t> *>::iterator_type (class std::basic_string<wchar_t> *)' lvalue Function 0xa0f33f0 '__niter_base' 'typename _Niter_base<class basic_string<wchar_t> *>::iterator_type (class std::basic_string<wchar_t> *)' (FunctionTemplate 0x9b951f0 '__niter_base')))
          (ImplicitCastExpr 0xa0f36d8 <col:24> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' <LValueToRValue>
            (DeclRefExpr 0xa0f3634 <col:24> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' lvalue ParmVar 0xa0f2870 '__result' 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *')))))))

template <bool _IsMove, typename _BI1, typename _BI2> inline _BI2 __copy_move_backward_a2(_BI1 __first, _BI1 __last, _BI2 __result) (CompoundStmt 0x9bf06f8 </usr/include/c++/4.6/bits/stl_algobase.h:587:5, line:591:5>
  (ReturnStmt 0x9bf06e8 <line:588:7, line:590:34>
    (CXXUnresolvedConstructExpr 0x9bf06c8 <line:588:14, line:590:34> '_BI2'
      (CallExpr 0x9bf06a0 <line:588:19, line:590:33> '<dependent type>'
        (UnresolvedLookupExpr 0x9bf04a0 <line:588:19, col:54> '<dependent type>' lvalue (no ADL) = '1' 0x9bef2b0)
        (CallExpr 0x9bf0570 <line:589:6, col:31> '<dependent type>'
          (UnresolvedLookupExpr 0x9bf0520 <col:6, col:11> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b951f0)
          (DeclRefExpr 0x9bf0554 <col:24> '_BI1' lvalue ParmVar 0x9bf02b0 '__first' '_BI1'))
        (CallExpr 0x9bf05f8 <col:34, col:58> '<dependent type>'
          (UnresolvedLookupExpr 0x9bf05a8 <col:34, col:39> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b951f0)
          (DeclRefExpr 0x9bf05dc <col:52> '_BI1' lvalue ParmVar 0x9bf02f0 '__last' '_BI1'))
        (CallExpr 0x9bf0680 <line:590:6, col:32> '<dependent type>'
          (UnresolvedLookupExpr 0x9bf0630 <col:6, col:11> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b951f0)
          (DeclRefExpr 0x9bf0664 <col:24> '_BI2' lvalue ParmVar 0x9bf0330 '__result' '_BI2'))))))

;
    template <typename _BI1 = std::basic_string<wchar_t> *, typename _BI2 = std::basic_string<wchar_t> *> inline std::basic_string<wchar_t> *copy_backward(std::basic_string<wchar_t> *__first, std::basic_string<wchar_t> *__last, std::basic_string<wchar_t> *__result) (CompoundStmt 0xa0f2ab8 </usr/include/c++/4.6/bits/stl_algobase.h:614:5, line:626:5>
  (NullStmt 0x9bf0ba8 <line:621:54>)
  (ReturnStmt 0xa0f2aa8 <line:623:7, line:625:18>
    (ParenExpr 0xa0f2a90 <line:623:14, line:625:18> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *'
      (CallExpr 0xa0f2a58 <line:623:15, line:625:17> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *'
        (ImplicitCastExpr 0xa0f2a48 <line:623:15, col:77> 'class std::basic_string<wchar_t> *(*)(class std::basic_string<wchar_t> *, class std::basic_string<wchar_t> *, class std::basic_string<wchar_t> *)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa0f29d8 <col:15, col:77> 'class std::basic_string<wchar_t> *(class std::basic_string<wchar_t> *, class std::basic_string<wchar_t> *, class std::basic_string<wchar_t> *)' lvalue Function 0xa0f2900 '__copy_move_backward_a2' 'class std::basic_string<wchar_t> *(class std::basic_string<wchar_t> *, class std::basic_string<wchar_t> *, class std::basic_string<wchar_t> *)' (FunctionTemplate 0x9bf0420 '__copy_move_backward_a2')))
        (CallExpr 0xa0f24f8 <line:624:9, col:34> 'typename _Miter_base<class basic_string<wchar_t> *>::iterator_type':'class std::basic_string<wchar_t> *'
          (ImplicitCastExpr 0xa0f24e8 <col:9, col:14> 'typename _Miter_base<class basic_string<wchar_t> *>::iterator_type (*)(class std::basic_string<wchar_t> *)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa0f2488 <col:9, col:14> 'typename _Miter_base<class basic_string<wchar_t> *>::iterator_type (class std::basic_string<wchar_t> *)' lvalue Function 0xa0f23e0 '__miter_base' 'typename _Miter_base<class basic_string<wchar_t> *>::iterator_type (class std::basic_string<wchar_t> *)' (FunctionTemplate 0x9be4b80 '__miter_base')))
          (ImplicitCastExpr 0xa0f2518 <col:27> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' <LValueToRValue>
            (DeclRefExpr 0xa0f1b5c <col:27> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' lvalue ParmVar 0xa0ed740 '__first' 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *')))
        (CallExpr 0xa0f25e0 <col:37, col:61> 'typename _Miter_base<class basic_string<wchar_t> *>::iterator_type':'class std::basic_string<wchar_t> *'
          (ImplicitCastExpr 0xa0f25d0 <col:37, col:42> 'typename _Miter_base<class basic_string<wchar_t> *>::iterator_type (*)(class std::basic_string<wchar_t> *)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa0f25a8 <col:37, col:42> 'typename _Miter_base<class basic_string<wchar_t> *>::iterator_type (class std::basic_string<wchar_t> *)' lvalue Function 0xa0f23e0 '__miter_base' 'typename _Miter_base<class basic_string<wchar_t> *>::iterator_type (class std::basic_string<wchar_t> *)' (FunctionTemplate 0x9be4b80 '__miter_base')))
          (ImplicitCastExpr 0xa0f2600 <col:55> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' <LValueToRValue>
            (DeclRefExpr 0xa0f255c <col:55> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' lvalue ParmVar 0xa0ed780 '__last' 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *')))
        (ImplicitCastExpr 0xa0f2a80 <line:625:9> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' <LValueToRValue>
          (DeclRefExpr 0xa0f260c <col:9> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' lvalue ParmVar 0xa0ed7c0 '__result' 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *'))))))

template <typename _BI1, typename _BI2> inline _BI2 copy_backward(_BI1 __first, _BI1 __last, _BI2 __result) (CompoundStmt 0x9bf0ea8 </usr/include/c++/4.6/bits/stl_algobase.h:614:5, line:626:5>
  (NullStmt 0x9bf0ba8 <line:621:54>)
  (ReturnStmt 0x9bf0e98 <line:623:7, line:625:18>
    (ParenExpr 0x9bf0e80 <line:623:14, line:625:18> '<dependent type>'
      (CallExpr 0x9bf0e58 <line:623:15, line:625:17> '<dependent type>'
        (UnresolvedLookupExpr 0x9bf0cc8 <line:623:15, col:77> '<dependent type>' lvalue (no ADL) = '1' 0x9bf0420)
        (CallExpr 0x9bf0d98 <line:624:9, col:34> '<dependent type>'
          (UnresolvedLookupExpr 0x9bf0d48 <col:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0x9be4b80)
          (DeclRefExpr 0x9bf0d7c <col:27> '_BI1' lvalue ParmVar 0x9bf07d0 '__first' '_BI1'))
        (CallExpr 0x9bf0e20 <col:37, col:61> '<dependent type>'
          (UnresolvedLookupExpr 0x9bf0dd0 <col:37, col:42> '<overloaded function type>' lvalue (no ADL) = '1' 0x9be4b80)
          (DeclRefExpr 0x9bf0e04 <col:55> '_BI1' lvalue ParmVar 0x9bf0810 '__last' '_BI1'))
        (DeclRefExpr 0x9bf0e40 <line:625:9> '_BI2' lvalue ParmVar 0x9bf0850 '__result' '_BI2')))))

;
    template <typename _ForwardIterator, typename _Tp> inline typename __gnu_cxx::__enable_if<!__is_scalar<_Tp>::__value, void>::__type __fill_a(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__value) (CompoundStmt 0x9bf15b8 </usr/include/c++/4.6/bits/stl_algobase.h:674:5, line:677:5>
  (ForStmt 0x9bf1590 <line:675:7, line:676:13>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9bf14d8 <line:675:14, col:25> '<dependent type>'
      (UnresolvedLookupExpr 0x9bf1498 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bacde0 0x9bc3130 0x9bc62c0)
      (DeclRefExpr 0x9bf1464 <col:14> '_ForwardIterator' lvalue ParmVar 0x9bf1250 '__first' '_ForwardIterator')
      (DeclRefExpr 0x9bf147c <col:25> '_ForwardIterator' lvalue ParmVar 0x9bf1290 '__last' '_ForwardIterator'))
    (UnaryOperator 0x9bf1518 <col:33, col:35> '<dependent type>' prefix '++'
      (DeclRefExpr 0x9bf14fc <col:35> '_ForwardIterator' lvalue ParmVar 0x9bf1250 '__first' '_ForwardIterator'))
    (BinaryOperator 0x9bf1578 <line:676:2, col:13> '<dependent type>' '='
      (UnaryOperator 0x9bf1548 <col:2, col:3> '<dependent type>' prefix '*'
        (DeclRefExpr 0x9bf152c <col:3> '_ForwardIterator' lvalue ParmVar 0x9bf1250 '__first' '_ForwardIterator'))
      (DeclRefExpr 0x9bf155c <col:13> 'const _Tp' lvalue ParmVar 0x9bf1300 '__value' 'const _Tp &'))))

;
    template <typename _ForwardIterator = unsigned long *, typename _Tp = int> inline typename __gnu_cxx::__enable_if<__is_scalar<int>::__value, void>::__type __fill_a(unsigned long *__first, unsigned long *__last, const int &__value) (CompoundStmt 0xa0d5468 </usr/include/c++/4.6/bits/stl_algobase.h:684:5, line:688:5>
  (DeclStmt 0xa0d5290 <line:685:7, col:32>
    0xa0d5230 "const int __tmp =
      (ImplicitCastExpr 0xa0d5280 <col:25> 'int':'int' <LValueToRValue>
        (DeclRefExpr 0xa0d5264 <col:25> 'const int':'const int' lvalue ParmVar 0xa0d4e70 '__value' 'const int &'))")
  (ForStmt 0xa0d5440 <line:686:7, line:687:13>
    <<<NULL>>>
    <<<NULL>>>
    (BinaryOperator 0xa0d5330 <line:686:14, col:25> '_Bool' '!='
      (ImplicitCastExpr 0xa0d5310 <col:14> 'unsigned long *':'unsigned long *' <LValueToRValue>
        (DeclRefExpr 0xa0d52dc <col:14> 'unsigned long *':'unsigned long *' lvalue ParmVar 0xa0d4dc0 '__first' 'unsigned long *':'unsigned long *'))
      (ImplicitCastExpr 0xa0d5320 <col:25> 'unsigned long *':'unsigned long *' <LValueToRValue>
        (DeclRefExpr 0xa0d52f4 <col:25> 'unsigned long *':'unsigned long *' lvalue ParmVar 0xa0d4e00 '__last' 'unsigned long *':'unsigned long *')))
    (UnaryOperator 0xa0d5360 <col:33, col:35> 'unsigned long *':'unsigned long *' lvalue prefix '++'
      (DeclRefExpr 0xa0d5348 <col:35> 'unsigned long *':'unsigned long *' lvalue ParmVar 0xa0d4dc0 '__first' 'unsigned long *':'unsigned long *'))
    (BinaryOperator 0xa0d53f0 <line:687:2, col:13> 'unsigned long' lvalue '='
      (UnaryOperator 0xa0d53a0 <col:2, col:3> 'unsigned long' lvalue prefix '*'
        (ImplicitCastExpr 0xa0d5390 <col:3> 'unsigned long *':'unsigned long *' <LValueToRValue>
          (DeclRefExpr 0xa0d5374 <col:3> 'unsigned long *':'unsigned long *' lvalue ParmVar 0xa0d4dc0 '__first' 'unsigned long *':'unsigned long *')))
      (ImplicitCastExpr 0xa0d53e0 <col:13> 'unsigned long' <IntegralCast>
        (ImplicitCastExpr 0xa0d53d0 <col:13> 'int':'int' <LValueToRValue>
          (DeclRefExpr 0xa0d53b4 <col:13> 'const int':'const int' lvalue Var 0xa0d5230 '__tmp' 'const int':'const int'))))))

template <typename _ForwardIterator, typename _Tp> inline typename __gnu_cxx::__enable_if<__is_scalar<_Tp>::__value, void>::__type __fill_a(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__value) (CompoundStmt 0x9bf25b0 </usr/include/c++/4.6/bits/stl_algobase.h:684:5, line:688:5>
  (DeclStmt 0x9bf2450 <line:685:7, col:32>
    0x9bf2400 "const _Tp __tmp =
      (DeclRefExpr 0x9bf2434 <col:25> 'const _Tp' lvalue ParmVar 0x9bf19c0 '__value' 'const _Tp &')")
  (ForStmt 0x9bf2588 <line:686:7, line:687:13>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9bf24d0 <line:686:14, col:25> '<dependent type>'
      (UnresolvedLookupExpr 0x9bf2490 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bacde0 0x9bc3130 0x9bc62c0)
      (DeclRefExpr 0x9bf2460 <col:14> '_ForwardIterator' lvalue ParmVar 0x9bf1910 '__first' '_ForwardIterator')
      (DeclRefExpr 0x9bf2478 <col:25> '_ForwardIterator' lvalue ParmVar 0x9bf1950 '__last' '_ForwardIterator'))
    (UnaryOperator 0x9bf2510 <col:33, col:35> '<dependent type>' prefix '++'
      (DeclRefExpr 0x9bf24f4 <col:35> '_ForwardIterator' lvalue ParmVar 0x9bf1910 '__first' '_ForwardIterator'))
    (BinaryOperator 0x9bf2570 <line:687:2, col:13> '<dependent type>' '='
      (UnaryOperator 0x9bf2540 <col:2, col:3> '<dependent type>' prefix '*'
        (DeclRefExpr 0x9bf2524 <col:3> '_ForwardIterator' lvalue ParmVar 0x9bf1910 '__first' '_ForwardIterator'))
      (DeclRefExpr 0x9bf2554 <col:13> 'const _Tp' lvalue Var 0x9bf2400 '__tmp' 'const _Tp'))))

;
    template <typename _Tp> inline typename __gnu_cxx::__enable_if<__is_byte<_Tp>::__value, void>::__type __fill_a(_Tp *__first, _Tp *__last, const _Tp &__c) (CompoundStmt 0x9bf2e30 </usr/include/c++/4.6/bits/stl_algobase.h:695:5, line:699:5>
  (DeclStmt 0x9bf2b60 <line:696:7, col:28>
    0x9bf2b10 "const _Tp __tmp =
      (DeclRefExpr 0x9bf2b44 <col:25> 'const _Tp' lvalue ParmVar 0x9bf29a0 '__c' 'const _Tp &')")
  (CallExpr 0x9bf2e08 <line:697:7, line:698:26> '<dependent type>'
    (DeclRefExpr 0x9bf2d04 <line:697:7> 'void *(void *, int, unsigned int)' lvalue Function 0x9bf2ba0 '__builtin_memset' 'void *(void *, int, unsigned int)')
    (DeclRefExpr 0x9bf2d1c <col:24> '_Tp *' lvalue ParmVar 0x9bf28e0 '__first' '_Tp *')
    (CXXStaticCastExpr 0x9bf2d60 <col:33, col:65> 'unsigned char' static_cast<unsigned char> <Dependent>
      (DeclRefExpr 0x9bf2d34 <col:60> 'const _Tp' lvalue Var 0x9bf2b10 '__tmp' 'const _Tp'))
    (CXXOperatorCallExpr 0x9bf2de0 <line:698:10, col:19> '<dependent type>'
      (UnresolvedLookupExpr 0x9bf2da8 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
      (DeclRefExpr 0x9bf2d78 <col:10> '_Tp *' lvalue ParmVar 0x9bf2930 '__last' '_Tp *')
      (DeclRefExpr 0x9bf2d90 <col:19> '_Tp *' lvalue ParmVar 0x9bf28e0 '__first' '_Tp *'))))

;
    template <typename _ForwardIterator = std::_Bit_iterator, typename _Tp = bool> inline void fill(std::_Bit_iterator __first, std::_Bit_iterator __last, const bool &__value)template <typename _ForwardIterator = unsigned long *, typename _Tp = int> inline void fill(unsigned long *__first, unsigned long *__last, const int &__value) (CompoundStmt 0xa0d5080 </usr/include/c++/4.6/bits/stl_algobase.h:716:5, line:724:5>
  (NullStmt 0x9bf3118 <line:720:54>)
  (CallExpr 0xa0d5058 <line:722:7, line:723:14> 'typename __gnu_cxx::__enable_if<__is_scalar<int>::__value, void>::__type':'void'
    (ImplicitCastExpr 0xa0d5048 <line:722:7, col:12> 'typename __gnu_cxx::__enable_if<__is_scalar<int>::__value, void>::__type (*)(unsigned long *, unsigned long *, const int &)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa0d5004 <col:7, col:12> 'typename __gnu_cxx::__enable_if<__is_scalar<int>::__value, void>::__type (unsigned long *, unsigned long *, const int &)' lvalue Function 0xa0d4f00 '__fill_a' 'typename __gnu_cxx::__enable_if<__is_scalar<int>::__value, void>::__type (unsigned long *, unsigned long *, const int &)' (FunctionTemplate 0x9bf1af0 '__fill_a')))
    (CallExpr 0xa0d3018 <col:21, col:46> 'typename _Niter_base<unsigned long *>::iterator_type':'unsigned long *'
      (ImplicitCastExpr 0xa0d3008 <col:21, col:26> 'typename _Niter_base<unsigned long *>::iterator_type (*)(unsigned long *)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0d2fa8 <col:21, col:26> 'typename _Niter_base<unsigned long *>::iterator_type (unsigned long *)' lvalue Function 0xa0d2f00 '__niter_base' 'typename _Niter_base<unsigned long *>::iterator_type (unsigned long *)' (FunctionTemplate 0x9b951f0 '__niter_base')))
      (ImplicitCastExpr 0xa0d3038 <col:39> 'unsigned long *':'unsigned long *' <LValueToRValue>
        (DeclRefExpr 0xa0d242c <col:39> 'unsigned long *':'unsigned long *' lvalue ParmVar 0x9ff5ab0 '__first' 'unsigned long *':'unsigned long *')))
    (CallExpr 0xa0d3100 <col:49, col:73> 'typename _Niter_base<unsigned long *>::iterator_type':'unsigned long *'
      (ImplicitCastExpr 0xa0d30f0 <col:49, col:54> 'typename _Niter_base<unsigned long *>::iterator_type (*)(unsigned long *)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0d30c8 <col:49, col:54> 'typename _Niter_base<unsigned long *>::iterator_type (unsigned long *)' lvalue Function 0xa0d2f00 '__niter_base' 'typename _Niter_base<unsigned long *>::iterator_type (unsigned long *)' (FunctionTemplate 0x9b951f0 '__niter_base')))
      (ImplicitCastExpr 0xa0d3120 <col:67> 'unsigned long *':'unsigned long *' <LValueToRValue>
        (DeclRefExpr 0xa0d307c <col:67> 'unsigned long *':'unsigned long *' lvalue ParmVar 0x9ff5af0 '__last' 'unsigned long *':'unsigned long *')))
    (DeclRefExpr 0xa0d312c <line:723:7> 'const int':'const int' lvalue ParmVar 0x9ff5b80 '__value' 'const int &')))

template <typename _ForwardIterator, typename _Tp> inline void fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__value) (CompoundStmt 0x9bf32d8 </usr/include/c++/4.6/bits/stl_algobase.h:716:5, line:724:5>
  (NullStmt 0x9bf3118 <line:720:54>)
  (CallExpr 0x9bf32b0 <line:722:7, line:723:14> '<dependent type>'
    (UnresolvedLookupExpr 0x9bf3148 <line:722:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9bf1430 0x9bf1af0 0x9bf2ad0)
    (CallExpr 0x9bf31f0 <col:21, col:46> '<dependent type>'
      (UnresolvedLookupExpr 0x9bf31a0 <col:21, col:26> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b951f0)
      (DeclRefExpr 0x9bf31d4 <col:39> '_ForwardIterator' lvalue ParmVar 0x9bf2f10 '__first' '_ForwardIterator'))
    (CallExpr 0x9bf3278 <col:49, col:73> '<dependent type>'
      (UnresolvedLookupExpr 0x9bf3228 <col:49, col:54> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b951f0)
      (DeclRefExpr 0x9bf325c <col:67> '_ForwardIterator' lvalue ParmVar 0x9bf2f50 '__last' '_ForwardIterator'))
    (DeclRefExpr 0x9bf3298 <line:723:7> 'const _Tp' lvalue ParmVar 0x9bf2fc0 '__value' 'const _Tp &')))

;
    template <typename _OutputIterator, typename _Size, typename _Tp> inline typename __gnu_cxx::__enable_if<!__is_scalar<_Tp>::__value, _OutputIterator>::__type __fill_n_a(_OutputIterator __first, _Size __n, const _Tp &__value) (CompoundStmt 0x9bf4010 </usr/include/c++/4.6/bits/stl_algobase.h:730:5, line:735:5>
  (ForStmt 0x9bf3fc0 <line:731:7, line:733:13>
    (DeclStmt 0x9bf3e40 <line:731:12, col:45>
      0x9bf3df0 "decltype(__n + 0) __niter =
        (DeclRefExpr 0x9bf3e24 <col:42> '_Size' lvalue ParmVar 0x9bf3b30 '__n' '_Size')")
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9bf3ec0 <line:732:5, col:15> '<dependent type>'
      (UnresolvedLookupExpr 0x9bf3e80 <col:13, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bad330 0x9bc37b0 0x9bc6740)
      (DeclRefExpr 0x9bf3e50 <col:5> 'decltype(__n + 0)' lvalue Var 0x9bf3df0 '__niter' 'decltype(__n + 0)')
      (IntegerLiteral 0x9bf3e68 <col:15> 'int' 0))
    (BinaryOperator 0x9bf3f48 <col:18, col:31> '<dependent type>' ','
      (UnaryOperator 0x9bf3f00 <col:18, col:20> '<dependent type>' prefix '--'
        (DeclRefExpr 0x9bf3ee4 <col:20> 'decltype(__n + 0)' lvalue Var 0x9bf3df0 '__niter' 'decltype(__n + 0)'))
      (UnaryOperator 0x9bf3f30 <col:29, col:31> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9bf3f14 <col:31> '_OutputIterator' lvalue ParmVar 0x9bf3af0 '__first' '_OutputIterator')))
    (BinaryOperator 0x9bf3fa8 <line:733:2, col:13> '<dependent type>' '='
      (UnaryOperator 0x9bf3f78 <col:2, col:3> '<dependent type>' prefix '*'
        (DeclRefExpr 0x9bf3f60 <col:3> '_OutputIterator' lvalue ParmVar 0x9bf3af0 '__first' '_OutputIterator'))
      (DeclRefExpr 0x9bf3f8c <col:13> 'const _Tp' lvalue ParmVar 0x9bf3bc0 '__value' 'const _Tp &')))
  (ReturnStmt 0x9bf4000 <line:734:7, col:14>
    (DeclRefExpr 0x9bf3fe4 <col:14> '_OutputIterator' lvalue ParmVar 0x9bf3af0 '__first' '_OutputIterator')))

;
    template <typename _OutputIterator, typename _Size, typename _Tp> inline typename __gnu_cxx::__enable_if<__is_scalar<_Tp>::__value, _OutputIterator>::__type __fill_n_a(_OutputIterator __first, _Size __n, const _Tp &__value) (CompoundStmt 0x9bf4d38 </usr/include/c++/4.6/bits/stl_algobase.h:741:5, line:747:5>
  (DeclStmt 0x9bf4630 <line:742:7, col:32>
    0x9bf45e0 "const _Tp __tmp =
      (DeclRefExpr 0x9bf4614 <col:25> 'const _Tp' lvalue ParmVar 0x9bf4470 '__value' 'const _Tp &')")
  (ForStmt 0x9bf4ce8 <line:743:7, line:745:13>
    (DeclStmt 0x9bf4740 <line:743:12, col:45>
      0x9bf46f0 "decltype(__n + 0) __niter =
        (DeclRefExpr 0x9bf4724 <col:42> '_Size' lvalue ParmVar 0x9bf4400 '__n' '_Size')")
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9bf47c0 <line:744:5, col:15> '<dependent type>'
      (UnresolvedLookupExpr 0x9bf4780 <col:13, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bad330 0x9bc37b0 0x9bc6740)
      (DeclRefExpr 0x9bf4750 <col:5> 'decltype(__n + 0)' lvalue Var 0x9bf46f0 '__niter' 'decltype(__n + 0)')
      (IntegerLiteral 0x9bf4768 <col:15> 'int' 0))
    (BinaryOperator 0x9bf4c70 <col:18, col:31> '<dependent type>' ','
      (UnaryOperator 0x9bf4c28 <col:18, col:20> '<dependent type>' prefix '--'
        (DeclRefExpr 0x9bf47e4 <col:20> 'decltype(__n + 0)' lvalue Var 0x9bf46f0 '__niter' 'decltype(__n + 0)'))
      (UnaryOperator 0x9bf4c58 <col:29, col:31> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9bf4c3c <col:31> '_OutputIterator' lvalue ParmVar 0x9bf43c0 '__first' '_OutputIterator')))
    (BinaryOperator 0x9bf4cd0 <line:745:2, col:13> '<dependent type>' '='
      (UnaryOperator 0x9bf4ca0 <col:2, col:3> '<dependent type>' prefix '*'
        (DeclRefExpr 0x9bf4c88 <col:3> '_OutputIterator' lvalue ParmVar 0x9bf43c0 '__first' '_OutputIterator'))
      (DeclRefExpr 0x9bf4cb4 <col:13> 'const _Tp' lvalue Var 0x9bf45e0 '__tmp' 'const _Tp')))
  (ReturnStmt 0x9bf4d28 <line:746:7, col:14>
    (DeclRefExpr 0x9bf4d0c <col:14> '_OutputIterator' lvalue ParmVar 0x9bf43c0 '__first' '_OutputIterator')))

;
    template <typename _Size, typename _Tp> inline typename __gnu_cxx::__enable_if<__is_byte<_Tp>::__value, _Tp *>::__type __fill_n_a(_Tp *__first, _Size __n, const _Tp &__c) (CompoundStmt 0x9bf5500 </usr/include/c++/4.6/bits/stl_algobase.h:753:5, line:756:5>
  (CallExpr 0x9bf5438 <line:754:7, col:48> '<dependent type>'
    (UnresolvedLookupExpr 0x9bf5338 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9bf1430 0x9bf1af0 0x9bf2ad0)
    (DeclRefExpr 0x9bf5374 <col:21> '_Tp *' lvalue ParmVar 0x9bf5100 '__first' '_Tp *')
    (CXXOperatorCallExpr 0x9bf53f8 <col:30, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0x9bf53c0 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0)
      (DeclRefExpr 0x9bf538c <col:30> '_Tp *' lvalue ParmVar 0x9bf5100 '__first' '_Tp *')
      (DeclRefExpr 0x9bf53a4 <col:40> '_Size' lvalue ParmVar 0x9bf5140 '__n' '_Size'))
    (DeclRefExpr 0x9bf541c <col:45> 'const _Tp' lvalue ParmVar 0x9bf51b0 '__c' 'const _Tp &'))
  (ReturnStmt 0x9bf54f0 <line:755:7, col:24>
    (CXXOperatorCallExpr 0x9bf54c8 <col:14, col:24> '<dependent type>'
      (UnresolvedLookupExpr 0x9bf5490 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0)
      (DeclRefExpr 0x9bf5460 <col:14> '_Tp *' lvalue ParmVar 0x9bf5100 '__first' '_Tp *')
      (DeclRefExpr 0x9bf5478 <col:24> '_Size' lvalue ParmVar 0x9bf5140 '__n' '_Size'))))

;
    template <typename _OI, typename _Size, typename _Tp> inline _OI fill_n(_OI __first, _Size __n, const _Tp &__value) (CompoundStmt 0x9bf59a8 </usr/include/c++/4.6/bits/stl_algobase.h:776:5, line:781:5>
  (ReturnStmt 0x9bf5998 <line:780:7, col:75>
    (CXXUnresolvedConstructExpr 0x9bf5978 <col:14, col:75> '_OI'
      (CallExpr 0x9bf5950 <col:18, col:74> '<dependent type>'
        (UnresolvedLookupExpr 0x9bf5858 <col:18, col:23> '<overloaded function type>' lvalue (no ADL) = '1' 0x9bf3cf0 0x9bf45a0 0x9bf52e0)
        (CallExpr 0x9bf5900 <col:34, col:59> '<dependent type>'
          (UnresolvedLookupExpr 0x9bf58b0 <col:34, col:39> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b951f0)
          (DeclRefExpr 0x9bf58e4 <col:52> '_OI' lvalue ParmVar 0x9bf5630 '__first' '_OI'))
        (DeclRefExpr 0x9bf5920 <col:62> '_Size' lvalue ParmVar 0x9bf5670 '__n' '_Size')
        (DeclRefExpr 0x9bf5938 <col:67> 'const _Tp' lvalue ParmVar 0x9bf56e0 '__value' 'const _Tp &')))))

;
    template <bool _BoolType = true> struct __equal {
        struct __equal;
        template <typename _Tp> static bool equal(const _Tp *__first1, const _Tp *__last1, const _Tp *__first2) (CompoundStmt 0x9bf77b0 </usr/include/c++/4.6/bits/stl_algobase.h:803:9, line:806:2>
  (ReturnStmt 0x9bf77a0 <line:804:4, line:805:30>
    (UnaryOperator 0x9bf7788 <line:804:11, line:805:30> '<dependent type>' prefix '!'
      (CallExpr 0x9bf7760 <line:804:12, line:805:30> '<dependent type>'
        (DeclRefExpr 0x9bf7634 <line:804:12> 'int (const void *, const void *, unsigned int)' lvalue Function 0x9bf74d0 '__builtin_memcmp' 'int (const void *, const void *, unsigned int)')
        (DeclRefExpr 0x9bf764c <col:29> 'const _Tp *' lvalue ParmVar 0x9bf7290 '__first1' 'const _Tp *')
        (DeclRefExpr 0x9bf7664 <col:39> 'const _Tp *' lvalue ParmVar 0x9bf7330 '__first2' 'const _Tp *')
        (BinaryOperator 0x9bf7748 <col:49, line:805:29> '<dependent type>' '*'
          (UnaryExprOrTypeTraitExpr 0x9bf7688 <line:804:49, col:59> 'unsigned int' sizeof '_Tp')
          (ParenExpr 0x9bf7730 <line:805:10, col:29> '<dependent type>'
            (CXXOperatorCallExpr 0x9bf7708 <col:11, col:21> '<dependent type>'
              (UnresolvedLookupExpr 0x9bf76d0 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
              (DeclRefExpr 0x9bf76a0 <col:11> 'const _Tp *' lvalue ParmVar 0x9bf72e0 '__last1' 'const _Tp *')
              (DeclRefExpr 0x9bf76b8 <col:21> 'const _Tp *' lvalue ParmVar 0x9bf7290 '__first1' 'const _Tp *'))))))))

;
    }
template <bool _BoolType> struct __equal {
        struct __equal;
        template <typename _II1, typename _II2> static bool equal(_II1 __first1, _II1 __last1, _II2 __first2) (CompoundStmt 0x9bf6fe0 </usr/include/c++/4.6/bits/stl_algobase.h:789:9, line:794:2>
  (ForStmt 0x9bf6f98 <line:790:4, line:792:15>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9bf6dc0 <line:790:11, col:23> '<dependent type>'
      (UnresolvedLookupExpr 0x9bf6d80 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bacde0 0x9bc3130 0x9bc62c0)
      (DeclRefExpr 0x9bf6d50 <col:11> '_II1' lvalue ParmVar 0x9bf6b60 '__first1' '_II1')
      (DeclRefExpr 0x9bf6d68 <col:23> '_II1' lvalue ParmVar 0x9bf6ba0 '__last1' '_II1'))
    (BinaryOperator 0x9bf6e48 <col:32, col:46> '<dependent type>' ','
      (UnaryOperator 0x9bf6e00 <col:32, col:34> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9bf6de4 <col:34> '_II1' lvalue ParmVar 0x9bf6b60 '__first1' '_II1'))
      (UnaryOperator 0x9bf6e30 <col:44, col:46> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9bf6e14 <col:46> '_II2' lvalue ParmVar 0x9bf6be0 '__first2' '_II2')))
    (IfStmt 0x9bf6f78 <line:791:6, line:792:15>
      <<<NULL>>>
      (UnaryOperator 0x9bf6f40 <line:791:10, col:34> '<dependent type>' prefix '!'
        (ParenExpr 0x9bf6f28 <col:11, col:34> '<dependent type>'
          (CXXOperatorCallExpr 0x9bf6f00 <col:12, col:26> '<dependent type>'
            (UnresolvedLookupExpr 0x9bf6ec0 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090)
            (UnaryOperator 0x9bf6e78 <col:12, col:13> '<dependent type>' prefix '*'
              (DeclRefExpr 0x9bf6e60 <col:13> '_II1' lvalue ParmVar 0x9bf6b60 '__first1' '_II1'))
            (UnaryOperator 0x9bf6ea8 <col:25, col:26> '<dependent type>' prefix '*'
              (DeclRefExpr 0x9bf6e8c <col:26> '_II2' lvalue ParmVar 0x9bf6be0 '__first2' '_II2')))))
      (ReturnStmt 0x9bf6f68 <line:792:8, col:15>
        (CXXBoolLiteralExpr 0x9bf6f58 <col:15> '_Bool' false))
      <<<NULL>>>))
  (ReturnStmt 0x9bf6fd0 <line:793:4, col:11>
    (CXXBoolLiteralExpr 0x9bf6fc0 <col:11> '_Bool' true)))

;
    };
    struct __equal {
        struct __equal;
        template <typename _Tp> static bool equal(const _Tp *__first1, const _Tp *__last1, const _Tp *__first2) (CompoundStmt 0x9bf77b0 </usr/include/c++/4.6/bits/stl_algobase.h:803:9, line:806:2>
  (ReturnStmt 0x9bf77a0 <line:804:4, line:805:30>
    (UnaryOperator 0x9bf7788 <line:804:11, line:805:30> '<dependent type>' prefix '!'
      (CallExpr 0x9bf7760 <line:804:12, line:805:30> '<dependent type>'
        (DeclRefExpr 0x9bf7634 <line:804:12> 'int (const void *, const void *, unsigned int)' lvalue Function 0x9bf74d0 '__builtin_memcmp' 'int (const void *, const void *, unsigned int)')
        (DeclRefExpr 0x9bf764c <col:29> 'const _Tp *' lvalue ParmVar 0x9bf7290 '__first1' 'const _Tp *')
        (DeclRefExpr 0x9bf7664 <col:39> 'const _Tp *' lvalue ParmVar 0x9bf7330 '__first2' 'const _Tp *')
        (BinaryOperator 0x9bf7748 <col:49, line:805:29> '<dependent type>' '*'
          (UnaryExprOrTypeTraitExpr 0x9bf7688 <line:804:49, col:59> 'unsigned int' sizeof '_Tp')
          (ParenExpr 0x9bf7730 <line:805:10, col:29> '<dependent type>'
            (CXXOperatorCallExpr 0x9bf7708 <col:11, col:21> '<dependent type>'
              (UnresolvedLookupExpr 0x9bf76d0 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
              (DeclRefExpr 0x9bf76a0 <col:11> 'const _Tp *' lvalue ParmVar 0x9bf72e0 '__last1' 'const _Tp *')
              (DeclRefExpr 0x9bf76b8 <col:21> 'const _Tp *' lvalue ParmVar 0x9bf7290 '__first1' 'const _Tp *'))))))))

;
    };
    template <typename _II1, typename _II2> inline bool __equal_aux(_II1 __first1, _II1 __last1, _II2 __first2) (CompoundStmt 0x9bf8f68 </usr/include/c++/4.6/bits/stl_algobase.h:812:5, line:821:5>
  (DeclStmt 0x9bf87a0 <line:813:7, col:69>
    0x9bf8770 "typedef typename iterator_traits<_II1>::value_type _ValueType1")
  (DeclStmt 0x9bf88d0 <line:814:7, col:69>
    0x9bf88a0 "typedef typename iterator_traits<_II2>::value_type _ValueType2")
  (DeclStmt 0x9bf8da0 <line:815:7, line:818:58>
    0x9bf88f0 "const bool __simple =
      (ParenExpr 0x9bf8d88 <line:815:29, line:818:57> '<dependent type>'
        (BinaryOperator 0x9bf8d70 <line:815:30, line:818:50> '<dependent type>' '&&'
          (BinaryOperator 0x9bf8c18 <line:815:30, line:817:46> '<dependent type>' '&&'
            (BinaryOperator 0x9bf8b28 <line:815:30, line:816:46> '<dependent type>' '&&'
              (DependentScopeDeclRefExpr 0x9bf8a30 <line:815:30, col:57> '<dependent type>' lvalue)
              (DependentScopeDeclRefExpr 0x9bf8b00 <line:816:26, col:46> '<dependent type>' lvalue))
            (DependentScopeDeclRefExpr 0x9bf8bf0 <line:817:26, col:46> '<dependent type>' lvalue))
          (DependentScopeDeclRefExpr 0x9bf8d48 <line:818:12, col:50> '<dependent type>' lvalue)))")
  (ReturnStmt 0x9bf8f58 <line:820:7, col:71>
    (CallExpr 0x9bf8f30 <col:14, col:71> '<dependent type>'
      (DependentScopeDeclRefExpr 0x9bf8ec0 <col:14, col:38> '<dependent type>' lvalue)
      (DeclRefExpr 0x9bf8ee4 <col:44> '_II1' lvalue ParmVar 0x9bf7890 '__first1' '_II1')
      (DeclRefExpr 0x9bf8efc <col:54> '_II1' lvalue ParmVar 0x9bf78d0 '__last1' '_II1')
      (DeclRefExpr 0x9bf8f14 <col:63> '_II2' lvalue ParmVar 0x9bf7910 '__first2' '_II2'))))

;
    template <typename  = std::random_access_iterator_tag, typename  = std::random_access_iterator_tag> struct __lc_rai {
        struct __lc_rai;
        template <typename _RAI1, typename _RAI2> static _RAI1 __newlast1(_RAI1 __first1, _RAI1 __last1, _RAI2 __first2, _RAI2 __last2) (CompoundStmt 0x9bfa788 </usr/include/c++/4.6/bits/stl_algobase.h:845:9, line:851:2>
  (DeclStmt 0x9bfa428 <line:846:4, line:847:34>
    0x9bfa360 "const typename iterator_traits<_RAI1>::difference_type __diff1 =
      (CXXOperatorCallExpr 0x9bfa400 <col:16, col:26> '<dependent type>'
        (UnresolvedLookupExpr 0x9bfa3c8 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
        (DeclRefExpr 0x9bfa394 <col:16> '_RAI1' lvalue ParmVar 0x9bf9eb0 '__last1' '_RAI1')
        (DeclRefExpr 0x9bfa3ac <col:26> '_RAI1' lvalue ParmVar 0x9bf9e70 '__first1' '_RAI1'))")
  (DeclStmt 0x9bfa608 <line:848:4, line:849:34>
    0x9bfa540 "const typename iterator_traits<_RAI2>::difference_type __diff2 =
      (CXXOperatorCallExpr 0x9bfa5e0 <col:16, col:26> '<dependent type>'
        (UnresolvedLookupExpr 0x9bfa5a8 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
        (DeclRefExpr 0x9bfa574 <col:16> '_RAI2' lvalue ParmVar 0x9bf9f30 '__last2' '_RAI2')
        (DeclRefExpr 0x9bfa58c <col:26> '_RAI2' lvalue ParmVar 0x9bf9ef0 '__first2' '_RAI2'))")
  (ReturnStmt 0x9bfa778 <line:850:4, col:52>
    (ConditionalOperator 0x9bfa758 <col:11, col:52> '<dependent type>'
      (CXXOperatorCallExpr 0x9bfa688 <col:11, col:21> '<dependent type>'
        (UnresolvedLookupExpr 0x9bfa648 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bac3c0 0x9bc2c90 0x9bc5590)
        (DeclRefExpr 0x9bfa618 <col:11> 'const typename iterator_traits<_RAI2>::difference_type' lvalue Var 0x9bfa540 '__diff2' 'const typename iterator_traits<_RAI2>::difference_type')
        (DeclRefExpr 0x9bfa630 <col:21> 'const typename iterator_traits<_RAI1>::difference_type' lvalue Var 0x9bfa360 '__diff1' 'const typename iterator_traits<_RAI1>::difference_type'))
      (CXXOperatorCallExpr 0x9bfa718 <col:31, col:42> '<dependent type>'
        (UnresolvedLookupExpr 0x9bfa6e0 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0)
        (DeclRefExpr 0x9bfa6ac <col:31> '_RAI1' lvalue ParmVar 0x9bf9e70 '__first1' '_RAI1')
        (DeclRefExpr 0x9bfa6c4 <col:42> 'const typename iterator_traits<_RAI2>::difference_type' lvalue Var 0x9bfa540 '__diff2' 'const typename iterator_traits<_RAI2>::difference_type'))
      (DeclRefExpr 0x9bfa73c <col:52> '_RAI1' lvalue ParmVar 0x9bf9eb0 '__last1' '_RAI1'))))

;
        template <typename _RAI> static bool __cnd2(_RAI, _RAI) (CompoundStmt 0x9bfa7c8 </usr/include/c++/4.6/bits/stl_algobase.h:856:9, col:24>
  (ReturnStmt 0x9bfa7b8 <col:11, col:18>
    (CXXBoolLiteralExpr 0x9bfa7a8 <col:18> '_Bool' true)))

;
    }
template <typename , typename > struct __lc_rai {
        struct __lc_rai;
        template <typename _II1, typename _II2> static _II1 __newlast1(_II1, _II1 __last1, _II2, _II2) (CompoundStmt 0x9bf9a98 </usr/include/c++/4.6/bits/stl_algobase.h:830:9, col:27>
  (ReturnStmt 0x9bf9a88 <col:11, col:18>
    (DeclRefExpr 0x9bf9a70 <col:18> '_II1' lvalue ParmVar 0x9bf9370 '__last1' '_II1')))

;
        template <typename _II> static bool __cnd2(_II __first, _II __last) (CompoundStmt 0x9bf9b58 </usr/include/c++/4.6/bits/stl_algobase.h:835:9, col:37>
  (ReturnStmt 0x9bf9b48 <col:11, col:29>
    (CXXOperatorCallExpr 0x9bf9b20 <col:18, col:29> '<dependent type>'
      (UnresolvedLookupExpr 0x9bf9ae0 <col:26, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bacde0 0x9bc3130 0x9bc62c0)
      (DeclRefExpr 0x9bf9aac <col:18> '_II' lvalue ParmVar 0x9bf95b0 '__first' '_II')
      (DeclRefExpr 0x9bf9ac4 <col:29> '_II' lvalue ParmVar 0x9bf95f0 '__last' '_II'))))

;
    };
    struct __lc_rai {
        struct __lc_rai;
        template <typename _RAI1, typename _RAI2> static _RAI1 __newlast1(_RAI1 __first1, _RAI1 __last1, _RAI2 __first2, _RAI2 __last2) (CompoundStmt 0x9bfa788 </usr/include/c++/4.6/bits/stl_algobase.h:845:9, line:851:2>
  (DeclStmt 0x9bfa428 <line:846:4, line:847:34>
    0x9bfa360 "const typename iterator_traits<_RAI1>::difference_type __diff1 =
      (CXXOperatorCallExpr 0x9bfa400 <col:16, col:26> '<dependent type>'
        (UnresolvedLookupExpr 0x9bfa3c8 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
        (DeclRefExpr 0x9bfa394 <col:16> '_RAI1' lvalue ParmVar 0x9bf9eb0 '__last1' '_RAI1')
        (DeclRefExpr 0x9bfa3ac <col:26> '_RAI1' lvalue ParmVar 0x9bf9e70 '__first1' '_RAI1'))")
  (DeclStmt 0x9bfa608 <line:848:4, line:849:34>
    0x9bfa540 "const typename iterator_traits<_RAI2>::difference_type __diff2 =
      (CXXOperatorCallExpr 0x9bfa5e0 <col:16, col:26> '<dependent type>'
        (UnresolvedLookupExpr 0x9bfa5a8 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
        (DeclRefExpr 0x9bfa574 <col:16> '_RAI2' lvalue ParmVar 0x9bf9f30 '__last2' '_RAI2')
        (DeclRefExpr 0x9bfa58c <col:26> '_RAI2' lvalue ParmVar 0x9bf9ef0 '__first2' '_RAI2'))")
  (ReturnStmt 0x9bfa778 <line:850:4, col:52>
    (ConditionalOperator 0x9bfa758 <col:11, col:52> '<dependent type>'
      (CXXOperatorCallExpr 0x9bfa688 <col:11, col:21> '<dependent type>'
        (UnresolvedLookupExpr 0x9bfa648 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bac3c0 0x9bc2c90 0x9bc5590)
        (DeclRefExpr 0x9bfa618 <col:11> 'const typename iterator_traits<_RAI2>::difference_type' lvalue Var 0x9bfa540 '__diff2' 'const typename iterator_traits<_RAI2>::difference_type')
        (DeclRefExpr 0x9bfa630 <col:21> 'const typename iterator_traits<_RAI1>::difference_type' lvalue Var 0x9bfa360 '__diff1' 'const typename iterator_traits<_RAI1>::difference_type'))
      (CXXOperatorCallExpr 0x9bfa718 <col:31, col:42> '<dependent type>'
        (UnresolvedLookupExpr 0x9bfa6e0 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0)
        (DeclRefExpr 0x9bfa6ac <col:31> '_RAI1' lvalue ParmVar 0x9bf9e70 '__first1' '_RAI1')
        (DeclRefExpr 0x9bfa6c4 <col:42> 'const typename iterator_traits<_RAI2>::difference_type' lvalue Var 0x9bfa540 '__diff2' 'const typename iterator_traits<_RAI2>::difference_type'))
      (DeclRefExpr 0x9bfa73c <col:52> '_RAI1' lvalue ParmVar 0x9bf9eb0 '__last1' '_RAI1'))))

;
        template <typename _RAI> static bool __cnd2(_RAI, _RAI) (CompoundStmt 0x9bfa7c8 </usr/include/c++/4.6/bits/stl_algobase.h:856:9, col:24>
  (ReturnStmt 0x9bfa7b8 <col:11, col:18>
    (CXXBoolLiteralExpr 0x9bfa7a8 <col:18> '_Bool' true)))

;
    };
    template <bool _BoolType = true> struct __lexicographical_compare {
        struct __lexicographical_compare;
        template <typename _Tp, typename _Up> static bool __lc(const _Tp *__first1, const _Tp *__last1, const _Up *__first2, const _Up *__last2) (CompoundStmt 0x9bfe3a0 </usr/include/c++/4.6/bits/stl_algobase.h:896:2, line:902:2>
  (DeclStmt 0x9bfd308 <line:897:4, col:44>
    0x9bfd240 "const size_t __len1 =
      (CXXOperatorCallExpr 0x9bfd2e0 <col:26, col:36> '<dependent type>'
        (UnresolvedLookupExpr 0x9bfd2a8 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
        (DeclRefExpr 0x9bfd274 <col:26> 'const _Tp *' lvalue ParmVar 0x9bfd000 '__last1' 'const _Tp *')
        (DeclRefExpr 0x9bfd28c <col:36> 'const _Tp *' lvalue ParmVar 0x9bfcfb0 '__first1' 'const _Tp *'))")
  (DeclStmt 0x9bfd3e8 <line:898:4, col:44>
    0x9bfd320 "const size_t __len2 =
      (CXXOperatorCallExpr 0x9bfd3c0 <col:26, col:36> '<dependent type>'
        (UnresolvedLookupExpr 0x9bfd388 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
        (DeclRefExpr 0x9bfd354 <col:26> 'const _Up *' lvalue ParmVar 0x9bfd0c0 '__last2' 'const _Up *')
        (DeclRefExpr 0x9bfd36c <col:36> 'const _Up *' lvalue ParmVar 0x9bfd070 '__first2' 'const _Up *'))")
  (DeclStmt 0x9bfe248 <line:899:4, line:900:32>
    0x9bfd410 "const int __result =
      (CallExpr 0x9bfd800 <line:899:25, line:900:31> '<dependent type>'
        (DeclRefExpr 0x9bfd444 <line:899:25> 'int (const void *, const void *, unsigned int)' lvalue Function 0x9bf74d0 '__builtin_memcmp' 'int (const void *, const void *, unsigned int)')
        (DeclRefExpr 0x9bfd45c <col:42> 'const _Tp *' lvalue ParmVar 0x9bfcfb0 '__first1' 'const _Tp *')
        (DeclRefExpr 0x9bfd474 <col:52> 'const _Up *' lvalue ParmVar 0x9bfd070 '__first2' 'const _Up *')
        (CallExpr 0x9bfd7d8 <line:900:7, col:30> 'const unsigned int':'const unsigned int' lvalue
          (ImplicitCastExpr 0x9bfd7c8 <col:7, col:12> 'const unsigned int &(*)(const unsigned int &, const unsigned int &)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9bfd768 <col:7, col:12> 'const unsigned int &(const unsigned int &, const unsigned int &)' lvalue Function 0x9bfd6c0 'min' 'const unsigned int &(const unsigned int &, const unsigned int &)' (FunctionTemplate 0x9bdffa0 'min')))
          (DeclRefExpr 0x9bfd4e0 <col:16> 'const size_t':'const unsigned int' lvalue Var 0x9bfd240 '__len1' 'const size_t':'const unsigned int')
          (DeclRefExpr 0x9bfd4f8 <col:24> 'const size_t':'const unsigned int' lvalue Var 0x9bfd320 '__len2' 'const size_t':'const unsigned int')))")
  (ReturnStmt 0x9bfe390 <line:901:4, col:51>
    (ConditionalOperator 0x9bfe370 <col:11, col:51> '_Bool'
      (BinaryOperator 0x9bfe298 <col:11, col:23> '_Bool' '!='
        (ImplicitCastExpr 0x9bfe288 <col:11> 'int' <LValueToRValue>
          (DeclRefExpr 0x9bfe258 <col:11> 'const int' lvalue Var 0x9bfd410 '__result' 'const int'))
        (IntegerLiteral 0x9bfe270 <col:23> 'int' 0))
      (BinaryOperator 0x9bfe2f0 <col:27, col:38> '_Bool' '<'
        (ImplicitCastExpr 0x9bfe2e0 <col:27> 'int' <LValueToRValue>
          (DeclRefExpr 0x9bfe2b0 <col:27> 'const int' lvalue Var 0x9bfd410 '__result' 'const int'))
        (IntegerLiteral 0x9bfe2c8 <col:38> 'int' 0))
      (BinaryOperator 0x9bfe358 <col:42, col:51> '_Bool' '<'
        (ImplicitCastExpr 0x9bfe338 <col:42> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9bfe308 <col:42> 'const size_t':'const unsigned int' lvalue Var 0x9bfd240 '__len1' 'const size_t':'const unsigned int'))
        (ImplicitCastExpr 0x9bfe348 <col:51> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9bfe320 <col:51> 'const size_t':'const unsigned int' lvalue Var 0x9bfd320 '__len2' 'const size_t':'const unsigned int'))))))

;
    }
template <bool _BoolType> struct __lexicographical_compare {
        struct __lexicographical_compare;
        template <typename _II1, typename _II2> static bool __lc(_II1, _II1, _II2, _II2);
    };
    template <typename _II1, typename _II2> static bool __lc(_II1 __first1, _II1 __last1, _II2 __first2, _II2 __last2) (CompoundStmt 0x9bfcca8 </usr/include/c++/4.6/bits/stl_algobase.h:871:7, line:887:7>
  (DeclStmt 0x9bfbf20 <line:872:2, col:70>
    0x9bfbef0 "typedef typename iterator_traits<_II1>::iterator_category _Category1")
  (DeclStmt 0x9bfc0b0 <line:873:2, col:70>
    0x9bfc080 "typedef typename iterator_traits<_II2>::iterator_category _Category2")
  (DeclStmt 0x9bfc2d0 <line:874:2, col:59>
    0x9bfc2a0 "typedef std::__lc_rai<_Category1, _Category2> __rai_type")
  (BinaryOperator 0x9bfc3f0 <line:876:2, line:877:24> '<dependent type>' '='
    (DeclRefExpr 0x9bfc2e0 <line:876:2> '_II1' lvalue ParmVar 0x9bfbbd0 '__last1' '_II1')
    (CallExpr 0x9bfc3c0 <col:12, line:877:24> '<dependent type>'
      (DependentScopeDeclRefExpr 0x9bfc338 <line:876:12, col:24> '<dependent type>' lvalue)
      (DeclRefExpr 0x9bfc35c <col:35> '_II1' lvalue ParmVar 0x9bfbb90 '__first1' '_II1')
      (DeclRefExpr 0x9bfc374 <col:45> '_II1' lvalue ParmVar 0x9bfbbd0 '__last1' '_II1')
      (DeclRefExpr 0x9bfc38c <line:877:7> '_II2' lvalue ParmVar 0x9bfbc10 '__first2' '_II2')
      (DeclRefExpr 0x9bfc3a4 <col:17> '_II2' lvalue ParmVar 0x9bfbc50 '__last2' '_II2')))
  (ForStmt 0x9bfcb28 <line:878:2, line:885:4>
    <<<NULL>>>
    <<<NULL>>>
    (BinaryOperator 0x9bfc870 <line:878:9, col:68> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x9bfc478 <col:9, col:21> '<dependent type>'
        (UnresolvedLookupExpr 0x9bfc438 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bacde0 0x9bc3130 0x9bc62c0)
        (DeclRefExpr 0x9bfc408 <col:9> '_II1' lvalue ParmVar 0x9bfbb90 '__first1' '_II1')
        (DeclRefExpr 0x9bfc420 <col:21> '_II1' lvalue ParmVar 0x9bfbbd0 '__last1' '_II1'))
      (CallExpr 0x9bfc848 <col:32, col:68> '<dependent type>'
        (DependentScopeDeclRefExpr 0x9bfc4c0 <col:32, col:44> '<dependent type>' lvalue)
        (DeclRefExpr 0x9bfc4e4 <col:51> '_II2' lvalue ParmVar 0x9bfbc10 '__first2' '_II2')
        (DeclRefExpr 0x9bfc830 <col:61> '_II2' lvalue ParmVar 0x9bfbc50 '__last2' '_II2')))
    (BinaryOperator 0x9bfc8e8 <line:879:7, col:21> '<dependent type>' ','
      (UnaryOperator 0x9bfc8a0 <col:7, col:9> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9bfc888 <col:9> '_II1' lvalue ParmVar 0x9bfbb90 '__first1' '_II1'))
      (UnaryOperator 0x9bfc8d0 <col:19, col:21> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9bfc8b4 <col:21> '_II2' lvalue ParmVar 0x9bfbc10 '__first2' '_II2')))
    (CompoundStmt 0x9bfcb10 <line:880:4, line:885:4>
      (IfStmt 0x9bfc9e8 <line:881:6, line:882:15>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9bfc9a0 <line:881:10, col:23> '<dependent type>'
          (UnresolvedLookupExpr 0x9bfc960 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bac3c0 0x9bc2c90 0x9bc5590)
          (UnaryOperator 0x9bfc918 <col:10, col:11> '<dependent type>' prefix '*'
            (DeclRefExpr 0x9bfc900 <col:11> '_II1' lvalue ParmVar 0x9bfbb90 '__first1' '_II1'))
          (UnaryOperator 0x9bfc948 <col:22, col:23> '<dependent type>' prefix '*'
            (DeclRefExpr 0x9bfc92c <col:23> '_II2' lvalue ParmVar 0x9bfbc10 '__first2' '_II2')))
        (ReturnStmt 0x9bfc9d8 <line:882:8, col:15>
          (CXXBoolLiteralExpr 0x9bfc9c8 <col:15> '_Bool' true))
        <<<NULL>>>)
      (IfStmt 0x9bfcaf0 <line:883:6, line:884:15>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9bfcaa8 <line:883:10, col:23> '<dependent type>'
          (UnresolvedLookupExpr 0x9bfca68 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bac3c0 0x9bc2c90 0x9bc5590)
          (UnaryOperator 0x9bfca20 <col:10, col:11> '<dependent type>' prefix '*'
            (DeclRefExpr 0x9bfca04 <col:11> '_II2' lvalue ParmVar 0x9bfbc10 '__first2' '_II2'))
          (UnaryOperator 0x9bfca50 <col:22, col:23> '<dependent type>' prefix '*'
            (DeclRefExpr 0x9bfca34 <col:23> '_II1' lvalue ParmVar 0x9bfbb90 '__first1' '_II1')))
        (ReturnStmt 0x9bfcae0 <line:884:8, col:15>
          (CXXBoolLiteralExpr 0x9bfcad0 <col:15> '_Bool' false))
        <<<NULL>>>)))
  (ReturnStmt 0x9bfcc98 <line:886:2, col:44>
    (BinaryOperator 0x9bfcc80 <col:9, col:44> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x9bfcbc0 <col:9, col:21> '<dependent type>'
        (UnresolvedLookupExpr 0x9bfcb80 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090)
        (DeclRefExpr 0x9bfcb4c <col:9> '_II1' lvalue ParmVar 0x9bfbb90 '__first1' '_II1')
        (DeclRefExpr 0x9bfcb64 <col:21> '_II1' lvalue ParmVar 0x9bfbbd0 '__last1' '_II1'))
      (CXXOperatorCallExpr 0x9bfcc58 <col:32, col:44> '<dependent type>'
        (UnresolvedLookupExpr 0x9bfcc18 <col:41, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bacde0 0x9bc3130 0x9bc62c0)
        (DeclRefExpr 0x9bfcbe4 <col:32> '_II2' lvalue ParmVar 0x9bfbc10 '__first2' '_II2')
        (DeclRefExpr 0x9bfcbfc <col:44> '_II2' lvalue ParmVar 0x9bfbc50 '__last2' '_II2')))))

;
    struct __lexicographical_compare {
        struct __lexicographical_compare;
        template <typename _Tp, typename _Up> static bool __lc(const _Tp *__first1, const _Tp *__last1, const _Up *__first2, const _Up *__last2) (CompoundStmt 0x9bfe3a0 </usr/include/c++/4.6/bits/stl_algobase.h:896:2, line:902:2>
  (DeclStmt 0x9bfd308 <line:897:4, col:44>
    0x9bfd240 "const size_t __len1 =
      (CXXOperatorCallExpr 0x9bfd2e0 <col:26, col:36> '<dependent type>'
        (UnresolvedLookupExpr 0x9bfd2a8 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
        (DeclRefExpr 0x9bfd274 <col:26> 'const _Tp *' lvalue ParmVar 0x9bfd000 '__last1' 'const _Tp *')
        (DeclRefExpr 0x9bfd28c <col:36> 'const _Tp *' lvalue ParmVar 0x9bfcfb0 '__first1' 'const _Tp *'))")
  (DeclStmt 0x9bfd3e8 <line:898:4, col:44>
    0x9bfd320 "const size_t __len2 =
      (CXXOperatorCallExpr 0x9bfd3c0 <col:26, col:36> '<dependent type>'
        (UnresolvedLookupExpr 0x9bfd388 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
        (DeclRefExpr 0x9bfd354 <col:26> 'const _Up *' lvalue ParmVar 0x9bfd0c0 '__last2' 'const _Up *')
        (DeclRefExpr 0x9bfd36c <col:36> 'const _Up *' lvalue ParmVar 0x9bfd070 '__first2' 'const _Up *'))")
  (DeclStmt 0x9bfe248 <line:899:4, line:900:32>
    0x9bfd410 "const int __result =
      (CallExpr 0x9bfd800 <line:899:25, line:900:31> '<dependent type>'
        (DeclRefExpr 0x9bfd444 <line:899:25> 'int (const void *, const void *, unsigned int)' lvalue Function 0x9bf74d0 '__builtin_memcmp' 'int (const void *, const void *, unsigned int)')
        (DeclRefExpr 0x9bfd45c <col:42> 'const _Tp *' lvalue ParmVar 0x9bfcfb0 '__first1' 'const _Tp *')
        (DeclRefExpr 0x9bfd474 <col:52> 'const _Up *' lvalue ParmVar 0x9bfd070 '__first2' 'const _Up *')
        (CallExpr 0x9bfd7d8 <line:900:7, col:30> 'const unsigned int':'const unsigned int' lvalue
          (ImplicitCastExpr 0x9bfd7c8 <col:7, col:12> 'const unsigned int &(*)(const unsigned int &, const unsigned int &)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9bfd768 <col:7, col:12> 'const unsigned int &(const unsigned int &, const unsigned int &)' lvalue Function 0x9bfd6c0 'min' 'const unsigned int &(const unsigned int &, const unsigned int &)' (FunctionTemplate 0x9bdffa0 'min')))
          (DeclRefExpr 0x9bfd4e0 <col:16> 'const size_t':'const unsigned int' lvalue Var 0x9bfd240 '__len1' 'const size_t':'const unsigned int')
          (DeclRefExpr 0x9bfd4f8 <col:24> 'const size_t':'const unsigned int' lvalue Var 0x9bfd320 '__len2' 'const size_t':'const unsigned int')))")
  (ReturnStmt 0x9bfe390 <line:901:4, col:51>
    (ConditionalOperator 0x9bfe370 <col:11, col:51> '_Bool'
      (BinaryOperator 0x9bfe298 <col:11, col:23> '_Bool' '!='
        (ImplicitCastExpr 0x9bfe288 <col:11> 'int' <LValueToRValue>
          (DeclRefExpr 0x9bfe258 <col:11> 'const int' lvalue Var 0x9bfd410 '__result' 'const int'))
        (IntegerLiteral 0x9bfe270 <col:23> 'int' 0))
      (BinaryOperator 0x9bfe2f0 <col:27, col:38> '_Bool' '<'
        (ImplicitCastExpr 0x9bfe2e0 <col:27> 'int' <LValueToRValue>
          (DeclRefExpr 0x9bfe2b0 <col:27> 'const int' lvalue Var 0x9bfd410 '__result' 'const int'))
        (IntegerLiteral 0x9bfe2c8 <col:38> 'int' 0))
      (BinaryOperator 0x9bfe358 <col:42, col:51> '_Bool' '<'
        (ImplicitCastExpr 0x9bfe338 <col:42> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9bfe308 <col:42> 'const size_t':'const unsigned int' lvalue Var 0x9bfd240 '__len1' 'const size_t':'const unsigned int'))
        (ImplicitCastExpr 0x9bfe348 <col:51> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9bfe320 <col:51> 'const size_t':'const unsigned int' lvalue Var 0x9bfd320 '__len2' 'const size_t':'const unsigned int'))))))

;
    };
    template <typename _II1, typename _II2> inline bool __lexicographical_compare_aux(_II1 __first1, _II1 __last1, _II2 __first2, _II2 __last2) (CompoundStmt 0x9bff208 </usr/include/c++/4.6/bits/stl_algobase.h:909:5, line:921:5>
  (DeclStmt 0x9bfe7b0 <line:910:7, col:69>
    0x9bfe780 "typedef typename iterator_traits<_II1>::value_type _ValueType1")
  (DeclStmt 0x9bfe8e0 <line:911:7, col:69>
    0x9bfe8b0 "typedef typename iterator_traits<_II2>::value_type _ValueType2")
  (DeclStmt 0x9bff028 <line:912:7, line:917:34>
    0x9bfe900 "const bool __simple =
      (ParenExpr 0x9bff010 <line:913:2, line:917:33> '<dependent type>'
        (BinaryOperator 0x9bfeff8 <line:913:3, line:917:26> '<dependent type>' '&&'
          (BinaryOperator 0x9bfef08 <line:913:3, line:916:26> '<dependent type>' '&&'
            (BinaryOperator 0x9bfee20 <line:913:3, line:915:49> '<dependent type>' '&&'
              (BinaryOperator 0x9bfece0 <line:913:3, line:914:49> '<dependent type>' '&&'
                (BinaryOperator 0x9bfeb88 <line:913:3, col:62> '<dependent type>' '&&'
                  (DependentScopeDeclRefExpr 0x9bfea40 <col:3, col:27> '<dependent type>' lvalue)
                  (DependentScopeDeclRefExpr 0x9bfeb60 <col:38, col:62> '<dependent type>' lvalue))
                (UnaryOperator 0x9bfecc8 <line:914:6, col:49> '<dependent type>' prefix '!'
                  (DependentScopeDeclRefExpr 0x9bfeca0 <col:7, col:49> '<dependent type>' lvalue)))
              (UnaryOperator 0x9bfee08 <line:915:6, col:49> '<dependent type>' prefix '!'
                (DependentScopeDeclRefExpr 0x9bfede0 <col:7, col:49> '<dependent type>' lvalue)))
            (DependentScopeDeclRefExpr 0x9bfeee0 <line:916:6, col:26> '<dependent type>' lvalue))
          (DependentScopeDeclRefExpr 0x9bfefd0 <line:917:6, col:26> '<dependent type>' lvalue)))")
  (ReturnStmt 0x9bff1f8 <line:919:7, line:920:29>
    (CallExpr 0x9bff1c8 <line:919:14, line:920:29> '<dependent type>'
      (DependentScopeDeclRefExpr 0x9bff140 <line:919:14, col:56> '<dependent type>' lvalue)
      (DeclRefExpr 0x9bff164 <col:61> '_II1' lvalue ParmVar 0x9bfe480 '__first1' '_II1')
      (DeclRefExpr 0x9bff17c <col:71> '_II1' lvalue ParmVar 0x9bfe4c0 '__last1' '_II1')
      (DeclRefExpr 0x9bff194 <line:920:12> '_II2' lvalue ParmVar 0x9bfe500 '__first2' '_II2')
      (DeclRefExpr 0x9bff1ac <col:22> '_II2' lvalue ParmVar 0x9bfe540 '__last2' '_II2'))))

;
    template <typename _ForwardIterator, typename _Tp> _ForwardIterator lower_bound(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__val) (CompoundStmt 0x9bffe30 </usr/include/c++/4.6/bits/stl_algobase.h:938:5, line:966:5>
  (DeclStmt 0x9bff630 <line:939:7, line:940:12>
    0x9bff600 "typedef typename iterator_traits<_ForwardIterator>::value_type _ValueType")
  (DeclStmt 0x9bff760 <line:941:7, line:942:15>
    0x9bff730 "typedef typename iterator_traits<_ForwardIterator>::difference_type _DistanceType")
  (NullStmt 0x9bff770 <line:947:67>)
  (DeclStmt 0x9bff880 <line:949:7, col:59>
    0x9bff7a0 "_DistanceType __len =
      (CallExpr 0x9bff858 <col:29, col:58> '<dependent type>'
        (UnresolvedLookupExpr 0x9bff7f0 <col:29, col:34> '<overloaded function type>' lvalue (no ADL) = '1' 0x9bba500)
        (DeclRefExpr 0x9bff824 <col:43> '_ForwardIterator' lvalue ParmVar 0x9bff310 '__first' '_ForwardIterator')
        (DeclRefExpr 0x9bff83c <col:52> '_ForwardIterator' lvalue ParmVar 0x9bff350 '__last' '_ForwardIterator'))")
  (WhileStmt 0x9bffdf0 <line:951:7, line:964:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9bff900 <line:951:14, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0x9bff8c0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bad330 0x9bc37b0 0x9bc6740)
      (DeclRefExpr 0x9bff890 <col:14> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0x9bff7a0 '__len' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type')
      (IntegerLiteral 0x9bff8a8 <col:22> 'int' 0))
    (CompoundStmt 0x9bffdd0 <line:952:2, line:964:2>
      (DeclStmt 0x9bff9b0 <line:953:4, col:37>
        0x9bff930 "_DistanceType __half =
          (BinaryOperator 0x9bff998 <col:27, col:36> '<dependent type>' '>>'
            (DeclRefExpr 0x9bff964 <col:27> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0x9bff7a0 '__len' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type')
            (IntegerLiteral 0x9bff980 <col:36> 'int' 1))")
      (DeclStmt 0x9bffa20 <line:954:4, col:39>
        0x9bff9d0 "_ForwardIterator __middle =
          (DeclRefExpr 0x9bffa04 <col:32> '_ForwardIterator' lvalue ParmVar 0x9bff310 '__first' '_ForwardIterator')")
      (CallExpr 0x9bffac0 <line:955:4, col:33> '<dependent type>'
        (UnresolvedLookupExpr 0x9bffa58 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x9bbbe10)
        (DeclRefExpr 0x9bffa8c <col:17> '_ForwardIterator' lvalue Var 0x9bff9d0 '__middle' '_ForwardIterator')
        (DeclRefExpr 0x9bffaa4 <col:27> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0x9bff930 '__half' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type'))
      (IfStmt 0x9bffdb0 <line:956:4, line:963:14>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9bffb70 <line:956:8, col:20> '<dependent type>'
          (UnresolvedLookupExpr 0x9bffb30 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bac3c0 0x9bc2c90 0x9bc5590)
          (UnaryOperator 0x9bffb00 <col:8, col:9> '<dependent type>' prefix '*'
            (DeclRefExpr 0x9bffae4 <col:9> '_ForwardIterator' lvalue Var 0x9bff9d0 '__middle' '_ForwardIterator'))
          (DeclRefExpr 0x9bffb14 <col:20> 'const _Tp' lvalue ParmVar 0x9bff3c0 '__val' 'const _Tp &'))
        (CompoundStmt 0x9bffd48 <line:957:6, line:961:6>
          (BinaryOperator 0x9bffbc8 <line:958:8, col:18> '<dependent type>' '='
            (DeclRefExpr 0x9bffb94 <col:8> '_ForwardIterator' lvalue ParmVar 0x9bff310 '__first' '_ForwardIterator')
            (DeclRefExpr 0x9bffbac <col:18> '_ForwardIterator' lvalue Var 0x9bff9d0 '__middle' '_ForwardIterator'))
          (UnaryOperator 0x9bffbf8 <line:959:8, col:10> '<dependent type>' prefix '++'
            (DeclRefExpr 0x9bffbe0 <col:10> '_ForwardIterator' lvalue ParmVar 0x9bff310 '__first' '_ForwardIterator'))
          (BinaryOperator 0x9bffd30 <line:960:8, col:33> '<dependent type>' '='
            (DeclRefExpr 0x9bffc0c <col:8> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0x9bff7a0 '__len' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type')
            (CXXOperatorCallExpr 0x9bffd08 <col:16, col:33> '<dependent type>'
              (UnresolvedLookupExpr 0x9bffcd0 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
              (CXXOperatorCallExpr 0x9bffc90 <col:16, col:24> '<dependent type>'
                (UnresolvedLookupExpr 0x9bffc58 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
                (DeclRefExpr 0x9bffc24 <col:16> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0x9bff7a0 '__len' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type')
                (DeclRefExpr 0x9bffc3c <col:24> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0x9bff930 '__half' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type'))
              (IntegerLiteral 0x9bffcb8 <col:33> 'int' 1))))
        (BinaryOperator 0x9bffd98 <line:963:6, col:14> '<dependent type>' '='
          (DeclRefExpr 0x9bffd64 <col:6> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0x9bff7a0 '__len' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type')
          (DeclRefExpr 0x9bffd7c <col:14> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0x9bff930 '__half' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type')))))
  (ReturnStmt 0x9bffe20 <line:965:7, col:14>
    (DeclRefExpr 0x9bffe04 <col:14> '_ForwardIterator' lvalue ParmVar 0x9bff310 '__first' '_ForwardIterator')))

;
    template <typename _Size> inline _Size __lg(_Size __n) (CompoundStmt 0x9c00678 </usr/include/c++/4.6/bits/stl_algobase.h:973:5, line:978:5>
  (DeclStmt 0x9c00018 <line:974:7, col:16>
    0x9bfffe0 "_Size __k")
  (ForStmt 0x9c00188 <line:975:7, line:976:4>
    (BinaryOperator 0x9c00058 <line:975:12, col:18> '<dependent type>' '='
      (DeclRefExpr 0x9c00028 <col:12> '_Size' lvalue Var 0x9bfffe0 '__k' '_Size')
      (IntegerLiteral 0x9c00040 <col:18> 'int' 0))
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9c000e0 <col:21, col:28> '<dependent type>'
      (UnresolvedLookupExpr 0x9c000a0 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bacde0 0x9bc3130 0x9bc62c0)
      (DeclRefExpr 0x9c00070 <col:21> '_Size' lvalue ParmVar 0x9bffec0 '__n' '_Size')
      (IntegerLiteral 0x9c00088 <col:28> 'int' 0))
    (CompoundAssignOperator 0x9c00138 <col:31, col:39> '<dependent type>' lvalue '>>=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
      (DeclRefExpr 0x9c00104 <col:31> '_Size' lvalue ParmVar 0x9bffec0 '__n' '_Size')
      (IntegerLiteral 0x9c00120 <col:39> 'int' 1))
    (UnaryOperator 0x9c00170 <line:976:2, col:4> '<dependent type>' prefix '++'
      (DeclRefExpr 0x9c00158 <col:4> '_Size' lvalue Var 0x9bfffe0 '__k' '_Size')))
  (ReturnStmt 0x9c00668 <line:977:7, col:20>
    (CXXOperatorCallExpr 0x9c00218 <col:14, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0x9c001e0 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
      (DeclRefExpr 0x9c001ac <col:14> '_Size' lvalue Var 0x9bfffe0 '__k' '_Size')
      (IntegerLiteral 0x9c001c8 <col:20> 'int' 1))))

;
    inline int __lg(int __n) (CompoundStmt 0x9c009f0 </usr/include/c++/4.6/bits/stl_algobase.h:982:3, col:66>
  (ReturnStmt 0x9c009e0 <col:5, col:63>
    (ImplicitCastExpr 0x9c009d0 <col:12, col:63> 'int' <IntegralCast>
      (BinaryOperator 0x9c009b8 <col:12, col:63> 'unsigned int' '-'
        (BinaryOperator 0x9c00808 <col:12, col:42> 'unsigned int' '-'
          (BinaryOperator 0x9c007c8 <col:12, <built-in>:17:22> 'unsigned int' '*'
            (UnaryExprOrTypeTraitExpr 0x9c00788 </usr/include/c++/4.6/bits/stl_algobase.h:982:12, col:22> 'unsigned int' sizeof 'int')
            (ImplicitCastExpr 0x9c007b8 <<built-in>:17:22> 'unsigned int' <IntegralCast>
              (IntegerLiteral 0x9c007a0 <col:22> 'int' 8)))
          (ImplicitCastExpr 0x9c007f8 </usr/include/c++/4.6/bits/stl_algobase.h:982:42> 'unsigned int' <IntegralCast>
            (IntegerLiteral 0x9c007e0 <col:42> 'int' 1)))
        (ImplicitCastExpr 0x9c009a8 <col:46, col:63> 'unsigned int' <IntegralCast>
          (CallExpr 0x9c00968 <col:46, col:63> 'int'
            (ImplicitCastExpr 0x9c00958 <col:46> 'int (*)(unsigned int)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9c00910 <col:46> 'int (unsigned int)' lvalue Function 0x9c00820 '__builtin_clz' 'int (unsigned int)'))
            (ImplicitCastExpr 0x9c00998 <col:60> 'unsigned int' <IntegralCast>
              (ImplicitCastExpr 0x9c00988 <col:60> 'int' <LValueToRValue>
                (DeclRefExpr 0x9c00928 <col:60> 'int' lvalue ParmVar 0x9c006b0 '__n' 'int')))))))))


    inline long __lg(long __n) (CompoundStmt 0x9c00d80 </usr/include/c++/4.6/bits/stl_algobase.h:986:3, col:67>
  (ReturnStmt 0x9c00d70 <col:5, col:64>
    (ImplicitCastExpr 0x9c00d60 <col:12, col:64> 'long' <IntegralCast>
      (BinaryOperator 0x9c00d48 <col:12, col:64> 'unsigned int' '-'
        (BinaryOperator 0x9c00b78 <col:12, col:42> 'unsigned int' '-'
          (BinaryOperator 0x9c00b38 <col:12, <built-in>:17:22> 'unsigned int' '*'
            (UnaryExprOrTypeTraitExpr 0x9c00af8 </usr/include/c++/4.6/bits/stl_algobase.h:986:12, col:23> 'unsigned int' sizeof 'long')
            (ImplicitCastExpr 0x9c00b28 <<built-in>:17:22> 'unsigned int' <IntegralCast>
              (IntegerLiteral 0x9c00b10 <col:22> 'int' 8)))
          (ImplicitCastExpr 0x9c00b68 </usr/include/c++/4.6/bits/stl_algobase.h:986:42> 'unsigned int' <IntegralCast>
            (IntegerLiteral 0x9c00b50 <col:42> 'int' 1)))
        (ImplicitCastExpr 0x9c00d38 <col:46, col:64> 'unsigned int' <IntegralCast>
          (CallExpr 0x9c00cf8 <col:46, col:64> 'int'
            (ImplicitCastExpr 0x9c00ce8 <col:46> 'int (*)(unsigned long)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9c00ca0 <col:46> 'int (unsigned long)' lvalue Function 0x9c00bb0 '__builtin_clzl' 'int (unsigned long)'))
            (ImplicitCastExpr 0x9c00d28 <col:61> 'unsigned long' <IntegralCast>
              (ImplicitCastExpr 0x9c00d18 <col:61> 'long' <LValueToRValue>
                (DeclRefExpr 0x9c00cb8 <col:61> 'long' lvalue ParmVar 0x9c00a20 '__n' 'long')))))))))


    inline long long __lg(long long __n) (CompoundStmt 0x9c01110 </usr/include/c++/4.6/bits/stl_algobase.h:990:3, col:73>
  (ReturnStmt 0x9c01100 <col:5, col:70>
    (ImplicitCastExpr 0x9c010f0 <col:12, col:70> 'long long' <IntegralCast>
      (BinaryOperator 0x9c010d8 <col:12, col:70> 'unsigned int' '-'
        (BinaryOperator 0x9c00f08 <col:12, col:47> 'unsigned int' '-'
          (BinaryOperator 0x9c00ec8 <col:12, <built-in>:17:22> 'unsigned int' '*'
            (UnaryExprOrTypeTraitExpr 0x9c00e88 </usr/include/c++/4.6/bits/stl_algobase.h:990:12, col:28> 'unsigned int' sizeof 'long long')
            (ImplicitCastExpr 0x9c00eb8 <<built-in>:17:22> 'unsigned int' <IntegralCast>
              (IntegerLiteral 0x9c00ea0 <col:22> 'int' 8)))
          (ImplicitCastExpr 0x9c00ef8 </usr/include/c++/4.6/bits/stl_algobase.h:990:47> 'unsigned int' <IntegralCast>
            (IntegerLiteral 0x9c00ee0 <col:47> 'int' 1)))
        (ImplicitCastExpr 0x9c010c8 <col:51, col:70> 'unsigned int' <IntegralCast>
          (CallExpr 0x9c01088 <col:51, col:70> 'int'
            (ImplicitCastExpr 0x9c01078 <col:51> 'int (*)(unsigned long long)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9c01030 <col:51> 'int (unsigned long long)' lvalue Function 0x9c00f40 '__builtin_clzll' 'int (unsigned long long)'))
            (ImplicitCastExpr 0x9c010b8 <col:67> 'unsigned long long' <IntegralCast>
              (ImplicitCastExpr 0x9c010a8 <col:67> 'long long' <LValueToRValue>
                (DeclRefExpr 0x9c01048 <col:67> 'long long' lvalue ParmVar 0x9c00db0 '__n' 'long long')))))))))


    template <typename _II1, typename _II2> inline bool equal(_II1 __first1, _II1 __last1, _II2 __first2) (CompoundStmt 0x9c015c8 </usr/include/c++/4.6/bits/stl_algobase.h:1011:5, line:1023:5>
  (NullStmt 0x9c01398 <line:1018:56>)
  (ReturnStmt 0x9c015b8 <line:1020:7, line:1022:37>
    (CallExpr 0x9c01590 <line:1020:14, line:1022:37> '<dependent type>'
      (UnresolvedLookupExpr 0x9c013c0 <line:1020:14, col:19> '<overloaded function type>' lvalue (no ADL) = '1' 0x9bf8650)
      (CallExpr 0x9c01460 <col:31, col:57> '<dependent type>'
        (UnresolvedLookupExpr 0x9c01410 <col:31, col:36> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b951f0)
        (DeclRefExpr 0x9c01444 <col:49> '_II1' lvalue ParmVar 0x9c011f0 '__first1' '_II1'))
      (CallExpr 0x9c014e8 <line:1021:10, col:35> '<dependent type>'
        (UnresolvedLookupExpr 0x9c01498 <col:10, col:15> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b951f0)
        (DeclRefExpr 0x9c014cc <col:28> '_II1' lvalue ParmVar 0x9c01230 '__last1' '_II1'))
      (CallExpr 0x9c01570 <line:1022:10, col:36> '<dependent type>'
        (UnresolvedLookupExpr 0x9c01520 <col:10, col:15> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b951f0)
        (DeclRefExpr 0x9c01554 <col:28> '_II2' lvalue ParmVar 0x9c01270 '__first2' '_II2')))))

;
    template <typename _IIter1, typename _IIter2, typename _BinaryPredicate> inline bool equal(_IIter1 __first1, _IIter1 __last1, _IIter2 __first2, _BinaryPredicate __binary_pred) (CompoundStmt 0x9c025d0 </usr/include/c++/4.6/bits/stl_algobase.h:1044:5, line:1054:5>
  (NullStmt 0x9c02348 <line:1048:56>)
  (ForStmt 0x9c02588 <line:1050:7, line:1052:11>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9c023c8 <line:1050:14, col:26> '<dependent type>'
      (UnresolvedLookupExpr 0x9c02388 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bacde0 0x9bc3130 0x9bc62c0)
      (DeclRefExpr 0x9c02354 <col:14> '_IIter1' lvalue ParmVar 0x9c02130 '__first1' '_IIter1')
      (DeclRefExpr 0x9c0236c <col:26> '_IIter1' lvalue ParmVar 0x9c02170 '__last1' '_IIter1'))
    (BinaryOperator 0x9c02450 <col:35, col:49> '<dependent type>' ','
      (UnaryOperator 0x9c02408 <col:35, col:37> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9c023ec <col:37> '_IIter1' lvalue ParmVar 0x9c02130 '__first1' '_IIter1'))
      (UnaryOperator 0x9c02438 <col:47, col:49> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9c0241c <col:49> '_IIter2' lvalue ParmVar 0x9c021b0 '__first2' '_IIter2')))
    (IfStmt 0x9c02568 <line:1051:2, line:1052:11>
      <<<NULL>>>
      (UnaryOperator 0x9c02530 <line:1051:6, col:47> '_Bool' prefix '!'
        (CXXUnresolvedConstructExpr 0x9c02510 <col:7, col:47> '_Bool'
          (CallExpr 0x9c024e8 <col:12, col:46> '<dependent type>'
            (DeclRefExpr 0x9c02470 <col:12> '_BinaryPredicate' lvalue ParmVar 0x9c021f0 '__binary_pred' '_BinaryPredicate')
            (UnaryOperator 0x9c024a0 <col:26, col:27> '<dependent type>' prefix '*'
              (DeclRefExpr 0x9c02488 <col:27> '_IIter1' lvalue ParmVar 0x9c02130 '__first1' '_IIter1'))
            (UnaryOperator 0x9c024d0 <col:37, col:38> '<dependent type>' prefix '*'
              (DeclRefExpr 0x9c024b4 <col:38> '_IIter2' lvalue ParmVar 0x9c021b0 '__first2' '_IIter2')))))
      (ReturnStmt 0x9c02558 <line:1052:4, col:11>
        (CXXBoolLiteralExpr 0x9c02548 <col:11> '_Bool' false))
      <<<NULL>>>))
  (ReturnStmt 0x9c025c0 <line:1053:7, col:14>
    (CXXBoolLiteralExpr 0x9c025b0 <col:14> '_Bool' true)))

;
    template <typename _II1, typename _II2> inline bool lexicographical_compare(_II1 __first1, _II1 __last1, _II2 __first2, _II2 __last2) (CompoundStmt 0x9c02dc0 </usr/include/c++/4.6/bits/stl_algobase.h:1075:5, line:1090:5>
  (DeclStmt 0x9c029b0 <line:1077:7, col:69>
    0x9c02980 "typedef typename iterator_traits<_II1>::value_type _ValueType1")
  (DeclStmt 0x9c02ae0 <line:1078:7, col:69>
    0x9c02ab0 "typedef typename iterator_traits<_II2>::value_type _ValueType2")
  (NullStmt 0x9c02af0 <line:1083:56>)
  (NullStmt 0x9c02b00 <line:1084:56>)
  (ReturnStmt 0x9c02db0 <line:1086:7, line:1089:33>
    (CallExpr 0x9c02d80 <line:1086:14, line:1089:33> '<dependent type>'
      (UnresolvedLookupExpr 0x9c02b28 <line:1086:14, col:19> '<overloaded function type>' lvalue (no ADL) = '1' 0x9bfe660)
      (CallExpr 0x9c02bc8 <col:49, col:75> '<dependent type>'
        (UnresolvedLookupExpr 0x9c02b78 <col:49, col:54> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b951f0)
        (DeclRefExpr 0x9c02bac <col:67> '_II1' lvalue ParmVar 0x9c026b0 '__first1' '_II1'))
      (CallExpr 0x9c02c50 <line:1087:7, col:32> '<dependent type>'
        (UnresolvedLookupExpr 0x9c02c00 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b951f0)
        (DeclRefExpr 0x9c02c34 <col:25> '_II1' lvalue ParmVar 0x9c026f0 '__last1' '_II1'))
      (CallExpr 0x9c02cd8 <line:1088:7, col:33> '<dependent type>'
        (UnresolvedLookupExpr 0x9c02c88 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b951f0)
        (DeclRefExpr 0x9c02cbc <col:25> '_II2' lvalue ParmVar 0x9c02730 '__first2' '_II2'))
      (CallExpr 0x9c02d60 <line:1089:7, col:32> '<dependent type>'
        (UnresolvedLookupExpr 0x9c02d10 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b951f0)
        (DeclRefExpr 0x9c02d44 <col:25> '_II2' lvalue ParmVar 0x9c02770 '__last2' '_II2')))))

;
    template <typename _II1, typename _II2, typename _Compare> bool lexicographical_compare(_II1 __first1, _II1 __last1, _II2 __first2, _II2 __last2, _Compare __comp) (CompoundStmt 0x9c04088 </usr/include/c++/4.6/bits/stl_algobase.h:1109:5, line:1130:5>
  (DeclStmt 0x9c036d0 <line:1110:7, col:75>
    0x9c036a0 "typedef typename iterator_traits<_II1>::iterator_category _Category1")
  (DeclStmt 0x9c03800 <line:1111:7, col:75>
    0x9c037d0 "typedef typename iterator_traits<_II2>::iterator_category _Category2")
  (DeclStmt 0x9c03a10 <line:1112:7, col:64>
    0x9c039e0 "typedef std::__lc_rai<_Category1, _Category2> __rai_type")
  (NullStmt 0x9c03a20 <line:1117:56>)
  (NullStmt 0x9c03a30 <line:1118:56>)
  (BinaryOperator 0x9c03b50 <line:1120:7, col:76> '<dependent type>' '='
    (DeclRefExpr 0x9c03a3c <col:7> '_II1' lvalue ParmVar 0x9c02f40 '__last1' '_II1')
    (CallExpr 0x9c03b20 <col:17, col:76> '<dependent type>'
      (DependentScopeDeclRefExpr 0x9c03a98 <col:17, col:29> '<dependent type>' lvalue)
      (DeclRefExpr 0x9c03abc <col:40> '_II1' lvalue ParmVar 0x9c02f00 '__first1' '_II1')
      (DeclRefExpr 0x9c03ad4 <col:50> '_II1' lvalue ParmVar 0x9c02f40 '__last1' '_II1')
      (DeclRefExpr 0x9c03aec <col:59> '_II2' lvalue ParmVar 0x9c02f80 '__first2' '_II2')
      (DeclRefExpr 0x9c03b04 <col:69> '_II2' lvalue ParmVar 0x9c02fc0 '__last2' '_II2')))
  (ForStmt 0x9c03f08 <line:1121:7, line:1128:2>
    <<<NULL>>>
    <<<NULL>>>
    (BinaryOperator 0x9c03ca0 <line:1121:14, col:73> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x9c03bd8 <col:14, col:26> '<dependent type>'
        (UnresolvedLookupExpr 0x9c03b98 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bacde0 0x9bc3130 0x9bc62c0)
        (DeclRefExpr 0x9c03b68 <col:14> '_II1' lvalue ParmVar 0x9c02f00 '__first1' '_II1')
        (DeclRefExpr 0x9c03b80 <col:26> '_II1' lvalue ParmVar 0x9c02f40 '__last1' '_II1'))
      (CallExpr 0x9c03c78 <col:37, col:73> '<dependent type>'
        (DependentScopeDeclRefExpr 0x9c03c20 <col:37, col:49> '<dependent type>' lvalue)
        (DeclRefExpr 0x9c03c44 <col:56> '_II2' lvalue ParmVar 0x9c02f80 '__first2' '_II2')
        (DeclRefExpr 0x9c03c5c <col:66> '_II2' lvalue ParmVar 0x9c02fc0 '__last2' '_II2')))
    (BinaryOperator 0x9c03d18 <line:1122:5, col:19> '<dependent type>' ','
      (UnaryOperator 0x9c03cd0 <col:5, col:7> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9c03cb8 <col:7> '_II1' lvalue ParmVar 0x9c02f00 '__first1' '_II1'))
      (UnaryOperator 0x9c03d00 <col:17, col:19> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9c03ce4 <col:19> '_II2' lvalue ParmVar 0x9c02f80 '__first2' '_II2')))
    (CompoundStmt 0x9c03ef0 <line:1123:2, line:1128:2>
      (IfStmt 0x9c03df0 <line:1124:4, line:1125:13>
        <<<NULL>>>
        (CallExpr 0x9c03da8 <line:1124:8, col:35> '<dependent type>'
          (DeclRefExpr 0x9c03d30 <col:8> '_Compare' lvalue ParmVar 0x9c03000 '__comp' '_Compare')
          (UnaryOperator 0x9c03d60 <col:15, col:16> '<dependent type>' prefix '*'
            (DeclRefExpr 0x9c03d48 <col:16> '_II1' lvalue ParmVar 0x9c02f00 '__first1' '_II1'))
          (UnaryOperator 0x9c03d90 <col:26, col:27> '<dependent type>' prefix '*'
            (DeclRefExpr 0x9c03d74 <col:27> '_II2' lvalue ParmVar 0x9c02f80 '__first2' '_II2')))
        (ReturnStmt 0x9c03de0 <line:1125:6, col:13>
          (CXXBoolLiteralExpr 0x9c03dd0 <col:13> '_Bool' true))
        <<<NULL>>>)
      (IfStmt 0x9c03ed0 <line:1126:4, line:1127:13>
        <<<NULL>>>
        (CallExpr 0x9c03e88 <line:1126:8, col:35> '<dependent type>'
          (DeclRefExpr 0x9c03e0c <col:8> '_Compare' lvalue ParmVar 0x9c03000 '__comp' '_Compare')
          (UnaryOperator 0x9c03e40 <col:15, col:16> '<dependent type>' prefix '*'
            (DeclRefExpr 0x9c03e24 <col:16> '_II2' lvalue ParmVar 0x9c02f80 '__first2' '_II2'))
          (UnaryOperator 0x9c03e70 <col:26, col:27> '<dependent type>' prefix '*'
            (DeclRefExpr 0x9c03e54 <col:27> '_II1' lvalue ParmVar 0x9c02f00 '__first1' '_II1')))
        (ReturnStmt 0x9c03ec0 <line:1127:6, col:13>
          (CXXBoolLiteralExpr 0x9c03eb0 <col:13> '_Bool' false))
        <<<NULL>>>)))
  (ReturnStmt 0x9c04078 <line:1129:7, col:49>
    (BinaryOperator 0x9c04060 <col:14, col:49> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x9c03fa0 <col:14, col:26> '<dependent type>'
        (UnresolvedLookupExpr 0x9c03f60 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090)
        (DeclRefExpr 0x9c03f2c <col:14> '_II1' lvalue ParmVar 0x9c02f00 '__first1' '_II1')
        (DeclRefExpr 0x9c03f44 <col:26> '_II1' lvalue ParmVar 0x9c02f40 '__last1' '_II1'))
      (CXXOperatorCallExpr 0x9c04038 <col:37, col:49> '<dependent type>'
        (UnresolvedLookupExpr 0x9c03ff8 <col:46, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bacde0 0x9bc3130 0x9bc62c0)
        (DeclRefExpr 0x9c03fc4 <col:37> '_II2' lvalue ParmVar 0x9c02f80 '__first2' '_II2')
        (DeclRefExpr 0x9c03fdc <col:49> '_II2' lvalue ParmVar 0x9c02fc0 '__last2' '_II2')))))

;
    template <typename _InputIterator1, typename _InputIterator2> pair<_InputIterator1, _InputIterator2> mismatch(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2) (CompoundStmt 0x9c04d68 </usr/include/c++/4.6/bits/stl_algobase.h:1149:5, line:1164:5>
  (NullStmt 0x9c04448 <line:1156:56>)
  (WhileStmt 0x9c04be0 <line:1158:7, line:1162:9>
    <<<NULL>>>
    (BinaryOperator 0x9c04b50 <line:1158:14, col:51> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x9c04a60 <col:14, col:26> '<dependent type>'
        (UnresolvedLookupExpr 0x9c04a20 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bacde0 0x9bc3130 0x9bc62c0)
        (DeclRefExpr 0x9c04454 <col:14> '_InputIterator1' lvalue ParmVar 0x9c04250 '__first1' '_InputIterator1')
        (DeclRefExpr 0x9c0446c <col:26> '_InputIterator1' lvalue ParmVar 0x9c04290 '__last1' '_InputIterator1'))
      (CXXOperatorCallExpr 0x9c04b28 <col:37, col:51> '<dependent type>'
        (UnresolvedLookupExpr 0x9c04ae8 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090)
        (UnaryOperator 0x9c04aa0 <col:37, col:38> '<dependent type>' prefix '*'
          (DeclRefExpr 0x9c04a84 <col:38> '_InputIterator1' lvalue ParmVar 0x9c04250 '__first1' '_InputIterator1'))
        (UnaryOperator 0x9c04ad0 <col:50, col:51> '<dependent type>' prefix '*'
          (DeclRefExpr 0x9c04ab4 <col:51> '_InputIterator2' lvalue ParmVar 0x9c042d0 '__first2' '_InputIterator2'))))
    (CompoundStmt 0x9c04bc8 <line:1159:9, line:1162:9>
      (UnaryOperator 0x9c04b80 <line:1160:4, col:6> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9c04b68 <col:6> '_InputIterator1' lvalue ParmVar 0x9c04250 '__first1' '_InputIterator1'))
      (UnaryOperator 0x9c04bb0 <line:1161:4, col:6> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9c04b94 <col:6> '_InputIterator2' lvalue ParmVar 0x9c042d0 '__first2' '_InputIterator2'))))
  (ReturnStmt 0x9c04d58 <line:1163:7, col:71>
    (CXXUnresolvedConstructExpr 0x9c04d38 <col:14, col:71> 'pair<_InputIterator1, _InputIterator2>'
      (DeclRefExpr 0x9c04d08 <col:53> '_InputIterator1' lvalue ParmVar 0x9c04250 '__first1' '_InputIterator1')
      (DeclRefExpr 0x9c04d20 <col:63> '_InputIterator2' lvalue ParmVar 0x9c042d0 '__first2' '_InputIterator2'))))

;
    template <typename _InputIterator1, typename _InputIterator2, typename _BinaryPredicate> pair<_InputIterator1, _InputIterator2> mismatch(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _BinaryPredicate __binary_pred) (CompoundStmt 0x9c05538 </usr/include/c++/4.6/bits/stl_algobase.h:1187:5, line:1199:5>
  (NullStmt 0x9c051b8 <line:1191:56>)
  (WhileStmt 0x9c053b8 <line:1193:7, line:1197:9>
    <<<NULL>>>
    (BinaryOperator 0x9c05328 <line:1193:14, col:77> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x9c05238 <col:14, col:26> '<dependent type>'
        (UnresolvedLookupExpr 0x9c051f8 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bacde0 0x9bc3130 0x9bc62c0)
        (DeclRefExpr 0x9c051c4 <col:14> '_InputIterator1' lvalue ParmVar 0x9c04f70 '__first1' '_InputIterator1')
        (DeclRefExpr 0x9c051dc <col:26> '_InputIterator1' lvalue ParmVar 0x9c04fb0 '__last1' '_InputIterator1'))
      (CXXUnresolvedConstructExpr 0x9c05308 <col:37, col:77> '_Bool'
        (CallExpr 0x9c052e0 <col:42, col:76> '<dependent type>'
          (DeclRefExpr 0x9c05268 <col:42> '_BinaryPredicate' lvalue ParmVar 0x9c05030 '__binary_pred' '_BinaryPredicate')
          (UnaryOperator 0x9c05298 <col:56, col:57> '<dependent type>' prefix '*'
            (DeclRefExpr 0x9c05280 <col:57> '_InputIterator1' lvalue ParmVar 0x9c04f70 '__first1' '_InputIterator1'))
          (UnaryOperator 0x9c052c8 <col:67, col:68> '<dependent type>' prefix '*'
            (DeclRefExpr 0x9c052ac <col:68> '_InputIterator2' lvalue ParmVar 0x9c04ff0 '__first2' '_InputIterator2')))))
    (CompoundStmt 0x9c053a0 <line:1194:9, line:1197:9>
      (UnaryOperator 0x9c05358 <line:1195:4, col:6> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9c05340 <col:6> '_InputIterator1' lvalue ParmVar 0x9c04f70 '__first1' '_InputIterator1'))
      (UnaryOperator 0x9c05388 <line:1196:4, col:6> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9c0536c <col:6> '_InputIterator2' lvalue ParmVar 0x9c04ff0 '__first2' '_InputIterator2'))))
  (ReturnStmt 0x9c05528 <line:1198:7, col:71>
    (CXXUnresolvedConstructExpr 0x9c05508 <col:14, col:71> 'pair<_InputIterator1, _InputIterator2>'
      (DeclRefExpr 0x9c054d8 <col:53> '_InputIterator1' lvalue ParmVar 0x9c04f70 '__first1' '_InputIterator1')
      (DeclRefExpr 0x9c054f0 <col:63> '_InputIterator2' lvalue ParmVar 0x9c04ff0 '__first2' '_InputIterator2'))))

;
}
extern void *__builtin_memmove(void *, const void *, unsigned int);
extern void *__builtin_memset(void *, int, unsigned int);
extern int __builtin_memcmp(const void *, const void *, unsigned int);
extern int __builtin_clz(unsigned int);
extern int __builtin_clzl(unsigned long);
extern int __builtin_clzll(unsigned long long);
namespace std {
    using ::mbstate_t;
    ;
}
namespace std {
    using ::wint_t;
    ;
    using ::btowc;
    ;
    using ::fgetwc;
    ;
    using ::fgetws;
    ;
    using ::fputwc;
    ;
    using ::fputws;
    ;
    using ::fwide;
    ;
    using ::fwprintf;
    ;
    using ::fwscanf;
    ;
    using ::getwc;
    ;
    using ::getwchar;
    ;
    using ::mbrlen;
    ;
    using ::mbrtowc;
    ;
    using ::mbsinit;
    ;
    using ::mbsrtowcs;
    ;
    using ::putwc;
    ;
    using ::putwchar;
    ;
    using ::swprintf;
    ;
    using ::swscanf;
    ;
    using ::ungetwc;
    ;
    using ::vfwprintf;
    ;
    using ::vfwscanf;
    ;
    using ::vswprintf;
    ;
    using ::vswscanf;
    ;
    using ::vwprintf;
    ;
    using ::vwscanf;
    ;
    using ::wcrtomb;
    ;
    using ::wcscat;
    ;
    using ::wcscmp;
    ;
    using ::wcscoll;
    ;
    using ::wcscpy;
    ;
    using ::wcscspn;
    ;
    using ::wcsftime;
    ;
    using ::wcslen;
    ;
    using ::wcsncat;
    ;
    using ::wcsncmp;
    ;
    using ::wcsncpy;
    ;
    using ::wcsrtombs;
    ;
    using ::wcsspn;
    ;
    using ::wcstod;
    ;
    using ::wcstof;
    ;
    using ::wcstok;
    ;
    using ::wcstol;
    ;
    using ::wcstoul;
    ;
    using ::wcsxfrm;
    ;
    using ::wctob;
    ;
    using ::wmemcmp;
    ;
    using ::wmemcpy;
    ;
    using ::wmemmove;
    ;
    using ::wmemset;
    ;
    using ::wprintf;
    ;
    using ::wscanf;
    ;
    using ::wcschr;
    ;
    using ::wcspbrk;
    ;
    using ::wcsrchr;
    ;
    using ::wcsstr;
    ;
    using ::wmemchr;
    ;
    inline wchar_t *wcschr(wchar_t *__p, wchar_t __c) (CompoundStmt 0x9c0bad0 </usr/include/c++/4.6/cwchar:214:3, col:58>
  (ReturnStmt 0x9c0bac0 <col:5, col:55>
    (CallExpr 0x9c0ba88 <col:12, col:55> 'wchar_t *'
      (ImplicitCastExpr 0x9c0ba78 <col:12> 'wchar_t *(*)(const wchar_t *, wchar_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9c0ba18 <col:12> 'wchar_t *(const wchar_t *, wchar_t) throw()' lvalue Function 0x9b5a1d0 'wcschr' 'wchar_t *(const wchar_t *, wchar_t) throw()' (UsingShadow 0x9c0b650 'wcschr')))
      (CXXConstCastExpr 0x9c0b9e8 <col:19, col:49> 'const wchar_t *' const_cast<const wchar_t *> <NoOp>
        (ImplicitCastExpr 0x9c0b9d8 <col:46> 'wchar_t *' <LValueToRValue>
          (DeclRefExpr 0x9c0b9b0 <col:46> 'wchar_t *' lvalue ParmVar 0x9c0b850 '__p' 'wchar_t *')))
      (ImplicitCastExpr 0x9c0bab0 <col:52> 'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9c0ba00 <col:52> 'wchar_t' lvalue ParmVar 0x9c0b890 '__c' 'wchar_t')))))


    inline wchar_t *wcspbrk(wchar_t *__s1, const wchar_t *__s2) (CompoundStmt 0x9c0bd70 </usr/include/c++/4.6/cwchar:218:3, col:61>
  (ReturnStmt 0x9c0bd60 <col:5, col:58>
    (CallExpr 0x9c0bd28 <col:12, col:58> 'wchar_t *'
      (ImplicitCastExpr 0x9c0bd18 <col:12> 'wchar_t *(*)(const wchar_t *, const wchar_t *) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9c0bcb8 <col:12> 'wchar_t *(const wchar_t *, const wchar_t *) throw()' lvalue Function 0x9b5a960 'wcspbrk' 'wchar_t *(const wchar_t *, const wchar_t *) throw()' (UsingShadow 0x9c0b6c0 'wcspbrk')))
      (CXXConstCastExpr 0x9c0bc88 <col:20, col:51> 'const wchar_t *' const_cast<const wchar_t *> <NoOp>
        (ImplicitCastExpr 0x9c0bc78 <col:47> 'wchar_t *' <LValueToRValue>
          (DeclRefExpr 0x9c0bc50 <col:47> 'wchar_t *' lvalue ParmVar 0x9c0bb00 '__s1' 'wchar_t *')))
      (ImplicitCastExpr 0x9c0bd50 <col:54> 'const wchar_t *' <LValueToRValue>
        (DeclRefExpr 0x9c0bca0 <col:54> 'const wchar_t *' lvalue ParmVar 0x9c0bb50 '__s2' 'const wchar_t *')))))


    inline wchar_t *wcsrchr(wchar_t *__p, wchar_t __c) (CompoundStmt 0x9c0bfc0 </usr/include/c++/4.6/cwchar:222:3, col:59>
  (ReturnStmt 0x9c0bfb0 <col:5, col:56>
    (CallExpr 0x9c0bf78 <col:12, col:56> 'wchar_t *'
      (ImplicitCastExpr 0x9c0bf68 <col:12> 'wchar_t *(*)(const wchar_t *, wchar_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9c0bf48 <col:12> 'wchar_t *(const wchar_t *, wchar_t) throw()' lvalue Function 0x9b5a330 'wcsrchr' 'wchar_t *(const wchar_t *, wchar_t) throw()' (UsingShadow 0x9c0b730 'wcsrchr')))
      (CXXConstCastExpr 0x9c0bf18 <col:20, col:50> 'const wchar_t *' const_cast<const wchar_t *> <NoOp>
        (ImplicitCastExpr 0x9c0bf08 <col:47> 'wchar_t *' <LValueToRValue>
          (DeclRefExpr 0x9c0bee0 <col:47> 'wchar_t *' lvalue ParmVar 0x9c0bda0 '__p' 'wchar_t *')))
      (ImplicitCastExpr 0x9c0bfa0 <col:53> 'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9c0bf30 <col:53> 'wchar_t' lvalue ParmVar 0x9c0bde0 '__c' 'wchar_t')))))


    inline wchar_t *wcsstr(wchar_t *__s1, const wchar_t *__s2) (CompoundStmt 0x9c0d150 </usr/include/c++/4.6/cwchar:226:3, col:60>
  (ReturnStmt 0x9c0d140 <col:5, col:57>
    (CallExpr 0x9c0c1d8 <col:12, col:57> 'wchar_t *'
      (ImplicitCastExpr 0x9c0c1c8 <col:12> 'wchar_t *(*)(const wchar_t *, const wchar_t *) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9c0c1a8 <col:12> 'wchar_t *(const wchar_t *, const wchar_t *) throw()' lvalue Function 0x9b5aad0 'wcsstr' 'wchar_t *(const wchar_t *, const wchar_t *) throw()' (UsingShadow 0x9c0b7a0 'wcsstr')))
      (CXXConstCastExpr 0x9c0c178 <col:19, col:50> 'const wchar_t *' const_cast<const wchar_t *> <NoOp>
        (ImplicitCastExpr 0x9c0c168 <col:46> 'wchar_t *' <LValueToRValue>
          (DeclRefExpr 0x9c0c140 <col:46> 'wchar_t *' lvalue ParmVar 0x9c0bff0 '__s1' 'wchar_t *')))
      (ImplicitCastExpr 0x9c0c200 <col:53> 'const wchar_t *' <LValueToRValue>
        (DeclRefExpr 0x9c0c190 <col:53> 'const wchar_t *' lvalue ParmVar 0x9c0c040 '__s2' 'const wchar_t *')))))


    inline wchar_t *wmemchr(wchar_t *__p, wchar_t __c, size_t __n) (CompoundStmt 0x9c0d480 </usr/include/c++/4.6/cwchar:230:3, col:64>
  (ReturnStmt 0x9c0d470 <col:5, col:61>
    (CallExpr 0x9c0d428 <col:12, col:61> 'wchar_t *'
      (ImplicitCastExpr 0x9c0d418 <col:12> 'wchar_t *(*)(const wchar_t *, wchar_t, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9c0d3b8 <col:12> 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' lvalue Function 0x9b5b350 'wmemchr' 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' (UsingShadow 0x9c0b810 'wmemchr')))
      (CXXConstCastExpr 0x9c0d370 <col:20, col:50> 'const wchar_t *' const_cast<const wchar_t *> <NoOp>
        (ImplicitCastExpr 0x9c0d360 <col:47> 'wchar_t *' <LValueToRValue>
          (DeclRefExpr 0x9c0d338 <col:47> 'wchar_t *' lvalue ParmVar 0x9c0d180 '__p' 'wchar_t *')))
      (ImplicitCastExpr 0x9c0d450 <col:53> 'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9c0d388 <col:53> 'wchar_t' lvalue ParmVar 0x9c0d1c0 '__c' 'wchar_t'))
      (ImplicitCastExpr 0x9c0d460 <col:58> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9c0d3a0 <col:58> 'size_t':'unsigned int' lvalue ParmVar 0x9c0d200 '__n' 'size_t':'unsigned int')))))


}
namespace __gnu_cxx {
    using ::wcstold;
    ;
    using ::wcstoll;
    ;
    using ::wcstoull;
    ;
}
namespace std {
    using ::__gnu_cxx::wcstold;
    ;
    using ::__gnu_cxx::wcstoll;
    ;
    using ::__gnu_cxx::wcstoull;
    ;
}
namespace std {
    typedef long long streamoff;
    typedef ptrdiff_t streamsize;
    template <typename _StateT = __mbstate_t> class fpos
template <typename _StateT> class fpos {
        class fpos;
    private:
    private:
        streamoff _M_off;
        _StateT _M_state;
    public:
    public:
        fpos<_StateT>() : _M_off((IntegerLiteral 0x9c0ee88 </usr/include/c++/4.6/bits/postypes.h:125:16> 'int' 0)
), _M_state() (CompoundStmt 0x9c0ef20 </usr/include/c++/4.6/bits/postypes.h:125:31, col:33>)


        fpos<_StateT>(streamoff __off) : _M_off((DeclRefExpr 0x9c0ef30 </usr/include/c++/4.6/bits/postypes.h:135:16> 'streamoff':'long long' lvalue ParmVar 0x9c0dd20 '__off' 'streamoff':'long long')
), _M_state() (CompoundStmt 0x9c0efd0 </usr/include/c++/4.6/bits/postypes.h:135:35, col:37>)


        streamoff operator streamoff() const (CompoundStmt 0x9c0f058 </usr/include/c++/4.6/bits/postypes.h:138:34, col:51>
  (ReturnStmt 0x9c0f048 <col:36, col:43>
    (MemberExpr 0x9c0f024 <col:43> 'const streamoff':'const long long' lvalue ->_M_off 0x9c0dbd0
      (CXXThisExpr 0x9c0eff8 <col:43> 'const fpos<_StateT> *' this))))


        void state(_StateT __st) (CompoundStmt 0x9c0f0d0 </usr/include/c++/4.6/bits/postypes.h:143:7, col:26>
  (BinaryOperator 0x9c0f0b8 <col:9, col:20> '<dependent type>' '='
    (MemberExpr 0x9c0f080 <col:9> '_StateT' lvalue ->_M_state 0x9c0dc10
      (CXXThisExpr 0x9c0f070 <col:9> 'fpos<_StateT> *' this))
    (DeclRefExpr 0x9c0f0a0 <col:20> '_StateT' lvalue ParmVar 0x9c0df10 '__st' '_StateT')))


        _StateT state() const (CompoundStmt 0x9c0f128 </usr/include/c++/4.6/bits/postypes.h:148:7, col:26>
  (ReturnStmt 0x9c0f118 <col:9, col:16>
    (MemberExpr 0x9c0f0f8 <col:16> 'const _StateT' lvalue ->_M_state 0x9c0dc10
      (CXXThisExpr 0x9c0f0e8 <col:16> 'const fpos<_StateT> *' this))))


        fpos<_StateT> &operator+=(streamoff __off) (CompoundStmt 0x9c0f1e0 </usr/include/c++/4.6/bits/postypes.h:156:7, line:159:7>
  (CompoundAssignOperator 0x9c0f188 <line:157:2, col:12> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (MemberExpr 0x9c0f150 <col:2> 'streamoff':'long long' lvalue ->_M_off 0x9c0dbd0
      (CXXThisExpr 0x9c0f140 <col:2> 'fpos<_StateT> *' this))
    (DeclRefExpr 0x9c0f170 <col:12> 'streamoff':'long long' lvalue ParmVar 0x9c0e0a0 '__off' 'streamoff':'long long'))
  (ReturnStmt 0x9c0f1d0 <line:158:2, col:10>
    (UnaryOperator 0x9c0f1b8 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9c0f1a8 <col:10> 'fpos<_StateT> *' this))))


        fpos<_StateT> &operator-=(streamoff __off) (CompoundStmt 0x9c0f298 </usr/include/c++/4.6/bits/postypes.h:167:7, line:170:7>
  (CompoundAssignOperator 0x9c0f240 <line:168:2, col:12> '<dependent type>' lvalue '-=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (MemberExpr 0x9c0f208 <col:2> 'streamoff':'long long' lvalue ->_M_off 0x9c0dbd0
      (CXXThisExpr 0x9c0f1f8 <col:2> 'fpos<_StateT> *' this))
    (DeclRefExpr 0x9c0f228 <col:12> 'streamoff':'long long' lvalue ParmVar 0x9c0eab0 '__off' 'streamoff':'long long'))
  (ReturnStmt 0x9c0f288 <line:169:2, col:10>
    (UnaryOperator 0x9c0f270 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9c0f260 <col:10> 'fpos<_StateT> *' this))))


        fpos<_StateT> operator+(streamoff __off) const (CompoundStmt 0x9c0f3c8 </usr/include/c++/4.6/bits/postypes.h:180:7, line:184:7>
  (DeclStmt 0x9c0f340 <line:181:2, col:19>
    0x9c0f2c0 "fpos<_StateT> __pos =
      (ParenListExpr 0x9c0f320 <col:12, col:18> 'fpos<_StateT>'
        (UnaryOperator 0x9c0f308 <col:13, col:14> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9c0f2f8 <col:14> 'const fpos<_StateT> *' this)))")
  (CompoundAssignOperator 0x9c0f380 <line:182:2, col:11> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (DeclRefExpr 0x9c0f350 <col:2> 'fpos<_StateT>' lvalue Var 0x9c0f2c0 '__pos' 'fpos<_StateT>')
    (DeclRefExpr 0x9c0f368 <col:11> 'streamoff':'long long' lvalue ParmVar 0x9c0eb80 '__off' 'streamoff':'long long'))
  (ReturnStmt 0x9c0f3b8 <line:183:2, col:9>
    (DeclRefExpr 0x9c0f3a0 <col:9> 'fpos<_StateT>' lvalue Var 0x9c0f2c0 '__pos' 'fpos<_StateT>')))


        fpos<_StateT> operator-(streamoff __off) const (CompoundStmt 0x9c0f4f8 </usr/include/c++/4.6/bits/postypes.h:194:7, line:198:7>
  (DeclStmt 0x9c0f470 <line:195:2, col:19>
    0x9c0f3f0 "fpos<_StateT> __pos =
      (ParenListExpr 0x9c0f450 <col:12, col:18> 'fpos<_StateT>'
        (UnaryOperator 0x9c0f438 <col:13, col:14> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9c0f428 <col:14> 'const fpos<_StateT> *' this)))")
  (CompoundAssignOperator 0x9c0f4b0 <line:196:2, col:11> '<dependent type>' lvalue '-=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (DeclRefExpr 0x9c0f480 <col:2> 'fpos<_StateT>' lvalue Var 0x9c0f3f0 '__pos' 'fpos<_StateT>')
    (DeclRefExpr 0x9c0f498 <col:11> 'streamoff':'long long' lvalue ParmVar 0x9c0ec90 '__off' 'streamoff':'long long'))
  (ReturnStmt 0x9c0f4e8 <line:197:2, col:9>
    (DeclRefExpr 0x9c0f4d0 <col:9> 'fpos<_StateT>' lvalue Var 0x9c0f3f0 '__pos' 'fpos<_StateT>')))


        streamoff operator-(const fpos<_StateT> &__other) const (CompoundStmt 0x9c0f608 </usr/include/c++/4.6/bits/postypes.h:207:7, col:41>
  (ReturnStmt 0x9c0f5f8 <col:9, col:33>
    (CXXOperatorCallExpr 0x9c0f5d0 <col:16, col:33> '<dependent type>'
      (UnresolvedLookupExpr 0x9c0f598 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
      (MemberExpr 0x9c0f528 <col:16> 'const streamoff':'const long long' lvalue ->_M_off 0x9c0dbd0
        (CXXThisExpr 0x9c0f518 <col:16> 'const fpos<_StateT> *' this))
      (CXXDependentScopeMemberExpr 0x9c0f560 <col:25, col:33> '<dependent type>' lvalue
        (DeclRefExpr 0x9c0f548 <col:25> 'const fpos<_StateT>' lvalue ParmVar 0x9c0ed80 '__other' 'const fpos<_StateT> &')))))


    };
    template <typename _StateT> inline bool operator==(const fpos<_StateT> &__lhs, const fpos<_StateT> &__rhs) (CompoundStmt 0x9c11048 </usr/include/c++/4.6/bits/postypes.h:218:5, col:52>
  (ReturnStmt 0x9c11038 <col:7, col:49>
    (BinaryOperator 0x9c11020 <col:14, col:49> '_Bool' '=='
      (CXXUnresolvedConstructExpr 0x9c0f9b0 <col:14, col:29> 'streamoff':'long long'
        (DeclRefExpr 0x9c0f998 <col:24> 'const fpos<_StateT>' lvalue ParmVar 0x9c0f760 '__lhs' 'const fpos<_StateT> &'))
      (CXXUnresolvedConstructExpr 0x9c11000 <col:34, col:49> 'streamoff':'long long'
        (DeclRefExpr 0x9c0f9d8 <col:44> 'const fpos<_StateT>' lvalue ParmVar 0x9c0f860 '__rhs' 'const fpos<_StateT> &')))))

;
    template <typename _StateT> inline bool operator!=(const fpos<_StateT> &__lhs, const fpos<_StateT> &__rhs) (CompoundStmt 0x9c11438 </usr/include/c++/4.6/bits/postypes.h:223:5, col:52>
  (ReturnStmt 0x9c11428 <col:7, col:49>
    (BinaryOperator 0x9c11410 <col:14, col:49> '_Bool' '!='
      (CXXUnresolvedConstructExpr 0x9c113b0 <col:14, col:29> 'streamoff':'long long'
        (DeclRefExpr 0x9c11398 <col:24> 'const fpos<_StateT>' lvalue ParmVar 0x9c11180 '__lhs' 'const fpos<_StateT> &'))
      (CXXUnresolvedConstructExpr 0x9c113f0 <col:34, col:49> 'streamoff':'long long'
        (DeclRefExpr 0x9c113d8 <col:44> 'const fpos<_StateT>' lvalue ParmVar 0x9c11280 '__rhs' 'const fpos<_StateT> &')))))

;
    typedef fpos<mbstate_t> streampos;
    typedef fpos<mbstate_t> wstreampos;
}
namespace __gnu_cxx {
    template <typename _CharT> struct _Char_types {
        struct _Char_types;
        typedef unsigned long int_type;
        typedef std::streampos pos_type;
        typedef std::streamoff off_type;
        typedef std::mbstate_t state_type;
    };
    template <typename _CharT> struct char_traits {
        struct char_traits;
        typedef _CharT char_type;
        typedef typename _Char_types<_CharT>::int_type int_type;
        typedef typename _Char_types<_CharT>::pos_type pos_type;
        typedef typename _Char_types<_CharT>::off_type off_type;
        typedef typename _Char_types<_CharT>::state_type state_type;
        static void assign(char_type &__c1, const char_type &__c2) (CompoundStmt 0x9c14b28 </usr/include/c++/4.6/bits/char_traits.h:94:7, col:22>
  (BinaryOperator 0x9c14b10 <col:9, col:16> '<dependent type>' '='
    (DeclRefExpr 0x9c14ae0 <col:9> 'char_type':'_CharT' lvalue ParmVar 0x9c13330 '__c1' 'char_type &')
    (DeclRefExpr 0x9c14af8 <col:16> 'const char_type':'const _CharT' lvalue ParmVar 0x9c133a0 '__c2' 'const char_type &')))


        static bool eq(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x9c14be0 </usr/include/c++/4.6/bits/char_traits.h:98:7, col:30>
  (ReturnStmt 0x9c14bd0 <col:9, col:24>
    (CXXOperatorCallExpr 0x9c14ba8 <col:16, col:24> '<dependent type>'
      (UnresolvedLookupExpr 0x9c14b70 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bd18d0 0x9bd2890)
      (DeclRefExpr 0x9c14b3c <col:16> 'const char_type':'const _CharT' lvalue ParmVar 0x9c134c0 '__c1' 'const char_type &')
      (DeclRefExpr 0x9c14b54 <col:24> 'const char_type':'const _CharT' lvalue ParmVar 0x9c13510 '__c2' 'const char_type &'))))


        static bool lt(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x9c14c98 </usr/include/c++/4.6/bits/char_traits.h:102:7, col:29>
  (ReturnStmt 0x9c14c88 <col:9, col:23>
    (CXXOperatorCallExpr 0x9c14c60 <col:16, col:23> '<dependent type>'
      (UnresolvedLookupExpr 0x9c14c28 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bd3ac0 0x9bd4090)
      (DeclRefExpr 0x9c14bf4 <col:16> 'const char_type':'const _CharT' lvalue ParmVar 0x9c13630 '__c1' 'const char_type &')
      (DeclRefExpr 0x9c14c0c <col:23> 'const char_type':'const _CharT' lvalue ParmVar 0x9c13680 '__c2' 'const char_type &'))))


        static int compare(const char_type *__s1, const char_type *__s2, std::size_t __n);
        static std::size_t length(const char_type *__s);
        static const char_type *find(const char_type *__s, std::size_t __n, const char_type &__a);
        static char_type *move(char_type *__s1, const char_type *__s2, std::size_t __n);
        static char_type *copy(char_type *__s1, const char_type *__s2, std::size_t __n);
        static char_type *assign(char_type *__s, std::size_t __n, char_type __a);
        static char_type to_char_type(const int_type &__c) (CompoundStmt 0x9c14cf8 </usr/include/c++/4.6/bits/char_traits.h:124:7, col:45>
  (ReturnStmt 0x9c14ce8 <col:9, col:42>
    (CXXStaticCastExpr 0x9c14cd0 <col:16, col:42> 'char_type':'_CharT' static_cast<char_type> <Dependent>
      (DeclRefExpr 0x9c14cac <col:39> 'const int_type':'const typename _Char_types<_CharT>::int_type' lvalue ParmVar 0x9c14560 '__c' 'const int_type &'))))


        static int_type to_int_type(const char_type &__c) (CompoundStmt 0x9c14d58 </usr/include/c++/4.6/bits/char_traits.h:128:7, col:44>
  (ReturnStmt 0x9c14d48 <col:9, col:41>
    (CXXStaticCastExpr 0x9c14d30 <col:16, col:41> 'int_type':'typename _Char_types<_CharT>::int_type' static_cast<int_type> <Dependent>
      (DeclRefExpr 0x9c14d0c <col:38> 'const char_type':'const _CharT' lvalue ParmVar 0x9c14680 '__c' 'const char_type &'))))


        static bool eq_int_type(const int_type &__c1, const int_type &__c2) (CompoundStmt 0x9c14e10 </usr/include/c++/4.6/bits/char_traits.h:132:7, col:30>
  (ReturnStmt 0x9c14e00 <col:9, col:24>
    (CXXOperatorCallExpr 0x9c14dd8 <col:16, col:24> '<dependent type>'
      (UnresolvedLookupExpr 0x9c14da0 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bd18d0 0x9bd2890)
      (DeclRefExpr 0x9c14d6c <col:16> 'const int_type':'const typename _Char_types<_CharT>::int_type' lvalue ParmVar 0x9c147a0 '__c1' 'const int_type &')
      (DeclRefExpr 0x9c14d84 <col:24> 'const int_type':'const typename _Char_types<_CharT>::int_type' lvalue ParmVar 0x9c147f0 '__c2' 'const int_type &'))))


        static int_type eof() (CompoundStmt 0x9c14e88 </usr/include/c++/4.6/bits/char_traits.h:136:7, col:59>
  (ReturnStmt 0x9c14e78 <col:9, col:56>
    (CXXStaticCastExpr 0x9c14e60 <col:16, col:56> 'int_type':'typename _Char_types<_CharT>::int_type' static_cast<int_type> <Dependent>
      (UnaryOperator 0x9c14e40 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:1149:28, col:29> 'int' prefix '-'
        (IntegerLiteral 0x9c14e28 <col:29> 'int' 1)))))


        static int_type not_eof(const int_type &__c) (CompoundStmt 0x9c14fe8 </usr/include/c++/4.6/bits/char_traits.h:140:7, col:75>
  (ReturnStmt 0x9c14fd8 <col:9, col:72>
    (ConditionalOperator 0x9c14fb8 <col:16, col:72> '<dependent type>'
      (UnaryOperator 0x9c14f30 <col:16, col:39> '<dependent type>' prefix '!'
        (CallExpr 0x9c14f08 <col:17, col:39> '<dependent type>'
          (DeclRefExpr 0x9c14e9c <col:17> '_Bool (const int_type &, const int_type &)' lvalue CXXMethod 0x9c14890 'eq_int_type' '_Bool (const int_type &, const int_type &)')
          (DeclRefExpr 0x9c14eb4 <col:29> 'const int_type':'const typename _Char_types<_CharT>::int_type' lvalue ParmVar 0x9c149c0 '__c' 'const int_type &')
          (CallExpr 0x9c14ee8 <col:34, col:38> '<dependent type>'
            (DeclRefExpr 0x9c14ecc <col:34> 'int_type (void)' lvalue CXXMethod 0x9c14950 'eof' 'int_type (void)'))))
      (DeclRefExpr 0x9c14f44 <col:43> 'const int_type':'const typename _Char_types<_CharT>::int_type' lvalue ParmVar 0x9c149c0 '__c' 'const int_type &')
      (CallExpr 0x9c14f98 <col:49, col:72> '<dependent type>'
        (DeclRefExpr 0x9c14f5c <col:49> 'int_type (const char_type &)' lvalue CXXMethod 0x9c14720 'to_int_type' 'int_type (const char_type &)')
        (CXXUnresolvedConstructExpr 0x9c14f80 <col:61, col:71> 'char_type':'_CharT')))))


    };
    static int compare(const char_type *__s1, const char_type *__s2, std::size_t __n) (CompoundStmt 0x9c16aa0 </usr/include/c++/4.6/bits/char_traits.h:147:5, line:154:5>
  (ForStmt 0x9c16a50 <line:148:7, line:152:11>
    (DeclStmt 0x9c16760 <line:148:12, col:31>
      0x9c16700 "std::size_t __i =
        (ImplicitCastExpr 0x9c16750 <col:30> 'std::size_t':'unsigned int' <IntegralCast>
          (IntegerLiteral 0x9c16738 <col:30> 'int' 0))")
    <<<NULL>>>
    (BinaryOperator 0x9c167c0 <col:33, col:39> '_Bool' '<'
      (ImplicitCastExpr 0x9c167a0 <col:33> 'std::size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9c16770 <col:33> 'std::size_t':'unsigned int' lvalue Var 0x9c16700 '__i' 'std::size_t':'unsigned int'))
      (ImplicitCastExpr 0x9c167b0 <col:39> 'std::size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9c16788 <col:39> 'std::size_t':'unsigned int' lvalue ParmVar 0x9c15260 '__n' 'std::size_t':'unsigned int')))
    (UnaryOperator 0x9c167f0 <col:44, col:46> 'std::size_t':'unsigned int' lvalue prefix '++'
      (DeclRefExpr 0x9c167d8 <col:46> 'std::size_t':'unsigned int' lvalue Var 0x9c16700 '__i' 'std::size_t':'unsigned int'))
    (IfStmt 0x9c16a30 <line:149:2, line:152:11>
      <<<NULL>>>
      (CallExpr 0x9c168b0 <line:149:6, col:29> '<dependent type>'
        (DeclRefExpr 0x9c16804 <col:6> '_Bool (const char_type &, const char_type &)' lvalue CXXMethod 0x9c136e0 'lt' '_Bool (const char_type &, const char_type &)')
        (ArraySubscriptExpr 0x9c16850 <col:9, col:17> '<dependent type>' lvalue
          (DeclRefExpr 0x9c1681c <col:9> 'const char_type *' lvalue ParmVar 0x9c151b0 '__s1' 'const char_type *')
          (DeclRefExpr 0x9c16834 <col:14> 'std::size_t':'unsigned int' lvalue Var 0x9c16700 '__i' 'std::size_t':'unsigned int'))
        (ArraySubscriptExpr 0x9c16898 <col:20, col:28> '<dependent type>' lvalue
          (DeclRefExpr 0x9c16864 <col:20> 'const char_type *' lvalue ParmVar 0x9c15200 '__s2' 'const char_type *')
          (DeclRefExpr 0x9c1687c <col:25> 'std::size_t':'unsigned int' lvalue Var 0x9c16700 '__i' 'std::size_t':'unsigned int')))
      (ReturnStmt 0x9c16908 <line:150:4, col:12>
        (UnaryOperator 0x9c168f0 <col:11, col:12> 'int' prefix '-'
          (IntegerLiteral 0x9c168d8 <col:12> 'int' 1)))
      (IfStmt 0x9c16a10 <line:151:7, line:152:11>
        <<<NULL>>>
        (CallExpr 0x9c169c0 <line:151:11, col:34> '<dependent type>'
          (DeclRefExpr 0x9c16918 <col:11> '_Bool (const char_type &, const char_type &)' lvalue CXXMethod 0x9c136e0 'lt' '_Bool (const char_type &, const char_type &)')
          (ArraySubscriptExpr 0x9c16960 <col:14, col:22> '<dependent type>' lvalue
            (DeclRefExpr 0x9c16930 <col:14> 'const char_type *' lvalue ParmVar 0x9c15200 '__s2' 'const char_type *')
            (DeclRefExpr 0x9c16948 <col:19> 'std::size_t':'unsigned int' lvalue Var 0x9c16700 '__i' 'std::size_t':'unsigned int'))
          (ArraySubscriptExpr 0x9c169a8 <col:25, col:33> '<dependent type>' lvalue
            (DeclRefExpr 0x9c16974 <col:25> 'const char_type *' lvalue ParmVar 0x9c151b0 '__s1' 'const char_type *')
            (DeclRefExpr 0x9c1698c <col:30> 'std::size_t':'unsigned int' lvalue Var 0x9c16700 '__i' 'std::size_t':'unsigned int')))
        (ReturnStmt 0x9c16a00 <line:152:4, col:11>
          (IntegerLiteral 0x9c169e8 <col:11> 'int' 1))
        <<<NULL>>>)))
  (ReturnStmt 0x9c16a90 <line:153:7, col:14>
    (IntegerLiteral 0x9c16a78 <col:14> 'int' 0)))


    static std::size_t length(const char_type *__p) (CompoundStmt 0x9c16f60 </usr/include/c++/4.6/bits/char_traits.h:160:5, line:165:5>
  (DeclStmt 0x9c16e10 <line:161:7, col:26>
    0x9c16db0 "std::size_t __i =
      (ImplicitCastExpr 0x9c16e00 <col:25> 'std::size_t':'unsigned int' <IntegralCast>
        (IntegerLiteral 0x9c16de8 <col:25> 'int' 0))")
  (WhileStmt 0x9c16f10 <line:162:7, line:163:11>
    <<<NULL>>>
    (UnaryOperator 0x9c16ec8 <line:162:14, col:39> '<dependent type>' prefix '!'
      (CallExpr 0x9c16ea0 <col:15, col:39> '<dependent type>'
        (DeclRefExpr 0x9c16e20 <col:15> '_Bool (const char_type &, const char_type &)' lvalue CXXMethod 0x9c135b0 'eq' '_Bool (const char_type &, const char_type &)')
        (ArraySubscriptExpr 0x9c16e68 <col:18, col:25> '<dependent type>' lvalue
          (DeclRefExpr 0x9c16e38 <col:18> 'const char_type *' lvalue ParmVar 0x9c16c90 '__p' 'const char_type *')
          (DeclRefExpr 0x9c16e50 <col:22> 'std::size_t':'unsigned int' lvalue Var 0x9c16db0 '__i' 'std::size_t':'unsigned int'))
        (CXXUnresolvedConstructExpr 0x9c16e88 <col:28, col:38> 'char_type':'_CharT')))
    (UnaryOperator 0x9c16ef8 <line:163:9, col:11> 'std::size_t':'unsigned int' lvalue prefix '++'
      (DeclRefExpr 0x9c16edc <col:11> 'std::size_t':'unsigned int' lvalue Var 0x9c16db0 '__i' 'std::size_t':'unsigned int')))
  (ReturnStmt 0x9c16f50 <line:164:7, col:14>
    (ImplicitCastExpr 0x9c16f40 <col:14> 'std::size_t':'unsigned int' <LValueToRValue>
      (DeclRefExpr 0x9c16f24 <col:14> 'std::size_t':'unsigned int' lvalue Var 0x9c16db0 '__i' 'std::size_t':'unsigned int'))))


    static const typename char_traits<_CharT>::char_type *find(const char_type *__s, std::size_t __n, const char_type &__a) (CompoundStmt 0x9c17810 </usr/include/c++/4.6/bits/char_traits.h:171:5, line:176:5>
  (ForStmt 0x9c177c0 <line:172:7, line:174:24>
    (DeclStmt 0x9c175a0 <line:172:12, col:31>
      0x9c17540 "std::size_t __i =
        (ImplicitCastExpr 0x9c17590 <col:30> 'std::size_t':'unsigned int' <IntegralCast>
          (IntegerLiteral 0x9c17578 <col:30> 'int' 0))")
    <<<NULL>>>
    (BinaryOperator 0x9c17618 <col:33, col:39> '_Bool' '<'
      (ImplicitCastExpr 0x9c175e0 <col:33> 'std::size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9c175b0 <col:33> 'std::size_t':'unsigned int' lvalue Var 0x9c17540 '__i' 'std::size_t':'unsigned int'))
      (ImplicitCastExpr 0x9c17608 <col:39> 'std::size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9c175c8 <col:39> 'std::size_t':'unsigned int' lvalue ParmVar 0x9c17290 '__n' 'std::size_t':'unsigned int')))
    (UnaryOperator 0x9c17648 <col:44, col:46> 'std::size_t':'unsigned int' lvalue prefix '++'
      (DeclRefExpr 0x9c17630 <col:46> 'std::size_t':'unsigned int' lvalue Var 0x9c17540 '__i' 'std::size_t':'unsigned int'))
    (IfStmt 0x9c177a0 <line:173:9, line:174:24>
      <<<NULL>>>
      (CallExpr 0x9c176d8 <line:173:13, col:29> '<dependent type>'
        (DeclRefExpr 0x9c1765c <col:13> '_Bool (const char_type &, const char_type &)' lvalue CXXMethod 0x9c135b0 'eq' '_Bool (const char_type &, const char_type &)')
        (ArraySubscriptExpr 0x9c176a8 <col:16, col:23> '<dependent type>' lvalue
          (DeclRefExpr 0x9c17674 <col:16> 'const char_type *' lvalue ParmVar 0x9c17230 '__s' 'const char_type *')
          (DeclRefExpr 0x9c1768c <col:20> 'std::size_t':'unsigned int' lvalue Var 0x9c17540 '__i' 'std::size_t':'unsigned int'))
        (DeclRefExpr 0x9c176bc <col:26> 'const char_type':'const _CharT' lvalue ParmVar 0x9c172e0 '__a' 'const char_type &'))
      (ReturnStmt 0x9c17790 <line:174:11, col:24>
        (CXXOperatorCallExpr 0x9c17768 <col:18, col:24> '<dependent type>'
          (UnresolvedLookupExpr 0x9c17730 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bd96f0)
          (DeclRefExpr 0x9c176fc <col:18> 'const char_type *' lvalue ParmVar 0x9c17230 '__s' 'const char_type *')
          (DeclRefExpr 0x9c17714 <col:24> 'std::size_t':'unsigned int' lvalue Var 0x9c17540 '__i' 'std::size_t':'unsigned int')))
      <<<NULL>>>))
  (ReturnStmt 0x9c17800 <line:175:7, col:14>
    (IntegerLiteral 0x9c177e8 <col:14> 'int' 0)))


    static typename char_traits<_CharT>::char_type *move(char_type *__s1, const char_type *__s2, std::size_t __n) (CompoundStmt 0x9c17eb0 </usr/include/c++/4.6/bits/char_traits.h:182:5, line:185:5>
  (ReturnStmt 0x9c17ea0 <line:183:7, line:184:35>
    (CXXStaticCastExpr 0x9c17e88 <line:183:14, line:184:35> '_CharT *' static_cast<_CharT *> <Dependent>
      (CallExpr 0x9c17e38 <line:183:35, line:184:34> '<dependent type>'
        (DeclRefExpr 0x9c17d8c <line:183:35> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9be7b30 '__builtin_memmove' 'void *(void *, const void *, unsigned int)')
        (DeclRefExpr 0x9c17da4 <col:53> 'char_type *' lvalue ParmVar 0x9c17ab0 '__s1' 'char_type *')
        (DeclRefExpr 0x9c17dbc <col:59> 'const char_type *' lvalue ParmVar 0x9c17b00 '__s2' 'const char_type *')
        (BinaryOperator 0x9c17e20 <line:184:11, col:33> 'unsigned int' '*'
          (ImplicitCastExpr 0x9c17e10 <col:11> 'std::size_t':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0x9c17dd4 <col:11> 'std::size_t':'unsigned int' lvalue ParmVar 0x9c17b60 '__n' 'std::size_t':'unsigned int'))
          (UnaryExprOrTypeTraitExpr 0x9c17df8 <col:17, col:33> 'unsigned int' sizeof 'char_type':'_CharT'))))))


    static typename char_traits<_CharT>::char_type *copy(char_type *__s1, const char_type *__s2, std::size_t __n) (CompoundStmt 0x9c18598 </usr/include/c++/4.6/bits/char_traits.h:191:5, line:195:5>
  (CallExpr 0x9c18548 <line:193:7, col:39> '<dependent type>'
    (UnresolvedLookupExpr 0x9c18450 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9bebb70)
    (DeclRefExpr 0x9c18484 <col:17> 'const char_type *' lvalue ParmVar 0x9c181a0 '__s2' 'const char_type *')
    (CXXOperatorCallExpr 0x9c18508 <col:23, col:30> '<dependent type>'
      (UnresolvedLookupExpr 0x9c184d0 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bd96f0)
      (DeclRefExpr 0x9c1849c <col:23> 'const char_type *' lvalue ParmVar 0x9c181a0 '__s2' 'const char_type *')
      (DeclRefExpr 0x9c184b4 <col:30> 'std::size_t':'unsigned int' lvalue ParmVar 0x9c18200 '__n' 'std::size_t':'unsigned int'))
    (DeclRefExpr 0x9c1852c <col:35> 'char_type *' lvalue ParmVar 0x9c18150 '__s1' 'char_type *'))
  (ReturnStmt 0x9c18588 <line:194:7, col:14>
    (DeclRefExpr 0x9c18570 <col:14> 'char_type *' lvalue ParmVar 0x9c18150 '__s1' 'char_type *')))


    static typename char_traits<_CharT>::char_type *assign(char_type *__s, std::size_t __n, char_type __a) (CompoundStmt 0x9c19c20 </usr/include/c++/4.6/bits/char_traits.h:201:5, line:205:5>
  (CallExpr 0x9c19bd0 <line:203:7, col:32> '<dependent type>'
    (UnresolvedLookupExpr 0x9c19b50 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9bf5800)
    (DeclRefExpr 0x9c19b84 <col:19> 'char_type *' lvalue ParmVar 0x9c19860 '__s' 'char_type *')
    (DeclRefExpr 0x9c19b9c <col:24> 'std::size_t':'unsigned int' lvalue ParmVar 0x9c198c0 '__n' 'std::size_t':'unsigned int')
    (DeclRefExpr 0x9c19bb4 <col:29> 'char_type':'_CharT' lvalue ParmVar 0x9c19900 '__a' 'char_type':'_CharT'))
  (ReturnStmt 0x9c19c10 <line:204:7, col:14>
    (DeclRefExpr 0x9c19bf8 <col:14> 'char_type *' lvalue ParmVar 0x9c19860 '__s' 'char_type *')))


}
namespace std {
    template <class _CharT = char> struct char_traits {
        struct char_traits;
        typedef char char_type;
        typedef int int_type;
        typedef streampos pos_type;
        typedef streamoff off_type;
        typedef mbstate_t state_type;
        static void assign(char_type &__c1, const char_type &__c2) (CompoundStmt 0x9c1cf98 </usr/include/c++/4.6/bits/char_traits.h:244:7, col:22>
  (BinaryOperator 0x9c1cf80 <col:9, col:16> 'char_type':'char' lvalue '='
    (DeclRefExpr 0x9c1cf40 <col:9> 'char_type':'char' lvalue ParmVar 0x9c1a310 '__c1' 'char_type &')
    (ImplicitCastExpr 0x9c1cf70 <col:16> 'char_type':'char' <LValueToRValue>
      (DeclRefExpr 0x9c1cf58 <col:16> 'const char_type':'const char' lvalue ParmVar 0x9c1a3a0 '__c2' 'const char_type &'))))


        static bool eq(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x9c1d048 </usr/include/c++/4.6/bits/char_traits.h:248:7, col:30>
  (ReturnStmt 0x9c1d038 <col:9, col:24>
    (BinaryOperator 0x9c1d020 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x9c1cff0 <col:16> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9c1cfe0 <col:16> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9c1cfac <col:16> 'const char_type':'const char' lvalue ParmVar 0x9c1a4c0 '__c1' 'const char_type &')))
      (ImplicitCastExpr 0x9c1d010 <col:24> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9c1d000 <col:24> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9c1cfc4 <col:24> 'const char_type':'const char' lvalue ParmVar 0x9c1a510 '__c2' 'const char_type &'))))))


        static bool lt(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x9c1d0f8 </usr/include/c++/4.6/bits/char_traits.h:252:7, col:29>
  (ReturnStmt 0x9c1d0e8 <col:9, col:23>
    (BinaryOperator 0x9c1d0d0 <col:16, col:23> '_Bool' '<'
      (ImplicitCastExpr 0x9c1d0a0 <col:16> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9c1d090 <col:16> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9c1d05c <col:16> 'const char_type':'const char' lvalue ParmVar 0x9c1ac50 '__c1' 'const char_type &')))
      (ImplicitCastExpr 0x9c1d0c0 <col:23> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9c1d0b0 <col:23> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9c1d074 <col:23> 'const char_type':'const char' lvalue ParmVar 0x9c1aca0 '__c2' 'const char_type &'))))))


        static int compare(const char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9c1d220 </usr/include/c++/4.6/bits/char_traits.h:256:7, col:51>
  (ReturnStmt 0x9c1d210 <col:9, col:48>
    (CallExpr 0x9c1d198 <col:16, col:48> 'int'
      (ImplicitCastExpr 0x9c1d188 <col:16> 'int (*)(const void *, const void *, unsigned int)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9c1d10c <col:16> 'int (const void *, const void *, unsigned int)' lvalue Function 0x9bf74d0 '__builtin_memcmp' 'int (const void *, const void *, unsigned int)'))
      (ImplicitCastExpr 0x9c1d1d0 <col:33> 'const void *' <BitCast>
        (ImplicitCastExpr 0x9c1d1c0 <col:33> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9c1d124 <col:33> 'const char_type *' lvalue ParmVar 0x9c1ada0 '__s1' 'const char_type *')))
      (ImplicitCastExpr 0x9c1d1f0 <col:39> 'const void *' <BitCast>
        (ImplicitCastExpr 0x9c1d1e0 <col:39> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9c1d13c <col:39> 'const char_type *' lvalue ParmVar 0x9c1adf0 '__s2' 'const char_type *')))
      (ImplicitCastExpr 0x9c1d200 <col:45> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9c1d154 <col:45> 'size_t':'unsigned int' lvalue ParmVar 0x9c1ae30 '__n' 'size_t':'unsigned int')))))


        static size_t length(const char_type *__s) (CompoundStmt 0x9c1d3b8 </usr/include/c++/4.6/bits/char_traits.h:260:7, col:39>
  (ReturnStmt 0x9c1d3a8 <col:9, col:36>
    (CallExpr 0x9c1d378 <col:16, col:36> 'unsigned int'
      (ImplicitCastExpr 0x9c1d368 <col:16> 'unsigned int (*)(const char *)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9c1d314 <col:16> 'unsigned int (const char *)' lvalue Function 0x9c1d240 '__builtin_strlen' 'unsigned int (const char *)'))
      (ImplicitCastExpr 0x9c1d398 <col:33> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9c1d32c <col:33> 'const char_type *' lvalue ParmVar 0x9c1af70 '__s' 'const char_type *')))))


        static const char_type *find(const char_type *__s, size_t __n, const char_type &__a) (CompoundStmt 0x9c1d6a8 </usr/include/c++/4.6/bits/char_traits.h:264:7, col:80>
  (ReturnStmt 0x9c1d698 <col:9, col:77>
    (CXXStaticCastExpr 0x9c1d680 <col:16, col:77> 'const char_type *' static_cast<const char_type *> <BitCast>
      (CallExpr 0x9c1d5f8 <col:46, col:76> 'void *'
        (ImplicitCastExpr 0x9c1d5e8 <col:46> 'void *(*)(const void *, int, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9c1d564 <col:46> 'void *(const void *, int, unsigned int)' lvalue Function 0x9c1d400 '__builtin_memchr' 'void *(const void *, int, unsigned int)'))
        (ImplicitCastExpr 0x9c1d630 <col:63> 'const void *' <BitCast>
          (ImplicitCastExpr 0x9c1d620 <col:63> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x9c1d57c <col:63> 'const char_type *' lvalue ParmVar 0x9c1b090 '__s' 'const char_type *')))
        (ImplicitCastExpr 0x9c1d650 <col:68> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9c1d640 <col:68> 'char_type':'char' <LValueToRValue>
            (DeclRefExpr 0x9c1d594 <col:68> 'const char_type':'const char' lvalue ParmVar 0x9c1b120 '__a' 'const char_type &')))
        (ImplicitCastExpr 0x9c1d660 <col:73> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9c1d5ac <col:73> 'size_t':'unsigned int' lvalue ParmVar 0x9c1b0d0 '__n' 'size_t':'unsigned int'))))))


        static char_type *move(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9c1d7f8 </usr/include/c++/4.6/bits/char_traits.h:268:7, col:77>
  (ReturnStmt 0x9c1d7e8 <col:9, col:74>
    (CXXStaticCastExpr 0x9c1d7d0 <col:16, col:74> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0x9c1d748 <col:40, col:73> 'void *'
        (ImplicitCastExpr 0x9c1d738 <col:40> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9c1d6bc <col:40> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9be7b30 '__builtin_memmove' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0x9c1d780 <col:58> 'void *' <BitCast>
          (ImplicitCastExpr 0x9c1d770 <col:58> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x9c1d6d4 <col:58> 'char_type *' lvalue ParmVar 0x9c1b280 '__s1' 'char_type *')))
        (ImplicitCastExpr 0x9c1d7a0 <col:64> 'const void *' <BitCast>
          (ImplicitCastExpr 0x9c1d790 <col:64> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x9c1d6ec <col:64> 'const char_type *' lvalue ParmVar 0x9c1b2d0 '__s2' 'const char_type *')))
        (ImplicitCastExpr 0x9c1d7b0 <col:70> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9c1d704 <col:70> 'size_t':'unsigned int' lvalue ParmVar 0x9c1b310 '__n' 'size_t':'unsigned int'))))))


        static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9c1da98 </usr/include/c++/4.6/bits/char_traits.h:272:7, col:76>
  (ReturnStmt 0x9c1da88 <col:9, col:73>
    (CXXStaticCastExpr 0x9c1da70 <col:16, col:73> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0x9c1d9e8 <col:40, col:72> 'void *'
        (ImplicitCastExpr 0x9c1d9d8 <col:40> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9c1d974 <col:40> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9c1d810 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0x9c1da20 <col:57> 'void *' <BitCast>
          (ImplicitCastExpr 0x9c1da10 <col:57> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x9c1d98c <col:57> 'char_type *' lvalue ParmVar 0x9c1b450 '__s1' 'char_type *')))
        (ImplicitCastExpr 0x9c1da40 <col:63> 'const void *' <BitCast>
          (ImplicitCastExpr 0x9c1da30 <col:63> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x9c1d9a4 <col:63> 'const char_type *' lvalue ParmVar 0x9c1b4a0 '__s2' 'const char_type *')))
        (ImplicitCastExpr 0x9c1da50 <col:69> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9c1d9bc <col:69> 'size_t':'unsigned int' lvalue ParmVar 0x9c1b4e0 '__n' 'size_t':'unsigned int'))))))


        static char_type *assign(char_type *__s, size_t __n, char_type __a) (CompoundStmt 0x9c1dbe8 </usr/include/c++/4.6/bits/char_traits.h:276:7, col:74>
  (ReturnStmt 0x9c1dbd8 <col:9, col:71>
    (CXXStaticCastExpr 0x9c1dbc0 <col:16, col:71> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0x9c1db38 <col:40, col:70> 'void *'
        (ImplicitCastExpr 0x9c1db28 <col:40> 'void *(*)(void *, int, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9c1daac <col:40> 'void *(void *, int, unsigned int)' lvalue Function 0x9bf2ba0 '__builtin_memset' 'void *(void *, int, unsigned int)'))
        (ImplicitCastExpr 0x9c1db70 <col:57> 'void *' <BitCast>
          (ImplicitCastExpr 0x9c1db60 <col:57> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x9c1dac4 <col:57> 'char_type *' lvalue ParmVar 0x9c1b5c0 '__s' 'char_type *')))
        (ImplicitCastExpr 0x9c1db90 <col:62> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9c1db80 <col:62> 'char_type':'char' <LValueToRValue>
            (DeclRefExpr 0x9c1dadc <col:62> 'char_type':'char' lvalue ParmVar 0x9c1b640 '__a' 'char_type':'char')))
        (ImplicitCastExpr 0x9c1dba0 <col:67> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9c1daf4 <col:67> 'size_t':'unsigned int' lvalue ParmVar 0x9c1b600 '__n' 'size_t':'unsigned int'))))))


        static char_type to_char_type(const int_type &__c) (CompoundStmt 0x9c1dc68 </usr/include/c++/4.6/bits/char_traits.h:280:7, col:45>
  (ReturnStmt 0x9c1dc58 <col:9, col:42>
    (CXXStaticCastExpr 0x9c1dc40 <col:16, col:42> 'char_type':'char' static_cast<char_type> <NoOp>
      (ImplicitCastExpr 0x9c1dc30 <col:39> 'char_type':'char' <IntegralCast>
        (ImplicitCastExpr 0x9c1dc20 <col:39> 'int_type':'int' <LValueToRValue>
          (DeclRefExpr 0x9c1dbfc <col:39> 'const int_type':'const int' lvalue ParmVar 0x9c1b7d0 '__c' 'const int_type &'))))))


        static int_type to_int_type(const char_type &__c) (CompoundStmt 0x9c1dd20 </usr/include/c++/4.6/bits/char_traits.h:286:7, col:72>
  (ReturnStmt 0x9c1dd10 <col:9, col:69>
    (CXXStaticCastExpr 0x9c1dcf8 <col:16, col:69> 'int_type':'int' static_cast<int_type> <NoOp>
      (ImplicitCastExpr 0x9c1dce8 <col:38, col:68> 'int_type':'int' <IntegralCast>
        (CXXStaticCastExpr 0x9c1dcc8 <col:38, col:68> 'unsigned char' static_cast<unsigned char> <NoOp>
          (ImplicitCastExpr 0x9c1dcb8 <col:65> 'unsigned char' <IntegralCast>
            (ImplicitCastExpr 0x9c1dca8 <col:65> 'char_type':'char' <LValueToRValue>
              (DeclRefExpr 0x9c1dc7c <col:65> 'const char_type':'const char' lvalue ParmVar 0x9c1b8f0 '__c' 'const char_type &'))))))))


        static bool eq_int_type(const int_type &__c1, const int_type &__c2) (CompoundStmt 0x9c1ddb0 </usr/include/c++/4.6/bits/char_traits.h:290:7, col:30>
  (ReturnStmt 0x9c1dda0 <col:9, col:24>
    (BinaryOperator 0x9c1dd88 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x9c1dd68 <col:16> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0x9c1dd34 <col:16> 'const int_type':'const int' lvalue ParmVar 0x9c1ba10 '__c1' 'const int_type &'))
      (ImplicitCastExpr 0x9c1dd78 <col:24> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0x9c1dd4c <col:24> 'const int_type':'const int' lvalue ParmVar 0x9c1ba60 '__c2' 'const int_type &')))))


        static int_type eof() (CompoundStmt 0x9c1f3f0 </usr/include/c++/4.6/bits/char_traits.h:294:7, col:59>
  (ReturnStmt 0x9c1f3e0 <col:9, col:56>
    (CXXStaticCastExpr 0x9c1f3c8 <col:16, col:56> 'int_type':'int' static_cast<int_type> <NoOp>
      (UnaryOperator 0x9c1dde0 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:1149:28, col:29> 'int' prefix '-'
        (IntegerLiteral 0x9c1ddc8 <col:29> 'int' 1)))))


        static int_type not_eof(const int_type &__c) (CompoundStmt 0x9c1f558 </usr/include/c++/4.6/bits/char_traits.h:298:7, col:42>
  (ReturnStmt 0x9c1f548 <col:9, col:37>
    (ConditionalOperator 0x9c1f528 <col:16, col:37> 'int'
      (ParenExpr 0x9c1f4d0 <col:16, col:29> '_Bool'
        (BinaryOperator 0x9c1f4b8 <col:17, col:28> '_Bool' '=='
          (ImplicitCastExpr 0x9c1f4a8 <col:17> 'int_type':'int' <LValueToRValue>
            (DeclRefExpr 0x9c1f404 <col:17> 'const int_type':'const int' lvalue ParmVar 0x9c1ce20 '__c' 'const int_type &'))
          (CallExpr 0x9c1f488 <col:24, col:28> 'int_type':'int'
            (ImplicitCastExpr 0x9c1f478 <col:24> 'int_type (*)(void)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9c1f41c <col:24> 'int_type (void)' lvalue CXXMethod 0x9c1bba0 'eof' 'int_type (void)')))))
      (IntegerLiteral 0x9c1f4e8 <col:33> 'int' 0)
      (ImplicitCastExpr 0x9c1f518 <col:37> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0x9c1f500 <col:37> 'const int_type':'const int' lvalue ParmVar 0x9c1ce20 '__c' 'const int_type &')))))


    }
template <class _CharT = wchar_t> struct char_traits {
        struct char_traits;
        typedef wchar_t char_type;
        typedef wint_t int_type;
        typedef streamoff off_type;
        typedef wstreampos pos_type;
        typedef mbstate_t state_type;
        static void assign(char_type &__c1, const char_type &__c2) (CompoundStmt 0x9c20ce8 </usr/include/c++/4.6/bits/char_traits.h:315:7, col:22>
  (BinaryOperator 0x9c20cd0 <col:9, col:16> 'char_type':'wchar_t' lvalue '='
    (DeclRefExpr 0x9c20c90 <col:9> 'char_type':'wchar_t' lvalue ParmVar 0x9c1f910 '__c1' 'char_type &')
    (ImplicitCastExpr 0x9c20cc0 <col:16> 'char_type':'wchar_t' <LValueToRValue>
      (DeclRefExpr 0x9c20ca8 <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0x9c1f9a0 '__c2' 'const char_type &'))))


        static bool eq(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x9c20d78 </usr/include/c++/4.6/bits/char_traits.h:319:7, col:30>
  (ReturnStmt 0x9c20d68 <col:9, col:24>
    (BinaryOperator 0x9c20d50 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x9c20d30 <col:16> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9c20cfc <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0x9c1fac0 '__c1' 'const char_type &'))
      (ImplicitCastExpr 0x9c20d40 <col:24> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9c20d14 <col:24> 'const char_type':'const wchar_t' lvalue ParmVar 0x9c1fb10 '__c2' 'const char_type &')))))


        static bool lt(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x9c20e08 </usr/include/c++/4.6/bits/char_traits.h:323:7, col:29>
  (ReturnStmt 0x9c20df8 <col:9, col:23>
    (BinaryOperator 0x9c20de0 <col:16, col:23> '_Bool' '<'
      (ImplicitCastExpr 0x9c20dc0 <col:16> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9c20d8c <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0x9c1fc30 '__c1' 'const char_type &'))
      (ImplicitCastExpr 0x9c20dd0 <col:23> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9c20da4 <col:23> 'const char_type':'const wchar_t' lvalue ParmVar 0x9c1fc80 '__c2' 'const char_type &')))))


        static int compare(const char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9c20f70 </usr/include/c++/4.6/bits/char_traits.h:327:7, col:42>
  (ReturnStmt 0x9c20f60 <col:9, col:39>
    (CallExpr 0x9c20f08 <col:16, col:39> 'int'
      (ImplicitCastExpr 0x9c20ef8 <col:16> 'int (*)(const wchar_t *, const wchar_t *, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9c20e9c <col:16> 'int (const wchar_t *, const wchar_t *, size_t) throw()' lvalue Function 0x9b5b500 'wmemcmp' 'int (const wchar_t *, const wchar_t *, size_t) throw()' (UsingShadow 0x9c0b3b0 'wmemcmp')))
      (ImplicitCastExpr 0x9c20f30 <col:24> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9c20e54 <col:24> 'const char_type *' lvalue ParmVar 0x9c1fd80 '__s1' 'const char_type *'))
      (ImplicitCastExpr 0x9c20f40 <col:30> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9c20e6c <col:30> 'const char_type *' lvalue ParmVar 0x9c1fdd0 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0x9c20f50 <col:36> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9c20e84 <col:36> 'size_t':'unsigned int' lvalue ParmVar 0x9c1fe10 '__n' 'size_t':'unsigned int')))))


        static size_t length(const char_type *__s) (CompoundStmt 0x9c21078 </usr/include/c++/4.6/bits/char_traits.h:331:7, col:29>
  (ReturnStmt 0x9c21068 <col:9, col:26>
    (CallExpr 0x9c21038 <col:16, col:26> 'size_t':'unsigned int'
      (ImplicitCastExpr 0x9c21028 <col:16> 'size_t (*)(const wchar_t *) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9c20fd4 <col:16> 'size_t (const wchar_t *) throw()' lvalue Function 0x9b5ae30 'wcslen' 'size_t (const wchar_t *) throw()' (UsingShadow 0x9c0ad90 'wcslen')))
      (ImplicitCastExpr 0x9c21058 <col:23> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9c20fbc <col:23> 'const char_type *' lvalue ParmVar 0x9c1ff20 '__s' 'const char_type *')))))


        static const char_type *find(const char_type *__s, size_t __n, const char_type &__a) (CompoundStmt 0x9c211b8 </usr/include/c++/4.6/bits/char_traits.h:335:7, col:40>
  (ReturnStmt 0x9c211a8 <col:9, col:37>
    (ImplicitCastExpr 0x9c21198 <col:16, col:37> 'const char_type *' <NoOp>
      (CallExpr 0x9c21140 <col:16, col:37> 'wchar_t *'
        (ImplicitCastExpr 0x9c21130 <col:16> 'wchar_t *(*)(const wchar_t *, wchar_t, size_t) throw()' <FunctionToPointerDecay>
          (DeclRefExpr 0x9c21110 <col:16> 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' lvalue Function 0x9b5b350 'wmemchr' 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' (UsingShadow 0x9c0b810 'wmemchr')))
        (ImplicitCastExpr 0x9c21168 <col:24> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9c210c8 <col:24> 'const char_type *' lvalue ParmVar 0x9c20020 '__s' 'const char_type *'))
        (ImplicitCastExpr 0x9c21178 <col:29> 'char_type':'wchar_t' <LValueToRValue>
          (DeclRefExpr 0x9c210e0 <col:29> 'const char_type':'const wchar_t' lvalue ParmVar 0x9c200b0 '__a' 'const char_type &'))
        (ImplicitCastExpr 0x9c21188 <col:34> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9c210f8 <col:34> 'size_t':'unsigned int' lvalue ParmVar 0x9c20060 '__n' 'size_t':'unsigned int'))))))


        static char_type *move(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9c21320 </usr/include/c++/4.6/bits/char_traits.h:339:7, col:43>
  (ReturnStmt 0x9c21310 <col:9, col:40>
    (CallExpr 0x9c212b8 <col:16, col:40> 'wchar_t *'
      (ImplicitCastExpr 0x9c212a8 <col:16> 'wchar_t *(*)(wchar_t *, const wchar_t *, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9c2124c <col:16> 'wchar_t *(wchar_t *, const wchar_t *, size_t) throw()' lvalue Function 0x9b5b850 'wmemmove' 'wchar_t *(wchar_t *, const wchar_t *, size_t) throw()' (UsingShadow 0x9c0b490 'wmemmove')))
      (ImplicitCastExpr 0x9c212e0 <col:25> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9c21204 <col:25> 'char_type *' lvalue ParmVar 0x9c20210 '__s1' 'char_type *'))
      (ImplicitCastExpr 0x9c212f0 <col:31> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9c2121c <col:31> 'const char_type *' lvalue ParmVar 0x9c20260 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0x9c21300 <col:37> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9c21234 <col:37> 'size_t':'unsigned int' lvalue ParmVar 0x9c202a0 '__n' 'size_t':'unsigned int')))))


        static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9c21aa0 </usr/include/c++/4.6/bits/char_traits.h:343:7, col:42>
  (ReturnStmt 0x9c21a90 <col:9, col:39>
    (CallExpr 0x9c21a38 <col:16, col:39> 'wchar_t *'
      (ImplicitCastExpr 0x9c21a28 <col:16> 'wchar_t *(*)(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9c219f0 <col:16> 'wchar_t *(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' lvalue Function 0x9b5b6b0 'wmemcpy' 'wchar_t *(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' (UsingShadow 0x9c0b420 'wmemcpy')))
      (ImplicitCastExpr 0x9c21a60 <col:24> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9c2136c <col:24> 'char_type *' lvalue ParmVar 0x9c203d0 '__s1' 'char_type *'))
      (ImplicitCastExpr 0x9c21a70 <col:30> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9c21384 <col:30> 'const char_type *' lvalue ParmVar 0x9c20420 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0x9c21a80 <col:36> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9c2139c <col:36> 'size_t':'unsigned int' lvalue ParmVar 0x9c20460 '__n' 'size_t':'unsigned int')))))


        static char_type *assign(char_type *__s, size_t __n, char_type __a) (CompoundStmt 0x9c21c00 </usr/include/c++/4.6/bits/char_traits.h:347:7, col:40>
  (ReturnStmt 0x9c21bf0 <col:9, col:37>
    (CallExpr 0x9c21b98 <col:16, col:37> 'wchar_t *'
      (ImplicitCastExpr 0x9c21b88 <col:16> 'wchar_t *(*)(wchar_t *, wchar_t, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9c21b34 <col:16> 'wchar_t *(wchar_t *, wchar_t, size_t) throw()' lvalue Function 0x9b5ba10 'wmemset' 'wchar_t *(wchar_t *, wchar_t, size_t) throw()' (UsingShadow 0x9c0b500 'wmemset')))
      (ImplicitCastExpr 0x9c21bc0 <col:24> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9c21aec <col:24> 'char_type *' lvalue ParmVar 0x9c20540 '__s' 'char_type *'))
      (ImplicitCastExpr 0x9c21bd0 <col:29> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9c21b04 <col:29> 'char_type':'wchar_t' lvalue ParmVar 0x9c205c0 '__a' 'char_type':'wchar_t'))
      (ImplicitCastExpr 0x9c21be0 <col:34> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9c21b1c <col:34> 'size_t':'unsigned int' lvalue ParmVar 0x9c20580 '__n' 'size_t':'unsigned int')))))


        static char_type to_char_type(const int_type &__c) (CompoundStmt 0x9c21c80 </usr/include/c++/4.6/bits/char_traits.h:351:7, col:32>
  (ReturnStmt 0x9c21c70 <col:9, col:29>
    (CXXFunctionalCastExpr 0x9c21c58 <col:16, col:29> 'char_type':'wchar_t' functional cast to char_type <NoOp>
      (ImplicitCastExpr 0x9c21c48 <col:26> 'char_type':'wchar_t' <IntegralCast>
        (ImplicitCastExpr 0x9c21c38 <col:26> 'int_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9c21c20 <col:26> 'const int_type':'const unsigned int' lvalue ParmVar 0x9c20730 '__c' 'const int_type &'))))))


        static int_type to_int_type(const char_type &__c) (CompoundStmt 0x9c21d00 </usr/include/c++/4.6/bits/char_traits.h:355:7, col:31>
  (ReturnStmt 0x9c21cf0 <col:9, col:28>
    (CXXFunctionalCastExpr 0x9c21cd8 <col:16, col:28> 'int_type':'unsigned int' functional cast to int_type <NoOp>
      (ImplicitCastExpr 0x9c21cc8 <col:25> 'int_type':'unsigned int' <IntegralCast>
        (ImplicitCastExpr 0x9c21cb8 <col:25> 'char_type':'wchar_t' <LValueToRValue>
          (DeclRefExpr 0x9c21ca0 <col:25> 'const char_type':'const wchar_t' lvalue ParmVar 0x9c20850 '__c' 'const char_type &'))))))


        static bool eq_int_type(const int_type &__c1, const int_type &__c2) (CompoundStmt 0x9c21d90 </usr/include/c++/4.6/bits/char_traits.h:359:7, col:30>
  (ReturnStmt 0x9c21d80 <col:9, col:24>
    (BinaryOperator 0x9c21d68 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x9c21d48 <col:16> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9c21d14 <col:16> 'const int_type':'const unsigned int' lvalue ParmVar 0x9c20970 '__c1' 'const int_type &'))
      (ImplicitCastExpr 0x9c21d58 <col:24> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9c21d2c <col:24> 'const int_type':'const unsigned int' lvalue ParmVar 0x9c209c0 '__c2' 'const int_type &')))))


        static int_type eof() (CompoundStmt 0x9c21e08 </usr/include/c++/4.6/bits/char_traits.h:363:7, col:45>
  (ReturnStmt 0x9c21df8 <col:9, col:42>
    (CXXStaticCastExpr 0x9c21de0 <col:16, col:42> 'int_type':'unsigned int' static_cast<int_type> <NoOp>
      (ParenExpr 0x9c21dc0 </usr/include/wchar.h:119:15, col:27> 'unsigned int'
        (IntegerLiteral 0x9c21da8 <col:16> 'unsigned int' 4294967295)))))


        static int_type not_eof(const int_type &__c) (CompoundStmt 0x9c21fe0 </usr/include/c++/4.6/bits/char_traits.h:367:7, col:51>
  (ReturnStmt 0x9c21fd0 <col:9, col:46>
    (ConditionalOperator 0x9c21fb0 <col:16, col:46> 'unsigned int'
      (CallExpr 0x9c21f28 <col:16, col:38> '_Bool'
        (ImplicitCastExpr 0x9c21f18 <col:16> '_Bool (*)(const int_type &, const int_type &)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9c21e1c <col:16> '_Bool (const int_type &, const int_type &)' lvalue CXXMethod 0x9c20a60 'eq_int_type' '_Bool (const int_type &, const int_type &)'))
        (DeclRefExpr 0x9c21e34 <col:28> 'const int_type':'const unsigned int' lvalue ParmVar 0x9c20b70 '__c' 'const int_type &')
        (MaterializeTemporaryExpr 0x9c21f50 <col:33, col:37> 'const int_type':'const unsigned int' lvalue
          (CallExpr 0x9c21eb8 <col:33, col:37> 'int_type':'unsigned int'
            (ImplicitCastExpr 0x9c21ea8 <col:33> 'int_type (*)(void)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9c21e4c <col:33> 'int_type (void)' lvalue CXXMethod 0x9c20b00 'eof' 'int_type (void)')))))
      (ImplicitCastExpr 0x9c21fa0 <col:42> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0x9c21f60 <col:42> 'int' 0))
      (ImplicitCastExpr 0x9c21f90 <col:46> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9c21f78 <col:46> 'const int_type':'const unsigned int' lvalue ParmVar 0x9c20b70 '__c' 'const int_type &')))))


    }
template <class _CharT> struct char_traits : public __gnu_cxx::char_traits<_CharT> {
        struct char_traits;
    };
    struct char_traits {
        struct char_traits;
        typedef char char_type;
        typedef int int_type;
        typedef streampos pos_type;
        typedef streamoff off_type;
        typedef mbstate_t state_type;
        static void assign(char_type &__c1, const char_type &__c2) (CompoundStmt 0x9c1cf98 </usr/include/c++/4.6/bits/char_traits.h:244:7, col:22>
  (BinaryOperator 0x9c1cf80 <col:9, col:16> 'char_type':'char' lvalue '='
    (DeclRefExpr 0x9c1cf40 <col:9> 'char_type':'char' lvalue ParmVar 0x9c1a310 '__c1' 'char_type &')
    (ImplicitCastExpr 0x9c1cf70 <col:16> 'char_type':'char' <LValueToRValue>
      (DeclRefExpr 0x9c1cf58 <col:16> 'const char_type':'const char' lvalue ParmVar 0x9c1a3a0 '__c2' 'const char_type &'))))


        static bool eq(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x9c1d048 </usr/include/c++/4.6/bits/char_traits.h:248:7, col:30>
  (ReturnStmt 0x9c1d038 <col:9, col:24>
    (BinaryOperator 0x9c1d020 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x9c1cff0 <col:16> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9c1cfe0 <col:16> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9c1cfac <col:16> 'const char_type':'const char' lvalue ParmVar 0x9c1a4c0 '__c1' 'const char_type &')))
      (ImplicitCastExpr 0x9c1d010 <col:24> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9c1d000 <col:24> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9c1cfc4 <col:24> 'const char_type':'const char' lvalue ParmVar 0x9c1a510 '__c2' 'const char_type &'))))))


        static bool lt(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x9c1d0f8 </usr/include/c++/4.6/bits/char_traits.h:252:7, col:29>
  (ReturnStmt 0x9c1d0e8 <col:9, col:23>
    (BinaryOperator 0x9c1d0d0 <col:16, col:23> '_Bool' '<'
      (ImplicitCastExpr 0x9c1d0a0 <col:16> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9c1d090 <col:16> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9c1d05c <col:16> 'const char_type':'const char' lvalue ParmVar 0x9c1ac50 '__c1' 'const char_type &')))
      (ImplicitCastExpr 0x9c1d0c0 <col:23> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9c1d0b0 <col:23> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9c1d074 <col:23> 'const char_type':'const char' lvalue ParmVar 0x9c1aca0 '__c2' 'const char_type &'))))))


        static int compare(const char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9c1d220 </usr/include/c++/4.6/bits/char_traits.h:256:7, col:51>
  (ReturnStmt 0x9c1d210 <col:9, col:48>
    (CallExpr 0x9c1d198 <col:16, col:48> 'int'
      (ImplicitCastExpr 0x9c1d188 <col:16> 'int (*)(const void *, const void *, unsigned int)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9c1d10c <col:16> 'int (const void *, const void *, unsigned int)' lvalue Function 0x9bf74d0 '__builtin_memcmp' 'int (const void *, const void *, unsigned int)'))
      (ImplicitCastExpr 0x9c1d1d0 <col:33> 'const void *' <BitCast>
        (ImplicitCastExpr 0x9c1d1c0 <col:33> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9c1d124 <col:33> 'const char_type *' lvalue ParmVar 0x9c1ada0 '__s1' 'const char_type *')))
      (ImplicitCastExpr 0x9c1d1f0 <col:39> 'const void *' <BitCast>
        (ImplicitCastExpr 0x9c1d1e0 <col:39> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9c1d13c <col:39> 'const char_type *' lvalue ParmVar 0x9c1adf0 '__s2' 'const char_type *')))
      (ImplicitCastExpr 0x9c1d200 <col:45> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9c1d154 <col:45> 'size_t':'unsigned int' lvalue ParmVar 0x9c1ae30 '__n' 'size_t':'unsigned int')))))


        static size_t length(const char_type *__s) (CompoundStmt 0x9c1d3b8 </usr/include/c++/4.6/bits/char_traits.h:260:7, col:39>
  (ReturnStmt 0x9c1d3a8 <col:9, col:36>
    (CallExpr 0x9c1d378 <col:16, col:36> 'unsigned int'
      (ImplicitCastExpr 0x9c1d368 <col:16> 'unsigned int (*)(const char *)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9c1d314 <col:16> 'unsigned int (const char *)' lvalue Function 0x9c1d240 '__builtin_strlen' 'unsigned int (const char *)'))
      (ImplicitCastExpr 0x9c1d398 <col:33> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9c1d32c <col:33> 'const char_type *' lvalue ParmVar 0x9c1af70 '__s' 'const char_type *')))))


        static const char_type *find(const char_type *__s, size_t __n, const char_type &__a) (CompoundStmt 0x9c1d6a8 </usr/include/c++/4.6/bits/char_traits.h:264:7, col:80>
  (ReturnStmt 0x9c1d698 <col:9, col:77>
    (CXXStaticCastExpr 0x9c1d680 <col:16, col:77> 'const char_type *' static_cast<const char_type *> <BitCast>
      (CallExpr 0x9c1d5f8 <col:46, col:76> 'void *'
        (ImplicitCastExpr 0x9c1d5e8 <col:46> 'void *(*)(const void *, int, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9c1d564 <col:46> 'void *(const void *, int, unsigned int)' lvalue Function 0x9c1d400 '__builtin_memchr' 'void *(const void *, int, unsigned int)'))
        (ImplicitCastExpr 0x9c1d630 <col:63> 'const void *' <BitCast>
          (ImplicitCastExpr 0x9c1d620 <col:63> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x9c1d57c <col:63> 'const char_type *' lvalue ParmVar 0x9c1b090 '__s' 'const char_type *')))
        (ImplicitCastExpr 0x9c1d650 <col:68> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9c1d640 <col:68> 'char_type':'char' <LValueToRValue>
            (DeclRefExpr 0x9c1d594 <col:68> 'const char_type':'const char' lvalue ParmVar 0x9c1b120 '__a' 'const char_type &')))
        (ImplicitCastExpr 0x9c1d660 <col:73> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9c1d5ac <col:73> 'size_t':'unsigned int' lvalue ParmVar 0x9c1b0d0 '__n' 'size_t':'unsigned int'))))))


        static char_type *move(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9c1d7f8 </usr/include/c++/4.6/bits/char_traits.h:268:7, col:77>
  (ReturnStmt 0x9c1d7e8 <col:9, col:74>
    (CXXStaticCastExpr 0x9c1d7d0 <col:16, col:74> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0x9c1d748 <col:40, col:73> 'void *'
        (ImplicitCastExpr 0x9c1d738 <col:40> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9c1d6bc <col:40> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9be7b30 '__builtin_memmove' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0x9c1d780 <col:58> 'void *' <BitCast>
          (ImplicitCastExpr 0x9c1d770 <col:58> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x9c1d6d4 <col:58> 'char_type *' lvalue ParmVar 0x9c1b280 '__s1' 'char_type *')))
        (ImplicitCastExpr 0x9c1d7a0 <col:64> 'const void *' <BitCast>
          (ImplicitCastExpr 0x9c1d790 <col:64> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x9c1d6ec <col:64> 'const char_type *' lvalue ParmVar 0x9c1b2d0 '__s2' 'const char_type *')))
        (ImplicitCastExpr 0x9c1d7b0 <col:70> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9c1d704 <col:70> 'size_t':'unsigned int' lvalue ParmVar 0x9c1b310 '__n' 'size_t':'unsigned int'))))))


        static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9c1da98 </usr/include/c++/4.6/bits/char_traits.h:272:7, col:76>
  (ReturnStmt 0x9c1da88 <col:9, col:73>
    (CXXStaticCastExpr 0x9c1da70 <col:16, col:73> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0x9c1d9e8 <col:40, col:72> 'void *'
        (ImplicitCastExpr 0x9c1d9d8 <col:40> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9c1d974 <col:40> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9c1d810 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0x9c1da20 <col:57> 'void *' <BitCast>
          (ImplicitCastExpr 0x9c1da10 <col:57> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x9c1d98c <col:57> 'char_type *' lvalue ParmVar 0x9c1b450 '__s1' 'char_type *')))
        (ImplicitCastExpr 0x9c1da40 <col:63> 'const void *' <BitCast>
          (ImplicitCastExpr 0x9c1da30 <col:63> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x9c1d9a4 <col:63> 'const char_type *' lvalue ParmVar 0x9c1b4a0 '__s2' 'const char_type *')))
        (ImplicitCastExpr 0x9c1da50 <col:69> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9c1d9bc <col:69> 'size_t':'unsigned int' lvalue ParmVar 0x9c1b4e0 '__n' 'size_t':'unsigned int'))))))


        static char_type *assign(char_type *__s, size_t __n, char_type __a) (CompoundStmt 0x9c1dbe8 </usr/include/c++/4.6/bits/char_traits.h:276:7, col:74>
  (ReturnStmt 0x9c1dbd8 <col:9, col:71>
    (CXXStaticCastExpr 0x9c1dbc0 <col:16, col:71> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0x9c1db38 <col:40, col:70> 'void *'
        (ImplicitCastExpr 0x9c1db28 <col:40> 'void *(*)(void *, int, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9c1daac <col:40> 'void *(void *, int, unsigned int)' lvalue Function 0x9bf2ba0 '__builtin_memset' 'void *(void *, int, unsigned int)'))
        (ImplicitCastExpr 0x9c1db70 <col:57> 'void *' <BitCast>
          (ImplicitCastExpr 0x9c1db60 <col:57> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x9c1dac4 <col:57> 'char_type *' lvalue ParmVar 0x9c1b5c0 '__s' 'char_type *')))
        (ImplicitCastExpr 0x9c1db90 <col:62> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9c1db80 <col:62> 'char_type':'char' <LValueToRValue>
            (DeclRefExpr 0x9c1dadc <col:62> 'char_type':'char' lvalue ParmVar 0x9c1b640 '__a' 'char_type':'char')))
        (ImplicitCastExpr 0x9c1dba0 <col:67> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9c1daf4 <col:67> 'size_t':'unsigned int' lvalue ParmVar 0x9c1b600 '__n' 'size_t':'unsigned int'))))))


        static char_type to_char_type(const int_type &__c) (CompoundStmt 0x9c1dc68 </usr/include/c++/4.6/bits/char_traits.h:280:7, col:45>
  (ReturnStmt 0x9c1dc58 <col:9, col:42>
    (CXXStaticCastExpr 0x9c1dc40 <col:16, col:42> 'char_type':'char' static_cast<char_type> <NoOp>
      (ImplicitCastExpr 0x9c1dc30 <col:39> 'char_type':'char' <IntegralCast>
        (ImplicitCastExpr 0x9c1dc20 <col:39> 'int_type':'int' <LValueToRValue>
          (DeclRefExpr 0x9c1dbfc <col:39> 'const int_type':'const int' lvalue ParmVar 0x9c1b7d0 '__c' 'const int_type &'))))))


        static int_type to_int_type(const char_type &__c) (CompoundStmt 0x9c1dd20 </usr/include/c++/4.6/bits/char_traits.h:286:7, col:72>
  (ReturnStmt 0x9c1dd10 <col:9, col:69>
    (CXXStaticCastExpr 0x9c1dcf8 <col:16, col:69> 'int_type':'int' static_cast<int_type> <NoOp>
      (ImplicitCastExpr 0x9c1dce8 <col:38, col:68> 'int_type':'int' <IntegralCast>
        (CXXStaticCastExpr 0x9c1dcc8 <col:38, col:68> 'unsigned char' static_cast<unsigned char> <NoOp>
          (ImplicitCastExpr 0x9c1dcb8 <col:65> 'unsigned char' <IntegralCast>
            (ImplicitCastExpr 0x9c1dca8 <col:65> 'char_type':'char' <LValueToRValue>
              (DeclRefExpr 0x9c1dc7c <col:65> 'const char_type':'const char' lvalue ParmVar 0x9c1b8f0 '__c' 'const char_type &'))))))))


        static bool eq_int_type(const int_type &__c1, const int_type &__c2) (CompoundStmt 0x9c1ddb0 </usr/include/c++/4.6/bits/char_traits.h:290:7, col:30>
  (ReturnStmt 0x9c1dda0 <col:9, col:24>
    (BinaryOperator 0x9c1dd88 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x9c1dd68 <col:16> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0x9c1dd34 <col:16> 'const int_type':'const int' lvalue ParmVar 0x9c1ba10 '__c1' 'const int_type &'))
      (ImplicitCastExpr 0x9c1dd78 <col:24> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0x9c1dd4c <col:24> 'const int_type':'const int' lvalue ParmVar 0x9c1ba60 '__c2' 'const int_type &')))))


        static int_type eof() (CompoundStmt 0x9c1f3f0 </usr/include/c++/4.6/bits/char_traits.h:294:7, col:59>
  (ReturnStmt 0x9c1f3e0 <col:9, col:56>
    (CXXStaticCastExpr 0x9c1f3c8 <col:16, col:56> 'int_type':'int' static_cast<int_type> <NoOp>
      (UnaryOperator 0x9c1dde0 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:1149:28, col:29> 'int' prefix '-'
        (IntegerLiteral 0x9c1ddc8 <col:29> 'int' 1)))))


        static int_type not_eof(const int_type &__c) (CompoundStmt 0x9c1f558 </usr/include/c++/4.6/bits/char_traits.h:298:7, col:42>
  (ReturnStmt 0x9c1f548 <col:9, col:37>
    (ConditionalOperator 0x9c1f528 <col:16, col:37> 'int'
      (ParenExpr 0x9c1f4d0 <col:16, col:29> '_Bool'
        (BinaryOperator 0x9c1f4b8 <col:17, col:28> '_Bool' '=='
          (ImplicitCastExpr 0x9c1f4a8 <col:17> 'int_type':'int' <LValueToRValue>
            (DeclRefExpr 0x9c1f404 <col:17> 'const int_type':'const int' lvalue ParmVar 0x9c1ce20 '__c' 'const int_type &'))
          (CallExpr 0x9c1f488 <col:24, col:28> 'int_type':'int'
            (ImplicitCastExpr 0x9c1f478 <col:24> 'int_type (*)(void)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9c1f41c <col:24> 'int_type (void)' lvalue CXXMethod 0x9c1bba0 'eof' 'int_type (void)')))))
      (IntegerLiteral 0x9c1f4e8 <col:33> 'int' 0)
      (ImplicitCastExpr 0x9c1f518 <col:37> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0x9c1f500 <col:37> 'const int_type':'const int' lvalue ParmVar 0x9c1ce20 '__c' 'const int_type &')))))


    };
    struct char_traits {
        struct char_traits;
        typedef wchar_t char_type;
        typedef wint_t int_type;
        typedef streamoff off_type;
        typedef wstreampos pos_type;
        typedef mbstate_t state_type;
        static void assign(char_type &__c1, const char_type &__c2) (CompoundStmt 0x9c20ce8 </usr/include/c++/4.6/bits/char_traits.h:315:7, col:22>
  (BinaryOperator 0x9c20cd0 <col:9, col:16> 'char_type':'wchar_t' lvalue '='
    (DeclRefExpr 0x9c20c90 <col:9> 'char_type':'wchar_t' lvalue ParmVar 0x9c1f910 '__c1' 'char_type &')
    (ImplicitCastExpr 0x9c20cc0 <col:16> 'char_type':'wchar_t' <LValueToRValue>
      (DeclRefExpr 0x9c20ca8 <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0x9c1f9a0 '__c2' 'const char_type &'))))


        static bool eq(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x9c20d78 </usr/include/c++/4.6/bits/char_traits.h:319:7, col:30>
  (ReturnStmt 0x9c20d68 <col:9, col:24>
    (BinaryOperator 0x9c20d50 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x9c20d30 <col:16> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9c20cfc <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0x9c1fac0 '__c1' 'const char_type &'))
      (ImplicitCastExpr 0x9c20d40 <col:24> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9c20d14 <col:24> 'const char_type':'const wchar_t' lvalue ParmVar 0x9c1fb10 '__c2' 'const char_type &')))))


        static bool lt(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x9c20e08 </usr/include/c++/4.6/bits/char_traits.h:323:7, col:29>
  (ReturnStmt 0x9c20df8 <col:9, col:23>
    (BinaryOperator 0x9c20de0 <col:16, col:23> '_Bool' '<'
      (ImplicitCastExpr 0x9c20dc0 <col:16> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9c20d8c <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0x9c1fc30 '__c1' 'const char_type &'))
      (ImplicitCastExpr 0x9c20dd0 <col:23> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9c20da4 <col:23> 'const char_type':'const wchar_t' lvalue ParmVar 0x9c1fc80 '__c2' 'const char_type &')))))


        static int compare(const char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9c20f70 </usr/include/c++/4.6/bits/char_traits.h:327:7, col:42>
  (ReturnStmt 0x9c20f60 <col:9, col:39>
    (CallExpr 0x9c20f08 <col:16, col:39> 'int'
      (ImplicitCastExpr 0x9c20ef8 <col:16> 'int (*)(const wchar_t *, const wchar_t *, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9c20e9c <col:16> 'int (const wchar_t *, const wchar_t *, size_t) throw()' lvalue Function 0x9b5b500 'wmemcmp' 'int (const wchar_t *, const wchar_t *, size_t) throw()' (UsingShadow 0x9c0b3b0 'wmemcmp')))
      (ImplicitCastExpr 0x9c20f30 <col:24> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9c20e54 <col:24> 'const char_type *' lvalue ParmVar 0x9c1fd80 '__s1' 'const char_type *'))
      (ImplicitCastExpr 0x9c20f40 <col:30> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9c20e6c <col:30> 'const char_type *' lvalue ParmVar 0x9c1fdd0 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0x9c20f50 <col:36> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9c20e84 <col:36> 'size_t':'unsigned int' lvalue ParmVar 0x9c1fe10 '__n' 'size_t':'unsigned int')))))


        static size_t length(const char_type *__s) (CompoundStmt 0x9c21078 </usr/include/c++/4.6/bits/char_traits.h:331:7, col:29>
  (ReturnStmt 0x9c21068 <col:9, col:26>
    (CallExpr 0x9c21038 <col:16, col:26> 'size_t':'unsigned int'
      (ImplicitCastExpr 0x9c21028 <col:16> 'size_t (*)(const wchar_t *) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9c20fd4 <col:16> 'size_t (const wchar_t *) throw()' lvalue Function 0x9b5ae30 'wcslen' 'size_t (const wchar_t *) throw()' (UsingShadow 0x9c0ad90 'wcslen')))
      (ImplicitCastExpr 0x9c21058 <col:23> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9c20fbc <col:23> 'const char_type *' lvalue ParmVar 0x9c1ff20 '__s' 'const char_type *')))))


        static const char_type *find(const char_type *__s, size_t __n, const char_type &__a) (CompoundStmt 0x9c211b8 </usr/include/c++/4.6/bits/char_traits.h:335:7, col:40>
  (ReturnStmt 0x9c211a8 <col:9, col:37>
    (ImplicitCastExpr 0x9c21198 <col:16, col:37> 'const char_type *' <NoOp>
      (CallExpr 0x9c21140 <col:16, col:37> 'wchar_t *'
        (ImplicitCastExpr 0x9c21130 <col:16> 'wchar_t *(*)(const wchar_t *, wchar_t, size_t) throw()' <FunctionToPointerDecay>
          (DeclRefExpr 0x9c21110 <col:16> 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' lvalue Function 0x9b5b350 'wmemchr' 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' (UsingShadow 0x9c0b810 'wmemchr')))
        (ImplicitCastExpr 0x9c21168 <col:24> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9c210c8 <col:24> 'const char_type *' lvalue ParmVar 0x9c20020 '__s' 'const char_type *'))
        (ImplicitCastExpr 0x9c21178 <col:29> 'char_type':'wchar_t' <LValueToRValue>
          (DeclRefExpr 0x9c210e0 <col:29> 'const char_type':'const wchar_t' lvalue ParmVar 0x9c200b0 '__a' 'const char_type &'))
        (ImplicitCastExpr 0x9c21188 <col:34> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9c210f8 <col:34> 'size_t':'unsigned int' lvalue ParmVar 0x9c20060 '__n' 'size_t':'unsigned int'))))))


        static char_type *move(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9c21320 </usr/include/c++/4.6/bits/char_traits.h:339:7, col:43>
  (ReturnStmt 0x9c21310 <col:9, col:40>
    (CallExpr 0x9c212b8 <col:16, col:40> 'wchar_t *'
      (ImplicitCastExpr 0x9c212a8 <col:16> 'wchar_t *(*)(wchar_t *, const wchar_t *, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9c2124c <col:16> 'wchar_t *(wchar_t *, const wchar_t *, size_t) throw()' lvalue Function 0x9b5b850 'wmemmove' 'wchar_t *(wchar_t *, const wchar_t *, size_t) throw()' (UsingShadow 0x9c0b490 'wmemmove')))
      (ImplicitCastExpr 0x9c212e0 <col:25> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9c21204 <col:25> 'char_type *' lvalue ParmVar 0x9c20210 '__s1' 'char_type *'))
      (ImplicitCastExpr 0x9c212f0 <col:31> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9c2121c <col:31> 'const char_type *' lvalue ParmVar 0x9c20260 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0x9c21300 <col:37> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9c21234 <col:37> 'size_t':'unsigned int' lvalue ParmVar 0x9c202a0 '__n' 'size_t':'unsigned int')))))


        static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9c21aa0 </usr/include/c++/4.6/bits/char_traits.h:343:7, col:42>
  (ReturnStmt 0x9c21a90 <col:9, col:39>
    (CallExpr 0x9c21a38 <col:16, col:39> 'wchar_t *'
      (ImplicitCastExpr 0x9c21a28 <col:16> 'wchar_t *(*)(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9c219f0 <col:16> 'wchar_t *(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' lvalue Function 0x9b5b6b0 'wmemcpy' 'wchar_t *(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' (UsingShadow 0x9c0b420 'wmemcpy')))
      (ImplicitCastExpr 0x9c21a60 <col:24> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9c2136c <col:24> 'char_type *' lvalue ParmVar 0x9c203d0 '__s1' 'char_type *'))
      (ImplicitCastExpr 0x9c21a70 <col:30> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9c21384 <col:30> 'const char_type *' lvalue ParmVar 0x9c20420 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0x9c21a80 <col:36> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9c2139c <col:36> 'size_t':'unsigned int' lvalue ParmVar 0x9c20460 '__n' 'size_t':'unsigned int')))))


        static char_type *assign(char_type *__s, size_t __n, char_type __a) (CompoundStmt 0x9c21c00 </usr/include/c++/4.6/bits/char_traits.h:347:7, col:40>
  (ReturnStmt 0x9c21bf0 <col:9, col:37>
    (CallExpr 0x9c21b98 <col:16, col:37> 'wchar_t *'
      (ImplicitCastExpr 0x9c21b88 <col:16> 'wchar_t *(*)(wchar_t *, wchar_t, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9c21b34 <col:16> 'wchar_t *(wchar_t *, wchar_t, size_t) throw()' lvalue Function 0x9b5ba10 'wmemset' 'wchar_t *(wchar_t *, wchar_t, size_t) throw()' (UsingShadow 0x9c0b500 'wmemset')))
      (ImplicitCastExpr 0x9c21bc0 <col:24> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9c21aec <col:24> 'char_type *' lvalue ParmVar 0x9c20540 '__s' 'char_type *'))
      (ImplicitCastExpr 0x9c21bd0 <col:29> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9c21b04 <col:29> 'char_type':'wchar_t' lvalue ParmVar 0x9c205c0 '__a' 'char_type':'wchar_t'))
      (ImplicitCastExpr 0x9c21be0 <col:34> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9c21b1c <col:34> 'size_t':'unsigned int' lvalue ParmVar 0x9c20580 '__n' 'size_t':'unsigned int')))))


        static char_type to_char_type(const int_type &__c) (CompoundStmt 0x9c21c80 </usr/include/c++/4.6/bits/char_traits.h:351:7, col:32>
  (ReturnStmt 0x9c21c70 <col:9, col:29>
    (CXXFunctionalCastExpr 0x9c21c58 <col:16, col:29> 'char_type':'wchar_t' functional cast to char_type <NoOp>
      (ImplicitCastExpr 0x9c21c48 <col:26> 'char_type':'wchar_t' <IntegralCast>
        (ImplicitCastExpr 0x9c21c38 <col:26> 'int_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9c21c20 <col:26> 'const int_type':'const unsigned int' lvalue ParmVar 0x9c20730 '__c' 'const int_type &'))))))


        static int_type to_int_type(const char_type &__c) (CompoundStmt 0x9c21d00 </usr/include/c++/4.6/bits/char_traits.h:355:7, col:31>
  (ReturnStmt 0x9c21cf0 <col:9, col:28>
    (CXXFunctionalCastExpr 0x9c21cd8 <col:16, col:28> 'int_type':'unsigned int' functional cast to int_type <NoOp>
      (ImplicitCastExpr 0x9c21cc8 <col:25> 'int_type':'unsigned int' <IntegralCast>
        (ImplicitCastExpr 0x9c21cb8 <col:25> 'char_type':'wchar_t' <LValueToRValue>
          (DeclRefExpr 0x9c21ca0 <col:25> 'const char_type':'const wchar_t' lvalue ParmVar 0x9c20850 '__c' 'const char_type &'))))))


        static bool eq_int_type(const int_type &__c1, const int_type &__c2) (CompoundStmt 0x9c21d90 </usr/include/c++/4.6/bits/char_traits.h:359:7, col:30>
  (ReturnStmt 0x9c21d80 <col:9, col:24>
    (BinaryOperator 0x9c21d68 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x9c21d48 <col:16> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9c21d14 <col:16> 'const int_type':'const unsigned int' lvalue ParmVar 0x9c20970 '__c1' 'const int_type &'))
      (ImplicitCastExpr 0x9c21d58 <col:24> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9c21d2c <col:24> 'const int_type':'const unsigned int' lvalue ParmVar 0x9c209c0 '__c2' 'const int_type &')))))


        static int_type eof() (CompoundStmt 0x9c21e08 </usr/include/c++/4.6/bits/char_traits.h:363:7, col:45>
  (ReturnStmt 0x9c21df8 <col:9, col:42>
    (CXXStaticCastExpr 0x9c21de0 <col:16, col:42> 'int_type':'unsigned int' static_cast<int_type> <NoOp>
      (ParenExpr 0x9c21dc0 </usr/include/wchar.h:119:15, col:27> 'unsigned int'
        (IntegerLiteral 0x9c21da8 <col:16> 'unsigned int' 4294967295)))))


        static int_type not_eof(const int_type &__c) (CompoundStmt 0x9c21fe0 </usr/include/c++/4.6/bits/char_traits.h:367:7, col:51>
  (ReturnStmt 0x9c21fd0 <col:9, col:46>
    (ConditionalOperator 0x9c21fb0 <col:16, col:46> 'unsigned int'
      (CallExpr 0x9c21f28 <col:16, col:38> '_Bool'
        (ImplicitCastExpr 0x9c21f18 <col:16> '_Bool (*)(const int_type &, const int_type &)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9c21e1c <col:16> '_Bool (const int_type &, const int_type &)' lvalue CXXMethod 0x9c20a60 'eq_int_type' '_Bool (const int_type &, const int_type &)'))
        (DeclRefExpr 0x9c21e34 <col:28> 'const int_type':'const unsigned int' lvalue ParmVar 0x9c20b70 '__c' 'const int_type &')
        (MaterializeTemporaryExpr 0x9c21f50 <col:33, col:37> 'const int_type':'const unsigned int' lvalue
          (CallExpr 0x9c21eb8 <col:33, col:37> 'int_type':'unsigned int'
            (ImplicitCastExpr 0x9c21ea8 <col:33> 'int_type (*)(void)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9c21e4c <col:33> 'int_type (void)' lvalue CXXMethod 0x9c20b00 'eof' 'int_type (void)')))))
      (ImplicitCastExpr 0x9c21fa0 <col:42> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0x9c21f60 <col:42> 'int' 0))
      (ImplicitCastExpr 0x9c21f90 <col:46> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9c21f78 <col:46> 'const int_type':'const unsigned int' lvalue ParmVar 0x9c20b70 '__c' 'const int_type &')))))


    };
}
extern unsigned int __builtin_strlen(const char *);
extern void *__builtin_memchr(const void *, int, unsigned int);
extern void *__builtin_memcpy(void *, const void *, unsigned int);
extern "C++" {
    namespace std {
        class exception {
            class exception;
        public:
        public:
            exception() throw() (CompoundStmt 0x9c22500 </usr/include/c++/4.6/exception:63:25, col:27>)


            virtual void ~exception() throw();
            virtual const char *what() const throw();
            inline std::exception &operator=(const std::exception &) throw();
            inline exception(const std::exception &) throw();
        };
        class bad_exception : public std::exception {
            class bad_exception;
        public:
        public:
            bad_exception() throw() : std::exception() (CompoundStmt 0x9c28c60 </usr/include/c++/4.6/exception:76:29, col:31>)


            virtual void ~bad_exception() throw();
            virtual const char *what() const throw();
            inline std::bad_exception &operator=(const std::bad_exception &) throw();
        };
        typedef void (*terminate_handler)();
        typedef void (*unexpected_handler)();
        terminate_handler set_terminate(terminate_handler) throw();
        void terminate() throw();
        unexpected_handler set_unexpected(unexpected_handler) throw();
        void unexpected();
        bool uncaught_exception() throw();
    }
    namespace __gnu_cxx {
        void __verbose_terminate_handler();
    }
}
extern "C++" {
    namespace std {
        class bad_alloc : public std::exception {
            class bad_alloc;
        public:
        public:
            bad_alloc() throw() : std::exception() (CompoundStmt 0x9c29770 </usr/include/c++/4.6/new:58:25, col:27>)


            virtual void ~bad_alloc() throw();
            virtual const char *what() const throw();
            inline std::bad_alloc &operator=(const std::bad_alloc &) throw();
        };
        struct nothrow_t {
            struct nothrow_t;
            inline nothrow_t() throw();
            inline nothrow_t(const std::nothrow_t &) throw();
        };
        extern const std::nothrow_t nothrow;
        typedef void (*new_handler)();
        new_handler set_new_handler(new_handler) throw();
    }
    void *operator new(std::size_t) throw(std::bad_alloc);
    void *operator new[](std::size_t) throw(std::bad_alloc);
    void operator delete(void *) throw();
    void operator delete[](void *) throw();
    void *operator new(std::size_t, const std::nothrow_t &) throw();
    void *operator new[](std::size_t, const std::nothrow_t &) throw();
    void operator delete(void *, const std::nothrow_t &) throw();
    void operator delete[](void *, const std::nothrow_t &) throw();
    inline void *operator new(std::size_t, void *__p) throw() (CompoundStmt 0x9c2afe8 </usr/include/c++/4.6/new:102:59, col:73>
  (ReturnStmt 0x9c2afd8 <col:61, col:68>
    (ImplicitCastExpr 0x9c2afc8 <col:68> 'void *' <LValueToRValue>
      (DeclRefExpr 0x9c2afac <col:68> 'void *' lvalue ParmVar 0x9c2ae60 '__p' 'void *'))))


    inline void *operator new[](std::size_t, void *__p) throw() (CompoundStmt 0x9c2b1e0 </usr/include/c++/4.6/new:103:61, col:75>
  (ReturnStmt 0x9c2b1d0 <col:63, col:70>
    (ImplicitCastExpr 0x9c2b1c0 <col:70> 'void *' <LValueToRValue>
      (DeclRefExpr 0x9c2b1a4 <col:70> 'void *' lvalue ParmVar 0x9c2b080 '__p' 'void *'))))


    inline void operator delete(void *, void *) throw() (CompoundStmt 0x9c2b3b0 </usr/include/c++/4.6/new:106:54, col:56>)


    inline void operator delete[](void *, void *) throw() (CompoundStmt 0x9c2b530 </usr/include/c++/4.6/new:107:54, col:56>)


}
namespace __gnu_cxx {
    using std::size_t;
    ;
    using std::ptrdiff_t;
    ;
    template <typename _Tp = char> class new_allocator {
        class new_allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef char *pointer;
        typedef const char *const_pointer;
        typedef char &reference;
        typedef const char &const_reference;
        typedef char value_type;
        template <typename _Tp1> struct rebind;
        new_allocator() throw();
        new_allocator(const __gnu_cxx::new_allocator<char> &) throw();
        template <typename _Tp1> new_allocator(const new_allocator<_Tp1> &) throw();
        void ~new_allocator() throw();
        pointer address(reference __x) const;
        const_pointer address(const_reference __x) const;
        pointer allocate(size_type __n, const void *);
        void deallocate(pointer __p, size_type);
        size_type max_size() const throw();
        void construct(pointer __p, const char &__val);
        void destroy(pointer __p);
    }
template <typename _Tp = wchar_t> class new_allocator {
        class new_allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef wchar_t *pointer;
        typedef const wchar_t *const_pointer;
        typedef wchar_t &reference;
        typedef const wchar_t &const_reference;
        typedef wchar_t value_type;
        template <typename _Tp1> struct rebind;
        new_allocator() throw() (CompoundStmt 0x9c2d580 </usr/include/c++/4.6/ext/new_allocator.h:69:31, col:33>)


        new_allocator(const __gnu_cxx::new_allocator<wchar_t> &) throw() (CompoundStmt 0x9c2d590 </usr/include/c++/4.6/ext/new_allocator.h:71:51, col:53>)


        template <typename _Tp1 = wchar_t> new_allocator(const new_allocator<wchar_t> &) throw()template <typename _Tp1> new_allocator(const new_allocator<_Tp1> &) throw();
        void ~new_allocator() throw() (CompoundStmt 0x9c2d5b0 </usr/include/c++/4.6/ext/new_allocator.h:76:32, col:34>)


        pointer address(reference __x) const;
        const_pointer address(const_reference __x) const;
        pointer allocate(size_type __n, const void *);
        void deallocate(pointer __p, size_type);
        size_type max_size() const throw();
        void construct(pointer __p, const wchar_t &__val);
        void destroy(pointer __p);
    }
template <typename _Tp = std::basic_string<wchar_t>> class new_allocator {
        class new_allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef std::basic_string<wchar_t> *pointer;
        typedef const std::basic_string<wchar_t> *const_pointer;
        typedef std::basic_string<wchar_t> &reference;
        typedef const std::basic_string<wchar_t> &const_reference;
        typedef std::basic_string<wchar_t> value_type;
        template <typename _Tp1> struct rebind;
        new_allocator() throw() (CompoundStmt 0x9c2d580 </usr/include/c++/4.6/ext/new_allocator.h:69:31, col:33>)


        new_allocator(const __gnu_cxx::new_allocator<std::basic_string<wchar_t> > &) throw() (CompoundStmt 0x9c2d590 </usr/include/c++/4.6/ext/new_allocator.h:71:51, col:53>)


        template <typename _Tp1 = std::basic_string<wchar_t>> new_allocator(const new_allocator<std::basic_string<wchar_t> > &) throw()template <typename _Tp1> new_allocator(const new_allocator<_Tp1> &) throw();
        void ~new_allocator() throw() (CompoundStmt 0x9c2d5b0 </usr/include/c++/4.6/ext/new_allocator.h:76:32, col:34>)


        pointer address(reference __x) const;
        const_pointer address(const_reference __x) const;
        pointer allocate(size_type __n, const void *) (CompoundStmt 0xa0e26d8 </usr/include/c++/4.6/ext/new_allocator.h:88:7, line:93:7>
  (IfStmt 0xa0e25f0 <line:89:2, line:90:27>
    <<<NULL>>>
    (BinaryOperator 0xa0e25a8 <line:89:6, col:27> '_Bool' '>'
      (ImplicitCastExpr 0xa0e2598 <col:6> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa0e2520 <col:6> 'size_type':'unsigned int' lvalue ParmVar 0xa0b8f20 '__n' 'size_type':'unsigned int'))
      (CXXMemberCallExpr 0xa0e2568 <col:12, col:27> 'size_type':'unsigned int'
        (MemberExpr 0xa0e2548 <col:12, col:18> '<bound member function type>' ->max_size 0xa0b9250
          (ImplicitCastExpr 0xa0e2588 <col:12> 'const class __gnu_cxx::new_allocator<class std::basic_string<wchar_t> > *' <NoOp>
            (CXXThisExpr 0xa0e2538 <col:12> 'class __gnu_cxx::new_allocator<class std::basic_string<wchar_t> > *' this)))))
    (CallExpr 0xa0e25d0 <line:90:4, col:27> 'void'
      (ImplicitCastExpr 0xa0e25c0 <col:4, col:9> 'void (*)(void) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x9c2d840 <col:4, col:9> 'void (void) __attribute__((noreturn))' lvalue Function 0x9b76100 '__throw_bad_alloc' 'void (void) __attribute__((noreturn))')))
    <<<NULL>>>)
  (ReturnStmt 0xa0e26c8 <line:92:2, col:60>
    (CXXStaticCastExpr 0xa0e26b0 <col:9, col:60> 'class std::basic_string<wchar_t> *' static_cast<class std::basic_string<wchar_t> *> <BitCast>
      (CallExpr 0xa0e2690 <col:27, col:59> 'void *'
        (ImplicitCastExpr 0xa0e2680 <col:27, <invalid sloc>> 'void *(*)(std::size_t) throw(std::bad_alloc)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9c2d9a0 <col:27, <invalid sloc>> 'void *(std::size_t) throw(std::bad_alloc)' lvalue Function 0x9c2a260 'operator new' 'void *(std::size_t) throw(std::bad_alloc)'))
        (BinaryOperator 0xa0e2668 <col:42, col:58> 'unsigned int' '*'
          (ImplicitCastExpr 0xa0e2658 <col:42> 'size_type':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0xa0e261c <col:42> 'size_type':'unsigned int' lvalue ParmVar 0xa0b8f20 '__n' 'size_type':'unsigned int'))
          (UnaryExprOrTypeTraitExpr 0xa0e2640 <col:48, col:58> 'unsigned int' sizeof 'class std::basic_string<wchar_t>':'class std::basic_string<wchar_t>'))))))


        void deallocate(pointer __p, size_type) (CompoundStmt 0xa0dc740 </usr/include/c++/4.6/ext/new_allocator.h:98:7, col:33>
  (CallExpr 0xa0dc700 <col:9, col:30> 'void'
    (ImplicitCastExpr 0xa0dc6f0 <col:9, <invalid sloc>> 'void (*)(void *) throw()' <FunctionToPointerDecay>
      (DeclRefExpr 0xa0dc6cc <col:9, <invalid sloc>> 'void (void *) throw()' lvalue Function 0x9c2a4d0 'operator delete' 'void (void *) throw()'))
    (ImplicitCastExpr 0xa0dc730 <col:27> 'void *' <BitCast>
      (ImplicitCastExpr 0xa0dc720 <col:27> 'pointer':'class std::basic_string<wchar_t> *' <LValueToRValue>
        (DeclRefExpr 0xa0dc6b4 <col:27> 'pointer':'class std::basic_string<wchar_t> *' lvalue ParmVar 0xa0b9100 '__p' 'pointer':'class std::basic_string<wchar_t> *')))))


        size_type max_size() const throw() (CompoundStmt 0xa0e0da8 </usr/include/c++/4.6/ext/new_allocator.h:102:7, col:42>
  (ReturnStmt 0xa0e0d98 <col:9, col:39>
    (BinaryOperator 0xa0e0d80 <col:16, col:39> 'unsigned int' '/'
      (CXXFunctionalCastExpr 0xa0e0b48 <col:16, col:25> 'size_t':'unsigned int' functional cast to size_t <NoOp>
        (ImplicitCastExpr 0xa0e0b38 <col:23, col:24> 'size_t':'unsigned int' <IntegralCast>
          (UnaryOperator 0x9c2f070 <col:23, col:24> 'int' prefix '-'
            (IntegerLiteral 0x9c2f058 <col:24> 'int' 1))))
      (UnaryExprOrTypeTraitExpr 0xa0e0b68 <col:29, col:39> 'unsigned int' sizeof 'class std::basic_string<wchar_t>':'class std::basic_string<wchar_t>'))))


        void construct(pointer __p, const std::basic_string<wchar_t> &__val) (CompoundStmt 0xa0ecef8 </usr/include/c++/4.6/ext/new_allocator.h:108:7, col:40>
  (CXXNewExpr 0xa0eceb8 <col:9, col:37> 'class std::basic_string<wchar_t> *'
    (CStyleCastExpr 0xa0ece60 <col:15, col:23> 'void *' <NoOp>
      (ImplicitCastExpr 0xa0ece50 <col:23> 'void *' <BitCast>
        (ImplicitCastExpr 0xa0ece40 <col:23> 'pointer':'class std::basic_string<wchar_t> *' <LValueToRValue>
          (DeclRefExpr 0xa0ece28 <col:23> 'pointer':'class std::basic_string<wchar_t> *' lvalue ParmVar 0xa0b9350 '__p' 'pointer':'class std::basic_string<wchar_t> *'))))
    (DeclRefExpr 0xa0ece78 <col:32> 'const class std::basic_string<wchar_t>':'const class std::basic_string<wchar_t>' lvalue ParmVar 0xa0b93a0 '__val' 'const class std::basic_string<wchar_t> &')))


        void destroy(pointer __p) (CompoundStmt 0xa0f6b40 </usr/include/c++/4.6/ext/new_allocator.h:118:28, col:43>
  (CXXMemberCallExpr 0xa0f6b20 <col:30, col:40> 'void'
    (MemberExpr 0xa0f6afc <col:30, col:36> '<bound member function type>' ->~basic_string 0x9dc6480
      (ImplicitCastExpr 0xa0f6af0 <col:30> 'pointer':'class std::basic_string<wchar_t> *' <LValueToRValue>
        (DeclRefExpr 0xa0f6acc <col:30> 'pointer':'class std::basic_string<wchar_t> *' lvalue ParmVar 0xa0b9540 '__p' 'pointer':'class std::basic_string<wchar_t> *')))))


    }
template <typename _Tp> class new_allocator {
        class new_allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef _Tp *pointer;
        typedef const _Tp *const_pointer;
        typedef _Tp &reference;
        typedef const _Tp &const_reference;
        typedef _Tp value_type;
        template <typename _Tp1> struct rebind {
            struct rebind;
            typedef new_allocator<_Tp1> other;
        };
        new_allocator<_Tp>() throw() (CompoundStmt 0x9c2d580 </usr/include/c++/4.6/ext/new_allocator.h:69:31, col:33>)


        new_allocator<_Tp>(const new_allocator<_Tp> &) throw() (CompoundStmt 0x9c2d590 </usr/include/c++/4.6/ext/new_allocator.h:71:51, col:53>)


        template <typename _Tp1> new_allocator<_Tp>(const new_allocator<_Tp1> &) throw() (CompoundStmt 0x9c2d5a0 </usr/include/c++/4.6/ext/new_allocator.h:74:59, col:61>)

;
        void ~new_allocator<_Tp>() throw() (CompoundStmt 0x9c2d5b0 </usr/include/c++/4.6/ext/new_allocator.h:76:32, col:34>)


        pointer address(reference __x) const (CompoundStmt 0x9c2d658 </usr/include/c++/4.6/ext/new_allocator.h:79:36, col:68>
  (ReturnStmt 0x9c2d648 <col:38, col:65>
    (CallExpr 0x9c2d628 <col:45, col:65> '<dependent type>'
      (UnresolvedLookupExpr 0x9c2d5d8 <col:45, col:50> '<overloaded function type>' lvalue (no ADL) = '1' 0x9ba4270)
      (DeclRefExpr 0x9c2d60c <col:62> '_Tp' lvalue ParmVar 0x9c2cd10 '__x' 'reference':'_Tp &'))))


        const_pointer address(const_reference __x) const (CompoundStmt 0x9c2d708 </usr/include/c++/4.6/ext/new_allocator.h:82:42, col:74>
  (ReturnStmt 0x9c2d6f8 <col:44, col:71>
    (CallExpr 0x9c2d6d8 <col:51, col:71> '<dependent type>'
      (UnresolvedLookupExpr 0x9c2d688 <col:51, col:56> '<overloaded function type>' lvalue (no ADL) = '1' 0x9ba4270)
      (DeclRefExpr 0x9c2d6bc <col:68> 'const _Tp' lvalue ParmVar 0x9c2ce50 '__x' 'const_reference':'const _Tp &'))))


        pointer allocate(size_type __n, const void * = (ImplicitCastExpr 0x9c2d570 </usr/include/c++/4.6/ext/new_allocator.h:87:45> 'const void *' <NullToPointer>
  (IntegerLiteral 0x9c2d558 <col:45> 'int' 0))
) (CompoundStmt 0x9c2ef90 </usr/include/c++/4.6/ext/new_allocator.h:88:7, line:93:7>
  (IfStmt 0x9c2d8a8 <line:89:2, line:90:27>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9c2d7f8 <line:89:6, col:27> '<dependent type>'
      (UnresolvedLookupExpr 0x9c2d7c0 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bd46b0 0x9bd4c90)
      (DeclRefExpr 0x9c2d71c <col:6> 'size_type':'unsigned int' lvalue ParmVar 0x9c2cf80 '__n' 'size_type':'unsigned int')
      (CallExpr 0x9c2d7a0 <col:12, col:27> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9c2d768 <col:12, col:18> '<dependent type>' lvalue
          (CXXThisExpr 0x9c2d758 <col:12> 'new_allocator<_Tp> *' this))))
    (CallExpr 0x9c2d888 <line:90:4, col:27> 'void'
      (ImplicitCastExpr 0x9c2d878 <col:4, col:9> 'void (*)(void) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x9c2d840 <col:4, col:9> 'void (void) __attribute__((noreturn))' lvalue Function 0x9b76100 '__throw_bad_alloc' 'void (void) __attribute__((noreturn))')))
    <<<NULL>>>)
  (ReturnStmt 0x9c2ef80 <line:92:2, col:60>
    (CXXStaticCastExpr 0x9c2ef68 <col:9, col:60> '_Tp *' static_cast<_Tp *> <Dependent>
      (CallExpr 0x9c2ef38 <col:27, col:59> 'void *'
        (ImplicitCastExpr 0x9c2d9f8 <col:27, <invalid sloc>> 'void *(*)(std::size_t) throw(std::bad_alloc)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9c2d9a0 <col:27, <invalid sloc>> 'void *(std::size_t) throw(std::bad_alloc)' lvalue Function 0x9c2a260 'operator new' 'void *(std::size_t) throw(std::bad_alloc)'))
        (BinaryOperator 0x9c2d988 <col:42, col:58> 'unsigned int' '*'
          (ImplicitCastExpr 0x9c2d978 <col:42> 'size_type':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0x9c2d93c <col:42> 'size_type':'unsigned int' lvalue ParmVar 0x9c2cf80 '__n' 'size_type':'unsigned int'))
          (UnaryExprOrTypeTraitExpr 0x9c2d960 <col:48, col:58> 'unsigned int' sizeof '_Tp'))))))


        void deallocate(pointer __p, size_type) (CompoundStmt 0x9c2f038 </usr/include/c++/4.6/ext/new_allocator.h:98:7, col:33>
  (CallExpr 0x9c2f018 <col:9, col:30> '<dependent type>'
    (UnresolvedLookupExpr 0x9c2efc0 <col:9, col:20> '<overloaded function type>' lvalue (no ADL) = '1' 0x9c2a4d0 0x9c2aba0 0x9c2b300)
    (DeclRefExpr 0x9c2effc <col:27> 'pointer':'_Tp *' lvalue ParmVar 0x9c2d0e0 '__p' 'pointer':'_Tp *')))


        size_type max_size() const throw() (CompoundStmt 0x9c2f0f8 </usr/include/c++/4.6/ext/new_allocator.h:102:7, col:42>
  (ReturnStmt 0x9c2f0e8 <col:9, col:39>
    (BinaryOperator 0x9c2f0d0 <col:16, col:39> 'unsigned int' '/'
      (CXXFunctionalCastExpr 0x9c2f098 <col:16, col:25> 'size_t':'unsigned int' functional cast to size_t <NoOp>
        (ImplicitCastExpr 0x9c2f088 <col:23, col:24> 'size_t':'unsigned int' <IntegralCast>
          (UnaryOperator 0x9c2f070 <col:23, col:24> 'int' prefix '-'
            (IntegerLiteral 0x9c2f058 <col:24> 'int' 1))))
      (UnaryExprOrTypeTraitExpr 0x9c2f0b8 <col:29, col:39> 'unsigned int' sizeof '_Tp'))))


        void construct(pointer __p, const _Tp &__val) (CompoundStmt 0x9c2f1b0 </usr/include/c++/4.6/ext/new_allocator.h:108:7, col:40>
  (CXXNewExpr 0x9c2f170 <col:9, col:37> '_Tp *'
    (CStyleCastExpr 0x9c2f138 <col:15, col:23> 'void *' <Dependent>
      (DeclRefExpr 0x9c2f10c <col:23> 'pointer':'_Tp *' lvalue ParmVar 0x9c2d2f0 '__p' 'pointer':'_Tp *'))
    (DeclRefExpr 0x9c2f150 <col:32> 'const _Tp' lvalue ParmVar 0x9c2d340 '__val' 'const _Tp &')))


        void destroy(pointer __p) (CompoundStmt 0x9c2f238 </usr/include/c++/4.6/ext/new_allocator.h:118:28, col:43>
  (CallExpr 0x9c2f218 <col:30, col:40> 'void'
    (CXXPseudoDestructorExpr 0x9c2f1e8 <col:30, col:36> 'void (*)(void)'
      (DeclRefExpr 0x9c2f1c4 <col:30> 'pointer':'_Tp *' lvalue ParmVar 0x9c2d450 '__p' 'pointer':'_Tp *'))))


    };
    template <typename _Tp> inline bool operator==(const new_allocator<_Tp> &, const new_allocator<_Tp> &) (CompoundStmt 0x9c2f5e0 </usr/include/c++/4.6/ext/new_allocator.h:124:5, col:20>
  (ReturnStmt 0x9c2f5d0 <col:7, col:14>
    (CXXBoolLiteralExpr 0x9c2f5c0 <col:14> '_Bool' true)))

;
    template <typename _Tp> inline bool operator!=(const new_allocator<_Tp> &, const new_allocator<_Tp> &) (CompoundStmt 0x9c2f950 </usr/include/c++/4.6/ext/new_allocator.h:129:5, col:21>
  (ReturnStmt 0x9c2f940 <col:7, col:14>
    (CXXBoolLiteralExpr 0x9c2f930 <col:14> '_Bool' false)))

;
}
namespace std {
    template <typename _Tp = char> class allocator : public __gnu_cxx::new_allocator<char> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef char *pointer;
        typedef const char *const_pointer;
        typedef char &reference;
        typedef const char &const_reference;
        typedef char value_type;
        template <typename _Tp1 = char> struct rebind {
            struct rebind;
            typedef allocator<char> other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw();
        allocator(const std::allocator<char> &__a) throw();
        template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw();
    }
template <typename _Tp = wchar_t> class allocator : public __gnu_cxx::new_allocator<wchar_t> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef wchar_t *pointer;
        typedef const wchar_t *const_pointer;
        typedef wchar_t &reference;
        typedef const wchar_t &const_reference;
        typedef wchar_t value_type;
        template <typename _Tp1 = char> struct rebind {
            struct rebind;
            typedef allocator<char> other;
        }
template <typename _Tp1 = wchar_t> struct rebind {
            struct rebind;
            typedef allocator<wchar_t> other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw() : __gnu_cxx::new_allocator<wchar_t>() (CompoundStmt 0x9c31668 </usr/include/c++/4.6/bits/allocator.h:107:27, col:29>)


        allocator(const std::allocator<wchar_t> &__a) throw() : __gnu_cxx::new_allocator<wchar_t>((ImplicitCastExpr 0xa0d6e10 </usr/include/c++/4.6/bits/allocator.h:110:39> 'const class __gnu_cxx::new_allocator<wchar_t>' lvalue <DerivedToBase (new_allocator)>
  (DeclRefExpr 0xa0d6b64 <col:39> 'const class std::allocator<wchar_t>' lvalue ParmVar 0x9c37df0 '__a' 'const class std::allocator<wchar_t> &'))
) (CompoundStmt 0x9c31780 </usr/include/c++/4.6/bits/allocator.h:110:44, col:46>)


        template <typename _Tp1 = wchar_t> allocator(const allocator<wchar_t> &) throw()template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw() (CompoundStmt 0x9c317a0 </usr/include/c++/4.6/bits/allocator.h:115:28, col:30>)


    }
template <typename _Tp = std::basic_string<wchar_t>> class allocator : public __gnu_cxx::new_allocator<basic_string<wchar_t> > {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef std::basic_string<wchar_t> *pointer;
        typedef const std::basic_string<wchar_t> *const_pointer;
        typedef std::basic_string<wchar_t> &reference;
        typedef const std::basic_string<wchar_t> &const_reference;
        typedef std::basic_string<wchar_t> value_type;
        template <typename _Tp1 = std::basic_string<wchar_t>> struct rebind {
            struct rebind;
            typedef allocator<std::basic_string<wchar_t> > other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw() : __gnu_cxx::new_allocator<basic_string<wchar_t> >() (CompoundStmt 0x9c31668 </usr/include/c++/4.6/bits/allocator.h:107:27, col:29>)


        allocator(const std::allocator<std::basic_string<wchar_t> > &__a) throw() : __gnu_cxx::new_allocator<basic_string<wchar_t> >((ImplicitCastExpr 0x9e295f0 </usr/include/c++/4.6/bits/allocator.h:110:39> 'const class __gnu_cxx::new_allocator<class std::basic_string<wchar_t> >' lvalue <DerivedToBase (new_allocator)>
  (DeclRefExpr 0x9e29348 <col:39> 'const class std::allocator<class std::basic_string<wchar_t> >' lvalue ParmVar 0xa0b9cb0 '__a' 'const class std::allocator<class std::basic_string<wchar_t> > &'))
) (CompoundStmt 0x9c31780 </usr/include/c++/4.6/bits/allocator.h:110:44, col:46>)


        template <typename _Tp1 = std::basic_string<wchar_t>> allocator(const allocator<std::basic_string<wchar_t> > &) throw()template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw() (CompoundStmt 0x9c317a0 </usr/include/c++/4.6/bits/allocator.h:115:28, col:30>)


    }
template <typename _Tp = void> class allocator {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef void *pointer;
        typedef const void *const_pointer;
        typedef void value_type;
        template <typename _Tp1> struct rebind {
            struct rebind;
            typedef allocator<_Tp1> other;
        };
    }
template <typename _Tp = std::basic_string<char>> class allocator
template <typename _Tp> class allocator;
    class allocator {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef void *pointer;
        typedef const void *const_pointer;
        typedef void value_type;
        template <typename _Tp1> struct rebind {
            struct rebind;
            typedef allocator<_Tp1> other;
        };
    };
    template <typename _Tp = char> class allocator : public __gnu_cxx::new_allocator<char> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef char *pointer;
        typedef const char *const_pointer;
        typedef char &reference;
        typedef const char &const_reference;
        typedef char value_type;
        template <typename _Tp1 = char> struct rebind {
            struct rebind;
            typedef allocator<char> other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw();
        allocator(const std::allocator<char> &__a) throw();
        template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw();
    }
template <typename _Tp = wchar_t> class allocator : public __gnu_cxx::new_allocator<wchar_t> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef wchar_t *pointer;
        typedef const wchar_t *const_pointer;
        typedef wchar_t &reference;
        typedef const wchar_t &const_reference;
        typedef wchar_t value_type;
        template <typename _Tp1 = char> struct rebind {
            struct rebind;
            typedef allocator<char> other;
        }
template <typename _Tp1 = wchar_t> struct rebind {
            struct rebind;
            typedef allocator<wchar_t> other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw() : __gnu_cxx::new_allocator<wchar_t>() (CompoundStmt 0x9c31668 </usr/include/c++/4.6/bits/allocator.h:107:27, col:29>)


        allocator(const std::allocator<wchar_t> &__a) throw() : __gnu_cxx::new_allocator<wchar_t>((ImplicitCastExpr 0xa0d6e10 </usr/include/c++/4.6/bits/allocator.h:110:39> 'const class __gnu_cxx::new_allocator<wchar_t>' lvalue <DerivedToBase (new_allocator)>
  (DeclRefExpr 0xa0d6b64 <col:39> 'const class std::allocator<wchar_t>' lvalue ParmVar 0x9c37df0 '__a' 'const class std::allocator<wchar_t> &'))
) (CompoundStmt 0x9c31780 </usr/include/c++/4.6/bits/allocator.h:110:44, col:46>)


        template <typename _Tp1 = wchar_t> allocator(const allocator<wchar_t> &) throw()template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw() (CompoundStmt 0x9c317a0 </usr/include/c++/4.6/bits/allocator.h:115:28, col:30>)


    }
template <typename _Tp = std::basic_string<wchar_t>> class allocator : public __gnu_cxx::new_allocator<basic_string<wchar_t> > {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef std::basic_string<wchar_t> *pointer;
        typedef const std::basic_string<wchar_t> *const_pointer;
        typedef std::basic_string<wchar_t> &reference;
        typedef const std::basic_string<wchar_t> &const_reference;
        typedef std::basic_string<wchar_t> value_type;
        template <typename _Tp1 = std::basic_string<wchar_t>> struct rebind {
            struct rebind;
            typedef allocator<std::basic_string<wchar_t> > other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw() : __gnu_cxx::new_allocator<basic_string<wchar_t> >() (CompoundStmt 0x9c31668 </usr/include/c++/4.6/bits/allocator.h:107:27, col:29>)


        allocator(const std::allocator<std::basic_string<wchar_t> > &__a) throw() : __gnu_cxx::new_allocator<basic_string<wchar_t> >((ImplicitCastExpr 0x9e295f0 </usr/include/c++/4.6/bits/allocator.h:110:39> 'const class __gnu_cxx::new_allocator<class std::basic_string<wchar_t> >' lvalue <DerivedToBase (new_allocator)>
  (DeclRefExpr 0x9e29348 <col:39> 'const class std::allocator<class std::basic_string<wchar_t> >' lvalue ParmVar 0xa0b9cb0 '__a' 'const class std::allocator<class std::basic_string<wchar_t> > &'))
) (CompoundStmt 0x9c31780 </usr/include/c++/4.6/bits/allocator.h:110:44, col:46>)


        template <typename _Tp1 = std::basic_string<wchar_t>> allocator(const allocator<std::basic_string<wchar_t> > &) throw()template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw() (CompoundStmt 0x9c317a0 </usr/include/c++/4.6/bits/allocator.h:115:28, col:30>)


    }
template <typename _Tp = void> class allocator {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef void *pointer;
        typedef const void *const_pointer;
        typedef void value_type;
        template <typename _Tp1> struct rebind {
            struct rebind;
            typedef allocator<_Tp1> other;
        };
    }
template <typename _Tp = std::basic_string<char>> class allocator
template <typename _Tp> class allocator : public __gnu_cxx::new_allocator<_Tp> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef _Tp *pointer;
        typedef const _Tp *const_pointer;
        typedef _Tp &reference;
        typedef const _Tp &const_reference;
        typedef _Tp value_type;
        template <typename _Tp1> struct rebind {
            struct rebind;
            typedef allocator<_Tp1> other;
        };
        allocator<_Alloc>() throw() (CompoundStmt 0x9c31668 </usr/include/c++/4.6/bits/allocator.h:107:27, col:29>)


        allocator<_Alloc>(const allocator<_Alloc> &__a) throw() : __gnu_cxx::new_allocator<_Tp>((DeclRefExpr 0x9c31728 </usr/include/c++/4.6/bits/allocator.h:110:39> 'const allocator<_Alloc>' lvalue ParmVar 0x9c30c90 '__a' 'const allocator<_Alloc> &')
) (CompoundStmt 0x9c31780 </usr/include/c++/4.6/bits/allocator.h:110:44, col:46>)


        template <typename _Tp1> allocator<_Alloc>(const allocator<_Tp1> &) throw() (CompoundStmt 0x9c31790 </usr/include/c++/4.6/bits/allocator.h:113:51, col:53>)

;
        void ~allocator<_Alloc>() throw() (CompoundStmt 0x9c317a0 </usr/include/c++/4.6/bits/allocator.h:115:28, col:30>)


    };
    template <typename _T1, typename _T2> inline bool operator==(const allocator<_T1> &, const allocator<_T2> &) (CompoundStmt 0x9c31bf0 </usr/include/c++/4.6/bits/allocator.h:123:5, col:20>
  (ReturnStmt 0x9c31be0 <col:7, col:14>
    (CXXBoolLiteralExpr 0x9c31bd0 <col:14> '_Bool' true)))

;
    template <typename _Tp> inline bool operator==(const allocator<_Tp> &, const allocator<_Tp> &) (CompoundStmt 0x9c31f80 </usr/include/c++/4.6/bits/allocator.h:128:5, col:20>
  (ReturnStmt 0x9c31f70 <col:7, col:14>
    (CXXBoolLiteralExpr 0x9c31f60 <col:14> '_Bool' true)))

;
    template <typename _T1, typename _T2> inline bool operator!=(const allocator<_T1> &, const allocator<_T2> &) (CompoundStmt 0x9c32350 </usr/include/c++/4.6/bits/allocator.h:133:5, col:21>
  (ReturnStmt 0x9c32340 <col:7, col:14>
    (CXXBoolLiteralExpr 0x9c32330 <col:14> '_Bool' false)))

;
    template <typename _Tp> inline bool operator!=(const allocator<_Tp> &, const allocator<_Tp> &) (CompoundStmt 0x9c326c0 </usr/include/c++/4.6/bits/allocator.h:138:5, col:21>
  (ReturnStmt 0x9c326b0 <col:7, col:14>
    (CXXBoolLiteralExpr 0x9c326a0 <col:14> '_Bool' false)))

;
    class allocator : public __gnu_cxx::new_allocator<char> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef char *pointer;
        typedef const char *const_pointer;
        typedef char &reference;
        typedef const char &const_reference;
        typedef char value_type;
        template <typename _Tp1 = char> struct rebind {
            struct rebind;
            typedef allocator<char> other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw();
        allocator(const std::allocator<char> &__a) throw();
        template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw();
    };
    class allocator : public __gnu_cxx::new_allocator<wchar_t> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef wchar_t *pointer;
        typedef const wchar_t *const_pointer;
        typedef wchar_t &reference;
        typedef const wchar_t &const_reference;
        typedef wchar_t value_type;
        template <typename _Tp1 = char> struct rebind {
            struct rebind;
            typedef allocator<char> other;
        }
template <typename _Tp1 = wchar_t> struct rebind {
            struct rebind;
            typedef allocator<wchar_t> other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw() : __gnu_cxx::new_allocator<wchar_t>() (CompoundStmt 0x9c31668 </usr/include/c++/4.6/bits/allocator.h:107:27, col:29>)


        allocator(const std::allocator<wchar_t> &__a) throw() : __gnu_cxx::new_allocator<wchar_t>((ImplicitCastExpr 0xa0d6e10 </usr/include/c++/4.6/bits/allocator.h:110:39> 'const class __gnu_cxx::new_allocator<wchar_t>' lvalue <DerivedToBase (new_allocator)>
  (DeclRefExpr 0xa0d6b64 <col:39> 'const class std::allocator<wchar_t>' lvalue ParmVar 0x9c37df0 '__a' 'const class std::allocator<wchar_t> &'))
) (CompoundStmt 0x9c31780 </usr/include/c++/4.6/bits/allocator.h:110:44, col:46>)


        template <typename _Tp1 = wchar_t> allocator(const allocator<wchar_t> &) throw()template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw() (CompoundStmt 0x9c317a0 </usr/include/c++/4.6/bits/allocator.h:115:28, col:30>)


    };
    template <typename _Alloc, bool = (UnaryTypeTraitExpr 0x9c38410 </usr/include/c++/4.6/bits/allocator.h:151:36, col:53> '_Bool')
> struct __alloc_swap {
        struct __alloc_swap;
        static void _S_do_it(_Alloc &, _Alloc &) (CompoundStmt 0x9c390d0 </usr/include/c++/4.6/bits/allocator.h:153:46, col:48>)


    };
    struct __alloc_swap {
        struct __alloc_swap;
        static void _S_do_it(_Alloc &__one, _Alloc &__two) (CompoundStmt 0x9c39740 </usr/include/c++/4.6/bits/allocator.h:160:7, line:164:7>
  (IfStmt 0x9c39720 <line:162:2, line:163:21>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9c39668 <line:162:6, col:15> '<dependent type>'
      (UnresolvedLookupExpr 0x9c39620 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9c32670 0x9c32300 0x9bacde0 0x9bc3130 0x9bc62c0 0x9c11360)
      (DeclRefExpr 0x9c395f0 <col:6> '_Alloc' lvalue ParmVar 0x9c394a0 '__one' '_Alloc &')
      (DeclRefExpr 0x9c39608 <col:15> '_Alloc' lvalue ParmVar 0x9c394f0 '__two' '_Alloc &'))
    (CallExpr 0x9c396f8 <line:163:4, col:21> '<dependent type>'
      (UnresolvedLookupExpr 0x9c39690 <col:4> '<overloaded function type>' lvalue (ADL) = '1' 0x9ba4660 0x9baa350)
      (DeclRefExpr 0x9c396c8 <col:9> '_Alloc' lvalue ParmVar 0x9c394a0 '__one' '_Alloc &')
      (DeclRefExpr 0x9c396e0 <col:16> '_Alloc' lvalue ParmVar 0x9c394f0 '__two' '_Alloc &'))
    <<<NULL>>>))


    };
    template <typename _Alloc, bool = (UnaryTypeTraitExpr 0x9c397b0 </usr/include/c++/4.6/bits/allocator.h:168:36, col:53> '_Bool')
> struct __alloc_neq {
        struct __alloc_neq;
        static bool _S_do_it(const _Alloc &, const _Alloc &) (CompoundStmt 0x9c39c20 </usr/include/c++/4.6/bits/allocator.h:173:7, col:23>
  (ReturnStmt 0x9c39c10 <col:9, col:16>
    (CXXBoolLiteralExpr 0x9c39c00 <col:16> '_Bool' false)))


    };
    struct __alloc_neq {
        struct __alloc_neq;
        static bool _S_do_it(const _Alloc &__one, const _Alloc &__two) (CompoundStmt 0x9c3a200 </usr/include/c++/4.6/bits/allocator.h:181:7, col:32>
  (ReturnStmt 0x9c3a1f0 <col:9, col:25>
    (CXXOperatorCallExpr 0x9c3a1c8 <col:16, col:25> '<dependent type>'
      (UnresolvedLookupExpr 0x9c3a180 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9c32670 0x9c32300 0x9bacde0 0x9bc3130 0x9bc62c0 0x9c11360)
      (DeclRefExpr 0x9c3a150 <col:16> 'const _Alloc' lvalue ParmVar 0x9c3a000 '__one' 'const _Alloc &')
      (DeclRefExpr 0x9c3a168 <col:25> 'const _Alloc' lvalue ParmVar 0x9c3a050 '__two' 'const _Alloc &'))))


    };
}
enum  {
    __LC_CTYPE = (ImplicitCastExpr 0x9c3a698 </usr/include/i386-linux-gnu/bits/locale.h:29:16> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9c3a280 <col:16> 'int' 0))
,
    __LC_NUMERIC = (ImplicitCastExpr 0x9c3a6a8 </usr/include/i386-linux-gnu/bits/locale.h:30:18> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9c3a2d8 <col:18> 'int' 1))
,
    __LC_TIME = (ImplicitCastExpr 0x9c3a6b8 </usr/include/i386-linux-gnu/bits/locale.h:31:15> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9c3a328 <col:15> 'int' 2))
,
    __LC_COLLATE = (ImplicitCastExpr 0x9c3a6c8 </usr/include/i386-linux-gnu/bits/locale.h:32:18> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9c3a378 <col:18> 'int' 3))
,
    __LC_MONETARY = (ImplicitCastExpr 0x9c3a6d8 </usr/include/i386-linux-gnu/bits/locale.h:33:19> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9c3a3c8 <col:19> 'int' 4))
,
    __LC_MESSAGES = (ImplicitCastExpr 0x9c3a6e8 </usr/include/i386-linux-gnu/bits/locale.h:34:19> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9c3a418 <col:19> 'int' 5))
,
    __LC_ALL = (ImplicitCastExpr 0x9c3a6f8 </usr/include/i386-linux-gnu/bits/locale.h:35:14> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9c3a468 <col:14> 'int' 6))
,
    __LC_PAPER = (ImplicitCastExpr 0x9c3a708 </usr/include/i386-linux-gnu/bits/locale.h:36:16> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9c3a4b8 <col:16> 'int' 7))
,
    __LC_NAME = (ImplicitCastExpr 0x9c3a718 </usr/include/i386-linux-gnu/bits/locale.h:37:15> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9c3a508 <col:15> 'int' 8))
,
    __LC_ADDRESS = (ImplicitCastExpr 0x9c3a728 </usr/include/i386-linux-gnu/bits/locale.h:38:18> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9c3a558 <col:18> 'int' 9))
,
    __LC_TELEPHONE = (ImplicitCastExpr 0x9c3a738 </usr/include/i386-linux-gnu/bits/locale.h:39:20> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9c3a5a8 <col:20> 'int' 10))
,
    __LC_MEASUREMENT = (ImplicitCastExpr 0x9c3a748 </usr/include/i386-linux-gnu/bits/locale.h:40:22> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9c3a5f8 <col:22> 'int' 11))
,
    __LC_IDENTIFICATION = (ImplicitCastExpr 0x9c3a758 </usr/include/i386-linux-gnu/bits/locale.h:41:25> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9c3a648 <col:25> 'int' 12))

};
extern "C" {
    struct lconv {
        struct lconv;
        char *decimal_point;
        char *thousands_sep;
        char *grouping;
        char *int_curr_symbol;
        char *currency_symbol;
        char *mon_decimal_point;
        char *mon_thousands_sep;
        char *mon_grouping;
        char *positive_sign;
        char *negative_sign;
        char int_frac_digits;
        char frac_digits;
        char p_cs_precedes;
        char p_sep_by_space;
        char n_cs_precedes;
        char n_sep_by_space;
        char p_sign_posn;
        char n_sign_posn;
        char int_p_cs_precedes;
        char int_p_sep_by_space;
        char int_n_cs_precedes;
        char int_n_sep_by_space;
        char int_p_sign_posn;
        char int_n_sign_posn;
    };
    extern char *setlocale(int __category, const char *__locale) throw();
    extern struct lconv *localeconv() throw();
    extern __locale_t newlocale(int __category_mask, const char *__locale, __locale_t __base) throw();
    extern __locale_t duplocale(__locale_t __dataset) throw();
    extern void freelocale(__locale_t __dataset) throw();
    extern __locale_t uselocale(__locale_t __dataset) throw();
}
namespace std {
    using ::lconv;
    ;
    using ::setlocale;
    ;
    using ::localeconv;
    ;
}
namespace __gnu_cxx {
    extern "C" extern typeof (uselocale) __uselocale
}
namespace std {
    typedef __locale_t __c_locale;
    inline int __convert_from_v(const __c_locale &__cloc, char *__out, const int __size, const char *__fmt, ...) (CompoundStmt 0x9c48960 </usr/include/c++/4.6//i686-linux-gnu/bits/c++locale.h:73:3, line:109:3>
  (DeclStmt 0x9c480d8 <line:75:5, col:54>
    0x9c47fd0 "__c_locale __old =
      (CallExpr 0x9c480a8 <col:24, col:53> '__locale_t':'struct __locale_struct *'
        (ImplicitCastExpr 0x9c48098 <col:24, col:35> 'typeof (uselocale) *' <FunctionToPointerDecay>
          (DeclRefExpr 0x9c48028 <col:24, col:35> 'typeof (uselocale)':'__locale_t (__locale_t) throw()' lvalue Function 0x9c47b20 '__uselocale' 'typeof (uselocale)':'__locale_t (__locale_t) throw()'))
        (ImplicitCastExpr 0x9c480c8 <col:47> '__c_locale':'struct __locale_struct *' <LValueToRValue>
          (DeclRefExpr 0x9c48048 <col:47> 'const __c_locale':'struct __locale_struct *const' lvalue ParmVar 0x9c47d20 '__cloc' 'const __c_locale &')))")
  (DeclStmt 0x9c48128 <line:88:5, col:29>
    0x9c480f0 "__builtin_va_list __args")
  (CallExpr 0x9c48328 <line:89:5, col:37> '_Bool'
    (ImplicitCastExpr 0x9c48318 <col:5> 'void (*)(__builtin_va_list &, ...)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9c48294 <col:5> 'void (__builtin_va_list &, ...)' lvalue Function 0x9c481c0 '__builtin_va_start' 'void (__builtin_va_list &, ...)'))
    (DeclRefExpr 0x9c482ac <col:24> '__builtin_va_list':'char *' lvalue Var 0x9c480f0 '__args' '__builtin_va_list':'char *')
    (DeclRefExpr 0x9c482c4 <col:32> 'const char *' lvalue ParmVar 0x9c47e90 '__fmt' 'const char *'))
  (DeclStmt 0x9c486b8 <line:92:5, col:72>
    0x9c48360 "const int __ret =
      (CallExpr 0x9c48638 <col:23, col:71> 'int'
        (ImplicitCastExpr 0x9c48628 <col:23> 'int (*)(char *, unsigned int, const char *, __builtin_va_list)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9c48570 <col:23> 'int (char *, unsigned int, const char *, __builtin_va_list)' lvalue Function 0x9c483a0 '__builtin_vsnprintf' 'int (char *, unsigned int, const char *, __builtin_va_list)'))
        (ImplicitCastExpr 0x9c48668 <col:43> 'char *' <LValueToRValue>
          (DeclRefExpr 0x9c48588 <col:43> 'char *' lvalue ParmVar 0x9c47db0 '__out' 'char *'))
        (ImplicitCastExpr 0x9c48688 <col:50> 'unsigned int' <IntegralCast>
          (ImplicitCastExpr 0x9c48678 <col:50> 'int' <LValueToRValue>
            (DeclRefExpr 0x9c485a0 <col:50> 'const int' lvalue ParmVar 0x9c47e00 '__size' 'const int')))
        (ImplicitCastExpr 0x9c48698 <col:58> 'const char *' <LValueToRValue>
          (DeclRefExpr 0x9c485b8 <col:58> 'const char *' lvalue ParmVar 0x9c47e90 '__fmt' 'const char *'))
        (ImplicitCastExpr 0x9c486a8 <col:65> '__builtin_va_list':'char *' <LValueToRValue>
          (DeclRefExpr 0x9c485d0 <col:65> '__builtin_va_list':'char *' lvalue Var 0x9c480f0 '__args' '__builtin_va_list':'char *')))")
  (CallExpr 0x9c48868 <line:97:5, col:28> 'void'
    (ImplicitCastExpr 0x9c48858 <col:5> 'void (*)(__builtin_va_list &)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9c487e4 <col:5> 'void (__builtin_va_list &)' lvalue Function 0x9c48710 '__builtin_va_end' 'void (__builtin_va_list &)'))
    (DeclRefExpr 0x9c487fc <col:22> '__builtin_va_list':'char *' lvalue Var 0x9c480f0 '__args' '__builtin_va_list':'char *'))
  (CallExpr 0x9c488f8 <line:100:5, col:33> '__locale_t':'struct __locale_struct *'
    (ImplicitCastExpr 0x9c488e8 <col:5, col:16> 'typeof (uselocale) *' <FunctionToPointerDecay>
      (DeclRefExpr 0x9c488ac <col:5, col:16> 'typeof (uselocale)':'__locale_t (__locale_t) throw()' lvalue Function 0x9c47b20 '__uselocale' 'typeof (uselocale)':'__locale_t (__locale_t) throw()'))
    (ImplicitCastExpr 0x9c48918 <col:28> '__c_locale':'struct __locale_struct *' <LValueToRValue>
      (DeclRefExpr 0x9c488cc <col:28> '__c_locale':'struct __locale_struct *' lvalue Var 0x9c47fd0 '__old' '__c_locale':'struct __locale_struct *')))
  (ReturnStmt 0x9c48950 <line:108:5, col:12>
    (ImplicitCastExpr 0x9c48940 <col:12> 'int' <LValueToRValue>
      (DeclRefExpr 0x9c48924 <col:12> 'const int' lvalue Var 0x9c48360 '__ret' 'const int'))))


}
extern void __builtin_va_start(__builtin_va_list &, ...);
extern int __builtin_vsnprintf(char *, unsigned int, const char *, __builtin_va_list);
extern void __builtin_va_end(__builtin_va_list &);
namespace std {
    class ios_base;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_ios : public std::ios_base {
        class basic_ios;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef ctype<wchar_t> __ctype_type;
        typedef num_put<wchar_t, ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_put_type;
        typedef num_get<wchar_t, istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_get_type;
    protected:
    protected:
        basic_ostream<wchar_t, std::char_traits<wchar_t> > *_M_tie;
        mutable char_type _M_fill;
        mutable bool _M_fill_init;
        basic_streambuf<wchar_t, std::char_traits<wchar_t> > *_M_streambuf;
        const __ctype_type *_M_ctype;
        const __num_put_type *_M_num_put;
        const __num_get_type *_M_num_get;
    public:
    public:
        void *operator void *() const;
        bool operator!() const;
        iostate rdstate() const;
        void clear(iostate __state);
        void setstate(iostate __state);
        void _M_setstate(iostate __state);
        bool good() const;
        bool eof() const;
        bool fail() const;
        bool bad() const;
        iostate exceptions() const;
        void exceptions(iostate __except);
        basic_ios(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        virtual void ~basic_ios();
        basic_ostream<wchar_t, std::char_traits<wchar_t> > *tie() const;
        basic_ostream<wchar_t, std::char_traits<wchar_t> > *tie(basic_ostream<wchar_t, std::char_traits<wchar_t> > *__tiestr);
        basic_streambuf<wchar_t, std::char_traits<wchar_t> > *rdbuf() const;
        basic_streambuf<wchar_t, std::char_traits<wchar_t> > *rdbuf(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        std::basic_ios<wchar_t> &copyfmt(const std::basic_ios<wchar_t> &__rhs);
        char_type fill() const;
        char_type fill(char_type __ch);
        std::locale imbue(const std::locale &__loc);
        char narrow(char_type __c, char __dfault) const;
        char_type widen(char __c) const;
    protected:
    protected:
        basic_ios();
        void init(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        void _M_cache_locale(const std::locale &__loc);
        inline std::basic_ios<wchar_t> &operator=(const std::basic_ios<wchar_t> &);
        inline basic_ios(const std::basic_ios<wchar_t> &);
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_ios : public std::ios_base {
        class basic_ios;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef ctype<char> __ctype_type;
        typedef num_put<char, ostreambuf_iterator<char, std::char_traits<char> > > __num_put_type;
        typedef num_get<char, istreambuf_iterator<char, std::char_traits<char> > > __num_get_type;
    protected:
    protected:
        basic_ostream<char, std::char_traits<char> > *_M_tie;
        mutable char_type _M_fill;
        mutable bool _M_fill_init;
        basic_streambuf<char, std::char_traits<char> > *_M_streambuf;
        const __ctype_type *_M_ctype;
        const __num_put_type *_M_num_put;
        const __num_get_type *_M_num_get;
    public:
    public:
        void *operator void *() const;
        bool operator!() const;
        iostate rdstate() const;
        void clear(iostate __state);
        void setstate(iostate __state);
        void _M_setstate(iostate __state);
        bool good() const;
        bool eof() const;
        bool fail() const;
        bool bad() const;
        iostate exceptions() const;
        void exceptions(iostate __except);
        basic_ios(basic_streambuf<char, std::char_traits<char> > *__sb);
        virtual void ~basic_ios();
        basic_ostream<char, std::char_traits<char> > *tie() const;
        basic_ostream<char, std::char_traits<char> > *tie(basic_ostream<char, std::char_traits<char> > *__tiestr);
        basic_streambuf<char, std::char_traits<char> > *rdbuf() const;
        basic_streambuf<char, std::char_traits<char> > *rdbuf(basic_streambuf<char, std::char_traits<char> > *__sb);
        std::basic_ios<char> &copyfmt(const std::basic_ios<char> &__rhs);
        char_type fill() const;
        char_type fill(char_type __ch);
        std::locale imbue(const std::locale &__loc);
        char narrow(char_type __c, char __dfault) const;
        char_type widen(char __c) const;
    protected:
    protected:
        basic_ios();
        void init(basic_streambuf<char, std::char_traits<char> > *__sb);
        void _M_cache_locale(const std::locale &__loc);
        inline std::basic_ios<char> &operator=(const std::basic_ios<char> &);
        inline basic_ios(const std::basic_ios<char> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_ios;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_streambuf {
        class basic_streambuf;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
    protected:
    protected:
        char_type *_M_in_beg;
        char_type *_M_in_cur;
        char_type *_M_in_end;
        char_type *_M_out_beg;
        char_type *_M_out_cur;
        char_type *_M_out_end;
        std::locale _M_buf_locale;
    public:
    public:
        virtual void ~basic_streambuf();
        std::locale pubimbue(const std::locale &__loc);
        std::locale getloc() const;
        __streambuf_type *pubsetbuf(char_type *__s, streamsize __n);
        pos_type pubseekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        pos_type pubseekpos(pos_type __sp, ios_base::openmode __mode);
        int pubsync();
        streamsize in_avail();
        int_type snextc();
        int_type sbumpc();
        int_type sgetc();
        streamsize sgetn(char_type *__s, streamsize __n);
        int_type sputbackc(char_type __c);
        int_type sungetc();
        int_type sputc(char_type __c);
        streamsize sputn(const char_type *__s, streamsize __n);
    protected:
    protected:
        basic_streambuf();
        char_type *eback() const;
        char_type *gptr() const;
        char_type *egptr() const;
        void gbump(int __n);
        void setg(char_type *__gbeg, char_type *__gnext, char_type *__gend);
        char_type *pbase() const;
        char_type *pptr() const;
        char_type *epptr() const;
        void pbump(int __n);
        void setp(char_type *__pbeg, char_type *__pend);
        virtual void imbue(const std::locale &);
        virtual basic_streambuf<char_type, std::char_traits<wchar_t> > *setbuf(char_type *, streamsize);
        virtual pos_type seekoff(off_type, ios_base::seekdir, ios_base::openmode);
        virtual pos_type seekpos(pos_type, ios_base::openmode);
        virtual int sync();
        virtual streamsize showmanyc();
        virtual streamsize xsgetn(char_type *__s, streamsize __n);
        virtual int_type underflow();
        virtual int_type uflow();
        virtual int_type pbackfail(int_type);
        virtual streamsize xsputn(const char_type *__s, streamsize __n);
        virtual int_type overflow(int_type);
    public:
    public:
        void stossc();
        void __safe_gbump(streamsize __n);
        void __safe_pbump(streamsize __n);
    private:
    private:
        basic_streambuf(const __streambuf_type &__sb);
        __streambuf_type &operator=(const __streambuf_type &);
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_streambuf {
        class basic_streambuf;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
    protected:
    protected:
        char_type *_M_in_beg;
        char_type *_M_in_cur;
        char_type *_M_in_end;
        char_type *_M_out_beg;
        char_type *_M_out_cur;
        char_type *_M_out_end;
        std::locale _M_buf_locale;
    public:
    public:
        virtual void ~basic_streambuf();
        std::locale pubimbue(const std::locale &__loc);
        std::locale getloc() const;
        __streambuf_type *pubsetbuf(char_type *__s, streamsize __n);
        pos_type pubseekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        pos_type pubseekpos(pos_type __sp, ios_base::openmode __mode);
        int pubsync();
        streamsize in_avail();
        int_type snextc();
        int_type sbumpc();
        int_type sgetc();
        streamsize sgetn(char_type *__s, streamsize __n);
        int_type sputbackc(char_type __c);
        int_type sungetc();
        int_type sputc(char_type __c);
        streamsize sputn(const char_type *__s, streamsize __n);
    protected:
    protected:
        basic_streambuf();
        char_type *eback() const;
        char_type *gptr() const;
        char_type *egptr() const;
        void gbump(int __n);
        void setg(char_type *__gbeg, char_type *__gnext, char_type *__gend);
        char_type *pbase() const;
        char_type *pptr() const;
        char_type *epptr() const;
        void pbump(int __n);
        void setp(char_type *__pbeg, char_type *__pend);
        virtual void imbue(const std::locale &);
        virtual basic_streambuf<char_type, std::char_traits<char> > *setbuf(char_type *, streamsize);
        virtual pos_type seekoff(off_type, ios_base::seekdir, ios_base::openmode);
        virtual pos_type seekpos(pos_type, ios_base::openmode);
        virtual int sync();
        virtual streamsize showmanyc();
        virtual streamsize xsgetn(char_type *__s, streamsize __n);
        virtual int_type underflow();
        virtual int_type uflow();
        virtual int_type pbackfail(int_type);
        virtual streamsize xsputn(const char_type *__s, streamsize __n);
        virtual int_type overflow(int_type);
    public:
    public:
        void stossc();
        void __safe_gbump(streamsize __n);
        void __safe_pbump(streamsize __n);
    private:
    private:
        basic_streambuf(const __streambuf_type &__sb);
        __streambuf_type &operator=(const __streambuf_type &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_streambuf;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_istream : virtual public basic_ios<wchar_t, std::char_traits<wchar_t> > {
        class basic_istream;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef basic_streambuf<wchar_t, std::char_traits<wchar_t> > __streambuf_type;
        typedef basic_ios<wchar_t, std::char_traits<wchar_t> > __ios_type;
        typedef basic_istream<wchar_t, std::char_traits<wchar_t> > __istream_type;
        typedef num_get<wchar_t, istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_get_type;
        typedef ctype<wchar_t> __ctype_type;
    protected:
    protected:
        streamsize _M_gcount;
    public:
    public:
        basic_istream(__streambuf_type *__sb);
        virtual void ~basic_istream();
        class sentry {
            class sentry;
            bool _M_ok;
        public:
        public:
            typedef std::char_traits<wchar_t> traits_type;
            typedef basic_streambuf<wchar_t, std::char_traits<wchar_t> > __streambuf_type;
            typedef basic_istream<wchar_t, std::char_traits<wchar_t> > __istream_type;
            typedef typename __istream_type::__ctype_type __ctype_type;
            typedef typename char_traits<wchar_t>::int_type __int_type;
            sentry(basic_istream<wchar_t, std::char_traits<wchar_t> > &__is, bool __noskipws);
            bool operator _Bool() const;
        };
        ;
        __istream_type &operator>>(__istream_type &(*__pf)(__istream_type &));
        __istream_type &operator>>(__ios_type &(*__pf)(__ios_type &));
        __istream_type &operator>>(std::ios_base &(*__pf)(std::ios_base &));
        __istream_type &operator>>(bool &__n);
        __istream_type &operator>>(short &__n);
        __istream_type &operator>>(unsigned short &__n);
        __istream_type &operator>>(int &__n);
        __istream_type &operator>>(unsigned int &__n);
        __istream_type &operator>>(long &__n);
        __istream_type &operator>>(unsigned long &__n);
        __istream_type &operator>>(long long &__n);
        __istream_type &operator>>(unsigned long long &__n);
        __istream_type &operator>>(float &__f);
        __istream_type &operator>>(double &__f);
        __istream_type &operator>>(long double &__f);
        __istream_type &operator>>(void *&__p);
        __istream_type &operator>>(__streambuf_type *__sb);
        streamsize gcount() const;
        int_type get();
        __istream_type &get(char_type &__c);
        __istream_type &get(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &get(char_type *__s, streamsize __n);
        __istream_type &get(__streambuf_type &__sb, char_type __delim);
        __istream_type &get(__streambuf_type &__sb);
        __istream_type &getline(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &getline(char_type *__s, streamsize __n);
        __istream_type &ignore();
        __istream_type &ignore(streamsize __n);
        __istream_type &ignore(streamsize __n, int_type __delim);
        int_type peek();
        __istream_type &read(char_type *__s, streamsize __n);
        streamsize readsome(char_type *__s, streamsize __n);
        __istream_type &putback(char_type __c);
        __istream_type &unget();
        int sync();
        pos_type tellg();
        __istream_type &seekg(pos_type);
        __istream_type &seekg(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_istream();
        template <typename _ValueT = float> __istream_type &_M_extract(float &__v)template <typename _ValueT = unsigned long long> __istream_type &_M_extract(unsigned long long &__v)template <typename _ValueT = double> __istream_type &_M_extract(double &__v)template <typename _ValueT = void *> __istream_type &_M_extract(void *&__v)template <typename _ValueT = long> __istream_type &_M_extract(long &__v)template <typename _ValueT = unsigned short> __istream_type &_M_extract(unsigned short &__v)template <typename _ValueT = long double> __istream_type &_M_extract(long double &__v)template <typename _ValueT = unsigned long> __istream_type &_M_extract(unsigned long &__v)template <typename _ValueT = bool> __istream_type &_M_extract(bool &__v)template <typename _ValueT = unsigned int> __istream_type &_M_extract(unsigned int &__v)template <typename _ValueT = long long> __istream_type &_M_extract(long long &__v)template <typename _ValueT> __istream_type &_M_extract(_ValueT &__v);
        inline std::basic_istream<wchar_t> &operator=(const std::basic_istream<wchar_t> &);
        inline basic_istream(const std::basic_istream<wchar_t> &);
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_istream : virtual public basic_ios<char, std::char_traits<char> > {
        class basic_istream;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef basic_streambuf<char, std::char_traits<char> > __streambuf_type;
        typedef basic_ios<char, std::char_traits<char> > __ios_type;
        typedef basic_istream<char, std::char_traits<char> > __istream_type;
        typedef num_get<char, istreambuf_iterator<char, std::char_traits<char> > > __num_get_type;
        typedef ctype<char> __ctype_type;
    protected:
    protected:
        streamsize _M_gcount;
    public:
    public:
        basic_istream(__streambuf_type *__sb);
        virtual void ~basic_istream();
        class sentry {
            class sentry;
            bool _M_ok;
        public:
        public:
            typedef std::char_traits<char> traits_type;
            typedef basic_streambuf<char, std::char_traits<char> > __streambuf_type;
            typedef basic_istream<char, std::char_traits<char> > __istream_type;
            typedef typename __istream_type::__ctype_type __ctype_type;
            typedef typename char_traits<char>::int_type __int_type;
            sentry(basic_istream<char, std::char_traits<char> > &__is, bool __noskipws);
            bool operator _Bool() const;
        };
        ;
        __istream_type &operator>>(__istream_type &(*__pf)(__istream_type &));
        __istream_type &operator>>(__ios_type &(*__pf)(__ios_type &));
        __istream_type &operator>>(std::ios_base &(*__pf)(std::ios_base &));
        __istream_type &operator>>(bool &__n);
        __istream_type &operator>>(short &__n);
        __istream_type &operator>>(unsigned short &__n);
        __istream_type &operator>>(int &__n);
        __istream_type &operator>>(unsigned int &__n);
        __istream_type &operator>>(long &__n);
        __istream_type &operator>>(unsigned long &__n);
        __istream_type &operator>>(long long &__n);
        __istream_type &operator>>(unsigned long long &__n);
        __istream_type &operator>>(float &__f);
        __istream_type &operator>>(double &__f);
        __istream_type &operator>>(long double &__f);
        __istream_type &operator>>(void *&__p);
        __istream_type &operator>>(__streambuf_type *__sb);
        streamsize gcount() const;
        int_type get();
        __istream_type &get(char_type &__c);
        __istream_type &get(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &get(char_type *__s, streamsize __n);
        __istream_type &get(__streambuf_type &__sb, char_type __delim);
        __istream_type &get(__streambuf_type &__sb);
        __istream_type &getline(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &getline(char_type *__s, streamsize __n);
        __istream_type &ignore();
        __istream_type &ignore(streamsize __n);
        __istream_type &ignore(streamsize __n, int_type __delim);
        int_type peek();
        __istream_type &read(char_type *__s, streamsize __n);
        streamsize readsome(char_type *__s, streamsize __n);
        __istream_type &putback(char_type __c);
        __istream_type &unget();
        int sync();
        pos_type tellg();
        __istream_type &seekg(pos_type);
        __istream_type &seekg(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_istream();
        template <typename _ValueT = float> __istream_type &_M_extract(float &__v)template <typename _ValueT = unsigned long long> __istream_type &_M_extract(unsigned long long &__v)template <typename _ValueT = double> __istream_type &_M_extract(double &__v)template <typename _ValueT = void *> __istream_type &_M_extract(void *&__v)template <typename _ValueT = long> __istream_type &_M_extract(long &__v)template <typename _ValueT = unsigned short> __istream_type &_M_extract(unsigned short &__v)template <typename _ValueT = long double> __istream_type &_M_extract(long double &__v)template <typename _ValueT = unsigned long> __istream_type &_M_extract(unsigned long &__v)template <typename _ValueT = bool> __istream_type &_M_extract(bool &__v)template <typename _ValueT = unsigned int> __istream_type &_M_extract(unsigned int &__v)template <typename _ValueT = long long> __istream_type &_M_extract(long long &__v)template <typename _ValueT> __istream_type &_M_extract(_ValueT &__v);
        inline std::basic_istream<char> &operator=(const std::basic_istream<char> &);
        inline basic_istream(const std::basic_istream<char> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_istream;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_ostream : virtual public basic_ios<wchar_t, std::char_traits<wchar_t> > {
        class basic_ostream;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef basic_streambuf<wchar_t, std::char_traits<wchar_t> > __streambuf_type;
        typedef basic_ios<wchar_t, std::char_traits<wchar_t> > __ios_type;
        typedef basic_ostream<wchar_t, std::char_traits<wchar_t> > __ostream_type;
        typedef num_put<wchar_t, ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_put_type;
        typedef ctype<wchar_t> __ctype_type;
        basic_ostream(__streambuf_type *__sb);
        virtual void ~basic_ostream();
        class sentry {
            class sentry;
            bool _M_ok;
            basic_ostream<wchar_t, std::char_traits<wchar_t> > &_M_os;
        public:
        public:
            sentry(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__os);
            void ~sentry();
            bool operator _Bool() const;
        };
        ;
        __ostream_type &operator<<(__ostream_type &(*__pf)(__ostream_type &));
        __ostream_type &operator<<(__ios_type &(*__pf)(__ios_type &));
        __ostream_type &operator<<(std::ios_base &(*__pf)(std::ios_base &));
        __ostream_type &operator<<(long __n);
        __ostream_type &operator<<(unsigned long __n);
        __ostream_type &operator<<(bool __n);
        __ostream_type &operator<<(short __n);
        __ostream_type &operator<<(unsigned short __n);
        __ostream_type &operator<<(int __n);
        __ostream_type &operator<<(unsigned int __n);
        __ostream_type &operator<<(long long __n);
        __ostream_type &operator<<(unsigned long long __n);
        __ostream_type &operator<<(double __f);
        __ostream_type &operator<<(float __f);
        __ostream_type &operator<<(long double __f);
        __ostream_type &operator<<(const void *__p);
        __ostream_type &operator<<(__streambuf_type *__sb);
        __ostream_type &put(char_type __c);
        void _M_write(const char_type *__s, streamsize __n);
        __ostream_type &write(const char_type *__s, streamsize __n);
        __ostream_type &flush();
        pos_type tellp();
        __ostream_type &seekp(pos_type);
        __ostream_type &seekp(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_ostream();
        template <typename _ValueT = unsigned long long> __ostream_type &_M_insert(unsigned long long __v)template <typename _ValueT = double> __ostream_type &_M_insert(double __v)template <typename _ValueT = long> __ostream_type &_M_insert(long __v)template <typename _ValueT = long double> __ostream_type &_M_insert(long double __v)template <typename _ValueT = const void *> __ostream_type &_M_insert(const void *__v)template <typename _ValueT = unsigned long> __ostream_type &_M_insert(unsigned long __v)template <typename _ValueT = bool> __ostream_type &_M_insert(bool __v)template <typename _ValueT = long long> __ostream_type &_M_insert(long long __v)template <typename _ValueT> __ostream_type &_M_insert(_ValueT __v);
        inline std::basic_ostream<wchar_t> &operator=(const std::basic_ostream<wchar_t> &);
        inline basic_ostream(const std::basic_ostream<wchar_t> &);
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_ostream : virtual public basic_ios<char, std::char_traits<char> > {
        class basic_ostream;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef basic_streambuf<char, std::char_traits<char> > __streambuf_type;
        typedef basic_ios<char, std::char_traits<char> > __ios_type;
        typedef basic_ostream<char, std::char_traits<char> > __ostream_type;
        typedef num_put<char, ostreambuf_iterator<char, std::char_traits<char> > > __num_put_type;
        typedef ctype<char> __ctype_type;
        basic_ostream(__streambuf_type *__sb);
        virtual void ~basic_ostream();
        class sentry {
            class sentry;
            bool _M_ok;
            basic_ostream<char, std::char_traits<char> > &_M_os;
        public:
        public:
            sentry(basic_ostream<char, std::char_traits<char> > &__os);
            void ~sentry();
            bool operator _Bool() const;
        };
        ;
        __ostream_type &operator<<(__ostream_type &(*__pf)(__ostream_type &));
        __ostream_type &operator<<(__ios_type &(*__pf)(__ios_type &));
        __ostream_type &operator<<(std::ios_base &(*__pf)(std::ios_base &));
        __ostream_type &operator<<(long __n);
        __ostream_type &operator<<(unsigned long __n);
        __ostream_type &operator<<(bool __n);
        __ostream_type &operator<<(short __n);
        __ostream_type &operator<<(unsigned short __n);
        __ostream_type &operator<<(int __n);
        __ostream_type &operator<<(unsigned int __n);
        __ostream_type &operator<<(long long __n);
        __ostream_type &operator<<(unsigned long long __n);
        __ostream_type &operator<<(double __f);
        __ostream_type &operator<<(float __f);
        __ostream_type &operator<<(long double __f);
        __ostream_type &operator<<(const void *__p);
        __ostream_type &operator<<(__streambuf_type *__sb);
        __ostream_type &put(char_type __c);
        void _M_write(const char_type *__s, streamsize __n);
        __ostream_type &write(const char_type *__s, streamsize __n);
        __ostream_type &flush();
        pos_type tellp();
        __ostream_type &seekp(pos_type);
        __ostream_type &seekp(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_ostream();
        template <typename _ValueT = unsigned long long> __ostream_type &_M_insert(unsigned long long __v)template <typename _ValueT = double> __ostream_type &_M_insert(double __v)template <typename _ValueT = long> __ostream_type &_M_insert(long __v)template <typename _ValueT = long double> __ostream_type &_M_insert(long double __v)template <typename _ValueT = const void *> __ostream_type &_M_insert(const void *__v)template <typename _ValueT = unsigned long> __ostream_type &_M_insert(unsigned long __v)template <typename _ValueT = bool> __ostream_type &_M_insert(bool __v)template <typename _ValueT = long long> __ostream_type &_M_insert(long long __v)template <typename _ValueT> __ostream_type &_M_insert(_ValueT __v);
        inline std::basic_ostream<char> &operator=(const std::basic_ostream<char> &);
        inline basic_ostream(const std::basic_ostream<char> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_ostream;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_iostream : public basic_istream<wchar_t, std::char_traits<wchar_t> >, public basic_ostream<wchar_t, std::char_traits<wchar_t> > {
        class basic_iostream;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef basic_istream<wchar_t, std::char_traits<wchar_t> > __istream_type;
        typedef basic_ostream<wchar_t, std::char_traits<wchar_t> > __ostream_type;
        basic_iostream(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        virtual void ~basic_iostream();
    protected:
    protected:
        basic_iostream();
        inline std::basic_iostream<wchar_t> &operator=(const std::basic_iostream<wchar_t> &);
        inline basic_iostream(const std::basic_iostream<wchar_t> &);
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_iostream : public basic_istream<char, std::char_traits<char> >, public basic_ostream<char, std::char_traits<char> > {
        class basic_iostream;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef basic_istream<char, std::char_traits<char> > __istream_type;
        typedef basic_ostream<char, std::char_traits<char> > __ostream_type;
        basic_iostream(basic_streambuf<char, std::char_traits<char> > *__sb);
        virtual void ~basic_iostream();
    protected:
    protected:
        basic_iostream();
        inline std::basic_iostream<char> &operator=(const std::basic_iostream<char> &);
        inline basic_iostream(const std::basic_iostream<char> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_iostream;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> class basic_stringbuf : public basic_streambuf<char, std::char_traits<char> > {
        class basic_stringbuf;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        typedef basic_string<char_type, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef typename __string_type::size_type __size_type;
    protected:
    protected:
        ios_base::openmode _M_mode;
        __string_type _M_string;
    public:
    public:
        basic_stringbuf(ios_base::openmode __mode);
        basic_stringbuf(const __string_type &__str, ios_base::openmode __mode);
        __string_type str() const;
        void str(const __string_type &__s);
    protected:
    protected:
        void _M_stringbuf_init(ios_base::openmode __mode);
        virtual streamsize showmanyc();
        virtual int_type underflow();
        virtual int_type pbackfail(int_type __c);
        virtual int_type overflow(int_type __c);
        virtual __streambuf_type *setbuf(char_type *__s, streamsize __n);
        virtual pos_type seekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        virtual pos_type seekpos(pos_type __sp, ios_base::openmode __mode);
        void _M_sync(char_type *__base, __size_type __i, __size_type __o);
        void _M_update_egptr();
        void _M_pbump(char_type *__pbeg, char_type *__pend, off_type __off);
        inline std::basic_stringbuf<char> &operator=(const std::basic_stringbuf<char> &);
        inline void ~basic_stringbuf();
        inline basic_stringbuf(const std::basic_stringbuf<char> &);
    }
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> class basic_stringbuf : public basic_streambuf<wchar_t, std::char_traits<wchar_t> > {
        class basic_stringbuf;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        typedef basic_string<char_type, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef typename __string_type::size_type __size_type;
    protected:
    protected:
        ios_base::openmode _M_mode;
        __string_type _M_string;
    public:
    public:
        basic_stringbuf(ios_base::openmode __mode);
        basic_stringbuf(const __string_type &__str, ios_base::openmode __mode);
        __string_type str() const;
        void str(const __string_type &__s);
    protected:
    protected:
        void _M_stringbuf_init(ios_base::openmode __mode);
        virtual streamsize showmanyc();
        virtual int_type underflow();
        virtual int_type pbackfail(int_type __c);
        virtual int_type overflow(int_type __c);
        virtual __streambuf_type *setbuf(char_type *__s, streamsize __n);
        virtual pos_type seekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        virtual pos_type seekpos(pos_type __sp, ios_base::openmode __mode);
        void _M_sync(char_type *__base, __size_type __i, __size_type __o);
        void _M_update_egptr();
        void _M_pbump(char_type *__pbeg, char_type *__pend, off_type __off);
        inline std::basic_stringbuf<wchar_t> &operator=(const std::basic_stringbuf<wchar_t> &);
        inline void ~basic_stringbuf();
        inline basic_stringbuf(const std::basic_stringbuf<wchar_t> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>, typename _Alloc = allocator<_CharT>> class basic_stringbuf;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> class basic_istringstream : public basic_istream<char, std::char_traits<char> > {
        class basic_istringstream;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<char, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef basic_stringbuf<char, std::char_traits<char>, std::allocator<char> > __stringbuf_type;
        typedef basic_istream<char_type, traits_type> __istream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_istringstream(ios_base::openmode __mode);
        basic_istringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_istringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_istringstream<char> &operator=(const std::basic_istringstream<char> &);
    }
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> class basic_istringstream : public basic_istream<wchar_t, std::char_traits<wchar_t> > {
        class basic_istringstream;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __stringbuf_type;
        typedef basic_istream<char_type, traits_type> __istream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_istringstream(ios_base::openmode __mode);
        basic_istringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_istringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_istringstream<wchar_t> &operator=(const std::basic_istringstream<wchar_t> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>, typename _Alloc = allocator<_CharT>> class basic_istringstream;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> class basic_ostringstream : public basic_ostream<char, std::char_traits<char> > {
        class basic_ostringstream;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<char, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef basic_stringbuf<char, std::char_traits<char>, std::allocator<char> > __stringbuf_type;
        typedef basic_ostream<char_type, traits_type> __ostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_ostringstream(ios_base::openmode __mode);
        basic_ostringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_ostringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_ostringstream<char> &operator=(const std::basic_ostringstream<char> &);
    }
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> class basic_ostringstream : public basic_ostream<wchar_t, std::char_traits<wchar_t> > {
        class basic_ostringstream;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __stringbuf_type;
        typedef basic_ostream<char_type, traits_type> __ostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_ostringstream(ios_base::openmode __mode);
        basic_ostringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_ostringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_ostringstream<wchar_t> &operator=(const std::basic_ostringstream<wchar_t> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>, typename _Alloc = allocator<_CharT>> class basic_ostringstream;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> class basic_stringstream : public basic_iostream<char, std::char_traits<char> > {
        class basic_stringstream;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<char, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef basic_stringbuf<char, std::char_traits<char>, std::allocator<char> > __stringbuf_type;
        typedef basic_iostream<char_type, traits_type> __iostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_stringstream(ios_base::openmode __m);
        basic_stringstream(const __string_type &__str, ios_base::openmode __m);
        void ~basic_stringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_stringstream<char> &operator=(const std::basic_stringstream<char> &);
        inline basic_stringstream(const std::basic_stringstream<char> &);
    }
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> class basic_stringstream : public basic_iostream<wchar_t, std::char_traits<wchar_t> > {
        class basic_stringstream;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __stringbuf_type;
        typedef basic_iostream<char_type, traits_type> __iostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_stringstream(ios_base::openmode __m);
        basic_stringstream(const __string_type &__str, ios_base::openmode __m);
        void ~basic_stringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_stringstream<wchar_t> &operator=(const std::basic_stringstream<wchar_t> &);
        inline basic_stringstream(const std::basic_stringstream<wchar_t> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>, typename _Alloc = allocator<_CharT>> class basic_stringstream;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_filebuf
template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_filebuf
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_filebuf;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_ifstream
template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_ifstream
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_ifstream;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_ofstream
template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_ofstream
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_ofstream;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_fstream
template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_fstream
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_fstream;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class istreambuf_iterator
template <typename _CharT = char, typename _Traits = std::char_traits<char>> class istreambuf_iterator
template <typename _CharT, typename _Traits = char_traits<_CharT>> class istreambuf_iterator;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class ostreambuf_iterator
template <typename _CharT = char, typename _Traits = std::char_traits<char>> class ostreambuf_iterator
template <typename _CharT, typename _Traits = char_traits<_CharT>> class ostreambuf_iterator;
    typedef basic_ios<char> ios;
    typedef basic_streambuf<char> streambuf;
    typedef basic_istream<char> istream;
    typedef basic_ostream<char> ostream;
    typedef basic_iostream<char> iostream;
    typedef basic_stringbuf<char> stringbuf;
    typedef basic_istringstream<char> istringstream;
    typedef basic_ostringstream<char> ostringstream;
    typedef basic_stringstream<char> stringstream;
    typedef basic_filebuf<char> filebuf;
    typedef basic_ifstream<char> ifstream;
    typedef basic_ofstream<char> ofstream;
    typedef basic_fstream<char> fstream;
    typedef basic_ios<wchar_t> wios;
    typedef basic_streambuf<wchar_t> wstreambuf;
    typedef basic_istream<wchar_t> wistream;
    typedef basic_ostream<wchar_t> wostream;
    typedef basic_iostream<wchar_t> wiostream;
    typedef basic_stringbuf<wchar_t> wstringbuf;
    typedef basic_istringstream<wchar_t> wistringstream;
    typedef basic_ostringstream<wchar_t> wostringstream;
    typedef basic_stringstream<wchar_t> wstringstream;
    typedef basic_filebuf<wchar_t> wfilebuf;
    typedef basic_ifstream<wchar_t> wifstream;
    typedef basic_ofstream<wchar_t> wofstream;
    typedef basic_fstream<wchar_t> wfstream;
}
extern "C" {
    enum  {
        _ISupper = (ImplicitCastExpr 0x9c5aa48 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0x9c542f0 <col:23, col:77> 'int'
    (ConditionalOperator 0x9c542d0 <col:24, col:76> 'int'
      (BinaryOperator 0x9c54138 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0x9c54108 <col:24, col:28> 'int'
          (IntegerLiteral 0x9c540f0 <line:50:22> 'int' 0))
        (IntegerLiteral 0x9c54120 <line:45:32> 'int' 8))
      (ParenExpr 0x9c541f8 <col:36, col:54> 'int'
        (BinaryOperator 0x9c541e0 <col:37, col:53> 'int' '<<'
          (ParenExpr 0x9c541b0 <col:37, col:48> 'int'
            (BinaryOperator 0x9c54198 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0x9c54150 <col:38> 'int' 1)
              (ParenExpr 0x9c54180 <col:43, col:47> 'int'
                (IntegerLiteral 0x9c54168 <line:50:22> 'int' 0))))
          (IntegerLiteral 0x9c541c8 <line:45:53> 'int' 8)))
      (ParenExpr 0x9c542b8 <col:58, col:76> 'int'
        (BinaryOperator 0x9c542a0 <col:59, col:75> 'int' '>>'
          (ParenExpr 0x9c54270 <col:59, col:70> 'int'
            (BinaryOperator 0x9c54258 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0x9c54210 <col:60> 'int' 1)
              (ParenExpr 0x9c54240 <col:65, col:69> 'int'
                (IntegerLiteral 0x9c54228 <line:50:22> 'int' 0))))
          (IntegerLiteral 0x9c54288 <line:45:75> 'int' 8))))))
,
        _ISlower = (ImplicitCastExpr 0x9c5aa58 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0x9c592d0 <col:23, col:77> 'int'
    (ConditionalOperator 0x9c592b0 <col:24, col:76> 'int'
      (BinaryOperator 0x9c54390 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0x9c54360 <col:24, col:28> 'int'
          (IntegerLiteral 0x9c54348 <line:51:22> 'int' 1))
        (IntegerLiteral 0x9c54378 <line:45:32> 'int' 8))
      (ParenExpr 0x9c54450 <col:36, col:54> 'int'
        (BinaryOperator 0x9c54438 <col:37, col:53> 'int' '<<'
          (ParenExpr 0x9c54408 <col:37, col:48> 'int'
            (BinaryOperator 0x9c543f0 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0x9c543a8 <col:38> 'int' 1)
              (ParenExpr 0x9c543d8 <col:43, col:47> 'int'
                (IntegerLiteral 0x9c543c0 <line:51:22> 'int' 1))))
          (IntegerLiteral 0x9c54420 <line:45:53> 'int' 8)))
      (ParenExpr 0x9c59298 <col:58, col:76> 'int'
        (BinaryOperator 0x9c544f8 <col:59, col:75> 'int' '>>'
          (ParenExpr 0x9c544c8 <col:59, col:70> 'int'
            (BinaryOperator 0x9c544b0 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0x9c54468 <col:60> 'int' 1)
              (ParenExpr 0x9c54498 <col:65, col:69> 'int'
                (IntegerLiteral 0x9c54480 <line:51:22> 'int' 1))))
          (IntegerLiteral 0x9c544e0 <line:45:75> 'int' 8))))))
,
        _ISalpha = (ImplicitCastExpr 0x9c5aa68 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0x9c59528 <col:23, col:77> 'int'
    (ConditionalOperator 0x9c59508 <col:24, col:76> 'int'
      (BinaryOperator 0x9c59370 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0x9c59340 <col:24, col:28> 'int'
          (IntegerLiteral 0x9c59328 <line:52:22> 'int' 2))
        (IntegerLiteral 0x9c59358 <line:45:32> 'int' 8))
      (ParenExpr 0x9c59430 <col:36, col:54> 'int'
        (BinaryOperator 0x9c59418 <col:37, col:53> 'int' '<<'
          (ParenExpr 0x9c593e8 <col:37, col:48> 'int'
            (BinaryOperator 0x9c593d0 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0x9c59388 <col:38> 'int' 1)
              (ParenExpr 0x9c593b8 <col:43, col:47> 'int'
                (IntegerLiteral 0x9c593a0 <line:52:22> 'int' 2))))
          (IntegerLiteral 0x9c59400 <line:45:53> 'int' 8)))
      (ParenExpr 0x9c594f0 <col:58, col:76> 'int'
        (BinaryOperator 0x9c594d8 <col:59, col:75> 'int' '>>'
          (ParenExpr 0x9c594a8 <col:59, col:70> 'int'
            (BinaryOperator 0x9c59490 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0x9c59448 <col:60> 'int' 1)
              (ParenExpr 0x9c59478 <col:65, col:69> 'int'
                (IntegerLiteral 0x9c59460 <line:52:22> 'int' 2))))
          (IntegerLiteral 0x9c594c0 <line:45:75> 'int' 8))))))
,
        _ISdigit = (ImplicitCastExpr 0x9c5aa78 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0x9c59778 <col:23, col:77> 'int'
    (ConditionalOperator 0x9c59758 <col:24, col:76> 'int'
      (BinaryOperator 0x9c595c0 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0x9c59590 <col:24, col:28> 'int'
          (IntegerLiteral 0x9c59578 <line:53:22> 'int' 3))
        (IntegerLiteral 0x9c595a8 <line:45:32> 'int' 8))
      (ParenExpr 0x9c59680 <col:36, col:54> 'int'
        (BinaryOperator 0x9c59668 <col:37, col:53> 'int' '<<'
          (ParenExpr 0x9c59638 <col:37, col:48> 'int'
            (BinaryOperator 0x9c59620 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0x9c595d8 <col:38> 'int' 1)
              (ParenExpr 0x9c59608 <col:43, col:47> 'int'
                (IntegerLiteral 0x9c595f0 <line:53:22> 'int' 3))))
          (IntegerLiteral 0x9c59650 <line:45:53> 'int' 8)))
      (ParenExpr 0x9c59740 <col:58, col:76> 'int'
        (BinaryOperator 0x9c59728 <col:59, col:75> 'int' '>>'
          (ParenExpr 0x9c596f8 <col:59, col:70> 'int'
            (BinaryOperator 0x9c596e0 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0x9c59698 <col:60> 'int' 1)
              (ParenExpr 0x9c596c8 <col:65, col:69> 'int'
                (IntegerLiteral 0x9c596b0 <line:53:22> 'int' 3))))
          (IntegerLiteral 0x9c59710 <line:45:75> 'int' 8))))))
,
        _ISxdigit = (ImplicitCastExpr 0x9c5aa88 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0x9c599c8 <col:23, col:77> 'int'
    (ConditionalOperator 0x9c599a8 <col:24, col:76> 'int'
      (BinaryOperator 0x9c59810 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0x9c597e0 <col:24, col:28> 'int'
          (IntegerLiteral 0x9c597c8 <line:54:23> 'int' 4))
        (IntegerLiteral 0x9c597f8 <line:45:32> 'int' 8))
      (ParenExpr 0x9c598d0 <col:36, col:54> 'int'
        (BinaryOperator 0x9c598b8 <col:37, col:53> 'int' '<<'
          (ParenExpr 0x9c59888 <col:37, col:48> 'int'
            (BinaryOperator 0x9c59870 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0x9c59828 <col:38> 'int' 1)
              (ParenExpr 0x9c59858 <col:43, col:47> 'int'
                (IntegerLiteral 0x9c59840 <line:54:23> 'int' 4))))
          (IntegerLiteral 0x9c598a0 <line:45:53> 'int' 8)))
      (ParenExpr 0x9c59990 <col:58, col:76> 'int'
        (BinaryOperator 0x9c59978 <col:59, col:75> 'int' '>>'
          (ParenExpr 0x9c59948 <col:59, col:70> 'int'
            (BinaryOperator 0x9c59930 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0x9c598e8 <col:60> 'int' 1)
              (ParenExpr 0x9c59918 <col:65, col:69> 'int'
                (IntegerLiteral 0x9c59900 <line:54:23> 'int' 4))))
          (IntegerLiteral 0x9c59960 <line:45:75> 'int' 8))))))
,
        _ISspace = (ImplicitCastExpr 0x9c5aa98 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0x9c59c18 <col:23, col:77> 'int'
    (ConditionalOperator 0x9c59bf8 <col:24, col:76> 'int'
      (BinaryOperator 0x9c59a60 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0x9c59a30 <col:24, col:28> 'int'
          (IntegerLiteral 0x9c59a18 <line:55:22> 'int' 5))
        (IntegerLiteral 0x9c59a48 <line:45:32> 'int' 8))
      (ParenExpr 0x9c59b20 <col:36, col:54> 'int'
        (BinaryOperator 0x9c59b08 <col:37, col:53> 'int' '<<'
          (ParenExpr 0x9c59ad8 <col:37, col:48> 'int'
            (BinaryOperator 0x9c59ac0 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0x9c59a78 <col:38> 'int' 1)
              (ParenExpr 0x9c59aa8 <col:43, col:47> 'int'
                (IntegerLiteral 0x9c59a90 <line:55:22> 'int' 5))))
          (IntegerLiteral 0x9c59af0 <line:45:53> 'int' 8)))
      (ParenExpr 0x9c59be0 <col:58, col:76> 'int'
        (BinaryOperator 0x9c59bc8 <col:59, col:75> 'int' '>>'
          (ParenExpr 0x9c59b98 <col:59, col:70> 'int'
            (BinaryOperator 0x9c59b80 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0x9c59b38 <col:60> 'int' 1)
              (ParenExpr 0x9c59b68 <col:65, col:69> 'int'
                (IntegerLiteral 0x9c59b50 <line:55:22> 'int' 5))))
          (IntegerLiteral 0x9c59bb0 <line:45:75> 'int' 8))))))
,
        _ISprint = (ImplicitCastExpr 0x9c5aaa8 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0x9c59e68 <col:23, col:77> 'int'
    (ConditionalOperator 0x9c59e48 <col:24, col:76> 'int'
      (BinaryOperator 0x9c59cb0 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0x9c59c80 <col:24, col:28> 'int'
          (IntegerLiteral 0x9c59c68 <line:56:22> 'int' 6))
        (IntegerLiteral 0x9c59c98 <line:45:32> 'int' 8))
      (ParenExpr 0x9c59d70 <col:36, col:54> 'int'
        (BinaryOperator 0x9c59d58 <col:37, col:53> 'int' '<<'
          (ParenExpr 0x9c59d28 <col:37, col:48> 'int'
            (BinaryOperator 0x9c59d10 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0x9c59cc8 <col:38> 'int' 1)
              (ParenExpr 0x9c59cf8 <col:43, col:47> 'int'
                (IntegerLiteral 0x9c59ce0 <line:56:22> 'int' 6))))
          (IntegerLiteral 0x9c59d40 <line:45:53> 'int' 8)))
      (ParenExpr 0x9c59e30 <col:58, col:76> 'int'
        (BinaryOperator 0x9c59e18 <col:59, col:75> 'int' '>>'
          (ParenExpr 0x9c59de8 <col:59, col:70> 'int'
            (BinaryOperator 0x9c59dd0 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0x9c59d88 <col:60> 'int' 1)
              (ParenExpr 0x9c59db8 <col:65, col:69> 'int'
                (IntegerLiteral 0x9c59da0 <line:56:22> 'int' 6))))
          (IntegerLiteral 0x9c59e00 <line:45:75> 'int' 8))))))
,
        _ISgraph = (ImplicitCastExpr 0x9c5aab8 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0x9c5a0b8 <col:23, col:77> 'int'
    (ConditionalOperator 0x9c5a098 <col:24, col:76> 'int'
      (BinaryOperator 0x9c59f00 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0x9c59ed0 <col:24, col:28> 'int'
          (IntegerLiteral 0x9c59eb8 <line:57:22> 'int' 7))
        (IntegerLiteral 0x9c59ee8 <line:45:32> 'int' 8))
      (ParenExpr 0x9c59fc0 <col:36, col:54> 'int'
        (BinaryOperator 0x9c59fa8 <col:37, col:53> 'int' '<<'
          (ParenExpr 0x9c59f78 <col:37, col:48> 'int'
            (BinaryOperator 0x9c59f60 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0x9c59f18 <col:38> 'int' 1)
              (ParenExpr 0x9c59f48 <col:43, col:47> 'int'
                (IntegerLiteral 0x9c59f30 <line:57:22> 'int' 7))))
          (IntegerLiteral 0x9c59f90 <line:45:53> 'int' 8)))
      (ParenExpr 0x9c5a080 <col:58, col:76> 'int'
        (BinaryOperator 0x9c5a068 <col:59, col:75> 'int' '>>'
          (ParenExpr 0x9c5a038 <col:59, col:70> 'int'
            (BinaryOperator 0x9c5a020 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0x9c59fd8 <col:60> 'int' 1)
              (ParenExpr 0x9c5a008 <col:65, col:69> 'int'
                (IntegerLiteral 0x9c59ff0 <line:57:22> 'int' 7))))
          (IntegerLiteral 0x9c5a050 <line:45:75> 'int' 8))))))
,
        _ISblank = (ImplicitCastExpr 0x9c5aac8 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0x9c5a308 <col:23, col:77> 'int'
    (ConditionalOperator 0x9c5a2e8 <col:24, col:76> 'int'
      (BinaryOperator 0x9c5a150 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0x9c5a120 <col:24, col:28> 'int'
          (IntegerLiteral 0x9c5a108 <line:58:22> 'int' 8))
        (IntegerLiteral 0x9c5a138 <line:45:32> 'int' 8))
      (ParenExpr 0x9c5a210 <col:36, col:54> 'int'
        (BinaryOperator 0x9c5a1f8 <col:37, col:53> 'int' '<<'
          (ParenExpr 0x9c5a1c8 <col:37, col:48> 'int'
            (BinaryOperator 0x9c5a1b0 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0x9c5a168 <col:38> 'int' 1)
              (ParenExpr 0x9c5a198 <col:43, col:47> 'int'
                (IntegerLiteral 0x9c5a180 <line:58:22> 'int' 8))))
          (IntegerLiteral 0x9c5a1e0 <line:45:53> 'int' 8)))
      (ParenExpr 0x9c5a2d0 <col:58, col:76> 'int'
        (BinaryOperator 0x9c5a2b8 <col:59, col:75> 'int' '>>'
          (ParenExpr 0x9c5a288 <col:59, col:70> 'int'
            (BinaryOperator 0x9c5a270 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0x9c5a228 <col:60> 'int' 1)
              (ParenExpr 0x9c5a258 <col:65, col:69> 'int'
                (IntegerLiteral 0x9c5a240 <line:58:22> 'int' 8))))
          (IntegerLiteral 0x9c5a2a0 <line:45:75> 'int' 8))))))
,
        _IScntrl = (ImplicitCastExpr 0x9c5aad8 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0x9c5a558 <col:23, col:77> 'int'
    (ConditionalOperator 0x9c5a538 <col:24, col:76> 'int'
      (BinaryOperator 0x9c5a3a0 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0x9c5a370 <col:24, col:28> 'int'
          (IntegerLiteral 0x9c5a358 <line:59:22> 'int' 9))
        (IntegerLiteral 0x9c5a388 <line:45:32> 'int' 8))
      (ParenExpr 0x9c5a460 <col:36, col:54> 'int'
        (BinaryOperator 0x9c5a448 <col:37, col:53> 'int' '<<'
          (ParenExpr 0x9c5a418 <col:37, col:48> 'int'
            (BinaryOperator 0x9c5a400 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0x9c5a3b8 <col:38> 'int' 1)
              (ParenExpr 0x9c5a3e8 <col:43, col:47> 'int'
                (IntegerLiteral 0x9c5a3d0 <line:59:22> 'int' 9))))
          (IntegerLiteral 0x9c5a430 <line:45:53> 'int' 8)))
      (ParenExpr 0x9c5a520 <col:58, col:76> 'int'
        (BinaryOperator 0x9c5a508 <col:59, col:75> 'int' '>>'
          (ParenExpr 0x9c5a4d8 <col:59, col:70> 'int'
            (BinaryOperator 0x9c5a4c0 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0x9c5a478 <col:60> 'int' 1)
              (ParenExpr 0x9c5a4a8 <col:65, col:69> 'int'
                (IntegerLiteral 0x9c5a490 <line:59:22> 'int' 9))))
          (IntegerLiteral 0x9c5a4f0 <line:45:75> 'int' 8))))))
,
        _ISpunct = (ImplicitCastExpr 0x9c5aae8 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0x9c5a7a8 <col:23, col:77> 'int'
    (ConditionalOperator 0x9c5a788 <col:24, col:76> 'int'
      (BinaryOperator 0x9c5a5f0 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0x9c5a5c0 <col:24, col:28> 'int'
          (IntegerLiteral 0x9c5a5a8 <line:60:22> 'int' 10))
        (IntegerLiteral 0x9c5a5d8 <line:45:32> 'int' 8))
      (ParenExpr 0x9c5a6b0 <col:36, col:54> 'int'
        (BinaryOperator 0x9c5a698 <col:37, col:53> 'int' '<<'
          (ParenExpr 0x9c5a668 <col:37, col:48> 'int'
            (BinaryOperator 0x9c5a650 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0x9c5a608 <col:38> 'int' 1)
              (ParenExpr 0x9c5a638 <col:43, col:47> 'int'
                (IntegerLiteral 0x9c5a620 <line:60:22> 'int' 10))))
          (IntegerLiteral 0x9c5a680 <line:45:53> 'int' 8)))
      (ParenExpr 0x9c5a770 <col:58, col:76> 'int'
        (BinaryOperator 0x9c5a758 <col:59, col:75> 'int' '>>'
          (ParenExpr 0x9c5a728 <col:59, col:70> 'int'
            (BinaryOperator 0x9c5a710 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0x9c5a6c8 <col:60> 'int' 1)
              (ParenExpr 0x9c5a6f8 <col:65, col:69> 'int'
                (IntegerLiteral 0x9c5a6e0 <line:60:22> 'int' 10))))
          (IntegerLiteral 0x9c5a740 <line:45:75> 'int' 8))))))
,
        _ISalnum = (ImplicitCastExpr 0x9c5aaf8 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0x9c5a9f8 <col:23, col:77> 'int'
    (ConditionalOperator 0x9c5a9d8 <col:24, col:76> 'int'
      (BinaryOperator 0x9c5a840 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0x9c5a810 <col:24, col:28> 'int'
          (IntegerLiteral 0x9c5a7f8 <line:61:22> 'int' 11))
        (IntegerLiteral 0x9c5a828 <line:45:32> 'int' 8))
      (ParenExpr 0x9c5a900 <col:36, col:54> 'int'
        (BinaryOperator 0x9c5a8e8 <col:37, col:53> 'int' '<<'
          (ParenExpr 0x9c5a8b8 <col:37, col:48> 'int'
            (BinaryOperator 0x9c5a8a0 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0x9c5a858 <col:38> 'int' 1)
              (ParenExpr 0x9c5a888 <col:43, col:47> 'int'
                (IntegerLiteral 0x9c5a870 <line:61:22> 'int' 11))))
          (IntegerLiteral 0x9c5a8d0 <line:45:53> 'int' 8)))
      (ParenExpr 0x9c5a9c0 <col:58, col:76> 'int'
        (BinaryOperator 0x9c5a9a8 <col:59, col:75> 'int' '>>'
          (ParenExpr 0x9c5a978 <col:59, col:70> 'int'
            (BinaryOperator 0x9c5a960 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0x9c5a918 <col:60> 'int' 1)
              (ParenExpr 0x9c5a948 <col:65, col:69> 'int'
                (IntegerLiteral 0x9c5a930 <line:61:22> 'int' 11))))
          (IntegerLiteral 0x9c5a990 <line:45:75> 'int' 8))))))

    };
    extern const unsigned short **__ctype_b_loc() throw();
    extern const __int32_t **__ctype_tolower_loc() throw();
    extern const __int32_t **__ctype_toupper_loc() throw();
    extern int isalnum(int) throw();
    extern int isalpha(int) throw();
    extern int iscntrl(int) throw();
    extern int isdigit(int) throw();
    extern int islower(int) throw();
    extern int isgraph(int) throw();
    extern int isprint(int) throw();
    extern int ispunct(int) throw();
    extern int isspace(int) throw();
    extern int isupper(int) throw();
    extern int isxdigit(int) throw();
    extern int tolower(int __c) throw();
    extern int toupper(int __c) throw();
    extern int isblank(int) throw();
    extern int isctype(int __c, int __mask) throw();
    extern int isascii(int __c) throw();
    extern int toascii(int __c) throw();
    extern int _toupper(int) throw();
    extern int _tolower(int) throw();
    extern int isalnum_l(int, __locale_t) throw();
    extern int isalpha_l(int, __locale_t) throw();
    extern int iscntrl_l(int, __locale_t) throw();
    extern int isdigit_l(int, __locale_t) throw();
    extern int islower_l(int, __locale_t) throw();
    extern int isgraph_l(int, __locale_t) throw();
    extern int isprint_l(int, __locale_t) throw();
    extern int ispunct_l(int, __locale_t) throw();
    extern int isspace_l(int, __locale_t) throw();
    extern int isupper_l(int, __locale_t) throw();
    extern int isxdigit_l(int, __locale_t) throw();
    extern int isblank_l(int, __locale_t) throw();
    extern int __tolower_l(int __c, __locale_t __l) throw();
    extern int tolower_l(int __c, __locale_t __l) throw();
    extern int __toupper_l(int __c, __locale_t __l) throw();
    extern int toupper_l(int __c, __locale_t __l) throw();
}
namespace std {
    using ::isalnum;
    ;
    using ::isalpha;
    ;
    using ::iscntrl;
    ;
    using ::isdigit;
    ;
    using ::isgraph;
    ;
    using ::islower;
    ;
    using ::isprint;
    ;
    using ::ispunct;
    ;
    using ::isspace;
    ;
    using ::isupper;
    ;
    using ::isxdigit;
    ;
    using ::tolower;
    ;
    using ::toupper;
    ;
}
namespace std {
    class locale;
    template <typename _Facet = std::collate<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_get<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_put<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::numpunct<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::numpunct<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_get<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::ctype<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::collate<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_put<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::ctype<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet> bool has_facet(const std::locale &) throw();
    template <typename _Facet = std::collate<wchar_t>> const std::collate<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_get<wchar_t>> const std::num_get<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_put<wchar_t>> const std::num_put<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::numpunct<char>> const std::numpunct<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::numpunct<wchar_t>> const std::numpunct<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_get<char>> const std::num_get<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::ctype<char>> const std::ctype<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::collate<char>> const std::collate<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_put<char>> const std::num_put<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::ctype<wchar_t>> const std::ctype<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet> const _Facet &use_facet(const std::locale &);
    template <typename _CharT> bool isspace(_CharT, const std::locale &);
    template <typename _CharT> bool isprint(_CharT, const std::locale &);
    template <typename _CharT> bool iscntrl(_CharT, const std::locale &);
    template <typename _CharT> bool isupper(_CharT, const std::locale &);
    template <typename _CharT> bool islower(_CharT, const std::locale &);
    template <typename _CharT> bool isalpha(_CharT, const std::locale &);
    template <typename _CharT> bool isdigit(_CharT, const std::locale &);
    template <typename _CharT> bool ispunct(_CharT, const std::locale &);
    template <typename _CharT> bool isxdigit(_CharT, const std::locale &);
    template <typename _CharT> bool isalnum(_CharT, const std::locale &);
    template <typename _CharT> bool isgraph(_CharT, const std::locale &);
    template <typename _CharT> _CharT toupper(_CharT, const std::locale &);
    template <typename _CharT> _CharT tolower(_CharT, const std::locale &);
    class ctype_base;
    template <typename _CharT = char> class ctype : public locale::facet, public std::ctype_base {
        class ctype;
    public:
    public:
        typedef char char_type;
    protected:
    protected:
        __c_locale _M_c_locale_ctype;
        bool _M_del;
        __to_type _M_toupper;
        __to_type _M_tolower;
        const mask *_M_table;
        mutable char _M_widen_ok;
        mutable char _M_widen[256];
        mutable char _M_narrow[256];
        mutable char _M_narrow_ok;
    public:
    public:
        static locale::id id;
        static const size_t table_size = (ImplicitCastExpr 0x9e84440 </usr/include/c++/4.6/bits/locale_facets.h:698:45, col:78> 'const size_t':'const unsigned int' <IntegralCast>
  (BinaryOperator 0x9e84428 <col:45, col:78> 'int' '+'
    (IntegerLiteral 0x9e84398 <col:45> 'int' 1)
    (ImplicitCastExpr 0x9e84418 <col:49, col:78> 'int' <IntegralCast>
      (CXXStaticCastExpr 0x9e84400 <col:49, col:78> 'unsigned char' static_cast<unsigned char> <NoOp>
        (ImplicitCastExpr 0x9e843f0 <col:76, col:77> 'unsigned char' <IntegralCast>
          (UnaryOperator 0x9e843c8 <col:76, col:77> 'int' prefix '-'
            (IntegerLiteral 0x9e843b0 <col:77> 'int' 1)))))))
;
        ctype(const mask *__table = (ImplicitCastExpr 0x9e86b48 </usr/include/c++/4.6/bits/locale_facets.h:711:35> 'const mask *' <NullToPointer>
  (IntegerLiteral 0x9e86b30 <col:35> 'int' 0))
, bool __del = (CXXBoolLiteralExpr 0x9e86b58 </usr/include/c++/4.6/bits/locale_facets.h:711:51> '_Bool' false)
, size_t __refs = (ImplicitCastExpr 0x9e86b80 </usr/include/c++/4.6/bits/locale_facets.h:711:74> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9e86b68 <col:74> 'int' 0))
);
        ctype(__c_locale __cloc, const mask *__table = (ImplicitCastExpr 0x9e86ba8 </usr/include/c++/4.6/bits/locale_facets.h:724:54> 'const mask *' <NullToPointer>
  (IntegerLiteral 0x9e86b90 <col:54> 'int' 0))
, bool __del = (CXXBoolLiteralExpr 0x9e86bb8 </usr/include/c++/4.6/bits/locale_facets.h:724:70> '_Bool' false)
, size_t __refs = (ImplicitCastExpr 0x9e86be0 </usr/include/c++/4.6/bits/locale_facets.h:725:22> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9e86bc8 <col:22> 'int' 0))
);
        inline bool is(mask __m, char __c) const;
        inline const char *is(const char *__lo, const char *__hi, mask *__vec) const;
        inline const char *scan_is(mask __m, const char *__lo, const char *__hi) const;
        inline const char *scan_not(mask __m, const char *__lo, const char *__hi) const;
        char_type toupper(char_type __c) const (CompoundStmt 0x9e86cd0 </usr/include/c++/4.6/bits/locale_facets.h:796:7, col:39>
  (ReturnStmt 0x9e86cc0 <col:9, col:36>
    (CXXMemberCallExpr 0x9e86c90 <col:16, col:36> 'char_type':'char'
      (MemberExpr 0x9e86c70 <col:16, col:22> '<bound member function type>' ->do_toupper 0x9e85f00
        (CXXThisExpr 0x9e86c08 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9e86cb0 <col:33> 'char_type':'char' <LValueToRValue>
        (DeclRefExpr 0x9e86c58 <col:33> 'char_type':'char' lvalue ParmVar 0x9e85170 '__c' 'char_type':'char')))))


        const char_type *toupper(char_type *__lo, const char_type *__hi) const (CompoundStmt 0x9e86de0 </usr/include/c++/4.6/bits/locale_facets.h:813:7, col:46>
  (ReturnStmt 0x9e86dd0 <col:9, col:43>
    (CXXMemberCallExpr 0x9e86d88 <col:16, col:43> 'const char_type *'
      (MemberExpr 0x9e86d68 <col:16, col:22> '<bound member function type>' ->do_toupper 0x9e86030
        (CXXThisExpr 0x9e86ce8 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9e86db0 <col:33> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9e86d38 <col:33> 'char_type *' lvalue ParmVar 0x9e852b0 '__lo' 'char_type *'))
      (ImplicitCastExpr 0x9e86dc0 <col:39> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9e86d50 <col:39> 'const char_type *' lvalue ParmVar 0x9e85320 '__hi' 'const char_type *')))))


        char_type tolower(char_type __c) const (CompoundStmt 0x9e86ec0 </usr/include/c++/4.6/bits/locale_facets.h:829:7, col:39>
  (ReturnStmt 0x9e86eb0 <col:9, col:36>
    (CXXMemberCallExpr 0x9e86e80 <col:16, col:36> 'char_type':'char'
      (MemberExpr 0x9e86e60 <col:16, col:22> '<bound member function type>' ->do_tolower 0x9e860f0
        (CXXThisExpr 0x9e86df8 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9e86ea0 <col:33> 'char_type':'char' <LValueToRValue>
        (DeclRefExpr 0x9e86e48 <col:33> 'char_type':'char' lvalue ParmVar 0x9e85430 '__c' 'char_type':'char')))))


        const char_type *tolower(char_type *__lo, const char_type *__hi) const (CompoundStmt 0x9e86fd0 </usr/include/c++/4.6/bits/locale_facets.h:846:7, col:46>
  (ReturnStmt 0x9e86fc0 <col:9, col:43>
    (CXXMemberCallExpr 0x9e86f78 <col:16, col:43> 'const char_type *'
      (MemberExpr 0x9e86f58 <col:16, col:22> '<bound member function type>' ->do_tolower 0x9e86220
        (CXXThisExpr 0x9e86ed8 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9e86fa0 <col:33> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9e86f28 <col:33> 'char_type *' lvalue ParmVar 0x9e85500 '__lo' 'char_type *'))
      (ImplicitCastExpr 0x9e86fb0 <col:39> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9e86f40 <col:39> 'const char_type *' lvalue ParmVar 0x9e85550 '__hi' 'const char_type *')))))


        char_type widen(char __c) const (CompoundStmt 0x9e87268 </usr/include/c++/4.6/bits/locale_facets.h:866:7, line:871:7>
  (IfStmt 0x9e87130 <line:867:2, line:868:51>
    <<<NULL>>>
    (ImplicitCastExpr 0x9e87048 <line:867:6> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x9e87038 <col:6> 'char' <LValueToRValue>
        (MemberExpr 0x9e87014 <col:6> 'char' lvalue ->_M_widen_ok 0x9e84030
          (CXXThisExpr 0x9e86fe8 <col:6> 'const class std::ctype<char> *' this))))
    (ReturnStmt 0x9e87120 <line:868:4, col:51>
      (ImplicitCastExpr 0x9e87110 <col:11, col:51> 'char' <LValueToRValue>
        (ArraySubscriptExpr 0x9e870f8 <col:11, col:51> 'char' lvalue
          (ImplicitCastExpr 0x9e870e8 <col:11> 'char *' <ArrayToPointerDecay>
            (MemberExpr 0x9e87068 <col:11> 'char [256]' lvalue ->_M_widen 0x9e84150
              (CXXThisExpr 0x9e87058 <col:11> 'const class std::ctype<char> *' this)))
          (CXXStaticCastExpr 0x9e870d0 <col:20, col:50> 'unsigned char' static_cast<unsigned char> <NoOp>
            (ImplicitCastExpr 0x9e870c0 <col:47> 'unsigned char' <IntegralCast>
              (ImplicitCastExpr 0x9e870b0 <col:47> 'char' <LValueToRValue>
                (DeclRefExpr 0x9e87088 <col:47> 'char' lvalue ParmVar 0x9e85620 '__c' 'char')))))))
    <<<NULL>>>)
  (CXXMemberCallExpr 0x9e87180 <line:869:2, col:22> 'void'
    (MemberExpr 0x9e87160 <col:2, col:8> '<bound member function type>' ->_M_widen_init 0x9e86890
      (CXXThisExpr 0x9e87150 <col:2> 'const class std::ctype<char> *' this)))
  (ReturnStmt 0x9e87258 <line:870:2, col:27>
    (CXXMemberCallExpr 0x9e87228 <col:9, col:27> 'char_type':'char'
      (MemberExpr 0x9e87208 <col:9, col:15> '<bound member function type>' ->do_widen 0x9e862e0
        (CXXThisExpr 0x9e871a0 <col:9> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9e87248 <col:24> 'char' <LValueToRValue>
        (DeclRefExpr 0x9e871f0 <col:24> 'char' lvalue ParmVar 0x9e85620 '__c' 'char')))))


        const char *widen(const char *__lo, const char *__hi, char_type *__to) const (CompoundStmt 0x9e876a8 </usr/include/c++/4.6/bits/locale_facets.h:893:7, line:902:7>
  (IfStmt 0x9e87490 <line:894:2, line:898:4>
    <<<NULL>>>
    (BinaryOperator 0x9e872f0 <line:894:6, col:21> '_Bool' '=='
      (ImplicitCastExpr 0x9e872e0 <col:6> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9e872d0 <col:6> 'char' <LValueToRValue>
          (MemberExpr 0x9e87298 <col:6> 'char' lvalue ->_M_widen_ok 0x9e84030
            (CXXThisExpr 0x9e87288 <col:6> 'const class std::ctype<char> *' this))))
      (IntegerLiteral 0x9e872b8 <col:21> 'int' 1))
    (CompoundStmt 0x9e87478 <line:895:4, line:898:4>
      (CallExpr 0x9e873c8 <line:896:6, col:46> 'void *'
        (ImplicitCastExpr 0x9e873b8 <col:6> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9e87308 <col:6> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9c1d810 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0x9e87400 <col:23> 'void *' <BitCast>
          (ImplicitCastExpr 0x9e873f0 <col:23> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x9e87320 <col:23> 'char_type *' lvalue ParmVar 0x9e857c0 '__to' 'char_type *')))
        (ImplicitCastExpr 0x9e87420 <col:29> 'const void *' <BitCast>
          (ImplicitCastExpr 0x9e87410 <col:29> 'const char *' <LValueToRValue>
            (DeclRefExpr 0x9e87338 <col:29> 'const char *' lvalue ParmVar 0x9e85720 '__lo' 'const char *')))
        (ImplicitCastExpr 0x9e87430 <col:35, col:42> 'unsigned int' <IntegralCast>
          (BinaryOperator 0x9e873a0 <col:35, col:42> 'int' '-'
            (ImplicitCastExpr 0x9e87380 <col:35> 'const char *' <LValueToRValue>
              (DeclRefExpr 0x9e87350 <col:35> 'const char *' lvalue ParmVar 0x9e85770 '__hi' 'const char *'))
            (ImplicitCastExpr 0x9e87390 <col:42> 'const char *' <LValueToRValue>
              (DeclRefExpr 0x9e87368 <col:42> 'const char *' lvalue ParmVar 0x9e85720 '__lo' 'const char *')))))
      (ReturnStmt 0x9e87468 <line:897:6, col:13>
        (ImplicitCastExpr 0x9e87458 <col:13> 'const char *' <LValueToRValue>
          (DeclRefExpr 0x9e8743c <col:13> 'const char *' lvalue ParmVar 0x9e85770 '__hi' 'const char *'))))
    <<<NULL>>>)
  (IfStmt 0x9e87568 <line:899:2, line:900:18>
    <<<NULL>>>
    (UnaryOperator 0x9e87500 <line:899:6, col:7> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9e874f0 <col:7> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0x9e874e0 <col:7> 'char' <LValueToRValue>
          (MemberExpr 0x9e874c0 <col:7> 'char' lvalue ->_M_widen_ok 0x9e84030
            (CXXThisExpr 0x9e874b0 <col:7> 'const class std::ctype<char> *' this)))))
    (CXXMemberCallExpr 0x9e87548 <line:900:4, col:18> 'void'
      (MemberExpr 0x9e87528 <col:4> '<bound member function type>' ->_M_widen_init 0x9e86890
        (CXXThisExpr 0x9e87518 <col:4> 'const class std::ctype<char> *' this)))
    <<<NULL>>>)
  (ReturnStmt 0x9e87698 <line:901:2, col:40>
    (CXXMemberCallExpr 0x9e87640 <col:9, col:40> 'const char *'
      (MemberExpr 0x9e87620 <col:9, col:15> '<bound member function type>' ->do_widen 0x9e86460
        (CXXThisExpr 0x9e87588 <col:9> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9e87668 <col:24> 'const char *' <LValueToRValue>
        (DeclRefExpr 0x9e875d8 <col:24> 'const char *' lvalue ParmVar 0x9e85720 '__lo' 'const char *'))
      (ImplicitCastExpr 0x9e87678 <col:30> 'const char *' <LValueToRValue>
        (DeclRefExpr 0x9e875f0 <col:30> 'const char *' lvalue ParmVar 0x9e85770 '__hi' 'const char *'))
      (ImplicitCastExpr 0x9e87688 <col:36> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9e87608 <col:36> 'char_type *' lvalue ParmVar 0x9e857c0 '__to' 'char_type *')))))


        char narrow(char_type __c, char __dfault) const (CompoundStmt 0x9e87bf0 </usr/include/c++/4.6/bits/locale_facets.h:924:7, line:931:7>
  (IfStmt 0x9e87878 <line:925:2, line:926:52>
    <<<NULL>>>
    (ImplicitCastExpr 0x9e87790 <line:925:6, col:47> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x9e87780 <col:6, col:47> 'char' <LValueToRValue>
        (ArraySubscriptExpr 0x9e87768 <col:6, col:47> 'char' lvalue
          (ImplicitCastExpr 0x9e87758 <col:6> 'char *' <ArrayToPointerDecay>
            (MemberExpr 0x9e876d8 <col:6> 'char [256]' lvalue ->_M_narrow 0x9e84240
              (CXXThisExpr 0x9e876c8 <col:6> 'const class std::ctype<char> *' this)))
          (CXXStaticCastExpr 0x9e87740 <col:16, col:46> 'unsigned char' static_cast<unsigned char> <NoOp>
            (ImplicitCastExpr 0x9e87730 <col:43> 'unsigned char' <IntegralCast>
              (ImplicitCastExpr 0x9e87720 <col:43> 'char_type':'char' <LValueToRValue>
                (DeclRefExpr 0x9e876f8 <col:43> 'char_type':'char' lvalue ParmVar 0x9e85900 '__c' 'char_type':'char')))))))
    (ReturnStmt 0x9e87868 <line:926:4, col:52>
      (ImplicitCastExpr 0x9e87858 <col:11, col:52> 'char' <LValueToRValue>
        (ArraySubscriptExpr 0x9e87840 <col:11, col:52> 'char' lvalue
          (ImplicitCastExpr 0x9e87830 <col:11> 'char *' <ArrayToPointerDecay>
            (MemberExpr 0x9e877b0 <col:11> 'char [256]' lvalue ->_M_narrow 0x9e84240
              (CXXThisExpr 0x9e877a0 <col:11> 'const class std::ctype<char> *' this)))
          (CXXStaticCastExpr 0x9e87818 <col:21, col:51> 'unsigned char' static_cast<unsigned char> <NoOp>
            (ImplicitCastExpr 0x9e87808 <col:48> 'unsigned char' <IntegralCast>
              (ImplicitCastExpr 0x9e877f8 <col:48> 'char_type':'char' <LValueToRValue>
                (DeclRefExpr 0x9e877d0 <col:48> 'char_type':'char' lvalue ParmVar 0x9e85900 '__c' 'char_type':'char')))))))
    <<<NULL>>>)
  (DeclStmt 0x9e879d0 <line:927:2, col:43>
    0x9e878a0 "const char __t =
      (CXXMemberCallExpr 0x9e87988 <col:19, col:42> 'char'
        (MemberExpr 0x9e87968 <col:19> '<bound member function type>' ->do_narrow 0x9e86580
          (CXXThisExpr 0x9e87958 <col:19> 'const class std::ctype<char> *' this))
        (ImplicitCastExpr 0x9e879b0 <col:29> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9e87928 <col:29> 'char_type':'char' lvalue ParmVar 0x9e85900 '__c' 'char_type':'char'))
        (ImplicitCastExpr 0x9e879c0 <col:34> 'char' <LValueToRValue>
          (DeclRefExpr 0x9e87940 <col:34> 'char' lvalue ParmVar 0x9e85940 '__dfault' 'char')))")
  (IfStmt 0x9e87b98 <line:928:2, line:929:49>
    <<<NULL>>>
    (BinaryOperator 0x9e87a50 <line:928:6, col:13> '_Bool' '!='
      (ImplicitCastExpr 0x9e87a20 <col:6> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9e87a10 <col:6> 'char' <LValueToRValue>
          (DeclRefExpr 0x9e879e0 <col:6> 'const char' lvalue Var 0x9e878a0 '__t' 'const char')))
      (ImplicitCastExpr 0x9e87a40 <col:13> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9e87a30 <col:13> 'char' <LValueToRValue>
          (DeclRefExpr 0x9e879f8 <col:13> 'char' lvalue ParmVar 0x9e85940 '__dfault' 'char'))))
    (BinaryOperator 0x9e87b80 <line:929:4, col:49> 'char' lvalue '='
      (ArraySubscriptExpr 0x9e87b40 <col:4, col:45> 'char' lvalue
        (ImplicitCastExpr 0x9e87b30 <col:4> 'char *' <ArrayToPointerDecay>
          (MemberExpr 0x9e87ab0 <col:4> 'char [256]' lvalue ->_M_narrow 0x9e84240
            (CXXThisExpr 0x9e87aa0 <col:4> 'const class std::ctype<char> *' this)))
        (CXXStaticCastExpr 0x9e87b18 <col:14, col:44> 'unsigned char' static_cast<unsigned char> <NoOp>
          (ImplicitCastExpr 0x9e87b08 <col:41> 'unsigned char' <IntegralCast>
            (ImplicitCastExpr 0x9e87af8 <col:41> 'char_type':'char' <LValueToRValue>
              (DeclRefExpr 0x9e87ad0 <col:41> 'char_type':'char' lvalue ParmVar 0x9e85900 '__c' 'char_type':'char')))))
      (ImplicitCastExpr 0x9e87b70 <col:49> 'char' <LValueToRValue>
        (DeclRefExpr 0x9e87b54 <col:49> 'const char' lvalue Var 0x9e878a0 '__t' 'const char')))
    <<<NULL>>>)
  (ReturnStmt 0x9e87be0 <line:930:2, col:9>
    (ImplicitCastExpr 0x9e87bd0 <col:9> 'char' <LValueToRValue>
      (DeclRefExpr 0x9e87bb4 <col:9> 'const char' lvalue Var 0x9e878a0 '__t' 'const char'))))


        const char_type *narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__to) const (CompoundStmt 0x9e880f0 </usr/include/c++/4.6/bits/locale_facets.h:958:7, line:967:7>
  (IfStmt 0x9e87ea8 <line:959:2, line:963:4>
    <<<NULL>>>
    (ImplicitCastExpr 0x9e87d10 <line:959:6, col:46> '_Bool' <IntegralToBoolean>
      (CallExpr 0x9e87cc8 <col:6, col:46> 'long'
        (ImplicitCastExpr 0x9e87cb8 <col:6> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9e87c10 <col:6> 'long (long, long)' lvalue Function 0x9d45c10 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0x9e87cf0 <col:23, col:39> 'long' <IntegralCast>
          (BinaryOperator 0x9e87c90 <col:23, col:39> '_Bool' '=='
            (ImplicitCastExpr 0x9e87c80 <col:23> 'int' <IntegralCast>
              (ImplicitCastExpr 0x9e87c70 <col:23> 'char' <LValueToRValue>
                (MemberExpr 0x9e87c38 <col:23> 'char' lvalue ->_M_narrow_ok 0x9e84280
                  (CXXThisExpr 0x9e87c28 <col:23> 'const class std::ctype<char> *' this))))
            (IntegerLiteral 0x9e87c58 <col:39> 'int' 1)))
        (ImplicitCastExpr 0x9e87d00 <col:42> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0x9e87ca8 <col:42> '_Bool' true))))
    (CompoundStmt 0x9e87e90 <line:960:4, line:963:4>
      (CallExpr 0x9e87de0 <line:961:6, col:46> 'void *'
        (ImplicitCastExpr 0x9e87dd0 <col:6> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9e87d1c <col:6> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9c1d810 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0x9e87e18 <col:23> 'void *' <BitCast>
          (ImplicitCastExpr 0x9e87e08 <col:23> 'char *' <LValueToRValue>
            (DeclRefExpr 0x9e87d34 <col:23> 'char *' lvalue ParmVar 0x9e85b40 '__to' 'char *')))
        (ImplicitCastExpr 0x9e87e38 <col:29> 'const void *' <BitCast>
          (ImplicitCastExpr 0x9e87e28 <col:29> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x9e87d4c <col:29> 'const char_type *' lvalue ParmVar 0x9e85a60 '__lo' 'const char_type *')))
        (ImplicitCastExpr 0x9e87e48 <col:35, col:42> 'unsigned int' <IntegralCast>
          (BinaryOperator 0x9e87db8 <col:35, col:42> 'int' '-'
            (ImplicitCastExpr 0x9e87d98 <col:35> 'const char_type *' <LValueToRValue>
              (DeclRefExpr 0x9e87d64 <col:35> 'const char_type *' lvalue ParmVar 0x9e85ab0 '__hi' 'const char_type *'))
            (ImplicitCastExpr 0x9e87da8 <col:42> 'const char_type *' <LValueToRValue>
              (DeclRefExpr 0x9e87d7c <col:42> 'const char_type *' lvalue ParmVar 0x9e85a60 '__lo' 'const char_type *')))))
      (ReturnStmt 0x9e87e80 <line:962:6, col:13>
        (ImplicitCastExpr 0x9e87e70 <col:13> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9e87e54 <col:13> 'const char_type *' lvalue ParmVar 0x9e85ab0 '__hi' 'const char_type *'))))
    <<<NULL>>>)
  (IfStmt 0x9e87f80 <line:964:2, line:965:19>
    <<<NULL>>>
    (UnaryOperator 0x9e87f18 <line:964:6, col:7> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9e87f08 <col:7> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0x9e87ef8 <col:7> 'char' <LValueToRValue>
          (MemberExpr 0x9e87ed8 <col:7> 'char' lvalue ->_M_narrow_ok 0x9e84280
            (CXXThisExpr 0x9e87ec8 <col:7> 'const class std::ctype<char> *' this)))))
    (CXXMemberCallExpr 0x9e87f60 <line:965:4, col:19> 'void'
      (MemberExpr 0x9e87f40 <col:4> '<bound member function type>' ->_M_narrow_init 0x9e86810
        (CXXThisExpr 0x9e87f30 <col:4> 'const class std::ctype<char> *' this)))
    <<<NULL>>>)
  (ReturnStmt 0x9e880e0 <line:966:2, col:51>
    (CXXMemberCallExpr 0x9e88070 <col:9, col:51> 'const char_type *'
      (MemberExpr 0x9e88050 <col:9, col:15> '<bound member function type>' ->do_narrow 0x9e86740
        (CXXThisExpr 0x9e87fa0 <col:9> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9e880a0 <col:25> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9e87ff0 <col:25> 'const char_type *' lvalue ParmVar 0x9e85a60 '__lo' 'const char_type *'))
      (ImplicitCastExpr 0x9e880b0 <col:31> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9e88008 <col:31> 'const char_type *' lvalue ParmVar 0x9e85ab0 '__hi' 'const char_type *'))
      (ImplicitCastExpr 0x9e880c0 <col:37> 'char' <LValueToRValue>
        (DeclRefExpr 0x9e88020 <col:37> 'char' lvalue ParmVar 0x9e85af0 '__dfault' 'char'))
      (ImplicitCastExpr 0x9e880d0 <col:47> 'char *' <LValueToRValue>
        (DeclRefExpr 0x9e88038 <col:47> 'char *' lvalue ParmVar 0x9e85b40 '__to' 'char *')))))


        const mask *table() const throw() (CompoundStmt 0x9e88160 </usr/include/c++/4.6/bits/locale_facets.h:975:7, col:26>
  (ReturnStmt 0x9e88150 <col:9, col:16>
    (ImplicitCastExpr 0x9e88140 <col:16> 'const mask *' <LValueToRValue>
      (MemberExpr 0x9e88120 <col:16> 'const mask *const' lvalue ->_M_table 0x9e83ff0
        (CXXThisExpr 0x9e88110 <col:16> 'const class std::ctype<char> *' this)))))


        static const mask *classic_table() throw();
    protected:
    protected:
        virtual void ~ctype();
        virtual char_type do_toupper(char_type) const;
        virtual const char_type *do_toupper(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_tolower(char_type) const;
        virtual const char_type *do_tolower(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_widen(char __c) const (CompoundStmt 0x9e881b0 </usr/include/c++/4.6/bits/locale_facets.h:1076:7, col:21>
  (ReturnStmt 0x9e881a0 <col:9, col:16>
    (ImplicitCastExpr 0x9e88190 <col:16> 'char' <LValueToRValue>
      (DeclRefExpr 0x9e88174 <col:16> 'char' lvalue ParmVar 0x9e86290 '__c' 'char'))))


        virtual const char *do_widen(const char *__lo, const char *__hi, char_type *__dest) const (CompoundStmt 0x9e88338 </usr/include/c++/4.6/bits/locale_facets.h:1099:7, line:1102:7>
  (CallExpr 0x9e88288 <line:1100:2, col:44> 'void *'
    (ImplicitCastExpr 0x9e88278 <col:2> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9e881c4 <col:2> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9c1d810 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
    (ImplicitCastExpr 0x9e882c0 <col:19> 'void *' <BitCast>
      (ImplicitCastExpr 0x9e882b0 <col:19> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9e881dc <col:19> 'char_type *' lvalue ParmVar 0x9e86400 '__dest' 'char_type *')))
    (ImplicitCastExpr 0x9e882e0 <col:27> 'const void *' <BitCast>
      (ImplicitCastExpr 0x9e882d0 <col:27> 'const char *' <LValueToRValue>
        (DeclRefExpr 0x9e881f4 <col:27> 'const char *' lvalue ParmVar 0x9e86360 '__lo' 'const char *')))
    (ImplicitCastExpr 0x9e882f0 <col:33, col:40> 'unsigned int' <IntegralCast>
      (BinaryOperator 0x9e88260 <col:33, col:40> 'int' '-'
        (ImplicitCastExpr 0x9e88240 <col:33> 'const char *' <LValueToRValue>
          (DeclRefExpr 0x9e8820c <col:33> 'const char *' lvalue ParmVar 0x9e863b0 '__hi' 'const char *'))
        (ImplicitCastExpr 0x9e88250 <col:40> 'const char *' <LValueToRValue>
          (DeclRefExpr 0x9e88224 <col:40> 'const char *' lvalue ParmVar 0x9e86360 '__lo' 'const char *')))))
  (ReturnStmt 0x9e88328 <line:1101:2, col:9>
    (ImplicitCastExpr 0x9e88318 <col:9> 'const char *' <LValueToRValue>
      (DeclRefExpr 0x9e882fc <col:9> 'const char *' lvalue ParmVar 0x9e863b0 '__hi' 'const char *'))))


        virtual char do_narrow(char_type __c, char) const (CompoundStmt 0x9e88388 </usr/include/c++/4.6/bits/locale_facets.h:1125:7, col:21>
  (ReturnStmt 0x9e88378 <col:9, col:16>
    (ImplicitCastExpr 0x9e88368 <col:16> 'char_type':'char' <LValueToRValue>
      (DeclRefExpr 0x9e88350 <col:16> 'char_type':'char' lvalue ParmVar 0x9e864e0 '__c' 'char_type':'char'))))


        virtual const char_type *do_narrow(const char_type *__lo, const char_type *__hi, char, char *__dest) const (CompoundStmt 0x9e88510 </usr/include/c++/4.6/bits/locale_facets.h:1152:7, line:1155:7>
  (CallExpr 0x9e88460 <line:1153:2, col:44> 'void *'
    (ImplicitCastExpr 0x9e88450 <col:2> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9e8839c <col:2> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9c1d810 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
    (ImplicitCastExpr 0x9e88498 <col:19> 'void *' <BitCast>
      (ImplicitCastExpr 0x9e88488 <col:19> 'char *' <LValueToRValue>
        (DeclRefExpr 0x9e883b4 <col:19> 'char *' lvalue ParmVar 0x9e866e0 '__dest' 'char *')))
    (ImplicitCastExpr 0x9e884b8 <col:27> 'const void *' <BitCast>
      (ImplicitCastExpr 0x9e884a8 <col:27> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9e883cc <col:27> 'const char_type *' lvalue ParmVar 0x9e86600 '__lo' 'const char_type *')))
    (ImplicitCastExpr 0x9e884c8 <col:33, col:40> 'unsigned int' <IntegralCast>
      (BinaryOperator 0x9e88438 <col:33, col:40> 'int' '-'
        (ImplicitCastExpr 0x9e88418 <col:33> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9e883e4 <col:33> 'const char_type *' lvalue ParmVar 0x9e86650 '__hi' 'const char_type *'))
        (ImplicitCastExpr 0x9e88428 <col:40> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9e883fc <col:40> 'const char_type *' lvalue ParmVar 0x9e86600 '__lo' 'const char_type *')))))
  (ReturnStmt 0x9e88500 <line:1154:2, col:9>
    (ImplicitCastExpr 0x9e884f0 <col:9> 'const char_type *' <LValueToRValue>
      (DeclRefExpr 0x9e884d4 <col:9> 'const char_type *' lvalue ParmVar 0x9e86650 '__hi' 'const char_type *'))))


    private:
    private:
        void _M_narrow_init() const;
        void _M_widen_init() const;
        inline std::ctype<char> &operator=(const std::ctype<char> &);
    }
template <typename _CharT = wchar_t> class ctype : public __ctype_abstract_base<wchar_t> {
        class ctype;
    public:
    public:
        typedef wchar_t char_type;
        typedef wctype_t __wmask_type;
    protected:
    protected:
        __c_locale _M_c_locale_ctype;
        bool _M_narrow_ok;
        char _M_narrow[128];
        wint_t _M_widen[256];
        mask _M_bit[16];
        __wmask_type _M_wmask[16];
    public:
    public:
        static locale::id id;
        ctype(size_t __refs = (ImplicitCastExpr 0x9e90508 </usr/include/c++/4.6/bits/locale_facets.h:1208:29> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9e904f0 <col:29> 'int' 0))
);
        ctype(__c_locale __cloc, size_t __refs = (ImplicitCastExpr 0x9e90530 </usr/include/c++/4.6/bits/locale_facets.h:1219:48> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9e90518 <col:48> 'int' 0))
);
    protected:
    protected:
        __wmask_type _M_convert_to_wmask(const mask __m) const throw();
        virtual void ~ctype();
        virtual bool do_is(mask __m, char_type __c) const;
        virtual const char_type *do_is(const char_type *__lo, const char_type *__hi, mask *__vec) const;
        virtual const char_type *do_scan_is(mask __m, const char_type *__lo, const char_type *__hi) const;
        virtual const char_type *do_scan_not(mask __m, const char_type *__lo, const char_type *__hi) const;
        virtual char_type do_toupper(char_type) const;
        virtual const char_type *do_toupper(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_tolower(char_type) const;
        virtual const char_type *do_tolower(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_widen(char) const;
        virtual const char *do_widen(const char *__lo, const char *__hi, char_type *__dest) const;
        virtual char do_narrow(char_type, char __dfault) const;
        virtual const char_type *do_narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__dest) const;
        void _M_initialize_ctype() throw();
        inline std::ctype<wchar_t> &operator=(const std::ctype<wchar_t> &);
    }
template <typename _CharT> class ctype;
    class ctype;
    class ctype;
    template <typename _CharT = char> class ctype_byname
template <typename _CharT = wchar_t> class ctype_byname
template <typename _CharT> class ctype_byname;
    class codecvt_base;
    template <typename _InternT = wchar_t, typename _ExternT = char, typename _StateT = __mbstate_t> class codecvt
template <typename _InternT = char, typename _ExternT = char, typename _StateT = __mbstate_t> class codecvt
template <typename _InternT, typename _ExternT, typename _StateT> class codecvt;
    class codecvt;
    class codecvt;
    template <typename _InternT, typename _ExternT, typename _StateT> class codecvt_byname;
    template <typename _CharT = char, typename _InIter = std::istreambuf_iterator<char, std::char_traits<char> >> class num_get : public locale::facet {
        class num_get;
    public:
    public:
        typedef char char_type;
        typedef std::istreambuf_iterator<char, std::char_traits<char> > iter_type;
        static locale::id id;
        num_get(size_t __refs);
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, bool &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, float &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, void *&__v) const;
    protected:
    protected:
        virtual void ~num_get();
        iter_type _M_extract_float(iter_type, iter_type, std::ios_base &, ios_base::iostate &, string &) const;
        template <typename _ValueT> iter_type _M_extract_int(iter_type, iter_type, std::ios_base &, ios_base::iostate &, _ValueT &) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *, size_t __len, _CharT2 __c) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<!__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *__zero, size_t __len, _CharT2 __c) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &, bool &) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, float &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, long double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, void *&) const;
        inline std::num_get<char> &operator=(const std::num_get<char> &);
    }
template <typename _CharT = wchar_t, typename _InIter = std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >> class num_get : public locale::facet {
        class num_get;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > iter_type;
        static locale::id id;
        num_get(size_t __refs);
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, bool &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, float &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, void *&__v) const;
    protected:
    protected:
        virtual void ~num_get();
        iter_type _M_extract_float(iter_type, iter_type, std::ios_base &, ios_base::iostate &, string &) const;
        template <typename _ValueT> iter_type _M_extract_int(iter_type, iter_type, std::ios_base &, ios_base::iostate &, _ValueT &) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *, size_t __len, _CharT2 __c) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<!__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *__zero, size_t __len, _CharT2 __c) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &, bool &) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, float &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, long double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, void *&) const;
        inline std::num_get<wchar_t> &operator=(const std::num_get<wchar_t> &);
    }
template <typename _CharT, typename _InIter = istreambuf_iterator<_CharT>> class num_get;
    template <typename _CharT = wchar_t, typename _OutIter = std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >> class num_put : public locale::facet {
        class num_put;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > iter_type;
        static locale::id id;
        num_put(size_t __refs);
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, bool __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, const void *__v) const;
    protected:
    protected:
        template <typename _ValueT> iter_type _M_insert_float(iter_type, std::ios_base &__io, char_type __fill, char __mod, _ValueT __v) const;
        void _M_group_float(const char *__grouping, size_t __grouping_size, char_type __sep, const char_type *__p, char_type *__new, char_type *__cs, int &__len) const;
        template <typename _ValueT> iter_type _M_insert_int(iter_type, std::ios_base &__io, char_type __fill, _ValueT __v) const;
        void _M_group_int(const char *__grouping, size_t __grouping_size, char_type __sep, std::ios_base &__io, char_type *__new, char_type *__cs, int &__len) const;
        void _M_pad(char_type __fill, streamsize __w, std::ios_base &__io, char_type *__new, const char_type *__cs, int &__len) const;
        virtual void ~num_put();
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, bool __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long long __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, long double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, const void *__v) const;
        inline std::num_put<wchar_t> &operator=(const std::num_put<wchar_t> &);
    }
template <typename _CharT = char, typename _OutIter = std::ostreambuf_iterator<char, std::char_traits<char> >> class num_put : public locale::facet {
        class num_put;
    public:
    public:
        typedef char char_type;
        typedef std::ostreambuf_iterator<char, std::char_traits<char> > iter_type;
        static locale::id id;
        num_put(size_t __refs);
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, bool __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, const void *__v) const;
    protected:
    protected:
        template <typename _ValueT> iter_type _M_insert_float(iter_type, std::ios_base &__io, char_type __fill, char __mod, _ValueT __v) const;
        void _M_group_float(const char *__grouping, size_t __grouping_size, char_type __sep, const char_type *__p, char_type *__new, char_type *__cs, int &__len) const;
        template <typename _ValueT> iter_type _M_insert_int(iter_type, std::ios_base &__io, char_type __fill, _ValueT __v) const;
        void _M_group_int(const char *__grouping, size_t __grouping_size, char_type __sep, std::ios_base &__io, char_type *__new, char_type *__cs, int &__len) const;
        void _M_pad(char_type __fill, streamsize __w, std::ios_base &__io, char_type *__new, const char_type *__cs, int &__len) const;
        virtual void ~num_put();
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, bool __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long long __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, long double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, const void *__v) const;
        inline std::num_put<char> &operator=(const std::num_put<char> &);
    }
template <typename _CharT, typename _OutIter = ostreambuf_iterator<_CharT>> class num_put;
    template <typename _CharT = char> class numpunct : public locale::facet {
        class numpunct;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
        typedef __numpunct_cache<char> __cache_type;
    protected:
    protected:
        __cache_type *_M_data;
    public:
    public:
        static locale::id id;
        numpunct(size_t __refs);
        numpunct(__cache_type *__cache, size_t __refs);
        numpunct(__c_locale __cloc, size_t __refs);
        char_type decimal_point() const;
        char_type thousands_sep() const;
        string grouping() const;
        string_type truename() const;
        string_type falsename() const;
    protected:
    protected:
        virtual void ~numpunct();
        virtual char_type do_decimal_point() const;
        virtual char_type do_thousands_sep() const;
        virtual string do_grouping() const;
        virtual string_type do_truename() const;
        virtual string_type do_falsename() const;
        void _M_initialize_numpunct(__c_locale __cloc);
        inline std::numpunct<char> &operator=(const std::numpunct<char> &);
    }
template <typename _CharT = wchar_t> class numpunct : public locale::facet {
        class numpunct;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
        typedef __numpunct_cache<wchar_t> __cache_type;
    protected:
    protected:
        __cache_type *_M_data;
    public:
    public:
        static locale::id id;
        numpunct(size_t __refs);
        numpunct(__cache_type *__cache, size_t __refs);
        numpunct(__c_locale __cloc, size_t __refs);
        char_type decimal_point() const;
        char_type thousands_sep() const;
        string grouping() const;
        string_type truename() const;
        string_type falsename() const;
    protected:
    protected:
        virtual void ~numpunct();
        virtual char_type do_decimal_point() const;
        virtual char_type do_thousands_sep() const;
        virtual string do_grouping() const;
        virtual string_type do_truename() const;
        virtual string_type do_falsename() const;
        void _M_initialize_numpunct(__c_locale __cloc);
        inline std::numpunct<wchar_t> &operator=(const std::numpunct<wchar_t> &);
    }
template <typename _CharT> class numpunct;
    template <typename _CharT = char> class numpunct_byname : public numpunct<char> {
        class numpunct_byname;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
        numpunct_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~numpunct_byname();
        inline std::numpunct_byname<char> &operator=(const std::numpunct_byname<char> &);
    }
template <typename _CharT = wchar_t> class numpunct_byname : public numpunct<wchar_t> {
        class numpunct_byname;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
        numpunct_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~numpunct_byname();
        inline std::numpunct_byname<wchar_t> &operator=(const std::numpunct_byname<wchar_t> &);
    }
template <typename _CharT> class numpunct_byname;
    template <typename _CharT = char> class collate : public locale::facet {
        class collate;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
    protected:
    protected:
        __c_locale _M_c_locale_collate;
    public:
    public:
        static locale::id id;
        collate(size_t __refs);
        collate(__c_locale __cloc, size_t __refs);
        int compare(const char *__lo1, const char *__hi1, const char *__lo2, const char *__hi2) const;
        string_type transform(const char *__lo, const char *__hi) const;
        long hash(const char *__lo, const char *__hi) const;
        int _M_compare(const char *, const char *) const throw();
        size_t _M_transform(char *, const char *, size_t) const throw();
    protected:
    protected:
        virtual void ~collate();
        virtual int do_compare(const char *__lo1, const char *__hi1, const char *__lo2, const char *__hi2) const;
        virtual string_type do_transform(const char *__lo, const char *__hi) const;
        virtual long do_hash(const char *__lo, const char *__hi) const;
        inline std::collate<char> &operator=(const std::collate<char> &);
    }
template <typename _CharT = wchar_t> class collate : public locale::facet {
        class collate;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
    protected:
    protected:
        __c_locale _M_c_locale_collate;
    public:
    public:
        static locale::id id;
        collate(size_t __refs);
        collate(__c_locale __cloc, size_t __refs);
        int compare(const wchar_t *__lo1, const wchar_t *__hi1, const wchar_t *__lo2, const wchar_t *__hi2) const;
        string_type transform(const wchar_t *__lo, const wchar_t *__hi) const;
        long hash(const wchar_t *__lo, const wchar_t *__hi) const;
        int _M_compare(const wchar_t *, const wchar_t *) const throw();
        size_t _M_transform(wchar_t *, const wchar_t *, size_t) const throw();
    protected:
    protected:
        virtual void ~collate();
        virtual int do_compare(const wchar_t *__lo1, const wchar_t *__hi1, const wchar_t *__lo2, const wchar_t *__hi2) const;
        virtual string_type do_transform(const wchar_t *__lo, const wchar_t *__hi) const;
        virtual long do_hash(const wchar_t *__lo, const wchar_t *__hi) const;
        inline std::collate<wchar_t> &operator=(const std::collate<wchar_t> &);
    }
template <typename _CharT> class collate;
    template <typename _CharT = char> class collate_byname : public collate<char> {
        class collate_byname;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
        collate_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~collate_byname();
        inline std::collate_byname<char> &operator=(const std::collate_byname<char> &);
    }
template <typename _CharT = wchar_t> class collate_byname : public collate<wchar_t> {
        class collate_byname;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
        collate_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~collate_byname();
        inline std::collate_byname<wchar_t> &operator=(const std::collate_byname<wchar_t> &);
    }
template <typename _CharT> class collate_byname;
    class time_base;
    template <typename _CharT, typename _InIter = istreambuf_iterator<_CharT>> class time_get;
    template <typename _CharT, typename _InIter = istreambuf_iterator<_CharT>> class time_get_byname;
    template <typename _CharT, typename _OutIter = ostreambuf_iterator<_CharT>> class time_put;
    template <typename _CharT, typename _OutIter = ostreambuf_iterator<_CharT>> class time_put_byname;
    class money_base;
    template <typename _CharT, typename _InIter = istreambuf_iterator<_CharT>> class money_get;
    template <typename _CharT, typename _OutIter = ostreambuf_iterator<_CharT>> class money_put;
    template <typename _CharT, bool _Intl = (CXXBoolLiteralExpr 0x9c65eb8 </usr/include/c++/4.6/bits/localefwd.h:176:42> '_Bool' false)
> class moneypunct;
    template <typename _CharT, bool _Intl = (CXXBoolLiteralExpr 0x9c66108 </usr/include/c++/4.6/bits/localefwd.h:178:42> '_Bool' false)
> class moneypunct_byname;
    class messages_base;
    template <typename _CharT> class messages;
    template <typename _CharT> class messages_byname;
}
namespace __cxxabiv1 {
    class __forced_unwind {
        class __forced_unwind;
        virtual void ~__forced_unwind() throw();
        virtual void __pure_dummy() = 0;
        inline __cxxabiv1::__forced_unwind &operator=(const __cxxabiv1::__forced_unwind &) throw();
    };
}
namespace std {
    template <typename _CharT, typename _Traits> inline void __ostream_write(basic_ostream<_CharT, _Traits> &__out, const _CharT *__s, streamsize __n) (CompoundStmt 0x9c6b470 </usr/include/c++/4.6/bits/ostream_insert.h:45:5, line:52:5>
  (DeclStmt 0x9c6b0c0 <line:46:7, col:66>
    0x9c6b090 "typedef basic_ostream<_CharT, _Traits> __ostream_type")
  (DeclStmt 0x9c6b1b0 <line:47:7, col:62>
    0x9c6b180 "typedef typename __ostream_type::ios_base __ios_base")
  (DeclStmt 0x9c6b308 <line:49:7, col:62>
    0x9c6b1d0 "const streamsize __put =
      (CallExpr 0x9c6b2e0 <col:32, col:61> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9c6b278 <col:32, col:47> '<dependent type>' lvalue
          (CallExpr 0x9c6b258 <col:32, col:44> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9c6b220 <col:32, col:38> '<dependent type>' lvalue
              (DeclRefExpr 0x9c6b204 <col:32> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9c6ad50 '__out' 'basic_ostream<_CharT, _Traits> &'))))
        (DeclRefExpr 0x9c6b2ac <col:53> 'const _CharT *' lvalue ParmVar 0x9c6adc0 '__s' 'const _CharT *')
        (DeclRefExpr 0x9c6b2c4 <col:58> 'streamsize':'int' lvalue ParmVar 0x9c6ae20 '__n' 'streamsize':'int'))")
  (IfStmt 0x9c6b450 <line:50:7, line:51:35>
    <<<NULL>>>
    (BinaryOperator 0x9c6b368 <line:50:11, col:20> '_Bool' '!='
      (ImplicitCastExpr 0x9c6b348 <col:11> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0x9c6b318 <col:11> 'const streamsize':'const int' lvalue Var 0x9c6b1d0 '__put' 'const streamsize':'const int'))
      (ImplicitCastExpr 0x9c6b358 <col:20> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0x9c6b330 <col:20> 'streamsize':'int' lvalue ParmVar 0x9c6ae20 '__n' 'streamsize':'int')))
    (CallExpr 0x9c6b430 <line:51:2, col:35> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9c6b398 <col:2, col:8> '<dependent type>' lvalue
        (DeclRefExpr 0x9c6b380 <col:2> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9c6ad50 '__out' 'basic_ostream<_CharT, _Traits> &'))
      (DependentScopeDeclRefExpr 0x9c6b408 <col:17, col:29> '<dependent type>' lvalue))
    <<<NULL>>>))

;
    template <typename _CharT, typename _Traits> inline void __ostream_fill(basic_ostream<_CharT, _Traits> &__out, streamsize __n) (CompoundStmt 0x9c6bf40 </usr/include/c++/4.6/bits/ostream_insert.h:57:5, line:71:5>
  (DeclStmt 0x9c6b920 <line:58:7, col:66>
    0x9c6b8f0 "typedef basic_ostream<_CharT, _Traits> __ostream_type")
  (DeclStmt 0x9c6b9e0 <line:59:7, col:62>
    0x9c6b9b0 "typedef typename __ostream_type::ios_base __ios_base")
  (DeclStmt 0x9c6baa8 <line:61:7, col:38>
    0x9c6ba00 "const _CharT __c =
      (CallExpr 0x9c6ba88 <col:26, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9c6ba50 <col:26, col:32> '<dependent type>' lvalue
          (DeclRefExpr 0x9c6ba34 <col:26> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9c6b670 '__out' 'basic_ostream<_CharT, _Traits> &')))")
  (ForStmt 0x9c6bf18 <line:62:7, line:70:2>
    <<<NULL>>>
    <<<NULL>>>
    (BinaryOperator 0x9c6baf8 <line:62:14, col:20> '_Bool' '>'
      (ImplicitCastExpr 0x9c6bae8 <col:14> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0x9c6bab8 <col:14> 'streamsize':'int' lvalue ParmVar 0x9c6b6b0 '__n' 'streamsize':'int'))
      (IntegerLiteral 0x9c6bad0 <col:20> 'int' 0))
    (UnaryOperator 0x9c6bb28 <col:23, col:25> 'streamsize':'int' lvalue prefix '--'
      (DeclRefExpr 0x9c6bb10 <col:25> 'streamsize':'int' lvalue ParmVar 0x9c6b6b0 '__n' 'streamsize':'int'))
    (CompoundStmt 0x9c6bf00 <line:63:2, line:70:2>
      (DeclStmt 0x9c6bce8 <line:64:4, col:70>
        0x9c6bbd0 "const typename _Traits::int_type __put =
          (CallExpr 0x9c6bcc8 <col:45, col:69> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9c6bc78 <col:45, col:60> '<dependent type>' lvalue
              (CallExpr 0x9c6bc58 <col:45, col:57> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9c6bc20 <col:45, col:51> '<dependent type>' lvalue
                  (DeclRefExpr 0x9c6bc04 <col:45> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9c6b670 '__out' 'basic_ostream<_CharT, _Traits> &'))))
            (DeclRefExpr 0x9c6bcac <col:66> 'const _CharT' lvalue Var 0x9c6ba00 '__c' 'const _CharT'))")
      (IfStmt 0x9c6bee0 <line:65:4, line:69:6>
        <<<NULL>>>
        (CallExpr 0x9c6bdc8 <line:65:8, col:50> '<dependent type>'
          (DependentScopeDeclRefExpr 0x9c6bd20 <col:8, col:17> '<dependent type>' lvalue)
          (DeclRefExpr 0x9c6bd44 <col:29> 'const typename _Traits::int_type' lvalue Var 0x9c6bbd0 '__put' 'const typename _Traits::int_type')
          (CallExpr 0x9c6bda8 <col:36, col:49> '<dependent type>'
            (DependentScopeDeclRefExpr 0x9c6bd80 <col:36, col:45> '<dependent type>' lvalue)))
        (CompoundStmt 0x9c6bec8 <line:66:6, line:69:6>
          (CallExpr 0x9c6bea0 <line:67:8, col:41> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9c6be08 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0x9c6bdec <col:8> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9c6b670 '__out' 'basic_ostream<_CharT, _Traits> &'))
            (DependentScopeDeclRefExpr 0x9c6be78 <col:23, col:35> '<dependent type>' lvalue))
          (BreakStmt 0x9c6bec0 <line:68:8>))
        <<<NULL>>>))))

;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> basic_ostream<wchar_t, std::char_traits<wchar_t> > &__ostream_insert(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__out, const wchar_t *__s, streamsize __n)template <typename _CharT = char, typename _Traits = std::char_traits<char>> basic_ostream<char, std::char_traits<char> > &__ostream_insert(basic_ostream<char, std::char_traits<char> > &__out, const char *__s, streamsize __n)template <typename _CharT, typename _Traits> basic_ostream<_CharT, _Traits> &__ostream_insert(basic_ostream<_CharT, _Traits> &__out, const _CharT *__s, streamsize __n) (CompoundStmt 0x9c6ea10 </usr/include/c++/4.6/bits/ostream_insert.h:77:5, line:112:5>
  (DeclStmt 0x9c6c5c0 <line:78:7, col:66>
    0x9c6c590 "typedef basic_ostream<_CharT, _Traits> __ostream_type")
  (DeclStmt 0x9c6c680 <line:79:7, col:62>
    0x9c6c650 "typedef typename __ostream_type::ios_base __ios_base")
  (DeclStmt 0x9c6c780 <line:81:7, col:52>
    0x9c6c710 "typename __ostream_type::sentry __cerb =
      (ParenListExpr 0x9c6c760 <col:45, col:51> 'typename __ostream_type::sentry'
        (DeclRefExpr 0x9c6c744 <col:46> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9c6c220 '__out' 'basic_ostream<_CharT, _Traits> &'))")
  (IfStmt 0x9c6e9c8 <line:82:7, line:110:2>
    <<<NULL>>>
    (DeclRefExpr 0x9c6c790 <line:82:11> 'typename __ostream_type::sentry' lvalue Var 0x9c6c710 '__cerb' 'typename __ostream_type::sentry')
    (CompoundStmt 0x9c6e9a8 <line:83:2, line:110:2>
      (IfStmt 0x9c6e778 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/ostream_insert.h:102:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9c6c7a8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9c6e758 </usr/include/c++/4.6/bits/ostream_insert.h:85:6, line:102:6>
          (DeclStmt 0x9c6c868 <line:86:8, col:44>
            0x9c6c7c0 "const streamsize __w =
              (CallExpr 0x9c6c848 <col:31, col:43> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9c6c810 <col:31, col:37> '<dependent type>' lvalue
                  (DeclRefExpr 0x9c6c7f4 <col:31> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9c6c220 '__out' 'basic_ostream<_CharT, _Traits> &')))")
          (IfStmt 0x9c6e6b0 <line:87:8, line:100:34>
            <<<NULL>>>
            (BinaryOperator 0x9c6c8c8 <line:87:12, col:18> '_Bool' '>'
              (ImplicitCastExpr 0x9c6c8a8 <col:12> 'streamsize':'int' <LValueToRValue>
                (DeclRefExpr 0x9c6c878 <col:12> 'const streamsize':'const int' lvalue Var 0x9c6c7c0 '__w' 'const streamsize':'const int'))
              (ImplicitCastExpr 0x9c6c8b8 <col:18> 'streamsize':'int' <LValueToRValue>
                (DeclRefExpr 0x9c6c890 <col:18> 'streamsize':'int' lvalue ParmVar 0x9c6c2d0 '__n' 'streamsize':'int')))
            (CompoundStmt 0x9c6e5e8 <line:88:3, line:98:3>
              (DeclStmt 0x9c6e1c0 <line:89:5, line:91:32>
                0x9c6c8f0 "const bool __left =
                  (ParenExpr 0x9c6e1a8 <line:89:25, line:91:31> '<dependent type>'
                    (CXXOperatorCallExpr 0x9c6e180 <line:89:26, line:91:27> '<dependent type>'
                      (UnresolvedLookupExpr 0x9c6e138 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30)
                      (ParenExpr 0x9c6e0d8 <line:89:26, line:90:31> '<dependent type>'
                        (BinaryOperator 0x9c6e0c0 <line:89:27, line:90:20> '<dependent type>' '&'
                          (CallExpr 0x9c6c978 <line:89:27, col:39> '<dependent type>'
                            (CXXDependentScopeMemberExpr 0x9c6c940 <col:27, col:33> '<dependent type>' lvalue
                              (DeclRefExpr 0x9c6c924 <col:27> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9c6c220 '__out' 'basic_ostream<_CharT, _Traits> &')))
                          (DependentScopeDeclRefExpr 0x9c6e098 <line:90:8, col:20> '<dependent type>' lvalue)))
                      (DependentScopeDeclRefExpr 0x9c6e110 <line:91:15, col:27> '<dependent type>' lvalue)))")
              (IfStmt 0x9c6e2f0 <line:92:5, line:93:38>
                <<<NULL>>>
                (UnaryOperator 0x9c6e1f8 <line:92:9, col:10> '_Bool' prefix '!'
                  (ImplicitCastExpr 0x9c6e1e8 <col:10> '_Bool' <LValueToRValue>
                    (DeclRefExpr 0x9c6e1d0 <col:10> 'const _Bool' lvalue Var 0x9c6c8f0 '__left' 'const _Bool')))
                (CallExpr 0x9c6e2c8 <line:93:7, col:38> '<dependent type>'
                  (UnresolvedLookupExpr 0x9c6e210 <col:7> '<overloaded function type>' lvalue (ADL) = '1' 0x9c6b7b0)
                  (DeclRefExpr 0x9c6e244 <col:22> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9c6c220 '__out' 'basic_ostream<_CharT, _Traits> &')
                  (BinaryOperator 0x9c6e2b0 <col:29, col:35> 'int' '-'
                    (ImplicitCastExpr 0x9c6e290 <col:29> 'streamsize':'int' <LValueToRValue>
                      (DeclRefExpr 0x9c6e25c <col:29> 'const streamsize':'const int' lvalue Var 0x9c6c7c0 '__w' 'const streamsize':'const int'))
                    (ImplicitCastExpr 0x9c6e2a0 <col:35> 'streamsize':'int' <LValueToRValue>
                      (DeclRefExpr 0x9c6e274 <col:35> 'streamsize':'int' lvalue ParmVar 0x9c6c2d0 '__n' 'streamsize':'int'))))
                <<<NULL>>>)
              (IfStmt 0x9c6e428 <line:94:5, line:95:38>
                <<<NULL>>>
                (CallExpr 0x9c6e360 <line:94:9, col:20> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9c6e328 <col:9, col:15> '<dependent type>' lvalue
                    (DeclRefExpr 0x9c6e30c <col:9> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9c6c220 '__out' 'basic_ostream<_CharT, _Traits> &')))
                (CallExpr 0x9c6e400 <line:95:7, col:38> '<dependent type>'
                  (UnresolvedLookupExpr 0x9c6e380 <col:7> '<overloaded function type>' lvalue (ADL) = '1' 0x9c6af40)
                  (DeclRefExpr 0x9c6e3b4 <col:23> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9c6c220 '__out' 'basic_ostream<_CharT, _Traits> &')
                  (DeclRefExpr 0x9c6e3cc <col:30> 'const _CharT *' lvalue ParmVar 0x9c6c290 '__s' 'const _CharT *')
                  (DeclRefExpr 0x9c6e3e4 <col:35> 'streamsize':'int' lvalue ParmVar 0x9c6c2d0 '__n' 'streamsize':'int'))
                <<<NULL>>>)
              (IfStmt 0x9c6e5c8 <line:96:5, line:97:38>
                <<<NULL>>>
                (BinaryOperator 0x9c6e4d0 <line:96:9, col:30> '<dependent type>' '&&'
                  (DeclRefExpr 0x9c6e444 <col:9> 'const _Bool' lvalue Var 0x9c6c8f0 '__left' 'const _Bool')
                  (CallExpr 0x9c6e4b0 <col:19, col:30> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9c6e478 <col:19, col:25> '<dependent type>' lvalue
                      (DeclRefExpr 0x9c6e45c <col:19> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9c6c220 '__out' 'basic_ostream<_CharT, _Traits> &'))))
                (CallExpr 0x9c6e5a0 <line:97:7, col:38> '<dependent type>'
                  (UnresolvedLookupExpr 0x9c6e4e8 <col:7> '<overloaded function type>' lvalue (ADL) = '1' 0x9c6b7b0)
                  (DeclRefExpr 0x9c6e51c <col:22> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9c6c220 '__out' 'basic_ostream<_CharT, _Traits> &')
                  (BinaryOperator 0x9c6e588 <col:29, col:35> 'int' '-'
                    (ImplicitCastExpr 0x9c6e568 <col:29> 'streamsize':'int' <LValueToRValue>
                      (DeclRefExpr 0x9c6e534 <col:29> 'const streamsize':'const int' lvalue Var 0x9c6c7c0 '__w' 'const streamsize':'const int'))
                    (ImplicitCastExpr 0x9c6e578 <col:35> 'streamsize':'int' <LValueToRValue>
                      (DeclRefExpr 0x9c6e54c <col:35> 'streamsize':'int' lvalue ParmVar 0x9c6c2d0 '__n' 'streamsize':'int'))))
                <<<NULL>>>))
            (CallExpr 0x9c6e688 <line:100:3, col:34> '<dependent type>'
              (UnresolvedLookupExpr 0x9c6e608 <col:3> '<overloaded function type>' lvalue (ADL) = '1' 0x9c6af40)
              (DeclRefExpr 0x9c6e63c <col:19> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9c6c220 '__out' 'basic_ostream<_CharT, _Traits> &')
              (DeclRefExpr 0x9c6e654 <col:26> 'const _CharT *' lvalue ParmVar 0x9c6c290 '__s' 'const _CharT *')
              (DeclRefExpr 0x9c6e66c <col:31> 'streamsize':'int' lvalue ParmVar 0x9c6c2d0 '__n' 'streamsize':'int')))
          (CallExpr 0x9c6e738 <line:101:8, col:21> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9c6e6e8 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0x9c6e6cc <col:8> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9c6c220 '__out' 'basic_ostream<_CharT, _Traits> &'))
            (IntegerLiteral 0x9c6e720 <col:20> 'int' 0)))
        <<<NULL>>>)
      (IfStmt 0x9c6e888 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream_insert.h:107:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9c6e798 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9c6e870 </usr/include/c++/4.6/bits/ostream_insert.h:104:6, line:107:6>
          (CallExpr 0x9c6e840 <line:105:8, col:44> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9c6e7c0 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0x9c6e7a8 <col:8> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9c6c220 '__out' 'basic_ostream<_CharT, _Traits> &'))
            (DependentScopeDeclRefExpr 0x9c6e818 <col:26, col:38> '<dependent type>' lvalue))
          (NullStmt 0x9c6e860 <line:106:31>))
        <<<NULL>>>)
      (IfStmt 0x9c6e988 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream_insert.h:109:47>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9c6e8a8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9c6e970 </usr/include/c++/4.6/bits/ostream_insert.h:109:6, col:47>
          (CallExpr 0x9c6e950 <col:8, col:44> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9c6e8d0 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0x9c6e8b8 <col:8> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9c6c220 '__out' 'basic_ostream<_CharT, _Traits> &'))
            (DependentScopeDeclRefExpr 0x9c6e928 <col:26, col:38> '<dependent type>' lvalue)))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9c6ea00 <line:111:7, col:14>
    (DeclRefExpr 0x9c6e9e4 <col:14> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9c6c220 '__out' 'basic_ostream<_CharT, _Traits> &')))

;
}
namespace std {
    template <typename _Arg, typename _Result> struct unary_function {
        struct unary_function;
        typedef _Arg argument_type;
        typedef _Result result_type;
    };
    template <typename _Arg1, typename _Arg2, typename _Result> struct binary_function {
        struct binary_function;
        typedef _Arg1 first_argument_type;
        typedef _Arg2 second_argument_type;
        typedef _Result result_type;
    };
    template <typename _Tp> struct plus : public binary_function<_Tp, _Tp, _Tp> {
        struct plus;
        _Tp operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x9c71150 </usr/include/c++/4.6/bits/stl_function.h:145:7, col:27>
  (ReturnStmt 0x9c71140 <col:9, col:22>
    (CXXOperatorCallExpr 0x9c71118 <col:16, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0x9c710e0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0)
      (DeclRefExpr 0x9c710b0 <col:16> 'const _Tp' lvalue ParmVar 0x9c70f40 '__x' 'const _Tp &')
      (DeclRefExpr 0x9c710c8 <col:22> 'const _Tp' lvalue ParmVar 0x9c70f90 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct minus : public binary_function<_Tp, _Tp, _Tp> {
        struct minus;
        _Tp operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x9c71730 </usr/include/c++/4.6/bits/stl_function.h:154:7, col:27>
  (ReturnStmt 0x9c71720 <col:9, col:22>
    (CXXOperatorCallExpr 0x9c716f8 <col:16, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0x9c716c0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
      (DeclRefExpr 0x9c71690 <col:16> 'const _Tp' lvalue ParmVar 0x9c71540 '__x' 'const _Tp &')
      (DeclRefExpr 0x9c716a8 <col:22> 'const _Tp' lvalue ParmVar 0x9c71590 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct multiplies : public binary_function<_Tp, _Tp, _Tp> {
        struct multiplies;
        _Tp operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x9c71cc8 </usr/include/c++/4.6/bits/stl_function.h:163:7, col:27>
  (ReturnStmt 0x9c71cb8 <col:9, col:22>
    (BinaryOperator 0x9c71ca0 <col:16, col:22> '<dependent type>' '*'
      (DeclRefExpr 0x9c71c70 <col:16> 'const _Tp' lvalue ParmVar 0x9c71b20 '__x' 'const _Tp &')
      (DeclRefExpr 0x9c71c88 <col:22> 'const _Tp' lvalue ParmVar 0x9c71b70 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct divides : public binary_function<_Tp, _Tp, _Tp> {
        struct divides;
        _Tp operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x9c72258 </usr/include/c++/4.6/bits/stl_function.h:172:7, col:27>
  (ReturnStmt 0x9c72248 <col:9, col:22>
    (BinaryOperator 0x9c72230 <col:16, col:22> '<dependent type>' '/'
      (DeclRefExpr 0x9c72200 <col:16> 'const _Tp' lvalue ParmVar 0x9c720b0 '__x' 'const _Tp &')
      (DeclRefExpr 0x9c72218 <col:22> 'const _Tp' lvalue ParmVar 0x9c72100 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct modulus : public binary_function<_Tp, _Tp, _Tp> {
        struct modulus;
        _Tp operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x9c727e8 </usr/include/c++/4.6/bits/stl_function.h:181:7, col:27>
  (ReturnStmt 0x9c727d8 <col:9, col:22>
    (BinaryOperator 0x9c727c0 <col:16, col:22> '<dependent type>' '%'
      (DeclRefExpr 0x9c72790 <col:16> 'const _Tp' lvalue ParmVar 0x9c72640 '__x' 'const _Tp &')
      (DeclRefExpr 0x9c727a8 <col:22> 'const _Tp' lvalue ParmVar 0x9c72690 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct negate : public unary_function<_Tp, _Tp> {
        struct negate;
        _Tp operator()(const _Tp &__x) const (CompoundStmt 0x9c75290 </usr/include/c++/4.6/bits/stl_function.h:190:7, col:22>
  (ReturnStmt 0x9c72d70 <col:9, col:17>
    (CXXOperatorCallExpr 0x9c72d50 <col:16, col:17> '<dependent type>'
      (UnresolvedLookupExpr 0x9c72d18 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
      (DeclRefExpr 0x9c72d00 <col:17> 'const _Tp' lvalue ParmVar 0x9c72be0 '__x' 'const _Tp &'))))


    };
    template <typename _Tp> struct equal_to : public binary_function<_Tp, _Tp, bool> {
        struct equal_to;
        bool operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x9c75900 </usr/include/c++/4.6/bits/stl_function.h:209:7, col:28>
  (ReturnStmt 0x9c758f0 <col:9, col:23>
    (CXXOperatorCallExpr 0x9c758c8 <col:16, col:23> '<dependent type>'
      (UnresolvedLookupExpr 0x9c75880 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30)
      (DeclRefExpr 0x9c75850 <col:16> 'const _Tp' lvalue ParmVar 0x9c756e0 '__x' 'const _Tp &')
      (DeclRefExpr 0x9c75868 <col:23> 'const _Tp' lvalue ParmVar 0x9c75730 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct not_equal_to : public binary_function<_Tp, _Tp, bool> {
        struct not_equal_to;
        bool operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x9c75ef0 </usr/include/c++/4.6/bits/stl_function.h:218:7, col:28>
  (ReturnStmt 0x9c75ee0 <col:9, col:23>
    (CXXOperatorCallExpr 0x9c75eb8 <col:16, col:23> '<dependent type>'
      (UnresolvedLookupExpr 0x9c75e70 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bacde0 0x9bc3130 0x9bc62c0 0x9c11360 0x9c32300 0x9c32670)
      (DeclRefExpr 0x9c75e40 <col:16> 'const _Tp' lvalue ParmVar 0x9c75cf0 '__x' 'const _Tp &')
      (DeclRefExpr 0x9c75e58 <col:23> 'const _Tp' lvalue ParmVar 0x9c75d40 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct greater : public binary_function<_Tp, _Tp, bool> {
        struct greater;
        bool operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x9c764d8 </usr/include/c++/4.6/bits/stl_function.h:227:7, col:27>
  (ReturnStmt 0x9c764c8 <col:9, col:22>
    (CXXOperatorCallExpr 0x9c764a0 <col:16, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0x9c76460 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bad330 0x9bc37b0 0x9bc6740)
      (DeclRefExpr 0x9c76430 <col:16> 'const _Tp' lvalue ParmVar 0x9c762e0 '__x' 'const _Tp &')
      (DeclRefExpr 0x9c76448 <col:22> 'const _Tp' lvalue ParmVar 0x9c76330 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct less : public binary_function<_Tp, _Tp, bool> {
        struct less;
        bool operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x9c76ab8 </usr/include/c++/4.6/bits/stl_function.h:236:7, col:27>
  (ReturnStmt 0x9c76aa8 <col:9, col:22>
    (CXXOperatorCallExpr 0x9c76a80 <col:16, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0x9c76a40 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bac3c0 0x9bc2c90 0x9bc5590)
      (DeclRefExpr 0x9c76a10 <col:16> 'const _Tp' lvalue ParmVar 0x9c768c0 '__x' 'const _Tp &')
      (DeclRefExpr 0x9c76a28 <col:22> 'const _Tp' lvalue ParmVar 0x9c76910 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct greater_equal : public binary_function<_Tp, _Tp, bool> {
        struct greater_equal;
        bool operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x9c77098 </usr/include/c++/4.6/bits/stl_function.h:245:7, col:28>
  (ReturnStmt 0x9c77088 <col:9, col:23>
    (CXXOperatorCallExpr 0x9c77060 <col:16, col:23> '<dependent type>'
      (UnresolvedLookupExpr 0x9c77020 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bae1e0 0x9bc3fc0 0x9bc7850)
      (DeclRefExpr 0x9c76ff0 <col:16> 'const _Tp' lvalue ParmVar 0x9c76ea0 '__x' 'const _Tp &')
      (DeclRefExpr 0x9c77008 <col:23> 'const _Tp' lvalue ParmVar 0x9c76ef0 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct less_equal : public binary_function<_Tp, _Tp, bool> {
        struct less_equal;
        bool operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x9c798f8 </usr/include/c++/4.6/bits/stl_function.h:254:7, col:28>
  (ReturnStmt 0x9c798e8 <col:9, col:23>
    (CXXOperatorCallExpr 0x9c798c0 <col:16, col:23> '<dependent type>'
      (UnresolvedLookupExpr 0x9c79880 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9badc90 0x9bc3ba0 0x9bc6b90)
      (DeclRefExpr 0x9c79850 <col:16> 'const _Tp' lvalue ParmVar 0x9c79700 '__x' 'const _Tp &')
      (DeclRefExpr 0x9c79868 <col:23> 'const _Tp' lvalue ParmVar 0x9c79750 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct logical_and : public binary_function<_Tp, _Tp, bool> {
        struct logical_and;
        bool operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x9c79e88 </usr/include/c++/4.6/bits/stl_function.h:273:7, col:28>
  (ReturnStmt 0x9c79e78 <col:9, col:23>
    (BinaryOperator 0x9c79e60 <col:16, col:23> '<dependent type>' '&&'
      (DeclRefExpr 0x9c79e30 <col:16> 'const _Tp' lvalue ParmVar 0x9c79ce0 '__x' 'const _Tp &')
      (DeclRefExpr 0x9c79e48 <col:23> 'const _Tp' lvalue ParmVar 0x9c79d30 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct logical_or : public binary_function<_Tp, _Tp, bool> {
        struct logical_or;
        bool operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x9c7a418 </usr/include/c++/4.6/bits/stl_function.h:282:7, col:28>
  (ReturnStmt 0x9c7a408 <col:9, col:23>
    (BinaryOperator 0x9c7a3f0 <col:16, col:23> '<dependent type>' '||'
      (DeclRefExpr 0x9c7a3c0 <col:16> 'const _Tp' lvalue ParmVar 0x9c7a270 '__x' 'const _Tp &')
      (DeclRefExpr 0x9c7a3d8 <col:23> 'const _Tp' lvalue ParmVar 0x9c7a2c0 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct logical_not : public unary_function<_Tp, bool> {
        struct logical_not;
        bool operator()(const _Tp &__x) const (CompoundStmt 0x9c7a970 </usr/include/c++/4.6/bits/stl_function.h:291:7, col:22>
  (ReturnStmt 0x9c7a960 <col:9, col:17>
    (UnaryOperator 0x9c7a948 <col:16, col:17> '<dependent type>' prefix '!'
      (DeclRefExpr 0x9c7a930 <col:17> 'const _Tp' lvalue ParmVar 0x9c7a810 '__x' 'const _Tp &'))))


    };
    template <typename _Tp> struct bit_and : public binary_function<_Tp, _Tp, _Tp> {
        struct bit_and;
        _Tp operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x9c7af08 </usr/include/c++/4.6/bits/stl_function.h:302:7, col:27>
  (ReturnStmt 0x9c7aef8 <col:9, col:22>
    (BinaryOperator 0x9c7aee0 <col:16, col:22> '<dependent type>' '&'
      (DeclRefExpr 0x9c7aeb0 <col:16> 'const _Tp' lvalue ParmVar 0x9c7ad60 '__x' 'const _Tp &')
      (DeclRefExpr 0x9c7aec8 <col:22> 'const _Tp' lvalue ParmVar 0x9c7adb0 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct bit_or : public binary_function<_Tp, _Tp, _Tp> {
        struct bit_or;
        _Tp operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x9c7b498 </usr/include/c++/4.6/bits/stl_function.h:310:7, col:27>
  (ReturnStmt 0x9c7b488 <col:9, col:22>
    (BinaryOperator 0x9c7b470 <col:16, col:22> '<dependent type>' '|'
      (DeclRefExpr 0x9c7b440 <col:16> 'const _Tp' lvalue ParmVar 0x9c7b2f0 '__x' 'const _Tp &')
      (DeclRefExpr 0x9c7b458 <col:22> 'const _Tp' lvalue ParmVar 0x9c7b340 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct bit_xor : public binary_function<_Tp, _Tp, _Tp> {
        struct bit_xor;
        _Tp operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x9c7ded8 </usr/include/c++/4.6/bits/stl_function.h:318:7, col:27>
  (ReturnStmt 0x9c7dec8 <col:9, col:22>
    (BinaryOperator 0x9c7deb0 <col:16, col:22> '<dependent type>' '^'
      (DeclRefExpr 0x9c7de80 <col:16> 'const _Tp' lvalue ParmVar 0x9c7dd30 '__x' 'const _Tp &')
      (DeclRefExpr 0x9c7de98 <col:22> 'const _Tp' lvalue ParmVar 0x9c7dd80 '__y' 'const _Tp &'))))


    };
    template <typename _Predicate> class unary_negate : public unary_function<typename _Predicate::argument_type, bool> {
        class unary_negate;
    protected:
    protected:
        _Predicate _M_pred;
    public:
    public:
        unary_negate<_Predicate>(const _Predicate &__x) : _M_pred((DeclRefExpr 0x9c7e694 </usr/include/c++/4.6/bits/stl_function.h:360:53> 'const _Predicate' lvalue ParmVar 0x9c7e410 '__x' 'const _Predicate &')
) (CompoundStmt 0x9c7e6f0 </usr/include/c++/4.6/bits/stl_function.h:360:58, col:60>)


        bool operator()(const typename _Predicate::argument_type &__x) const (CompoundStmt 0x9c7e7c8 </usr/include/c++/4.6/bits/stl_function.h:364:7, col:31>
  (ReturnStmt 0x9c7e7b8 <col:9, col:28>
    (UnaryOperator 0x9c7e7a0 <col:16, col:28> '<dependent type>' prefix '!'
      (CallExpr 0x9c7e780 <col:17, col:28> '<dependent type>'
        (MemberExpr 0x9c7e744 <col:17> 'const _Predicate' lvalue ->_M_pred 0x9c7e370
          (CXXThisExpr 0x9c7e718 <col:17> 'const unary_negate<_Predicate> *' this))
        (DeclRefExpr 0x9c7e764 <col:25> 'const typename _Predicate::argument_type' lvalue ParmVar 0x9c7e590 '__x' 'const typename _Predicate::argument_type &')))))


    };
    template <typename _Predicate> inline unary_negate<_Predicate> not1(const _Predicate &__pred) (CompoundStmt 0x9c7eb28 </usr/include/c++/4.6/bits/stl_function.h:371:5, col:48>
  (ReturnStmt 0x9c7eb18 <col:7, col:45>
    (CXXUnresolvedConstructExpr 0x9c7eaf8 <col:14, col:45> 'unary_negate<_Predicate>'
      (DeclRefExpr 0x9c7eae0 <col:39> 'const _Predicate' lvalue ParmVar 0x9c7e8f0 '__pred' 'const _Predicate &'))))

;
    template <typename _Predicate> class binary_negate : public binary_function<typename _Predicate::first_argument_type, typename _Predicate::second_argument_type, bool> {
        class binary_negate;
    protected:
    protected:
        _Predicate _M_pred;
    public:
    public:
        binary_negate<_Predicate>(const _Predicate &__x) : _M_pred((DeclRefExpr 0x9c7f458 </usr/include/c++/4.6/bits/stl_function.h:384:54> 'const _Predicate' lvalue ParmVar 0x9c7f120 '__x' 'const _Predicate &')
) (CompoundStmt 0x9c7f4b0 </usr/include/c++/4.6/bits/stl_function.h:384:59, col:61>)


        bool operator()(const typename _Predicate::first_argument_type &__x, const typename _Predicate::second_argument_type &__y) const (CompoundStmt 0x9c7f5a8 </usr/include/c++/4.6/bits/stl_function.h:389:7, col:36>
  (ReturnStmt 0x9c7f598 <col:9, col:33>
    (UnaryOperator 0x9c7f580 <col:16, col:33> '<dependent type>' prefix '!'
      (CallExpr 0x9c7f558 <col:17, col:33> '<dependent type>'
        (MemberExpr 0x9c7f504 <col:17> 'const _Predicate' lvalue ->_M_pred 0x9c7f080
          (CXXThisExpr 0x9c7f4d8 <col:17> 'const binary_negate<_Predicate> *' this))
        (DeclRefExpr 0x9c7f524 <col:25> 'const typename _Predicate::first_argument_type' lvalue ParmVar 0x9c7f2a0 '__x' 'const typename _Predicate::first_argument_type &')
        (DeclRefExpr 0x9c7f53c <col:30> 'const typename _Predicate::second_argument_type' lvalue ParmVar 0x9c7f350 '__y' 'const typename _Predicate::second_argument_type &')))))


    };
    template <typename _Predicate> inline binary_negate<_Predicate> not2(const _Predicate &__pred) (CompoundStmt 0x9c7f908 </usr/include/c++/4.6/bits/stl_function.h:396:5, col:49>
  (ReturnStmt 0x9c7f8f8 <col:7, col:46>
    (CXXUnresolvedConstructExpr 0x9c7f8d8 <col:14, col:46> 'binary_negate<_Predicate>'
      (DeclRefExpr 0x9c7f8c0 <col:40> 'const _Predicate' lvalue ParmVar 0x9c7f6d0 '__pred' 'const _Predicate &'))))

;
    template <typename _Arg, typename _Result> class pointer_to_unary_function : public unary_function<_Arg, _Result> {
        class pointer_to_unary_function;
    protected:
    protected:
        _Result (*_M_ptr)(_Arg);
    public:
    public:
        pointer_to_unary_function<_Arg, _Result>() (CompoundStmt 0x9c81d28 </usr/include/c++/4.6/bits/stl_function.h:429:35, col:37>)


        pointer_to_unary_function<_Arg, _Result>(_Result (*__x)(_Arg)) : _M_ptr((DeclRefExpr 0x9c81d38 </usr/include/c++/4.6/bits/stl_function.h:433:16> '_Result (*)(_Arg)' lvalue ParmVar 0x9c81b00 '__x' '_Result (*)(_Arg)')
) (CompoundStmt 0x9c81d90 </usr/include/c++/4.6/bits/stl_function.h:433:21, col:23>)


        _Result operator()(_Arg __x) const (CompoundStmt 0x9c81e50 </usr/include/c++/4.6/bits/stl_function.h:437:7, col:29>
  (ReturnStmt 0x9c81e40 <col:9, col:26>
    (CallExpr 0x9c81e20 <col:16, col:26> '<dependent type>'
      (MemberExpr 0x9c81de4 <col:16> '_Result (*const)(_Arg)' lvalue ->_M_ptr 0x9c81990
        (CXXThisExpr 0x9c81db8 <col:16> 'const pointer_to_unary_function<_Arg, _Result> *' this))
      (DeclRefExpr 0x9c81e04 <col:23> '_Arg' lvalue ParmVar 0x9c81c20 '__x' '_Arg'))))


    };
    template <typename _Arg, typename _Result> inline pointer_to_unary_function<_Arg, _Result> ptr_fun(_Result (*__x)(_Arg)) (CompoundStmt 0x9c82360 </usr/include/c++/4.6/bits/stl_function.h:444:5, col:61>
  (ReturnStmt 0x9c82350 <col:7, col:58>
    (CXXUnresolvedConstructExpr 0x9c82330 <col:14, col:58> 'pointer_to_unary_function<_Arg, _Result>'
      (DeclRefExpr 0x9c82318 <col:55> '_Result (*)(_Arg)' lvalue ParmVar 0x9c820c0 '__x' '_Result (*)(_Arg)'))))

;
    template <typename _Arg1, typename _Arg2, typename _Result> class pointer_to_binary_function : public binary_function<_Arg1, _Arg2, _Result> {
        class pointer_to_binary_function;
    protected:
    protected:
        _Result (*_M_ptr)(_Arg1, _Arg2);
    public:
    public:
        pointer_to_binary_function<_Arg1, _Arg2, _Result>() (CompoundStmt 0x9c82dc8 </usr/include/c++/4.6/bits/stl_function.h:455:36, col:38>)


        pointer_to_binary_function<_Arg1, _Arg2, _Result>(_Result (*__x)(_Arg1, _Arg2)) : _M_ptr((DeclRefExpr 0x9c82dd8 </usr/include/c++/4.6/bits/stl_function.h:459:16> '_Result (*)(_Arg1, _Arg2)' lvalue ParmVar 0x9c82b60 '__x' '_Result (*)(_Arg1, _Arg2)')
) (CompoundStmt 0x9c82e30 </usr/include/c++/4.6/bits/stl_function.h:459:21, col:23>)


        _Result operator()(_Arg1 __x, _Arg2 __y) const (CompoundStmt 0x9c82f10 </usr/include/c++/4.6/bits/stl_function.h:463:7, col:34>
  (ReturnStmt 0x9c82f00 <col:9, col:31>
    (CallExpr 0x9c82ed8 <col:16, col:31> '<dependent type>'
      (MemberExpr 0x9c82e84 <col:16> '_Result (*const)(_Arg1, _Arg2)' lvalue ->_M_ptr 0x9c829b0
        (CXXThisExpr 0x9c82e58 <col:16> 'const pointer_to_binary_function<_Arg1, _Arg2, _Result> *' this))
      (DeclRefExpr 0x9c82ea4 <col:23> '_Arg1' lvalue ParmVar 0x9c82c80 '__x' '_Arg1')
      (DeclRefExpr 0x9c82ebc <col:28> '_Arg2' lvalue ParmVar 0x9c82cc0 '__y' '_Arg2'))))


    };
    template <typename _Arg1, typename _Arg2, typename _Result> inline pointer_to_binary_function<_Arg1, _Arg2, _Result> ptr_fun(_Result (*__x)(_Arg1, _Arg2)) (CompoundStmt 0x9c84198 </usr/include/c++/4.6/bits/stl_function.h:470:5, col:70>
  (ReturnStmt 0x9c84188 <col:7, col:67>
    (CXXUnresolvedConstructExpr 0x9c84168 <col:14, col:67> 'pointer_to_binary_function<_Arg1, _Arg2, _Result>'
      (DeclRefExpr 0x9c84150 <col:64> '_Result (*)(_Arg1, _Arg2)' lvalue ParmVar 0x9c83260 '__x' '_Result (*)(_Arg1, _Arg2)'))))

;
    template <typename _Tp> struct _Identity : public unary_function<_Tp, _Tp> {
        struct _Identity;
        _Tp &operator()(_Tp &__x) const (CompoundStmt 0x9c847c8 </usr/include/c++/4.6/bits/stl_function.h:478:7, col:21>
  (ReturnStmt 0x9c847b8 <col:9, col:16>
    (DeclRefExpr 0x9c847a0 <col:16> '_Tp' lvalue ParmVar 0x9c84540 '__x' '_Tp &')))


        const _Tp &operator()(const _Tp &__x) const (CompoundStmt 0x9c84808 </usr/include/c++/4.6/bits/stl_function.h:482:7, col:21>
  (ReturnStmt 0x9c847f8 <col:9, col:16>
    (DeclRefExpr 0x9c847dc <col:16> 'const _Tp' lvalue ParmVar 0x9c84680 '__x' 'const _Tp &')))


    };
    template <typename _Pair> struct _Select1st : public unary_function<_Pair, typename _Pair::first_type> {
        struct _Select1st;
        typename _Pair::first_type &operator()(_Pair &__x) const (CompoundStmt 0x9c85030 </usr/include/c++/4.6/bits/stl_function.h:491:7, col:27>
  (ReturnStmt 0x9c85020 <col:9, col:20>
    (CXXDependentScopeMemberExpr 0x9c84fe8 <col:16, col:20> '<dependent type>' lvalue
      (DeclRefExpr 0x9c84fd0 <col:16> '_Pair' lvalue ParmVar 0x9c84cb0 '__x' '_Pair &'))))


        const typename _Pair::first_type &operator()(const _Pair &__x) const (CompoundStmt 0x9c850a8 </usr/include/c++/4.6/bits/stl_function.h:495:7, col:27>
  (ReturnStmt 0x9c85098 <col:9, col:20>
    (CXXDependentScopeMemberExpr 0x9c85060 <col:16, col:20> '<dependent type>' lvalue
      (DeclRefExpr 0x9c85044 <col:16> 'const _Pair' lvalue ParmVar 0x9c84e60 '__x' 'const _Pair &'))))


    };
    template <typename _Pair> struct _Select2nd : public unary_function<_Pair, typename _Pair::second_type> {
        struct _Select2nd;
        typename _Pair::second_type &operator()(_Pair &__x) const (CompoundStmt 0x9c858d0 </usr/include/c++/4.6/bits/stl_function.h:516:7, col:28>
  (ReturnStmt 0x9c858c0 <col:9, col:20>
    (CXXDependentScopeMemberExpr 0x9c85888 <col:16, col:20> '<dependent type>' lvalue
      (DeclRefExpr 0x9c85870 <col:16> '_Pair' lvalue ParmVar 0x9c85550 '__x' '_Pair &'))))


        const typename _Pair::second_type &operator()(const _Pair &__x) const (CompoundStmt 0x9c85948 </usr/include/c++/4.6/bits/stl_function.h:520:7, col:28>
  (ReturnStmt 0x9c85938 <col:9, col:20>
    (CXXDependentScopeMemberExpr 0x9c85900 <col:16, col:20> '<dependent type>' lvalue
      (DeclRefExpr 0x9c858e4 <col:16> 'const _Pair' lvalue ParmVar 0x9c85700 '__x' 'const _Pair &'))))


    };
    template <typename _Ret, typename _Tp> class mem_fun_t : public unary_function<_Tp *, _Ret> {
        class mem_fun_t;
    public:
    public:
        mem_fun_t<_Ret, _Tp>(_Ret (_Tp::*__pf)()) : _M_f((DeclRefExpr 0x9be0c30 </usr/include/c++/4.6/bits/stl_function.h:547:14> '_Ret (_Tp::*)(void)' lvalue ParmVar 0x9c85ef0 '__pf' '_Ret (_Tp::*)(void)')
) (CompoundStmt 0x9be0c90 </usr/include/c++/4.6/bits/stl_function.h:547:20, col:22>)


        _Ret operator()(_Tp *__p) const (CompoundStmt 0x9be0d88 </usr/include/c++/4.6/bits/stl_function.h:551:7, col:32>
  (ReturnStmt 0x9be0d78 <col:9, col:29>
    (CallExpr 0x9be0d58 <col:16, col:29> '<dependent type>'
      (ParenExpr 0x9be0d40 <col:16, col:27> '<dependent type>'
        (BinaryOperator 0x9be0d28 <col:17, col:23> '<dependent type>' '->*'
          (DeclRefExpr 0x9be0ca0 <col:17> '_Tp *' lvalue ParmVar 0x9c86020 '__p' '_Tp *')
          (MemberExpr 0x9be0d04 <col:23> '_Ret (_Tp::*const)(void)' lvalue ->_M_f 0x9be0c00
            (CXXThisExpr 0x9be0cd8 <col:23> 'const mem_fun_t<_Ret, _Tp> *' this)))))))


    private:
    private:
        _Ret (_Tp::*_M_f)();
    };
    template <typename _Ret, typename _Tp> class const_mem_fun_t : public unary_function<const _Tp *, _Ret> {
        class const_mem_fun_t;
    public:
    public:
        const_mem_fun_t<_Ret, _Tp>(_Ret (_Tp::*__pf)() const) : _M_f((DeclRefExpr 0x9be1600 </usr/include/c++/4.6/bits/stl_function.h:565:14> '_Ret (_Tp::*)(void) const' lvalue ParmVar 0x9be1310 '__pf' '_Ret (_Tp::*)(void) const')
) (CompoundStmt 0x9be1660 </usr/include/c++/4.6/bits/stl_function.h:565:20, col:22>)


        _Ret operator()(const _Tp *__p) const (CompoundStmt 0x9be1758 </usr/include/c++/4.6/bits/stl_function.h:569:7, col:32>
  (ReturnStmt 0x9be1748 <col:9, col:29>
    (CallExpr 0x9be1728 <col:16, col:29> '<dependent type>'
      (ParenExpr 0x9be1710 <col:16, col:27> '<dependent type>'
        (BinaryOperator 0x9be16f8 <col:17, col:23> '<dependent type>' '->*'
          (DeclRefExpr 0x9be1670 <col:17> 'const _Tp *' lvalue ParmVar 0x9be1440 '__p' 'const _Tp *')
          (MemberExpr 0x9be16d4 <col:23> '_Ret (_Tp::*const)(void) const' lvalue ->_M_f 0x9be15d0
            (CXXThisExpr 0x9be16a8 <col:23> 'const const_mem_fun_t<_Ret, _Tp> *' this)))))))


    private:
    private:
        _Ret (_Tp::*_M_f)() const;
    };
    template <typename _Ret, typename _Tp> class mem_fun_ref_t : public unary_function<_Tp, _Ret> {
        class mem_fun_ref_t;
    public:
    public:
        mem_fun_ref_t<_Ret, _Tp>(_Ret (_Tp::*__pf)()) : _M_f((DeclRefExpr 0x9be1f90 </usr/include/c++/4.6/bits/stl_function.h:583:14> '_Ret (_Tp::*)(void)' lvalue ParmVar 0x9be1ca0 '__pf' '_Ret (_Tp::*)(void)')
) (CompoundStmt 0x9be1ff0 </usr/include/c++/4.6/bits/stl_function.h:583:20, col:22>)


        _Ret operator()(_Tp &__r) const (CompoundStmt 0x9be20e8 </usr/include/c++/4.6/bits/stl_function.h:587:7, col:31>
  (ReturnStmt 0x9be20d8 <col:9, col:28>
    (CallExpr 0x9be20b8 <col:16, col:28> '<dependent type>'
      (ParenExpr 0x9be20a0 <col:16, col:26> '<dependent type>'
        (BinaryOperator 0x9be2088 <col:17, col:22> '<dependent type>' '.*'
          (DeclRefExpr 0x9be2000 <col:17> '_Tp' lvalue ParmVar 0x9be1dd0 '__r' '_Tp &')
          (MemberExpr 0x9be2064 <col:22> '_Ret (_Tp::*const)(void)' lvalue ->_M_f 0x9be1f60
            (CXXThisExpr 0x9be2038 <col:22> 'const mem_fun_ref_t<_Ret, _Tp> *' this)))))))


    private:
    private:
        _Ret (_Tp::*_M_f)();
    };
    template <typename _Ret, typename _Tp> class const_mem_fun_ref_t : public unary_function<_Tp, _Ret> {
        class const_mem_fun_ref_t;
    public:
    public:
        const_mem_fun_ref_t<_Ret, _Tp>(_Ret (_Tp::*__pf)() const) : _M_f((DeclRefExpr 0x9be28d0 </usr/include/c++/4.6/bits/stl_function.h:601:14> '_Ret (_Tp::*)(void) const' lvalue ParmVar 0x9be25e0 '__pf' '_Ret (_Tp::*)(void) const')
) (CompoundStmt 0x9be2930 </usr/include/c++/4.6/bits/stl_function.h:601:20, col:22>)


        _Ret operator()(const _Tp &__r) const (CompoundStmt 0x9be2a28 </usr/include/c++/4.6/bits/stl_function.h:605:7, col:31>
  (ReturnStmt 0x9be2a18 <col:9, col:28>
    (CallExpr 0x9be29f8 <col:16, col:28> '<dependent type>'
      (ParenExpr 0x9be29e0 <col:16, col:26> '<dependent type>'
        (BinaryOperator 0x9be29c8 <col:17, col:22> '<dependent type>' '.*'
          (DeclRefExpr 0x9be2940 <col:17> 'const _Tp' lvalue ParmVar 0x9be2710 '__r' 'const _Tp &')
          (MemberExpr 0x9be29a4 <col:22> '_Ret (_Tp::*const)(void) const' lvalue ->_M_f 0x9be28a0
            (CXXThisExpr 0x9be2978 <col:22> 'const const_mem_fun_ref_t<_Ret, _Tp> *' this)))))))


    private:
    private:
        _Ret (_Tp::*_M_f)() const;
    };
    template <typename _Ret, typename _Tp, typename _Arg> class mem_fun1_t : public binary_function<_Tp *, _Arg, _Ret> {
        class mem_fun1_t;
    public:
    public:
        mem_fun1_t<_Ret, _Tp, _Arg>(_Ret (_Tp::*__pf)(_Arg)) : _M_f((DeclRefExpr 0x9c8f890 </usr/include/c++/4.6/bits/stl_function.h:619:14> '_Ret (_Tp::*)(_Arg)' lvalue ParmVar 0x9c8f520 '__pf' '_Ret (_Tp::*)(_Arg)')
) (CompoundStmt 0x9c8f8f0 </usr/include/c++/4.6/bits/stl_function.h:619:20, col:22>)


        _Ret operator()(_Tp *__p, _Arg __x) const (CompoundStmt 0x9c8fa00 </usr/include/c++/4.6/bits/stl_function.h:623:7, col:35>
  (ReturnStmt 0x9c8f9f0 <col:9, col:32>
    (CallExpr 0x9c8f9d0 <col:16, col:32> '<dependent type>'
      (ParenExpr 0x9c8f9a0 <col:16, col:27> '<dependent type>'
        (BinaryOperator 0x9c8f988 <col:17, col:23> '<dependent type>' '->*'
          (DeclRefExpr 0x9c8f900 <col:17> '_Tp *' lvalue ParmVar 0x9c8f650 '__p' '_Tp *')
          (MemberExpr 0x9c8f964 <col:23> '_Ret (_Tp::*const)(_Arg)' lvalue ->_M_f 0x9c8f860
            (CXXThisExpr 0x9c8f938 <col:23> 'const mem_fun1_t<_Ret, _Tp, _Arg> *' this))))
      (DeclRefExpr 0x9c8f9b4 <col:29> '_Arg' lvalue ParmVar 0x9c8f690 '__x' '_Arg'))))


    private:
    private:
        _Ret (_Tp::*_M_f)(_Arg);
    };
    template <typename _Ret, typename _Tp, typename _Arg> class const_mem_fun1_t : public binary_function<const _Tp *, _Arg, _Ret> {
        class const_mem_fun1_t;
    public:
    public:
        const_mem_fun1_t<_Ret, _Tp, _Arg>(_Ret (_Tp::*__pf)(_Arg) const) : _M_f((DeclRefExpr 0x9c90430 </usr/include/c++/4.6/bits/stl_function.h:637:14> '_Ret (_Tp::*)(_Arg) const' lvalue ParmVar 0x9c900c0 '__pf' '_Ret (_Tp::*)(_Arg) const')
) (CompoundStmt 0x9c90490 </usr/include/c++/4.6/bits/stl_function.h:637:20, col:22>)


        _Ret operator()(const _Tp *__p, _Arg __x) const (CompoundStmt 0x9c905a0 </usr/include/c++/4.6/bits/stl_function.h:641:7, col:35>
  (ReturnStmt 0x9c90590 <col:9, col:32>
    (CallExpr 0x9c90570 <col:16, col:32> '<dependent type>'
      (ParenExpr 0x9c90540 <col:16, col:27> '<dependent type>'
        (BinaryOperator 0x9c90528 <col:17, col:23> '<dependent type>' '->*'
          (DeclRefExpr 0x9c904a0 <col:17> 'const _Tp *' lvalue ParmVar 0x9c901f0 '__p' 'const _Tp *')
          (MemberExpr 0x9c90504 <col:23> '_Ret (_Tp::*const)(_Arg) const' lvalue ->_M_f 0x9c90400
            (CXXThisExpr 0x9c904d8 <col:23> 'const const_mem_fun1_t<_Ret, _Tp, _Arg> *' this))))
      (DeclRefExpr 0x9c90554 <col:29> '_Arg' lvalue ParmVar 0x9c90230 '__x' '_Arg'))))


    private:
    private:
        _Ret (_Tp::*_M_f)(_Arg) const;
    };
    template <typename _Ret, typename _Tp, typename _Arg> class mem_fun1_ref_t : public binary_function<_Tp, _Arg, _Ret> {
        class mem_fun1_ref_t;
    public:
    public:
        mem_fun1_ref_t<_Ret, _Tp, _Arg>(_Ret (_Tp::*__pf)(_Arg)) : _M_f((DeclRefExpr 0x9c91910 </usr/include/c++/4.6/bits/stl_function.h:655:14> '_Ret (_Tp::*)(_Arg)' lvalue ParmVar 0x9c90c00 '__pf' '_Ret (_Tp::*)(_Arg)')
) (CompoundStmt 0x9c91970 </usr/include/c++/4.6/bits/stl_function.h:655:20, col:22>)


        _Ret operator()(_Tp &__r, _Arg __x) const (CompoundStmt 0x9c91a80 </usr/include/c++/4.6/bits/stl_function.h:659:7, col:34>
  (ReturnStmt 0x9c91a70 <col:9, col:31>
    (CallExpr 0x9c91a50 <col:16, col:31> '<dependent type>'
      (ParenExpr 0x9c91a20 <col:16, col:26> '<dependent type>'
        (BinaryOperator 0x9c91a08 <col:17, col:22> '<dependent type>' '.*'
          (DeclRefExpr 0x9c91980 <col:17> '_Tp' lvalue ParmVar 0x9c90d30 '__r' '_Tp &')
          (MemberExpr 0x9c919e4 <col:22> '_Ret (_Tp::*const)(_Arg)' lvalue ->_M_f 0x9c918e0
            (CXXThisExpr 0x9c919b8 <col:22> 'const mem_fun1_ref_t<_Ret, _Tp, _Arg> *' this))))
      (DeclRefExpr 0x9c91a34 <col:28> '_Arg' lvalue ParmVar 0x9c90d70 '__x' '_Arg'))))


    private:
    private:
        _Ret (_Tp::*_M_f)(_Arg);
    };
    template <typename _Ret, typename _Tp, typename _Arg> class const_mem_fun1_ref_t : public binary_function<_Tp, _Arg, _Ret> {
        class const_mem_fun1_ref_t;
    public:
    public:
        const_mem_fun1_ref_t<_Ret, _Tp, _Arg>(_Ret (_Tp::*__pf)(_Arg) const) : _M_f((DeclRefExpr 0x9c923f0 </usr/include/c++/4.6/bits/stl_function.h:673:14> '_Ret (_Tp::*)(_Arg) const' lvalue ParmVar 0x9c92080 '__pf' '_Ret (_Tp::*)(_Arg) const')
) (CompoundStmt 0x9c92450 </usr/include/c++/4.6/bits/stl_function.h:673:20, col:22>)


        _Ret operator()(const _Tp &__r, _Arg __x) const (CompoundStmt 0x9c92560 </usr/include/c++/4.6/bits/stl_function.h:677:7, col:34>
  (ReturnStmt 0x9c92550 <col:9, col:31>
    (CallExpr 0x9c92530 <col:16, col:31> '<dependent type>'
      (ParenExpr 0x9c92500 <col:16, col:26> '<dependent type>'
        (BinaryOperator 0x9c924e8 <col:17, col:22> '<dependent type>' '.*'
          (DeclRefExpr 0x9c92460 <col:17> 'const _Tp' lvalue ParmVar 0x9c921b0 '__r' 'const _Tp &')
          (MemberExpr 0x9c924c4 <col:22> '_Ret (_Tp::*const)(_Arg) const' lvalue ->_M_f 0x9c923c0
            (CXXThisExpr 0x9c92498 <col:22> 'const const_mem_fun1_ref_t<_Ret, _Tp, _Arg> *' this))))
      (DeclRefExpr 0x9c92514 <col:28> '_Arg' lvalue ParmVar 0x9c921f0 '__x' '_Arg'))))


    private:
    private:
        _Ret (_Tp::*_M_f)(_Arg) const;
    };
    template <typename _Ret, typename _Tp> inline mem_fun_t<_Ret, _Tp> mem_fun(_Ret (_Tp::*__f)()) (CompoundStmt 0x9c92a60 </usr/include/c++/4.6/bits/stl_function.h:688:5, col:41>
  (ReturnStmt 0x9c92a50 <col:7, col:38>
    (CXXUnresolvedConstructExpr 0x9c92a30 <col:14, col:38> 'mem_fun_t<_Ret, _Tp>'
      (DeclRefExpr 0x9c92a18 <col:35> '_Ret (_Tp::*)(void)' lvalue ParmVar 0x9c927c0 '__f' '_Ret (_Tp::*)(void)'))))

;
    template <typename _Ret, typename _Tp> inline const_mem_fun_t<_Ret, _Tp> mem_fun(_Ret (_Tp::*__f)() const) (CompoundStmt 0x9c92f60 </usr/include/c++/4.6/bits/stl_function.h:693:5, col:47>
  (ReturnStmt 0x9c92f50 <col:7, col:44>
    (CXXUnresolvedConstructExpr 0x9c92f30 <col:14, col:44> 'const_mem_fun_t<_Ret, _Tp>'
      (DeclRefExpr 0x9c92f18 <col:41> '_Ret (_Tp::*)(void) const' lvalue ParmVar 0x9c92cc0 '__f' '_Ret (_Tp::*)(void) const'))))

;
    template <typename _Ret, typename _Tp> inline mem_fun_ref_t<_Ret, _Tp> mem_fun_ref(_Ret (_Tp::*__f)()) (CompoundStmt 0x9c93460 </usr/include/c++/4.6/bits/stl_function.h:698:5, col:45>
  (ReturnStmt 0x9c93450 <col:7, col:42>
    (CXXUnresolvedConstructExpr 0x9c93430 <col:14, col:42> 'mem_fun_ref_t<_Ret, _Tp>'
      (DeclRefExpr 0x9c93418 <col:39> '_Ret (_Tp::*)(void)' lvalue ParmVar 0x9c931c0 '__f' '_Ret (_Tp::*)(void)'))))

;
    template <typename _Ret, typename _Tp> inline const_mem_fun_ref_t<_Ret, _Tp> mem_fun_ref(_Ret (_Tp::*__f)() const) (CompoundStmt 0x9c94ed0 </usr/include/c++/4.6/bits/stl_function.h:703:5, col:51>
  (ReturnStmt 0x9c94ec0 <col:7, col:48>
    (CXXUnresolvedConstructExpr 0x9c94ea0 <col:14, col:48> 'const_mem_fun_ref_t<_Ret, _Tp>'
      (DeclRefExpr 0x9c94e88 <col:45> '_Ret (_Tp::*)(void) const' lvalue ParmVar 0x9c936c0 '__f' '_Ret (_Tp::*)(void) const'))))

;
    template <typename _Ret, typename _Tp, typename _Arg> inline mem_fun1_t<_Ret, _Tp, _Arg> mem_fun(_Ret (_Tp::*__f)(_Arg)) (CompoundStmt 0x9c95518 </usr/include/c++/4.6/bits/stl_function.h:708:5, col:48>
  (ReturnStmt 0x9c95508 <col:7, col:45>
    (CXXUnresolvedConstructExpr 0x9c954e8 <col:14, col:45> 'mem_fun1_t<_Ret, _Tp, _Arg>'
      (DeclRefExpr 0x9c954d0 <col:42> '_Ret (_Tp::*)(_Arg)' lvalue ParmVar 0x9c95210 '__f' '_Ret (_Tp::*)(_Arg)'))))

;
    template <typename _Ret, typename _Tp, typename _Arg> inline const_mem_fun1_t<_Ret, _Tp, _Arg> mem_fun(_Ret (_Tp::*__f)(_Arg) const) (CompoundStmt 0x9c95b58 </usr/include/c++/4.6/bits/stl_function.h:713:5, col:54>
  (ReturnStmt 0x9c95b48 <col:7, col:51>
    (CXXUnresolvedConstructExpr 0x9c95b28 <col:14, col:51> 'const_mem_fun1_t<_Ret, _Tp, _Arg>'
      (DeclRefExpr 0x9c95b10 <col:48> '_Ret (_Tp::*)(_Arg) const' lvalue ParmVar 0x9c95850 '__f' '_Ret (_Tp::*)(_Arg) const'))))

;
    template <typename _Ret, typename _Tp, typename _Arg> inline mem_fun1_ref_t<_Ret, _Tp, _Arg> mem_fun_ref(_Ret (_Tp::*__f)(_Arg)) (CompoundStmt 0x9c96198 </usr/include/c++/4.6/bits/stl_function.h:718:5, col:52>
  (ReturnStmt 0x9c96188 <col:7, col:49>
    (CXXUnresolvedConstructExpr 0x9c96168 <col:14, col:49> 'mem_fun1_ref_t<_Ret, _Tp, _Arg>'
      (DeclRefExpr 0x9c96150 <col:46> '_Ret (_Tp::*)(_Arg)' lvalue ParmVar 0x9c95e90 '__f' '_Ret (_Tp::*)(_Arg)'))))

;
    template <typename _Ret, typename _Tp, typename _Arg> inline const_mem_fun1_ref_t<_Ret, _Tp, _Arg> mem_fun_ref(_Ret (_Tp::*__f)(_Arg) const) (CompoundStmt 0x9c967d8 </usr/include/c++/4.6/bits/stl_function.h:723:5, col:58>
  (ReturnStmt 0x9c967c8 <col:7, col:55>
    (CXXUnresolvedConstructExpr 0x9c967a8 <col:14, col:55> 'const_mem_fun1_ref_t<_Ret, _Tp, _Arg>'
      (DeclRefExpr 0x9c96790 <col:52> '_Ret (_Tp::*)(_Arg) const' lvalue ParmVar 0x9c964d0 '__f' '_Ret (_Tp::*)(_Arg) const'))))

;
}
namespace std {
    template <typename _Operation> class binder1st : public unary_function<typename _Operation::second_argument_type, typename _Operation::result_type> {
        class binder1st;
    protected:
    protected:
        _Operation op;
        typename _Operation::first_argument_type value;
    public:
    public:
        binder1st<_Operation>(const _Operation &__x, const typename _Operation::first_argument_type &__y) : op((DeclRefExpr 0x9c99fd4 </usr/include/c++/4.6/backward/binders.h:111:12> 'const _Operation' lvalue ParmVar 0x9c99ad0 '__x' 'const _Operation &')
), value((DeclRefExpr 0x9c9a028 </usr/include/c++/4.6/backward/binders.h:111:24> 'const typename _Operation::first_argument_type' lvalue ParmVar 0x9c99b60 '__y' 'const typename _Operation::first_argument_type &')
) (CompoundStmt 0x9c9a080 </usr/include/c++/4.6/backward/binders.h:111:29, col:31>)


        typename _Operation::result_type operator()(const typename _Operation::second_argument_type &__x) const (CompoundStmt 0x9c9a178 </usr/include/c++/4.6/backward/binders.h:115:7, col:32>
  (ReturnStmt 0x9c9a168 <col:9, col:29>
    (CallExpr 0x9c9a140 <col:16, col:29> '<dependent type>'
      (MemberExpr 0x9c9a0d4 <col:16> 'const _Operation' lvalue ->op 0x9c999a0
        (CXXThisExpr 0x9c9a0a8 <col:16> 'const binder1st<_Operation> *' this))
      (MemberExpr 0x9c9a108 <col:19> 'const typename _Operation::first_argument_type' lvalue ->value 0x9c99a30
        (CXXThisExpr 0x9c9a0f8 <col:19> 'const binder1st<_Operation> *' this))
      (DeclRefExpr 0x9c9a128 <col:26> 'const typename _Operation::second_argument_type' lvalue ParmVar 0x9c99d00 '__x' 'const typename _Operation::second_argument_type &'))))


        typename _Operation::result_type operator()(typename _Operation::second_argument_type &__x) const (CompoundStmt 0x9c9a240 </usr/include/c++/4.6/backward/binders.h:121:7, col:32>
  (ReturnStmt 0x9c9a230 <col:9, col:29>
    (CallExpr 0x9c9a208 <col:16, col:29> '<dependent type>'
      (MemberExpr 0x9c9a1a0 <col:16> 'const _Operation' lvalue ->op 0x9c999a0
        (CXXThisExpr 0x9c9a190 <col:16> 'const binder1st<_Operation> *' this))
      (MemberExpr 0x9c9a1d0 <col:19> 'const typename _Operation::first_argument_type' lvalue ->value 0x9c99a30
        (CXXThisExpr 0x9c9a1c0 <col:19> 'const binder1st<_Operation> *' this))
      (DeclRefExpr 0x9c9a1f0 <col:26> 'typename _Operation::second_argument_type' lvalue ParmVar 0x9c99ec0 '__x' 'typename _Operation::second_argument_type &'))))


    };
    template <typename _Operation, typename _Tp> inline binder1st<_Operation> bind1st(const _Operation &__fn, const _Tp &__x) (CompoundStmt 0x9c9a790 </usr/include/c++/4.6/backward/binders.h:128:5, line:131:5>
  (DeclStmt 0x9c9a630 <line:129:7, col:66>
    0x9c9a600 "typedef typename _Operation::first_argument_type _Arg1_type")
  (ReturnStmt 0x9c9a780 <line:130:7, col:57>
    (CXXUnresolvedConstructExpr 0x9c9a760 <col:14, col:57> 'binder1st<_Operation>'
      (DeclRefExpr 0x9c9a6f0 <col:36> 'const _Operation' lvalue ParmVar 0x9c9a3d0 '__fn' 'const _Operation &')
      (CXXUnresolvedConstructExpr 0x9c9a740 <col:42, col:56> '_Arg1_type':'typename _Operation::first_argument_type'
        (DeclRefExpr 0x9c9a728 <col:53> 'const _Tp' lvalue ParmVar 0x9c9a440 '__x' 'const _Tp &')))))

;
    template <typename _Operation> class binder2nd : public unary_function<typename _Operation::first_argument_type, typename _Operation::result_type> {
        class binder2nd;
    protected:
    protected:
        _Operation op;
        typename _Operation::second_argument_type value;
    public:
    public:
        binder2nd<_Operation>(const _Operation &__x, const typename _Operation::second_argument_type &__y) : op((DeclRefExpr 0x9c9b2a4 </usr/include/c++/4.6/backward/binders.h:146:12> 'const _Operation' lvalue ParmVar 0x9c9ada0 '__x' 'const _Operation &')
), value((DeclRefExpr 0x9c9b2f8 </usr/include/c++/4.6/backward/binders.h:146:24> 'const typename _Operation::second_argument_type' lvalue ParmVar 0x9c9ae30 '__y' 'const typename _Operation::second_argument_type &')
) (CompoundStmt 0x9c9b350 </usr/include/c++/4.6/backward/binders.h:146:29, col:31>)


        typename _Operation::result_type operator()(const typename _Operation::first_argument_type &__x) const (CompoundStmt 0x9c9b448 </usr/include/c++/4.6/backward/binders.h:150:7, col:32>
  (ReturnStmt 0x9c9b438 <col:9, col:29>
    (CallExpr 0x9c9b410 <col:16, col:29> '<dependent type>'
      (MemberExpr 0x9c9b3a4 <col:16> 'const _Operation' lvalue ->op 0x9c9ac70
        (CXXThisExpr 0x9c9b378 <col:16> 'const binder2nd<_Operation> *' this))
      (DeclRefExpr 0x9c9b3c4 <col:19> 'const typename _Operation::first_argument_type' lvalue ParmVar 0x9c9afd0 '__x' 'const typename _Operation::first_argument_type &')
      (MemberExpr 0x9c9b3f0 <col:24> 'const typename _Operation::second_argument_type' lvalue ->value 0x9c9ad00
        (CXXThisExpr 0x9c9b3e0 <col:24> 'const binder2nd<_Operation> *' this)))))


        typename _Operation::result_type operator()(typename _Operation::first_argument_type &__x) const (CompoundStmt 0x9c9b510 </usr/include/c++/4.6/backward/binders.h:156:7, col:32>
  (ReturnStmt 0x9c9b500 <col:9, col:29>
    (CallExpr 0x9c9b4d8 <col:16, col:29> '<dependent type>'
      (MemberExpr 0x9c9b470 <col:16> 'const _Operation' lvalue ->op 0x9c9ac70
        (CXXThisExpr 0x9c9b460 <col:16> 'const binder2nd<_Operation> *' this))
      (DeclRefExpr 0x9c9b490 <col:19> 'typename _Operation::first_argument_type' lvalue ParmVar 0x9c9b190 '__x' 'typename _Operation::first_argument_type &')
      (MemberExpr 0x9c9b4b8 <col:24> 'const typename _Operation::second_argument_type' lvalue ->value 0x9c9ad00
        (CXXThisExpr 0x9c9b4a8 <col:24> 'const binder2nd<_Operation> *' this)))))


    };
    template <typename _Operation, typename _Tp> inline binder2nd<_Operation> bind2nd(const _Operation &__fn, const _Tp &__x) (CompoundStmt 0x9c9e0b0 </usr/include/c++/4.6/backward/binders.h:163:5, line:166:5>
  (DeclStmt 0x9c9b900 <line:164:7, col:67>
    0x9c9b8d0 "typedef typename _Operation::second_argument_type _Arg2_type")
  (ReturnStmt 0x9c9e0a0 <line:165:7, col:57>
    (CXXUnresolvedConstructExpr 0x9c9e080 <col:14, col:57> 'binder2nd<_Operation>'
      (DeclRefExpr 0x9c9e010 <col:36> 'const _Operation' lvalue ParmVar 0x9c9b6a0 '__fn' 'const _Operation &')
      (CXXUnresolvedConstructExpr 0x9c9e060 <col:42, col:56> '_Arg2_type':'typename _Operation::second_argument_type'
        (DeclRefExpr 0x9c9e048 <col:53> 'const _Tp' lvalue ParmVar 0x9c9b710 '__x' 'const _Tp &')))))

;
}
struct sched_param {
    struct sched_param;
    int __sched_priority;
};
extern "C" {
    extern int clone(int (*__fn)(void *), void *__child_stack, int __flags, void *__arg, ...) throw();
    extern int unshare(int __flags) throw();
    extern int sched_getcpu() throw();
    extern int setns(int __fd, int __nstype) throw();
}
struct __sched_param {
    struct __sched_param;
    int __sched_priority;
};
typedef unsigned long __cpu_mask;
struct {
    __cpu_mask __bits[32];
};
typedef struct cpu_set_t cpu_set_t;
extern "C" {
    extern int __sched_cpucount(size_t __setsize, const cpu_set_t *__setp) throw();
    extern cpu_set_t *__sched_cpualloc(size_t __count) throw();
    extern void __sched_cpufree(cpu_set_t *__set) throw();
}
extern "C" {
    extern int sched_setparam(__pid_t __pid, const struct sched_param *__param) throw();
    extern int sched_getparam(__pid_t __pid, struct sched_param *__param) throw();
    extern int sched_setscheduler(__pid_t __pid, int __policy, const struct sched_param *__param) throw();
    extern int sched_getscheduler(__pid_t __pid) throw();
    extern int sched_yield() throw();
    extern int sched_get_priority_max(int __algorithm) throw();
    extern int sched_get_priority_min(int __algorithm) throw();
    extern int sched_rr_get_interval(__pid_t __pid, struct timespec *__t) throw();
    extern int sched_setaffinity(__pid_t __pid, size_t __cpusetsize, const cpu_set_t *__cpuset) throw();
    extern int sched_getaffinity(__pid_t __pid, size_t __cpusetsize, cpu_set_t *__cpuset) throw();
}
extern "C" {
    struct timex {
        struct timex;
        unsigned int modes;
        long offset;
        long freq;
        long maxerror;
        long esterror;
        int status;
        long constant;
        long precision;
        long tolerance;
        struct timeval time;
        long tick;
        long ppsfreq;
        long jitter;
        int shift;
        long stabil;
        long jitcnt;
        long calcnt;
        long errcnt;
        long stbcnt;
        int tai;
        int : (IntegerLiteral 0x9cb4870 </usr/include/i386-linux-gnu/bits/timex.h:50:9> 'int' 32)
;
        int : (IntegerLiteral 0x9cb48d0 </usr/include/i386-linux-gnu/bits/timex.h:50:19> 'int' 32)
;
        int : (IntegerLiteral 0x9cb4930 </usr/include/i386-linux-gnu/bits/timex.h:50:29> 'int' 32)
;
        int : (IntegerLiteral 0x9cb4990 </usr/include/i386-linux-gnu/bits/timex.h:50:39> 'int' 32)
;
        int : (IntegerLiteral 0x9cb49f0 </usr/include/i386-linux-gnu/bits/timex.h:51:9> 'int' 32)
;
        int : (IntegerLiteral 0x9cb4a50 </usr/include/i386-linux-gnu/bits/timex.h:51:19> 'int' 32)
;
        int : (IntegerLiteral 0x9cb4ab0 </usr/include/i386-linux-gnu/bits/timex.h:51:29> 'int' 32)
;
        int : (IntegerLiteral 0x9cb4b10 </usr/include/i386-linux-gnu/bits/timex.h:51:39> 'int' 32)
;
        int : (IntegerLiteral 0x9cb4b70 </usr/include/i386-linux-gnu/bits/timex.h:52:9> 'int' 32)
;
        int : (IntegerLiteral 0x9cb4bd0 </usr/include/i386-linux-gnu/bits/timex.h:52:19> 'int' 32)
;
        int : (IntegerLiteral 0x9cb4c30 </usr/include/i386-linux-gnu/bits/timex.h:52:29> 'int' 32)
;
    };
    extern "C" {
        extern int clock_adjtime(__clockid_t __clock_id, struct timex *__utx) throw();
    }
    struct tm {
        struct tm;
        int tm_sec;
        int tm_min;
        int tm_hour;
        int tm_mday;
        int tm_mon;
        int tm_year;
        int tm_wday;
        int tm_yday;
        int tm_isdst;
        long tm_gmtoff;
        const char *tm_zone;
    };
    struct itimerspec {
        struct itimerspec;
        struct timespec it_interval;
        struct timespec it_value;
    };
    struct sigevent;
    extern clock_t clock() throw();
    extern time_t time(time_t *__timer) throw();
    extern double difftime(time_t __time1, time_t __time0) throw();
    extern time_t mktime(struct tm *__tp) throw();
    extern size_t strftime(char *restrict __s, size_t __maxsize, const char *restrict __format, const struct tm *restrict __tp) throw();
    extern char *strptime(const char *restrict __s, const char *restrict __fmt, struct tm *__tp) throw();
    extern size_t strftime_l(char *restrict __s, size_t __maxsize, const char *restrict __format, const struct tm *restrict __tp, __locale_t __loc) throw();
    extern char *strptime_l(const char *restrict __s, const char *restrict __fmt, struct tm *__tp, __locale_t __loc) throw();
    extern struct tm *gmtime(const time_t *__timer) throw();
    extern struct tm *localtime(const time_t *__timer) throw();
    extern struct tm *gmtime_r(const time_t *restrict __timer, struct tm *restrict __tp) throw();
    extern struct tm *localtime_r(const time_t *restrict __timer, struct tm *restrict __tp) throw();
    extern char *asctime(const struct tm *__tp) throw();
    extern char *ctime(const time_t *__timer) throw();
    extern char *asctime_r(const struct tm *restrict __tp, char *restrict __buf) throw();
    extern char *ctime_r(const time_t *restrict __timer, char *restrict __buf) throw();
    extern char *__tzname[2];
    extern int __daylight;
    extern long __timezone;
    extern char *tzname[2];
    extern void tzset() throw();
    extern int daylight;
    extern long timezone;
    extern int stime(const time_t *__when) throw();
    extern time_t timegm(struct tm *__tp) throw();
    extern time_t timelocal(struct tm *__tp) throw();
    extern int dysize(int __year) throw();
    extern int nanosleep(const struct timespec *__requested_time, struct timespec *__remaining);
    extern int clock_getres(clockid_t __clock_id, struct timespec *__res) throw();
    extern int clock_gettime(clockid_t __clock_id, struct timespec *__tp) throw();
    extern int clock_settime(clockid_t __clock_id, const struct timespec *__tp) throw();
    extern int clock_nanosleep(clockid_t __clock_id, int __flags, const struct timespec *__req, struct timespec *__rem);
    extern int clock_getcpuclockid(pid_t __pid, clockid_t *__clock_id) throw();
    extern int timer_create(clockid_t __clock_id, struct sigevent *restrict __evp, timer_t *restrict __timerid) throw();
    extern int timer_delete(timer_t __timerid) throw();
    extern int timer_settime(timer_t __timerid, int __flags, const struct itimerspec *restrict __value, struct itimerspec *restrict __ovalue) throw();
    extern int timer_gettime(timer_t __timerid, struct itimerspec *__value) throw();
    extern int timer_getoverrun(timer_t __timerid) throw();
    extern int getdate_err;
    extern struct tm *getdate(const char *__string);
    extern int getdate_r(const char *restrict __string, struct tm *restrict __resbufp);
}
typedef int __jmp_buf[6];
enum  {
    PTHREAD_CREATE_JOINABLE,
    PTHREAD_CREATE_DETACHED
};
enum  {
    PTHREAD_MUTEX_TIMED_NP,
    PTHREAD_MUTEX_RECURSIVE_NP,
    PTHREAD_MUTEX_ERRORCHECK_NP,
    PTHREAD_MUTEX_ADAPTIVE_NP,
    PTHREAD_MUTEX_NORMAL = (ImplicitCastExpr 0x9cbcbb8 </usr/include/pthread.h:52:26> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0x9cbca24 <col:26> 'int' EnumConstant 0x9cbc930 'PTHREAD_MUTEX_TIMED_NP' 'enum <anonymous at /usr/include/pthread.h:44:1>'))
,
    PTHREAD_MUTEX_RECURSIVE = (ImplicitCastExpr 0x9cbcbc8 </usr/include/pthread.h:53:29> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0x9cbca74 <col:29> 'int' EnumConstant 0x9cbc970 'PTHREAD_MUTEX_RECURSIVE_NP' 'enum <anonymous at /usr/include/pthread.h:44:1>'))
,
    PTHREAD_MUTEX_ERRORCHECK = (ImplicitCastExpr 0x9cbcbd8 </usr/include/pthread.h:54:30> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0x9cbcac4 <col:30> 'int' EnumConstant 0x9cbc9b0 'PTHREAD_MUTEX_ERRORCHECK_NP' 'enum <anonymous at /usr/include/pthread.h:44:1>'))
,
    PTHREAD_MUTEX_DEFAULT = (ImplicitCastExpr 0x9cbcbe8 </usr/include/pthread.h:55:27> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0x9cbcb14 <col:27> 'int' EnumConstant 0x9cbca40 'PTHREAD_MUTEX_NORMAL' 'enum <anonymous at /usr/include/pthread.h:44:1>'))
,
    PTHREAD_MUTEX_FAST_NP = (ImplicitCastExpr 0x9cbcbf8 </usr/include/pthread.h:59:29> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0x9cbcb64 <col:29> 'int' EnumConstant 0x9cbc930 'PTHREAD_MUTEX_TIMED_NP' 'enum <anonymous at /usr/include/pthread.h:44:1>'))

};
enum  {
    PTHREAD_MUTEX_STALLED,
    PTHREAD_MUTEX_STALLED_NP = (ImplicitCastExpr 0x9cbcd88 </usr/include/pthread.h:69:30> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0x9cbcca4 <col:30> 'int' EnumConstant 0x9cbcc70 'PTHREAD_MUTEX_STALLED' 'enum <anonymous at /usr/include/pthread.h:66:1>'))
,
    PTHREAD_MUTEX_ROBUST,
    PTHREAD_MUTEX_ROBUST_NP = (ImplicitCastExpr 0x9cbcd98 </usr/include/pthread.h:71:29> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0x9cbcd34 <col:29> 'int' EnumConstant 0x9cbcd00 'PTHREAD_MUTEX_ROBUST' 'enum <anonymous at /usr/include/pthread.h:66:1>'))

};
enum  {
    PTHREAD_PRIO_NONE,
    PTHREAD_PRIO_INHERIT,
    PTHREAD_PRIO_PROTECT
};
enum  {
    PTHREAD_RWLOCK_PREFER_READER_NP,
    PTHREAD_RWLOCK_PREFER_WRITER_NP,
    PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP,
    PTHREAD_RWLOCK_DEFAULT_NP = (ImplicitCastExpr 0x9cbd038 </usr/include/pthread.h:120:31> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0x9cbcfe4 <col:31> 'int' EnumConstant 0x9cbcf30 'PTHREAD_RWLOCK_PREFER_READER_NP' 'enum <anonymous at /usr/include/pthread.h:115:1>'))

};
enum  {
    PTHREAD_INHERIT_SCHED,
    PTHREAD_EXPLICIT_SCHED
};
enum  {
    PTHREAD_SCOPE_SYSTEM,
    PTHREAD_SCOPE_PROCESS
};
enum  {
    PTHREAD_PROCESS_PRIVATE,
    PTHREAD_PROCESS_SHARED
};
struct _pthread_cleanup_buffer {
    struct _pthread_cleanup_buffer;
    void (*__routine)(void *);
    void *__arg;
    int __canceltype;
    struct _pthread_cleanup_buffer *__prev;
};
enum  {
    PTHREAD_CANCEL_ENABLE,
    PTHREAD_CANCEL_DISABLE
};
enum  {
    PTHREAD_CANCEL_DEFERRED,
    PTHREAD_CANCEL_ASYNCHRONOUS
};
extern "C" {
    extern int pthread_create(pthread_t *restrict __newthread, const pthread_attr_t *restrict __attr, void *(*__start_routine)(void *), void *restrict __arg) throw();
    extern void pthread_exit(void *__retval);
    extern int pthread_join(pthread_t __th, void **__thread_return);
    extern int pthread_tryjoin_np(pthread_t __th, void **__thread_return) throw();
    extern int pthread_timedjoin_np(pthread_t __th, void **__thread_return, const struct timespec *__abstime);
    extern int pthread_detach(pthread_t __th) throw();
    extern pthread_t pthread_self() throw();
    extern int pthread_equal(pthread_t __thread1, pthread_t __thread2) throw();
    extern int pthread_attr_init(pthread_attr_t *__attr) throw();
    extern int pthread_attr_destroy(pthread_attr_t *__attr) throw();
    extern int pthread_attr_getdetachstate(const pthread_attr_t *__attr, int *__detachstate) throw();
    extern int pthread_attr_setdetachstate(pthread_attr_t *__attr, int __detachstate) throw();
    extern int pthread_attr_getguardsize(const pthread_attr_t *__attr, size_t *__guardsize) throw();
    extern int pthread_attr_setguardsize(pthread_attr_t *__attr, size_t __guardsize) throw();
    extern int pthread_attr_getschedparam(const pthread_attr_t *restrict __attr, struct sched_param *restrict __param) throw();
    extern int pthread_attr_setschedparam(pthread_attr_t *restrict __attr, const struct sched_param *restrict __param) throw();
    extern int pthread_attr_getschedpolicy(const pthread_attr_t *restrict __attr, int *restrict __policy) throw();
    extern int pthread_attr_setschedpolicy(pthread_attr_t *__attr, int __policy) throw();
    extern int pthread_attr_getinheritsched(const pthread_attr_t *restrict __attr, int *restrict __inherit) throw();
    extern int pthread_attr_setinheritsched(pthread_attr_t *__attr, int __inherit) throw();
    extern int pthread_attr_getscope(const pthread_attr_t *restrict __attr, int *restrict __scope) throw();
    extern int pthread_attr_setscope(pthread_attr_t *__attr, int __scope) throw();
    extern int pthread_attr_getstackaddr(const pthread_attr_t *restrict __attr, void **restrict __stackaddr) throw();
    extern int pthread_attr_setstackaddr(pthread_attr_t *__attr, void *__stackaddr) throw();
    extern int pthread_attr_getstacksize(const pthread_attr_t *restrict __attr, size_t *restrict __stacksize) throw();
    extern int pthread_attr_setstacksize(pthread_attr_t *__attr, size_t __stacksize) throw();
    extern int pthread_attr_getstack(const pthread_attr_t *restrict __attr, void **restrict __stackaddr, size_t *restrict __stacksize) throw();
    extern int pthread_attr_setstack(pthread_attr_t *__attr, void *__stackaddr, size_t __stacksize) throw();
    extern int pthread_attr_setaffinity_np(pthread_attr_t *__attr, size_t __cpusetsize, const cpu_set_t *__cpuset) throw();
    extern int pthread_attr_getaffinity_np(const pthread_attr_t *__attr, size_t __cpusetsize, cpu_set_t *__cpuset) throw();
    extern int pthread_getattr_np(pthread_t __th, pthread_attr_t *__attr) throw();
    extern int pthread_setschedparam(pthread_t __target_thread, int __policy, const struct sched_param *__param) throw();
    extern int pthread_getschedparam(pthread_t __target_thread, int *restrict __policy, struct sched_param *restrict __param) throw();
    extern int pthread_setschedprio(pthread_t __target_thread, int __prio) throw();
    extern int pthread_getname_np(pthread_t __target_thread, char *__buf, size_t __buflen) throw();
    extern int pthread_setname_np(pthread_t __target_thread, const char *__name) throw();
    extern int pthread_getconcurrency() throw();
    extern int pthread_setconcurrency(int __level) throw();
    extern int pthread_yield() throw();
    extern int pthread_setaffinity_np(pthread_t __th, size_t __cpusetsize, const cpu_set_t *__cpuset) throw();
    extern int pthread_getaffinity_np(pthread_t __th, size_t __cpusetsize, cpu_set_t *__cpuset) throw();
    extern int pthread_once(pthread_once_t *__once_control, void (*__init_routine)());
    extern int pthread_setcancelstate(int __state, int *__oldstate);
    extern int pthread_setcanceltype(int __type, int *__oldtype);
    extern int pthread_cancel(pthread_t __th);
    extern void pthread_testcancel();
    struct {
        struct {
            __jmp_buf __cancel_jmp_buf;
            int __mask_was_saved;
        };
        struct <anonymous struct at /usr/include/pthread.h:509:3> __cancel_jmp_buf[1];
        void *__pad[4];
    };
    typedef struct __pthread_unwind_buf_t __pthread_unwind_buf_t;
    struct __pthread_cleanup_frame {
        struct __pthread_cleanup_frame;
        void (*__cancel_routine)(void *);
        void *__cancel_arg;
        int __do_it;
        int __cancel_type;
    };
    extern void __pthread_register_cancel(__pthread_unwind_buf_t *__buf);
    extern void __pthread_unregister_cancel(__pthread_unwind_buf_t *__buf);
    extern void __pthread_register_cancel_defer(__pthread_unwind_buf_t *__buf);
    extern void __pthread_unregister_cancel_restore(__pthread_unwind_buf_t *__buf);
    extern void __pthread_unwind_next(__pthread_unwind_buf_t *__buf);
    struct __jmp_buf_tag;
    extern int __sigsetjmp(struct __jmp_buf_tag *__env, int __savemask) throw() __attribute((returns_twice));
    extern int pthread_mutex_init(pthread_mutex_t *__mutex, const pthread_mutexattr_t *__mutexattr) throw();
    extern int pthread_mutex_destroy(pthread_mutex_t *__mutex) throw();
    extern int pthread_mutex_trylock(pthread_mutex_t *__mutex) throw();
    extern int pthread_mutex_lock(pthread_mutex_t *__mutex) throw();
    extern int pthread_mutex_timedlock(pthread_mutex_t *restrict __mutex, const struct timespec *restrict __abstime) throw();
    extern int pthread_mutex_unlock(pthread_mutex_t *__mutex) throw();
    extern int pthread_mutex_getprioceiling(const pthread_mutex_t *restrict __mutex, int *restrict __prioceiling) throw();
    extern int pthread_mutex_setprioceiling(pthread_mutex_t *restrict __mutex, int __prioceiling, int *restrict __old_ceiling) throw();
    extern int pthread_mutex_consistent(pthread_mutex_t *__mutex) throw();
    extern int pthread_mutex_consistent_np(pthread_mutex_t *__mutex) throw();
    extern int pthread_mutexattr_init(pthread_mutexattr_t *__attr) throw();
    extern int pthread_mutexattr_destroy(pthread_mutexattr_t *__attr) throw();
    extern int pthread_mutexattr_getpshared(const pthread_mutexattr_t *restrict __attr, int *restrict __pshared) throw();
    extern int pthread_mutexattr_setpshared(pthread_mutexattr_t *__attr, int __pshared) throw();
    extern int pthread_mutexattr_gettype(const pthread_mutexattr_t *restrict __attr, int *restrict __kind) throw();
    extern int pthread_mutexattr_settype(pthread_mutexattr_t *__attr, int __kind) throw();
    extern int pthread_mutexattr_getprotocol(const pthread_mutexattr_t *restrict __attr, int *restrict __protocol) throw();
    extern int pthread_mutexattr_setprotocol(pthread_mutexattr_t *__attr, int __protocol) throw();
    extern int pthread_mutexattr_getprioceiling(const pthread_mutexattr_t *restrict __attr, int *restrict __prioceiling) throw();
    extern int pthread_mutexattr_setprioceiling(pthread_mutexattr_t *__attr, int __prioceiling) throw();
    extern int pthread_mutexattr_getrobust(const pthread_mutexattr_t *__attr, int *__robustness) throw();
    extern int pthread_mutexattr_getrobust_np(const pthread_mutexattr_t *__attr, int *__robustness) throw();
    extern int pthread_mutexattr_setrobust(pthread_mutexattr_t *__attr, int __robustness) throw();
    extern int pthread_mutexattr_setrobust_np(pthread_mutexattr_t *__attr, int __robustness) throw();
    extern int pthread_rwlock_init(pthread_rwlock_t *restrict __rwlock, const pthread_rwlockattr_t *restrict __attr) throw();
    extern int pthread_rwlock_destroy(pthread_rwlock_t *__rwlock) throw();
    extern int pthread_rwlock_rdlock(pthread_rwlock_t *__rwlock) throw();
    extern int pthread_rwlock_tryrdlock(pthread_rwlock_t *__rwlock) throw();
    extern int pthread_rwlock_timedrdlock(pthread_rwlock_t *restrict __rwlock, const struct timespec *restrict __abstime) throw();
    extern int pthread_rwlock_wrlock(pthread_rwlock_t *__rwlock) throw();
    extern int pthread_rwlock_trywrlock(pthread_rwlock_t *__rwlock) throw();
    extern int pthread_rwlock_timedwrlock(pthread_rwlock_t *restrict __rwlock, const struct timespec *restrict __abstime) throw();
    extern int pthread_rwlock_unlock(pthread_rwlock_t *__rwlock) throw();
    extern int pthread_rwlockattr_init(pthread_rwlockattr_t *__attr) throw();
    extern int pthread_rwlockattr_destroy(pthread_rwlockattr_t *__attr) throw();
    extern int pthread_rwlockattr_getpshared(const pthread_rwlockattr_t *restrict __attr, int *restrict __pshared) throw();
    extern int pthread_rwlockattr_setpshared(pthread_rwlockattr_t *__attr, int __pshared) throw();
    extern int pthread_rwlockattr_getkind_np(const pthread_rwlockattr_t *restrict __attr, int *restrict __pref) throw();
    extern int pthread_rwlockattr_setkind_np(pthread_rwlockattr_t *__attr, int __pref) throw();
    extern int pthread_cond_init(pthread_cond_t *restrict __cond, const pthread_condattr_t *restrict __cond_attr) throw();
    extern int pthread_cond_destroy(pthread_cond_t *__cond) throw();
    extern int pthread_cond_signal(pthread_cond_t *__cond) throw();
    extern int pthread_cond_broadcast(pthread_cond_t *__cond) throw();
    extern int pthread_cond_wait(pthread_cond_t *restrict __cond, pthread_mutex_t *restrict __mutex);
    extern int pthread_cond_timedwait(pthread_cond_t *restrict __cond, pthread_mutex_t *restrict __mutex, const struct timespec *restrict __abstime);
    extern int pthread_condattr_init(pthread_condattr_t *__attr) throw();
    extern int pthread_condattr_destroy(pthread_condattr_t *__attr) throw();
    extern int pthread_condattr_getpshared(const pthread_condattr_t *restrict __attr, int *restrict __pshared) throw();
    extern int pthread_condattr_setpshared(pthread_condattr_t *__attr, int __pshared) throw();
    extern int pthread_condattr_getclock(const pthread_condattr_t *restrict __attr, __clockid_t *restrict __clock_id) throw();
    extern int pthread_condattr_setclock(pthread_condattr_t *__attr, __clockid_t __clock_id) throw();
    extern int pthread_spin_init(pthread_spinlock_t *__lock, int __pshared) throw();
    extern int pthread_spin_destroy(pthread_spinlock_t *__lock) throw();
    extern int pthread_spin_lock(pthread_spinlock_t *__lock) throw();
    extern int pthread_spin_trylock(pthread_spinlock_t *__lock) throw();
    extern int pthread_spin_unlock(pthread_spinlock_t *__lock) throw();
    extern int pthread_barrier_init(pthread_barrier_t *restrict __barrier, const pthread_barrierattr_t *restrict __attr, unsigned int __count) throw();
    extern int pthread_barrier_destroy(pthread_barrier_t *__barrier) throw();
    extern int pthread_barrier_wait(pthread_barrier_t *__barrier) throw();
    extern int pthread_barrierattr_init(pthread_barrierattr_t *__attr) throw();
    extern int pthread_barrierattr_destroy(pthread_barrierattr_t *__attr) throw();
    extern int pthread_barrierattr_getpshared(const pthread_barrierattr_t *restrict __attr, int *restrict __pshared) throw();
    extern int pthread_barrierattr_setpshared(pthread_barrierattr_t *__attr, int __pshared) throw();
    extern int pthread_key_create(pthread_key_t *__key, void (*__destr_function)(void *)) throw();
    extern int pthread_key_delete(pthread_key_t __key) throw();
    extern void *pthread_getspecific(pthread_key_t __key) throw();
    extern int pthread_setspecific(pthread_key_t __key, const void *__pointer) throw();
    extern int pthread_getcpuclockid(pthread_t __thread_id, __clockid_t *__clock_id) throw();
    extern int pthread_atfork(void (*__prepare)(), void (*__parent)(), void (*__child)()) throw();
}
extern "C" {
    typedef __socklen_t socklen_t;
    extern int access(const char *__name, int __type) throw();
    extern int euidaccess(const char *__name, int __type) throw();
    extern int eaccess(const char *__name, int __type) throw();
    extern int faccessat(int __fd, const char *__file, int __type, int __flag) throw();
    extern __off_t lseek(int __fd, __off_t __offset, int __whence) throw();
    extern __off64_t lseek64(int __fd, __off64_t __offset, int __whence) throw();
    extern int close(int __fd);
    extern ssize_t read(int __fd, void *__buf, size_t __nbytes);
    extern ssize_t write(int __fd, const void *__buf, size_t __n);
    extern ssize_t pread(int __fd, void *__buf, size_t __nbytes, __off_t __offset);
    extern ssize_t pwrite(int __fd, const void *__buf, size_t __n, __off_t __offset);
    extern ssize_t pread64(int __fd, void *__buf, size_t __nbytes, __off64_t __offset);
    extern ssize_t pwrite64(int __fd, const void *__buf, size_t __n, __off64_t __offset);
    extern int pipe(int __pipedes[2]) throw();
    extern int pipe2(int __pipedes[2], int __flags) throw();
    extern unsigned int alarm(unsigned int __seconds) throw();
    extern unsigned int sleep(unsigned int __seconds);
    extern __useconds_t ualarm(__useconds_t __value, __useconds_t __interval) throw();
    extern int usleep(__useconds_t __useconds);
    extern int pause();
    extern int chown(const char *__file, __uid_t __owner, __gid_t __group) throw();
    extern int fchown(int __fd, __uid_t __owner, __gid_t __group) throw();
    extern int lchown(const char *__file, __uid_t __owner, __gid_t __group) throw();
    extern int fchownat(int __fd, const char *__file, __uid_t __owner, __gid_t __group, int __flag) throw();
    extern int chdir(const char *__path) throw();
    extern int fchdir(int __fd) throw();
    extern char *getcwd(char *__buf, size_t __size) throw();
    extern char *get_current_dir_name() throw();
    extern char *getwd(char *__buf) throw();
    extern int dup(int __fd) throw();
    extern int dup2(int __fd, int __fd2) throw();
    extern int dup3(int __fd, int __fd2, int __flags) throw();
    extern char **__environ;
    extern char **environ;
    extern int execve(const char *__path, char *const __argv[], char *const __envp[]) throw();
    extern int fexecve(int __fd, char *const __argv[], char *const __envp[]) throw();
    extern int execv(const char *__path, char *const __argv[]) throw();
    extern int execle(const char *__path, const char *__arg, ...) throw();
    extern int execl(const char *__path, const char *__arg, ...) throw();
    extern int execvp(const char *__file, char *const __argv[]) throw();
    extern int execlp(const char *__file, const char *__arg, ...) throw();
    extern int execvpe(const char *__file, char *const __argv[], char *const __envp[]) throw();
    extern int nice(int __inc) throw();
    extern void _exit(int __status);
    enum  {
        _PC_LINK_MAX,
        _PC_MAX_CANON,
        _PC_MAX_INPUT,
        _PC_NAME_MAX,
        _PC_PATH_MAX,
        _PC_PIPE_BUF,
        _PC_CHOWN_RESTRICTED,
        _PC_NO_TRUNC,
        _PC_VDISABLE,
        _PC_SYNC_IO,
        _PC_ASYNC_IO,
        _PC_PRIO_IO,
        _PC_SOCK_MAXBUF,
        _PC_FILESIZEBITS,
        _PC_REC_INCR_XFER_SIZE,
        _PC_REC_MAX_XFER_SIZE,
        _PC_REC_MIN_XFER_SIZE,
        _PC_REC_XFER_ALIGN,
        _PC_ALLOC_SIZE_MIN,
        _PC_SYMLINK_MAX,
        _PC_2_SYMLINKS
    };
    enum  {
        _SC_ARG_MAX,
        _SC_CHILD_MAX,
        _SC_CLK_TCK,
        _SC_NGROUPS_MAX,
        _SC_OPEN_MAX,
        _SC_STREAM_MAX,
        _SC_TZNAME_MAX,
        _SC_JOB_CONTROL,
        _SC_SAVED_IDS,
        _SC_REALTIME_SIGNALS,
        _SC_PRIORITY_SCHEDULING,
        _SC_TIMERS,
        _SC_ASYNCHRONOUS_IO,
        _SC_PRIORITIZED_IO,
        _SC_SYNCHRONIZED_IO,
        _SC_FSYNC,
        _SC_MAPPED_FILES,
        _SC_MEMLOCK,
        _SC_MEMLOCK_RANGE,
        _SC_MEMORY_PROTECTION,
        _SC_MESSAGE_PASSING,
        _SC_SEMAPHORES,
        _SC_SHARED_MEMORY_OBJECTS,
        _SC_AIO_LISTIO_MAX,
        _SC_AIO_MAX,
        _SC_AIO_PRIO_DELTA_MAX,
        _SC_DELAYTIMER_MAX,
        _SC_MQ_OPEN_MAX,
        _SC_MQ_PRIO_MAX,
        _SC_VERSION,
        _SC_PAGESIZE,
        _SC_RTSIG_MAX,
        _SC_SEM_NSEMS_MAX,
        _SC_SEM_VALUE_MAX,
        _SC_SIGQUEUE_MAX,
        _SC_TIMER_MAX,
        _SC_BC_BASE_MAX,
        _SC_BC_DIM_MAX,
        _SC_BC_SCALE_MAX,
        _SC_BC_STRING_MAX,
        _SC_COLL_WEIGHTS_MAX,
        _SC_EQUIV_CLASS_MAX,
        _SC_EXPR_NEST_MAX,
        _SC_LINE_MAX,
        _SC_RE_DUP_MAX,
        _SC_CHARCLASS_NAME_MAX,
        _SC_2_VERSION,
        _SC_2_C_BIND,
        _SC_2_C_DEV,
        _SC_2_FORT_DEV,
        _SC_2_FORT_RUN,
        _SC_2_SW_DEV,
        _SC_2_LOCALEDEF,
        _SC_PII,
        _SC_PII_XTI,
        _SC_PII_SOCKET,
        _SC_PII_INTERNET,
        _SC_PII_OSI,
        _SC_POLL,
        _SC_SELECT,
        _SC_UIO_MAXIOV,
        _SC_IOV_MAX = (ImplicitCastExpr 0x9cf89e8 </usr/include/i386-linux-gnu/bits/confname.h:202:26> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0x9ce82a4 <col:26> 'int' EnumConstant 0x9ce8270 '_SC_UIO_MAXIOV' 'enum <anonymous at /usr/include/i386-linux-gnu/bits/confname.h:73:1>'))
,
        _SC_PII_INTERNET_STREAM,
        _SC_PII_INTERNET_DGRAM,
        _SC_PII_OSI_COTS,
        _SC_PII_OSI_CLTS,
        _SC_PII_OSI_M,
        _SC_T_IOV_MAX,
        _SC_THREADS,
        _SC_THREAD_SAFE_FUNCTIONS,
        _SC_GETGR_R_SIZE_MAX,
        _SC_GETPW_R_SIZE_MAX,
        _SC_LOGIN_NAME_MAX,
        _SC_TTY_NAME_MAX,
        _SC_THREAD_DESTRUCTOR_ITERATIONS,
        _SC_THREAD_KEYS_MAX,
        _SC_THREAD_STACK_MIN,
        _SC_THREAD_THREADS_MAX,
        _SC_THREAD_ATTR_STACKADDR,
        _SC_THREAD_ATTR_STACKSIZE,
        _SC_THREAD_PRIORITY_SCHEDULING,
        _SC_THREAD_PRIO_INHERIT,
        _SC_THREAD_PRIO_PROTECT,
        _SC_THREAD_PROCESS_SHARED,
        _SC_NPROCESSORS_CONF,
        _SC_NPROCESSORS_ONLN,
        _SC_PHYS_PAGES,
        _SC_AVPHYS_PAGES,
        _SC_ATEXIT_MAX,
        _SC_PASS_MAX,
        _SC_XOPEN_VERSION,
        _SC_XOPEN_XCU_VERSION,
        _SC_XOPEN_UNIX,
        _SC_XOPEN_CRYPT,
        _SC_XOPEN_ENH_I18N,
        _SC_XOPEN_SHM,
        _SC_2_CHAR_TERM,
        _SC_2_C_VERSION,
        _SC_2_UPE,
        _SC_XOPEN_XPG2,
        _SC_XOPEN_XPG3,
        _SC_XOPEN_XPG4,
        _SC_CHAR_BIT,
        _SC_CHAR_MAX,
        _SC_CHAR_MIN,
        _SC_INT_MAX,
        _SC_INT_MIN,
        _SC_LONG_BIT,
        _SC_WORD_BIT,
        _SC_MB_LEN_MAX,
        _SC_NZERO,
        _SC_SSIZE_MAX,
        _SC_SCHAR_MAX,
        _SC_SCHAR_MIN,
        _SC_SHRT_MAX,
        _SC_SHRT_MIN,
        _SC_UCHAR_MAX,
        _SC_UINT_MAX,
        _SC_ULONG_MAX,
        _SC_USHRT_MAX,
        _SC_NL_ARGMAX,
        _SC_NL_LANGMAX,
        _SC_NL_MSGMAX,
        _SC_NL_NMAX,
        _SC_NL_SETMAX,
        _SC_NL_TEXTMAX,
        _SC_XBS5_ILP32_OFF32,
        _SC_XBS5_ILP32_OFFBIG,
        _SC_XBS5_LP64_OFF64,
        _SC_XBS5_LPBIG_OFFBIG,
        _SC_XOPEN_LEGACY,
        _SC_XOPEN_REALTIME,
        _SC_XOPEN_REALTIME_THREADS,
        _SC_ADVISORY_INFO,
        _SC_BARRIERS,
        _SC_BASE,
        _SC_C_LANG_SUPPORT,
        _SC_C_LANG_SUPPORT_R,
        _SC_CLOCK_SELECTION,
        _SC_CPUTIME,
        _SC_THREAD_CPUTIME,
        _SC_DEVICE_IO,
        _SC_DEVICE_SPECIFIC,
        _SC_DEVICE_SPECIFIC_R,
        _SC_FD_MGMT,
        _SC_FIFO,
        _SC_PIPE,
        _SC_FILE_ATTRIBUTES,
        _SC_FILE_LOCKING,
        _SC_FILE_SYSTEM,
        _SC_MONOTONIC_CLOCK,
        _SC_MULTI_PROCESS,
        _SC_SINGLE_PROCESS,
        _SC_NETWORKING,
        _SC_READER_WRITER_LOCKS,
        _SC_SPIN_LOCKS,
        _SC_REGEXP,
        _SC_REGEX_VERSION,
        _SC_SHELL,
        _SC_SIGNALS,
        _SC_SPAWN,
        _SC_SPORADIC_SERVER,
        _SC_THREAD_SPORADIC_SERVER,
        _SC_SYSTEM_DATABASE,
        _SC_SYSTEM_DATABASE_R,
        _SC_TIMEOUTS,
        _SC_TYPED_MEMORY_OBJECTS,
        _SC_USER_GROUPS,
        _SC_USER_GROUPS_R,
        _SC_2_PBS,
        _SC_2_PBS_ACCOUNTING,
        _SC_2_PBS_LOCATE,
        _SC_2_PBS_MESSAGE,
        _SC_2_PBS_TRACK,
        _SC_SYMLOOP_MAX,
        _SC_STREAMS,
        _SC_2_PBS_CHECKPOINT,
        _SC_V6_ILP32_OFF32,
        _SC_V6_ILP32_OFFBIG,
        _SC_V6_LP64_OFF64,
        _SC_V6_LPBIG_OFFBIG,
        _SC_HOST_NAME_MAX,
        _SC_TRACE,
        _SC_TRACE_EVENT_FILTER,
        _SC_TRACE_INHERIT,
        _SC_TRACE_LOG,
        _SC_LEVEL1_ICACHE_SIZE,
        _SC_LEVEL1_ICACHE_ASSOC,
        _SC_LEVEL1_ICACHE_LINESIZE,
        _SC_LEVEL1_DCACHE_SIZE,
        _SC_LEVEL1_DCACHE_ASSOC,
        _SC_LEVEL1_DCACHE_LINESIZE,
        _SC_LEVEL2_CACHE_SIZE,
        _SC_LEVEL2_CACHE_ASSOC,
        _SC_LEVEL2_CACHE_LINESIZE,
        _SC_LEVEL3_CACHE_SIZE,
        _SC_LEVEL3_CACHE_ASSOC,
        _SC_LEVEL3_CACHE_LINESIZE,
        _SC_LEVEL4_CACHE_SIZE,
        _SC_LEVEL4_CACHE_ASSOC,
        _SC_LEVEL4_CACHE_LINESIZE,
        _SC_IPV6 = (ImplicitCastExpr 0x9cf89f8 </usr/include/i386-linux-gnu/bits/confname.h:468:33, line:499:41> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9cf8658 <line:468:33, line:499:41> 'int' '+'
    (DeclRefExpr 0x9cf8624 <line:468:33> 'int' EnumConstant 0x9cf8270 '_SC_LEVEL1_ICACHE_SIZE' 'enum <anonymous at /usr/include/i386-linux-gnu/bits/confname.h:73:1>')
    (IntegerLiteral 0x9cf8640 <line:499:41> 'int' 50)))
,
        _SC_RAW_SOCKETS,
        _SC_V7_ILP32_OFF32,
        _SC_V7_ILP32_OFFBIG,
        _SC_V7_LP64_OFF64,
        _SC_V7_LPBIG_OFFBIG,
        _SC_SS_REPL_MAX,
        _SC_TRACE_EVENT_NAME_MAX,
        _SC_TRACE_NAME_MAX,
        _SC_TRACE_SYS_MAX,
        _SC_TRACE_USER_EVENT_MAX,
        _SC_XOPEN_STREAMS,
        _SC_THREAD_ROBUST_PRIO_INHERIT,
        _SC_THREAD_ROBUST_PRIO_PROTECT
    };
    enum  {
        _CS_PATH,
        _CS_V6_WIDTH_RESTRICTED_ENVS,
        _CS_GNU_LIBC_VERSION,
        _CS_GNU_LIBPTHREAD_VERSION,
        _CS_V5_WIDTH_RESTRICTED_ENVS,
        _CS_V7_WIDTH_RESTRICTED_ENVS,
        _CS_LFS_CFLAGS = (ImplicitCastExpr 0x9cf9a88 </usr/include/i386-linux-gnu/bits/confname.h:557:22> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9cf8be8 <col:22> 'int' 1000))
,
        _CS_LFS_LDFLAGS,
        _CS_LFS_LIBS,
        _CS_LFS_LINTFLAGS,
        _CS_LFS64_CFLAGS,
        _CS_LFS64_LDFLAGS,
        _CS_LFS64_LIBS,
        _CS_LFS64_LINTFLAGS,
        _CS_XBS5_ILP32_OFF32_CFLAGS = (ImplicitCastExpr 0x9cf9a98 </usr/include/i386-linux-gnu/bits/confname.h:574:35> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9cf8df8 <col:35> 'int' 1100))
,
        _CS_XBS5_ILP32_OFF32_LDFLAGS,
        _CS_XBS5_ILP32_OFF32_LIBS,
        _CS_XBS5_ILP32_OFF32_LINTFLAGS,
        _CS_XBS5_ILP32_OFFBIG_CFLAGS,
        _CS_XBS5_ILP32_OFFBIG_LDFLAGS,
        _CS_XBS5_ILP32_OFFBIG_LIBS,
        _CS_XBS5_ILP32_OFFBIG_LINTFLAGS,
        _CS_XBS5_LP64_OFF64_CFLAGS,
        _CS_XBS5_LP64_OFF64_LDFLAGS,
        _CS_XBS5_LP64_OFF64_LIBS,
        _CS_XBS5_LP64_OFF64_LINTFLAGS,
        _CS_XBS5_LPBIG_OFFBIG_CFLAGS,
        _CS_XBS5_LPBIG_OFFBIG_LDFLAGS,
        _CS_XBS5_LPBIG_OFFBIG_LIBS,
        _CS_XBS5_LPBIG_OFFBIG_LINTFLAGS,
        _CS_POSIX_V6_ILP32_OFF32_CFLAGS,
        _CS_POSIX_V6_ILP32_OFF32_LDFLAGS,
        _CS_POSIX_V6_ILP32_OFF32_LIBS,
        _CS_POSIX_V6_ILP32_OFF32_LINTFLAGS,
        _CS_POSIX_V6_ILP32_OFFBIG_CFLAGS,
        _CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS,
        _CS_POSIX_V6_ILP32_OFFBIG_LIBS,
        _CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS,
        _CS_POSIX_V6_LP64_OFF64_CFLAGS,
        _CS_POSIX_V6_LP64_OFF64_LDFLAGS,
        _CS_POSIX_V6_LP64_OFF64_LIBS,
        _CS_POSIX_V6_LP64_OFF64_LINTFLAGS,
        _CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS,
        _CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS,
        _CS_POSIX_V6_LPBIG_OFFBIG_LIBS,
        _CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS,
        _CS_POSIX_V7_ILP32_OFF32_CFLAGS,
        _CS_POSIX_V7_ILP32_OFF32_LDFLAGS,
        _CS_POSIX_V7_ILP32_OFF32_LIBS,
        _CS_POSIX_V7_ILP32_OFF32_LINTFLAGS,
        _CS_POSIX_V7_ILP32_OFFBIG_CFLAGS,
        _CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS,
        _CS_POSIX_V7_ILP32_OFFBIG_LIBS,
        _CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS,
        _CS_POSIX_V7_LP64_OFF64_CFLAGS,
        _CS_POSIX_V7_LP64_OFF64_LDFLAGS,
        _CS_POSIX_V7_LP64_OFF64_LIBS,
        _CS_POSIX_V7_LP64_OFF64_LINTFLAGS,
        _CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS,
        _CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS,
        _CS_POSIX_V7_LPBIG_OFFBIG_LIBS,
        _CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS,
        _CS_V6_ENV,
        _CS_V7_ENV
    };
    extern long pathconf(const char *__path, int __name) throw();
    extern long fpathconf(int __fd, int __name) throw();
    extern long sysconf(int __name) throw();
    extern size_t confstr(int __name, char *__buf, size_t __len) throw();
    extern __pid_t getpid() throw();
    extern __pid_t getppid() throw();
    extern __pid_t getpgrp() throw();
    extern __pid_t __getpgid(__pid_t __pid) throw();
    extern __pid_t getpgid(__pid_t __pid) throw();
    extern int setpgid(__pid_t __pid, __pid_t __pgid) throw();
    extern int setpgrp() throw();
    extern __pid_t setsid() throw();
    extern __pid_t getsid(__pid_t __pid) throw();
    extern __uid_t getuid() throw();
    extern __uid_t geteuid() throw();
    extern __gid_t getgid() throw();
    extern __gid_t getegid() throw();
    extern int getgroups(int __size, __gid_t __list[]) throw();
    extern int group_member(__gid_t __gid) throw();
    extern int setuid(__uid_t __uid) throw();
    extern int setreuid(__uid_t __ruid, __uid_t __euid) throw();
    extern int seteuid(__uid_t __uid) throw();
    extern int setgid(__gid_t __gid) throw();
    extern int setregid(__gid_t __rgid, __gid_t __egid) throw();
    extern int setegid(__gid_t __gid) throw();
    extern int getresuid(__uid_t *__ruid, __uid_t *__euid, __uid_t *__suid) throw();
    extern int getresgid(__gid_t *__rgid, __gid_t *__egid, __gid_t *__sgid) throw();
    extern int setresuid(__uid_t __ruid, __uid_t __euid, __uid_t __suid) throw();
    extern int setresgid(__gid_t __rgid, __gid_t __egid, __gid_t __sgid) throw();
    extern __pid_t fork() throw();
    extern __pid_t vfork() throw() __attribute((returns_twice));
    extern char *ttyname(int __fd) throw();
    extern int ttyname_r(int __fd, char *__buf, size_t __buflen) throw();
    extern int isatty(int __fd) throw();
    extern int ttyslot() throw();
    extern int link(const char *__from, const char *__to) throw();
    extern int linkat(int __fromfd, const char *__from, int __tofd, const char *__to, int __flags) throw();
    extern int symlink(const char *__from, const char *__to) throw();
    extern ssize_t readlink(const char *restrict __path, char *restrict __buf, size_t __len) throw();
    extern int symlinkat(const char *__from, int __tofd, const char *__to) throw();
    extern ssize_t readlinkat(int __fd, const char *restrict __path, char *restrict __buf, size_t __len) throw();
    extern int unlink(const char *__name) throw();
    extern int unlinkat(int __fd, const char *__name, int __flag) throw();
    extern int rmdir(const char *__path) throw();
    extern __pid_t tcgetpgrp(int __fd) throw();
    extern int tcsetpgrp(int __fd, __pid_t __pgrp_id) throw();
    extern char *getlogin();
    extern int getlogin_r(char *__name, size_t __name_len);
    extern int setlogin(const char *__name) throw();
    extern "C" {
        extern char *optarg;
        extern int optind;
        extern int opterr;
        extern int optopt;
        extern int getopt(int ___argc, char *const *___argv, const char *__shortopts) throw();
    }
    extern int gethostname(char *__name, size_t __len) throw();
    extern int sethostname(const char *__name, size_t __len) throw();
    extern int sethostid(long __id) throw();
    extern int getdomainname(char *__name, size_t __len) throw();
    extern int setdomainname(const char *__name, size_t __len) throw();
    extern int vhangup() throw();
    extern int revoke(const char *__file) throw();
    extern int profil(unsigned short *__sample_buffer, size_t __size, size_t __offset, unsigned int __scale) throw();
    extern int acct(const char *__name) throw();
    extern char *getusershell() throw();
    extern void endusershell() throw();
    extern void setusershell() throw();
    extern int daemon(int __nochdir, int __noclose) throw();
    extern int chroot(const char *__path) throw();
    extern char *getpass(const char *__prompt);
    extern int fsync(int __fd);
    extern int syncfs(int __fd) throw();
    extern long gethostid();
    extern void sync() throw();
    extern int getpagesize() throw();
    extern int getdtablesize() throw();
    extern int truncate(const char *__file, __off_t __length) throw();
    extern int truncate64(const char *__file, __off64_t __length) throw();
    extern int ftruncate(int __fd, __off_t __length) throw();
    extern int ftruncate64(int __fd, __off64_t __length) throw();
    extern int brk(void *__addr) throw();
    extern void *sbrk(intptr_t __delta) throw();
    extern long syscall(long __sysno, ...) throw();
    extern int lockf(int __fd, int __cmd, __off_t __len);
    extern int lockf64(int __fd, int __cmd, __off64_t __len);
    extern int fdatasync(int __fildes);
    extern char *crypt(const char *__key, const char *__salt) throw();
    extern void encrypt(char *__libc_block, int __edflag) throw();
    extern void swab(const void *restrict __from, void *restrict __to, ssize_t __n) throw();
    extern char *ctermid(char *__s) throw();
}
typedef pthread_t __gthread_t;
typedef pthread_key_t __gthread_key_t;
typedef pthread_once_t __gthread_once_t;
typedef pthread_mutex_t __gthread_mutex_t;
typedef pthread_mutex_t __gthread_recursive_mutex_t;
typedef pthread_cond_t __gthread_cond_t;
typedef struct timespec __gthread_time_t;
static typeof (pthread_once) __gthrw_pthread_once;
static typeof (pthread_getspecific) __gthrw_pthread_getspecific;
static typeof (pthread_setspecific) __gthrw_pthread_setspecific;
static typeof (pthread_create) __gthrw_pthread_create;
static typeof (pthread_join) __gthrw_pthread_join;
static typeof (pthread_equal) __gthrw_pthread_equal;
static typeof (pthread_self) __gthrw_pthread_self;
static typeof (pthread_detach) __gthrw_pthread_detach;
static typeof (pthread_cancel) __gthrw_pthread_cancel;
static typeof (sched_yield) __gthrw_sched_yield;
static typeof (pthread_mutex_lock) __gthrw_pthread_mutex_lock;
static typeof (pthread_mutex_trylock) __gthrw_pthread_mutex_trylock;
static typeof (pthread_mutex_timedlock) __gthrw_pthread_mutex_timedlock;
static typeof (pthread_mutex_unlock) __gthrw_pthread_mutex_unlock;
static typeof (pthread_mutex_init) __gthrw_pthread_mutex_init;
static typeof (pthread_mutex_destroy) __gthrw_pthread_mutex_destroy;
static typeof (pthread_cond_broadcast) __gthrw_pthread_cond_broadcast;
static typeof (pthread_cond_signal) __gthrw_pthread_cond_signal;
static typeof (pthread_cond_wait) __gthrw_pthread_cond_wait;
static typeof (pthread_cond_timedwait) __gthrw_pthread_cond_timedwait;
static typeof (pthread_cond_destroy) __gthrw_pthread_cond_destroy;
static typeof (pthread_key_create) __gthrw_pthread_key_create;
static typeof (pthread_key_delete) __gthrw_pthread_key_delete;
static typeof (pthread_mutexattr_init) __gthrw_pthread_mutexattr_init;
static typeof (pthread_mutexattr_settype) __gthrw_pthread_mutexattr_settype;
static typeof (pthread_mutexattr_destroy) __gthrw_pthread_mutexattr_destroy;
static inline int __gthread_active_p() (CompoundStmt 0x9d0e8e8 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:241:1, line:253:1>
  (DeclStmt 0x9d0e850 <line:242:3, line:251:13>
    0x9d0e790 "static void *const __gthread_active_ptr =
      (UnaryOperator 0x9d0e838 <line:243:7, <scratch space>:90:1> 'void *' prefix '__extension__'
        (CStyleCastExpr 0x9d0e820 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:243:21, <scratch space>:90:1> 'void *' <BitCast>
          (UnaryOperator 0x9d0e7f8 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:243:30, <scratch space>:90:1> 'typeof (pthread_cancel) *' prefix '&'
            (DeclRefExpr 0x9d0e7c4 <col:1> 'typeof (pthread_cancel)':'int (pthread_t)' lvalue Function 0x9d0c5d0 '__gthrw_pthread_cancel' 'typeof (pthread_cancel)':'int (pthread_t)'))))")
  (ReturnStmt 0x9d0e8d8 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:252:3, col:34>
    (ImplicitCastExpr 0x9d0e8c8 <col:10, col:34> 'int' <IntegralCast>
      (BinaryOperator 0x9d0e8b0 <col:10, col:34> '_Bool' '!='
        (ImplicitCastExpr 0x9d0e890 <col:10> 'void *' <LValueToRValue>
          (DeclRefExpr 0x9d0e860 <col:10> 'void *const' lvalue Var 0x9d0e790 '__gthread_active_ptr' 'void *const'))
        (ImplicitCastExpr 0x9d0e8a0 <col:34> 'void *' <NullToPointer>
          (IntegerLiteral 0x9d0e878 <col:34> 'int' 0))))))


static inline int __gthread_create(__gthread_t *__threadid, void *(*__func)(void *), void *__args) (CompoundStmt 0x9c3f048 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:662:1, line:664:1>
  (ReturnStmt 0x9c3f038 <line:663:3, col:68>
    (CallExpr 0x9c3efc8 <<scratch space>:91:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:663:68> 'int'
      (ImplicitCastExpr 0x9c3efb8 <<scratch space>:91:1> 'typeof (pthread_create) *' <FunctionToPointerDecay>
        (DeclRefExpr 0x9c3ef5c <col:1> 'typeof (pthread_create)':'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict) throw()' lvalue Function 0x9d0bcb0 '__gthrw_pthread_create' 'typeof (pthread_create)':'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict) throw()'))
      (ImplicitCastExpr 0x9c3eff8 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:663:36> '__gthread_t *' <LValueToRValue>
        (DeclRefExpr 0x9c3ef04 <col:36> '__gthread_t *' lvalue ParmVar 0x9d0e940 '__threadid' '__gthread_t *'))
      (ImplicitCastExpr 0x9c3f008 </usr/include/clang/3.0/include/stddef.h:47:14> 'const pthread_attr_t *' <NullToPointer>
        (GNUNullExpr 0x9c3ef20 <col:14> 'int'))
      (ImplicitCastExpr 0x9c3f018 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:663:54> 'void *(*)(void *)' <LValueToRValue>
        (DeclRefExpr 0x9c3ef2c <col:54> 'void *(*)(void *)' lvalue ParmVar 0x9d0e9f0 '__func' 'void *(*)(void *)'))
      (ImplicitCastExpr 0x9c3f028 <col:62> 'void *' <LValueToRValue>
        (DeclRefExpr 0x9c3ef44 <col:62> 'void *' lvalue ParmVar 0x9d0ea40 '__args' 'void *')))))


static inline int __gthread_join(__gthread_t __threadid, void **__value_ptr) (CompoundStmt 0x9c3f2d0 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:668:1, line:670:1>
  (ReturnStmt 0x9c3f2c0 <line:669:3, col:57>
    (CallExpr 0x9c3f278 <<scratch space>:92:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:669:57> 'int'
      (ImplicitCastExpr 0x9c3f268 <<scratch space>:92:1> 'typeof (pthread_join) *' <FunctionToPointerDecay>
        (DeclRefExpr 0x9c3f20c <col:1> 'typeof (pthread_join)':'int (pthread_t, void **)' lvalue Function 0x9d0bf50 '__gthrw_pthread_join' 'typeof (pthread_join)':'int (pthread_t, void **)'))
      (ImplicitCastExpr 0x9c3f2a0 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:669:34> '__gthread_t':'unsigned long' <LValueToRValue>
        (DeclRefExpr 0x9c3f1dc <col:34> '__gthread_t':'unsigned long' lvalue ParmVar 0x9c3f070 '__threadid' '__gthread_t':'unsigned long'))
      (ImplicitCastExpr 0x9c3f2b0 <col:46> 'void **' <LValueToRValue>
        (DeclRefExpr 0x9c3f1f4 <col:46> 'void **' lvalue ParmVar 0x9c3f0c0 '__value_ptr' 'void **')))))


static inline int __gthread_detach(__gthread_t __threadid) (CompoundStmt 0x9c3f4a8 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:674:1, line:676:1>
  (ReturnStmt 0x9c3f498 <line:675:3, col:46>
    (CallExpr 0x9c3f468 <<scratch space>:93:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:675:46> 'int'
      (ImplicitCastExpr 0x9c3f458 <<scratch space>:93:1> 'typeof (pthread_detach) *' <FunctionToPointerDecay>
        (DeclRefExpr 0x9c3f424 <col:1> 'typeof (pthread_detach)':'int (pthread_t) throw()' lvalue Function 0x9d0c440 '__gthrw_pthread_detach' 'typeof (pthread_detach)':'int (pthread_t) throw()'))
      (ImplicitCastExpr 0x9c3f488 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:675:36> '__gthread_t':'unsigned long' <LValueToRValue>
        (DeclRefExpr 0x9c3f40c <col:36> '__gthread_t':'unsigned long' lvalue ParmVar 0x9c3f2f0 '__threadid' '__gthread_t':'unsigned long')))))


static inline int __gthread_equal(__gthread_t __t1, __gthread_t __t2) (CompoundStmt 0x9c3f720 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:680:1, line:682:1>
  (ReturnStmt 0x9c3f710 <line:681:3, col:45>
    (CallExpr 0x9c3f6c8 <<scratch space>:94:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:681:45> 'int'
      (ImplicitCastExpr 0x9c3f6b8 <<scratch space>:94:1> 'typeof (pthread_equal) *' <FunctionToPointerDecay>
        (DeclRefExpr 0x9c3f65c <col:1> 'typeof (pthread_equal)':'int (pthread_t, pthread_t) throw()' lvalue Function 0x9d0c130 '__gthrw_pthread_equal' 'typeof (pthread_equal)':'int (pthread_t, pthread_t) throw()'))
      (ImplicitCastExpr 0x9c3f6f0 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:681:35> '__gthread_t':'unsigned long' <LValueToRValue>
        (DeclRefExpr 0x9c3f62c <col:35> '__gthread_t':'unsigned long' lvalue ParmVar 0x9c3f4d0 '__t1' '__gthread_t':'unsigned long'))
      (ImplicitCastExpr 0x9c3f700 <col:41> '__gthread_t':'unsigned long' <LValueToRValue>
        (DeclRefExpr 0x9c3f644 <col:41> '__gthread_t':'unsigned long' lvalue ParmVar 0x9c3f510 '__t2' '__gthread_t':'unsigned long')))))


static inline __gthread_t __gthread_self() (CompoundStmt 0x9c3f8d8 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:686:1, line:688:1>
  (ReturnStmt 0x9c3f8c8 <line:687:3, col:34>
    (CallExpr 0x9c3f8a8 <<scratch space>:95:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:687:34> 'pthread_t':'unsigned long'
      (ImplicitCastExpr 0x9c3f898 <<scratch space>:95:1> 'typeof (pthread_self) *' <FunctionToPointerDecay>
        (DeclRefExpr 0x9c3f844 <col:1> 'typeof (pthread_self)':'pthread_t (void) throw()' lvalue Function 0x9d0c300 '__gthrw_pthread_self' 'typeof (pthread_self)':'pthread_t (void) throw()')))))


static inline int __gthread_yield() (CompoundStmt 0x9c3fa58 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:692:1, line:694:1>
  (ReturnStmt 0x9c3fa48 <line:693:3, col:33>
    (CallExpr 0x9c3fa28 <<scratch space>:96:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:693:33> 'int'
      (ImplicitCastExpr 0x9c3fa18 <<scratch space>:96:1> 'typeof (sched_yield) *' <FunctionToPointerDecay>
        (DeclRefExpr 0x9c3f9e4 <col:1> 'typeof (sched_yield)':'int (void) throw()' lvalue Function 0x9d0c7a0 '__gthrw_sched_yield' 'typeof (sched_yield)':'int (void) throw()')))))


static inline int __gthread_once(__gthread_once_t *__once, void (*__func)()) (CompoundStmt 0x9c3fe50 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:698:1, line:703:1>
  (IfStmt 0x9c3fe30 <line:699:3, line:702:13>
    <<<NULL>>>
    (ImplicitCastExpr 0x9c3fcb8 <line:699:7, col:27> '_Bool' <IntegralToBoolean>
      (CallExpr 0x9c3fc98 <col:7, col:27> 'int'
        (ImplicitCastExpr 0x9c3fc88 <col:7> 'int (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9c3fc6c <col:7> 'int (void)' lvalue Function 0x9d0e720 '__gthread_active_p' 'int (void)'))))
    (ReturnStmt 0x9c3fde0 <line:700:5, col:50>
      (CallExpr 0x9c3fd98 <<scratch space>:97:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:700:50> 'int'
        (ImplicitCastExpr 0x9c3fd88 <<scratch space>:97:1> 'typeof (pthread_once) *' <FunctionToPointerDecay>
          (DeclRefExpr 0x9c3fd2c <col:1> 'typeof (pthread_once)':'int (pthread_once_t *, void (*)(void))' lvalue Function 0x9d0b6d0 '__gthrw_pthread_once' 'typeof (pthread_once)':'int (pthread_once_t *, void (*)(void))'))
        (ImplicitCastExpr 0x9c3fdc0 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:700:36> '__gthread_once_t *' <LValueToRValue>
          (DeclRefExpr 0x9c3fcfc <col:36> '__gthread_once_t *' lvalue ParmVar 0x9c3fab0 '__once' '__gthread_once_t *'))
        (ImplicitCastExpr 0x9c3fdd0 <col:44> 'void (*)(void)' <LValueToRValue>
          (DeclRefExpr 0x9c3fd14 <col:44> 'void (*)(void)' lvalue ParmVar 0x9c3fb50 '__func' 'void (*)(void)'))))
    (ReturnStmt 0x9c3fe20 <line:702:5, col:13>
      (UnaryOperator 0x9c3fe08 <col:12, col:13> 'int' prefix '-'
        (IntegerLiteral 0x9c3fdf0 <col:13> 'int' 1)))))


static inline int __gthread_key_create(__gthread_key_t *__key, void (*__dtor)(void *)) (CompoundStmt 0x9c40170 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:707:1, line:709:1>
  (ReturnStmt 0x9c40160 <line:708:3, col:53>
    (CallExpr 0x9c40118 <<scratch space>:98:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:708:53> 'int'
      (ImplicitCastExpr 0x9c40108 <<scratch space>:98:1> 'typeof (pthread_key_create) *' <FunctionToPointerDecay>
        (DeclRefExpr 0x9c400ac <col:1> 'typeof (pthread_key_create)':'int (pthread_key_t *, void (*)(void *)) throw()' lvalue Function 0x9d0de10 '__gthrw_pthread_key_create' 'typeof (pthread_key_create)':'int (pthread_key_t *, void (*)(void *)) throw()'))
      (ImplicitCastExpr 0x9c40140 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:708:40> '__gthread_key_t *' <LValueToRValue>
        (DeclRefExpr 0x9c4007c <col:40> '__gthread_key_t *' lvalue ParmVar 0x9c3feb0 '__key' '__gthread_key_t *'))
      (ImplicitCastExpr 0x9c40150 <col:47> 'void (*)(void *)' <LValueToRValue>
        (DeclRefExpr 0x9c40094 <col:47> 'void (*)(void *)' lvalue ParmVar 0x9c3ff60 '__dtor' 'void (*)(void *)')))))


static inline int __gthread_key_delete(__gthread_key_t __key) (CompoundStmt 0x9c40348 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:713:1, line:715:1>
  (ReturnStmt 0x9c40338 <line:714:3, col:45>
    (CallExpr 0x9c40308 <<scratch space>:99:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:714:45> 'int'
      (ImplicitCastExpr 0x9c402f8 <<scratch space>:99:1> 'typeof (pthread_key_delete) *' <FunctionToPointerDecay>
        (DeclRefExpr 0x9c402c4 <col:1> 'typeof (pthread_key_delete)':'int (pthread_key_t) throw()' lvalue Function 0x9d0e010 '__gthrw_pthread_key_delete' 'typeof (pthread_key_delete)':'int (pthread_key_t) throw()'))
      (ImplicitCastExpr 0x9c40328 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:714:40> '__gthread_key_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9c402ac <col:40> '__gthread_key_t':'unsigned int' lvalue ParmVar 0x9c40190 '__key' '__gthread_key_t':'unsigned int')))))


static inline void *__gthread_getspecific(__gthread_key_t __key) (CompoundStmt 0x9c40528 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:719:1, line:721:1>
  (ReturnStmt 0x9c40518 <line:720:3, col:46>
    (CallExpr 0x9c404e8 <<scratch space>:100:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:720:46> 'void *'
      (ImplicitCastExpr 0x9c404d8 <<scratch space>:100:1> 'typeof (pthread_getspecific) *' <FunctionToPointerDecay>
        (DeclRefExpr 0x9c404a4 <col:1> 'typeof (pthread_getspecific)':'void *(pthread_key_t) throw()' lvalue Function 0x9d0b8e0 '__gthrw_pthread_getspecific' 'typeof (pthread_getspecific)':'void *(pthread_key_t) throw()'))
      (ImplicitCastExpr 0x9c40508 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:720:41> '__gthread_key_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9c4048c <col:41> '__gthread_key_t':'unsigned int' lvalue ParmVar 0x9c40370 '__key' '__gthread_key_t':'unsigned int')))))


static inline int __gthread_setspecific(__gthread_key_t __key, const void *__ptr) (CompoundStmt 0x9c407b0 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:725:1, line:727:1>
  (ReturnStmt 0x9c407a0 <line:726:3, col:53>
    (CallExpr 0x9c40758 <<scratch space>:101:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:726:53> 'int'
      (ImplicitCastExpr 0x9c40748 <<scratch space>:101:1> 'typeof (pthread_setspecific) *' <FunctionToPointerDecay>
        (DeclRefExpr 0x9c406ec <col:1> 'typeof (pthread_setspecific)':'int (pthread_key_t, const void *) throw()' lvalue Function 0x9d0ba80 '__gthrw_pthread_setspecific' 'typeof (pthread_setspecific)':'int (pthread_key_t, const void *) throw()'))
      (ImplicitCastExpr 0x9c40780 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:726:41> '__gthread_key_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9c406bc <col:41> '__gthread_key_t':'unsigned int' lvalue ParmVar 0x9c40550 '__key' '__gthread_key_t':'unsigned int'))
      (ImplicitCastExpr 0x9c40790 <col:48> 'const void *' <LValueToRValue>
        (DeclRefExpr 0x9c406d4 <col:48> 'const void *' lvalue ParmVar 0x9c405a0 '__ptr' 'const void *')))))


static inline int __gthread_mutex_destroy(__gthread_mutex_t *__mutex) (CompoundStmt 0x9c40ac0 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:731:1, line:736:1>
  (IfStmt 0x9c40aa0 <line:732:3, line:735:12>
    <<<NULL>>>
    (ImplicitCastExpr 0x9c40978 <line:732:7, col:27> '_Bool' <IntegralToBoolean>
      (CallExpr 0x9c40958 <col:7, col:27> 'int'
        (ImplicitCastExpr 0x9c40948 <col:7> 'int (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9c4092c <col:7> 'int (void)' lvalue Function 0x9d0e720 '__gthread_active_p' 'int (void)'))))
    (ReturnStmt 0x9c40a68 <line:733:5, col:52>
      (CallExpr 0x9c40a38 <<scratch space>:102:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:733:52> 'int'
        (ImplicitCastExpr 0x9c40a28 <<scratch space>:102:1> 'typeof (pthread_mutex_destroy) *' <FunctionToPointerDecay>
          (DeclRefExpr 0x9c409d4 <col:1> 'typeof (pthread_mutex_destroy)':'int (pthread_mutex_t *) throw()' lvalue Function 0x9d0d2c0 '__gthrw_pthread_mutex_destroy' 'typeof (pthread_mutex_destroy)':'int (pthread_mutex_t *) throw()'))
        (ImplicitCastExpr 0x9c40a58 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:733:45> '__gthread_mutex_t *' <LValueToRValue>
          (DeclRefExpr 0x9c409bc <col:45> '__gthread_mutex_t *' lvalue ParmVar 0x9c40810 '__mutex' '__gthread_mutex_t *'))))
    (ReturnStmt 0x9c40a90 <line:735:5, col:12>
      (IntegerLiteral 0x9c40a78 <col:12> 'int' 0))))


static inline int __gthread_mutex_lock(__gthread_mutex_t *__mutex) (CompoundStmt 0x9c40d60 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:740:1, line:745:1>
  (IfStmt 0x9c40d40 <line:741:3, line:744:12>
    <<<NULL>>>
    (ImplicitCastExpr 0x9c40c38 <line:741:7, col:27> '_Bool' <IntegralToBoolean>
      (CallExpr 0x9c40c18 <col:7, col:27> 'int'
        (ImplicitCastExpr 0x9c40c08 <col:7> 'int (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9c40bec <col:7> 'int (void)' lvalue Function 0x9d0e720 '__gthread_active_p' 'int (void)'))))
    (ReturnStmt 0x9c40d08 <line:742:5, col:49>
      (CallExpr 0x9c40cd8 <<scratch space>:103:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:742:49> 'int'
        (ImplicitCastExpr 0x9c40cc8 <<scratch space>:103:1> 'typeof (pthread_mutex_lock) *' <FunctionToPointerDecay>
          (DeclRefExpr 0x9c40c94 <col:1> 'typeof (pthread_mutex_lock)':'int (pthread_mutex_t *) throw()' lvalue Function 0x9d0c920 '__gthrw_pthread_mutex_lock' 'typeof (pthread_mutex_lock)':'int (pthread_mutex_t *) throw()'))
        (ImplicitCastExpr 0x9c40cf8 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:742:42> '__gthread_mutex_t *' <LValueToRValue>
          (DeclRefExpr 0x9c40c7c <col:42> '__gthread_mutex_t *' lvalue ParmVar 0x9c40af0 '__mutex' '__gthread_mutex_t *'))))
    (ReturnStmt 0x9c40d30 <line:744:5, col:12>
      (IntegerLiteral 0x9c40d18 <col:12> 'int' 0))))


static inline int __gthread_mutex_trylock(__gthread_mutex_t *__mutex) (CompoundStmt 0x9c41c40 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:749:1, line:754:1>
  (IfStmt 0x9c41c20 <line:750:3, line:753:12>
    <<<NULL>>>
    (ImplicitCastExpr 0x9c41b18 <line:750:7, col:27> '_Bool' <IntegralToBoolean>
      (CallExpr 0x9c41af8 <col:7, col:27> 'int'
        (ImplicitCastExpr 0x9c41ae8 <col:7> 'int (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9c41acc <col:7> 'int (void)' lvalue Function 0x9d0e720 '__gthread_active_p' 'int (void)'))))
    (ReturnStmt 0x9c41be8 <line:751:5, col:52>
      (CallExpr 0x9c41bb8 <<scratch space>:104:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:751:52> 'int'
        (ImplicitCastExpr 0x9c41ba8 <<scratch space>:104:1> 'typeof (pthread_mutex_trylock) *' <FunctionToPointerDecay>
          (DeclRefExpr 0x9c41b74 <col:1> 'typeof (pthread_mutex_trylock)':'int (pthread_mutex_t *) throw()' lvalue Function 0x9d0cb30 '__gthrw_pthread_mutex_trylock' 'typeof (pthread_mutex_trylock)':'int (pthread_mutex_t *) throw()'))
        (ImplicitCastExpr 0x9c41bd8 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:751:45> '__gthread_mutex_t *' <LValueToRValue>
          (DeclRefExpr 0x9c41b5c <col:45> '__gthread_mutex_t *' lvalue ParmVar 0x9c40d90 '__mutex' '__gthread_mutex_t *'))))
    (ReturnStmt 0x9c41c10 <line:753:5, col:12>
      (IntegerLiteral 0x9c41bf8 <col:12> 'int' 0))))


static inline int __gthread_mutex_timedlock(__gthread_mutex_t *__mutex, const __gthread_time_t *__abs_timeout) (CompoundStmt 0x9c41fd8 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:761:1, line:766:1>
  (IfStmt 0x9c41fb8 <line:762:3, line:765:12>
    <<<NULL>>>
    (ImplicitCastExpr 0x9c41e58 <line:762:7, col:27> '_Bool' <IntegralToBoolean>
      (CallExpr 0x9c41e38 <col:7, col:27> 'int'
        (ImplicitCastExpr 0x9c41e28 <col:7> 'int (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9c41e0c <col:7> 'int (void)' lvalue Function 0x9d0e720 '__gthread_active_p' 'int (void)'))))
    (ReturnStmt 0x9c41f80 <line:763:5, col:69>
      (CallExpr 0x9c41f38 <<scratch space>:105:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:763:69> 'int'
        (ImplicitCastExpr 0x9c41f28 <<scratch space>:105:1> 'typeof (pthread_mutex_timedlock) *' <FunctionToPointerDecay>
          (DeclRefExpr 0x9c41ecc <col:1> 'typeof (pthread_mutex_timedlock)':'int (pthread_mutex_t *restrict, const struct timespec *restrict) throw()' lvalue Function 0x9d0cd00 '__gthrw_pthread_mutex_timedlock' 'typeof (pthread_mutex_timedlock)':'int (pthread_mutex_t *restrict, const struct timespec *restrict) throw()'))
        (ImplicitCastExpr 0x9c41f60 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:763:47> '__gthread_mutex_t *' <LValueToRValue>
          (DeclRefExpr 0x9c41e9c <col:47> '__gthread_mutex_t *' lvalue ParmVar 0x9c41c70 '__mutex' '__gthread_mutex_t *'))
        (ImplicitCastExpr 0x9c41f70 <col:56> 'const __gthread_time_t *' <LValueToRValue>
          (DeclRefExpr 0x9c41eb4 <col:56> 'const __gthread_time_t *' lvalue ParmVar 0x9c41cf0 '__abs_timeout' 'const __gthread_time_t *'))))
    (ReturnStmt 0x9c41fa8 <line:765:5, col:12>
      (IntegerLiteral 0x9c41f90 <col:12> 'int' 0))))


static inline int __gthread_mutex_unlock(__gthread_mutex_t *__mutex) (CompoundStmt 0x9c42270 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:772:1, line:777:1>
  (IfStmt 0x9c42250 <line:773:3, line:776:12>
    <<<NULL>>>
    (ImplicitCastExpr 0x9c42148 <line:773:7, col:27> '_Bool' <IntegralToBoolean>
      (CallExpr 0x9c42128 <col:7, col:27> 'int'
        (ImplicitCastExpr 0x9c42118 <col:7> 'int (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9c420fc <col:7> 'int (void)' lvalue Function 0x9d0e720 '__gthread_active_p' 'int (void)'))))
    (ReturnStmt 0x9c42218 <line:774:5, col:51>
      (CallExpr 0x9c421e8 <<scratch space>:106:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:774:51> 'int'
        (ImplicitCastExpr 0x9c421d8 <<scratch space>:106:1> 'typeof (pthread_mutex_unlock) *' <FunctionToPointerDecay>
          (DeclRefExpr 0x9c421a4 <col:1> 'typeof (pthread_mutex_unlock)':'int (pthread_mutex_t *) throw()' lvalue Function 0x9d0cf30 '__gthrw_pthread_mutex_unlock' 'typeof (pthread_mutex_unlock)':'int (pthread_mutex_t *) throw()'))
        (ImplicitCastExpr 0x9c42208 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:774:44> '__gthread_mutex_t *' <LValueToRValue>
          (DeclRefExpr 0x9c4218c <col:44> '__gthread_mutex_t *' lvalue ParmVar 0x9c42000 '__mutex' '__gthread_mutex_t *'))))
    (ReturnStmt 0x9c42240 <line:776:5, col:12>
      (IntegerLiteral 0x9c42228 <col:12> 'int' 0))))


static inline int __gthread_recursive_mutex_lock(__gthread_recursive_mutex_t *__mutex) (CompoundStmt 0x9c42488 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:804:1, line:806:1>
  (ReturnStmt 0x9c42478 <line:805:3, col:39>
    (CallExpr 0x9c42448 <col:10, col:39> 'int'
      (ImplicitCastExpr 0x9c42438 <col:10> 'int (*)(__gthread_mutex_t *)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9c42404 <col:10> 'int (__gthread_mutex_t *)' lvalue Function 0x9c40b50 '__gthread_mutex_lock' 'int (__gthread_mutex_t *)'))
      (ImplicitCastExpr 0x9c42468 <col:32> '__gthread_recursive_mutex_t *' <LValueToRValue>
        (DeclRefExpr 0x9c423ec <col:32> '__gthread_recursive_mutex_t *' lvalue ParmVar 0x9c422d0 '__mutex' '__gthread_recursive_mutex_t *')))))


static inline int __gthread_recursive_mutex_trylock(__gthread_recursive_mutex_t *__mutex) (CompoundStmt 0x9c42630 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:810:1, line:812:1>
  (ReturnStmt 0x9c42620 <line:811:3, col:42>
    (CallExpr 0x9c425f0 <col:10, col:42> 'int'
      (ImplicitCastExpr 0x9c425e0 <col:10> 'int (*)(__gthread_mutex_t *)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9c425c4 <col:10> 'int (__gthread_mutex_t *)' lvalue Function 0x9c40df0 '__gthread_mutex_trylock' 'int (__gthread_mutex_t *)'))
      (ImplicitCastExpr 0x9c42610 <col:35> '__gthread_recursive_mutex_t *' <LValueToRValue>
        (DeclRefExpr 0x9c425ac <col:35> '__gthread_recursive_mutex_t *' lvalue ParmVar 0x9c424b0 '__mutex' '__gthread_recursive_mutex_t *')))))


static inline int __gthread_recursive_mutex_timedlock(__gthread_recursive_mutex_t *__mutex, const __gthread_time_t *__abs_timeout) (CompoundStmt 0x9c428a0 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:819:1, line:821:1>
  (ReturnStmt 0x9c42890 <line:820:3, col:59>
    (CallExpr 0x9c42848 <col:10, col:59> 'int'
      (ImplicitCastExpr 0x9c42838 <col:10> 'int (*)(__gthread_mutex_t *, const __gthread_time_t *)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9c427fc <col:10> 'int (__gthread_mutex_t *, const __gthread_time_t *)' lvalue Function 0x9c41d70 '__gthread_mutex_timedlock' 'int (__gthread_mutex_t *, const __gthread_time_t *)'))
      (ImplicitCastExpr 0x9c42870 <col:37> '__gthread_recursive_mutex_t *' <LValueToRValue>
        (DeclRefExpr 0x9c427cc <col:37> '__gthread_recursive_mutex_t *' lvalue ParmVar 0x9c42660 '__mutex' '__gthread_recursive_mutex_t *'))
      (ImplicitCastExpr 0x9c42880 <col:46> 'const __gthread_time_t *' <LValueToRValue>
        (DeclRefExpr 0x9c427e4 <col:46> 'const __gthread_time_t *' lvalue ParmVar 0x9c426b0 '__abs_timeout' 'const __gthread_time_t *')))))


static inline int __gthread_recursive_mutex_unlock(__gthread_recursive_mutex_t *__mutex) (CompoundStmt 0x9c42a50 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:827:1, line:829:1>
  (ReturnStmt 0x9c42a40 <line:828:3, col:41>
    (CallExpr 0x9c42a10 <col:10, col:41> 'int'
      (ImplicitCastExpr 0x9c42a00 <col:10> 'int (*)(__gthread_mutex_t *)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9c429e4 <col:10> 'int (__gthread_mutex_t *)' lvalue Function 0x9c42060 '__gthread_mutex_unlock' 'int (__gthread_mutex_t *)'))
      (ImplicitCastExpr 0x9c42a30 <col:34> '__gthread_recursive_mutex_t *' <LValueToRValue>
        (DeclRefExpr 0x9c429cc <col:34> '__gthread_recursive_mutex_t *' lvalue ParmVar 0x9c428d0 '__mutex' '__gthread_recursive_mutex_t *')))))


static inline int __gthread_cond_broadcast(__gthread_cond_t *__cond) (CompoundStmt 0x9c42c88 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:833:1, line:835:1>
  (ReturnStmt 0x9c42c78 <line:834:3, col:50>
    (CallExpr 0x9c42c48 <<scratch space>:107:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:834:50> 'int'
      (ImplicitCastExpr 0x9c42c38 <<scratch space>:107:1> 'typeof (pthread_cond_broadcast) *' <FunctionToPointerDecay>
        (DeclRefExpr 0x9c42be4 <col:1> 'typeof (pthread_cond_broadcast)':'int (pthread_cond_t *) throw()' lvalue Function 0x9d0d4b0 '__gthrw_pthread_cond_broadcast' 'typeof (pthread_cond_broadcast)':'int (pthread_cond_t *) throw()'))
      (ImplicitCastExpr 0x9c42c68 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:834:44> '__gthread_cond_t *' <LValueToRValue>
        (DeclRefExpr 0x9c42bcc <col:44> '__gthread_cond_t *' lvalue ParmVar 0x9c42ab0 '__cond' '__gthread_cond_t *')))))


static inline int __gthread_cond_signal(__gthread_cond_t *__cond) (CompoundStmt 0x9c42e48 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:839:1, line:841:1>
  (ReturnStmt 0x9c42e38 <line:840:3, col:47>
    (CallExpr 0x9c42e08 <<scratch space>:108:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:840:47> 'int'
      (ImplicitCastExpr 0x9c42df8 <<scratch space>:108:1> 'typeof (pthread_cond_signal) *' <FunctionToPointerDecay>
        (DeclRefExpr 0x9c42dc4 <col:1> 'typeof (pthread_cond_signal)':'int (pthread_cond_t *) throw()' lvalue Function 0x9d0d650 '__gthrw_pthread_cond_signal' 'typeof (pthread_cond_signal)':'int (pthread_cond_t *) throw()'))
      (ImplicitCastExpr 0x9c42e28 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:840:41> '__gthread_cond_t *' <LValueToRValue>
        (DeclRefExpr 0x9c42dac <col:41> '__gthread_cond_t *' lvalue ParmVar 0x9c42cb0 '__cond' '__gthread_cond_t *')))))


static inline int __gthread_cond_wait(__gthread_cond_t *__cond, __gthread_mutex_t *__mutex) (CompoundStmt 0x9c430d0 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:845:1, line:847:1>
  (ReturnStmt 0x9c430c0 <line:846:3, col:54>
    (CallExpr 0x9c43078 <<scratch space>:109:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:846:54> 'int'
      (ImplicitCastExpr 0x9c43068 <<scratch space>:109:1> 'typeof (pthread_cond_wait) *' <FunctionToPointerDecay>
        (DeclRefExpr 0x9c4300c <col:1> 'typeof (pthread_cond_wait)':'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' lvalue Function 0x9d0d830 '__gthrw_pthread_cond_wait' 'typeof (pthread_cond_wait)':'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)'))
      (ImplicitCastExpr 0x9c430a0 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:846:39> '__gthread_cond_t *' <LValueToRValue>
        (DeclRefExpr 0x9c42fdc <col:39> '__gthread_cond_t *' lvalue ParmVar 0x9c42e70 '__cond' '__gthread_cond_t *'))
      (ImplicitCastExpr 0x9c430b0 <col:47> '__gthread_mutex_t *' <LValueToRValue>
        (DeclRefExpr 0x9c42ff4 <col:47> '__gthread_mutex_t *' lvalue ParmVar 0x9c42ec0 '__mutex' '__gthread_mutex_t *')))))


static inline int __gthread_cond_timedwait(__gthread_cond_t *__cond, __gthread_mutex_t *__mutex, const __gthread_time_t *__abs_timeout) (CompoundStmt 0x9c433f0 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:852:1, line:854:1>
  (ReturnStmt 0x9c433e0 <line:853:3, col:74>
    (CallExpr 0x9c43388 <<scratch space>:110:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:853:74> 'int'
      (ImplicitCastExpr 0x9c43378 <<scratch space>:110:1> 'typeof (pthread_cond_timedwait) *' <FunctionToPointerDecay>
        (DeclRefExpr 0x9c4331c <col:1> 'typeof (pthread_cond_timedwait)':'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' lvalue Function 0x9d0da20 '__gthrw_pthread_cond_timedwait' 'typeof (pthread_cond_timedwait)':'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)'))
      (ImplicitCastExpr 0x9c433b0 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:853:44> '__gthread_cond_t *' <LValueToRValue>
        (DeclRefExpr 0x9c432d4 <col:44> '__gthread_cond_t *' lvalue ParmVar 0x9c43100 '__cond' '__gthread_cond_t *'))
      (ImplicitCastExpr 0x9c433c0 <col:52> '__gthread_mutex_t *' <LValueToRValue>
        (DeclRefExpr 0x9c432ec <col:52> '__gthread_mutex_t *' lvalue ParmVar 0x9c43150 '__mutex' '__gthread_mutex_t *'))
      (ImplicitCastExpr 0x9c433d0 <col:61> 'const __gthread_time_t *' <LValueToRValue>
        (DeclRefExpr 0x9c43304 <col:61> 'const __gthread_time_t *' lvalue ParmVar 0x9c431a0 '__abs_timeout' 'const __gthread_time_t *')))))


static inline int __gthread_cond_wait_recursive(__gthread_cond_t *__cond, __gthread_recursive_mutex_t *__mutex) (CompoundStmt 0x9c43660 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:859:1, line:861:1>
  (ReturnStmt 0x9c43650 <line:860:3, col:46>
    (CallExpr 0x9c43608 <col:10, col:46> 'int'
      (ImplicitCastExpr 0x9c435f8 <col:10> 'int (*)(__gthread_cond_t *, __gthread_mutex_t *)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9c435bc <col:10> 'int (__gthread_cond_t *, __gthread_mutex_t *)' lvalue Function 0x9c42f40 '__gthread_cond_wait' 'int (__gthread_cond_t *, __gthread_mutex_t *)'))
      (ImplicitCastExpr 0x9c43630 <col:31> '__gthread_cond_t *' <LValueToRValue>
        (DeclRefExpr 0x9c4358c <col:31> '__gthread_cond_t *' lvalue ParmVar 0x9c43420 '__cond' '__gthread_cond_t *'))
      (ImplicitCastExpr 0x9c43640 <col:39> '__gthread_recursive_mutex_t *' <LValueToRValue>
        (DeclRefExpr 0x9c435a4 <col:39> '__gthread_recursive_mutex_t *' lvalue ParmVar 0x9c43470 '__mutex' '__gthread_recursive_mutex_t *')))))


static inline int __gthread_cond_timedwait_recursive(__gthread_cond_t *__cond, __gthread_recursive_mutex_t *__mutex, const __gthread_time_t *__abs_timeout) (CompoundStmt 0x9c43960 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:867:1, line:869:1>
  (ReturnStmt 0x9c43950 <line:868:3, col:66>
    (CallExpr 0x9c438f8 <col:10, col:66> 'int'
      (ImplicitCastExpr 0x9c438e8 <col:10> 'int (*)(__gthread_cond_t *, __gthread_mutex_t *, const __gthread_time_t *)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9c438ac <col:10> 'int (__gthread_cond_t *, __gthread_mutex_t *, const __gthread_time_t *)' lvalue Function 0x9c43230 '__gthread_cond_timedwait' 'int (__gthread_cond_t *, __gthread_mutex_t *, const __gthread_time_t *)'))
      (ImplicitCastExpr 0x9c43920 <col:36> '__gthread_cond_t *' <LValueToRValue>
        (DeclRefExpr 0x9c43864 <col:36> '__gthread_cond_t *' lvalue ParmVar 0x9c43690 '__cond' '__gthread_cond_t *'))
      (ImplicitCastExpr 0x9c43930 <col:44> '__gthread_recursive_mutex_t *' <LValueToRValue>
        (DeclRefExpr 0x9c4387c <col:44> '__gthread_recursive_mutex_t *' lvalue ParmVar 0x9c436e0 '__mutex' '__gthread_recursive_mutex_t *'))
      (ImplicitCastExpr 0x9c43940 <col:53> 'const __gthread_time_t *' <LValueToRValue>
        (DeclRefExpr 0x9c43894 <col:53> 'const __gthread_time_t *' lvalue ParmVar 0x9c43730 '__abs_timeout' 'const __gthread_time_t *')))))


static inline int __gthread_cond_destroy(__gthread_cond_t *__cond) (CompoundStmt 0x9d1ebc8 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:873:1, line:875:1>
  (ReturnStmt 0x9d1ebb8 <line:874:3, col:48>
    (CallExpr 0x9d1eb88 <<scratch space>:111:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:874:48> 'int'
      (ImplicitCastExpr 0x9d1eb78 <<scratch space>:111:1> 'typeof (pthread_cond_destroy) *' <FunctionToPointerDecay>
        (DeclRefExpr 0x9d1eb44 <col:1> 'typeof (pthread_cond_destroy)':'int (pthread_cond_t *) throw()' lvalue Function 0x9d0dc70 '__gthrw_pthread_cond_destroy' 'typeof (pthread_cond_destroy)':'int (pthread_cond_t *) throw()'))
      (ImplicitCastExpr 0x9d1eba8 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:874:42> '__gthread_cond_t *' <LValueToRValue>
        (DeclRefExpr 0x9d1eb2c <col:42> '__gthread_cond_t *' lvalue ParmVar 0x9c43990 '__cond' '__gthread_cond_t *')))))


typedef int _Atomic_word;
namespace __gnu_cxx {
    static inline _Atomic_word __exchange_and_add(volatile _Atomic_word *__mem, int __val) (CompoundStmt 0x9d1f128 </usr/include/c++/4.6/ext/atomicity.h:48:3, col:48>
  (ReturnStmt 0x9d1f118 <col:5, col:45>
    (CallExpr 0x9d1ef48 <col:12, col:45> '_Atomic_word':'int'
      (ImplicitCastExpr 0x9d1f108 <col:12> 'int (*)(volatile int *, int, ...)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9d1f0d4 <col:12> 'int (volatile int *, int, ...)' lvalue Function 0x9d1efb0 '__sync_fetch_and_add_4' 'int (volatile int *, int, ...)'))
      (ImplicitCastExpr 0x9d1ef70 <col:33> 'volatile _Atomic_word *' <LValueToRValue>
        (DeclRefExpr 0x9d1eee4 <col:33> 'volatile _Atomic_word *' lvalue ParmVar 0x9d1ed10 '__mem' 'volatile _Atomic_word *'))
      (ImplicitCastExpr 0x9d1f0c8 <col:40> 'int' <LValueToRValue>
        (DeclRefExpr 0x9d1eefc <col:40> 'int' lvalue ParmVar 0x9d1ed60 '__val' 'int')))))


    static inline void __atomic_add(volatile _Atomic_word *__mem, int __val) (CompoundStmt 0x9d1f4a0 </usr/include/c++/4.6/ext/atomicity.h:52:3, col:41>
  (CallExpr 0x9d1f300 <col:5, col:38> '_Atomic_word':'int'
    (ImplicitCastExpr 0x9d1f490 <col:5> 'int (*)(volatile int *, int, ...)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9d1f474 <col:5> 'int (volatile int *, int, ...)' lvalue Function 0x9d1f350 '__sync_fetch_and_add_4' 'int (volatile int *, int, ...)'))
    (ImplicitCastExpr 0x9d1f328 <col:26> 'volatile _Atomic_word *' <LValueToRValue>
      (DeclRefExpr 0x9d1f2c0 <col:26> 'volatile _Atomic_word *' lvalue ParmVar 0x9d1f150 '__mem' 'volatile _Atomic_word *'))
    (ImplicitCastExpr 0x9d1f468 <col:33> 'int' <LValueToRValue>
      (DeclRefExpr 0x9d1f2d8 <col:33> 'int' lvalue ParmVar 0x9d1f1a0 '__val' 'int'))))


    static inline _Atomic_word __exchange_and_add_single(_Atomic_word *__mem, int __val) (CompoundStmt 0x9d1f788 </usr/include/c++/4.6/ext/atomicity.h:65:3, line:69:3>
  (DeclStmt 0x9d1f6b8 <line:66:5, col:35>
    0x9d1f630 "_Atomic_word __result =
      (ImplicitCastExpr 0x9d1f6a8 <col:29, col:30> '_Atomic_word':'int' <LValueToRValue>
        (UnaryOperator 0x9d1f690 <col:29, col:30> '_Atomic_word':'int' lvalue prefix '*'
          (ImplicitCastExpr 0x9d1f680 <col:30> '_Atomic_word *' <LValueToRValue>
            (DeclRefExpr 0x9d1f664 <col:30> '_Atomic_word *' lvalue ParmVar 0x9d1f4f0 '__mem' '_Atomic_word *'))))")
  (CompoundAssignOperator 0x9d1f730 <line:67:5, col:15> '_Atomic_word':'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
    (UnaryOperator 0x9d1f6f0 <col:5, col:6> '_Atomic_word':'int' lvalue prefix '*'
      (ImplicitCastExpr 0x9d1f6e0 <col:6> '_Atomic_word *' <LValueToRValue>
        (DeclRefExpr 0x9d1f6c8 <col:6> '_Atomic_word *' lvalue ParmVar 0x9d1f4f0 '__mem' '_Atomic_word *')))
    (ImplicitCastExpr 0x9d1f720 <col:15> 'int' <LValueToRValue>
      (DeclRefExpr 0x9d1f704 <col:15> 'int' lvalue ParmVar 0x9d1f540 '__val' 'int')))
  (ReturnStmt 0x9d1f778 <line:68:5, col:12>
    (ImplicitCastExpr 0x9d1f768 <col:12> '_Atomic_word':'int' <LValueToRValue>
      (DeclRefExpr 0x9d1f750 <col:12> '_Atomic_word':'int' lvalue Var 0x9d1f630 '__result' '_Atomic_word':'int'))))


    static inline void __atomic_add_single(_Atomic_word *__mem, int __val) (CompoundStmt 0x9d1f9a0 </usr/include/c++/4.6/ext/atomicity.h:73:3, col:22>
  (CompoundAssignOperator 0x9d1f980 <col:5, col:15> '_Atomic_word':'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
    (UnaryOperator 0x9d1f940 <col:5, col:6> '_Atomic_word':'int' lvalue prefix '*'
      (ImplicitCastExpr 0x9d1f930 <col:6> '_Atomic_word *' <LValueToRValue>
        (DeclRefExpr 0x9d1f918 <col:6> '_Atomic_word *' lvalue ParmVar 0x9d1f7c0 '__mem' '_Atomic_word *')))
    (ImplicitCastExpr 0x9d1f970 <col:15> 'int' <LValueToRValue>
      (DeclRefExpr 0x9d1f954 <col:15> 'int' lvalue ParmVar 0x9d1f810 '__val' 'int'))))


    static inline _Atomic_word __exchange_and_add_dispatch(_Atomic_word *__mem, int __val) (CompoundStmt 0x9d1fe30 </usr/include/c++/4.6/ext/atomicity.h:78:3, line:87:3>
  (IfStmt 0x9d1fe10 <line:80:5, line:83:52>
    <<<NULL>>>
    (ImplicitCastExpr 0x9d1fba8 <line:80:9, col:28> '_Bool' <IntegralToBoolean>
      (CallExpr 0x9d1fb88 <col:9, col:28> 'int'
        (ImplicitCastExpr 0x9d1fb78 <col:9> 'int (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9d1fb5c <col:9> 'int (void)' lvalue Function 0x9d0e720 '__gthread_active_p' 'int (void)'))))
    (ReturnStmt 0x9d1fce0 <line:81:7, col:45>
      (CallExpr 0x9d1fc88 <col:14, col:45> '_Atomic_word':'int'
        (ImplicitCastExpr 0x9d1fc78 <col:14> '_Atomic_word (*)(volatile _Atomic_word *, int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9d1fc1c <col:14> '_Atomic_word (volatile _Atomic_word *, int)' lvalue Function 0x9d1ede0 '__exchange_and_add' '_Atomic_word (volatile _Atomic_word *, int)'))
        (ImplicitCastExpr 0x9d1fcc0 <col:33> 'volatile _Atomic_word *' <NoOp>
          (ImplicitCastExpr 0x9d1fcb0 <col:33> '_Atomic_word *' <LValueToRValue>
            (DeclRefExpr 0x9d1fbec <col:33> '_Atomic_word *' lvalue ParmVar 0x9d1f9d0 '__mem' '_Atomic_word *')))
        (ImplicitCastExpr 0x9d1fcd0 <col:40> 'int' <LValueToRValue>
          (DeclRefExpr 0x9d1fc04 <col:40> 'int' lvalue ParmVar 0x9d1fa20 '__val' 'int'))))
    (ReturnStmt 0x9d1fe00 <line:83:7, col:52>
      (CallExpr 0x9d1fdb8 <col:14, col:52> '_Atomic_word':'int'
        (ImplicitCastExpr 0x9d1fda8 <col:14> '_Atomic_word (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9d1fd54 <col:14> '_Atomic_word (_Atomic_word *, int)' lvalue Function 0x9d1f5c0 '__exchange_and_add_single' '_Atomic_word (_Atomic_word *, int)'))
        (ImplicitCastExpr 0x9d1fde0 <col:40> '_Atomic_word *' <LValueToRValue>
          (DeclRefExpr 0x9d1fd24 <col:40> '_Atomic_word *' lvalue ParmVar 0x9d1f9d0 '__mem' '_Atomic_word *'))
        (ImplicitCastExpr 0x9d1fdf0 <col:47> 'int' <LValueToRValue>
          (DeclRefExpr 0x9d1fd3c <col:47> 'int' lvalue ParmVar 0x9d1fa20 '__val' 'int'))))))


    static inline void __atomic_add_dispatch(_Atomic_word *__mem, int __val) (CompoundStmt 0x9d202a0 </usr/include/c++/4.6/ext/atomicity.h:92:3, line:101:3>
  (IfStmt 0x9d20280 <line:94:5, line:97:39>
    <<<NULL>>>
    (ImplicitCastExpr 0x9d20038 <line:94:9, col:28> '_Bool' <IntegralToBoolean>
      (CallExpr 0x9d20018 <col:9, col:28> 'int'
        (ImplicitCastExpr 0x9d20008 <col:9> 'int (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9d1ffec <col:9> 'int (void)' lvalue Function 0x9d0e720 '__gthread_active_p' 'int (void)'))))
    (CallExpr 0x9d20118 <line:95:7, col:32> 'void'
      (ImplicitCastExpr 0x9d20108 <col:7> 'void (*)(volatile _Atomic_word *, int)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9d200ac <col:7> 'void (volatile _Atomic_word *, int)' lvalue Function 0x9d1f240 '__atomic_add' 'void (volatile _Atomic_word *, int)'))
      (ImplicitCastExpr 0x9d20150 <col:20> 'volatile _Atomic_word *' <NoOp>
        (ImplicitCastExpr 0x9d20140 <col:20> '_Atomic_word *' <LValueToRValue>
          (DeclRefExpr 0x9d2007c <col:20> '_Atomic_word *' lvalue ParmVar 0x9d1fe60 '__mem' '_Atomic_word *')))
      (ImplicitCastExpr 0x9d20160 <col:27> 'int' <LValueToRValue>
        (DeclRefExpr 0x9d20094 <col:27> 'int' lvalue ParmVar 0x9d1feb0 '__val' 'int')))
    (CallExpr 0x9d20238 <line:97:7, col:39> 'void'
      (ImplicitCastExpr 0x9d20228 <col:7> 'void (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9d201d4 <col:7> 'void (_Atomic_word *, int)' lvalue Function 0x9d1f8b0 '__atomic_add_single' 'void (_Atomic_word *, int)'))
      (ImplicitCastExpr 0x9d20260 <col:27> '_Atomic_word *' <LValueToRValue>
        (DeclRefExpr 0x9d201a4 <col:27> '_Atomic_word *' lvalue ParmVar 0x9d1fe60 '__mem' '_Atomic_word *'))
      (ImplicitCastExpr 0x9d20270 <col:34> 'int' <LValueToRValue>
        (DeclRefExpr 0x9d201bc <col:34> 'int' lvalue ParmVar 0x9d1feb0 '__val' 'int')))))


}
extern void __sync_fetch_and_add();
extern int __sync_fetch_and_add_4(volatile int *, int, ...);
extern int __sync_fetch_and_add_4(volatile int *, int, ...);
namespace std {
    template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> class basic_string {
        class basic_string;
        typedef typename allocator<char>::rebind<char>::other _CharT_alloc_type;
    public:
    public:
        typedef std::char_traits<char> traits_type;
        typedef typename char_traits<char>::char_type value_type;
        typedef std::allocator<char> allocator_type;
        typedef typename _CharT_alloc_type::size_type size_type;
        typedef typename _CharT_alloc_type::difference_type difference_type;
        typedef typename _CharT_alloc_type::reference reference;
        typedef typename _CharT_alloc_type::const_reference const_reference;
        typedef typename _CharT_alloc_type::pointer pointer;
        typedef typename _CharT_alloc_type::const_pointer const_pointer;
        typedef __gnu_cxx::__normal_iterator<pointer, basic_string<char> > iterator;
        typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string<char> > const_iterator;
        typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
        typedef std::reverse_iterator<iterator> reverse_iterator;
    private:
    private:
        struct _Rep_base {
            struct _Rep_base;
            size_type _M_length;
            size_type _M_capacity;
            _Atomic_word _M_refcount;
        };
        struct _Rep :  std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep_base {
            struct _Rep;
            typedef typename allocator<char>::rebind<char>::other _Raw_bytes_alloc;
            static const size_type _S_max_size;
            static const char _S_terminal;
            static size_type _S_empty_rep_storage[];
            static std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep &_S_empty_rep();
            bool _M_is_leaked() const;
            bool _M_is_shared() const;
            void _M_set_leaked();
            void _M_set_sharable();
            void _M_set_length_and_sharable(size_type __n);
            char *_M_refdata() throw();
            char *_M_grab(const std::allocator<char> &__alloc1, const std::allocator<char> &__alloc2);
            static std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep *_S_create(size_type, size_type, const std::allocator<char> &);
            void _M_dispose(const std::allocator<char> &__a);
            void _M_destroy(const std::allocator<char> &) throw();
            char *_M_refcopy() throw();
            char *_M_clone(const std::allocator<char> &, size_type __res);
        };
        struct _Alloc_hider :  std::allocator<char> {
            struct _Alloc_hider;
            _Alloc_hider(char *__dat, const std::allocator<char> &__a);
            char *_M_p;
        };
    public:
    public:
        static const size_type npos = (CXXStaticCastExpr 0x9d9ae98 </usr/include/c++/4.6/bits/basic_string.h:279:37, col:62> 'size_type':'unsigned int' static_cast<size_type> <NoOp>
  (ImplicitCastExpr 0x9d9ae88 <col:60, col:61> 'size_type':'unsigned int' <IntegralCast>
    (UnaryOperator 0x9d24990 <col:60, col:61> 'int' prefix '-'
      (IntegerLiteral 0x9d24978 <col:61> 'int' 1))))
;
    private:
    private:
        mutable std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider _M_dataplus;
        char *_M_data() const (CompoundStmt 0xa0d7970 </usr/include/c++/4.6/bits/basic_string.h:287:7, col:35>
  (ReturnStmt 0xa0d7960 <col:9, col:29>
    (ImplicitCastExpr 0xa0d7950 <col:17, col:29> 'char *' <LValueToRValue>
      (MemberExpr 0xa0d7930 <col:17, col:29> 'char *' lvalue ._M_p 0x9d9b420
        (MemberExpr 0xa0d7910 <col:17> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Alloc_hider' lvalue ->_M_dataplus 0x9d9b450
          (CXXThisExpr 0xa0d77f0 <col:17> 'const class std::basic_string<char> *' this))))))


        char *_M_data(char *__p);
        std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep *_M_rep() const (CompoundStmt 0xa0d77d8 </usr/include/c++/4.6/bits/basic_string.h:295:7, col:62>
  (ReturnStmt 0xa0d77c8 <col:9, col:59>
    (UnaryOperator 0xa0d77b0 <col:16, col:59> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *' prefix '&'
      (ParenExpr 0xa0d7798 <col:17, col:59> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep' lvalue
        (ArraySubscriptExpr 0xa0d7780 <col:18, col:58> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep' lvalue
          (ParenExpr 0xa0d7768 <col:18, col:54> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *'
            (CXXReinterpretCastExpr 0xa0d7750 <col:19, col:53> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *' reinterpret_cast<struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *> <BitCast>
              (CXXMemberCallExpr 0xa0d7730 <col:44, col:52> 'char *'
                (MemberExpr 0xa0d7710 <col:44> '<bound member function type>' ->_M_data 0x9d9b4d0
                  (CXXThisExpr 0xa0d7700 <col:44> 'const class std::basic_string<char> *' this)))))
          (UnaryOperator 0x9d46d68 <col:56, col:57> 'int' prefix '-'
            (IntegerLiteral 0x9d46d50 <col:57> 'int' 1)))))))


        iterator _M_ibegin() const;
        iterator _M_iend() const;
        void _M_leak();
        size_type _M_check(size_type __pos, const char *__s) const;
        void _M_check_length(size_type __n1, size_type __n2, const char *__s) const;
        size_type _M_limit(size_type __pos, size_type __off) const;
        bool _M_disjunct(const char *__s) const;
        static void _M_copy(char *__d, const char *__s, size_type __n);
        static void _M_move(char *__d, const char *__s, size_type __n);
        static void _M_assign(char *__d, size_type __n, char __c);
        template <class _Iterator> static void _S_copy_chars(char *__p, _Iterator __k1, _Iterator __k2);
        static void _S_copy_chars(char *__p, iterator __k1, iterator __k2);
        static void _S_copy_chars(char *__p, const_iterator __k1, const_iterator __k2);
        static void _S_copy_chars(char *__p, char *__k1, char *__k2);
        static void _S_copy_chars(char *__p, const char *__k1, const char *__k2);
        static int _S_compare(size_type __n1, size_type __n2);
        void _M_mutate(size_type __pos, size_type __len1, size_type __len2);
        void _M_leak_hard();
        static std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep &_S_empty_rep();
    public:
    public:
        basic_string();
        basic_string(const std::allocator<char> &__a);
        basic_string(const std::basic_string<char> &__str);
        basic_string(const std::basic_string<char> &__str, size_type __pos, size_type __n);
        basic_string(const std::basic_string<char> &__str, size_type __pos, size_type __n, const std::allocator<char> &__a);
        basic_string(const char *__s, size_type __n, const std::allocator<char> &__a);
        basic_string(const char *__s, const std::allocator<char> &__a);
        basic_string(size_type __n, char __c, const std::allocator<char> &__a);
        template <class _InputIterator> basic_string(_InputIterator __beg, _InputIterator __end, const std::allocator<char> &__a);
        void ~basic_string();
        std::basic_string<char> &operator=(const std::basic_string<char> &__str);
        std::basic_string<char> &operator=(const char *__s);
        std::basic_string<char> &operator=(char __c);
        iterator begin();
        const_iterator begin() const;
        iterator end();
        const_iterator end() const;
        reverse_iterator rbegin();
        const_reverse_iterator rbegin() const;
        reverse_iterator rend();
        const_reverse_iterator rend() const;
    public:
    public:
        size_type size() const (CompoundStmt 0xa0d7128 </usr/include/c++/4.6/bits/basic_string.h:710:7, col:37>
  (ReturnStmt 0xa0d7118 <col:9, col:26>
    (ImplicitCastExpr 0xa0d7108 <col:16, col:26> 'size_type':'unsigned int' <LValueToRValue>
      (MemberExpr 0xa0d70e8 <col:16, col:26> 'size_type':'unsigned int' lvalue ->_M_length 0x9dbb390
        (ImplicitCastExpr 0xa0d70d8 <col:16, col:23> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
          (CXXMemberCallExpr 0xa0d70a0 <col:16, col:23> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *'
            (MemberExpr 0xa0d7080 <col:16> '<bound member function type>' ->_M_rep 0x9d9b7a0
              (CXXThisExpr 0xa0d6f58 <col:16> 'const class std::basic_string<char> *' this))))))))


        size_type length() const;
        size_type max_size() const;
        void resize(size_type __n, char __c);
        void resize(size_type __n);
        size_type capacity() const;
        void reserve(size_type __res_arg);
        void clear();
        bool empty() const (CompoundStmt 0xa0d6f40 </usr/include/c++/4.6/bits/basic_string.h:803:7, col:35>
  (ReturnStmt 0xa0d6f30 <col:9, col:32>
    (BinaryOperator 0xa0d6f18 <col:16, col:32> '_Bool' '=='
      (CXXMemberCallExpr 0xa0d6ee8 <col:16, col:27> 'size_type':'unsigned int'
        (MemberExpr 0xa0d6ec8 <col:16, col:22> '<bound member function type>' ->size 0x9da2750
          (CXXThisExpr 0xa0d6eb8 <col:16> 'const class std::basic_string<char> *' this)))
      (ImplicitCastExpr 0xa0d6f08 <col:32> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0x9d4f748 <col:32> 'int' 0)))))


        const_reference operator[](size_type __pos) const;
        reference operator[](size_type __pos);
        const_reference at(size_type __n) const (CompoundStmt 0xa0d8010 </usr/include/c++/4.6/bits/basic_string.h:856:7, line:860:7>
  (IfStmt 0xa0d7a98 <line:857:2, line:858:48>
    <<<NULL>>>
    (BinaryOperator 0xa0d7a40 <line:857:6, col:24> '_Bool' '>='
      (ImplicitCastExpr 0xa0d7a30 <col:6> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa0d79c4 <col:6> 'size_type':'unsigned int' lvalue ParmVar 0x9da3cb0 '__n' 'size_type':'unsigned int'))
      (CXXMemberCallExpr 0xa0d7a10 <col:13, col:24> 'size_type':'unsigned int'
        (MemberExpr 0xa0d79f0 <col:13, col:19> '<bound member function type>' ->size 0x9da2750
          (CXXThisExpr 0xa0d79e0 <col:13> 'const class std::basic_string<char> *' this))))
    (CallExpr 0xa0d7a68 <line:858:4, col:48> 'void'
      (ImplicitCastExpr 0xa0d7a58 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x9d4fbb4 <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9b766b0 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa0d7a88 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0x9d4fba0 <col:24, col:30> 'const char [17]' lvalue
          (StringLiteral 0x9d4fb70 </usr/include/c++/4.6/bits/basic_string.h:858:29> 'const char [17]' lvalue "basic_string::at"))))
    <<<NULL>>>)
  (ReturnStmt 0xa0d8000 <line:859:2, col:22>
    (ImplicitCastExpr 0xa0d7ff0 <col:9, col:22> 'const char':'const char' lvalue <NoOp>
      (ArraySubscriptExpr 0xa0d7fd8 <col:9, col:22> 'char':'char' lvalue
        (CXXMemberCallExpr 0xa0d7f90 <col:9, col:17> 'char *'
          (MemberExpr 0xa0d7f70 <col:9> '<bound member function type>' ->_M_data 0x9d9b4d0
            (CXXThisExpr 0xa0d7f60 <col:9> 'const class std::basic_string<char> *' this)))
        (ImplicitCastExpr 0xa0d7fc8 <col:19> 'size_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa0d7fac <col:19> 'size_type':'unsigned int' lvalue ParmVar 0x9da3cb0 '__n' 'size_type':'unsigned int'))))))


        reference at(size_type __n);
        std::basic_string<char> &operator+=(const std::basic_string<char> &__str);
        std::basic_string<char> &operator+=(const char *__s);
        std::basic_string<char> &operator+=(char __c);
        std::basic_string<char> &append(const std::basic_string<char> &__str);
        std::basic_string<char> &append(const std::basic_string<char> &__str, size_type __pos, size_type __n);
        std::basic_string<char> &append(const char *__s, size_type __n);
        std::basic_string<char> &append(const char *__s);
        std::basic_string<char> &append(size_type __n, char __c);
        template <class _InputIterator> std::basic_string<char> &append(_InputIterator __first, _InputIterator __last);
        void push_back(char __c);
        std::basic_string<char> &assign(const std::basic_string<char> &__str);
        std::basic_string<char> &assign(const std::basic_string<char> &__str, size_type __pos, size_type __n);
        std::basic_string<char> &assign(const char *__s, size_type __n);
        std::basic_string<char> &assign(const char *__s);
        std::basic_string<char> &assign(size_type __n, char __c);
        template <class _InputIterator> std::basic_string<char> &assign(_InputIterator __first, _InputIterator __last);
        void insert(iterator __p, size_type __n, char __c);
        template <class _InputIterator> void insert(iterator __p, _InputIterator __beg, _InputIterator __end);
        std::basic_string<char> &insert(size_type __pos1, const std::basic_string<char> &__str);
        std::basic_string<char> &insert(size_type __pos1, const std::basic_string<char> &__str, size_type __pos2, size_type __n);
        std::basic_string<char> &insert(size_type __pos, const char *__s, size_type __n);
        std::basic_string<char> &insert(size_type __pos, const char *__s);
        std::basic_string<char> &insert(size_type __pos, size_type __n, char __c);
        iterator insert(iterator __p, char __c);
        std::basic_string<char> &erase(size_type __pos, size_type __n);
        iterator erase(iterator __position);
        iterator erase(iterator __first, iterator __last);
        std::basic_string<char> &replace(size_type __pos, size_type __n, const std::basic_string<char> &__str);
        std::basic_string<char> &replace(size_type __pos1, size_type __n1, const std::basic_string<char> &__str, size_type __pos2, size_type __n2);
        std::basic_string<char> &replace(size_type __pos, size_type __n1, const char *__s, size_type __n2);
        std::basic_string<char> &replace(size_type __pos, size_type __n1, const char *__s);
        std::basic_string<char> &replace(size_type __pos, size_type __n1, size_type __n2, char __c);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const std::basic_string<char> &__str);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const char *__s, size_type __n);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const char *__s);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, size_type __n, char __c);
        template <class _InputIterator> std::basic_string<char> &replace(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, char *__k1, char *__k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const char *__k1, const char *__k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const_iterator __k1, const_iterator __k2);
    private:
    private:
        template <class _Integer> std::basic_string<char> &_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n, _Integer __val, std::__true_type);
        template <class _InputIterator> std::basic_string<char> &_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2, std::__false_type);
        std::basic_string<char> &_M_replace_aux(size_type __pos1, size_type __n1, size_type __n2, char __c);
        std::basic_string<char> &_M_replace_safe(size_type __pos1, size_type __n1, const char *__s, size_type __n2);
        template <class _InIterator> static char *_S_construct_aux(_InIterator __beg, _InIterator __end, const std::allocator<char> &__a, std::__false_type);
        template <class _Integer> static char *_S_construct_aux(_Integer __beg, _Integer __end, const std::allocator<char> &__a, std::__true_type);
        static char *_S_construct_aux_2(size_type __req, char __c, const std::allocator<char> &__a);
        template <class _InIterator> static char *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<char> &__a);
        template <class _InIterator> static char *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<char> &__a, std::input_iterator_tag);
        template <class _FwdIterator> static char *_S_construct(_FwdIterator __beg, _FwdIterator __end, const std::allocator<char> &__a, std::forward_iterator_tag);
        static char *_S_construct(size_type __req, char __c, const std::allocator<char> &__a);
    public:
    public:
        size_type copy(char *__s, size_type __n, size_type __pos) const;
        void swap(std::basic_string<char> &__s);
        const char *c_str() const;
        const char *data() const;
        allocator_type get_allocator() const;
        size_type find(const char *__s, size_type __pos, size_type __n) const;
        size_type find(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find(const char *__s, size_type __pos) const;
        size_type find(char __c, size_type __pos) const;
        size_type rfind(const std::basic_string<char> &__str, size_type __pos) const;
        size_type rfind(const char *__s, size_type __pos, size_type __n) const;
        size_type rfind(const char *__s, size_type __pos) const;
        size_type rfind(char __c, size_type __pos) const;
        size_type find_first_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_first_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_first_of(const char *__s, size_type __pos) const;
        size_type find_first_of(char __c, size_type __pos) const;
        size_type find_last_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_last_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_last_of(const char *__s, size_type __pos) const;
        size_type find_last_of(char __c, size_type __pos) const;
        size_type find_first_not_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_first_not_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_first_not_of(const char *__s, size_type __pos) const;
        size_type find_first_not_of(char __c, size_type __pos) const;
        size_type find_last_not_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_last_not_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_last_not_of(const char *__s, size_type __pos) const;
        size_type find_last_not_of(char __c, size_type __pos) const;
        std::basic_string<char> substr(size_type __pos, size_type __n) const;
        int compare(const std::basic_string<char> &__str) const;
        int compare(size_type __pos, size_type __n, const std::basic_string<char> &__str) const;
        int compare(size_type __pos1, size_type __n1, const std::basic_string<char> &__str, size_type __pos2, size_type __n2) const;
        int compare(const char *__s) const;
        int compare(size_type __pos, size_type __n1, const char *__s) const;
        int compare(size_type __pos, size_type __n1, const char *__s, size_type __n2) const;
    }
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> class basic_string {
        class basic_string;
        typedef typename allocator<wchar_t>::rebind<wchar_t>::other _CharT_alloc_type;
    public:
    public:
        typedef std::char_traits<wchar_t> traits_type;
        typedef typename char_traits<wchar_t>::char_type value_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename _CharT_alloc_type::size_type size_type;
        typedef typename _CharT_alloc_type::difference_type difference_type;
        typedef typename _CharT_alloc_type::reference reference;
        typedef typename _CharT_alloc_type::const_reference const_reference;
        typedef typename _CharT_alloc_type::pointer pointer;
        typedef typename _CharT_alloc_type::const_pointer const_pointer;
        typedef __gnu_cxx::__normal_iterator<pointer, basic_string<wchar_t> > iterator;
        typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string<wchar_t> > const_iterator;
        typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
        typedef std::reverse_iterator<iterator> reverse_iterator;
    private:
    private:
        struct _Rep_base {
            struct _Rep_base;
            size_type _M_length;
            size_type _M_capacity;
            _Atomic_word _M_refcount;
        };
        struct _Rep :  std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep_base {
            struct _Rep;
            typedef typename allocator<wchar_t>::rebind<char>::other _Raw_bytes_alloc;
            static const size_type _S_max_size;
            static const wchar_t _S_terminal;
            static size_type _S_empty_rep_storage[];
            static std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep &_S_empty_rep() (CompoundStmt 0xa0d6978 </usr/include/c++/4.6/bits/basic_string.h:176:9, line:182:2>
  (DeclStmt 0xa0d67d8 <line:180:4, col:62>
    0xa0d6600 "void *__p =
      (CXXReinterpretCastExpr 0xa0d67c0 <col:16, col:61> 'void *' reinterpret_cast<void *> <BitCast>
        (UnaryOperator 0xa0d67a8 <col:40, col:41> 'size_type (*)[]' prefix '&'
          (DeclRefExpr 0xa0d6750 <col:41> 'size_type []' lvalue Var 0x9de11c0 '_S_empty_rep_storage' 'size_type []')))")
  (ReturnStmt 0xa0d6968 <line:181:4, col:39>
    (UnaryOperator 0xa0d6950 <col:11, col:39> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue prefix '*'
      (CXXReinterpretCastExpr 0xa0d6938 <col:12, col:39> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' reinterpret_cast<struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *> <BitCast>
        (ImplicitCastExpr 0xa0d6928 <col:36> 'void *' <LValueToRValue>
          (DeclRefExpr 0xa0d690c <col:36> 'void *' lvalue Var 0xa0d6600 '__p' 'void *'))))))


            bool _M_is_leaked() const;
            bool _M_is_shared() const;
            void _M_set_leaked();
            void _M_set_sharable();
            void _M_set_length_and_sharable(size_type __n);
            wchar_t *_M_refdata() throw();
            wchar_t *_M_grab(const std::allocator<wchar_t> &__alloc1, const std::allocator<wchar_t> &__alloc2);
            static std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep *_S_create(size_type, size_type, const std::allocator<wchar_t> &);
            void _M_dispose(const std::allocator<wchar_t> &__a) (CompoundStmt 0xa0d65e8 </usr/include/c++/4.6/bits/basic_string.h:232:2, line:246:2>
  (IfStmt 0xa0d65c8 <line:234:4, line:245:6>
    <<<NULL>>>
    (ImplicitCastExpr 0xa0d62f0 <line:234:8, col:55> '_Bool' <IntegralToBoolean>
      (CallExpr 0xa0d62a8 <col:8, col:55> 'long'
        (ImplicitCastExpr 0xa0d6298 <col:8> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9d463fc <col:8> 'long (long, long)' lvalue Function 0x9d45c10 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0xa0d62d0 <col:25, col:47> 'long' <IntegralCast>
          (BinaryOperator 0xa0d6280 <col:25, col:47> '_Bool' '!='
            (CXXThisExpr 0xa0d60e0 <col:25> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this)
            (UnaryOperator 0xa0d6268 <col:33, col:47> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' prefix '&'
              (CallExpr 0xa0d6248 <col:34, col:47> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
                (ImplicitCastExpr 0xa0d6238 <col:34> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(*)(void)' <FunctionToPointerDecay>
                  (DeclRefExpr 0xa0d6200 <col:34> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(void)' lvalue CXXMethod 0x9de1340 '_S_empty_rep' 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(void)'))))))
        (ImplicitCastExpr 0xa0d62e0 <col:50> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0x9d464e8 <col:50> '_Bool' false))))
    (CompoundStmt 0xa0d65b0 <line:236:6, line:245:6>
      (NullStmt 0x9d46520 <line:238:67>)
      (IfStmt 0xa0d6590 <line:239:8, line:244:3>
        <<<NULL>>>
        (BinaryOperator 0xa0d63e8 <line:239:12, line:240:16> '_Bool' '<='
          (CallExpr 0xa0d63c0 <line:239:12, line:240:11> '_Atomic_word':'int'
            (ImplicitCastExpr 0xa0d63b0 <line:239:12, col:23> '_Atomic_word (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9d46550 <col:12, col:23> '_Atomic_word (_Atomic_word *, int)' lvalue Function 0x9d1fa80 '__exchange_and_add_dispatch' '_Atomic_word (_Atomic_word *, int)'))
            (UnaryOperator 0xa0d6398 <col:51, col:58> '_Atomic_word *' prefix '&'
              (MemberExpr 0xa0d6378 <col:52, col:58> '_Atomic_word':'int' lvalue ->_M_refcount 0x9de0990
                (ImplicitCastExpr 0xa0d6368 <col:52> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
                  (CXXThisExpr 0xa0d6340 <col:52> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this))))
            (UnaryOperator 0x9d465e8 <line:240:9, col:10> 'int' prefix '-'
              (IntegerLiteral 0x9d465d0 <col:10> 'int' 1)))
          (IntegerLiteral 0x9d46628 <col:16> 'int' 0))
        (CompoundStmt 0xa0d6578 <line:241:3, line:244:3>
          (NullStmt 0x9d466a8 <line:242:63>)
          (CXXMemberCallExpr 0xa0d6558 <line:243:5, col:19> 'void'
            (MemberExpr 0xa0d6520 <col:5> '<bound member function type>' ->_M_destroy 0x9de1ff0
              (CXXThisExpr 0xa0d6400 <col:5> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this))
            (DeclRefExpr 0xa0d6540 <col:16> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue ParmVar 0x9de1ed0 '__a' 'const class std::allocator<wchar_t> &')))
        <<<NULL>>>))
    <<<NULL>>>))


            void _M_destroy(const std::allocator<wchar_t> &) throw();
            wchar_t *_M_refcopy() throw();
            wchar_t *_M_clone(const std::allocator<wchar_t> &, size_type __res);
        };
        struct _Alloc_hider :  std::allocator<wchar_t> {
            struct _Alloc_hider;
            _Alloc_hider(wchar_t *__dat, const std::allocator<wchar_t> &__a);
            wchar_t *_M_p;
            inline void ~_Alloc_hider() throw() (CompoundStmt 0xa0d5840 </usr/include/c++/4.6/bits/basic_string.h:266:14>)


        };
    public:
    public:
        static const size_type npos = (CXXStaticCastExpr 0x9dc03e8 </usr/include/c++/4.6/bits/basic_string.h:279:37, col:62> 'size_type':'unsigned int' static_cast<size_type> <NoOp>
  (ImplicitCastExpr 0x9dc03d8 <col:60, col:61> 'size_type':'unsigned int' <IntegralCast>
    (UnaryOperator 0x9d24990 <col:60, col:61> 'int' prefix '-'
      (IntegerLiteral 0x9d24978 <col:61> 'int' 1))))
;
    private:
    private:
        mutable std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Alloc_hider _M_dataplus;
        wchar_t *_M_data() const (CompoundStmt 0xa0d6080 </usr/include/c++/4.6/bits/basic_string.h:287:7, col:35>
  (ReturnStmt 0xa0d6070 <col:9, col:29>
    (ImplicitCastExpr 0xa0d6060 <col:17, col:29> 'wchar_t *' <LValueToRValue>
      (MemberExpr 0xa0d6040 <col:17, col:29> 'wchar_t *' lvalue ._M_p 0x9dc0970
        (MemberExpr 0xa0d6020 <col:17> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Alloc_hider' lvalue ->_M_dataplus 0x9dc09a0
          (CXXThisExpr 0xa0d5f00 <col:17> 'const class std::basic_string<wchar_t> *' this))))))


        wchar_t *_M_data(wchar_t *__p);
        std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep *_M_rep() const (CompoundStmt 0xa0d5ee8 </usr/include/c++/4.6/bits/basic_string.h:295:7, col:62>
  (ReturnStmt 0xa0d5ed8 <col:9, col:59>
    (UnaryOperator 0xa0d5ec0 <col:16, col:59> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' prefix '&'
      (ParenExpr 0xa0d5ea8 <col:17, col:59> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
        (ArraySubscriptExpr 0xa0d5e90 <col:18, col:58> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
          (ParenExpr 0xa0d5e78 <col:18, col:54> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
            (CXXReinterpretCastExpr 0xa0d5e60 <col:19, col:53> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' reinterpret_cast<struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *> <BitCast>
              (CXXMemberCallExpr 0xa0d5e40 <col:44, col:52> 'wchar_t *'
                (MemberExpr 0xa0d5e20 <col:44> '<bound member function type>' ->_M_data 0x9dc0a20
                  (CXXThisExpr 0xa0d5e10 <col:44> 'const class std::basic_string<wchar_t> *' this)))))
          (UnaryOperator 0x9d46d68 <col:56, col:57> 'int' prefix '-'
            (IntegerLiteral 0x9d46d50 <col:57> 'int' 1)))))))


        iterator _M_ibegin() const;
        iterator _M_iend() const;
        void _M_leak();
        size_type _M_check(size_type __pos, const char *__s) const;
        void _M_check_length(size_type __n1, size_type __n2, const char *__s) const;
        size_type _M_limit(size_type __pos, size_type __off) const;
        bool _M_disjunct(const wchar_t *__s) const;
        static void _M_copy(wchar_t *__d, const wchar_t *__s, size_type __n);
        static void _M_move(wchar_t *__d, const wchar_t *__s, size_type __n);
        static void _M_assign(wchar_t *__d, size_type __n, wchar_t __c);
        template <class _Iterator> static void _S_copy_chars(wchar_t *__p, _Iterator __k1, _Iterator __k2);
        static void _S_copy_chars(wchar_t *__p, iterator __k1, iterator __k2);
        static void _S_copy_chars(wchar_t *__p, const_iterator __k1, const_iterator __k2);
        static void _S_copy_chars(wchar_t *__p, wchar_t *__k1, wchar_t *__k2);
        static void _S_copy_chars(wchar_t *__p, const wchar_t *__k1, const wchar_t *__k2);
        static int _S_compare(size_type __n1, size_type __n2);
        void _M_mutate(size_type __pos, size_type __len1, size_type __len2);
        void _M_leak_hard();
        static std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep &_S_empty_rep();
    public:
    public:
        basic_string();
        basic_string(const std::allocator<wchar_t> &__a);
        basic_string(const std::basic_string<wchar_t> &__str);
        basic_string(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n);
        basic_string(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n, const std::allocator<wchar_t> &__a);
        basic_string(const wchar_t *__s, size_type __n, const std::allocator<wchar_t> &__a);
        basic_string(const wchar_t *__s, const std::allocator<wchar_t> &__a);
        basic_string(size_type __n, wchar_t __c, const std::allocator<wchar_t> &__a);
        template <class _InputIterator> basic_string(_InputIterator __beg, _InputIterator __end, const std::allocator<wchar_t> &__a);
        void ~basic_string() (CompoundStmt 0xa0d5790 </usr/include/c++/4.6/bits/basic_string.h:533:7, col:54>
  (ExprWithCleanups 0xa0d5770 <col:9, col:51> 'void'
    (CXXTemporary 0xa0d56f0)
    (CXXMemberCallExpr 0xa0d5708 <col:9, col:51> 'void'
      (MemberExpr 0xa0d566c <col:9, col:19> '<bound member function type>' ->_M_dispose 0x9de1f20
        (CXXMemberCallExpr 0xa0d5640 <col:9, col:16> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
          (MemberExpr 0xa0d5620 <col:9> '<bound member function type>' ->_M_rep 0x9dc0d10
            (ImplicitCastExpr 0xa0d5660 <col:9> 'const class std::basic_string<wchar_t> *' <NoOp>
              (CXXThisExpr 0xa0d5500 <col:9> 'class std::basic_string<wchar_t> *' this)))))
      (MaterializeTemporaryExpr 0xa0d5760 <col:30, col:50> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue
        (ImplicitCastExpr 0xa0d5750 <col:30, col:50> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' <NoOp>
          (CXXBindTemporaryExpr 0xa0d56f8 <col:30, col:50> 'allocator_type':'class std::allocator<wchar_t>' (CXXTemporary 0xa0d56f0)
            (CXXMemberCallExpr 0xa0d56c0 <col:30, col:50> 'allocator_type':'class std::allocator<wchar_t>'
              (MemberExpr 0xa0d56a0 <col:30, col:36> '<bound member function type>' ->get_allocator 0x9dd8770
                (ImplicitCastExpr 0xa0d56e0 <col:30> 'const class std::basic_string<wchar_t> *' <NoOp>
                  (CXXThisExpr 0xa0d5690 <col:30> 'class std::basic_string<wchar_t> *' this))))))))))


        std::basic_string<wchar_t> &operator=(const std::basic_string<wchar_t> &__str) (CompoundStmt 0xa0f5380 </usr/include/c++/4.6/bits/basic_string.h:541:7, col:37>
  (ReturnStmt 0xa0f5370 <col:9, col:34>
    (CXXMemberCallExpr 0xa0f5350 <col:16, col:34> 'class std::basic_string<wchar_t>' lvalue
      (MemberExpr 0xa0f5330 <col:16, col:22> '<bound member function type>' ->assign 0x9dcb4d0
        (CXXThisExpr 0xa0f52b8 <col:16> 'class std::basic_string<wchar_t> *' this))
      (DeclRefExpr 0xa0f5318 <col:29> 'const class std::basic_string<wchar_t>' lvalue ParmVar 0x9dc6730 '__str' 'const class std::basic_string<wchar_t> &'))))


        std::basic_string<wchar_t> &operator=(const wchar_t *__s);
        std::basic_string<wchar_t> &operator=(wchar_t __c);
        iterator begin();
        const_iterator begin() const;
        iterator end();
        const_iterator end() const;
        reverse_iterator rbegin();
        const_reverse_iterator rbegin() const;
        reverse_iterator rend();
        const_reverse_iterator rend() const;
    public:
    public:
        size_type size() const (CompoundStmt 0xa0db590 </usr/include/c++/4.6/bits/basic_string.h:710:7, col:37>
  (ReturnStmt 0xa0db580 <col:9, col:26>
    (ImplicitCastExpr 0xa0db570 <col:16, col:26> 'size_type':'unsigned int' <LValueToRValue>
      (MemberExpr 0xa0db550 <col:16, col:26> 'size_type':'unsigned int' lvalue ->_M_length 0x9de0810
        (ImplicitCastExpr 0xa0db540 <col:16, col:23> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
          (CXXMemberCallExpr 0xa0db520 <col:16, col:23> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
            (MemberExpr 0xa0db500 <col:16> '<bound member function type>' ->_M_rep 0x9dc0d10
              (CXXThisExpr 0xa0d8cd8 <col:16> 'const class std::basic_string<wchar_t> *' this))))))))


        size_type length() const;
        size_type max_size() const;
        void resize(size_type __n, wchar_t __c);
        void resize(size_type __n);
        size_type capacity() const;
        void reserve(size_type __res_arg);
        void clear();
        bool empty() const (CompoundStmt 0xa0d80f8 </usr/include/c++/4.6/bits/basic_string.h:803:7, col:35>
  (ReturnStmt 0xa0d80e8 <col:9, col:32>
    (BinaryOperator 0xa0d80d0 <col:16, col:32> '_Bool' '=='
      (CXXMemberCallExpr 0xa0d80a0 <col:16, col:27> 'size_type':'unsigned int'
        (MemberExpr 0xa0d8080 <col:16, col:22> '<bound member function type>' ->size 0x9dc7be0
          (CXXThisExpr 0xa0d8070 <col:16> 'const class std::basic_string<wchar_t> *' this)))
      (ImplicitCastExpr 0xa0d80c0 <col:32> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0x9d4f748 <col:32> 'int' 0)))))


        const_reference operator[](size_type __pos) const;
        reference operator[](size_type __pos);
        const_reference at(size_type __n) const (CompoundStmt 0xa0d8790 </usr/include/c++/4.6/bits/basic_string.h:856:7, line:860:7>
  (IfStmt 0xa0d8220 <line:857:2, line:858:48>
    <<<NULL>>>
    (BinaryOperator 0xa0d81c8 <line:857:6, col:24> '_Bool' '>='
      (ImplicitCastExpr 0xa0d81b8 <col:6> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa0d814c <col:6> 'size_type':'unsigned int' lvalue ParmVar 0x9dc9140 '__n' 'size_type':'unsigned int'))
      (CXXMemberCallExpr 0xa0d8198 <col:13, col:24> 'size_type':'unsigned int'
        (MemberExpr 0xa0d8178 <col:13, col:19> '<bound member function type>' ->size 0x9dc7be0
          (CXXThisExpr 0xa0d8168 <col:13> 'const class std::basic_string<wchar_t> *' this))))
    (CallExpr 0xa0d81f0 <line:858:4, col:48> 'void'
      (ImplicitCastExpr 0xa0d81e0 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x9d4fbb4 <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9b766b0 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa0d8210 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0x9d4fba0 <col:24, col:30> 'const char [17]' lvalue
          (StringLiteral 0x9d4fb70 </usr/include/c++/4.6/bits/basic_string.h:858:29> 'const char [17]' lvalue "basic_string::at"))))
    <<<NULL>>>)
  (ReturnStmt 0xa0d8780 <line:859:2, col:22>
    (ImplicitCastExpr 0xa0d8770 <col:9, col:22> 'const wchar_t':'const wchar_t' lvalue <NoOp>
      (ArraySubscriptExpr 0xa0d8758 <col:9, col:22> 'wchar_t':'wchar_t' lvalue
        (CXXMemberCallExpr 0xa0d8710 <col:9, col:17> 'wchar_t *'
          (MemberExpr 0xa0d86f0 <col:9> '<bound member function type>' ->_M_data 0x9dc0a20
            (CXXThisExpr 0xa0d86e0 <col:9> 'const class std::basic_string<wchar_t> *' this)))
        (ImplicitCastExpr 0xa0d8748 <col:19> 'size_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa0d872c <col:19> 'size_type':'unsigned int' lvalue ParmVar 0x9dc9140 '__n' 'size_type':'unsigned int'))))))


        reference at(size_type __n);
        std::basic_string<wchar_t> &operator+=(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &operator+=(const wchar_t *__s);
        std::basic_string<wchar_t> &operator+=(wchar_t __c);
        std::basic_string<wchar_t> &append(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &append(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n);
        std::basic_string<wchar_t> &append(const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &append(const wchar_t *__s);
        std::basic_string<wchar_t> &append(size_type __n, wchar_t __c);
        template <class _InputIterator> std::basic_string<wchar_t> &append(_InputIterator __first, _InputIterator __last);
        void push_back(wchar_t __c);
        std::basic_string<wchar_t> &assign(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &assign(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n);
        std::basic_string<wchar_t> &assign(const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &assign(const wchar_t *__s);
        std::basic_string<wchar_t> &assign(size_type __n, wchar_t __c);
        template <class _InputIterator> std::basic_string<wchar_t> &assign(_InputIterator __first, _InputIterator __last);
        void insert(iterator __p, size_type __n, wchar_t __c);
        template <class _InputIterator> void insert(iterator __p, _InputIterator __beg, _InputIterator __end);
        std::basic_string<wchar_t> &insert(size_type __pos1, const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &insert(size_type __pos1, const std::basic_string<wchar_t> &__str, size_type __pos2, size_type __n);
        std::basic_string<wchar_t> &insert(size_type __pos, const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &insert(size_type __pos, const wchar_t *__s);
        std::basic_string<wchar_t> &insert(size_type __pos, size_type __n, wchar_t __c);
        iterator insert(iterator __p, wchar_t __c);
        std::basic_string<wchar_t> &erase(size_type __pos, size_type __n);
        iterator erase(iterator __position);
        iterator erase(iterator __first, iterator __last);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n, const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &replace(size_type __pos1, size_type __n1, const std::basic_string<wchar_t> &__str, size_type __pos2, size_type __n2);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n1, const wchar_t *__s, size_type __n2);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n1, const wchar_t *__s);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n1, size_type __n2, wchar_t __c);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const wchar_t *__s);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, size_type __n, wchar_t __c);
        template <class _InputIterator> std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, wchar_t *__k1, wchar_t *__k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const wchar_t *__k1, const wchar_t *__k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const_iterator __k1, const_iterator __k2);
    private:
    private:
        template <class _Integer> std::basic_string<wchar_t> &_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n, _Integer __val, std::__true_type);
        template <class _InputIterator> std::basic_string<wchar_t> &_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2, std::__false_type);
        std::basic_string<wchar_t> &_M_replace_aux(size_type __pos1, size_type __n1, size_type __n2, wchar_t __c);
        std::basic_string<wchar_t> &_M_replace_safe(size_type __pos1, size_type __n1, const wchar_t *__s, size_type __n2);
        template <class _InIterator> static wchar_t *_S_construct_aux(_InIterator __beg, _InIterator __end, const std::allocator<wchar_t> &__a, std::__false_type);
        template <class _Integer> static wchar_t *_S_construct_aux(_Integer __beg, _Integer __end, const std::allocator<wchar_t> &__a, std::__true_type);
        static wchar_t *_S_construct_aux_2(size_type __req, wchar_t __c, const std::allocator<wchar_t> &__a);
        template <class _InIterator> static wchar_t *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<wchar_t> &__a);
        template <class _InIterator> static wchar_t *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<wchar_t> &__a, std::input_iterator_tag);
        template <class _FwdIterator> static wchar_t *_S_construct(_FwdIterator __beg, _FwdIterator __end, const std::allocator<wchar_t> &__a, std::forward_iterator_tag);
        static wchar_t *_S_construct(size_type __req, wchar_t __c, const std::allocator<wchar_t> &__a);
    public:
    public:
        size_type copy(wchar_t *__s, size_type __n, size_type __pos) const;
        void swap(std::basic_string<wchar_t> &__s);
        const wchar_t *c_str() const (CompoundStmt 0xa0d8cc0 </usr/include/c++/4.6/bits/basic_string.h:1766:7, col:27>
  (ReturnStmt 0xa0d8cb0 <col:9, col:24>
    (ImplicitCastExpr 0xa0d8ca0 <col:16, col:24> 'const wchar_t *' <NoOp>
      (CXXMemberCallExpr 0xa0d8c80 <col:16, col:24> 'wchar_t *'
        (MemberExpr 0xa0d8c60 <col:16> '<bound member function type>' ->_M_data 0x9dc0a20
          (CXXThisExpr 0xa0d8c50 <col:16> 'const class std::basic_string<wchar_t> *' this))))))


        const wchar_t *data() const;
        allocator_type get_allocator() const (CompoundStmt 0xa0d6b50 </usr/include/c++/4.6/bits/basic_string.h:1783:7, col:29>
  (ReturnStmt 0xa0d6b40 <col:9, col:16>
    (CXXConstructExpr 0xa0d6b18 <col:16> 'allocator_type':'class std::allocator<wchar_t>''void (const class std::allocator<wchar_t> &) throw()'
      (ImplicitCastExpr 0xa0d6b08 <col:16> 'const class std::allocator<wchar_t>' lvalue <NoOp>
        (ImplicitCastExpr 0xa0d6af8 <col:16> 'class std::allocator<wchar_t>' lvalue <DerivedToBase (allocator)>
          (MemberExpr 0xa0d6ab0 <col:16> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Alloc_hider' lvalue ->_M_dataplus 0x9dc09a0
            (CXXThisExpr 0xa0d6990 <col:16> 'const class std::basic_string<wchar_t> *' this)))))))


        size_type find(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find(const wchar_t *__s, size_type __pos) const;
        size_type find(wchar_t __c, size_type __pos) const;
        size_type rfind(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type rfind(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type rfind(const wchar_t *__s, size_type __pos) const;
        size_type rfind(wchar_t __c, size_type __pos) const;
        size_type find_first_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_first_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_first_of(const wchar_t *__s, size_type __pos) const;
        size_type find_first_of(wchar_t __c, size_type __pos) const;
        size_type find_last_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_last_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_last_of(const wchar_t *__s, size_type __pos) const;
        size_type find_last_of(wchar_t __c, size_type __pos) const;
        size_type find_first_not_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_first_not_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_first_not_of(const wchar_t *__s, size_type __pos) const;
        size_type find_first_not_of(wchar_t __c, size_type __pos) const;
        size_type find_last_not_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_last_not_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_last_not_of(const wchar_t *__s, size_type __pos) const;
        size_type find_last_not_of(wchar_t __c, size_type __pos) const;
        std::basic_string<wchar_t> substr(size_type __pos, size_type __n) const;
        int compare(const std::basic_string<wchar_t> &__str) const;
        int compare(size_type __pos, size_type __n, const std::basic_string<wchar_t> &__str) const;
        int compare(size_type __pos1, size_type __n1, const std::basic_string<wchar_t> &__str, size_type __pos2, size_type __n2) const;
        int compare(const wchar_t *__s) const;
        int compare(size_type __pos, size_type __n1, const wchar_t *__s) const;
        int compare(size_type __pos, size_type __n1, const wchar_t *__s, size_type __n2) const;
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>, typename _Alloc = allocator<_CharT>> class basic_string {
        class basic_string;
        typedef typename _Alloc::_Alloc::rebind<_CharT>::other _CharT_alloc_type;
    public:
    public:
        typedef _Traits traits_type;
        typedef typename _Traits::char_type value_type;
        typedef _Alloc allocator_type;
        typedef typename _CharT_alloc_type::size_type size_type;
        typedef typename _CharT_alloc_type::difference_type difference_type;
        typedef typename _CharT_alloc_type::reference reference;
        typedef typename _CharT_alloc_type::const_reference const_reference;
        typedef typename _CharT_alloc_type::pointer pointer;
        typedef typename _CharT_alloc_type::const_pointer const_pointer;
        typedef __gnu_cxx::__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> > iterator;
        typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> > const_iterator;
        typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
        typedef std::reverse_iterator<iterator> reverse_iterator;
    private:
    private:
        struct _Rep_base {
            struct _Rep_base;
            size_type _M_length;
            size_type _M_capacity;
            _Atomic_word _M_refcount;
        };
        struct _Rep :  std::basic_string::_Rep_base {
            struct _Rep;
            typedef typename _Alloc::_Alloc::rebind<char>::other _Raw_bytes_alloc;
            static const size_type _S_max_size;
            static const _CharT _S_terminal;
            static size_type _S_empty_rep_storage[];
            static std::basic_string::_Rep &_S_empty_rep() (CompoundStmt 0x9d458a8 </usr/include/c++/4.6/bits/basic_string.h:176:9, line:182:2>
  (DeclStmt 0x9d45830 <line:180:4, col:62>
    0x9d457a0 "void *__p =
      (CXXReinterpretCastExpr 0x9d45818 <col:16, col:61> 'void *' reinterpret_cast<void *> <Dependent>
        (UnaryOperator 0x9d457f0 <col:40, col:41> '<dependent type>' prefix '&'
          (DeclRefExpr 0x9d457d4 <col:41> 'size_type []' lvalue Var 0x9d23980 '_S_empty_rep_storage' 'size_type []')))")
  (ReturnStmt 0x9d45898 <line:181:4, col:39>
    (UnaryOperator 0x9d45880 <col:11, col:39> '<dependent type>' prefix '*'
      (CXXReinterpretCastExpr 0x9d45868 <col:12, col:39> 'struct std::basic_string::_Rep *' reinterpret_cast<struct std::basic_string::_Rep *> <Dependent>
        (DeclRefExpr 0x9d45840 <col:36> 'void *' lvalue Var 0x9d457a0 '__p' 'void *')))))


            bool _M_is_leaked() const (CompoundStmt 0x9d459b0 </usr/include/c++/4.6/bits/basic_string.h:186:9, col:41>
  (ReturnStmt 0x9d459a0 <col:11, col:38>
    (CXXOperatorCallExpr 0x9d45978 <col:18, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0x9d45938 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bac3c0 0x9bc2c90 0x9bc5590)
      (CXXDependentScopeMemberExpr 0x9d458e8 <col:18, col:24> '<dependent type>' lvalue
        (CXXThisExpr 0x9d458d8 <col:18> 'const struct std::basic_string::_Rep *' this))
      (IntegerLiteral 0x9d45920 <col:38> 'int' 0))))


            bool _M_is_shared() const (CompoundStmt 0x9d45aa0 </usr/include/c++/4.6/bits/basic_string.h:190:9, col:41>
  (ReturnStmt 0x9d45a90 <col:11, col:38>
    (CXXOperatorCallExpr 0x9d45a68 <col:18, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0x9d45a28 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bad330 0x9bc37b0 0x9bc6740)
      (CXXDependentScopeMemberExpr 0x9d459d8 <col:18, col:24> '<dependent type>' lvalue
        (CXXThisExpr 0x9d459c8 <col:18> 'const struct std::basic_string::_Rep *' this))
      (IntegerLiteral 0x9d45a10 <col:38> 'int' 0))))


            void _M_set_leaked() (CompoundStmt 0x9d45b48 </usr/include/c++/4.6/bits/basic_string.h:194:9, col:35>
  (BinaryOperator 0x9d45b30 <col:11, col:32> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x9d45ac8 <col:11, col:17> '<dependent type>' lvalue
      (CXXThisExpr 0x9d45ab8 <col:11> 'struct std::basic_string::_Rep *' this))
    (UnaryOperator 0x9d45b18 <col:31, col:32> 'int' prefix '-'
      (IntegerLiteral 0x9d45b00 <col:32> 'int' 1))))


            void _M_set_sharable() (CompoundStmt 0x9d45bd8 </usr/include/c++/4.6/bits/basic_string.h:198:9, col:34>
  (BinaryOperator 0x9d45bc0 <col:11, col:31> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x9d45b70 <col:11, col:17> '<dependent type>' lvalue
      (CXXThisExpr 0x9d45b60 <col:11> 'struct std::basic_string::_Rep *' this))
    (IntegerLiteral 0x9d45ba8 <col:31> 'int' 0)))


            void _M_set_length_and_sharable(size_type __n) (CompoundStmt 0x9d460d8 </usr/include/c++/4.6/bits/basic_string.h:202:2, line:213:2>
  (IfStmt 0x9d460b8 <line:204:4, line:212:6>
    <<<NULL>>>
    (CallExpr 0x9d45e38 <line:204:8, col:55> '<dependent type>'
      (DeclRefExpr 0x9d45d40 <col:8> 'long (long, long)' lvalue Function 0x9d45c10 '__builtin_expect' 'long (long, long)')
      (CXXOperatorCallExpr 0x9d45e00 <col:25, col:47> '<dependent type>'
        (UnresolvedLookupExpr 0x9d45db8 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bacde0 0x9bc3130 0x9bc62c0 0x9c11360 0x9c32300 0x9c32670)
        (CXXThisExpr 0x9d45d58 <col:25> 'struct std::basic_string::_Rep *' this)
        (UnaryOperator 0x9d45da0 <col:33, col:47> '<dependent type>' prefix '&'
          (CallExpr 0x9d45d80 <col:34, col:47> '<dependent type>'
            (DeclRefExpr 0x9d45d68 <col:34> 'struct std::basic_string::_Rep &(void)' lvalue CXXMethod 0x9d23a10 '_S_empty_rep' 'struct std::basic_string::_Rep &(void)'))))
      (CXXBoolLiteralExpr 0x9d45e28 <col:50> '_Bool' false))
    (CompoundStmt 0x9d46098 <line:206:6, line:212:6>
      (CallExpr 0x9d45ea8 <line:207:8, col:30> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d45e70 <col:8, col:14> '<dependent type>' lvalue
          (CXXThisExpr 0x9d45e60 <col:8> 'struct std::basic_string::_Rep *' this)))
      (BinaryOperator 0x9d45f28 <line:208:8, col:26> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0x9d45ed8 <col:8, col:14> '<dependent type>' lvalue
          (CXXThisExpr 0x9d45ec8 <col:8> 'struct std::basic_string::_Rep *' this))
        (DeclRefExpr 0x9d45f0c <col:26> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d23c90 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
      (CallExpr 0x9d46070 <line:209:8, col:64> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d45f88 <col:8, col:21> '<dependent type>' lvalue)
        (ArraySubscriptExpr 0x9d46040 <col:28, col:50> '<dependent type>' lvalue
          (CallExpr 0x9d46008 <col:28, col:45> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9d45fd0 <col:28, col:34> '<dependent type>' lvalue
              (CXXThisExpr 0x9d45fc0 <col:28> 'struct std::basic_string::_Rep *' this)))
          (DeclRefExpr 0x9d46024 <col:47> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d23c90 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
        (DeclRefExpr 0x9d46054 <col:53> 'const _CharT' lvalue Var 0x9d238f0 '_S_terminal' 'const _CharT')))
    <<<NULL>>>))


            _CharT *_M_refdata() throw() (CompoundStmt 0x9d461b0 </usr/include/c++/4.6/bits/basic_string.h:217:2, col:48>
  (ReturnStmt 0x9d461a0 <col:4, col:45>
    (CXXReinterpretCastExpr 0x9d46188 <col:11, col:45> '_CharT *' reinterpret_cast<_CharT *> <Dependent>
      (CXXOperatorCallExpr 0x9d46150 <col:37, col:44> '<dependent type>'
        (UnresolvedLookupExpr 0x9d46118 <col:42, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0)
        (CXXThisExpr 0x9d460f0 <col:37> 'struct std::basic_string::_Rep *' this)
        (IntegerLiteral 0x9d46100 <col:44> 'int' 1)))))


            _CharT *_M_grab(const _Alloc &__alloc1, const _Alloc &__alloc2) (CompoundStmt 0x9d463e8 </usr/include/c++/4.6/bits/basic_string.h:221:2, line:224:2>
  (ReturnStmt 0x9d463d8 <line:222:4, line:223:46>
    (ConditionalOperator 0x9d463b8 <line:222:11, line:223:46> '<dependent type>'
      (ParenExpr 0x9d462e8 <line:222:11, col:51> '<dependent type>'
        (BinaryOperator 0x9d462d0 <col:12, col:43> '<dependent type>' '&&'
          (UnaryOperator 0x9d46218 <col:12, col:26> '<dependent type>' prefix '!'
            (CallExpr 0x9d461f8 <col:13, col:26> '<dependent type>'
              (MemberExpr 0x9d461d8 <col:13> '<bound member function type>' ->_M_is_leaked 0x9d23aa0
                (CXXThisExpr 0x9d461c8 <col:13> 'struct std::basic_string::_Rep *' this))))
          (CXXOperatorCallExpr 0x9d462a8 <col:31, col:43> '<dependent type>'
            (UnresolvedLookupExpr 0x9d46260 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30)
            (DeclRefExpr 0x9d4622c <col:31> 'const _Alloc' lvalue ParmVar 0x9d23ea0 '__alloc1' 'const _Alloc &')
            (DeclRefExpr 0x9d46244 <col:43> 'const _Alloc' lvalue ParmVar 0x9d23ef0 '__alloc2' 'const _Alloc &'))))
      (CallExpr 0x9d46330 <line:223:14, col:25> '<dependent type>'
        (MemberExpr 0x9d46310 <col:14> '<bound member function type>' ->_M_refcopy 0x9d24410
          (CXXThisExpr 0x9d46300 <col:14> 'struct std::basic_string::_Rep *' this)))
      (CallExpr 0x9d46398 <col:29, col:46> '<dependent type>'
        (MemberExpr 0x9d46360 <col:29> '<bound member function type>' ->_M_clone 0x9d24560
          (CXXThisExpr 0x9d46350 <col:29> 'struct std::basic_string::_Rep *' this))
        (DeclRefExpr 0x9d46380 <col:38> 'const _Alloc' lvalue ParmVar 0x9d23ea0 '__alloc1' 'const _Alloc &')))))


            static std::basic_string::_Rep *_S_create(size_type, size_type, const _Alloc &);
            void _M_dispose(const _Alloc &__a) (CompoundStmt 0x9d46790 </usr/include/c++/4.6/bits/basic_string.h:232:2, line:246:2>
  (IfStmt 0x9d46770 <line:234:4, line:245:6>
    <<<NULL>>>
    (CallExpr 0x9d464f8 <line:234:8, col:55> '<dependent type>'
      (DeclRefExpr 0x9d463fc <col:8> 'long (long, long)' lvalue Function 0x9d45c10 '__builtin_expect' 'long (long, long)')
      (CXXOperatorCallExpr 0x9d464c0 <col:25, col:47> '<dependent type>'
        (UnresolvedLookupExpr 0x9d46478 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bacde0 0x9bc3130 0x9bc62c0 0x9c11360 0x9c32300 0x9c32670)
        (CXXThisExpr 0x9d46418 <col:25> 'struct std::basic_string::_Rep *' this)
        (UnaryOperator 0x9d46460 <col:33, col:47> '<dependent type>' prefix '&'
          (CallExpr 0x9d46440 <col:34, col:47> '<dependent type>'
            (DeclRefExpr 0x9d46428 <col:34> 'struct std::basic_string::_Rep &(void)' lvalue CXXMethod 0x9d23a10 '_S_empty_rep' 'struct std::basic_string::_Rep &(void)'))))
      (CXXBoolLiteralExpr 0x9d464e8 <col:50> '_Bool' false))
    (CompoundStmt 0x9d46758 <line:236:6, line:245:6>
      (NullStmt 0x9d46520 <line:238:67>)
      (IfStmt 0x9d46738 <line:239:8, line:244:3>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9d46680 <line:239:12, line:240:16> '<dependent type>'
          (UnresolvedLookupExpr 0x9d46640 <col:13, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9badc90 0x9bc3ba0 0x9bc6b90)
          (CallExpr 0x9d46600 <line:239:12, line:240:11> '<dependent type>'
            (DeclRefExpr 0x9d46550 <line:239:12, col:23> '_Atomic_word (_Atomic_word *, int)' lvalue Function 0x9d1fa80 '__exchange_and_add_dispatch' '_Atomic_word (_Atomic_word *, int)')
            (UnaryOperator 0x9d465b8 <col:51, col:58> '<dependent type>' prefix '&'
              (CXXDependentScopeMemberExpr 0x9d46580 <col:52, col:58> '<dependent type>' lvalue
                (CXXThisExpr 0x9d46570 <col:52> 'struct std::basic_string::_Rep *' this)))
            (UnaryOperator 0x9d465e8 <line:240:9, col:10> 'int' prefix '-'
              (IntegerLiteral 0x9d465d0 <col:10> 'int' 1)))
          (IntegerLiteral 0x9d46628 <col:16> 'int' 0))
        (CompoundStmt 0x9d46720 <line:241:3, line:244:3>
          (NullStmt 0x9d466a8 <line:242:63>)
          (CallExpr 0x9d46700 <line:243:5, col:19> '<dependent type>'
            (MemberExpr 0x9d466c8 <col:5> '<bound member function type>' ->_M_destroy 0x9d24390
              (CXXThisExpr 0x9d466b8 <col:5> 'struct std::basic_string::_Rep *' this))
            (DeclRefExpr 0x9d466e8 <col:16> 'const _Alloc' lvalue ParmVar 0x9d241f0 '__a' 'const _Alloc &')))
        <<<NULL>>>))
    <<<NULL>>>))


            void _M_destroy(const _Alloc &) throw();
            _CharT *_M_refcopy() throw() (CompoundStmt 0x9d46a28 </usr/include/c++/4.6/bits/basic_string.h:253:2, line:259:2>
  (IfStmt 0x9d469a8 <line:255:4, line:257:67>
    <<<NULL>>>
    (CallExpr 0x9d468a0 <line:255:8, col:55> '<dependent type>'
      (DeclRefExpr 0x9d467a4 <col:8> 'long (long, long)' lvalue Function 0x9d45c10 '__builtin_expect' 'long (long, long)')
      (CXXOperatorCallExpr 0x9d46868 <col:25, col:47> '<dependent type>'
        (UnresolvedLookupExpr 0x9d46820 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bacde0 0x9bc3130 0x9bc62c0 0x9c11360 0x9c32300 0x9c32670)
        (CXXThisExpr 0x9d467c0 <col:25> 'struct std::basic_string::_Rep *' this)
        (UnaryOperator 0x9d46808 <col:33, col:47> '<dependent type>' prefix '&'
          (CallExpr 0x9d467e8 <col:34, col:47> '<dependent type>'
            (DeclRefExpr 0x9d467d0 <col:34> 'struct std::basic_string::_Rep &(void)' lvalue CXXMethod 0x9d23a10 '_S_empty_rep' 'struct std::basic_string::_Rep &(void)'))))
      (CXXBoolLiteralExpr 0x9d46890 <col:50> '_Bool' false))
    (CallExpr 0x9d46980 <line:257:13, col:67> '<dependent type>'
      (DeclRefExpr 0x9d468e8 <col:13, col:24> 'void (_Atomic_word *, int)' lvalue Function 0x9d1ff10 '__atomic_add_dispatch' 'void (_Atomic_word *, int)')
      (UnaryOperator 0x9d46950 <col:46, col:53> '<dependent type>' prefix '&'
        (CXXDependentScopeMemberExpr 0x9d46918 <col:47, col:53> '<dependent type>' lvalue
          (CXXThisExpr 0x9d46908 <col:47> 'struct std::basic_string::_Rep *' this)))
      (IntegerLiteral 0x9d46968 <col:66> 'int' 1))
    <<<NULL>>>)
  (ReturnStmt 0x9d46a18 <line:258:4, col:22>
    (CallExpr 0x9d469f8 <col:11, col:22> '<dependent type>'
      (MemberExpr 0x9d469d8 <col:11> '<bound member function type>' ->_M_refdata 0x9d23e10
        (CXXThisExpr 0x9d469c8 <col:11> 'struct std::basic_string::_Rep *' this)))))


            _CharT *_M_clone(const _Alloc &, size_type __res = (IntegerLiteral 0x9d45490 </usr/include/c++/4.6/bits/basic_string.h:262:44> 'int' 0)
);
        };
        struct _Alloc_hider :  _Alloc {
            struct _Alloc_hider;
            _Alloc_hider(_CharT *__dat, const _Alloc &__a) : _Alloc((DeclRefExpr 0x9d46a40 </usr/include/c++/4.6/bits/basic_string.h:269:11> 'const _Alloc' lvalue ParmVar 0x9d24790 '__a' 'const _Alloc &')
), _M_p((DeclRefExpr 0x9d46a98 </usr/include/c++/4.6/bits/basic_string.h:269:22> '_CharT *' lvalue ParmVar 0x9d24740 '__dat' '_CharT *')
) (CompoundStmt 0x9d46af0 </usr/include/c++/4.6/bits/basic_string.h:269:29, col:31>)


            _CharT *_M_p;
        };
    public:
    public:
        static const size_type npos = (CXXStaticCastExpr 0x9d249b0 </usr/include/c++/4.6/bits/basic_string.h:279:37, col:62> 'size_type':'typename _CharT_alloc_type::size_type' static_cast<size_type> <Dependent>
  (UnaryOperator 0x9d24990 <col:60, col:61> 'int' prefix '-'
    (IntegerLiteral 0x9d24978 <col:61> 'int' 1)))
;
    private:
    private:
        mutable std::basic_string::_Alloc_hider _M_dataplus;
        _CharT *_M_data() const (CompoundStmt 0x9d46bb0 </usr/include/c++/4.6/bits/basic_string.h:287:7, col:35>
  (ReturnStmt 0x9d46ba0 <col:9, col:29>
    (CXXDependentScopeMemberExpr 0x9d46b68 <col:17, col:29> '<dependent type>' lvalue
      (MemberExpr 0x9d46b44 <col:17> 'struct std::basic_string::_Alloc_hider' lvalue ->_M_dataplus 0x9d24a20
        (CXXThisExpr 0x9d46b18 <col:17> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))))


        _CharT *_M_data(_CharT *__p) (CompoundStmt 0x9d46c88 </usr/include/c++/4.6/bits/basic_string.h:291:7, col:42>
  (ReturnStmt 0x9d46c78 <col:9, col:39>
    (ParenExpr 0x9d46c60 <col:16, col:39> '<dependent type>'
      (BinaryOperator 0x9d46c48 <col:17, col:36> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0x9d46bf8 <col:17, col:29> '<dependent type>' lvalue
          (MemberExpr 0x9d46bd8 <col:17> 'struct std::basic_string::_Alloc_hider' lvalue ->_M_dataplus 0x9d24a20
            (CXXThisExpr 0x9d46bc8 <col:17> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
        (DeclRefExpr 0x9d46c2c <col:36> '_CharT *' lvalue ParmVar 0x9d26760 '__p' '_CharT *')))))


        std::basic_string::_Rep *_M_rep() const (CompoundStmt 0x9d46dd8 </usr/include/c++/4.6/bits/basic_string.h:295:7, col:62>
  (ReturnStmt 0x9d46dc8 <col:9, col:59>
    (UnaryOperator 0x9d46db0 <col:16, col:59> '<dependent type>' prefix '&'
      (ParenExpr 0x9d46d98 <col:17, col:59> '<dependent type>' lvalue
        (ArraySubscriptExpr 0x9d46d80 <col:18, col:58> '<dependent type>' lvalue
          (ParenExpr 0x9d46d38 <col:18, col:54> 'struct std::basic_string::_Rep *'
            (CXXReinterpretCastExpr 0x9d46d20 <col:19, col:53> 'struct std::basic_string::_Rep *' reinterpret_cast<struct std::basic_string::_Rep *> <Dependent>
              (CallExpr 0x9d46cf0 <col:44, col:52> '<dependent type>'
                (UnresolvedMemberExpr 0x9d46cb0 <col:44> '<bound member function type>' lvalue))))
          (UnaryOperator 0x9d46d68 <col:56, col:57> 'int' prefix '-'
            (IntegerLiteral 0x9d46d50 <col:57> 'int' 1)))))))


        iterator _M_ibegin() const (CompoundStmt 0x9d46e98 </usr/include/c++/4.6/bits/basic_string.h:301:7, col:37>
  (ReturnStmt 0x9d46e88 <col:9, col:34>
    (CXXUnresolvedConstructExpr 0x9d46e68 <col:16, col:34> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'
      (CallExpr 0x9d46e48 <col:25, col:33> '<dependent type>'
        (UnresolvedMemberExpr 0x9d46e08 <col:25> '<bound member function type>' lvalue)))))


        iterator _M_iend() const (CompoundStmt 0x9d48210 </usr/include/c++/4.6/bits/basic_string.h:305:7, col:52>
  (ReturnStmt 0x9d48200 <col:9, col:49>
    (CXXUnresolvedConstructExpr 0x9d481e0 <col:16, col:49> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'
      (CXXOperatorCallExpr 0x9d481b8 <col:25, col:48> '<dependent type>'
        (UnresolvedLookupExpr 0x9d48180 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0)
        (CallExpr 0x9d46f08 <col:25, col:33> '<dependent type>'
          (UnresolvedMemberExpr 0x9d46ec8 <col:25> '<bound member function type>' lvalue))
        (CallExpr 0x9d48160 <col:37, col:48> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9d46f38 <col:37, col:43> '<dependent type>' lvalue
            (CXXThisExpr 0x9d46f28 <col:37> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))))))


        void _M_leak() (CompoundStmt 0x9d48358 </usr/include/c++/4.6/bits/basic_string.h:309:7, line:312:7>
  (IfStmt 0x9d48338 <line:310:2, line:311:17>
    <<<NULL>>>
    (UnaryOperator 0x9d482d0 <line:310:6, col:30> '<dependent type>' prefix '!'
      (CallExpr 0x9d482b0 <col:7, col:30> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d48278 <col:7, col:17> '<dependent type>' lvalue
          (CallExpr 0x9d48258 <col:7, col:14> '<dependent type>'
            (MemberExpr 0x9d48238 <col:7> '<bound member function type>' ->_M_rep 0x9d268a0
              (CXXThisExpr 0x9d48228 <col:7> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
    (CallExpr 0x9d48318 <line:311:4, col:17> '<dependent type>'
      (MemberExpr 0x9d482f8 <col:4> '<bound member function type>' ->_M_leak_hard 0x9d28240
        (CXXThisExpr 0x9d482e8 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
    <<<NULL>>>))


        size_type _M_check(size_type __pos, const char *__s) const (CompoundStmt 0x9d48580 </usr/include/c++/4.6/bits/basic_string.h:316:7, line:320:7>
  (IfStmt 0x9d48538 <line:317:2, line:318:33>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9d48430 <line:317:6, col:25> '<dependent type>'
      (UnresolvedLookupExpr 0x9d483f0 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bad330 0x9bc37b0 0x9bc6740)
      (DeclRefExpr 0x9d4836c <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d26ac0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x9d483d0 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d48398 <col:14, col:20> '<dependent type>' lvalue
          (CXXThisExpr 0x9d48388 <col:14> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))
    (CallExpr 0x9d48508 <line:318:4, col:33> 'void'
      (ImplicitCastExpr 0x9d484f8 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x9d484bc <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9b766b0 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0x9d48528 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <LValueToRValue>
        (ParenExpr 0x9d484a8 <col:24, col:30> 'const char *' lvalue
          (DeclRefExpr 0x9d4848c </usr/include/c++/4.6/bits/basic_string.h:318:29> 'const char *' lvalue ParmVar 0x9d26b10 '__s' 'const char *'))))
    <<<NULL>>>)
  (ReturnStmt 0x9d48570 <line:319:2, col:9>
    (DeclRefExpr 0x9d48554 <col:9> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d26ac0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')))


        void _M_check_length(size_type __n1, size_type __n2, const char *__s) const (CompoundStmt 0x9d488b8 </usr/include/c++/4.6/bits/basic_string.h:324:7, line:327:7>
  (IfStmt 0x9d48898 <line:325:2, line:326:33>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9d487b0 <line:325:6, col:49> '<dependent type>'
      (UnresolvedLookupExpr 0x9d48770 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bac3c0 0x9bc2c90 0x9bc5590)
      (CXXOperatorCallExpr 0x9d48730 <col:6, col:45> '<dependent type>'
        (UnresolvedLookupExpr 0x9d486f8 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
        (CallExpr 0x9d485e0 <col:6, col:21> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9d485a8 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x9d48598 <col:6> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))
        (ParenExpr 0x9d486e0 <col:25, col:45> '<dependent type>'
          (CXXOperatorCallExpr 0x9d486b8 <col:26, col:41> '<dependent type>'
            (UnresolvedLookupExpr 0x9d48680 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
            (CallExpr 0x9d48648 <col:26, col:37> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9d48610 <col:26, col:32> '<dependent type>' lvalue
                (CXXThisExpr 0x9d48600 <col:26> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))
            (DeclRefExpr 0x9d48664 <col:41> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d26c20 '__n1' 'size_type':'typename _CharT_alloc_type::size_type'))))
      (DeclRefExpr 0x9d48754 <col:49> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d26c60 '__n2' 'size_type':'typename _CharT_alloc_type::size_type'))
    (CallExpr 0x9d48868 <line:326:4, col:33> 'void'
      (ImplicitCastExpr 0x9d48858 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x9d4883c <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9b765e0 '__throw_length_error' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0x9d48888 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <LValueToRValue>
        (ParenExpr 0x9d48828 <col:24, col:30> 'const char *' lvalue
          (DeclRefExpr 0x9d4880c </usr/include/c++/4.6/bits/basic_string.h:326:29> 'const char *' lvalue ParmVar 0x9d26cb0 '__s' 'const char *'))))
    <<<NULL>>>))


        size_type _M_limit(size_type __pos, size_type __off) const (CompoundStmt 0x9d48bd8 </usr/include/c++/4.6/bits/basic_string.h:332:7, line:335:7>
  (DeclStmt 0x9d48a78 <line:333:2, col:54>
    0x9d488e0 "const bool __testoff =
      (CXXOperatorCallExpr 0x9d48a50 <col:26, col:49> '<dependent type>'
        (UnresolvedLookupExpr 0x9d48a10 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bac3c0 0x9bc2c90 0x9bc5590)
        (DeclRefExpr 0x9d48914 <col:26> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d26e30 '__off' 'size_type':'typename _CharT_alloc_type::size_type')
        (CXXOperatorCallExpr 0x9d489e8 <col:34, col:49> '<dependent type>'
          (UnresolvedLookupExpr 0x9d489b0 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
          (CallExpr 0x9d48978 <col:34, col:45> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9d48940 <col:34, col:40> '<dependent type>' lvalue
              (CXXThisExpr 0x9d48930 <col:34> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))
          (DeclRefExpr 0x9d48994 <col:49> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d26df0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')))")
  (ReturnStmt 0x9d48bc8 <line:334:2, col:44>
    (ConditionalOperator 0x9d48ba8 <col:9, col:44> '<dependent type>'
      (ImplicitCastExpr 0x9d48b98 <col:9> '_Bool' <LValueToRValue>
        (DeclRefExpr 0x9d48a88 <col:9> 'const _Bool' lvalue Var 0x9d488e0 '__testoff' 'const _Bool'))
      (DeclRefExpr 0x9d48aa0 <col:21> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d26e30 '__off' 'size_type':'typename _CharT_alloc_type::size_type')
      (CXXOperatorCallExpr 0x9d48b70 <col:29, col:44> '<dependent type>'
        (UnresolvedLookupExpr 0x9d48b38 <col:42, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
        (CallExpr 0x9d48b00 <col:29, col:40> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9d48ac8 <col:29, col:35> '<dependent type>' lvalue
            (CXXThisExpr 0x9d48ab8 <col:29> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))
        (DeclRefExpr 0x9d48b1c <col:44> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d26df0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')))))


        bool _M_disjunct(const _CharT *__s) const (CompoundStmt 0x9d49020 </usr/include/c++/4.6/bits/basic_string.h:340:7, line:343:7>
  (ReturnStmt 0x9d49010 <line:341:2, line:342:58>
    (ParenExpr 0x9d48ff8 <line:341:9, line:342:58> '<dependent type>'
      (BinaryOperator 0x9d48fe0 <line:341:10, line:342:57> '<dependent type>' '||'
        (CallExpr 0x9d48d70 <line:341:10, col:46> '<dependent type>'
          (CXXUnresolvedConstructExpr 0x9d48cd0 <col:10, col:30> 'less<const _CharT *>')
          (DeclRefExpr 0x9d48ce8 <col:32> 'const _CharT *' lvalue ParmVar 0x9d26f70 '__s' 'const _CharT *')
          (CallExpr 0x9d48d50 <col:37, col:45> '<dependent type>'
            (UnresolvedMemberExpr 0x9d48d10 <col:37> '<bound member function type>' lvalue)))
        (CallExpr 0x9d48fb8 <line:342:6, col:57> '<dependent type>'
          (CXXUnresolvedConstructExpr 0x9d48e50 <col:6, col:26> 'less<const _CharT *>')
          (CXXOperatorCallExpr 0x9d48f78 <col:28, col:51> '<dependent type>'
            (UnresolvedLookupExpr 0x9d48f40 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0)
            (CallExpr 0x9d48eb8 <col:28, col:36> '<dependent type>'
              (UnresolvedMemberExpr 0x9d48e78 <col:28> '<bound member function type>' lvalue))
            (CallExpr 0x9d48f20 <col:40, col:51> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9d48ee8 <col:40, col:46> '<dependent type>' lvalue
                (CXXThisExpr 0x9d48ed8 <col:40> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))
          (DeclRefExpr 0x9d48f9c <col:54> 'const _CharT *' lvalue ParmVar 0x9d26f70 '__s' 'const _CharT *'))))))


        static void _M_copy(_CharT *__d, const _CharT *__s, size_type __n) (CompoundStmt 0x9d49290 </usr/include/c++/4.6/bits/basic_string.h:349:7, line:354:7>
  (IfStmt 0x9d49270 <line:350:2, line:353:35>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9d490b0 <line:350:6, col:13> '<dependent type>'
      (UnresolvedLookupExpr 0x9d49068 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30)
      (DeclRefExpr 0x9d49034 <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d27120 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (IntegerLiteral 0x9d49050 <col:13> 'int' 1))
    (CallExpr 0x9d49188 <line:351:4, col:34> '<dependent type>'
      (DependentScopeDeclRefExpr 0x9d49100 <col:4, col:17> '<dependent type>' lvalue)
      (UnaryOperator 0x9d49140 <col:24, col:25> '<dependent type>' prefix '*'
        (DeclRefExpr 0x9d49124 <col:25> '_CharT *' lvalue ParmVar 0x9d27090 '__d' '_CharT *'))
      (UnaryOperator 0x9d49170 <col:30, col:31> '<dependent type>' prefix '*'
        (DeclRefExpr 0x9d49154 <col:31> 'const _CharT *' lvalue ParmVar 0x9d270e0 '__s' 'const _CharT *')))
    (CallExpr 0x9d49248 <line:353:4, col:35> '<dependent type>'
      (DependentScopeDeclRefExpr 0x9d491d8 <col:4, col:17> '<dependent type>' lvalue)
      (DeclRefExpr 0x9d491fc <col:22> '_CharT *' lvalue ParmVar 0x9d27090 '__d' '_CharT *')
      (DeclRefExpr 0x9d49214 <col:27> 'const _CharT *' lvalue ParmVar 0x9d270e0 '__s' 'const _CharT *')
      (DeclRefExpr 0x9d4922c <col:32> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d27120 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))))


        static void _M_move(_CharT *__d, const _CharT *__s, size_type __n) (CompoundStmt 0x9d49500 </usr/include/c++/4.6/bits/basic_string.h:358:7, line:363:7>
  (IfStmt 0x9d494e0 <line:359:2, line:362:35>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9d49320 <line:359:6, col:13> '<dependent type>'
      (UnresolvedLookupExpr 0x9d492d8 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30)
      (DeclRefExpr 0x9d492a4 <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d272f0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (IntegerLiteral 0x9d492c0 <col:13> 'int' 1))
    (CallExpr 0x9d493f8 <line:360:4, col:34> '<dependent type>'
      (DependentScopeDeclRefExpr 0x9d49370 <col:4, col:17> '<dependent type>' lvalue)
      (UnaryOperator 0x9d493b0 <col:24, col:25> '<dependent type>' prefix '*'
        (DeclRefExpr 0x9d49394 <col:25> '_CharT *' lvalue ParmVar 0x9d27260 '__d' '_CharT *'))
      (UnaryOperator 0x9d493e0 <col:30, col:31> '<dependent type>' prefix '*'
        (DeclRefExpr 0x9d493c4 <col:31> 'const _CharT *' lvalue ParmVar 0x9d272b0 '__s' 'const _CharT *')))
    (CallExpr 0x9d494b8 <line:362:4, col:35> '<dependent type>'
      (DependentScopeDeclRefExpr 0x9d49448 <col:4, col:17> '<dependent type>' lvalue)
      (DeclRefExpr 0x9d4946c <col:22> '_CharT *' lvalue ParmVar 0x9d27260 '__d' '_CharT *')
      (DeclRefExpr 0x9d49484 <col:27> 'const _CharT *' lvalue ParmVar 0x9d272b0 '__s' 'const _CharT *')
      (DeclRefExpr 0x9d4949c <col:32> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d272f0 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))))


        static void _M_assign(_CharT *__d, size_type __n, _CharT __c) (CompoundStmt 0x9d49758 </usr/include/c++/4.6/bits/basic_string.h:367:7, line:372:7>
  (IfStmt 0x9d49738 <line:368:2, line:371:37>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9d49590 <line:368:6, col:13> '<dependent type>'
      (UnresolvedLookupExpr 0x9d49548 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30)
      (DeclRefExpr 0x9d49514 <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d27410 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (IntegerLiteral 0x9d49530 <col:13> 'int' 1))
    (CallExpr 0x9d49650 <line:369:4, col:33> '<dependent type>'
      (DependentScopeDeclRefExpr 0x9d495e0 <col:4, col:17> '<dependent type>' lvalue)
      (UnaryOperator 0x9d49620 <col:24, col:25> '<dependent type>' prefix '*'
        (DeclRefExpr 0x9d49604 <col:25> '_CharT *' lvalue ParmVar 0x9d273d0 '__d' '_CharT *'))
      (DeclRefExpr 0x9d49634 <col:30> '_CharT' lvalue ParmVar 0x9d27450 '__c' '_CharT'))
    (CallExpr 0x9d49710 <line:371:4, col:37> '<dependent type>'
      (DependentScopeDeclRefExpr 0x9d496a0 <col:4, col:17> '<dependent type>' lvalue)
      (DeclRefExpr 0x9d496c4 <col:24> '_CharT *' lvalue ParmVar 0x9d273d0 '__d' '_CharT *')
      (DeclRefExpr 0x9d496dc <col:29> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d27410 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9d496f4 <col:34> '_CharT' lvalue ParmVar 0x9d27450 '__c' '_CharT'))))


        template <class _Iterator> static void _S_copy_chars(_CharT *__p, _Iterator __k1, _Iterator __k2) (CompoundStmt 0x9d49988 </usr/include/c++/4.6/bits/basic_string.h:379:9, line:382:2>
  (ForStmt 0x9d49960 <line:380:4, line:381:37>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9d497e8 <line:380:11, col:19> '<dependent type>'
      (UnresolvedLookupExpr 0x9d497a0 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bacde0 0x9bc3130 0x9bc62c0 0x9c11360 0x9c32300 0x9c32670)
      (DeclRefExpr 0x9d4976c <col:11> '_Iterator' lvalue ParmVar 0x9d27630 '__k1' '_Iterator')
      (DeclRefExpr 0x9d49784 <col:19> '_Iterator' lvalue ParmVar 0x9d27670 '__k2' '_Iterator'))
    (BinaryOperator 0x9d49870 <col:25, col:35> '<dependent type>' ','
      (UnaryOperator 0x9d49828 <col:25, col:27> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9d4980c <col:27> '_Iterator' lvalue ParmVar 0x9d27630 '__k1' '_Iterator'))
      (UnaryOperator 0x9d49858 <col:33, col:35> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9d4983c <col:35> '_CharT *' lvalue ParmVar 0x9d275f0 '__p' '_CharT *')))
    (CallExpr 0x9d49938 <line:381:6, col:37> '<dependent type>'
      (DependentScopeDeclRefExpr 0x9d498b0 <col:6, col:19> '<dependent type>' lvalue)
      (UnaryOperator 0x9d498f0 <col:26, col:27> '<dependent type>' prefix '*'
        (DeclRefExpr 0x9d498d4 <col:27> '_CharT *' lvalue ParmVar 0x9d275f0 '__p' '_CharT *'))
      (UnaryOperator 0x9d49920 <col:32, col:33> '<dependent type>' prefix '*'
        (DeclRefExpr 0x9d49904 <col:33> '_Iterator' lvalue ParmVar 0x9d27630 '__k1' '_Iterator')))))

;
        static void _S_copy_chars(_CharT *__p, iterator __k1, iterator __k2) (CompoundStmt 0x9d49b08 </usr/include/c++/4.6/bits/basic_string.h:386:7, col:55>
  (CallExpr 0x9d49ae0 <col:9, col:52> '<dependent type>'
    (UnresolvedLookupExpr 0x9d499a0 <col:9> '<dependent type>' lvalue (no ADL) = '1' 0x9d27ea0 0x9d27cc0 0x9d27ae0 0x9d27920 0x9d27790)
    (DeclRefExpr 0x9d499e4 <col:23> '_CharT *' lvalue ParmVar 0x9d277e0 '__p' '_CharT *')
    (CallExpr 0x9d49a50 <col:28, col:38> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9d49a18 <col:28, col:33> '<dependent type>' lvalue
        (DeclRefExpr 0x9d499fc <col:28> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9d27820 '__k1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')))
    (CallExpr 0x9d49ac0 <col:41, col:51> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9d49a88 <col:41, col:46> '<dependent type>' lvalue
        (DeclRefExpr 0x9d49a6c <col:41> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9d27860 '__k2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')))))


        static void _S_copy_chars(_CharT *__p, const_iterator __k1, const_iterator __k2) (CompoundStmt 0x9d49c88 </usr/include/c++/4.6/bits/basic_string.h:390:7, col:55>
  (CallExpr 0x9d49c60 <col:9, col:52> '<dependent type>'
    (UnresolvedLookupExpr 0x9d49b20 <col:9> '<dependent type>' lvalue (no ADL) = '1' 0x9d27ea0 0x9d27cc0 0x9d27ae0 0x9d27920 0x9d27790)
    (DeclRefExpr 0x9d49b64 <col:23> '_CharT *' lvalue ParmVar 0x9d279a0 '__p' '_CharT *')
    (CallExpr 0x9d49bd0 <col:28, col:38> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9d49b98 <col:28, col:33> '<dependent type>' lvalue
        (DeclRefExpr 0x9d49b7c <col:28> 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9d279e0 '__k1' 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >')))
    (CallExpr 0x9d49c40 <col:41, col:51> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9d49c08 <col:41, col:46> '<dependent type>' lvalue
        (DeclRefExpr 0x9d49bec <col:41> 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9d27a20 '__k2' 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >')))))


        static void _S_copy_chars(_CharT *__p, _CharT *__k1, _CharT *__k2) (CompoundStmt 0x9d49da0 </usr/include/c++/4.6/bits/basic_string.h:394:7, col:42>
  (CallExpr 0x9d49d78 <col:9, col:39> '<dependent type>'
    (DeclRefExpr 0x9d49c9c <col:9> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9d271e0 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
    (DeclRefExpr 0x9d49cb4 <col:17> '_CharT *' lvalue ParmVar 0x9d27b60 '__p' '_CharT *')
    (DeclRefExpr 0x9d49ccc <col:22> '_CharT *' lvalue ParmVar 0x9d27bb0 '__k1' '_CharT *')
    (CXXOperatorCallExpr 0x9d49d50 <col:28, col:35> '<dependent type>'
      (UnresolvedLookupExpr 0x9d49d18 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
      (DeclRefExpr 0x9d49ce4 <col:28> '_CharT *' lvalue ParmVar 0x9d27c00 '__k2' '_CharT *')
      (DeclRefExpr 0x9d49cfc <col:35> '_CharT *' lvalue ParmVar 0x9d27bb0 '__k1' '_CharT *'))))


        static void _S_copy_chars(_CharT *__p, const _CharT *__k1, const _CharT *__k2) (CompoundStmt 0x9d49eb8 </usr/include/c++/4.6/bits/basic_string.h:398:7, col:42>
  (CallExpr 0x9d49e90 <col:9, col:39> '<dependent type>'
    (DeclRefExpr 0x9d49db4 <col:9> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9d271e0 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
    (DeclRefExpr 0x9d49dcc <col:17> '_CharT *' lvalue ParmVar 0x9d27d40 '__p' '_CharT *')
    (DeclRefExpr 0x9d49de4 <col:22> 'const _CharT *' lvalue ParmVar 0x9d27d90 '__k1' 'const _CharT *')
    (CXXOperatorCallExpr 0x9d49e68 <col:28, col:35> '<dependent type>'
      (UnresolvedLookupExpr 0x9d49e30 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
      (DeclRefExpr 0x9d49dfc <col:28> 'const _CharT *' lvalue ParmVar 0x9d27de0 '__k2' 'const _CharT *')
      (DeclRefExpr 0x9d49e14 <col:35> 'const _CharT *' lvalue ParmVar 0x9d27d90 '__k1' 'const _CharT *'))))


        static int _S_compare(size_type __n1, size_type __n2) (CompoundStmt 0x9d4d958 </usr/include/c++/4.6/bits/basic_string.h:402:7, line:411:7>
  (DeclStmt 0x9d49fe0 <line:403:2, col:58>
    0x9d49ef0 "const difference_type __d =
      (CXXUnresolvedConstructExpr 0x9d49fc0 <col:30, col:57> 'difference_type':'typename _CharT_alloc_type::difference_type'
        (CXXOperatorCallExpr 0x9d49f98 <col:46, col:53> '<dependent type>'
          (UnresolvedLookupExpr 0x9d49f60 <col:51, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
          (DeclRefExpr 0x9d49f30 <col:46> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d27f20 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0x9d49f48 <col:53> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d27f60 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')))")
  (IfStmt 0x9d4d938 <line:405:2, line:410:18>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9d4d5b8 <line:405:6, col:46> '<dependent type>'
      (UnresolvedLookupExpr 0x9d4d578 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bad330 0x9bc37b0 0x9bc6740)
      (DeclRefExpr 0x9d49ff0 <col:6> 'const difference_type':'const typename _CharT_alloc_type::difference_type' lvalue Var 0x9d49ef0 '__d' 'const difference_type':'const typename _CharT_alloc_type::difference_type')
      (DeclRefExpr 0x9d4d558 <col:12, col:46> 'const int':'const int' lvalue Var 0x9d4cfe0 '__max' 'const int':'const int'))
    (ReturnStmt 0x9d4d6a0 <line:406:4, col:45>
      (ImplicitCastExpr 0x9d4d690 <col:11, col:45> 'int':'int' <LValueToRValue>
        (DeclRefExpr 0x9d4d670 <col:11, col:45> 'const int':'const int' lvalue Var 0x9d4cfe0 '__max' 'const int':'const int')))
    (IfStmt 0x9d4d918 <line:407:7, line:410:18>
      <<<NULL>>>
      (CXXOperatorCallExpr 0x9d4d7c0 <line:407:11, col:51> '<dependent type>'
        (UnresolvedLookupExpr 0x9d4d780 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bac3c0 0x9bc2c90 0x9bc5590)
        (DeclRefExpr 0x9d4d6b0 <col:11> 'const difference_type':'const typename _CharT_alloc_type::difference_type' lvalue Var 0x9d49ef0 '__d' 'const difference_type':'const typename _CharT_alloc_type::difference_type')
        (DeclRefExpr 0x9d4d760 <col:17, col:51> 'const int':'const int' lvalue Var 0x9d4cdd0 '__min' 'const int':'const int'))
      (ReturnStmt 0x9d4d8b0 <line:408:4, col:45>
        (ImplicitCastExpr 0x9d4d8a0 <col:11, col:45> 'int':'int' <LValueToRValue>
          (DeclRefExpr 0x9d4d880 <col:11, col:45> 'const int':'const int' lvalue Var 0x9d4cdd0 '__min' 'const int':'const int')))
      (ReturnStmt 0x9d4d908 <line:410:4, col:18>
        (CXXUnresolvedConstructExpr 0x9d4d8e8 <col:11, col:18> 'int'
          (DeclRefExpr 0x9d4d8cc <col:15> 'const difference_type':'const typename _CharT_alloc_type::difference_type' lvalue Var 0x9d49ef0 '__d' 'const difference_type':'const typename _CharT_alloc_type::difference_type'))))))


        void _M_mutate(size_type __pos, size_type __len1, size_type __len2);
        void _M_leak_hard();
        static std::basic_string::_Rep &_S_empty_rep() (CompoundStmt 0x9d4d9f0 </usr/include/c++/4.6/bits/basic_string.h:421:7, col:38>
  (ReturnStmt 0x9d4d9e0 <col:9, col:35>
    (CallExpr 0x9d4d9c0 <col:16, col:35> '<dependent type>'
      (DependentScopeDeclRefExpr 0x9d4d998 <col:16, col:22> '<dependent type>' lvalue))))


    public:
    public:
        basic_string<_CharT, _Traits, _Alloc>() : _M_dataplus((CallExpr 0x9d4da78 </usr/include/c++/4.6/bits/basic_string.h:433:21, col:47> '<dependent type>'
  (CXXDependentScopeMemberExpr 0x9d4da40 <col:21, col:36> '<dependent type>' lvalue
    (CallExpr 0x9d4da20 <col:21, col:34> '<dependent type>'
      (DeclRefExpr 0x9d4da04 <col:21> 'struct std::basic_string::_Rep &(void)' lvalue CXXMethod 0x9d282c0 '_S_empty_rep' 'struct std::basic_string::_Rep &(void)'))))
, (CXXUnresolvedConstructExpr 0x9d4daa0 </usr/include/c++/4.6/bits/basic_string.h:433:50, col:57> '_Alloc')
) (CompoundStmt 0x9d4db00 </usr/include/c++/4.6/bits/basic_string.h:433:60, col:62>)


        basic_string<_CharT, _Traits, _Alloc>(const _Alloc &__a);
        basic_string<_CharT, _Traits, _Alloc>(const basic_string<_CharT, _Traits, _Alloc> &__str);
        basic_string<_CharT, _Traits, _Alloc>(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos, size_type __n = (DeclRefExpr 0x9d454a8 </usr/include/c++/4.6/bits/basic_string.h:457:22> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d24940 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
);
        basic_string<_CharT, _Traits, _Alloc>(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos, size_type __n, const _Alloc &__a);
        basic_string<_CharT, _Traits, _Alloc>(const _CharT *__s, size_type __n, const _Alloc &__a = (CXXUnresolvedConstructExpr 0x9d454c8 </usr/include/c++/4.6/bits/basic_string.h:478:26, col:33> '_Alloc')
);
        basic_string<_CharT, _Traits, _Alloc>(const _CharT *__s, const _Alloc &__a = (CXXUnresolvedConstructExpr 0x9d454e8 </usr/include/c++/4.6/bits/basic_string.h:484:59, col:66> '_Alloc')
);
        basic_string<_CharT, _Traits, _Alloc>(size_type __n, _CharT __c, const _Alloc &__a = (CXXUnresolvedConstructExpr 0x9d45508 </usr/include/c++/4.6/bits/basic_string.h:491:67, col:74> '_Alloc')
);
        template <class _InputIterator> basic_string<_CharT, _Traits, _Alloc>(_InputIterator __beg, _InputIterator __end, const _Alloc &__a = (CXXUnresolvedConstructExpr 0x9d45528 </usr/include/c++/4.6/bits/basic_string.h:527:28, col:35> '_Alloc')
);
        void ~basic_string<_CharT, _Traits, _Alloc>() (CompoundStmt 0x9d4dc20 </usr/include/c++/4.6/bits/basic_string.h:533:7, col:54>
  (CallExpr 0x9d4dc00 <col:9, col:51> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9d4db60 <col:9, col:19> '<dependent type>' lvalue
      (CallExpr 0x9d4db40 <col:9, col:16> '<dependent type>'
        (MemberExpr 0x9d4db20 <col:9> '<bound member function type>' ->_M_rep 0x9d268a0
          (CXXThisExpr 0x9d4db10 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
    (CallExpr 0x9d4dbe0 <col:30, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9d4dba8 <col:30, col:36> '<dependent type>' lvalue
        (CXXThisExpr 0x9d4db98 <col:30> 'basic_string<_CharT, _Traits, _Alloc> *' this)))))


        basic_string<_CharT, _Traits, _Alloc> &operator=(const basic_string<_CharT, _Traits, _Alloc> &__str) (CompoundStmt 0x9d4dcc8 </usr/include/c++/4.6/bits/basic_string.h:541:7, col:37>
  (ReturnStmt 0x9d4dcb8 <col:9, col:34>
    (CallExpr 0x9d4dc98 <col:16, col:34> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9d4dc48 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9d4dc38 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9d4dc7c <col:29> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d2c810 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))


        basic_string<_CharT, _Traits, _Alloc> &operator=(const _CharT *__s) (CompoundStmt 0x9d4dd70 </usr/include/c++/4.6/bits/basic_string.h:549:7, col:35>
  (ReturnStmt 0x9d4dd60 <col:9, col:32>
    (CallExpr 0x9d4dd40 <col:16, col:32> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9d4dcf0 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9d4dce0 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9d4dd24 <col:29> 'const _CharT *' lvalue ParmVar 0x9d2c930 '__s' 'const _CharT *'))))


        basic_string<_CharT, _Traits, _Alloc> &operator=(_CharT __c) (CompoundStmt 0x9d4de60 </usr/include/c++/4.6/bits/basic_string.h:560:7, line:563:7>
  (CallExpr 0x9d4de00 <line:561:2, col:21> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9d4dd98 <col:2, col:8> '<dependent type>' lvalue
      (CXXThisExpr 0x9d4dd88 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (IntegerLiteral 0x9d4ddd0 <col:15> 'int' 1)
    (DeclRefExpr 0x9d4dde8 <col:18> '_CharT' lvalue ParmVar 0x9d2ca40 '__c' '_CharT'))
  (ReturnStmt 0x9d4de50 <line:562:2, col:10>
    (UnaryOperator 0x9d4de38 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9d4de28 <col:10> 'basic_string<_CharT, _Traits, _Alloc> *' this))))


        iterator begin() (CompoundStmt 0x9d4df70 </usr/include/c++/4.6/bits/basic_string.h:600:7, line:603:7>
  (CallExpr 0x9d4dea8 <line:601:2, col:10> '<dependent type>'
    (MemberExpr 0x9d4de88 <col:2> '<bound member function type>' ->_M_leak 0x9d26a50
      (CXXThisExpr 0x9d4de78 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
  (ReturnStmt 0x9d4df60 <line:602:2, col:27>
    (CXXUnresolvedConstructExpr 0x9d4df40 <col:9, col:27> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'
      (CallExpr 0x9d4df20 <col:18, col:26> '<dependent type>'
        (UnresolvedMemberExpr 0x9d4dee0 <col:18> '<bound member function type>' lvalue)))))


        const_iterator begin() const (CompoundStmt 0x9d4e030 </usr/include/c++/4.6/bits/basic_string.h:611:7, col:43>
  (ReturnStmt 0x9d4e020 <col:9, col:40>
    (CXXUnresolvedConstructExpr 0x9d4e000 <col:16, col:40> 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >'
      (CallExpr 0x9d4dfe0 <col:31, col:39> '<dependent type>'
        (UnresolvedMemberExpr 0x9d4dfa0 <col:31> '<bound member function type>' lvalue)))))


        iterator end() (CompoundStmt 0x9d4e208 </usr/include/c++/4.6/bits/basic_string.h:619:7, line:622:7>
  (CallExpr 0x9d4e078 <line:620:2, col:10> '<dependent type>'
    (MemberExpr 0x9d4e058 <col:2> '<bound member function type>' ->_M_leak 0x9d26a50
      (CXXThisExpr 0x9d4e048 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
  (ReturnStmt 0x9d4e1f8 <line:621:2, col:42>
    (CXXUnresolvedConstructExpr 0x9d4e1d8 <col:9, col:42> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'
      (CXXOperatorCallExpr 0x9d4e1b0 <col:18, col:41> '<dependent type>'
        (UnresolvedLookupExpr 0x9d4e178 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0)
        (CallExpr 0x9d4e0f0 <col:18, col:26> '<dependent type>'
          (UnresolvedMemberExpr 0x9d4e0b0 <col:18> '<bound member function type>' lvalue))
        (CallExpr 0x9d4e158 <col:30, col:41> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9d4e120 <col:30, col:36> '<dependent type>' lvalue
            (CXXThisExpr 0x9d4e110 <col:30> 'basic_string<_CharT, _Traits, _Alloc> *' this)))))))


        const_iterator end() const (CompoundStmt 0x9d4e390 </usr/include/c++/4.6/bits/basic_string.h:630:7, col:58>
  (ReturnStmt 0x9d4e380 <col:9, col:55>
    (CXXUnresolvedConstructExpr 0x9d4e360 <col:16, col:55> 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >'
      (CXXOperatorCallExpr 0x9d4e338 <col:31, col:54> '<dependent type>'
        (UnresolvedLookupExpr 0x9d4e300 <col:41, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0)
        (CallExpr 0x9d4e278 <col:31, col:39> '<dependent type>'
          (UnresolvedMemberExpr 0x9d4e238 <col:31> '<bound member function type>' lvalue))
        (CallExpr 0x9d4e2e0 <col:43, col:54> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9d4e2a8 <col:43, col:49> '<dependent type>' lvalue
            (CXXThisExpr 0x9d4e298 <col:43> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))))))


        reverse_iterator rbegin() (CompoundStmt 0x9d4e448 </usr/include/c++/4.6/bits/basic_string.h:639:7, col:47>
  (ReturnStmt 0x9d4e438 <col:9, col:44>
    (CXXUnresolvedConstructExpr 0x9d4e418 <col:16, col:44> 'reverse_iterator':'reverse_iterator<iterator>'
      (CallExpr 0x9d4e3f8 <col:33, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d4e3c0 <col:33, col:39> '<dependent type>' lvalue
          (CXXThisExpr 0x9d4e3b0 <col:33> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))


        const_reverse_iterator rbegin() const (CompoundStmt 0x9d4e500 </usr/include/c++/4.6/bits/basic_string.h:648:7, col:53>
  (ReturnStmt 0x9d4e4f0 <col:9, col:50>
    (CXXUnresolvedConstructExpr 0x9d4e4d0 <col:16, col:50> 'const_reverse_iterator':'reverse_iterator<const_iterator>'
      (CallExpr 0x9d4e4b0 <col:39, col:49> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d4e478 <col:39, col:45> '<dependent type>' lvalue
          (CXXThisExpr 0x9d4e468 <col:39> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))))


        reverse_iterator rend() (CompoundStmt 0x9d4e5b8 </usr/include/c++/4.6/bits/basic_string.h:657:7, col:49>
  (ReturnStmt 0x9d4e5a8 <col:9, col:46>
    (CXXUnresolvedConstructExpr 0x9d4e588 <col:16, col:46> 'reverse_iterator':'reverse_iterator<iterator>'
      (CallExpr 0x9d4e568 <col:33, col:45> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d4e530 <col:33, col:39> '<dependent type>' lvalue
          (CXXThisExpr 0x9d4e520 <col:33> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))


        const_reverse_iterator rend() const (CompoundStmt 0x9d4e670 </usr/include/c++/4.6/bits/basic_string.h:666:7, col:55>
  (ReturnStmt 0x9d4e660 <col:9, col:52>
    (CXXUnresolvedConstructExpr 0x9d4e640 <col:16, col:52> 'const_reverse_iterator':'reverse_iterator<const_iterator>'
      (CallExpr 0x9d4e620 <col:39, col:51> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d4e5e8 <col:39, col:45> '<dependent type>' lvalue
          (CXXThisExpr 0x9d4e5d8 <col:39> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))))


    public:
    public:
        size_type size() const (CompoundStmt 0x9d4f320 </usr/include/c++/4.6/bits/basic_string.h:710:7, col:37>
  (ReturnStmt 0x9d4f310 <col:9, col:26>
    (CXXDependentScopeMemberExpr 0x9d4f2d8 <col:16, col:26> '<dependent type>' lvalue
      (CallExpr 0x9d4f2b8 <col:16, col:23> '<dependent type>'
        (MemberExpr 0x9d4f298 <col:16> '<bound member function type>' ->_M_rep 0x9d268a0
          (CXXThisExpr 0x9d4e688 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))))


        size_type length() const (CompoundStmt 0x9d4f3d0 </usr/include/c++/4.6/bits/basic_string.h:716:7, col:37>
  (ReturnStmt 0x9d4f3c0 <col:9, col:26>
    (CXXDependentScopeMemberExpr 0x9d4f388 <col:16, col:26> '<dependent type>' lvalue
      (CallExpr 0x9d4f368 <col:16, col:23> '<dependent type>'
        (MemberExpr 0x9d4f348 <col:16> '<bound member function type>' ->_M_rep 0x9d268a0
          (CXXThisExpr 0x9d4f338 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))))


        size_type max_size() const (CompoundStmt 0x9d4f450 </usr/include/c++/4.6/bits/basic_string.h:721:7, col:35>
  (ReturnStmt 0x9d4f440 <col:9, col:22>
    (CXXDependentScopeMemberExpr 0x9d4f408 <col:16, col:22> '<dependent type>' lvalue)))


        void resize(size_type __n, _CharT __c);
        void resize(size_type __n) (CompoundStmt 0x9d4f510 </usr/include/c++/4.6/bits/basic_string.h:748:7, col:38>
  (CallExpr 0x9d4f4e8 <col:9, col:35> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9d4f478 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0x9d4f468 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9d4f4ac <col:22> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d2d380 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (CXXUnresolvedConstructExpr 0x9d4f4d0 <col:27, col:34> '_CharT')))


        size_type capacity() const (CompoundStmt 0x9d4f5c0 </usr/include/c++/4.6/bits/basic_string.h:768:7, col:39>
  (ReturnStmt 0x9d4f5b0 <col:9, col:26>
    (CXXDependentScopeMemberExpr 0x9d4f578 <col:16, col:26> '<dependent type>' lvalue
      (CallExpr 0x9d4f558 <col:16, col:23> '<dependent type>'
        (MemberExpr 0x9d4f538 <col:16> '<bound member function type>' ->_M_rep 0x9d268a0
          (CXXThisExpr 0x9d4f528 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))))


        void reserve(size_type __res_arg = (IntegerLiteral 0x9d45540 </usr/include/c++/4.6/bits/basic_string.h:788:37> 'int' 0)
);
        void clear() (CompoundStmt 0x9d4f6c8 </usr/include/c++/4.6/bits/basic_string.h:795:7, col:40>
  (CallExpr 0x9d4f6a0 <col:9, col:37> '<dependent type>'
    (MemberExpr 0x9d4f5e8 <col:9> '<bound member function type>' ->_M_mutate 0x9d281b0
      (CXXThisExpr 0x9d4f5d8 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (IntegerLiteral 0x9d4f608 <col:19> 'int' 0)
    (CallExpr 0x9d4f668 <col:22, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9d4f630 <col:22, col:28> '<dependent type>' lvalue
        (CXXThisExpr 0x9d4f620 <col:22> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
    (IntegerLiteral 0x9d4f688 <col:36> 'int' 0)))


        bool empty() const (CompoundStmt 0x9d4f7e0 </usr/include/c++/4.6/bits/basic_string.h:803:7, col:35>
  (ReturnStmt 0x9d4f7d0 <col:9, col:32>
    (CXXOperatorCallExpr 0x9d4f7a8 <col:16, col:32> '<dependent type>'
      (UnresolvedLookupExpr 0x9d4f760 <col:29, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30)
      (CallExpr 0x9d4f728 <col:16, col:27> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d4f6f0 <col:16, col:22> '<dependent type>' lvalue
          (CXXThisExpr 0x9d4f6e0 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))
      (IntegerLiteral 0x9d4f748 <col:32> 'int' 0))))


        const_reference operator[](size_type __pos) const (CompoundStmt 0x9d4f8b8 </usr/include/c++/4.6/bits/basic_string.h:818:7, line:821:7>
  (NullStmt 0x9d4f7f8 <line:819:40>)
  (ReturnStmt 0x9d4f8a8 <line:820:2, col:24>
    (ArraySubscriptExpr 0x9d4f890 <col:9, col:24> '<dependent type>' lvalue
      (CallExpr 0x9d4f858 <col:9, col:17> '<dependent type>'
        (UnresolvedMemberExpr 0x9d4f818 <col:9> '<bound member function type>' lvalue))
      (DeclRefExpr 0x9d4f874 <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d2d690 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))))


        reference operator[](size_type __pos) (CompoundStmt 0x9d4f9f0 </usr/include/c++/4.6/bits/basic_string.h:835:7, line:842:7>
  (NullStmt 0x9d4f8d0 <line:837:40>)
  (NullStmt 0x9d4f8e0 <line:839:42>)
  (CallExpr 0x9d4f920 <line:840:2, col:10> '<dependent type>'
    (MemberExpr 0x9d4f900 <col:2> '<bound member function type>' ->_M_leak 0x9d26a50
      (CXXThisExpr 0x9d4f8f0 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
  (ReturnStmt 0x9d4f9e0 <line:841:2, col:24>
    (ArraySubscriptExpr 0x9d4f9c8 <col:9, col:24> '<dependent type>' lvalue
      (CallExpr 0x9d4f990 <col:9, col:17> '<dependent type>'
        (UnresolvedMemberExpr 0x9d4f950 <col:9> '<bound member function type>' lvalue))
      (DeclRefExpr 0x9d4f9ac <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d2d7c0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))))


        const_reference at(size_type __n) const (CompoundStmt 0x9d4fce0 </usr/include/c++/4.6/bits/basic_string.h:856:7, line:860:7>
  (IfStmt 0x9d4fc10 <line:857:2, line:858:48>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9d4fad0 <line:857:6, col:24> '<dependent type>'
      (UnresolvedLookupExpr 0x9d4fa90 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bae1e0 0x9bc3fc0 0x9bc7850)
      (DeclRefExpr 0x9d4fa10 <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d2d8d0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x9d4fa70 <col:13, col:24> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d4fa38 <col:13, col:19> '<dependent type>' lvalue
          (CXXThisExpr 0x9d4fa28 <col:13> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))
    (CallExpr 0x9d4fbe0 <line:858:4, col:48> 'void'
      (ImplicitCastExpr 0x9d4fbd0 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x9d4fbb4 <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9b766b0 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0x9d4fc00 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0x9d4fba0 <col:24, col:30> 'const char [17]' lvalue
          (StringLiteral 0x9d4fb70 </usr/include/c++/4.6/bits/basic_string.h:858:29> 'const char [17]' lvalue "basic_string::at"))))
    <<<NULL>>>)
  (ReturnStmt 0x9d4fcd0 <line:859:2, col:22>
    (ArraySubscriptExpr 0x9d4fcb8 <col:9, col:22> '<dependent type>' lvalue
      (CallExpr 0x9d4fc80 <col:9, col:17> '<dependent type>'
        (UnresolvedMemberExpr 0x9d4fc40 <col:9> '<bound member function type>' lvalue))
      (DeclRefExpr 0x9d4fc9c <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d2d8d0 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))))


        reference at(size_type __n) (CompoundStmt 0x9d4ffb8 </usr/include/c++/4.6/bits/basic_string.h:909:7, line:914:7>
  (IfStmt 0x9d4fe98 <line:910:2, line:911:48>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9d4fda0 <line:910:6, col:18> '<dependent type>'
      (UnresolvedLookupExpr 0x9d4fd60 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bae1e0 0x9bc3fc0 0x9bc7850)
      (DeclRefExpr 0x9d4fcf8 <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d2d990 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x9d4fd40 <col:13, col:18> '<dependent type>'
        (MemberExpr 0x9d4fd20 <col:13> '<bound member function type>' ->size 0x9d2d0c0
          (CXXThisExpr 0x9d4fd10 <col:13> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
    (CallExpr 0x9d4fe68 <line:911:4, col:48> 'void'
      (ImplicitCastExpr 0x9d4fe58 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x9d4fe3c <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9b766b0 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0x9d4fe88 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0x9d4fe28 <col:24, col:30> 'const char [17]' lvalue
          (StringLiteral 0x9d4fdfc </usr/include/c++/4.6/bits/basic_string.h:911:29> 'const char [17]' lvalue "basic_string::at"))))
    <<<NULL>>>)
  (CallExpr 0x9d4fee8 <line:912:2, col:10> '<dependent type>'
    (MemberExpr 0x9d4fec8 <col:2> '<bound member function type>' ->_M_leak 0x9d26a50
      (CXXThisExpr 0x9d4feb8 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
  (ReturnStmt 0x9d4ffa8 <line:913:2, col:22>
    (ArraySubscriptExpr 0x9d4ff90 <col:9, col:22> '<dependent type>' lvalue
      (CallExpr 0x9d4ff58 <col:9, col:17> '<dependent type>'
        (UnresolvedMemberExpr 0x9d4ff18 <col:9> '<bound member function type>' lvalue))
      (DeclRefExpr 0x9d4ff74 <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d2d990 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))))


        basic_string<_CharT, _Traits, _Alloc> &operator+=(const basic_string<_CharT, _Traits, _Alloc> &__str) (CompoundStmt 0x9d50068 </usr/include/c++/4.6/bits/basic_string.h:924:7, col:37>
  (ReturnStmt 0x9d50058 <col:9, col:34>
    (CallExpr 0x9d50038 <col:16, col:34> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9d4ffe8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9d4ffd8 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9d5001c <col:29> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d2da60 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))


        basic_string<_CharT, _Traits, _Alloc> &operator+=(const _CharT *__s) (CompoundStmt 0x9d50110 </usr/include/c++/4.6/bits/basic_string.h:933:7, col:35>
  (ReturnStmt 0x9d50100 <col:9, col:32>
    (CallExpr 0x9d500e0 <col:16, col:32> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9d50090 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9d50080 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9d500c4 <col:29> 'const _CharT *' lvalue ParmVar 0x9d2db40 '__s' 'const _CharT *'))))


        basic_string<_CharT, _Traits, _Alloc> &operator+=(_CharT __c) (CompoundStmt 0x9d501e0 </usr/include/c++/4.6/bits/basic_string.h:942:7, line:945:7>
  (CallExpr 0x9d50188 <line:943:2, col:21> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9d50138 <col:2, col:8> '<dependent type>' lvalue
      (CXXThisExpr 0x9d50128 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9d5016c <col:18> '_CharT' lvalue ParmVar 0x9d2dc10 '__c' '_CharT'))
  (ReturnStmt 0x9d501d0 <line:944:2, col:10>
    (UnaryOperator 0x9d501b8 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9d501a8 <col:10> 'basic_string<_CharT, _Traits, _Alloc> *' this))))


        basic_string<_CharT, _Traits, _Alloc> &append(const basic_string<_CharT, _Traits, _Alloc> &__str);
        basic_string<_CharT, _Traits, _Alloc> &append(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos, size_type __n);
        basic_string<_CharT, _Traits, _Alloc> &append(const _CharT *__s, size_type __n);
        basic_string<_CharT, _Traits, _Alloc> &append(const _CharT *__s) (CompoundStmt 0x9d50330 </usr/include/c++/4.6/bits/basic_string.h:997:7, line:1000:7>
  (NullStmt 0x9d501f8 <line:998:32>)
  (ReturnStmt 0x9d50320 <line:999:2, col:51>
    (CallExpr 0x9d502f8 <col:9, col:51> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9d50218 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x9d50208 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9d5024c <col:22> 'const _CharT *' lvalue ParmVar 0x9d315f0 '__s' 'const _CharT *')
      (CallExpr 0x9d502d8 <col:27, col:50> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d50288 <col:27, col:40> '<dependent type>' lvalue)
        (DeclRefExpr 0x9d502bc <col:47> 'const _CharT *' lvalue ParmVar 0x9d315f0 '__s' 'const _CharT *')))))


        basic_string<_CharT, _Traits, _Alloc> &append(size_type __n, _CharT __c);
        template <class _InputIterator> basic_string<_CharT, _Traits, _Alloc> &append(_InputIterator __first, _InputIterator __last) (CompoundStmt 0x9d504a0 </usr/include/c++/4.6/bits/basic_string.h:1035:9, col:72>
  (ReturnStmt 0x9d50490 <col:11, col:69>
    (CallExpr 0x9d50460 <col:18, col:69> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9d50358 <col:18, col:24> '<dependent type>' lvalue
        (CXXThisExpr 0x9d50348 <col:18> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0x9d503c0 <col:32, col:40> '<dependent type>'
        (MemberExpr 0x9d503a0 <col:32> '<bound member function type>' ->_M_iend 0x9d269d0
          (CXXThisExpr 0x9d50390 <col:32> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
      (CallExpr 0x9d50410 <col:43, col:51> '<dependent type>'
        (MemberExpr 0x9d503f0 <col:43> '<bound member function type>' ->_M_iend 0x9d269d0
          (CXXThisExpr 0x9d503e0 <col:43> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
      (DeclRefExpr 0x9d5042c <col:54> '_InputIterator' lvalue ParmVar 0x9d31870 '__first' '_InputIterator')
      (DeclRefExpr 0x9d50444 <col:63> '_InputIterator' lvalue ParmVar 0x9d318b0 '__last' '_InputIterator'))))

;
        void push_back(_CharT __c) (CompoundStmt 0x9d50a80 </usr/include/c++/4.6/bits/basic_string.h:1043:7, line:1049:7>
  (DeclStmt 0x9d505d8 <line:1044:2, col:42>
    0x9d504c0 "const size_type __len =
      (CXXOperatorCallExpr 0x9d505b0 <col:26, col:41> '<dependent type>'
        (UnresolvedLookupExpr 0x9d50578 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0)
        (IntegerLiteral 0x9d504f8 <col:26> 'int' 1)
        (CallExpr 0x9d50558 <col:30, col:41> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9d50520 <col:30, col:36> '<dependent type>' lvalue
            (CXXThisExpr 0x9d50510 <col:30> 'basic_string<_CharT, _Traits, _Alloc> *' this))))")
  (IfStmt 0x9d50810 <line:1045:2, line:1046:23>
    <<<NULL>>>
    (BinaryOperator 0x9d50778 <line:1045:6, col:57> '<dependent type>' '||'
      (CXXOperatorCallExpr 0x9d506a8 <col:6, col:29> '<dependent type>'
        (UnresolvedLookupExpr 0x9d50668 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bad330 0x9bc37b0 0x9bc6740)
        (DeclRefExpr 0x9d505e8 <col:6> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d504c0 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (CallExpr 0x9d50648 <col:14, col:29> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9d50610 <col:14, col:20> '<dependent type>' lvalue
            (CXXThisExpr 0x9d50600 <col:14> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CallExpr 0x9d50758 <col:34, col:57> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d50720 <col:34, col:44> '<dependent type>' lvalue
          (CallExpr 0x9d50700 <col:34, col:41> '<dependent type>'
            (MemberExpr 0x9d506e0 <col:34> '<bound member function type>' ->_M_rep 0x9d268a0
              (CXXThisExpr 0x9d506d0 <col:34> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
    (CallExpr 0x9d507f0 <line:1046:4, col:23> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9d507a0 <col:4, col:10> '<dependent type>' lvalue
        (CXXThisExpr 0x9d50790 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9d507d4 <col:18> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d504c0 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))
    <<<NULL>>>)
  (CallExpr 0x9d50998 <line:1047:2, col:50> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9d50858 <col:2, col:15> '<dependent type>' lvalue)
    (ArraySubscriptExpr 0x9d50968 <col:22, col:44> '<dependent type>' lvalue
      (CallExpr 0x9d508e0 <col:22, col:30> '<dependent type>'
        (UnresolvedMemberExpr 0x9d508a0 <col:22> '<bound member function type>' lvalue))
      (CallExpr 0x9d50948 <col:32, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d50910 <col:32, col:38> '<dependent type>' lvalue
          (CXXThisExpr 0x9d50900 <col:32> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
    (DeclRefExpr 0x9d5097c <col:47> '_CharT' lvalue ParmVar 0x9d319f0 '__c' '_CharT'))
  (CallExpr 0x9d50a60 <line:1048:2, col:44> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9d50a10 <col:2, col:12> '<dependent type>' lvalue
      (CallExpr 0x9d509f0 <col:2, col:9> '<dependent type>'
        (MemberExpr 0x9d509d0 <col:2> '<bound member function type>' ->_M_rep 0x9d268a0
          (CXXThisExpr 0x9d509c0 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
    (DeclRefExpr 0x9d50a44 <col:39> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d504c0 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type')))


        basic_string<_CharT, _Traits, _Alloc> &assign(const basic_string<_CharT, _Traits, _Alloc> &__str);
        basic_string<_CharT, _Traits, _Alloc> &assign(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos, size_type __n) (CompoundStmt 0x9d50d58 </usr/include/c++/4.6/bits/basic_string.h:1090:7, line:1092:37>
  (ReturnStmt 0x9d50d48 <line:1090:9, line:1092:34>
    (CallExpr 0x9d50d20 <line:1090:16, line:1092:34> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9d50ab0 <line:1090:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9d50aa0 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXOperatorCallExpr 0x9d50c50 <col:29, line:1091:54> '<dependent type>'
        (UnresolvedLookupExpr 0x9d50c18 <col:8, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0)
        (CallExpr 0x9d50b38 <line:1090:29, col:43> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9d50b00 <col:29, col:35> '<dependent type>' lvalue
            (DeclRefExpr 0x9d50ae4 <col:29> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d31bd0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
        (CallExpr 0x9d50bf0 <line:1091:10, col:54> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9d50b70 <col:10, col:16> '<dependent type>' lvalue
            (DeclRefExpr 0x9d50b54 <col:10> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d31bd0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
          (DeclRefExpr 0x9d50ba4 <col:25> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d31c10 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
          (StringLiteral 0x9d50bbc <col:32> 'const char [21]' lvalue "basic_string::assign")))
      (CallExpr 0x9d50cf8 <line:1092:8, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d50c90 <col:8, col:14> '<dependent type>' lvalue
          (DeclRefExpr 0x9d50c74 <col:8> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d31bd0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x9d50cc4 <col:23> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d31c10 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9d50cdc <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d31c50 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))))


        basic_string<_CharT, _Traits, _Alloc> &assign(const _CharT *__s, size_type __n);
        basic_string<_CharT, _Traits, _Alloc> &assign(const _CharT *__s) (CompoundStmt 0x9d50ea8 </usr/include/c++/4.6/bits/basic_string.h:1118:7, line:1121:7>
  (NullStmt 0x9d50d70 <line:1119:32>)
  (ReturnStmt 0x9d50e98 <line:1120:2, col:51>
    (CallExpr 0x9d50e70 <col:9, col:51> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9d50d90 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x9d50d80 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9d50dc4 <col:22> 'const _CharT *' lvalue ParmVar 0x9d31e50 '__s' 'const _CharT *')
      (CallExpr 0x9d50e50 <col:27, col:50> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d50e00 <col:27, col:40> '<dependent type>' lvalue)
        (DeclRefExpr 0x9d50e34 <col:47> 'const _CharT *' lvalue ParmVar 0x9d31e50 '__s' 'const _CharT *')))))


        basic_string<_CharT, _Traits, _Alloc> &assign(size_type __n, _CharT __c) (CompoundStmt 0x9d51008 </usr/include/c++/4.6/bits/basic_string.h:1134:7, col:70>
  (ReturnStmt 0x9d50ff8 <col:9, col:67>
    (CallExpr 0x9d50fc8 <col:16, col:67> '<dependent type>'
      (MemberExpr 0x9d50ed0 <col:16> '<bound member function type>' ->_M_replace_aux 0x9d3b740
        (CXXThisExpr 0x9d50ec0 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXUnresolvedConstructExpr 0x9d50f10 <col:31, col:42> 'size_type':'typename _CharT_alloc_type::size_type'
        (IntegerLiteral 0x9d50ef8 <col:41> 'int' 0))
      (CallExpr 0x9d50f78 <col:45, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d50f40 <col:45, col:51> '<dependent type>' lvalue
          (CXXThisExpr 0x9d50f30 <col:45> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
      (DeclRefExpr 0x9d50f94 <col:59> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d31f20 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9d50fac <col:64> '_CharT' lvalue ParmVar 0x9d31f60 '__c' '_CharT'))))


        template <class _InputIterator> basic_string<_CharT, _Traits, _Alloc> &assign(_InputIterator __first, _InputIterator __last) (CompoundStmt 0x9d51178 </usr/include/c++/4.6/bits/basic_string.h:1147:9, col:74>
  (ReturnStmt 0x9d51168 <col:11, col:71>
    (CallExpr 0x9d51138 <col:18, col:71> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9d51030 <col:18, col:24> '<dependent type>' lvalue
        (CXXThisExpr 0x9d51020 <col:18> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0x9d51098 <col:32, col:42> '<dependent type>'
        (MemberExpr 0x9d51078 <col:32> '<bound member function type>' ->_M_ibegin 0x9d26950
          (CXXThisExpr 0x9d51068 <col:32> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
      (CallExpr 0x9d510e8 <col:45, col:53> '<dependent type>'
        (MemberExpr 0x9d510c8 <col:45> '<bound member function type>' ->_M_iend 0x9d269d0
          (CXXThisExpr 0x9d510b8 <col:45> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
      (DeclRefExpr 0x9d51104 <col:56> '_InputIterator' lvalue ParmVar 0x9d32090 '__first' '_InputIterator')
      (DeclRefExpr 0x9d5111c <col:65> '_InputIterator' lvalue ParmVar 0x9d320d0 '__last' '_InputIterator'))))

;
        void insert(iterator __p, size_type __n, _CharT __c) (CompoundStmt 0x9d51268 </usr/include/c++/4.6/bits/basic_string.h:1174:7, col:45>
  (CallExpr 0x9d51238 <col:9, col:41> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9d511a0 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0x9d51190 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9d511d4 <col:23> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9d321f0 '__p' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
    (DeclRefExpr 0x9d511ec <col:28> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9d321f0 '__p' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
    (DeclRefExpr 0x9d51204 <col:33> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d32230 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (DeclRefExpr 0x9d5121c <col:38> '_CharT' lvalue ParmVar 0x9d32270 '__c' '_CharT')))


        template <class _InputIterator> void insert(iterator __p, _InputIterator __beg, _InputIterator __end) (CompoundStmt 0x9d523b8 </usr/include/c++/4.6/bits/basic_string.h:1190:9, col:50>
  (CallExpr 0x9d52388 <col:11, col:47> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9d522f0 <col:11, col:17> '<dependent type>' lvalue
      (CXXThisExpr 0x9d51280 <col:11> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9d52324 <col:25> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9d32400 '__p' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
    (DeclRefExpr 0x9d5233c <col:30> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9d32400 '__p' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
    (DeclRefExpr 0x9d52354 <col:35> '_InputIterator' lvalue ParmVar 0x9d32440 '__beg' '_InputIterator')
    (DeclRefExpr 0x9d5236c <col:42> '_InputIterator' lvalue ParmVar 0x9d32480 '__end' '_InputIterator')))

;
        basic_string<_CharT, _Traits, _Alloc> &insert(size_type __pos1, const basic_string<_CharT, _Traits, _Alloc> &__str) (CompoundStmt 0x9d52538 </usr/include/c++/4.6/bits/basic_string.h:1220:7, col:73>
  (ReturnStmt 0x9d52528 <col:9, col:70>
    (CallExpr 0x9d524f8 <col:16, col:70> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9d523e0 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9d523d0 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9d52414 <col:29> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d325e0 '__pos1' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9d5242c <col:37> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d32630 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')
      (CXXUnresolvedConstructExpr 0x9d52468 <col:44, col:55> 'size_type':'typename _CharT_alloc_type::size_type'
        (IntegerLiteral 0x9d52450 <col:54> 'int' 0))
      (CallExpr 0x9d524d8 <col:58, col:69> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d524a0 <col:58, col:64> '<dependent type>' lvalue
          (DeclRefExpr 0x9d52484 <col:58> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d32630 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))


        basic_string<_CharT, _Traits, _Alloc> &insert(size_type __pos1, const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos2, size_type __n) (CompoundStmt 0x9d52820 </usr/include/c++/4.6/bits/basic_string.h:1243:7, line:1245:38>
  (ReturnStmt 0x9d52810 <line:1243:9, line:1245:35>
    (CallExpr 0x9d527e8 <line:1243:16, line:1245:35> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9d52560 <line:1243:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9d52550 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9d52594 <col:29> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d32740 '__pos1' 'size_type':'typename _CharT_alloc_type::size_type')
      (CXXOperatorCallExpr 0x9d52718 <col:37, line:1244:55> '<dependent type>'
        (UnresolvedLookupExpr 0x9d526e0 <col:8, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0)
        (CallExpr 0x9d52600 <line:1243:37, col:51> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9d525c8 <col:37, col:43> '<dependent type>' lvalue
            (DeclRefExpr 0x9d525ac <col:37> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d32790 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
        (CallExpr 0x9d526b8 <line:1244:10, col:55> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9d52638 <col:10, col:16> '<dependent type>' lvalue
            (DeclRefExpr 0x9d5261c <col:10> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d32790 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
          (DeclRefExpr 0x9d5266c <col:25> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d327d0 '__pos2' 'size_type':'typename _CharT_alloc_type::size_type')
          (StringLiteral 0x9d52684 <col:33> 'const char [21]' lvalue "basic_string::insert")))
      (CallExpr 0x9d527c0 <line:1245:8, col:34> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d52758 <col:8, col:14> '<dependent type>' lvalue
          (DeclRefExpr 0x9d5273c <col:8> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d32790 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x9d5278c <col:23> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d327d0 '__pos2' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9d527a4 <col:31> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d32810 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))))


        basic_string<_CharT, _Traits, _Alloc> &insert(size_type __pos, const _CharT *__s, size_type __n);
        basic_string<_CharT, _Traits, _Alloc> &insert(size_type __pos, const _CharT *__s) (CompoundStmt 0x9d52988 </usr/include/c++/4.6/bits/basic_string.h:1283:7, line:1286:7>
  (NullStmt 0x9d52838 <line:1284:32>)
  (ReturnStmt 0x9d52978 <line:1285:2, col:58>
    (CallExpr 0x9d52950 <col:9, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9d52858 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x9d52848 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9d5288c <col:22> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d32b20 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9d528a4 <col:29> 'const _CharT *' lvalue ParmVar 0x9d32b70 '__s' 'const _CharT *')
      (CallExpr 0x9d52930 <col:34, col:57> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d528e0 <col:34, col:47> '<dependent type>' lvalue)
        (DeclRefExpr 0x9d52914 <col:54> 'const _CharT *' lvalue ParmVar 0x9d32b70 '__s' 'const _CharT *')))))


        basic_string<_CharT, _Traits, _Alloc> &insert(size_type __pos, size_type __n, _CharT __c) (CompoundStmt 0x9d52b20 </usr/include/c++/4.6/bits/basic_string.h:1306:7, line:1307:35>
  (ReturnStmt 0x9d52b10 <line:1306:9, line:1307:32>
    (CallExpr 0x9d52ae0 <line:1306:16, line:1307:32> '<dependent type>'
      (MemberExpr 0x9d529b0 <line:1306:16> '<bound member function type>' ->_M_replace_aux 0x9d3b740
        (CXXThisExpr 0x9d529a0 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0x9d52a48 <col:31, col:69> '<dependent type>'
        (MemberExpr 0x9d529e0 <col:31> '<bound member function type>' ->_M_check 0x9d26bb0
          (CXXThisExpr 0x9d529d0 <col:31> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x9d52a00 <col:40> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d32c80 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (StringLiteral 0x9d52a18 <col:47> 'const char [21]' lvalue "basic_string::insert"))
      (CXXUnresolvedConstructExpr 0x9d52a90 <line:1307:10, col:21> 'size_type':'typename _CharT_alloc_type::size_type'
        (IntegerLiteral 0x9d52a78 <col:20> 'int' 0))
      (DeclRefExpr 0x9d52aac <col:24> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d32cc0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9d52ac4 <col:29> '_CharT' lvalue ParmVar 0x9d32d00 '__c' '_CharT'))))


        iterator insert(iterator __p, _CharT __c) (CompoundStmt 0x9d52f38 </usr/include/c++/4.6/bits/basic_string.h:1323:7, line:1329:7>
  (NullStmt 0x9d52b38 <line:1324:66>)
  (DeclStmt 0x9d52c50 <line:1325:2, col:43>
    0x9d52b50 "const size_type __pos =
      (CXXOperatorCallExpr 0x9d52c28 <col:26, col:42> '<dependent type>'
        (UnresolvedLookupExpr 0x9d52bf0 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
        (DeclRefExpr 0x9d52b84 <col:26> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9d32e40 '__p' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (CallExpr 0x9d52bd0 <col:32, col:42> '<dependent type>'
          (MemberExpr 0x9d52bb0 <col:32> '<bound member function type>' ->_M_ibegin 0x9d26950
            (CXXThisExpr 0x9d52ba0 <col:32> 'basic_string<_CharT, _Traits, _Alloc> *' this))))")
  (CallExpr 0x9d52d40 <line:1326:2, col:55> '<dependent type>'
    (MemberExpr 0x9d52c70 <col:2> '<bound member function type>' ->_M_replace_aux 0x9d3b740
      (CXXThisExpr 0x9d52c60 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9d52c90 <col:17> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d52b50 '__pos' 'const size_type':'const typename _CharT_alloc_type::size_type')
    (CXXUnresolvedConstructExpr 0x9d52cc8 <col:24, col:35> 'size_type':'typename _CharT_alloc_type::size_type'
      (IntegerLiteral 0x9d52cb0 <col:34> 'int' 0))
    (CXXUnresolvedConstructExpr 0x9d52d08 <col:38, col:49> 'size_type':'typename _CharT_alloc_type::size_type'
      (IntegerLiteral 0x9d52cf0 <col:48> 'int' 1))
    (DeclRefExpr 0x9d52d24 <col:52> '_CharT' lvalue ParmVar 0x9d32e80 '__c' '_CharT'))
  (CallExpr 0x9d52df8 <line:1327:2, col:26> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9d52dc0 <col:2, col:12> '<dependent type>' lvalue
      (CallExpr 0x9d52da0 <col:2, col:9> '<dependent type>'
        (MemberExpr 0x9d52d80 <col:2> '<bound member function type>' ->_M_rep 0x9d268a0
          (CXXThisExpr 0x9d52d70 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this)))))
  (ReturnStmt 0x9d52f28 <line:1328:2, col:35>
    (CXXUnresolvedConstructExpr 0x9d52f08 <col:9, col:35> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'
      (CXXOperatorCallExpr 0x9d52ee0 <col:18, col:30> '<dependent type>'
        (UnresolvedLookupExpr 0x9d52ea8 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0)
        (CallExpr 0x9d52e70 <col:18, col:26> '<dependent type>'
          (UnresolvedMemberExpr 0x9d52e30 <col:18> '<bound member function type>' lvalue))
        (DeclRefExpr 0x9d52e8c <col:30> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d52b50 '__pos' 'const size_type':'const typename _CharT_alloc_type::size_type')))))


        basic_string<_CharT, _Traits, _Alloc> &erase(size_type __pos = (IntegerLiteral 0x9d45558 </usr/include/c++/4.6/bits/basic_string.h:1346:31> 'int' 0)
, size_type __n = (DeclRefExpr 0x9d45570 </usr/include/c++/4.6/bits/basic_string.h:1346:50> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d24940 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) (CompoundStmt 0x9d53158 </usr/include/c++/4.6/bits/basic_string.h:1347:7, line:1351:7>
  (CallExpr 0x9d530f8 <line:1348:2, line:1349:39> '<dependent type>'
    (MemberExpr 0x9d52f70 <line:1348:2> '<bound member function type>' ->_M_mutate 0x9d281b0
      (CXXThisExpr 0x9d52f60 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (CallExpr 0x9d53008 <col:12, col:49> '<dependent type>'
      (MemberExpr 0x9d52fa0 <col:12> '<bound member function type>' ->_M_check 0x9d26bb0
        (CXXThisExpr 0x9d52f90 <col:12> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9d52fc0 <col:21> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d32f90 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (StringLiteral 0x9d52fd8 <col:28> 'const char [20]' lvalue "basic_string::erase"))
    (CallExpr 0x9d53090 <line:1349:5, col:24> '<dependent type>'
      (MemberExpr 0x9d53040 <col:5> '<bound member function type>' ->_M_limit 0x9d26ed0
        (CXXThisExpr 0x9d53030 <col:5> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9d53060 <col:14> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d32f90 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9d53078 <col:21> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d32fd0 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
    (CXXUnresolvedConstructExpr 0x9d530d8 <col:27, col:38> 'size_type':'typename _CharT_alloc_type::size_type'
      (IntegerLiteral 0x9d530c0 <col:37> 'int' 0)))
  (ReturnStmt 0x9d53148 <line:1350:2, col:10>
    (UnaryOperator 0x9d53130 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9d53120 <col:10> 'basic_string<_CharT, _Traits, _Alloc> *' this))))


        iterator erase(iterator __position) (CompoundStmt 0x9d53558 </usr/include/c++/4.6/bits/basic_string.h:1363:7, line:1370:7>
  (NullStmt 0x9d53170 <line:1365:32>)
  (DeclStmt 0x9d53290 <line:1366:2, col:50>
    0x9d53190 "const size_type __pos =
      (CXXOperatorCallExpr 0x9d53268 <col:26, col:49> '<dependent type>'
        (UnresolvedLookupExpr 0x9d53230 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
        (DeclRefExpr 0x9d531c4 <col:26> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9d330e0 '__position' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (CallExpr 0x9d53210 <col:39, col:49> '<dependent type>'
          (MemberExpr 0x9d531f0 <col:39> '<bound member function type>' ->_M_ibegin 0x9d26950
            (CXXThisExpr 0x9d531e0 <col:39> 'basic_string<_CharT, _Traits, _Alloc> *' this))))")
  (CallExpr 0x9d53368 <line:1367:2, col:45> '<dependent type>'
    (MemberExpr 0x9d532b0 <col:2> '<bound member function type>' ->_M_mutate 0x9d281b0
      (CXXThisExpr 0x9d532a0 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9d532d0 <col:12> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d53190 '__pos' 'const size_type':'const typename _CharT_alloc_type::size_type')
    (CXXUnresolvedConstructExpr 0x9d53308 <col:19, col:30> 'size_type':'typename _CharT_alloc_type::size_type'
      (IntegerLiteral 0x9d532f0 <col:29> 'int' 1))
    (CXXUnresolvedConstructExpr 0x9d53348 <col:33, col:44> 'size_type':'typename _CharT_alloc_type::size_type'
      (IntegerLiteral 0x9d53330 <col:43> 'int' 0)))
  (CallExpr 0x9d53418 <line:1368:2, col:26> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9d533e0 <col:2, col:12> '<dependent type>' lvalue
      (CallExpr 0x9d533c0 <col:2, col:9> '<dependent type>'
        (MemberExpr 0x9d533a0 <col:2> '<bound member function type>' ->_M_rep 0x9d268a0
          (CXXThisExpr 0x9d53390 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this)))))
  (ReturnStmt 0x9d53548 <line:1369:2, col:35>
    (CXXUnresolvedConstructExpr 0x9d53528 <col:9, col:35> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'
      (CXXOperatorCallExpr 0x9d53500 <col:18, col:30> '<dependent type>'
        (UnresolvedLookupExpr 0x9d534c8 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0)
        (CallExpr 0x9d53490 <col:18, col:26> '<dependent type>'
          (UnresolvedMemberExpr 0x9d53450 <col:18> '<bound member function type>' lvalue))
        (DeclRefExpr 0x9d534ac <col:30> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d53190 '__pos' 'const size_type':'const typename _CharT_alloc_type::size_type')))))


        iterator erase(iterator __first, iterator __last);
        basic_string<_CharT, _Traits, _Alloc> &replace(size_type __pos, size_type __n, const basic_string<_CharT, _Traits, _Alloc> &__str) (CompoundStmt 0x9d53718 </usr/include/c++/4.6/bits/basic_string.h:1402:7, col:74>
  (ReturnStmt 0x9d53708 <col:9, col:71>
    (CallExpr 0x9d536d8 <col:16, col:71> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9d53590 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9d53580 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9d535c4 <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d365c0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9d535dc <col:37> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d36600 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x9d53648 <col:42, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d53610 <col:42, col:48> '<dependent type>' lvalue
          (DeclRefExpr 0x9d535f4 <col:42> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d36650 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (CallExpr 0x9d536b8 <col:59, col:70> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d53680 <col:59, col:65> '<dependent type>' lvalue
          (DeclRefExpr 0x9d53664 <col:59> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d36650 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))


        basic_string<_CharT, _Traits, _Alloc> &replace(size_type __pos1, size_type __n1, const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos2, size_type __n2) (CompoundStmt 0x9d53a20 </usr/include/c++/4.6/bits/basic_string.h:1425:7, line:1427:40>
  (ReturnStmt 0x9d53a10 <line:1425:9, line:1427:37>
    (CallExpr 0x9d539e0 <line:1425:16, line:1427:37> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9d53740 <line:1425:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9d53730 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9d53774 <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d36790 '__pos1' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9d5378c <col:38> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d367d0 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
      (CXXOperatorCallExpr 0x9d53910 <col:44, line:1426:57> '<dependent type>'
        (UnresolvedLookupExpr 0x9d538d8 <col:9, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0)
        (CallExpr 0x9d537f8 <line:1425:44, col:58> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9d537c0 <col:44, col:50> '<dependent type>' lvalue
            (DeclRefExpr 0x9d537a4 <col:44> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d36820 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
        (CallExpr 0x9d538b0 <line:1426:11, col:57> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9d53830 <col:11, col:17> '<dependent type>' lvalue
            (DeclRefExpr 0x9d53814 <col:11> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d36820 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
          (DeclRefExpr 0x9d53864 <col:26> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d36860 '__pos2' 'size_type':'typename _CharT_alloc_type::size_type')
          (StringLiteral 0x9d5387c <col:34> 'const char [22]' lvalue "basic_string::replace")))
      (CallExpr 0x9d539b8 <line:1427:9, col:36> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d53950 <col:9, col:15> '<dependent type>' lvalue
          (DeclRefExpr 0x9d53934 <col:9> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d36820 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x9d53984 <col:24> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d36860 '__pos2' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9d5399c <col:32> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d368a0 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')))))


        basic_string<_CharT, _Traits, _Alloc> &replace(size_type __pos, size_type __n1, const _CharT *__s, size_type __n2);
        basic_string<_CharT, _Traits, _Alloc> &replace(size_type __pos, size_type __n1, const _CharT *__s) (CompoundStmt 0x9d53ba8 </usr/include/c++/4.6/bits/basic_string.h:1467:7, line:1470:7>
  (NullStmt 0x9d53a38 <line:1468:32>)
  (ReturnStmt 0x9d53b98 <line:1469:2, col:65>
    (CallExpr 0x9d53b68 <col:9, col:65> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9d53a58 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x9d53a48 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9d53a8c <col:23> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d36c00 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9d53aa4 <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d36c40 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9d53abc <col:36> 'const _CharT *' lvalue ParmVar 0x9d36c90 '__s' 'const _CharT *')
      (CallExpr 0x9d53b48 <col:41, col:64> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d53af8 <col:41, col:54> '<dependent type>' lvalue)
        (DeclRefExpr 0x9d53b2c <col:61> 'const _CharT *' lvalue ParmVar 0x9d36c90 '__s' 'const _CharT *')))))


        basic_string<_CharT, _Traits, _Alloc> &replace(size_type __pos, size_type __n1, size_type __n2, _CharT __c) (CompoundStmt 0x9d53d90 </usr/include/c++/4.6/bits/basic_string.h:1490:7, line:1491:45>
  (ReturnStmt 0x9d53d80 <line:1490:9, line:1491:42>
    (CallExpr 0x9d53d50 <line:1490:16, line:1491:42> '<dependent type>'
      (MemberExpr 0x9d53bd0 <line:1490:16> '<bound member function type>' ->_M_replace_aux 0x9d3b740
        (CXXThisExpr 0x9d53bc0 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0x9d53c70 <col:31, col:70> '<dependent type>'
        (MemberExpr 0x9d53c00 <col:31> '<bound member function type>' ->_M_check 0x9d26bb0
          (CXXThisExpr 0x9d53bf0 <col:31> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x9d53c20 <col:40> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d36dd0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (StringLiteral 0x9d53c38 <col:47> 'const char [22]' lvalue "basic_string::replace"))
      (CallExpr 0x9d53cf8 <line:1491:10, col:30> '<dependent type>'
        (MemberExpr 0x9d53ca8 <col:10> '<bound member function type>' ->_M_limit 0x9d26ed0
          (CXXThisExpr 0x9d53c98 <col:10> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x9d53cc8 <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d36dd0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9d53ce0 <col:26> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d36e10 '__n1' 'size_type':'typename _CharT_alloc_type::size_type'))
      (DeclRefExpr 0x9d53d1c <col:33> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d36e50 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9d53d34 <col:39> '_CharT' lvalue ParmVar 0x9d36e90 '__c' '_CharT'))))


        basic_string<_CharT, _Traits, _Alloc> &replace(iterator __i1, iterator __i2, const basic_string<_CharT, _Traits, _Alloc> &__str) (CompoundStmt 0x9d53f40 </usr/include/c++/4.6/bits/basic_string.h:1508:7, col:74>
  (ReturnStmt 0x9d53f30 <col:9, col:71>
    (CallExpr 0x9d53f00 <col:16, col:71> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9d53db8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9d53da8 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9d53dec <col:30> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9d36fd0 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
      (DeclRefExpr 0x9d53e04 <col:36> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9d37010 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
      (CallExpr 0x9d53e70 <col:42, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d53e38 <col:42, col:48> '<dependent type>' lvalue
          (DeclRefExpr 0x9d53e1c <col:42> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d37060 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (CallExpr 0x9d53ee0 <col:59, col:70> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d53ea8 <col:59, col:65> '<dependent type>' lvalue
          (DeclRefExpr 0x9d53e8c <col:59> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d37060 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))


        basic_string<_CharT, _Traits, _Alloc> &replace(iterator __i1, iterator __i2, const _CharT *__s, size_type __n) (CompoundStmt 0x9d54178 </usr/include/c++/4.6/bits/basic_string.h:1526:7, line:1530:7>
  (NullStmt 0x9d53f58 <line:1528:27>)
  (ReturnStmt 0x9d54168 <line:1529:2, col:64>
    (CallExpr 0x9d54138 <col:9, col:64> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9d53f78 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x9d53f68 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXOperatorCallExpr 0x9d54050 <col:23, col:40> '<dependent type>'
        (UnresolvedLookupExpr 0x9d54018 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
        (DeclRefExpr 0x9d53fac <col:23> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9d371a0 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (CallExpr 0x9d53ff8 <col:30, col:40> '<dependent type>'
          (MemberExpr 0x9d53fd8 <col:30> '<bound member function type>' ->_M_ibegin 0x9d26950
            (CXXThisExpr 0x9d53fc8 <col:30> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CXXOperatorCallExpr 0x9d540e0 <col:43, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x9d540a8 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
        (DeclRefExpr 0x9d54074 <col:43> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9d371e0 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0x9d5408c <col:50> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9d371a0 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'))
      (DeclRefExpr 0x9d54104 <col:56> 'const _CharT *' lvalue ParmVar 0x9d37230 '__s' 'const _CharT *')
      (DeclRefExpr 0x9d5411c <col:61> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d37270 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))))


        basic_string<_CharT, _Traits, _Alloc> &replace(iterator __i1, iterator __i2, const _CharT *__s) (CompoundStmt 0x9d55260 </usr/include/c++/4.6/bits/basic_string.h:1547:7, line:1550:7>
  (NullStmt 0x9d54190 <line:1548:32>)
  (ReturnStmt 0x9d55250 <line:1549:2, col:64>
    (CallExpr 0x9d542c0 <col:9, col:64> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9d541b0 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x9d541a0 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9d541e4 <col:23> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9d373b0 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
      (DeclRefExpr 0x9d541fc <col:29> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9d373f0 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
      (DeclRefExpr 0x9d54214 <col:35> 'const _CharT *' lvalue ParmVar 0x9d37440 '__s' 'const _CharT *')
      (CallExpr 0x9d542a0 <col:40, col:63> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d54250 <col:40, col:53> '<dependent type>' lvalue)
        (DeclRefExpr 0x9d54284 <col:60> 'const _CharT *' lvalue ParmVar 0x9d37440 '__s' 'const _CharT *')))))


        basic_string<_CharT, _Traits, _Alloc> &replace(iterator __i1, iterator __i2, size_type __n, _CharT __c) (CompoundStmt 0x9d55480 </usr/include/c++/4.6/bits/basic_string.h:1568:7, line:1572:7>
  (NullStmt 0x9d55278 <line:1570:27>)
  (ReturnStmt 0x9d55470 <line:1571:2, col:65>
    (CallExpr 0x9d55440 <col:9, col:65> '<dependent type>'
      (MemberExpr 0x9d55298 <col:9> '<bound member function type>' ->_M_replace_aux 0x9d3b740
        (CXXThisExpr 0x9d55288 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXOperatorCallExpr 0x9d55358 <col:24, col:41> '<dependent type>'
        (UnresolvedLookupExpr 0x9d55320 <col:29, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
        (DeclRefExpr 0x9d552b8 <col:24> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9d37580 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (CallExpr 0x9d55300 <col:31, col:41> '<dependent type>'
          (MemberExpr 0x9d552e0 <col:31> '<bound member function type>' ->_M_ibegin 0x9d26950
            (CXXThisExpr 0x9d552d0 <col:31> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CXXOperatorCallExpr 0x9d553e8 <col:44, col:51> '<dependent type>'
        (UnresolvedLookupExpr 0x9d553b0 <col:49, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
        (DeclRefExpr 0x9d5537c <col:44> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9d375c0 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0x9d55394 <col:51> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9d37580 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'))
      (DeclRefExpr 0x9d5540c <col:57> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d37600 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9d55424 <col:62> '_CharT' lvalue ParmVar 0x9d37640 '__c' '_CharT'))))


        template <class _InputIterator> basic_string<_CharT, _Traits, _Alloc> &replace(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2) (CompoundStmt 0x9d55780 </usr/include/c++/4.6/bits/basic_string.h:1592:9, line:1598:2>
  (NullStmt 0x9d55498 <line:1594:29>)
  (NullStmt 0x9d554a8 <line:1595:46>)
  (DeclStmt 0x9d55650 <line:1596:4, col:72>
    0x9d55620 "typedef typename std::__is_integer<_InputIterator>::__type _Integral")
  (ReturnStmt 0x9d55770 <line:1597:4, col:66>
    (CallExpr 0x9d55740 <col:11, col:66> '<dependent type>'
      (UnresolvedMemberExpr 0x9d55670 <col:11> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9d556b0 <col:31> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9d377d0 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
      (DeclRefExpr 0x9d556c8 <col:37> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9d37810 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
      (DeclRefExpr 0x9d556e0 <col:43> '_InputIterator' lvalue ParmVar 0x9d37850 '__k1' '_InputIterator')
      (DeclRefExpr 0x9d556f8 <col:49> '_InputIterator' lvalue ParmVar 0x9d37890 '__k2' '_InputIterator')
      (CXXUnresolvedConstructExpr 0x9d55728 <col:55, col:65> '_Integral':'typename std::__is_integer<_InputIterator>::__type'))))

;
        basic_string<_CharT, _Traits, _Alloc> &replace(iterator __i1, iterator __i2, _CharT *__k1, _CharT *__k2) (CompoundStmt 0x9d55a48 </usr/include/c++/4.6/bits/basic_string.h:1604:7, line:1610:7>
  (NullStmt 0x9d557a0 <line:1606:27>)
  (NullStmt 0x9d557b0 <line:1607:44>)
  (ReturnStmt 0x9d55a38 <line:1608:2, line:1609:26>
    (CallExpr 0x9d55a08 <line:1608:9, line:1609:26> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9d557d0 <line:1608:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x9d557c0 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXOperatorCallExpr 0x9d558a8 <col:23, col:40> '<dependent type>'
        (UnresolvedLookupExpr 0x9d55870 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
        (DeclRefExpr 0x9d55804 <col:23> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9d379f0 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (CallExpr 0x9d55850 <col:30, col:40> '<dependent type>'
          (MemberExpr 0x9d55830 <col:30> '<bound member function type>' ->_M_ibegin 0x9d26950
            (CXXThisExpr 0x9d55820 <col:30> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CXXOperatorCallExpr 0x9d55938 <col:43, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x9d55900 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
        (DeclRefExpr 0x9d558cc <col:43> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9d37a30 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0x9d558e4 <col:50> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9d379f0 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'))
      (DeclRefExpr 0x9d5595c <line:1609:9> '_CharT *' lvalue ParmVar 0x9d37a80 '__k1' '_CharT *')
      (CXXOperatorCallExpr 0x9d559e0 <col:15, col:22> '<dependent type>'
        (UnresolvedLookupExpr 0x9d559a8 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
        (DeclRefExpr 0x9d55974 <col:15> '_CharT *' lvalue ParmVar 0x9d37ad0 '__k2' '_CharT *')
        (DeclRefExpr 0x9d5598c <col:22> '_CharT *' lvalue ParmVar 0x9d37a80 '__k1' '_CharT *')))))


        basic_string<_CharT, _Traits, _Alloc> &replace(iterator __i1, iterator __i2, const _CharT *__k1, const _CharT *__k2) (CompoundStmt 0x9d55d10 </usr/include/c++/4.6/bits/basic_string.h:1615:7, line:1621:7>
  (NullStmt 0x9d55a68 <line:1617:27>)
  (NullStmt 0x9d55a78 <line:1618:44>)
  (ReturnStmt 0x9d55d00 <line:1619:2, line:1620:26>
    (CallExpr 0x9d55cd0 <line:1619:9, line:1620:26> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9d55a98 <line:1619:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x9d55a88 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXOperatorCallExpr 0x9d55b70 <col:23, col:40> '<dependent type>'
        (UnresolvedLookupExpr 0x9d55b38 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
        (DeclRefExpr 0x9d55acc <col:23> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9d37c10 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (CallExpr 0x9d55b18 <col:30, col:40> '<dependent type>'
          (MemberExpr 0x9d55af8 <col:30> '<bound member function type>' ->_M_ibegin 0x9d26950
            (CXXThisExpr 0x9d55ae8 <col:30> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CXXOperatorCallExpr 0x9d55c00 <col:43, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x9d55bc8 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
        (DeclRefExpr 0x9d55b94 <col:43> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9d37c50 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0x9d55bac <col:50> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9d37c10 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'))
      (DeclRefExpr 0x9d55c24 <line:1620:9> 'const _CharT *' lvalue ParmVar 0x9d37ca0 '__k1' 'const _CharT *')
      (CXXOperatorCallExpr 0x9d55ca8 <col:15, col:22> '<dependent type>'
        (UnresolvedLookupExpr 0x9d55c70 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
        (DeclRefExpr 0x9d55c3c <col:15> 'const _CharT *' lvalue ParmVar 0x9d37cf0 '__k2' 'const _CharT *')
        (DeclRefExpr 0x9d55c54 <col:22> 'const _CharT *' lvalue ParmVar 0x9d37ca0 '__k1' 'const _CharT *')))))


        basic_string<_CharT, _Traits, _Alloc> &replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2) (CompoundStmt 0x9d56030 </usr/include/c++/4.6/bits/basic_string.h:1625:7, line:1631:7>
  (NullStmt 0x9d55d30 <line:1627:27>)
  (NullStmt 0x9d55d40 <line:1628:44>)
  (ReturnStmt 0x9d56020 <line:1629:2, line:1630:33>
    (CallExpr 0x9d55ff0 <line:1629:9, line:1630:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9d55d60 <line:1629:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x9d55d50 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXOperatorCallExpr 0x9d55e38 <col:23, col:40> '<dependent type>'
        (UnresolvedLookupExpr 0x9d55e00 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
        (DeclRefExpr 0x9d55d94 <col:23> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9d37e30 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (CallExpr 0x9d55de0 <col:30, col:40> '<dependent type>'
          (MemberExpr 0x9d55dc0 <col:30> '<bound member function type>' ->_M_ibegin 0x9d26950
            (CXXThisExpr 0x9d55db0 <col:30> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CXXOperatorCallExpr 0x9d55ec8 <col:43, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x9d55e90 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
        (DeclRefExpr 0x9d55e5c <col:43> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9d37e70 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0x9d55e74 <col:50> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9d37e30 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'))
      (CallExpr 0x9d55f40 <line:1630:9, col:19> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d55f08 <col:9, col:14> '<dependent type>' lvalue
          (DeclRefExpr 0x9d55eec <col:9> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9d37eb0 '__k1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')))
      (CXXOperatorCallExpr 0x9d55fc8 <col:22, col:29> '<dependent type>'
        (UnresolvedLookupExpr 0x9d55f90 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
        (DeclRefExpr 0x9d55f5c <col:22> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9d37ef0 '__k2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0x9d55f74 <col:29> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9d37eb0 '__k1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')))))


        basic_string<_CharT, _Traits, _Alloc> &replace(iterator __i1, iterator __i2, const_iterator __k1, const_iterator __k2) (CompoundStmt 0x9d56350 </usr/include/c++/4.6/bits/basic_string.h:1636:7, line:1642:7>
  (NullStmt 0x9d56050 <line:1638:27>)
  (NullStmt 0x9d56060 <line:1639:44>)
  (ReturnStmt 0x9d56340 <line:1640:2, line:1641:33>
    (CallExpr 0x9d56310 <line:1640:9, line:1641:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9d56080 <line:1640:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x9d56070 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXOperatorCallExpr 0x9d56158 <col:23, col:40> '<dependent type>'
        (UnresolvedLookupExpr 0x9d56120 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
        (DeclRefExpr 0x9d560b4 <col:23> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9d38030 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (CallExpr 0x9d56100 <col:30, col:40> '<dependent type>'
          (MemberExpr 0x9d560e0 <col:30> '<bound member function type>' ->_M_ibegin 0x9d26950
            (CXXThisExpr 0x9d560d0 <col:30> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CXXOperatorCallExpr 0x9d561e8 <col:43, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x9d561b0 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
        (DeclRefExpr 0x9d5617c <col:43> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9d38070 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0x9d56194 <col:50> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9d38030 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'))
      (CallExpr 0x9d56260 <line:1641:9, col:19> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d56228 <col:9, col:14> '<dependent type>' lvalue
          (DeclRefExpr 0x9d5620c <col:9> 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9d380b0 '__k1' 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >')))
      (CXXOperatorCallExpr 0x9d562e8 <col:22, col:29> '<dependent type>'
        (UnresolvedLookupExpr 0x9d562b0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
        (DeclRefExpr 0x9d5627c <col:22> 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9d380f0 '__k2' 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0x9d56294 <col:29> 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9d380b0 '__k1' 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >')))))


    private:
    private:
        template <class _Integer> basic_string<_CharT, _Traits, _Alloc> &_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n, _Integer __val, std::__true_type) (CompoundStmt 0x9d56568 </usr/include/c++/4.6/bits/basic_string.h:1668:9, col:79>
  (ReturnStmt 0x9d56558 <col:11, col:76>
    (CallExpr 0x9d56528 <col:18, col:76> '<dependent type>'
      (MemberExpr 0x9d56380 <col:18> '<bound member function type>' ->_M_replace_aux 0x9d3b740
        (CXXThisExpr 0x9d56370 <col:18> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXOperatorCallExpr 0x9d56440 <col:33, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x9d56408 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
        (DeclRefExpr 0x9d563a0 <col:33> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9d382c0 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (CallExpr 0x9d563e8 <col:40, col:50> '<dependent type>'
          (MemberExpr 0x9d563c8 <col:40> '<bound member function type>' ->_M_ibegin 0x9d26950
            (CXXThisExpr 0x9d563b8 <col:40> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CXXOperatorCallExpr 0x9d564d0 <col:53, col:60> '<dependent type>'
        (UnresolvedLookupExpr 0x9d56498 <col:58, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
        (DeclRefExpr 0x9d56464 <col:53> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9d38300 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0x9d5647c <col:60> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9d382c0 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'))
      (DeclRefExpr 0x9d564f4 <col:66> '_Integer' lvalue ParmVar 0x9d38340 '__n' '_Integer')
      (DeclRefExpr 0x9d5650c <col:71> '_Integer' lvalue ParmVar 0x9d38380 '__val' '_Integer'))))

;
        template <class _InputIterator> basic_string<_CharT, _Traits, _Alloc> &_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2, std::__false_type);
        basic_string<_CharT, _Traits, _Alloc> &_M_replace_aux(size_type __pos1, size_type __n1, size_type __n2, _CharT __c);
        basic_string<_CharT, _Traits, _Alloc> &_M_replace_safe(size_type __pos1, size_type __n1, const _CharT *__s, size_type __n2);
        template <class _InIterator> static _CharT *_S_construct_aux(_InIterator __beg, _InIterator __end, const _Alloc &__a, std::__false_type) (CompoundStmt 0x9d567b0 </usr/include/c++/4.6/bits/basic_string.h:1689:2, line:1692:2>
  (DeclStmt 0x9d566a0 <line:1690:11, col:80>
    0x9d56670 "typedef typename iterator_traits<_InIterator>::iterator_category _Tag")
  (ReturnStmt 0x9d567a0 <line:1691:11, col:56>
    (CallExpr 0x9d56770 <col:18, col:56> '<dependent type>'
      (UnresolvedLookupExpr 0x9d566b0 <col:18> '<dependent type>' lvalue (no ADL) = '1' 0x9d3c8a0 0x9d3c770 0x9d3c4e0 0x9d3c250)
      (DeclRefExpr 0x9d566f0 <col:31> '_InIterator' lvalue ParmVar 0x9d3b9c0 '__beg' '_InIterator')
      (DeclRefExpr 0x9d56708 <col:38> '_InIterator' lvalue ParmVar 0x9d3ba00 '__end' '_InIterator')
      (DeclRefExpr 0x9d56720 <col:45> 'const _Alloc' lvalue ParmVar 0x9d3ba50 '__a' 'const _Alloc &')
      (CXXUnresolvedConstructExpr 0x9d56758 <col:50, col:55> '_Tag':'typename iterator_traits<_InIterator>::iterator_category'))))

;
        template <class _Integer> static _CharT *_S_construct_aux(_Integer __beg, _Integer __end, const _Alloc &__a, std::__true_type) (CompoundStmt 0x9d56880 </usr/include/c++/4.6/bits/basic_string.h:1700:9, line:1701:22>
  (ReturnStmt 0x9d56870 <line:1700:11, line:1701:19>
    (CallExpr 0x9d56848 <line:1700:18, line:1701:19> '<dependent type>'
      (DeclRefExpr 0x9d567c8 <line:1700:18> '_CharT *(size_type, _CharT, const _Alloc &)' lvalue CXXMethod 0x9d3bfd0 '_S_construct_aux_2' '_CharT *(size_type, _CharT, const _Alloc &)')
      (CXXStaticCastExpr 0x9d56800 <col:37, col:65> 'size_type':'typename _CharT_alloc_type::size_type' static_cast<size_type> <Dependent>
        (DeclRefExpr 0x9d567e0 <col:60> '_Integer' lvalue ParmVar 0x9d3bc50 '__beg' '_Integer'))
      (DeclRefExpr 0x9d56818 <line:1701:9> '_Integer' lvalue ParmVar 0x9d3bc90 '__end' '_Integer')
      (DeclRefExpr 0x9d56830 <col:16> 'const _Alloc' lvalue ParmVar 0x9d3bce0 '__a' 'const _Alloc &'))))

;
        static _CharT *_S_construct_aux_2(size_type __req, _CharT __c, const _Alloc &__a) (CompoundStmt 0x9d56958 </usr/include/c++/4.6/bits/basic_string.h:1705:7, col:47>
  (ReturnStmt 0x9d56948 <col:9, col:44>
    (CallExpr 0x9d56920 <col:16, col:44> '<dependent type>'
      (UnresolvedLookupExpr 0x9d56898 <col:16> '<dependent type>' lvalue (no ADL) = '1' 0x9d3c8a0 0x9d3c770 0x9d3c4e0 0x9d3c250)
      (DeclRefExpr 0x9d568d8 <col:29> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d3be80 '__req' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9d568f0 <col:36> '_CharT' lvalue ParmVar 0x9d3bec0 '__c' '_CharT')
      (DeclRefExpr 0x9d56908 <col:41> 'const _Alloc' lvalue ParmVar 0x9d3bf10 '__a' 'const _Alloc &'))))


        template <class _InIterator> static _CharT *_S_construct(_InIterator __beg, _InIterator __end, const _Alloc &__a) (CompoundStmt 0x9d56ba0 </usr/include/c++/4.6/bits/basic_string.h:1710:2, line:1713:9>
  (DeclStmt 0x9d56aa0 <line:1711:4, col:69>
    0x9d56a70 "typedef typename std::__is_integer<_InIterator>::__type _Integral")
  (ReturnStmt 0x9d56b90 <line:1712:4, col:58>
    (CallExpr 0x9d56b60 <col:11, col:58> '<dependent type>'
      (UnresolvedLookupExpr 0x9d56ab0 <col:11> '<dependent type>' lvalue (no ADL) = '1' 0x9d3be40 0x9d3bbb0)
      (DeclRefExpr 0x9d56ae8 <col:28> '_InIterator' lvalue ParmVar 0x9d3c0a0 '__beg' '_InIterator')
      (DeclRefExpr 0x9d56b00 <col:35> '_InIterator' lvalue ParmVar 0x9d3c0e0 '__end' '_InIterator')
      (DeclRefExpr 0x9d56b18 <col:42> 'const _Alloc' lvalue ParmVar 0x9d3c130 '__a' 'const _Alloc &')
      (CXXUnresolvedConstructExpr 0x9d56b48 <col:47, col:57> '_Integral':'typename std::__is_integer<_InIterator>::__type'))))

;
        template <class _InIterator> static _CharT *_S_construct(_InIterator __beg, _InIterator __end, const _Alloc &__a, std::input_iterator_tag);
        template <class _FwdIterator> static _CharT *_S_construct(_FwdIterator __beg, _FwdIterator __end, const _Alloc &__a, std::forward_iterator_tag);
        static _CharT *_S_construct(size_type __req, _CharT __c, const _Alloc &__a);
    public:
    public:
        size_type copy(_CharT *__s, size_type __n, size_type __pos = (IntegerLiteral 0x9d45588 </usr/include/c++/4.6/bits/basic_string.h:1745:58> 'int' 0)
) const;
        void swap(basic_string<_CharT, _Traits, _Alloc> &__s);
        const _CharT *c_str() const (CompoundStmt 0x9d56c38 </usr/include/c++/4.6/bits/basic_string.h:1766:7, col:27>
  (ReturnStmt 0x9d56c28 <col:9, col:24>
    (CallExpr 0x9d56c08 <col:16, col:24> '<dependent type>'
      (UnresolvedMemberExpr 0x9d56bc8 <col:16> '<bound member function type>' lvalue))))


        const _CharT *data() const (CompoundStmt 0x9d56cd0 </usr/include/c++/4.6/bits/basic_string.h:1776:7, col:27>
  (ReturnStmt 0x9d56cc0 <col:9, col:24>
    (CallExpr 0x9d56ca0 <col:16, col:24> '<dependent type>'
      (UnresolvedMemberExpr 0x9d56c60 <col:16> '<bound member function type>' lvalue))))


        allocator_type get_allocator() const (CompoundStmt 0x9d56d28 </usr/include/c++/4.6/bits/basic_string.h:1783:7, col:29>
  (ReturnStmt 0x9d56d18 <col:9, col:16>
    (MemberExpr 0x9d56cf8 <col:16> 'struct std::basic_string::_Alloc_hider' lvalue ->_M_dataplus 0x9d24a20
      (CXXThisExpr 0x9d56ce8 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))


        size_type find(const _CharT *__s, size_type __pos, size_type __n) const;
        size_type find(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos = (IntegerLiteral 0x9d455a0 </usr/include/c++/4.6/bits/basic_string.h:1810:57> 'int' 0)
) const (CompoundStmt 0x9d56eb8 </usr/include/c++/4.6/bits/basic_string.h:1811:7, col:63>
  (ReturnStmt 0x9d56ea8 <col:9, col:60>
    (CallExpr 0x9d56e80 <col:16, col:60> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9d56d50 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9d56d40 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0x9d56dd8 <col:27, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d56da0 <col:27, col:33> '<dependent type>' lvalue
          (DeclRefExpr 0x9d56d84 <col:27> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d3cfd0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (DeclRefExpr 0x9d56df4 <col:41> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d3d010 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x9d56e60 <col:48, col:59> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d56e28 <col:48, col:54> '<dependent type>' lvalue
          (DeclRefExpr 0x9d56e0c <col:48> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d3cfd0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))


        size_type find(const _CharT *__s, size_type __pos = (IntegerLiteral 0x9d455b8 </usr/include/c++/4.6/bits/basic_string.h:1824:49> 'int' 0)
) const (CompoundStmt 0x9d57020 </usr/include/c++/4.6/bits/basic_string.h:1825:7, line:1828:7>
  (NullStmt 0x9d56ed0 <line:1826:32>)
  (ReturnStmt 0x9d57010 <line:1827:2, col:56>
    (CallExpr 0x9d56fe8 <col:9, col:56> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9d56ef0 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x9d56ee0 <col:9> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9d56f24 <col:20> 'const _CharT *' lvalue ParmVar 0x9d3d130 '__s' 'const _CharT *')
      (DeclRefExpr 0x9d56f3c <col:25> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d3d170 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x9d56fc8 <col:32, col:55> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d56f78 <col:32, col:45> '<dependent type>' lvalue)
        (DeclRefExpr 0x9d56fac <col:52> 'const _CharT *' lvalue ParmVar 0x9d3d130 '__s' 'const _CharT *')))))


        size_type find(_CharT __c, size_type __pos = (IntegerLiteral 0x9d455d0 </usr/include/c++/4.6/bits/basic_string.h:1841:42> 'int' 0)
) const;
        size_type rfind(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos = (DeclRefExpr 0x9d455e8 </usr/include/c++/4.6/bits/basic_string.h:1854:58> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d24940 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const (CompoundStmt 0x9d571b0 </usr/include/c++/4.6/bits/basic_string.h:1855:7, col:64>
  (ReturnStmt 0x9d571a0 <col:9, col:61>
    (CallExpr 0x9d57178 <col:16, col:61> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9d57048 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9d57038 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0x9d570d0 <col:28, col:39> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d57098 <col:28, col:34> '<dependent type>' lvalue
          (DeclRefExpr 0x9d5707c <col:28> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d3e780 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (DeclRefExpr 0x9d570ec <col:42> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d3e7c0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x9d57158 <col:49, col:60> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d57120 <col:49, col:55> '<dependent type>' lvalue
          (DeclRefExpr 0x9d57104 <col:49> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d3e780 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))


        size_type rfind(const _CharT *__s, size_type __pos, size_type __n) const;
        size_type rfind(const _CharT *__s, size_type __pos = (DeclRefExpr 0x9d45600 </usr/include/c++/4.6/bits/basic_string.h:1882:50> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d24940 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const (CompoundStmt 0x9d5a258 </usr/include/c++/4.6/bits/basic_string.h:1883:7, line:1886:7>
  (NullStmt 0x9d571c8 <line:1884:32>)
  (ReturnStmt 0x9d5a248 <line:1885:2, col:57>
    (CallExpr 0x9d5a220 <col:9, col:57> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9d571e8 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x9d571d8 <col:9> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9d5a160 <col:21> 'const _CharT *' lvalue ParmVar 0x9d3ea00 '__s' 'const _CharT *')
      (DeclRefExpr 0x9d5a178 <col:26> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d3ea40 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x9d5a200 <col:33, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d5a1b0 <col:33, col:46> '<dependent type>' lvalue)
        (DeclRefExpr 0x9d5a1e4 <col:53> 'const _CharT *' lvalue ParmVar 0x9d3ea00 '__s' 'const _CharT *')))))


        size_type rfind(_CharT __c, size_type __pos = (DeclRefExpr 0x9d45618 </usr/include/c++/4.6/bits/basic_string.h:1899:43> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d24940 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const;
        size_type find_first_of(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos = (IntegerLiteral 0x9d45630 </usr/include/c++/4.6/bits/basic_string.h:1912:66> 'int' 0)
) const (CompoundStmt 0x9d5a3e8 </usr/include/c++/4.6/bits/basic_string.h:1913:7, col:72>
  (ReturnStmt 0x9d5a3d8 <col:9, col:69>
    (CallExpr 0x9d5a3b0 <col:16, col:69> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9d5a280 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9d5a270 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0x9d5a308 <col:36, col:47> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d5a2d0 <col:36, col:42> '<dependent type>' lvalue
          (DeclRefExpr 0x9d5a2b4 <col:36> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d3ec30 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (DeclRefExpr 0x9d5a324 <col:50> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d3ec70 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x9d5a390 <col:57, col:68> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d5a358 <col:57, col:63> '<dependent type>' lvalue
          (DeclRefExpr 0x9d5a33c <col:57> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d3ec30 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))


        size_type find_first_of(const _CharT *__s, size_type __pos, size_type __n) const;
        size_type find_first_of(const _CharT *__s, size_type __pos = (IntegerLiteral 0x9d45648 </usr/include/c++/4.6/bits/basic_string.h:1940:58> 'int' 0)
) const (CompoundStmt 0x9d5a550 </usr/include/c++/4.6/bits/basic_string.h:1941:7, line:1944:7>
  (NullStmt 0x9d5a400 <line:1942:32>)
  (ReturnStmt 0x9d5a540 <line:1943:2, col:65>
    (CallExpr 0x9d5a518 <col:9, col:65> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9d5a420 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x9d5a410 <col:9> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9d5a454 <col:29> 'const _CharT *' lvalue ParmVar 0x9d3eeb0 '__s' 'const _CharT *')
      (DeclRefExpr 0x9d5a46c <col:34> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d3eef0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x9d5a4f8 <col:41, col:64> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d5a4a8 <col:41, col:54> '<dependent type>' lvalue)
        (DeclRefExpr 0x9d5a4dc <col:61> 'const _CharT *' lvalue ParmVar 0x9d3eeb0 '__s' 'const _CharT *')))))


        size_type find_first_of(_CharT __c, size_type __pos = (IntegerLiteral 0x9d45660 </usr/include/c++/4.6/bits/basic_string.h:1959:51> 'int' 0)
) const (CompoundStmt 0x9d5a618 </usr/include/c++/4.6/bits/basic_string.h:1960:7, col:40>
  (ReturnStmt 0x9d5a608 <col:9, col:37>
    (CallExpr 0x9d5a5e0 <col:16, col:37> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9d5a578 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9d5a568 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9d5a5ac <col:27> '_CharT' lvalue ParmVar 0x9d3efc0 '__c' '_CharT')
      (DeclRefExpr 0x9d5a5c4 <col:32> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d3f000 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))))


        size_type find_last_of(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos = (DeclRefExpr 0x9d45678 </usr/include/c++/4.6/bits/basic_string.h:1973:65> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d24940 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const (CompoundStmt 0x9d5a7a8 </usr/include/c++/4.6/bits/basic_string.h:1974:7, col:71>
  (ReturnStmt 0x9d5a798 <col:9, col:68>
    (CallExpr 0x9d5a770 <col:16, col:68> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9d5a640 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9d5a630 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0x9d5a6c8 <col:35, col:46> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d5a690 <col:35, col:41> '<dependent type>' lvalue
          (DeclRefExpr 0x9d5a674 <col:35> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d3f0e0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (DeclRefExpr 0x9d5a6e4 <col:49> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d3f120 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x9d5a750 <col:56, col:67> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d5a718 <col:56, col:62> '<dependent type>' lvalue
          (DeclRefExpr 0x9d5a6fc <col:56> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d3f0e0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))


        size_type find_last_of(const _CharT *__s, size_type __pos, size_type __n) const;
        size_type find_last_of(const _CharT *__s, size_type __pos = (DeclRefExpr 0x9d45690 </usr/include/c++/4.6/bits/basic_string.h:2001:57> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d24940 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const (CompoundStmt 0x9d5a910 </usr/include/c++/4.6/bits/basic_string.h:2002:7, line:2005:7>
  (NullStmt 0x9d5a7c0 <line:2003:32>)
  (ReturnStmt 0x9d5a900 <line:2004:2, col:64>
    (CallExpr 0x9d5a8d8 <col:9, col:64> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9d5a7e0 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x9d5a7d0 <col:9> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9d5a814 <col:28> 'const _CharT *' lvalue ParmVar 0x9d3f360 '__s' 'const _CharT *')
      (DeclRefExpr 0x9d5a82c <col:33> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d3f3a0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x9d5a8b8 <col:40, col:63> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d5a868 <col:40, col:53> '<dependent type>' lvalue)
        (DeclRefExpr 0x9d5a89c <col:60> 'const _CharT *' lvalue ParmVar 0x9d3f360 '__s' 'const _CharT *')))))


        size_type find_last_of(_CharT __c, size_type __pos = (DeclRefExpr 0x9d456a8 </usr/include/c++/4.6/bits/basic_string.h:2020:50> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d24940 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const (CompoundStmt 0x9d5a9d8 </usr/include/c++/4.6/bits/basic_string.h:2021:7, col:41>
  (ReturnStmt 0x9d5a9c8 <col:9, col:38>
    (CallExpr 0x9d5a9a0 <col:16, col:38> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9d5a938 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9d5a928 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9d5a96c <col:28> '_CharT' lvalue ParmVar 0x9d3f470 '__c' '_CharT')
      (DeclRefExpr 0x9d5a984 <col:33> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d3f4b0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))))


        size_type find_first_not_of(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos = (IntegerLiteral 0x9d456c0 </usr/include/c++/4.6/bits/basic_string.h:2034:70> 'int' 0)
) const (CompoundStmt 0x9d5ab68 </usr/include/c++/4.6/bits/basic_string.h:2035:7, col:76>
  (ReturnStmt 0x9d5ab58 <col:9, col:73>
    (CallExpr 0x9d5ab30 <col:16, col:73> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9d5aa00 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9d5a9f0 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0x9d5aa88 <col:40, col:51> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d5aa50 <col:40, col:46> '<dependent type>' lvalue
          (DeclRefExpr 0x9d5aa34 <col:40> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d3f590 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (DeclRefExpr 0x9d5aaa4 <col:54> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d3f5d0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x9d5ab10 <col:61, col:72> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d5aad8 <col:61, col:67> '<dependent type>' lvalue
          (DeclRefExpr 0x9d5aabc <col:61> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d3f590 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))


        size_type find_first_not_of(const _CharT *__s, size_type __pos, size_type __n) const;
        size_type find_first_not_of(const _CharT *__s, size_type __pos = (IntegerLiteral 0x9d456d8 </usr/include/c++/4.6/bits/basic_string.h:2063:62> 'int' 0)
) const (CompoundStmt 0x9d5acd0 </usr/include/c++/4.6/bits/basic_string.h:2064:7, line:2067:7>
  (NullStmt 0x9d5ab80 <line:2065:32>)
  (ReturnStmt 0x9d5acc0 <line:2066:2, col:69>
    (CallExpr 0x9d5ac98 <col:9, col:69> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9d5aba0 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x9d5ab90 <col:9> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9d5abd4 <col:33> 'const _CharT *' lvalue ParmVar 0x9d3f810 '__s' 'const _CharT *')
      (DeclRefExpr 0x9d5abec <col:38> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d3f850 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x9d5ac78 <col:45, col:68> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d5ac28 <col:45, col:58> '<dependent type>' lvalue)
        (DeclRefExpr 0x9d5ac5c <col:65> 'const _CharT *' lvalue ParmVar 0x9d3f810 '__s' 'const _CharT *')))))


        size_type find_first_not_of(_CharT __c, size_type __pos = (IntegerLiteral 0x9d456f0 </usr/include/c++/4.6/bits/basic_string.h:2080:55> 'int' 0)
) const;
        size_type find_last_not_of(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos = (DeclRefExpr 0x9d45708 </usr/include/c++/4.6/bits/basic_string.h:2093:69> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d24940 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const (CompoundStmt 0x9d5ae60 </usr/include/c++/4.6/bits/basic_string.h:2094:7, col:75>
  (ReturnStmt 0x9d5ae50 <col:9, col:72>
    (CallExpr 0x9d5ae28 <col:16, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9d5acf8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9d5ace8 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0x9d5ad80 <col:39, col:50> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d5ad48 <col:39, col:45> '<dependent type>' lvalue
          (DeclRefExpr 0x9d5ad2c <col:39> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d3fa40 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (DeclRefExpr 0x9d5ad9c <col:53> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d3fa80 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x9d5ae08 <col:60, col:71> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d5add0 <col:60, col:66> '<dependent type>' lvalue
          (DeclRefExpr 0x9d5adb4 <col:60> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d3fa40 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))


        size_type find_last_not_of(const _CharT *__s, size_type __pos, size_type __n) const;
        size_type find_last_not_of(const _CharT *__s, size_type __pos = (DeclRefExpr 0x9d45720 </usr/include/c++/4.6/bits/basic_string.h:2122:61> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d24940 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const (CompoundStmt 0x9d5afc8 </usr/include/c++/4.6/bits/basic_string.h:2123:7, line:2126:7>
  (NullStmt 0x9d5ae78 <line:2124:32>)
  (ReturnStmt 0x9d5afb8 <line:2125:2, col:68>
    (CallExpr 0x9d5af90 <col:9, col:68> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9d5ae98 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x9d5ae88 <col:9> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9d5aecc <col:32> 'const _CharT *' lvalue ParmVar 0x9d3fcc0 '__s' 'const _CharT *')
      (DeclRefExpr 0x9d5aee4 <col:37> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d3fd00 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x9d5af70 <col:44, col:67> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d5af20 <col:44, col:57> '<dependent type>' lvalue)
        (DeclRefExpr 0x9d5af54 <col:64> 'const _CharT *' lvalue ParmVar 0x9d3fcc0 '__s' 'const _CharT *')))))


        size_type find_last_not_of(_CharT __c, size_type __pos = (DeclRefExpr 0x9d45738 </usr/include/c++/4.6/bits/basic_string.h:2139:54> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d24940 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const;
        basic_string<_CharT, _Traits, _Alloc> substr(size_type __pos = (IntegerLiteral 0x9d45750 </usr/include/c++/4.6/bits/basic_string.h:2154:32> 'int' 0)
, size_type __n = (DeclRefExpr 0x9d45768 </usr/include/c++/4.6/bits/basic_string.h:2154:51> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d24940 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const (CompoundStmt 0x9d5b100 </usr/include/c++/4.6/bits/basic_string.h:2155:7, line:2156:55>
  (ReturnStmt 0x9d5b0f0 <line:2155:9, line:2156:52>
    (CXXUnresolvedConstructExpr 0x9d5b0c8 <line:2155:16, line:2156:52> 'basic_string<_CharT, _Traits, _Alloc>'
      (UnaryOperator 0x9d5aff8 <line:2155:29, col:30> '<dependent type>' prefix '*'
        (CXXThisExpr 0x9d5afe8 <col:30> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0x9d5b088 <line:2156:8, col:46> '<dependent type>'
        (MemberExpr 0x9d5b020 <col:8> '<bound member function type>' ->_M_check 0x9d26bb0
          (CXXThisExpr 0x9d5b010 <col:8> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x9d5b040 <col:17> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d3fee0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (StringLiteral 0x9d5b058 <col:24> 'const char [21]' lvalue "basic_string::substr"))
      (DeclRefExpr 0x9d5b0ac <col:49> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d3ff20 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))))


        int compare(const basic_string<_CharT, _Traits, _Alloc> &__str) const (CompoundStmt 0x9d5b6a8 </usr/include/c++/4.6/bits/basic_string.h:2173:7, line:2182:7>
  (DeclStmt 0x9d5b1c0 <line:2174:2, col:39>
    0x9d5b120 "const size_type __size =
      (CallExpr 0x9d5b1a0 <col:27, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d5b168 <col:27, col:33> '<dependent type>' lvalue
          (CXXThisExpr 0x9d5b158 <col:27> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (DeclStmt 0x9d5b288 <line:2175:2, col:40>
    0x9d5b1e0 "const size_type __osize =
      (CallExpr 0x9d5b268 <col:28, col:39> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d5b230 <col:28, col:34> '<dependent type>' lvalue
          (DeclRefExpr 0x9d5b214 <col:28> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d40040 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))")
  (DeclStmt 0x9d5b380 <line:2176:2, col:51>
    0x9d5b2a0 "const size_type __len =
      (CallExpr 0x9d5b358 <col:26, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x9d5b2f0 <col:26, col:31> '<overloaded function type>' lvalue (no ADL) = '1' 0x9bdffa0 0x9b94620)
        (DeclRefExpr 0x9d5b328 <col:35> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d5b120 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9d5b340 <col:43> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d5b1e0 '__osize' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (DeclStmt 0x9d5b550 <line:2178:2, col:64>
    0x9d5b3a0 "int __r =
      (CallExpr 0x9d5b528 <col:12, col:63> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d5b3f8 <col:12, col:25> '<dependent type>' lvalue)
        (CallExpr 0x9d5b480 <col:33, col:41> '<dependent type>'
          (UnresolvedMemberExpr 0x9d5b440 <col:33> '<bound member function type>' lvalue))
        (CallExpr 0x9d5b4f0 <col:44, col:55> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9d5b4b8 <col:44, col:50> '<dependent type>' lvalue
            (DeclRefExpr 0x9d5b49c <col:44> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d40040 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
        (DeclRefExpr 0x9d5b50c <col:58> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d5b2a0 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (IfStmt 0x9d5b650 <line:2179:2, line:2180:36>
    <<<NULL>>>
    (UnaryOperator 0x9d5b598 <line:2179:6, col:7> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9d5b588 <col:7> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0x9d5b578 <col:7> 'int' <LValueToRValue>
          (DeclRefExpr 0x9d5b560 <col:7> 'int' lvalue Var 0x9d5b3a0 '__r' 'int'))))
    (BinaryOperator 0x9d5b638 <line:2180:4, col:36> '<dependent type>' '='
      (DeclRefExpr 0x9d5b5ac <col:4> 'int' lvalue Var 0x9d5b3a0 '__r' 'int')
      (CallExpr 0x9d5b610 <col:10, col:36> '<dependent type>'
        (DeclRefExpr 0x9d5b5c4 <col:10> 'int (size_type, size_type)' lvalue CXXMethod 0x9d28000 '_S_compare' 'int (size_type, size_type)')
        (DeclRefExpr 0x9d5b5dc <col:21> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d5b120 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9d5b5f4 <col:29> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d5b1e0 '__osize' 'const size_type':'const typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (ReturnStmt 0x9d5b698 <line:2181:2, col:9>
    (ImplicitCastExpr 0x9d5b688 <col:9> 'int' <LValueToRValue>
      (DeclRefExpr 0x9d5b66c <col:9> 'int' lvalue Var 0x9d5b3a0 '__r' 'int'))))


        int compare(size_type __pos, size_type __n, const basic_string<_CharT, _Traits, _Alloc> &__str) const;
        int compare(size_type __pos1, size_type __n1, const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos2, size_type __n2) const;
        int compare(const _CharT *__s) const;
        int compare(size_type __pos, size_type __n1, const _CharT *__s) const;
        int compare(size_type __pos, size_type __n1, const _CharT *__s, size_type __n2) const;
    };
    template <typename _CharT, typename _Traits, typename _Alloc> basic_string<_CharT, _Traits, _Alloc> operator+(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x9d5c040 </usr/include/c++/4.6/bits/basic_string.h:2307:5, line:2311:5>
  (DeclStmt 0x9d5bf80 <line:2308:7, col:57>
    0x9d5bf10 "basic_string<_CharT, _Traits, _Alloc> __str =
      (ParenListExpr 0x9d5bf60 <col:50, col:56> 'basic_string<_CharT, _Traits, _Alloc>'
        (DeclRefExpr 0x9d5bf44 <col:51> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d5ba90 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))")
  (CallExpr 0x9d5bff8 <line:2309:7, col:25> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9d5bfa8 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0x9d5bf90 <col:7> 'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9d5bf10 '__str' 'basic_string<_CharT, _Traits, _Alloc>'))
    (DeclRefExpr 0x9d5bfdc <col:20> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d5bc40 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
  (ReturnStmt 0x9d5c030 <line:2310:7, col:14>
    (DeclRefExpr 0x9d5c018 <col:14> 'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9d5bf10 '__str' 'basic_string<_CharT, _Traits, _Alloc>')))

;
    template <typename _CharT, typename _Traits, typename _Alloc> basic_string<_CharT, _Traits, _Alloc> operator+(const _CharT *__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs);
    template <typename _CharT, typename _Traits, typename _Alloc> basic_string<_CharT, _Traits, _Alloc> operator+(_CharT __lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs);
    template <typename _CharT, typename _Traits, typename _Alloc> inline basic_string<_CharT, _Traits, _Alloc> operator+(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const _CharT *__rhs) (CompoundStmt 0x9d5d350 </usr/include/c++/4.6/bits/basic_string.h:2344:5, line:2348:5>
  (DeclStmt 0x9d5d290 <line:2345:7, col:57>
    0x9d5d220 "basic_string<_CharT, _Traits, _Alloc> __str =
      (ParenListExpr 0x9d5d270 <col:50, col:56> 'basic_string<_CharT, _Traits, _Alloc>'
        (DeclRefExpr 0x9d5d254 <col:51> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d5cee0 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))")
  (CallExpr 0x9d5d308 <line:2346:7, col:25> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9d5d2b8 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0x9d5d2a0 <col:7> 'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9d5d220 '__str' 'basic_string<_CharT, _Traits, _Alloc>'))
    (DeclRefExpr 0x9d5d2ec <col:20> 'const _CharT *' lvalue ParmVar 0x9d5cf50 '__rhs' 'const _CharT *'))
  (ReturnStmt 0x9d5d340 <line:2347:7, col:14>
    (DeclRefExpr 0x9d5d328 <col:14> 'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9d5d220 '__str' 'basic_string<_CharT, _Traits, _Alloc>')))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline basic_string<_CharT, _Traits, _Alloc> operator+(const basic_string<_CharT, _Traits, _Alloc> &__lhs, _CharT __rhs) (CompoundStmt 0x9d5dce8 </usr/include/c++/4.6/bits/basic_string.h:2359:5, line:2365:5>
  (DeclStmt 0x9d5da50 <line:2360:7, col:66>
    0x9d5da20 "typedef basic_string<_CharT, _Traits, _Alloc> __string_type")
  (DeclStmt 0x9d5db40 <line:2361:7, col:61>
    0x9d5db10 "typedef typename __string_type::size_type __size_type")
  (DeclStmt 0x9d5dbd0 <line:2362:7, col:33>
    0x9d5db60 "__string_type __str =
      (ParenListExpr 0x9d5dbb0 <col:26, col:32> '__string_type':'basic_string<_CharT, _Traits, _Alloc>'
        (DeclRefExpr 0x9d5db94 <col:27> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d5d710 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))")
  (CallExpr 0x9d5dc98 <line:2363:7, col:41> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9d5dbf8 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0x9d5dbe0 <col:7> '__string_type':'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9d5db60 '__str' '__string_type':'basic_string<_CharT, _Traits, _Alloc>'))
    (CXXUnresolvedConstructExpr 0x9d5dc60 <col:20, col:33> '__size_type':'typename __string_type::size_type'
      (IntegerLiteral 0x9d5dc48 <col:32> 'int' 1))
    (DeclRefExpr 0x9d5dc7c <col:36> '_CharT' lvalue ParmVar 0x9d5d750 '__rhs' '_CharT'))
  (ReturnStmt 0x9d5dcd8 <line:2364:7, col:14>
    (DeclRefExpr 0x9d5dcbc <col:14> '__string_type':'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9d5db60 '__str' '__string_type':'basic_string<_CharT, _Traits, _Alloc>')))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator==(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x9d5e3c8 </usr/include/c++/4.6/bits/basic_string.h:2428:5, col:41>
  (ReturnStmt 0x9d5e3b8 <col:7, col:38>
    (CXXOperatorCallExpr 0x9d5e390 <col:14, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0x9d5e340 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9d5e270 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30)
      (CallExpr 0x9d5e308 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d5e2b8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9d5e2a0 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d5df90 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x9d5e2ec <col:28> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d5e170 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
      (IntegerLiteral 0x9d5e328 <col:38> 'int' 0))))

;
    template <typename _CharT> inline typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, bool>::__type operator==(const basic_string<_CharT> &__lhs, const basic_string<_CharT> &__rhs) (CompoundStmt 0x9d5f128 </usr/include/c++/4.6/bits/basic_string.h:2435:5, line:2437:27>
  (ReturnStmt 0x9d5f118 <line:2435:7, line:2437:24>
    (ParenExpr 0x9d5f100 <line:2435:14, line:2437:24> '<dependent type>'
      (BinaryOperator 0x9d5f0e8 <line:2435:15, line:2437:23> '<dependent type>' '&&'
        (CXXOperatorCallExpr 0x9d5ee40 <line:2435:15, col:42> '<dependent type>'
          (UnresolvedLookupExpr 0x9d5edf0 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9d5ece0 0x9d5e270 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30)
          (CallExpr 0x9d5ed60 <col:15, col:26> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9d5ed28 <col:15, col:21> '<dependent type>' lvalue
              (DeclRefExpr 0x9d5ed10 <col:15> 'const basic_string<_CharT>' lvalue ParmVar 0x9d5e980 '__lhs' 'const basic_string<_CharT> &')))
          (CallExpr 0x9d5edd0 <col:31, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9d5ed98 <col:31, col:37> '<dependent type>' lvalue
              (DeclRefExpr 0x9d5ed7c <col:31> 'const basic_string<_CharT>' lvalue ParmVar 0x9d5ebd0 '__rhs' 'const basic_string<_CharT> &'))))
        (UnaryOperator 0x9d5f0d0 <line:2436:11, line:2437:23> '<dependent type>' prefix '!'
          (CallExpr 0x9d5f0a8 <line:2436:12, line:2437:23> '<dependent type>'
            (DependentScopeDeclRefExpr 0x9d5ef30 <line:2436:12, col:38> '<dependent type>' lvalue)
            (CallExpr 0x9d5efa8 <col:46, col:57> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9d5ef70 <col:46, col:52> '<dependent type>' lvalue
                (DeclRefExpr 0x9d5ef54 <col:46> 'const basic_string<_CharT>' lvalue ParmVar 0x9d5e980 '__lhs' 'const basic_string<_CharT> &')))
            (CallExpr 0x9d5f018 <col:60, col:71> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9d5efe0 <col:60, col:66> '<dependent type>' lvalue
                (DeclRefExpr 0x9d5efc4 <col:60> 'const basic_string<_CharT>' lvalue ParmVar 0x9d5ebd0 '__rhs' 'const basic_string<_CharT> &')))
            (CallExpr 0x9d5f088 <line:2437:11, col:22> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9d5f050 <col:11, col:17> '<dependent type>' lvalue
                (DeclRefExpr 0x9d5f034 <col:11> 'const basic_string<_CharT>' lvalue ParmVar 0x9d5e980 '__lhs' 'const basic_string<_CharT> &')))))))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator==(const _CharT *__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x9d5f680 </usr/include/c++/4.6/bits/basic_string.h:2449:5, col:41>
  (ReturnStmt 0x9d5f670 <col:7, col:38>
    (CXXOperatorCallExpr 0x9d5f648 <col:14, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0x9d5f5f0 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9d5f520 0x9d5ece0 0x9d5e270 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30)
      (CallExpr 0x9d5f5b8 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d5f568 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9d5f550 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d5f420 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x9d5f59c <col:28> 'const _CharT *' lvalue ParmVar 0x9d5f270 '__lhs' 'const _CharT *'))
      (IntegerLiteral 0x9d5f5d8 <col:38> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator==(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const _CharT *__rhs) (CompoundStmt 0x9d5fbf0 </usr/include/c++/4.6/bits/basic_string.h:2461:5, col:41>
  (ReturnStmt 0x9d5fbe0 <col:7, col:38>
    (CXXOperatorCallExpr 0x9d5fbb8 <col:14, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0x9d5fb60 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9d5fa90 0x9d5f520 0x9d5ece0 0x9d5e270 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30)
      (CallExpr 0x9d5fb28 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d5fad8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9d5fac0 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d5f920 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x9d5fb0c <col:28> 'const _CharT *' lvalue ParmVar 0x9d5f990 '__rhs' 'const _CharT *'))
      (IntegerLiteral 0x9d5fb48 <col:38> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator!=(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x9d60250 </usr/include/c++/4.6/bits/basic_string.h:2474:5, col:33>
  (ReturnStmt 0x9d60240 <col:7, col:30>
    (UnaryOperator 0x9d60228 <col:14, col:30> '<dependent type>' prefix '!'
      (ParenExpr 0x9d60210 <col:15, col:30> '<dependent type>'
        (CXXOperatorCallExpr 0x9d601e8 <col:16, col:25> '<dependent type>'
          (UnresolvedLookupExpr 0x9d60190 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9d5fa90 0x9d5f520 0x9d5ece0 0x9d5e270 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30)
          (DeclRefExpr 0x9d60150 <col:16> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d5fe90 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &')
          (DeclRefExpr 0x9d60178 <col:25> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d60040 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator!=(const _CharT *__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x9d60750 </usr/include/c++/4.6/bits/basic_string.h:2486:5, col:33>
  (ReturnStmt 0x9d60740 <col:7, col:30>
    (UnaryOperator 0x9d60728 <col:14, col:30> '<dependent type>' prefix '!'
      (ParenExpr 0x9d60710 <col:15, col:30> '<dependent type>'
        (CXXOperatorCallExpr 0x9d606e8 <col:16, col:25> '<dependent type>'
          (UnresolvedLookupExpr 0x9d60690 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9d5fa90 0x9d5f520 0x9d5ece0 0x9d5e270 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30)
          (DeclRefExpr 0x9d60660 <col:16> 'const _CharT *' lvalue ParmVar 0x9d603a0 '__lhs' 'const _CharT *')
          (DeclRefExpr 0x9d60678 <col:25> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d60550 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator!=(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const _CharT *__rhs) (CompoundStmt 0x9d60c60 </usr/include/c++/4.6/bits/basic_string.h:2498:5, col:33>
  (ReturnStmt 0x9d60c50 <col:7, col:30>
    (UnaryOperator 0x9d60c38 <col:14, col:30> '<dependent type>' prefix '!'
      (ParenExpr 0x9d60c20 <col:15, col:30> '<dependent type>'
        (CXXOperatorCallExpr 0x9d60bf8 <col:16, col:25> '<dependent type>'
          (UnresolvedLookupExpr 0x9d60ba0 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9d5fa90 0x9d5f520 0x9d5ece0 0x9d5e270 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30)
          (DeclRefExpr 0x9d60b70 <col:16> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d609f0 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &')
          (DeclRefExpr 0x9d60b88 <col:25> 'const _CharT *' lvalue ParmVar 0x9d60a60 '__rhs' 'const _CharT *'))))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator<(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x9d612d8 </usr/include/c++/4.6/bits/basic_string.h:2511:5, col:40>
  (ReturnStmt 0x9d612c8 <col:7, col:37>
    (CXXOperatorCallExpr 0x9d612a0 <col:14, col:37> '<dependent type>'
      (UnresolvedLookupExpr 0x9d61260 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9d61190 0x9bac3c0 0x9bc2c90 0x9bc5590)
      (CallExpr 0x9d61228 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d611d8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9d611c0 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d60f00 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x9d6120c <col:28> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d610b0 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
      (IntegerLiteral 0x9d61248 <col:37> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator<(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const _CharT *__rhs) (CompoundStmt 0x9d61810 </usr/include/c++/4.6/bits/basic_string.h:2523:5, col:40>
  (ReturnStmt 0x9d61800 <col:7, col:37>
    (CXXOperatorCallExpr 0x9d617d8 <col:14, col:37> '<dependent type>'
      (UnresolvedLookupExpr 0x9d61790 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9d616c0 0x9d61190 0x9bac3c0 0x9bc2c90 0x9bc5590)
      (CallExpr 0x9d61758 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d61708 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9d616f0 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d61570 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x9d6173c <col:28> 'const _CharT *' lvalue ParmVar 0x9d615e0 '__rhs' 'const _CharT *'))
      (IntegerLiteral 0x9d61778 <col:37> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator<(const _CharT *__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x9d61d38 </usr/include/c++/4.6/bits/basic_string.h:2535:5, col:40>
  (ReturnStmt 0x9d61d28 <col:7, col:37>
    (CXXOperatorCallExpr 0x9d61d00 <col:14, col:37> '<dependent type>'
      (UnresolvedLookupExpr 0x9d61cc0 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bad330 0x9bc37b0 0x9bc6740)
      (CallExpr 0x9d61c88 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d61c38 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9d61c20 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d61b10 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x9d61c6c <col:28> 'const _CharT *' lvalue ParmVar 0x9d61960 '__lhs' 'const _CharT *'))
      (IntegerLiteral 0x9d61ca8 <col:37> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator>(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x9d623f8 </usr/include/c++/4.6/bits/basic_string.h:2548:5, col:40>
  (ReturnStmt 0x9d623e8 <col:7, col:37>
    (CXXOperatorCallExpr 0x9d623c0 <col:14, col:37> '<dependent type>'
      (UnresolvedLookupExpr 0x9d62380 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9d622b0 0x9bad330 0x9bc37b0 0x9bc6740)
      (CallExpr 0x9d62348 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d622f8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9d622e0 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d61fd0 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x9d6232c <col:28> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d621d0 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
      (IntegerLiteral 0x9d62368 <col:37> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator>(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const _CharT *__rhs) (CompoundStmt 0x9d62930 </usr/include/c++/4.6/bits/basic_string.h:2560:5, col:40>
  (ReturnStmt 0x9d62920 <col:7, col:37>
    (CXXOperatorCallExpr 0x9d628f8 <col:14, col:37> '<dependent type>'
      (UnresolvedLookupExpr 0x9d628b0 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9d627e0 0x9d622b0 0x9bad330 0x9bc37b0 0x9bc6740)
      (CallExpr 0x9d62878 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d62828 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9d62810 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d62690 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x9d6285c <col:28> 'const _CharT *' lvalue ParmVar 0x9d62700 '__rhs' 'const _CharT *'))
      (IntegerLiteral 0x9d62898 <col:37> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator>(const _CharT *__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x9d62e60 </usr/include/c++/4.6/bits/basic_string.h:2572:5, col:40>
  (ReturnStmt 0x9d62e50 <col:7, col:37>
    (CXXOperatorCallExpr 0x9d62e28 <col:14, col:37> '<dependent type>'
      (UnresolvedLookupExpr 0x9d62de0 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9d61bf0 0x9d616c0 0x9d61190 0x9bac3c0 0x9bc2c90 0x9bc5590)
      (CallExpr 0x9d62da8 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d62d58 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9d62d40 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d62c30 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x9d62d8c <col:28> 'const _CharT *' lvalue ParmVar 0x9d62a80 '__lhs' 'const _CharT *'))
      (IntegerLiteral 0x9d62dc8 <col:37> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator<=(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x9d634d8 </usr/include/c++/4.6/bits/basic_string.h:2585:5, col:41>
  (ReturnStmt 0x9d634c8 <col:7, col:38>
    (CXXOperatorCallExpr 0x9d634a0 <col:14, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0x9d63460 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9d63390 0x9badc90 0x9bc3ba0 0x9bc6b90)
      (CallExpr 0x9d63428 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d633d8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9d633c0 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d63100 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x9d6340c <col:28> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d632b0 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
      (IntegerLiteral 0x9d63448 <col:38> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator<=(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const _CharT *__rhs) (CompoundStmt 0x9d63a10 </usr/include/c++/4.6/bits/basic_string.h:2597:5, col:41>
  (ReturnStmt 0x9d63a00 <col:7, col:38>
    (CXXOperatorCallExpr 0x9d639d8 <col:14, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0x9d63990 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9d638c0 0x9d63390 0x9badc90 0x9bc3ba0 0x9bc6b90)
      (CallExpr 0x9d63958 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d63908 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9d638f0 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d63770 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x9d6393c <col:28> 'const _CharT *' lvalue ParmVar 0x9d637e0 '__rhs' 'const _CharT *'))
      (IntegerLiteral 0x9d63978 <col:38> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator<=(const _CharT *__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x9d63f38 </usr/include/c++/4.6/bits/basic_string.h:2609:5, col:41>
  (ReturnStmt 0x9d63f28 <col:7, col:38>
    (CXXOperatorCallExpr 0x9d63f00 <col:14, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0x9d63ec0 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bae1e0 0x9bc3fc0 0x9bc7850)
      (CallExpr 0x9d63e88 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d63e38 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9d63e20 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d63d10 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x9d63e6c <col:28> 'const _CharT *' lvalue ParmVar 0x9d63b60 '__lhs' 'const _CharT *'))
      (IntegerLiteral 0x9d63ea8 <col:38> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator>=(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x9d645c8 </usr/include/c++/4.6/bits/basic_string.h:2622:5, col:41>
  (ReturnStmt 0x9d645b8 <col:7, col:38>
    (CXXOperatorCallExpr 0x9d64590 <col:14, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0x9d64550 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9d64480 0x9bae1e0 0x9bc3fc0 0x9bc7850)
      (CallExpr 0x9d64518 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d644c8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9d644b0 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d641f0 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x9d644fc <col:28> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d643a0 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
      (IntegerLiteral 0x9d64538 <col:38> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator>=(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const _CharT *__rhs) (CompoundStmt 0x9d64b00 </usr/include/c++/4.6/bits/basic_string.h:2634:5, col:41>
  (ReturnStmt 0x9d64af0 <col:7, col:38>
    (CXXOperatorCallExpr 0x9d64ac8 <col:14, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0x9d64a80 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9d649b0 0x9d64480 0x9bae1e0 0x9bc3fc0 0x9bc7850)
      (CallExpr 0x9d64a48 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d649f8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9d649e0 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d64860 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x9d64a2c <col:28> 'const _CharT *' lvalue ParmVar 0x9d648d0 '__rhs' 'const _CharT *'))
      (IntegerLiteral 0x9d64a68 <col:38> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator>=(const _CharT *__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x9d65030 </usr/include/c++/4.6/bits/basic_string.h:2646:5, col:41>
  (ReturnStmt 0x9d65020 <col:7, col:38>
    (CXXOperatorCallExpr 0x9d64ff8 <col:14, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0x9d64fb0 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9d63df0 0x9d638c0 0x9d63390 0x9badc90 0x9bc3ba0 0x9bc6b90)
      (CallExpr 0x9d64f78 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d64f28 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9d64f10 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d64e00 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x9d64f5c <col:28> 'const _CharT *' lvalue ParmVar 0x9d64c50 '__lhs' 'const _CharT *'))
      (IntegerLiteral 0x9d64f98 <col:38> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline void swap(basic_string<_CharT, _Traits, _Alloc> &__lhs, basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x9d65658 </usr/include/c++/4.6/bits/basic_string.h:2659:5, col:26>
  (CallExpr 0x9d65638 <col:7, col:23> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9d655e8 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0x9d655d0 <col:7> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d652f0 '__lhs' 'basic_string<_CharT, _Traits, _Alloc> &'))
    (DeclRefExpr 0x9d6561c <col:18> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d654a0 '__rhs' 'basic_string<_CharT, _Traits, _Alloc> &')))

;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> basic_istream<char> &operator>>(basic_istream<char> &__is, basic_string<char> &__str)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> basic_istream<wchar_t, std::char_traits<wchar_t> > &operator>>(basic_istream<wchar_t, std::char_traits<wchar_t> > &__in, basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > &__str)template <typename _CharT, typename _Traits, typename _Alloc> basic_istream<_CharT, _Traits> &operator>>(basic_istream<_CharT, _Traits> &__is, basic_string<_CharT, _Traits, _Alloc> &__str);
    basic_istream<char> &operator>>(basic_istream<char> &__is, basic_string<char> &__str);
    template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__os, const basic_string<char, std::char_traits<char>, std::allocator<char> > &__str)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> inline basic_ostream<wchar_t, std::char_traits<wchar_t> > &operator<<(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__os, const basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > &__str)template <typename _CharT, typename _Traits, typename _Alloc> inline basic_ostream<_CharT, _Traits> &operator<<(basic_ostream<_CharT, _Traits> &__os, const basic_string<_CharT, _Traits, _Alloc> &__str) (CompoundStmt 0x9d66e98 </usr/include/c++/4.6/bits/basic_string.h:2694:5, line:2698:5>
  (ReturnStmt 0x9d66e88 <line:2697:7, col:63>
    (CallExpr 0x9d66e60 <col:14, col:63> '<dependent type>'
      (UnresolvedLookupExpr 0x9d66d30 <col:14> '<overloaded function type>' lvalue (ADL) = '1' 0x9c6c440)
      (DeclRefExpr 0x9d66d64 <col:31> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9d66a00 '__os' 'basic_ostream<_CharT, _Traits> &')
      (CallExpr 0x9d66dd0 <col:37, col:48> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d66d98 <col:37, col:43> '<dependent type>' lvalue
          (DeclRefExpr 0x9d66d7c <col:37> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d66bb0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (CallExpr 0x9d66e40 <col:51, col:62> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d66e08 <col:51, col:57> '<dependent type>' lvalue
          (DeclRefExpr 0x9d66dec <col:51> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d66bb0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))

;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> basic_istream<char> &getline(basic_istream<char> &__in, basic_string<char> &__str, char __delim)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> basic_istream<wchar_t> &getline(basic_istream<wchar_t> &__in, basic_string<wchar_t> &__str, wchar_t __delim)template <typename _CharT, typename _Traits, typename _Alloc> basic_istream<_CharT, _Traits> &getline(basic_istream<_CharT, _Traits> &__is, basic_string<_CharT, _Traits, _Alloc> &__str, _CharT __delim);
    template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> inline basic_istream<char, std::char_traits<char> > &getline(basic_istream<char, std::char_traits<char> > &__is, basic_string<char, std::char_traits<char>, std::allocator<char> > &__str)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> inline basic_istream<wchar_t, std::char_traits<wchar_t> > &getline(basic_istream<wchar_t, std::char_traits<wchar_t> > &__is, basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > &__str)template <typename _CharT, typename _Traits, typename _Alloc> inline basic_istream<_CharT, _Traits> &getline(basic_istream<_CharT, _Traits> &__is, basic_string<_CharT, _Traits, _Alloc> &__str) (CompoundStmt 0x9d67ca8 </usr/include/c++/4.6/bits/basic_string.h:2735:5, col:54>
  (ReturnStmt 0x9d67c98 <col:7, col:51>
    (CallExpr 0x9d67c70 <col:14, col:51> '<dependent type>'
      (UnresolvedLookupExpr 0x9d67b80 <col:14> '<overloaded function type>' lvalue (ADL) = '1' 0x9d67b50 0x9d67520)
      (DeclRefExpr 0x9d67bb8 <col:22> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9d67870 '__is' 'basic_istream<_CharT, _Traits> &')
      (DeclRefExpr 0x9d67bd0 <col:28> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d67a20 '__str' 'basic_string<_CharT, _Traits, _Alloc> &')
      (CallExpr 0x9d67c50 <col:35, col:50> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d67c00 <col:35, col:40> '<dependent type>' lvalue
          (DeclRefExpr 0x9d67be8 <col:35> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9d67870 '__is' 'basic_istream<_CharT, _Traits> &'))
        (CharacterLiteral 0x9d67c38 <col:46> 'char'10)))))

;
    basic_istream<char> &getline(basic_istream<char> &__in, basic_string<char> &__str, char __delim);
    basic_istream<wchar_t> &getline(basic_istream<wchar_t> &__in, basic_string<wchar_t> &__str, wchar_t __delim);
}
extern long __builtin_expect(long, long);
namespace std {
    static const typename basic_string<_CharT, _Traits, _Alloc>::size_type _S_max_size = (BinaryOperator 0x9d69b00 </usr/include/c++/4.6/bits/basic_string.tcc:52:25, col:77> '<dependent type>' '/'
  (ParenExpr 0x9d69ad0 <col:25, col:73> '<dependent type>'
    (CXXOperatorCallExpr 0x9d69aa8 <col:26, col:72> '<dependent type>'
      (UnresolvedLookupExpr 0x9d69a70 <col:70, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
      (ParenExpr 0x9d69a40 <col:26, col:68> '<dependent type>'
        (BinaryOperator 0x9d69a28 <col:27, col:67> '<dependent type>' '/'
          (ParenExpr 0x9d699f0 <col:27, col:52> '<dependent type>'
            (CXXOperatorCallExpr 0x9d699c8 <col:28, col:51> '<dependent type>'
              (UnresolvedLookupExpr 0x9d69990 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
              (DeclRefExpr 0x9d69958 <col:28> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d24940 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
              (UnaryExprOrTypeTraitExpr 0x9d69978 <col:35, col:51> 'unsigned int' sizeof 'struct std::basic_string::_Rep_base')))
          (UnaryExprOrTypeTraitExpr 0x9d69a10 <col:54, col:67> 'unsigned int' sizeof '_CharT')))
      (IntegerLiteral 0x9d69a58 <col:72> 'int' 1)))
  (IntegerLiteral 0x9d69ae8 <col:77> 'int' 4))
;
    static const _CharT _S_terminal = (CXXUnresolvedConstructExpr 0x9d69f50 </usr/include/c++/4.6/bits/basic_string.tcc:57:25, col:32> '_CharT')
;
    static const typename basic_string<_CharT, _Traits, _Alloc>::size_type npos;
    static typename basic_string<_CharT, _Traits, _Alloc>::size_type _S_empty_rep_storage[(sizeof(std::basic_string::_Rep_base) + sizeof(_CharT) + sizeof(size_type) - 1) / sizeof(size_type)];
    template <typename _InIterator> static _CharT *_S_construct(_InIterator __beg, _InIterator __end, const _Alloc &__a, std::input_iterator_tag) (CompoundStmt 0x9d6c6f0 </usr/include/c++/4.6/bits/basic_string.tcc:81:7, line:119:7>
  (IfStmt 0x9d6b750 <line:83:2, line:84:37>
    <<<NULL>>>
    (BinaryOperator 0x9d6b698 <line:83:6, col:38> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x9d6b5b8 <col:6, col:15> '<dependent type>'
        (UnresolvedLookupExpr 0x9d6b560 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30 0x9d5e270 0x9d5ece0 0x9d5f520 0x9d5fa90)
        (DeclRefExpr 0x9d6b52c <col:6> '_InIterator' lvalue ParmVar 0x9d6b280 '__beg' '_InIterator')
        (DeclRefExpr 0x9d6b544 <col:15> '_InIterator' lvalue ParmVar 0x9d6b2c0 '__end' '_InIterator'))
      (CXXOperatorCallExpr 0x9d6b670 <col:24, col:38> '<dependent type>'
        (UnresolvedLookupExpr 0x9d6b618 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30 0x9d5e270 0x9d5ece0 0x9d5f520 0x9d5fa90)
        (DeclRefExpr 0x9d6b5dc <col:24> 'const _Alloc' lvalue ParmVar 0x9d6b330 '__a' 'const _Alloc &')
        (CXXUnresolvedConstructExpr 0x9d6b600 <col:31, col:38> '_Alloc')))
    (ReturnStmt 0x9d6b740 <line:84:4, col:37>
      (CallExpr 0x9d6b720 <col:11, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d6b6e8 <col:11, col:26> '<dependent type>' lvalue
          (CallExpr 0x9d6b6c8 <col:11, col:24> '<dependent type>'
            (DeclRefExpr 0x9d6b6b0 <col:11> 'struct std::basic_string::_Rep &(void)' lvalue CXXMethod 0x9d282c0 '_S_empty_rep' 'struct std::basic_string::_Rep &(void)')))))
    <<<NULL>>>)
  (DeclStmt 0x9d6b828 <line:87:2, col:19>
    0x9d6b7f0 "_CharT __buf[128]")
  (DeclStmt 0x9d6b890 <line:88:2, col:21>
    0x9d6b840 "size_type __len =
      (IntegerLiteral 0x9d6b878 <col:20> 'int' 0)")
  (WhileStmt 0x9d6bb78 <line:89:2, line:93:4>
    <<<NULL>>>
    (BinaryOperator 0x9d6ba58 <line:89:9, col:64> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x9d6b928 <col:9, col:18> '<dependent type>'
        (UnresolvedLookupExpr 0x9d6b8d0 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bacde0 0x9bc3130 0x9bc62c0 0x9c11360 0x9c32300 0x9c32670 0x9d60120 0x9d60630 0x9d60b40)
        (DeclRefExpr 0x9d6b8a0 <col:9> '_InIterator' lvalue ParmVar 0x9d6b280 '__beg' '_InIterator')
        (DeclRefExpr 0x9d6b8b8 <col:18> '_InIterator' lvalue ParmVar 0x9d6b2c0 '__end' '_InIterator'))
      (CXXOperatorCallExpr 0x9d6ba30 <col:27, col:64> '<dependent type>'
        (UnresolvedLookupExpr 0x9d6b9e8 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bac3c0 0x9bc2c90 0x9bc5590 0x9d61190 0x9d616c0 0x9d61bf0)
        (DeclRefExpr 0x9d6b94c <col:27> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9d6b840 '__len' 'size_type':'typename _CharT_alloc_type::size_type')
        (BinaryOperator 0x9d6b9d0 <col:35, col:64> 'unsigned int' '/'
          (UnaryExprOrTypeTraitExpr 0x9d6b998 <col:35, col:47> 'unsigned int' sizeof 
            (ParenExpr 0x9d6b980 <col:41, col:47> '_CharT [128]' lvalue
              (DeclRefExpr 0x9d6b964 <col:42> '_CharT [128]' lvalue Var 0x9d6b7f0 '__buf' '_CharT [128]')))
          (UnaryExprOrTypeTraitExpr 0x9d6b9b8 <col:51, col:64> 'unsigned int' sizeof '_CharT'))))
    (CompoundStmt 0x9d6bb60 <line:90:4, line:93:4>
      (BinaryOperator 0x9d6bb18 <line:91:6, col:24> '<dependent type>' '='
        (ArraySubscriptExpr 0x9d6bad0 <col:6, col:19> '<dependent type>' lvalue
          (DeclRefExpr 0x9d6ba70 <col:6> '_CharT [128]' lvalue Var 0x9d6b7f0 '__buf' '_CharT [128]')
          (UnaryOperator 0x9d6bab8 <col:12, col:17> '<dependent type>' postfix '++'
            (DeclRefExpr 0x9d6ba88 <col:12> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9d6b840 '__len' 'size_type':'typename _CharT_alloc_type::size_type')))
        (UnaryOperator 0x9d6bb00 <col:23, col:24> '<dependent type>' prefix '*'
          (DeclRefExpr 0x9d6bae4 <col:24> '_InIterator' lvalue ParmVar 0x9d6b280 '__beg' '_InIterator')))
      (UnaryOperator 0x9d6bb48 <line:92:6, col:8> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9d6bb30 <col:8> '_InIterator' lvalue ParmVar 0x9d6b280 '__beg' '_InIterator'))))
  (DeclStmt 0x9d6bcb8 <line:94:2, col:55>
    0x9d6bba0 "std::basic_string::_Rep *__r =
      (CallExpr 0x9d6bc90 <col:14, col:54> '<dependent type>'
        (DependentScopeDeclRefExpr 0x9d6bbf8 <col:14, col:20> '<dependent type>' lvalue)
        (DeclRefExpr 0x9d6bc1c <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9d6b840 '__len' 'size_type':'typename _CharT_alloc_type::size_type')
        (CXXUnresolvedConstructExpr 0x9d6bc58 <col:37, col:48> 'size_type':'typename _CharT_alloc_type::size_type'
          (IntegerLiteral 0x9d6bc40 <col:47> 'int' 0))
        (DeclRefExpr 0x9d6bc74 <col:51> 'const _Alloc' lvalue ParmVar 0x9d6b330 '__a' 'const _Alloc &'))")
  (CallExpr 0x9d6bd80 <line:95:2, col:41> '<dependent type>'
    (DeclRefExpr 0x9d6bcc8 <col:2> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9d271e0 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
    (CallExpr 0x9d6bd30 <col:10, col:26> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9d6bcf8 <col:10, col:15> '<dependent type>' lvalue
        (DeclRefExpr 0x9d6bce0 <col:10> 'struct std::basic_string::_Rep *' lvalue Var 0x9d6bba0 '__r' 'struct std::basic_string::_Rep *')))
    (DeclRefExpr 0x9d6bd4c <col:29> '_CharT [128]' lvalue Var 0x9d6b7f0 '__buf' '_CharT [128]')
    (DeclRefExpr 0x9d6bd64 <col:36> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9d6b840 '__len' 'size_type':'typename _CharT_alloc_type::size_type'))
  (IfStmt 0x9d6c4e8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/basic_string.tcc:111:4>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9d6bda8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x9d6c4d0 </usr/include/c++/4.6/bits/basic_string.tcc:97:4, line:111:4>
      (WhileStmt 0x9d6c4b8 <line:98:6, line:110:8>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9d6be40 <line:98:13, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0x9d6bde8 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bacde0 0x9bc3130 0x9bc62c0 0x9c11360 0x9c32300 0x9c32670 0x9d60120 0x9d60630 0x9d60b40)
          (DeclRefExpr 0x9d6bdb8 <col:13> '_InIterator' lvalue ParmVar 0x9d6b280 '__beg' '_InIterator')
          (DeclRefExpr 0x9d6bdd0 <col:22> '_InIterator' lvalue ParmVar 0x9d6b2c0 '__end' '_InIterator'))
        (CompoundStmt 0x9d6c498 <line:99:8, line:110:8>
          (IfStmt 0x9d6c330 <line:100:3, line:107:5>
            <<<NULL>>>
            (CXXOperatorCallExpr 0x9d6bf28 <line:100:7, col:21> '<dependent type>'
              (UnresolvedLookupExpr 0x9d6bed0 <col:13, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30 0x9d5e270 0x9d5ece0 0x9d5f520 0x9d5fa90)
              (DeclRefExpr 0x9d6be64 <col:7> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9d6b840 '__len' 'size_type':'typename _CharT_alloc_type::size_type')
              (CXXDependentScopeMemberExpr 0x9d6be98 <col:16, col:21> '<dependent type>' lvalue
                (DeclRefExpr 0x9d6be7c <col:16> 'struct std::basic_string::_Rep *' lvalue Var 0x9d6bba0 '__r' 'struct std::basic_string::_Rep *')))
            (CompoundStmt 0x9d6c310 <line:101:5, line:107:5>
              (DeclStmt 0x9d6c0d8 <line:103:7, col:63>
                0x9d6bf60 "std::basic_string::_Rep *__another =
                  (CallExpr 0x9d6c0b0 <col:25, col:62> '<dependent type>'
                    (DependentScopeDeclRefExpr 0x9d6bfb8 <col:25, col:31> '<dependent type>' lvalue)
                    (CXXOperatorCallExpr 0x9d6c058 <col:41, col:49> '<dependent type>'
                      (UnresolvedLookupExpr 0x9d6c010 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d5c5c0 0x9d5cb10 0x9d5d090 0x9d5d890)
                      (DeclRefExpr 0x9d6bfdc <col:41> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9d6b840 '__len' 'size_type':'typename _CharT_alloc_type::size_type')
                      (IntegerLiteral 0x9d6bff8 <col:49> 'int' 1))
                    (DeclRefExpr 0x9d6c07c <col:52> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9d6b840 '__len' 'size_type':'typename _CharT_alloc_type::size_type')
                    (DeclRefExpr 0x9d6c094 <col:59> 'const _Alloc' lvalue ParmVar 0x9d6b330 '__a' 'const _Alloc &'))")
              (CallExpr 0x9d6c218 <line:104:7, col:64> '<dependent type>'
                (DeclRefExpr 0x9d6c0e8 <col:7> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9d271e0 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
                (CallExpr 0x9d6c150 <col:15, col:37> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9d6c118 <col:15, col:26> '<dependent type>' lvalue
                    (DeclRefExpr 0x9d6c100 <col:15> 'struct std::basic_string::_Rep *' lvalue Var 0x9d6bf60 '__another' 'struct std::basic_string::_Rep *')))
                (CallExpr 0x9d6c1e0 <col:40, col:56> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9d6c1a8 <col:40, col:45> '<dependent type>' lvalue
                    (DeclRefExpr 0x9d6c16c <col:40> 'struct std::basic_string::_Rep *' lvalue Var 0x9d6bba0 '__r' 'struct std::basic_string::_Rep *')))
                (DeclRefExpr 0x9d6c1fc <col:59> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9d6b840 '__len' 'size_type':'typename _CharT_alloc_type::size_type'))
              (CallExpr 0x9d6c2a8 <line:105:7, col:26> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9d6c258 <col:7, col:12> '<dependent type>' lvalue
                  (DeclRefExpr 0x9d6c240 <col:7> 'struct std::basic_string::_Rep *' lvalue Var 0x9d6bba0 '__r' 'struct std::basic_string::_Rep *'))
                (DeclRefExpr 0x9d6c28c <col:23> 'const _Alloc' lvalue ParmVar 0x9d6b330 '__a' 'const _Alloc &'))
              (BinaryOperator 0x9d6c2f8 <line:106:7, col:13> '<dependent type>' '='
                (DeclRefExpr 0x9d6c2c8 <col:7> 'struct std::basic_string::_Rep *' lvalue Var 0x9d6bba0 '__r' 'struct std::basic_string::_Rep *')
                (DeclRefExpr 0x9d6c2e0 <col:13> 'struct std::basic_string::_Rep *' lvalue Var 0x9d6bf60 '__another' 'struct std::basic_string::_Rep *')))
            <<<NULL>>>)
          (BinaryOperator 0x9d6c450 <line:108:3, col:33> '<dependent type>' '='
            (ArraySubscriptExpr 0x9d6c408 <col:3, col:28> '<dependent type>' lvalue
              (CallExpr 0x9d6c3a0 <col:3, col:19> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9d6c368 <col:3, col:8> '<dependent type>' lvalue
                  (DeclRefExpr 0x9d6c34c <col:3> 'struct std::basic_string::_Rep *' lvalue Var 0x9d6bba0 '__r' 'struct std::basic_string::_Rep *')))
              (UnaryOperator 0x9d6c3f0 <col:21, col:26> '<dependent type>' postfix '++'
                (DeclRefExpr 0x9d6c3bc <col:21> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9d6b840 '__len' 'size_type':'typename _CharT_alloc_type::size_type')))
            (UnaryOperator 0x9d6c438 <col:32, col:33> '<dependent type>' prefix '*'
              (DeclRefExpr 0x9d6c41c <col:33> '_InIterator' lvalue ParmVar 0x9d6b280 '__beg' '_InIterator')))
          (UnaryOperator 0x9d6c480 <line:109:3, col:5> '<dependent type>' prefix '++'
            (DeclRefExpr 0x9d6c468 <col:5> '_InIterator' lvalue ParmVar 0x9d6b280 '__beg' '_InIterator')))))
    <<<NULL>>>)
  (IfStmt 0x9d6c5c8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/basic_string.tcc:116:4>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9d6c508 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9d6c5b0 </usr/include/c++/4.6/bits/basic_string.tcc:113:4, line:116:4>
      (CallExpr 0x9d6c580 <line:114:6, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d6c530 <col:6, col:11> '<dependent type>' lvalue
          (DeclRefExpr 0x9d6c518 <col:6> 'struct std::basic_string::_Rep *' lvalue Var 0x9d6bba0 '__r' 'struct std::basic_string::_Rep *'))
        (DeclRefExpr 0x9d6c564 <col:22> 'const _Alloc' lvalue ParmVar 0x9d6b330 '__a' 'const _Alloc &'))
      (NullStmt 0x9d6c5a0 <line:115:29>))
    <<<NULL>>>)
  (CallExpr 0x9d6c650 <line:117:2, col:39> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9d6c600 <col:2, col:7> '<dependent type>' lvalue
      (DeclRefExpr 0x9d6c5e4 <col:2> 'struct std::basic_string::_Rep *' lvalue Var 0x9d6bba0 '__r' 'struct std::basic_string::_Rep *'))
    (DeclRefExpr 0x9d6c634 <col:34> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9d6b840 '__len' 'size_type':'typename _CharT_alloc_type::size_type'))
  (ReturnStmt 0x9d6c6e0 <line:118:2, col:25>
    (CallExpr 0x9d6c6c0 <col:9, col:25> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9d6c688 <col:9, col:14> '<dependent type>' lvalue
        (DeclRefExpr 0x9d6c670 <col:9> 'struct std::basic_string::_Rep *' lvalue Var 0x9d6bba0 '__r' 'struct std::basic_string::_Rep *')))))

;
    template <typename _InIterator> static _CharT *_S_construct(_InIterator __beg, _InIterator __end, const _Alloc &__a, std::forward_iterator_tag) (CompoundStmt 0x9d6d828 </usr/include/c++/4.6/bits/basic_string.tcc:127:7, line:149:7>
  (IfStmt 0x9d6cfc0 <line:129:2, line:130:37>
    <<<NULL>>>
    (BinaryOperator 0x9d6cf08 <line:129:6, col:38> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x9d6ce28 <col:6, col:15> '<dependent type>'
        (UnresolvedLookupExpr 0x9d6cdd0 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30 0x9d5e270 0x9d5ece0 0x9d5f520 0x9d5fa90)
        (DeclRefExpr 0x9d6cd9c <col:6> '_InIterator' lvalue ParmVar 0x9d6caf0 '__beg' '_InIterator')
        (DeclRefExpr 0x9d6cdb4 <col:15> '_InIterator' lvalue ParmVar 0x9d6cb30 '__end' '_InIterator'))
      (CXXOperatorCallExpr 0x9d6cee0 <col:24, col:38> '<dependent type>'
        (UnresolvedLookupExpr 0x9d6ce88 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30 0x9d5e270 0x9d5ece0 0x9d5f520 0x9d5fa90)
        (DeclRefExpr 0x9d6ce4c <col:24> 'const _Alloc' lvalue ParmVar 0x9d6cba0 '__a' 'const _Alloc &')
        (CXXUnresolvedConstructExpr 0x9d6ce70 <col:31, col:38> '_Alloc')))
    (ReturnStmt 0x9d6cfb0 <line:130:4, col:37>
      (CallExpr 0x9d6cf90 <col:11, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d6cf58 <col:11, col:26> '<dependent type>' lvalue
          (CallExpr 0x9d6cf38 <col:11, col:24> '<dependent type>'
            (DeclRefExpr 0x9d6cf20 <col:11> 'struct std::basic_string::_Rep &(void)' lvalue CXXMethod 0x9d282c0 '_S_empty_rep' 'struct std::basic_string::_Rep &(void)')))))
    <<<NULL>>>)
  (IfStmt 0x9d6d268 <line:133:2, line:134:72>
    <<<NULL>>>
    (BinaryOperator 0x9d6d120 <line:133:6, col:54> '<dependent type>' '&&'
      (CallExpr 0x9d6d050 <col:6, col:40> '<dependent type>'
        (UnresolvedLookupExpr 0x9d6d000 <col:6, col:17> '<overloaded function type>' lvalue (no ADL) = '1' 0x9b972f0 0x9b974f0)
        (DeclRefExpr 0x9d6d038 <col:35> '_InIterator' lvalue ParmVar 0x9d6caf0 '__beg' '_InIterator'))
      (CXXOperatorCallExpr 0x9d6d0f8 <col:45, col:54> '<dependent type>'
        (UnresolvedLookupExpr 0x9d6d0a0 <col:51, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bacde0 0x9bc3130 0x9bc62c0 0x9c11360 0x9c32300 0x9c32670 0x9d60120 0x9d60630 0x9d60b40)
        (DeclRefExpr 0x9d6d070 <col:45> '_InIterator' lvalue ParmVar 0x9d6caf0 '__beg' '_InIterator')
        (DeclRefExpr 0x9d6d088 <col:54> '_InIterator' lvalue ParmVar 0x9d6cb30 '__end' '_InIterator')))
    (CallExpr 0x9d6d238 <line:134:4, col:72> 'void'
      (ImplicitCastExpr 0x9d6d228 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x9d6d20c <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9b76370 '__throw_logic_error' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0x9d6d258 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0x9d6d1f8 <col:24, col:30> 'const char [42]' lvalue
          (StringLiteral 0x9d6d1b0 </usr/include/c++/4.6/bits/basic_string.tcc:134:28> 'const char [42]' lvalue "basic_string::_S_construct null not valid"))))
    <<<NULL>>>)
  (DeclStmt 0x9d6d398 <line:136:2, line:137:22>
    0x9d6d290 "const size_type __dnew =
      (CXXStaticCastExpr 0x9d6d380 <line:136:27, line:137:21> 'size_type':'typename _CharT_alloc_type::size_type' static_cast<size_type> <Dependent>
        (CallExpr 0x9d6d350 <line:136:50, line:137:20> '<dependent type>'
          (UnresolvedLookupExpr 0x9d6d2e8 <line:136:50, col:55> '<overloaded function type>' lvalue (no ADL) = '1' 0x9bba500)
          (DeclRefExpr 0x9d6d31c <col:64> '_InIterator' lvalue ParmVar 0x9d6caf0 '__beg' '_InIterator')
          (DeclRefExpr 0x9d6d334 <line:137:15> '_InIterator' lvalue ParmVar 0x9d6cb30 '__end' '_InIterator')))")
  (DeclStmt 0x9d6d4d8 <line:139:2, col:56>
    0x9d6d3c0 "std::basic_string::_Rep *__r =
      (CallExpr 0x9d6d4b0 <col:14, col:55> '<dependent type>'
        (DependentScopeDeclRefExpr 0x9d6d418 <col:14, col:20> '<dependent type>' lvalue)
        (DeclRefExpr 0x9d6d43c <col:30> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d6d290 '__dnew' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (CXXUnresolvedConstructExpr 0x9d6d478 <col:38, col:49> 'size_type':'typename _CharT_alloc_type::size_type'
          (IntegerLiteral 0x9d6d460 <col:48> 'int' 0))
        (DeclRefExpr 0x9d6d494 <col:52> 'const _Alloc' lvalue ParmVar 0x9d6cba0 '__a' 'const _Alloc &'))")
  (IfStmt 0x9d6d620 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/basic_string.tcc:141:54>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9d6d4e8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x9d6d608 </usr/include/c++/4.6/bits/basic_string.tcc:141:4, col:54>
      (CallExpr 0x9d6d5e0 <col:6, col:51> '<dependent type>'
        (UnresolvedLookupExpr 0x9d6d4f8 <col:6> '<dependent type>' lvalue (no ADL) = '1' 0x9d27790 0x9d27920 0x9d27ae0 0x9d27cc0 0x9d27ea0)
        (CallExpr 0x9d6d590 <col:20, col:36> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9d6d558 <col:20, col:25> '<dependent type>' lvalue
            (DeclRefExpr 0x9d6d53c <col:20> 'struct std::basic_string::_Rep *' lvalue Var 0x9d6d3c0 '__r' 'struct std::basic_string::_Rep *')))
        (DeclRefExpr 0x9d6d5ac <col:39> '_InIterator' lvalue ParmVar 0x9d6caf0 '__beg' '_InIterator')
        (DeclRefExpr 0x9d6d5c4 <col:46> '_InIterator' lvalue ParmVar 0x9d6cb30 '__end' '_InIterator')))
    <<<NULL>>>)
  (IfStmt 0x9d6d700 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/basic_string.tcc:146:4>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9d6d640 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9d6d6e8 </usr/include/c++/4.6/bits/basic_string.tcc:143:4, line:146:4>
      (CallExpr 0x9d6d6b8 <line:144:6, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d6d668 <col:6, col:11> '<dependent type>' lvalue
          (DeclRefExpr 0x9d6d650 <col:6> 'struct std::basic_string::_Rep *' lvalue Var 0x9d6d3c0 '__r' 'struct std::basic_string::_Rep *'))
        (DeclRefExpr 0x9d6d69c <col:22> 'const _Alloc' lvalue ParmVar 0x9d6cba0 '__a' 'const _Alloc &'))
      (NullStmt 0x9d6d6d8 <line:145:29>))
    <<<NULL>>>)
  (CallExpr 0x9d6d788 <line:147:2, col:40> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9d6d738 <col:2, col:7> '<dependent type>' lvalue
      (DeclRefExpr 0x9d6d71c <col:2> 'struct std::basic_string::_Rep *' lvalue Var 0x9d6d3c0 '__r' 'struct std::basic_string::_Rep *'))
    (DeclRefExpr 0x9d6d76c <col:34> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d6d290 '__dnew' 'const size_type':'const typename _CharT_alloc_type::size_type'))
  (ReturnStmt 0x9d6d818 <line:148:2, col:25>
    (CallExpr 0x9d6d7f8 <col:9, col:25> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9d6d7c0 <col:9, col:14> '<dependent type>' lvalue
        (DeclRefExpr 0x9d6d7a8 <col:9> 'struct std::basic_string::_Rep *' lvalue Var 0x9d6d3c0 '__r' 'struct std::basic_string::_Rep *')))))

;
    static _CharT *_S_construct(size_type __n, _CharT __c, const _Alloc &__a) (CompoundStmt 0x9d6e388 </usr/include/c++/4.6/bits/basic_string.tcc:155:5, line:167:5>
  (IfStmt 0x9d6e000 <line:157:7, line:158:35>
    <<<NULL>>>
    (BinaryOperator 0x9d6df48 <line:157:11, col:37> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x9d6de68 <col:11, col:18> '<dependent type>'
        (UnresolvedLookupExpr 0x9d6de10 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30 0x9d5e270 0x9d5ece0 0x9d5f520 0x9d5fa90)
        (DeclRefExpr 0x9d6dddc <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d6dbd0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
        (IntegerLiteral 0x9d6ddf8 <col:18> 'int' 0))
      (CXXOperatorCallExpr 0x9d6df20 <col:23, col:37> '<dependent type>'
        (UnresolvedLookupExpr 0x9d6dec8 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30 0x9d5e270 0x9d5ece0 0x9d5f520 0x9d5fa90)
        (DeclRefExpr 0x9d6de8c <col:23> 'const _Alloc' lvalue ParmVar 0x9d6dc80 '__a' 'const _Alloc &')
        (CXXUnresolvedConstructExpr 0x9d6deb0 <col:30, col:37> '_Alloc')))
    (ReturnStmt 0x9d6dff0 <line:158:2, col:35>
      (CallExpr 0x9d6dfd0 <col:9, col:35> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d6df98 <col:9, col:24> '<dependent type>' lvalue
          (CallExpr 0x9d6df78 <col:9, col:22> '<dependent type>'
            (DeclRefExpr 0x9d6df60 <col:9> 'struct std::basic_string::_Rep &(void)' lvalue CXXMethod 0x9d282c0 '_S_empty_rep' 'struct std::basic_string::_Rep &(void)')))))
    <<<NULL>>>)
  (DeclStmt 0x9d6e148 <line:161:7, col:58>
    0x9d6e030 "std::basic_string::_Rep *__r =
      (CallExpr 0x9d6e120 <col:19, col:57> '<dependent type>'
        (DependentScopeDeclRefExpr 0x9d6e088 <col:19, col:25> '<dependent type>' lvalue)
        (DeclRefExpr 0x9d6e0ac <col:35> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d6dbd0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
        (CXXUnresolvedConstructExpr 0x9d6e0e8 <col:40, col:51> 'size_type':'typename _CharT_alloc_type::size_type'
          (IntegerLiteral 0x9d6e0d0 <col:50> 'int' 0))
        (DeclRefExpr 0x9d6e104 <col:54> 'const _Alloc' lvalue ParmVar 0x9d6dc80 '__a' 'const _Alloc &'))")
  (IfStmt 0x9d6e260 <line:162:7, line:163:39>
    <<<NULL>>>
    (DeclRefExpr 0x9d6e158 <line:162:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d6dbd0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0x9d6e238 <line:163:2, col:39> '<dependent type>'
      (DeclRefExpr 0x9d6e170 <col:2> 'void (_CharT *, size_type, _CharT)' lvalue CXXMethod 0x9d27510 '_M_assign' 'void (_CharT *, size_type, _CharT)')
      (CallExpr 0x9d6e1e8 <col:12, col:28> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d6e1b0 <col:12, col:17> '<dependent type>' lvalue
          (DeclRefExpr 0x9d6e188 <col:12> 'struct std::basic_string::_Rep *' lvalue Var 0x9d6e030 '__r' 'struct std::basic_string::_Rep *')))
      (DeclRefExpr 0x9d6e204 <col:31> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d6dbd0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9d6e21c <col:36> '_CharT' lvalue ParmVar 0x9d6dc10 '__c' '_CharT'))
    <<<NULL>>>)
  (CallExpr 0x9d6e2e8 <line:165:7, col:42> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9d6e298 <col:7, col:12> '<dependent type>' lvalue
      (DeclRefExpr 0x9d6e27c <col:7> 'struct std::basic_string::_Rep *' lvalue Var 0x9d6e030 '__r' 'struct std::basic_string::_Rep *'))
    (DeclRefExpr 0x9d6e2cc <col:39> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d6dbd0 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
  (ReturnStmt 0x9d6e378 <line:166:7, col:30>
    (CallExpr 0x9d6e358 <col:14, col:30> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9d6e320 <col:14, col:19> '<dependent type>' lvalue
        (DeclRefExpr 0x9d6e308 <col:14> 'struct std::basic_string::_Rep *' lvalue Var 0x9d6e030 '__r' 'struct std::basic_string::_Rep *')))))


    basic_string<_CharT, _Traits, _Alloc>::basic_string<_CharT, _Traits, _Alloc>(const basic_string<_CharT, _Traits, _Alloc> &__str) : _M_dataplus((CallExpr 0x9d6eb38 </usr/include/c++/4.6/bits/basic_string.tcc:172:19, line:173:29> '<dependent type>'
  (CXXDependentScopeMemberExpr 0x9d6e9f8 <line:172:19, col:35> '<dependent type>' lvalue
    (CallExpr 0x9d6e9d8 <col:19, col:32> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9d6e9a0 <col:19, col:25> '<dependent type>' lvalue
        (DeclRefExpr 0x9d6e984 <col:19> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d6e890 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))
  (CXXUnresolvedConstructExpr 0x9d6eaa8 <col:43, col:71> '_Alloc'
    (CallExpr 0x9d6ea88 <col:50, col:70> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9d6ea50 <col:50, col:56> '<dependent type>' lvalue
        (DeclRefExpr 0x9d6ea38 <col:50> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d6e890 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))
  (CallExpr 0x9d6eb18 <line:173:8, col:28> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9d6eae0 <col:8, col:14> '<dependent type>' lvalue
      (DeclRefExpr 0x9d6eac4 <col:8> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d6e890 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))
, (CallExpr 0x9d6ebb0 </usr/include/c++/4.6/bits/basic_string.tcc:174:5, col:25> '<dependent type>'
  (CXXDependentScopeMemberExpr 0x9d6eb78 <col:5, col:11> '<dependent type>' lvalue
    (DeclRefExpr 0x9d6eb5c <col:5> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d6e890 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
) (CompoundStmt 0x9d6ec10 </usr/include/c++/4.6/bits/basic_string.tcc:175:5, col:7>)


    basic_string<_CharT, _Traits, _Alloc>::basic_string<_CharT, _Traits, _Alloc>(const _Alloc &__a) : _M_dataplus((CallExpr 0x9d6f2e0 </usr/include/c++/4.6/bits/basic_string.tcc:180:19, col:58> '<dependent type>'
  (UnresolvedLookupExpr 0x9d6f248 <col:19> '<dependent type>' lvalue (no ADL) = '1' 0x9d3c250 0x9d6b4c0 0x9d6cd30 0x9d6dd40)
  (CXXUnresolvedConstructExpr 0x9d6f290 <col:32, col:42> 'size_type':'typename _CharT_alloc_type::size_type')
  (CXXUnresolvedConstructExpr 0x9d6f2b0 <col:45, col:52> '_CharT')
  (DeclRefExpr 0x9d6f2c8 <col:55> 'const _Alloc' lvalue ParmVar 0x9d6f120 '__a' 'const _Alloc &'))
, (DeclRefExpr 0x9d6f308 </usr/include/c++/4.6/bits/basic_string.tcc:180:61> 'const _Alloc' lvalue ParmVar 0x9d6f120 '__a' 'const _Alloc &')
) (CompoundStmt 0x9d6f360 </usr/include/c++/4.6/bits/basic_string.tcc:181:5, col:7>)


    basic_string<_CharT, _Traits, _Alloc>::basic_string<_CharT, _Traits, _Alloc>(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos, size_type __n = (DeclRefExpr 0x9d454a8 </usr/include/c++/4.6/bits/basic_string.h:457:22> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d24940 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) : _M_dataplus((CallExpr 0x9d6fe40 </usr/include/c++/4.6/bits/basic_string.tcc:186:19, line:190:28> '<dependent type>'
  (UnresolvedLookupExpr 0x9d6f9e0 <line:186:19> '<dependent type>' lvalue (no ADL) = '1' 0x9d3c250 0x9d6b4c0 0x9d6cd30 0x9d6dd40)
  (CXXOperatorCallExpr 0x9d6fbe8 <col:32, line:188:35> '<dependent type>'
    (UnresolvedLookupExpr 0x9d6fba0 <line:187:11, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d5c5c0 0x9d5cb10 0x9d5d090 0x9d5d890)
    (CallExpr 0x9d6fa70 <line:186:32, col:46> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9d6fa38 <col:32, col:38> '<dependent type>' lvalue
        (DeclRefExpr 0x9d6fa20 <col:32> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d6f850 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
    (CallExpr 0x9d6fb78 <line:187:13, line:188:35> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9d6faa8 <line:187:13, col:19> '<dependent type>' lvalue
        (DeclRefExpr 0x9d6fa8c <col:13> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d6f850 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
      (DeclRefExpr 0x9d6fadc <col:28> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d6f890 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (StringLiteral 0x9d6fb40 <line:188:7> 'const char [27]' lvalue "basic_string::basic_string")))
  (CXXOperatorCallExpr 0x9d6fdf8 <line:189:11, line:190:13> '<dependent type>'
    (UnresolvedLookupExpr 0x9d6fdb0 <col:11, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d5c5c0 0x9d5cb10 0x9d5d090 0x9d5d890)
    (CXXOperatorCallExpr 0x9d6fd70 <line:189:11, col:54> '<dependent type>'
      (UnresolvedLookupExpr 0x9d6fd28 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d5c5c0 0x9d5cb10 0x9d5d090 0x9d5d890)
      (CallExpr 0x9d6fc60 <col:11, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d6fc28 <col:11, col:17> '<dependent type>' lvalue
          (DeclRefExpr 0x9d6fc0c <col:11> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d6f850 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (CallExpr 0x9d6fd00 <col:29, col:54> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d6fc98 <col:29, col:35> '<dependent type>' lvalue
          (DeclRefExpr 0x9d6fc7c <col:29> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d6f850 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x9d6fccc <col:44> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d6f890 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9d6fce4 <col:51> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d6f8d0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))
    (DeclRefExpr 0x9d6fd94 <line:190:13> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d6f890 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
  (CXXUnresolvedConstructExpr 0x9d6fe28 <col:20, col:27> '_Alloc'))
, (CXXUnresolvedConstructExpr 0x9d6fe70 </usr/include/c++/4.6/bits/basic_string.tcc:190:31, col:38> '_Alloc')
) (CompoundStmt 0x9d6fed0 </usr/include/c++/4.6/bits/basic_string.tcc:191:5, col:7>)


    basic_string<_CharT, _Traits, _Alloc>::basic_string<_CharT, _Traits, _Alloc>(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos, size_type __n, const _Alloc &__a) : _M_dataplus((CallExpr 0x9d70a00 </usr/include/c++/4.6/bits/basic_string.tcc:197:19, line:201:23> '<dependent type>'
  (UnresolvedLookupExpr 0x9d705f0 <line:197:19> '<dependent type>' lvalue (no ADL) = '1' 0x9d3c250 0x9d6b4c0 0x9d6cd30 0x9d6dd40)
  (CXXOperatorCallExpr 0x9d707b0 <col:32, line:199:35> '<dependent type>'
    (UnresolvedLookupExpr 0x9d70768 <line:198:11, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d5c5c0 0x9d5cb10 0x9d5d090 0x9d5d890)
    (CallExpr 0x9d70680 <line:197:32, col:46> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9d70648 <col:32, col:38> '<dependent type>' lvalue
        (DeclRefExpr 0x9d70630 <col:32> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d703c0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
    (CallExpr 0x9d70740 <line:198:13, line:199:35> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9d706b8 <line:198:13, col:19> '<dependent type>' lvalue
        (DeclRefExpr 0x9d7069c <col:13> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d703c0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
      (DeclRefExpr 0x9d706ec <col:28> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d70400 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (StringLiteral 0x9d70704 <line:199:7> 'const char [27]' lvalue "basic_string::basic_string")))
  (CXXOperatorCallExpr 0x9d709c0 <line:200:11, line:201:13> '<dependent type>'
    (UnresolvedLookupExpr 0x9d70978 <col:11, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d5c5c0 0x9d5cb10 0x9d5d090 0x9d5d890)
    (CXXOperatorCallExpr 0x9d70938 <line:200:11, col:54> '<dependent type>'
      (UnresolvedLookupExpr 0x9d708f0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d5c5c0 0x9d5cb10 0x9d5d090 0x9d5d890)
      (CallExpr 0x9d70828 <col:11, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d707f0 <col:11, col:17> '<dependent type>' lvalue
          (DeclRefExpr 0x9d707d4 <col:11> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d703c0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (CallExpr 0x9d708c8 <col:29, col:54> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d70860 <col:29, col:35> '<dependent type>' lvalue
          (DeclRefExpr 0x9d70844 <col:29> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d703c0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x9d70894 <col:44> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d70400 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9d708ac <col:51> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d70440 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))
    (DeclRefExpr 0x9d7095c <line:201:13> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d70400 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
  (DeclRefExpr 0x9d709e4 <col:20> 'const _Alloc' lvalue ParmVar 0x9d704b0 '__a' 'const _Alloc &'))
, (DeclRefExpr 0x9d70a28 </usr/include/c++/4.6/bits/basic_string.tcc:201:26> 'const _Alloc' lvalue ParmVar 0x9d704b0 '__a' 'const _Alloc &')
) (CompoundStmt 0x9d70a80 </usr/include/c++/4.6/bits/basic_string.tcc:202:5, col:7>)


    basic_string<_CharT, _Traits, _Alloc>::basic_string<_CharT, _Traits, _Alloc>(const _CharT *__s, size_type __n, const _Alloc &__a = (CXXUnresolvedConstructExpr 0x9d454c8 </usr/include/c++/4.6/bits/basic_string.h:478:26, col:33> '_Alloc')
) : _M_dataplus((CallExpr 0x9d71290 </usr/include/c++/4.6/bits/basic_string.tcc:208:19, col:51> '<dependent type>'
  (UnresolvedLookupExpr 0x9d71180 <col:19> '<dependent type>' lvalue (no ADL) = '1' 0x9d3c250 0x9d6b4c0 0x9d6cd30 0x9d6dd40)
  (DeclRefExpr 0x9d711c0 <col:32> 'const _CharT *' lvalue ParmVar 0x9d70f90 '__s' 'const _CharT *')
  (CXXOperatorCallExpr 0x9d71250 <col:37, col:43> '<dependent type>'
    (UnresolvedLookupExpr 0x9d71208 <col:41, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d5c5c0 0x9d5cb10 0x9d5d090 0x9d5d890)
    (DeclRefExpr 0x9d711d8 <col:37> 'const _CharT *' lvalue ParmVar 0x9d70f90 '__s' 'const _CharT *')
    (DeclRefExpr 0x9d711f0 <col:43> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d70fd0 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
  (DeclRefExpr 0x9d71274 <col:48> 'const _Alloc' lvalue ParmVar 0x9d71040 '__a' 'const _Alloc &'))
, (DeclRefExpr 0x9d712b8 </usr/include/c++/4.6/bits/basic_string.tcc:208:54> 'const _Alloc' lvalue ParmVar 0x9d71040 '__a' 'const _Alloc &')
) (CompoundStmt 0x9d71310 </usr/include/c++/4.6/bits/basic_string.tcc:209:5, col:7>)


    basic_string<_CharT, _Traits, _Alloc>::basic_string<_CharT, _Traits, _Alloc>(const _CharT *__s, const _Alloc &__a = (CXXUnresolvedConstructExpr 0x9d454e8 </usr/include/c++/4.6/bits/basic_string.h:484:59, col:66> '_Alloc')
) : _M_dataplus((CallExpr 0x9d71c18 </usr/include/c++/4.6/bits/basic_string.tcc:215:19, line:216:26> '<dependent type>'
  (UnresolvedLookupExpr 0x9d719b8 <line:215:19> '<dependent type>' lvalue (no ADL) = '1' 0x9d3c250 0x9d6b4c0 0x9d6cd30 0x9d6dd40)
  (DeclRefExpr 0x9d719f8 <col:32> 'const _CharT *' lvalue ParmVar 0x9d71820 '__s' 'const _CharT *')
  (ConditionalOperator 0x9d71be0 <col:37, line:216:17> '<dependent type>'
    (DeclRefExpr 0x9d71a10 <line:215:37> 'const _CharT *' lvalue ParmVar 0x9d71820 '__s' 'const _CharT *')
    (CXXOperatorCallExpr 0x9d71b18 <col:43, col:72> '<dependent type>'
      (UnresolvedLookupExpr 0x9d71ad0 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d5c5c0 0x9d5cb10 0x9d5d090 0x9d5d890)
      (DeclRefExpr 0x9d71a28 <col:43> 'const _CharT *' lvalue ParmVar 0x9d71820 '__s' 'const _CharT *')
      (CallExpr 0x9d71ab0 <col:49, col:72> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d71a60 <col:49, col:62> '<dependent type>' lvalue)
        (DeclRefExpr 0x9d71a94 <col:69> 'const _CharT *' lvalue ParmVar 0x9d71820 '__s' 'const _CharT *')))
    (CXXOperatorCallExpr 0x9d71bb8 <line:216:11, col:17> '<dependent type>'
      (UnresolvedLookupExpr 0x9d71b70 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d5c5c0 0x9d5cb10 0x9d5d090 0x9d5d890)
      (DeclRefExpr 0x9d71b3c <col:11> 'const _CharT *' lvalue ParmVar 0x9d71820 '__s' 'const _CharT *')
      (DeclRefExpr 0x9d71b54 <col:17> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d6a5d0 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))
  (DeclRefExpr 0x9d71bfc <col:23> 'const _Alloc' lvalue ParmVar 0x9d71890 '__a' 'const _Alloc &'))
, (DeclRefExpr 0x9d71c40 </usr/include/c++/4.6/bits/basic_string.tcc:216:29> 'const _Alloc' lvalue ParmVar 0x9d71890 '__a' 'const _Alloc &')
) (CompoundStmt 0x9d71ca0 </usr/include/c++/4.6/bits/basic_string.tcc:217:5, col:7>)


    basic_string<_CharT, _Traits, _Alloc>::basic_string<_CharT, _Traits, _Alloc>(size_type __n, _CharT __c, const _Alloc &__a = (CXXUnresolvedConstructExpr 0x9d45508 </usr/include/c++/4.6/bits/basic_string.h:491:67, col:74> '_Alloc')
) : _M_dataplus((CallExpr 0x9d72438 </usr/include/c++/4.6/bits/basic_string.tcc:222:19, col:45> '<dependent type>'
  (UnresolvedLookupExpr 0x9d723b0 <col:19> '<dependent type>' lvalue (no ADL) = '1' 0x9d3c250 0x9d6b4c0 0x9d6cd30 0x9d6dd40)
  (DeclRefExpr 0x9d723f0 <col:32> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d721c0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
  (DeclRefExpr 0x9d72408 <col:37> '_CharT' lvalue ParmVar 0x9d72200 '__c' '_CharT')
  (DeclRefExpr 0x9d72420 <col:42> 'const _Alloc' lvalue ParmVar 0x9d72270 '__a' 'const _Alloc &'))
, (DeclRefExpr 0x9d72460 </usr/include/c++/4.6/bits/basic_string.tcc:222:48> 'const _Alloc' lvalue ParmVar 0x9d72270 '__a' 'const _Alloc &')
) (CompoundStmt 0x9d724c0 </usr/include/c++/4.6/bits/basic_string.tcc:223:5, col:7>)


    template <typename _InputIterator> basic_string<_CharT, _Traits, _Alloc>::basic_string<_CharT, _Traits, _Alloc>(_InputIterator __beg, _InputIterator __end, const _Alloc &__a = (CXXUnresolvedConstructExpr 0x9d45528 </usr/include/c++/4.6/bits/basic_string.h:527:28, col:35> '_Alloc')
) : _M_dataplus((CallExpr 0x9d72cc8 </usr/include/c++/4.6/bits/basic_string.tcc:230:19, col:49> '<dependent type>'
  (UnresolvedLookupExpr 0x9d72c40 <col:19> '<dependent type>' lvalue (no ADL) = '1' 0x9d3c250 0x9d6b4c0 0x9d6cd30 0x9d6dd40)
  (DeclRefExpr 0x9d72c80 <col:32> '_InputIterator' lvalue ParmVar 0x9d729f0 '__beg' '_InputIterator')
  (DeclRefExpr 0x9d72c98 <col:39> '_InputIterator' lvalue ParmVar 0x9d72a30 '__end' '_InputIterator')
  (DeclRefExpr 0x9d72cb0 <col:46> 'const _Alloc' lvalue ParmVar 0x9d72aa0 '__a' 'const _Alloc &'))
, (DeclRefExpr 0x9d72cf0 </usr/include/c++/4.6/bits/basic_string.tcc:230:52> 'const _Alloc' lvalue ParmVar 0x9d72aa0 '__a' 'const _Alloc &')
) (CompoundStmt 0x9d72d50 </usr/include/c++/4.6/bits/basic_string.tcc:231:5, col:7>)

;
    basic_string<_CharT, _Traits, _Alloc> &assign(const basic_string<_CharT, _Traits, _Alloc> &__str) (CompoundStmt 0x9d73a10 </usr/include/c++/4.6/bits/basic_string.tcc:245:5, line:255:5>
  (IfStmt 0x9d739b8 <line:246:7, line:253:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9d735a0 <line:246:11, col:36> '<dependent type>'
      (UnresolvedLookupExpr 0x9d73548 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bacde0 0x9bc3130 0x9bc62c0 0x9c11360 0x9c32300 0x9c32670 0x9d60120 0x9d60630 0x9d60b40)
      (CallExpr 0x9d734b8 <col:11, col:18> '<dependent type>'
        (MemberExpr 0x9d73498 <col:11> '<bound member function type>' ->_M_rep 0x9d268a0
          (CXXThisExpr 0x9d73488 <col:11> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
      (CallExpr 0x9d73528 <col:23, col:36> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d734f0 <col:23, col:29> '<dependent type>' lvalue
          (DeclRefExpr 0x9d734d4 <col:23> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d73200 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))
    (CompoundStmt 0x9d73998 <line:247:2, line:253:2>
      (DeclStmt 0x9d73670 <line:249:4, col:52>
        0x9d735d0 "const allocator_type __a =
          (CallExpr 0x9d73650 <col:31, col:51> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9d73618 <col:31, col:37> '<dependent type>' lvalue
              (CXXThisExpr 0x9d73608 <col:31> 'basic_string<_CharT, _Traits, _Alloc> *' this)))")
      (DeclStmt 0x9d73840 <line:250:4, col:71>
        0x9d736b0 "_CharT *__tmp =
          (CallExpr 0x9d73818 <col:20, col:70> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9d73758 <col:20, col:36> '<dependent type>' lvalue
              (CallExpr 0x9d73738 <col:20, col:33> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9d73700 <col:20, col:26> '<dependent type>' lvalue
                  (DeclRefExpr 0x9d736e4 <col:20> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d73200 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))
            (DeclRefExpr 0x9d7378c <col:44> 'const allocator_type':'const _Alloc' lvalue Var 0x9d735d0 '__a' 'const allocator_type':'const _Alloc')
            (CallExpr 0x9d737f8 <col:49, col:69> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9d737c0 <col:49, col:55> '<dependent type>' lvalue
                (DeclRefExpr 0x9d737a4 <col:49> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d73200 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))")
      (CallExpr 0x9d738f0 <line:251:4, col:28> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d738a0 <col:4, col:14> '<dependent type>' lvalue
          (CallExpr 0x9d73880 <col:4, col:11> '<dependent type>'
            (MemberExpr 0x9d73860 <col:4> '<bound member function type>' ->_M_rep 0x9d268a0
              (CXXThisExpr 0x9d73850 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (DeclRefExpr 0x9d738d4 <col:25> 'const allocator_type':'const _Alloc' lvalue Var 0x9d735d0 '__a' 'const allocator_type':'const _Alloc'))
      (CallExpr 0x9d73978 <line:252:4, col:17> '<dependent type>'
        (UnresolvedMemberExpr 0x9d73920 <col:4> '<bound member function type>' lvalue)
        (DeclRefExpr 0x9d73960 <col:12> '_CharT *' lvalue Var 0x9d736b0 '__tmp' '_CharT *')))
    <<<NULL>>>)
  (ReturnStmt 0x9d73a00 <line:254:7, col:15>
    (UnaryOperator 0x9d739e8 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9d739d8 <col:15> 'basic_string<_CharT, _Traits, _Alloc> *' this))))


    basic_string<_CharT, _Traits, _Alloc> &assign(const _CharT *__s, size_type __n) (CompoundStmt 0x9d74a70 </usr/include/c++/4.6/bits/basic_string.tcc:261:5, line:277:6>
  (NullStmt 0x9d741b8 <line:262:46>)
  (CallExpr 0x9d742a8 <line:263:7, col:64> '<dependent type>'
    (MemberExpr 0x9d741d8 <col:7> '<bound member function type>' ->_M_check_length 0x9d26d70
      (CXXThisExpr 0x9d741c8 <col:7> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (CallExpr 0x9d74240 <col:23, col:34> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9d74208 <col:23, col:29> '<dependent type>' lvalue
        (CXXThisExpr 0x9d741f8 <col:23> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
    (DeclRefExpr 0x9d7425c <col:37> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d73f30 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0x9d74274 <col:42> 'const char [21]' lvalue "basic_string::assign"))
  (IfStmt 0x9d74a50 <line:264:7, line:276:2>
    <<<NULL>>>
    (BinaryOperator 0x9d743e0 <line:264:11, col:54> '<dependent type>' '||'
      (CallExpr 0x9d74318 <col:11, col:26> '<dependent type>'
        (MemberExpr 0x9d742e0 <col:11> '<bound member function type>' ->_M_disjunct 0x9d27010
          (CXXThisExpr 0x9d742d0 <col:11> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x9d74300 <col:23> 'const _CharT *' lvalue ParmVar 0x9d73ef0 '__s' 'const _CharT *'))
      (CallExpr 0x9d743c0 <col:31, col:54> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d74388 <col:31, col:41> '<dependent type>' lvalue
          (CallExpr 0x9d74368 <col:31, col:38> '<dependent type>'
            (MemberExpr 0x9d74348 <col:31> '<bound member function type>' ->_M_rep 0x9d268a0
              (CXXThisExpr 0x9d74338 <col:31> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
    (ReturnStmt 0x9d74530 <line:265:2, col:61>
      (CallExpr 0x9d74500 <col:9, col:61> '<dependent type>'
        (MemberExpr 0x9d74408 <col:9> '<bound member function type>' ->_M_replace_safe 0x9d3b8f0
          (CXXThisExpr 0x9d743f8 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (CXXUnresolvedConstructExpr 0x9d74448 <col:25, col:36> 'size_type':'typename _CharT_alloc_type::size_type'
          (IntegerLiteral 0x9d74430 <col:35> 'int' 0))
        (CallExpr 0x9d744b0 <col:39, col:50> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9d74478 <col:39, col:45> '<dependent type>' lvalue
            (CXXThisExpr 0x9d74468 <col:39> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
        (DeclRefExpr 0x9d744cc <col:53> 'const _CharT *' lvalue ParmVar 0x9d73ef0 '__s' 'const _CharT *')
        (DeclRefExpr 0x9d744e4 <col:58> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d73f30 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))
    (CompoundStmt 0x9d74a30 <line:267:2, line:276:2>
      (DeclStmt 0x9d74670 <line:269:4, col:43>
        0x9d74550 "const size_type __pos =
          (CXXOperatorCallExpr 0x9d74648 <col:28, col:42> '<dependent type>'
            (UnresolvedLookupExpr 0x9d74610 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
            (DeclRefExpr 0x9d74584 <col:28> 'const _CharT *' lvalue ParmVar 0x9d73ef0 '__s' 'const _CharT *')
            (CallExpr 0x9d745f0 <col:34, col:42> '<dependent type>'
              (UnresolvedMemberExpr 0x9d745b0 <col:34> '<bound member function type>' lvalue)))")
      (IfStmt 0x9d74918 <line:270:4, line:273:33>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9d746f8 <line:270:8, col:17> '<dependent type>'
          (UnresolvedLookupExpr 0x9d746b0 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bae1e0 0x9bc3fc0 0x9bc7850 0x9d64480 0x9d649b0 0x9d64ee0)
          (DeclRefExpr 0x9d74680 <col:8> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d74550 '__pos' 'const size_type':'const typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0x9d74698 <col:17> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d73f30 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
        (CallExpr 0x9d747d8 <line:271:6, col:33> '<dependent type>'
          (DeclRefExpr 0x9d7471c <col:6> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9d271e0 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
          (CallExpr 0x9d74788 <col:14, col:22> '<dependent type>'
            (UnresolvedMemberExpr 0x9d74748 <col:14> '<bound member function type>' lvalue))
          (DeclRefExpr 0x9d747a4 <col:25> 'const _CharT *' lvalue ParmVar 0x9d73ef0 '__s' 'const _CharT *')
          (DeclRefExpr 0x9d747bc <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d73f30 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
        (IfStmt 0x9d748f8 <line:272:9, line:273:33>
          <<<NULL>>>
          (DeclRefExpr 0x9d74800 <line:272:13> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d74550 '__pos' 'const size_type':'const typename _CharT_alloc_type::size_type')
          (CallExpr 0x9d748d0 <line:273:6, col:33> '<dependent type>'
            (DeclRefExpr 0x9d74818 <col:6> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9d27350 '_M_move' 'void (_CharT *, const _CharT *, size_type)')
            (CallExpr 0x9d74880 <col:14, col:22> '<dependent type>'
              (UnresolvedMemberExpr 0x9d74840 <col:14> '<bound member function type>' lvalue))
            (DeclRefExpr 0x9d7489c <col:25> 'const _CharT *' lvalue ParmVar 0x9d73ef0 '__s' 'const _CharT *')
            (DeclRefExpr 0x9d748b4 <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d73f30 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
          <<<NULL>>>))
      (CallExpr 0x9d749d8 <line:274:4, col:44> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d74988 <col:4, col:14> '<dependent type>' lvalue
          (CallExpr 0x9d74968 <col:4, col:11> '<dependent type>'
            (MemberExpr 0x9d74948 <col:4> '<bound member function type>' ->_M_rep 0x9d268a0
              (CXXThisExpr 0x9d74938 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (DeclRefExpr 0x9d749bc <col:41> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d73f30 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
      (ReturnStmt 0x9d74a20 <line:275:4, col:12>
        (UnaryOperator 0x9d74a08 <col:11, col:12> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9d749f8 <col:12> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))


    basic_string<_CharT, _Traits, _Alloc> &append(size_type __n, _CharT __c) (CompoundStmt 0x9d75970 </usr/include/c++/4.6/bits/basic_string.tcc:283:5, line:294:5>
  (IfStmt 0x9d75918 <line:284:7, line:292:2>
    <<<NULL>>>
    (DeclRefExpr 0x9d751e8 <line:284:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d74f20 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (CompoundStmt 0x9d758f0 <line:285:2, line:292:2>
      (CallExpr 0x9d752b8 <line:286:4, col:61> '<dependent type>'
        (MemberExpr 0x9d75210 <col:4> '<bound member function type>' ->_M_check_length 0x9d26d70
          (CXXThisExpr 0x9d75200 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (CXXUnresolvedConstructExpr 0x9d75250 <col:20, col:31> 'size_type':'typename _CharT_alloc_type::size_type'
          (IntegerLiteral 0x9d75238 <col:30> 'int' 0))
        (DeclRefExpr 0x9d7526c <col:34> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d74f20 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
        (StringLiteral 0x9d75284 <col:39> 'const char [21]' lvalue "basic_string::append"))
      (DeclStmt 0x9d75418 <line:287:4, col:46>
        0x9d752f0 "const size_type __len =
          (CXXOperatorCallExpr 0x9d753f0 <col:28, col:45> '<dependent type>'
            (UnresolvedLookupExpr 0x9d753a8 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d5c5c0 0x9d5cb10 0x9d5d090 0x9d5d890)
            (DeclRefExpr 0x9d75324 <col:28> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d74f20 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
            (CallExpr 0x9d75388 <col:34, col:45> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9d75350 <col:34, col:40> '<dependent type>' lvalue
                (CXXThisExpr 0x9d75340 <col:34> 'basic_string<_CharT, _Traits, _Alloc> *' this))))")
      (IfStmt 0x9d75658 <line:288:4, line:289:25>
        <<<NULL>>>
        (BinaryOperator 0x9d755c0 <line:288:8, col:59> '<dependent type>' '||'
          (CXXOperatorCallExpr 0x9d754f0 <col:8, col:31> '<dependent type>'
            (UnresolvedLookupExpr 0x9d754a8 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bad330 0x9bc37b0 0x9bc6740 0x9d622b0 0x9d627e0 0x9d62d10)
            (DeclRefExpr 0x9d75428 <col:8> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d752f0 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type')
            (CallExpr 0x9d75488 <col:16, col:31> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9d75450 <col:16, col:22> '<dependent type>' lvalue
                (CXXThisExpr 0x9d75440 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
          (CallExpr 0x9d755a0 <col:36, col:59> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9d75568 <col:36, col:46> '<dependent type>' lvalue
              (CallExpr 0x9d75548 <col:36, col:43> '<dependent type>'
                (MemberExpr 0x9d75528 <col:36> '<bound member function type>' ->_M_rep 0x9d268a0
                  (CXXThisExpr 0x9d75518 <col:36> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
        (CallExpr 0x9d75638 <line:289:6, col:25> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9d755e8 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x9d755d8 <col:6> 'basic_string<_CharT, _Traits, _Alloc> *' this))
          (DeclRefExpr 0x9d7561c <col:20> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d752f0 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)
      (CallExpr 0x9d75808 <line:290:4, col:48> '<dependent type>'
        (DeclRefExpr 0x9d75674 <col:4> 'void (_CharT *, size_type, _CharT)' lvalue CXXMethod 0x9d27510 '_M_assign' 'void (_CharT *, size_type, _CharT)')
        (CXXOperatorCallExpr 0x9d757b0 <col:14, col:37> '<dependent type>'
          (UnresolvedLookupExpr 0x9d75768 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d5c5c0 0x9d5cb10 0x9d5d090 0x9d5d890)
          (CallExpr 0x9d756e0 <col:14, col:22> '<dependent type>'
            (UnresolvedMemberExpr 0x9d756a0 <col:14> '<bound member function type>' lvalue))
          (CallExpr 0x9d75748 <col:26, col:37> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9d75710 <col:26, col:32> '<dependent type>' lvalue
              (CXXThisExpr 0x9d75700 <col:26> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (DeclRefExpr 0x9d757d4 <col:40> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d74f20 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9d757ec <col:45> '_CharT' lvalue ParmVar 0x9d74f60 '__c' '_CharT'))
      (CallExpr 0x9d758d0 <line:291:4, col:46> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d75880 <col:4, col:14> '<dependent type>' lvalue
          (CallExpr 0x9d75860 <col:4, col:11> '<dependent type>'
            (MemberExpr 0x9d75840 <col:4> '<bound member function type>' ->_M_rep 0x9d268a0
              (CXXThisExpr 0x9d75830 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (DeclRefExpr 0x9d758b4 <col:41> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d752f0 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (ReturnStmt 0x9d75960 <line:293:7, col:15>
    (UnaryOperator 0x9d75948 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9d75938 <col:15> 'basic_string<_CharT, _Traits, _Alloc> *' this))))


    basic_string<_CharT, _Traits, _Alloc> &append(const _CharT *__s, size_type __n) (CompoundStmt 0x9d76c68 </usr/include/c++/4.6/bits/basic_string.tcc:300:5, line:321:5>
  (NullStmt 0x9d76118 <line:301:46>)
  (IfStmt 0x9d76c10 <line:302:7, line:319:2>
    <<<NULL>>>
    (DeclRefExpr 0x9d76124 <line:302:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d75e90 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (CompoundStmt 0x9d76be8 <line:303:2, line:319:2>
      (CallExpr 0x9d76208 <line:304:4, col:61> '<dependent type>'
        (MemberExpr 0x9d76150 <col:4> '<bound member function type>' ->_M_check_length 0x9d26d70
          (CXXThisExpr 0x9d76140 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (CXXUnresolvedConstructExpr 0x9d76190 <col:20, col:31> 'size_type':'typename _CharT_alloc_type::size_type'
          (IntegerLiteral 0x9d76178 <col:30> 'int' 0))
        (DeclRefExpr 0x9d761c0 <col:34> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d75e90 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
        (StringLiteral 0x9d761d8 <col:39> 'const char [21]' lvalue "basic_string::append"))
      (DeclStmt 0x9d76368 <line:305:4, col:46>
        0x9d76240 "const size_type __len =
          (CXXOperatorCallExpr 0x9d76340 <col:28, col:45> '<dependent type>'
            (UnresolvedLookupExpr 0x9d762f8 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d5c5c0 0x9d5cb10 0x9d5d090 0x9d5d890)
            (DeclRefExpr 0x9d76274 <col:28> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d75e90 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
            (CallExpr 0x9d762d8 <col:34, col:45> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9d762a0 <col:34, col:40> '<dependent type>' lvalue
                (CXXThisExpr 0x9d76290 <col:34> 'basic_string<_CharT, _Traits, _Alloc> *' this))))")
      (IfStmt 0x9d76950 <line:306:4, line:316:6>
        <<<NULL>>>
        (BinaryOperator 0x9d76510 <line:306:8, col:59> '<dependent type>' '||'
          (CXXOperatorCallExpr 0x9d76440 <col:8, col:31> '<dependent type>'
            (UnresolvedLookupExpr 0x9d763f8 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bad330 0x9bc37b0 0x9bc6740 0x9d622b0 0x9d627e0 0x9d62d10)
            (DeclRefExpr 0x9d76378 <col:8> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d76240 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type')
            (CallExpr 0x9d763d8 <col:16, col:31> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9d763a0 <col:16, col:22> '<dependent type>' lvalue
                (CXXThisExpr 0x9d76390 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
          (CallExpr 0x9d764f0 <col:36, col:59> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9d764b8 <col:36, col:46> '<dependent type>' lvalue
              (CallExpr 0x9d76498 <col:36, col:43> '<dependent type>'
                (MemberExpr 0x9d76478 <col:36> '<bound member function type>' ->_M_rep 0x9d268a0
                  (CXXThisExpr 0x9d76468 <col:36> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
        (CompoundStmt 0x9d76938 <line:307:6, line:316:6>
          (IfStmt 0x9d76918 <line:308:8, line:315:3>
            <<<NULL>>>
            (CallExpr 0x9d76570 <line:308:12, col:27> '<dependent type>'
              (MemberExpr 0x9d76538 <col:12> '<bound member function type>' ->_M_disjunct 0x9d27010
                (CXXThisExpr 0x9d76528 <col:12> 'basic_string<_CharT, _Traits, _Alloc> *' this))
              (DeclRefExpr 0x9d76558 <col:24> 'const _CharT *' lvalue ParmVar 0x9d75e50 '__s' 'const _CharT *'))
            (CallExpr 0x9d765f0 <line:309:3, col:22> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9d765a0 <col:3, col:9> '<dependent type>' lvalue
                (CXXThisExpr 0x9d76590 <col:3> 'basic_string<_CharT, _Traits, _Alloc> *' this))
              (DeclRefExpr 0x9d765d4 <col:17> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d76240 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))
            (CompoundStmt 0x9d768f8 <line:311:3, line:315:3>
              (DeclStmt 0x9d76740 <line:312:5, col:44>
                0x9d76620 "const size_type __off =
                  (CXXOperatorCallExpr 0x9d76718 <col:29, col:43> '<dependent type>'
                    (UnresolvedLookupExpr 0x9d766e0 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
                    (DeclRefExpr 0x9d76654 <col:29> 'const _CharT *' lvalue ParmVar 0x9d75e50 '__s' 'const _CharT *')
                    (CallExpr 0x9d766c0 <col:35, col:43> '<dependent type>'
                      (UnresolvedMemberExpr 0x9d76680 <col:35> '<bound member function type>' lvalue)))")
              (CallExpr 0x9d767b0 <line:313:5, col:24> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9d76760 <col:5, col:11> '<dependent type>' lvalue
                  (CXXThisExpr 0x9d76750 <col:5> 'basic_string<_CharT, _Traits, _Alloc> *' this))
                (DeclRefExpr 0x9d76794 <col:19> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d76240 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))
              (BinaryOperator 0x9d768e0 <line:314:5, col:23> '<dependent type>' '='
                (DeclRefExpr 0x9d767d0 <col:5> 'const _CharT *' lvalue ParmVar 0x9d75e50 '__s' 'const _CharT *')
                (CXXOperatorCallExpr 0x9d768b8 <col:11, col:23> '<dependent type>'
                  (UnresolvedLookupExpr 0x9d76870 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d5c5c0 0x9d5cb10 0x9d5d090 0x9d5d890)
                  (CallExpr 0x9d76838 <col:11, col:19> '<dependent type>'
                    (UnresolvedMemberExpr 0x9d767f8 <col:11> '<bound member function type>' lvalue))
                  (DeclRefExpr 0x9d76854 <col:23> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d76620 '__off' 'const size_type':'const typename _CharT_alloc_type::size_type'))))))
        <<<NULL>>>)
      (CallExpr 0x9d76b00 <line:317:4, col:46> '<dependent type>'
        (DeclRefExpr 0x9d7696c <col:4> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9d271e0 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
        (CXXOperatorCallExpr 0x9d76aa8 <col:12, col:35> '<dependent type>'
          (UnresolvedLookupExpr 0x9d76a60 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d5c5c0 0x9d5cb10 0x9d5d090 0x9d5d890)
          (CallExpr 0x9d769d8 <col:12, col:20> '<dependent type>'
            (UnresolvedMemberExpr 0x9d76998 <col:12> '<bound member function type>' lvalue))
          (CallExpr 0x9d76a40 <col:24, col:35> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9d76a08 <col:24, col:30> '<dependent type>' lvalue
              (CXXThisExpr 0x9d769f8 <col:24> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (DeclRefExpr 0x9d76acc <col:38> 'const _CharT *' lvalue ParmVar 0x9d75e50 '__s' 'const _CharT *')
        (DeclRefExpr 0x9d76ae4 <col:43> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d75e90 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
      (CallExpr 0x9d76bc8 <line:318:4, col:46> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d76b78 <col:4, col:14> '<dependent type>' lvalue
          (CallExpr 0x9d76b58 <col:4, col:11> '<dependent type>'
            (MemberExpr 0x9d76b38 <col:4> '<bound member function type>' ->_M_rep 0x9d268a0
              (CXXThisExpr 0x9d76b28 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (DeclRefExpr 0x9d76bac <col:41> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d76240 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (ReturnStmt 0x9d76c58 <line:320:7, col:15>
    (UnaryOperator 0x9d76c40 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9d76c30 <col:15> 'basic_string<_CharT, _Traits, _Alloc> *' this))))


    basic_string<_CharT, _Traits, _Alloc> &append(const basic_string<_CharT, _Traits, _Alloc> &__str) (CompoundStmt 0x9d77b70 </usr/include/c++/4.6/bits/basic_string.tcc:327:5, line:338:5>
  (DeclStmt 0x9d77468 <line:328:7, col:44>
    0x9d773c0 "const size_type __size =
      (CallExpr 0x9d77448 <col:32, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d77410 <col:32, col:38> '<dependent type>' lvalue
          (DeclRefExpr 0x9d773f4 <col:32> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d77130 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))")
  (IfStmt 0x9d77b18 <line:329:7, line:336:2>
    <<<NULL>>>
    (DeclRefExpr 0x9d77478 <line:329:11> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d773c0 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
    (CompoundStmt 0x9d77af8 <line:330:2, line:336:2>
      (DeclStmt 0x9d775c8 <line:331:4, col:49>
        0x9d774a0 "const size_type __len =
          (CXXOperatorCallExpr 0x9d775a0 <col:28, col:48> '<dependent type>'
            (UnresolvedLookupExpr 0x9d77558 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d5c5c0 0x9d5cb10 0x9d5d090 0x9d5d890)
            (DeclRefExpr 0x9d774d4 <col:28> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d773c0 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
            (CallExpr 0x9d77538 <col:37, col:48> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9d77500 <col:37, col:43> '<dependent type>' lvalue
                (CXXThisExpr 0x9d774f0 <col:37> 'basic_string<_CharT, _Traits, _Alloc> *' this))))")
      (IfStmt 0x9d77808 <line:332:4, line:333:25>
        <<<NULL>>>
        (BinaryOperator 0x9d77770 <line:332:8, col:59> '<dependent type>' '||'
          (CXXOperatorCallExpr 0x9d776a0 <col:8, col:31> '<dependent type>'
            (UnresolvedLookupExpr 0x9d77658 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bad330 0x9bc37b0 0x9bc6740 0x9d622b0 0x9d627e0 0x9d62d10)
            (DeclRefExpr 0x9d775d8 <col:8> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d774a0 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type')
            (CallExpr 0x9d77638 <col:16, col:31> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9d77600 <col:16, col:22> '<dependent type>' lvalue
                (CXXThisExpr 0x9d775f0 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
          (CallExpr 0x9d77750 <col:36, col:59> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9d77718 <col:36, col:46> '<dependent type>' lvalue
              (CallExpr 0x9d776f8 <col:36, col:43> '<dependent type>'
                (MemberExpr 0x9d776d8 <col:36> '<bound member function type>' ->_M_rep 0x9d268a0
                  (CXXThisExpr 0x9d776c8 <col:36> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
        (CallExpr 0x9d777e8 <line:333:6, col:25> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9d77798 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x9d77788 <col:6> 'basic_string<_CharT, _Traits, _Alloc> *' this))
          (DeclRefExpr 0x9d777cc <col:20> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d774a0 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)
      (CallExpr 0x9d77a10 <line:334:4, col:61> '<dependent type>'
        (DeclRefExpr 0x9d77824 <col:4> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9d271e0 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
        (CXXOperatorCallExpr 0x9d77960 <col:12, col:35> '<dependent type>'
          (UnresolvedLookupExpr 0x9d77918 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d5c5c0 0x9d5cb10 0x9d5d090 0x9d5d890)
          (CallExpr 0x9d77890 <col:12, col:20> '<dependent type>'
            (UnresolvedMemberExpr 0x9d77850 <col:12> '<bound member function type>' lvalue))
          (CallExpr 0x9d778f8 <col:24, col:35> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9d778c0 <col:24, col:30> '<dependent type>' lvalue
              (CXXThisExpr 0x9d778b0 <col:24> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (CallExpr 0x9d779d8 <col:38, col:52> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9d779a0 <col:38, col:44> '<dependent type>' lvalue
            (DeclRefExpr 0x9d77984 <col:38> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d77130 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
        (DeclRefExpr 0x9d779f4 <col:55> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d773c0 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type'))
      (CallExpr 0x9d77ad8 <line:335:4, col:46> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d77a88 <col:4, col:14> '<dependent type>' lvalue
          (CallExpr 0x9d77a68 <col:4, col:11> '<dependent type>'
            (MemberExpr 0x9d77a48 <col:4> '<bound member function type>' ->_M_rep 0x9d268a0
              (CXXThisExpr 0x9d77a38 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (DeclRefExpr 0x9d77abc <col:41> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d774a0 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (ReturnStmt 0x9d77b60 <line:337:7, col:15>
    (UnaryOperator 0x9d77b48 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9d77b38 <col:15> 'basic_string<_CharT, _Traits, _Alloc> *' this))))


    basic_string<_CharT, _Traits, _Alloc> &append(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos, size_type __n) (CompoundStmt 0x9d78c68 </usr/include/c++/4.6/bits/basic_string.tcc:344:5, line:356:5>
  (CallExpr 0x9d783e8 <line:345:7, col:51> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9d78368 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0x9d7834c <col:7> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d78030 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
    (DeclRefExpr 0x9d7839c <col:22> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d78070 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0x9d783b4 <col:29> 'const char [21]' lvalue "basic_string::append"))
  (BinaryOperator 0x9d784d0 <line:346:7, col:38> '<dependent type>' '='
    (DeclRefExpr 0x9d7840c <col:7> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d780b0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0x9d784a8 <col:13, col:38> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9d78440 <col:13, col:19> '<dependent type>' lvalue
        (DeclRefExpr 0x9d78424 <col:13> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d78030 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
      (DeclRefExpr 0x9d78474 <col:28> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d78070 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9d7848c <col:35> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d780b0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))
  (IfStmt 0x9d78c10 <line:347:7, line:354:2>
    <<<NULL>>>
    (DeclRefExpr 0x9d784e8 <line:347:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d780b0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (CompoundStmt 0x9d78bf0 <line:348:2, line:354:2>
      (DeclStmt 0x9d78638 <line:349:4, col:46>
        0x9d78510 "const size_type __len =
          (CXXOperatorCallExpr 0x9d78610 <col:28, col:45> '<dependent type>'
            (UnresolvedLookupExpr 0x9d785c8 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d5c5c0 0x9d5cb10 0x9d5d090 0x9d5d890)
            (DeclRefExpr 0x9d78544 <col:28> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d780b0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
            (CallExpr 0x9d785a8 <col:34, col:45> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9d78570 <col:34, col:40> '<dependent type>' lvalue
                (CXXThisExpr 0x9d78560 <col:34> 'basic_string<_CharT, _Traits, _Alloc> *' this))))")
      (IfStmt 0x9d78878 <line:350:4, line:351:25>
        <<<NULL>>>
        (BinaryOperator 0x9d787e0 <line:350:8, col:59> '<dependent type>' '||'
          (CXXOperatorCallExpr 0x9d78710 <col:8, col:31> '<dependent type>'
            (UnresolvedLookupExpr 0x9d786c8 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bad330 0x9bc37b0 0x9bc6740 0x9d622b0 0x9d627e0 0x9d62d10)
            (DeclRefExpr 0x9d78648 <col:8> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d78510 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type')
            (CallExpr 0x9d786a8 <col:16, col:31> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9d78670 <col:16, col:22> '<dependent type>' lvalue
                (CXXThisExpr 0x9d78660 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
          (CallExpr 0x9d787c0 <col:36, col:59> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9d78788 <col:36, col:46> '<dependent type>' lvalue
              (CallExpr 0x9d78768 <col:36, col:43> '<dependent type>'
                (MemberExpr 0x9d78748 <col:36> '<bound member function type>' ->_M_rep 0x9d268a0
                  (CXXThisExpr 0x9d78738 <col:36> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
        (CallExpr 0x9d78858 <line:351:6, col:25> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9d78808 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x9d787f8 <col:6> 'basic_string<_CharT, _Traits, _Alloc> *' this))
          (DeclRefExpr 0x9d7883c <col:20> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d78510 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)
      (CallExpr 0x9d78b08 <line:352:4, col:66> '<dependent type>'
        (DeclRefExpr 0x9d78894 <col:4> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9d271e0 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
        (CXXOperatorCallExpr 0x9d789d0 <col:12, col:35> '<dependent type>'
          (UnresolvedLookupExpr 0x9d78988 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d5c5c0 0x9d5cb10 0x9d5d090 0x9d5d890)
          (CallExpr 0x9d78900 <col:12, col:20> '<dependent type>'
            (UnresolvedMemberExpr 0x9d788c0 <col:12> '<bound member function type>' lvalue))
          (CallExpr 0x9d78968 <col:24, col:35> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9d78930 <col:24, col:30> '<dependent type>' lvalue
              (CXXThisExpr 0x9d78920 <col:24> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (CXXOperatorCallExpr 0x9d78ac8 <col:38, col:56> '<dependent type>'
          (UnresolvedLookupExpr 0x9d78a80 <col:54, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d5c5c0 0x9d5cb10 0x9d5d090 0x9d5d890)
          (CallExpr 0x9d78a48 <col:38, col:52> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9d78a10 <col:38, col:44> '<dependent type>' lvalue
              (DeclRefExpr 0x9d789f4 <col:38> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d78030 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
          (DeclRefExpr 0x9d78a64 <col:56> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d78070 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        (DeclRefExpr 0x9d78aec <col:63> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d780b0 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
      (CallExpr 0x9d78bd0 <line:353:4, col:46> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d78b80 <col:4, col:14> '<dependent type>' lvalue
          (CallExpr 0x9d78b60 <col:4, col:11> '<dependent type>'
            (MemberExpr 0x9d78b40 <col:4> '<bound member function type>' ->_M_rep 0x9d268a0
              (CXXThisExpr 0x9d78b30 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (DeclRefExpr 0x9d78bb4 <col:41> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d78510 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (ReturnStmt 0x9d78c58 <line:355:7, col:15>
    (UnaryOperator 0x9d78c40 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9d78c30 <col:15> 'basic_string<_CharT, _Traits, _Alloc> *' this))))


    basic_string<_CharT, _Traits, _Alloc> &insert(size_type __pos, const _CharT *__s, size_type __n) (CompoundStmt 0x9d7a470 </usr/include/c++/4.6/bits/basic_string.tcc:362:6, line:387:6>
  (NullStmt 0x9d79470 <line:363:47>)
  (CallExpr 0x9d794f8 <line:364:8, col:46> '<dependent type>'
    (MemberExpr 0x9d79490 <col:8> '<bound member function type>' ->_M_check 0x9d26bb0
      (CXXThisExpr 0x9d79480 <col:8> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9d794b0 <col:17> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d79120 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0x9d794c8 <col:24> 'const char [21]' lvalue "basic_string::insert"))
  (CallExpr 0x9d795d8 <line:365:8, col:65> '<dependent type>'
    (MemberExpr 0x9d79530 <col:8> '<bound member function type>' ->_M_check_length 0x9d26d70
      (CXXThisExpr 0x9d79520 <col:8> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (CXXUnresolvedConstructExpr 0x9d79570 <col:24, col:35> 'size_type':'typename _CharT_alloc_type::size_type'
      (IntegerLiteral 0x9d79558 <col:34> 'int' 0))
    (DeclRefExpr 0x9d7958c <col:38> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d791d0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0x9d795a4 <col:43> 'const char [21]' lvalue "basic_string::insert"))
  (IfStmt 0x9d7a450 <line:366:8, line:386:10>
    <<<NULL>>>
    (BinaryOperator 0x9d79710 <line:366:12, col:55> '<dependent type>' '||'
      (CallExpr 0x9d79648 <col:12, col:27> '<dependent type>'
        (MemberExpr 0x9d79610 <col:12> '<bound member function type>' ->_M_disjunct 0x9d27010
          (CXXThisExpr 0x9d79600 <col:12> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x9d79630 <col:24> 'const _CharT *' lvalue ParmVar 0x9d79190 '__s' 'const _CharT *'))
      (CallExpr 0x9d796f0 <col:32, col:55> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d796b8 <col:32, col:42> '<dependent type>' lvalue
          (CallExpr 0x9d79698 <col:32, col:39> '<dependent type>'
            (MemberExpr 0x9d79678 <col:32> '<bound member function type>' ->_M_rep 0x9d268a0
              (CXXThisExpr 0x9d79668 <col:32> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
    (ReturnStmt 0x9d79810 <line:367:10, col:62>
      (CallExpr 0x9d797e0 <col:17, col:62> '<dependent type>'
        (MemberExpr 0x9d79738 <col:17> '<bound member function type>' ->_M_replace_safe 0x9d3b8f0
          (CXXThisExpr 0x9d79728 <col:17> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x9d79758 <col:33> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d79120 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (CXXUnresolvedConstructExpr 0x9d79790 <col:40, col:51> 'size_type':'typename _CharT_alloc_type::size_type'
          (IntegerLiteral 0x9d79778 <col:50> 'int' 0))
        (DeclRefExpr 0x9d797ac <col:54> 'const _CharT *' lvalue ParmVar 0x9d79190 '__s' 'const _CharT *')
        (DeclRefExpr 0x9d797c4 <col:59> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d791d0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))
    (CompoundStmt 0x9d7a428 <line:369:10, line:386:10>
      (DeclStmt 0x9d79950 <line:371:12, col:51>
        0x9d79830 "const size_type __off =
          (CXXOperatorCallExpr 0x9d79928 <col:36, col:50> '<dependent type>'
            (UnresolvedLookupExpr 0x9d798f0 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
            (DeclRefExpr 0x9d79864 <col:36> 'const _CharT *' lvalue ParmVar 0x9d79190 '__s' 'const _CharT *')
            (CallExpr 0x9d798d0 <col:42, col:50> '<dependent type>'
              (UnresolvedMemberExpr 0x9d79890 <col:42> '<bound member function type>' lvalue)))")
      (CallExpr 0x9d799d8 <line:372:12, col:35> '<dependent type>'
        (MemberExpr 0x9d79970 <col:12> '<bound member function type>' ->_M_mutate 0x9d281b0
          (CXXThisExpr 0x9d79960 <col:12> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x9d79990 <col:22> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d79120 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (IntegerLiteral 0x9d799a8 <col:29> 'int' 0)
        (DeclRefExpr 0x9d799c0 <col:32> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d791d0 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
      (BinaryOperator 0x9d79b10 <line:373:12, col:30> '<dependent type>' '='
        (DeclRefExpr 0x9d79a00 <col:12> 'const _CharT *' lvalue ParmVar 0x9d79190 '__s' 'const _CharT *')
        (CXXOperatorCallExpr 0x9d79ae8 <col:18, col:30> '<dependent type>'
          (UnresolvedLookupExpr 0x9d79aa0 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d5c5c0 0x9d5cb10 0x9d5d090 0x9d5d890)
          (CallExpr 0x9d79a68 <col:18, col:26> '<dependent type>'
            (UnresolvedMemberExpr 0x9d79a28 <col:18> '<bound member function type>' lvalue))
          (DeclRefExpr 0x9d79a84 <col:30> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d79830 '__off' 'const size_type':'const typename _CharT_alloc_type::size_type')))
      (DeclStmt 0x9d79c90 <line:374:12, col:43>
        0x9d79b60 "_CharT *__p =
          (CXXOperatorCallExpr 0x9d79c68 <col:26, col:38> '<dependent type>'
            (UnresolvedLookupExpr 0x9d79c20 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d5c5c0 0x9d5cb10 0x9d5d090 0x9d5d890)
            (CallExpr 0x9d79be8 <col:26, col:34> '<dependent type>'
              (UnresolvedMemberExpr 0x9d79ba8 <col:26> '<bound member function type>' lvalue))
            (DeclRefExpr 0x9d79c04 <col:38> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d79120 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))")
      (IfStmt 0x9d7a3d0 <line:375:12, line:384:14>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9d79da0 <line:375:16, col:30> '<dependent type>'
          (UnresolvedLookupExpr 0x9d79d58 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9badc90 0x9bc3ba0 0x9bc6b90 0x9d63390 0x9d638c0 0x9d63df0)
          (CXXOperatorCallExpr 0x9d79d18 <col:16, col:23> '<dependent type>'
            (UnresolvedLookupExpr 0x9d79cd0 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d5c5c0 0x9d5cb10 0x9d5d090 0x9d5d890)
            (DeclRefExpr 0x9d79ca0 <col:16> 'const _CharT *' lvalue ParmVar 0x9d79190 '__s' 'const _CharT *')
            (DeclRefExpr 0x9d79cb8 <col:23> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d791d0 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
          (DeclRefExpr 0x9d79d3c <col:30> '_CharT *' lvalue Var 0x9d79b60 '__p' '_CharT *'))
        (CallExpr 0x9d79e28 <line:376:14, col:35> '<dependent type>'
          (DeclRefExpr 0x9d79dc4 <col:14> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9d271e0 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
          (DeclRefExpr 0x9d79ddc <col:22> '_CharT *' lvalue Var 0x9d79b60 '__p' '_CharT *')
          (DeclRefExpr 0x9d79df4 <col:27> 'const _CharT *' lvalue ParmVar 0x9d79190 '__s' 'const _CharT *')
          (DeclRefExpr 0x9d79e0c <col:32> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d791d0 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
        (IfStmt 0x9d7a3b0 <line:377:17, line:384:14>
          <<<NULL>>>
          (CXXOperatorCallExpr 0x9d79ec8 <line:377:21, col:28> '<dependent type>'
            (UnresolvedLookupExpr 0x9d79e80 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bae1e0 0x9bc3fc0 0x9bc7850 0x9d64480 0x9d649b0 0x9d64ee0)
            (DeclRefExpr 0x9d79e50 <col:21> 'const _CharT *' lvalue ParmVar 0x9d79190 '__s' 'const _CharT *')
            (DeclRefExpr 0x9d79e68 <col:28> '_CharT *' lvalue Var 0x9d79b60 '__p' '_CharT *'))
          (CallExpr 0x9d79fd8 <line:378:14, col:41> '<dependent type>'
            (DeclRefExpr 0x9d79eec <col:14> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9d271e0 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
            (DeclRefExpr 0x9d79f04 <col:22> '_CharT *' lvalue Var 0x9d79b60 '__p' '_CharT *')
            (CXXOperatorCallExpr 0x9d79f98 <col:27, col:33> '<dependent type>'
              (UnresolvedLookupExpr 0x9d79f50 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d5c5c0 0x9d5cb10 0x9d5d090 0x9d5d890)
              (DeclRefExpr 0x9d79f1c <col:27> 'const _CharT *' lvalue ParmVar 0x9d79190 '__s' 'const _CharT *')
              (DeclRefExpr 0x9d79f34 <col:33> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d791d0 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
            (DeclRefExpr 0x9d79fbc <col:38> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d791d0 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
          (CompoundStmt 0x9d7a390 <line:380:14, line:384:14>
            (DeclStmt 0x9d7a0d8 <line:381:9, col:44>
              0x9d7a010 "const size_type __nleft =
                (CXXOperatorCallExpr 0x9d7a0b0 <col:35, col:41> '<dependent type>'
                  (UnresolvedLookupExpr 0x9d7a078 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
                  (DeclRefExpr 0x9d7a044 <col:35> '_CharT *' lvalue Var 0x9d79b60 '__p' '_CharT *')
                  (DeclRefExpr 0x9d7a05c <col:41> 'const _CharT *' lvalue ParmVar 0x9d79190 '__s' 'const _CharT *'))")
            (CallExpr 0x9d7a148 <line:382:16, col:41> '<dependent type>'
              (DeclRefExpr 0x9d7a0e8 <col:16> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9d271e0 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
              (DeclRefExpr 0x9d7a100 <col:24> '_CharT *' lvalue Var 0x9d79b60 '__p' '_CharT *')
              (DeclRefExpr 0x9d7a118 <col:29> 'const _CharT *' lvalue ParmVar 0x9d79190 '__s' 'const _CharT *')
              (DeclRefExpr 0x9d7a130 <col:34> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d7a010 '__nleft' 'const size_type':'const typename _CharT_alloc_type::size_type'))
            (CallExpr 0x9d7a368 <line:383:16, col:63> '<dependent type>'
              (DeclRefExpr 0x9d7a170 <col:16> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9d271e0 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
              (CXXOperatorCallExpr 0x9d7a210 <col:24, col:30> '<dependent type>'
                (UnresolvedLookupExpr 0x9d7a1c8 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d5c5c0 0x9d5cb10 0x9d5d090 0x9d5d890)
                (DeclRefExpr 0x9d7a188 <col:24> '_CharT *' lvalue Var 0x9d79b60 '__p' '_CharT *')
                (DeclRefExpr 0x9d7a1a0 <col:30> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d7a010 '__nleft' 'const size_type':'const typename _CharT_alloc_type::size_type'))
              (CXXOperatorCallExpr 0x9d7a2b0 <col:39, col:45> '<dependent type>'
                (UnresolvedLookupExpr 0x9d7a268 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d5c5c0 0x9d5cb10 0x9d5d090 0x9d5d890)
                (DeclRefExpr 0x9d7a234 <col:39> '_CharT *' lvalue Var 0x9d79b60 '__p' '_CharT *')
                (DeclRefExpr 0x9d7a24c <col:45> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d791d0 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
              (CXXOperatorCallExpr 0x9d7a340 <col:50, col:56> '<dependent type>'
                (UnresolvedLookupExpr 0x9d7a308 <col:54, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
                (DeclRefExpr 0x9d7a2d4 <col:50> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d791d0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
                (DeclRefExpr 0x9d7a2ec <col:56> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d7a010 '__nleft' 'const size_type':'const typename _CharT_alloc_type::size_type'))))))
      (ReturnStmt 0x9d7a418 <line:385:12, col:20>
        (UnaryOperator 0x9d7a400 <col:19, col:20> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9d7a3f0 <col:20> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))


    typename basic_string<_CharT, _Traits, _Alloc>::iterator erase(iterator __first, iterator __last) (CompoundStmt 0x9d7b178 </usr/include/c++/4.6/bits/basic_string.tcc:393:6, line:410:6>
  (NullStmt 0x9d7ac48 <line:395:28>)
  (DeclStmt 0x9d7ad28 <line:400:8, col:49>
    0x9d7ac60 "const size_type __size =
      (CXXOperatorCallExpr 0x9d7ad00 <col:33, col:42> '<dependent type>'
        (UnresolvedLookupExpr 0x9d7acc8 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
        (DeclRefExpr 0x9d7ac94 <col:33> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9d7a9c0 '__last' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0x9d7acac <col:42> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9d7a980 '__first' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'))")
  (IfStmt 0x9d7b158 <line:401:8, line:409:10>
    <<<NULL>>>
    (DeclRefExpr 0x9d7ad38 <line:401:12> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d7ac60 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
    (CompoundStmt 0x9d7b110 <line:402:3, line:407:3>
      (DeclStmt 0x9d7ae60 <line:403:5, col:50>
        0x9d7ad60 "const size_type __pos =
          (CXXOperatorCallExpr 0x9d7ae38 <col:29, col:49> '<dependent type>'
            (UnresolvedLookupExpr 0x9d7ae00 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
            (DeclRefExpr 0x9d7ad94 <col:29> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9d7a980 '__first' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
            (CallExpr 0x9d7ade0 <col:39, col:49> '<dependent type>'
              (MemberExpr 0x9d7adc0 <col:39> '<bound member function type>' ->_M_ibegin 0x9d26950
                (CXXThisExpr 0x9d7adb0 <col:39> 'basic_string<_CharT, _Traits, _Alloc> *' this))))")
      (CallExpr 0x9d7af10 <line:404:5, col:42> '<dependent type>'
        (MemberExpr 0x9d7ae80 <col:5> '<bound member function type>' ->_M_mutate 0x9d281b0
          (CXXThisExpr 0x9d7ae70 <col:5> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x9d7aea0 <col:15> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d7ad60 '__pos' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9d7aeb8 <col:22> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d7ac60 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (CXXUnresolvedConstructExpr 0x9d7aef0 <col:30, col:41> 'size_type':'typename _CharT_alloc_type::size_type'
          (IntegerLiteral 0x9d7aed8 <col:40> 'int' 0)))
      (CallExpr 0x9d7afc0 <line:405:5, col:29> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d7af88 <col:5, col:15> '<dependent type>' lvalue
          (CallExpr 0x9d7af68 <col:5, col:12> '<dependent type>'
            (MemberExpr 0x9d7af48 <col:5> '<bound member function type>' ->_M_rep 0x9d268a0
              (CXXThisExpr 0x9d7af38 <col:5> 'basic_string<_CharT, _Traits, _Alloc> *' this)))))
      (ReturnStmt 0x9d7b100 <line:406:5, col:38>
        (CXXUnresolvedConstructExpr 0x9d7b0e0 <col:12, col:38> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'
          (CXXOperatorCallExpr 0x9d7b0b8 <col:21, col:33> '<dependent type>'
            (UnresolvedLookupExpr 0x9d7b070 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d5c5c0 0x9d5cb10 0x9d5d090 0x9d5d890)
            (CallExpr 0x9d7b038 <col:21, col:29> '<dependent type>'
              (UnresolvedMemberExpr 0x9d7aff8 <col:21> '<bound member function type>' lvalue))
            (DeclRefExpr 0x9d7b054 <col:33> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d7ad60 '__pos' 'const size_type':'const typename _CharT_alloc_type::size_type')))))
    (ReturnStmt 0x9d7b148 <line:409:3, col:10>
      (DeclRefExpr 0x9d7b130 <col:10> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9d7a980 '__first' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'))))


    basic_string<_CharT, _Traits, _Alloc> &replace(size_type __pos, size_type __n1, const _CharT *__s, size_type __n2) (CompoundStmt 0x9d7ca98 </usr/include/c++/4.6/bits/basic_string.tcc:417:6, line:441:6>
  (NullStmt 0x9d7b9c0 <line:418:48>)
  (CallExpr 0x9d7ba50 <line:419:8, col:47> '<dependent type>'
    (MemberExpr 0x9d7b9e0 <col:8> '<bound member function type>' ->_M_check 0x9d26bb0
      (CXXThisExpr 0x9d7b9d0 <col:8> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9d7ba00 <col:17> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d7b630 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0x9d7ba18 <col:24> 'const char [22]' lvalue "basic_string::replace"))
  (BinaryOperator 0x9d7bb18 <line:420:8, col:35> '<dependent type>' '='
    (DeclRefExpr 0x9d7ba74 <col:8> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d7b670 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0x9d7baf0 <col:15, col:35> '<dependent type>'
      (MemberExpr 0x9d7baa0 <col:15> '<bound member function type>' ->_M_limit 0x9d26ed0
        (CXXThisExpr 0x9d7ba90 <col:15> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9d7bac0 <col:24> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d7b630 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9d7bad8 <col:31> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d7b670 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')))
  (CallExpr 0x9d7bbc8 <line:421:8, col:59> '<dependent type>'
    (MemberExpr 0x9d7bb40 <col:8> '<bound member function type>' ->_M_check_length 0x9d26d70
      (CXXThisExpr 0x9d7bb30 <col:8> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9d7bb60 <col:24> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d7b670 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
    (DeclRefExpr 0x9d7bb78 <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d7b720 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0x9d7bb90 <col:36> 'const char [22]' lvalue "basic_string::replace"))
  (DeclStmt 0x9d7bc38 <line:422:8, col:19>
    0x9d7bc00 "bool __left")
  (IfStmt 0x9d7ca78 <line:423:8, line:440:3>
    <<<NULL>>>
    (BinaryOperator 0x9d7bd58 <line:423:12, col:55> '<dependent type>' '||'
      (CallExpr 0x9d7bc90 <col:12, col:27> '<dependent type>'
        (MemberExpr 0x9d7bc58 <col:12> '<bound member function type>' ->_M_disjunct 0x9d27010
          (CXXThisExpr 0x9d7bc48 <col:12> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x9d7bc78 <col:24> 'const _CharT *' lvalue ParmVar 0x9d7b6e0 '__s' 'const _CharT *'))
      (CallExpr 0x9d7bd38 <col:32, col:55> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d7bd00 <col:32, col:42> '<dependent type>' lvalue
          (CallExpr 0x9d7bce0 <col:32, col:39> '<dependent type>'
            (MemberExpr 0x9d7bcc0 <col:32> '<bound member function type>' ->_M_rep 0x9d268a0
              (CXXThisExpr 0x9d7bcb0 <col:32> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
    (ReturnStmt 0x9d7be30 <line:424:10, col:55>
      (CallExpr 0x9d7be00 <col:17, col:55> '<dependent type>'
        (MemberExpr 0x9d7bd80 <col:17> '<bound member function type>' ->_M_replace_safe 0x9d3b8f0
          (CXXThisExpr 0x9d7bd70 <col:17> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x9d7bda0 <col:33> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d7b630 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9d7bdb8 <col:40> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d7b670 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9d7bdd0 <col:46> 'const _CharT *' lvalue ParmVar 0x9d7b6e0 '__s' 'const _CharT *')
        (DeclRefExpr 0x9d7bde8 <col:51> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d7b720 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')))
    (IfStmt 0x9d7ca58 <line:425:13, line:440:3>
      <<<NULL>>>
      (BinaryOperator 0x9d7c298 <line:425:17, line:426:34> '<dependent type>' '||'
        (ParenExpr 0x9d7c078 <line:425:17, col:58> '<dependent type>'
          (BinaryOperator 0x9d7c060 <col:18, col:53> '<dependent type>' '='
            (DeclRefExpr 0x9d7be40 <col:18> '_Bool' lvalue Var 0x9d7bc00 '__left' '_Bool')
            (CXXOperatorCallExpr 0x9d7c038 <col:27, col:53> '<dependent type>'
              (UnresolvedLookupExpr 0x9d7bff0 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9badc90 0x9bc3ba0 0x9bc6b90 0x9d63390 0x9d638c0 0x9d63df0)
              (CXXOperatorCallExpr 0x9d7bed0 <col:27, col:33> '<dependent type>'
                (UnresolvedLookupExpr 0x9d7be88 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d5c5c0 0x9d5cb10 0x9d5d090 0x9d5d890)
                (DeclRefExpr 0x9d7be58 <col:27> 'const _CharT *' lvalue ParmVar 0x9d7b6e0 '__s' 'const _CharT *')
                (DeclRefExpr 0x9d7be70 <col:33> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d7b720 '__n2' 'size_type':'typename _CharT_alloc_type::size_type'))
              (CXXOperatorCallExpr 0x9d7bfc8 <col:41, col:53> '<dependent type>'
                (UnresolvedLookupExpr 0x9d7bf80 <col:51, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d5c5c0 0x9d5cb10 0x9d5d090 0x9d5d890)
                (CallExpr 0x9d7bf48 <col:41, col:49> '<dependent type>'
                  (UnresolvedMemberExpr 0x9d7bf08 <col:41> '<bound member function type>' lvalue))
                (DeclRefExpr 0x9d7bf64 <col:53> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d7b630 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')))))
        (CXXOperatorCallExpr 0x9d7c270 <line:426:6, col:34> '<dependent type>'
          (UnresolvedLookupExpr 0x9d7c228 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9badc90 0x9bc3ba0 0x9bc6b90 0x9d63390 0x9d638c0 0x9d63df0)
          (CXXOperatorCallExpr 0x9d7c1e8 <col:6, col:26> '<dependent type>'
            (UnresolvedLookupExpr 0x9d7c1a0 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d5c5c0 0x9d5cb10 0x9d5d090 0x9d5d890)
            (CXXOperatorCallExpr 0x9d7c160 <col:6, col:18> '<dependent type>'
              (UnresolvedLookupExpr 0x9d7c118 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d5c5c0 0x9d5cb10 0x9d5d090 0x9d5d890)
              (CallExpr 0x9d7c0e0 <col:6, col:14> '<dependent type>'
                (UnresolvedMemberExpr 0x9d7c0a0 <col:6> '<bound member function type>' lvalue))
              (DeclRefExpr 0x9d7c0fc <col:18> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d7b630 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
            (DeclRefExpr 0x9d7c184 <col:26> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d7b670 '__n1' 'size_type':'typename _CharT_alloc_type::size_type'))
          (DeclRefExpr 0x9d7c20c <col:34> 'const _CharT *' lvalue ParmVar 0x9d7b6e0 '__s' 'const _CharT *')))
      (CompoundStmt 0x9d7c850 <line:427:3, line:434:3>
        (DeclStmt 0x9d7c3e0 <line:429:5, col:38>
          0x9d7c2c0 "size_type __off =
            (CXXOperatorCallExpr 0x9d7c3b8 <col:23, col:37> '<dependent type>'
              (UnresolvedLookupExpr 0x9d7c380 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
              (DeclRefExpr 0x9d7c2f4 <col:23> 'const _CharT *' lvalue ParmVar 0x9d7b6e0 '__s' 'const _CharT *')
              (CallExpr 0x9d7c360 <col:29, col:37> '<dependent type>'
                (UnresolvedMemberExpr 0x9d7c320 <col:29> '<bound member function type>' lvalue)))")
        (ConditionalOperator 0x9d7c510 <line:430:5, col:43> '<dependent type>'
          (ImplicitCastExpr 0x9d7c500 <col:5> '_Bool' <LValueToRValue>
            (DeclRefExpr 0x9d7c3f0 <col:5> '_Bool' lvalue Var 0x9d7bc00 '__left' '_Bool'))
          (DeclRefExpr 0x9d7c408 <col:14> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9d7c2c0 '__off' 'size_type':'typename _CharT_alloc_type::size_type')
          (ParenExpr 0x9d7c4e8 <col:22, col:43> '<dependent type>' lvalue
            (CompoundAssignOperator 0x9d7c4c8 <col:23, col:39> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
              (DeclRefExpr 0x9d7c420 <col:23> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9d7c2c0 '__off' 'size_type':'typename _CharT_alloc_type::size_type')
              (CXXOperatorCallExpr 0x9d7c4a0 <col:32, col:39> '<dependent type>'
                (UnresolvedLookupExpr 0x9d7c468 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
                (DeclRefExpr 0x9d7c438 <col:32> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d7b720 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')
                (DeclRefExpr 0x9d7c450 <col:39> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d7b670 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')))))
        (CallExpr 0x9d7c5a8 <line:431:5, col:32> '<dependent type>'
          (MemberExpr 0x9d7c540 <col:5> '<bound member function type>' ->_M_mutate 0x9d281b0
            (CXXThisExpr 0x9d7c530 <col:5> 'basic_string<_CharT, _Traits, _Alloc> *' this))
          (DeclRefExpr 0x9d7c560 <col:15> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d7b630 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0x9d7c578 <col:22> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d7b670 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0x9d7c590 <col:28> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d7b720 '__n2' 'size_type':'typename _CharT_alloc_type::size_type'))
        (CallExpr 0x9d7c7f0 <line:432:5, col:55> '<dependent type>'
          (DeclRefExpr 0x9d7c5d0 <col:5> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9d271e0 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
          (CXXOperatorCallExpr 0x9d7c6b8 <col:13, col:25> '<dependent type>'
            (UnresolvedLookupExpr 0x9d7c670 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d5c5c0 0x9d5cb10 0x9d5d090 0x9d5d890)
            (CallExpr 0x9d7c638 <col:13, col:21> '<dependent type>'
              (UnresolvedMemberExpr 0x9d7c5f8 <col:13> '<bound member function type>' lvalue))
            (DeclRefExpr 0x9d7c654 <col:25> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d7b630 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
          (CXXOperatorCallExpr 0x9d7c7b0 <col:32, col:44> '<dependent type>'
            (UnresolvedLookupExpr 0x9d7c768 <col:42, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d5c5c0 0x9d5cb10 0x9d5d090 0x9d5d890)
            (CallExpr 0x9d7c730 <col:32, col:40> '<dependent type>'
              (UnresolvedMemberExpr 0x9d7c6f0 <col:32> '<bound member function type>' lvalue))
            (DeclRefExpr 0x9d7c74c <col:44> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9d7c2c0 '__off' 'size_type':'typename _CharT_alloc_type::size_type'))
          (DeclRefExpr 0x9d7c7d4 <col:51> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d7b720 '__n2' 'size_type':'typename _CharT_alloc_type::size_type'))
        (ReturnStmt 0x9d7c840 <line:433:5, col:13>
          (UnaryOperator 0x9d7c828 <col:12, col:13> '<dependent type>' prefix '*'
            (CXXThisExpr 0x9d7c818 <col:13> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CompoundStmt 0x9d7ca40 <line:436:3, line:440:3>
        (DeclStmt 0x9d7c908 <line:438:5, col:40>
          0x9d7c880 "const basic_string<_CharT, _Traits, _Alloc> __tmp =
            (ParenListExpr 0x9d7c8e8 <col:29, col:39> 'const basic_string<_CharT, _Traits, _Alloc>'
              (DeclRefExpr 0x9d7c8b4 <col:30> 'const _CharT *' lvalue ParmVar 0x9d7b6e0 '__s' 'const _CharT *')
              (DeclRefExpr 0x9d7c8cc <col:35> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d7b720 '__n2' 'size_type':'typename _CharT_alloc_type::size_type'))")
        (ReturnStmt 0x9d7ca30 <line:439:5, col:62>
          (CallExpr 0x9d7ca00 <col:12, col:62> '<dependent type>'
            (MemberExpr 0x9d7c928 <col:12> '<bound member function type>' ->_M_replace_safe 0x9d3b8f0
              (CXXThisExpr 0x9d7c918 <col:12> 'basic_string<_CharT, _Traits, _Alloc> *' this))
            (DeclRefExpr 0x9d7c948 <col:28> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d7b630 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
            (DeclRefExpr 0x9d7c960 <col:35> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d7b670 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
            (CallExpr 0x9d7c9c8 <col:41, col:55> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9d7c990 <col:41, col:47> '<dependent type>' lvalue
                (DeclRefExpr 0x9d7c978 <col:41> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9d7c880 '__tmp' 'const basic_string<_CharT, _Traits, _Alloc>')))
            (DeclRefExpr 0x9d7c9e4 <col:58> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d7b720 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')))))))


    void _M_destroy(const _Alloc &__a) throw() (CompoundStmt 0x9d7d2c0 </usr/include/c++/4.6/bits/basic_string.tcc:447:5, line:451:5>
  (DeclStmt 0x9d7d1a8 <line:448:7, line:449:65>
    0x9d7cfc0 "const size_type __size =
      (CXXOperatorCallExpr 0x9d7d180 <line:448:32, line:449:64> '<dependent type>'
        (UnresolvedLookupExpr 0x9d7d138 <line:448:50, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d5c5c0 0x9d5cb10 0x9d5d090 0x9d5d890)
        (UnaryExprOrTypeTraitExpr 0x9d7d000 <col:32, col:48> 'unsigned int' sizeof 'struct std::basic_string::_Rep_base')
        (BinaryOperator 0x9d7d120 <line:449:25, col:64> '<dependent type>' '*'
          (ParenExpr 0x9d7d0e8 <col:25, col:47> '<dependent type>'
            (CXXOperatorCallExpr 0x9d7d0c0 <col:26, col:46> '<dependent type>'
              (UnresolvedLookupExpr 0x9d7d078 <col:44, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d5c5c0 0x9d5cb10 0x9d5d090 0x9d5d890)
              (CXXDependentScopeMemberExpr 0x9d7d028 <col:26, col:32> '<dependent type>' lvalue
                (CXXThisExpr 0x9d7d018 <col:26> 'struct std::basic_string::_Rep *' this))
              (IntegerLiteral 0x9d7d060 <col:46> 'int' 1)))
          (UnaryExprOrTypeTraitExpr 0x9d7d108 <col:51, col:64> 'unsigned int' sizeof '_CharT')))")
  (CallExpr 0x9d7d298 <line:450:7, col:77> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9d7d210 <col:7, col:29> '<dependent type>' lvalue
      (CXXUnresolvedConstructExpr 0x9d7d1f0 <col:7, col:27> '_Raw_bytes_alloc':'typename _Alloc::_Alloc::rebind<char>::other'
        (DeclRefExpr 0x9d7d1d8 <col:24> 'const _Alloc' lvalue ParmVar 0x9d7cea0 '__a' 'const _Alloc &')))
    (CXXReinterpretCastExpr 0x9d7d268 <col:40, col:68> 'char *' reinterpret_cast<char *> <Dependent>
      (CXXThisExpr 0x9d7d248 <col:64> 'struct std::basic_string::_Rep *' this))
    (DeclRefExpr 0x9d7d280 <col:71> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d7cfc0 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')))


    void _M_leak_hard() (CompoundStmt 0x9d7da50 </usr/include/c++/4.6/bits/basic_string.tcc:457:5, line:465:5>
  (IfStmt 0x9d7d820 <line:459:7, line:460:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9d7d7e8 <line:459:11, col:37> '<dependent type>'
      (UnresolvedLookupExpr 0x9d7d790 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30 0x9d5e270 0x9d5ece0 0x9d5f520 0x9d5fa90)
      (CallExpr 0x9d7d720 <col:11, col:18> '<dependent type>'
        (MemberExpr 0x9d7d700 <col:11> '<bound member function type>' ->_M_rep 0x9d268a0
          (CXXThisExpr 0x9d7d6f0 <col:11> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
      (UnaryOperator 0x9d7d778 <col:23, col:37> '<dependent type>' prefix '&'
        (CallExpr 0x9d7d758 <col:24, col:37> '<dependent type>'
          (DeclRefExpr 0x9d7d73c <col:24> 'struct std::basic_string::_Rep &(void)' lvalue CXXMethod 0x9d282c0 '_S_empty_rep' 'struct std::basic_string::_Rep &(void)'))))
    (ReturnStmt 0x9d7d810 <line:460:2>)
    <<<NULL>>>)
  (IfStmt 0x9d7d988 <line:462:7, line:463:19>
    <<<NULL>>>
    (CallExpr 0x9d7d8c8 <line:462:11, col:34> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9d7d890 <col:11, col:21> '<dependent type>' lvalue
        (CallExpr 0x9d7d870 <col:11, col:18> '<dependent type>'
          (MemberExpr 0x9d7d850 <col:11> '<bound member function type>' ->_M_rep 0x9d268a0
            (CXXThisExpr 0x9d7d840 <col:11> 'basic_string<_CharT, _Traits, _Alloc> *' this)))))
    (CallExpr 0x9d7d960 <line:463:2, col:19> '<dependent type>'
      (MemberExpr 0x9d7d8f8 <col:2> '<bound member function type>' ->_M_mutate 0x9d281b0
        (CXXThisExpr 0x9d7d8e8 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (IntegerLiteral 0x9d7d918 <col:12> 'int' 0)
      (IntegerLiteral 0x9d7d930 <col:15> 'int' 0)
      (IntegerLiteral 0x9d7d948 <col:18> 'int' 0))
    <<<NULL>>>)
  (CallExpr 0x9d7da30 <line:464:7, col:31> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9d7d9f8 <col:7, col:17> '<dependent type>' lvalue
      (CallExpr 0x9d7d9d8 <col:7, col:14> '<dependent type>'
        (MemberExpr 0x9d7d9b8 <col:7> '<bound member function type>' ->_M_rep 0x9d268a0
          (CXXThisExpr 0x9d7d9a8 <col:7> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))


    void _M_mutate(size_type __pos, size_type __len1, size_type __len2) (CompoundStmt 0x9d7f308 </usr/include/c++/4.6/bits/basic_string.tcc:471:5, line:498:5>
  (DeclStmt 0x9d7e010 <line:472:7, col:48>
    0x9d7df70 "const size_type __old_size =
      (CallExpr 0x9d7dff0 <col:36, col:47> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d7dfb8 <col:36, col:42> '<dependent type>' lvalue
          (CXXThisExpr 0x9d7dfa8 <col:36> 'basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (DeclStmt 0x9d7e180 <line:473:7, col:64>
    0x9d7e030 "const size_type __new_size =
      (CXXOperatorCallExpr 0x9d7e158 <col:36, col:58> '<dependent type>'
        (UnresolvedLookupExpr 0x9d7e120 <col:56, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
        (CXXOperatorCallExpr 0x9d7e0e0 <col:36, col:49> '<dependent type>'
          (UnresolvedLookupExpr 0x9d7e098 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d5c5c0 0x9d5cb10 0x9d5d090 0x9d5d890)
          (DeclRefExpr 0x9d7e064 <col:36> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d7df70 '__old_size' 'const size_type':'const typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0x9d7e07c <col:49> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d7de60 '__len2' 'size_type':'typename _CharT_alloc_type::size_type'))
        (DeclRefExpr 0x9d7e104 <col:58> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d7de20 '__len1' 'size_type':'typename _CharT_alloc_type::size_type'))")
  (DeclStmt 0x9d7e310 <line:474:7, col:63>
    0x9d7e1d0 "const size_type __how_much =
      (CXXOperatorCallExpr 0x9d7e2e8 <col:36, col:57> '<dependent type>'
        (UnresolvedLookupExpr 0x9d7e2b0 <col:55, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
        (CXXOperatorCallExpr 0x9d7e270 <col:36, col:49> '<dependent type>'
          (UnresolvedLookupExpr 0x9d7e238 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
          (DeclRefExpr 0x9d7e204 <col:36> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d7df70 '__old_size' 'const size_type':'const typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0x9d7e21c <col:49> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d7dde0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        (DeclRefExpr 0x9d7e294 <col:57> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d7de20 '__len1' 'size_type':'typename _CharT_alloc_type::size_type'))")
  (IfStmt 0x9d7f228 <line:476:7, line:496:2>
    <<<NULL>>>
    (BinaryOperator 0x9d7e4b8 <line:476:11, col:67> '<dependent type>' '||'
      (CXXOperatorCallExpr 0x9d7e3e8 <col:11, col:39> '<dependent type>'
        (UnresolvedLookupExpr 0x9d7e3a0 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bad330 0x9bc37b0 0x9bc6740 0x9d622b0 0x9d627e0 0x9d62d10)
        (DeclRefExpr 0x9d7e320 <col:11> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d7e030 '__new_size' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (CallExpr 0x9d7e380 <col:24, col:39> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9d7e348 <col:24, col:30> '<dependent type>' lvalue
            (CXXThisExpr 0x9d7e338 <col:24> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CallExpr 0x9d7e498 <col:44, col:67> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d7e460 <col:44, col:54> '<dependent type>' lvalue
          (CallExpr 0x9d7e440 <col:44, col:51> '<dependent type>'
            (MemberExpr 0x9d7e420 <col:44> '<bound member function type>' ->_M_rep 0x9d268a0
              (CXXThisExpr 0x9d7e410 <col:44> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
    (CompoundStmt 0x9d7ed90 <line:477:2, line:490:2>
      (DeclStmt 0x9d7e568 <line:479:4, col:46>
        0x9d7e4e0 "const allocator_type __a =
          (CallExpr 0x9d7e548 <col:31, col:45> '<dependent type>'
            (MemberExpr 0x9d7e528 <col:31> '<bound member function type>' ->get_allocator 0x9d3cda0
              (CXXThisExpr 0x9d7e518 <col:31> 'basic_string<_CharT, _Traits, _Alloc> *' this)))")
      (DeclStmt 0x9d7e6e0 <line:480:4, col:66>
        0x9d7e590 "std::basic_string::_Rep *__r =
          (CallExpr 0x9d7e6b8 <col:16, col:65> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9d7e5e8 <col:16, col:22> '<dependent type>' lvalue)
            (DeclRefExpr 0x9d7e61c <col:32> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d7e030 '__new_size' 'const size_type':'const typename _CharT_alloc_type::size_type')
            (CallExpr 0x9d7e680 <col:44, col:59> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9d7e648 <col:44, col:50> '<dependent type>' lvalue
                (CXXThisExpr 0x9d7e638 <col:44> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
            (DeclRefExpr 0x9d7e69c <col:62> 'const allocator_type':'const _Alloc' lvalue Var 0x9d7e4e0 '__a' 'const allocator_type':'const _Alloc'))")
      (IfStmt 0x9d7e840 <line:482:4, line:483:49>
        <<<NULL>>>
        (DeclRefExpr 0x9d7e6f0 <line:482:8> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d7dde0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (CallExpr 0x9d7e818 <line:483:6, col:49> '<dependent type>'
          (DeclRefExpr 0x9d7e708 <col:6> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9d271e0 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
          (CallExpr 0x9d7e770 <col:14, col:30> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9d7e738 <col:14, col:19> '<dependent type>' lvalue
              (DeclRefExpr 0x9d7e720 <col:14> 'struct std::basic_string::_Rep *' lvalue Var 0x9d7e590 '__r' 'struct std::basic_string::_Rep *')))
          (CallExpr 0x9d7e7e0 <col:33, col:41> '<dependent type>'
            (UnresolvedMemberExpr 0x9d7e7a0 <col:33> '<bound member function type>' lvalue))
          (DeclRefExpr 0x9d7e7fc <col:44> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d7dde0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)
      (IfStmt 0x9d7ebd0 <line:484:4, line:486:45>
        <<<NULL>>>
        (DeclRefExpr 0x9d7e85c <line:484:8> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d7e1d0 '__how_much' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (CallExpr 0x9d7eba8 <line:485:6, line:486:45> '<dependent type>'
          (DeclRefExpr 0x9d7e874 <line:485:6> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9d271e0 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
          (CXXOperatorCallExpr 0x9d7e9e8 <col:14, col:42> '<dependent type>'
            (UnresolvedLookupExpr 0x9d7e9a0 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d5c5c0 0x9d5cb10 0x9d5d090 0x9d5d890)
            (CXXOperatorCallExpr 0x9d7e960 <col:14, col:34> '<dependent type>'
              (UnresolvedLookupExpr 0x9d7e918 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d5c5c0 0x9d5cb10 0x9d5d090 0x9d5d890)
              (CallExpr 0x9d7e8e0 <col:14, col:30> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9d7e8a8 <col:14, col:19> '<dependent type>' lvalue
                  (DeclRefExpr 0x9d7e88c <col:14> 'struct std::basic_string::_Rep *' lvalue Var 0x9d7e590 '__r' 'struct std::basic_string::_Rep *')))
              (DeclRefExpr 0x9d7e8fc <col:34> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d7dde0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
            (DeclRefExpr 0x9d7e984 <col:42> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d7de60 '__len2' 'size_type':'typename _CharT_alloc_type::size_type'))
          (CXXOperatorCallExpr 0x9d7eb68 <line:486:7, col:27> '<dependent type>'
            (UnresolvedLookupExpr 0x9d7eb20 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d5c5c0 0x9d5cb10 0x9d5d090 0x9d5d890)
            (CXXOperatorCallExpr 0x9d7eae0 <col:7, col:19> '<dependent type>'
              (UnresolvedLookupExpr 0x9d7ea98 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d5c5c0 0x9d5cb10 0x9d5d090 0x9d5d890)
              (CallExpr 0x9d7ea60 <col:7, col:15> '<dependent type>'
                (UnresolvedMemberExpr 0x9d7ea20 <col:7> '<bound member function type>' lvalue))
              (DeclRefExpr 0x9d7ea7c <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d7dde0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
            (DeclRefExpr 0x9d7eb04 <col:27> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d7de20 '__len1' 'size_type':'typename _CharT_alloc_type::size_type'))
          (DeclRefExpr 0x9d7eb8c <col:35> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d7e1d0 '__how_much' 'const size_type':'const typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)
      (CallExpr 0x9d7ec90 <line:488:4, col:28> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d7ec40 <col:4, col:14> '<dependent type>' lvalue
          (CallExpr 0x9d7ec20 <col:4, col:11> '<dependent type>'
            (MemberExpr 0x9d7ec00 <col:4> '<bound member function type>' ->_M_rep 0x9d268a0
              (CXXThisExpr 0x9d7ebf0 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (DeclRefExpr 0x9d7ec74 <col:25> 'const allocator_type':'const _Alloc' lvalue Var 0x9d7e4e0 '__a' 'const allocator_type':'const _Alloc'))
      (CallExpr 0x9d7ed70 <line:489:4, col:29> '<dependent type>'
        (UnresolvedMemberExpr 0x9d7ecc0 <col:4> '<bound member function type>' lvalue)
        (CallExpr 0x9d7ed50 <col:12, col:28> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9d7ed18 <col:12, col:17> '<dependent type>' lvalue
            (DeclRefExpr 0x9d7ed00 <col:12> 'struct std::basic_string::_Rep *' lvalue Var 0x9d7e590 '__r' 'struct std::basic_string::_Rep *')))))
    (IfStmt 0x9d7f208 <line:491:12, line:496:2>
      <<<NULL>>>
      (BinaryOperator 0x9d7ee80 <line:491:16, col:40> '<dependent type>' '&&'
        (DeclRefExpr 0x9d7edb8 <col:16> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d7e1d0 '__how_much' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (CXXOperatorCallExpr 0x9d7ee58 <col:30, col:40> '<dependent type>'
          (UnresolvedLookupExpr 0x9d7ee00 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bacde0 0x9bc3130 0x9bc62c0 0x9c11360 0x9c32300 0x9c32670 0x9d60120 0x9d60630 0x9d60b40)
          (DeclRefExpr 0x9d7edd0 <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d7de20 '__len1' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0x9d7ede8 <col:40> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d7de60 '__len2' 'size_type':'typename _CharT_alloc_type::size_type')))
      (CompoundStmt 0x9d7f1f0 <line:492:2, line:496:2>
        (CallExpr 0x9d7f1c8 <line:494:4, line:495:43> '<dependent type>'
          (DeclRefExpr 0x9d7ee98 <line:494:4> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9d27350 '_M_move' 'void (_CharT *, const _CharT *, size_type)')
          (CXXOperatorCallExpr 0x9d7f008 <col:12, col:32> '<dependent type>'
            (UnresolvedLookupExpr 0x9d7efc0 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d5c5c0 0x9d5cb10 0x9d5d090 0x9d5d890)
            (CXXOperatorCallExpr 0x9d7ef80 <col:12, col:24> '<dependent type>'
              (UnresolvedLookupExpr 0x9d7ef38 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d5c5c0 0x9d5cb10 0x9d5d090 0x9d5d890)
              (CallExpr 0x9d7ef00 <col:12, col:20> '<dependent type>'
                (UnresolvedMemberExpr 0x9d7eec0 <col:12> '<bound member function type>' lvalue))
              (DeclRefExpr 0x9d7ef1c <col:24> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d7dde0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
            (DeclRefExpr 0x9d7efa4 <col:32> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d7de60 '__len2' 'size_type':'typename _CharT_alloc_type::size_type'))
          (CXXOperatorCallExpr 0x9d7f188 <line:495:5, col:25> '<dependent type>'
            (UnresolvedLookupExpr 0x9d7f140 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d5c5c0 0x9d5cb10 0x9d5d090 0x9d5d890)
            (CXXOperatorCallExpr 0x9d7f100 <col:5, col:17> '<dependent type>'
              (UnresolvedLookupExpr 0x9d7f0b8 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d5c5c0 0x9d5cb10 0x9d5d090 0x9d5d890)
              (CallExpr 0x9d7f080 <col:5, col:13> '<dependent type>'
                (UnresolvedMemberExpr 0x9d7f040 <col:5> '<bound member function type>' lvalue))
              (DeclRefExpr 0x9d7f09c <col:17> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d7dde0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
            (DeclRefExpr 0x9d7f124 <col:25> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d7de20 '__len1' 'size_type':'typename _CharT_alloc_type::size_type'))
          (DeclRefExpr 0x9d7f1ac <col:33> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d7e1d0 '__how_much' 'const size_type':'const typename _CharT_alloc_type::size_type')))
      <<<NULL>>>))
  (CallExpr 0x9d7f2e8 <line:497:7, col:54> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9d7f298 <col:7, col:17> '<dependent type>' lvalue
      (CallExpr 0x9d7f278 <col:7, col:14> '<dependent type>'
        (MemberExpr 0x9d7f258 <col:7> '<bound member function type>' ->_M_rep 0x9d268a0
          (CXXThisExpr 0x9d7f248 <col:7> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
    (DeclRefExpr 0x9d7f2cc <col:44> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d7e030 '__new_size' 'const size_type':'const typename _CharT_alloc_type::size_type')))


    void reserve(size_type __res = (IntegerLiteral 0x9d45540 </usr/include/c++/4.6/bits/basic_string.h:788:37> 'int' 0)
) (CompoundStmt 0x9d7ff50 </usr/include/c++/4.6/bits/basic_string.tcc:504:5, line:515:5>
  (IfStmt 0x9d7ff30 <line:505:7, line:514:9>
    <<<NULL>>>
    (BinaryOperator 0x9d7f930 <line:505:11, col:63> '<dependent type>' '||'
      (CXXOperatorCallExpr 0x9d7f860 <col:11, col:35> '<dependent type>'
        (UnresolvedLookupExpr 0x9d7f808 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bacde0 0x9bc3130 0x9bc62c0 0x9c11360 0x9c32300 0x9c32670 0x9d60120 0x9d60630 0x9d60b40)
        (DeclRefExpr 0x9d7f784 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d7f6a0 '__res' 'size_type':'typename _CharT_alloc_type::size_type')
        (CallExpr 0x9d7f7e8 <col:20, col:35> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9d7f7b0 <col:20, col:26> '<dependent type>' lvalue
            (CXXThisExpr 0x9d7f7a0 <col:20> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CallExpr 0x9d7f910 <col:40, col:63> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d7f8d8 <col:40, col:50> '<dependent type>' lvalue
          (CallExpr 0x9d7f8b8 <col:40, col:47> '<dependent type>'
            (MemberExpr 0x9d7f898 <col:40> '<bound member function type>' ->_M_rep 0x9d268a0
              (CXXThisExpr 0x9d7f888 <col:40> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
    (CompoundStmt 0x9d7ff08 <line:506:9, line:514:9>
      (IfStmt 0x9d7fad0 <line:508:4, line:509:25>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9d7fa10 <line:508:8, col:27> '<dependent type>'
          (UnresolvedLookupExpr 0x9d7f9c8 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bac3c0 0x9bc2c90 0x9bc5590 0x9d61190 0x9d616c0 0x9d61bf0)
          (DeclRefExpr 0x9d7f948 <col:8> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d7f6a0 '__res' 'size_type':'typename _CharT_alloc_type::size_type')
          (CallExpr 0x9d7f9a8 <col:16, col:27> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9d7f970 <col:16, col:22> '<dependent type>' lvalue
              (CXXThisExpr 0x9d7f960 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (BinaryOperator 0x9d7fab8 <line:509:6, col:25> '<dependent type>' '='
          (DeclRefExpr 0x9d7fa34 <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d7f6a0 '__res' 'size_type':'typename _CharT_alloc_type::size_type')
          (CallExpr 0x9d7fa98 <col:14, col:25> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9d7fa60 <col:14, col:20> '<dependent type>' lvalue
              (CXXThisExpr 0x9d7fa50 <col:14> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        <<<NULL>>>)
      (DeclStmt 0x9d7fb88 <line:510:4, col:46>
        0x9d7fb00 "const allocator_type __a =
          (CallExpr 0x9d7fb68 <col:31, col:45> '<dependent type>'
            (MemberExpr 0x9d7fb48 <col:31> '<bound member function type>' ->get_allocator 0x9d3cda0
              (CXXThisExpr 0x9d7fb38 <col:31> 'basic_string<_CharT, _Traits, _Alloc> *' this)))")
      (DeclStmt 0x9d7fdb0 <line:511:4, col:65>
        0x9d7fbd0 "_CharT *__tmp =
          (CallExpr 0x9d7fd88 <col:20, col:64> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9d7fc58 <col:20, col:30> '<dependent type>' lvalue
              (CallExpr 0x9d7fc38 <col:20, col:27> '<dependent type>'
                (MemberExpr 0x9d7fc18 <col:20> '<bound member function type>' ->_M_rep 0x9d268a0
                  (CXXThisExpr 0x9d7fc08 <col:20> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
            (DeclRefExpr 0x9d7fc8c <col:39> 'const allocator_type':'const _Alloc' lvalue Var 0x9d7fb00 '__a' 'const allocator_type':'const _Alloc')
            (CXXOperatorCallExpr 0x9d7fd60 <col:44, col:63> '<dependent type>'
              (UnresolvedLookupExpr 0x9d7fd28 <col:50, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
              (DeclRefExpr 0x9d7fca4 <col:44> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d7f6a0 '__res' 'size_type':'typename _CharT_alloc_type::size_type')
              (CallExpr 0x9d7fd08 <col:52, col:63> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9d7fcd0 <col:52, col:58> '<dependent type>' lvalue
                  (CXXThisExpr 0x9d7fcc0 <col:52> 'basic_string<_CharT, _Traits, _Alloc> *' this)))))")
      (CallExpr 0x9d7fe60 <line:512:4, col:28> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d7fe10 <col:4, col:14> '<dependent type>' lvalue
          (CallExpr 0x9d7fdf0 <col:4, col:11> '<dependent type>'
            (MemberExpr 0x9d7fdd0 <col:4> '<bound member function type>' ->_M_rep 0x9d268a0
              (CXXThisExpr 0x9d7fdc0 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (DeclRefExpr 0x9d7fe44 <col:25> 'const allocator_type':'const _Alloc' lvalue Var 0x9d7fb00 '__a' 'const allocator_type':'const _Alloc'))
      (CallExpr 0x9d7fee8 <line:513:4, col:17> '<dependent type>'
        (UnresolvedMemberExpr 0x9d7fe90 <col:4> '<bound member function type>' lvalue)
        (DeclRefExpr 0x9d7fed0 <col:12> '_CharT *' lvalue Var 0x9d7fbd0 '__tmp' '_CharT *')))
    <<<NULL>>>))


    void swap(basic_string<_CharT, _Traits, _Alloc> &__s) (CompoundStmt 0x9d80ef8 </usr/include/c++/4.6/bits/basic_string.tcc:521:5, line:542:5>
  (IfStmt 0x9d80528 <line:522:7, line:523:28>
    <<<NULL>>>
    (CallExpr 0x9d80460 <line:522:11, col:34> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9d80428 <col:11, col:21> '<dependent type>' lvalue
        (CallExpr 0x9d80408 <col:11, col:18> '<dependent type>'
          (MemberExpr 0x9d803e8 <col:11> '<bound member function type>' ->_M_rep 0x9d268a0
            (CXXThisExpr 0x9d803d8 <col:11> 'basic_string<_CharT, _Traits, _Alloc> *' this)))))
    (CallExpr 0x9d80508 <line:523:2, col:28> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9d804d0 <col:2, col:12> '<dependent type>' lvalue
        (CallExpr 0x9d804b0 <col:2, col:9> '<dependent type>'
          (MemberExpr 0x9d80490 <col:2> '<bound member function type>' ->_M_rep 0x9d268a0
            (CXXThisExpr 0x9d80480 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this)))))
    <<<NULL>>>)
  (IfStmt 0x9d806d8 <line:524:7, line:525:32>
    <<<NULL>>>
    (CallExpr 0x9d805f0 <line:524:11, col:38> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9d805b8 <col:11, col:25> '<dependent type>' lvalue
        (CallExpr 0x9d80598 <col:11, col:22> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9d80560 <col:11, col:15> '<dependent type>' lvalue
            (DeclRefExpr 0x9d80544 <col:11> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d802f0 '__s' 'basic_string<_CharT, _Traits, _Alloc> &')))))
    (CallExpr 0x9d806b8 <line:525:2, col:32> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9d80680 <col:2, col:16> '<dependent type>' lvalue
        (CallExpr 0x9d80660 <col:2, col:13> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9d80628 <col:2, col:6> '<dependent type>' lvalue
            (DeclRefExpr 0x9d8060c <col:2> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d802f0 '__s' 'basic_string<_CharT, _Traits, _Alloc> &')))))
    <<<NULL>>>)
  (IfStmt 0x9d80ed8 <line:526:7, line:541:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9d80828 <line:526:11, col:54> '<dependent type>'
      (UnresolvedLookupExpr 0x9d807d0 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30 0x9d5e270 0x9d5ece0 0x9d5f520 0x9d5fa90)
      (CallExpr 0x9d80740 <col:11, col:31> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d80708 <col:11, col:17> '<dependent type>' lvalue
          (CXXThisExpr 0x9d806f8 <col:11> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
      (CallExpr 0x9d807b0 <col:36, col:54> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d80778 <col:36, col:40> '<dependent type>' lvalue
          (DeclRefExpr 0x9d8075c <col:36> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d802f0 '__s' 'basic_string<_CharT, _Traits, _Alloc> &'))))
    (CompoundStmt 0x9d80aa0 <line:527:2, line:531:2>
      (DeclStmt 0x9d80928 <line:528:4, col:29>
        0x9d80880 "_CharT *__tmp =
          (CallExpr 0x9d80908 <col:20, col:28> '<dependent type>'
            (UnresolvedMemberExpr 0x9d808c8 <col:20> '<bound member function type>' lvalue))")
      (CallExpr 0x9d809f8 <line:529:4, col:25> '<dependent type>'
        (UnresolvedMemberExpr 0x9d80948 <col:4> '<bound member function type>' lvalue)
        (CallExpr 0x9d809d8 <col:12, col:24> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9d809a0 <col:12, col:16> '<dependent type>' lvalue
            (DeclRefExpr 0x9d80988 <col:12> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d802f0 '__s' 'basic_string<_CharT, _Traits, _Alloc> &'))))
      (CallExpr 0x9d80a80 <line:530:4, col:21> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d80a30 <col:4, col:8> '<dependent type>' lvalue
          (DeclRefExpr 0x9d80a18 <col:4> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d802f0 '__s' 'basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x9d80a64 <col:16> '_CharT *' lvalue Var 0x9d80880 '__tmp' '_CharT *')))
    (CompoundStmt 0x9d80eb8 <line:534:2, line:541:2>
      (DeclStmt 0x9d80c40 <line:535:4, line:536:29>
        0x9d80ad0 "const basic_string<_CharT, _Traits, _Alloc> __tmp1 =
          (ParenListExpr 0x9d80c18 <line:535:29, line:536:28> 'const basic_string<_CharT, _Traits, _Alloc>'
            (CallExpr 0x9d80b38 <line:535:30, col:40> '<dependent type>'
              (MemberExpr 0x9d80b18 <col:30> '<bound member function type>' ->_M_ibegin 0x9d26950
                (CXXThisExpr 0x9d80b08 <col:30> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
            (CallExpr 0x9d80b88 <col:43, col:51> '<dependent type>'
              (MemberExpr 0x9d80b68 <col:43> '<bound member function type>' ->_M_iend 0x9d269d0
                (CXXThisExpr 0x9d80b58 <col:43> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
            (CallExpr 0x9d80bf8 <line:536:9, col:27> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9d80bc0 <col:9, col:13> '<dependent type>' lvalue
                (DeclRefExpr 0x9d80ba4 <col:9> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d802f0 '__s' 'basic_string<_CharT, _Traits, _Alloc> &'))))")
      (DeclStmt 0x9d80e08 <line:537:4, line:538:31>
        0x9d80c60 "const basic_string<_CharT, _Traits, _Alloc> __tmp2 =
          (ParenListExpr 0x9d80de0 <line:537:29, line:538:30> 'const basic_string<_CharT, _Traits, _Alloc>'
            (CallExpr 0x9d80ce8 <line:537:30, col:44> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9d80cb0 <col:30, col:34> '<dependent type>' lvalue
                (DeclRefExpr 0x9d80c94 <col:30> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d802f0 '__s' 'basic_string<_CharT, _Traits, _Alloc> &')))
            (CallExpr 0x9d80d58 <col:47, col:59> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9d80d20 <col:47, col:51> '<dependent type>' lvalue
                (DeclRefExpr 0x9d80d04 <col:47> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d802f0 '__s' 'basic_string<_CharT, _Traits, _Alloc> &')))
            (CallExpr 0x9d80dc0 <line:538:9, col:29> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9d80d88 <col:9, col:15> '<dependent type>' lvalue
                (CXXThisExpr 0x9d80d78 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))))")
      (BinaryOperator 0x9d80e58 <line:539:4, col:12> '<dependent type>' '='
        (UnaryOperator 0x9d80e28 <col:4, col:5> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9d80e18 <col:5> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x9d80e3c <col:12> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9d80c60 '__tmp2' 'const basic_string<_CharT, _Traits, _Alloc>'))
      (BinaryOperator 0x9d80ea0 <line:540:4, col:10> '<dependent type>' '='
        (DeclRefExpr 0x9d80e70 <col:4> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d802f0 '__s' 'basic_string<_CharT, _Traits, _Alloc> &')
        (DeclRefExpr 0x9d80e88 <col:10> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9d80ad0 '__tmp1' 'const basic_string<_CharT, _Traits, _Alloc>')))))


    static typename basic_string<_CharT, _Traits, _Alloc>::_Rep *_S_create(size_type __capacity, size_type __old_capacity, const _Alloc &__alloc) (CompoundStmt 0x9d82840 </usr/include/c++/4.6/bits/basic_string.tcc:549:5, line:620:5>
  (IfStmt 0x9d81928 <line:552:7, line:553:53>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9d81828 <line:552:11, col:24> '<dependent type>'
      (UnresolvedLookupExpr 0x9d817e0 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bad330 0x9bc37b0 0x9bc6740 0x9d622b0 0x9d627e0 0x9d62d10)
      (DeclRefExpr 0x9d817ac <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d81440 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9d817c4 <col:24> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d698f0 '_S_max_size' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type'))
    (CallExpr 0x9d818f8 <line:553:2, col:53> 'void'
      (ImplicitCastExpr 0x9d818e8 <col:2> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x9d818cc <col:2> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9b765e0 '__throw_length_error' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0x9d81918 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0x9d818b8 <col:24, col:30> 'const char [24]' lvalue
          (StringLiteral 0x9d81884 </usr/include/c++/4.6/bits/basic_string.tcc:553:27> 'const char [24]' lvalue "basic_string::_S_create"))))
    <<<NULL>>>)
  (DeclStmt 0x9d819a0 <line:578:7, col:40>
    0x9d81950 "const size_type __pagesize =
      (IntegerLiteral 0x9d81988 <col:36> 'int' 4096)")
  (DeclStmt 0x9d81a60 <line:579:7, col:63>
    0x9d819c0 "const size_type __malloc_header_size =
      (BinaryOperator 0x9d81a48 <col:46, col:62> 'unsigned int' '*'
        (ImplicitCastExpr 0x9d81a38 <col:46> 'unsigned int' <IntegralCast>
          (IntegerLiteral 0x9d819f8 <col:46> 'int' 4))
        (UnaryExprOrTypeTraitExpr 0x9d81a20 <col:50, col:62> 'unsigned int' sizeof 'void *'))")
  (IfStmt 0x9d81c70 <line:587:7, line:588:19>
    <<<NULL>>>
    (BinaryOperator 0x9d81be0 <line:587:11, col:59> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x9d81ae8 <col:11, col:24> '<dependent type>'
        (UnresolvedLookupExpr 0x9d81aa0 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bad330 0x9bc37b0 0x9bc6740 0x9d622b0 0x9d627e0 0x9d62d10)
        (DeclRefExpr 0x9d81a70 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d81440 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9d81a88 <col:24> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d81480 '__old_capacity' 'size_type':'typename _CharT_alloc_type::size_type'))
      (CXXOperatorCallExpr 0x9d81bb8 <col:42, col:59> '<dependent type>'
        (UnresolvedLookupExpr 0x9d81b70 <col:53, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bac3c0 0x9bc2c90 0x9bc5590 0x9d61190 0x9d616c0 0x9d61bf0)
        (DeclRefExpr 0x9d81b0c <col:42> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d81440 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type')
        (BinaryOperator 0x9d81b58 <col:55, col:59> '<dependent type>' '*'
          (IntegerLiteral 0x9d81b28 <col:55> 'int' 2)
          (DeclRefExpr 0x9d81b40 <col:59> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d81480 '__old_capacity' 'size_type':'typename _CharT_alloc_type::size_type'))))
    (BinaryOperator 0x9d81c58 <line:588:2, col:19> '<dependent type>' '='
      (DeclRefExpr 0x9d81bf8 <col:2> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d81440 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type')
      (BinaryOperator 0x9d81c40 <col:15, col:19> '<dependent type>' '*'
        (IntegerLiteral 0x9d81c10 <col:15> 'int' 2)
        (DeclRefExpr 0x9d81c28 <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d81480 '__old_capacity' 'size_type':'typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (DeclStmt 0x9d81e58 <line:593:7, col:74>
    0x9d81ca0 "size_type __size =
      (CXXOperatorCallExpr 0x9d81e30 <col:26, col:73> '<dependent type>'
        (UnresolvedLookupExpr 0x9d81de8 <col:60, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d5c5c0 0x9d5cb10 0x9d5d090 0x9d5d890)
        (BinaryOperator 0x9d81db0 <col:26, col:58> '<dependent type>' '*'
          (ParenExpr 0x9d81d78 <col:26, col:41> '<dependent type>'
            (CXXOperatorCallExpr 0x9d81d50 <col:27, col:40> '<dependent type>'
              (UnresolvedLookupExpr 0x9d81d08 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d5c5c0 0x9d5cb10 0x9d5d090 0x9d5d890)
              (DeclRefExpr 0x9d81cd4 <col:27> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d81440 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type')
              (IntegerLiteral 0x9d81cf0 <col:40> 'int' 1)))
          (UnaryExprOrTypeTraitExpr 0x9d81d98 <col:45, col:58> 'unsigned int' sizeof '_CharT'))
        (UnaryExprOrTypeTraitExpr 0x9d81dd0 <col:62, col:73> 'unsigned int' sizeof 'struct std::basic_string::_Rep'))")
  (DeclStmt 0x9d81f48 <line:595:7, col:65>
    0x9d81e70 "const size_type __adj_size =
      (CXXOperatorCallExpr 0x9d81f20 <col:36, col:45> '<dependent type>'
        (UnresolvedLookupExpr 0x9d81ed8 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d5c5c0 0x9d5cb10 0x9d5d090 0x9d5d890)
        (DeclRefExpr 0x9d81ea4 <col:36> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9d81ca0 '__size' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9d81ebc <col:45> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d819c0 '__malloc_header_size' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (IfStmt 0x9d82538 <line:596:7, line:604:2>
    <<<NULL>>>
    (BinaryOperator 0x9d82098 <line:596:11, col:51> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x9d81fd0 <col:11, col:24> '<dependent type>'
        (UnresolvedLookupExpr 0x9d81f88 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bad330 0x9bc37b0 0x9bc6740 0x9d622b0 0x9d627e0 0x9d62d10)
        (DeclRefExpr 0x9d81f58 <col:11> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d81e70 '__adj_size' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9d81f70 <col:24> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d81950 '__pagesize' 'const size_type':'const typename _CharT_alloc_type::size_type'))
      (CXXOperatorCallExpr 0x9d82070 <col:38, col:51> '<dependent type>'
        (UnresolvedLookupExpr 0x9d82028 <col:49, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bad330 0x9bc37b0 0x9bc6740 0x9d622b0 0x9d627e0 0x9d62d10)
        (DeclRefExpr 0x9d81ff4 <col:38> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d81440 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9d8200c <col:51> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d81480 '__old_capacity' 'size_type':'typename _CharT_alloc_type::size_type')))
    (CompoundStmt 0x9d82518 <line:597:2, line:604:2>
      (DeclStmt 0x9d821b8 <line:598:4, col:66>
        0x9d820c0 "const size_type __extra =
          (CXXOperatorCallExpr 0x9d82190 <col:30, col:56> '<dependent type>'
            (UnresolvedLookupExpr 0x9d82158 <col:41, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
            (DeclRefExpr 0x9d820f4 <col:30> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d81950 '__pagesize' 'const size_type':'const typename _CharT_alloc_type::size_type')
            (BinaryOperator 0x9d82140 <col:43, col:56> '<dependent type>' '%'
              (DeclRefExpr 0x9d8210c <col:43> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d81e70 '__adj_size' 'const size_type':'const typename _CharT_alloc_type::size_type')
              (DeclRefExpr 0x9d82124 <col:56> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d81950 '__pagesize' 'const size_type':'const typename _CharT_alloc_type::size_type')))")
      (CompoundAssignOperator 0x9d82240 <line:599:4, col:41> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
        (DeclRefExpr 0x9d821d8 <col:4> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d81440 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type')
        (BinaryOperator 0x9d82228 <col:18, col:41> '<dependent type>' '/'
          (DeclRefExpr 0x9d821f0 <col:18> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d820c0 '__extra' 'const size_type':'const typename _CharT_alloc_type::size_type')
          (UnaryExprOrTypeTraitExpr 0x9d82210 <col:28, col:41> 'unsigned int' sizeof '_CharT')))
      (IfStmt 0x9d82348 <line:601:4, line:602:19>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9d822d8 <line:601:8, col:21> '<dependent type>'
          (UnresolvedLookupExpr 0x9d82290 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bad330 0x9bc37b0 0x9bc6740 0x9d622b0 0x9d627e0 0x9d62d10)
          (DeclRefExpr 0x9d82260 <col:8> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d81440 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0x9d82278 <col:21> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d698f0 '_S_max_size' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type'))
        (BinaryOperator 0x9d82330 <line:602:6, col:19> '<dependent type>' '='
          (DeclRefExpr 0x9d822fc <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d81440 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0x9d82314 <col:19> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d698f0 '_S_max_size' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)
      (BinaryOperator 0x9d82500 <line:603:4, col:60> '<dependent type>' '='
        (DeclRefExpr 0x9d82364 <col:4> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9d81ca0 '__size' 'size_type':'typename _CharT_alloc_type::size_type')
        (CXXOperatorCallExpr 0x9d824d8 <col:13, col:60> '<dependent type>'
          (UnresolvedLookupExpr 0x9d82490 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d5c5c0 0x9d5cb10 0x9d5d090 0x9d5d890)
          (BinaryOperator 0x9d82458 <col:13, col:45> '<dependent type>' '*'
            (ParenExpr 0x9d82420 <col:13, col:28> '<dependent type>'
              (CXXOperatorCallExpr 0x9d823f8 <col:14, col:27> '<dependent type>'
                (UnresolvedLookupExpr 0x9d823b0 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d5c5c0 0x9d5cb10 0x9d5d090 0x9d5d890)
                (DeclRefExpr 0x9d8237c <col:14> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d81440 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type')
                (IntegerLiteral 0x9d82398 <col:27> 'int' 1)))
            (UnaryExprOrTypeTraitExpr 0x9d82440 <col:32, col:45> 'unsigned int' sizeof '_CharT'))
          (UnaryExprOrTypeTraitExpr 0x9d82478 <col:49, col:60> 'unsigned int' sizeof 'struct std::basic_string::_Rep'))))
    <<<NULL>>>)
  (DeclStmt 0x9d82658 <line:608:7, col:65>
    0x9d82570 "void *__place =
      (CallExpr 0x9d82638 <col:23, col:64> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d825e8 <col:23, col:49> '<dependent type>' lvalue
          (CXXUnresolvedConstructExpr 0x9d825c8 <col:23, col:47> '_Raw_bytes_alloc':'typename _Alloc::_Alloc::rebind<char>::other'
            (DeclRefExpr 0x9d825b0 <col:40> 'const _Alloc' lvalue ParmVar 0x9d814f0 '__alloc' 'const _Alloc &')))
        (DeclRefExpr 0x9d8261c <col:58> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9d81ca0 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))")
  (DeclStmt 0x9d82718 <line:609:7, col:37>
    0x9d82680 "std::basic_string::_Rep *__p =
      (CXXNewExpr 0x9d826d8 <col:19, col:33> 'struct std::basic_string::_Rep *'
        (DeclRefExpr 0x9d826b4 <col:24> 'void *' lvalue Var 0x9d82570 '__place' 'void *'))")
  (BinaryOperator 0x9d82790 <line:610:7, col:26> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x9d82740 <col:7, col:12> '<dependent type>' lvalue
      (DeclRefExpr 0x9d82728 <col:7> 'struct std::basic_string::_Rep *' lvalue Var 0x9d82680 '__p' 'struct std::basic_string::_Rep *'))
    (DeclRefExpr 0x9d82774 <col:26> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d81440 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type'))
  (CallExpr 0x9d827f8 <line:618:7, col:28> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9d827c0 <col:7, col:12> '<dependent type>' lvalue
      (DeclRefExpr 0x9d827a8 <col:7> 'struct std::basic_string::_Rep *' lvalue Var 0x9d82680 '__p' 'struct std::basic_string::_Rep *')))
  (ReturnStmt 0x9d82830 <line:619:7, col:14>
    (DeclRefExpr 0x9d82814 <col:14> 'struct std::basic_string::_Rep *' lvalue Var 0x9d82680 '__p' 'struct std::basic_string::_Rep *')))


    _CharT *_M_clone(const _Alloc &__alloc, size_type __res = (IntegerLiteral 0x9d45490 </usr/include/c++/4.6/bits/basic_string.h:262:44> 'int' 0)
) (CompoundStmt 0x9d83320 </usr/include/c++/4.6/bits/basic_string.tcc:626:5, line:636:5>
  (DeclStmt 0x9d82ee8 <line:628:7, col:64>
    0x9d82de0 "const size_type __requested_cap =
      (CXXOperatorCallExpr 0x9d82ec0 <col:41, col:59> '<dependent type>'
        (UnresolvedLookupExpr 0x9d82e78 <col:57, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d5c5c0 0x9d5cb10 0x9d5d090 0x9d5d890)
        (CXXDependentScopeMemberExpr 0x9d82e28 <col:41, col:47> '<dependent type>' lvalue
          (CXXThisExpr 0x9d82e18 <col:41> 'struct std::basic_string::_Rep *' this))
        (DeclRefExpr 0x9d82e5c <col:59> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d82c90 '__res' 'size_type':'typename _CharT_alloc_type::size_type'))")
  (DeclStmt 0x9d83028 <line:629:7, line:630:15>
    0x9d82f10 "std::basic_string::_Rep *__r =
      (CallExpr 0x9d83000 <line:629:19, line:630:14> '<dependent type>'
        (DeclRefExpr 0x9d82f64 <line:629:19, col:25> 'typename basic_string<_CharT, _Traits, _Alloc>::_Rep *(size_type, size_type, const _Alloc &)' lvalue CXXMethod 0x9d81710 '_S_create' 'typename basic_string<_CharT, _Traits, _Alloc>::_Rep *(size_type, size_type, const _Alloc &)')
        (DeclRefExpr 0x9d82f84 <col:35> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d82de0 '__requested_cap' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (CXXDependentScopeMemberExpr 0x9d82fb0 <col:52, col:58> '<dependent type>' lvalue
          (CXXThisExpr 0x9d82fa0 <col:52> 'struct std::basic_string::_Rep *' this))
        (DeclRefExpr 0x9d82fe4 <line:630:7> 'const _Alloc' lvalue ParmVar 0x9d82c50 '__alloc' 'const _Alloc &'))")
  (IfStmt 0x9d831c8 <line:631:7, line:632:58>
    <<<NULL>>>
    (CXXDependentScopeMemberExpr 0x9d83048 <line:631:11, col:17> '<dependent type>' lvalue
      (CXXThisExpr 0x9d83038 <col:11> 'struct std::basic_string::_Rep *' this))
    (CallExpr 0x9d831a0 <line:632:2, col:58> '<dependent type>'
      (DeclRefExpr 0x9d8307c <col:2> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9d271e0 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
      (CallExpr 0x9d830e8 <col:10, col:26> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d830b0 <col:10, col:15> '<dependent type>' lvalue
          (DeclRefExpr 0x9d83094 <col:10> 'struct std::basic_string::_Rep *' lvalue Var 0x9d82f10 '__r' 'struct std::basic_string::_Rep *')))
      (CallExpr 0x9d83138 <col:29, col:40> '<dependent type>'
        (MemberExpr 0x9d83118 <col:29> '<bound member function type>' ->_M_refdata 0x9d23e10
          (CXXThisExpr 0x9d83108 <col:29> 'struct std::basic_string::_Rep *' this)))
      (CXXDependentScopeMemberExpr 0x9d83168 <col:43, col:49> '<dependent type>' lvalue
        (CXXThisExpr 0x9d83158 <col:43> 'struct std::basic_string::_Rep *' this)))
    <<<NULL>>>)
  (CallExpr 0x9d83280 <line:634:7, col:54> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9d83200 <col:7, col:12> '<dependent type>' lvalue
      (DeclRefExpr 0x9d831e4 <col:7> 'struct std::basic_string::_Rep *' lvalue Var 0x9d82f10 '__r' 'struct std::basic_string::_Rep *'))
    (CXXDependentScopeMemberExpr 0x9d83248 <col:39, col:45> '<dependent type>' lvalue
      (CXXThisExpr 0x9d83238 <col:39> 'struct std::basic_string::_Rep *' this)))
  (ReturnStmt 0x9d83310 <line:635:7, col:30>
    (CallExpr 0x9d832f0 <col:14, col:30> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9d832b8 <col:14, col:19> '<dependent type>' lvalue
        (DeclRefExpr 0x9d832a0 <col:14> 'struct std::basic_string::_Rep *' lvalue Var 0x9d82f10 '__r' 'struct std::basic_string::_Rep *')))))


    void resize(size_type __n, _CharT __c) (CompoundStmt 0x9d83ca0 </usr/include/c++/4.6/bits/basic_string.tcc:642:5, line:650:5>
  (DeclStmt 0x9d838c0 <line:643:7, col:44>
    0x9d83820 "const size_type __size =
      (CallExpr 0x9d838a0 <col:32, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d83868 <col:32, col:38> '<dependent type>' lvalue
          (CXXThisExpr 0x9d83858 <col:32> 'basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (CallExpr 0x9d83960 <line:644:7, col:58> '<dependent type>'
    (MemberExpr 0x9d838e0 <col:7> '<bound member function type>' ->_M_check_length 0x9d26d70
      (CXXThisExpr 0x9d838d0 <col:7> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9d83900 <col:23> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d83820 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
    (DeclRefExpr 0x9d83918 <col:31> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d836c0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0x9d83930 <col:36> 'const char [21]' lvalue "basic_string::resize"))
  (IfStmt 0x9d83c80 <line:645:7, line:648:17>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9d83a00 <line:645:11, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0x9d839b8 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bac3c0 0x9bc2c90 0x9bc5590 0x9d61190 0x9d616c0 0x9d61bf0)
      (DeclRefExpr 0x9d83988 <col:11> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d83820 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9d839a0 <col:20> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d836c0 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
    (CallExpr 0x9d83b18 <line:646:2, col:32> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9d83a38 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0x9d83a28 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXOperatorCallExpr 0x9d83ad8 <col:15, col:21> '<dependent type>'
        (UnresolvedLookupExpr 0x9d83aa0 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
        (DeclRefExpr 0x9d83a6c <col:15> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d836c0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9d83a84 <col:21> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d83820 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type'))
      (DeclRefExpr 0x9d83afc <col:29> '_CharT' lvalue ParmVar 0x9d83700 '__c' '_CharT'))
    (IfStmt 0x9d83c60 <line:647:12, line:648:17>
      <<<NULL>>>
      (CXXOperatorCallExpr 0x9d83bb8 <line:647:16, col:22> '<dependent type>'
        (UnresolvedLookupExpr 0x9d83b70 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bac3c0 0x9bc2c90 0x9bc5590 0x9d61190 0x9d616c0 0x9d61bf0)
        (DeclRefExpr 0x9d83b3c <col:16> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d836c0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9d83b54 <col:22> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d83820 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type'))
      (CallExpr 0x9d83c40 <line:648:2, col:17> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d83bf0 <col:2, col:8> '<dependent type>' lvalue
          (CXXThisExpr 0x9d83be0 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x9d83c24 <col:14> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d836c0 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
      <<<NULL>>>)))


    template <typename _InputIterator> basic_string<_CharT, _Traits, _Alloc> &_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2, std::__false_type) (CompoundStmt 0x9d84ad8 </usr/include/c++/4.6/bits/basic_string.tcc:658:7, line:664:7>
  (DeclStmt 0x9d84658 <line:659:2, col:36>
    0x9d845d0 "const basic_string<_CharT, _Traits, _Alloc> __s =
      (ParenListExpr 0x9d84638 <col:24, col:35> 'const basic_string<_CharT, _Traits, _Alloc>'
        (DeclRefExpr 0x9d84604 <col:25> '_InputIterator' lvalue ParmVar 0x9d84220 '__k1' '_InputIterator')
        (DeclRefExpr 0x9d8461c <col:31> '_InputIterator' lvalue ParmVar 0x9d84260 '__k2' '_InputIterator'))")
  (DeclStmt 0x9d84738 <line:660:2, col:36>
    0x9d84670 "const size_type __n1 =
      (CXXOperatorCallExpr 0x9d84710 <col:25, col:32> '<dependent type>'
        (UnresolvedLookupExpr 0x9d846d8 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
        (DeclRefExpr 0x9d846a4 <col:25> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9d841e0 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0x9d846bc <col:32> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9d841a0 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'))")
  (CallExpr 0x9d84880 <line:661:2, col:71> '<dependent type>'
    (MemberExpr 0x9d84758 <col:2> '<bound member function type>' ->_M_check_length 0x9d26d70
      (CXXThisExpr 0x9d84748 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9d84778 <col:18> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d84670 '__n1' 'const size_type':'const typename _CharT_alloc_type::size_type')
    (CallExpr 0x9d847e0 <col:24, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9d847a8 <col:24, col:28> '<dependent type>' lvalue
        (DeclRefExpr 0x9d84790 <col:24> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9d845d0 '__s' 'const basic_string<_CharT, _Traits, _Alloc>')))
    (StringLiteral 0x9d84840 <col:36> 'const char [34]' lvalue "basic_string::_M_replace_dispatch"))
  (ReturnStmt 0x9d84ac8 <line:662:2, line:663:21>
    (CallExpr 0x9d84a98 <line:662:9, line:663:21> '<dependent type>'
      (MemberExpr 0x9d848b8 <line:662:9> '<bound member function type>' ->_M_replace_safe 0x9d3b8f0
        (CXXThisExpr 0x9d848a8 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXOperatorCallExpr 0x9d84978 <col:25, col:42> '<dependent type>'
        (UnresolvedLookupExpr 0x9d84940 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
        (DeclRefExpr 0x9d848d8 <col:25> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9d841a0 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (CallExpr 0x9d84920 <col:32, col:42> '<dependent type>'
          (MemberExpr 0x9d84900 <col:32> '<bound member function type>' ->_M_ibegin 0x9d26950
            (CXXThisExpr 0x9d848f0 <col:32> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (DeclRefExpr 0x9d8499c <col:45> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d84670 '__n1' 'const size_type':'const typename _CharT_alloc_type::size_type')
      (CallExpr 0x9d84a08 <col:51, col:63> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d849d0 <col:51, col:55> '<dependent type>' lvalue
          (DeclRefExpr 0x9d849b4 <col:51> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9d845d0 '__s' 'const basic_string<_CharT, _Traits, _Alloc>')))
      (CallExpr 0x9d84a78 <line:663:11, col:20> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d84a40 <col:11, col:15> '<dependent type>' lvalue
          (DeclRefExpr 0x9d84a24 <col:11> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9d845d0 '__s' 'const basic_string<_CharT, _Traits, _Alloc>'))))))

;
    basic_string<_CharT, _Traits, _Alloc> &_M_replace_aux(size_type __pos1, size_type __n1, size_type __n2, _CharT __c) (CompoundStmt 0x9d85668 </usr/include/c++/4.6/bits/basic_string.tcc:671:5, line:677:5>
  (CallExpr 0x9d853c8 <line:672:7, col:65> '<dependent type>'
    (MemberExpr 0x9d85300 <col:7> '<bound member function type>' ->_M_check_length 0x9d26d70
      (CXXThisExpr 0x9d852f0 <col:7> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9d85320 <col:23> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d84fd0 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
    (DeclRefExpr 0x9d85338 <col:29> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d85010 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0x9d85390 <col:35> 'const char [29]' lvalue "basic_string::_M_replace_aux"))
  (CallExpr 0x9d85468 <line:673:7, col:35> '<dependent type>'
    (MemberExpr 0x9d85400 <col:7> '<bound member function type>' ->_M_mutate 0x9d7dec0
      (CXXThisExpr 0x9d853f0 <col:7> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9d85420 <col:17> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d84f90 '__pos1' 'size_type':'typename _CharT_alloc_type::size_type')
    (DeclRefExpr 0x9d85438 <col:25> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d84fd0 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
    (DeclRefExpr 0x9d85450 <col:31> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d85010 '__n2' 'size_type':'typename _CharT_alloc_type::size_type'))
  (IfStmt 0x9d85610 <line:674:7, line:675:41>
    <<<NULL>>>
    (DeclRefExpr 0x9d85490 <line:674:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d85010 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0x9d855e8 <line:675:2, col:41> '<dependent type>'
      (DeclRefExpr 0x9d854a8 <col:2> 'void (_CharT *, size_type, _CharT)' lvalue CXXMethod 0x9d27510 '_M_assign' 'void (_CharT *, size_type, _CharT)')
      (CXXOperatorCallExpr 0x9d85590 <col:12, col:24> '<dependent type>'
        (UnresolvedLookupExpr 0x9d85548 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d5c5c0 0x9d5cb10 0x9d5d090 0x9d5d890)
        (CallExpr 0x9d85510 <col:12, col:20> '<dependent type>'
          (UnresolvedMemberExpr 0x9d854d0 <col:12> '<bound member function type>' lvalue))
        (DeclRefExpr 0x9d8552c <col:24> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d84f90 '__pos1' 'size_type':'typename _CharT_alloc_type::size_type'))
      (DeclRefExpr 0x9d855b4 <col:32> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d85010 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9d855cc <col:38> '_CharT' lvalue ParmVar 0x9d85050 '__c' '_CharT'))
    <<<NULL>>>)
  (ReturnStmt 0x9d85658 <line:676:7, col:15>
    (UnaryOperator 0x9d85640 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9d85630 <col:15> 'basic_string<_CharT, _Traits, _Alloc> *' this))))


    basic_string<_CharT, _Traits, _Alloc> &_M_replace_safe(size_type __pos1, size_type __n1, const _CharT *__s, size_type __n2) (CompoundStmt 0x9d86128 </usr/include/c++/4.6/bits/basic_string.tcc:684:5, line:689:5>
  (CallExpr 0x9d85f28 <line:685:7, col:35> '<dependent type>'
    (MemberExpr 0x9d85ec0 <col:7> '<bound member function type>' ->_M_mutate 0x9d7dec0
      (CXXThisExpr 0x9d85eb0 <col:7> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9d85ee0 <col:17> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d85b20 '__pos1' 'size_type':'typename _CharT_alloc_type::size_type')
    (DeclRefExpr 0x9d85ef8 <col:25> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d85b60 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
    (DeclRefExpr 0x9d85f10 <col:31> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d85c10 '__n2' 'size_type':'typename _CharT_alloc_type::size_type'))
  (IfStmt 0x9d860d0 <line:686:7, line:687:39>
    <<<NULL>>>
    (DeclRefExpr 0x9d85f50 <line:686:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d85c10 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0x9d860a8 <line:687:2, col:39> '<dependent type>'
      (DeclRefExpr 0x9d85f68 <col:2> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9d271e0 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
      (CXXOperatorCallExpr 0x9d86050 <col:10, col:22> '<dependent type>'
        (UnresolvedLookupExpr 0x9d86008 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d5c5c0 0x9d5cb10 0x9d5d090 0x9d5d890)
        (CallExpr 0x9d85fd0 <col:10, col:18> '<dependent type>'
          (UnresolvedMemberExpr 0x9d85f90 <col:10> '<bound member function type>' lvalue))
        (DeclRefExpr 0x9d85fec <col:22> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d85b20 '__pos1' 'size_type':'typename _CharT_alloc_type::size_type'))
      (DeclRefExpr 0x9d86074 <col:30> 'const _CharT *' lvalue ParmVar 0x9d85bd0 '__s' 'const _CharT *')
      (DeclRefExpr 0x9d8608c <col:35> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d85c10 '__n2' 'size_type':'typename _CharT_alloc_type::size_type'))
    <<<NULL>>>)
  (ReturnStmt 0x9d86118 <line:688:7, col:15>
    (UnaryOperator 0x9d86100 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9d860f0 <col:15> 'basic_string<_CharT, _Traits, _Alloc> *' this))))


    template <typename _CharT, typename _Traits, typename _Alloc> basic_string<_CharT, _Traits, _Alloc> operator+(const _CharT *__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x9d86d48 </usr/include/c++/4.6/bits/basic_string.tcc:695:5, line:705:5>
  (NullStmt 0x9d866d0 <line:696:39>)
  (DeclStmt 0x9d86870 <line:697:7, col:66>
    0x9d86840 "typedef basic_string<_CharT, _Traits, _Alloc> __string_type")
  (DeclStmt 0x9d86930 <line:698:7, col:62>
    0x9d86900 "typedef typename __string_type::size_type __size_type")
  (DeclStmt 0x9d86a20 <line:699:7, col:55>
    0x9d86960 "const __size_type __len =
      (CallExpr 0x9d86a00 <col:33, col:54> '<dependent type>'
        (DependentScopeDeclRefExpr 0x9d869c0 <col:33, col:42> '<dependent type>' lvalue)
        (DeclRefExpr 0x9d869e4 <col:49> 'const _CharT *' lvalue ParmVar 0x9d863b0 '__lhs' 'const _CharT *'))")
  (DeclStmt 0x9d86a78 <line:700:7, col:26>
    0x9d86a40 "__string_type __str")
  (CallExpr 0x9d86bd0 <line:701:7, col:41> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9d86aa0 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0x9d86a88 <col:7> '__string_type':'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9d86a40 '__str' '__string_type':'basic_string<_CharT, _Traits, _Alloc>'))
    (CXXOperatorCallExpr 0x9d86ba8 <col:21, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0x9d86b60 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9d86680 0x9bc4ab0 0x9d5bd80 0x9d5d890 0x9d5cb10 0x9d5d090)
      (DeclRefExpr 0x9d86ad4 <col:21> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0x9d86960 '__len' 'const __size_type':'const typename __string_type::size_type')
      (CallExpr 0x9d86b40 <col:29, col:40> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d86b08 <col:29, col:35> '<dependent type>' lvalue
          (DeclRefExpr 0x9d86aec <col:29> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d86560 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &')))))
  (CallExpr 0x9d86c70 <line:702:7, col:32> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9d86c08 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0x9d86bf0 <col:7> '__string_type':'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9d86a40 '__str' '__string_type':'basic_string<_CharT, _Traits, _Alloc>'))
    (DeclRefExpr 0x9d86c3c <col:20> 'const _CharT *' lvalue ParmVar 0x9d863b0 '__lhs' 'const _CharT *')
    (DeclRefExpr 0x9d86c54 <col:27> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0x9d86960 '__len' 'const __size_type':'const typename __string_type::size_type'))
  (CallExpr 0x9d86d00 <line:703:7, col:25> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9d86cb0 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0x9d86c94 <col:7> '__string_type':'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9d86a40 '__str' '__string_type':'basic_string<_CharT, _Traits, _Alloc>'))
    (DeclRefExpr 0x9d86ce4 <col:20> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d86560 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
  (ReturnStmt 0x9d86d38 <line:704:7, col:14>
    (DeclRefExpr 0x9d86d20 <col:14> '__string_type':'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9d86a40 '__str' '__string_type':'basic_string<_CharT, _Traits, _Alloc>')))

;
    template <typename _CharT, typename _Traits, typename _Alloc> basic_string<_CharT, _Traits, _Alloc> operator+(_CharT __lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x9d878f8 </usr/include/c++/4.6/bits/basic_string.tcc:710:5, line:719:5>
  (DeclStmt 0x9d87460 <line:711:7, col:66>
    0x9d87430 "typedef basic_string<_CharT, _Traits, _Alloc> __string_type")
  (DeclStmt 0x9d87520 <line:712:7, col:62>
    0x9d874f0 "typedef typename __string_type::size_type __size_type")
  (DeclStmt 0x9d87578 <line:713:7, col:26>
    0x9d87540 "__string_type __str")
  (DeclStmt 0x9d87658 <line:714:7, col:45>
    0x9d875b0 "const __size_type __len =
      (CallExpr 0x9d87638 <col:33, col:44> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d87600 <col:33, col:39> '<dependent type>' lvalue
          (DeclRefExpr 0x9d875e4 <col:33> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d87160 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &')))")
  (CallExpr 0x9d87758 <line:715:7, col:30> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9d87680 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0x9d87668 <col:7> '__string_type':'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9d87540 '__str' '__string_type':'basic_string<_CharT, _Traits, _Alloc>'))
    (CXXOperatorCallExpr 0x9d87730 <col:21, col:29> '<dependent type>'
      (UnresolvedLookupExpr 0x9d876e8 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9d87280 0x9d86680 0x9bc4ab0 0x9d5bd80 0x9d5d890 0x9d5d090)
      (DeclRefExpr 0x9d876b4 <col:21> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0x9d875b0 '__len' 'const __size_type':'const typename __string_type::size_type')
      (IntegerLiteral 0x9d876d0 <col:29> 'int' 1)))
  (CallExpr 0x9d87820 <line:716:7, col:41> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9d87790 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0x9d87778 <col:7> '__string_type':'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9d87540 '__str' '__string_type':'basic_string<_CharT, _Traits, _Alloc>'))
    (CXXUnresolvedConstructExpr 0x9d877e8 <col:20, col:33> '__size_type':'typename __string_type::size_type'
      (IntegerLiteral 0x9d877d0 <col:32> 'int' 1))
    (DeclRefExpr 0x9d87804 <col:36> '_CharT' lvalue ParmVar 0x9d86fb0 '__lhs' '_CharT'))
  (CallExpr 0x9d878b0 <line:717:7, col:25> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9d87860 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0x9d87844 <col:7> '__string_type':'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9d87540 '__str' '__string_type':'basic_string<_CharT, _Traits, _Alloc>'))
    (DeclRefExpr 0x9d87894 <col:20> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d87160 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
  (ReturnStmt 0x9d878e8 <line:718:7, col:14>
    (DeclRefExpr 0x9d878d0 <col:14> '__string_type':'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9d87540 '__str' '__string_type':'basic_string<_CharT, _Traits, _Alloc>')))

;
    typename basic_string<_CharT, _Traits, _Alloc>::size_type copy(_CharT *__s, size_type __n, size_type __pos = (IntegerLiteral 0x9d45588 </usr/include/c++/4.6/bits/basic_string.h:1745:58> 'int' 0)
) const (CompoundStmt 0x9d88470 </usr/include/c++/4.6/bits/basic_string.tcc:725:5, line:733:5>
  (CallExpr 0x9d881b8 <line:726:7, col:43> '<dependent type>'
    (MemberExpr 0x9d88150 <col:7> '<bound member function type>' ->_M_check 0x9d26bb0
      (CXXThisExpr 0x9d88140 <col:7> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9d88170 <col:16> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d87eb0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0x9d88188 <col:23> 'const char [19]' lvalue "basic_string::copy"))
  (BinaryOperator 0x9d88280 <line:727:7, col:32> '<dependent type>' '='
    (DeclRefExpr 0x9d881dc <col:7> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d87e70 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0x9d88258 <col:13, col:32> '<dependent type>'
      (MemberExpr 0x9d88208 <col:13> '<bound member function type>' ->_M_limit 0x9d26ed0
        (CXXThisExpr 0x9d881f8 <col:13> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9d88228 <col:22> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d87eb0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9d88240 <col:29> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d87e70 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))
  (NullStmt 0x9d88298 <line:728:46>)
  (IfStmt 0x9d88428 <line:729:7, line:730:37>
    <<<NULL>>>
    (DeclRefExpr 0x9d882a4 <line:729:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d87e70 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0x9d88400 <line:730:2, col:37> '<dependent type>'
      (DeclRefExpr 0x9d882bc <col:2> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9d271e0 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
      (DeclRefExpr 0x9d882d4 <col:10> '_CharT *' lvalue ParmVar 0x9d87e30 '__s' '_CharT *')
      (CXXOperatorCallExpr 0x9d883c0 <col:15, col:27> '<dependent type>'
        (UnresolvedLookupExpr 0x9d88378 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9d87280 0x9d86680 0x9bc4ab0 0x9d5bd80 0x9d5d890 0x9d5d090)
        (CallExpr 0x9d88340 <col:15, col:23> '<dependent type>'
          (UnresolvedMemberExpr 0x9d88300 <col:15> '<bound member function type>' lvalue))
        (DeclRefExpr 0x9d8835c <col:27> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d87eb0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
      (DeclRefExpr 0x9d883e4 <col:34> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d87e70 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
    <<<NULL>>>)
  (ReturnStmt 0x9d88460 <line:732:7, col:14>
    (DeclRefExpr 0x9d88444 <col:14> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d87e70 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))


    typename basic_string<_CharT, _Traits, _Alloc>::size_type find(const _CharT *__s, size_type __pos, size_type __n) const (CompoundStmt 0x9d89770 </usr/include/c++/4.6/bits/basic_string.tcc:739:5, line:756:5>
  (NullStmt 0x9d88cb0 <line:740:46>)
  (DeclStmt 0x9d88d70 <line:741:7, col:44>
    0x9d88cd0 "const size_type __size =
      (CallExpr 0x9d88d50 <col:32, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d88d18 <col:32, col:38> '<dependent type>' lvalue
          (CXXThisExpr 0x9d88d08 <col:32> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (DeclStmt 0x9d88e38 <line:742:7, col:39>
    0x9d88d90 "const _CharT *__data =
      (CallExpr 0x9d88e18 <col:30, col:38> '<dependent type>'
        (UnresolvedMemberExpr 0x9d88dd8 <col:30> '<bound member function type>' lvalue))")
  (IfStmt 0x9d88ff8 <line:744:7, line:745:35>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9d88ed0 <line:744:11, col:18> '<dependent type>'
      (UnresolvedLookupExpr 0x9d88e78 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30 0x9d5e270 0x9d5ece0 0x9d5f520 0x9d5fa90)
      (DeclRefExpr 0x9d88e48 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d88a20 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (IntegerLiteral 0x9d88e60 <col:18> 'int' 0))
    (ReturnStmt 0x9d88fe8 <line:745:2, col:35>
      (ConditionalOperator 0x9d88fc8 <col:9, col:35> '<dependent type>'
        (CXXOperatorCallExpr 0x9d88f70 <col:9, col:18> '<dependent type>'
          (UnresolvedLookupExpr 0x9d88f28 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9badc90 0x9bc3ba0 0x9bc6b90 0x9d63390 0x9d638c0 0x9d63df0)
          (DeclRefExpr 0x9d88ef4 <col:9> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d889e0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0x9d88f0c <col:18> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d88cd0 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type'))
        (DeclRefExpr 0x9d88f94 <col:27> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d889e0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9d88fac <col:35> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d6a5d0 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (IfStmt 0x9d89728 <line:747:7, line:754:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9d89090 <line:747:11, col:18> '<dependent type>'
      (UnresolvedLookupExpr 0x9d89048 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9badc90 0x9bc3ba0 0x9bc6b90 0x9d63390 0x9d638c0 0x9d63df0)
      (DeclRefExpr 0x9d89014 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d88a20 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9d8902c <col:18> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d88cd0 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type'))
    (CompoundStmt 0x9d89710 <line:748:2, line:754:2>
      (ForStmt 0x9d896e8 <line:749:4, line:753:15>
        <<<NULL>>>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9d891a8 <line:749:11, col:29> '<dependent type>'
          (UnresolvedLookupExpr 0x9d89160 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9badc90 0x9bc3ba0 0x9bc6b90 0x9d63390 0x9d638c0 0x9d63df0)
          (DeclRefExpr 0x9d890b4 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d889e0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
          (CXXOperatorCallExpr 0x9d89138 <col:20, col:29> '<dependent type>'
            (UnresolvedLookupExpr 0x9d89100 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
            (DeclRefExpr 0x9d890cc <col:20> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d88cd0 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
            (DeclRefExpr 0x9d890e4 <col:29> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d88a20 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))
        (UnaryOperator 0x9d891e8 <col:34, col:36> '<dependent type>' prefix '++'
          (DeclRefExpr 0x9d891cc <col:36> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d889e0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        (IfStmt 0x9d896c8 <line:750:6, line:753:15>
          <<<NULL>>>
          (BinaryOperator 0x9d89688 <line:750:10, line:752:27> '<dependent type>' '&&'
            (CallExpr 0x9d892f0 <line:750:10, col:47> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9d89228 <col:10, col:23> '<dependent type>' lvalue)
              (ArraySubscriptExpr 0x9d89290 <col:26, col:38> '<dependent type>' lvalue
                (DeclRefExpr 0x9d8925c <col:26> 'const _CharT *' lvalue Var 0x9d88d90 '__data' 'const _CharT *')
                (DeclRefExpr 0x9d89274 <col:33> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d889e0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
              (ArraySubscriptExpr 0x9d892d8 <col:41, col:46> '<dependent type>' lvalue
                (DeclRefExpr 0x9d892a4 <col:41> 'const _CharT *' lvalue ParmVar 0x9d889a0 '__s' 'const _CharT *')
                (IntegerLiteral 0x9d892c0 <col:45> 'int' 0)))
            (CXXOperatorCallExpr 0x9d89660 <line:751:6, line:752:27> '<dependent type>'
              (UnresolvedLookupExpr 0x9d89608 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30 0x9d5e270 0x9d5ece0 0x9d5f520 0x9d5fa90)
              (CallExpr 0x9d895c8 <line:751:6, line:752:22> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9d89338 <line:751:6, col:19> '<dependent type>' lvalue)
                (CXXOperatorCallExpr 0x9d89470 <col:27, col:44> '<dependent type>'
                  (UnresolvedLookupExpr 0x9d89428 <col:42, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9d87280 0x9d86680 0x9bc4ab0 0x9d5bd80 0x9d5d890 0x9d5d090)
                  (CXXOperatorCallExpr 0x9d893e8 <col:27, col:36> '<dependent type>'
                    (UnresolvedLookupExpr 0x9d893a0 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9d87280 0x9d86680 0x9bc4ab0 0x9d5bd80 0x9d5d890 0x9d5d090)
                    (DeclRefExpr 0x9d8936c <col:27> 'const _CharT *' lvalue Var 0x9d88d90 '__data' 'const _CharT *')
                    (DeclRefExpr 0x9d89384 <col:36> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d889e0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
                  (IntegerLiteral 0x9d89410 <col:44> 'int' 1))
                (CXXOperatorCallExpr 0x9d89510 <line:752:6, col:12> '<dependent type>'
                  (UnresolvedLookupExpr 0x9d894c8 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9d87280 0x9d86680 0x9bc4ab0 0x9d5bd80 0x9d5d890 0x9d5d090)
                  (DeclRefExpr 0x9d89494 <col:6> 'const _CharT *' lvalue ParmVar 0x9d889a0 '__s' 'const _CharT *')
                  (IntegerLiteral 0x9d894b0 <col:12> 'int' 1))
                (CXXOperatorCallExpr 0x9d895a0 <col:15, col:21> '<dependent type>'
                  (UnresolvedLookupExpr 0x9d89568 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
                  (DeclRefExpr 0x9d89534 <col:15> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d88a20 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
                  (IntegerLiteral 0x9d89550 <col:21> 'int' 1)))
              (IntegerLiteral 0x9d895f0 <col:27> 'int' 0)))
          (ReturnStmt 0x9d896b8 <line:753:8, col:15>
            (DeclRefExpr 0x9d896a0 <col:15> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d889e0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
          <<<NULL>>>)))
    <<<NULL>>>)
  (ReturnStmt 0x9d89760 <line:755:7, col:14>
    (DeclRefExpr 0x9d89744 <col:14> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d6a5d0 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))


    typename basic_string<_CharT, _Traits, _Alloc>::size_type find(_CharT __c, size_type __pos = (IntegerLiteral 0x9d455d0 </usr/include/c++/4.6/bits/basic_string.h:1841:42> 'int' 0)
) const (CompoundStmt 0x9d8a5e8 </usr/include/c++/4.6/bits/basic_string.tcc:762:5, line:774:5>
  (DeclStmt 0x9d89f90 <line:763:7, col:29>
    0x9d89f40 "size_type __ret =
      (DeclRefExpr 0x9d89f74 <col:25> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d6a5d0 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')")
  (DeclStmt 0x9d8a050 <line:764:7, col:44>
    0x9d89fb0 "const size_type __size =
      (CallExpr 0x9d8a030 <col:32, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d89ff8 <col:32, col:38> '<dependent type>' lvalue
          (CXXThisExpr 0x9d89fe8 <col:32> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (IfStmt 0x9d8a5a0 <line:765:7, line:772:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9d8a0d8 <line:765:11, col:19> '<dependent type>'
      (UnresolvedLookupExpr 0x9d8a090 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bac3c0 0x9bc2c90 0x9bc5590 0x9d61190 0x9d616c0 0x9d61bf0)
      (DeclRefExpr 0x9d8a060 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d89cb0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9d8a078 <col:19> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d89fb0 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type'))
    (CompoundStmt 0x9d8a580 <line:766:2, line:772:2>
      (DeclStmt 0x9d8a1e8 <line:767:4, col:36>
        0x9d8a130 "const _CharT *__data =
          (CallExpr 0x9d8a1b8 <col:27, col:35> '<dependent type>'
            (UnresolvedMemberExpr 0x9d8a178 <col:27> '<bound member function type>' lvalue))")
      (DeclStmt 0x9d8a2c8 <line:768:4, col:40>
        0x9d8a200 "const size_type __n =
          (CXXOperatorCallExpr 0x9d8a2a0 <col:26, col:35> '<dependent type>'
            (UnresolvedLookupExpr 0x9d8a268 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
            (DeclRefExpr 0x9d8a234 <col:26> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d89fb0 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
            (DeclRefExpr 0x9d8a24c <col:35> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d89cb0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))")
      (DeclStmt 0x9d8a478 <line:769:4, col:67>
        0x9d8a2f0 "const _CharT *__p =
          (CallExpr 0x9d8a450 <col:24, col:66> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9d8a348 <col:24, col:37> '<dependent type>' lvalue)
            (CXXOperatorCallExpr 0x9d8a3f8 <col:42, col:51> '<dependent type>'
              (UnresolvedLookupExpr 0x9d8a3b0 <col:49, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9d87280 0x9d86680 0x9bc4ab0 0x9d5bd80 0x9d5d890 0x9d5d090)
              (DeclRefExpr 0x9d8a37c <col:42> 'const _CharT *' lvalue Var 0x9d8a130 '__data' 'const _CharT *')
              (DeclRefExpr 0x9d8a394 <col:51> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d89cb0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
            (DeclRefExpr 0x9d8a41c <col:58> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d8a200 '__n' 'const size_type':'const typename _CharT_alloc_type::size_type')
            (DeclRefExpr 0x9d8a434 <col:63> '_CharT' lvalue ParmVar 0x9d89c70 '__c' '_CharT'))")
      (IfStmt 0x9d8a560 <line:770:4, line:771:20>
        <<<NULL>>>
        (DeclRefExpr 0x9d8a488 <line:770:8> 'const _CharT *' lvalue Var 0x9d8a2f0 '__p' 'const _CharT *')
        (BinaryOperator 0x9d8a548 <line:771:6, col:20> '<dependent type>' '='
          (DeclRefExpr 0x9d8a4a0 <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9d89f40 '__ret' 'size_type':'typename _CharT_alloc_type::size_type')
          (CXXOperatorCallExpr 0x9d8a520 <col:14, col:20> '<dependent type>'
            (UnresolvedLookupExpr 0x9d8a4e8 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
            (DeclRefExpr 0x9d8a4b8 <col:14> 'const _CharT *' lvalue Var 0x9d8a2f0 '__p' 'const _CharT *')
            (DeclRefExpr 0x9d8a4d0 <col:20> 'const _CharT *' lvalue Var 0x9d8a130 '__data' 'const _CharT *')))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9d8a5d8 <line:773:7, col:14>
    (DeclRefExpr 0x9d8a5bc <col:14> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9d89f40 '__ret' 'size_type':'typename _CharT_alloc_type::size_type')))


    typename basic_string<_CharT, _Traits, _Alloc>::size_type rfind(const _CharT *__s, size_type __pos, size_type __n) const (CompoundStmt 0x9d8b578 </usr/include/c++/4.6/bits/basic_string.tcc:780:5, line:795:5>
  (NullStmt 0x9d8ae20 <line:781:46>)
  (DeclStmt 0x9d8aee0 <line:782:7, col:44>
    0x9d8ae40 "const size_type __size =
      (CallExpr 0x9d8aec0 <col:32, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d8ae88 <col:32, col:38> '<dependent type>' lvalue
          (CXXThisExpr 0x9d8ae78 <col:32> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (IfStmt 0x9d8b530 <line:783:7, line:793:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9d8af68 <line:783:11, col:18> '<dependent type>'
      (UnresolvedLookupExpr 0x9d8af20 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9badc90 0x9bc3ba0 0x9bc6b90 0x9d63390 0x9d638c0 0x9d63df0)
      (DeclRefExpr 0x9d8aef0 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d8ab90 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9d8af08 <col:18> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d8ae40 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type'))
    (CompoundStmt 0x9d8b510 <line:784:2, line:793:2>
      (BinaryOperator 0x9d8b0f0 <line:785:4, col:51> '<dependent type>' '='
        (DeclRefExpr 0x9d8af8c <col:4> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d8ab50 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (CallExpr 0x9d8b0c8 <col:12, col:51> '<dependent type>'
          (UnresolvedLookupExpr 0x9d8afc0 <col:12, col:17> '<overloaded function type>' lvalue (no ADL) = '1' 0x9bdffa0 0x9b94620)
          (CXXUnresolvedConstructExpr 0x9d8b090 <col:21, col:43> 'size_type':'typename _CharT_alloc_type::size_type'
            (CXXOperatorCallExpr 0x9d8b068 <col:31, col:40> '<dependent type>'
              (UnresolvedLookupExpr 0x9d8b030 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
              (DeclRefExpr 0x9d8b000 <col:31> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d8ae40 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
              (DeclRefExpr 0x9d8b018 <col:40> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d8ab90 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))
          (DeclRefExpr 0x9d8b0ac <col:46> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d8ab50 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')))
      (DeclStmt 0x9d8b1c8 <line:786:4, col:36>
        0x9d8b120 "const _CharT *__data =
          (CallExpr 0x9d8b1a8 <col:27, col:35> '<dependent type>'
            (UnresolvedMemberExpr 0x9d8b168 <col:27> '<bound member function type>' lvalue))")
      (DoStmt 0x9d8b4f8 <line:787:4, line:792:22>
        (CompoundStmt 0x9d8b410 <line:788:6, line:791:6>
          (IfStmt 0x9d8b3f0 <line:789:8, line:790:10>
            <<<NULL>>>
            (CXXOperatorCallExpr 0x9d8b3a0 <line:789:12, col:62> '<dependent type>'
              (UnresolvedLookupExpr 0x9d8b348 <col:59, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30 0x9d5e270 0x9d5ece0 0x9d5f520 0x9d5fa90)
              (CallExpr 0x9d8b308 <col:12, col:57> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9d8b200 <col:12, col:25> '<dependent type>' lvalue)
                (CXXOperatorCallExpr 0x9d8b2b0 <col:33, col:42> '<dependent type>'
                  (UnresolvedLookupExpr 0x9d8b268 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9d87280 0x9d86680 0x9bc4ab0 0x9d5bd80 0x9d5d890 0x9d5d090)
                  (DeclRefExpr 0x9d8b234 <col:33> 'const _CharT *' lvalue Var 0x9d8b120 '__data' 'const _CharT *')
                  (DeclRefExpr 0x9d8b24c <col:42> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d8ab50 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
                (DeclRefExpr 0x9d8b2d4 <col:49> 'const _CharT *' lvalue ParmVar 0x9d8ab10 '__s' 'const _CharT *')
                (DeclRefExpr 0x9d8b2ec <col:54> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d8ab90 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
              (IntegerLiteral 0x9d8b330 <col:62> 'int' 0))
            (ReturnStmt 0x9d8b3e0 <line:790:3, col:10>
              (DeclRefExpr 0x9d8b3c4 <col:10> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d8ab50 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
            <<<NULL>>>))
        (CXXOperatorCallExpr 0x9d8b4d0 <line:792:11, col:21> '<dependent type>'
          (UnresolvedLookupExpr 0x9d8b488 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bad330 0x9bc37b0 0x9bc6740 0x9d622b0 0x9d627e0 0x9d62d10)
          (UnaryOperator 0x9d8b458 <col:11, col:16> '<dependent type>' postfix '--'
            (DeclRefExpr 0x9d8b424 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d8ab50 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
          (IntegerLiteral 0x9d8b470 <col:21> 'int' 0))))
    <<<NULL>>>)
  (ReturnStmt 0x9d8b568 <line:794:7, col:14>
    (DeclRefExpr 0x9d8b54c <col:14> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d6a5d0 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))


    typename basic_string<_CharT, _Traits, _Alloc>::size_type rfind(_CharT __c, size_type __pos = (DeclRefExpr 0x9d45618 </usr/include/c++/4.6/bits/basic_string.h:1899:43> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d24940 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const (CompoundStmt 0x9d8c238 </usr/include/c++/4.6/bits/basic_string.tcc:801:5, line:812:5>
  (DeclStmt 0x9d8bde0 <line:802:7, col:38>
    0x9d8bd40 "size_type __size =
      (CallExpr 0x9d8bdc0 <col:26, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d8bd88 <col:26, col:32> '<dependent type>' lvalue
          (CXXThisExpr 0x9d8bd78 <col:26> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (IfStmt 0x9d8c1f0 <line:803:7, line:810:2>
    <<<NULL>>>
    (DeclRefExpr 0x9d8bdf0 <line:803:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9d8bd40 '__size' 'size_type':'typename _CharT_alloc_type::size_type')
    (CompoundStmt 0x9d8c1d8 <line:804:2, line:810:2>
      (IfStmt 0x9d8bf08 <line:805:4, line:806:15>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9d8be98 <line:805:8, col:19> '<dependent type>'
          (UnresolvedLookupExpr 0x9d8be50 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bad330 0x9bc37b0 0x9bc6740 0x9d622b0 0x9d627e0 0x9d62d10)
          (UnaryOperator 0x9d8be20 <col:8, col:10> '<dependent type>' prefix '--'
            (DeclRefExpr 0x9d8be08 <col:10> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9d8bd40 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
          (DeclRefExpr 0x9d8be34 <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d8bab0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        (BinaryOperator 0x9d8bef0 <line:806:6, col:15> '<dependent type>' '='
          (DeclRefExpr 0x9d8bebc <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9d8bd40 '__size' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0x9d8bed4 <col:15> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d8bab0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)
      (ForStmt 0x9d8c1b0 <line:807:4, line:809:15>
        (UnaryOperator 0x9d8bf40 <line:807:9, col:11> '<dependent type>' prefix '++'
          (DeclRefExpr 0x9d8bf24 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9d8bd40 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9d8c000 <col:19, col:30> '<dependent type>'
          (UnresolvedLookupExpr 0x9d8bfb8 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bad330 0x9bc37b0 0x9bc6740 0x9d622b0 0x9d627e0 0x9d62d10)
          (UnaryOperator 0x9d8bf88 <col:19, col:25> '<dependent type>' postfix '--'
            (DeclRefExpr 0x9d8bf54 <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9d8bd40 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
          (IntegerLiteral 0x9d8bfa0 <col:30> 'int' 0))
        <<<NULL>>>
        (IfStmt 0x9d8c190 <line:808:6, line:809:15>
          <<<NULL>>>
          (CallExpr 0x9d8c140 <line:808:10, col:48> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9d8c050 <col:10, col:23> '<dependent type>' lvalue)
            (ArraySubscriptExpr 0x9d8c110 <col:26, col:42> '<dependent type>' lvalue
              (CallExpr 0x9d8c0d8 <col:26, col:34> '<dependent type>'
                (UnresolvedMemberExpr 0x9d8c098 <col:26> '<bound member function type>' lvalue))
              (DeclRefExpr 0x9d8c0f4 <col:36> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9d8bd40 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
            (DeclRefExpr 0x9d8c124 <col:45> '_CharT' lvalue ParmVar 0x9d8ba70 '__c' '_CharT'))
          (ReturnStmt 0x9d8c180 <line:809:8, col:15>
            (DeclRefExpr 0x9d8c164 <col:15> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9d8bd40 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
          <<<NULL>>>)))
    <<<NULL>>>)
  (ReturnStmt 0x9d8c228 <line:811:7, col:14>
    (DeclRefExpr 0x9d8c20c <col:14> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d6a5d0 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))


    typename basic_string<_CharT, _Traits, _Alloc>::size_type find_first_of(const _CharT *__s, size_type __pos, size_type __n) const (CompoundStmt 0x9d8ce40 </usr/include/c++/4.6/bits/basic_string.tcc:818:5, line:827:5>
  (NullStmt 0x9d8ca70 <line:819:46>)
  (ForStmt 0x9d8cdf0 <line:820:7, line:825:2>
    <<<NULL>>>
    <<<NULL>>>
    (BinaryOperator 0x9d8cb88 <line:820:14, col:40> '<dependent type>' '&&'
      (DeclRefExpr 0x9d8ca7c <col:14> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d8c7e0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (CXXOperatorCallExpr 0x9d8cb60 <col:21, col:40> '<dependent type>'
        (UnresolvedLookupExpr 0x9d8cb18 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bac3c0 0x9bc2c90 0x9bc5590 0x9d61190 0x9d616c0 0x9d61bf0)
        (DeclRefExpr 0x9d8ca94 <col:21> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d8c7a0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (CallExpr 0x9d8caf8 <col:29, col:40> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9d8cac0 <col:29, col:35> '<dependent type>' lvalue
            (CXXThisExpr 0x9d8cab0 <col:29> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))))
    (UnaryOperator 0x9d8cbb8 <col:43, col:45> '<dependent type>' prefix '++'
      (DeclRefExpr 0x9d8cba0 <col:45> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d8c7a0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
    (CompoundStmt 0x9d8cdd8 <line:821:2, line:825:2>
      (DeclStmt 0x9d8cd68 <line:822:4, col:69>
        0x9d8cbe0 "const _CharT *__p =
          (CallExpr 0x9d8cd40 <col:24, col:68> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9d8cc38 <col:24, col:37> '<dependent type>' lvalue)
            (DeclRefExpr 0x9d8cc6c <col:42> 'const _CharT *' lvalue ParmVar 0x9d8c760 '__s' 'const _CharT *')
            (DeclRefExpr 0x9d8cc84 <col:47> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d8c7e0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
            (ArraySubscriptExpr 0x9d8cd28 <col:52, col:67> '<dependent type>' lvalue
              (CallExpr 0x9d8ccf0 <col:52, col:60> '<dependent type>'
                (UnresolvedMemberExpr 0x9d8ccb0 <col:52> '<bound member function type>' lvalue))
              (DeclRefExpr 0x9d8cd0c <col:62> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d8c7a0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')))")
      (IfStmt 0x9d8cdb8 <line:823:4, line:824:13>
        <<<NULL>>>
        (DeclRefExpr 0x9d8cd78 <line:823:8> 'const _CharT *' lvalue Var 0x9d8cbe0 '__p' 'const _CharT *')
        (ReturnStmt 0x9d8cda8 <line:824:6, col:13>
          (DeclRefExpr 0x9d8cd90 <col:13> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d8c7a0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)))
  (ReturnStmt 0x9d8ce30 <line:826:7, col:14>
    (DeclRefExpr 0x9d8ce14 <col:14> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d6a5d0 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))


    typename basic_string<_CharT, _Traits, _Alloc>::size_type find_last_of(const _CharT *__s, size_type __pos, size_type __n) const (CompoundStmt 0x9d8dbb8 </usr/include/c++/4.6/bits/basic_string.tcc:833:5, line:848:5>
  (NullStmt 0x9d8d670 <line:834:46>)
  (DeclStmt 0x9d8d730 <line:835:7, col:38>
    0x9d8d690 "size_type __size =
      (CallExpr 0x9d8d710 <col:26, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d8d6d8 <col:26, col:32> '<dependent type>' lvalue
          (CXXThisExpr 0x9d8d6c8 <col:26> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (IfStmt 0x9d8db70 <line:836:7, line:846:2>
    <<<NULL>>>
    (BinaryOperator 0x9d8d770 <line:836:11, col:21> '<dependent type>' '&&'
      (DeclRefExpr 0x9d8d740 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9d8d690 '__size' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9d8d758 <col:21> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d8d3e0 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
    (CompoundStmt 0x9d8db58 <line:837:2, line:846:2>
      (IfStmt 0x9d8d888 <line:838:4, line:839:15>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9d8d818 <line:838:8, col:19> '<dependent type>'
          (UnresolvedLookupExpr 0x9d8d7d0 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bad330 0x9bc37b0 0x9bc6740 0x9d622b0 0x9d627e0 0x9d62d10)
          (UnaryOperator 0x9d8d7a0 <col:8, col:10> '<dependent type>' prefix '--'
            (DeclRefExpr 0x9d8d788 <col:10> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9d8d690 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
          (DeclRefExpr 0x9d8d7b4 <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d8d3a0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        (BinaryOperator 0x9d8d870 <line:839:6, col:15> '<dependent type>' '='
          (DeclRefExpr 0x9d8d83c <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9d8d690 '__size' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0x9d8d854 <col:15> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d8d3a0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)
      (DoStmt 0x9d8db40 <line:840:4, line:845:24>
        (CompoundStmt 0x9d8da48 <line:841:6, line:844:6>
          (IfStmt 0x9d8da28 <line:842:8, line:843:10>
            <<<NULL>>>
            (CallExpr 0x9d8d9d8 <line:842:12, col:57> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9d8d8d0 <col:12, col:25> '<dependent type>' lvalue)
              (DeclRefExpr 0x9d8d904 <col:30> 'const _CharT *' lvalue ParmVar 0x9d8d360 '__s' 'const _CharT *')
              (DeclRefExpr 0x9d8d91c <col:35> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d8d3e0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
              (ArraySubscriptExpr 0x9d8d9c0 <col:40, col:56> '<dependent type>' lvalue
                (CallExpr 0x9d8d988 <col:40, col:48> '<dependent type>'
                  (UnresolvedMemberExpr 0x9d8d948 <col:40> '<bound member function type>' lvalue))
                (DeclRefExpr 0x9d8d9a4 <col:50> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9d8d690 '__size' 'size_type':'typename _CharT_alloc_type::size_type')))
            (ReturnStmt 0x9d8da18 <line:843:3, col:10>
              (DeclRefExpr 0x9d8da00 <col:10> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9d8d690 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
            <<<NULL>>>))
        (CXXOperatorCallExpr 0x9d8db18 <line:845:11, col:23> '<dependent type>'
          (UnresolvedLookupExpr 0x9d8dac0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bacde0 0x9bc3130 0x9bc62c0 0x9c11360 0x9c32300 0x9c32670 0x9d60120 0x9d60630 0x9d60b40)
          (UnaryOperator 0x9d8da90 <col:11, col:17> '<dependent type>' postfix '--'
            (DeclRefExpr 0x9d8da5c <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9d8d690 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
          (IntegerLiteral 0x9d8daa8 <col:23> 'int' 0))))
    <<<NULL>>>)
  (ReturnStmt 0x9d8dba8 <line:847:7, col:14>
    (DeclRefExpr 0x9d8db8c <col:14> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d6a5d0 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))


    typename basic_string<_CharT, _Traits, _Alloc>::size_type find_first_not_of(const _CharT *__s, size_type __pos, size_type __n) const (CompoundStmt 0x9d8e760 </usr/include/c++/4.6/bits/basic_string.tcc:854:5, line:860:5>
  (NullStmt 0x9d8e430 <line:855:46>)
  (ForStmt 0x9d8e710 <line:856:7, line:858:11>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9d8e508 <line:856:14, col:33> '<dependent type>'
      (UnresolvedLookupExpr 0x9d8e4c0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bac3c0 0x9bc2c90 0x9bc5590 0x9d61190 0x9d616c0 0x9d61bf0)
      (DeclRefExpr 0x9d8e43c <col:14> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d8e120 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x9d8e4a0 <col:22, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d8e468 <col:22, col:28> '<dependent type>' lvalue
          (CXXThisExpr 0x9d8e458 <col:22> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))
    (UnaryOperator 0x9d8e548 <col:36, col:38> '<dependent type>' prefix '++'
      (DeclRefExpr 0x9d8e52c <col:38> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d8e120 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
    (IfStmt 0x9d8e6f0 <line:857:2, line:858:11>
      <<<NULL>>>
      (UnaryOperator 0x9d8e6b0 <line:857:6, col:51> '<dependent type>' prefix '!'
        (CallExpr 0x9d8e688 <col:7, col:51> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9d8e580 <col:7, col:20> '<dependent type>' lvalue)
          (DeclRefExpr 0x9d8e5b4 <col:25> 'const _CharT *' lvalue ParmVar 0x9d8e0e0 '__s' 'const _CharT *')
          (DeclRefExpr 0x9d8e5cc <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d8e160 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
          (ArraySubscriptExpr 0x9d8e670 <col:35, col:50> '<dependent type>' lvalue
            (CallExpr 0x9d8e638 <col:35, col:43> '<dependent type>'
              (UnresolvedMemberExpr 0x9d8e5f8 <col:35> '<bound member function type>' lvalue))
            (DeclRefExpr 0x9d8e654 <col:45> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d8e120 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))))
      (ReturnStmt 0x9d8e6e0 <line:858:4, col:11>
        (DeclRefExpr 0x9d8e6c4 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d8e120 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
      <<<NULL>>>))
  (ReturnStmt 0x9d8e750 <line:859:7, col:14>
    (DeclRefExpr 0x9d8e734 <col:14> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d6a5d0 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))


    typename basic_string<_CharT, _Traits, _Alloc>::size_type find_first_not_of(_CharT __c, size_type __pos = (IntegerLiteral 0x9d456f0 </usr/include/c++/4.6/bits/basic_string.h:2080:55> 'int' 0)
) const (CompoundStmt 0x9d8f220 </usr/include/c++/4.6/bits/basic_string.tcc:866:5, line:871:5>
  (ForStmt 0x9d8f1d0 <line:867:7, line:869:11>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9d8efe0 <line:867:14, col:33> '<dependent type>'
      (UnresolvedLookupExpr 0x9d8ef98 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bac3c0 0x9bc2c90 0x9bc5590 0x9d61190 0x9d616c0 0x9d61bf0)
      (DeclRefExpr 0x9d8ef18 <col:14> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d8ec90 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x9d8ef78 <col:22, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d8ef40 <col:22, col:28> '<dependent type>' lvalue
          (CXXThisExpr 0x9d8ef30 <col:22> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))
    (UnaryOperator 0x9d8f020 <col:36, col:38> '<dependent type>' prefix '++'
      (DeclRefExpr 0x9d8f004 <col:38> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d8ec90 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
    (IfStmt 0x9d8f1b0 <line:868:2, line:869:11>
      <<<NULL>>>
      (UnaryOperator 0x9d8f170 <line:868:6, col:44> '<dependent type>' prefix '!'
        (CallExpr 0x9d8f148 <col:7, col:44> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9d8f058 <col:7, col:20> '<dependent type>' lvalue)
          (ArraySubscriptExpr 0x9d8f118 <col:23, col:38> '<dependent type>' lvalue
            (CallExpr 0x9d8f0e0 <col:23, col:31> '<dependent type>'
              (UnresolvedMemberExpr 0x9d8f0a0 <col:23> '<bound member function type>' lvalue))
            (DeclRefExpr 0x9d8f0fc <col:33> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d8ec90 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
          (DeclRefExpr 0x9d8f12c <col:41> '_CharT' lvalue ParmVar 0x9d8ec50 '__c' '_CharT')))
      (ReturnStmt 0x9d8f1a0 <line:869:4, col:11>
        (DeclRefExpr 0x9d8f184 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d8ec90 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
      <<<NULL>>>))
  (ReturnStmt 0x9d8f210 <line:870:7, col:14>
    (DeclRefExpr 0x9d8f1f4 <col:14> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d6a5d0 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))


    typename basic_string<_CharT, _Traits, _Alloc>::size_type find_last_not_of(const _CharT *__s, size_type __pos, size_type __n) const (CompoundStmt 0x9d8fee0 </usr/include/c++/4.6/bits/basic_string.tcc:877:5, line:892:5>
  (NullStmt 0x9d8fa50 <line:878:46>)
  (DeclStmt 0x9d8fb10 <line:879:7, col:38>
    0x9d8fa70 "size_type __size =
      (CallExpr 0x9d8faf0 <col:26, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d8fab8 <col:26, col:32> '<dependent type>' lvalue
          (CXXThisExpr 0x9d8faa8 <col:26> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (IfStmt 0x9d8fe98 <line:880:7, line:890:2>
    <<<NULL>>>
    (DeclRefExpr 0x9d8fb20 <line:880:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9d8fa70 '__size' 'size_type':'typename _CharT_alloc_type::size_type')
    (CompoundStmt 0x9d8fe80 <line:881:2, line:890:2>
      (IfStmt 0x9d8fc38 <line:882:4, line:883:15>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9d8fbc8 <line:882:8, col:19> '<dependent type>'
          (UnresolvedLookupExpr 0x9d8fb80 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bad330 0x9bc37b0 0x9bc6740 0x9d622b0 0x9d627e0 0x9d62d10)
          (UnaryOperator 0x9d8fb50 <col:8, col:10> '<dependent type>' prefix '--'
            (DeclRefExpr 0x9d8fb38 <col:10> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9d8fa70 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
          (DeclRefExpr 0x9d8fb64 <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d8f780 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        (BinaryOperator 0x9d8fc20 <line:883:6, col:15> '<dependent type>' '='
          (DeclRefExpr 0x9d8fbec <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9d8fa70 '__size' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0x9d8fc04 <col:15> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d8f780 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)
      (DoStmt 0x9d8fe68 <line:884:4, line:889:19>
        (CompoundStmt 0x9d8fe08 <line:885:6, line:888:6>
          (IfStmt 0x9d8fde8 <line:886:8, line:887:10>
            <<<NULL>>>
            (UnaryOperator 0x9d8fda8 <line:886:12, col:58> '<dependent type>' prefix '!'
              (CallExpr 0x9d8fd80 <col:13, col:58> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9d8fc78 <col:13, col:26> '<dependent type>' lvalue)
                (DeclRefExpr 0x9d8fcac <col:31> 'const _CharT *' lvalue ParmVar 0x9d8f740 '__s' 'const _CharT *')
                (DeclRefExpr 0x9d8fcc4 <col:36> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d8f7c0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
                (ArraySubscriptExpr 0x9d8fd68 <col:41, col:57> '<dependent type>' lvalue
                  (CallExpr 0x9d8fd30 <col:41, col:49> '<dependent type>'
                    (UnresolvedMemberExpr 0x9d8fcf0 <col:41> '<bound member function type>' lvalue))
                  (DeclRefExpr 0x9d8fd4c <col:51> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9d8fa70 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))))
            (ReturnStmt 0x9d8fdd8 <line:887:3, col:10>
              (DeclRefExpr 0x9d8fdbc <col:10> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9d8fa70 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
            <<<NULL>>>))
        (UnaryOperator 0x9d8fe50 <line:889:11, col:17> '<dependent type>' postfix '--'
          (DeclRefExpr 0x9d8fe1c <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9d8fa70 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))))
    <<<NULL>>>)
  (ReturnStmt 0x9d8fed0 <line:891:7, col:14>
    (DeclRefExpr 0x9d8feb4 <col:14> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d6a5d0 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))


    typename basic_string<_CharT, _Traits, _Alloc>::size_type find_last_not_of(_CharT __c, size_type __pos = (DeclRefExpr 0x9d45738 </usr/include/c++/4.6/bits/basic_string.h:2139:54> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d24940 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const (CompoundStmt 0x9d90af8 </usr/include/c++/4.6/bits/basic_string.tcc:898:5, line:912:5>
  (DeclStmt 0x9d90740 <line:899:7, col:38>
    0x9d906a0 "size_type __size =
      (CallExpr 0x9d90720 <col:26, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d906e8 <col:26, col:32> '<dependent type>' lvalue
          (CXXThisExpr 0x9d906d8 <col:26> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (IfStmt 0x9d90ab0 <line:900:7, line:910:2>
    <<<NULL>>>
    (DeclRefExpr 0x9d90750 <line:900:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9d906a0 '__size' 'size_type':'typename _CharT_alloc_type::size_type')
    (CompoundStmt 0x9d90a98 <line:901:2, line:910:2>
      (IfStmt 0x9d90868 <line:902:4, line:903:15>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9d907f8 <line:902:8, col:19> '<dependent type>'
          (UnresolvedLookupExpr 0x9d907b0 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bad330 0x9bc37b0 0x9bc6740 0x9d622b0 0x9d627e0 0x9d62d10)
          (UnaryOperator 0x9d90780 <col:8, col:10> '<dependent type>' prefix '--'
            (DeclRefExpr 0x9d90768 <col:10> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9d906a0 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
          (DeclRefExpr 0x9d90794 <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d90410 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        (BinaryOperator 0x9d90850 <line:903:6, col:15> '<dependent type>' '='
          (DeclRefExpr 0x9d9081c <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9d906a0 '__size' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0x9d90834 <col:15> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d90410 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)
      (DoStmt 0x9d90a80 <line:904:4, line:909:19>
        (CompoundStmt 0x9d90a20 <line:905:6, line:908:6>
          (IfStmt 0x9d90a00 <line:906:8, line:907:10>
            <<<NULL>>>
            (UnaryOperator 0x9d909c0 <line:906:12, col:51> '<dependent type>' prefix '!'
              (CallExpr 0x9d90998 <col:13, col:51> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9d908a8 <col:13, col:26> '<dependent type>' lvalue)
                (ArraySubscriptExpr 0x9d90968 <col:29, col:45> '<dependent type>' lvalue
                  (CallExpr 0x9d90930 <col:29, col:37> '<dependent type>'
                    (UnresolvedMemberExpr 0x9d908f0 <col:29> '<bound member function type>' lvalue))
                  (DeclRefExpr 0x9d9094c <col:39> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9d906a0 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
                (DeclRefExpr 0x9d9097c <col:48> '_CharT' lvalue ParmVar 0x9d903d0 '__c' '_CharT')))
            (ReturnStmt 0x9d909f0 <line:907:3, col:10>
              (DeclRefExpr 0x9d909d4 <col:10> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9d906a0 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
            <<<NULL>>>))
        (UnaryOperator 0x9d90a68 <line:909:11, col:17> '<dependent type>' postfix '--'
          (DeclRefExpr 0x9d90a34 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9d906a0 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))))
    <<<NULL>>>)
  (ReturnStmt 0x9d90ae8 <line:911:7, col:14>
    (DeclRefExpr 0x9d90acc <col:14> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d6a5d0 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))


    int compare(size_type __pos, size_type __n, const basic_string<_CharT, _Traits, _Alloc> &__str) const (CompoundStmt 0x9d916e0 </usr/include/c++/4.6/bits/basic_string.tcc:918:5, line:927:5>
  (CallExpr 0x9d910a0 <line:919:7, col:46> '<dependent type>'
    (MemberExpr 0x9d91030 <col:7> '<bound member function type>' ->_M_check 0x9d26bb0
      (CXXThisExpr 0x9d91020 <col:7> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9d91050 <col:16> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d90e90 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0x9d91068 <col:23> 'const char [22]' lvalue "basic_string::compare"))
  (BinaryOperator 0x9d91168 <line:920:7, col:32> '<dependent type>' '='
    (DeclRefExpr 0x9d910c4 <col:7> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d90ed0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0x9d91140 <col:13, col:32> '<dependent type>'
      (MemberExpr 0x9d910f0 <col:13> '<bound member function type>' ->_M_limit 0x9d26ed0
        (CXXThisExpr 0x9d910e0 <col:13> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9d91110 <col:22> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d90e90 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9d91128 <col:29> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d90ed0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))
  (DeclStmt 0x9d91238 <line:921:7, col:45>
    0x9d91190 "const size_type __osize =
      (CallExpr 0x9d91218 <col:33, col:44> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d911e0 <col:33, col:39> '<dependent type>' lvalue
          (DeclRefExpr 0x9d911c4 <col:33> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d90f20 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))")
  (DeclStmt 0x9d91330 <line:922:7, col:53>
    0x9d91250 "const size_type __len =
      (CallExpr 0x9d91308 <col:31, col:52> '<dependent type>'
        (UnresolvedLookupExpr 0x9d912a0 <col:31, col:36> '<overloaded function type>' lvalue (no ADL) = '1' 0x9bdffa0 0x9b94620)
        (DeclRefExpr 0x9d912d8 <col:40> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d90ed0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9d912f0 <col:45> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d91190 '__osize' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (DeclStmt 0x9d91588 <line:923:7, col:77>
    0x9d91350 "int __r =
      (CallExpr 0x9d91560 <col:17, col:76> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d913a8 <col:17, col:30> '<dependent type>' lvalue)
        (CXXOperatorCallExpr 0x9d914b0 <col:38, col:50> '<dependent type>'
          (UnresolvedLookupExpr 0x9d91468 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9d87280 0x9d86680 0x9bc4ab0 0x9d5bd80 0x9d5d890 0x9d5d090)
          (CallExpr 0x9d91430 <col:38, col:46> '<dependent type>'
            (UnresolvedMemberExpr 0x9d913f0 <col:38> '<bound member function type>' lvalue))
          (DeclRefExpr 0x9d9144c <col:50> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d90e90 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        (CallExpr 0x9d91528 <col:57, col:68> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9d914f0 <col:57, col:63> '<dependent type>' lvalue
            (DeclRefExpr 0x9d914d4 <col:57> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d90f20 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
        (DeclRefExpr 0x9d91544 <col:71> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d91250 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (IfStmt 0x9d91688 <line:924:7, line:925:31>
    <<<NULL>>>
    (UnaryOperator 0x9d915d0 <line:924:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9d915c0 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0x9d915b0 <col:12> 'int' <LValueToRValue>
          (DeclRefExpr 0x9d91598 <col:12> 'int' lvalue Var 0x9d91350 '__r' 'int'))))
    (BinaryOperator 0x9d91670 <line:925:2, col:31> '<dependent type>' '='
      (DeclRefExpr 0x9d915e4 <col:2> 'int' lvalue Var 0x9d91350 '__r' 'int')
      (CallExpr 0x9d91648 <col:8, col:31> '<dependent type>'
        (DeclRefExpr 0x9d915fc <col:8> 'int (size_type, size_type)' lvalue CXXMethod 0x9d28000 '_S_compare' 'int (size_type, size_type)')
        (DeclRefExpr 0x9d91614 <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d90ed0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9d9162c <col:24> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d91190 '__osize' 'const size_type':'const typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (ReturnStmt 0x9d916d0 <line:926:7, col:14>
    (ImplicitCastExpr 0x9d916c0 <col:14> 'int' <LValueToRValue>
      (DeclRefExpr 0x9d916a4 <col:14> 'int' lvalue Var 0x9d91350 '__r' 'int'))))


    int compare(size_type __pos1, size_type __n1, const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos2, size_type __n2) const (CompoundStmt 0x9d924f8 </usr/include/c++/4.6/bits/basic_string.tcc:934:5, line:945:5>
  (CallExpr 0x9d91d28 <line:935:7, col:47> '<dependent type>'
    (MemberExpr 0x9d91cb8 <col:7> '<bound member function type>' ->_M_check 0x9d26bb0
      (CXXThisExpr 0x9d91ca8 <col:7> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9d91cd8 <col:16> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d91a80 '__pos1' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0x9d91cf0 <col:24> 'const char [22]' lvalue "basic_string::compare"))
  (CallExpr 0x9d91de8 <line:936:7, col:53> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9d91d68 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0x9d91d4c <col:7> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d91b10 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
    (DeclRefExpr 0x9d91d9c <col:22> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d91b50 '__pos2' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0x9d91db4 <col:30> 'const char [22]' lvalue "basic_string::compare"))
  (BinaryOperator 0x9d91eb0 <line:937:7, col:35> '<dependent type>' '='
    (DeclRefExpr 0x9d91e0c <col:7> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d91ac0 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0x9d91e88 <col:14, col:35> '<dependent type>'
      (MemberExpr 0x9d91e38 <col:14> '<bound member function type>' ->_M_limit 0x9d26ed0
        (CXXThisExpr 0x9d91e28 <col:14> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9d91e58 <col:23> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d91a80 '__pos1' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9d91e70 <col:31> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d91ac0 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')))
  (BinaryOperator 0x9d91f88 <line:938:7, col:41> '<dependent type>' '='
    (DeclRefExpr 0x9d91ec8 <col:7> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d91b90 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0x9d91f60 <col:14, col:41> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9d91ef8 <col:14, col:20> '<dependent type>' lvalue
        (DeclRefExpr 0x9d91ee0 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d91b10 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
      (DeclRefExpr 0x9d91f2c <col:29> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d91b50 '__pos2' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9d91f44 <col:37> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d91b90 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')))
  (DeclStmt 0x9d92090 <line:939:7, col:51>
    0x9d91fb0 "const size_type __len =
      (CallExpr 0x9d92068 <col:31, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x9d92000 <col:31, col:36> '<overloaded function type>' lvalue (no ADL) = '1' 0x9bdffa0 0x9b94620)
        (DeclRefExpr 0x9d92038 <col:40> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d91ac0 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9d92050 <col:46> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d91b90 '__n2' 'size_type':'typename _CharT_alloc_type::size_type'))")
  (DeclStmt 0x9d923a0 <line:940:7, line:941:39>
    0x9d920b0 "int __r =
      (CallExpr 0x9d92378 <line:940:17, line:941:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d92108 <line:940:17, col:30> '<dependent type>' lvalue)
        (CXXOperatorCallExpr 0x9d92240 <col:38, col:50> '<dependent type>'
          (UnresolvedLookupExpr 0x9d921f8 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9d87280 0x9d86680 0x9bc4ab0 0x9d5bd80 0x9d5d890 0x9d5d090)
          (CallExpr 0x9d92190 <col:38, col:46> '<dependent type>'
            (UnresolvedMemberExpr 0x9d92150 <col:38> '<bound member function type>' lvalue))
          (DeclRefExpr 0x9d921ac <col:50> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d91a80 '__pos1' 'size_type':'typename _CharT_alloc_type::size_type'))
        (CXXOperatorCallExpr 0x9d92338 <line:941:10, col:25> '<dependent type>'
          (UnresolvedLookupExpr 0x9d922f0 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9d87280 0x9d86680 0x9bc4ab0 0x9d5bd80 0x9d5d890 0x9d5d090)
          (CallExpr 0x9d922b8 <col:10, col:21> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9d92280 <col:10, col:16> '<dependent type>' lvalue
              (DeclRefExpr 0x9d92264 <col:10> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d91b10 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
          (DeclRefExpr 0x9d922d4 <col:25> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d91b50 '__pos2' 'size_type':'typename _CharT_alloc_type::size_type'))
        (DeclRefExpr 0x9d9235c <col:33> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d91fb0 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (IfStmt 0x9d924a0 <line:942:7, line:943:29>
    <<<NULL>>>
    (UnaryOperator 0x9d923e8 <line:942:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9d923d8 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0x9d923c8 <col:12> 'int' <LValueToRValue>
          (DeclRefExpr 0x9d923b0 <col:12> 'int' lvalue Var 0x9d920b0 '__r' 'int'))))
    (BinaryOperator 0x9d92488 <line:943:2, col:29> '<dependent type>' '='
      (DeclRefExpr 0x9d923fc <col:2> 'int' lvalue Var 0x9d920b0 '__r' 'int')
      (CallExpr 0x9d92460 <col:8, col:29> '<dependent type>'
        (DeclRefExpr 0x9d92414 <col:8> 'int (size_type, size_type)' lvalue CXXMethod 0x9d28000 '_S_compare' 'int (size_type, size_type)')
        (DeclRefExpr 0x9d9242c <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d91ac0 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9d92444 <col:25> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d91b90 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (ReturnStmt 0x9d924e8 <line:944:7, col:14>
    (ImplicitCastExpr 0x9d924d8 <col:14> 'int' <LValueToRValue>
      (DeclRefExpr 0x9d924bc <col:14> 'int' lvalue Var 0x9d920b0 '__r' 'int'))))


    int compare(const _CharT *__s) const (CompoundStmt 0x9d92f50 </usr/include/c++/4.6/bits/basic_string.tcc:951:5, line:960:5>
  (NullStmt 0x9d929e8 <line:952:37>)
  (DeclStmt 0x9d92aa0 <line:953:7, col:44>
    0x9d92a00 "const size_type __size =
      (CallExpr 0x9d92a80 <col:32, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d92a48 <col:32, col:38> '<dependent type>' lvalue
          (CXXThisExpr 0x9d92a38 <col:32> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (DeclStmt 0x9d92b88 <line:954:7, col:57>
    0x9d92ac0 "const size_type __osize =
      (CallExpr 0x9d92b68 <col:33, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d92b18 <col:33, col:46> '<dependent type>' lvalue)
        (DeclRefExpr 0x9d92b4c <col:53> 'const _CharT *' lvalue ParmVar 0x9d928d0 '__s' 'const _CharT *'))")
  (DeclStmt 0x9d92c80 <line:955:7, col:56>
    0x9d92ba0 "const size_type __len =
      (CallExpr 0x9d92c58 <col:31, col:55> '<dependent type>'
        (UnresolvedLookupExpr 0x9d92bf0 <col:31, col:36> '<overloaded function type>' lvalue (no ADL) = '1' 0x9bdffa0 0x9b94620)
        (DeclRefExpr 0x9d92c28 <col:40> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d92a00 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9d92c40 <col:48> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d92ac0 '__osize' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (DeclStmt 0x9d92df8 <line:956:7, col:60>
    0x9d92ca0 "int __r =
      (CallExpr 0x9d92dd0 <col:17, col:59> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d92cf8 <col:17, col:30> '<dependent type>' lvalue)
        (CallExpr 0x9d92d80 <col:38, col:46> '<dependent type>'
          (UnresolvedMemberExpr 0x9d92d40 <col:38> '<bound member function type>' lvalue))
        (DeclRefExpr 0x9d92d9c <col:49> 'const _CharT *' lvalue ParmVar 0x9d928d0 '__s' 'const _CharT *')
        (DeclRefExpr 0x9d92db4 <col:54> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d92ba0 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (IfStmt 0x9d92ef8 <line:957:7, line:958:34>
    <<<NULL>>>
    (UnaryOperator 0x9d92e40 <line:957:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9d92e30 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0x9d92e20 <col:12> 'int' <LValueToRValue>
          (DeclRefExpr 0x9d92e08 <col:12> 'int' lvalue Var 0x9d92ca0 '__r' 'int'))))
    (BinaryOperator 0x9d92ee0 <line:958:2, col:34> '<dependent type>' '='
      (DeclRefExpr 0x9d92e54 <col:2> 'int' lvalue Var 0x9d92ca0 '__r' 'int')
      (CallExpr 0x9d92eb8 <col:8, col:34> '<dependent type>'
        (DeclRefExpr 0x9d92e6c <col:8> 'int (size_type, size_type)' lvalue CXXMethod 0x9d28000 '_S_compare' 'int (size_type, size_type)')
        (DeclRefExpr 0x9d92e84 <col:19> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d92a00 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9d92e9c <col:27> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d92ac0 '__osize' 'const size_type':'const typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (ReturnStmt 0x9d92f40 <line:959:7, col:14>
    (ImplicitCastExpr 0x9d92f30 <col:14> 'int' <LValueToRValue>
      (DeclRefExpr 0x9d92f14 <col:14> 'int' lvalue Var 0x9d92ca0 '__r' 'int'))))


    int compare(size_type __pos, size_type __n1, const _CharT *__s) const (CompoundStmt 0x9d93b68 </usr/include/c++/4.6/bits/basic_string.tcc:966:5, line:976:5>
  (NullStmt 0x9d934d0 <line:967:37>)
  (CallExpr 0x9d93560 <line:968:7, col:46> '<dependent type>'
    (MemberExpr 0x9d934f0 <col:7> '<bound member function type>' ->_M_check 0x9d26bb0
      (CXXThisExpr 0x9d934e0 <col:7> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9d93510 <col:16> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d932f0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0x9d93528 <col:23> 'const char [22]' lvalue "basic_string::compare"))
  (BinaryOperator 0x9d93628 <line:969:7, col:34> '<dependent type>' '='
    (DeclRefExpr 0x9d93584 <col:7> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d93330 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0x9d93600 <col:14, col:34> '<dependent type>'
      (MemberExpr 0x9d935b0 <col:14> '<bound member function type>' ->_M_limit 0x9d26ed0
        (CXXThisExpr 0x9d935a0 <col:14> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9d935d0 <col:23> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d932f0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9d935e8 <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d93330 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')))
  (DeclStmt 0x9d93718 <line:970:7, col:57>
    0x9d93650 "const size_type __osize =
      (CallExpr 0x9d936f8 <col:33, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d936a8 <col:33, col:46> '<dependent type>' lvalue)
        (DeclRefExpr 0x9d936dc <col:53> 'const _CharT *' lvalue ParmVar 0x9d933a0 '__s' 'const _CharT *'))")
  (DeclStmt 0x9d93810 <line:971:7, col:54>
    0x9d93730 "const size_type __len =
      (CallExpr 0x9d937e8 <col:31, col:53> '<dependent type>'
        (UnresolvedLookupExpr 0x9d93780 <col:31, col:36> '<overloaded function type>' lvalue (no ADL) = '1' 0x9bdffa0 0x9b94620)
        (DeclRefExpr 0x9d937b8 <col:40> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d93330 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9d937d0 <col:46> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d93650 '__osize' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (DeclStmt 0x9d93a10 <line:972:7, col:68>
    0x9d93830 "int __r =
      (CallExpr 0x9d939e8 <col:17, col:67> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d93888 <col:17, col:30> '<dependent type>' lvalue)
        (CXXOperatorCallExpr 0x9d93990 <col:38, col:50> '<dependent type>'
          (UnresolvedLookupExpr 0x9d93948 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9d87280 0x9d86680 0x9bc4ab0 0x9d5bd80 0x9d5d890 0x9d5d090)
          (CallExpr 0x9d93910 <col:38, col:46> '<dependent type>'
            (UnresolvedMemberExpr 0x9d938d0 <col:38> '<bound member function type>' lvalue))
          (DeclRefExpr 0x9d9392c <col:50> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d932f0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        (DeclRefExpr 0x9d939b4 <col:57> 'const _CharT *' lvalue ParmVar 0x9d933a0 '__s' 'const _CharT *')
        (DeclRefExpr 0x9d939cc <col:62> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d93730 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (IfStmt 0x9d93b10 <line:973:7, line:974:32>
    <<<NULL>>>
    (UnaryOperator 0x9d93a58 <line:973:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9d93a48 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0x9d93a38 <col:12> 'int' <LValueToRValue>
          (DeclRefExpr 0x9d93a20 <col:12> 'int' lvalue Var 0x9d93830 '__r' 'int'))))
    (BinaryOperator 0x9d93af8 <line:974:2, col:32> '<dependent type>' '='
      (DeclRefExpr 0x9d93a6c <col:2> 'int' lvalue Var 0x9d93830 '__r' 'int')
      (CallExpr 0x9d93ad0 <col:8, col:32> '<dependent type>'
        (DeclRefExpr 0x9d93a84 <col:8> 'int (size_type, size_type)' lvalue CXXMethod 0x9d28000 '_S_compare' 'int (size_type, size_type)')
        (DeclRefExpr 0x9d93a9c <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d93330 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9d93ab4 <col:25> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d93650 '__osize' 'const size_type':'const typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (ReturnStmt 0x9d93b58 <line:975:7, col:14>
    (ImplicitCastExpr 0x9d93b48 <col:14> 'int' <LValueToRValue>
      (DeclRefExpr 0x9d93b2c <col:14> 'int' lvalue Var 0x9d93830 '__r' 'int'))))


    int compare(size_type __pos, size_type __n1, const _CharT *__s, size_type __n2) const (CompoundStmt 0x9d946e8 </usr/include/c++/4.6/bits/basic_string.tcc:983:5, line:992:5>
  (NullStmt 0x9d94130 <line:984:47>)
  (CallExpr 0x9d941c0 <line:985:7, col:46> '<dependent type>'
    (MemberExpr 0x9d94150 <col:7> '<bound member function type>' ->_M_check 0x9d26bb0
      (CXXThisExpr 0x9d94140 <col:7> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9d94170 <col:16> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d93f10 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0x9d94188 <col:23> 'const char [22]' lvalue "basic_string::compare"))
  (BinaryOperator 0x9d94288 <line:986:7, col:34> '<dependent type>' '='
    (DeclRefExpr 0x9d941e4 <col:7> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d93f50 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0x9d94260 <col:14, col:34> '<dependent type>'
      (MemberExpr 0x9d94210 <col:14> '<bound member function type>' ->_M_limit 0x9d26ed0
        (CXXThisExpr 0x9d94200 <col:14> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9d94230 <col:23> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d93f10 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9d94248 <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d93f50 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')))
  (DeclStmt 0x9d94390 <line:987:7, col:51>
    0x9d942b0 "const size_type __len =
      (CallExpr 0x9d94368 <col:31, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x9d94300 <col:31, col:36> '<overloaded function type>' lvalue (no ADL) = '1' 0x9bdffa0 0x9b94620)
        (DeclRefExpr 0x9d94338 <col:40> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d93f50 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9d94350 <col:46> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d94000 '__n2' 'size_type':'typename _CharT_alloc_type::size_type'))")
  (DeclStmt 0x9d94590 <line:988:7, col:68>
    0x9d943b0 "int __r =
      (CallExpr 0x9d94568 <col:17, col:67> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d94408 <col:17, col:30> '<dependent type>' lvalue)
        (CXXOperatorCallExpr 0x9d94510 <col:38, col:50> '<dependent type>'
          (UnresolvedLookupExpr 0x9d944c8 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9d87280 0x9d86680 0x9bc4ab0 0x9d5bd80 0x9d5d890 0x9d5d090)
          (CallExpr 0x9d94490 <col:38, col:46> '<dependent type>'
            (UnresolvedMemberExpr 0x9d94450 <col:38> '<bound member function type>' lvalue))
          (DeclRefExpr 0x9d944ac <col:50> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d93f10 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        (DeclRefExpr 0x9d94534 <col:57> 'const _CharT *' lvalue ParmVar 0x9d93fc0 '__s' 'const _CharT *')
        (DeclRefExpr 0x9d9454c <col:62> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9d942b0 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (IfStmt 0x9d94690 <line:989:7, line:990:29>
    <<<NULL>>>
    (UnaryOperator 0x9d945d8 <line:989:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9d945c8 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0x9d945b8 <col:12> 'int' <LValueToRValue>
          (DeclRefExpr 0x9d945a0 <col:12> 'int' lvalue Var 0x9d943b0 '__r' 'int'))))
    (BinaryOperator 0x9d94678 <line:990:2, col:29> '<dependent type>' '='
      (DeclRefExpr 0x9d945ec <col:2> 'int' lvalue Var 0x9d943b0 '__r' 'int')
      (CallExpr 0x9d94650 <col:8, col:29> '<dependent type>'
        (DeclRefExpr 0x9d94604 <col:8> 'int (size_type, size_type)' lvalue CXXMethod 0x9d28000 '_S_compare' 'int (size_type, size_type)')
        (DeclRefExpr 0x9d9461c <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d93f50 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9d94634 <col:25> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9d94000 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (ReturnStmt 0x9d946d8 <line:991:7, col:14>
    (ImplicitCastExpr 0x9d946c8 <col:14> 'int' <LValueToRValue>
      (DeclRefExpr 0x9d946ac <col:14> 'int' lvalue Var 0x9d943b0 '__r' 'int'))))


    template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> basic_istream<char> &operator>>(basic_istream<char> &__is, basic_string<char> &__str)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> basic_istream<wchar_t, std::char_traits<wchar_t> > &operator>>(basic_istream<wchar_t, std::char_traits<wchar_t> > &__in, basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > &__str)template <typename _CharT, typename _Traits, typename _Alloc> basic_istream<_CharT, _Traits> &operator>>(basic_istream<_CharT, _Traits> &__in, basic_string<_CharT, _Traits, _Alloc> &__str) (CompoundStmt 0x9d96dc8 </usr/include/c++/4.6/bits/basic_string.tcc:999:5, line:1065:5>
  (DeclStmt 0x9d94e80 <line:1000:7, col:61>
    0x9d94e50 "typedef basic_istream<_CharT, _Traits> __istream_type")
  (DeclStmt 0x9d95020 <line:1001:7, col:66>
    0x9d94ff0 "typedef basic_string<_CharT, _Traits, _Alloc> __string_type")
  (DeclStmt 0x9d95110 <line:1002:7, col:67>
    0x9d950e0 "typedef typename __istream_type::ios_base __ios_base")
  (DeclStmt 0x9d951d0 <line:1003:7, col:60>
    0x9d951a0 "typedef typename __istream_type::int_type __int_type")
  (DeclStmt 0x9d95290 <line:1004:7, col:61>
    0x9d95260 "typedef typename __string_type::size_type __size_type")
  (DeclStmt 0x9d95380 <line:1005:7, col:44>
    0x9d95350 "typedef ctype<_CharT> __ctype_type")
  (DeclStmt 0x9d95470 <line:1006:7, col:69>
    0x9d95440 "typedef typename __ctype_type::ctype_base __ctype_base")
  (DeclStmt 0x9d954f0 <line:1008:7, col:34>
    0x9d954a0 "__size_type __extracted =
      (IntegerLiteral 0x9d954d8 <col:33> 'int' 0)")
  (DeclStmt 0x9d95630 <line:1009:7, col:63>
    0x9d955b0 "typename __ios_base::iostate __err =
      (DependentScopeDeclRefExpr 0x9d95608 <col:44, col:56> '<dependent type>' lvalue)")
  (DeclStmt 0x9d95740 <line:1010:7, col:58>
    0x9d956c0 "typename __istream_type::sentry __cerb =
      (ParenListExpr 0x9d95720 <col:45, col:57> 'typename __istream_type::sentry'
        (DeclRefExpr 0x9d956f4 <col:46> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9d94a30 '__in' 'basic_istream<_CharT, _Traits> &')
        (CXXBoolLiteralExpr 0x9d95710 <col:52> '_Bool' false))")
  (IfStmt 0x9d96bf0 <line:1011:7, line:1058:2>
    <<<NULL>>>
    (DeclRefExpr 0x9d95750 <line:1011:11> 'typename __istream_type::sentry' lvalue Var 0x9d956c0 '__cerb' 'typename __istream_type::sentry')
    (CompoundStmt 0x9d96bd0 <line:1012:2, line:1058:2>
      (IfStmt 0x9d969a0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/basic_string.tcc:1045:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9d95768 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9d96960 </usr/include/c++/4.6/bits/basic_string.tcc:1014:6, line:1045:6>
          (CallExpr 0x9d957c8 <line:1016:8, col:20> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9d95790 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0x9d95778 <col:8> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d94be0 '__str' 'basic_string<_CharT, _Traits, _Alloc> &')))
          (DeclStmt 0x9d95878 <line:1017:8, col:25>
            0x9d95840 "_CharT __buf[128]")
          (DeclStmt 0x9d958e0 <line:1018:8, col:29>
            0x9d95890 "__size_type __len =
              (IntegerLiteral 0x9d958c8 <col:28> 'int' 0)")
          (DeclStmt 0x9d959a8 <line:1019:8, col:43>
            0x9d95900 "const streamsize __w =
              (CallExpr 0x9d95988 <col:31, col:42> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9d95950 <col:31, col:36> '<dependent type>' lvalue
                  (DeclRefExpr 0x9d95934 <col:31> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9d94a30 '__in' 'basic_istream<_CharT, _Traits> &')))")
          (DeclStmt 0x9d95b18 <line:1020:8, line:1021:51>
            0x9d959c0 "const __size_type __n =
              (ConditionalOperator 0x9d95af8 <line:1020:32, line:1021:50> '<dependent type>'
                (BinaryOperator 0x9d95a38 <line:1020:32, col:38> '_Bool' '>'
                  (ImplicitCastExpr 0x9d95a28 <col:32> 'streamsize':'int' <LValueToRValue>
                    (DeclRefExpr 0x9d959f4 <col:32> 'const streamsize':'const int' lvalue Var 0x9d95900 '__w' 'const streamsize':'const int'))
                  (IntegerLiteral 0x9d95a10 <col:38> 'int' 0))
                (CXXStaticCastExpr 0x9d95a70 <col:42, col:70> '__size_type':'typename __string_type::size_type' static_cast<__size_type> <Dependent>
                  (DeclRefExpr 0x9d95a50 <col:67> 'const streamsize':'const int' lvalue Var 0x9d95900 '__w' 'const streamsize':'const int'))
                (CallExpr 0x9d95ad8 <line:1021:35, col:50> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9d95aa0 <col:35, col:41> '<dependent type>' lvalue
                    (DeclRefExpr 0x9d95a88 <col:35> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d94be0 '__str' 'basic_string<_CharT, _Traits, _Alloc> &'))))")
          (DeclStmt 0x9d95cb8 <line:1022:8, col:73>
            0x9d95b80 "const __ctype_type &__ct =
              (CallExpr 0x9d95c98 <col:35, col:72> '<dependent type>'
                (UnresolvedLookupExpr 0x9d95bc0 <col:35, col:57> '<dependent type>' lvalue (ADL) = '1' 0x9c600f0)
                (CallExpr 0x9d95c78 <col:59, col:71> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9d95c40 <col:59, col:64> '<dependent type>' lvalue
                    (DeclRefExpr 0x9d95c28 <col:59> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9d94a30 '__in' 'basic_istream<_CharT, _Traits> &'))))")
          (DeclStmt 0x9d95d98 <line:1023:8, col:47>
            0x9d95cf0 "const __int_type __eof =
              (CallExpr 0x9d95d78 <col:33, col:46> '<dependent type>'
                (DependentScopeDeclRefExpr 0x9d95d50 <col:33, col:42> '<dependent type>' lvalue))")
          (DeclStmt 0x9d95eb0 <line:1024:8, col:46>
            0x9d95db0 "__int_type __c =
              (CallExpr 0x9d95e90 <col:25, col:45> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9d95e58 <col:25, col:39> '<dependent type>' lvalue
                  (CallExpr 0x9d95e38 <col:25, col:36> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9d95e00 <col:25, col:30> '<dependent type>' lvalue
                      (DeclRefExpr 0x9d95de4 <col:25> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9d94a30 '__in' 'basic_istream<_CharT, _Traits> &')))))")
          (WhileStmt 0x9d966d0 <line:1026:8, line:1039:3>
            <<<NULL>>>
            (BinaryOperator 0x9d961a0 <line:1026:15, line:1029:32> '<dependent type>' '&&'
              (BinaryOperator 0x9d96018 <line:1026:15, line:1027:43> '<dependent type>' '&&'
                (CXXOperatorCallExpr 0x9d95f38 <line:1026:15, col:29> '<dependent type>'
                  (UnresolvedLookupExpr 0x9d95ef0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bac3c0 0x9bc2c90 0x9bc5590 0x9d61190 0x9d616c0 0x9d61bf0)
                  (DeclRefExpr 0x9d95ec0 <col:15> '__size_type':'typename __string_type::size_type' lvalue Var 0x9d954a0 '__extracted' '__size_type':'typename __string_type::size_type')
                  (DeclRefExpr 0x9d95ed8 <col:29> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0x9d959c0 '__n' 'const __size_type':'const typename __string_type::size_type'))
                (UnaryOperator 0x9d96000 <line:1027:11, col:43> '<dependent type>' prefix '!'
                  (CallExpr 0x9d95fd8 <col:12, col:43> '<dependent type>'
                    (DependentScopeDeclRefExpr 0x9d95f80 <col:12, col:21> '<dependent type>' lvalue)
                    (DeclRefExpr 0x9d95fa4 <col:33> '__int_type':'typename __istream_type::int_type' lvalue Var 0x9d95db0 '__c' '__int_type':'typename __istream_type::int_type')
                    (DeclRefExpr 0x9d95fbc <col:38> 'const __int_type':'const typename __istream_type::int_type' lvalue Var 0x9d95cf0 '__eof' 'const __int_type':'const typename __istream_type::int_type'))))
              (UnaryOperator 0x9d96188 <line:1028:11, line:1029:32> '<dependent type>' prefix '!'
                (CallExpr 0x9d96160 <line:1028:12, line:1029:32> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9d96048 <line:1028:12, col:17> '<dependent type>' lvalue
                    (DeclRefExpr 0x9d96030 <col:12> 'const __ctype_type':'const ctype<_CharT>' lvalue Var 0x9d95b80 '__ct' 'const __ctype_type &'))
                  (DependentScopeDeclRefExpr 0x9d960b8 <col:20, col:34> '<dependent type>' lvalue)
                  (CallExpr 0x9d96140 <line:1029:6, col:31> '<dependent type>'
                    (DependentScopeDeclRefExpr 0x9d96100 <col:6, col:15> '<dependent type>' lvalue)
                    (DeclRefExpr 0x9d96124 <col:28> '__int_type':'typename __istream_type::int_type' lvalue Var 0x9d95db0 '__c' '__int_type':'typename __istream_type::int_type')))))
            (CompoundStmt 0x9d966b0 <line:1030:3, line:1039:3>
              (IfStmt 0x9d96458 <line:1031:5, line:1035:7>
                <<<NULL>>>
                (CXXOperatorCallExpr 0x9d962c0 <line:1031:9, col:47> '<dependent type>'
                  (UnresolvedLookupExpr 0x9d96268 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30 0x9d5e270 0x9d5ece0 0x9d5f520 0x9d5fa90)
                  (DeclRefExpr 0x9d961b8 <col:9> '__size_type':'typename __string_type::size_type' lvalue Var 0x9d95890 '__len' '__size_type':'typename __string_type::size_type')
                  (BinaryOperator 0x9d96250 <col:18, col:47> 'unsigned int' '/'
                    (UnaryExprOrTypeTraitExpr 0x9d96218 <col:18, col:30> 'unsigned int' sizeof 
                      (ParenExpr 0x9d96200 <col:24, col:30> '_CharT [128]' lvalue
                        (DeclRefExpr 0x9d961d0 <col:25> '_CharT [128]' lvalue Var 0x9d95840 '__buf' '_CharT [128]')))
                    (UnaryExprOrTypeTraitExpr 0x9d96238 <col:34, col:47> 'unsigned int' sizeof '_CharT')))
                (CompoundStmt 0x9d96440 <line:1032:7, line:1035:7>
                  (CallExpr 0x9d963d0 <line:1033:9, col:59> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9d96300 <col:9, col:15> '<dependent type>' lvalue
                      (DeclRefExpr 0x9d962e4 <col:9> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d94be0 '__str' 'basic_string<_CharT, _Traits, _Alloc> &'))
                    (DeclRefExpr 0x9d96334 <col:22> '_CharT [128]' lvalue Var 0x9d95840 '__buf' '_CharT [128]')
                    (BinaryOperator 0x9d963b8 <col:29, col:58> 'unsigned int' '/'
                      (UnaryExprOrTypeTraitExpr 0x9d96380 <col:29, col:41> 'unsigned int' sizeof 
                        (ParenExpr 0x9d96368 <col:35, col:41> '_CharT [128]' lvalue
                          (DeclRefExpr 0x9d9634c <col:36> '_CharT [128]' lvalue Var 0x9d95840 '__buf' '_CharT [128]')))
                      (UnaryExprOrTypeTraitExpr 0x9d963a0 <col:45, col:58> 'unsigned int' sizeof '_CharT')))
                  (BinaryOperator 0x9d96428 <line:1034:9, col:17> '<dependent type>' '='
                    (DeclRefExpr 0x9d963f4 <col:9> '__size_type':'typename __string_type::size_type' lvalue Var 0x9d95890 '__len' '__size_type':'typename __string_type::size_type')
                    (IntegerLiteral 0x9d96410 <col:17> 'int' 0)))
                <<<NULL>>>)
              (BinaryOperator 0x9d96570 <line:1036:5, col:47> '<dependent type>' '='
                (ArraySubscriptExpr 0x9d964d8 <col:5, col:18> '<dependent type>' lvalue
                  (DeclRefExpr 0x9d96474 <col:5> '_CharT [128]' lvalue Var 0x9d95840 '__buf' '_CharT [128]')
                  (UnaryOperator 0x9d964c0 <col:11, col:16> '<dependent type>' postfix '++'
                    (DeclRefExpr 0x9d9648c <col:11> '__size_type':'typename __string_type::size_type' lvalue Var 0x9d95890 '__len' '__size_type':'typename __string_type::size_type')))
                (CallExpr 0x9d96550 <col:22, col:47> '<dependent type>'
                  (DependentScopeDeclRefExpr 0x9d96510 <col:22, col:31> '<dependent type>' lvalue)
                  (DeclRefExpr 0x9d96534 <col:44> '__int_type':'typename __istream_type::int_type' lvalue Var 0x9d95db0 '__c' '__int_type':'typename __istream_type::int_type')))
              (UnaryOperator 0x9d965a0 <line:1037:5, col:7> '<dependent type>' prefix '++'
                (DeclRefExpr 0x9d96588 <col:7> '__size_type':'typename __string_type::size_type' lvalue Var 0x9d954a0 '__extracted' '__size_type':'typename __string_type::size_type'))
              (BinaryOperator 0x9d96698 <line:1038:5, col:32> '<dependent type>' '='
                (DeclRefExpr 0x9d965b4 <col:5> '__int_type':'typename __istream_type::int_type' lvalue Var 0x9d95db0 '__c' '__int_type':'typename __istream_type::int_type')
                (CallExpr 0x9d96678 <col:11, col:32> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9d96640 <col:11, col:25> '<dependent type>' lvalue
                    (CallExpr 0x9d96620 <col:11, col:22> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0x9d965e8 <col:11, col:16> '<dependent type>' lvalue
                        (DeclRefExpr 0x9d965cc <col:11> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9d94a30 '__in' 'basic_istream<_CharT, _Traits> &'))))))))
          (CallExpr 0x9d96768 <line:1040:8, col:33> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9d96700 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0x9d966e4 <col:8> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d94be0 '__str' 'basic_string<_CharT, _Traits, _Alloc> &'))
            (DeclRefExpr 0x9d96734 <col:21> '_CharT [128]' lvalue Var 0x9d95840 '__buf' '_CharT [128]')
            (DeclRefExpr 0x9d9674c <col:28> '__size_type':'typename __string_type::size_type' lvalue Var 0x9d95890 '__len' '__size_type':'typename __string_type::size_type'))
          (IfStmt 0x9d968b8 <line:1042:8, line:1043:24>
            <<<NULL>>>
            (CallExpr 0x9d96810 <line:1042:12, col:43> '<dependent type>'
              (DependentScopeDeclRefExpr 0x9d967b8 <col:12, col:21> '<dependent type>' lvalue)
              (DeclRefExpr 0x9d967dc <col:33> '__int_type':'typename __istream_type::int_type' lvalue Var 0x9d95db0 '__c' '__int_type':'typename __istream_type::int_type')
              (DeclRefExpr 0x9d967f4 <col:38> 'const __int_type':'const typename __istream_type::int_type' lvalue Var 0x9d95cf0 '__eof' 'const __int_type':'const typename __istream_type::int_type'))
            (CompoundAssignOperator 0x9d96898 <line:1043:3, col:24> '<dependent type>' lvalue '|=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
              (DeclRefExpr 0x9d96834 <col:3> 'typename __ios_base::iostate' lvalue Var 0x9d955b0 '__err' 'typename __ios_base::iostate')
              (DependentScopeDeclRefExpr 0x9d96870 <col:12, col:24> '<dependent type>' lvalue))
            <<<NULL>>>)
          (CallExpr 0x9d96940 <line:1044:8, col:20> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9d968f0 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0x9d968d4 <col:8> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9d94a30 '__in' 'basic_istream<_CharT, _Traits> &'))
            (IntegerLiteral 0x9d96928 <col:19> 'int' 0)))
        <<<NULL>>>)
      (IfStmt 0x9d96ab0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/basic_string.tcc:1050:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9d969c0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9d96a98 </usr/include/c++/4.6/bits/basic_string.tcc:1047:6, line:1050:6>
          (CallExpr 0x9d96a68 <line:1048:8, col:43> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9d969e8 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0x9d969d0 <col:8> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9d94a30 '__in' 'basic_istream<_CharT, _Traits> &'))
            (DependentScopeDeclRefExpr 0x9d96a40 <col:25, col:37> '<dependent type>' lvalue))
          (NullStmt 0x9d96a88 <line:1049:31>))
        <<<NULL>>>)
      (IfStmt 0x9d96bb0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/basic_string.tcc:1057:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9d96ad0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9d96b98 </usr/include/c++/4.6/bits/basic_string.tcc:1052:6, line:1057:6>
          (CallExpr 0x9d96b78 <line:1056:8, col:43> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9d96af8 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0x9d96ae0 <col:8> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9d94a30 '__in' 'basic_istream<_CharT, _Traits> &'))
            (DependentScopeDeclRefExpr 0x9d96b50 <col:25, col:37> '<dependent type>' lvalue)))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0x9d96cc0 <line:1060:7, line:1061:23>
    <<<NULL>>>
    (UnaryOperator 0x9d96c28 <line:1060:11, col:12> '<dependent type>' prefix '!'
      (DeclRefExpr 0x9d96c0c <col:12> '__size_type':'typename __string_type::size_type' lvalue Var 0x9d954a0 '__extracted' '__size_type':'typename __string_type::size_type'))
    (CompoundAssignOperator 0x9d96ca0 <line:1061:2, col:23> '<dependent type>' lvalue '|=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
      (DeclRefExpr 0x9d96c3c <col:2> 'typename __ios_base::iostate' lvalue Var 0x9d955b0 '__err' 'typename __ios_base::iostate')
      (DependentScopeDeclRefExpr 0x9d96c78 <col:11, col:23> '<dependent type>' lvalue))
    <<<NULL>>>)
  (IfStmt 0x9d96d80 <line:1062:7, line:1063:21>
    <<<NULL>>>
    (DeclRefExpr 0x9d96cdc <line:1062:11> 'typename __ios_base::iostate' lvalue Var 0x9d955b0 '__err' 'typename __ios_base::iostate')
    (CallExpr 0x9d96d60 <line:1063:2, col:21> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9d96d10 <col:2, col:7> '<dependent type>' lvalue
        (DeclRefExpr 0x9d96cf4 <col:2> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9d94a30 '__in' 'basic_istream<_CharT, _Traits> &'))
      (DeclRefExpr 0x9d96d44 <col:16> 'typename __ios_base::iostate' lvalue Var 0x9d955b0 '__err' 'typename __ios_base::iostate'))
    <<<NULL>>>)
  (ReturnStmt 0x9d96db8 <line:1064:7, col:14>
    (DeclRefExpr 0x9d96d9c <col:14> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9d94a30 '__in' 'basic_istream<_CharT, _Traits> &')))

;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> basic_istream<char> &getline(basic_istream<char> &__in, basic_string<char> &__str, char __delim)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> basic_istream<wchar_t> &getline(basic_istream<wchar_t> &__in, basic_string<wchar_t> &__str, wchar_t __delim)template <typename _CharT, typename _Traits, typename _Alloc> basic_istream<_CharT, _Traits> &getline(basic_istream<_CharT, _Traits> &__in, basic_string<_CharT, _Traits, _Alloc> &__str, _CharT __delim) (CompoundStmt 0x9d98ca8 </usr/include/c++/4.6/bits/basic_string.tcc:1071:5, line:1128:5>
  (DeclStmt 0x9d975d0 <line:1072:7, col:61>
    0x9d975a0 "typedef basic_istream<_CharT, _Traits> __istream_type")
  (DeclStmt 0x9d97770 <line:1073:7, col:66>
    0x9d97740 "typedef basic_string<_CharT, _Traits, _Alloc> __string_type")
  (DeclStmt 0x9d97830 <line:1074:7, col:67>
    0x9d97800 "typedef typename __istream_type::ios_base __ios_base")
  (DeclStmt 0x9d978d0 <line:1075:7, col:60>
    0x9d978a0 "typedef typename __istream_type::int_type __int_type")
  (DeclStmt 0x9d97990 <line:1076:7, col:61>
    0x9d97960 "typedef typename __string_type::size_type __size_type")
  (DeclStmt 0x9d97a10 <line:1078:7, col:34>
    0x9d979c0 "__size_type __extracted =
      (IntegerLiteral 0x9d979f8 <col:33> 'int' 0)")
  (DeclStmt 0x9d97ad8 <line:1079:7, col:47>
    0x9d97a30 "const __size_type __n =
      (CallExpr 0x9d97ab8 <col:31, col:46> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d97a80 <col:31, col:37> '<dependent type>' lvalue
          (DeclRefExpr 0x9d97a64 <col:31> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d972d0 '__str' 'basic_string<_CharT, _Traits, _Alloc> &')))")
  (DeclStmt 0x9d97bf0 <line:1080:7, col:63>
    0x9d97b70 "typename __ios_base::iostate __err =
      (DependentScopeDeclRefExpr 0x9d97bc8 <col:44, col:56> '<dependent type>' lvalue)")
  (DeclStmt 0x9d97ce0 <line:1081:7, col:57>
    0x9d97c60 "typename __istream_type::sentry __cerb =
      (ParenListExpr 0x9d97cc0 <col:45, col:56> 'typename __istream_type::sentry'
        (DeclRefExpr 0x9d97c94 <col:46> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9d97120 '__in' 'basic_istream<_CharT, _Traits> &')
        (CXXBoolLiteralExpr 0x9d97cb0 <col:52> '_Bool' true))")
  (IfStmt 0x9d98ad0 <line:1082:7, line:1122:2>
    <<<NULL>>>
    (DeclRefExpr 0x9d97cf0 <line:1082:11> 'typename __istream_type::sentry' lvalue Var 0x9d97c60 '__cerb' 'typename __istream_type::sentry')
    (CompoundStmt 0x9d98ab0 <line:1083:2, line:1122:2>
      (IfStmt 0x9d98880 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/basic_string.tcc:1109:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9d97d08 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9d98858 </usr/include/c++/4.6/bits/basic_string.tcc:1085:6, line:1109:6>
          (CallExpr 0x9d97d68 <line:1086:8, col:20> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9d97d30 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0x9d97d18 <col:8> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d972d0 '__str' 'basic_string<_CharT, _Traits, _Alloc> &')))
          (DeclStmt 0x9d97e70 <line:1087:8, col:65>
            0x9d97db0 "const __int_type __idelim =
              (CallExpr 0x9d97e50 <col:36, col:64> '<dependent type>'
                (DependentScopeDeclRefExpr 0x9d97e10 <col:36, col:45> '<dependent type>' lvalue)
                (DeclRefExpr 0x9d97e34 <col:57> '_CharT' lvalue ParmVar 0x9d97310 '__delim' '_CharT'))")
          (DeclStmt 0x9d97f30 <line:1088:8, col:47>
            0x9d97e90 "const __int_type __eof =
              (CallExpr 0x9d97f10 <col:33, col:46> '<dependent type>'
                (DependentScopeDeclRefExpr 0x9d97ee8 <col:33, col:42> '<dependent type>' lvalue))")
          (DeclStmt 0x9d98050 <line:1089:8, col:46>
            0x9d97f50 "__int_type __c =
              (CallExpr 0x9d98030 <col:25, col:45> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9d97ff8 <col:25, col:39> '<dependent type>' lvalue
                  (CallExpr 0x9d97fd8 <col:25, col:36> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9d97fa0 <col:25, col:30> '<dependent type>' lvalue
                      (DeclRefExpr 0x9d97f84 <col:25> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9d97120 '__in' 'basic_istream<_CharT, _Traits> &')))))")
          (WhileStmt 0x9d984a0 <line:1091:8, line:1098:3>
            <<<NULL>>>
            (BinaryOperator 0x9d98288 <line:1091:15, line:1093:46> '<dependent type>' '&&'
              (BinaryOperator 0x9d981b8 <line:1091:15, line:1092:43> '<dependent type>' '&&'
                (CXXOperatorCallExpr 0x9d980d8 <line:1091:15, col:29> '<dependent type>'
                  (UnresolvedLookupExpr 0x9d98090 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bac3c0 0x9bc2c90 0x9bc5590 0x9d61190 0x9d616c0 0x9d61bf0)
                  (DeclRefExpr 0x9d98060 <col:15> '__size_type':'typename __string_type::size_type' lvalue Var 0x9d979c0 '__extracted' '__size_type':'typename __string_type::size_type')
                  (DeclRefExpr 0x9d98078 <col:29> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0x9d97a30 '__n' 'const __size_type':'const typename __string_type::size_type'))
                (UnaryOperator 0x9d981a0 <line:1092:11, col:43> '<dependent type>' prefix '!'
                  (CallExpr 0x9d98178 <col:12, col:43> '<dependent type>'
                    (DependentScopeDeclRefExpr 0x9d98120 <col:12, col:21> '<dependent type>' lvalue)
                    (DeclRefExpr 0x9d98144 <col:33> '__int_type':'typename __istream_type::int_type' lvalue Var 0x9d97f50 '__c' '__int_type':'typename __istream_type::int_type')
                    (DeclRefExpr 0x9d9815c <col:38> 'const __int_type':'const typename __istream_type::int_type' lvalue Var 0x9d97e90 '__eof' 'const __int_type':'const typename __istream_type::int_type'))))
              (UnaryOperator 0x9d98270 <line:1093:11, col:46> '<dependent type>' prefix '!'
                (CallExpr 0x9d98248 <col:12, col:46> '<dependent type>'
                  (DependentScopeDeclRefExpr 0x9d981f0 <col:12, col:21> '<dependent type>' lvalue)
                  (DeclRefExpr 0x9d98214 <col:33> '__int_type':'typename __istream_type::int_type' lvalue Var 0x9d97f50 '__c' '__int_type':'typename __istream_type::int_type')
                  (DeclRefExpr 0x9d9822c <col:38> 'const __int_type':'const typename __istream_type::int_type' lvalue Var 0x9d97db0 '__idelim' 'const __int_type':'const typename __istream_type::int_type'))))
            (CompoundStmt 0x9d98480 <line:1094:3, line:1098:3>
              (CompoundAssignOperator 0x9d98338 <line:1095:5, col:39> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                (DeclRefExpr 0x9d982a0 <col:5> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9d972d0 '__str' 'basic_string<_CharT, _Traits, _Alloc> &')
                (CallExpr 0x9d98318 <col:14, col:39> '<dependent type>'
                  (DependentScopeDeclRefExpr 0x9d982d8 <col:14, col:23> '<dependent type>' lvalue)
                  (DeclRefExpr 0x9d982fc <col:36> '__int_type':'typename __istream_type::int_type' lvalue Var 0x9d97f50 '__c' '__int_type':'typename __istream_type::int_type')))
              (UnaryOperator 0x9d98370 <line:1096:5, col:7> '<dependent type>' prefix '++'
                (DeclRefExpr 0x9d98358 <col:7> '__size_type':'typename __string_type::size_type' lvalue Var 0x9d979c0 '__extracted' '__size_type':'typename __string_type::size_type'))
              (BinaryOperator 0x9d98468 <line:1097:5, col:32> '<dependent type>' '='
                (DeclRefExpr 0x9d98384 <col:5> '__int_type':'typename __istream_type::int_type' lvalue Var 0x9d97f50 '__c' '__int_type':'typename __istream_type::int_type')
                (CallExpr 0x9d98448 <col:11, col:32> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9d98410 <col:11, col:25> '<dependent type>' lvalue
                    (CallExpr 0x9d983f0 <col:11, col:22> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0x9d983b8 <col:11, col:16> '<dependent type>' lvalue
                        (DeclRefExpr 0x9d9839c <col:11> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9d97120 '__in' 'basic_istream<_CharT, _Traits> &'))))))))
          (IfStmt 0x9d98838 <line:1100:8, line:1108:24>
            <<<NULL>>>
            (CallExpr 0x9d98538 <line:1100:12, col:43> '<dependent type>'
              (DependentScopeDeclRefExpr 0x9d984e0 <col:12, col:21> '<dependent type>' lvalue)
              (DeclRefExpr 0x9d98504 <col:33> '__int_type':'typename __istream_type::int_type' lvalue Var 0x9d97f50 '__c' '__int_type':'typename __istream_type::int_type')
              (DeclRefExpr 0x9d9851c <col:38> 'const __int_type':'const typename __istream_type::int_type' lvalue Var 0x9d97e90 '__eof' 'const __int_type':'const typename __istream_type::int_type'))
            (CompoundAssignOperator 0x9d985c0 <line:1101:3, col:24> '<dependent type>' lvalue '|=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
              (DeclRefExpr 0x9d9855c <col:3> 'typename __ios_base::iostate' lvalue Var 0x9d97b70 '__err' 'typename __ios_base::iostate')
              (DependentScopeDeclRefExpr 0x9d98598 <col:12, col:24> '<dependent type>' lvalue))
            (IfStmt 0x9d98818 <line:1102:13, line:1108:24>
              <<<NULL>>>
              (CallExpr 0x9d98660 <line:1102:17, col:51> '<dependent type>'
                (DependentScopeDeclRefExpr 0x9d98608 <col:17, col:26> '<dependent type>' lvalue)
                (DeclRefExpr 0x9d9862c <col:38> '__int_type':'typename __istream_type::int_type' lvalue Var 0x9d97f50 '__c' '__int_type':'typename __istream_type::int_type')
                (DeclRefExpr 0x9d98644 <col:43> 'const __int_type':'const typename __istream_type::int_type' lvalue Var 0x9d97db0 '__idelim' 'const __int_type':'const typename __istream_type::int_type'))
              (CompoundStmt 0x9d98780 <line:1103:3, line:1106:3>
                (UnaryOperator 0x9d986a0 <line:1104:5, col:7> '<dependent type>' prefix '++'
                  (DeclRefExpr 0x9d98684 <col:7> '__size_type':'typename __string_type::size_type' lvalue Var 0x9d979c0 '__extracted' '__size_type':'typename __string_type::size_type'))
                (CallExpr 0x9d98760 <line:1105:5, col:26> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9d98728 <col:5, col:19> '<dependent type>' lvalue
                    (CallExpr 0x9d98708 <col:5, col:16> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0x9d986d0 <col:5, col:10> '<dependent type>' lvalue
                        (DeclRefExpr 0x9d986b4 <col:5> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9d97120 '__in' 'basic_istream<_CharT, _Traits> &'))))))
              (CompoundAssignOperator 0x9d987f8 <line:1108:3, col:24> '<dependent type>' lvalue '|=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                (DeclRefExpr 0x9d98798 <col:3> 'typename __ios_base::iostate' lvalue Var 0x9d97b70 '__err' 'typename __ios_base::iostate')
                (DependentScopeDeclRefExpr 0x9d987d0 <col:12, col:24> '<dependent type>' lvalue)))))
        <<<NULL>>>)
      (IfStmt 0x9d98990 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/basic_string.tcc:1114:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9d988a0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9d98978 </usr/include/c++/4.6/bits/basic_string.tcc:1111:6, line:1114:6>
          (CallExpr 0x9d98948 <line:1112:8, col:43> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9d988c8 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0x9d988b0 <col:8> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9d97120 '__in' 'basic_istream<_CharT, _Traits> &'))
            (DependentScopeDeclRefExpr 0x9d98920 <col:25, col:37> '<dependent type>' lvalue))
          (NullStmt 0x9d98968 <line:1113:31>))
        <<<NULL>>>)
      (IfStmt 0x9d98a90 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/basic_string.tcc:1121:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9d989b0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9d98a78 </usr/include/c++/4.6/bits/basic_string.tcc:1116:6, line:1121:6>
          (CallExpr 0x9d98a58 <line:1120:8, col:43> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9d989d8 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0x9d989c0 <col:8> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9d97120 '__in' 'basic_istream<_CharT, _Traits> &'))
            (DependentScopeDeclRefExpr 0x9d98a30 <col:25, col:37> '<dependent type>' lvalue)))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0x9d98ba0 <line:1123:7, line:1124:23>
    <<<NULL>>>
    (UnaryOperator 0x9d98b08 <line:1123:11, col:12> '<dependent type>' prefix '!'
      (DeclRefExpr 0x9d98aec <col:12> '__size_type':'typename __string_type::size_type' lvalue Var 0x9d979c0 '__extracted' '__size_type':'typename __string_type::size_type'))
    (CompoundAssignOperator 0x9d98b80 <line:1124:2, col:23> '<dependent type>' lvalue '|=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
      (DeclRefExpr 0x9d98b1c <col:2> 'typename __ios_base::iostate' lvalue Var 0x9d97b70 '__err' 'typename __ios_base::iostate')
      (DependentScopeDeclRefExpr 0x9d98b58 <col:11, col:23> '<dependent type>' lvalue))
    <<<NULL>>>)
  (IfStmt 0x9d98c60 <line:1125:7, line:1126:21>
    <<<NULL>>>
    (DeclRefExpr 0x9d98bbc <line:1125:11> 'typename __ios_base::iostate' lvalue Var 0x9d97b70 '__err' 'typename __ios_base::iostate')
    (CallExpr 0x9d98c40 <line:1126:2, col:21> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9d98bf0 <col:2, col:7> '<dependent type>' lvalue
        (DeclRefExpr 0x9d98bd4 <col:2> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9d97120 '__in' 'basic_istream<_CharT, _Traits> &'))
      (DeclRefExpr 0x9d98c24 <col:16> 'typename __ios_base::iostate' lvalue Var 0x9d97b70 '__err' 'typename __ios_base::iostate'))
    <<<NULL>>>)
  (ReturnStmt 0x9d98c98 <line:1127:7, col:14>
    (DeclRefExpr 0x9d98c7c <col:14> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9d97120 '__in' 'basic_istream<_CharT, _Traits> &')))

;
    class basic_string {
        class basic_string;
        typedef typename allocator<char>::rebind<char>::other _CharT_alloc_type;
    public:
    public:
        typedef std::char_traits<char> traits_type;
        typedef typename char_traits<char>::char_type value_type;
        typedef std::allocator<char> allocator_type;
        typedef typename _CharT_alloc_type::size_type size_type;
        typedef typename _CharT_alloc_type::difference_type difference_type;
        typedef typename _CharT_alloc_type::reference reference;
        typedef typename _CharT_alloc_type::const_reference const_reference;
        typedef typename _CharT_alloc_type::pointer pointer;
        typedef typename _CharT_alloc_type::const_pointer const_pointer;
        typedef __gnu_cxx::__normal_iterator<pointer, basic_string<char> > iterator;
        typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string<char> > const_iterator;
        typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
        typedef std::reverse_iterator<iterator> reverse_iterator;
    private:
    private:
        struct _Rep_base {
            struct _Rep_base;
            size_type _M_length;
            size_type _M_capacity;
            _Atomic_word _M_refcount;
        };
        struct _Rep :  std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep_base {
            struct _Rep;
            typedef typename allocator<char>::rebind<char>::other _Raw_bytes_alloc;
            static const size_type _S_max_size;
            static const char _S_terminal;
            static size_type _S_empty_rep_storage[];
            static std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep &_S_empty_rep();
            bool _M_is_leaked() const;
            bool _M_is_shared() const;
            void _M_set_leaked();
            void _M_set_sharable();
            void _M_set_length_and_sharable(size_type __n);
            char *_M_refdata() throw();
            char *_M_grab(const std::allocator<char> &__alloc1, const std::allocator<char> &__alloc2);
            static std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep *_S_create(size_type, size_type, const std::allocator<char> &);
            void _M_dispose(const std::allocator<char> &__a);
            void _M_destroy(const std::allocator<char> &) throw();
            char *_M_refcopy() throw();
            char *_M_clone(const std::allocator<char> &, size_type __res);
        };
        struct _Alloc_hider :  std::allocator<char> {
            struct _Alloc_hider;
            _Alloc_hider(char *__dat, const std::allocator<char> &__a);
            char *_M_p;
        };
    public:
    public:
        static const size_type npos = (CXXStaticCastExpr 0x9d9ae98 </usr/include/c++/4.6/bits/basic_string.h:279:37, col:62> 'size_type':'unsigned int' static_cast<size_type> <NoOp>
  (ImplicitCastExpr 0x9d9ae88 <col:60, col:61> 'size_type':'unsigned int' <IntegralCast>
    (UnaryOperator 0x9d24990 <col:60, col:61> 'int' prefix '-'
      (IntegerLiteral 0x9d24978 <col:61> 'int' 1))))
;
    private:
    private:
        mutable std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider _M_dataplus;
        char *_M_data() const (CompoundStmt 0xa0d7970 </usr/include/c++/4.6/bits/basic_string.h:287:7, col:35>
  (ReturnStmt 0xa0d7960 <col:9, col:29>
    (ImplicitCastExpr 0xa0d7950 <col:17, col:29> 'char *' <LValueToRValue>
      (MemberExpr 0xa0d7930 <col:17, col:29> 'char *' lvalue ._M_p 0x9d9b420
        (MemberExpr 0xa0d7910 <col:17> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Alloc_hider' lvalue ->_M_dataplus 0x9d9b450
          (CXXThisExpr 0xa0d77f0 <col:17> 'const class std::basic_string<char> *' this))))))


        char *_M_data(char *__p);
        std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep *_M_rep() const (CompoundStmt 0xa0d77d8 </usr/include/c++/4.6/bits/basic_string.h:295:7, col:62>
  (ReturnStmt 0xa0d77c8 <col:9, col:59>
    (UnaryOperator 0xa0d77b0 <col:16, col:59> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *' prefix '&'
      (ParenExpr 0xa0d7798 <col:17, col:59> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep' lvalue
        (ArraySubscriptExpr 0xa0d7780 <col:18, col:58> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep' lvalue
          (ParenExpr 0xa0d7768 <col:18, col:54> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *'
            (CXXReinterpretCastExpr 0xa0d7750 <col:19, col:53> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *' reinterpret_cast<struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *> <BitCast>
              (CXXMemberCallExpr 0xa0d7730 <col:44, col:52> 'char *'
                (MemberExpr 0xa0d7710 <col:44> '<bound member function type>' ->_M_data 0x9d9b4d0
                  (CXXThisExpr 0xa0d7700 <col:44> 'const class std::basic_string<char> *' this)))))
          (UnaryOperator 0x9d46d68 <col:56, col:57> 'int' prefix '-'
            (IntegerLiteral 0x9d46d50 <col:57> 'int' 1)))))))


        iterator _M_ibegin() const;
        iterator _M_iend() const;
        void _M_leak();
        size_type _M_check(size_type __pos, const char *__s) const;
        void _M_check_length(size_type __n1, size_type __n2, const char *__s) const;
        size_type _M_limit(size_type __pos, size_type __off) const;
        bool _M_disjunct(const char *__s) const;
        static void _M_copy(char *__d, const char *__s, size_type __n);
        static void _M_move(char *__d, const char *__s, size_type __n);
        static void _M_assign(char *__d, size_type __n, char __c);
        template <class _Iterator> static void _S_copy_chars(char *__p, _Iterator __k1, _Iterator __k2);
        static void _S_copy_chars(char *__p, iterator __k1, iterator __k2);
        static void _S_copy_chars(char *__p, const_iterator __k1, const_iterator __k2);
        static void _S_copy_chars(char *__p, char *__k1, char *__k2);
        static void _S_copy_chars(char *__p, const char *__k1, const char *__k2);
        static int _S_compare(size_type __n1, size_type __n2);
        void _M_mutate(size_type __pos, size_type __len1, size_type __len2);
        void _M_leak_hard();
        static std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep &_S_empty_rep();
    public:
    public:
        basic_string();
        basic_string(const std::allocator<char> &__a);
        basic_string(const std::basic_string<char> &__str);
        basic_string(const std::basic_string<char> &__str, size_type __pos, size_type __n);
        basic_string(const std::basic_string<char> &__str, size_type __pos, size_type __n, const std::allocator<char> &__a);
        basic_string(const char *__s, size_type __n, const std::allocator<char> &__a);
        basic_string(const char *__s, const std::allocator<char> &__a);
        basic_string(size_type __n, char __c, const std::allocator<char> &__a);
        template <class _InputIterator> basic_string(_InputIterator __beg, _InputIterator __end, const std::allocator<char> &__a);
        void ~basic_string();
        std::basic_string<char> &operator=(const std::basic_string<char> &__str);
        std::basic_string<char> &operator=(const char *__s);
        std::basic_string<char> &operator=(char __c);
        iterator begin();
        const_iterator begin() const;
        iterator end();
        const_iterator end() const;
        reverse_iterator rbegin();
        const_reverse_iterator rbegin() const;
        reverse_iterator rend();
        const_reverse_iterator rend() const;
    public:
    public:
        size_type size() const (CompoundStmt 0xa0d7128 </usr/include/c++/4.6/bits/basic_string.h:710:7, col:37>
  (ReturnStmt 0xa0d7118 <col:9, col:26>
    (ImplicitCastExpr 0xa0d7108 <col:16, col:26> 'size_type':'unsigned int' <LValueToRValue>
      (MemberExpr 0xa0d70e8 <col:16, col:26> 'size_type':'unsigned int' lvalue ->_M_length 0x9dbb390
        (ImplicitCastExpr 0xa0d70d8 <col:16, col:23> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
          (CXXMemberCallExpr 0xa0d70a0 <col:16, col:23> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *'
            (MemberExpr 0xa0d7080 <col:16> '<bound member function type>' ->_M_rep 0x9d9b7a0
              (CXXThisExpr 0xa0d6f58 <col:16> 'const class std::basic_string<char> *' this))))))))


        size_type length() const;
        size_type max_size() const;
        void resize(size_type __n, char __c);
        void resize(size_type __n);
        size_type capacity() const;
        void reserve(size_type __res_arg);
        void clear();
        bool empty() const (CompoundStmt 0xa0d6f40 </usr/include/c++/4.6/bits/basic_string.h:803:7, col:35>
  (ReturnStmt 0xa0d6f30 <col:9, col:32>
    (BinaryOperator 0xa0d6f18 <col:16, col:32> '_Bool' '=='
      (CXXMemberCallExpr 0xa0d6ee8 <col:16, col:27> 'size_type':'unsigned int'
        (MemberExpr 0xa0d6ec8 <col:16, col:22> '<bound member function type>' ->size 0x9da2750
          (CXXThisExpr 0xa0d6eb8 <col:16> 'const class std::basic_string<char> *' this)))
      (ImplicitCastExpr 0xa0d6f08 <col:32> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0x9d4f748 <col:32> 'int' 0)))))


        const_reference operator[](size_type __pos) const;
        reference operator[](size_type __pos);
        const_reference at(size_type __n) const (CompoundStmt 0xa0d8010 </usr/include/c++/4.6/bits/basic_string.h:856:7, line:860:7>
  (IfStmt 0xa0d7a98 <line:857:2, line:858:48>
    <<<NULL>>>
    (BinaryOperator 0xa0d7a40 <line:857:6, col:24> '_Bool' '>='
      (ImplicitCastExpr 0xa0d7a30 <col:6> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa0d79c4 <col:6> 'size_type':'unsigned int' lvalue ParmVar 0x9da3cb0 '__n' 'size_type':'unsigned int'))
      (CXXMemberCallExpr 0xa0d7a10 <col:13, col:24> 'size_type':'unsigned int'
        (MemberExpr 0xa0d79f0 <col:13, col:19> '<bound member function type>' ->size 0x9da2750
          (CXXThisExpr 0xa0d79e0 <col:13> 'const class std::basic_string<char> *' this))))
    (CallExpr 0xa0d7a68 <line:858:4, col:48> 'void'
      (ImplicitCastExpr 0xa0d7a58 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x9d4fbb4 <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9b766b0 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa0d7a88 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0x9d4fba0 <col:24, col:30> 'const char [17]' lvalue
          (StringLiteral 0x9d4fb70 </usr/include/c++/4.6/bits/basic_string.h:858:29> 'const char [17]' lvalue "basic_string::at"))))
    <<<NULL>>>)
  (ReturnStmt 0xa0d8000 <line:859:2, col:22>
    (ImplicitCastExpr 0xa0d7ff0 <col:9, col:22> 'const char':'const char' lvalue <NoOp>
      (ArraySubscriptExpr 0xa0d7fd8 <col:9, col:22> 'char':'char' lvalue
        (CXXMemberCallExpr 0xa0d7f90 <col:9, col:17> 'char *'
          (MemberExpr 0xa0d7f70 <col:9> '<bound member function type>' ->_M_data 0x9d9b4d0
            (CXXThisExpr 0xa0d7f60 <col:9> 'const class std::basic_string<char> *' this)))
        (ImplicitCastExpr 0xa0d7fc8 <col:19> 'size_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa0d7fac <col:19> 'size_type':'unsigned int' lvalue ParmVar 0x9da3cb0 '__n' 'size_type':'unsigned int'))))))


        reference at(size_type __n);
        std::basic_string<char> &operator+=(const std::basic_string<char> &__str);
        std::basic_string<char> &operator+=(const char *__s);
        std::basic_string<char> &operator+=(char __c);
        std::basic_string<char> &append(const std::basic_string<char> &__str);
        std::basic_string<char> &append(const std::basic_string<char> &__str, size_type __pos, size_type __n);
        std::basic_string<char> &append(const char *__s, size_type __n);
        std::basic_string<char> &append(const char *__s);
        std::basic_string<char> &append(size_type __n, char __c);
        template <class _InputIterator> std::basic_string<char> &append(_InputIterator __first, _InputIterator __last);
        void push_back(char __c);
        std::basic_string<char> &assign(const std::basic_string<char> &__str);
        std::basic_string<char> &assign(const std::basic_string<char> &__str, size_type __pos, size_type __n);
        std::basic_string<char> &assign(const char *__s, size_type __n);
        std::basic_string<char> &assign(const char *__s);
        std::basic_string<char> &assign(size_type __n, char __c);
        template <class _InputIterator> std::basic_string<char> &assign(_InputIterator __first, _InputIterator __last);
        void insert(iterator __p, size_type __n, char __c);
        template <class _InputIterator> void insert(iterator __p, _InputIterator __beg, _InputIterator __end);
        std::basic_string<char> &insert(size_type __pos1, const std::basic_string<char> &__str);
        std::basic_string<char> &insert(size_type __pos1, const std::basic_string<char> &__str, size_type __pos2, size_type __n);
        std::basic_string<char> &insert(size_type __pos, const char *__s, size_type __n);
        std::basic_string<char> &insert(size_type __pos, const char *__s);
        std::basic_string<char> &insert(size_type __pos, size_type __n, char __c);
        iterator insert(iterator __p, char __c);
        std::basic_string<char> &erase(size_type __pos, size_type __n);
        iterator erase(iterator __position);
        iterator erase(iterator __first, iterator __last);
        std::basic_string<char> &replace(size_type __pos, size_type __n, const std::basic_string<char> &__str);
        std::basic_string<char> &replace(size_type __pos1, size_type __n1, const std::basic_string<char> &__str, size_type __pos2, size_type __n2);
        std::basic_string<char> &replace(size_type __pos, size_type __n1, const char *__s, size_type __n2);
        std::basic_string<char> &replace(size_type __pos, size_type __n1, const char *__s);
        std::basic_string<char> &replace(size_type __pos, size_type __n1, size_type __n2, char __c);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const std::basic_string<char> &__str);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const char *__s, size_type __n);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const char *__s);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, size_type __n, char __c);
        template <class _InputIterator> std::basic_string<char> &replace(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, char *__k1, char *__k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const char *__k1, const char *__k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const_iterator __k1, const_iterator __k2);
    private:
    private:
        template <class _Integer> std::basic_string<char> &_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n, _Integer __val, std::__true_type);
        template <class _InputIterator> std::basic_string<char> &_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2, std::__false_type);
        std::basic_string<char> &_M_replace_aux(size_type __pos1, size_type __n1, size_type __n2, char __c);
        std::basic_string<char> &_M_replace_safe(size_type __pos1, size_type __n1, const char *__s, size_type __n2);
        template <class _InIterator> static char *_S_construct_aux(_InIterator __beg, _InIterator __end, const std::allocator<char> &__a, std::__false_type);
        template <class _Integer> static char *_S_construct_aux(_Integer __beg, _Integer __end, const std::allocator<char> &__a, std::__true_type);
        static char *_S_construct_aux_2(size_type __req, char __c, const std::allocator<char> &__a);
        template <class _InIterator> static char *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<char> &__a);
        template <class _InIterator> static char *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<char> &__a, std::input_iterator_tag);
        template <class _FwdIterator> static char *_S_construct(_FwdIterator __beg, _FwdIterator __end, const std::allocator<char> &__a, std::forward_iterator_tag);
        static char *_S_construct(size_type __req, char __c, const std::allocator<char> &__a);
    public:
    public:
        size_type copy(char *__s, size_type __n, size_type __pos) const;
        void swap(std::basic_string<char> &__s);
        const char *c_str() const;
        const char *data() const;
        allocator_type get_allocator() const;
        size_type find(const char *__s, size_type __pos, size_type __n) const;
        size_type find(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find(const char *__s, size_type __pos) const;
        size_type find(char __c, size_type __pos) const;
        size_type rfind(const std::basic_string<char> &__str, size_type __pos) const;
        size_type rfind(const char *__s, size_type __pos, size_type __n) const;
        size_type rfind(const char *__s, size_type __pos) const;
        size_type rfind(char __c, size_type __pos) const;
        size_type find_first_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_first_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_first_of(const char *__s, size_type __pos) const;
        size_type find_first_of(char __c, size_type __pos) const;
        size_type find_last_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_last_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_last_of(const char *__s, size_type __pos) const;
        size_type find_last_of(char __c, size_type __pos) const;
        size_type find_first_not_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_first_not_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_first_not_of(const char *__s, size_type __pos) const;
        size_type find_first_not_of(char __c, size_type __pos) const;
        size_type find_last_not_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_last_not_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_last_not_of(const char *__s, size_type __pos) const;
        size_type find_last_not_of(char __c, size_type __pos) const;
        std::basic_string<char> substr(size_type __pos, size_type __n) const;
        int compare(const std::basic_string<char> &__str) const;
        int compare(size_type __pos, size_type __n, const std::basic_string<char> &__str) const;
        int compare(size_type __pos1, size_type __n1, const std::basic_string<char> &__str, size_type __pos2, size_type __n2) const;
        int compare(const char *__s) const;
        int compare(size_type __pos, size_type __n1, const char *__s) const;
        int compare(size_type __pos, size_type __n1, const char *__s, size_type __n2) const;
    };
    class basic_string {
        class basic_string;
        typedef typename allocator<wchar_t>::rebind<wchar_t>::other _CharT_alloc_type;
    public:
    public:
        typedef std::char_traits<wchar_t> traits_type;
        typedef typename char_traits<wchar_t>::char_type value_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename _CharT_alloc_type::size_type size_type;
        typedef typename _CharT_alloc_type::difference_type difference_type;
        typedef typename _CharT_alloc_type::reference reference;
        typedef typename _CharT_alloc_type::const_reference const_reference;
        typedef typename _CharT_alloc_type::pointer pointer;
        typedef typename _CharT_alloc_type::const_pointer const_pointer;
        typedef __gnu_cxx::__normal_iterator<pointer, basic_string<wchar_t> > iterator;
        typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string<wchar_t> > const_iterator;
        typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
        typedef std::reverse_iterator<iterator> reverse_iterator;
    private:
    private:
        struct _Rep_base {
            struct _Rep_base;
            size_type _M_length;
            size_type _M_capacity;
            _Atomic_word _M_refcount;
        };
        struct _Rep :  std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep_base {
            struct _Rep;
            typedef typename allocator<wchar_t>::rebind<char>::other _Raw_bytes_alloc;
            static const size_type _S_max_size;
            static const wchar_t _S_terminal;
            static size_type _S_empty_rep_storage[];
            static std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep &_S_empty_rep() (CompoundStmt 0xa0d6978 </usr/include/c++/4.6/bits/basic_string.h:176:9, line:182:2>
  (DeclStmt 0xa0d67d8 <line:180:4, col:62>
    0xa0d6600 "void *__p =
      (CXXReinterpretCastExpr 0xa0d67c0 <col:16, col:61> 'void *' reinterpret_cast<void *> <BitCast>
        (UnaryOperator 0xa0d67a8 <col:40, col:41> 'size_type (*)[]' prefix '&'
          (DeclRefExpr 0xa0d6750 <col:41> 'size_type []' lvalue Var 0x9de11c0 '_S_empty_rep_storage' 'size_type []')))")
  (ReturnStmt 0xa0d6968 <line:181:4, col:39>
    (UnaryOperator 0xa0d6950 <col:11, col:39> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue prefix '*'
      (CXXReinterpretCastExpr 0xa0d6938 <col:12, col:39> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' reinterpret_cast<struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *> <BitCast>
        (ImplicitCastExpr 0xa0d6928 <col:36> 'void *' <LValueToRValue>
          (DeclRefExpr 0xa0d690c <col:36> 'void *' lvalue Var 0xa0d6600 '__p' 'void *'))))))


            bool _M_is_leaked() const;
            bool _M_is_shared() const;
            void _M_set_leaked();
            void _M_set_sharable();
            void _M_set_length_and_sharable(size_type __n);
            wchar_t *_M_refdata() throw();
            wchar_t *_M_grab(const std::allocator<wchar_t> &__alloc1, const std::allocator<wchar_t> &__alloc2);
            static std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep *_S_create(size_type, size_type, const std::allocator<wchar_t> &);
            void _M_dispose(const std::allocator<wchar_t> &__a) (CompoundStmt 0xa0d65e8 </usr/include/c++/4.6/bits/basic_string.h:232:2, line:246:2>
  (IfStmt 0xa0d65c8 <line:234:4, line:245:6>
    <<<NULL>>>
    (ImplicitCastExpr 0xa0d62f0 <line:234:8, col:55> '_Bool' <IntegralToBoolean>
      (CallExpr 0xa0d62a8 <col:8, col:55> 'long'
        (ImplicitCastExpr 0xa0d6298 <col:8> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9d463fc <col:8> 'long (long, long)' lvalue Function 0x9d45c10 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0xa0d62d0 <col:25, col:47> 'long' <IntegralCast>
          (BinaryOperator 0xa0d6280 <col:25, col:47> '_Bool' '!='
            (CXXThisExpr 0xa0d60e0 <col:25> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this)
            (UnaryOperator 0xa0d6268 <col:33, col:47> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' prefix '&'
              (CallExpr 0xa0d6248 <col:34, col:47> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
                (ImplicitCastExpr 0xa0d6238 <col:34> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(*)(void)' <FunctionToPointerDecay>
                  (DeclRefExpr 0xa0d6200 <col:34> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(void)' lvalue CXXMethod 0x9de1340 '_S_empty_rep' 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(void)'))))))
        (ImplicitCastExpr 0xa0d62e0 <col:50> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0x9d464e8 <col:50> '_Bool' false))))
    (CompoundStmt 0xa0d65b0 <line:236:6, line:245:6>
      (NullStmt 0x9d46520 <line:238:67>)
      (IfStmt 0xa0d6590 <line:239:8, line:244:3>
        <<<NULL>>>
        (BinaryOperator 0xa0d63e8 <line:239:12, line:240:16> '_Bool' '<='
          (CallExpr 0xa0d63c0 <line:239:12, line:240:11> '_Atomic_word':'int'
            (ImplicitCastExpr 0xa0d63b0 <line:239:12, col:23> '_Atomic_word (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9d46550 <col:12, col:23> '_Atomic_word (_Atomic_word *, int)' lvalue Function 0x9d1fa80 '__exchange_and_add_dispatch' '_Atomic_word (_Atomic_word *, int)'))
            (UnaryOperator 0xa0d6398 <col:51, col:58> '_Atomic_word *' prefix '&'
              (MemberExpr 0xa0d6378 <col:52, col:58> '_Atomic_word':'int' lvalue ->_M_refcount 0x9de0990
                (ImplicitCastExpr 0xa0d6368 <col:52> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
                  (CXXThisExpr 0xa0d6340 <col:52> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this))))
            (UnaryOperator 0x9d465e8 <line:240:9, col:10> 'int' prefix '-'
              (IntegerLiteral 0x9d465d0 <col:10> 'int' 1)))
          (IntegerLiteral 0x9d46628 <col:16> 'int' 0))
        (CompoundStmt 0xa0d6578 <line:241:3, line:244:3>
          (NullStmt 0x9d466a8 <line:242:63>)
          (CXXMemberCallExpr 0xa0d6558 <line:243:5, col:19> 'void'
            (MemberExpr 0xa0d6520 <col:5> '<bound member function type>' ->_M_destroy 0x9de1ff0
              (CXXThisExpr 0xa0d6400 <col:5> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this))
            (DeclRefExpr 0xa0d6540 <col:16> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue ParmVar 0x9de1ed0 '__a' 'const class std::allocator<wchar_t> &')))
        <<<NULL>>>))
    <<<NULL>>>))


            void _M_destroy(const std::allocator<wchar_t> &) throw();
            wchar_t *_M_refcopy() throw();
            wchar_t *_M_clone(const std::allocator<wchar_t> &, size_type __res);
        };
        struct _Alloc_hider :  std::allocator<wchar_t> {
            struct _Alloc_hider;
            _Alloc_hider(wchar_t *__dat, const std::allocator<wchar_t> &__a);
            wchar_t *_M_p;
            inline void ~_Alloc_hider() throw() (CompoundStmt 0xa0d5840 </usr/include/c++/4.6/bits/basic_string.h:266:14>)


        };
    public:
    public:
        static const size_type npos = (CXXStaticCastExpr 0x9dc03e8 </usr/include/c++/4.6/bits/basic_string.h:279:37, col:62> 'size_type':'unsigned int' static_cast<size_type> <NoOp>
  (ImplicitCastExpr 0x9dc03d8 <col:60, col:61> 'size_type':'unsigned int' <IntegralCast>
    (UnaryOperator 0x9d24990 <col:60, col:61> 'int' prefix '-'
      (IntegerLiteral 0x9d24978 <col:61> 'int' 1))))
;
    private:
    private:
        mutable std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Alloc_hider _M_dataplus;
        wchar_t *_M_data() const (CompoundStmt 0xa0d6080 </usr/include/c++/4.6/bits/basic_string.h:287:7, col:35>
  (ReturnStmt 0xa0d6070 <col:9, col:29>
    (ImplicitCastExpr 0xa0d6060 <col:17, col:29> 'wchar_t *' <LValueToRValue>
      (MemberExpr 0xa0d6040 <col:17, col:29> 'wchar_t *' lvalue ._M_p 0x9dc0970
        (MemberExpr 0xa0d6020 <col:17> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Alloc_hider' lvalue ->_M_dataplus 0x9dc09a0
          (CXXThisExpr 0xa0d5f00 <col:17> 'const class std::basic_string<wchar_t> *' this))))))


        wchar_t *_M_data(wchar_t *__p);
        std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep *_M_rep() const (CompoundStmt 0xa0d5ee8 </usr/include/c++/4.6/bits/basic_string.h:295:7, col:62>
  (ReturnStmt 0xa0d5ed8 <col:9, col:59>
    (UnaryOperator 0xa0d5ec0 <col:16, col:59> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' prefix '&'
      (ParenExpr 0xa0d5ea8 <col:17, col:59> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
        (ArraySubscriptExpr 0xa0d5e90 <col:18, col:58> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
          (ParenExpr 0xa0d5e78 <col:18, col:54> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
            (CXXReinterpretCastExpr 0xa0d5e60 <col:19, col:53> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' reinterpret_cast<struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *> <BitCast>
              (CXXMemberCallExpr 0xa0d5e40 <col:44, col:52> 'wchar_t *'
                (MemberExpr 0xa0d5e20 <col:44> '<bound member function type>' ->_M_data 0x9dc0a20
                  (CXXThisExpr 0xa0d5e10 <col:44> 'const class std::basic_string<wchar_t> *' this)))))
          (UnaryOperator 0x9d46d68 <col:56, col:57> 'int' prefix '-'
            (IntegerLiteral 0x9d46d50 <col:57> 'int' 1)))))))


        iterator _M_ibegin() const;
        iterator _M_iend() const;
        void _M_leak();
        size_type _M_check(size_type __pos, const char *__s) const;
        void _M_check_length(size_type __n1, size_type __n2, const char *__s) const;
        size_type _M_limit(size_type __pos, size_type __off) const;
        bool _M_disjunct(const wchar_t *__s) const;
        static void _M_copy(wchar_t *__d, const wchar_t *__s, size_type __n);
        static void _M_move(wchar_t *__d, const wchar_t *__s, size_type __n);
        static void _M_assign(wchar_t *__d, size_type __n, wchar_t __c);
        template <class _Iterator> static void _S_copy_chars(wchar_t *__p, _Iterator __k1, _Iterator __k2);
        static void _S_copy_chars(wchar_t *__p, iterator __k1, iterator __k2);
        static void _S_copy_chars(wchar_t *__p, const_iterator __k1, const_iterator __k2);
        static void _S_copy_chars(wchar_t *__p, wchar_t *__k1, wchar_t *__k2);
        static void _S_copy_chars(wchar_t *__p, const wchar_t *__k1, const wchar_t *__k2);
        static int _S_compare(size_type __n1, size_type __n2);
        void _M_mutate(size_type __pos, size_type __len1, size_type __len2);
        void _M_leak_hard();
        static std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep &_S_empty_rep();
    public:
    public:
        basic_string();
        basic_string(const std::allocator<wchar_t> &__a);
        basic_string(const std::basic_string<wchar_t> &__str);
        basic_string(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n);
        basic_string(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n, const std::allocator<wchar_t> &__a);
        basic_string(const wchar_t *__s, size_type __n, const std::allocator<wchar_t> &__a);
        basic_string(const wchar_t *__s, const std::allocator<wchar_t> &__a);
        basic_string(size_type __n, wchar_t __c, const std::allocator<wchar_t> &__a);
        template <class _InputIterator> basic_string(_InputIterator __beg, _InputIterator __end, const std::allocator<wchar_t> &__a);
        void ~basic_string() (CompoundStmt 0xa0d5790 </usr/include/c++/4.6/bits/basic_string.h:533:7, col:54>
  (ExprWithCleanups 0xa0d5770 <col:9, col:51> 'void'
    (CXXTemporary 0xa0d56f0)
    (CXXMemberCallExpr 0xa0d5708 <col:9, col:51> 'void'
      (MemberExpr 0xa0d566c <col:9, col:19> '<bound member function type>' ->_M_dispose 0x9de1f20
        (CXXMemberCallExpr 0xa0d5640 <col:9, col:16> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
          (MemberExpr 0xa0d5620 <col:9> '<bound member function type>' ->_M_rep 0x9dc0d10
            (ImplicitCastExpr 0xa0d5660 <col:9> 'const class std::basic_string<wchar_t> *' <NoOp>
              (CXXThisExpr 0xa0d5500 <col:9> 'class std::basic_string<wchar_t> *' this)))))
      (MaterializeTemporaryExpr 0xa0d5760 <col:30, col:50> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue
        (ImplicitCastExpr 0xa0d5750 <col:30, col:50> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' <NoOp>
          (CXXBindTemporaryExpr 0xa0d56f8 <col:30, col:50> 'allocator_type':'class std::allocator<wchar_t>' (CXXTemporary 0xa0d56f0)
            (CXXMemberCallExpr 0xa0d56c0 <col:30, col:50> 'allocator_type':'class std::allocator<wchar_t>'
              (MemberExpr 0xa0d56a0 <col:30, col:36> '<bound member function type>' ->get_allocator 0x9dd8770
                (ImplicitCastExpr 0xa0d56e0 <col:30> 'const class std::basic_string<wchar_t> *' <NoOp>
                  (CXXThisExpr 0xa0d5690 <col:30> 'class std::basic_string<wchar_t> *' this))))))))))


        std::basic_string<wchar_t> &operator=(const std::basic_string<wchar_t> &__str) (CompoundStmt 0xa0f5380 </usr/include/c++/4.6/bits/basic_string.h:541:7, col:37>
  (ReturnStmt 0xa0f5370 <col:9, col:34>
    (CXXMemberCallExpr 0xa0f5350 <col:16, col:34> 'class std::basic_string<wchar_t>' lvalue
      (MemberExpr 0xa0f5330 <col:16, col:22> '<bound member function type>' ->assign 0x9dcb4d0
        (CXXThisExpr 0xa0f52b8 <col:16> 'class std::basic_string<wchar_t> *' this))
      (DeclRefExpr 0xa0f5318 <col:29> 'const class std::basic_string<wchar_t>' lvalue ParmVar 0x9dc6730 '__str' 'const class std::basic_string<wchar_t> &'))))


        std::basic_string<wchar_t> &operator=(const wchar_t *__s);
        std::basic_string<wchar_t> &operator=(wchar_t __c);
        iterator begin();
        const_iterator begin() const;
        iterator end();
        const_iterator end() const;
        reverse_iterator rbegin();
        const_reverse_iterator rbegin() const;
        reverse_iterator rend();
        const_reverse_iterator rend() const;
    public:
    public:
        size_type size() const (CompoundStmt 0xa0db590 </usr/include/c++/4.6/bits/basic_string.h:710:7, col:37>
  (ReturnStmt 0xa0db580 <col:9, col:26>
    (ImplicitCastExpr 0xa0db570 <col:16, col:26> 'size_type':'unsigned int' <LValueToRValue>
      (MemberExpr 0xa0db550 <col:16, col:26> 'size_type':'unsigned int' lvalue ->_M_length 0x9de0810
        (ImplicitCastExpr 0xa0db540 <col:16, col:23> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
          (CXXMemberCallExpr 0xa0db520 <col:16, col:23> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
            (MemberExpr 0xa0db500 <col:16> '<bound member function type>' ->_M_rep 0x9dc0d10
              (CXXThisExpr 0xa0d8cd8 <col:16> 'const class std::basic_string<wchar_t> *' this))))))))


        size_type length() const;
        size_type max_size() const;
        void resize(size_type __n, wchar_t __c);
        void resize(size_type __n);
        size_type capacity() const;
        void reserve(size_type __res_arg);
        void clear();
        bool empty() const (CompoundStmt 0xa0d80f8 </usr/include/c++/4.6/bits/basic_string.h:803:7, col:35>
  (ReturnStmt 0xa0d80e8 <col:9, col:32>
    (BinaryOperator 0xa0d80d0 <col:16, col:32> '_Bool' '=='
      (CXXMemberCallExpr 0xa0d80a0 <col:16, col:27> 'size_type':'unsigned int'
        (MemberExpr 0xa0d8080 <col:16, col:22> '<bound member function type>' ->size 0x9dc7be0
          (CXXThisExpr 0xa0d8070 <col:16> 'const class std::basic_string<wchar_t> *' this)))
      (ImplicitCastExpr 0xa0d80c0 <col:32> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0x9d4f748 <col:32> 'int' 0)))))


        const_reference operator[](size_type __pos) const;
        reference operator[](size_type __pos);
        const_reference at(size_type __n) const (CompoundStmt 0xa0d8790 </usr/include/c++/4.6/bits/basic_string.h:856:7, line:860:7>
  (IfStmt 0xa0d8220 <line:857:2, line:858:48>
    <<<NULL>>>
    (BinaryOperator 0xa0d81c8 <line:857:6, col:24> '_Bool' '>='
      (ImplicitCastExpr 0xa0d81b8 <col:6> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa0d814c <col:6> 'size_type':'unsigned int' lvalue ParmVar 0x9dc9140 '__n' 'size_type':'unsigned int'))
      (CXXMemberCallExpr 0xa0d8198 <col:13, col:24> 'size_type':'unsigned int'
        (MemberExpr 0xa0d8178 <col:13, col:19> '<bound member function type>' ->size 0x9dc7be0
          (CXXThisExpr 0xa0d8168 <col:13> 'const class std::basic_string<wchar_t> *' this))))
    (CallExpr 0xa0d81f0 <line:858:4, col:48> 'void'
      (ImplicitCastExpr 0xa0d81e0 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x9d4fbb4 <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9b766b0 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa0d8210 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0x9d4fba0 <col:24, col:30> 'const char [17]' lvalue
          (StringLiteral 0x9d4fb70 </usr/include/c++/4.6/bits/basic_string.h:858:29> 'const char [17]' lvalue "basic_string::at"))))
    <<<NULL>>>)
  (ReturnStmt 0xa0d8780 <line:859:2, col:22>
    (ImplicitCastExpr 0xa0d8770 <col:9, col:22> 'const wchar_t':'const wchar_t' lvalue <NoOp>
      (ArraySubscriptExpr 0xa0d8758 <col:9, col:22> 'wchar_t':'wchar_t' lvalue
        (CXXMemberCallExpr 0xa0d8710 <col:9, col:17> 'wchar_t *'
          (MemberExpr 0xa0d86f0 <col:9> '<bound member function type>' ->_M_data 0x9dc0a20
            (CXXThisExpr 0xa0d86e0 <col:9> 'const class std::basic_string<wchar_t> *' this)))
        (ImplicitCastExpr 0xa0d8748 <col:19> 'size_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa0d872c <col:19> 'size_type':'unsigned int' lvalue ParmVar 0x9dc9140 '__n' 'size_type':'unsigned int'))))))


        reference at(size_type __n);
        std::basic_string<wchar_t> &operator+=(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &operator+=(const wchar_t *__s);
        std::basic_string<wchar_t> &operator+=(wchar_t __c);
        std::basic_string<wchar_t> &append(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &append(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n);
        std::basic_string<wchar_t> &append(const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &append(const wchar_t *__s);
        std::basic_string<wchar_t> &append(size_type __n, wchar_t __c);
        template <class _InputIterator> std::basic_string<wchar_t> &append(_InputIterator __first, _InputIterator __last);
        void push_back(wchar_t __c);
        std::basic_string<wchar_t> &assign(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &assign(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n);
        std::basic_string<wchar_t> &assign(const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &assign(const wchar_t *__s);
        std::basic_string<wchar_t> &assign(size_type __n, wchar_t __c);
        template <class _InputIterator> std::basic_string<wchar_t> &assign(_InputIterator __first, _InputIterator __last);
        void insert(iterator __p, size_type __n, wchar_t __c);
        template <class _InputIterator> void insert(iterator __p, _InputIterator __beg, _InputIterator __end);
        std::basic_string<wchar_t> &insert(size_type __pos1, const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &insert(size_type __pos1, const std::basic_string<wchar_t> &__str, size_type __pos2, size_type __n);
        std::basic_string<wchar_t> &insert(size_type __pos, const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &insert(size_type __pos, const wchar_t *__s);
        std::basic_string<wchar_t> &insert(size_type __pos, size_type __n, wchar_t __c);
        iterator insert(iterator __p, wchar_t __c);
        std::basic_string<wchar_t> &erase(size_type __pos, size_type __n);
        iterator erase(iterator __position);
        iterator erase(iterator __first, iterator __last);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n, const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &replace(size_type __pos1, size_type __n1, const std::basic_string<wchar_t> &__str, size_type __pos2, size_type __n2);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n1, const wchar_t *__s, size_type __n2);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n1, const wchar_t *__s);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n1, size_type __n2, wchar_t __c);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const wchar_t *__s);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, size_type __n, wchar_t __c);
        template <class _InputIterator> std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, wchar_t *__k1, wchar_t *__k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const wchar_t *__k1, const wchar_t *__k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const_iterator __k1, const_iterator __k2);
    private:
    private:
        template <class _Integer> std::basic_string<wchar_t> &_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n, _Integer __val, std::__true_type);
        template <class _InputIterator> std::basic_string<wchar_t> &_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2, std::__false_type);
        std::basic_string<wchar_t> &_M_replace_aux(size_type __pos1, size_type __n1, size_type __n2, wchar_t __c);
        std::basic_string<wchar_t> &_M_replace_safe(size_type __pos1, size_type __n1, const wchar_t *__s, size_type __n2);
        template <class _InIterator> static wchar_t *_S_construct_aux(_InIterator __beg, _InIterator __end, const std::allocator<wchar_t> &__a, std::__false_type);
        template <class _Integer> static wchar_t *_S_construct_aux(_Integer __beg, _Integer __end, const std::allocator<wchar_t> &__a, std::__true_type);
        static wchar_t *_S_construct_aux_2(size_type __req, wchar_t __c, const std::allocator<wchar_t> &__a);
        template <class _InIterator> static wchar_t *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<wchar_t> &__a);
        template <class _InIterator> static wchar_t *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<wchar_t> &__a, std::input_iterator_tag);
        template <class _FwdIterator> static wchar_t *_S_construct(_FwdIterator __beg, _FwdIterator __end, const std::allocator<wchar_t> &__a, std::forward_iterator_tag);
        static wchar_t *_S_construct(size_type __req, wchar_t __c, const std::allocator<wchar_t> &__a);
    public:
    public:
        size_type copy(wchar_t *__s, size_type __n, size_type __pos) const;
        void swap(std::basic_string<wchar_t> &__s);
        const wchar_t *c_str() const (CompoundStmt 0xa0d8cc0 </usr/include/c++/4.6/bits/basic_string.h:1766:7, col:27>
  (ReturnStmt 0xa0d8cb0 <col:9, col:24>
    (ImplicitCastExpr 0xa0d8ca0 <col:16, col:24> 'const wchar_t *' <NoOp>
      (CXXMemberCallExpr 0xa0d8c80 <col:16, col:24> 'wchar_t *'
        (MemberExpr 0xa0d8c60 <col:16> '<bound member function type>' ->_M_data 0x9dc0a20
          (CXXThisExpr 0xa0d8c50 <col:16> 'const class std::basic_string<wchar_t> *' this))))))


        const wchar_t *data() const;
        allocator_type get_allocator() const (CompoundStmt 0xa0d6b50 </usr/include/c++/4.6/bits/basic_string.h:1783:7, col:29>
  (ReturnStmt 0xa0d6b40 <col:9, col:16>
    (CXXConstructExpr 0xa0d6b18 <col:16> 'allocator_type':'class std::allocator<wchar_t>''void (const class std::allocator<wchar_t> &) throw()'
      (ImplicitCastExpr 0xa0d6b08 <col:16> 'const class std::allocator<wchar_t>' lvalue <NoOp>
        (ImplicitCastExpr 0xa0d6af8 <col:16> 'class std::allocator<wchar_t>' lvalue <DerivedToBase (allocator)>
          (MemberExpr 0xa0d6ab0 <col:16> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Alloc_hider' lvalue ->_M_dataplus 0x9dc09a0
            (CXXThisExpr 0xa0d6990 <col:16> 'const class std::basic_string<wchar_t> *' this)))))))


        size_type find(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find(const wchar_t *__s, size_type __pos) const;
        size_type find(wchar_t __c, size_type __pos) const;
        size_type rfind(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type rfind(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type rfind(const wchar_t *__s, size_type __pos) const;
        size_type rfind(wchar_t __c, size_type __pos) const;
        size_type find_first_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_first_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_first_of(const wchar_t *__s, size_type __pos) const;
        size_type find_first_of(wchar_t __c, size_type __pos) const;
        size_type find_last_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_last_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_last_of(const wchar_t *__s, size_type __pos) const;
        size_type find_last_of(wchar_t __c, size_type __pos) const;
        size_type find_first_not_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_first_not_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_first_not_of(const wchar_t *__s, size_type __pos) const;
        size_type find_first_not_of(wchar_t __c, size_type __pos) const;
        size_type find_last_not_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_last_not_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_last_not_of(const wchar_t *__s, size_type __pos) const;
        size_type find_last_not_of(wchar_t __c, size_type __pos) const;
        std::basic_string<wchar_t> substr(size_type __pos, size_type __n) const;
        int compare(const std::basic_string<wchar_t> &__str) const;
        int compare(size_type __pos, size_type __n, const std::basic_string<wchar_t> &__str) const;
        int compare(size_type __pos1, size_type __n1, const std::basic_string<wchar_t> &__str, size_type __pos2, size_type __n2) const;
        int compare(const wchar_t *__s) const;
        int compare(size_type __pos, size_type __n1, const wchar_t *__s) const;
        int compare(size_type __pos, size_type __n1, const wchar_t *__s, size_type __n2) const;
    };
}
namespace std {
    class locale {
        class locale;
    public:
    public:
        typedef int category;
        class facet;
        class id;
        class _Impl;
        ;
        ;
        ;
        ;
        ;
        static const category none = (IntegerLiteral 0x9de6758 </usr/include/c++/4.6/bits/locale_classes.h:99:35> 'int' 0)
;
        static const category ctype = (ImplicitCastExpr 0x9de6800 </usr/include/c++/4.6/bits/locale_classes.h:100:36, col:42> 'const category':'const int' <IntegralCast>
  (BinaryOperator 0x9de67e8 <col:36, col:42> 'long' '<<'
    (IntegerLiteral 0x9de67b8 <col:36> 'long' 1)
    (IntegerLiteral 0x9de67d0 <col:42> 'int' 0)))
;
        static const category numeric = (ImplicitCastExpr 0x9de68a0 </usr/include/c++/4.6/bits/locale_classes.h:101:37, col:43> 'const category':'const int' <IntegralCast>
  (BinaryOperator 0x9de6888 <col:37, col:43> 'long' '<<'
    (IntegerLiteral 0x9de6858 <col:37> 'long' 1)
    (IntegerLiteral 0x9de6870 <col:43> 'int' 1)))
;
        static const category collate = (ImplicitCastExpr 0x9de6940 </usr/include/c++/4.6/bits/locale_classes.h:102:37, col:43> 'const category':'const int' <IntegralCast>
  (BinaryOperator 0x9de6928 <col:37, col:43> 'long' '<<'
    (IntegerLiteral 0x9de68f8 <col:37> 'long' 1)
    (IntegerLiteral 0x9de6910 <col:43> 'int' 2)))
;
        static const category time = (ImplicitCastExpr 0x9de69e0 </usr/include/c++/4.6/bits/locale_classes.h:103:35, col:41> 'const category':'const int' <IntegralCast>
  (BinaryOperator 0x9de69c8 <col:35, col:41> 'long' '<<'
    (IntegerLiteral 0x9de6998 <col:35> 'long' 1)
    (IntegerLiteral 0x9de69b0 <col:41> 'int' 3)))
;
        static const category monetary = (ImplicitCastExpr 0x9de6a80 </usr/include/c++/4.6/bits/locale_classes.h:104:38, col:44> 'const category':'const int' <IntegralCast>
  (BinaryOperator 0x9de6a68 <col:38, col:44> 'long' '<<'
    (IntegerLiteral 0x9de6a38 <col:38> 'long' 1)
    (IntegerLiteral 0x9de6a50 <col:44> 'int' 4)))
;
        static const category messages = (ImplicitCastExpr 0x9de6b20 </usr/include/c++/4.6/bits/locale_classes.h:105:38, col:44> 'const category':'const int' <IntegralCast>
  (BinaryOperator 0x9de6b08 <col:38, col:44> 'long' '<<'
    (IntegerLiteral 0x9de6ad8 <col:38> 'long' 1)
    (IntegerLiteral 0x9de6af0 <col:44> 'int' 5)))
;
        static const category all = (ParenExpr 0x9de6ce0 </usr/include/c++/4.6/bits/locale_classes.h:106:34, line:107:36> 'int'
  (BinaryOperator 0x9de6cc8 <line:106:35, line:107:28> 'int' '|'
    (BinaryOperator 0x9de6c88 <line:106:35, line:107:17> 'int' '|'
      (BinaryOperator 0x9de6c48 <line:106:35, line:107:9> 'int' '|'
        (BinaryOperator 0x9de6c08 <line:106:35, col:53> 'int' '|'
          (BinaryOperator 0x9de6bc8 <col:35, col:43> 'int' '|'
            (ImplicitCastExpr 0x9de6ba8 <col:35> 'category':'int' <LValueToRValue>
              (DeclRefExpr 0x9de6b74 <col:35> 'const category':'const int' lvalue Var 0x9de6780 'ctype' 'const category':'const int'))
            (ImplicitCastExpr 0x9de6bb8 <col:43> 'category':'int' <LValueToRValue>
              (DeclRefExpr 0x9de6b8c <col:43> 'const category':'const int' lvalue Var 0x9de6820 'numeric' 'const category':'const int')))
          (ImplicitCastExpr 0x9de6bf8 <col:53> 'category':'int' <LValueToRValue>
            (DeclRefExpr 0x9de6be0 <col:53> 'const category':'const int' lvalue Var 0x9de68c0 'collate' 'const category':'const int')))
        (ImplicitCastExpr 0x9de6c38 <line:107:9> 'category':'int' <LValueToRValue>
          (DeclRefExpr 0x9de6c20 <col:9> 'const category':'const int' lvalue Var 0x9de6960 'time' 'const category':'const int')))
      (ImplicitCastExpr 0x9de6c78 <col:17> 'category':'int' <LValueToRValue>
        (DeclRefExpr 0x9de6c60 <col:17> 'const category':'const int' lvalue Var 0x9de6a00 'monetary' 'const category':'const int')))
    (ImplicitCastExpr 0x9de6cb8 <col:28> 'category':'int' <LValueToRValue>
      (DeclRefExpr 0x9de6ca0 <col:28> 'const category':'const int' lvalue Var 0x9de6aa0 'messages' 'const category':'const int'))))
;
        locale() throw();
        locale(const std::locale &__other) throw();
        locale(const char *__s);
        locale(const std::locale &__base, const char *__s, category __cat);
        locale(const std::locale &__base, const std::locale &__add, category __cat);
        template <typename _Facet> locale(const std::locale &__other, _Facet *__f);
        void ~locale() throw();
        const std::locale &operator=(const std::locale &__other) throw();
        template <typename _Facet> std::locale combine(const std::locale &__other) const;
        string name() const;
        bool operator==(const std::locale &__other) const throw();
        bool operator!=(const std::locale &__other) const throw() (CompoundStmt 0x9deec40 </usr/include/c++/4.6/bits/locale_classes.h:236:5, col:44>
  (ReturnStmt 0x9deec30 <col:7, col:41>
    (UnaryOperator 0x9deec18 <col:14, col:41> '_Bool' prefix '!'
      (ParenExpr 0x9deec00 <col:15, col:41> '_Bool'
        (CXXMemberCallExpr 0x9deebe0 <col:16, col:40> '_Bool'
          (MemberExpr 0x9deeba8 <col:16, col:30> '<bound member function type>' ->operator== 0x9de7b30
            (CXXThisExpr 0x9deeb98 <col:16> 'const class std::locale *' this))
          (DeclRefExpr 0x9deebc8 <col:33> 'const class std::locale' lvalue ParmVar 0x9de7bb0 '__other' 'const class std::locale &'))))))


        template <typename _Char, typename _Traits, typename _Alloc> bool operator()(const basic_string<_Char, _Traits, _Alloc> &__s1, const basic_string<_Char, _Traits, _Alloc> &__s2) const;
        static std::locale global(const std::locale &);
        static const std::locale &classic();
    private:
    private:
        std::locale::_Impl *_M_impl;
        static std::locale::_Impl *_S_classic;
        static std::locale::_Impl *_S_global;
        static const char *const *const _S_categories;
        enum  {
            _S_categories_size = (ImplicitCastExpr 0x9dee698 </usr/include/c++/4.6/bits/locale_classes.h:304:33, /usr/include/c++/4.6//i686-linux-gnu/bits/c++locale.h:45:33> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9dee640 </usr/include/c++/4.6/bits/locale_classes.h:304:33, /usr/include/c++/4.6//i686-linux-gnu/bits/c++locale.h:45:33> 'int' '+'
    (IntegerLiteral 0x9dee610 </usr/include/c++/4.6/bits/locale_classes.h:304:33> 'int' 6)
    (IntegerLiteral 0x9dee628 </usr/include/c++/4.6//i686-linux-gnu/bits/c++locale.h:45:33> 'int' 6)))

        };
        static __gthread_once_t _S_once;
        locale(std::locale::_Impl *) throw();
        static void _S_initialize();
        static void _S_initialize_once() throw();
        static category _S_normalize_category(category);
        void _M_coalesce(const std::locale &__base, const std::locale &__add, category __cat);
    };
    class facet {
        class facet;
    private:
    private:
        ;
        ;
        mutable _Atomic_word _M_refcount;
        static __c_locale _S_c_locale;
        static const char _S_c_name[2];
        static __gthread_once_t _S_once;
        static void _S_initialize_once();
    protected:
    protected:
        facet(size_t __refs = (ImplicitCastExpr 0x9defdb0 </usr/include/c++/4.6/bits/locale_classes.h:370:27> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9defd98 <col:27> 'int' 0))
) throw() : _M_refcount((ConditionalOperator 0x9defe50 </usr/include/c++/4.6/bits/locale_classes.h:370:52, col:65> 'int'
  (ImplicitCastExpr 0x9defe40 <col:52> '_Bool' <IntegralToBoolean>
    (ImplicitCastExpr 0x9defe30 <col:52> 'size_t':'unsigned int' <LValueToRValue>
      (DeclRefExpr 0x9defde4 <col:52> 'size_t':'unsigned int' lvalue ParmVar 0x9def100 '__refs' 'size_t':'unsigned int')))
  (IntegerLiteral 0x9defe00 <col:61> 'int' 1)
  (IntegerLiteral 0x9defe18 <col:65> 'int' 0))
) (CompoundStmt 0x9defe90 </usr/include/c++/4.6/bits/locale_classes.h:371:5, col:7>)


        virtual void ~facet();
        static void _S_create_c_locale(__c_locale &__cloc, const char *__s, __c_locale __old = (ImplicitCastExpr 0x9defdd8 </usr/include/c++/4.6/bits/locale_classes.h:379:29> '__c_locale':'struct __locale_struct *' <NullToPointer>
  (IntegerLiteral 0x9defdc0 <col:29> 'int' 0))
);
        static __c_locale _S_clone_c_locale(__c_locale &__cloc) throw();
        static void _S_destroy_c_locale(__c_locale &__cloc);
        static __c_locale _S_lc_ctype_c_locale(__c_locale __cloc, const char *__s);
        static __c_locale _S_get_c_locale();
        static const char *_S_get_c_name() throw();
    private:
    private:
        void _M_add_reference() const throw() (CompoundStmt 0x9deffc0 </usr/include/c++/4.6/bits/locale_classes.h:401:5, col:58>
  (CallExpr 0x9deff98 <col:7, col:55> 'void'
    (ImplicitCastExpr 0x9deff88 <col:7, col:18> 'void (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9defec4 <col:7, col:18> 'void (_Atomic_word *, int)' lvalue Function 0x9d1ff10 '__atomic_add_dispatch' 'void (_Atomic_word *, int)'))
    (UnaryOperator 0x9deff58 <col:40, col:41> '_Atomic_word *' prefix '&'
      (MemberExpr 0x9deff34 <col:41> '_Atomic_word':'int' lvalue ->_M_refcount 0x9deeed0
        (CXXThisExpr 0x9deff08 <col:41> 'const class std::locale::facet *' this)))
    (IntegerLiteral 0x9deff70 <col:54> 'int' 1)))


        void _M_remove_reference() const throw() (CompoundStmt 0x9df0218 </usr/include/c++/4.6/bits/locale_classes.h:405:5, line:416:5>
  (NullStmt 0x9deffd8 <line:407:60>)
  (IfStmt 0x9df01f8 <line:408:7, line:415:2>
    <<<NULL>>>
    (BinaryOperator 0x9df00f0 <line:408:11, col:71> '_Bool' '=='
      (CallExpr 0x9df00b0 <col:11, col:66> '_Atomic_word':'int'
        (ImplicitCastExpr 0x9df00a0 <col:11, col:22> '_Atomic_word (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9df0008 <col:11, col:22> '_Atomic_word (_Atomic_word *, int)' lvalue Function 0x9d1fa80 '__exchange_and_add_dispatch' '_Atomic_word (_Atomic_word *, int)'))
        (UnaryOperator 0x9df0058 <col:50, col:51> '_Atomic_word *' prefix '&'
          (MemberExpr 0x9df0038 <col:51> '_Atomic_word':'int' lvalue ->_M_refcount 0x9deeed0
            (CXXThisExpr 0x9df0028 <col:51> 'const class std::locale::facet *' this)))
        (UnaryOperator 0x9df0088 <col:64, col:65> 'int' prefix '-'
          (IntegerLiteral 0x9df0070 <col:65> 'int' 1)))
      (IntegerLiteral 0x9df00d8 <col:71> 'int' 1))
    (CompoundStmt 0x9df01d8 <line:409:2, line:415:2>
      (NullStmt 0x9df0108 <line:410:63>)
      (IfStmt 0x9df0178 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/locale_classes.h:412:21>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9df0118 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9df0160 </usr/include/c++/4.6/bits/locale_classes.h:412:6, col:21>
          (CXXDeleteExpr 0x9df0148 <col:8, col:15> 'void'
            (ImplicitCastExpr 0x9df0138 <col:15> 'void *' <NoOp>
              (CXXThisExpr 0x9df0128 <col:15> 'const class std::locale::facet *' this))))
        <<<NULL>>>)
      (IfStmt 0x9df01b8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/locale_classes.h:414:8>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9df0198 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9df01a8 </usr/include/c++/4.6/bits/locale_classes.h:414:6, col:8>)
        <<<NULL>>>))
    <<<NULL>>>))


        facet(const std::locale::facet &);
        std::locale::facet &operator=(const std::locale::facet &);
    };
    class id {
        class id;
    private:
    private:
        ;
        ;
        ;
        ;
        mutable size_t _M_index;
        static _Atomic_word _S_refcount;
        void operator=(const std::locale::id &);
        id(const std::locale::id &);
    public:
    public:
        id() (CompoundStmt 0x9df0be0 </usr/include/c++/4.6/bits/locale_classes.h:467:10, col:12>)


        size_t _M_id() const throw();
    };
    class _Impl {
        class _Impl;
    public:
    public:
        ;
        ;
        ;
        ;
        ;
    private:
    private:
        _Atomic_word _M_refcount;
        const std::locale::facet **_M_facets;
        size_t _M_facets_size;
        const std::locale::facet **_M_caches;
        char **_M_names;
        static const locale::id *const _S_id_ctype[];
        static const locale::id *const _S_id_numeric[];
        static const locale::id *const _S_id_collate[];
        static const locale::id *const _S_id_time[];
        static const locale::id *const _S_id_monetary[];
        static const locale::id *const _S_id_messages[];
        static const locale::id *const *const _S_facet_categories[];
        void _M_add_reference() throw() (CompoundStmt 0x9df2fc8 </usr/include/c++/4.6/bits/locale_classes.h:510:5, col:58>
  (CallExpr 0x9df2fa0 <col:7, col:55> 'void'
    (ImplicitCastExpr 0x9df2f90 <col:7, col:18> 'void (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9df2f0c <col:7, col:18> 'void (_Atomic_word *, int)' lvalue Function 0x9d1ff10 '__atomic_add_dispatch' 'void (_Atomic_word *, int)'))
    (UnaryOperator 0x9df2f60 <col:40, col:41> '_Atomic_word *' prefix '&'
      (MemberExpr 0x9df2f40 <col:41> '_Atomic_word':'int' lvalue ->_M_refcount 0x9df1340
        (CXXThisExpr 0x9df2f30 <col:41> 'class std::locale::_Impl *' this)))
    (IntegerLiteral 0x9df2f78 <col:54> 'int' 1)))


        void _M_remove_reference() throw() (CompoundStmt 0x9df3220 </usr/include/c++/4.6/bits/locale_classes.h:514:5, line:525:5>
  (NullStmt 0x9df2fe0 <line:516:60>)
  (IfStmt 0x9df3200 <line:517:7, line:524:2>
    <<<NULL>>>
    (BinaryOperator 0x9df30f8 <line:517:11, col:71> '_Bool' '=='
      (CallExpr 0x9df30b8 <col:11, col:66> '_Atomic_word':'int'
        (ImplicitCastExpr 0x9df30a8 <col:11, col:22> '_Atomic_word (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9df3010 <col:11, col:22> '_Atomic_word (_Atomic_word *, int)' lvalue Function 0x9d1fa80 '__exchange_and_add_dispatch' '_Atomic_word (_Atomic_word *, int)'))
        (UnaryOperator 0x9df3060 <col:50, col:51> '_Atomic_word *' prefix '&'
          (MemberExpr 0x9df3040 <col:51> '_Atomic_word':'int' lvalue ->_M_refcount 0x9df1340
            (CXXThisExpr 0x9df3030 <col:51> 'class std::locale::_Impl *' this)))
        (UnaryOperator 0x9df3090 <col:64, col:65> 'int' prefix '-'
          (IntegerLiteral 0x9df3078 <col:65> 'int' 1)))
      (IntegerLiteral 0x9df30e0 <col:71> 'int' 1))
    (CompoundStmt 0x9df31e0 <line:518:2, line:524:2>
      (NullStmt 0x9df3110 <line:519:63>)
      (IfStmt 0x9df3180 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/locale_classes.h:521:21>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9df3120 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9df3168 </usr/include/c++/4.6/bits/locale_classes.h:521:6, col:21>
          (CXXDeleteExpr 0x9df3150 <col:8, col:15> 'void'
            (ImplicitCastExpr 0x9df3140 <col:15> 'void *' <NoOp>
              (CXXThisExpr 0x9df3130 <col:15> 'class std::locale::_Impl *' this))))
        <<<NULL>>>)
      (IfStmt 0x9df31c0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/locale_classes.h:523:8>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9df31a0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9df31b0 </usr/include/c++/4.6/bits/locale_classes.h:523:6, col:8>)
        <<<NULL>>>))
    <<<NULL>>>))


        _Impl(const std::locale::_Impl &, size_t);
        _Impl(const char *, size_t);
        _Impl(size_t) throw();
        void ~_Impl() throw();
        _Impl(const std::locale::_Impl &);
        void operator=(const std::locale::_Impl &);
        bool _M_check_same_name() (CompoundStmt 0x9df3898 </usr/include/c++/4.6/bits/locale_classes.h:540:5, line:547:5>
  (DeclStmt 0x9df3288 <line:541:7, col:24>
    0x9df3240 "bool __ret =
      (CXXBoolLiteralExpr 0x9df3278 <col:20> '_Bool' true)")
  (IfStmt 0x9df3840 <line:542:7, line:545:66>
    <<<NULL>>>
    (ImplicitCastExpr 0x9df3318 <line:542:11, col:21> '_Bool' <PointerToBoolean>
      (ImplicitCastExpr 0x9df3308 <col:11, col:21> 'char *' <LValueToRValue>
        (ArraySubscriptExpr 0x9df32f0 <col:11, col:21> 'char *' lvalue
          (ImplicitCastExpr 0x9df32e0 <col:11> 'char **' <LValueToRValue>
            (MemberExpr 0x9df32a8 <col:11> 'char **' lvalue ->_M_names 0x9df1460
              (CXXThisExpr 0x9df3298 <col:11> 'class std::locale::_Impl *' this)))
          (IntegerLiteral 0x9df32c8 <col:20> 'int' 1))))
    (ForStmt 0x9df3818 <line:544:2, line:545:66>
      (DeclStmt 0x9df3390 <line:544:7, col:21>
        0x9df3330 "size_t __i =
          (ImplicitCastExpr 0x9df3380 <col:20> 'size_t':'unsigned int' <IntegralCast>
            (IntegerLiteral 0x9df3368 <col:20> 'int' 0))")
      <<<NULL>>>
      (BinaryOperator 0x9df3470 <col:23, col:59> '_Bool' '&&'
        (ImplicitCastExpr 0x9df3460 <col:23> '_Bool' <LValueToRValue>
          (DeclRefExpr 0x9df33a0 <col:23> '_Bool' lvalue Var 0x9df3240 '__ret' '_Bool'))
        (BinaryOperator 0x9df3448 <col:32, col:59> '_Bool' '<'
          (ImplicitCastExpr 0x9df3428 <col:32> 'size_t':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0x9df33b8 <col:32> 'size_t':'unsigned int' lvalue Var 0x9df3330 '__i' 'size_t':'unsigned int'))
          (ImplicitCastExpr 0x9df3438 <col:38, col:59> 'unsigned int' <IntegralCast>
            (BinaryOperator 0x9df3410 <col:38, col:59> 'int' '-'
              (ImplicitCastExpr 0x9df3400 <col:38> 'int' <IntegralCast>
                (DeclRefExpr 0x9df33d0 <col:38> 'enum std::locale::<anonymous at /usr/include/c++/4.6/bits/locale_classes.h:304:5>' EnumConstant 0x9dee660 '_S_categories_size' 'enum std::locale::<anonymous at /usr/include/c++/4.6/bits/locale_classes.h:304:5>'))
              (IntegerLiteral 0x9df33e8 <col:59> 'int' 1)))))
      (UnaryOperator 0x9df34a0 <col:62, col:64> 'size_t':'unsigned int' lvalue prefix '++'
        (DeclRefExpr 0x9df3488 <col:64> 'size_t':'unsigned int' lvalue Var 0x9df3330 '__i' 'size_t':'unsigned int'))
      (BinaryOperator 0x9df3800 <line:545:4, col:66> '_Bool' lvalue '='
        (DeclRefExpr 0x9df34b4 <col:4> '_Bool' lvalue Var 0x9df3240 '__ret' '_Bool')
        (BinaryOperator 0x9df37e8 <col:12, col:66> '_Bool' '=='
          (CallExpr 0x9df3768 <col:12, col:61> 'int'
            (ImplicitCastExpr 0x9df3758 <col:12> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9df35e4 <col:12> 'int (const char *, const char *)' lvalue Function 0x9df34d0 '__builtin_strcmp' 'int (const char *, const char *)'))
            (ImplicitCastExpr 0x9df37a0 <col:29, col:41> 'const char *' <NoOp>
              (ImplicitCastExpr 0x9df3790 <col:29, col:41> 'char *' <LValueToRValue>
                (ArraySubscriptExpr 0x9df3668 <col:29, col:41> 'char *' lvalue
                  (ImplicitCastExpr 0x9df3648 <col:29> 'char **' <LValueToRValue>
                    (MemberExpr 0x9df3610 <col:29> 'char **' lvalue ->_M_names 0x9df1460
                      (CXXThisExpr 0x9df3600 <col:29> 'class std::locale::_Impl *' this)))
                  (ImplicitCastExpr 0x9df3658 <col:38> 'size_t':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0x9df3630 <col:38> 'size_t':'unsigned int' lvalue Var 0x9df3330 '__i' 'size_t':'unsigned int')))))
            (ImplicitCastExpr 0x9df37c0 <col:44, col:60> 'const char *' <NoOp>
              (ImplicitCastExpr 0x9df37b0 <col:44, col:60> 'char *' <LValueToRValue>
                (ArraySubscriptExpr 0x9df3728 <col:44, col:60> 'char *' lvalue
                  (ImplicitCastExpr 0x9df3718 <col:44> 'char **' <LValueToRValue>
                    (MemberExpr 0x9df3690 <col:44> 'char **' lvalue ->_M_names 0x9df1460
                      (CXXThisExpr 0x9df3680 <col:44> 'class std::locale::_Impl *' this)))
                  (BinaryOperator 0x9df3700 <col:53, col:59> 'unsigned int' '+'
                    (ImplicitCastExpr 0x9df36e0 <col:53> 'size_t':'unsigned int' <LValueToRValue>
                      (DeclRefExpr 0x9df36b0 <col:53> 'size_t':'unsigned int' lvalue Var 0x9df3330 '__i' 'size_t':'unsigned int'))
                    (ImplicitCastExpr 0x9df36f0 <col:59> 'unsigned int' <IntegralCast>
                      (IntegerLiteral 0x9df36c8 <col:59> 'int' 1)))))))
          (IntegerLiteral 0x9df37d0 <col:66> 'int' 0))))
    <<<NULL>>>)
  (ReturnStmt 0x9df3888 <line:546:7, col:14>
    (ImplicitCastExpr 0x9df3878 <col:14> '_Bool' <LValueToRValue>
      (DeclRefExpr 0x9df385c <col:14> '_Bool' lvalue Var 0x9df3240 '__ret' '_Bool'))))


        void _M_replace_categories(const std::locale::_Impl *, category);
        void _M_replace_category(const std::locale::_Impl *, const locale::id *const *);
        void _M_replace_facet(const std::locale::_Impl *, const locale::id *);
        void _M_install_facet(const locale::id *, const std::locale::facet *);
        template <typename _Facet> void _M_init_facet(_Facet *__facet) (CompoundStmt 0x9df3990 </usr/include/c++/4.6/bits/locale_classes.h:564:7, col:49>
  (CallExpr 0x9df3968 <col:9, col:46> '<dependent type>'
    (MemberExpr 0x9df38c8 <col:9> '<bound member function type>' ->_M_install_facet 0x9df2b80
      (CXXThisExpr 0x9df38b8 <col:9> 'class std::locale::_Impl *' this))
    (UnaryOperator 0x9df3938 <col:26, col:35> '<dependent type>' prefix '&'
      (DependentScopeDeclRefExpr 0x9df3910 <col:27, col:35> '<dependent type>' lvalue))
    (DeclRefExpr 0x9df394c <col:39> '_Facet *' lvalue ParmVar 0x9df2c80 '__facet' '_Facet *')))

;
        void _M_install_cache(const std::locale::facet *, size_t);
    };
    template <typename _Facet = std::collate<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_get<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_put<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::numpunct<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::numpunct<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_get<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::ctype<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::collate<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_put<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::ctype<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet> bool has_facet(const std::locale &__loc) throw();
    template <typename _Facet = std::collate<wchar_t>> const std::collate<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_get<wchar_t>> const std::num_get<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_put<wchar_t>> const std::num_put<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::numpunct<char>> const std::numpunct<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::numpunct<wchar_t>> const std::numpunct<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_get<char>> const std::num_get<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::ctype<char>> const std::ctype<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::collate<char>> const std::collate<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_put<char>> const std::num_put<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::ctype<wchar_t>> const std::ctype<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet> const _Facet &use_facet(const std::locale &__loc);
    template <typename _CharT = char> class collate : public locale::facet {
        class collate;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
    protected:
    protected:
        __c_locale _M_c_locale_collate;
    public:
    public:
        static locale::id id;
        collate(size_t __refs);
        collate(__c_locale __cloc, size_t __refs);
        int compare(const char *__lo1, const char *__hi1, const char *__lo2, const char *__hi2) const;
        string_type transform(const char *__lo, const char *__hi) const;
        long hash(const char *__lo, const char *__hi) const;
        int _M_compare(const char *, const char *) const throw();
        size_t _M_transform(char *, const char *, size_t) const throw();
    protected:
    protected:
        virtual void ~collate();
        virtual int do_compare(const char *__lo1, const char *__hi1, const char *__lo2, const char *__hi2) const;
        virtual string_type do_transform(const char *__lo, const char *__hi) const;
        virtual long do_hash(const char *__lo, const char *__hi) const;
        inline std::collate<char> &operator=(const std::collate<char> &);
    }
template <typename _CharT = wchar_t> class collate : public locale::facet {
        class collate;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
    protected:
    protected:
        __c_locale _M_c_locale_collate;
    public:
    public:
        static locale::id id;
        collate(size_t __refs);
        collate(__c_locale __cloc, size_t __refs);
        int compare(const wchar_t *__lo1, const wchar_t *__hi1, const wchar_t *__lo2, const wchar_t *__hi2) const;
        string_type transform(const wchar_t *__lo, const wchar_t *__hi) const;
        long hash(const wchar_t *__lo, const wchar_t *__hi) const;
        int _M_compare(const wchar_t *, const wchar_t *) const throw();
        size_t _M_transform(wchar_t *, const wchar_t *, size_t) const throw();
    protected:
    protected:
        virtual void ~collate();
        virtual int do_compare(const wchar_t *__lo1, const wchar_t *__hi1, const wchar_t *__lo2, const wchar_t *__hi2) const;
        virtual string_type do_transform(const wchar_t *__lo, const wchar_t *__hi) const;
        virtual long do_hash(const wchar_t *__lo, const wchar_t *__hi) const;
        inline std::collate<wchar_t> &operator=(const std::collate<wchar_t> &);
    }
template <typename _CharT> class collate : public locale::facet {
        class collate;
    public:
    public:
        typedef _CharT char_type;
        typedef basic_string<_CharT> string_type;
    protected:
    protected:
        __c_locale _M_c_locale_collate;
    public:
    public:
        static locale::id id;
        collate<_CharT>(size_t __refs = (ImplicitCastExpr 0x9df52b0 </usr/include/c++/4.6/bits/locale_classes.h:644:31> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9df5298 <col:31> 'int' 0))
) : std::locale::facet((DeclRefExpr 0x9df52e4 </usr/include/c++/4.6/bits/locale_classes.h:645:15> 'size_t':'unsigned int' lvalue ParmVar 0x9df4290 '__refs' 'size_t':'unsigned int')
), _M_c_locale_collate((CallExpr 0x9df53d8 </usr/include/c++/4.6/bits/locale_classes.h:645:44, col:60> '__c_locale':'struct __locale_struct *'
  (ImplicitCastExpr 0x9df53c8 <col:44> '__c_locale (*)(void)' <FunctionToPointerDecay>
    (DeclRefExpr 0x9df5378 <col:44> '__c_locale (void)' lvalue CXXMethod 0x9def8a0 '_S_get_c_locale' '__c_locale (void)')))
) (CompoundStmt 0x9df5440 </usr/include/c++/4.6/bits/locale_classes.h:646:7, col:9>)


        collate<_CharT>(__c_locale __cloc, size_t __refs = (ImplicitCastExpr 0x9df52d8 </usr/include/c++/4.6/bits/locale_classes.h:658:50> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9df52c0 <col:50> 'int' 0))
) : std::locale::facet((DeclRefExpr 0x9df5450 </usr/include/c++/4.6/bits/locale_classes.h:659:15> 'size_t':'unsigned int' lvalue ParmVar 0x9df43e0 '__refs' 'size_t':'unsigned int')
), _M_c_locale_collate((CallExpr 0x9df5568 </usr/include/c++/4.6/bits/locale_classes.h:659:44, col:68> '__c_locale':'struct __locale_struct *'
  (ImplicitCastExpr 0x9df5558 <col:44> '__c_locale (*)(__c_locale &) throw()' <FunctionToPointerDecay>
    (DeclRefExpr 0x9df54e8 <col:44> '__c_locale (__c_locale &) throw()' lvalue CXXMethod 0x9def560 '_S_clone_c_locale' '__c_locale (__c_locale &) throw()'))
  (DeclRefExpr 0x9df5500 <col:62> '__c_locale':'struct __locale_struct *' lvalue ParmVar 0x9df43a0 '__cloc' '__c_locale':'struct __locale_struct *'))
) (CompoundStmt 0x9df55d0 </usr/include/c++/4.6/bits/locale_classes.h:660:7, col:9>)


        int compare(const _CharT *__lo1, const _CharT *__hi1, const _CharT *__lo2, const _CharT *__hi2) const (CompoundStmt 0x9df56e0 </usr/include/c++/4.6/bits/locale_classes.h:677:7, col:62>
  (ReturnStmt 0x9df56d0 <col:9, col:59>
    (CallExpr 0x9df56a0 <col:16, col:59> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9df5608 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9df55f8 <col:16> 'const collate<_CharT> *' this))
      (DeclRefExpr 0x9df563c <col:33> 'const _CharT *' lvalue ParmVar 0x9df4520 '__lo1' 'const _CharT *')
      (DeclRefExpr 0x9df5654 <col:40> 'const _CharT *' lvalue ParmVar 0x9df4570 '__hi1' 'const _CharT *')
      (DeclRefExpr 0x9df566c <col:47> 'const _CharT *' lvalue ParmVar 0x9df45c0 '__lo2' 'const _CharT *')
      (DeclRefExpr 0x9df5684 <col:54> 'const _CharT *' lvalue ParmVar 0x9df4610 '__hi2' 'const _CharT *'))))


        string_type transform(const _CharT *__lo, const _CharT *__hi) const (CompoundStmt 0x9df57a8 </usr/include/c++/4.6/bits/locale_classes.h:695:7, col:48>
  (ReturnStmt 0x9df5798 <col:9, col:45>
    (CallExpr 0x9df5770 <col:16, col:45> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9df5708 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9df56f8 <col:16> 'const collate<_CharT> *' this))
      (DeclRefExpr 0x9df573c <col:35> 'const _CharT *' lvalue ParmVar 0x9df4760 '__lo' 'const _CharT *')
      (DeclRefExpr 0x9df5754 <col:41> 'const _CharT *' lvalue ParmVar 0x9df47b0 '__hi' 'const _CharT *'))))


        long hash(const _CharT *__lo, const _CharT *__hi) const (CompoundStmt 0x9df5870 </usr/include/c++/4.6/bits/locale_classes.h:709:7, col:43>
  (ReturnStmt 0x9df5860 <col:9, col:40>
    (CallExpr 0x9df5838 <col:16, col:40> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9df57d0 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9df57c0 <col:16> 'const collate<_CharT> *' this))
      (DeclRefExpr 0x9df5804 <col:30> 'const _CharT *' lvalue ParmVar 0x9df48d0 '__lo' 'const _CharT *')
      (DeclRefExpr 0x9df581c <col:36> 'const _CharT *' lvalue ParmVar 0x9df4920 '__hi' 'const _CharT *'))))


        int _M_compare(const _CharT *, const _CharT *) const throw();
        size_t _M_transform(_CharT *, const _CharT *, size_t) const throw();
    protected:
    protected:
        virtual void ~collate<_CharT>() (CompoundStmt 0x9df5908 </usr/include/c++/4.6/bits/locale_classes.h:722:7, col:51>
  (CallExpr 0x9df58e8 <col:9, col:48> '<dependent type>'
    (DeclRefExpr 0x9df5884 <col:9> 'void (__c_locale &)' lvalue CXXMethod 0x9def680 '_S_destroy_c_locale' 'void (__c_locale &)')
    (MemberExpr 0x9df58c8 <col:29> '__c_locale':'struct __locale_struct *' lvalue ->_M_c_locale_collate 0x9df41b0
      (CXXThisExpr 0x9df58b8 <col:29> 'collate<_CharT> *' this))))


        virtual int do_compare(const _CharT *__lo1, const _CharT *__hi1, const _CharT *__lo2, const _CharT *__hi2) const;
        virtual string_type do_transform(const _CharT *__lo, const _CharT *__hi) const;
        virtual long do_hash(const _CharT *__lo, const _CharT *__hi) const;
    };
    static locale::id id(CXXConstructExpr 0x9df5b58 </usr/include/c++/4.6/bits/locale_classes.h:770:33> 'class locale::id':'class std::locale::id''void (void)')
;
    int _M_compare(const char *, const char *) const throw();
    size_t _M_transform(char *, const char *, size_t) const throw();
    int _M_compare(const wchar_t *, const wchar_t *) const throw();
    size_t _M_transform(wchar_t *, const wchar_t *, size_t) const throw();
    template <typename _CharT = char> class collate_byname : public collate<char> {
        class collate_byname;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
        collate_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~collate_byname();
        inline std::collate_byname<char> &operator=(const std::collate_byname<char> &);
    }
template <typename _CharT = wchar_t> class collate_byname : public collate<wchar_t> {
        class collate_byname;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
        collate_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~collate_byname();
        inline std::collate_byname<wchar_t> &operator=(const std::collate_byname<wchar_t> &);
    }
template <typename _CharT> class collate_byname : public collate<_CharT> {
        class collate_byname;
    public:
    public:
        typedef _CharT char_type;
        typedef basic_string<_CharT> string_type;
        collate_byname<_CharT>(const char *__s, size_t __refs = (ImplicitCastExpr 0x9dfb3d0 </usr/include/c++/4.6/bits/locale_classes.h:803:55> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9dfb3b8 <col:55> 'int' 0))
) : collate<_CharT>((DeclRefExpr 0x9dfb470 </usr/include/c++/4.6/bits/locale_classes.h:804:25> 'size_t':'unsigned int' lvalue ParmVar 0x9dfb200 '__refs' 'size_t':'unsigned int')
) (CompoundStmt 0x9dfb8c0 </usr/include/c++/4.6/bits/locale_classes.h:805:7, line:812:7>
  (IfStmt 0x9dfb8a0 <line:806:2, line:811:4>
    <<<NULL>>>
    (BinaryOperator 0x9dfb6d0 <line:806:6, line:807:43> '_Bool' '&&'
      (BinaryOperator 0x9dfb590 <line:806:6, col:36> '_Bool' '!='
        (CallExpr 0x9dfb530 <col:6, col:31> 'int'
          (ImplicitCastExpr 0x9dfb520 <col:6> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9dfb4cc <col:6> 'int (const char *, const char *)' lvalue Function 0x9df34d0 '__builtin_strcmp' 'int (const char *, const char *)'))
          (ImplicitCastExpr 0x9dfb558 <col:23> 'const char *' <LValueToRValue>
            (DeclRefExpr 0x9dfb4e4 <col:23> 'const char *' lvalue ParmVar 0x9dfb1c0 '__s' 'const char *'))
          (ImplicitCastExpr 0x9dfb568 <col:28> 'const char *' <ArrayToPointerDecay>
            (StringLiteral 0x9dfb4fc <col:28> 'const char [2]' lvalue "C")))
        (IntegerLiteral 0x9dfb578 <col:36> 'int' 0))
      (BinaryOperator 0x9dfb6b8 <line:807:9, col:43> '_Bool' '!='
        (CallExpr 0x9dfb658 <col:9, col:38> 'int'
          (ImplicitCastExpr 0x9dfb648 <col:9> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9dfb5a8 <col:9> 'int (const char *, const char *)' lvalue Function 0x9df34d0 '__builtin_strcmp' 'int (const char *, const char *)'))
          (ImplicitCastExpr 0x9dfb680 <col:26> 'const char *' <LValueToRValue>
            (DeclRefExpr 0x9dfb5c0 <col:26> 'const char *' lvalue ParmVar 0x9dfb1c0 '__s' 'const char *'))
          (ImplicitCastExpr 0x9dfb690 <col:31> 'const char *' <ArrayToPointerDecay>
            (StringLiteral 0x9dfb620 <col:31> 'const char [6]' lvalue "POSIX")))
        (IntegerLiteral 0x9dfb6a0 <col:43> 'int' 0)))
    (CompoundStmt 0x9dfb888 <line:808:4, line:811:4>
      (CallExpr 0x9dfb798 <line:809:6, col:57> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9dfb718 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0x9dfb708 <col:6> 'collate_byname<_CharT> *' this))
        (CXXDependentScopeMemberExpr 0x9dfb760 <col:32, col:38> '<dependent type>' lvalue
          (CXXThisExpr 0x9dfb750 <col:32> 'collate_byname<_CharT> *' this)))
      (CallExpr 0x9dfb860 <line:810:6, col:61> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9dfb7c8 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0x9dfb7b8 <col:6> 'collate_byname<_CharT> *' this))
        (CXXDependentScopeMemberExpr 0x9dfb810 <col:31, col:37> '<dependent type>' lvalue
          (CXXThisExpr 0x9dfb800 <col:31> 'collate_byname<_CharT> *' this))
        (DeclRefExpr 0x9dfb844 <col:58> 'const char *' lvalue ParmVar 0x9dfb1c0 '__s' 'const char *')))
    <<<NULL>>>))


    protected:
    protected:
        virtual void ~collate_byname<_CharT>() (CompoundStmt 0x9dfb8d8 </usr/include/c++/4.6/bits/locale_classes.h:816:25, col:27>)


    };
}
extern int __builtin_strcmp(const char *, const char *);
namespace std {
    template <typename _Facet> class locale::locale(const std::locale &__other, _Facet *__f) (CompoundStmt 0x9dff6c8 </usr/include/c++/4.6/bits/locale_classes.tcc:45:5, line:57:5>
  (BinaryOperator 0x9dfbd90 <line:46:7, col:46> 'class std::locale::_Impl *' lvalue '='
    (MemberExpr 0x9dfbc68 <col:7> 'class std::locale::_Impl *' lvalue ->_M_impl 0x9dee470
      (CXXThisExpr 0x9dfbc58 <col:7> 'class std::locale *' this))
    (CXXNewExpr 0x9dfbd50 <col:17, col:46> 'class std::locale::_Impl *'
      (ImplicitCastExpr 0x9dfbd08 <col:27, col:36> 'const class std::locale::_Impl' lvalue <NoOp>
        (UnaryOperator 0x9dfbcd0 <col:27, col:36> 'class std::locale::_Impl' lvalue prefix '*'
          (ImplicitCastExpr 0x9dfbcc0 <col:28, col:36> 'class std::locale::_Impl *' <LValueToRValue>
            (MemberExpr 0x9dfbca0 <col:28, col:36> 'class std::locale::_Impl *const' lvalue ._M_impl 0x9dee470
              (DeclRefExpr 0x9dfbc88 <col:28> 'const class std::locale' lvalue ParmVar 0x9dfba50 '__other' 'const class std::locale &')))))
      (ImplicitCastExpr 0x9dfbd18 <col:45> 'size_t':'unsigned int' <IntegralCast>
        (IntegerLiteral 0x9dfbce8 <col:45> 'int' 1))))
  (IfStmt 0x9dfbed8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/locale_classes.tcc:49:49>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9dfbda8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x9dfbec0 </usr/include/c++/4.6/bits/locale_classes.tcc:49:2, col:49>
      (CallExpr 0x9dfbe98 <col:4, col:46> '<dependent type>'
        (MemberExpr 0x9dfbdf4 <col:4, col:13> '<bound member function type>' ->_M_install_facet 0x9df2b80
          (ImplicitCastExpr 0x9dfbde8 <col:4> 'class std::locale::_Impl *' <LValueToRValue>
            (MemberExpr 0x9dfbdc8 <col:4> 'class std::locale::_Impl *' lvalue ->_M_impl 0x9dee470
              (CXXThisExpr 0x9dfbdb8 <col:4> 'class std::locale *' this))))
        (UnaryOperator 0x9dfbe68 <col:30, col:39> '<dependent type>' prefix '&'
          (DependentScopeDeclRefExpr 0x9dfbe40 <col:31, col:39> '<dependent type>' lvalue))
        (DeclRefExpr 0x9dfbe7c <col:43> '_Facet *' lvalue ParmVar 0x9dfbac0 '__f' '_Facet *')))
    <<<NULL>>>)
  (IfStmt 0x9dff500 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/locale_classes.tcc:54:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9dfbef8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9dff4e8 </usr/include/c++/4.6/bits/locale_classes.tcc:51:2, line:54:2>
      (CXXMemberCallExpr 0x9dff4b8 <line:52:4, col:33> 'void'
        (MemberExpr 0x9dff498 <col:4, col:13> '<bound member function type>' ->_M_remove_reference 0x9df19c0
          (ImplicitCastExpr 0x9dfbf38 <col:4> 'class std::locale::_Impl *' <LValueToRValue>
            (MemberExpr 0x9dfbf18 <col:4> 'class std::locale::_Impl *' lvalue ->_M_impl 0x9dee470
              (CXXThisExpr 0x9dfbf08 <col:4> 'class std::locale *' this)))))
      (NullStmt 0x9dff4d8 <line:53:27>))
    <<<NULL>>>)
  (CXXDeleteExpr 0x9dff5d0 <line:55:7, col:36> 'void'
    (ImplicitCastExpr 0x9dff5c0 <col:17, col:36> 'void *' <NoOp>
      (ArraySubscriptExpr 0x9dff5a8 <col:17, col:36> 'char *' lvalue
        (ImplicitCastExpr 0x9dff598 <col:17, col:26> 'char **' <LValueToRValue>
          (MemberExpr 0x9dff55c <col:17, col:26> 'char **' lvalue ->_M_names 0x9df1460
            (ImplicitCastExpr 0x9dff550 <col:17> 'class std::locale::_Impl *' <LValueToRValue>
              (MemberExpr 0x9dff530 <col:17> 'class std::locale::_Impl *' lvalue ->_M_impl 0x9dee470
                (CXXThisExpr 0x9dff520 <col:17> 'class std::locale *' this)))))
        (IntegerLiteral 0x9dff580 <col:35> 'int' 0))))
  (BinaryOperator 0x9dff6b0 <line:56:7, col:30> 'char *' lvalue '='
    (ArraySubscriptExpr 0x9dff670 <col:7, col:26> 'char *' lvalue
      (ImplicitCastExpr 0x9dff660 <col:7, col:16> 'char **' <LValueToRValue>
        (MemberExpr 0x9dff624 <col:7, col:16> 'char **' lvalue ->_M_names 0x9df1460
          (ImplicitCastExpr 0x9dff618 <col:7> 'class std::locale::_Impl *' <LValueToRValue>
            (MemberExpr 0x9dff5f8 <col:7> 'class std::locale::_Impl *' lvalue ->_M_impl 0x9dee470
              (CXXThisExpr 0x9dff5e8 <col:7> 'class std::locale *' this)))))
      (IntegerLiteral 0x9dff648 <col:25> 'int' 0))
    (ImplicitCastExpr 0x9dff6a0 <col:30> 'char *' <NullToPointer>
      (IntegerLiteral 0x9dff688 <col:30> 'int' 0))))

;
    template <typename _Facet> std::locale combine(const std::locale &__other) const (CompoundStmt 0x9dffd28 </usr/include/c++/4.6/bits/locale_classes.tcc:63:5, line:75:5>
  (DeclStmt 0x9dff9f8 <line:64:7, col:44>
    0x9dff8c0 "std::locale::_Impl *__tmp =
      (CXXNewExpr 0x9dff9b8 <col:22, col:43> 'class std::locale::_Impl *'
        (ImplicitCastExpr 0x9dff970 <col:32, col:33> 'const class std::locale::_Impl' lvalue <NoOp>
          (UnaryOperator 0x9dff938 <col:32, col:33> 'class std::locale::_Impl' lvalue prefix '*'
            (ImplicitCastExpr 0x9dff928 <col:33> 'class std::locale::_Impl *' <LValueToRValue>
              (MemberExpr 0x9dff908 <col:33> 'class std::locale::_Impl *const' lvalue ->_M_impl 0x9dee470
                (CXXThisExpr 0x9dff8f8 <col:33> 'const class std::locale *' this)))))
        (ImplicitCastExpr 0x9dff980 <col:42> 'size_t':'unsigned int' <IntegralCast>
          (IntegerLiteral 0x9dff950 <col:42> 'int' 1)))")
  (IfStmt 0x9dffb40 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/locale_classes.tcc:68:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9dffa08 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x9dffb28 </usr/include/c++/4.6/bits/locale_classes.tcc:66:2, line:68:2>
      (CallExpr 0x9dffb00 <line:67:4, col:56> '<dependent type>'
        (MemberExpr 0x9dffa3c <col:4, col:11> '<bound member function type>' ->_M_replace_facet 0x9df29f0
          (ImplicitCastExpr 0x9dffa30 <col:4> 'class std::locale::_Impl *' <LValueToRValue>
            (DeclRefExpr 0x9dffa18 <col:4> 'class std::locale::_Impl *' lvalue Var 0x9dff8c0 '__tmp' 'class std::locale::_Impl *')))
        (MemberExpr 0x9dffa74 <col:28, col:36> 'class std::locale::_Impl *const' lvalue ._M_impl 0x9dee470
          (DeclRefExpr 0x9dffa5c <col:28> 'const class std::locale' lvalue ParmVar 0x9dff770 '__other' 'const class std::locale &'))
        (UnaryOperator 0x9dffae8 <col:45, col:54> '<dependent type>' prefix '&'
          (DependentScopeDeclRefExpr 0x9dffac0 <col:46, col:54> '<dependent type>' lvalue))))
    <<<NULL>>>)
  (IfStmt 0x9dffc00 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/locale_classes.tcc:73:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9dffb60 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9dffbe8 </usr/include/c++/4.6/bits/locale_classes.tcc:70:2, line:73:2>
      (CXXMemberCallExpr 0x9dffbb8 <line:71:4, col:31> 'void'
        (MemberExpr 0x9dffb94 <col:4, col:11> '<bound member function type>' ->_M_remove_reference 0x9df19c0
          (ImplicitCastExpr 0x9dffb88 <col:4> 'class std::locale::_Impl *' <LValueToRValue>
            (DeclRefExpr 0x9dffb70 <col:4> 'class std::locale::_Impl *' lvalue Var 0x9dff8c0 '__tmp' 'class std::locale::_Impl *'))))
      (NullStmt 0x9dffbd8 <line:72:27>))
    <<<NULL>>>)
  (ReturnStmt 0x9dffd18 <line:74:7, col:26>
    (ExprWithCleanups 0x9dffcf8 <col:14, col:26> 'class std::locale'
      (CXXTemporary 0x9dffc80)
      (CXXConstructExpr 0x9dffcd0 <col:14, col:26> 'class std::locale''void (const class std::locale &) throw()' elidable
        (MaterializeTemporaryExpr 0x9dffcc0 <col:14, col:26> 'const class std::locale' lvalue
          (ImplicitCastExpr 0x9dffcb0 <col:14, col:26> 'const class std::locale' <NoOp>
            (CXXFunctionalCastExpr 0x9dffc98 <col:14, col:26> 'class std::locale' functional cast to class std::locale <ConstructorConversion>
              (CXXBindTemporaryExpr 0x9dffc88 <col:14, col:21> 'class std::locale' (CXXTemporary 0x9dffc80)
                (CXXConstructExpr 0x9dffc50 <col:14, col:21> 'class std::locale''void (class std::locale::_Impl *) throw()'
                  (ImplicitCastExpr 0x9dffc40 <col:21> 'class std::locale::_Impl *' <LValueToRValue>
                    (DeclRefExpr 0x9dffc28 <col:21> 'class std::locale::_Impl *' lvalue Var 0x9dff8c0 '__tmp' 'class std::locale::_Impl *')))))))))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> bool operator()(const basic_string<_CharT, _Traits, _Alloc> &__s1, const basic_string<_CharT, _Traits, _Alloc> &__s2) const (CompoundStmt 0x9e00a50 </usr/include/c++/4.6/bits/locale_classes.tcc:82:5, line:87:5>
  (DeclStmt 0x9e00430 <line:83:7, col:50>
    0x9e00400 "typedef std::collate<_CharT> __collate_type")
  (DeclStmt 0x9e00590 <line:84:7, col:73>
    0x9e004a0 "const __collate_type &__collate =
      (CallExpr 0x9e00570 <col:41, col:72> '<dependent type>'
        (UnresolvedLookupExpr 0x9e004e0 <col:41, col:65> '<dependent type>' lvalue (ADL) = '1' 0x9df3c70)
        (UnaryOperator 0x9e00558 <col:67, col:68> 'const class std::locale' lvalue prefix '*'
          (CXXThisExpr 0x9e00548 <col:68> 'const class std::locale *' this)))")
  (ReturnStmt 0x9e00a40 <line:85:7, line:86:50>
    (ParenExpr 0x9e00a28 <line:85:14, line:86:50> '<dependent type>'
      (CXXOperatorCallExpr 0x9e00a00 <line:85:15, line:86:49> '<dependent type>'
        (UnresolvedLookupExpr 0x9e009b8 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bac3c0 0x9bc2c90 0x9bc5590 0x9d61190 0x9d616c0 0x9d61bf0)
        (CallExpr 0x9e00970 <line:85:15, line:86:45> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9e005b8 <line:85:15, col:25> '<dependent type>' lvalue
            (DeclRefExpr 0x9e005a0 <col:15> 'const __collate_type':'const collate<_CharT>' lvalue Var 0x9e004a0 '__collate' 'const __collate_type &'))
          (CallExpr 0x9e00640 <col:33, col:43> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9e00608 <col:33, col:38> '<dependent type>' lvalue
              (DeclRefExpr 0x9e005ec <col:33> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9dfffe0 '__s1' 'const basic_string<_CharT, _Traits, _Alloc> &')))
          (CXXOperatorCallExpr 0x9e00788 <col:46, col:72> '<dependent type>'
            (UnresolvedLookupExpr 0x9e00740 <col:58, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d86680 0x9d87280 0x9d5d090 0x9d5d890)
            (CallExpr 0x9e006b0 <col:46, col:56> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9e00678 <col:46, col:51> '<dependent type>' lvalue
                (DeclRefExpr 0x9e0065c <col:46> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9dfffe0 '__s1' 'const basic_string<_CharT, _Traits, _Alloc> &')))
            (CallExpr 0x9e00720 <col:60, col:72> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9e006e8 <col:60, col:65> '<dependent type>' lvalue
                (DeclRefExpr 0x9e006cc <col:60> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9dfffe0 '__s1' 'const basic_string<_CharT, _Traits, _Alloc> &'))))
          (CallExpr 0x9e00800 <line:86:5, col:15> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9e007c8 <col:5, col:10> '<dependent type>' lvalue
              (DeclRefExpr 0x9e007ac <col:5> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9e00190 '__s2' 'const basic_string<_CharT, _Traits, _Alloc> &')))
          (CXXOperatorCallExpr 0x9e00948 <col:18, col:44> '<dependent type>'
            (UnresolvedLookupExpr 0x9e00900 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d86680 0x9d87280 0x9d5d090 0x9d5d890)
            (CallExpr 0x9e00870 <col:18, col:28> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9e00838 <col:18, col:23> '<dependent type>' lvalue
                (DeclRefExpr 0x9e0081c <col:18> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9e00190 '__s2' 'const basic_string<_CharT, _Traits, _Alloc> &')))
            (CallExpr 0x9e008e0 <col:32, col:44> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9e008a8 <col:32, col:37> '<dependent type>' lvalue
                (DeclRefExpr 0x9e0088c <col:32> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9e00190 '__s2' 'const basic_string<_CharT, _Traits, _Alloc> &')))))
        (IntegerLiteral 0x9e009a0 <col:49> 'int' 0)))))

;
    template <typename _Facet = std::collate<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_get<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_put<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::numpunct<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::numpunct<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_get<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::ctype<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::collate<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_put<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::ctype<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet> bool has_facet(const std::locale &__loc) throw() (CompoundStmt 0x9e00f90 </usr/include/c++/4.6/bits/locale_classes.tcc:93:5, line:102:5>
  (DeclStmt 0x9e00cb0 <line:94:7, col:44>
    0x9e00bd0 "const size_t __i =
      (CallExpr 0x9e00c90 <col:26, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e00c58 <col:26, col:37> '<dependent type>' lvalue
          (DependentScopeDeclRefExpr 0x9e00c30 <col:26, col:34> '<dependent type>' lvalue)))")
  (DeclStmt 0x9e00de0 <line:95:7, col:64>
    0x9e00d30 "const locale::facet **__facets =
      (ImplicitCastExpr 0x9e00dd0 <col:40, col:55> 'const class std::locale::facet **' <LValueToRValue>
        (MemberExpr 0x9e00dac <col:40, col:55> 'const class std::locale::facet **' lvalue ->_M_facets 0x9df13a0
          (ImplicitCastExpr 0x9e00da0 <col:40, col:46> 'class std::locale::_Impl *' <LValueToRValue>
            (MemberExpr 0x9e00d7c <col:40, col:46> 'class std::locale::_Impl *const' lvalue ._M_impl 0x9dee470
              (DeclRefExpr 0x9e00d64 <col:40> 'const class std::locale' lvalue ParmVar 0x9e00ae0 '__loc' 'const class std::locale &')))))")
  (ReturnStmt 0x9e00f80 <line:96:7, line:98:53>
    (ParenExpr 0x9e00f68 <line:96:14, line:98:53> '<dependent type>'
      (BinaryOperator 0x9e00f50 <line:96:15, line:98:52> '<dependent type>' '&&'
        (BinaryOperator 0x9e00e90 <line:96:15, col:36> '_Bool' '<'
          (ImplicitCastExpr 0x9e00e70 <col:15> 'size_t':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0x9e00df0 <col:15> 'const size_t':'const unsigned int' lvalue Var 0x9e00bd0 '__i' 'const size_t':'const unsigned int'))
          (ImplicitCastExpr 0x9e00e80 <col:21, col:36> 'size_t':'unsigned int' <LValueToRValue>
            (MemberExpr 0x9e00e4c <col:21, col:36> 'size_t':'unsigned int' lvalue ->_M_facets_size 0x9df13e0
              (ImplicitCastExpr 0x9e00e40 <col:21, col:27> 'class std::locale::_Impl *' <LValueToRValue>
                (MemberExpr 0x9e00e20 <col:21, col:27> 'class std::locale::_Impl *const' lvalue ._M_impl 0x9dee470
                  (DeclRefExpr 0x9e00e08 <col:21> 'const class std::locale' lvalue ParmVar 0x9e00ae0 '__loc' 'const class std::locale &'))))))
        (CXXDynamicCastExpr 0x9e00f38 <line:98:11, col:52> 'const _Facet *' dynamic_cast<const _Facet *> <Dependent>
          (ArraySubscriptExpr 0x9e00ef8 <col:39, col:51> 'const class locale::facet *' lvalue
            (ImplicitCastExpr 0x9e00ed8 <col:39> 'const class locale::facet **' <LValueToRValue>
              (DeclRefExpr 0x9e00ea8 <col:39> 'const class locale::facet **' lvalue Var 0x9e00d30 '__facets' 'const class locale::facet **'))
            (ImplicitCastExpr 0x9e00ee8 <col:48> 'size_t':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0x9e00ec0 <col:48> 'const size_t':'const unsigned int' lvalue Var 0x9e00bd0 '__i' 'const size_t':'const unsigned int'))))))))

;
    template <typename _Facet = std::collate<wchar_t>> const std::collate<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_get<wchar_t>> const std::num_get<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_put<wchar_t>> const std::num_put<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::numpunct<char>> const std::numpunct<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::numpunct<wchar_t>> const std::numpunct<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_get<char>> const std::num_get<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::ctype<char>> const std::ctype<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::collate<char>> const std::collate<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_put<char>> const std::num_put<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::ctype<wchar_t>> const std::ctype<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet> const _Facet &use_facet(const std::locale &__loc) (CompoundStmt 0x9e01628 </usr/include/c++/4.6/bits/locale_classes.tcc:107:5, line:117:5>
  (DeclStmt 0x9e01240 <line:108:7, col:44>
    0x9e01160 "const size_t __i =
      (CallExpr 0x9e01220 <col:26, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e011e8 <col:26, col:37> '<dependent type>' lvalue
          (DependentScopeDeclRefExpr 0x9e011c0 <col:26, col:34> '<dependent type>' lvalue)))")
  (DeclStmt 0x9e01340 <line:109:7, col:64>
    0x9e01290 "const locale::facet **__facets =
      (ImplicitCastExpr 0x9e01330 <col:40, col:55> 'const class std::locale::facet **' <LValueToRValue>
        (MemberExpr 0x9e0130c <col:40, col:55> 'const class std::locale::facet **' lvalue ->_M_facets 0x9df13a0
          (ImplicitCastExpr 0x9e01300 <col:40, col:46> 'class std::locale::_Impl *' <LValueToRValue>
            (MemberExpr 0x9e012dc <col:40, col:46> 'class std::locale::_Impl *const' lvalue ._M_impl 0x9dee470
              (DeclRefExpr 0x9e012c4 <col:40> 'const class std::locale' lvalue ParmVar 0x9e01020 '__loc' 'const class std::locale &')))))")
  (IfStmt 0x9e01540 <line:110:7, line:111:26>
    <<<NULL>>>
    (BinaryOperator 0x9e014a8 <line:110:11, col:64> '_Bool' '||'
      (BinaryOperator 0x9e013f0 <col:11, col:33> '_Bool' '>='
        (ImplicitCastExpr 0x9e013d0 <col:11> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9e01350 <col:11> 'const size_t':'const unsigned int' lvalue Var 0x9e01160 '__i' 'const size_t':'const unsigned int'))
        (ImplicitCastExpr 0x9e013e0 <col:18, col:33> 'size_t':'unsigned int' <LValueToRValue>
          (MemberExpr 0x9e013ac <col:18, col:33> 'size_t':'unsigned int' lvalue ->_M_facets_size 0x9df13e0
            (ImplicitCastExpr 0x9e013a0 <col:18, col:24> 'class std::locale::_Impl *' <LValueToRValue>
              (MemberExpr 0x9e01380 <col:18, col:24> 'class std::locale::_Impl *const' lvalue ._M_impl 0x9dee470
                (DeclRefExpr 0x9e01368 <col:18> 'const class std::locale' lvalue ParmVar 0x9e01020 '__loc' 'const class std::locale &'))))))
      (UnaryOperator 0x9e01490 <col:51, col:64> '_Bool' prefix '!'
        (ImplicitCastExpr 0x9e01480 <col:52, col:64> '_Bool' <PointerToBoolean>
          (ImplicitCastExpr 0x9e01470 <col:52, col:64> 'const class locale::facet *' <LValueToRValue>
            (ArraySubscriptExpr 0x9e01458 <col:52, col:64> 'const class locale::facet *' lvalue
              (ImplicitCastExpr 0x9e01438 <col:52> 'const class locale::facet **' <LValueToRValue>
                (DeclRefExpr 0x9e01408 <col:52> 'const class locale::facet **' lvalue Var 0x9e01290 '__facets' 'const class locale::facet **'))
              (ImplicitCastExpr 0x9e01448 <col:61> 'size_t':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0x9e01420 <col:61> 'const size_t':'const unsigned int' lvalue Var 0x9e01160 '__i' 'const size_t':'const unsigned int')))))))
    (CallExpr 0x9e01520 <line:111:9, col:26> 'void'
      (ImplicitCastExpr 0x9e01510 <col:9> 'void (*)(void) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x9e014f4 <col:9> 'void (void) __attribute__((noreturn))' lvalue Function 0x9b761c0 '__throw_bad_cast' 'void (void) __attribute__((noreturn))')))
    <<<NULL>>>)
  (ReturnStmt 0x9e01618 <line:113:7, col:56>
    (CXXDynamicCastExpr 0x9e01600 <col:14, col:56> 'const _Facet' lvalue dynamic_cast<const _Facet &> <Dependent>
      (UnaryOperator 0x9e015d8 <col:42, col:55> 'const class locale::facet':'const class std::locale::facet' lvalue prefix '*'
        (ImplicitCastExpr 0x9e015c8 <col:43, col:55> 'const class locale::facet *' <LValueToRValue>
          (ArraySubscriptExpr 0x9e015b0 <col:43, col:55> 'const class locale::facet *' lvalue
            (ImplicitCastExpr 0x9e01590 <col:43> 'const class locale::facet **' <LValueToRValue>
              (DeclRefExpr 0x9e0155c <col:43> 'const class locale::facet **' lvalue Var 0x9e01290 '__facets' 'const class locale::facet **'))
            (ImplicitCastExpr 0x9e015a0 <col:52> 'size_t':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0x9e01574 <col:52> 'const size_t':'const unsigned int' lvalue Var 0x9e01160 '__i' 'const size_t':'const unsigned int'))))))))

;
    int _M_compare(const _CharT *, const _CharT *) const throw() (CompoundStmt 0x9e019b0 </usr/include/c++/4.6/bits/locale_classes.tcc:124:5, col:17>
  (ReturnStmt 0x9e019a0 <col:7, col:14>
    (IntegerLiteral 0x9e01988 <col:14> 'int' 0)))


    size_t _M_transform(_CharT *, const _CharT *, size_t) const throw() (CompoundStmt 0x9e01db8 </usr/include/c++/4.6/bits/locale_classes.tcc:130:5, col:17>
  (ReturnStmt 0x9e01da8 <col:7, col:14>
    (ImplicitCastExpr 0x9e01d98 <col:14> 'size_t':'unsigned int' <IntegralCast>
      (IntegerLiteral 0x9e01d80 <col:14> 'int' 0))))


    int do_compare(const _CharT *__lo1, const _CharT *__hi1, const _CharT *__lo2, const _CharT *__hi2) const (CompoundStmt 0x9e030d0 </usr/include/c++/4.6/bits/locale_classes.tcc:137:5, line:169:5>
  (DeclStmt 0x9e02258 <line:140:7, col:44>
    0x9e021d0 "const string_type __one =
      (ParenListExpr 0x9e02238 <col:30, col:43> 'const string_type':'const basic_string<_CharT>'
        (DeclRefExpr 0x9e02204 <col:31> 'const _CharT *' lvalue ParmVar 0x9e01fa0 '__lo1' 'const _CharT *')
        (DeclRefExpr 0x9e0221c <col:38> 'const _CharT *' lvalue ParmVar 0x9e01ff0 '__hi1' 'const _CharT *'))")
  (DeclStmt 0x9e022f8 <line:141:7, col:44>
    0x9e02270 "const string_type __two =
      (ParenListExpr 0x9e022d8 <col:30, col:43> 'const string_type':'const basic_string<_CharT>'
        (DeclRefExpr 0x9e022a4 <col:31> 'const _CharT *' lvalue ParmVar 0x9e02040 '__lo2' 'const _CharT *')
        (DeclRefExpr 0x9e022bc <col:38> 'const _CharT *' lvalue ParmVar 0x9e02090 '__hi2' 'const _CharT *'))")
  (DeclStmt 0x9e023c8 <line:143:7, col:40>
    0x9e02320 "const _CharT *__p =
      (CallExpr 0x9e023a8 <col:27, col:39> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e02370 <col:27, col:33> '<dependent type>' lvalue
          (DeclRefExpr 0x9e02354 <col:27> 'const string_type':'const basic_string<_CharT>' lvalue Var 0x9e021d0 '__one' 'const string_type':'const basic_string<_CharT>')))")
  (DeclStmt 0x9e02578 <line:144:7, col:59>
    0x9e023f0 "const _CharT *__pend =
      (CXXOperatorCallExpr 0x9e02550 <col:30, col:58> '<dependent type>'
        (UnresolvedLookupExpr 0x9e02508 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d86680 0x9d87280 0x9d5d090 0x9d5d890)
        (CallExpr 0x9e02478 <col:30, col:41> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9e02440 <col:30, col:36> '<dependent type>' lvalue
            (DeclRefExpr 0x9e02424 <col:30> 'const string_type':'const basic_string<_CharT>' lvalue Var 0x9e021d0 '__one' 'const string_type':'const basic_string<_CharT>')))
        (CallExpr 0x9e024e8 <col:45, col:58> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9e024b0 <col:45, col:51> '<dependent type>' lvalue
            (DeclRefExpr 0x9e02494 <col:45> 'const string_type':'const basic_string<_CharT>' lvalue Var 0x9e021d0 '__one' 'const string_type':'const basic_string<_CharT>'))))")
  (DeclStmt 0x9e02648 <line:145:7, col:40>
    0x9e025a0 "const _CharT *__q =
      (CallExpr 0x9e02628 <col:27, col:39> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e025f0 <col:27, col:33> '<dependent type>' lvalue
          (DeclRefExpr 0x9e025d4 <col:27> 'const string_type':'const basic_string<_CharT>' lvalue Var 0x9e02270 '__two' 'const string_type':'const basic_string<_CharT>')))")
  (DeclStmt 0x9e027f8 <line:146:7, col:59>
    0x9e02670 "const _CharT *__qend =
      (CXXOperatorCallExpr 0x9e027d0 <col:30, col:58> '<dependent type>'
        (UnresolvedLookupExpr 0x9e02788 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d86680 0x9d87280 0x9d5d090 0x9d5d890)
        (CallExpr 0x9e026f8 <col:30, col:41> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9e026c0 <col:30, col:36> '<dependent type>' lvalue
            (DeclRefExpr 0x9e026a4 <col:30> 'const string_type':'const basic_string<_CharT>' lvalue Var 0x9e02270 '__two' 'const string_type':'const basic_string<_CharT>')))
        (CallExpr 0x9e02768 <col:45, col:58> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9e02730 <col:45, col:51> '<dependent type>' lvalue
            (DeclRefExpr 0x9e02714 <col:45> 'const string_type':'const basic_string<_CharT>' lvalue Var 0x9e02270 '__two' 'const string_type':'const basic_string<_CharT>'))))")
  (ForStmt 0x9e030a8 <line:151:7, line:168:2>
    <<<NULL>>>
    <<<NULL>>>
    <<<NULL>>>
    <<<NULL>>>
    (CompoundStmt 0x9e03078 <line:152:2, line:168:2>
      (DeclStmt 0x9e028e0 <line:153:4, col:42>
        0x9e02820 "const int __res =
          (CallExpr 0x9e028b8 <col:22, col:41> '<dependent type>'
            (MemberExpr 0x9e02868 <col:22> '<bound member function type>' ->_M_compare 0x9e018f0
              (CXXThisExpr 0x9e02858 <col:22> 'const collate<_CharT> *' this))
            (DeclRefExpr 0x9e02888 <col:33> 'const _CharT *' lvalue Var 0x9e02320 '__p' 'const _CharT *')
            (DeclRefExpr 0x9e028a0 <col:38> 'const _CharT *' lvalue Var 0x9e025a0 '__q' 'const _CharT *'))")
      (IfStmt 0x9e02960 <line:154:4, line:155:13>
        <<<NULL>>>
        (ImplicitCastExpr 0x9e02918 <line:154:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0x9e02908 <col:8> 'int' <LValueToRValue>
            (DeclRefExpr 0x9e028f0 <col:8> 'const int' lvalue Var 0x9e02820 '__res' 'const int')))
        (ReturnStmt 0x9e02950 <line:155:6, col:13>
          (ImplicitCastExpr 0x9e02940 <col:13> 'int' <LValueToRValue>
            (DeclRefExpr 0x9e02924 <col:13> 'const int' lvalue Var 0x9e02820 '__res' 'const int')))
        <<<NULL>>>)
      (CompoundAssignOperator 0x9e02ab0 <line:157:4, col:42> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
        (DeclRefExpr 0x9e0297c <col:4> 'const _CharT *' lvalue Var 0x9e02320 '__p' 'const _CharT *')
        (CallExpr 0x9e02a90 <col:11, col:42> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9e02a40 <col:11, col:32> '<dependent type>' lvalue)
          (DeclRefExpr 0x9e02a74 <col:39> 'const _CharT *' lvalue Var 0x9e02320 '__p' 'const _CharT *')))
      (CompoundAssignOperator 0x9e02c00 <line:158:4, col:42> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
        (DeclRefExpr 0x9e02ad0 <col:4> 'const _CharT *' lvalue Var 0x9e025a0 '__q' 'const _CharT *')
        (CallExpr 0x9e02be0 <col:11, col:42> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9e02b90 <col:11, col:32> '<dependent type>' lvalue)
          (DeclRefExpr 0x9e02bc4 <col:39> 'const _CharT *' lvalue Var 0x9e025a0 '__q' 'const _CharT *')))
      (IfStmt 0x9e02fc8 <line:159:4, line:164:13>
        <<<NULL>>>
        (BinaryOperator 0x9e02d80 <line:159:8, col:32> '<dependent type>' '&&'
          (CXXOperatorCallExpr 0x9e02ca8 <col:8, col:15> '<dependent type>'
            (UnresolvedLookupExpr 0x9e02c50 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30 0x9d5e270 0x9d5ece0 0x9d5f520 0x9d5fa90)
            (DeclRefExpr 0x9e02c20 <col:8> 'const _CharT *' lvalue Var 0x9e02320 '__p' 'const _CharT *')
            (DeclRefExpr 0x9e02c38 <col:15> 'const _CharT *' lvalue Var 0x9e023f0 '__pend' 'const _CharT *'))
          (CXXOperatorCallExpr 0x9e02d58 <col:25, col:32> '<dependent type>'
            (UnresolvedLookupExpr 0x9e02d00 <col:29, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30 0x9d5e270 0x9d5ece0 0x9d5f520 0x9d5fa90)
            (DeclRefExpr 0x9e02ccc <col:25> 'const _CharT *' lvalue Var 0x9e025a0 '__q' 'const _CharT *')
            (DeclRefExpr 0x9e02ce4 <col:32> 'const _CharT *' lvalue Var 0x9e02670 '__qend' 'const _CharT *')))
        (ReturnStmt 0x9e02db0 <line:160:6, col:13>
          (IntegerLiteral 0x9e02d98 <col:13> 'int' 0))
        (IfStmt 0x9e02fa8 <line:161:9, line:164:13>
          <<<NULL>>>
          (CXXOperatorCallExpr 0x9e02e48 <line:161:13, col:20> '<dependent type>'
            (UnresolvedLookupExpr 0x9e02df0 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30 0x9d5e270 0x9d5ece0 0x9d5f520 0x9d5fa90)
            (DeclRefExpr 0x9e02dc0 <col:13> 'const _CharT *' lvalue Var 0x9e02320 '__p' 'const _CharT *')
            (DeclRefExpr 0x9e02dd8 <col:20> 'const _CharT *' lvalue Var 0x9e023f0 '__pend' 'const _CharT *'))
          (ReturnStmt 0x9e02ea0 <line:162:6, col:14>
            (UnaryOperator 0x9e02e88 <col:13, col:14> 'int' prefix '-'
              (IntegerLiteral 0x9e02e70 <col:14> 'int' 1)))
          (IfStmt 0x9e02f88 <line:163:9, line:164:13>
            <<<NULL>>>
            (CXXOperatorCallExpr 0x9e02f38 <line:163:13, col:20> '<dependent type>'
              (UnresolvedLookupExpr 0x9e02ee0 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30 0x9d5e270 0x9d5ece0 0x9d5f520 0x9d5fa90)
              (DeclRefExpr 0x9e02eb0 <col:13> 'const _CharT *' lvalue Var 0x9e025a0 '__q' 'const _CharT *')
              (DeclRefExpr 0x9e02ec8 <col:20> 'const _CharT *' lvalue Var 0x9e02670 '__qend' 'const _CharT *'))
            (ReturnStmt 0x9e02f78 <line:164:6, col:13>
              (IntegerLiteral 0x9e02f60 <col:13> 'int' 1))
            <<<NULL>>>)))
      (UnaryOperator 0x9e03018 <line:166:4, col:7> '<dependent type>' postfix '++'
        (DeclRefExpr 0x9e02fe4 <col:4> 'const _CharT *' lvalue Var 0x9e02320 '__p' 'const _CharT *'))
      (UnaryOperator 0x9e03060 <line:167:4, col:7> '<dependent type>' postfix '++'
        (DeclRefExpr 0x9e0302c <col:4> 'const _CharT *' lvalue Var 0x9e025a0 '__q' 'const _CharT *')))))


    typename collate<_CharT>::string_type do_transform(const _CharT *__lo, const _CharT *__hi) const (CompoundStmt 0x9e05300 </usr/include/c++/4.6/bits/locale_classes.tcc:175:5, line:225:5>
  (DeclStmt 0x9e04488 <line:176:7, col:24>
    0x9e04450 "string_type __ret")
  (DeclStmt 0x9e04528 <line:179:7, col:42>
    0x9e044a0 "const string_type __str =
      (ParenListExpr 0x9e04508 <col:30, col:41> 'const string_type':'const basic_string<_CharT>'
        (DeclRefExpr 0x9e044d4 <col:31> 'const _CharT *' lvalue ParmVar 0x9e033d0 '__lo' 'const _CharT *')
        (DeclRefExpr 0x9e044ec <col:37> 'const _CharT *' lvalue ParmVar 0x9e03420 '__hi' 'const _CharT *'))")
  (DeclStmt 0x9e045f8 <line:181:7, col:40>
    0x9e04550 "const _CharT *__p =
      (CallExpr 0x9e045d8 <col:27, col:39> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e045a0 <col:27, col:33> '<dependent type>' lvalue
          (DeclRefExpr 0x9e04584 <col:27> 'const string_type':'const basic_string<_CharT>' lvalue Var 0x9e044a0 '__str' 'const string_type':'const basic_string<_CharT>')))")
  (DeclStmt 0x9e047a8 <line:182:7, col:59>
    0x9e04620 "const _CharT *__pend =
      (CXXOperatorCallExpr 0x9e04780 <col:30, col:58> '<dependent type>'
        (UnresolvedLookupExpr 0x9e04738 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d86680 0x9d87280 0x9d5d090 0x9d5d890)
        (CallExpr 0x9e046a8 <col:30, col:41> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9e04670 <col:30, col:36> '<dependent type>' lvalue
            (DeclRefExpr 0x9e04654 <col:30> 'const string_type':'const basic_string<_CharT>' lvalue Var 0x9e044a0 '__str' 'const string_type':'const basic_string<_CharT>')))
        (CallExpr 0x9e04718 <col:45, col:58> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9e046e0 <col:45, col:51> '<dependent type>' lvalue
            (DeclRefExpr 0x9e046c4 <col:45> 'const string_type':'const basic_string<_CharT>' lvalue Var 0x9e044a0 '__str' 'const string_type':'const basic_string<_CharT>'))))")
  (DeclStmt 0x9e048d0 <line:184:7, col:39>
    0x9e047c0 "size_t __len =
      (BinaryOperator 0x9e048b8 <col:22, col:38> '<dependent type>' '*'
        (ParenExpr 0x9e04888 <col:22, col:34> '<dependent type>'
          (CXXOperatorCallExpr 0x9e04860 <col:23, col:30> '<dependent type>'
            (UnresolvedLookupExpr 0x9e04828 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
            (DeclRefExpr 0x9e047f4 <col:23> 'const _CharT *' lvalue ParmVar 0x9e03420 '__hi' 'const _CharT *')
            (DeclRefExpr 0x9e0480c <col:30> 'const _CharT *' lvalue ParmVar 0x9e033d0 '__lo' 'const _CharT *')))
        (IntegerLiteral 0x9e048a0 <col:38> 'int' 2))")
  (DeclStmt 0x9e049a8 <line:186:7, col:38>
    0x9e04910 "_CharT *__c =
      (CXXNewExpr 0x9e04968 <col:21, col:25> '_CharT *'
        (DeclRefExpr 0x9e04944 <col:32> 'size_t':'unsigned int' lvalue Var 0x9e047c0 '__len' 'size_t':'unsigned int'))")
  (IfStmt 0x9e05200 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/locale_classes.tcc:215:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9e049b8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x9e051e8 </usr/include/c++/4.6/bits/locale_classes.tcc:189:2, line:215:2>
      (ForStmt 0x9e051c0 <line:193:4, line:214:6>
        <<<NULL>>>
        <<<NULL>>>
        <<<NULL>>>
        <<<NULL>>>
        (CompoundStmt 0x9e05190 <line:194:6, line:214:6>
          (DeclStmt 0x9e04aa8 <line:196:8, col:52>
            0x9e049d0 "size_t __res =
              (CallExpr 0x9e04a80 <col:23, col:51> '<dependent type>'
                (MemberExpr 0x9e04a18 <col:23> '<bound member function type>' ->_M_transform 0x9e01ce0
                  (CXXThisExpr 0x9e04a08 <col:23> 'const collate<_CharT> *' this))
                (DeclRefExpr 0x9e04a38 <col:36> '_CharT *' lvalue Var 0x9e04910 '__c' '_CharT *')
                (DeclRefExpr 0x9e04a50 <col:41> 'const _CharT *' lvalue Var 0x9e04550 '__p' 'const _CharT *')
                (DeclRefExpr 0x9e04a68 <col:46> 'size_t':'unsigned int' lvalue Var 0x9e047c0 '__len' 'size_t':'unsigned int'))")
          (IfStmt 0x9e04dc8 <line:199:8, line:205:3>
            <<<NULL>>>
            (BinaryOperator 0x9e04b08 <line:199:12, col:21> '_Bool' '>='
              (ImplicitCastExpr 0x9e04ae8 <col:12> 'size_t':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0x9e04ab8 <col:12> 'size_t':'unsigned int' lvalue Var 0x9e049d0 '__res' 'size_t':'unsigned int'))
              (ImplicitCastExpr 0x9e04af8 <col:21> 'size_t':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0x9e04ad0 <col:21> 'size_t':'unsigned int' lvalue Var 0x9e047c0 '__len' 'size_t':'unsigned int')))
            (CompoundStmt 0x9e04da8 <line:200:3, line:205:3>
              (BinaryOperator 0x9e04ba0 <line:201:5, col:21> 'size_t':'unsigned int' lvalue '='
                (DeclRefExpr 0x9e04b20 <col:5> 'size_t':'unsigned int' lvalue Var 0x9e047c0 '__len' 'size_t':'unsigned int')
                (BinaryOperator 0x9e04b88 <col:13, col:21> 'unsigned int' '+'
                  (ImplicitCastExpr 0x9e04b68 <col:13> 'size_t':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0x9e04b38 <col:13> 'size_t':'unsigned int' lvalue Var 0x9e049d0 '__res' 'size_t':'unsigned int'))
                  (ImplicitCastExpr 0x9e04b78 <col:21> 'unsigned int' <IntegralCast>
                    (IntegerLiteral 0x9e04b50 <col:21> 'int' 1))))
              (BinaryOperator 0x9e04c30 <line:202:5, col:26> '<dependent type>' ','
                (CXXDeleteExpr 0x9e04bd0 <col:5, col:15> 'void'
                  (DeclRefExpr 0x9e04bb8 <col:15> '_CharT *' lvalue Var 0x9e04910 '__c' '_CharT *'))
                (BinaryOperator 0x9e04c18 <col:20, col:26> '<dependent type>' '='
                  (DeclRefExpr 0x9e04be8 <col:20> '_CharT *' lvalue Var 0x9e04910 '__c' '_CharT *')
                  (IntegerLiteral 0x9e04c00 <col:26> 'int' 0)))
              (BinaryOperator 0x9e04cc0 <line:203:5, col:15> '<dependent type>' '='
                (DeclRefExpr 0x9e04c48 <col:5> '_CharT *' lvalue Var 0x9e04910 '__c' '_CharT *')
                (CXXNewExpr 0x9e04c80 <col:11, col:15> '_CharT *'
                  (DeclRefExpr 0x9e04c60 <col:22> 'size_t':'unsigned int' lvalue Var 0x9e047c0 '__len' 'size_t':'unsigned int')))
              (BinaryOperator 0x9e04d90 <line:204:5, col:41> '<dependent type>' '='
                (DeclRefExpr 0x9e04cd8 <col:5> 'size_t':'unsigned int' lvalue Var 0x9e049d0 '__res' 'size_t':'unsigned int')
                (CallExpr 0x9e04d68 <col:13, col:41> '<dependent type>'
                  (MemberExpr 0x9e04d00 <col:13> '<bound member function type>' ->_M_transform 0x9e01ce0
                    (CXXThisExpr 0x9e04cf0 <col:13> 'const collate<_CharT> *' this))
                  (DeclRefExpr 0x9e04d20 <col:26> '_CharT *' lvalue Var 0x9e04910 '__c' '_CharT *')
                  (DeclRefExpr 0x9e04d38 <col:31> 'const _CharT *' lvalue Var 0x9e04550 '__p' 'const _CharT *')
                  (DeclRefExpr 0x9e04d50 <col:36> 'size_t':'unsigned int' lvalue Var 0x9e047c0 '__len' 'size_t':'unsigned int'))))
            <<<NULL>>>)
          (CallExpr 0x9e04e68 <line:207:8, col:31> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9e04e00 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0x9e04de4 <col:8> 'string_type':'basic_string<_CharT>' lvalue Var 0x9e04450 '__ret' 'string_type':'basic_string<_CharT>'))
            (DeclRefExpr 0x9e04e34 <col:21> '_CharT *' lvalue Var 0x9e04910 '__c' '_CharT *')
            (DeclRefExpr 0x9e04e4c <col:26> 'size_t':'unsigned int' lvalue Var 0x9e049d0 '__res' 'size_t':'unsigned int'))
          (CompoundAssignOperator 0x9e04fc0 <line:208:8, col:46> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
            (DeclRefExpr 0x9e04e8c <col:8> 'const _CharT *' lvalue Var 0x9e04550 '__p' 'const _CharT *')
            (CallExpr 0x9e04fa0 <col:15, col:46> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9e04f50 <col:15, col:36> '<dependent type>' lvalue)
              (DeclRefExpr 0x9e04f84 <col:43> 'const _CharT *' lvalue Var 0x9e04550 '__p' 'const _CharT *')))
          (IfStmt 0x9e05098 <line:209:8, line:210:3>
            <<<NULL>>>
            (CXXOperatorCallExpr 0x9e05068 <line:209:12, col:19> '<dependent type>'
              (UnresolvedLookupExpr 0x9e05010 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30 0x9d5e270 0x9d5ece0 0x9d5f520 0x9d5fa90)
              (DeclRefExpr 0x9e04fe0 <col:12> 'const _CharT *' lvalue Var 0x9e04550 '__p' 'const _CharT *')
              (DeclRefExpr 0x9e04ff8 <col:19> 'const _CharT *' lvalue Var 0x9e04620 '__pend' 'const _CharT *'))
            (BreakStmt 0x9e05090 <line:210:3>)
            <<<NULL>>>)
          (UnaryOperator 0x9e050e8 <line:212:8, col:11> '<dependent type>' postfix '++'
            (DeclRefExpr 0x9e050b4 <col:8> 'const _CharT *' lvalue Var 0x9e04550 '__p' 'const _CharT *'))
          (CallExpr 0x9e05170 <line:213:8, col:32> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9e05118 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0x9e050fc <col:8> 'string_type':'basic_string<_CharT>' lvalue Var 0x9e04450 '__ret' 'string_type':'basic_string<_CharT>'))
            (CXXUnresolvedConstructExpr 0x9e05158 <col:24, col:31> '_CharT')))))
    <<<NULL>>>)
  (IfStmt 0x9e05288 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/locale_classes.tcc:220:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9e05220 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9e05270 </usr/include/c++/4.6/bits/locale_classes.tcc:217:2, line:220:2>
      (CXXDeleteExpr 0x9e05248 <line:218:4, col:14> 'void'
        (DeclRefExpr 0x9e05230 <col:14> '_CharT *' lvalue Var 0x9e04910 '__c' '_CharT *'))
      (NullStmt 0x9e05260 <line:219:27>))
    <<<NULL>>>)
  (CXXDeleteExpr 0x9e052c0 <line:222:7, col:17> 'void'
    (DeclRefExpr 0x9e052a4 <col:17> '_CharT *' lvalue Var 0x9e04910 '__c' '_CharT *'))
  (ReturnStmt 0x9e052f0 <line:224:7, col:14>
    (DeclRefExpr 0x9e052d8 <col:14> 'string_type':'basic_string<_CharT>' lvalue Var 0x9e04450 '__ret' 'string_type':'basic_string<_CharT>')))


    long do_hash(const _CharT *__lo, const _CharT *__hi) const (CompoundStmt 0x9e06be0 </usr/include/c++/4.6/bits/locale_classes.tcc:231:5, line:239:5>
  (DeclStmt 0x9e056f0 <line:232:7, col:30>
    0x9e05690 "unsigned long __val =
      (ImplicitCastExpr 0x9e056e0 <col:29> 'unsigned long' <IntegralCast>
        (IntegerLiteral 0x9e056c8 <col:29> 'int' 0))")
  (ForStmt 0x9e06b48 <line:233:7, line:237:19>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9e05778 <line:233:14, col:21> '<dependent type>'
      (UnresolvedLookupExpr 0x9e05730 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bac3c0 0x9bc2c90 0x9bc5590 0x9d61190 0x9d616c0 0x9d61bf0)
      (DeclRefExpr 0x9e05700 <col:14> 'const _CharT *' lvalue ParmVar 0x9e05510 '__lo' 'const _CharT *')
      (DeclRefExpr 0x9e05718 <col:21> 'const _CharT *' lvalue ParmVar 0x9e05560 '__hi' 'const _CharT *'))
    (UnaryOperator 0x9e057b8 <col:27, col:29> '<dependent type>' prefix '++'
      (DeclRefExpr 0x9e0579c <col:29> 'const _CharT *' lvalue ParmVar 0x9e05510 '__lo' 'const _CharT *'))
    (BinaryOperator 0x9e06b30 <line:234:2, line:237:19> '<dependent type>' '='
      (DeclRefExpr 0x9e057cc <line:234:2> 'unsigned long' lvalue Var 0x9e05690 '__val' 'unsigned long')
      (CXXOperatorCallExpr 0x9e06b08 <line:235:4, line:237:19> '<dependent type>'
        (UnresolvedLookupExpr 0x9e06ac0 <line:235:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d86680 0x9d87280 0x9d5d090 0x9d5d890)
        (UnaryOperator 0x9e05800 <col:4, col:5> '<dependent type>' prefix '*'
          (DeclRefExpr 0x9e057e4 <col:5> 'const _CharT *' lvalue ParmVar 0x9e05510 '__lo' 'const _CharT *'))
        (ParenExpr 0x9e06aa8 <col:12, line:237:19> 'unsigned long'
          (BinaryOperator 0x9e06a90 <line:235:13, line:237:18> 'unsigned long' '|'
            (ParenExpr 0x9e05870 <line:235:13, col:24> 'unsigned long'
              (BinaryOperator 0x9e05858 <col:14, col:23> 'unsigned long' '<<'
                (ImplicitCastExpr 0x9e05848 <col:14> 'unsigned long' <LValueToRValue>
                  (DeclRefExpr 0x9e05814 <col:14> 'unsigned long' lvalue Var 0x9e05690 '__val' 'unsigned long'))
                (IntegerLiteral 0x9e05830 <col:23> 'int' 7)))
            (ParenExpr 0x9e06a78 <line:236:8, line:237:18> 'unsigned long'
              (BinaryOperator 0x9e06a60 <line:236:9, line:237:17> 'unsigned long' '>>'
                (ImplicitCastExpr 0x9e06a18 <line:236:9> 'unsigned long' <LValueToRValue>
                  (DeclRefExpr 0x9e05884 <col:9> 'unsigned long' lvalue Var 0x9e05690 '__val' 'unsigned long'))
                (ParenExpr 0x9e06a00 <col:18, line:237:17> 'int'
                  (BinaryOperator 0x9e069e8 <line:236:19, line:237:16> 'int' '-'
                    (ImplicitCastExpr 0x9e069d8 <line:236:19, line:237:5> 'int' <LValueToRValue>
                      (DeclRefExpr 0x9e0699c <line:236:19, line:237:5> 'const int' lvalue Var 0x9e06790 '__digits' 'const int'))
                    (IntegerLiteral 0x9e069c0 <col:16> 'int' 7))))))))))
  (ReturnStmt 0x9e06bd0 <line:238:7, col:37>
    (CXXStaticCastExpr 0x9e06bb8 <col:14, col:37> 'long' static_cast<long> <NoOp>
      (ImplicitCastExpr 0x9e06ba8 <col:32> 'long' <IntegralCast>
        (ImplicitCastExpr 0x9e06b98 <col:32> 'unsigned long' <LValueToRValue>
          (DeclRefExpr 0x9e06b6c <col:32> 'unsigned long' lvalue Var 0x9e05690 '__val' 'unsigned long'))))))


    class collate : public locale::facet {
        class collate;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
    protected:
    protected:
        __c_locale _M_c_locale_collate;
    public:
    public:
        static locale::id id;
        collate(size_t __refs);
        collate(__c_locale __cloc, size_t __refs);
        int compare(const char *__lo1, const char *__hi1, const char *__lo2, const char *__hi2) const;
        string_type transform(const char *__lo, const char *__hi) const;
        long hash(const char *__lo, const char *__hi) const;
        int _M_compare(const char *, const char *) const throw();
        size_t _M_transform(char *, const char *, size_t) const throw();
    protected:
    protected:
        virtual void ~collate();
        virtual int do_compare(const char *__lo1, const char *__hi1, const char *__lo2, const char *__hi2) const;
        virtual string_type do_transform(const char *__lo, const char *__hi) const;
        virtual long do_hash(const char *__lo, const char *__hi) const;
        inline std::collate<char> &operator=(const std::collate<char> &);
    };
    class collate_byname : public collate<char> {
        class collate_byname;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
        collate_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~collate_byname();
        inline std::collate_byname<char> &operator=(const std::collate_byname<char> &);
    };
    class collate : public locale::facet {
        class collate;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
    protected:
    protected:
        __c_locale _M_c_locale_collate;
    public:
    public:
        static locale::id id;
        collate(size_t __refs);
        collate(__c_locale __cloc, size_t __refs);
        int compare(const wchar_t *__lo1, const wchar_t *__hi1, const wchar_t *__lo2, const wchar_t *__hi2) const;
        string_type transform(const wchar_t *__lo, const wchar_t *__hi) const;
        long hash(const wchar_t *__lo, const wchar_t *__hi) const;
        int _M_compare(const wchar_t *, const wchar_t *) const throw();
        size_t _M_transform(wchar_t *, const wchar_t *, size_t) const throw();
    protected:
    protected:
        virtual void ~collate();
        virtual int do_compare(const wchar_t *__lo1, const wchar_t *__hi1, const wchar_t *__lo2, const wchar_t *__hi2) const;
        virtual string_type do_transform(const wchar_t *__lo, const wchar_t *__hi) const;
        virtual long do_hash(const wchar_t *__lo, const wchar_t *__hi) const;
        inline std::collate<wchar_t> &operator=(const std::collate<wchar_t> &);
    };
    class collate_byname : public collate<wchar_t> {
        class collate_byname;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
        collate_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~collate_byname();
        inline std::collate_byname<wchar_t> &operator=(const std::collate_byname<wchar_t> &);
    };
}
namespace std {
    enum _Ios_Fmtflags {
        _S_boolalpha = (ImplicitCastExpr 0x9e0a3b8 </usr/include/c++/4.6/bits/ios_base.h:54:23, col:29> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9e09a00 <col:23, col:29> 'long' '<<'
    (IntegerLiteral 0x9e099d0 <col:23> 'long' 1)
    (IntegerLiteral 0x9e099e8 <col:29> 'int' 0)))
,
        _S_dec = (ImplicitCastExpr 0x9e0a3c8 </usr/include/c++/4.6/bits/ios_base.h:55:18, col:24> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9e09a88 <col:18, col:24> 'long' '<<'
    (IntegerLiteral 0x9e09a58 <col:18> 'long' 1)
    (IntegerLiteral 0x9e09a70 <col:24> 'int' 1)))
,
        _S_fixed = (ImplicitCastExpr 0x9e0a3d8 </usr/include/c++/4.6/bits/ios_base.h:56:20, col:26> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9e09b08 <col:20, col:26> 'long' '<<'
    (IntegerLiteral 0x9e09ad8 <col:20> 'long' 1)
    (IntegerLiteral 0x9e09af0 <col:26> 'int' 2)))
,
        _S_hex = (ImplicitCastExpr 0x9e0a3e8 </usr/include/c++/4.6/bits/ios_base.h:57:18, col:24> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9e09b88 <col:18, col:24> 'long' '<<'
    (IntegerLiteral 0x9e09b58 <col:18> 'long' 1)
    (IntegerLiteral 0x9e09b70 <col:24> 'int' 3)))
,
        _S_internal = (ImplicitCastExpr 0x9e0a3f8 </usr/include/c++/4.6/bits/ios_base.h:58:22, col:28> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9e09c08 <col:22, col:28> 'long' '<<'
    (IntegerLiteral 0x9e09bd8 <col:22> 'long' 1)
    (IntegerLiteral 0x9e09bf0 <col:28> 'int' 4)))
,
        _S_left = (ImplicitCastExpr 0x9e0a408 </usr/include/c++/4.6/bits/ios_base.h:59:19, col:25> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9e09c88 <col:19, col:25> 'long' '<<'
    (IntegerLiteral 0x9e09c58 <col:19> 'long' 1)
    (IntegerLiteral 0x9e09c70 <col:25> 'int' 5)))
,
        _S_oct = (ImplicitCastExpr 0x9e0a418 </usr/include/c++/4.6/bits/ios_base.h:60:18, col:24> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9e09d08 <col:18, col:24> 'long' '<<'
    (IntegerLiteral 0x9e09cd8 <col:18> 'long' 1)
    (IntegerLiteral 0x9e09cf0 <col:24> 'int' 6)))
,
        _S_right = (ImplicitCastExpr 0x9e0a428 </usr/include/c++/4.6/bits/ios_base.h:61:20, col:26> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9e09d88 <col:20, col:26> 'long' '<<'
    (IntegerLiteral 0x9e09d58 <col:20> 'long' 1)
    (IntegerLiteral 0x9e09d70 <col:26> 'int' 7)))
,
        _S_scientific = (ImplicitCastExpr 0x9e0a438 </usr/include/c++/4.6/bits/ios_base.h:62:24, col:30> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9e09e08 <col:24, col:30> 'long' '<<'
    (IntegerLiteral 0x9e09dd8 <col:24> 'long' 1)
    (IntegerLiteral 0x9e09df0 <col:30> 'int' 8)))
,
        _S_showbase = (ImplicitCastExpr 0x9e0a448 </usr/include/c++/4.6/bits/ios_base.h:63:22, col:28> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9e09e88 <col:22, col:28> 'long' '<<'
    (IntegerLiteral 0x9e09e58 <col:22> 'long' 1)
    (IntegerLiteral 0x9e09e70 <col:28> 'int' 9)))
,
        _S_showpoint = (ImplicitCastExpr 0x9e0a458 </usr/include/c++/4.6/bits/ios_base.h:64:23, col:29> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9e09f08 <col:23, col:29> 'long' '<<'
    (IntegerLiteral 0x9e09ed8 <col:23> 'long' 1)
    (IntegerLiteral 0x9e09ef0 <col:29> 'int' 10)))
,
        _S_showpos = (ImplicitCastExpr 0x9e0a468 </usr/include/c++/4.6/bits/ios_base.h:65:21, col:27> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9e09f88 <col:21, col:27> 'long' '<<'
    (IntegerLiteral 0x9e09f58 <col:21> 'long' 1)
    (IntegerLiteral 0x9e09f70 <col:27> 'int' 11)))
,
        _S_skipws = (ImplicitCastExpr 0x9e0a478 </usr/include/c++/4.6/bits/ios_base.h:66:20, col:26> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9e0a008 <col:20, col:26> 'long' '<<'
    (IntegerLiteral 0x9e09fd8 <col:20> 'long' 1)
    (IntegerLiteral 0x9e09ff0 <col:26> 'int' 12)))
,
        _S_unitbuf = (ImplicitCastExpr 0x9e0a488 </usr/include/c++/4.6/bits/ios_base.h:67:21, col:27> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9e0a088 <col:21, col:27> 'long' '<<'
    (IntegerLiteral 0x9e0a058 <col:21> 'long' 1)
    (IntegerLiteral 0x9e0a070 <col:27> 'int' 13)))
,
        _S_uppercase = (ImplicitCastExpr 0x9e0a498 </usr/include/c++/4.6/bits/ios_base.h:68:23, col:29> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9e0a108 <col:23, col:29> 'long' '<<'
    (IntegerLiteral 0x9e0a0d8 <col:23> 'long' 1)
    (IntegerLiteral 0x9e0a0f0 <col:29> 'int' 14)))
,
        _S_adjustfield = (ImplicitCastExpr 0x9e0a4a8 </usr/include/c++/4.6/bits/ios_base.h:69:25, col:46> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9e0a1b8 <col:25, col:46> 'long' '|'
    (BinaryOperator 0x9e0a188 <col:25, col:35> 'long' '|'
      (DeclRefExpr 0x9e0a154 <col:25> 'long' EnumConstant 0x9e09ca0 '_S_left' 'enum std::_Ios_Fmtflags')
      (DeclRefExpr 0x9e0a16c <col:35> 'long' EnumConstant 0x9e09da0 '_S_right' 'enum std::_Ios_Fmtflags'))
    (DeclRefExpr 0x9e0a1a0 <col:46> 'long' EnumConstant 0x9e09c20 '_S_internal' 'enum std::_Ios_Fmtflags')))
,
        _S_basefield = (ImplicitCastExpr 0x9e0a4b8 </usr/include/c++/4.6/bits/ios_base.h:70:23, col:41> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9e0a268 <col:23, col:41> 'long' '|'
    (BinaryOperator 0x9e0a238 <col:23, col:32> 'long' '|'
      (DeclRefExpr 0x9e0a204 <col:23> 'long' EnumConstant 0x9e09aa0 '_S_dec' 'enum std::_Ios_Fmtflags')
      (DeclRefExpr 0x9e0a21c <col:32> 'long' EnumConstant 0x9e09d20 '_S_oct' 'enum std::_Ios_Fmtflags'))
    (DeclRefExpr 0x9e0a250 <col:41> 'long' EnumConstant 0x9e09ba0 '_S_hex' 'enum std::_Ios_Fmtflags')))
,
        _S_floatfield = (ImplicitCastExpr 0x9e0a4c8 </usr/include/c++/4.6/bits/ios_base.h:71:24, col:40> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9e0a2e8 <col:24, col:40> 'long' '|'
    (DeclRefExpr 0x9e0a2b4 <col:24> 'long' EnumConstant 0x9e09e20 '_S_scientific' 'enum std::_Ios_Fmtflags')
    (DeclRefExpr 0x9e0a2cc <col:40> 'long' EnumConstant 0x9e09b20 '_S_fixed' 'enum std::_Ios_Fmtflags')))
,
        _S_ios_fmtflags_end = (ImplicitCastExpr 0x9e0a4d8 </usr/include/c++/4.6/bits/ios_base.h:72:29, col:35> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9e0a368 <col:29, col:35> 'long' '<<'
    (IntegerLiteral 0x9e0a338 <col:29> 'long' 1)
    (IntegerLiteral 0x9e0a350 <col:35> 'int' 16)))

    };
    inline std::_Ios_Fmtflags operator&(std::_Ios_Fmtflags __a, std::_Ios_Fmtflags __b) (CompoundStmt 0x9e0a720 </usr/include/c++/4.6/bits/ios_base.h:77:3, col:74>
  (ReturnStmt 0x9e0a710 <col:5, col:71>
    (CXXFunctionalCastExpr 0x9e0a6f8 <col:12, col:71> 'enum std::_Ios_Fmtflags' functional cast to enum std::_Ios_Fmtflags <IntegralCast>
      (BinaryOperator 0x9e0a6e0 <col:26, col:70> 'int' '&'
        (CXXStaticCastExpr 0x9e0a668 <col:26, col:46> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9e0a658 <col:43> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9e0a648 <col:43> 'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0x9e0a620 <col:43> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9e0a4f0 '__a' 'enum std::_Ios_Fmtflags'))))
        (CXXStaticCastExpr 0x9e0a6c8 <col:50, col:70> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9e0a6b8 <col:67> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9e0a6a8 <col:67> 'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0x9e0a680 <col:67> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9e0a530 '__b' 'enum std::_Ios_Fmtflags'))))))))


    inline std::_Ios_Fmtflags operator|(std::_Ios_Fmtflags __a, std::_Ios_Fmtflags __b) (CompoundStmt 0x9e0a950 </usr/include/c++/4.6/bits/ios_base.h:81:3, col:74>
  (ReturnStmt 0x9e0a940 <col:5, col:71>
    (CXXFunctionalCastExpr 0x9e0a928 <col:12, col:71> 'enum std::_Ios_Fmtflags' functional cast to enum std::_Ios_Fmtflags <IntegralCast>
      (BinaryOperator 0x9e0a910 <col:26, col:70> 'int' '|'
        (CXXStaticCastExpr 0x9e0a898 <col:26, col:46> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9e0a888 <col:43> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9e0a878 <col:43> 'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0x9e0a850 <col:43> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9e0a740 '__a' 'enum std::_Ios_Fmtflags'))))
        (CXXStaticCastExpr 0x9e0a8f8 <col:50, col:70> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9e0a8e8 <col:67> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9e0a8d8 <col:67> 'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0x9e0a8b0 <col:67> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9e0a780 '__b' 'enum std::_Ios_Fmtflags'))))))))


    inline std::_Ios_Fmtflags operator^(std::_Ios_Fmtflags __a, std::_Ios_Fmtflags __b) (CompoundStmt 0x9e0ab80 </usr/include/c++/4.6/bits/ios_base.h:85:3, col:74>
  (ReturnStmt 0x9e0ab70 <col:5, col:71>
    (CXXFunctionalCastExpr 0x9e0ab58 <col:12, col:71> 'enum std::_Ios_Fmtflags' functional cast to enum std::_Ios_Fmtflags <IntegralCast>
      (BinaryOperator 0x9e0ab40 <col:26, col:70> 'int' '^'
        (CXXStaticCastExpr 0x9e0aac8 <col:26, col:46> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9e0aab8 <col:43> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9e0aaa8 <col:43> 'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0x9e0aa80 <col:43> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9e0a970 '__a' 'enum std::_Ios_Fmtflags'))))
        (CXXStaticCastExpr 0x9e0ab28 <col:50, col:70> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9e0ab18 <col:67> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9e0ab08 <col:67> 'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0x9e0aae0 <col:67> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9e0a9b0 '__b' 'enum std::_Ios_Fmtflags'))))))))


    inline std::_Ios_Fmtflags operator~(std::_Ios_Fmtflags __a) (CompoundStmt 0x9e0ad30 </usr/include/c++/4.6/bits/ios_base.h:89:3, col:51>
  (ReturnStmt 0x9e0ad20 <col:5, col:48>
    (CXXFunctionalCastExpr 0x9e0ad08 <col:12, col:48> 'enum std::_Ios_Fmtflags' functional cast to enum std::_Ios_Fmtflags <IntegralCast>
      (UnaryOperator 0x9e0acf0 <col:26, col:47> 'int' prefix '~'
        (CXXStaticCastExpr 0x9e0acd8 <col:27, col:47> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9e0acc8 <col:44> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9e0acb8 <col:44> 'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0x9e0ac90 <col:44> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9e0aba0 '__a' 'enum std::_Ios_Fmtflags'))))))))


    inline const std::_Ios_Fmtflags &operator|=(std::_Ios_Fmtflags &__a, std::_Ios_Fmtflags __b) (CompoundStmt 0x9e0b430 </usr/include/c++/4.6/bits/ios_base.h:93:3, col:29>
  (ReturnStmt 0x9e0b420 <col:5, col:24>
    (ImplicitCastExpr 0x9e0b410 <col:12, col:24> 'const enum std::_Ios_Fmtflags' lvalue <NoOp>
      (BinaryOperator 0x9e0b3f8 <col:12, col:24> 'enum std::_Ios_Fmtflags' lvalue '='
        (DeclRefExpr 0x9e0aec8 <col:12> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9e0ad80 '__a' 'enum std::_Ios_Fmtflags &')
        (CXXOperatorCallExpr 0x9e0af78 <col:18, col:24> 'enum std::_Ios_Fmtflags'
          (ImplicitCastExpr 0x9e0af68 <col:22, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9e0af30 <col:22, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9e0a7e0 'operator|' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
          (ImplicitCastExpr 0x9e0af10 <col:18> 'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9e0aee0 <col:18> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9e0ad80 '__a' 'enum std::_Ios_Fmtflags &'))
          (ImplicitCastExpr 0x9e0af20 <col:24> 'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9e0aef8 <col:24> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9e0adc0 '__b' 'enum std::_Ios_Fmtflags')))))))


    inline const std::_Ios_Fmtflags &operator&=(std::_Ios_Fmtflags &__a, std::_Ios_Fmtflags __b) (CompoundStmt 0x9e0b658 </usr/include/c++/4.6/bits/ios_base.h:97:3, col:29>
  (ReturnStmt 0x9e0b648 <col:5, col:24>
    (ImplicitCastExpr 0x9e0b638 <col:12, col:24> 'const enum std::_Ios_Fmtflags' lvalue <NoOp>
      (BinaryOperator 0x9e0b620 <col:12, col:24> 'enum std::_Ios_Fmtflags' lvalue '='
        (DeclRefExpr 0x9e0b568 <col:12> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9e0b460 '__a' 'enum std::_Ios_Fmtflags &')
        (CXXOperatorCallExpr 0x9e0b5f8 <col:18, col:24> 'enum std::_Ios_Fmtflags'
          (ImplicitCastExpr 0x9e0b5e8 <col:22, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9e0b5d0 <col:22, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9e0a5b0 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
          (ImplicitCastExpr 0x9e0b5b0 <col:18> 'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9e0b580 <col:18> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9e0b460 '__a' 'enum std::_Ios_Fmtflags &'))
          (ImplicitCastExpr 0x9e0b5c0 <col:24> 'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9e0b598 <col:24> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9e0b4a0 '__b' 'enum std::_Ios_Fmtflags')))))))


    inline const std::_Ios_Fmtflags &operator^=(std::_Ios_Fmtflags &__a, std::_Ios_Fmtflags __b) (CompoundStmt 0x9e0b878 </usr/include/c++/4.6/bits/ios_base.h:101:3, col:29>
  (ReturnStmt 0x9e0b868 <col:5, col:24>
    (ImplicitCastExpr 0x9e0b858 <col:12, col:24> 'const enum std::_Ios_Fmtflags' lvalue <NoOp>
      (BinaryOperator 0x9e0b840 <col:12, col:24> 'enum std::_Ios_Fmtflags' lvalue '='
        (DeclRefExpr 0x9e0b788 <col:12> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9e0b680 '__a' 'enum std::_Ios_Fmtflags &')
        (CXXOperatorCallExpr 0x9e0b818 <col:18, col:24> 'enum std::_Ios_Fmtflags'
          (ImplicitCastExpr 0x9e0b808 <col:22, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9e0b7f0 <col:22, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9e0aa10 'operator^' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
          (ImplicitCastExpr 0x9e0b7d0 <col:18> 'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9e0b7a0 <col:18> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9e0b680 '__a' 'enum std::_Ios_Fmtflags &'))
          (ImplicitCastExpr 0x9e0b7e0 <col:24> 'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9e0b7b8 <col:24> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9e0b6c0 '__b' 'enum std::_Ios_Fmtflags')))))))


    enum _Ios_Openmode {
        _S_app = (ImplicitCastExpr 0x9e0bc78 </usr/include/c++/4.6/bits/ios_base.h:106:18, col:24> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9e0b920 <col:18, col:24> 'long' '<<'
    (IntegerLiteral 0x9e0b8f0 <col:18> 'long' 1)
    (IntegerLiteral 0x9e0b908 <col:24> 'int' 0)))
,
        _S_ate = (ImplicitCastExpr 0x9e0bc88 </usr/include/c++/4.6/bits/ios_base.h:107:18, col:24> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9e0b9a8 <col:18, col:24> 'long' '<<'
    (IntegerLiteral 0x9e0b978 <col:18> 'long' 1)
    (IntegerLiteral 0x9e0b990 <col:24> 'int' 1)))
,
        _S_bin = (ImplicitCastExpr 0x9e0bc98 </usr/include/c++/4.6/bits/ios_base.h:108:18, col:24> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9e0ba28 <col:18, col:24> 'long' '<<'
    (IntegerLiteral 0x9e0b9f8 <col:18> 'long' 1)
    (IntegerLiteral 0x9e0ba10 <col:24> 'int' 2)))
,
        _S_in = (ImplicitCastExpr 0x9e0bca8 </usr/include/c++/4.6/bits/ios_base.h:109:17, col:23> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9e0baa8 <col:17, col:23> 'long' '<<'
    (IntegerLiteral 0x9e0ba78 <col:17> 'long' 1)
    (IntegerLiteral 0x9e0ba90 <col:23> 'int' 3)))
,
        _S_out = (ImplicitCastExpr 0x9e0bcb8 </usr/include/c++/4.6/bits/ios_base.h:110:18, col:24> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9e0bb28 <col:18, col:24> 'long' '<<'
    (IntegerLiteral 0x9e0baf8 <col:18> 'long' 1)
    (IntegerLiteral 0x9e0bb10 <col:24> 'int' 4)))
,
        _S_trunc = (ImplicitCastExpr 0x9e0bcc8 </usr/include/c++/4.6/bits/ios_base.h:111:20, col:26> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9e0bba8 <col:20, col:26> 'long' '<<'
    (IntegerLiteral 0x9e0bb78 <col:20> 'long' 1)
    (IntegerLiteral 0x9e0bb90 <col:26> 'int' 5)))
,
        _S_ios_openmode_end = (ImplicitCastExpr 0x9e0bcd8 </usr/include/c++/4.6/bits/ios_base.h:112:29, col:35> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9e0bc28 <col:29, col:35> 'long' '<<'
    (IntegerLiteral 0x9e0bbf8 <col:29> 'long' 1)
    (IntegerLiteral 0x9e0bc10 <col:35> 'int' 16)))

    };
    inline std::_Ios_Openmode operator&(std::_Ios_Openmode __a, std::_Ios_Openmode __b) (CompoundStmt 0x9e0bf20 </usr/include/c++/4.6/bits/ios_base.h:117:3, col:74>
  (ReturnStmt 0x9e0bf10 <col:5, col:71>
    (CXXFunctionalCastExpr 0x9e0bef8 <col:12, col:71> 'enum std::_Ios_Openmode' functional cast to enum std::_Ios_Openmode <IntegralCast>
      (BinaryOperator 0x9e0bee0 <col:26, col:70> 'int' '&'
        (CXXStaticCastExpr 0x9e0be68 <col:26, col:46> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9e0be58 <col:43> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9e0be48 <col:43> 'enum std::_Ios_Openmode' <LValueToRValue>
              (DeclRefExpr 0x9e0be20 <col:43> 'enum std::_Ios_Openmode' lvalue ParmVar 0x9e0bcf0 '__a' 'enum std::_Ios_Openmode'))))
        (CXXStaticCastExpr 0x9e0bec8 <col:50, col:70> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9e0beb8 <col:67> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9e0bea8 <col:67> 'enum std::_Ios_Openmode' <LValueToRValue>
              (DeclRefExpr 0x9e0be80 <col:67> 'enum std::_Ios_Openmode' lvalue ParmVar 0x9e0bd30 '__b' 'enum std::_Ios_Openmode'))))))))


    inline std::_Ios_Openmode operator|(std::_Ios_Openmode __a, std::_Ios_Openmode __b) (CompoundStmt 0x9e0c150 </usr/include/c++/4.6/bits/ios_base.h:121:3, col:74>
  (ReturnStmt 0x9e0c140 <col:5, col:71>
    (CXXFunctionalCastExpr 0x9e0c128 <col:12, col:71> 'enum std::_Ios_Openmode' functional cast to enum std::_Ios_Openmode <IntegralCast>
      (BinaryOperator 0x9e0c110 <col:26, col:70> 'int' '|'
        (CXXStaticCastExpr 0x9e0c098 <col:26, col:46> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9e0c088 <col:43> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9e0c078 <col:43> 'enum std::_Ios_Openmode' <LValueToRValue>
              (DeclRefExpr 0x9e0c050 <col:43> 'enum std::_Ios_Openmode' lvalue ParmVar 0x9e0bf40 '__a' 'enum std::_Ios_Openmode'))))
        (CXXStaticCastExpr 0x9e0c0f8 <col:50, col:70> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9e0c0e8 <col:67> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9e0c0d8 <col:67> 'enum std::_Ios_Openmode' <LValueToRValue>
              (DeclRefExpr 0x9e0c0b0 <col:67> 'enum std::_Ios_Openmode' lvalue ParmVar 0x9e0bf80 '__b' 'enum std::_Ios_Openmode'))))))))


    inline std::_Ios_Openmode operator^(std::_Ios_Openmode __a, std::_Ios_Openmode __b) (CompoundStmt 0x9e0c380 </usr/include/c++/4.6/bits/ios_base.h:125:3, col:74>
  (ReturnStmt 0x9e0c370 <col:5, col:71>
    (CXXFunctionalCastExpr 0x9e0c358 <col:12, col:71> 'enum std::_Ios_Openmode' functional cast to enum std::_Ios_Openmode <IntegralCast>
      (BinaryOperator 0x9e0c340 <col:26, col:70> 'int' '^'
        (CXXStaticCastExpr 0x9e0c2c8 <col:26, col:46> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9e0c2b8 <col:43> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9e0c2a8 <col:43> 'enum std::_Ios_Openmode' <LValueToRValue>
              (DeclRefExpr 0x9e0c280 <col:43> 'enum std::_Ios_Openmode' lvalue ParmVar 0x9e0c170 '__a' 'enum std::_Ios_Openmode'))))
        (CXXStaticCastExpr 0x9e0c328 <col:50, col:70> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9e0c318 <col:67> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9e0c308 <col:67> 'enum std::_Ios_Openmode' <LValueToRValue>
              (DeclRefExpr 0x9e0c2e0 <col:67> 'enum std::_Ios_Openmode' lvalue ParmVar 0x9e0c1b0 '__b' 'enum std::_Ios_Openmode'))))))))


    inline std::_Ios_Openmode operator~(std::_Ios_Openmode __a) (CompoundStmt 0x9e0c530 </usr/include/c++/4.6/bits/ios_base.h:129:3, col:51>
  (ReturnStmt 0x9e0c520 <col:5, col:48>
    (CXXFunctionalCastExpr 0x9e0c508 <col:12, col:48> 'enum std::_Ios_Openmode' functional cast to enum std::_Ios_Openmode <IntegralCast>
      (UnaryOperator 0x9e0c4f0 <col:26, col:47> 'int' prefix '~'
        (CXXStaticCastExpr 0x9e0c4d8 <col:27, col:47> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9e0c4c8 <col:44> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9e0c4b8 <col:44> 'enum std::_Ios_Openmode' <LValueToRValue>
              (DeclRefExpr 0x9e0c490 <col:44> 'enum std::_Ios_Openmode' lvalue ParmVar 0x9e0c3a0 '__a' 'enum std::_Ios_Openmode'))))))))


    inline const std::_Ios_Openmode &operator|=(std::_Ios_Openmode &__a, std::_Ios_Openmode __b) (CompoundStmt 0x9e0c7f0 </usr/include/c++/4.6/bits/ios_base.h:133:3, col:29>
  (ReturnStmt 0x9e0c7e0 <col:5, col:24>
    (ImplicitCastExpr 0x9e0c7d0 <col:12, col:24> 'const enum std::_Ios_Openmode' lvalue <NoOp>
      (BinaryOperator 0x9e0c7b8 <col:12, col:24> 'enum std::_Ios_Openmode' lvalue '='
        (DeclRefExpr 0x9e0c6c8 <col:12> 'enum std::_Ios_Openmode' lvalue ParmVar 0x9e0c580 '__a' 'enum std::_Ios_Openmode &')
        (CXXOperatorCallExpr 0x9e0c778 <col:18, col:24> 'enum std::_Ios_Openmode'
          (ImplicitCastExpr 0x9e0c768 <col:22, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9e0c730 <col:22, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9e0bfe0 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
          (ImplicitCastExpr 0x9e0c710 <col:18> 'enum std::_Ios_Openmode' <LValueToRValue>
            (DeclRefExpr 0x9e0c6e0 <col:18> 'enum std::_Ios_Openmode' lvalue ParmVar 0x9e0c580 '__a' 'enum std::_Ios_Openmode &'))
          (ImplicitCastExpr 0x9e0c720 <col:24> 'enum std::_Ios_Openmode' <LValueToRValue>
            (DeclRefExpr 0x9e0c6f8 <col:24> 'enum std::_Ios_Openmode' lvalue ParmVar 0x9e0c5c0 '__b' 'enum std::_Ios_Openmode')))))))


    inline const std::_Ios_Openmode &operator&=(std::_Ios_Openmode &__a, std::_Ios_Openmode __b) (CompoundStmt 0x9e0ca18 </usr/include/c++/4.6/bits/ios_base.h:137:3, col:29>
  (ReturnStmt 0x9e0ca08 <col:5, col:24>
    (ImplicitCastExpr 0x9e0c9f8 <col:12, col:24> 'const enum std::_Ios_Openmode' lvalue <NoOp>
      (BinaryOperator 0x9e0c9e0 <col:12, col:24> 'enum std::_Ios_Openmode' lvalue '='
        (DeclRefExpr 0x9e0c928 <col:12> 'enum std::_Ios_Openmode' lvalue ParmVar 0x9e0c820 '__a' 'enum std::_Ios_Openmode &')
        (CXXOperatorCallExpr 0x9e0c9b8 <col:18, col:24> 'enum std::_Ios_Openmode'
          (ImplicitCastExpr 0x9e0c9a8 <col:22, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9e0c990 <col:22, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9e0bdb0 'operator&' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
          (ImplicitCastExpr 0x9e0c970 <col:18> 'enum std::_Ios_Openmode' <LValueToRValue>
            (DeclRefExpr 0x9e0c940 <col:18> 'enum std::_Ios_Openmode' lvalue ParmVar 0x9e0c820 '__a' 'enum std::_Ios_Openmode &'))
          (ImplicitCastExpr 0x9e0c980 <col:24> 'enum std::_Ios_Openmode' <LValueToRValue>
            (DeclRefExpr 0x9e0c958 <col:24> 'enum std::_Ios_Openmode' lvalue ParmVar 0x9e0c860 '__b' 'enum std::_Ios_Openmode')))))))


    inline const std::_Ios_Openmode &operator^=(std::_Ios_Openmode &__a, std::_Ios_Openmode __b) (CompoundStmt 0x9e0cc38 </usr/include/c++/4.6/bits/ios_base.h:141:3, col:29>
  (ReturnStmt 0x9e0cc28 <col:5, col:24>
    (ImplicitCastExpr 0x9e0cc18 <col:12, col:24> 'const enum std::_Ios_Openmode' lvalue <NoOp>
      (BinaryOperator 0x9e0cc00 <col:12, col:24> 'enum std::_Ios_Openmode' lvalue '='
        (DeclRefExpr 0x9e0cb48 <col:12> 'enum std::_Ios_Openmode' lvalue ParmVar 0x9e0ca40 '__a' 'enum std::_Ios_Openmode &')
        (CXXOperatorCallExpr 0x9e0cbd8 <col:18, col:24> 'enum std::_Ios_Openmode'
          (ImplicitCastExpr 0x9e0cbc8 <col:22, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9e0cbb0 <col:22, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9e0c210 'operator^' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
          (ImplicitCastExpr 0x9e0cb90 <col:18> 'enum std::_Ios_Openmode' <LValueToRValue>
            (DeclRefExpr 0x9e0cb60 <col:18> 'enum std::_Ios_Openmode' lvalue ParmVar 0x9e0ca40 '__a' 'enum std::_Ios_Openmode &'))
          (ImplicitCastExpr 0x9e0cba0 <col:24> 'enum std::_Ios_Openmode' <LValueToRValue>
            (DeclRefExpr 0x9e0cb78 <col:24> 'enum std::_Ios_Openmode' lvalue ParmVar 0x9e0ca80 '__b' 'enum std::_Ios_Openmode')))))))


    enum _Ios_Iostate {
        _S_goodbit = (ImplicitCastExpr 0x9e0cf08 </usr/include/c++/4.6/bits/ios_base.h:146:22> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9e0ccb0 <col:22> 'int' 0))
,
        _S_badbit = (ImplicitCastExpr 0x9e0cf18 </usr/include/c++/4.6/bits/ios_base.h:147:21, col:27> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9e0cd38 <col:21, col:27> 'long' '<<'
    (IntegerLiteral 0x9e0cd08 <col:21> 'long' 1)
    (IntegerLiteral 0x9e0cd20 <col:27> 'int' 0)))
,
        _S_eofbit = (ImplicitCastExpr 0x9e0cf28 </usr/include/c++/4.6/bits/ios_base.h:148:21, col:27> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9e0cdb8 <col:21, col:27> 'long' '<<'
    (IntegerLiteral 0x9e0cd88 <col:21> 'long' 1)
    (IntegerLiteral 0x9e0cda0 <col:27> 'int' 1)))
,
        _S_failbit = (ImplicitCastExpr 0x9e0cf38 </usr/include/c++/4.6/bits/ios_base.h:149:21, col:27> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9e0ce38 <col:21, col:27> 'long' '<<'
    (IntegerLiteral 0x9e0ce08 <col:21> 'long' 1)
    (IntegerLiteral 0x9e0ce20 <col:27> 'int' 2)))
,
        _S_ios_iostate_end = (ImplicitCastExpr 0x9e0cf48 </usr/include/c++/4.6/bits/ios_base.h:150:28, col:34> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9e0ceb8 <col:28, col:34> 'long' '<<'
    (IntegerLiteral 0x9e0ce88 <col:28> 'long' 1)
    (IntegerLiteral 0x9e0cea0 <col:34> 'int' 16)))

    };
    inline std::_Ios_Iostate operator&(std::_Ios_Iostate __a, std::_Ios_Iostate __b) (CompoundStmt 0x9e0f620 </usr/include/c++/4.6/bits/ios_base.h:155:3, col:73>
  (ReturnStmt 0x9e0f610 <col:5, col:70>
    (CXXFunctionalCastExpr 0x9e0f5f8 <col:12, col:70> 'enum std::_Ios_Iostate' functional cast to enum std::_Ios_Iostate <IntegralCast>
      (BinaryOperator 0x9e0f5e0 <col:25, col:69> 'int' '&'
        (CXXStaticCastExpr 0x9e0d0d8 <col:25, col:45> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9e0d0c8 <col:42> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9e0d0b8 <col:42> 'enum std::_Ios_Iostate' <LValueToRValue>
              (DeclRefExpr 0x9e0d090 <col:42> 'enum std::_Ios_Iostate' lvalue ParmVar 0x9e0cf60 '__a' 'enum std::_Ios_Iostate'))))
        (CXXStaticCastExpr 0x9e0f5c8 <col:49, col:69> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9e0f5b8 <col:66> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9e0f5a8 <col:66> 'enum std::_Ios_Iostate' <LValueToRValue>
              (DeclRefExpr 0x9e0f580 <col:66> 'enum std::_Ios_Iostate' lvalue ParmVar 0x9e0cfa0 '__b' 'enum std::_Ios_Iostate'))))))))


    inline std::_Ios_Iostate operator|(std::_Ios_Iostate __a, std::_Ios_Iostate __b) (CompoundStmt 0x9e0f850 </usr/include/c++/4.6/bits/ios_base.h:159:3, col:73>
  (ReturnStmt 0x9e0f840 <col:5, col:70>
    (CXXFunctionalCastExpr 0x9e0f828 <col:12, col:70> 'enum std::_Ios_Iostate' functional cast to enum std::_Ios_Iostate <IntegralCast>
      (BinaryOperator 0x9e0f810 <col:25, col:69> 'int' '|'
        (CXXStaticCastExpr 0x9e0f798 <col:25, col:45> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9e0f788 <col:42> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9e0f778 <col:42> 'enum std::_Ios_Iostate' <LValueToRValue>
              (DeclRefExpr 0x9e0f750 <col:42> 'enum std::_Ios_Iostate' lvalue ParmVar 0x9e0f640 '__a' 'enum std::_Ios_Iostate'))))
        (CXXStaticCastExpr 0x9e0f7f8 <col:49, col:69> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9e0f7e8 <col:66> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9e0f7d8 <col:66> 'enum std::_Ios_Iostate' <LValueToRValue>
              (DeclRefExpr 0x9e0f7b0 <col:66> 'enum std::_Ios_Iostate' lvalue ParmVar 0x9e0f680 '__b' 'enum std::_Ios_Iostate'))))))))


    inline std::_Ios_Iostate operator^(std::_Ios_Iostate __a, std::_Ios_Iostate __b) (CompoundStmt 0x9e0fa80 </usr/include/c++/4.6/bits/ios_base.h:163:3, col:73>
  (ReturnStmt 0x9e0fa70 <col:5, col:70>
    (CXXFunctionalCastExpr 0x9e0fa58 <col:12, col:70> 'enum std::_Ios_Iostate' functional cast to enum std::_Ios_Iostate <IntegralCast>
      (BinaryOperator 0x9e0fa40 <col:25, col:69> 'int' '^'
        (CXXStaticCastExpr 0x9e0f9c8 <col:25, col:45> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9e0f9b8 <col:42> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9e0f9a8 <col:42> 'enum std::_Ios_Iostate' <LValueToRValue>
              (DeclRefExpr 0x9e0f980 <col:42> 'enum std::_Ios_Iostate' lvalue ParmVar 0x9e0f870 '__a' 'enum std::_Ios_Iostate'))))
        (CXXStaticCastExpr 0x9e0fa28 <col:49, col:69> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9e0fa18 <col:66> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9e0fa08 <col:66> 'enum std::_Ios_Iostate' <LValueToRValue>
              (DeclRefExpr 0x9e0f9e0 <col:66> 'enum std::_Ios_Iostate' lvalue ParmVar 0x9e0f8b0 '__b' 'enum std::_Ios_Iostate'))))))))


    inline std::_Ios_Iostate operator~(std::_Ios_Iostate __a) (CompoundStmt 0x9e0fc30 </usr/include/c++/4.6/bits/ios_base.h:167:3, col:50>
  (ReturnStmt 0x9e0fc20 <col:5, col:47>
    (CXXFunctionalCastExpr 0x9e0fc08 <col:12, col:47> 'enum std::_Ios_Iostate' functional cast to enum std::_Ios_Iostate <IntegralCast>
      (UnaryOperator 0x9e0fbf0 <col:25, col:46> 'int' prefix '~'
        (CXXStaticCastExpr 0x9e0fbd8 <col:26, col:46> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9e0fbc8 <col:43> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9e0fbb8 <col:43> 'enum std::_Ios_Iostate' <LValueToRValue>
              (DeclRefExpr 0x9e0fb90 <col:43> 'enum std::_Ios_Iostate' lvalue ParmVar 0x9e0faa0 '__a' 'enum std::_Ios_Iostate'))))))))


    inline const std::_Ios_Iostate &operator|=(std::_Ios_Iostate &__a, std::_Ios_Iostate __b) (CompoundStmt 0x9e0fef0 </usr/include/c++/4.6/bits/ios_base.h:171:3, col:29>
  (ReturnStmt 0x9e0fee0 <col:5, col:24>
    (ImplicitCastExpr 0x9e0fed0 <col:12, col:24> 'const enum std::_Ios_Iostate' lvalue <NoOp>
      (BinaryOperator 0x9e0feb8 <col:12, col:24> 'enum std::_Ios_Iostate' lvalue '='
        (DeclRefExpr 0x9e0fdc8 <col:12> 'enum std::_Ios_Iostate' lvalue ParmVar 0x9e0fc80 '__a' 'enum std::_Ios_Iostate &')
        (CXXOperatorCallExpr 0x9e0fe78 <col:18, col:24> 'enum std::_Ios_Iostate'
          (ImplicitCastExpr 0x9e0fe68 <col:22, <invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9e0fe30 <col:22, <invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)' lvalue Function 0x9e0f6e0 'operator|' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)'))
          (ImplicitCastExpr 0x9e0fe10 <col:18> 'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9e0fde0 <col:18> 'enum std::_Ios_Iostate' lvalue ParmVar 0x9e0fc80 '__a' 'enum std::_Ios_Iostate &'))
          (ImplicitCastExpr 0x9e0fe20 <col:24> 'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9e0fdf8 <col:24> 'enum std::_Ios_Iostate' lvalue ParmVar 0x9e0fcc0 '__b' 'enum std::_Ios_Iostate')))))))


    inline const std::_Ios_Iostate &operator&=(std::_Ios_Iostate &__a, std::_Ios_Iostate __b) (CompoundStmt 0x9e10118 </usr/include/c++/4.6/bits/ios_base.h:175:3, col:29>
  (ReturnStmt 0x9e10108 <col:5, col:24>
    (ImplicitCastExpr 0x9e100f8 <col:12, col:24> 'const enum std::_Ios_Iostate' lvalue <NoOp>
      (BinaryOperator 0x9e100e0 <col:12, col:24> 'enum std::_Ios_Iostate' lvalue '='
        (DeclRefExpr 0x9e10028 <col:12> 'enum std::_Ios_Iostate' lvalue ParmVar 0x9e0ff20 '__a' 'enum std::_Ios_Iostate &')
        (CXXOperatorCallExpr 0x9e100b8 <col:18, col:24> 'enum std::_Ios_Iostate'
          (ImplicitCastExpr 0x9e100a8 <col:22, <invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9e10090 <col:22, <invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)' lvalue Function 0x9e0d020 'operator&' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)'))
          (ImplicitCastExpr 0x9e10070 <col:18> 'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9e10040 <col:18> 'enum std::_Ios_Iostate' lvalue ParmVar 0x9e0ff20 '__a' 'enum std::_Ios_Iostate &'))
          (ImplicitCastExpr 0x9e10080 <col:24> 'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9e10058 <col:24> 'enum std::_Ios_Iostate' lvalue ParmVar 0x9e0ff60 '__b' 'enum std::_Ios_Iostate')))))))


    inline const std::_Ios_Iostate &operator^=(std::_Ios_Iostate &__a, std::_Ios_Iostate __b) (CompoundStmt 0x9e10338 </usr/include/c++/4.6/bits/ios_base.h:179:3, col:29>
  (ReturnStmt 0x9e10328 <col:5, col:24>
    (ImplicitCastExpr 0x9e10318 <col:12, col:24> 'const enum std::_Ios_Iostate' lvalue <NoOp>
      (BinaryOperator 0x9e10300 <col:12, col:24> 'enum std::_Ios_Iostate' lvalue '='
        (DeclRefExpr 0x9e10248 <col:12> 'enum std::_Ios_Iostate' lvalue ParmVar 0x9e10140 '__a' 'enum std::_Ios_Iostate &')
        (CXXOperatorCallExpr 0x9e102d8 <col:18, col:24> 'enum std::_Ios_Iostate'
          (ImplicitCastExpr 0x9e102c8 <col:22, <invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9e102b0 <col:22, <invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)' lvalue Function 0x9e0f910 'operator^' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)'))
          (ImplicitCastExpr 0x9e10290 <col:18> 'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9e10260 <col:18> 'enum std::_Ios_Iostate' lvalue ParmVar 0x9e10140 '__a' 'enum std::_Ios_Iostate &'))
          (ImplicitCastExpr 0x9e102a0 <col:24> 'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9e10278 <col:24> 'enum std::_Ios_Iostate' lvalue ParmVar 0x9e10180 '__b' 'enum std::_Ios_Iostate')))))))


    enum _Ios_Seekdir {
        _S_beg = (ImplicitCastExpr 0x9e10528 </usr/include/c++/4.6/bits/ios_base.h:184:16> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9e103b0 <col:16> 'int' 0))
,
        _S_cur = (ImplicitCastExpr 0x9e10538 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:1152:33> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9e10408 <col:33> 'int' 1))
,
        _S_end = (ImplicitCastExpr 0x9e10548 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:1155:33> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9e10458 <col:33> 'int' 2))
,
        _S_ios_seekdir_end = (ImplicitCastExpr 0x9e10558 </usr/include/c++/4.6/bits/ios_base.h:187:28, col:34> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9e104d8 <col:28, col:34> 'long' '<<'
    (IntegerLiteral 0x9e104a8 <col:28> 'long' 1)
    (IntegerLiteral 0x9e104c0 <col:34> 'int' 16)))

    };
    class ios_base {
        class ios_base;
    public:
    public:
        class failure : public std::exception {
            class failure;
        public:
        public:
            failure(const string &__str) throw();
            virtual void ~failure() throw();
            virtual const char *what() const throw();
        private:
        private:
            string _M_msg;
            inline std::ios_base::failure &operator=(const std::ios_base::failure &);
        };
        typedef std::_Ios_Fmtflags fmtflags;
        static const fmtflags boolalpha = (DeclRefExpr 0x9e10cb4 </usr/include/c++/4.6/bits/ios_base.h:259:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x9e09a20 '_S_boolalpha' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags dec = (DeclRefExpr 0x9e10d14 </usr/include/c++/4.6/bits/ios_base.h:262:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x9e09aa0 '_S_dec' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags fixed = (DeclRefExpr 0x9e10d74 </usr/include/c++/4.6/bits/ios_base.h:265:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x9e09b20 '_S_fixed' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags hex = (DeclRefExpr 0x9e10dd4 </usr/include/c++/4.6/bits/ios_base.h:268:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x9e09ba0 '_S_hex' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags internal = (DeclRefExpr 0x9e10e34 </usr/include/c++/4.6/bits/ios_base.h:273:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x9e09c20 '_S_internal' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags left = (DeclRefExpr 0x9e10e94 </usr/include/c++/4.6/bits/ios_base.h:277:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x9e09ca0 '_S_left' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags oct = (DeclRefExpr 0x9e10ef4 </usr/include/c++/4.6/bits/ios_base.h:280:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x9e09d20 '_S_oct' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags right = (DeclRefExpr 0x9e10f54 </usr/include/c++/4.6/bits/ios_base.h:284:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x9e09da0 '_S_right' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags scientific = (DeclRefExpr 0x9e10fb4 </usr/include/c++/4.6/bits/ios_base.h:287:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x9e09e20 '_S_scientific' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags showbase = (DeclRefExpr 0x9e11014 </usr/include/c++/4.6/bits/ios_base.h:291:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x9e09ea0 '_S_showbase' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags showpoint = (DeclRefExpr 0x9e11074 </usr/include/c++/4.6/bits/ios_base.h:295:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x9e09f20 '_S_showpoint' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags showpos = (DeclRefExpr 0x9e110d4 </usr/include/c++/4.6/bits/ios_base.h:298:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x9e09fa0 '_S_showpos' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags skipws = (DeclRefExpr 0x9e11134 </usr/include/c++/4.6/bits/ios_base.h:301:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x9e0a020 '_S_skipws' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags unitbuf = (DeclRefExpr 0x9e11194 </usr/include/c++/4.6/bits/ios_base.h:304:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x9e0a0a0 '_S_unitbuf' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags uppercase = (DeclRefExpr 0x9e111f4 </usr/include/c++/4.6/bits/ios_base.h:308:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x9e0a120 '_S_uppercase' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags adjustfield = (DeclRefExpr 0x9e11254 </usr/include/c++/4.6/bits/ios_base.h:311:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x9e0a1d0 '_S_adjustfield' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags basefield = (DeclRefExpr 0x9e112b4 </usr/include/c++/4.6/bits/ios_base.h:314:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x9e0a280 '_S_basefield' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags floatfield = (DeclRefExpr 0x9e11314 </usr/include/c++/4.6/bits/ios_base.h:317:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x9e0a300 '_S_floatfield' 'enum std::_Ios_Fmtflags')
;
        typedef std::_Ios_Iostate iostate;
        static const iostate badbit = (DeclRefExpr 0x9e113c4 </usr/include/c++/4.6/bits/ios_base.h:335:35> 'enum std::_Ios_Iostate' EnumConstant 0x9e0cd50 '_S_badbit' 'enum std::_Ios_Iostate')
;
        static const iostate eofbit = (DeclRefExpr 0x9e11424 </usr/include/c++/4.6/bits/ios_base.h:338:35> 'enum std::_Ios_Iostate' EnumConstant 0x9e0cdd0 '_S_eofbit' 'enum std::_Ios_Iostate')
;
        static const iostate failbit = (DeclRefExpr 0x9e11484 </usr/include/c++/4.6/bits/ios_base.h:343:36> 'enum std::_Ios_Iostate' EnumConstant 0x9e0ce50 '_S_failbit' 'enum std::_Ios_Iostate')
;
        static const iostate goodbit = (DeclRefExpr 0x9e114e4 </usr/include/c++/4.6/bits/ios_base.h:346:36> 'enum std::_Ios_Iostate' EnumConstant 0x9e0ccd0 '_S_goodbit' 'enum std::_Ios_Iostate')
;
        typedef std::_Ios_Openmode openmode;
        static const openmode app = (DeclRefExpr 0x9e11594 </usr/include/c++/4.6/bits/ios_base.h:365:34> 'enum std::_Ios_Openmode' EnumConstant 0x9e0b940 '_S_app' 'enum std::_Ios_Openmode')
;
        static const openmode ate = (DeclRefExpr 0x9e115f4 </usr/include/c++/4.6/bits/ios_base.h:368:34> 'enum std::_Ios_Openmode' EnumConstant 0x9e0b9c0 '_S_ate' 'enum std::_Ios_Openmode')
;
        static const openmode binary = (DeclRefExpr 0x9e11654 </usr/include/c++/4.6/bits/ios_base.h:373:36> 'enum std::_Ios_Openmode' EnumConstant 0x9e0ba40 '_S_bin' 'enum std::_Ios_Openmode')
;
        static const openmode in = (DeclRefExpr 0x9e116b4 </usr/include/c++/4.6/bits/ios_base.h:376:33> 'enum std::_Ios_Openmode' EnumConstant 0x9e0bac0 '_S_in' 'enum std::_Ios_Openmode')
;
        static const openmode out = (DeclRefExpr 0x9e11714 </usr/include/c++/4.6/bits/ios_base.h:379:34> 'enum std::_Ios_Openmode' EnumConstant 0x9e0bb40 '_S_out' 'enum std::_Ios_Openmode')
;
        static const openmode trunc = (DeclRefExpr 0x9e11774 </usr/include/c++/4.6/bits/ios_base.h:382:35> 'enum std::_Ios_Openmode' EnumConstant 0x9e0bbc0 '_S_trunc' 'enum std::_Ios_Openmode')
;
        typedef std::_Ios_Seekdir seekdir;
        static const seekdir beg = (DeclRefExpr 0x9e11824 </usr/include/c++/4.6/bits/ios_base.h:397:33> 'enum std::_Ios_Seekdir' EnumConstant 0x9e103d0 '_S_beg' 'enum std::_Ios_Seekdir')
;
        static const seekdir cur = (DeclRefExpr 0x9e11884 </usr/include/c++/4.6/bits/ios_base.h:400:33> 'enum std::_Ios_Seekdir' EnumConstant 0x9e10420 '_S_cur' 'enum std::_Ios_Seekdir')
;
        static const seekdir end = (DeclRefExpr 0x9e118e4 </usr/include/c++/4.6/bits/ios_base.h:403:33> 'enum std::_Ios_Seekdir' EnumConstant 0x9e10470 '_S_end' 'enum std::_Ios_Seekdir')
;
        typedef int io_state;
        typedef int open_mode;
        typedef int seek_dir;
        typedef std::streampos streampos;
        typedef std::streamoff streamoff;
        enum event {
            erase_event,
            imbue_event,
            copyfmt_event
        };
        typedef void (*event_callback)(std::ios_base::event, std::ios_base &, int);
        void register_callback(event_callback __fn, int __index);
    protected:
    protected:
        streamsize _M_precision;
        streamsize _M_width;
        fmtflags _M_flags;
        iostate _M_exception;
        iostate _M_streambuf_state;
        struct _Callback_list {
            struct _Callback_list;
            std::ios_base::_Callback_list *_M_next;
            ios_base::event_callback _M_fn;
            int _M_index;
            _Atomic_word _M_refcount;
            _Callback_list(ios_base::event_callback __fn, int __index, std::ios_base::_Callback_list *__cb) : _M_next((ImplicitCastExpr 0x9e166f0 </usr/include/c++/4.6/bits/ios_base.h:471:17> 'struct std::ios_base::_Callback_list *' <LValueToRValue>
  (DeclRefExpr 0x9e166d8 <col:17> 'struct std::ios_base::_Callback_list *' lvalue ParmVar 0x9e12440 '__cb' 'struct std::ios_base::_Callback_list *'))
), _M_fn((ImplicitCastExpr 0x9e16730 </usr/include/c++/4.6/bits/ios_base.h:471:30> 'class ios_base::event_callback':'void (*)(enum std::ios_base::event, class std::ios_base &, int)' <LValueToRValue>
  (DeclRefExpr 0x9e16718 <col:30> 'class ios_base::event_callback':'void (*)(enum std::ios_base::event, class std::ios_base &, int)' lvalue ParmVar 0x9e123a0 '__fn' 'class ios_base::event_callback':'void (*)(enum std::ios_base::event, class std::ios_base &, int)'))
), _M_index((ImplicitCastExpr 0x9e16770 </usr/include/c++/4.6/bits/ios_base.h:471:46> 'int' <LValueToRValue>
  (DeclRefExpr 0x9e16758 <col:46> 'int' lvalue ParmVar 0x9e123f0 '__index' 'int'))
), _M_refcount((IntegerLiteral 0x9e16798 </usr/include/c++/4.6/bits/ios_base.h:471:68> 'int' 0)
) (CompoundStmt 0x9e167d8 </usr/include/c++/4.6/bits/ios_base.h:471:71, col:73>)


            void _M_add_reference() (CompoundStmt 0x9e168c8 </usr/include/c++/4.6/bits/ios_base.h:474:26, col:79>
  (CallExpr 0x9e168a0 <col:28, col:76> 'void'
    (ImplicitCastExpr 0x9e16890 <col:28, col:39> 'void (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9e1680c <col:28, col:39> 'void (_Atomic_word *, int)' lvalue Function 0x9d1ff10 '__atomic_add_dispatch' 'void (_Atomic_word *, int)'))
    (UnaryOperator 0x9e16860 <col:61, col:62> '_Atomic_word *' prefix '&'
      (MemberExpr 0x9e16840 <col:62> '_Atomic_word':'int' lvalue ->_M_refcount 0x9e12340
        (CXXThisExpr 0x9e16830 <col:62> 'struct std::ios_base::_Callback_list *' this)))
    (IntegerLiteral 0x9e16878 <col:75> 'int' 1)))


            int _M_remove_reference() (CompoundStmt 0x9e16b08 </usr/include/c++/4.6/bits/ios_base.h:479:7, line:488:7>
  (NullStmt 0x9e168e0 <line:481:62>)
  (DeclStmt 0x9e16a20 <line:482:9, col:77>
    0x9e16900 "int __res =
      (CallExpr 0x9e169f8 <col:21, col:76> '_Atomic_word':'int'
        (ImplicitCastExpr 0x9e169e8 <col:21, col:32> '_Atomic_word (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9e1694c <col:21, col:32> '_Atomic_word (_Atomic_word *, int)' lvalue Function 0x9d1fa80 '__exchange_and_add_dispatch' '_Atomic_word (_Atomic_word *, int)'))
        (UnaryOperator 0x9e169a0 <col:60, col:61> '_Atomic_word *' prefix '&'
          (MemberExpr 0x9e16980 <col:61> '_Atomic_word':'int' lvalue ->_M_refcount 0x9e12340
            (CXXThisExpr 0x9e16970 <col:61> 'struct std::ios_base::_Callback_list *' this)))
        (UnaryOperator 0x9e169d0 <col:74, col:75> 'int' prefix '-'
          (IntegerLiteral 0x9e169b8 <col:75> 'int' 1)))")
  (IfStmt 0x9e16ab0 <line:483:9, line:486:11>
    <<<NULL>>>
    (BinaryOperator 0x9e16a70 <line:483:13, col:22> '_Bool' '=='
      (ImplicitCastExpr 0x9e16a60 <col:13> 'int' <LValueToRValue>
        (DeclRefExpr 0x9e16a30 <col:13> 'int' lvalue Var 0x9e16900 '__res' 'int'))
      (IntegerLiteral 0x9e16a48 <col:22> 'int' 0))
    (CompoundStmt 0x9e16a98 <line:484:11, line:486:11>
      (NullStmt 0x9e16a88 <line:485:65>))
    <<<NULL>>>)
  (ReturnStmt 0x9e16af8 <line:487:9, col:16>
    (ImplicitCastExpr 0x9e16ae8 <col:16> 'int' <LValueToRValue>
      (DeclRefExpr 0x9e16acc <col:16> 'int' lvalue Var 0x9e16900 '__res' 'int'))))


        };
        std::ios_base::_Callback_list *_M_callbacks;
        void _M_call_callbacks(std::ios_base::event __ev) throw();
        void _M_dispose_callbacks() throw();
        struct _Words {
            struct _Words;
            void *_M_pword;
            long _M_iword;
            _Words() : _M_pword((ImplicitCastExpr 0x9e16b40 </usr/include/c++/4.6/bits/ios_base.h:504:27> 'void *' <NullToPointer>
  (IntegerLiteral 0x9e16b28 <col:27> 'int' 0))
), _M_iword((ImplicitCastExpr 0x9e16b80 </usr/include/c++/4.6/bits/ios_base.h:504:40> 'long' <IntegralCast>
  (IntegerLiteral 0x9e16b68 <col:40> 'int' 0))
) (CompoundStmt 0x9e16bb0 </usr/include/c++/4.6/bits/ios_base.h:504:43, col:45>)


            inline _Words(const std::ios_base::_Words &) throw();
            inline void ~_Words() throw();
        };
        std::ios_base::_Words _M_word_zero;
        enum  {
            _S_local_word_size = (ImplicitCastExpr 0x9e12bb8 </usr/include/c++/4.6/bits/ios_base.h:512:33> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9e12b60 <col:33> 'int' 8))

        };
        std::ios_base::_Words _M_local_word[8];
        int _M_word_size;
        std::ios_base::_Words *_M_word;
        std::ios_base::_Words &_M_grow_words(int __index, bool __iword);
        std::locale _M_ios_locale;
        void _M_init() throw();
    public:
    public:
        class Init {
            class Init;
            ;
        public:
        public:
            Init();
            void ~Init();
        private:
        private:
            static _Atomic_word _S_refcount;
            static bool _S_synced_with_stdio;
        };
        fmtflags flags() const (CompoundStmt 0x9e16c48 </usr/include/c++/4.6/bits/ios_base.h:553:5, col:24>
  (ReturnStmt 0x9e16c38 <col:7, col:14>
    (ImplicitCastExpr 0x9e16c28 <col:14> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (MemberExpr 0x9e16c04 <col:14> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue ->_M_flags 0x9e12030
        (CXXThisExpr 0x9e16bd8 <col:14> 'const class std::ios_base *' this)))))


        fmtflags flags(fmtflags __fmtfl) (CompoundStmt 0x9e16da0 </usr/include/c++/4.6/bits/ios_base.h:564:5, line:568:5>
  (DeclStmt 0x9e16ce8 <line:565:7, col:32>
    0x9e16c70 "fmtflags __old =
      (ImplicitCastExpr 0x9e16cd8 <col:24> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
        (MemberExpr 0x9e16cb8 <col:24> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ->_M_flags 0x9e12030
          (CXXThisExpr 0x9e16ca8 <col:24> 'class std::ios_base *' this)))")
  (BinaryOperator 0x9e16d50 <line:566:7, col:18> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue '='
    (MemberExpr 0x9e16d08 <col:7> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ->_M_flags 0x9e12030
      (CXXThisExpr 0x9e16cf8 <col:7> 'class std::ios_base *' this))
    (ImplicitCastExpr 0x9e16d40 <col:18> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9e16d28 <col:18> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9e13460 '__fmtfl' 'fmtflags':'enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9e16d90 <line:567:7, col:14>
    (ImplicitCastExpr 0x9e16d80 <col:14> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9e16d68 <col:14> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue Var 0x9e16c70 '__old' 'fmtflags':'enum std::_Ios_Fmtflags'))))


        fmtflags setf(fmtflags __fmtfl) (CompoundStmt 0x9e16f58 </usr/include/c++/4.6/bits/ios_base.h:580:5, line:584:5>
  (DeclStmt 0x9e16e48 <line:581:7, col:32>
    0x9e16dd0 "fmtflags __old =
      (ImplicitCastExpr 0x9e16e38 <col:24> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
        (MemberExpr 0x9e16e18 <col:24> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ->_M_flags 0x9e12030
          (CXXThisExpr 0x9e16e08 <col:24> 'class std::ios_base *' this)))")
  (CXXOperatorCallExpr 0x9e16ef8 <line:582:7, col:19> 'const enum std::_Ios_Fmtflags' lvalue
    (ImplicitCastExpr 0x9e16ee8 <col:16, <invalid sloc>> 'const enum std::_Ios_Fmtflags &(*)(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9e16eb0 <col:16, <invalid sloc>> 'const enum std::_Ios_Fmtflags &(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)' lvalue Function 0x9e0ae60 'operator|=' 'const enum std::_Ios_Fmtflags &(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)'))
    (MemberExpr 0x9e16e68 <col:7> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ->_M_flags 0x9e12030
      (CXXThisExpr 0x9e16e58 <col:7> 'class std::ios_base *' this))
    (ImplicitCastExpr 0x9e16ea0 <col:19> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9e16e88 <col:19> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9e15750 '__fmtfl' 'fmtflags':'enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9e16f48 <line:583:7, col:14>
    (ImplicitCastExpr 0x9e16f38 <col:14> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9e16f1c <col:14> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue Var 0x9e16dd0 '__old' 'fmtflags':'enum std::_Ios_Fmtflags'))))


        fmtflags setf(fmtflags __fmtfl, fmtflags __mask) (CompoundStmt 0x9e17288 </usr/include/c++/4.6/bits/ios_base.h:597:5, line:602:5>
  (DeclStmt 0x9e16ff8 <line:598:7, col:32>
    0x9e16f80 "fmtflags __old =
      (ImplicitCastExpr 0x9e16fe8 <col:24> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
        (MemberExpr 0x9e16fc8 <col:24> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ->_M_flags 0x9e12030
          (CXXThisExpr 0x9e16fb8 <col:24> 'class std::ios_base *' this)))")
  (CXXOperatorCallExpr 0x9e170f0 <line:599:7, col:20> 'const enum std::_Ios_Fmtflags' lvalue
    (ImplicitCastExpr 0x9e170e0 <col:16, <invalid sloc>> 'const enum std::_Ios_Fmtflags &(*)(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9e170c8 <col:16, <invalid sloc>> 'const enum std::_Ios_Fmtflags &(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)' lvalue Function 0x9e0b500 'operator&=' 'const enum std::_Ios_Fmtflags &(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)'))
    (MemberExpr 0x9e17018 <col:7> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ->_M_flags 0x9e12030
      (CXXThisExpr 0x9e17008 <col:7> 'class std::ios_base *' this))
    (CXXOperatorCallExpr 0x9e170a8 <col:19, col:20> 'enum std::_Ios_Fmtflags'
      (ImplicitCastExpr 0x9e17098 <<invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9e17060 <<invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags)' lvalue Function 0x9e0ac20 'operator~' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags)'))
      (ImplicitCastExpr 0x9e17050 <col:20> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
        (DeclRefExpr 0x9e17038 <col:20> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9e15850 '__mask' 'fmtflags':'enum std::_Ios_Fmtflags'))))
  (CXXOperatorCallExpr 0x9e17228 <line:600:7, col:36> 'const enum std::_Ios_Fmtflags' lvalue
    (ImplicitCastExpr 0x9e17218 <col:16, <invalid sloc>> 'const enum std::_Ios_Fmtflags &(*)(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9e17200 <col:16, <invalid sloc>> 'const enum std::_Ios_Fmtflags &(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)' lvalue Function 0x9e0ae60 'operator|=' 'const enum std::_Ios_Fmtflags &(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)'))
    (MemberExpr 0x9e17128 <col:7> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ->_M_flags 0x9e12030
      (CXXThisExpr 0x9e17118 <col:7> 'class std::ios_base *' this))
    (ParenExpr 0x9e171e8 <col:19, col:36> 'enum std::_Ios_Fmtflags'
      (CXXOperatorCallExpr 0x9e171c0 <col:20, col:30> 'enum std::_Ios_Fmtflags'
        (ImplicitCastExpr 0x9e171b0 <col:28, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9e17198 <col:28, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9e0a5b0 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
        (ImplicitCastExpr 0x9e17178 <col:20> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
          (DeclRefExpr 0x9e17148 <col:20> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9e15810 '__fmtfl' 'fmtflags':'enum std::_Ios_Fmtflags'))
        (ImplicitCastExpr 0x9e17188 <col:30> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
          (DeclRefExpr 0x9e17160 <col:30> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9e15850 '__mask' 'fmtflags':'enum std::_Ios_Fmtflags')))))
  (ReturnStmt 0x9e17278 <line:601:7, col:14>
    (ImplicitCastExpr 0x9e17268 <col:14> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9e1724c <col:14> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue Var 0x9e16f80 '__old' 'fmtflags':'enum std::_Ios_Fmtflags'))))


        void unsetf(fmtflags __mask) (CompoundStmt 0x9e17398 </usr/include/c++/4.6/bits/ios_base.h:612:5, col:28>
  (CXXOperatorCallExpr 0x9e17370 <col:7, col:20> 'const enum std::_Ios_Fmtflags' lvalue
    (ImplicitCastExpr 0x9e17360 <col:16, <invalid sloc>> 'const enum std::_Ios_Fmtflags &(*)(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9e17348 <col:16, <invalid sloc>> 'const enum std::_Ios_Fmtflags &(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)' lvalue Function 0x9e0b500 'operator&=' 'const enum std::_Ios_Fmtflags &(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)'))
    (MemberExpr 0x9e172b8 <col:7> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ->_M_flags 0x9e12030
      (CXXThisExpr 0x9e172a8 <col:7> 'class std::ios_base *' this))
    (CXXOperatorCallExpr 0x9e17328 <col:19, col:20> 'enum std::_Ios_Fmtflags'
      (ImplicitCastExpr 0x9e17318 <<invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9e17300 <<invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags)' lvalue Function 0x9e0ac20 'operator~' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags)'))
      (ImplicitCastExpr 0x9e172f0 <col:20> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
        (DeclRefExpr 0x9e172d8 <col:20> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9e15940 '__mask' 'fmtflags':'enum std::_Ios_Fmtflags')))))


        streamsize precision() const (CompoundStmt 0x9e17400 </usr/include/c++/4.6/bits/ios_base.h:623:5, col:28>
  (ReturnStmt 0x9e173f0 <col:7, col:14>
    (ImplicitCastExpr 0x9e173e0 <col:14> 'streamsize':'int' <LValueToRValue>
      (MemberExpr 0x9e173c0 <col:14> 'const streamsize':'const int' lvalue ->_M_precision 0x9e11fb0
        (CXXThisExpr 0x9e173b0 <col:14> 'const class std::ios_base *' this)))))


        streamsize precision(streamsize __prec) (CompoundStmt 0x9e17550 </usr/include/c++/4.6/bits/ios_base.h:632:5, line:636:5>
  (DeclStmt 0x9e17498 <line:633:7, col:38>
    0x9e17420 "streamsize __old =
      (ImplicitCastExpr 0x9e17488 <col:26> 'streamsize':'int' <LValueToRValue>
        (MemberExpr 0x9e17468 <col:26> 'streamsize':'int' lvalue ->_M_precision 0x9e11fb0
          (CXXThisExpr 0x9e17458 <col:26> 'class std::ios_base *' this)))")
  (BinaryOperator 0x9e17500 <line:634:7, col:22> 'streamsize':'int' lvalue '='
    (MemberExpr 0x9e174b8 <col:7> 'streamsize':'int' lvalue ->_M_precision 0x9e11fb0
      (CXXThisExpr 0x9e174a8 <col:7> 'class std::ios_base *' this))
    (ImplicitCastExpr 0x9e174f0 <col:22> 'streamsize':'int' <LValueToRValue>
      (DeclRefExpr 0x9e174d8 <col:22> 'streamsize':'int' lvalue ParmVar 0x9e15b10 '__prec' 'streamsize':'int')))
  (ReturnStmt 0x9e17540 <line:635:7, col:14>
    (ImplicitCastExpr 0x9e17530 <col:14> 'streamsize':'int' <LValueToRValue>
      (DeclRefExpr 0x9e17518 <col:14> 'streamsize':'int' lvalue Var 0x9e17420 '__old' 'streamsize':'int'))))


        streamsize width() const (CompoundStmt 0x9e175c0 </usr/include/c++/4.6/bits/ios_base.h:646:5, col:24>
  (ReturnStmt 0x9e175b0 <col:7, col:14>
    (ImplicitCastExpr 0x9e175a0 <col:14> 'streamsize':'int' <LValueToRValue>
      (MemberExpr 0x9e17580 <col:14> 'const streamsize':'const int' lvalue ->_M_width 0x9e11ff0
        (CXXThisExpr 0x9e17570 <col:14> 'const class std::ios_base *' this)))))


        streamsize width(streamsize __wide) (CompoundStmt 0x9e17710 </usr/include/c++/4.6/bits/ios_base.h:655:5, line:659:5>
  (DeclStmt 0x9e17658 <line:656:7, col:34>
    0x9e175e0 "streamsize __old =
      (ImplicitCastExpr 0x9e17648 <col:26> 'streamsize':'int' <LValueToRValue>
        (MemberExpr 0x9e17628 <col:26> 'streamsize':'int' lvalue ->_M_width 0x9e11ff0
          (CXXThisExpr 0x9e17618 <col:26> 'class std::ios_base *' this)))")
  (BinaryOperator 0x9e176c0 <line:657:7, col:18> 'streamsize':'int' lvalue '='
    (MemberExpr 0x9e17678 <col:7> 'streamsize':'int' lvalue ->_M_width 0x9e11ff0
      (CXXThisExpr 0x9e17668 <col:7> 'class std::ios_base *' this))
    (ImplicitCastExpr 0x9e176b0 <col:18> 'streamsize':'int' <LValueToRValue>
      (DeclRefExpr 0x9e17698 <col:18> 'streamsize':'int' lvalue ParmVar 0x9e15c80 '__wide' 'streamsize':'int')))
  (ReturnStmt 0x9e17700 <line:658:7, col:14>
    (ImplicitCastExpr 0x9e176f0 <col:14> 'streamsize':'int' <LValueToRValue>
      (DeclRefExpr 0x9e176d8 <col:14> 'streamsize':'int' lvalue Var 0x9e175e0 '__old' 'streamsize':'int'))))


        static bool sync_with_stdio(bool __sync = (CXXBoolLiteralExpr 0x9e166c8 </usr/include/c++/4.6/bits/ios_base.h:673:35> '_Bool' true)
);
        std::locale imbue(const std::locale &__loc) throw();
        std::locale getloc() const (CompoundStmt 0x9e17798 </usr/include/c++/4.6/bits/ios_base.h:697:5, col:29>
  (ReturnStmt 0x9e17788 <col:7, col:14>
    (CXXConstructExpr 0x9e17760 <col:14> 'class std::locale''void (const class std::locale &) throw()'
      (MemberExpr 0x9e17740 <col:14> 'const class std::locale' lvalue ->_M_ios_locale 0x9e12ee0
        (CXXThisExpr 0x9e17730 <col:14> 'const class std::ios_base *' this)))))


        const std::locale &_M_getloc() const (CompoundStmt 0x9e177f0 </usr/include/c++/4.6/bits/ios_base.h:708:5, col:29>
  (ReturnStmt 0x9e177e0 <col:7, col:14>
    (MemberExpr 0x9e177c0 <col:14> 'const class std::locale' lvalue ->_M_ios_locale 0x9e12ee0
      (CXXThisExpr 0x9e177b0 <col:14> 'const class std::ios_base *' this))))


        static int xalloc() throw();
        long &iword(int __ix) (CompoundStmt 0x9e17a78 </usr/include/c++/4.6/bits/ios_base.h:743:5, line:747:5>
  (DeclStmt 0x9e17a20 <line:744:7, line:745:47>
    0x9e17820 "std::ios_base::_Words &__word =
      (ConditionalOperator 0x9e17a00 <line:744:24, line:745:46> 'struct std::ios_base::_Words' lvalue
        (ParenExpr 0x9e178d8 <line:744:24, col:44> '_Bool'
          (BinaryOperator 0x9e178c0 <col:25, col:32> '_Bool' '<'
            (ImplicitCastExpr 0x9e178a0 <col:25> 'int' <LValueToRValue>
              (DeclRefExpr 0x9e17854 <col:25> 'int' lvalue ParmVar 0x9e160e0 '__ix' 'int'))
            (ImplicitCastExpr 0x9e178b0 <col:32> 'int' <LValueToRValue>
              (MemberExpr 0x9e17880 <col:32> 'int' lvalue ->_M_word_size 0x9e12cf0
                (CXXThisExpr 0x9e17870 <col:32> 'class std::ios_base *' this)))))
        (ArraySubscriptExpr 0x9e17958 <line:745:6, col:18> 'struct std::ios_base::_Words' lvalue
          (ImplicitCastExpr 0x9e17938 <col:6> 'struct std::ios_base::_Words *' <LValueToRValue>
            (MemberExpr 0x9e17900 <col:6> 'struct std::ios_base::_Words *' lvalue ->_M_word 0x9e12d50
              (CXXThisExpr 0x9e178f0 <col:6> 'class std::ios_base *' this)))
          (ImplicitCastExpr 0x9e17948 <col:14> 'int' <LValueToRValue>
            (DeclRefExpr 0x9e17920 <col:14> 'int' lvalue ParmVar 0x9e160e0 '__ix' 'int')))
        (CXXMemberCallExpr 0x9e179c8 <col:22, col:46> 'struct std::ios_base::_Words' lvalue
          (MemberExpr 0x9e17980 <col:22> '<bound member function type>' ->_M_grow_words 0x9e12e70
            (CXXThisExpr 0x9e17970 <col:22> 'class std::ios_base *' this))
          (ImplicitCastExpr 0x9e179f0 <col:36> 'int' <LValueToRValue>
            (DeclRefExpr 0x9e179a0 <col:36> 'int' lvalue ParmVar 0x9e160e0 '__ix' 'int'))
          (CXXBoolLiteralExpr 0x9e179b8 <col:42> '_Bool' true)))")
  (ReturnStmt 0x9e17a68 <line:746:7, col:21>
    (MemberExpr 0x9e17a48 <col:14, col:21> 'long' lvalue ._M_iword 0x9e12a00
      (DeclRefExpr 0x9e17a30 <col:14> 'struct std::ios_base::_Words' lvalue Var 0x9e17820 '__word' 'struct std::ios_base::_Words &'))))


        void *&pword(int __ix) (CompoundStmt 0x9e17cf8 </usr/include/c++/4.6/bits/ios_base.h:764:5, line:768:5>
  (DeclStmt 0x9e17ca0 <line:765:7, line:766:48>
    0x9e17aa0 "std::ios_base::_Words &__word =
      (ConditionalOperator 0x9e17c80 <line:765:24, line:766:47> 'struct std::ios_base::_Words' lvalue
        (ParenExpr 0x9e17b58 <line:765:24, col:44> '_Bool'
          (BinaryOperator 0x9e17b40 <col:25, col:32> '_Bool' '<'
            (ImplicitCastExpr 0x9e17b20 <col:25> 'int' <LValueToRValue>
              (DeclRefExpr 0x9e17ad4 <col:25> 'int' lvalue ParmVar 0x9e161e0 '__ix' 'int'))
            (ImplicitCastExpr 0x9e17b30 <col:32> 'int' <LValueToRValue>
              (MemberExpr 0x9e17b00 <col:32> 'int' lvalue ->_M_word_size 0x9e12cf0
                (CXXThisExpr 0x9e17af0 <col:32> 'class std::ios_base *' this)))))
        (ArraySubscriptExpr 0x9e17bd8 <line:766:6, col:18> 'struct std::ios_base::_Words' lvalue
          (ImplicitCastExpr 0x9e17bb8 <col:6> 'struct std::ios_base::_Words *' <LValueToRValue>
            (MemberExpr 0x9e17b80 <col:6> 'struct std::ios_base::_Words *' lvalue ->_M_word 0x9e12d50
              (CXXThisExpr 0x9e17b70 <col:6> 'class std::ios_base *' this)))
          (ImplicitCastExpr 0x9e17bc8 <col:14> 'int' <LValueToRValue>
            (DeclRefExpr 0x9e17ba0 <col:14> 'int' lvalue ParmVar 0x9e161e0 '__ix' 'int')))
        (CXXMemberCallExpr 0x9e17c48 <col:22, col:47> 'struct std::ios_base::_Words' lvalue
          (MemberExpr 0x9e17c00 <col:22> '<bound member function type>' ->_M_grow_words 0x9e12e70
            (CXXThisExpr 0x9e17bf0 <col:22> 'class std::ios_base *' this))
          (ImplicitCastExpr 0x9e17c70 <col:36> 'int' <LValueToRValue>
            (DeclRefExpr 0x9e17c20 <col:36> 'int' lvalue ParmVar 0x9e161e0 '__ix' 'int'))
          (CXXBoolLiteralExpr 0x9e17c38 <col:42> '_Bool' false)))")
  (ReturnStmt 0x9e17ce8 <line:767:7, col:21>
    (MemberExpr 0x9e17cc8 <col:14, col:21> 'void *' lvalue ._M_pword 0x9e129c0
      (DeclRefExpr 0x9e17cb0 <col:14> 'struct std::ios_base::_Words' lvalue Var 0x9e17aa0 '__word' 'struct std::ios_base::_Words &'))))


        virtual void ~ios_base();
    protected:
    protected:
        ios_base() throw();
    private:
    private:
        ios_base(const std::ios_base &);
        std::ios_base &operator=(const std::ios_base &);
    };
    inline std::ios_base &boolalpha(std::ios_base &__base) (CompoundStmt 0x9e17f18 </usr/include/c++/4.6/bits/ios_base.h:797:3, line:800:3>
  (CXXMemberCallExpr 0x9e17ec0 <line:798:5, col:36> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x9e17e9c <col:5, col:12> '<bound member function type>' .setf 0x9e157a0
      (DeclRefExpr 0x9e17e04 <col:5> 'class std::ios_base' lvalue ParmVar 0x9e17d20 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9e17ee0 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9e17e7c <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9e10c80 'boolalpha' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9e17f08 <line:799:5, col:12>
    (DeclRefExpr 0x9e17eec <col:12> 'class std::ios_base' lvalue ParmVar 0x9e17d20 '__base' 'class std::ios_base &')))


    inline std::ios_base &noboolalpha(std::ios_base &__base) (CompoundStmt 0x9e180d8 </usr/include/c++/4.6/bits/ios_base.h:805:3, line:808:3>
  (CXXMemberCallExpr 0x9e18080 <line:806:5, col:38> 'void'
    (MemberExpr 0x9e1801c <col:5, col:12> '<bound member function type>' .unsetf 0x9e159e0
      (DeclRefExpr 0x9e18004 <col:5> 'class std::ios_base' lvalue ParmVar 0x9e17f40 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9e180a0 <col:19, col:29> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9e1805c <col:19, col:29> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9e10c80 'boolalpha' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9e180c8 <line:807:5, col:12>
    (DeclRefExpr 0x9e180ac <col:12> 'class std::ios_base' lvalue ParmVar 0x9e17f40 '__base' 'class std::ios_base &')))


    inline std::ios_base &showbase(std::ios_base &__base) (CompoundStmt 0x9e182d8 </usr/include/c++/4.6/bits/ios_base.h:813:3, line:816:3>
  (CXXMemberCallExpr 0x9e18280 <line:814:5, col:35> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x9e1825c <col:5, col:12> '<bound member function type>' .setf 0x9e157a0
      (DeclRefExpr 0x9e181c4 <col:5> 'class std::ios_base' lvalue ParmVar 0x9e18100 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9e182a0 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9e1823c <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9e10fe0 'showbase' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9e182c8 <line:815:5, col:12>
    (DeclRefExpr 0x9e182ac <col:12> 'class std::ios_base' lvalue ParmVar 0x9e18100 '__base' 'class std::ios_base &')))


    inline std::ios_base &noshowbase(std::ios_base &__base) (CompoundStmt 0x9e18498 </usr/include/c++/4.6/bits/ios_base.h:821:3, line:824:3>
  (CXXMemberCallExpr 0x9e18440 <line:822:5, col:37> 'void'
    (MemberExpr 0x9e183dc <col:5, col:12> '<bound member function type>' .unsetf 0x9e159e0
      (DeclRefExpr 0x9e183c4 <col:5> 'class std::ios_base' lvalue ParmVar 0x9e18300 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9e18460 <col:19, col:29> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9e1841c <col:19, col:29> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9e10fe0 'showbase' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9e18488 <line:823:5, col:12>
    (DeclRefExpr 0x9e1846c <col:12> 'class std::ios_base' lvalue ParmVar 0x9e18300 '__base' 'class std::ios_base &')))


    inline std::ios_base &showpoint(std::ios_base &__base) (CompoundStmt 0x9e18698 </usr/include/c++/4.6/bits/ios_base.h:829:3, line:832:3>
  (CXXMemberCallExpr 0x9e18640 <line:830:5, col:36> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x9e1861c <col:5, col:12> '<bound member function type>' .setf 0x9e157a0
      (DeclRefExpr 0x9e18584 <col:5> 'class std::ios_base' lvalue ParmVar 0x9e184c0 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9e18660 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9e185fc <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9e11040 'showpoint' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9e18688 <line:831:5, col:12>
    (DeclRefExpr 0x9e1866c <col:12> 'class std::ios_base' lvalue ParmVar 0x9e184c0 '__base' 'class std::ios_base &')))


    inline std::ios_base &noshowpoint(std::ios_base &__base) (CompoundStmt 0x9e18858 </usr/include/c++/4.6/bits/ios_base.h:837:3, line:840:3>
  (CXXMemberCallExpr 0x9e18800 <line:838:5, col:38> 'void'
    (MemberExpr 0x9e1879c <col:5, col:12> '<bound member function type>' .unsetf 0x9e159e0
      (DeclRefExpr 0x9e18784 <col:5> 'class std::ios_base' lvalue ParmVar 0x9e186c0 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9e18820 <col:19, col:29> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9e187dc <col:19, col:29> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9e11040 'showpoint' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9e18848 <line:839:5, col:12>
    (DeclRefExpr 0x9e1882c <col:12> 'class std::ios_base' lvalue ParmVar 0x9e186c0 '__base' 'class std::ios_base &')))


    inline std::ios_base &showpos(std::ios_base &__base) (CompoundStmt 0x9e18a58 </usr/include/c++/4.6/bits/ios_base.h:845:3, line:848:3>
  (CXXMemberCallExpr 0x9e18a00 <line:846:5, col:34> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x9e189dc <col:5, col:12> '<bound member function type>' .setf 0x9e157a0
      (DeclRefExpr 0x9e18944 <col:5> 'class std::ios_base' lvalue ParmVar 0x9e18880 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9e18a20 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9e189bc <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9e110a0 'showpos' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9e18a48 <line:847:5, col:12>
    (DeclRefExpr 0x9e18a2c <col:12> 'class std::ios_base' lvalue ParmVar 0x9e18880 '__base' 'class std::ios_base &')))


    inline std::ios_base &noshowpos(std::ios_base &__base) (CompoundStmt 0x9e18c18 </usr/include/c++/4.6/bits/ios_base.h:853:3, line:856:3>
  (CXXMemberCallExpr 0x9e18bc0 <line:854:5, col:36> 'void'
    (MemberExpr 0x9e18b5c <col:5, col:12> '<bound member function type>' .unsetf 0x9e159e0
      (DeclRefExpr 0x9e18b44 <col:5> 'class std::ios_base' lvalue ParmVar 0x9e18a80 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9e18be0 <col:19, col:29> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9e18b9c <col:19, col:29> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9e110a0 'showpos' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9e18c08 <line:855:5, col:12>
    (DeclRefExpr 0x9e18bec <col:12> 'class std::ios_base' lvalue ParmVar 0x9e18a80 '__base' 'class std::ios_base &')))


    inline std::ios_base &skipws(std::ios_base &__base) (CompoundStmt 0x9e18e18 </usr/include/c++/4.6/bits/ios_base.h:861:3, line:864:3>
  (CXXMemberCallExpr 0x9e18dc0 <line:862:5, col:33> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x9e18d9c <col:5, col:12> '<bound member function type>' .setf 0x9e157a0
      (DeclRefExpr 0x9e18d04 <col:5> 'class std::ios_base' lvalue ParmVar 0x9e18c40 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9e18de0 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9e18d7c <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9e11100 'skipws' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9e18e08 <line:863:5, col:12>
    (DeclRefExpr 0x9e18dec <col:12> 'class std::ios_base' lvalue ParmVar 0x9e18c40 '__base' 'class std::ios_base &')))


    inline std::ios_base &noskipws(std::ios_base &__base) (CompoundStmt 0x9e18fd8 </usr/include/c++/4.6/bits/ios_base.h:869:3, line:872:3>
  (CXXMemberCallExpr 0x9e18f80 <line:870:5, col:35> 'void'
    (MemberExpr 0x9e18f1c <col:5, col:12> '<bound member function type>' .unsetf 0x9e159e0
      (DeclRefExpr 0x9e18f04 <col:5> 'class std::ios_base' lvalue ParmVar 0x9e18e40 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9e18fa0 <col:19, col:29> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9e18f5c <col:19, col:29> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9e11100 'skipws' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9e18fc8 <line:871:5, col:12>
    (DeclRefExpr 0x9e18fac <col:12> 'class std::ios_base' lvalue ParmVar 0x9e18e40 '__base' 'class std::ios_base &')))


    inline std::ios_base &uppercase(std::ios_base &__base) (CompoundStmt 0x9e191d8 </usr/include/c++/4.6/bits/ios_base.h:877:3, line:880:3>
  (CXXMemberCallExpr 0x9e19180 <line:878:5, col:36> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x9e1915c <col:5, col:12> '<bound member function type>' .setf 0x9e157a0
      (DeclRefExpr 0x9e190c4 <col:5> 'class std::ios_base' lvalue ParmVar 0x9e19000 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9e191a0 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9e1913c <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9e111c0 'uppercase' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9e191c8 <line:879:5, col:12>
    (DeclRefExpr 0x9e191ac <col:12> 'class std::ios_base' lvalue ParmVar 0x9e19000 '__base' 'class std::ios_base &')))


    inline std::ios_base &nouppercase(std::ios_base &__base) (CompoundStmt 0x9e19398 </usr/include/c++/4.6/bits/ios_base.h:885:3, line:888:3>
  (CXXMemberCallExpr 0x9e19340 <line:886:5, col:38> 'void'
    (MemberExpr 0x9e192dc <col:5, col:12> '<bound member function type>' .unsetf 0x9e159e0
      (DeclRefExpr 0x9e192c4 <col:5> 'class std::ios_base' lvalue ParmVar 0x9e19200 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9e19360 <col:19, col:29> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9e1931c <col:19, col:29> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9e111c0 'uppercase' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9e19388 <line:887:5, col:12>
    (DeclRefExpr 0x9e1936c <col:12> 'class std::ios_base' lvalue ParmVar 0x9e19200 '__base' 'class std::ios_base &')))


    inline std::ios_base &unitbuf(std::ios_base &__base) (CompoundStmt 0x9e19598 </usr/include/c++/4.6/bits/ios_base.h:893:3, line:896:3>
  (CXXMemberCallExpr 0x9e19540 <line:894:6, col:35> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x9e1951c <col:6, col:13> '<bound member function type>' .setf 0x9e157a0
      (DeclRefExpr 0x9e19484 <col:6> 'class std::ios_base' lvalue ParmVar 0x9e193c0 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9e19560 <col:18, col:28> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9e194fc <col:18, col:28> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9e11160 'unitbuf' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9e19588 <line:895:6, col:13>
    (DeclRefExpr 0x9e1956c <col:13> 'class std::ios_base' lvalue ParmVar 0x9e193c0 '__base' 'class std::ios_base &')))


    inline std::ios_base &nounitbuf(std::ios_base &__base) (CompoundStmt 0x9e1ee90 </usr/include/c++/4.6/bits/ios_base.h:901:3, line:904:3>
  (CXXMemberCallExpr 0x9e19700 <line:902:6, col:37> 'void'
    (MemberExpr 0x9e1969c <col:6, col:13> '<bound member function type>' .unsetf 0x9e159e0
      (DeclRefExpr 0x9e19684 <col:6> 'class std::ios_base' lvalue ParmVar 0x9e195c0 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9e19720 <col:20, col:30> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9e196dc <col:20, col:30> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9e11160 'unitbuf' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9e1ee80 <line:903:6, col:13>
    (DeclRefExpr 0x9e1ee68 <col:13> 'class std::ios_base' lvalue ParmVar 0x9e195c0 '__base' 'class std::ios_base &')))


    inline std::ios_base &internal(std::ios_base &__base) (CompoundStmt 0x9e1f0f0 </usr/include/c++/4.6/bits/ios_base.h:910:3, line:913:3>
  (CXXMemberCallExpr 0x9e1f080 <line:911:6, col:59> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x9e1f05c <col:6, col:13> '<bound member function type>' .setf 0x9e158d0
      (DeclRefExpr 0x9e1ef84 <col:6> 'class std::ios_base' lvalue ParmVar 0x9e1eec0 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9e1f0a8 <col:18, col:28> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9e1effc <col:18, col:28> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9e10e00 'internal' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
    (ImplicitCastExpr 0x9e1f0b8 <col:38, col:48> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9e1f03c <col:38, col:48> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9e11220 'adjustfield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9e1f0e0 <line:912:6, col:13>
    (DeclRefExpr 0x9e1f0c4 <col:13> 'class std::ios_base' lvalue ParmVar 0x9e1eec0 '__base' 'class std::ios_base &')))


    inline std::ios_base &left(std::ios_base &__base) (CompoundStmt 0x9e1f350 </usr/include/c++/4.6/bits/ios_base.h:918:3, line:921:3>
  (CXXMemberCallExpr 0x9e1f2e0 <line:919:5, col:54> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x9e1f2bc <col:5, col:12> '<bound member function type>' .setf 0x9e158d0
      (DeclRefExpr 0x9e1f1e4 <col:5> 'class std::ios_base' lvalue ParmVar 0x9e1f120 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9e1f308 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9e1f25c <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9e10e60 'left' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
    (ImplicitCastExpr 0x9e1f318 <col:33, col:43> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9e1f29c <col:33, col:43> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9e11220 'adjustfield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9e1f340 <line:920:5, col:12>
    (DeclRefExpr 0x9e1f324 <col:12> 'class std::ios_base' lvalue ParmVar 0x9e1f120 '__base' 'class std::ios_base &')))


    inline std::ios_base &right(std::ios_base &__base) (CompoundStmt 0x9e1f5b0 </usr/include/c++/4.6/bits/ios_base.h:926:3, line:929:3>
  (CXXMemberCallExpr 0x9e1f540 <line:927:5, col:55> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x9e1f51c <col:5, col:12> '<bound member function type>' .setf 0x9e158d0
      (DeclRefExpr 0x9e1f444 <col:5> 'class std::ios_base' lvalue ParmVar 0x9e1f380 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9e1f568 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9e1f4bc <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9e10f20 'right' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
    (ImplicitCastExpr 0x9e1f578 <col:34, col:44> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9e1f4fc <col:34, col:44> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9e11220 'adjustfield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9e1f5a0 <line:928:5, col:12>
    (DeclRefExpr 0x9e1f584 <col:12> 'class std::ios_base' lvalue ParmVar 0x9e1f380 '__base' 'class std::ios_base &')))


    inline std::ios_base &dec(std::ios_base &__base) (CompoundStmt 0x9e1f810 </usr/include/c++/4.6/bits/ios_base.h:935:3, line:938:3>
  (CXXMemberCallExpr 0x9e1f7a0 <line:936:5, col:51> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x9e1f77c <col:5, col:12> '<bound member function type>' .setf 0x9e158d0
      (DeclRefExpr 0x9e1f6a4 <col:5> 'class std::ios_base' lvalue ParmVar 0x9e1f5e0 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9e1f7c8 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9e1f71c <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9e10ce0 'dec' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
    (ImplicitCastExpr 0x9e1f7d8 <col:32, col:42> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9e1f75c <col:32, col:42> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9e11280 'basefield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9e1f800 <line:937:5, col:12>
    (DeclRefExpr 0x9e1f7e4 <col:12> 'class std::ios_base' lvalue ParmVar 0x9e1f5e0 '__base' 'class std::ios_base &')))


    inline std::ios_base &hex(std::ios_base &__base) (CompoundStmt 0x9e1fa70 </usr/include/c++/4.6/bits/ios_base.h:943:3, line:946:3>
  (CXXMemberCallExpr 0x9e1fa00 <line:944:5, col:51> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x9e1f9dc <col:5, col:12> '<bound member function type>' .setf 0x9e158d0
      (DeclRefExpr 0x9e1f904 <col:5> 'class std::ios_base' lvalue ParmVar 0x9e1f840 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9e1fa28 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9e1f97c <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9e10da0 'hex' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
    (ImplicitCastExpr 0x9e1fa38 <col:32, col:42> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9e1f9bc <col:32, col:42> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9e11280 'basefield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9e1fa60 <line:945:5, col:12>
    (DeclRefExpr 0x9e1fa44 <col:12> 'class std::ios_base' lvalue ParmVar 0x9e1f840 '__base' 'class std::ios_base &')))


    inline std::ios_base &oct(std::ios_base &__base) (CompoundStmt 0x9e1fcd0 </usr/include/c++/4.6/bits/ios_base.h:951:3, line:954:3>
  (CXXMemberCallExpr 0x9e1fc60 <line:952:5, col:51> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x9e1fc3c <col:5, col:12> '<bound member function type>' .setf 0x9e158d0
      (DeclRefExpr 0x9e1fb64 <col:5> 'class std::ios_base' lvalue ParmVar 0x9e1faa0 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9e1fc88 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9e1fbdc <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9e10ec0 'oct' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
    (ImplicitCastExpr 0x9e1fc98 <col:32, col:42> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9e1fc1c <col:32, col:42> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9e11280 'basefield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9e1fcc0 <line:953:5, col:12>
    (DeclRefExpr 0x9e1fca4 <col:12> 'class std::ios_base' lvalue ParmVar 0x9e1faa0 '__base' 'class std::ios_base &')))


    inline std::ios_base &fixed(std::ios_base &__base) (CompoundStmt 0x9e1ff30 </usr/include/c++/4.6/bits/ios_base.h:960:3, line:963:3>
  (CXXMemberCallExpr 0x9e1fec0 <line:961:5, col:54> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x9e1fe9c <col:5, col:12> '<bound member function type>' .setf 0x9e158d0
      (DeclRefExpr 0x9e1fdc4 <col:5> 'class std::ios_base' lvalue ParmVar 0x9e1fd00 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9e1fee8 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9e1fe3c <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9e10d40 'fixed' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
    (ImplicitCastExpr 0x9e1fef8 <col:34, col:44> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9e1fe7c <col:34, col:44> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9e112e0 'floatfield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9e1ff20 <line:962:5, col:12>
    (DeclRefExpr 0x9e1ff04 <col:12> 'class std::ios_base' lvalue ParmVar 0x9e1fd00 '__base' 'class std::ios_base &')))


    inline std::ios_base &scientific(std::ios_base &__base) (CompoundStmt 0x9e20190 </usr/include/c++/4.6/bits/ios_base.h:968:3, line:971:3>
  (CXXMemberCallExpr 0x9e20120 <line:969:5, col:59> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x9e200fc <col:5, col:12> '<bound member function type>' .setf 0x9e158d0
      (DeclRefExpr 0x9e20024 <col:5> 'class std::ios_base' lvalue ParmVar 0x9e1ff60 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9e20148 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9e2009c <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9e10f80 'scientific' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
    (ImplicitCastExpr 0x9e20158 <col:39, col:49> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9e200dc <col:39, col:49> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9e112e0 'floatfield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9e20180 <line:970:5, col:12>
    (DeclRefExpr 0x9e20164 <col:12> 'class std::ios_base' lvalue ParmVar 0x9e1ff60 '__base' 'class std::ios_base &')))


}
namespace std {
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> streamsize __copy_streambufs_eof(__streambuf_type *, __streambuf_type *, bool &)template <typename _CharT = char, typename _Traits = std::char_traits<char>> streamsize __copy_streambufs_eof(__streambuf_type *, __streambuf_type *, bool &)template <typename _CharT, typename _Traits> streamsize __copy_streambufs_eof(basic_streambuf<_CharT, _Traits> *, basic_streambuf<_CharT, _Traits> *, bool &);
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_streambuf {
        class basic_streambuf;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
    protected:
    protected:
        char_type *_M_in_beg;
        char_type *_M_in_cur;
        char_type *_M_in_end;
        char_type *_M_out_beg;
        char_type *_M_out_cur;
        char_type *_M_out_end;
        std::locale _M_buf_locale;
    public:
    public:
        virtual void ~basic_streambuf();
        std::locale pubimbue(const std::locale &__loc);
        std::locale getloc() const;
        __streambuf_type *pubsetbuf(char_type *__s, streamsize __n);
        pos_type pubseekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        pos_type pubseekpos(pos_type __sp, ios_base::openmode __mode);
        int pubsync();
        streamsize in_avail();
        int_type snextc();
        int_type sbumpc();
        int_type sgetc();
        streamsize sgetn(char_type *__s, streamsize __n);
        int_type sputbackc(char_type __c);
        int_type sungetc();
        int_type sputc(char_type __c);
        streamsize sputn(const char_type *__s, streamsize __n);
    protected:
    protected:
        basic_streambuf();
        char_type *eback() const;
        char_type *gptr() const;
        char_type *egptr() const;
        void gbump(int __n);
        void setg(char_type *__gbeg, char_type *__gnext, char_type *__gend);
        char_type *pbase() const;
        char_type *pptr() const;
        char_type *epptr() const;
        void pbump(int __n);
        void setp(char_type *__pbeg, char_type *__pend);
        virtual void imbue(const std::locale &);
        virtual basic_streambuf<char_type, std::char_traits<wchar_t> > *setbuf(char_type *, streamsize);
        virtual pos_type seekoff(off_type, ios_base::seekdir, ios_base::openmode);
        virtual pos_type seekpos(pos_type, ios_base::openmode);
        virtual int sync();
        virtual streamsize showmanyc();
        virtual streamsize xsgetn(char_type *__s, streamsize __n);
        virtual int_type underflow();
        virtual int_type uflow();
        virtual int_type pbackfail(int_type);
        virtual streamsize xsputn(const char_type *__s, streamsize __n);
        virtual int_type overflow(int_type);
    public:
    public:
        void stossc();
        void __safe_gbump(streamsize __n);
        void __safe_pbump(streamsize __n);
    private:
    private:
        basic_streambuf(const __streambuf_type &__sb);
        __streambuf_type &operator=(const __streambuf_type &);
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_streambuf {
        class basic_streambuf;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
    protected:
    protected:
        char_type *_M_in_beg;
        char_type *_M_in_cur;
        char_type *_M_in_end;
        char_type *_M_out_beg;
        char_type *_M_out_cur;
        char_type *_M_out_end;
        std::locale _M_buf_locale;
    public:
    public:
        virtual void ~basic_streambuf();
        std::locale pubimbue(const std::locale &__loc);
        std::locale getloc() const;
        __streambuf_type *pubsetbuf(char_type *__s, streamsize __n);
        pos_type pubseekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        pos_type pubseekpos(pos_type __sp, ios_base::openmode __mode);
        int pubsync();
        streamsize in_avail();
        int_type snextc();
        int_type sbumpc();
        int_type sgetc();
        streamsize sgetn(char_type *__s, streamsize __n);
        int_type sputbackc(char_type __c);
        int_type sungetc();
        int_type sputc(char_type __c);
        streamsize sputn(const char_type *__s, streamsize __n);
    protected:
    protected:
        basic_streambuf();
        char_type *eback() const;
        char_type *gptr() const;
        char_type *egptr() const;
        void gbump(int __n);
        void setg(char_type *__gbeg, char_type *__gnext, char_type *__gend);
        char_type *pbase() const;
        char_type *pptr() const;
        char_type *epptr() const;
        void pbump(int __n);
        void setp(char_type *__pbeg, char_type *__pend);
        virtual void imbue(const std::locale &);
        virtual basic_streambuf<char_type, std::char_traits<char> > *setbuf(char_type *, streamsize);
        virtual pos_type seekoff(off_type, ios_base::seekdir, ios_base::openmode);
        virtual pos_type seekpos(pos_type, ios_base::openmode);
        virtual int sync();
        virtual streamsize showmanyc();
        virtual streamsize xsgetn(char_type *__s, streamsize __n);
        virtual int_type underflow();
        virtual int_type uflow();
        virtual int_type pbackfail(int_type);
        virtual streamsize xsputn(const char_type *__s, streamsize __n);
        virtual int_type overflow(int_type);
    public:
    public:
        void stossc();
        void __safe_gbump(streamsize __n);
        void __safe_pbump(streamsize __n);
    private:
    private:
        basic_streambuf(const __streambuf_type &__sb);
        __streambuf_type &operator=(const __streambuf_type &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_streambuf {
        class basic_streambuf;
    public:
    public:
        typedef _CharT char_type;
        typedef _Traits traits_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
    protected:
    protected:
        char_type *_M_in_beg;
        char_type *_M_in_cur;
        char_type *_M_in_end;
        char_type *_M_out_beg;
        char_type *_M_out_cur;
        char_type *_M_out_end;
        std::locale _M_buf_locale;
    public:
    public:
        virtual void ~basic_streambuf<_CharT, _Traits>() (CompoundStmt 0x9e37350 </usr/include/c++/4.6/streambuf:195:7, col:9>)


        std::locale pubimbue(const std::locale &__loc) (CompoundStmt 0x9e37580 </usr/include/c++/4.6/streambuf:207:7, line:212:7>
  (DeclStmt 0x9e37430 <line:208:2, col:30>
    0x9e37370 "std::locale __tmp =
      (ParenListExpr 0x9e37410 <col:14, col:29> 'class std::locale'
        (CallExpr 0x9e373f0 <col:15, col:28> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9e373b8 <col:15, col:21> '<dependent type>' lvalue
            (CXXThisExpr 0x9e373a8 <col:15> 'basic_streambuf<_CharT, _Traits> *' this))))")
  (CallExpr 0x9e374a0 <line:209:2, col:19> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9e37450 <col:2, col:8> '<dependent type>' lvalue
      (CXXThisExpr 0x9e37440 <col:2> 'basic_streambuf<_CharT, _Traits> *' this))
    (DeclRefExpr 0x9e37484 <col:14> 'const class std::locale' lvalue ParmVar 0x9c881d0 '__loc' 'const class std::locale &'))
  (BinaryOperator 0x9e37508 <line:210:2, col:18> '<dependent type>' '='
    (MemberExpr 0x9e374d0 <col:2> 'class std::locale' lvalue ->_M_buf_locale 0x9c880b0
      (CXXThisExpr 0x9e374c0 <col:2> 'basic_streambuf<_CharT, _Traits> *' this))
    (DeclRefExpr 0x9e374f0 <col:18> 'const class std::locale' lvalue ParmVar 0x9c881d0 '__loc' 'const class std::locale &'))
  (ReturnStmt 0x9e37570 <line:211:2, col:9>
    (CXXConstructExpr 0x9e37548 <col:9> 'class std::locale''void (const class std::locale &) throw()' elidable
      (ImplicitCastExpr 0x9e37538 <col:9> 'const class std::locale' lvalue <NoOp>
        (DeclRefExpr 0x9e37520 <col:9> 'class std::locale' lvalue Var 0x9e37370 '__tmp' 'class std::locale')))))


        std::locale getloc() const (CompoundStmt 0x9e375f8 </usr/include/c++/4.6/streambuf:224:7, col:31>
  (ReturnStmt 0x9e375e8 <col:9, col:16>
    (MemberExpr 0x9e375c8 <col:16> 'const class std::locale' lvalue ->_M_buf_locale 0x9c880b0
      (CXXThisExpr 0x9e375b8 <col:16> 'const basic_streambuf<_CharT, _Traits> *' this))))


        __streambuf_type *pubsetbuf(char_type *__s, streamsize __n) (CompoundStmt 0x9e376c0 </usr/include/c++/4.6/streambuf:237:7, col:40>
  (ReturnStmt 0x9e376b0 <col:9, col:37>
    (CallExpr 0x9e37688 <col:16, col:37> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e37620 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9e37610 <col:16> 'basic_streambuf<_CharT, _Traits> *' this))
      (DeclRefExpr 0x9e37654 <col:29> 'char_type *' lvalue ParmVar 0x9c88310 '__s' 'char_type *')
      (DeclRefExpr 0x9e3766c <col:34> 'streamsize':'int' lvalue ParmVar 0x9c88350 '__n' 'streamsize':'int'))))


        pos_type pubseekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode = (CXXOperatorCallExpr 0x9c8ab90 </usr/include/c++/4.6/streambuf:241:32, col:57> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0x9c8ab80 <col:45, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0x9c8ab68 <col:45, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9e0bfe0 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0x9c8ab48 <col:32, col:42> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x9c8aae4 <col:32, col:42> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9e11680 'in' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0x9c8ab58 <col:47, col:57> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x9c8ab24 <col:47, col:57> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9e116e0 'out' 'const openmode':'const enum std::_Ios_Openmode')))
) (CompoundStmt 0x9e377a0 </usr/include/c++/4.6/streambuf:242:7, col:53>
  (ReturnStmt 0x9e37790 <col:9, col:50>
    (CallExpr 0x9e37768 <col:16, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e376e8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9e376d8 <col:16> 'basic_streambuf<_CharT, _Traits> *' this))
      (DeclRefExpr 0x9e3771c <col:30> 'off_type':'typename traits_type::off_type' lvalue ParmVar 0x9c88490 '__off' 'off_type':'typename traits_type::off_type')
      (DeclRefExpr 0x9e37734 <col:37> 'class ios_base::seekdir':'enum std::_Ios_Seekdir' lvalue ParmVar 0x9c88520 '__way' 'class ios_base::seekdir':'enum std::_Ios_Seekdir')
      (DeclRefExpr 0x9e3774c <col:44> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0x9c885b0 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode'))))


        pos_type pubseekpos(pos_type __sp, ios_base::openmode __mode = (CXXOperatorCallExpr 0x9c8ac80 </usr/include/c++/4.6/streambuf:246:32, col:57> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0x9c8ac70 <col:45, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0x9c8ac58 <col:45, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9e0bfe0 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0x9c8ac38 <col:32, col:42> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x9c8abd4 <col:32, col:42> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9e11680 'in' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0x9c8ac48 <col:47, col:57> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x9c8ac14 <col:47, col:57> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9e116e0 'out' 'const openmode':'const enum std::_Ios_Openmode')))
) (CompoundStmt 0x9e37868 </usr/include/c++/4.6/streambuf:247:7, col:45>
  (ReturnStmt 0x9e37858 <col:9, col:42>
    (CallExpr 0x9e37830 <col:16, col:42> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e377c8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9e377b8 <col:16> 'basic_streambuf<_CharT, _Traits> *' this))
      (DeclRefExpr 0x9e377fc <col:30> 'pos_type':'typename traits_type::pos_type' lvalue ParmVar 0x9c886f0 '__sp' 'pos_type':'typename traits_type::pos_type')
      (DeclRefExpr 0x9e37814 <col:36> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0x9c88760 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode'))))


        int pubsync() (CompoundStmt 0x9e378f8 </usr/include/c++/4.6/streambuf:250:17, col:40>
  (ReturnStmt 0x9e378e8 <col:19, col:37>
    (CallExpr 0x9e378c8 <col:26, col:37> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e37890 <col:26, col:32> '<dependent type>' lvalue
        (CXXThisExpr 0x9e37880 <col:26> 'basic_streambuf<_CharT, _Traits> *' this)))))


        streamsize in_avail() (CompoundStmt 0x9e37b80 </usr/include/c++/4.6/streambuf:264:7, line:267:7>
  (DeclStmt 0x9e37a88 <line:265:2, col:55>
    0x9e37920 "const streamsize __ret =
      (CXXOperatorCallExpr 0x9e37a60 <col:27, col:54> '<dependent type>'
        (UnresolvedLookupExpr 0x9e37a28 <col:41, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
        (CallExpr 0x9e379a0 <col:27, col:39> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9e37968 <col:27, col:33> '<dependent type>' lvalue
            (CXXThisExpr 0x9e37958 <col:27> 'basic_streambuf<_CharT, _Traits> *' this)))
        (CallExpr 0x9e37a08 <col:43, col:54> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9e379d0 <col:43, col:49> '<dependent type>' lvalue
            (CXXThisExpr 0x9e379c0 <col:43> 'basic_streambuf<_CharT, _Traits> *' this))))")
  (ReturnStmt 0x9e37b70 <line:266:2, col:41>
    (ConditionalOperator 0x9e37b50 <col:9, col:41> '<dependent type>'
      (ImplicitCastExpr 0x9e37b40 <col:9> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0x9e37b30 <col:9> 'streamsize':'int' <LValueToRValue>
          (DeclRefExpr 0x9e37a98 <col:9> 'const streamsize':'const int' lvalue Var 0x9e37920 '__ret' 'const streamsize':'const int')))
      (DeclRefExpr 0x9e37ab0 <col:17> 'const streamsize':'const int' lvalue Var 0x9e37920 '__ret' 'const streamsize':'const int')
      (CallExpr 0x9e37b10 <col:25, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e37ad8 <col:25, col:31> '<dependent type>' lvalue
          (CXXThisExpr 0x9e37ac8 <col:25> 'basic_streambuf<_CharT, _Traits> *' this))))))


        int_type snextc() (CompoundStmt 0x9e37ea8 </usr/include/c++/4.6/streambuf:278:7, line:284:7>
  (DeclStmt 0x9e37c50 <line:279:2, col:37>
    0x9e37ba0 "int_type __ret =
      (CallExpr 0x9e37c30 <col:19, col:36> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e37bf8 <col:19, col:32> '<dependent type>' lvalue))")
  (IfStmt 0x9e37e60 <line:280:2, line:282:24>
    <<<NULL>>>
    (CallExpr 0x9e37da0 <line:280:6, line:281:26> '<dependent type>'
      (DeclRefExpr 0x9e37c60 <line:280:6> 'long (long, long)' lvalue Function 0x9d45c10 '__builtin_expect' 'long (long, long)')
      (UnaryOperator 0x9e37d78 <col:23, line:281:19> '<dependent type>' prefix '!'
        (CallExpr 0x9e37d50 <line:280:24, line:281:19> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9e37c98 <line:280:24, col:37> '<dependent type>' lvalue)
          (CallExpr 0x9e37d18 <col:49, col:62> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9e37ce0 <col:49, col:55> '<dependent type>' lvalue
              (CXXThisExpr 0x9e37cd0 <col:49> 'basic_streambuf<_CharT, _Traits> *' this)))
          (DeclRefExpr 0x9e37d34 <line:281:14> 'int_type':'typename traits_type::int_type' lvalue Var 0x9e37ba0 '__ret' 'int_type':'typename traits_type::int_type')))
      (CXXBoolLiteralExpr 0x9e37d90 <col:22> '_Bool' true))
    (BinaryOperator 0x9e37e48 <line:282:4, col:24> '<dependent type>' '='
      (DeclRefExpr 0x9e37dc4 <col:4> 'int_type':'typename traits_type::int_type' lvalue Var 0x9e37ba0 '__ret' 'int_type':'typename traits_type::int_type')
      (CallExpr 0x9e37e28 <col:12, col:24> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e37df0 <col:12, col:18> '<dependent type>' lvalue
          (CXXThisExpr 0x9e37de0 <col:12> 'basic_streambuf<_CharT, _Traits> *' this))))
    <<<NULL>>>)
  (ReturnStmt 0x9e37e98 <line:283:2, col:9>
    (DeclRefExpr 0x9e37e7c <col:9> 'int_type':'typename traits_type::int_type' lvalue Var 0x9e37ba0 '__ret' 'int_type':'typename traits_type::int_type')))


        int_type sbumpc() (CompoundStmt 0x9e38348 </usr/include/c++/4.6/streambuf:296:7, line:306:7>
  (DeclStmt 0x9e37f08 <line:297:2, col:16>
    0x9e37ed0 "int_type __ret")
  (IfStmt 0x9e38300 <line:298:2, line:304:24>
    <<<NULL>>>
    (CallExpr 0x9e38080 <line:298:6, col:57> '<dependent type>'
      (DeclRefExpr 0x9e37f18 <col:6> 'long (long, long)' lvalue Function 0x9d45c10 '__builtin_expect' 'long (long, long)')
      (CXXOperatorCallExpr 0x9e38048 <col:23, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x9e38000 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bac3c0 0x9bc2c90 0x9bc5590 0x9d61190 0x9d616c0 0x9d61bf0)
        (CallExpr 0x9e37f78 <col:23, col:34> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9e37f40 <col:23, col:29> '<dependent type>' lvalue
            (CXXThisExpr 0x9e37f30 <col:23> 'basic_streambuf<_CharT, _Traits> *' this)))
        (CallExpr 0x9e37fe0 <col:38, col:50> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9e37fa8 <col:38, col:44> '<dependent type>' lvalue
            (CXXThisExpr 0x9e37f98 <col:38> 'basic_streambuf<_CharT, _Traits> *' this))))
      (CXXBoolLiteralExpr 0x9e38070 <col:53> '_Bool' true))
    (CompoundStmt 0x9e38250 <line:299:4, line:302:4>
      (BinaryOperator 0x9e381b8 <line:300:6, col:52> '<dependent type>' '='
        (DeclRefExpr 0x9e380a4 <col:6> 'int_type':'typename traits_type::int_type' lvalue Var 0x9e37ed0 '__ret' 'int_type':'typename traits_type::int_type')
        (CallExpr 0x9e38198 <col:14, col:52> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9e380e0 <col:14, col:27> '<dependent type>' lvalue)
          (UnaryOperator 0x9e38180 <col:39, col:51> '<dependent type>' prefix '*'
            (CallExpr 0x9e38160 <col:40, col:51> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9e38128 <col:40, col:46> '<dependent type>' lvalue
                (CXXThisExpr 0x9e38118 <col:40> 'basic_streambuf<_CharT, _Traits> *' this))))))
      (CallExpr 0x9e38230 <line:301:6, col:19> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e381e0 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0x9e381d0 <col:6> 'basic_streambuf<_CharT, _Traits> *' this))
        (IntegerLiteral 0x9e38218 <col:18> 'int' 1)))
    (BinaryOperator 0x9e382e8 <line:304:4, col:24> '<dependent type>' '='
      (DeclRefExpr 0x9e38268 <col:4> 'int_type':'typename traits_type::int_type' lvalue Var 0x9e37ed0 '__ret' 'int_type':'typename traits_type::int_type')
      (CallExpr 0x9e382c8 <col:12, col:24> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e38290 <col:12, col:18> '<dependent type>' lvalue
          (CXXThisExpr 0x9e38280 <col:12> 'basic_streambuf<_CharT, _Traits> *' this)))))
  (ReturnStmt 0x9e38338 <line:305:2, col:9>
    (DeclRefExpr 0x9e3831c <col:9> 'int_type':'typename traits_type::int_type' lvalue Var 0x9e37ed0 '__ret' 'int_type':'typename traits_type::int_type')))


        int_type sgetc() (CompoundStmt 0x9e38750 </usr/include/c++/4.6/streambuf:318:7, line:325:7>
  (DeclStmt 0x9e383a8 <line:319:2, col:16>
    0x9e38370 "int_type __ret")
  (IfStmt 0x9e38708 <line:320:2, line:323:28>
    <<<NULL>>>
    (CallExpr 0x9e38520 <line:320:6, col:57> '<dependent type>'
      (DeclRefExpr 0x9e383b8 <col:6> 'long (long, long)' lvalue Function 0x9d45c10 '__builtin_expect' 'long (long, long)')
      (CXXOperatorCallExpr 0x9e384e8 <col:23, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x9e384a0 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bac3c0 0x9bc2c90 0x9bc5590 0x9d61190 0x9d616c0 0x9d61bf0)
        (CallExpr 0x9e38418 <col:23, col:34> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9e383e0 <col:23, col:29> '<dependent type>' lvalue
            (CXXThisExpr 0x9e383d0 <col:23> 'basic_streambuf<_CharT, _Traits> *' this)))
        (CallExpr 0x9e38480 <col:38, col:50> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9e38448 <col:38, col:44> '<dependent type>' lvalue
            (CXXThisExpr 0x9e38438 <col:38> 'basic_streambuf<_CharT, _Traits> *' this))))
      (CXXBoolLiteralExpr 0x9e38510 <col:53> '_Bool' true))
    (BinaryOperator 0x9e38658 <line:321:4, col:50> '<dependent type>' '='
      (DeclRefExpr 0x9e38544 <col:4> 'int_type':'typename traits_type::int_type' lvalue Var 0x9e38370 '__ret' 'int_type':'typename traits_type::int_type')
      (CallExpr 0x9e38638 <col:12, col:50> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e38580 <col:12, col:25> '<dependent type>' lvalue)
        (UnaryOperator 0x9e38620 <col:37, col:49> '<dependent type>' prefix '*'
          (CallExpr 0x9e38600 <col:38, col:49> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9e385c8 <col:38, col:44> '<dependent type>' lvalue
              (CXXThisExpr 0x9e385b8 <col:38> 'basic_streambuf<_CharT, _Traits> *' this))))))
    (BinaryOperator 0x9e386f0 <line:323:4, col:28> '<dependent type>' '='
      (DeclRefExpr 0x9e38670 <col:4> 'int_type':'typename traits_type::int_type' lvalue Var 0x9e38370 '__ret' 'int_type':'typename traits_type::int_type')
      (CallExpr 0x9e386d0 <col:12, col:28> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e38698 <col:12, col:18> '<dependent type>' lvalue
          (CXXThisExpr 0x9e38688 <col:12> 'basic_streambuf<_CharT, _Traits> *' this)))))
  (ReturnStmt 0x9e38740 <line:324:2, col:9>
    (DeclRefExpr 0x9e38724 <col:9> 'int_type':'typename traits_type::int_type' lvalue Var 0x9e38370 '__ret' 'int_type':'typename traits_type::int_type')))


        streamsize sgetn(char_type *__s, streamsize __n) (CompoundStmt 0x9e38820 </usr/include/c++/4.6/streambuf:337:7, col:40>
  (ReturnStmt 0x9e38810 <col:9, col:37>
    (CallExpr 0x9e387e8 <col:16, col:37> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e38780 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9e38770 <col:16> 'basic_streambuf<_CharT, _Traits> *' this))
      (DeclRefExpr 0x9e387b4 <col:29> 'char_type *' lvalue ParmVar 0x9c88b40 '__s' 'char_type *')
      (DeclRefExpr 0x9e387cc <col:34> 'streamsize':'int' lvalue ParmVar 0x9c88b80 '__n' 'streamsize':'int'))))


        int_type sputbackc(char_type __c) (CompoundStmt 0x9e38f68 </usr/include/c++/4.6/streambuf:352:7, line:364:7>
  (DeclStmt 0x9e38878 <line:353:2, col:16>
    0x9e38840 "int_type __ret")
  (DeclStmt 0x9e38a08 <line:354:2, col:53>
    0x9e38890 "const bool __testpos =
      (CXXOperatorCallExpr 0x9e389e0 <col:25, col:52> '<dependent type>'
        (UnresolvedLookupExpr 0x9e38998 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bac3c0 0x9bc2c90 0x9bc5590 0x9d61190 0x9d616c0 0x9d61bf0)
        (CallExpr 0x9e38910 <col:25, col:37> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9e388d8 <col:25, col:31> '<dependent type>' lvalue
            (CXXThisExpr 0x9e388c8 <col:25> 'basic_streambuf<_CharT, _Traits> *' this)))
        (CallExpr 0x9e38978 <col:41, col:52> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9e38940 <col:41, col:47> '<dependent type>' lvalue
            (CXXThisExpr 0x9e38930 <col:41> 'basic_streambuf<_CharT, _Traits> *' this))))")
  (IfStmt 0x9e38f20 <line:355:2, line:362:4>
    <<<NULL>>>
    (CallExpr 0x9e38bf8 <line:355:6, line:356:55> '<dependent type>'
      (DeclRefExpr 0x9e38a18 <line:355:6> 'long (long, long)' lvalue Function 0x9d45c10 '__builtin_expect' 'long (long, long)')
      (BinaryOperator 0x9e38bd0 <col:23, line:356:47> '<dependent type>' '||'
        (UnaryOperator 0x9e38a58 <line:355:23, col:24> '_Bool' prefix '!'
          (ImplicitCastExpr 0x9e38a48 <col:24> '_Bool' <LValueToRValue>
            (DeclRefExpr 0x9e38a30 <col:24> 'const _Bool' lvalue Var 0x9e38890 '__testpos' 'const _Bool')))
        (UnaryOperator 0x9e38bb8 <line:356:9, col:47> '<dependent type>' prefix '!'
          (CallExpr 0x9e38b90 <col:10, col:47> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9e38a90 <col:10, col:23> '<dependent type>' lvalue)
            (DeclRefExpr 0x9e38ac4 <col:26> 'char_type':'_CharT' lvalue ParmVar 0x9c88c90 '__c' 'char_type':'_CharT')
            (ArraySubscriptExpr 0x9e38b78 <col:31, col:46> '<dependent type>' lvalue
              (CallExpr 0x9e38b28 <col:31, col:42> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9e38af0 <col:31, col:37> '<dependent type>' lvalue
                  (CXXThisExpr 0x9e38ae0 <col:31> 'basic_streambuf<_CharT, _Traits> *' this)))
              (UnaryOperator 0x9e38b60 <col:44, col:45> 'int' prefix '-'
                (IntegerLiteral 0x9e38b48 <col:45> 'int' 1))))))
      (CXXBoolLiteralExpr 0x9e38be8 <col:50> '_Bool' false))
    (BinaryOperator 0x9e38d30 <line:357:4, col:57> '<dependent type>' '='
      (DeclRefExpr 0x9e38c1c <col:4> 'int_type':'typename traits_type::int_type' lvalue Var 0x9e38840 '__ret' 'int_type':'typename traits_type::int_type')
      (CallExpr 0x9e38d10 <col:12, col:57> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e38c48 <col:12, col:18> '<dependent type>' lvalue
          (CXXThisExpr 0x9e38c38 <col:12> 'basic_streambuf<_CharT, _Traits> *' this))
        (CallExpr 0x9e38cf0 <col:28, col:56> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9e38ca0 <col:28, col:41> '<dependent type>' lvalue)
          (DeclRefExpr 0x9e38cd4 <col:53> 'char_type':'_CharT' lvalue ParmVar 0x9c88c90 '__c' 'char_type':'_CharT'))))
    (CompoundStmt 0x9e38f08 <line:359:4, line:362:4>
      (CallExpr 0x9e38dc0 <line:360:6, col:20> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e38d58 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0x9e38d48 <col:6> 'basic_streambuf<_CharT, _Traits> *' this))
        (UnaryOperator 0x9e38da8 <col:18, col:19> 'int' prefix '-'
          (IntegerLiteral 0x9e38d90 <col:19> 'int' 1)))
      (BinaryOperator 0x9e38ef0 <line:361:6, col:52> '<dependent type>' '='
        (DeclRefExpr 0x9e38de0 <col:6> 'int_type':'typename traits_type::int_type' lvalue Var 0x9e38840 '__ret' 'int_type':'typename traits_type::int_type')
        (CallExpr 0x9e38ed0 <col:14, col:52> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9e38e18 <col:14, col:27> '<dependent type>' lvalue)
          (UnaryOperator 0x9e38eb8 <col:39, col:51> '<dependent type>' prefix '*'
            (CallExpr 0x9e38e98 <col:40, col:51> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9e38e60 <col:40, col:46> '<dependent type>' lvalue
                (CXXThisExpr 0x9e38e50 <col:40> 'basic_streambuf<_CharT, _Traits> *' this))))))))
  (ReturnStmt 0x9e38f58 <line:363:2, col:9>
    (DeclRefExpr 0x9e38f3c <col:9> 'int_type':'typename traits_type::int_type' lvalue Var 0x9e38840 '__ret' 'int_type':'typename traits_type::int_type')))


        int_type sungetc() (CompoundStmt 0x9e39420 </usr/include/c++/4.6/streambuf:377:7, line:387:7>
  (DeclStmt 0x9e38fc8 <line:378:2, col:16>
    0x9e38f90 "int_type __ret")
  (IfStmt 0x9e393d8 <line:379:2, line:385:28>
    <<<NULL>>>
    (CallExpr 0x9e39140 <line:379:6, col:57> '<dependent type>'
      (DeclRefExpr 0x9e38fd8 <col:6> 'long (long, long)' lvalue Function 0x9d45c10 '__builtin_expect' 'long (long, long)')
      (CXXOperatorCallExpr 0x9e39108 <col:23, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x9e390c0 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bac3c0 0x9bc2c90 0x9bc5590 0x9d61190 0x9d616c0 0x9d61bf0)
        (CallExpr 0x9e39038 <col:23, col:35> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9e39000 <col:23, col:29> '<dependent type>' lvalue
            (CXXThisExpr 0x9e38ff0 <col:23> 'basic_streambuf<_CharT, _Traits> *' this)))
        (CallExpr 0x9e390a0 <col:39, col:50> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9e39068 <col:39, col:45> '<dependent type>' lvalue
            (CXXThisExpr 0x9e39058 <col:39> 'basic_streambuf<_CharT, _Traits> *' this))))
      (CXXBoolLiteralExpr 0x9e39130 <col:53> '_Bool' true))
    (CompoundStmt 0x9e39328 <line:380:4, line:383:4>
      (CallExpr 0x9e391e0 <line:381:6, col:20> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e39178 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0x9e39168 <col:6> 'basic_streambuf<_CharT, _Traits> *' this))
        (UnaryOperator 0x9e391c8 <col:18, col:19> 'int' prefix '-'
          (IntegerLiteral 0x9e391b0 <col:19> 'int' 1)))
      (BinaryOperator 0x9e39310 <line:382:6, col:52> '<dependent type>' '='
        (DeclRefExpr 0x9e39200 <col:6> 'int_type':'typename traits_type::int_type' lvalue Var 0x9e38f90 '__ret' 'int_type':'typename traits_type::int_type')
        (CallExpr 0x9e392f0 <col:14, col:52> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9e39238 <col:14, col:27> '<dependent type>' lvalue)
          (UnaryOperator 0x9e392d8 <col:39, col:51> '<dependent type>' prefix '*'
            (CallExpr 0x9e392b8 <col:40, col:51> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9e39280 <col:40, col:46> '<dependent type>' lvalue
                (CXXThisExpr 0x9e39270 <col:40> 'basic_streambuf<_CharT, _Traits> *' this)))))))
    (BinaryOperator 0x9e393c0 <line:385:4, col:28> '<dependent type>' '='
      (DeclRefExpr 0x9e39340 <col:4> 'int_type':'typename traits_type::int_type' lvalue Var 0x9e38f90 '__ret' 'int_type':'typename traits_type::int_type')
      (CallExpr 0x9e393a0 <col:12, col:28> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e39368 <col:12, col:18> '<dependent type>' lvalue
          (CXXThisExpr 0x9e39358 <col:12> 'basic_streambuf<_CharT, _Traits> *' this)))))
  (ReturnStmt 0x9e39410 <line:386:2, col:9>
    (DeclRefExpr 0x9e393f4 <col:9> 'int_type':'typename traits_type::int_type' lvalue Var 0x9e38f90 '__ret' 'int_type':'typename traits_type::int_type')))


        int_type sputc(char_type __c) (CompoundStmt 0x9e399a8 </usr/include/c++/4.6/streambuf:404:7, line:415:7>
  (DeclStmt 0x9e39488 <line:405:2, col:16>
    0x9e39450 "int_type __ret")
  (IfStmt 0x9e39960 <line:406:2, line:413:56>
    <<<NULL>>>
    (CallExpr 0x9e39600 <line:406:6, col:57> '<dependent type>'
      (DeclRefExpr 0x9e39498 <col:6> 'long (long, long)' lvalue Function 0x9d45c10 '__builtin_expect' 'long (long, long)')
      (CXXOperatorCallExpr 0x9e395c8 <col:23, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x9e39580 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bac3c0 0x9bc2c90 0x9bc5590 0x9d61190 0x9d616c0 0x9d61bf0)
        (CallExpr 0x9e394f8 <col:23, col:34> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9e394c0 <col:23, col:29> '<dependent type>' lvalue
            (CXXThisExpr 0x9e394b0 <col:23> 'basic_streambuf<_CharT, _Traits> *' this)))
        (CallExpr 0x9e39560 <col:38, col:50> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9e39528 <col:38, col:44> '<dependent type>' lvalue
            (CXXThisExpr 0x9e39518 <col:38> 'basic_streambuf<_CharT, _Traits> *' this))))
      (CXXBoolLiteralExpr 0x9e395f0 <col:53> '_Bool' true))
    (CompoundStmt 0x9e39818 <line:407:4, line:411:4>
      (BinaryOperator 0x9e396c0 <line:408:6, col:22> '<dependent type>' '='
        (UnaryOperator 0x9e39690 <col:6, col:18> '<dependent type>' prefix '*'
          (CallExpr 0x9e39670 <col:7, col:18> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9e39638 <col:7, col:13> '<dependent type>' lvalue
              (CXXThisExpr 0x9e39628 <col:7> 'basic_streambuf<_CharT, _Traits> *' this))))
        (DeclRefExpr 0x9e396a4 <col:22> 'char_type':'_CharT' lvalue ParmVar 0x9c88e20 '__c' 'char_type':'_CharT'))
      (CallExpr 0x9e39738 <line:409:6, col:19> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e396e8 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0x9e396d8 <col:6> 'basic_streambuf<_CharT, _Traits> *' this))
        (IntegerLiteral 0x9e39720 <col:18> 'int' 1))
      (BinaryOperator 0x9e39800 <line:410:6, col:42> '<dependent type>' '='
        (DeclRefExpr 0x9e39758 <col:6> 'int_type':'typename traits_type::int_type' lvalue Var 0x9e39450 '__ret' 'int_type':'typename traits_type::int_type')
        (CallExpr 0x9e397e0 <col:14, col:42> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9e39790 <col:14, col:27> '<dependent type>' lvalue)
          (DeclRefExpr 0x9e397c4 <col:39> 'char_type':'_CharT' lvalue ParmVar 0x9c88e20 '__c' 'char_type':'_CharT'))))
    (BinaryOperator 0x9e39948 <line:413:4, col:56> '<dependent type>' '='
      (DeclRefExpr 0x9e39834 <col:4> 'int_type':'typename traits_type::int_type' lvalue Var 0x9e39450 '__ret' 'int_type':'typename traits_type::int_type')
      (CallExpr 0x9e39928 <col:12, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e39860 <col:12, col:18> '<dependent type>' lvalue
          (CXXThisExpr 0x9e39850 <col:12> 'basic_streambuf<_CharT, _Traits> *' this))
        (CallExpr 0x9e39908 <col:27, col:55> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9e398b8 <col:27, col:40> '<dependent type>' lvalue)
          (DeclRefExpr 0x9e398ec <col:52> 'char_type':'_CharT' lvalue ParmVar 0x9c88e20 '__c' 'char_type':'_CharT')))))
  (ReturnStmt 0x9e39998 <line:414:2, col:9>
    (DeclRefExpr 0x9e3997c <col:9> 'int_type':'typename traits_type::int_type' lvalue Var 0x9e39450 '__ret' 'int_type':'typename traits_type::int_type')))


        streamsize sputn(const char_type *__s, streamsize __n) (CompoundStmt 0x9e39a78 </usr/include/c++/4.6/streambuf:430:7, col:40>
  (ReturnStmt 0x9e39a68 <col:9, col:37>
    (CallExpr 0x9e39a40 <col:16, col:37> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e399d8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9e399c8 <col:16> 'basic_streambuf<_CharT, _Traits> *' this))
      (DeclRefExpr 0x9e39a0c <col:29> 'const char_type *' lvalue ParmVar 0x9c88f10 '__s' 'const char_type *')
      (DeclRefExpr 0x9e39a24 <col:34> 'streamsize':'int' lvalue ParmVar 0x9c88f50 '__n' 'streamsize':'int'))))


    protected:
    protected:
        basic_streambuf<_CharT, _Traits>() : _M_in_beg((IntegerLiteral 0x9e39a90 </usr/include/c++/4.6/streambuf:443:19> 'int' 0)
), _M_in_cur((IntegerLiteral 0x9e39ae8 </usr/include/c++/4.6/streambuf:443:33> 'int' 0)
), _M_in_end((IntegerLiteral 0x9e39b38 </usr/include/c++/4.6/streambuf:443:47> 'int' 0)
), _M_out_beg((IntegerLiteral 0x9e39b88 </usr/include/c++/4.6/streambuf:444:18> 'int' 0)
), _M_out_cur((IntegerLiteral 0x9e39bd8 </usr/include/c++/4.6/streambuf:444:33> 'int' 0)
), _M_out_end((IntegerLiteral 0x9e39c28 </usr/include/c++/4.6/streambuf:444:48> 'int' 0)
), _M_buf_locale((CXXBindTemporaryExpr 0x9e39cb8 </usr/include/c++/4.6/streambuf:445:21, col:28> 'class std::locale' (CXXTemporary 0x9e39cb0)
  (CXXTemporaryObjectExpr 0x9e39c80 <col:21, col:28> 'class std::locale''void (void) throw()'))
) (CompoundStmt 0x9e39d88 </usr/include/c++/4.6/streambuf:446:7, col:9>)


        char_type *eback() const (CompoundStmt 0x9e39dd8 </usr/include/c++/4.6/streambuf:461:21, col:41>
  (ReturnStmt 0x9e39dc8 <col:23, col:30>
    (MemberExpr 0x9e39da8 <col:30> 'char_type *const' lvalue ->_M_in_beg 0x9c87f30
      (CXXThisExpr 0x9e39d98 <col:30> 'const basic_streambuf<_CharT, _Traits> *' this))))


        char_type *gptr() const (CompoundStmt 0x9e39e30 </usr/include/c++/4.6/streambuf:464:21, col:42>
  (ReturnStmt 0x9e39e20 <col:23, col:30>
    (MemberExpr 0x9e39e00 <col:30> 'char_type *const' lvalue ->_M_in_cur 0x9c87f70
      (CXXThisExpr 0x9e39df0 <col:30> 'const basic_streambuf<_CharT, _Traits> *' this))))


        char_type *egptr() const (CompoundStmt 0x9e39e88 </usr/include/c++/4.6/streambuf:467:21, col:41>
  (ReturnStmt 0x9e39e78 <col:23, col:30>
    (MemberExpr 0x9e39e58 <col:30> 'char_type *const' lvalue ->_M_in_end 0x9c87fb0
      (CXXThisExpr 0x9e39e48 <col:30> 'const basic_streambuf<_CharT, _Traits> *' this))))


        void gbump(int __n) (CompoundStmt 0x9e39f08 </usr/include/c++/4.6/streambuf:477:22, col:42>
  (CompoundAssignOperator 0x9e39ee8 <col:24, col:37> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (MemberExpr 0x9e39eb0 <col:24> 'char_type *' lvalue ->_M_in_cur 0x9c87f70
      (CXXThisExpr 0x9e39ea0 <col:24> 'basic_streambuf<_CharT, _Traits> *' this))
    (DeclRefExpr 0x9e39ed0 <col:37> 'int' lvalue ParmVar 0x9c892e0 '__n' 'int')))


        void setg(char_type *__gbeg, char_type *__gnext, char_type *__gend) (CompoundStmt 0x9e3a040 </usr/include/c++/4.6/streambuf:489:7, line:493:7>
  (BinaryOperator 0x9e39f68 <line:490:2, col:14> '<dependent type>' '='
    (MemberExpr 0x9e39f30 <col:2> 'char_type *' lvalue ->_M_in_beg 0x9c87f30
      (CXXThisExpr 0x9e39f20 <col:2> 'basic_streambuf<_CharT, _Traits> *' this))
    (DeclRefExpr 0x9e39f50 <col:14> 'char_type *' lvalue ParmVar 0x9c893b0 '__gbeg' 'char_type *'))
  (BinaryOperator 0x9e39fc8 <line:491:2, col:14> '<dependent type>' '='
    (MemberExpr 0x9e39f90 <col:2> 'char_type *' lvalue ->_M_in_cur 0x9c87f70
      (CXXThisExpr 0x9e39f80 <col:2> 'basic_streambuf<_CharT, _Traits> *' this))
    (DeclRefExpr 0x9e39fb0 <col:14> 'char_type *' lvalue ParmVar 0x9c89400 '__gnext' 'char_type *'))
  (BinaryOperator 0x9e3a028 <line:492:2, col:14> '<dependent type>' '='
    (MemberExpr 0x9e39ff0 <col:2> 'char_type *' lvalue ->_M_in_end 0x9c87fb0
      (CXXThisExpr 0x9e39fe0 <col:2> 'basic_streambuf<_CharT, _Traits> *' this))
    (DeclRefExpr 0x9e3a010 <col:14> 'char_type *' lvalue ParmVar 0x9c89450 '__gend' 'char_type *')))


        char_type *pbase() const (CompoundStmt 0x9e3a0a0 </usr/include/c++/4.6/streambuf:508:21, col:42>
  (ReturnStmt 0x9e3a090 <col:23, col:30>
    (MemberExpr 0x9e3a070 <col:30> 'char_type *const' lvalue ->_M_out_beg 0x9c87ff0
      (CXXThisExpr 0x9e3a060 <col:30> 'const basic_streambuf<_CharT, _Traits> *' this))))


        char_type *pptr() const (CompoundStmt 0x9e3a0f8 </usr/include/c++/4.6/streambuf:511:20, col:41>
  (ReturnStmt 0x9e3a0e8 <col:22, col:29>
    (MemberExpr 0x9e3a0c8 <col:29> 'char_type *const' lvalue ->_M_out_cur 0x9c88030
      (CXXThisExpr 0x9e3a0b8 <col:29> 'const basic_streambuf<_CharT, _Traits> *' this))))


        char_type *epptr() const (CompoundStmt 0x9e3a150 </usr/include/c++/4.6/streambuf:514:21, col:42>
  (ReturnStmt 0x9e3a140 <col:23, col:30>
    (MemberExpr 0x9e3a120 <col:30> 'char_type *const' lvalue ->_M_out_end 0x9c88070
      (CXXThisExpr 0x9e3a110 <col:30> 'const basic_streambuf<_CharT, _Traits> *' this))))


        void pbump(int __n) (CompoundStmt 0x9e3a1d0 </usr/include/c++/4.6/streambuf:524:22, col:43>
  (CompoundAssignOperator 0x9e3a1b0 <col:24, col:38> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (MemberExpr 0x9e3a178 <col:24> 'char_type *' lvalue ->_M_out_cur 0x9c88030
      (CXXThisExpr 0x9e3a168 <col:24> 'basic_streambuf<_CharT, _Traits> *' this))
    (DeclRefExpr 0x9e3a198 <col:38> 'int' lvalue ParmVar 0x9c896e0 '__n' 'int')))


        void setp(char_type *__pbeg, char_type *__pend) (CompoundStmt 0x9e3a2f0 </usr/include/c++/4.6/streambuf:535:7, line:538:7>
  (BinaryOperator 0x9e3a278 <line:536:2, col:28> '<dependent type>' '='
    (MemberExpr 0x9e3a1f8 <col:2> 'char_type *' lvalue ->_M_out_beg 0x9c87ff0
      (CXXThisExpr 0x9e3a1e8 <col:2> 'basic_streambuf<_CharT, _Traits> *' this))
    (BinaryOperator 0x9e3a260 <col:15, col:28> '<dependent type>' '='
      (MemberExpr 0x9e3a228 <col:15> 'char_type *' lvalue ->_M_out_cur 0x9c88030
        (CXXThisExpr 0x9e3a218 <col:15> 'basic_streambuf<_CharT, _Traits> *' this))
      (DeclRefExpr 0x9e3a248 <col:28> 'char_type *' lvalue ParmVar 0x9c897b0 '__pbeg' 'char_type *')))
  (BinaryOperator 0x9e3a2d8 <line:537:2, col:15> '<dependent type>' '='
    (MemberExpr 0x9e3a2a0 <col:2> 'char_type *' lvalue ->_M_out_end 0x9c88070
      (CXXThisExpr 0x9e3a290 <col:2> 'basic_streambuf<_CharT, _Traits> *' this))
    (DeclRefExpr 0x9e3a2c0 <col:15> 'char_type *' lvalue ParmVar 0x9c89800 '__pend' 'char_type *')))


        virtual void imbue(const std::locale &) (CompoundStmt 0x9e3a308 </usr/include/c++/4.6/streambuf:556:7, col:9>)


        virtual basic_streambuf<char_type, _Traits> *setbuf(char_type *, streamsize) (CompoundStmt 0x9e3a338 </usr/include/c++/4.6/streambuf:571:7, col:22>
  (ReturnStmt 0x9e3a328 <col:9, col:16>
    (CXXThisExpr 0x9e3a318 <col:16> 'basic_streambuf<_CharT, _Traits> *' this)))


        virtual pos_type seekoff(off_type, ios_base::seekdir, ios_base::openmode = (CXXOperatorCallExpr 0x9c8ad70 </usr/include/c++/4.6/streambuf:582:40, col:65> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0x9c8ad60 <col:53, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0x9c8ad48 <col:53, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9e0bfe0 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0x9c8ad28 <col:40, col:50> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x9c8acc4 <col:40, col:50> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9e11680 'in' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0x9c8ad38 <col:55, col:65> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x9c8ad04 <col:55, col:65> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9e116e0 'out' 'const openmode':'const enum std::_Ios_Openmode')))
) (CompoundStmt 0x9e3a3e0 </usr/include/c++/4.6/streambuf:583:7, col:40>
  (ReturnStmt 0x9e3a3d0 <col:9, col:37>
    (CXXUnresolvedConstructExpr 0x9e3a3b0 <col:16, col:37> 'pos_type':'typename traits_type::pos_type'
      (CXXUnresolvedConstructExpr 0x9e3a390 <col:25, col:36> 'off_type':'typename traits_type::off_type'
        (UnaryOperator 0x9e3a378 <col:34, col:35> 'int' prefix '-'
          (IntegerLiteral 0x9e3a360 <col:35> 'int' 1))))))


        virtual pos_type seekpos(pos_type, ios_base::openmode = (CXXOperatorCallExpr 0x9c8ae60 </usr/include/c++/4.6/streambuf:594:40, col:65> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0x9c8ae50 <col:53, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0x9c8ae38 <col:53, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9e0bfe0 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0x9c8ae18 <col:40, col:50> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x9c8adb4 <col:40, col:50> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9e11680 'in' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0x9c8ae28 <col:55, col:65> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x9c8adf4 <col:55, col:65> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9e116e0 'out' 'const openmode':'const enum std::_Ios_Openmode')))
) (CompoundStmt 0x9e3a488 </usr/include/c++/4.6/streambuf:595:7, col:40>
  (ReturnStmt 0x9e3a478 <col:9, col:37>
    (CXXUnresolvedConstructExpr 0x9e3a458 <col:16, col:37> 'pos_type':'typename traits_type::pos_type'
      (CXXUnresolvedConstructExpr 0x9e3a438 <col:25, col:36> 'off_type':'typename traits_type::off_type'
        (UnaryOperator 0x9e3a420 <col:34, col:35> 'int' prefix '-'
          (IntegerLiteral 0x9e3a408 <col:35> 'int' 1))))))


        virtual int sync() (CompoundStmt 0x9e3a4c8 </usr/include/c++/4.6/streambuf:606:14, col:26>
  (ReturnStmt 0x9e3a4b8 <col:16, col:23>
    (IntegerLiteral 0x9e3a4a0 <col:23> 'int' 0)))


        virtual streamsize showmanyc() (CompoundStmt 0x9e3a508 </usr/include/c++/4.6/streambuf:628:19, col:31>
  (ReturnStmt 0x9e3a4f8 <col:21, col:28>
    (IntegerLiteral 0x9e3a4e0 <col:28> 'int' 0)))


        virtual streamsize xsgetn(char_type *__s, streamsize __n);
        virtual int_type underflow() (CompoundStmt 0x9e3a5a8 </usr/include/c++/4.6/streambuf:667:7, col:36>
  (ReturnStmt 0x9e3a598 <col:9, col:33>
    (CallExpr 0x9e3a578 <col:16, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e3a540 <col:16, col:29> '<dependent type>' lvalue))))


        virtual int_type uflow() (CompoundStmt 0x9e3aa30 </usr/include/c++/4.6/streambuf:680:7, line:690:7>
  (DeclStmt 0x9e3a680 <line:681:2, col:37>
    0x9e3a5d0 "int_type __ret =
      (CallExpr 0x9e3a660 <col:19, col:36> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e3a628 <col:19, col:32> '<dependent type>' lvalue))")
  (DeclStmt 0x9e3a7d8 <line:682:2, line:683:14>
    0x9e3a6a0 "const bool __testeof =
      (CallExpr 0x9e3a7b0 <line:682:25, line:683:13> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e3a6f8 <line:682:25, col:38> '<dependent type>' lvalue)
        (CallExpr 0x9e3a778 <col:50, col:66> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9e3a740 <col:50, col:56> '<dependent type>' lvalue
            (CXXThisExpr 0x9e3a730 <col:50> 'basic_streambuf<_CharT, _Traits> *' this)))
        (DeclRefExpr 0x9e3a794 <line:683:8> 'int_type':'typename traits_type::int_type' lvalue Var 0x9e3a5d0 '__ret' 'int_type':'typename traits_type::int_type'))")
  (IfStmt 0x9e3a9e8 <line:684:2, line:688:4>
    <<<NULL>>>
    (UnaryOperator 0x9e3a810 <line:684:6, col:7> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9e3a800 <col:7> '_Bool' <LValueToRValue>
        (DeclRefExpr 0x9e3a7e8 <col:7> 'const _Bool' lvalue Var 0x9e3a6a0 '__testeof' 'const _Bool')))
    (CompoundStmt 0x9e3a9d0 <line:685:4, line:688:4>
      (BinaryOperator 0x9e3a938 <line:686:6, col:52> '<dependent type>' '='
        (DeclRefExpr 0x9e3a824 <col:6> 'int_type':'typename traits_type::int_type' lvalue Var 0x9e3a5d0 '__ret' 'int_type':'typename traits_type::int_type')
        (CallExpr 0x9e3a918 <col:14, col:52> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9e3a860 <col:14, col:27> '<dependent type>' lvalue)
          (UnaryOperator 0x9e3a900 <col:39, col:51> '<dependent type>' prefix '*'
            (CallExpr 0x9e3a8e0 <col:40, col:51> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9e3a8a8 <col:40, col:46> '<dependent type>' lvalue
                (CXXThisExpr 0x9e3a898 <col:40> 'basic_streambuf<_CharT, _Traits> *' this))))))
      (CallExpr 0x9e3a9b0 <line:687:6, col:19> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e3a960 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0x9e3a950 <col:6> 'basic_streambuf<_CharT, _Traits> *' this))
        (IntegerLiteral 0x9e3a998 <col:18> 'int' 1)))
    <<<NULL>>>)
  (ReturnStmt 0x9e3aa20 <line:689:2, col:9>
    (DeclRefExpr 0x9e3aa04 <col:9> 'int_type':'typename traits_type::int_type' lvalue Var 0x9e3a5d0 '__ret' 'int_type':'typename traits_type::int_type')))


        virtual int_type pbackfail(int_type = (CallExpr 0x9e372c8 </usr/include/c++/4.6/streambuf:703:39, col:56> '<dependent type>'
  (DependentScopeDeclRefExpr 0x9e372a0 <col:39, col:52> '<dependent type>' lvalue))
) (CompoundStmt 0x9e3aad8 </usr/include/c++/4.6/streambuf:704:7, col:36>
  (ReturnStmt 0x9e3aac8 <col:9, col:33>
    (CallExpr 0x9e3aaa8 <col:16, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e3aa70 <col:16, col:29> '<dependent type>' lvalue))))


        virtual streamsize xsputn(const char_type *__s, streamsize __n);
        virtual int_type overflow(int_type = (CallExpr 0x9e37330 </usr/include/c++/4.6/streambuf:747:37, col:54> '<dependent type>'
  (DependentScopeDeclRefExpr 0x9e37308 <col:37, col:50> '<dependent type>' lvalue))
) (CompoundStmt 0x9e3ab78 </usr/include/c++/4.6/streambuf:748:7, col:36>
  (ReturnStmt 0x9e3ab68 <col:9, col:33>
    (CallExpr 0x9e3ab48 <col:16, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e3ab10 <col:16, col:29> '<dependent type>' lvalue))))


    public:
    public:
        void stossc() (CompoundStmt 0x9e3add8 </usr/include/c++/4.6/streambuf:763:7, line:768:7>
  (IfStmt 0x9e3adb8 <line:764:2, line:767:16>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9e3aca8 <line:764:6, col:33> '<dependent type>'
      (UnresolvedLookupExpr 0x9e3ac60 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bac3c0 0x9bc2c90 0x9bc5590 0x9d61190 0x9d616c0 0x9d61bf0)
      (CallExpr 0x9e3abd8 <col:6, col:17> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e3aba0 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0x9e3ab90 <col:6> 'basic_streambuf<_CharT, _Traits> *' this)))
      (CallExpr 0x9e3ac40 <col:21, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e3ac08 <col:21, col:27> '<dependent type>' lvalue
          (CXXThisExpr 0x9e3abf8 <col:21> 'basic_streambuf<_CharT, _Traits> *' this))))
    (CallExpr 0x9e3ad30 <line:765:4, col:17> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e3ace0 <col:4, col:10> '<dependent type>' lvalue
        (CXXThisExpr 0x9e3acd0 <col:4> 'basic_streambuf<_CharT, _Traits> *' this))
      (IntegerLiteral 0x9e3ad18 <col:16> 'int' 1))
    (CallExpr 0x9e3ad98 <line:767:4, col:16> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e3ad60 <col:4, col:10> '<dependent type>' lvalue
        (CXXThisExpr 0x9e3ad50 <col:4> 'basic_streambuf<_CharT, _Traits> *' this)))))


        void __safe_gbump(streamsize __n) (CompoundStmt 0x9e3ae58 </usr/include/c++/4.6/streambuf:773:36, col:56>
  (CompoundAssignOperator 0x9e3ae38 <col:38, col:51> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (MemberExpr 0x9e3ae00 <col:38> 'char_type *' lvalue ->_M_in_cur 0x9c87f70
      (CXXThisExpr 0x9e3adf0 <col:38> 'basic_streambuf<_CharT, _Traits> *' this))
    (DeclRefExpr 0x9e3ae20 <col:51> 'streamsize':'int' lvalue ParmVar 0x9c8a620 '__n' 'streamsize':'int')))


        void __safe_pbump(streamsize __n) (CompoundStmt 0x9e3aed8 </usr/include/c++/4.6/streambuf:776:36, col:57>
  (CompoundAssignOperator 0x9e3aeb8 <col:38, col:52> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (MemberExpr 0x9e3ae80 <col:38> 'char_type *' lvalue ->_M_out_cur 0x9c88030
      (CXXThisExpr 0x9e3ae70 <col:38> 'basic_streambuf<_CharT, _Traits> *' this))
    (DeclRefExpr 0x9e3aea0 <col:52> 'streamsize':'int' lvalue ParmVar 0x9c8a710 '__n' 'streamsize':'int')))


    private:
    private:
        basic_streambuf<_CharT, _Traits>(const __streambuf_type &__sb) : _M_in_beg((CXXDependentScopeMemberExpr 0x9e3af08 </usr/include/c++/4.6/streambuf:782:19, col:24> '<dependent type>' lvalue
  (DeclRefExpr 0x9e3aeec <col:19> 'const __streambuf_type':'const basic_streambuf<_CharT, _Traits>' lvalue ParmVar 0x9c8a860 '__sb' 'const __streambuf_type &'))
), _M_in_cur((CXXDependentScopeMemberExpr 0x9e3af90 </usr/include/c++/4.6/streambuf:782:46, col:51> '<dependent type>' lvalue
  (DeclRefExpr 0x9e3af78 <col:46> 'const __streambuf_type':'const basic_streambuf<_CharT, _Traits>' lvalue ParmVar 0x9c8a860 '__sb' 'const __streambuf_type &'))
), _M_in_end((CXXDependentScopeMemberExpr 0x9e3b020 </usr/include/c++/4.6/streambuf:783:17, col:22> '<dependent type>' lvalue
  (DeclRefExpr 0x9e3b008 <col:17> 'const __streambuf_type':'const basic_streambuf<_CharT, _Traits>' lvalue ParmVar 0x9c8a860 '__sb' 'const __streambuf_type &'))
), _M_out_beg((CXXDependentScopeMemberExpr 0x9e3b0b0 </usr/include/c++/4.6/streambuf:783:45, col:50> '<dependent type>' lvalue
  (DeclRefExpr 0x9e3b098 <col:45> 'const __streambuf_type':'const basic_streambuf<_CharT, _Traits>' lvalue ParmVar 0x9c8a860 '__sb' 'const __streambuf_type &'))
), _M_out_cur((CXXDependentScopeMemberExpr 0x9e3b140 </usr/include/c++/4.6/streambuf:784:18, col:23> '<dependent type>' lvalue
  (DeclRefExpr 0x9e3b128 <col:18> 'const __streambuf_type':'const basic_streambuf<_CharT, _Traits>' lvalue ParmVar 0x9c8a860 '__sb' 'const __streambuf_type &'))
), _M_out_end((CXXDependentScopeMemberExpr 0x9e3b1d0 </usr/include/c++/4.6/streambuf:784:47, col:52> '<dependent type>' lvalue
  (DeclRefExpr 0x9e3b1b8 <col:47> 'const __streambuf_type':'const basic_streambuf<_CharT, _Traits>' lvalue ParmVar 0x9c8a860 '__sb' 'const __streambuf_type &'))
), _M_buf_locale((CXXDependentScopeMemberExpr 0x9e3b260 </usr/include/c++/4.6/streambuf:785:21, col:26> '<dependent type>' lvalue
  (DeclRefExpr 0x9e3b248 <col:21> 'const __streambuf_type':'const basic_streambuf<_CharT, _Traits>' lvalue ParmVar 0x9c8a860 '__sb' 'const __streambuf_type &'))
) (CompoundStmt 0x9e3d948 </usr/include/c++/4.6/streambuf:786:7, col:9>)


        __streambuf_type &operator=(const __streambuf_type &) (CompoundStmt 0x9e3d990 </usr/include/c++/4.6/streambuf:789:42, col:58>
  (ReturnStmt 0x9e3d980 <col:44, col:52>
    (UnaryOperator 0x9e3d968 <col:51, col:52> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9e3d958 <col:52> 'basic_streambuf<_CharT, _Traits> *' this))))


    };
    streamsize __copy_streambufs_eof(basic_streambuf<char> *__sbin, basic_streambuf<char> *__sbout, bool &__ineof);
    streamsize __copy_streambufs_eof(basic_streambuf<wchar_t> *__sbin, basic_streambuf<wchar_t> *__sbout, bool &__ineof);
}
namespace std {
    streamsize xsgetn(char_type *__s, streamsize __n) (CompoundStmt 0x9e3fc78 </usr/include/c++/4.6/bits/streambuf.tcc:47:5, line:75:5>
  (DeclStmt 0x9e3ee70 <line:48:7, col:27>
    0x9e3ee20 "streamsize __ret =
      (IntegerLiteral 0x9e3ee58 <col:26> 'int' 0)")
  (WhileStmt 0x9e3fc28 <line:49:7, line:73:2>
    <<<NULL>>>
    (BinaryOperator 0x9e3eed0 <line:49:14, col:22> '_Bool' '<'
      (ImplicitCastExpr 0x9e3eeb0 <col:14> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0x9e3ee80 <col:14> 'streamsize':'int' lvalue Var 0x9e3ee20 '__ret' 'streamsize':'int'))
      (ImplicitCastExpr 0x9e3eec0 <col:22> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0x9e3ee98 <col:22> 'streamsize':'int' lvalue ParmVar 0x9e3ed20 '__n' 'streamsize':'int')))
    (CompoundStmt 0x9e3fc08 <line:50:2, line:73:2>
      (DeclStmt 0x9e3f058 <line:51:4, col:61>
        0x9e3eef0 "const streamsize __buf_len =
          (CXXOperatorCallExpr 0x9e3f030 <col:33, col:60> '<dependent type>'
            (UnresolvedLookupExpr 0x9e3eff8 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
            (CallExpr 0x9e3ef70 <col:33, col:45> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9e3ef38 <col:33, col:39> '<dependent type>' lvalue
                (CXXThisExpr 0x9e3ef28 <col:33> 'basic_streambuf<_CharT, _Traits> *' this)))
            (CallExpr 0x9e3efd8 <col:49, col:60> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9e3efa0 <col:49, col:55> '<dependent type>' lvalue
                (CXXThisExpr 0x9e3ef90 <col:49> 'basic_streambuf<_CharT, _Traits> *' this))))")
      (IfStmt 0x9e3f778 <line:52:4, line:60:6>
        <<<NULL>>>
        (ImplicitCastExpr 0x9e3f090 <line:52:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0x9e3f080 <col:8> 'streamsize':'int' <LValueToRValue>
            (DeclRefExpr 0x9e3f068 <col:8> 'const streamsize':'const int' lvalue Var 0x9e3eef0 '__buf_len' 'const streamsize':'const int')))
        (CompoundStmt 0x9e3f750 <line:53:6, line:60:6>
          (DeclStmt 0x9e3f150 <line:54:8, col:50>
            0x9e3f0b0 "const streamsize __remaining =
              (BinaryOperator 0x9e3f138 <col:39, col:45> 'int' '-'
                (ImplicitCastExpr 0x9e3f118 <col:39> 'streamsize':'int' <LValueToRValue>
                  (DeclRefExpr 0x9e3f0e4 <col:39> 'streamsize':'int' lvalue ParmVar 0x9e3ed20 '__n' 'streamsize':'int'))
                (ImplicitCastExpr 0x9e3f128 <col:45> 'streamsize':'int' <LValueToRValue>
                  (DeclRefExpr 0x9e3f0fc <col:45> 'streamsize':'int' lvalue Var 0x9e3ee20 '__ret' 'streamsize':'int')))")
          (DeclStmt 0x9e3f4f0 <line:55:8, col:65>
            0x9e3f170 "const streamsize __len =
              (ImplicitCastExpr 0x9e3f4e0 <col:33, col:64> 'int':'int' <LValueToRValue>
                (CallExpr 0x9e3f4b8 <col:33, col:64> 'const int':'const int' lvalue
                  (ImplicitCastExpr 0x9e3f4a8 <col:33, col:38> 'const int &(*)(const int &, const int &)' <FunctionToPointerDecay>
                    (DeclRefExpr 0x9e3f448 <col:33, col:38> 'const int &(const int &, const int &)' lvalue Function 0x9e3f3a0 'min' 'const int &(const int &, const int &)' (FunctionTemplate 0x9bdffa0 'min')))
                  (DeclRefExpr 0x9e3f200 <col:42> 'const streamsize':'const int' lvalue Var 0x9e3eef0 '__buf_len' 'const streamsize':'const int')
                  (DeclRefExpr 0x9e3f218 <col:53> 'const streamsize':'const int' lvalue Var 0x9e3f0b0 '__remaining' 'const streamsize':'const int')))")
          (CallExpr 0x9e3f5f8 <line:56:8, col:50> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9e3f528 <col:8, col:21> '<dependent type>' lvalue)
            (DeclRefExpr 0x9e3f55c <col:26> 'char_type *' lvalue ParmVar 0x9e3ece0 '__s' 'char_type *')
            (CallExpr 0x9e3f5c0 <col:31, col:42> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9e3f588 <col:31, col:37> '<dependent type>' lvalue
                (CXXThisExpr 0x9e3f578 <col:31> 'basic_streambuf<_CharT, _Traits> *' this)))
            (DeclRefExpr 0x9e3f5dc <col:45> 'const streamsize':'const int' lvalue Var 0x9e3f170 '__len' 'const streamsize':'const int'))
          (CompoundAssignOperator 0x9e3f660 <line:57:8, col:17> 'streamsize':'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
            (DeclRefExpr 0x9e3f620 <col:8> 'streamsize':'int' lvalue Var 0x9e3ee20 '__ret' 'streamsize':'int')
            (ImplicitCastExpr 0x9e3f650 <col:17> 'streamsize':'int' <LValueToRValue>
              (DeclRefExpr 0x9e3f638 <col:17> 'const streamsize':'const int' lvalue Var 0x9e3f170 '__len' 'const streamsize':'const int')))
          (CompoundAssignOperator 0x9e3f6b0 <line:58:8, col:15> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
            (DeclRefExpr 0x9e3f680 <col:8> 'char_type *' lvalue ParmVar 0x9e3ece0 '__s' 'char_type *')
            (DeclRefExpr 0x9e3f698 <col:15> 'const streamsize':'const int' lvalue Var 0x9e3f170 '__len' 'const streamsize':'const int'))
          (CallExpr 0x9e3f730 <line:59:8, col:32> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9e3f6e0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9e3f6d0 <col:8> 'basic_streambuf<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9e3f714 <col:27> 'const streamsize':'const int' lvalue Var 0x9e3f170 '__len' 'const streamsize':'const int')))
        <<<NULL>>>)
      (IfStmt 0x9e3fbe8 <line:62:4, line:72:6>
        <<<NULL>>>
        (BinaryOperator 0x9e3f7e8 <line:62:8, col:16> '_Bool' '<'
          (ImplicitCastExpr 0x9e3f7c8 <col:8> 'streamsize':'int' <LValueToRValue>
            (DeclRefExpr 0x9e3f794 <col:8> 'streamsize':'int' lvalue Var 0x9e3ee20 '__ret' 'streamsize':'int'))
          (ImplicitCastExpr 0x9e3f7d8 <col:16> 'streamsize':'int' <LValueToRValue>
            (DeclRefExpr 0x9e3f7ac <col:16> 'streamsize':'int' lvalue ParmVar 0x9e3ed20 '__n' 'streamsize':'int')))
        (CompoundStmt 0x9e3fbd0 <line:63:6, line:72:6>
          (DeclStmt 0x9e3f8b0 <line:64:8, col:42>
            0x9e3f810 "const int_type __c =
              (CallExpr 0x9e3f890 <col:29, col:41> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9e3f858 <col:29, col:35> '<dependent type>' lvalue
                  (CXXThisExpr 0x9e3f848 <col:29> 'basic_streambuf<_CharT, _Traits> *' this)))")
          (IfStmt 0x9e3fbb0 <line:65:8, line:71:3>
            <<<NULL>>>
            (UnaryOperator 0x9e3f9d0 <line:65:12, col:61> '<dependent type>' prefix '!'
              (CallExpr 0x9e3f9a8 <col:13, col:61> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9e3f8e0 <col:13, col:26> '<dependent type>' lvalue)
                (DeclRefExpr 0x9e3f914 <col:38> 'const int_type':'const typename traits_type::int_type' lvalue Var 0x9e3f810 '__c' 'const int_type':'const typename traits_type::int_type')
                (CallExpr 0x9e3f988 <col:43, col:60> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9e3f950 <col:43, col:56> '<dependent type>' lvalue))))
            (CompoundStmt 0x9e3fb90 <line:66:3, line:69:3>
              (CallExpr 0x9e3fb38 <line:67:5, col:63> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9e3fa10 <col:5, col:18> '<dependent type>' lvalue)
                (UnaryOperator 0x9e3fa90 <col:25, col:29> '<dependent type>' prefix '*'
                  (UnaryOperator 0x9e3fa78 <col:26, col:29> '<dependent type>' postfix '++'
                    (DeclRefExpr 0x9e3fa44 <col:26> 'char_type *' lvalue ParmVar 0x9e3ece0 '__s' 'char_type *')))
                (CallExpr 0x9e3fb18 <col:33, col:62> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9e3fac8 <col:33, col:46> '<dependent type>' lvalue)
                  (DeclRefExpr 0x9e3fafc <col:59> 'const int_type':'const typename traits_type::int_type' lvalue Var 0x9e3f810 '__c' 'const int_type':'const typename traits_type::int_type')))
              (UnaryOperator 0x9e3fb78 <line:68:5, col:7> 'streamsize':'int' lvalue prefix '++'
                (DeclRefExpr 0x9e3fb5c <col:7> 'streamsize':'int' lvalue Var 0x9e3ee20 '__ret' 'streamsize':'int')))
            (BreakStmt 0x9e3fba8 <line:71:3>)))
        <<<NULL>>>)))
  (ReturnStmt 0x9e3fc68 <line:74:7, col:14>
    (ImplicitCastExpr 0x9e3fc58 <col:14> 'streamsize':'int' <LValueToRValue>
      (DeclRefExpr 0x9e3fc3c <col:14> 'streamsize':'int' lvalue Var 0x9e3ee20 '__ret' 'streamsize':'int'))))


    streamsize xsputn(const char_type *__s, streamsize __n) (CompoundStmt 0x9e40c08 </usr/include/c++/4.6/bits/streambuf.tcc:81:5, line:109:5>
  (DeclStmt 0x9e400d0 <line:82:7, col:27>
    0x9e40080 "streamsize __ret =
      (IntegerLiteral 0x9e400b8 <col:26> 'int' 0)")
  (WhileStmt 0x9e40bb8 <line:83:7, line:107:2>
    <<<NULL>>>
    (BinaryOperator 0x9e40130 <line:83:14, col:22> '_Bool' '<'
      (ImplicitCastExpr 0x9e40110 <col:14> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0x9e400e0 <col:14> 'streamsize':'int' lvalue Var 0x9e40080 '__ret' 'streamsize':'int'))
      (ImplicitCastExpr 0x9e40120 <col:22> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0x9e400f8 <col:22> 'streamsize':'int' lvalue ParmVar 0x9e3ff80 '__n' 'streamsize':'int')))
    (CompoundStmt 0x9e40b98 <line:84:2, line:107:2>
      (DeclStmt 0x9e402b8 <line:85:4, col:61>
        0x9e40150 "const streamsize __buf_len =
          (CXXOperatorCallExpr 0x9e40290 <col:33, col:60> '<dependent type>'
            (UnresolvedLookupExpr 0x9e40258 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
            (CallExpr 0x9e401d0 <col:33, col:45> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9e40198 <col:33, col:39> '<dependent type>' lvalue
                (CXXThisExpr 0x9e40188 <col:33> 'basic_streambuf<_CharT, _Traits> *' this)))
            (CallExpr 0x9e40238 <col:49, col:60> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9e40200 <col:49, col:55> '<dependent type>' lvalue
                (CXXThisExpr 0x9e401f0 <col:49> 'basic_streambuf<_CharT, _Traits> *' this))))")
      (IfStmt 0x9e407b0 <line:86:4, line:94:6>
        <<<NULL>>>
        (ImplicitCastExpr 0x9e402f0 <line:86:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0x9e402e0 <col:8> 'streamsize':'int' <LValueToRValue>
            (DeclRefExpr 0x9e402c8 <col:8> 'const streamsize':'const int' lvalue Var 0x9e40150 '__buf_len' 'const streamsize':'const int')))
        (CompoundStmt 0x9e40788 <line:87:6, line:94:6>
          (DeclStmt 0x9e403b0 <line:88:8, col:50>
            0x9e40310 "const streamsize __remaining =
              (BinaryOperator 0x9e40398 <col:39, col:45> 'int' '-'
                (ImplicitCastExpr 0x9e40378 <col:39> 'streamsize':'int' <LValueToRValue>
                  (DeclRefExpr 0x9e40344 <col:39> 'streamsize':'int' lvalue ParmVar 0x9e3ff80 '__n' 'streamsize':'int'))
                (ImplicitCastExpr 0x9e40388 <col:45> 'streamsize':'int' <LValueToRValue>
                  (DeclRefExpr 0x9e4035c <col:45> 'streamsize':'int' lvalue Var 0x9e40080 '__ret' 'streamsize':'int')))")
          (DeclStmt 0x9e40528 <line:89:8, col:65>
            0x9e403d0 "const streamsize __len =
              (ImplicitCastExpr 0x9e40518 <col:33, col:64> 'int':'int' <LValueToRValue>
                (CallExpr 0x9e404f0 <col:33, col:64> 'const int':'const int' lvalue
                  (ImplicitCastExpr 0x9e404e0 <col:33, col:38> 'const int &(*)(const int &, const int &)' <FunctionToPointerDecay>
                    (DeclRefExpr 0x9e404b8 <col:33, col:38> 'const int &(const int &, const int &)' lvalue Function 0x9e3f3a0 'min' 'const int &(const int &, const int &)' (FunctionTemplate 0x9bdffa0 'min')))
                  (DeclRefExpr 0x9e40458 <col:42> 'const streamsize':'const int' lvalue Var 0x9e40150 '__buf_len' 'const streamsize':'const int')
                  (DeclRefExpr 0x9e40470 <col:53> 'const streamsize':'const int' lvalue Var 0x9e40310 '__remaining' 'const streamsize':'const int')))")
          (CallExpr 0x9e40630 <line:90:8, col:50> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9e40560 <col:8, col:21> '<dependent type>' lvalue)
            (CallExpr 0x9e405e0 <col:26, col:37> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9e405a8 <col:26, col:32> '<dependent type>' lvalue
                (CXXThisExpr 0x9e40598 <col:26> 'basic_streambuf<_CharT, _Traits> *' this)))
            (DeclRefExpr 0x9e405fc <col:40> 'const char_type *' lvalue ParmVar 0x9e3ff40 '__s' 'const char_type *')
            (DeclRefExpr 0x9e40614 <col:45> 'const streamsize':'const int' lvalue Var 0x9e403d0 '__len' 'const streamsize':'const int'))
          (CompoundAssignOperator 0x9e40698 <line:91:8, col:17> 'streamsize':'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
            (DeclRefExpr 0x9e40658 <col:8> 'streamsize':'int' lvalue Var 0x9e40080 '__ret' 'streamsize':'int')
            (ImplicitCastExpr 0x9e40688 <col:17> 'streamsize':'int' <LValueToRValue>
              (DeclRefExpr 0x9e40670 <col:17> 'const streamsize':'const int' lvalue Var 0x9e403d0 '__len' 'const streamsize':'const int')))
          (CompoundAssignOperator 0x9e406e8 <line:92:8, col:15> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
            (DeclRefExpr 0x9e406b8 <col:8> 'const char_type *' lvalue ParmVar 0x9e3ff40 '__s' 'const char_type *')
            (DeclRefExpr 0x9e406d0 <col:15> 'const streamsize':'const int' lvalue Var 0x9e403d0 '__len' 'const streamsize':'const int'))
          (CallExpr 0x9e40768 <line:93:8, col:32> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9e40718 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9e40708 <col:8> 'basic_streambuf<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9e4074c <col:27> 'const streamsize':'const int' lvalue Var 0x9e403d0 '__len' 'const streamsize':'const int')))
        <<<NULL>>>)
      (IfStmt 0x9e40b78 <line:96:4, line:106:6>
        <<<NULL>>>
        (BinaryOperator 0x9e40820 <line:96:8, col:16> '_Bool' '<'
          (ImplicitCastExpr 0x9e40800 <col:8> 'streamsize':'int' <LValueToRValue>
            (DeclRefExpr 0x9e407cc <col:8> 'streamsize':'int' lvalue Var 0x9e40080 '__ret' 'streamsize':'int'))
          (ImplicitCastExpr 0x9e40810 <col:16> 'streamsize':'int' <LValueToRValue>
            (DeclRefExpr 0x9e407e4 <col:16> 'streamsize':'int' lvalue ParmVar 0x9e3ff80 '__n' 'streamsize':'int')))
        (CompoundStmt 0x9e40b60 <line:97:6, line:106:6>
          (DeclStmt 0x9e40988 <line:98:8, col:69>
            0x9e40840 "int_type __c =
              (CallExpr 0x9e40968 <col:23, col:68> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9e40888 <col:23, col:29> '<dependent type>' lvalue
                  (CXXThisExpr 0x9e40878 <col:23> 'basic_streambuf<_CharT, _Traits> *' this))
                (CallExpr 0x9e40948 <col:38, col:67> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9e408e0 <col:38, col:51> '<dependent type>' lvalue)
                  (UnaryOperator 0x9e40930 <col:63, col:64> '<dependent type>' prefix '*'
                    (DeclRefExpr 0x9e40914 <col:64> 'const char_type *' lvalue ParmVar 0x9e3ff40 '__s' 'const char_type *'))))")
          (IfStmt 0x9e40b40 <line:99:8, line:105:3>
            <<<NULL>>>
            (UnaryOperator 0x9e40aa8 <line:99:12, col:61> '<dependent type>' prefix '!'
              (CallExpr 0x9e40a80 <col:13, col:61> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9e409b8 <col:13, col:26> '<dependent type>' lvalue)
                (DeclRefExpr 0x9e409ec <col:38> 'int_type':'typename traits_type::int_type' lvalue Var 0x9e40840 '__c' 'int_type':'typename traits_type::int_type')
                (CallExpr 0x9e40a60 <col:43, col:60> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9e40a28 <col:43, col:56> '<dependent type>' lvalue))))
            (CompoundStmt 0x9e40b20 <line:100:3, line:103:3>
              (UnaryOperator 0x9e40ad8 <line:101:5, col:7> 'streamsize':'int' lvalue prefix '++'
                (DeclRefExpr 0x9e40abc <col:7> 'streamsize':'int' lvalue Var 0x9e40080 '__ret' 'streamsize':'int'))
              (UnaryOperator 0x9e40b08 <line:102:5, col:7> '<dependent type>' prefix '++'
                (DeclRefExpr 0x9e40aec <col:7> 'const char_type *' lvalue ParmVar 0x9e3ff40 '__s' 'const char_type *')))
            (BreakStmt 0x9e40b38 <line:105:3>)))
        <<<NULL>>>)))
  (ReturnStmt 0x9e40bf8 <line:108:7, col:14>
    (ImplicitCastExpr 0x9e40be8 <col:14> 'streamsize':'int' <LValueToRValue>
      (DeclRefExpr 0x9e40bcc <col:14> 'streamsize':'int' lvalue Var 0x9e40080 '__ret' 'streamsize':'int'))))


    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> streamsize __copy_streambufs_eof(__streambuf_type *, __streambuf_type *, bool &)template <typename _CharT = char, typename _Traits = std::char_traits<char>> streamsize __copy_streambufs_eof(__streambuf_type *, __streambuf_type *, bool &)template <typename _CharT, typename _Traits> streamsize __copy_streambufs_eof(basic_streambuf<_CharT, _Traits> *__sbin, basic_streambuf<_CharT, _Traits> *__sbout, bool &__ineof) (CompoundStmt 0x9e417a8 </usr/include/c++/4.6/bits/streambuf.tcc:119:5, line:135:5>
  (DeclStmt 0x9e41150 <line:120:7, col:27>
    0x9e41100 "streamsize __ret =
      (IntegerLiteral 0x9e41138 <col:26> 'int' 0)")
  (BinaryOperator 0x9e41188 <line:121:7, col:17> '_Bool' lvalue '='
    (DeclRefExpr 0x9e41160 <col:7> '_Bool' lvalue ParmVar 0x9e40fd0 '__ineof' '_Bool &')
    (CXXBoolLiteralExpr 0x9e41178 <col:17> '_Bool' true))
  (DeclStmt 0x9e412b8 <line:122:7, col:55>
    0x9e41210 "typename _Traits::int_type __c =
      (CallExpr 0x9e41298 <col:40, col:54> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e41260 <col:40, col:48> '<dependent type>' lvalue
          (DeclRefExpr 0x9e41244 <col:40> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0x9e40e10 '__sbin' 'basic_streambuf<_CharT, _Traits> *')))")
  (WhileStmt 0x9e41758 <line:123:7, line:133:2>
    <<<NULL>>>
    (UnaryOperator 0x9e413b8 <line:123:14, col:55> '<dependent type>' prefix '!'
      (CallExpr 0x9e41390 <col:15, col:55> '<dependent type>'
        (DependentScopeDeclRefExpr 0x9e412e8 <col:15, col:24> '<dependent type>' lvalue)
        (DeclRefExpr 0x9e4130c <col:36> 'typename _Traits::int_type' lvalue Var 0x9e41210 '__c' 'typename _Traits::int_type')
        (CallExpr 0x9e41370 <col:41, col:54> '<dependent type>'
          (DependentScopeDeclRefExpr 0x9e41348 <col:41, col:50> '<dependent type>' lvalue))))
    (CompoundStmt 0x9e41738 <line:124:2, line:133:2>
      (BinaryOperator 0x9e414d8 <line:125:4, col:51> '<dependent type>' '='
        (DeclRefExpr 0x9e413cc <col:4> 'typename _Traits::int_type' lvalue Var 0x9e41210 '__c' 'typename _Traits::int_type')
        (CallExpr 0x9e414b8 <col:10, col:51> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9e41400 <col:10, col:19> '<dependent type>' lvalue
            (DeclRefExpr 0x9e413e4 <col:10> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0x9e40f80 '__sbout' 'basic_streambuf<_CharT, _Traits> *'))
          (CallExpr 0x9e41498 <col:25, col:50> '<dependent type>'
            (DependentScopeDeclRefExpr 0x9e41458 <col:25, col:34> '<dependent type>' lvalue)
            (DeclRefExpr 0x9e4147c <col:47> 'typename _Traits::int_type' lvalue Var 0x9e41210 '__c' 'typename _Traits::int_type'))))
      (IfStmt 0x9e41648 <line:126:4, line:130:6>
        <<<NULL>>>
        (CallExpr 0x9e415c0 <line:126:8, col:48> '<dependent type>'
          (DependentScopeDeclRefExpr 0x9e41518 <col:8, col:17> '<dependent type>' lvalue)
          (DeclRefExpr 0x9e4153c <col:29> 'typename _Traits::int_type' lvalue Var 0x9e41210 '__c' 'typename _Traits::int_type')
          (CallExpr 0x9e415a0 <col:34, col:47> '<dependent type>'
            (DependentScopeDeclRefExpr 0x9e41578 <col:34, col:43> '<dependent type>' lvalue)))
        (CompoundStmt 0x9e41630 <line:127:6, line:130:6>
          (BinaryOperator 0x9e41610 <line:128:8, col:18> '_Bool' lvalue '='
            (DeclRefExpr 0x9e415e4 <col:8> '_Bool' lvalue ParmVar 0x9e40fd0 '__ineof' '_Bool &')
            (CXXBoolLiteralExpr 0x9e41600 <col:18> '_Bool' false))
          (BreakStmt 0x9e41628 <line:129:8>))
        <<<NULL>>>)
      (UnaryOperator 0x9e41680 <line:131:4, col:6> 'streamsize':'int' lvalue prefix '++'
        (DeclRefExpr 0x9e41664 <col:6> 'streamsize':'int' lvalue Var 0x9e41100 '__ret' 'streamsize':'int'))
      (BinaryOperator 0x9e41720 <line:132:4, col:25> '<dependent type>' '='
        (DeclRefExpr 0x9e41694 <col:4> 'typename _Traits::int_type' lvalue Var 0x9e41210 '__c' 'typename _Traits::int_type')
        (CallExpr 0x9e41700 <col:10, col:25> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9e416c8 <col:10, col:18> '<dependent type>' lvalue
            (DeclRefExpr 0x9e416ac <col:10> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0x9e40e10 '__sbin' 'basic_streambuf<_CharT, _Traits> *'))))))
  (ReturnStmt 0x9e41798 <line:134:7, col:14>
    (ImplicitCastExpr 0x9e41788 <col:14> 'streamsize':'int' <LValueToRValue>
      (DeclRefExpr 0x9e4176c <col:14> 'streamsize':'int' lvalue Var 0x9e41100 '__ret' 'streamsize':'int'))))

;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> inline streamsize __copy_streambufs(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sbin, basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sbout)template <typename _CharT = char, typename _Traits = std::char_traits<char>> inline streamsize __copy_streambufs(basic_streambuf<char, std::char_traits<char> > *__sbin, basic_streambuf<char, std::char_traits<char> > *__sbout)template <typename _CharT, typename _Traits> inline streamsize __copy_streambufs(basic_streambuf<_CharT, _Traits> *__sbin, basic_streambuf<_CharT, _Traits> *__sbout) (CompoundStmt 0x9e43180 </usr/include/c++/4.6/bits/streambuf.tcc:141:5, line:144:5>
  (DeclStmt 0x9e430b8 <line:142:7, col:19>
    0x9e43080 "bool __ineof")
  (ReturnStmt 0x9e43170 <line:143:7, col:60>
    (CallExpr 0x9e43148 <col:14, col:60> '<dependent type>'
      (UnresolvedLookupExpr 0x9e430c8 <col:14> '<overloaded function type>' lvalue (ADL) = '1' 0x9e410c0)
      (DeclRefExpr 0x9e430fc <col:36> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0x9e42dd0 '__sbin' 'basic_streambuf<_CharT, _Traits> *')
      (DeclRefExpr 0x9e43114 <col:44> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0x9e42f40 '__sbout' 'basic_streambuf<_CharT, _Traits> *')
      (DeclRefExpr 0x9e4312c <col:53> '_Bool' lvalue Var 0x9e43080 '__ineof' '_Bool'))))

;
    class basic_streambuf {
        class basic_streambuf;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
    protected:
    protected:
        char_type *_M_in_beg;
        char_type *_M_in_cur;
        char_type *_M_in_end;
        char_type *_M_out_beg;
        char_type *_M_out_cur;
        char_type *_M_out_end;
        std::locale _M_buf_locale;
    public:
    public:
        virtual void ~basic_streambuf();
        std::locale pubimbue(const std::locale &__loc);
        std::locale getloc() const;
        __streambuf_type *pubsetbuf(char_type *__s, streamsize __n);
        pos_type pubseekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        pos_type pubseekpos(pos_type __sp, ios_base::openmode __mode);
        int pubsync();
        streamsize in_avail();
        int_type snextc();
        int_type sbumpc();
        int_type sgetc();
        streamsize sgetn(char_type *__s, streamsize __n);
        int_type sputbackc(char_type __c);
        int_type sungetc();
        int_type sputc(char_type __c);
        streamsize sputn(const char_type *__s, streamsize __n);
    protected:
    protected:
        basic_streambuf();
        char_type *eback() const;
        char_type *gptr() const;
        char_type *egptr() const;
        void gbump(int __n);
        void setg(char_type *__gbeg, char_type *__gnext, char_type *__gend);
        char_type *pbase() const;
        char_type *pptr() const;
        char_type *epptr() const;
        void pbump(int __n);
        void setp(char_type *__pbeg, char_type *__pend);
        virtual void imbue(const std::locale &);
        virtual basic_streambuf<char_type, std::char_traits<char> > *setbuf(char_type *, streamsize);
        virtual pos_type seekoff(off_type, ios_base::seekdir, ios_base::openmode);
        virtual pos_type seekpos(pos_type, ios_base::openmode);
        virtual int sync();
        virtual streamsize showmanyc();
        virtual streamsize xsgetn(char_type *__s, streamsize __n);
        virtual int_type underflow();
        virtual int_type uflow();
        virtual int_type pbackfail(int_type);
        virtual streamsize xsputn(const char_type *__s, streamsize __n);
        virtual int_type overflow(int_type);
    public:
    public:
        void stossc();
        void __safe_gbump(streamsize __n);
        void __safe_pbump(streamsize __n);
    private:
    private:
        basic_streambuf(const __streambuf_type &__sb);
        __streambuf_type &operator=(const __streambuf_type &);
    };
    class basic_streambuf {
        class basic_streambuf;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
    protected:
    protected:
        char_type *_M_in_beg;
        char_type *_M_in_cur;
        char_type *_M_in_end;
        char_type *_M_out_beg;
        char_type *_M_out_cur;
        char_type *_M_out_end;
        std::locale _M_buf_locale;
    public:
    public:
        virtual void ~basic_streambuf();
        std::locale pubimbue(const std::locale &__loc);
        std::locale getloc() const;
        __streambuf_type *pubsetbuf(char_type *__s, streamsize __n);
        pos_type pubseekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        pos_type pubseekpos(pos_type __sp, ios_base::openmode __mode);
        int pubsync();
        streamsize in_avail();
        int_type snextc();
        int_type sbumpc();
        int_type sgetc();
        streamsize sgetn(char_type *__s, streamsize __n);
        int_type sputbackc(char_type __c);
        int_type sungetc();
        int_type sputc(char_type __c);
        streamsize sputn(const char_type *__s, streamsize __n);
    protected:
    protected:
        basic_streambuf();
        char_type *eback() const;
        char_type *gptr() const;
        char_type *egptr() const;
        void gbump(int __n);
        void setg(char_type *__gbeg, char_type *__gnext, char_type *__gend);
        char_type *pbase() const;
        char_type *pptr() const;
        char_type *epptr() const;
        void pbump(int __n);
        void setp(char_type *__pbeg, char_type *__pend);
        virtual void imbue(const std::locale &);
        virtual basic_streambuf<char_type, std::char_traits<wchar_t> > *setbuf(char_type *, streamsize);
        virtual pos_type seekoff(off_type, ios_base::seekdir, ios_base::openmode);
        virtual pos_type seekpos(pos_type, ios_base::openmode);
        virtual int sync();
        virtual streamsize showmanyc();
        virtual streamsize xsgetn(char_type *__s, streamsize __n);
        virtual int_type underflow();
        virtual int_type uflow();
        virtual int_type pbackfail(int_type);
        virtual streamsize xsputn(const char_type *__s, streamsize __n);
        virtual int_type overflow(int_type);
    public:
    public:
        void stossc();
        void __safe_gbump(streamsize __n);
        void __safe_pbump(streamsize __n);
    private:
    private:
        basic_streambuf(const __streambuf_type &__sb);
        __streambuf_type &operator=(const __streambuf_type &);
    };
}
typedef unsigned long wctype_t;
enum  {
    __ISwupper = (IntegerLiteral 0x9e56460 </usr/include/wctype.h:74:16> 'int' 0)
,
    __ISwlower = (IntegerLiteral 0x9e564b8 </usr/include/wctype.h:75:16> 'int' 1)
,
    __ISwalpha = (IntegerLiteral 0x9e56508 </usr/include/wctype.h:76:16> 'int' 2)
,
    __ISwdigit = (IntegerLiteral 0x9e56558 </usr/include/wctype.h:77:16> 'int' 3)
,
    __ISwxdigit = (IntegerLiteral 0x9e565a8 </usr/include/wctype.h:78:17> 'int' 4)
,
    __ISwspace = (IntegerLiteral 0x9e565f8 </usr/include/wctype.h:79:16> 'int' 5)
,
    __ISwprint = (IntegerLiteral 0x9e56648 </usr/include/wctype.h:80:16> 'int' 6)
,
    __ISwgraph = (IntegerLiteral 0x9e56698 </usr/include/wctype.h:81:16> 'int' 7)
,
    __ISwblank = (IntegerLiteral 0x9e566e8 </usr/include/wctype.h:82:16> 'int' 8)
,
    __ISwcntrl = (IntegerLiteral 0x9e56738 </usr/include/wctype.h:83:16> 'int' 9)
,
    __ISwpunct = (IntegerLiteral 0x9e56788 </usr/include/wctype.h:84:16> 'int' 10)
,
    __ISwalnum = (IntegerLiteral 0x9e567d8 </usr/include/wctype.h:85:16> 'int' 11)
,
    _ISwupper = (ParenExpr 0x9e62268 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x9e62248 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x9e56870 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x9e56840 <col:3, col:7> 'int'
        (DeclRefExpr 0x9e56824 <line:87:24> 'int' EnumConstant 0x9e56480 '__ISwupper' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x9e56858 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x9e56968 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x9e56958 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x9e56930 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x9e56918 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x9e568e8 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x9e568d0 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x9e56888 <col:23> 'unsigned long' 1)
                (ParenExpr 0x9e568b8 <col:30, col:34> 'int'
                  (DeclRefExpr 0x9e568a0 <line:87:24> 'int' EnumConstant 0x9e56480 '__ISwupper' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x9e56900 <line:66:40> 'int' 24)))))
    (ParenExpr 0x9e62230 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x9e62210 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x9e569c8 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x9e56998 <col:6, col:10> 'int'
            (DeclRefExpr 0x9e56980 <line:87:24> 'int' EnumConstant 0x9e56480 '__ISwupper' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x9e569b0 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x9e56ac0 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x9e56ab0 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x9e56a88 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x9e56a70 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x9e56a40 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x9e56a28 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x9e569e0 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x9e56a10 <col:34, col:38> 'int'
                      (DeclRefExpr 0x9e569f8 <line:87:24> 'int' EnumConstant 0x9e56480 '__ISwupper' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x9e56a58 <line:67:44> 'int' 8)))))
        (ParenExpr 0x9e621f8 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x9e621d8 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x9e56b20 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x9e56af0 <col:9, col:13> 'int'
                (DeclRefExpr 0x9e56ad8 <line:87:24> 'int' EnumConstant 0x9e56480 '__ISwupper' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x9e56b08 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x9e56c18 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x9e56c08 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x9e56be0 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x9e56bc8 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x9e56b98 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x9e56b80 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x9e56b38 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x9e56b68 <col:37, col:41> 'int'
                          (DeclRefExpr 0x9e56b50 <line:87:24> 'int' EnumConstant 0x9e56480 '__ISwupper' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9e56bb0 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x9e621c0 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x9e56d00 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x9e56cd8 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x9e56cc0 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x9e56c90 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x9e56c78 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x9e56c30 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x9e56c60 <col:26, col:30> 'int'
                          (DeclRefExpr 0x9e56c48 <line:87:24> 'int' EnumConstant 0x9e56480 '__ISwupper' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9e56ca8 <line:69:36> 'int' 24)))))))))))
,
    _ISwlower = (ParenExpr 0x9e62848 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x9e62828 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x9e62300 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x9e622d0 <col:3, col:7> 'int'
        (DeclRefExpr 0x9e622b4 <line:88:24> 'int' EnumConstant 0x9e564d0 '__ISwlower' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x9e622e8 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x9e623f8 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x9e623e8 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x9e623c0 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x9e623a8 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x9e62378 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x9e62360 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x9e62318 <col:23> 'unsigned long' 1)
                (ParenExpr 0x9e62348 <col:30, col:34> 'int'
                  (DeclRefExpr 0x9e62330 <line:88:24> 'int' EnumConstant 0x9e564d0 '__ISwlower' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x9e62390 <line:66:40> 'int' 24)))))
    (ParenExpr 0x9e62810 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x9e627f0 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x9e62458 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x9e62428 <col:6, col:10> 'int'
            (DeclRefExpr 0x9e62410 <line:88:24> 'int' EnumConstant 0x9e564d0 '__ISwlower' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x9e62440 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x9e62550 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x9e62540 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x9e62518 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x9e62500 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x9e624d0 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x9e624b8 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x9e62470 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x9e624a0 <col:34, col:38> 'int'
                      (DeclRefExpr 0x9e62488 <line:88:24> 'int' EnumConstant 0x9e564d0 '__ISwlower' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x9e624e8 <line:67:44> 'int' 8)))))
        (ParenExpr 0x9e627d8 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x9e627b8 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x9e625b0 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x9e62580 <col:9, col:13> 'int'
                (DeclRefExpr 0x9e62568 <line:88:24> 'int' EnumConstant 0x9e564d0 '__ISwlower' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x9e62598 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x9e626a8 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x9e62698 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x9e62670 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x9e62658 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x9e62628 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x9e62610 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x9e625c8 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x9e625f8 <col:37, col:41> 'int'
                          (DeclRefExpr 0x9e625e0 <line:88:24> 'int' EnumConstant 0x9e564d0 '__ISwlower' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9e62640 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x9e627a0 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x9e62790 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x9e62768 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x9e62750 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x9e62720 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x9e62708 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x9e626c0 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x9e626f0 <col:26, col:30> 'int'
                          (DeclRefExpr 0x9e626d8 <line:88:24> 'int' EnumConstant 0x9e564d0 '__ISwlower' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9e62738 <line:69:36> 'int' 24)))))))))))
,
    _ISwalpha = (ParenExpr 0x9e62e28 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x9e62e08 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x9e628e0 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x9e628b0 <col:3, col:7> 'int'
        (DeclRefExpr 0x9e62894 <line:89:24> 'int' EnumConstant 0x9e56520 '__ISwalpha' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x9e628c8 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x9e629d8 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x9e629c8 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x9e629a0 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x9e62988 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x9e62958 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x9e62940 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x9e628f8 <col:23> 'unsigned long' 1)
                (ParenExpr 0x9e62928 <col:30, col:34> 'int'
                  (DeclRefExpr 0x9e62910 <line:89:24> 'int' EnumConstant 0x9e56520 '__ISwalpha' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x9e62970 <line:66:40> 'int' 24)))))
    (ParenExpr 0x9e62df0 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x9e62dd0 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x9e62a38 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x9e62a08 <col:6, col:10> 'int'
            (DeclRefExpr 0x9e629f0 <line:89:24> 'int' EnumConstant 0x9e56520 '__ISwalpha' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x9e62a20 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x9e62b30 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x9e62b20 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x9e62af8 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x9e62ae0 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x9e62ab0 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x9e62a98 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x9e62a50 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x9e62a80 <col:34, col:38> 'int'
                      (DeclRefExpr 0x9e62a68 <line:89:24> 'int' EnumConstant 0x9e56520 '__ISwalpha' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x9e62ac8 <line:67:44> 'int' 8)))))
        (ParenExpr 0x9e62db8 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x9e62d98 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x9e62b90 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x9e62b60 <col:9, col:13> 'int'
                (DeclRefExpr 0x9e62b48 <line:89:24> 'int' EnumConstant 0x9e56520 '__ISwalpha' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x9e62b78 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x9e62c88 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x9e62c78 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x9e62c50 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x9e62c38 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x9e62c08 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x9e62bf0 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x9e62ba8 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x9e62bd8 <col:37, col:41> 'int'
                          (DeclRefExpr 0x9e62bc0 <line:89:24> 'int' EnumConstant 0x9e56520 '__ISwalpha' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9e62c20 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x9e62d80 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x9e62d70 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x9e62d48 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x9e62d30 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x9e62d00 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x9e62ce8 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x9e62ca0 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x9e62cd0 <col:26, col:30> 'int'
                          (DeclRefExpr 0x9e62cb8 <line:89:24> 'int' EnumConstant 0x9e56520 '__ISwalpha' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9e62d18 <line:69:36> 'int' 24)))))))))))
,
    _ISwdigit = (ParenExpr 0x9e63408 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x9e633e8 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x9e62ec0 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x9e62e90 <col:3, col:7> 'int'
        (DeclRefExpr 0x9e62e74 <line:90:24> 'int' EnumConstant 0x9e56570 '__ISwdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x9e62ea8 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x9e62fb8 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x9e62fa8 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x9e62f80 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x9e62f68 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x9e62f38 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x9e62f20 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x9e62ed8 <col:23> 'unsigned long' 1)
                (ParenExpr 0x9e62f08 <col:30, col:34> 'int'
                  (DeclRefExpr 0x9e62ef0 <line:90:24> 'int' EnumConstant 0x9e56570 '__ISwdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x9e62f50 <line:66:40> 'int' 24)))))
    (ParenExpr 0x9e633d0 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x9e633b0 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x9e63018 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x9e62fe8 <col:6, col:10> 'int'
            (DeclRefExpr 0x9e62fd0 <line:90:24> 'int' EnumConstant 0x9e56570 '__ISwdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x9e63000 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x9e63110 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x9e63100 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x9e630d8 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x9e630c0 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x9e63090 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x9e63078 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x9e63030 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x9e63060 <col:34, col:38> 'int'
                      (DeclRefExpr 0x9e63048 <line:90:24> 'int' EnumConstant 0x9e56570 '__ISwdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x9e630a8 <line:67:44> 'int' 8)))))
        (ParenExpr 0x9e63398 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x9e63378 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x9e63170 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x9e63140 <col:9, col:13> 'int'
                (DeclRefExpr 0x9e63128 <line:90:24> 'int' EnumConstant 0x9e56570 '__ISwdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x9e63158 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x9e63268 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x9e63258 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x9e63230 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x9e63218 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x9e631e8 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x9e631d0 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x9e63188 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x9e631b8 <col:37, col:41> 'int'
                          (DeclRefExpr 0x9e631a0 <line:90:24> 'int' EnumConstant 0x9e56570 '__ISwdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9e63200 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x9e63360 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x9e63350 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x9e63328 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x9e63310 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x9e632e0 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x9e632c8 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x9e63280 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x9e632b0 <col:26, col:30> 'int'
                          (DeclRefExpr 0x9e63298 <line:90:24> 'int' EnumConstant 0x9e56570 '__ISwdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9e632f8 <line:69:36> 'int' 24)))))))))))
,
    _ISwxdigit = (ParenExpr 0x9e639e8 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x9e639c8 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x9e634a0 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x9e63470 <col:3, col:7> 'int'
        (DeclRefExpr 0x9e63454 <line:91:25> 'int' EnumConstant 0x9e565c0 '__ISwxdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x9e63488 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x9e63598 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x9e63588 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x9e63560 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x9e63548 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x9e63518 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x9e63500 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x9e634b8 <col:23> 'unsigned long' 1)
                (ParenExpr 0x9e634e8 <col:30, col:34> 'int'
                  (DeclRefExpr 0x9e634d0 <line:91:25> 'int' EnumConstant 0x9e565c0 '__ISwxdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x9e63530 <line:66:40> 'int' 24)))))
    (ParenExpr 0x9e639b0 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x9e63990 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x9e635f8 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x9e635c8 <col:6, col:10> 'int'
            (DeclRefExpr 0x9e635b0 <line:91:25> 'int' EnumConstant 0x9e565c0 '__ISwxdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x9e635e0 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x9e636f0 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x9e636e0 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x9e636b8 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x9e636a0 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x9e63670 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x9e63658 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x9e63610 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x9e63640 <col:34, col:38> 'int'
                      (DeclRefExpr 0x9e63628 <line:91:25> 'int' EnumConstant 0x9e565c0 '__ISwxdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x9e63688 <line:67:44> 'int' 8)))))
        (ParenExpr 0x9e63978 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x9e63958 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x9e63750 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x9e63720 <col:9, col:13> 'int'
                (DeclRefExpr 0x9e63708 <line:91:25> 'int' EnumConstant 0x9e565c0 '__ISwxdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x9e63738 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x9e63848 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x9e63838 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x9e63810 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x9e637f8 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x9e637c8 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x9e637b0 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x9e63768 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x9e63798 <col:37, col:41> 'int'
                          (DeclRefExpr 0x9e63780 <line:91:25> 'int' EnumConstant 0x9e565c0 '__ISwxdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9e637e0 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x9e63940 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x9e63930 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x9e63908 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x9e638f0 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x9e638c0 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x9e638a8 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x9e63860 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x9e63890 <col:26, col:30> 'int'
                          (DeclRefExpr 0x9e63878 <line:91:25> 'int' EnumConstant 0x9e565c0 '__ISwxdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9e638d8 <line:69:36> 'int' 24)))))))))))
,
    _ISwspace = (ParenExpr 0x9e63fc8 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x9e63fa8 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x9e63a80 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x9e63a50 <col:3, col:7> 'int'
        (DeclRefExpr 0x9e63a34 <line:92:24> 'int' EnumConstant 0x9e56610 '__ISwspace' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x9e63a68 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x9e63b78 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x9e63b68 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x9e63b40 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x9e63b28 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x9e63af8 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x9e63ae0 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x9e63a98 <col:23> 'unsigned long' 1)
                (ParenExpr 0x9e63ac8 <col:30, col:34> 'int'
                  (DeclRefExpr 0x9e63ab0 <line:92:24> 'int' EnumConstant 0x9e56610 '__ISwspace' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x9e63b10 <line:66:40> 'int' 24)))))
    (ParenExpr 0x9e63f90 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x9e63f70 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x9e63bd8 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x9e63ba8 <col:6, col:10> 'int'
            (DeclRefExpr 0x9e63b90 <line:92:24> 'int' EnumConstant 0x9e56610 '__ISwspace' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x9e63bc0 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x9e63cd0 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x9e63cc0 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x9e63c98 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x9e63c80 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x9e63c50 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x9e63c38 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x9e63bf0 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x9e63c20 <col:34, col:38> 'int'
                      (DeclRefExpr 0x9e63c08 <line:92:24> 'int' EnumConstant 0x9e56610 '__ISwspace' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x9e63c68 <line:67:44> 'int' 8)))))
        (ParenExpr 0x9e63f58 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x9e63f38 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x9e63d30 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x9e63d00 <col:9, col:13> 'int'
                (DeclRefExpr 0x9e63ce8 <line:92:24> 'int' EnumConstant 0x9e56610 '__ISwspace' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x9e63d18 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x9e63e28 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x9e63e18 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x9e63df0 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x9e63dd8 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x9e63da8 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x9e63d90 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x9e63d48 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x9e63d78 <col:37, col:41> 'int'
                          (DeclRefExpr 0x9e63d60 <line:92:24> 'int' EnumConstant 0x9e56610 '__ISwspace' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9e63dc0 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x9e63f20 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x9e63f10 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x9e63ee8 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x9e63ed0 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x9e63ea0 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x9e63e88 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x9e63e40 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x9e63e70 <col:26, col:30> 'int'
                          (DeclRefExpr 0x9e63e58 <line:92:24> 'int' EnumConstant 0x9e56610 '__ISwspace' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9e63eb8 <line:69:36> 'int' 24)))))))))))
,
    _ISwprint = (ParenExpr 0x9e645a8 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x9e64588 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x9e64060 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x9e64030 <col:3, col:7> 'int'
        (DeclRefExpr 0x9e64014 <line:93:24> 'int' EnumConstant 0x9e56660 '__ISwprint' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x9e64048 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x9e64158 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x9e64148 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x9e64120 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x9e64108 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x9e640d8 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x9e640c0 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x9e64078 <col:23> 'unsigned long' 1)
                (ParenExpr 0x9e640a8 <col:30, col:34> 'int'
                  (DeclRefExpr 0x9e64090 <line:93:24> 'int' EnumConstant 0x9e56660 '__ISwprint' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x9e640f0 <line:66:40> 'int' 24)))))
    (ParenExpr 0x9e64570 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x9e64550 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x9e641b8 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x9e64188 <col:6, col:10> 'int'
            (DeclRefExpr 0x9e64170 <line:93:24> 'int' EnumConstant 0x9e56660 '__ISwprint' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x9e641a0 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x9e642b0 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x9e642a0 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x9e64278 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x9e64260 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x9e64230 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x9e64218 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x9e641d0 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x9e64200 <col:34, col:38> 'int'
                      (DeclRefExpr 0x9e641e8 <line:93:24> 'int' EnumConstant 0x9e56660 '__ISwprint' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x9e64248 <line:67:44> 'int' 8)))))
        (ParenExpr 0x9e64538 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x9e64518 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x9e64310 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x9e642e0 <col:9, col:13> 'int'
                (DeclRefExpr 0x9e642c8 <line:93:24> 'int' EnumConstant 0x9e56660 '__ISwprint' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x9e642f8 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x9e64408 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x9e643f8 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x9e643d0 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x9e643b8 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x9e64388 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x9e64370 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x9e64328 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x9e64358 <col:37, col:41> 'int'
                          (DeclRefExpr 0x9e64340 <line:93:24> 'int' EnumConstant 0x9e56660 '__ISwprint' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9e643a0 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x9e64500 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x9e644f0 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x9e644c8 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x9e644b0 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x9e64480 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x9e64468 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x9e64420 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x9e64450 <col:26, col:30> 'int'
                          (DeclRefExpr 0x9e64438 <line:93:24> 'int' EnumConstant 0x9e56660 '__ISwprint' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9e64498 <line:69:36> 'int' 24)))))))))))
,
    _ISwgraph = (ParenExpr 0x9e64b88 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x9e64b68 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x9e64640 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x9e64610 <col:3, col:7> 'int'
        (DeclRefExpr 0x9e645f4 <line:94:24> 'int' EnumConstant 0x9e566b0 '__ISwgraph' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x9e64628 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x9e64738 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x9e64728 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x9e64700 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x9e646e8 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x9e646b8 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x9e646a0 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x9e64658 <col:23> 'unsigned long' 1)
                (ParenExpr 0x9e64688 <col:30, col:34> 'int'
                  (DeclRefExpr 0x9e64670 <line:94:24> 'int' EnumConstant 0x9e566b0 '__ISwgraph' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x9e646d0 <line:66:40> 'int' 24)))))
    (ParenExpr 0x9e64b50 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x9e64b30 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x9e64798 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x9e64768 <col:6, col:10> 'int'
            (DeclRefExpr 0x9e64750 <line:94:24> 'int' EnumConstant 0x9e566b0 '__ISwgraph' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x9e64780 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x9e64890 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x9e64880 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x9e64858 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x9e64840 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x9e64810 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x9e647f8 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x9e647b0 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x9e647e0 <col:34, col:38> 'int'
                      (DeclRefExpr 0x9e647c8 <line:94:24> 'int' EnumConstant 0x9e566b0 '__ISwgraph' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x9e64828 <line:67:44> 'int' 8)))))
        (ParenExpr 0x9e64b18 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x9e64af8 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x9e648f0 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x9e648c0 <col:9, col:13> 'int'
                (DeclRefExpr 0x9e648a8 <line:94:24> 'int' EnumConstant 0x9e566b0 '__ISwgraph' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x9e648d8 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x9e649e8 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x9e649d8 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x9e649b0 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x9e64998 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x9e64968 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x9e64950 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x9e64908 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x9e64938 <col:37, col:41> 'int'
                          (DeclRefExpr 0x9e64920 <line:94:24> 'int' EnumConstant 0x9e566b0 '__ISwgraph' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9e64980 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x9e64ae0 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x9e64ad0 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x9e64aa8 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x9e64a90 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x9e64a60 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x9e64a48 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x9e64a00 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x9e64a30 <col:26, col:30> 'int'
                          (DeclRefExpr 0x9e64a18 <line:94:24> 'int' EnumConstant 0x9e566b0 '__ISwgraph' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9e64a78 <line:69:36> 'int' 24)))))))))))
,
    _ISwblank = (ParenExpr 0x9e65168 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x9e65148 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x9e64c20 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x9e64bf0 <col:3, col:7> 'int'
        (DeclRefExpr 0x9e64bd4 <line:95:24> 'int' EnumConstant 0x9e56700 '__ISwblank' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x9e64c08 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x9e64d18 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x9e64d08 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x9e64ce0 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x9e64cc8 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x9e64c98 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x9e64c80 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x9e64c38 <col:23> 'unsigned long' 1)
                (ParenExpr 0x9e64c68 <col:30, col:34> 'int'
                  (DeclRefExpr 0x9e64c50 <line:95:24> 'int' EnumConstant 0x9e56700 '__ISwblank' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x9e64cb0 <line:66:40> 'int' 24)))))
    (ParenExpr 0x9e65130 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x9e65110 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x9e64d78 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x9e64d48 <col:6, col:10> 'int'
            (DeclRefExpr 0x9e64d30 <line:95:24> 'int' EnumConstant 0x9e56700 '__ISwblank' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x9e64d60 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x9e64e70 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x9e64e60 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x9e64e38 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x9e64e20 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x9e64df0 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x9e64dd8 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x9e64d90 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x9e64dc0 <col:34, col:38> 'int'
                      (DeclRefExpr 0x9e64da8 <line:95:24> 'int' EnumConstant 0x9e56700 '__ISwblank' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x9e64e08 <line:67:44> 'int' 8)))))
        (ParenExpr 0x9e650f8 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x9e650d8 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x9e64ed0 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x9e64ea0 <col:9, col:13> 'int'
                (DeclRefExpr 0x9e64e88 <line:95:24> 'int' EnumConstant 0x9e56700 '__ISwblank' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x9e64eb8 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x9e64fc8 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x9e64fb8 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x9e64f90 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x9e64f78 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x9e64f48 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x9e64f30 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x9e64ee8 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x9e64f18 <col:37, col:41> 'int'
                          (DeclRefExpr 0x9e64f00 <line:95:24> 'int' EnumConstant 0x9e56700 '__ISwblank' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9e64f60 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x9e650c0 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x9e650b0 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x9e65088 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x9e65070 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x9e65040 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x9e65028 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x9e64fe0 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x9e65010 <col:26, col:30> 'int'
                          (DeclRefExpr 0x9e64ff8 <line:95:24> 'int' EnumConstant 0x9e56700 '__ISwblank' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9e65058 <line:69:36> 'int' 24)))))))))))
,
    _ISwcntrl = (ParenExpr 0x9e65748 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x9e65728 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x9e65200 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x9e651d0 <col:3, col:7> 'int'
        (DeclRefExpr 0x9e651b4 <line:96:24> 'int' EnumConstant 0x9e56750 '__ISwcntrl' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x9e651e8 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x9e652f8 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x9e652e8 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x9e652c0 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x9e652a8 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x9e65278 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x9e65260 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x9e65218 <col:23> 'unsigned long' 1)
                (ParenExpr 0x9e65248 <col:30, col:34> 'int'
                  (DeclRefExpr 0x9e65230 <line:96:24> 'int' EnumConstant 0x9e56750 '__ISwcntrl' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x9e65290 <line:66:40> 'int' 24)))))
    (ParenExpr 0x9e65710 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x9e656f0 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x9e65358 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x9e65328 <col:6, col:10> 'int'
            (DeclRefExpr 0x9e65310 <line:96:24> 'int' EnumConstant 0x9e56750 '__ISwcntrl' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x9e65340 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x9e65450 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x9e65440 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x9e65418 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x9e65400 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x9e653d0 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x9e653b8 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x9e65370 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x9e653a0 <col:34, col:38> 'int'
                      (DeclRefExpr 0x9e65388 <line:96:24> 'int' EnumConstant 0x9e56750 '__ISwcntrl' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x9e653e8 <line:67:44> 'int' 8)))))
        (ParenExpr 0x9e656d8 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x9e656b8 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x9e654b0 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x9e65480 <col:9, col:13> 'int'
                (DeclRefExpr 0x9e65468 <line:96:24> 'int' EnumConstant 0x9e56750 '__ISwcntrl' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x9e65498 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x9e655a8 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x9e65598 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x9e65570 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x9e65558 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x9e65528 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x9e65510 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x9e654c8 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x9e654f8 <col:37, col:41> 'int'
                          (DeclRefExpr 0x9e654e0 <line:96:24> 'int' EnumConstant 0x9e56750 '__ISwcntrl' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9e65540 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x9e656a0 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x9e65690 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x9e65668 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x9e65650 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x9e65620 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x9e65608 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x9e655c0 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x9e655f0 <col:26, col:30> 'int'
                          (DeclRefExpr 0x9e655d8 <line:96:24> 'int' EnumConstant 0x9e56750 '__ISwcntrl' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9e65638 <line:69:36> 'int' 24)))))))))))
,
    _ISwpunct = (ParenExpr 0x9e65d28 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x9e65d08 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x9e657e0 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x9e657b0 <col:3, col:7> 'int'
        (DeclRefExpr 0x9e65794 <line:97:24> 'int' EnumConstant 0x9e567a0 '__ISwpunct' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x9e657c8 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x9e658d8 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x9e658c8 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x9e658a0 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x9e65888 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x9e65858 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x9e65840 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x9e657f8 <col:23> 'unsigned long' 1)
                (ParenExpr 0x9e65828 <col:30, col:34> 'int'
                  (DeclRefExpr 0x9e65810 <line:97:24> 'int' EnumConstant 0x9e567a0 '__ISwpunct' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x9e65870 <line:66:40> 'int' 24)))))
    (ParenExpr 0x9e65cf0 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x9e65cd0 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x9e65938 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x9e65908 <col:6, col:10> 'int'
            (DeclRefExpr 0x9e658f0 <line:97:24> 'int' EnumConstant 0x9e567a0 '__ISwpunct' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x9e65920 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x9e65a30 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x9e65a20 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x9e659f8 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x9e659e0 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x9e659b0 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x9e65998 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x9e65950 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x9e65980 <col:34, col:38> 'int'
                      (DeclRefExpr 0x9e65968 <line:97:24> 'int' EnumConstant 0x9e567a0 '__ISwpunct' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x9e659c8 <line:67:44> 'int' 8)))))
        (ParenExpr 0x9e65cb8 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x9e65c98 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x9e65a90 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x9e65a60 <col:9, col:13> 'int'
                (DeclRefExpr 0x9e65a48 <line:97:24> 'int' EnumConstant 0x9e567a0 '__ISwpunct' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x9e65a78 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x9e65b88 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x9e65b78 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x9e65b50 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x9e65b38 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x9e65b08 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x9e65af0 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x9e65aa8 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x9e65ad8 <col:37, col:41> 'int'
                          (DeclRefExpr 0x9e65ac0 <line:97:24> 'int' EnumConstant 0x9e567a0 '__ISwpunct' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9e65b20 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x9e65c80 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x9e65c70 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x9e65c48 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x9e65c30 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x9e65c00 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x9e65be8 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x9e65ba0 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x9e65bd0 <col:26, col:30> 'int'
                          (DeclRefExpr 0x9e65bb8 <line:97:24> 'int' EnumConstant 0x9e567a0 '__ISwpunct' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9e65c18 <line:69:36> 'int' 24)))))))))))
,
    _ISwalnum = (ParenExpr 0x9e66320 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x9e66300 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x9e65dc0 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x9e65d90 <col:3, col:7> 'int'
        (DeclRefExpr 0x9e65d74 <line:98:24> 'int' EnumConstant 0x9e567f0 '__ISwalnum' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x9e65da8 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x9e65eb8 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x9e65ea8 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x9e65e80 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x9e65e68 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x9e65e38 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x9e65e20 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x9e65dd8 <col:23> 'unsigned long' 1)
                (ParenExpr 0x9e65e08 <col:30, col:34> 'int'
                  (DeclRefExpr 0x9e65df0 <line:98:24> 'int' EnumConstant 0x9e567f0 '__ISwalnum' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x9e65e50 <line:66:40> 'int' 24)))))
    (ParenExpr 0x9e662e8 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x9e662c8 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x9e65f18 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x9e65ee8 <col:6, col:10> 'int'
            (DeclRefExpr 0x9e65ed0 <line:98:24> 'int' EnumConstant 0x9e567f0 '__ISwalnum' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x9e65f00 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x9e66010 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x9e66000 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x9e65fd8 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x9e65fc0 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x9e65f90 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x9e65f78 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x9e65f30 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x9e65f60 <col:34, col:38> 'int'
                      (DeclRefExpr 0x9e65f48 <line:98:24> 'int' EnumConstant 0x9e567f0 '__ISwalnum' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x9e65fa8 <line:67:44> 'int' 8)))))
        (ParenExpr 0x9e662b0 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x9e66290 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x9e66070 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x9e66040 <col:9, col:13> 'int'
                (DeclRefExpr 0x9e66028 <line:98:24> 'int' EnumConstant 0x9e567f0 '__ISwalnum' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x9e66058 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x9e66168 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x9e66158 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x9e66130 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x9e66118 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x9e660e8 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x9e660d0 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x9e66088 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x9e660b8 <col:37, col:41> 'int'
                          (DeclRefExpr 0x9e660a0 <line:98:24> 'int' EnumConstant 0x9e567f0 '__ISwalnum' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9e66100 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x9e66278 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x9e66268 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x9e66240 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x9e66228 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x9e661f8 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x9e661e0 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x9e66180 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x9e661c8 <col:26, col:30> 'int'
                          (DeclRefExpr 0x9e66198 <line:98:24> 'int' EnumConstant 0x9e567f0 '__ISwalnum' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9e66210 <line:69:36> 'int' 24)))))))))))

};
extern "C" {
    extern int iswalnum(wint_t __wc) throw();
    extern int iswalpha(wint_t __wc) throw();
    extern int iswcntrl(wint_t __wc) throw();
    extern int iswdigit(wint_t __wc) throw();
    extern int iswgraph(wint_t __wc) throw();
    extern int iswlower(wint_t __wc) throw();
    extern int iswprint(wint_t __wc) throw();
    extern int iswpunct(wint_t __wc) throw();
    extern int iswspace(wint_t __wc) throw();
    extern int iswupper(wint_t __wc) throw();
    extern int iswxdigit(wint_t __wc) throw();
    extern int iswblank(wint_t __wc) throw();
    extern wctype_t wctype(const char *__property) throw();
    extern int iswctype(wint_t __wc, wctype_t __desc) throw();
    typedef const __int32_t *wctrans_t;
    extern wint_t towlower(wint_t __wc) throw();
    extern wint_t towupper(wint_t __wc) throw();
}
extern "C" {
    extern wctrans_t wctrans(const char *__property) throw();
    extern wint_t towctrans(wint_t __wc, wctrans_t __desc) throw();
    extern int iswalnum_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswalpha_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswcntrl_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswdigit_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswgraph_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswlower_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswprint_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswpunct_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswspace_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswupper_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswxdigit_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswblank_l(wint_t __wc, __locale_t __locale) throw();
    extern wctype_t wctype_l(const char *__property, __locale_t __locale) throw();
    extern int iswctype_l(wint_t __wc, wctype_t __desc, __locale_t __locale) throw();
    extern wint_t towlower_l(wint_t __wc, __locale_t __locale) throw();
    extern wint_t towupper_l(wint_t __wc, __locale_t __locale) throw();
    extern wctrans_t wctrans_l(const char *__property, __locale_t __locale) throw();
    extern wint_t towctrans_l(wint_t __wc, wctrans_t __desc, __locale_t __locale) throw();
}
namespace std {
    using ::wctrans_t;
    ;
    using ::wctype_t;
    ;
    using ::wint_t;
    ;
    using ::iswalnum;
    ;
    using ::iswalpha;
    ;
    using ::iswblank;
    ;
    using ::iswcntrl;
    ;
    using ::iswctype;
    ;
    using ::iswdigit;
    ;
    using ::iswgraph;
    ;
    using ::iswlower;
    ;
    using ::iswprint;
    ;
    using ::iswpunct;
    ;
    using ::iswspace;
    ;
    using ::iswupper;
    ;
    using ::iswxdigit;
    ;
    using ::towctrans;
    ;
    using ::towlower;
    ;
    using ::towupper;
    ;
    using ::wctrans;
    ;
    using ::wctype;
    ;
}
namespace std {
    struct ctype_base {
        struct ctype_base;
        typedef const int *__to_type;
        typedef unsigned short mask;
        static const mask upper = (ImplicitCastExpr 0x9e69680 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:50:35> 'const mask':'const unsigned short' <IntegralCast>
  (DeclRefExpr 0x9e69664 <col:35> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x9c54310 '_ISupper' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
;
        static const mask lower = (ImplicitCastExpr 0x9e696f0 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:51:32> 'const mask':'const unsigned short' <IntegralCast>
  (DeclRefExpr 0x9e696d4 <col:32> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x9c592f0 '_ISlower' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
;
        static const mask alpha = (ImplicitCastExpr 0x9e69760 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:52:32> 'const mask':'const unsigned short' <IntegralCast>
  (DeclRefExpr 0x9e69744 <col:32> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x9c59540 '_ISalpha' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
;
        static const mask digit = (ImplicitCastExpr 0x9e697d0 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:53:32> 'const mask':'const unsigned short' <IntegralCast>
  (DeclRefExpr 0x9e697b4 <col:32> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x9c59790 '_ISdigit' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
;
        static const mask xdigit = (ImplicitCastExpr 0x9e69840 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:54:33> 'const mask':'const unsigned short' <IntegralCast>
  (DeclRefExpr 0x9e69824 <col:33> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x9c599e0 '_ISxdigit' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
;
        static const mask space = (ImplicitCastExpr 0x9e698b0 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:55:32> 'const mask':'const unsigned short' <IntegralCast>
  (DeclRefExpr 0x9e69894 <col:32> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x9c59c30 '_ISspace' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
;
        static const mask print = (ImplicitCastExpr 0x9e69920 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:56:32> 'const mask':'const unsigned short' <IntegralCast>
  (DeclRefExpr 0x9e69904 <col:32> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x9c59e80 '_ISprint' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
;
        static const mask graph = (ImplicitCastExpr 0x9e69a20 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:57:32, col:54> 'const mask':'const unsigned short' <IntegralCast>
  (BinaryOperator 0x9e69a08 <col:32, col:54> 'int' '|'
    (BinaryOperator 0x9e699c8 <col:32, col:43> 'int' '|'
      (ImplicitCastExpr 0x9e699a8 <col:32> 'int' <IntegralCast>
        (DeclRefExpr 0x9e69974 <col:32> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x9c59540 '_ISalpha' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
      (ImplicitCastExpr 0x9e699b8 <col:43> 'int' <IntegralCast>
        (DeclRefExpr 0x9e6998c <col:43> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x9c59790 '_ISdigit' 'enum <anonymous at /usr/include/ctype.h:48:1>')))
    (ImplicitCastExpr 0x9e699f8 <col:54> 'int' <IntegralCast>
      (DeclRefExpr 0x9e699e0 <col:54> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x9c5a7c0 '_ISpunct' 'enum <anonymous at /usr/include/ctype.h:48:1>'))))
;
        static const mask cntrl = (ImplicitCastExpr 0x9e69a90 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:58:32> 'const mask':'const unsigned short' <IntegralCast>
  (DeclRefExpr 0x9e69a74 <col:32> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x9c5a570 '_IScntrl' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
;
        static const mask punct = (ImplicitCastExpr 0x9e69b00 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:59:32> 'const mask':'const unsigned short' <IntegralCast>
  (DeclRefExpr 0x9e69ae4 <col:32> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x9c5a7c0 '_ISpunct' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
;
        static const mask alnum = (ImplicitCastExpr 0x9e69bc0 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:60:32, col:43> 'const mask':'const unsigned short' <IntegralCast>
  (BinaryOperator 0x9e69ba8 <col:32, col:43> 'int' '|'
    (ImplicitCastExpr 0x9e69b88 <col:32> 'int' <IntegralCast>
      (DeclRefExpr 0x9e69b54 <col:32> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x9c59540 '_ISalpha' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
    (ImplicitCastExpr 0x9e69b98 <col:43> 'int' <IntegralCast>
      (DeclRefExpr 0x9e69b6c <col:43> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x9c59790 '_ISdigit' 'enum <anonymous at /usr/include/ctype.h:48:1>'))))
;
        inline std::ctype_base &operator=(const std::ctype_base &) throw();
    };
}
namespace std {
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class istreambuf_iterator
template <typename _CharT = char, typename _Traits = std::char_traits<char>> class istreambuf_iterator
template <typename _CharT, typename _Traits = char_traits<_CharT>> class istreambuf_iterator : public iterator<std::input_iterator_tag, _CharT, typename _Traits::off_type, _CharT *, _CharT &> {
        class istreambuf_iterator;
    public:
    public:
        typedef _CharT char_type;
        typedef _Traits traits_type;
        typedef typename _Traits::int_type int_type;
        typedef basic_streambuf<_CharT, _Traits> streambuf_type;
        typedef basic_istream<_CharT, _Traits> istream_type;
        ;
        ;
        ;
    private:
    private:
        mutable streambuf_type *_M_sbuf;
        mutable int_type _M_c;
    public:
    public:
        istreambuf_iterator<_CharT, _Traits>() throw() : _M_sbuf((IntegerLiteral 0x9e71ba0 </usr/include/c++/4.6/bits/streambuf_iterator.h:98:17> 'int' 0)
), _M_c((CallExpr 0x9e71c90 </usr/include/c++/4.6/bits/streambuf_iterator.h:98:26, col:43> '<dependent type>'
  (CXXDependentScopeMemberExpr 0x9e71c58 <col:26, col:39> '<dependent type>' lvalue))
) (CompoundStmt 0x9e71cf0 </usr/include/c++/4.6/bits/streambuf_iterator.h:98:46, col:48>)


        istreambuf_iterator<_CharT, _Traits>(istream_type &__s) throw() : _M_sbuf((CallExpr 0x9e71d50 </usr/include/c++/4.6/bits/streambuf_iterator.h:102:17, col:27> '<dependent type>'
  (CXXDependentScopeMemberExpr 0x9e71d18 <col:17, col:21> '<dependent type>' lvalue
    (DeclRefExpr 0x9e71d00 <col:17> 'istream_type':'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9e71490 '__s' 'istream_type &')))
), _M_c((CallExpr 0x9e71e00 </usr/include/c++/4.6/bits/streambuf_iterator.h:102:36, col:53> '<dependent type>'
  (CXXDependentScopeMemberExpr 0x9e71dc8 <col:36, col:49> '<dependent type>' lvalue))
) (CompoundStmt 0x9e71e60 </usr/include/c++/4.6/bits/streambuf_iterator.h:102:56, col:58>)


        istreambuf_iterator<_CharT, _Traits>(streambuf_type *__s) throw() : _M_sbuf((DeclRefExpr 0x9e71e70 </usr/include/c++/4.6/bits/streambuf_iterator.h:106:17> 'streambuf_type *' lvalue ParmVar 0x9e715b0 '__s' 'streambuf_type *')
), _M_c((CallExpr 0x9e71f20 </usr/include/c++/4.6/bits/streambuf_iterator.h:106:28, col:45> '<dependent type>'
  (CXXDependentScopeMemberExpr 0x9e71ee8 <col:28, col:41> '<dependent type>' lvalue))
) (CompoundStmt 0x9e71f80 </usr/include/c++/4.6/bits/streambuf_iterator.h:106:48, col:50>)


        char_type operator*() const (CompoundStmt 0x9e72080 </usr/include/c++/4.6/bits/streambuf_iterator.h:113:7, line:122:7>
  (ReturnStmt 0x9e72070 <line:121:2, col:43>
    (CallExpr 0x9e72050 <col:9, col:43> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e71fc8 <col:9, col:22> '<dependent type>' lvalue)
      (CallExpr 0x9e72030 <col:35, col:42> '<dependent type>'
        (MemberExpr 0x9e72010 <col:35> '<bound member function type>' ->_M_get 0x9e71ac0
          (CXXThisExpr 0x9e72000 <col:35> 'const istreambuf_iterator<_CharT, _Traits> *' this))))))


        istreambuf_iterator<_CharT, _Traits> &operator++() (CompoundStmt 0x9e72290 </usr/include/c++/4.6/bits/streambuf_iterator.h:127:7, line:137:7>
  (NullStmt 0x9e72098 <line:130:25>)
  (IfStmt 0x9e72238 <line:131:2, line:135:4>
    <<<NULL>>>
    (MemberExpr 0x9e720b8 <line:131:6> 'streambuf_type *' lvalue ->_M_sbuf 0x9e712f0
      (CXXThisExpr 0x9e720a8 <col:6> 'istreambuf_iterator<_CharT, _Traits> *' this))
    (CompoundStmt 0x9e72220 <line:132:4, line:135:4>
      (CallExpr 0x9e72140 <line:133:6, col:22> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e72108 <col:6, col:15> '<dependent type>' lvalue
          (MemberExpr 0x9e720e8 <col:6> 'streambuf_type *' lvalue ->_M_sbuf 0x9e712f0
            (CXXThisExpr 0x9e720d8 <col:6> 'istreambuf_iterator<_CharT, _Traits> *' this))))
      (BinaryOperator 0x9e72208 <line:134:6, col:30> '<dependent type>' '='
        (MemberExpr 0x9e72170 <col:6> 'int_type':'typename _Traits::int_type' lvalue ->_M_c 0x9e71340
          (CXXThisExpr 0x9e72160 <col:6> 'istreambuf_iterator<_CharT, _Traits> *' this))
        (CallExpr 0x9e721e8 <col:13, col:30> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9e721b0 <col:13, col:26> '<dependent type>' lvalue))))
    <<<NULL>>>)
  (ReturnStmt 0x9e72280 <line:136:2, col:10>
    (UnaryOperator 0x9e72268 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9e72258 <col:10> 'istreambuf_iterator<_CharT, _Traits> *' this))))


        istreambuf_iterator<_CharT, _Traits> operator++(int) (CompoundStmt 0x9e72580 </usr/include/c++/4.6/bits/streambuf_iterator.h:142:7, line:154:7>
  (NullStmt 0x9e722b0 <line:145:25>)
  (DeclStmt 0x9e72330 <line:147:2, col:35>
    0x9e722d0 "istreambuf_iterator<_CharT, _Traits> __old =
      (UnaryOperator 0x9e72318 <col:30, col:31> '<dependent type>' prefix '*'
        (CXXThisExpr 0x9e72308 <col:31> 'istreambuf_iterator<_CharT, _Traits> *' this))")
  (IfStmt 0x9e72538 <line:148:2, line:152:4>
    <<<NULL>>>
    (MemberExpr 0x9e72350 <line:148:6> 'streambuf_type *' lvalue ->_M_sbuf 0x9e712f0
      (CXXThisExpr 0x9e72340 <col:6> 'istreambuf_iterator<_CharT, _Traits> *' this))
    (CompoundStmt 0x9e72520 <line:149:4, line:152:4>
      (BinaryOperator 0x9e72448 <line:150:6, col:35> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0x9e72388 <col:6, col:12> '<dependent type>' lvalue
          (DeclRefExpr 0x9e72370 <col:6> 'istreambuf_iterator<_CharT, _Traits>' lvalue Var 0x9e722d0 '__old' 'istreambuf_iterator<_CharT, _Traits>'))
        (CallExpr 0x9e72428 <col:19, col:35> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9e723f0 <col:19, col:28> '<dependent type>' lvalue
            (MemberExpr 0x9e723d0 <col:19> 'streambuf_type *' lvalue ->_M_sbuf 0x9e712f0
              (CXXThisExpr 0x9e723c0 <col:19> 'istreambuf_iterator<_CharT, _Traits> *' this)))))
      (BinaryOperator 0x9e72508 <line:151:6, col:30> '<dependent type>' '='
        (MemberExpr 0x9e72470 <col:6> 'int_type':'typename _Traits::int_type' lvalue ->_M_c 0x9e71340
          (CXXThisExpr 0x9e72460 <col:6> 'istreambuf_iterator<_CharT, _Traits> *' this))
        (CallExpr 0x9e724e8 <col:13, col:30> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9e724b0 <col:13, col:26> '<dependent type>' lvalue))))
    <<<NULL>>>)
  (ReturnStmt 0x9e72570 <line:153:2, col:9>
    (DeclRefExpr 0x9e72554 <col:9> 'istreambuf_iterator<_CharT, _Traits>' lvalue Var 0x9e722d0 '__old' 'istreambuf_iterator<_CharT, _Traits>')))


        bool equal(const istreambuf_iterator<_CharT, _Traits> &__b) const (CompoundStmt 0x9e726f0 </usr/include/c++/4.6/bits/streambuf_iterator.h:162:7, col:48>
  (ReturnStmt 0x9e726e0 <col:9, col:45>
    (CXXOperatorCallExpr 0x9e726b8 <col:16, col:45> '<dependent type>'
      (UnresolvedLookupExpr 0x9e72660 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30 0x9d5e270 0x9d5ece0 0x9d5f520 0x9d5fa90)
      (CallExpr 0x9e725d0 <col:16, col:26> '<dependent type>'
        (MemberExpr 0x9e725b0 <col:16> '<bound member function type>' ->_M_at_eof 0x9e71b40
          (CXXThisExpr 0x9e725a0 <col:16> 'const istreambuf_iterator<_CharT, _Traits> *' this)))
      (CallExpr 0x9e72640 <col:31, col:45> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e72608 <col:31, col:35> '<dependent type>' lvalue
          (DeclRefExpr 0x9e725ec <col:31> 'const istreambuf_iterator<_CharT, _Traits>' lvalue ParmVar 0x9e71940 '__b' 'const istreambuf_iterator<_CharT, _Traits> &'))))))


    private:
    private:
        int_type _M_get() const (CompoundStmt 0x9e72c90 </usr/include/c++/4.6/bits/streambuf_iterator.h:167:7, line:181:7>
  (DeclStmt 0x9e727c0 <line:168:2, col:43>
    0x9e72710 "const int_type __eof =
      (CallExpr 0x9e727a0 <col:25, col:42> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e72768 <col:25, col:38> '<dependent type>' lvalue))")
  (DeclStmt 0x9e72830 <line:169:2, col:24>
    0x9e727e0 "int_type __ret =
      (DeclRefExpr 0x9e72814 <col:19> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x9e72710 '__eof' 'const int_type':'const typename _Traits::int_type')")
  (IfStmt 0x9e72c48 <line:170:2, line:179:4>
    <<<NULL>>>
    (MemberExpr 0x9e72850 <line:170:6> 'streambuf_type *' lvalue ->_M_sbuf 0x9e712f0
      (CXXThisExpr 0x9e72840 <col:6> 'const istreambuf_iterator<_CharT, _Traits> *' this))
    (CompoundStmt 0x9e72c30 <line:171:4, line:179:4>
      (IfStmt 0x9e72c10 <line:172:6, line:178:18>
        <<<NULL>>>
        (UnaryOperator 0x9e72938 <line:172:10, col:47> '<dependent type>' prefix '!'
          (CallExpr 0x9e72910 <col:11, col:47> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9e72890 <col:11, col:24> '<dependent type>' lvalue)
            (MemberExpr 0x9e728d8 <col:36> 'int_type':'typename _Traits::int_type' lvalue ->_M_c 0x9e71340
              (CXXThisExpr 0x9e728c8 <col:36> 'const istreambuf_iterator<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9e728f8 <col:42> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x9e72710 '__eof' 'const int_type':'const typename _Traits::int_type')))
        (BinaryOperator 0x9e72998 <line:173:8, col:16> '<dependent type>' '='
          (DeclRefExpr 0x9e7294c <col:8> 'int_type':'typename _Traits::int_type' lvalue Var 0x9e727e0 '__ret' 'int_type':'typename _Traits::int_type')
          (MemberExpr 0x9e72978 <col:16> 'int_type':'typename _Traits::int_type' lvalue ->_M_c 0x9e71340
            (CXXThisExpr 0x9e72968 <col:16> 'const istreambuf_iterator<_CharT, _Traits> *' this)))
        (IfStmt 0x9e72bf0 <line:174:11, line:178:18>
          <<<NULL>>>
          (UnaryOperator 0x9e72b18 <line:174:15, line:175:18> '<dependent type>' prefix '!'
            (CallExpr 0x9e72af0 <line:174:16, line:175:18> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9e729d0 <line:174:16, col:29> '<dependent type>' lvalue)
              (ParenExpr 0x9e72ac0 <col:41, col:66> '<dependent type>'
                (BinaryOperator 0x9e72aa8 <col:42, col:65> '<dependent type>' '='
                  (DeclRefExpr 0x9e72a04 <col:42> 'int_type':'typename _Traits::int_type' lvalue Var 0x9e727e0 '__ret' 'int_type':'typename _Traits::int_type')
                  (CallExpr 0x9e72a88 <col:50, col:65> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9e72a50 <col:50, col:59> '<dependent type>' lvalue
                      (MemberExpr 0x9e72a30 <col:50> 'streambuf_type *' lvalue ->_M_sbuf 0x9e712f0
                        (CXXThisExpr 0x9e72a20 <col:50> 'const istreambuf_iterator<_CharT, _Traits> *' this))))))
              (DeclRefExpr 0x9e72ad4 <line:175:13> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x9e72710 '__eof' 'const int_type':'const typename _Traits::int_type')))
          (BinaryOperator 0x9e72b78 <line:176:8, col:15> '<dependent type>' '='
            (MemberExpr 0x9e72b40 <col:8> 'int_type':'typename _Traits::int_type' lvalue ->_M_c 0x9e71340
              (CXXThisExpr 0x9e72b30 <col:8> 'const istreambuf_iterator<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9e72b60 <col:15> 'int_type':'typename _Traits::int_type' lvalue Var 0x9e727e0 '__ret' 'int_type':'typename _Traits::int_type'))
          (BinaryOperator 0x9e72bd8 <line:178:8, col:18> '<dependent type>' '='
            (MemberExpr 0x9e72ba0 <col:8> 'streambuf_type *' lvalue ->_M_sbuf 0x9e712f0
              (CXXThisExpr 0x9e72b90 <col:8> 'const istreambuf_iterator<_CharT, _Traits> *' this))
            (IntegerLiteral 0x9e72bc0 <col:18> 'int' 0)))))
    <<<NULL>>>)
  (ReturnStmt 0x9e72c80 <line:180:2, col:9>
    (DeclRefExpr 0x9e72c64 <col:9> 'int_type':'typename _Traits::int_type' lvalue Var 0x9e727e0 '__ret' 'int_type':'typename _Traits::int_type')))


        bool _M_at_eof() const (CompoundStmt 0x9e72e78 </usr/include/c++/4.6/bits/streambuf_iterator.h:185:7, line:188:7>
  (DeclStmt 0x9e72d70 <line:186:2, col:43>
    0x9e72cc0 "const int_type __eof =
      (CallExpr 0x9e72d50 <col:25, col:42> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e72d18 <col:25, col:38> '<dependent type>' lvalue))")
  (ReturnStmt 0x9e72e68 <line:187:2, col:49>
    (CallExpr 0x9e72e40 <col:9, col:49> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e72da0 <col:9, col:22> '<dependent type>' lvalue)
      (CallExpr 0x9e72e08 <col:34, col:41> '<dependent type>'
        (MemberExpr 0x9e72de8 <col:34> '<bound member function type>' ->_M_get 0x9e71ac0
          (CXXThisExpr 0x9e72dd8 <col:34> 'const istreambuf_iterator<_CharT, _Traits> *' this)))
      (DeclRefExpr 0x9e72e24 <col:44> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x9e72cc0 '__eof' 'const int_type':'const typename _Traits::int_type'))))


    };
    template <typename _CharT, typename _Traits> inline bool operator==(const istreambuf_iterator<_CharT, _Traits> &__a, const istreambuf_iterator<_CharT, _Traits> &__b) (CompoundStmt 0x9e733d8 </usr/include/c++/4.6/bits/streambuf_iterator.h:195:5, col:30>
  (ReturnStmt 0x9e733b8 <col:7, col:27>
    (CallExpr 0x9e73398 <col:14, col:27> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e73348 <col:14, col:18> '<dependent type>' lvalue
        (DeclRefExpr 0x9e73330 <col:14> 'const istreambuf_iterator<_CharT, _Traits>' lvalue ParmVar 0x9e73090 '__a' 'const istreambuf_iterator<_CharT, _Traits> &'))
      (DeclRefExpr 0x9e7337c <col:24> 'const istreambuf_iterator<_CharT, _Traits>' lvalue ParmVar 0x9e73200 '__b' 'const istreambuf_iterator<_CharT, _Traits> &'))))

;
    template <typename _CharT, typename _Traits> inline bool operator!=(const istreambuf_iterator<_CharT, _Traits> &__a, const istreambuf_iterator<_CharT, _Traits> &__b) (CompoundStmt 0x9e73900 </usr/include/c++/4.6/bits/streambuf_iterator.h:201:5, col:31>
  (ReturnStmt 0x9e738f0 <col:7, col:28>
    (UnaryOperator 0x9e738d8 <col:14, col:28> '<dependent type>' prefix '!'
      (CallExpr 0x9e738b8 <col:15, col:28> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e73868 <col:15, col:19> '<dependent type>' lvalue
          (DeclRefExpr 0x9e73850 <col:15> 'const istreambuf_iterator<_CharT, _Traits>' lvalue ParmVar 0x9e735d0 '__a' 'const istreambuf_iterator<_CharT, _Traits> &'))
        (DeclRefExpr 0x9e7389c <col:25> 'const istreambuf_iterator<_CharT, _Traits>' lvalue ParmVar 0x9e73740 '__b' 'const istreambuf_iterator<_CharT, _Traits> &')))))

;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class ostreambuf_iterator
template <typename _CharT = char, typename _Traits = std::char_traits<char>> class ostreambuf_iterator
template <typename _CharT, typename _Traits = char_traits<_CharT>> class ostreambuf_iterator : public iterator<std::output_iterator_tag, void, void, void, void> {
        class ostreambuf_iterator;
    public:
    public:
        typedef _CharT char_type;
        typedef _Traits traits_type;
        typedef basic_streambuf<_CharT, _Traits> streambuf_type;
        typedef basic_ostream<_CharT, _Traits> ostream_type;
        ;
    private:
    private:
        streambuf_type *_M_sbuf;
        bool _M_failed;
    public:
    public:
        ostreambuf_iterator<_CharT, _Traits>(ostream_type &__s) throw() : _M_sbuf((CallExpr 0x9e75268 </usr/include/c++/4.6/bits/streambuf_iterator.h:231:17, col:27> '<dependent type>'
  (CXXDependentScopeMemberExpr 0x9e75230 <col:17, col:21> '<dependent type>' lvalue
    (DeclRefExpr 0x9e75218 <col:17> 'ostream_type':'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9e74ab0 '__s' 'ostream_type &')))
), _M_failed((UnaryOperator 0x9e75318 </usr/include/c++/4.6/bits/streambuf_iterator.h:231:41, col:42> '<dependent type>' prefix '!'
  (MemberExpr 0x9e752f8 <col:42> 'streambuf_type *' lvalue ->_M_sbuf 0x9e749c0
    (CXXThisExpr 0x9e752e8 <col:42> 'ostreambuf_iterator<_CharT, _Traits> *' this)))
) (CompoundStmt 0x9e75370 </usr/include/c++/4.6/bits/streambuf_iterator.h:231:51, col:53>)


        ostreambuf_iterator<_CharT, _Traits>(streambuf_type *__s) throw() : _M_sbuf((DeclRefExpr 0x9e75380 </usr/include/c++/4.6/bits/streambuf_iterator.h:235:17> 'streambuf_type *' lvalue ParmVar 0x9e74be0 '__s' 'streambuf_type *')
), _M_failed((UnaryOperator 0x9e75408 </usr/include/c++/4.6/bits/streambuf_iterator.h:235:33, col:34> '<dependent type>' prefix '!'
  (MemberExpr 0x9e753e8 <col:34> 'streambuf_type *' lvalue ->_M_sbuf 0x9e749c0
    (CXXThisExpr 0x9e753d8 <col:34> 'ostreambuf_iterator<_CharT, _Traits> *' this)))
) (CompoundStmt 0x9e75460 </usr/include/c++/4.6/bits/streambuf_iterator.h:235:43, col:45>)


        ostreambuf_iterator<_CharT, _Traits> &operator=(_CharT __c) (CompoundStmt 0x9e75730 </usr/include/c++/4.6/bits/streambuf_iterator.h:240:7, line:245:7>
  (IfStmt 0x9e756d8 <line:241:2, line:243:16>
    <<<NULL>>>
    (BinaryOperator 0x9e75668 <line:241:6, line:242:62> '<dependent type>' '&&'
      (UnaryOperator 0x9e754b0 <line:241:6, col:7> '_Bool' prefix '!'
        (ImplicitCastExpr 0x9e754a0 <col:7> '_Bool' <LValueToRValue>
          (MemberExpr 0x9e75480 <col:7> '_Bool' lvalue ->_M_failed 0x9e74a00
            (CXXThisExpr 0x9e75470 <col:7> 'ostreambuf_iterator<_CharT, _Traits> *' this))))
      (CallExpr 0x9e75640 <line:242:6, col:62> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e754f0 <col:6, col:15> '<dependent type>' lvalue)
        (CallExpr 0x9e755a8 <col:27, col:45> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9e75558 <col:27, col:36> '<dependent type>' lvalue
            (MemberExpr 0x9e75538 <col:27> 'streambuf_type *' lvalue ->_M_sbuf 0x9e749c0
              (CXXThisExpr 0x9e75528 <col:27> 'ostreambuf_iterator<_CharT, _Traits> *' this)))
          (DeclRefExpr 0x9e7558c <col:42> '_CharT' lvalue ParmVar 0x9e74ce0 '__c' '_CharT'))
        (CallExpr 0x9e75620 <col:48, col:61> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9e755e8 <col:48, col:57> '<dependent type>' lvalue))))
    (BinaryOperator 0x9e756c0 <line:243:4, col:16> '<dependent type>' '='
      (MemberExpr 0x9e75690 <col:4> '_Bool' lvalue ->_M_failed 0x9e74a00
        (CXXThisExpr 0x9e75680 <col:4> 'ostreambuf_iterator<_CharT, _Traits> *' this))
      (CXXBoolLiteralExpr 0x9e756b0 <col:16> '_Bool' true))
    <<<NULL>>>)
  (ReturnStmt 0x9e75720 <line:244:2, col:10>
    (UnaryOperator 0x9e75708 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9e756f8 <col:10> 'ostreambuf_iterator<_CharT, _Traits> *' this))))


        ostreambuf_iterator<_CharT, _Traits> &operator*() (CompoundStmt 0x9e75780 </usr/include/c++/4.6/bits/streambuf_iterator.h:250:7, col:23>
  (ReturnStmt 0x9e75770 <col:9, col:17>
    (UnaryOperator 0x9e75758 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9e75748 <col:17> 'ostreambuf_iterator<_CharT, _Traits> *' this))))


        ostreambuf_iterator<_CharT, _Traits> &operator++(int) (CompoundStmt 0x9e757d0 </usr/include/c++/4.6/bits/streambuf_iterator.h:255:7, col:23>
  (ReturnStmt 0x9e757c0 <col:9, col:17>
    (UnaryOperator 0x9e757a8 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9e75798 <col:17> 'ostreambuf_iterator<_CharT, _Traits> *' this))))


        ostreambuf_iterator<_CharT, _Traits> &operator++() (CompoundStmt 0x9e75820 </usr/include/c++/4.6/bits/streambuf_iterator.h:260:7, col:23>
  (ReturnStmt 0x9e75810 <col:9, col:17>
    (UnaryOperator 0x9e757f8 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9e757e8 <col:17> 'ostreambuf_iterator<_CharT, _Traits> *' this))))


        bool failed() const throw() (CompoundStmt 0x9e75898 </usr/include/c++/4.6/bits/streambuf_iterator.h:265:7, col:27>
  (ReturnStmt 0x9e75888 <col:9, col:16>
    (MemberExpr 0x9e75868 <col:16> 'const _Bool' lvalue ->_M_failed 0x9e74a00
      (CXXThisExpr 0x9e75858 <col:16> 'const ostreambuf_iterator<_CharT, _Traits> *' this))))


        ostreambuf_iterator<_CharT, _Traits> &_M_put(const _CharT *__ws, streamsize __len) (CompoundStmt 0x9e75c28 </usr/include/c++/4.6/bits/streambuf_iterator.h:269:7, line:275:7>
  (IfStmt 0x9e75bd0 <line:270:2, line:273:16>
    <<<NULL>>>
    (BinaryOperator 0x9e75b60 <line:270:6, line:272:10> '<dependent type>' '&&'
      (CallExpr 0x9e75958 <line:270:6, col:39> 'long'
        (ImplicitCastExpr 0x9e75948 <col:6> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9e758ac <col:6> 'long (long, long)' lvalue Function 0x9d45c10 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0x9e75980 <col:23, col:24> 'long' <IntegralCast>
          (UnaryOperator 0x9e75908 <col:23, col:24> '_Bool' prefix '!'
            (ImplicitCastExpr 0x9e758f8 <col:24> '_Bool' <LValueToRValue>
              (MemberExpr 0x9e758d8 <col:24> '_Bool' lvalue ->_M_failed 0x9e74a00
                (CXXThisExpr 0x9e758c8 <col:24> 'ostreambuf_iterator<_CharT, _Traits> *' this)))))
        (ImplicitCastExpr 0x9e75990 <col:35> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0x9e75920 <col:35> '_Bool' true)))
      (CallExpr 0x9e75b38 <line:271:9, line:272:10> '<dependent type>'
        (DeclRefExpr 0x9e7599c <line:271:9> 'long (long, long)' lvalue Function 0x9d45c10 '__builtin_expect' 'long (long, long)')
        (CXXOperatorCallExpr 0x9e75b00 <col:26, col:63> '<dependent type>'
          (UnresolvedLookupExpr 0x9e75aa8 <col:60, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e73820 0x9bacde0 0x9bc3130 0x9bc62c0 0x9c11360 0x9c32300 0x9c32670 0x9d60120 0x9d60630 0x9d60b40)
          (CallExpr 0x9e75a68 <col:26, col:58> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9e75a00 <col:26, col:41> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0x9e759c8 <col:26, col:32> '<dependent type>' lvalue
                (CXXThisExpr 0x9e759b8 <col:26> 'ostreambuf_iterator<_CharT, _Traits> *' this)))
            (DeclRefExpr 0x9e75a34 <col:47> 'const _CharT *' lvalue ParmVar 0x9e750d0 '__ws' 'const _CharT *')
            (DeclRefExpr 0x9e75a4c <col:53> 'streamsize':'int' lvalue ParmVar 0x9e75110 '__len' 'streamsize':'int'))
          (DeclRefExpr 0x9e75a8c <col:63> 'streamsize':'int' lvalue ParmVar 0x9e75110 '__len' 'streamsize':'int'))
        (CXXBoolLiteralExpr 0x9e75b28 <line:272:5> '_Bool' false)))
    (BinaryOperator 0x9e75bb8 <line:273:4, col:16> '<dependent type>' '='
      (MemberExpr 0x9e75b88 <col:4> '_Bool' lvalue ->_M_failed 0x9e74a00
        (CXXThisExpr 0x9e75b78 <col:4> 'ostreambuf_iterator<_CharT, _Traits> *' this))
      (CXXBoolLiteralExpr 0x9e75ba8 <col:16> '_Bool' true))
    <<<NULL>>>)
  (ReturnStmt 0x9e75c18 <line:274:2, col:10>
    (UnaryOperator 0x9e75c00 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9e75bf0 <col:10> 'ostreambuf_iterator<_CharT, _Traits> *' this))))


    };
    template <typename _CharT> typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, ostreambuf_iterator<_CharT> >::__type copy(istreambuf_iterator<_CharT> __first, istreambuf_iterator<_CharT> __last, ostreambuf_iterator<_CharT> __result) (CompoundStmt 0x9e76a30 </usr/include/c++/4.6/bits/streambuf_iterator.h:285:5, line:294:5>
  (IfStmt 0x9e769e8 <line:286:7, line:292:2>
    <<<NULL>>>
    (BinaryOperator 0x9e76770 <line:286:11, col:59> '<dependent type>' '&&'
      (BinaryOperator 0x9e766f0 <col:11, col:38> '<dependent type>' '&&'
        (CXXDependentScopeMemberExpr 0x9e76650 <col:11, col:19> '<dependent type>' lvalue
          (DeclRefExpr 0x9e76634 <col:11> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0x9e761b0 '__first' 'istreambuf_iterator<_CharT>'))
        (UnaryOperator 0x9e766d8 <col:30, col:38> '<dependent type>' prefix '!'
          (CXXDependentScopeMemberExpr 0x9e766a0 <col:31, col:38> '<dependent type>' lvalue
            (DeclRefExpr 0x9e76684 <col:31> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0x9e76340 '__last' 'istreambuf_iterator<_CharT>'))))
      (UnaryOperator 0x9e76758 <col:49, col:59> '<dependent type>' prefix '!'
        (CXXDependentScopeMemberExpr 0x9e76720 <col:50, col:59> '<dependent type>' lvalue
          (DeclRefExpr 0x9e76708 <col:50> 'ostreambuf_iterator<_CharT>' lvalue ParmVar 0x9e764d0 '__result' 'ostreambuf_iterator<_CharT>'))))
    (CompoundStmt 0x9e769c8 <line:287:2, line:292:2>
      (DeclStmt 0x9e767c8 <line:288:4, col:16>
        0x9e76790 "bool __ineof")
      (CallExpr 0x9e768c8 <line:289:4, col:68> '<dependent type>'
        (UnresolvedLookupExpr 0x9e767d8 <col:4> '<overloaded function type>' lvalue (ADL) = '1' 0x9e410c0)
        (CXXDependentScopeMemberExpr 0x9e76828 <col:26, col:34> '<dependent type>' lvalue
          (DeclRefExpr 0x9e7680c <col:26> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0x9e761b0 '__first' 'istreambuf_iterator<_CharT>'))
        (CXXDependentScopeMemberExpr 0x9e76878 <col:43, col:52> '<dependent type>' lvalue
          (DeclRefExpr 0x9e7685c <col:43> 'ostreambuf_iterator<_CharT>' lvalue ParmVar 0x9e764d0 '__result' 'ostreambuf_iterator<_CharT>'))
        (DeclRefExpr 0x9e768ac <col:61> '_Bool' lvalue Var 0x9e76790 '__ineof' '_Bool'))
      (IfStmt 0x9e769a8 <line:290:4, line:291:27>
        <<<NULL>>>
        (UnaryOperator 0x9e76918 <line:290:8, col:9> '_Bool' prefix '!'
          (ImplicitCastExpr 0x9e76908 <col:9> '_Bool' <LValueToRValue>
            (DeclRefExpr 0x9e768f0 <col:9> '_Bool' lvalue Var 0x9e76790 '__ineof' '_Bool')))
        (BinaryOperator 0x9e76990 <line:291:6, col:27> '<dependent type>' '='
          (CXXDependentScopeMemberExpr 0x9e76948 <col:6, col:15> '<dependent type>' lvalue
            (DeclRefExpr 0x9e7692c <col:6> 'ostreambuf_iterator<_CharT>' lvalue ParmVar 0x9e764d0 '__result' 'ostreambuf_iterator<_CharT>'))
          (CXXBoolLiteralExpr 0x9e76980 <col:27> '_Bool' true))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9e76a20 <line:293:7, col:14>
    (DeclRefExpr 0x9e76a04 <col:14> 'ostreambuf_iterator<_CharT>' lvalue ParmVar 0x9e764d0 '__result' 'ostreambuf_iterator<_CharT>')))

;
    template <bool _IsMove, typename _CharT> typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, ostreambuf_iterator<_CharT> >::__type __copy_move_a2(_CharT *__first, _CharT *__last, ostreambuf_iterator<_CharT> __result) (CompoundStmt 0x9e77408 </usr/include/c++/4.6/bits/streambuf_iterator.h:301:5, line:306:5>
  (DeclStmt 0x9e77298 <line:302:7, col:48>
    0x9e771d0 "const streamsize __num =
      (CXXOperatorCallExpr 0x9e77270 <col:32, col:41> '<dependent type>'
        (UnresolvedLookupExpr 0x9e77238 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
        (DeclRefExpr 0x9e77204 <col:32> '_CharT *' lvalue ParmVar 0x9e76ed0 '__last' '_CharT *')
        (DeclRefExpr 0x9e7721c <col:41> '_CharT *' lvalue ParmVar 0x9e76e80 '__first' '_CharT *'))")
  (IfStmt 0x9e773a8 <line:303:7, line:304:32>
    <<<NULL>>>
    (BinaryOperator 0x9e772e8 <line:303:11, col:19> '_Bool' '>'
      (ImplicitCastExpr 0x9e772d8 <col:11> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0x9e772a8 <col:11> 'const streamsize':'const int' lvalue Var 0x9e771d0 '__num' 'const streamsize':'const int'))
      (IntegerLiteral 0x9e772c0 <col:19> 'int' 0))
    (CallExpr 0x9e77380 <line:304:2, col:32> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e77318 <col:2, col:11> '<dependent type>' lvalue
        (DeclRefExpr 0x9e77300 <col:2> 'ostreambuf_iterator<_CharT>' lvalue ParmVar 0x9e77060 '__result' 'ostreambuf_iterator<_CharT>'))
      (DeclRefExpr 0x9e7734c <col:18> '_CharT *' lvalue ParmVar 0x9e76e80 '__first' '_CharT *')
      (DeclRefExpr 0x9e77364 <col:27> 'const streamsize':'const int' lvalue Var 0x9e771d0 '__num' 'const streamsize':'const int'))
    <<<NULL>>>)
  (ReturnStmt 0x9e773f8 <line:305:7, col:14>
    (DeclRefExpr 0x9e773e0 <col:14> 'ostreambuf_iterator<_CharT>' lvalue ParmVar 0x9e77060 '__result' 'ostreambuf_iterator<_CharT>')))

;
    template <bool _IsMove, typename _CharT> typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, ostreambuf_iterator<_CharT> >::__type __copy_move_a2(const _CharT *__first, const _CharT *__last, ostreambuf_iterator<_CharT> __result) (CompoundStmt 0x9e77dc0 </usr/include/c++/4.6/bits/streambuf_iterator.h:313:5, line:318:5>
  (DeclStmt 0x9e77c68 <line:314:7, col:48>
    0x9e77ba0 "const streamsize __num =
      (CXXOperatorCallExpr 0x9e77c40 <col:32, col:41> '<dependent type>'
        (UnresolvedLookupExpr 0x9e77c08 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
        (DeclRefExpr 0x9e77bd4 <col:32> 'const _CharT *' lvalue ParmVar 0x9e778a0 '__last' 'const _CharT *')
        (DeclRefExpr 0x9e77bec <col:41> 'const _CharT *' lvalue ParmVar 0x9e77850 '__first' 'const _CharT *'))")
  (IfStmt 0x9e77d78 <line:315:7, line:316:32>
    <<<NULL>>>
    (BinaryOperator 0x9e77cb8 <line:315:11, col:19> '_Bool' '>'
      (ImplicitCastExpr 0x9e77ca8 <col:11> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0x9e77c78 <col:11> 'const streamsize':'const int' lvalue Var 0x9e77ba0 '__num' 'const streamsize':'const int'))
      (IntegerLiteral 0x9e77c90 <col:19> 'int' 0))
    (CallExpr 0x9e77d50 <line:316:2, col:32> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e77ce8 <col:2, col:11> '<dependent type>' lvalue
        (DeclRefExpr 0x9e77cd0 <col:2> 'ostreambuf_iterator<_CharT>' lvalue ParmVar 0x9e77a30 '__result' 'ostreambuf_iterator<_CharT>'))
      (DeclRefExpr 0x9e77d1c <col:18> 'const _CharT *' lvalue ParmVar 0x9e77850 '__first' 'const _CharT *')
      (DeclRefExpr 0x9e77d34 <col:27> 'const streamsize':'const int' lvalue Var 0x9e77ba0 '__num' 'const streamsize':'const int'))
    <<<NULL>>>)
  (ReturnStmt 0x9e77db0 <line:317:7, col:14>
    (DeclRefExpr 0x9e77d94 <col:14> 'ostreambuf_iterator<_CharT>' lvalue ParmVar 0x9e77a30 '__result' 'ostreambuf_iterator<_CharT>')))

;
    template <bool _IsMove, typename _CharT> typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, _CharT *>::__type __copy_move_a2(istreambuf_iterator<_CharT> __first, istreambuf_iterator<_CharT> __last, _CharT *__result) (CompoundStmt 0x9e79418 </usr/include/c++/4.6/bits/streambuf_iterator.h:325:5, line:353:5>
  (DeclStmt 0x9e786b0 <line:326:7, col:78>
    0x9e78680 "typedef istreambuf_iterator<_CharT> __is_iterator_type")
  (DeclStmt 0x9e787a0 <line:327:7, col:71>
    0x9e78770 "typedef typename __is_iterator_type::traits_type traits_type")
  (DeclStmt 0x9e78860 <line:328:7, col:74>
    0x9e78830 "typedef typename __is_iterator_type::streambuf_type streambuf_type")
  (DeclStmt 0x9e78950 <line:329:7, col:68>
    0x9e78920 "typedef typename traits_type::int_type int_type")
  (IfStmt 0x9e793d0 <line:331:7, line:351:2>
    <<<NULL>>>
    (BinaryOperator 0x9e78a18 <line:331:11, col:38> '<dependent type>' '&&'
      (CXXDependentScopeMemberExpr 0x9e78978 <col:11, col:19> '<dependent type>' lvalue
        (DeclRefExpr 0x9e78960 <col:11> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0x9e78210 '__first' 'istreambuf_iterator<_CharT>'))
      (UnaryOperator 0x9e78a00 <col:30, col:38> '<dependent type>' prefix '!'
        (CXXDependentScopeMemberExpr 0x9e789c8 <col:31, col:38> '<dependent type>' lvalue
          (DeclRefExpr 0x9e789ac <col:31> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0x9e783a0 '__last' 'istreambuf_iterator<_CharT>'))))
    (CompoundStmt 0x9e793b0 <line:332:2, line:351:2>
      (DeclStmt 0x9e78b18 <line:333:4, col:42>
        0x9e78a90 "streambuf_type *__sb =
          (CXXDependentScopeMemberExpr 0x9e78ae0 <col:27, col:35> '<dependent type>' lvalue
            (DeclRefExpr 0x9e78ac4 <col:27> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0x9e78210 '__first' 'istreambuf_iterator<_CharT>'))")
      (DeclStmt 0x9e78bf8 <line:334:4, col:32>
        0x9e78b50 "int_type __c =
          (CallExpr 0x9e78bd8 <col:19, col:31> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9e78ba0 <col:19, col:25> '<dependent type>' lvalue
              (DeclRefExpr 0x9e78b84 <col:19> 'streambuf_type *' lvalue Var 0x9e78a90 '__sb' 'streambuf_type *')))")
      (WhileStmt 0x9e79398 <line:335:4, line:350:6>
        <<<NULL>>>
        (UnaryOperator 0x9e78cf8 <line:335:11, col:60> '<dependent type>' prefix '!'
          (CallExpr 0x9e78cd0 <col:12, col:60> '<dependent type>'
            (DependentScopeDeclRefExpr 0x9e78c28 <col:12, col:25> '<dependent type>' lvalue)
            (DeclRefExpr 0x9e78c4c <col:37> 'int_type':'typename traits_type::int_type' lvalue Var 0x9e78b50 '__c' 'int_type':'typename traits_type::int_type')
            (CallExpr 0x9e78cb0 <col:42, col:59> '<dependent type>'
              (DependentScopeDeclRefExpr 0x9e78c88 <col:42, col:55> '<dependent type>' lvalue))))
        (CompoundStmt 0x9e79380 <line:336:6, line:350:6>
          (DeclStmt 0x9e78e98 <line:337:8, col:59>
            0x9e78d20 "const streamsize __n =
              (CXXOperatorCallExpr 0x9e78e70 <col:31, col:58> '<dependent type>'
                (UnresolvedLookupExpr 0x9e78e38 <col:45, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
                (CallExpr 0x9e78da8 <col:31, col:43> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9e78d70 <col:31, col:37> '<dependent type>' lvalue
                    (DeclRefExpr 0x9e78d54 <col:31> 'streambuf_type *' lvalue Var 0x9e78a90 '__sb' 'streambuf_type *')))
                (CallExpr 0x9e78e18 <col:47, col:58> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9e78de0 <col:47, col:53> '<dependent type>' lvalue
                    (DeclRefExpr 0x9e78dc4 <col:47> 'streambuf_type *' lvalue Var 0x9e78a90 '__sb' 'streambuf_type *'))))")
          (IfStmt 0x9e79360 <line:338:8, line:349:3>
            <<<NULL>>>
            (BinaryOperator 0x9e78ee8 <line:338:12, col:18> '_Bool' '>'
              (ImplicitCastExpr 0x9e78ed8 <col:12> 'streamsize':'int' <LValueToRValue>
                (DeclRefExpr 0x9e78ea8 <col:12> 'const streamsize':'const int' lvalue Var 0x9e78d20 '__n' 'const streamsize':'const int'))
              (IntegerLiteral 0x9e78ec0 <col:18> 'int' 1))
            (CompoundStmt 0x9e79190 <line:339:3, line:344:3>
              (CallExpr 0x9e78ff0 <line:340:5, col:50> '<dependent type>'
                (DependentScopeDeclRefExpr 0x9e78f28 <col:5, col:18> '<dependent type>' lvalue)
                (DeclRefExpr 0x9e78f4c <col:23> '_CharT *' lvalue ParmVar 0x9e783f0 '__result' '_CharT *')
                (CallExpr 0x9e78fb8 <col:33, col:44> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9e78f80 <col:33, col:39> '<dependent type>' lvalue
                    (DeclRefExpr 0x9e78f64 <col:33> 'streambuf_type *' lvalue Var 0x9e78a90 '__sb' 'streambuf_type *')))
                (DeclRefExpr 0x9e78fd4 <col:47> 'const streamsize':'const int' lvalue Var 0x9e78d20 '__n' 'const streamsize':'const int'))
              (CallExpr 0x9e79080 <line:341:5, col:27> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9e79030 <col:5, col:11> '<dependent type>' lvalue
                  (DeclRefExpr 0x9e79018 <col:5> 'streambuf_type *' lvalue Var 0x9e78a90 '__sb' 'streambuf_type *'))
                (DeclRefExpr 0x9e79064 <col:24> 'const streamsize':'const int' lvalue Var 0x9e78d20 '__n' 'const streamsize':'const int'))
              (CompoundAssignOperator 0x9e790d0 <line:342:5, col:17> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                (DeclRefExpr 0x9e790a0 <col:5> '_CharT *' lvalue ParmVar 0x9e783f0 '__result' '_CharT *')
                (DeclRefExpr 0x9e790b8 <col:17> 'const streamsize':'const int' lvalue Var 0x9e78d20 '__n' 'const streamsize':'const int'))
              (BinaryOperator 0x9e79178 <line:343:5, col:27> '<dependent type>' '='
                (DeclRefExpr 0x9e790f0 <col:5> 'int_type':'typename traits_type::int_type' lvalue Var 0x9e78b50 '__c' 'int_type':'typename traits_type::int_type')
                (CallExpr 0x9e79158 <col:11, col:27> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9e79120 <col:11, col:17> '<dependent type>' lvalue
                    (DeclRefExpr 0x9e79108 <col:11> 'streambuf_type *' lvalue Var 0x9e78a90 '__sb' 'streambuf_type *')))))
            (CompoundStmt 0x9e79348 <line:346:3, line:349:3>
              (BinaryOperator 0x9e79290 <line:347:5, col:48> '<dependent type>' '='
                (UnaryOperator 0x9e791f8 <col:5, col:14> '<dependent type>' prefix '*'
                  (UnaryOperator 0x9e791e0 <col:6, col:14> '<dependent type>' postfix '++'
                    (DeclRefExpr 0x9e791b0 <col:6> '_CharT *' lvalue ParmVar 0x9e783f0 '__result' '_CharT *')))
                (CallExpr 0x9e79270 <col:19, col:48> '<dependent type>'
                  (DependentScopeDeclRefExpr 0x9e79230 <col:19, col:32> '<dependent type>' lvalue)
                  (DeclRefExpr 0x9e79254 <col:45> 'int_type':'typename traits_type::int_type' lvalue Var 0x9e78b50 '__c' 'int_type':'typename traits_type::int_type')))
              (BinaryOperator 0x9e79330 <line:348:5, col:24> '<dependent type>' '='
                (DeclRefExpr 0x9e792a8 <col:5> 'int_type':'typename traits_type::int_type' lvalue Var 0x9e78b50 '__c' 'int_type':'typename traits_type::int_type')
                (CallExpr 0x9e79310 <col:11, col:24> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9e792d8 <col:11, col:17> '<dependent type>' lvalue
                    (DeclRefExpr 0x9e792c0 <col:11> 'streambuf_type *' lvalue Var 0x9e78a90 '__sb' 'streambuf_type *')))))))))
    <<<NULL>>>)
  (ReturnStmt 0x9e79408 <line:352:7, col:14>
    (DeclRefExpr 0x9e793ec <col:14> '_CharT *' lvalue ParmVar 0x9e783f0 '__result' '_CharT *')))

;
    template <typename _CharT> typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, istreambuf_iterator<_CharT> >::__type find(istreambuf_iterator<_CharT> __first, istreambuf_iterator<_CharT> __last, const _CharT &__val) (CompoundStmt 0x9e7af88 </usr/include/c++/4.6/bits/streambuf_iterator.h:360:5, line:394:5>
  (DeclStmt 0x9e79df0 <line:361:7, col:78>
    0x9e79dc0 "typedef istreambuf_iterator<_CharT> __is_iterator_type")
  (DeclStmt 0x9e79ee0 <line:362:7, col:71>
    0x9e79eb0 "typedef typename __is_iterator_type::traits_type traits_type")
  (DeclStmt 0x9e79fa0 <line:363:7, col:74>
    0x9e79f70 "typedef typename __is_iterator_type::streambuf_type streambuf_type")
  (DeclStmt 0x9e7a090 <line:364:7, col:68>
    0x9e7a060 "typedef typename traits_type::int_type int_type")
  (IfStmt 0x9e7af40 <line:366:7, line:392:2>
    <<<NULL>>>
    (BinaryOperator 0x9e7a158 <line:366:11, col:38> '<dependent type>' '&&'
      (CXXDependentScopeMemberExpr 0x9e7a0b8 <col:11, col:19> '<dependent type>' lvalue
        (DeclRefExpr 0x9e7a0a0 <col:11> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0x9e79930 '__first' 'istreambuf_iterator<_CharT>'))
      (UnaryOperator 0x9e7a140 <col:30, col:38> '<dependent type>' prefix '!'
        (CXXDependentScopeMemberExpr 0x9e7a108 <col:31, col:38> '<dependent type>' lvalue
          (DeclRefExpr 0x9e7a0ec <col:31> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0x9e79ac0 '__last' 'istreambuf_iterator<_CharT>'))))
    (CompoundStmt 0x9e7af18 <line:367:2, line:392:2>
      (DeclStmt 0x9e7a248 <line:368:4, col:59>
        0x9e7a190 "const int_type __ival =
          (CallExpr 0x9e7a228 <col:28, col:58> '<dependent type>'
            (DependentScopeDeclRefExpr 0x9e7a1e8 <col:28, col:41> '<dependent type>' lvalue)
            (DeclRefExpr 0x9e7a20c <col:53> 'const _CharT' lvalue ParmVar 0x9e79b30 '__val' 'const _CharT &'))")
      (DeclStmt 0x9e7a348 <line:369:4, col:42>
        0x9e7a2c0 "streambuf_type *__sb =
          (CXXDependentScopeMemberExpr 0x9e7a310 <col:27, col:35> '<dependent type>' lvalue
            (DeclRefExpr 0x9e7a2f4 <col:27> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0x9e79930 '__first' 'istreambuf_iterator<_CharT>'))")
      (DeclStmt 0x9e7a408 <line:370:4, col:32>
        0x9e7a360 "int_type __c =
          (CallExpr 0x9e7a3e8 <col:19, col:31> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9e7a3b0 <col:19, col:25> '<dependent type>' lvalue
              (DeclRefExpr 0x9e7a394 <col:19> 'streambuf_type *' lvalue Var 0x9e7a2c0 '__sb' 'streambuf_type *')))")
      (WhileStmt 0x9e7acd8 <line:371:4, line:386:6>
        <<<NULL>>>
        (BinaryOperator 0x9e7a5d8 <line:371:11, line:372:44> '<dependent type>' '&&'
          (UnaryOperator 0x9e7a508 <line:371:11, col:60> '<dependent type>' prefix '!'
            (CallExpr 0x9e7a4e0 <col:12, col:60> '<dependent type>'
              (DependentScopeDeclRefExpr 0x9e7a438 <col:12, col:25> '<dependent type>' lvalue)
              (DeclRefExpr 0x9e7a45c <col:37> 'int_type':'typename traits_type::int_type' lvalue Var 0x9e7a360 '__c' 'int_type':'typename traits_type::int_type')
              (CallExpr 0x9e7a4c0 <col:42, col:59> '<dependent type>'
                (DependentScopeDeclRefExpr 0x9e7a498 <col:42, col:55> '<dependent type>' lvalue))))
          (UnaryOperator 0x9e7a5c0 <line:372:7, col:44> '<dependent type>' prefix '!'
            (CallExpr 0x9e7a598 <col:8, col:44> '<dependent type>'
              (DependentScopeDeclRefExpr 0x9e7a540 <col:8, col:21> '<dependent type>' lvalue)
              (DeclRefExpr 0x9e7a564 <col:33> 'int_type':'typename traits_type::int_type' lvalue Var 0x9e7a360 '__c' 'int_type':'typename traits_type::int_type')
              (DeclRefExpr 0x9e7a57c <col:38> 'const int_type':'const typename traits_type::int_type' lvalue Var 0x9e7a190 '__ival' 'const int_type':'const typename traits_type::int_type'))))
        (CompoundStmt 0x9e7acc0 <line:373:6, line:386:6>
          (DeclStmt 0x9e7a778 <line:374:8, col:53>
            0x9e7a600 "streamsize __n =
              (CXXOperatorCallExpr 0x9e7a750 <col:25, col:52> '<dependent type>'
                (UnresolvedLookupExpr 0x9e7a718 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
                (CallExpr 0x9e7a688 <col:25, col:37> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9e7a650 <col:25, col:31> '<dependent type>' lvalue
                    (DeclRefExpr 0x9e7a634 <col:25> 'streambuf_type *' lvalue Var 0x9e7a2c0 '__sb' 'streambuf_type *')))
                (CallExpr 0x9e7a6f8 <col:41, col:52> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9e7a6c0 <col:41, col:47> '<dependent type>' lvalue
                    (DeclRefExpr 0x9e7a6a4 <col:41> 'streambuf_type *' lvalue Var 0x9e7a2c0 '__sb' 'streambuf_type *'))))")
          (IfStmt 0x9e7aca0 <line:375:8, line:385:22>
            <<<NULL>>>
            (BinaryOperator 0x9e7a7c8 <line:375:12, col:18> '_Bool' '>'
              (ImplicitCastExpr 0x9e7a7b8 <col:12> 'streamsize':'int' <LValueToRValue>
                (DeclRefExpr 0x9e7a788 <col:12> 'streamsize':'int' lvalue Var 0x9e7a600 '__n' 'streamsize':'int'))
              (IntegerLiteral 0x9e7a7a0 <col:18> 'int' 1))
            (CompoundStmt 0x9e7abe0 <line:376:3, line:383:3>
              (DeclStmt 0x9e7a958 <line:377:5, line:378:19>
                0x9e7a810 "const _CharT *__p =
                  (CallExpr 0x9e7a930 <line:377:25, line:378:18> '<dependent type>'
                    (DependentScopeDeclRefExpr 0x9e7a868 <line:377:25, col:38> '<dependent type>' lvalue)
                    (CallExpr 0x9e7a8e0 <col:43, col:54> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0x9e7a8a8 <col:43, col:49> '<dependent type>' lvalue
                        (DeclRefExpr 0x9e7a88c <col:43> 'streambuf_type *' lvalue Var 0x9e7a2c0 '__sb' 'streambuf_type *')))
                    (DeclRefExpr 0x9e7a8fc <line:378:8> 'streamsize':'int' lvalue Var 0x9e7a600 '__n' 'streamsize':'int')
                    (DeclRefExpr 0x9e7a914 <col:13> 'const _CharT' lvalue ParmVar 0x9e79b30 '__val' 'const _CharT &'))")
              (IfStmt 0x9e7aa98 <line:379:5, line:380:30>
                <<<NULL>>>
                (DeclRefExpr 0x9e7a968 <line:379:9> 'const _CharT *' lvalue Var 0x9e7a810 '__p' 'const _CharT *')
                (BinaryOperator 0x9e7aa80 <line:380:7, col:30> '<dependent type>' '='
                  (DeclRefExpr 0x9e7a980 <col:7> 'streamsize':'int' lvalue Var 0x9e7a600 '__n' 'streamsize':'int')
                  (CXXOperatorCallExpr 0x9e7aa58 <col:13, col:30> '<dependent type>'
                    (UnresolvedLookupExpr 0x9e7aa20 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
                    (DeclRefExpr 0x9e7a998 <col:13> 'const _CharT *' lvalue Var 0x9e7a810 '__p' 'const _CharT *')
                    (CallExpr 0x9e7aa00 <col:19, col:30> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0x9e7a9c8 <col:19, col:25> '<dependent type>' lvalue
                        (DeclRefExpr 0x9e7a9b0 <col:19> 'streambuf_type *' lvalue Var 0x9e7a2c0 '__sb' 'streambuf_type *')))))
                <<<NULL>>>)
              (CallExpr 0x9e7ab20 <line:381:5, col:27> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9e7aad0 <col:5, col:11> '<dependent type>' lvalue
                  (DeclRefExpr 0x9e7aab4 <col:5> 'streambuf_type *' lvalue Var 0x9e7a2c0 '__sb' 'streambuf_type *'))
                (DeclRefExpr 0x9e7ab04 <col:24> 'streamsize':'int' lvalue Var 0x9e7a600 '__n' 'streamsize':'int'))
              (BinaryOperator 0x9e7abc8 <line:382:5, col:23> '<dependent type>' '='
                (DeclRefExpr 0x9e7ab40 <col:5> 'int_type':'typename traits_type::int_type' lvalue Var 0x9e7a360 '__c' 'int_type':'typename traits_type::int_type')
                (CallExpr 0x9e7aba8 <col:11, col:23> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9e7ab70 <col:11, col:17> '<dependent type>' lvalue
                    (DeclRefExpr 0x9e7ab58 <col:11> 'streambuf_type *' lvalue Var 0x9e7a2c0 '__sb' 'streambuf_type *')))))
            (BinaryOperator 0x9e7ac88 <line:385:3, col:22> '<dependent type>' '='
              (DeclRefExpr 0x9e7ac00 <col:3> 'int_type':'typename traits_type::int_type' lvalue Var 0x9e7a360 '__c' 'int_type':'typename traits_type::int_type')
              (CallExpr 0x9e7ac68 <col:9, col:22> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9e7ac30 <col:9, col:15> '<dependent type>' lvalue
                  (DeclRefExpr 0x9e7ac18 <col:9> 'streambuf_type *' lvalue Var 0x9e7a2c0 '__sb' 'streambuf_type *')))))))
      (IfStmt 0x9e7aef8 <line:388:4, line:391:24>
        <<<NULL>>>
        (UnaryOperator 0x9e7ade0 <line:388:8, col:57> '<dependent type>' prefix '!'
          (CallExpr 0x9e7adb8 <col:9, col:57> '<dependent type>'
            (DependentScopeDeclRefExpr 0x9e7ad10 <col:9, col:22> '<dependent type>' lvalue)
            (DeclRefExpr 0x9e7ad34 <col:34> 'int_type':'typename traits_type::int_type' lvalue Var 0x9e7a360 '__c' 'int_type':'typename traits_type::int_type')
            (CallExpr 0x9e7ad98 <col:39, col:56> '<dependent type>'
              (DependentScopeDeclRefExpr 0x9e7ad70 <col:39, col:52> '<dependent type>' lvalue))))
        (BinaryOperator 0x9e7ae60 <line:389:6, col:21> '<dependent type>' '='
          (CXXDependentScopeMemberExpr 0x9e7ae10 <col:6, col:14> '<dependent type>' lvalue
            (DeclRefExpr 0x9e7adf4 <col:6> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0x9e79930 '__first' 'istreambuf_iterator<_CharT>'))
          (DeclRefExpr 0x9e7ae44 <col:21> 'int_type':'typename traits_type::int_type' lvalue Var 0x9e7a360 '__c' 'int_type':'typename traits_type::int_type'))
        (BinaryOperator 0x9e7aee0 <line:391:6, col:24> '<dependent type>' '='
          (CXXDependentScopeMemberExpr 0x9e7ae90 <col:6, col:14> '<dependent type>' lvalue
            (DeclRefExpr 0x9e7ae78 <col:6> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0x9e79930 '__first' 'istreambuf_iterator<_CharT>'))
          (IntegerLiteral 0x9e7aec8 <col:24> 'int' 0))))
    <<<NULL>>>)
  (ReturnStmt 0x9e7af78 <line:393:7, col:14>
    (DeclRefExpr 0x9e7af5c <col:14> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0x9e79930 '__first' 'istreambuf_iterator<_CharT>')))

;
}
namespace std {
    template <typename _Tp = float> void __convert_to_v(const char *, float &, ios_base::iostate &, const __c_locale &) throw()template <typename _Tp = double> void __convert_to_v(const char *, double &, ios_base::iostate &, const __c_locale &) throw()template <typename _Tp = long double> void __convert_to_v(const char *, long double &, ios_base::iostate &, const __c_locale &) throw()template <typename _Tp> void __convert_to_v(const char *, _Tp &, ios_base::iostate &, const __c_locale &) throw();
    void __convert_to_v(const char *, float &, ios_base::iostate &, const __c_locale &) throw();
    void __convert_to_v(const char *, double &, ios_base::iostate &, const __c_locale &) throw();
    void __convert_to_v(const char *, long double &, ios_base::iostate &, const __c_locale &) throw();
    template <typename _CharT, typename _Traits> struct __pad {
        struct __pad;
        static void _S_pad(std::ios_base &__io, _CharT __fill, _CharT *__news, const _CharT *__olds, streamsize __newlen, streamsize __oldlen);
    };
    template <typename _CharT> _CharT *__add_grouping(_CharT *__s, _CharT __sep, const char *__gbeg, size_t __gsize, const _CharT *__first, const _CharT *__last);
    template <typename _CharT> inline ostreambuf_iterator<_CharT> __write(ostreambuf_iterator<_CharT> __s, const _CharT *__ws, int __len) (CompoundStmt 0x9e7d978 </usr/include/c++/4.6/bits/locale_facets.h:114:5, line:117:5>
  (CallExpr 0x9e7d928 <line:115:7, col:29> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9e7d8c0 <col:7, col:11> '<dependent type>' lvalue
      (DeclRefExpr 0x9e7d8a4 <col:7> 'ostreambuf_iterator<_CharT>' lvalue ParmVar 0x9e7d680 '__s' 'ostreambuf_iterator<_CharT>'))
    (DeclRefExpr 0x9e7d8f4 <col:18> 'const _CharT *' lvalue ParmVar 0x9e7d6f0 '__ws' 'const _CharT *')
    (DeclRefExpr 0x9e7d90c <col:24> 'int' lvalue ParmVar 0x9e7d740 '__len' 'int'))
  (ReturnStmt 0x9e7d968 <line:116:7, col:14>
    (DeclRefExpr 0x9e7d94c <col:14> 'ostreambuf_iterator<_CharT>' lvalue ParmVar 0x9e7d680 '__s' 'ostreambuf_iterator<_CharT>')))

;
    template <typename _CharT, typename _OutIter> inline _OutIter __write(_OutIter __s, const _CharT *__ws, int __len) (CompoundStmt 0x9e7dea0 </usr/include/c++/4.6/bits/locale_facets.h:124:5, line:128:5>
  (ForStmt 0x9e7de50 <line:125:7, line:126:17>
    (DeclStmt 0x9e7dcd0 <line:125:12, col:23>
      0x9e7dc80 "int __j =
        (IntegerLiteral 0x9e7dcb8 <col:22> 'int' 0)")
    <<<NULL>>>
    (BinaryOperator 0x9e7dd30 <col:25, col:31> '_Bool' '<'
      (ImplicitCastExpr 0x9e7dd10 <col:25> 'int' <LValueToRValue>
        (DeclRefExpr 0x9e7dce0 <col:25> 'int' lvalue Var 0x9e7dc80 '__j' 'int'))
      (ImplicitCastExpr 0x9e7dd20 <col:31> 'int' <LValueToRValue>
        (DeclRefExpr 0x9e7dcf8 <col:31> 'int' lvalue ParmVar 0x9e7db10 '__len' 'int')))
    (BinaryOperator 0x9e7dda8 <col:38, col:47> '<dependent type>' ','
      (UnaryOperator 0x9e7dd60 <col:38, col:41> 'int' postfix '++'
        (DeclRefExpr 0x9e7dd48 <col:38> 'int' lvalue Var 0x9e7dc80 '__j' 'int'))
      (UnaryOperator 0x9e7dd90 <col:45, col:47> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9e7dd74 <col:47> '_OutIter' lvalue ParmVar 0x9e7da50 '__s' '_OutIter')))
    (BinaryOperator 0x9e7de38 <line:126:2, col:17> '<dependent type>' '='
      (UnaryOperator 0x9e7ddd8 <col:2, col:3> '<dependent type>' prefix '*'
        (DeclRefExpr 0x9e7ddc0 <col:3> '_OutIter' lvalue ParmVar 0x9e7da50 '__s' '_OutIter'))
      (ArraySubscriptExpr 0x9e7de20 <col:9, col:17> '<dependent type>' lvalue
        (DeclRefExpr 0x9e7ddec <col:9> 'const _CharT *' lvalue ParmVar 0x9e7dac0 '__ws' 'const _CharT *')
        (DeclRefExpr 0x9e7de04 <col:14> 'int' lvalue Var 0x9e7dc80 '__j' 'int'))))
  (ReturnStmt 0x9e7de90 <line:127:7, col:14>
    (DeclRefExpr 0x9e7de74 <col:14> '_OutIter' lvalue ParmVar 0x9e7da50 '__s' '_OutIter')))

;
    template <typename _CharT = wchar_t> class __ctype_abstract_base : public locale::facet, public std::ctype_base {
        class __ctype_abstract_base;
    public:
    public:
        typedef wchar_t char_type;
        bool is(mask __m, char_type __c) const;
        const char_type *is(const char_type *__lo, const char_type *__hi, mask *__vec) const;
        const char_type *scan_is(mask __m, const char_type *__lo, const char_type *__hi) const;
        const char_type *scan_not(mask __m, const char_type *__lo, const char_type *__hi) const;
        char_type toupper(char_type __c) const;
        const char_type *toupper(char_type *__lo, const char_type *__hi) const;
        char_type tolower(char_type __c) const;
        const char_type *tolower(char_type *__lo, const char_type *__hi) const;
        char_type widen(char __c) const;
        const char *widen(const char *__lo, const char *__hi, char_type *__to) const;
        char narrow(char_type __c, char __dfault) const;
        const char_type *narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__to) const;
    protected:
    protected:
        __ctype_abstract_base(size_t __refs);
        virtual void ~__ctype_abstract_base();
        virtual bool do_is(mask __m, char_type __c) const = 0;
        virtual const char_type *do_is(const char_type *__lo, const char_type *__hi, mask *__vec) const = 0;
        virtual const char_type *do_scan_is(mask __m, const char_type *__lo, const char_type *__hi) const = 0;
        virtual const char_type *do_scan_not(mask __m, const char_type *__lo, const char_type *__hi) const = 0;
        virtual char_type do_toupper(char_type) const = 0;
        virtual const char_type *do_toupper(char_type *__lo, const char_type *__hi) const = 0;
        virtual char_type do_tolower(char_type) const = 0;
        virtual const char_type *do_tolower(char_type *__lo, const char_type *__hi) const = 0;
        virtual char_type do_widen(char) const = 0;
        virtual const char *do_widen(const char *__lo, const char *__hi, char_type *__dest) const = 0;
        virtual char do_narrow(char_type, char __dfault) const = 0;
        virtual const char_type *do_narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__dest) const = 0;
        inline std::__ctype_abstract_base<wchar_t> &operator=(const std::__ctype_abstract_base<wchar_t> &);
    }
template <typename _CharT> class __ctype_abstract_base : public locale::facet, public std::ctype_base {
        class __ctype_abstract_base;
    public:
    public:
        typedef _CharT char_type;
        bool is(mask __m, char_type __c) const (CompoundStmt 0x9e81698 </usr/include/c++/4.6/bits/locale_facets.h:163:7, col:39>
  (ReturnStmt 0x9e81688 <col:9, col:36>
    (CallExpr 0x9e81660 <col:16, col:36> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e815f8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9e815e8 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0x9e8162c <col:28> 'mask':'unsigned short' lvalue ParmVar 0x9e7e230 '__m' 'mask':'unsigned short')
      (DeclRefExpr 0x9e81644 <col:33> 'char_type':'_CharT' lvalue ParmVar 0x9e7e290 '__c' 'char_type':'_CharT'))))


        const char_type *is(const char_type *__lo, const char_type *__hi, mask *__vec) const (CompoundStmt 0x9e81778 </usr/include/c++/4.6/bits/locale_facets.h:180:7, col:48>
  (ReturnStmt 0x9e81768 <col:9, col:45>
    (CallExpr 0x9e81740 <col:16, col:45> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e816c0 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9e816b0 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0x9e816f4 <col:28> 'const char_type *' lvalue ParmVar 0x9e7e3d0 '__lo' 'const char_type *')
      (DeclRefExpr 0x9e8170c <col:34> 'const char_type *' lvalue ParmVar 0x9e7e420 '__hi' 'const char_type *')
      (DeclRefExpr 0x9e81724 <col:40> 'mask *' lvalue ParmVar 0x9e7e490 '__vec' 'mask *'))))


        const char_type *scan_is(mask __m, const char_type *__lo, const char_type *__hi) const (CompoundStmt 0x9e81858 </usr/include/c++/4.6/bits/locale_facets.h:196:7, col:51>
  (ReturnStmt 0x9e81848 <col:9, col:48>
    (CallExpr 0x9e81820 <col:16, col:48> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e817a0 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9e81790 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0x9e817d4 <col:33> 'mask':'unsigned short' lvalue ParmVar 0x9e7e5d0 '__m' 'mask':'unsigned short')
      (DeclRefExpr 0x9e817ec <col:38> 'const char_type *' lvalue ParmVar 0x9e7e620 '__lo' 'const char_type *')
      (DeclRefExpr 0x9e81804 <col:44> 'const char_type *' lvalue ParmVar 0x9e7e670 '__hi' 'const char_type *'))))


        const char_type *scan_not(mask __m, const char_type *__lo, const char_type *__hi) const (CompoundStmt 0x9e81938 </usr/include/c++/4.6/bits/locale_facets.h:212:7, col:52>
  (ReturnStmt 0x9e81928 <col:9, col:49>
    (CallExpr 0x9e81900 <col:16, col:49> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e81880 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9e81870 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0x9e818b4 <col:34> 'mask':'unsigned short' lvalue ParmVar 0x9e7e7b0 '__m' 'mask':'unsigned short')
      (DeclRefExpr 0x9e818cc <col:39> 'const char_type *' lvalue ParmVar 0x9e7e800 '__lo' 'const char_type *')
      (DeclRefExpr 0x9e818e4 <col:45> 'const char_type *' lvalue ParmVar 0x9e7e850 '__hi' 'const char_type *'))))


        char_type toupper(char_type __c) const (CompoundStmt 0x9e819e0 </usr/include/c++/4.6/bits/locale_facets.h:226:7, col:39>
  (ReturnStmt 0x9e819d0 <col:9, col:36>
    (CallExpr 0x9e819b0 <col:16, col:36> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e81960 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9e81950 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0x9e81994 <col:33> 'char_type':'_CharT' lvalue ParmVar 0x9e7e930 '__c' 'char_type':'_CharT'))))


        const char_type *toupper(char_type *__lo, const char_type *__hi) const (CompoundStmt 0x9e81aa8 </usr/include/c++/4.6/bits/locale_facets.h:241:7, col:46>
  (ReturnStmt 0x9e81a98 <col:9, col:43>
    (CallExpr 0x9e81a70 <col:16, col:43> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e81a08 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9e819f8 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0x9e81a3c <col:33> 'char_type *' lvalue ParmVar 0x9e7ea70 '__lo' 'char_type *')
      (DeclRefExpr 0x9e81a54 <col:39> 'const char_type *' lvalue ParmVar 0x9e7eac0 '__hi' 'const char_type *'))))


        char_type tolower(char_type __c) const (CompoundStmt 0x9e81b50 </usr/include/c++/4.6/bits/locale_facets.h:255:7, col:39>
  (ReturnStmt 0x9e81b40 <col:9, col:36>
    (CallExpr 0x9e81b20 <col:16, col:36> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e81ad0 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9e81ac0 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0x9e81b04 <col:33> 'char_type':'_CharT' lvalue ParmVar 0x9e7ebd0 '__c' 'char_type':'_CharT'))))


        const char_type *tolower(char_type *__lo, const char_type *__hi) const (CompoundStmt 0x9e81c18 </usr/include/c++/4.6/bits/locale_facets.h:270:7, col:46>
  (ReturnStmt 0x9e81c08 <col:9, col:43>
    (CallExpr 0x9e81be0 <col:16, col:43> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e81b78 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9e81b68 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0x9e81bac <col:33> 'char_type *' lvalue ParmVar 0x9e7eca0 '__lo' 'char_type *')
      (DeclRefExpr 0x9e81bc4 <col:39> 'const char_type *' lvalue ParmVar 0x9e7ecf0 '__hi' 'const char_type *'))))


        char_type widen(char __c) const (CompoundStmt 0x9e81cc0 </usr/include/c++/4.6/bits/locale_facets.h:287:7, col:37>
  (ReturnStmt 0x9e81cb0 <col:9, col:34>
    (CallExpr 0x9e81c90 <col:16, col:34> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e81c40 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9e81c30 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0x9e81c74 <col:31> 'char' lvalue ParmVar 0x9e7edc0 '__c' 'char'))))


        const char *widen(const char *__lo, const char *__hi, char_type *__to) const (CompoundStmt 0x9e81da0 </usr/include/c++/4.6/bits/locale_facets.h:306:7, col:50>
  (ReturnStmt 0x9e81d90 <col:9, col:47>
    (CallExpr 0x9e81d68 <col:16, col:47> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e81ce8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9e81cd8 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0x9e81d1c <col:31> 'const char *' lvalue ParmVar 0x9e7eee0 '__lo' 'const char *')
      (DeclRefExpr 0x9e81d34 <col:37> 'const char *' lvalue ParmVar 0x9e7ef30 '__hi' 'const char *')
      (DeclRefExpr 0x9e81d4c <col:43> 'char_type *' lvalue ParmVar 0x9e7ef80 '__to' 'char_type *'))))


        char narrow(char_type __c, char __dfault) const (CompoundStmt 0x9e81e68 </usr/include/c++/4.6/bits/locale_facets.h:325:7, col:48>
  (ReturnStmt 0x9e81e58 <col:9, col:45>
    (CallExpr 0x9e81e30 <col:16, col:45> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e81dc8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9e81db8 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0x9e81dfc <col:32> 'char_type':'_CharT' lvalue ParmVar 0x9e7f0c0 '__c' 'char_type':'_CharT')
      (DeclRefExpr 0x9e81e14 <col:37> 'char' lvalue ParmVar 0x9e7f100 '__dfault' 'char'))))


        const char_type *narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__to) const (CompoundStmt 0x9e81f68 </usr/include/c++/4.6/bits/locale_facets.h:348:7, col:61>
  (ReturnStmt 0x9e81f58 <col:9, col:58>
    (CallExpr 0x9e81f28 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e81e90 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9e81e80 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0x9e81ec4 <col:32> 'const char_type *' lvalue ParmVar 0x9e7f220 '__lo' 'const char_type *')
      (DeclRefExpr 0x9e81edc <col:38> 'const char_type *' lvalue ParmVar 0x9e7f270 '__hi' 'const char_type *')
      (DeclRefExpr 0x9e81ef4 <col:44> 'char' lvalue ParmVar 0x9e7f2b0 '__dfault' 'char')
      (DeclRefExpr 0x9e81f0c <col:54> 'char *' lvalue ParmVar 0x9e7f300 '__to' 'char *'))))


    protected:
    protected:
        __ctype_abstract_base<_CharT>(size_t __refs = (ImplicitCastExpr 0x9e815c0 </usr/include/c++/4.6/bits/locale_facets.h:352:45> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9e815a8 <col:45> 'int' 0))
) : std::locale::facet((DeclRefExpr 0x9e81f7c </usr/include/c++/4.6/bits/locale_facets.h:352:55> 'size_t':'unsigned int' lvalue ParmVar 0x9e7f480 '__refs' 'size_t':'unsigned int')
) (CompoundStmt 0x9e82020 </usr/include/c++/4.6/bits/locale_facets.h:352:63, col:65>)


        virtual void ~__ctype_abstract_base<_CharT>() (CompoundStmt 0x9e82030 </usr/include/c++/4.6/bits/locale_facets.h:355:32, col:34>)


        virtual bool do_is(mask __m, char_type __c) const = 0;
        virtual const char_type *do_is(const char_type *__lo, const char_type *__hi, mask *__vec) const = 0;
        virtual const char_type *do_scan_is(mask __m, const char_type *__lo, const char_type *__hi) const = 0;
        virtual const char_type *do_scan_not(mask __m, const char_type *__lo, const char_type *__hi) const = 0;
        virtual char_type do_toupper(char_type) const = 0;
        virtual const char_type *do_toupper(char_type *__lo, const char_type *__hi) const = 0;
        virtual char_type do_tolower(char_type) const = 0;
        virtual const char_type *do_tolower(char_type *__lo, const char_type *__hi) const = 0;
        virtual char_type do_widen(char) const = 0;
        virtual const char *do_widen(const char *__lo, const char *__hi, char_type *__dest) const = 0;
        virtual char do_narrow(char_type, char __dfault) const = 0;
        virtual const char_type *do_narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__dest) const = 0;
    };
    template <typename _CharT = char> class ctype : public locale::facet, public std::ctype_base {
        class ctype;
    public:
    public:
        typedef char char_type;
    protected:
    protected:
        __c_locale _M_c_locale_ctype;
        bool _M_del;
        __to_type _M_toupper;
        __to_type _M_tolower;
        const mask *_M_table;
        mutable char _M_widen_ok;
        mutable char _M_widen[256];
        mutable char _M_narrow[256];
        mutable char _M_narrow_ok;
    public:
    public:
        static locale::id id;
        static const size_t table_size = (ImplicitCastExpr 0x9e84440 </usr/include/c++/4.6/bits/locale_facets.h:698:45, col:78> 'const size_t':'const unsigned int' <IntegralCast>
  (BinaryOperator 0x9e84428 <col:45, col:78> 'int' '+'
    (IntegerLiteral 0x9e84398 <col:45> 'int' 1)
    (ImplicitCastExpr 0x9e84418 <col:49, col:78> 'int' <IntegralCast>
      (CXXStaticCastExpr 0x9e84400 <col:49, col:78> 'unsigned char' static_cast<unsigned char> <NoOp>
        (ImplicitCastExpr 0x9e843f0 <col:76, col:77> 'unsigned char' <IntegralCast>
          (UnaryOperator 0x9e843c8 <col:76, col:77> 'int' prefix '-'
            (IntegerLiteral 0x9e843b0 <col:77> 'int' 1)))))))
;
        ctype(const mask *__table = (ImplicitCastExpr 0x9e86b48 </usr/include/c++/4.6/bits/locale_facets.h:711:35> 'const mask *' <NullToPointer>
  (IntegerLiteral 0x9e86b30 <col:35> 'int' 0))
, bool __del = (CXXBoolLiteralExpr 0x9e86b58 </usr/include/c++/4.6/bits/locale_facets.h:711:51> '_Bool' false)
, size_t __refs = (ImplicitCastExpr 0x9e86b80 </usr/include/c++/4.6/bits/locale_facets.h:711:74> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9e86b68 <col:74> 'int' 0))
);
        ctype(__c_locale __cloc, const mask *__table = (ImplicitCastExpr 0x9e86ba8 </usr/include/c++/4.6/bits/locale_facets.h:724:54> 'const mask *' <NullToPointer>
  (IntegerLiteral 0x9e86b90 <col:54> 'int' 0))
, bool __del = (CXXBoolLiteralExpr 0x9e86bb8 </usr/include/c++/4.6/bits/locale_facets.h:724:70> '_Bool' false)
, size_t __refs = (ImplicitCastExpr 0x9e86be0 </usr/include/c++/4.6/bits/locale_facets.h:725:22> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9e86bc8 <col:22> 'int' 0))
);
        inline bool is(mask __m, char __c) const;
        inline const char *is(const char *__lo, const char *__hi, mask *__vec) const;
        inline const char *scan_is(mask __m, const char *__lo, const char *__hi) const;
        inline const char *scan_not(mask __m, const char *__lo, const char *__hi) const;
        char_type toupper(char_type __c) const (CompoundStmt 0x9e86cd0 </usr/include/c++/4.6/bits/locale_facets.h:796:7, col:39>
  (ReturnStmt 0x9e86cc0 <col:9, col:36>
    (CXXMemberCallExpr 0x9e86c90 <col:16, col:36> 'char_type':'char'
      (MemberExpr 0x9e86c70 <col:16, col:22> '<bound member function type>' ->do_toupper 0x9e85f00
        (CXXThisExpr 0x9e86c08 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9e86cb0 <col:33> 'char_type':'char' <LValueToRValue>
        (DeclRefExpr 0x9e86c58 <col:33> 'char_type':'char' lvalue ParmVar 0x9e85170 '__c' 'char_type':'char')))))


        const char_type *toupper(char_type *__lo, const char_type *__hi) const (CompoundStmt 0x9e86de0 </usr/include/c++/4.6/bits/locale_facets.h:813:7, col:46>
  (ReturnStmt 0x9e86dd0 <col:9, col:43>
    (CXXMemberCallExpr 0x9e86d88 <col:16, col:43> 'const char_type *'
      (MemberExpr 0x9e86d68 <col:16, col:22> '<bound member function type>' ->do_toupper 0x9e86030
        (CXXThisExpr 0x9e86ce8 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9e86db0 <col:33> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9e86d38 <col:33> 'char_type *' lvalue ParmVar 0x9e852b0 '__lo' 'char_type *'))
      (ImplicitCastExpr 0x9e86dc0 <col:39> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9e86d50 <col:39> 'const char_type *' lvalue ParmVar 0x9e85320 '__hi' 'const char_type *')))))


        char_type tolower(char_type __c) const (CompoundStmt 0x9e86ec0 </usr/include/c++/4.6/bits/locale_facets.h:829:7, col:39>
  (ReturnStmt 0x9e86eb0 <col:9, col:36>
    (CXXMemberCallExpr 0x9e86e80 <col:16, col:36> 'char_type':'char'
      (MemberExpr 0x9e86e60 <col:16, col:22> '<bound member function type>' ->do_tolower 0x9e860f0
        (CXXThisExpr 0x9e86df8 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9e86ea0 <col:33> 'char_type':'char' <LValueToRValue>
        (DeclRefExpr 0x9e86e48 <col:33> 'char_type':'char' lvalue ParmVar 0x9e85430 '__c' 'char_type':'char')))))


        const char_type *tolower(char_type *__lo, const char_type *__hi) const (CompoundStmt 0x9e86fd0 </usr/include/c++/4.6/bits/locale_facets.h:846:7, col:46>
  (ReturnStmt 0x9e86fc0 <col:9, col:43>
    (CXXMemberCallExpr 0x9e86f78 <col:16, col:43> 'const char_type *'
      (MemberExpr 0x9e86f58 <col:16, col:22> '<bound member function type>' ->do_tolower 0x9e86220
        (CXXThisExpr 0x9e86ed8 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9e86fa0 <col:33> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9e86f28 <col:33> 'char_type *' lvalue ParmVar 0x9e85500 '__lo' 'char_type *'))
      (ImplicitCastExpr 0x9e86fb0 <col:39> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9e86f40 <col:39> 'const char_type *' lvalue ParmVar 0x9e85550 '__hi' 'const char_type *')))))


        char_type widen(char __c) const (CompoundStmt 0x9e87268 </usr/include/c++/4.6/bits/locale_facets.h:866:7, line:871:7>
  (IfStmt 0x9e87130 <line:867:2, line:868:51>
    <<<NULL>>>
    (ImplicitCastExpr 0x9e87048 <line:867:6> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x9e87038 <col:6> 'char' <LValueToRValue>
        (MemberExpr 0x9e87014 <col:6> 'char' lvalue ->_M_widen_ok 0x9e84030
          (CXXThisExpr 0x9e86fe8 <col:6> 'const class std::ctype<char> *' this))))
    (ReturnStmt 0x9e87120 <line:868:4, col:51>
      (ImplicitCastExpr 0x9e87110 <col:11, col:51> 'char' <LValueToRValue>
        (ArraySubscriptExpr 0x9e870f8 <col:11, col:51> 'char' lvalue
          (ImplicitCastExpr 0x9e870e8 <col:11> 'char *' <ArrayToPointerDecay>
            (MemberExpr 0x9e87068 <col:11> 'char [256]' lvalue ->_M_widen 0x9e84150
              (CXXThisExpr 0x9e87058 <col:11> 'const class std::ctype<char> *' this)))
          (CXXStaticCastExpr 0x9e870d0 <col:20, col:50> 'unsigned char' static_cast<unsigned char> <NoOp>
            (ImplicitCastExpr 0x9e870c0 <col:47> 'unsigned char' <IntegralCast>
              (ImplicitCastExpr 0x9e870b0 <col:47> 'char' <LValueToRValue>
                (DeclRefExpr 0x9e87088 <col:47> 'char' lvalue ParmVar 0x9e85620 '__c' 'char')))))))
    <<<NULL>>>)
  (CXXMemberCallExpr 0x9e87180 <line:869:2, col:22> 'void'
    (MemberExpr 0x9e87160 <col:2, col:8> '<bound member function type>' ->_M_widen_init 0x9e86890
      (CXXThisExpr 0x9e87150 <col:2> 'const class std::ctype<char> *' this)))
  (ReturnStmt 0x9e87258 <line:870:2, col:27>
    (CXXMemberCallExpr 0x9e87228 <col:9, col:27> 'char_type':'char'
      (MemberExpr 0x9e87208 <col:9, col:15> '<bound member function type>' ->do_widen 0x9e862e0
        (CXXThisExpr 0x9e871a0 <col:9> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9e87248 <col:24> 'char' <LValueToRValue>
        (DeclRefExpr 0x9e871f0 <col:24> 'char' lvalue ParmVar 0x9e85620 '__c' 'char')))))


        const char *widen(const char *__lo, const char *__hi, char_type *__to) const (CompoundStmt 0x9e876a8 </usr/include/c++/4.6/bits/locale_facets.h:893:7, line:902:7>
  (IfStmt 0x9e87490 <line:894:2, line:898:4>
    <<<NULL>>>
    (BinaryOperator 0x9e872f0 <line:894:6, col:21> '_Bool' '=='
      (ImplicitCastExpr 0x9e872e0 <col:6> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9e872d0 <col:6> 'char' <LValueToRValue>
          (MemberExpr 0x9e87298 <col:6> 'char' lvalue ->_M_widen_ok 0x9e84030
            (CXXThisExpr 0x9e87288 <col:6> 'const class std::ctype<char> *' this))))
      (IntegerLiteral 0x9e872b8 <col:21> 'int' 1))
    (CompoundStmt 0x9e87478 <line:895:4, line:898:4>
      (CallExpr 0x9e873c8 <line:896:6, col:46> 'void *'
        (ImplicitCastExpr 0x9e873b8 <col:6> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9e87308 <col:6> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9c1d810 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0x9e87400 <col:23> 'void *' <BitCast>
          (ImplicitCastExpr 0x9e873f0 <col:23> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x9e87320 <col:23> 'char_type *' lvalue ParmVar 0x9e857c0 '__to' 'char_type *')))
        (ImplicitCastExpr 0x9e87420 <col:29> 'const void *' <BitCast>
          (ImplicitCastExpr 0x9e87410 <col:29> 'const char *' <LValueToRValue>
            (DeclRefExpr 0x9e87338 <col:29> 'const char *' lvalue ParmVar 0x9e85720 '__lo' 'const char *')))
        (ImplicitCastExpr 0x9e87430 <col:35, col:42> 'unsigned int' <IntegralCast>
          (BinaryOperator 0x9e873a0 <col:35, col:42> 'int' '-'
            (ImplicitCastExpr 0x9e87380 <col:35> 'const char *' <LValueToRValue>
              (DeclRefExpr 0x9e87350 <col:35> 'const char *' lvalue ParmVar 0x9e85770 '__hi' 'const char *'))
            (ImplicitCastExpr 0x9e87390 <col:42> 'const char *' <LValueToRValue>
              (DeclRefExpr 0x9e87368 <col:42> 'const char *' lvalue ParmVar 0x9e85720 '__lo' 'const char *')))))
      (ReturnStmt 0x9e87468 <line:897:6, col:13>
        (ImplicitCastExpr 0x9e87458 <col:13> 'const char *' <LValueToRValue>
          (DeclRefExpr 0x9e8743c <col:13> 'const char *' lvalue ParmVar 0x9e85770 '__hi' 'const char *'))))
    <<<NULL>>>)
  (IfStmt 0x9e87568 <line:899:2, line:900:18>
    <<<NULL>>>
    (UnaryOperator 0x9e87500 <line:899:6, col:7> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9e874f0 <col:7> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0x9e874e0 <col:7> 'char' <LValueToRValue>
          (MemberExpr 0x9e874c0 <col:7> 'char' lvalue ->_M_widen_ok 0x9e84030
            (CXXThisExpr 0x9e874b0 <col:7> 'const class std::ctype<char> *' this)))))
    (CXXMemberCallExpr 0x9e87548 <line:900:4, col:18> 'void'
      (MemberExpr 0x9e87528 <col:4> '<bound member function type>' ->_M_widen_init 0x9e86890
        (CXXThisExpr 0x9e87518 <col:4> 'const class std::ctype<char> *' this)))
    <<<NULL>>>)
  (ReturnStmt 0x9e87698 <line:901:2, col:40>
    (CXXMemberCallExpr 0x9e87640 <col:9, col:40> 'const char *'
      (MemberExpr 0x9e87620 <col:9, col:15> '<bound member function type>' ->do_widen 0x9e86460
        (CXXThisExpr 0x9e87588 <col:9> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9e87668 <col:24> 'const char *' <LValueToRValue>
        (DeclRefExpr 0x9e875d8 <col:24> 'const char *' lvalue ParmVar 0x9e85720 '__lo' 'const char *'))
      (ImplicitCastExpr 0x9e87678 <col:30> 'const char *' <LValueToRValue>
        (DeclRefExpr 0x9e875f0 <col:30> 'const char *' lvalue ParmVar 0x9e85770 '__hi' 'const char *'))
      (ImplicitCastExpr 0x9e87688 <col:36> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9e87608 <col:36> 'char_type *' lvalue ParmVar 0x9e857c0 '__to' 'char_type *')))))


        char narrow(char_type __c, char __dfault) const (CompoundStmt 0x9e87bf0 </usr/include/c++/4.6/bits/locale_facets.h:924:7, line:931:7>
  (IfStmt 0x9e87878 <line:925:2, line:926:52>
    <<<NULL>>>
    (ImplicitCastExpr 0x9e87790 <line:925:6, col:47> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x9e87780 <col:6, col:47> 'char' <LValueToRValue>
        (ArraySubscriptExpr 0x9e87768 <col:6, col:47> 'char' lvalue
          (ImplicitCastExpr 0x9e87758 <col:6> 'char *' <ArrayToPointerDecay>
            (MemberExpr 0x9e876d8 <col:6> 'char [256]' lvalue ->_M_narrow 0x9e84240
              (CXXThisExpr 0x9e876c8 <col:6> 'const class std::ctype<char> *' this)))
          (CXXStaticCastExpr 0x9e87740 <col:16, col:46> 'unsigned char' static_cast<unsigned char> <NoOp>
            (ImplicitCastExpr 0x9e87730 <col:43> 'unsigned char' <IntegralCast>
              (ImplicitCastExpr 0x9e87720 <col:43> 'char_type':'char' <LValueToRValue>
                (DeclRefExpr 0x9e876f8 <col:43> 'char_type':'char' lvalue ParmVar 0x9e85900 '__c' 'char_type':'char')))))))
    (ReturnStmt 0x9e87868 <line:926:4, col:52>
      (ImplicitCastExpr 0x9e87858 <col:11, col:52> 'char' <LValueToRValue>
        (ArraySubscriptExpr 0x9e87840 <col:11, col:52> 'char' lvalue
          (ImplicitCastExpr 0x9e87830 <col:11> 'char *' <ArrayToPointerDecay>
            (MemberExpr 0x9e877b0 <col:11> 'char [256]' lvalue ->_M_narrow 0x9e84240
              (CXXThisExpr 0x9e877a0 <col:11> 'const class std::ctype<char> *' this)))
          (CXXStaticCastExpr 0x9e87818 <col:21, col:51> 'unsigned char' static_cast<unsigned char> <NoOp>
            (ImplicitCastExpr 0x9e87808 <col:48> 'unsigned char' <IntegralCast>
              (ImplicitCastExpr 0x9e877f8 <col:48> 'char_type':'char' <LValueToRValue>
                (DeclRefExpr 0x9e877d0 <col:48> 'char_type':'char' lvalue ParmVar 0x9e85900 '__c' 'char_type':'char')))))))
    <<<NULL>>>)
  (DeclStmt 0x9e879d0 <line:927:2, col:43>
    0x9e878a0 "const char __t =
      (CXXMemberCallExpr 0x9e87988 <col:19, col:42> 'char'
        (MemberExpr 0x9e87968 <col:19> '<bound member function type>' ->do_narrow 0x9e86580
          (CXXThisExpr 0x9e87958 <col:19> 'const class std::ctype<char> *' this))
        (ImplicitCastExpr 0x9e879b0 <col:29> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9e87928 <col:29> 'char_type':'char' lvalue ParmVar 0x9e85900 '__c' 'char_type':'char'))
        (ImplicitCastExpr 0x9e879c0 <col:34> 'char' <LValueToRValue>
          (DeclRefExpr 0x9e87940 <col:34> 'char' lvalue ParmVar 0x9e85940 '__dfault' 'char')))")
  (IfStmt 0x9e87b98 <line:928:2, line:929:49>
    <<<NULL>>>
    (BinaryOperator 0x9e87a50 <line:928:6, col:13> '_Bool' '!='
      (ImplicitCastExpr 0x9e87a20 <col:6> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9e87a10 <col:6> 'char' <LValueToRValue>
          (DeclRefExpr 0x9e879e0 <col:6> 'const char' lvalue Var 0x9e878a0 '__t' 'const char')))
      (ImplicitCastExpr 0x9e87a40 <col:13> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9e87a30 <col:13> 'char' <LValueToRValue>
          (DeclRefExpr 0x9e879f8 <col:13> 'char' lvalue ParmVar 0x9e85940 '__dfault' 'char'))))
    (BinaryOperator 0x9e87b80 <line:929:4, col:49> 'char' lvalue '='
      (ArraySubscriptExpr 0x9e87b40 <col:4, col:45> 'char' lvalue
        (ImplicitCastExpr 0x9e87b30 <col:4> 'char *' <ArrayToPointerDecay>
          (MemberExpr 0x9e87ab0 <col:4> 'char [256]' lvalue ->_M_narrow 0x9e84240
            (CXXThisExpr 0x9e87aa0 <col:4> 'const class std::ctype<char> *' this)))
        (CXXStaticCastExpr 0x9e87b18 <col:14, col:44> 'unsigned char' static_cast<unsigned char> <NoOp>
          (ImplicitCastExpr 0x9e87b08 <col:41> 'unsigned char' <IntegralCast>
            (ImplicitCastExpr 0x9e87af8 <col:41> 'char_type':'char' <LValueToRValue>
              (DeclRefExpr 0x9e87ad0 <col:41> 'char_type':'char' lvalue ParmVar 0x9e85900 '__c' 'char_type':'char')))))
      (ImplicitCastExpr 0x9e87b70 <col:49> 'char' <LValueToRValue>
        (DeclRefExpr 0x9e87b54 <col:49> 'const char' lvalue Var 0x9e878a0 '__t' 'const char')))
    <<<NULL>>>)
  (ReturnStmt 0x9e87be0 <line:930:2, col:9>
    (ImplicitCastExpr 0x9e87bd0 <col:9> 'char' <LValueToRValue>
      (DeclRefExpr 0x9e87bb4 <col:9> 'const char' lvalue Var 0x9e878a0 '__t' 'const char'))))


        const char_type *narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__to) const (CompoundStmt 0x9e880f0 </usr/include/c++/4.6/bits/locale_facets.h:958:7, line:967:7>
  (IfStmt 0x9e87ea8 <line:959:2, line:963:4>
    <<<NULL>>>
    (ImplicitCastExpr 0x9e87d10 <line:959:6, col:46> '_Bool' <IntegralToBoolean>
      (CallExpr 0x9e87cc8 <col:6, col:46> 'long'
        (ImplicitCastExpr 0x9e87cb8 <col:6> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9e87c10 <col:6> 'long (long, long)' lvalue Function 0x9d45c10 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0x9e87cf0 <col:23, col:39> 'long' <IntegralCast>
          (BinaryOperator 0x9e87c90 <col:23, col:39> '_Bool' '=='
            (ImplicitCastExpr 0x9e87c80 <col:23> 'int' <IntegralCast>
              (ImplicitCastExpr 0x9e87c70 <col:23> 'char' <LValueToRValue>
                (MemberExpr 0x9e87c38 <col:23> 'char' lvalue ->_M_narrow_ok 0x9e84280
                  (CXXThisExpr 0x9e87c28 <col:23> 'const class std::ctype<char> *' this))))
            (IntegerLiteral 0x9e87c58 <col:39> 'int' 1)))
        (ImplicitCastExpr 0x9e87d00 <col:42> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0x9e87ca8 <col:42> '_Bool' true))))
    (CompoundStmt 0x9e87e90 <line:960:4, line:963:4>
      (CallExpr 0x9e87de0 <line:961:6, col:46> 'void *'
        (ImplicitCastExpr 0x9e87dd0 <col:6> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9e87d1c <col:6> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9c1d810 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0x9e87e18 <col:23> 'void *' <BitCast>
          (ImplicitCastExpr 0x9e87e08 <col:23> 'char *' <LValueToRValue>
            (DeclRefExpr 0x9e87d34 <col:23> 'char *' lvalue ParmVar 0x9e85b40 '__to' 'char *')))
        (ImplicitCastExpr 0x9e87e38 <col:29> 'const void *' <BitCast>
          (ImplicitCastExpr 0x9e87e28 <col:29> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x9e87d4c <col:29> 'const char_type *' lvalue ParmVar 0x9e85a60 '__lo' 'const char_type *')))
        (ImplicitCastExpr 0x9e87e48 <col:35, col:42> 'unsigned int' <IntegralCast>
          (BinaryOperator 0x9e87db8 <col:35, col:42> 'int' '-'
            (ImplicitCastExpr 0x9e87d98 <col:35> 'const char_type *' <LValueToRValue>
              (DeclRefExpr 0x9e87d64 <col:35> 'const char_type *' lvalue ParmVar 0x9e85ab0 '__hi' 'const char_type *'))
            (ImplicitCastExpr 0x9e87da8 <col:42> 'const char_type *' <LValueToRValue>
              (DeclRefExpr 0x9e87d7c <col:42> 'const char_type *' lvalue ParmVar 0x9e85a60 '__lo' 'const char_type *')))))
      (ReturnStmt 0x9e87e80 <line:962:6, col:13>
        (ImplicitCastExpr 0x9e87e70 <col:13> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9e87e54 <col:13> 'const char_type *' lvalue ParmVar 0x9e85ab0 '__hi' 'const char_type *'))))
    <<<NULL>>>)
  (IfStmt 0x9e87f80 <line:964:2, line:965:19>
    <<<NULL>>>
    (UnaryOperator 0x9e87f18 <line:964:6, col:7> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9e87f08 <col:7> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0x9e87ef8 <col:7> 'char' <LValueToRValue>
          (MemberExpr 0x9e87ed8 <col:7> 'char' lvalue ->_M_narrow_ok 0x9e84280
            (CXXThisExpr 0x9e87ec8 <col:7> 'const class std::ctype<char> *' this)))))
    (CXXMemberCallExpr 0x9e87f60 <line:965:4, col:19> 'void'
      (MemberExpr 0x9e87f40 <col:4> '<bound member function type>' ->_M_narrow_init 0x9e86810
        (CXXThisExpr 0x9e87f30 <col:4> 'const class std::ctype<char> *' this)))
    <<<NULL>>>)
  (ReturnStmt 0x9e880e0 <line:966:2, col:51>
    (CXXMemberCallExpr 0x9e88070 <col:9, col:51> 'const char_type *'
      (MemberExpr 0x9e88050 <col:9, col:15> '<bound member function type>' ->do_narrow 0x9e86740
        (CXXThisExpr 0x9e87fa0 <col:9> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9e880a0 <col:25> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9e87ff0 <col:25> 'const char_type *' lvalue ParmVar 0x9e85a60 '__lo' 'const char_type *'))
      (ImplicitCastExpr 0x9e880b0 <col:31> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9e88008 <col:31> 'const char_type *' lvalue ParmVar 0x9e85ab0 '__hi' 'const char_type *'))
      (ImplicitCastExpr 0x9e880c0 <col:37> 'char' <LValueToRValue>
        (DeclRefExpr 0x9e88020 <col:37> 'char' lvalue ParmVar 0x9e85af0 '__dfault' 'char'))
      (ImplicitCastExpr 0x9e880d0 <col:47> 'char *' <LValueToRValue>
        (DeclRefExpr 0x9e88038 <col:47> 'char *' lvalue ParmVar 0x9e85b40 '__to' 'char *')))))


        const mask *table() const throw() (CompoundStmt 0x9e88160 </usr/include/c++/4.6/bits/locale_facets.h:975:7, col:26>
  (ReturnStmt 0x9e88150 <col:9, col:16>
    (ImplicitCastExpr 0x9e88140 <col:16> 'const mask *' <LValueToRValue>
      (MemberExpr 0x9e88120 <col:16> 'const mask *const' lvalue ->_M_table 0x9e83ff0
        (CXXThisExpr 0x9e88110 <col:16> 'const class std::ctype<char> *' this)))))


        static const mask *classic_table() throw();
    protected:
    protected:
        virtual void ~ctype();
        virtual char_type do_toupper(char_type) const;
        virtual const char_type *do_toupper(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_tolower(char_type) const;
        virtual const char_type *do_tolower(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_widen(char __c) const (CompoundStmt 0x9e881b0 </usr/include/c++/4.6/bits/locale_facets.h:1076:7, col:21>
  (ReturnStmt 0x9e881a0 <col:9, col:16>
    (ImplicitCastExpr 0x9e88190 <col:16> 'char' <LValueToRValue>
      (DeclRefExpr 0x9e88174 <col:16> 'char' lvalue ParmVar 0x9e86290 '__c' 'char'))))


        virtual const char *do_widen(const char *__lo, const char *__hi, char_type *__dest) const (CompoundStmt 0x9e88338 </usr/include/c++/4.6/bits/locale_facets.h:1099:7, line:1102:7>
  (CallExpr 0x9e88288 <line:1100:2, col:44> 'void *'
    (ImplicitCastExpr 0x9e88278 <col:2> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9e881c4 <col:2> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9c1d810 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
    (ImplicitCastExpr 0x9e882c0 <col:19> 'void *' <BitCast>
      (ImplicitCastExpr 0x9e882b0 <col:19> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9e881dc <col:19> 'char_type *' lvalue ParmVar 0x9e86400 '__dest' 'char_type *')))
    (ImplicitCastExpr 0x9e882e0 <col:27> 'const void *' <BitCast>
      (ImplicitCastExpr 0x9e882d0 <col:27> 'const char *' <LValueToRValue>
        (DeclRefExpr 0x9e881f4 <col:27> 'const char *' lvalue ParmVar 0x9e86360 '__lo' 'const char *')))
    (ImplicitCastExpr 0x9e882f0 <col:33, col:40> 'unsigned int' <IntegralCast>
      (BinaryOperator 0x9e88260 <col:33, col:40> 'int' '-'
        (ImplicitCastExpr 0x9e88240 <col:33> 'const char *' <LValueToRValue>
          (DeclRefExpr 0x9e8820c <col:33> 'const char *' lvalue ParmVar 0x9e863b0 '__hi' 'const char *'))
        (ImplicitCastExpr 0x9e88250 <col:40> 'const char *' <LValueToRValue>
          (DeclRefExpr 0x9e88224 <col:40> 'const char *' lvalue ParmVar 0x9e86360 '__lo' 'const char *')))))
  (ReturnStmt 0x9e88328 <line:1101:2, col:9>
    (ImplicitCastExpr 0x9e88318 <col:9> 'const char *' <LValueToRValue>
      (DeclRefExpr 0x9e882fc <col:9> 'const char *' lvalue ParmVar 0x9e863b0 '__hi' 'const char *'))))


        virtual char do_narrow(char_type __c, char) const (CompoundStmt 0x9e88388 </usr/include/c++/4.6/bits/locale_facets.h:1125:7, col:21>
  (ReturnStmt 0x9e88378 <col:9, col:16>
    (ImplicitCastExpr 0x9e88368 <col:16> 'char_type':'char' <LValueToRValue>
      (DeclRefExpr 0x9e88350 <col:16> 'char_type':'char' lvalue ParmVar 0x9e864e0 '__c' 'char_type':'char'))))


        virtual const char_type *do_narrow(const char_type *__lo, const char_type *__hi, char, char *__dest) const (CompoundStmt 0x9e88510 </usr/include/c++/4.6/bits/locale_facets.h:1152:7, line:1155:7>
  (CallExpr 0x9e88460 <line:1153:2, col:44> 'void *'
    (ImplicitCastExpr 0x9e88450 <col:2> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9e8839c <col:2> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9c1d810 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
    (ImplicitCastExpr 0x9e88498 <col:19> 'void *' <BitCast>
      (ImplicitCastExpr 0x9e88488 <col:19> 'char *' <LValueToRValue>
        (DeclRefExpr 0x9e883b4 <col:19> 'char *' lvalue ParmVar 0x9e866e0 '__dest' 'char *')))
    (ImplicitCastExpr 0x9e884b8 <col:27> 'const void *' <BitCast>
      (ImplicitCastExpr 0x9e884a8 <col:27> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9e883cc <col:27> 'const char_type *' lvalue ParmVar 0x9e86600 '__lo' 'const char_type *')))
    (ImplicitCastExpr 0x9e884c8 <col:33, col:40> 'unsigned int' <IntegralCast>
      (BinaryOperator 0x9e88438 <col:33, col:40> 'int' '-'
        (ImplicitCastExpr 0x9e88418 <col:33> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9e883e4 <col:33> 'const char_type *' lvalue ParmVar 0x9e86650 '__hi' 'const char_type *'))
        (ImplicitCastExpr 0x9e88428 <col:40> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9e883fc <col:40> 'const char_type *' lvalue ParmVar 0x9e86600 '__lo' 'const char_type *')))))
  (ReturnStmt 0x9e88500 <line:1154:2, col:9>
    (ImplicitCastExpr 0x9e884f0 <col:9> 'const char_type *' <LValueToRValue>
      (DeclRefExpr 0x9e884d4 <col:9> 'const char_type *' lvalue ParmVar 0x9e86650 '__hi' 'const char_type *'))))


    private:
    private:
        void _M_narrow_init() const;
        void _M_widen_init() const;
        inline std::ctype<char> &operator=(const std::ctype<char> &);
    }
template <typename _CharT = wchar_t> class ctype : public __ctype_abstract_base<wchar_t> {
        class ctype;
    public:
    public:
        typedef wchar_t char_type;
        typedef wctype_t __wmask_type;
    protected:
    protected:
        __c_locale _M_c_locale_ctype;
        bool _M_narrow_ok;
        char _M_narrow[128];
        wint_t _M_widen[256];
        mask _M_bit[16];
        __wmask_type _M_wmask[16];
    public:
    public:
        static locale::id id;
        ctype(size_t __refs = (ImplicitCastExpr 0x9e90508 </usr/include/c++/4.6/bits/locale_facets.h:1208:29> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9e904f0 <col:29> 'int' 0))
);
        ctype(__c_locale __cloc, size_t __refs = (ImplicitCastExpr 0x9e90530 </usr/include/c++/4.6/bits/locale_facets.h:1219:48> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9e90518 <col:48> 'int' 0))
);
    protected:
    protected:
        __wmask_type _M_convert_to_wmask(const mask __m) const throw();
        virtual void ~ctype();
        virtual bool do_is(mask __m, char_type __c) const;
        virtual const char_type *do_is(const char_type *__lo, const char_type *__hi, mask *__vec) const;
        virtual const char_type *do_scan_is(mask __m, const char_type *__lo, const char_type *__hi) const;
        virtual const char_type *do_scan_not(mask __m, const char_type *__lo, const char_type *__hi) const;
        virtual char_type do_toupper(char_type) const;
        virtual const char_type *do_toupper(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_tolower(char_type) const;
        virtual const char_type *do_tolower(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_widen(char) const;
        virtual const char *do_widen(const char *__lo, const char *__hi, char_type *__dest) const;
        virtual char do_narrow(char_type, char __dfault) const;
        virtual const char_type *do_narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__dest) const;
        void _M_initialize_ctype() throw();
        inline std::ctype<wchar_t> &operator=(const std::ctype<wchar_t> &);
    }
template <typename _CharT> class ctype : public __ctype_abstract_base<_CharT> {
        class ctype;
    public:
    public:
        typedef _CharT char_type;
        typedef typename __ctype_abstract_base<_CharT>::mask mask;
        static locale::id id;
        ctype<_CharT>(size_t __refs = (ImplicitCastExpr 0x9e83818 </usr/include/c++/4.6/bits/locale_facets.h:616:29> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9e83800 <col:29> 'int' 0))
) : __ctype_abstract_base<_CharT>((DeclRefExpr 0x9e838b0 </usr/include/c++/4.6/bits/locale_facets.h:616:64> 'size_t':'unsigned int' lvalue ParmVar 0x9e824e0 '__refs' 'size_t':'unsigned int')
) (CompoundStmt 0x9e83910 </usr/include/c++/4.6/bits/locale_facets.h:616:72, col:74>)


    protected:
    protected:
        virtual void ~ctype<_CharT>();
        virtual bool do_is(mask __m, char_type __c) const;
        virtual const char_type *do_is(const char_type *__lo, const char_type *__hi, mask *__vec) const;
        virtual const char_type *do_scan_is(mask __m, const char_type *__lo, const char_type *__hi) const;
        virtual const char_type *do_scan_not(mask __m, const char_type *__lo, const char_type *__hi) const;
        virtual char_type do_toupper(char_type __c) const;
        virtual const char_type *do_toupper(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_tolower(char_type __c) const;
        virtual const char_type *do_tolower(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_widen(char __c) const;
        virtual const char *do_widen(const char *__lo, const char *__hi, char_type *__dest) const;
        virtual char do_narrow(char_type, char __dfault) const;
        virtual const char_type *do_narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__dest) const;
    };
    static locale::id id(CXXConstructExpr 0x9e83b58 </usr/include/c++/4.6/bits/locale_facets.h:662:31> 'class locale::id':'class std::locale::id''void (void)')
;
    class ctype : public locale::facet, public std::ctype_base {
        class ctype;
    public:
    public:
        typedef char char_type;
    protected:
    protected:
        __c_locale _M_c_locale_ctype;
        bool _M_del;
        __to_type _M_toupper;
        __to_type _M_tolower;
        const mask *_M_table;
        mutable char _M_widen_ok;
        mutable char _M_widen[256];
        mutable char _M_narrow[256];
        mutable char _M_narrow_ok;
    public:
    public:
        static locale::id id;
        static const size_t table_size = (ImplicitCastExpr 0x9e84440 </usr/include/c++/4.6/bits/locale_facets.h:698:45, col:78> 'const size_t':'const unsigned int' <IntegralCast>
  (BinaryOperator 0x9e84428 <col:45, col:78> 'int' '+'
    (IntegerLiteral 0x9e84398 <col:45> 'int' 1)
    (ImplicitCastExpr 0x9e84418 <col:49, col:78> 'int' <IntegralCast>
      (CXXStaticCastExpr 0x9e84400 <col:49, col:78> 'unsigned char' static_cast<unsigned char> <NoOp>
        (ImplicitCastExpr 0x9e843f0 <col:76, col:77> 'unsigned char' <IntegralCast>
          (UnaryOperator 0x9e843c8 <col:76, col:77> 'int' prefix '-'
            (IntegerLiteral 0x9e843b0 <col:77> 'int' 1)))))))
;
        ctype(const mask *__table = (ImplicitCastExpr 0x9e86b48 </usr/include/c++/4.6/bits/locale_facets.h:711:35> 'const mask *' <NullToPointer>
  (IntegerLiteral 0x9e86b30 <col:35> 'int' 0))
, bool __del = (CXXBoolLiteralExpr 0x9e86b58 </usr/include/c++/4.6/bits/locale_facets.h:711:51> '_Bool' false)
, size_t __refs = (ImplicitCastExpr 0x9e86b80 </usr/include/c++/4.6/bits/locale_facets.h:711:74> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9e86b68 <col:74> 'int' 0))
);
        ctype(__c_locale __cloc, const mask *__table = (ImplicitCastExpr 0x9e86ba8 </usr/include/c++/4.6/bits/locale_facets.h:724:54> 'const mask *' <NullToPointer>
  (IntegerLiteral 0x9e86b90 <col:54> 'int' 0))
, bool __del = (CXXBoolLiteralExpr 0x9e86bb8 </usr/include/c++/4.6/bits/locale_facets.h:724:70> '_Bool' false)
, size_t __refs = (ImplicitCastExpr 0x9e86be0 </usr/include/c++/4.6/bits/locale_facets.h:725:22> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9e86bc8 <col:22> 'int' 0))
);
        inline bool is(mask __m, char __c) const;
        inline const char *is(const char *__lo, const char *__hi, mask *__vec) const;
        inline const char *scan_is(mask __m, const char *__lo, const char *__hi) const;
        inline const char *scan_not(mask __m, const char *__lo, const char *__hi) const;
        char_type toupper(char_type __c) const (CompoundStmt 0x9e86cd0 </usr/include/c++/4.6/bits/locale_facets.h:796:7, col:39>
  (ReturnStmt 0x9e86cc0 <col:9, col:36>
    (CXXMemberCallExpr 0x9e86c90 <col:16, col:36> 'char_type':'char'
      (MemberExpr 0x9e86c70 <col:16, col:22> '<bound member function type>' ->do_toupper 0x9e85f00
        (CXXThisExpr 0x9e86c08 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9e86cb0 <col:33> 'char_type':'char' <LValueToRValue>
        (DeclRefExpr 0x9e86c58 <col:33> 'char_type':'char' lvalue ParmVar 0x9e85170 '__c' 'char_type':'char')))))


        const char_type *toupper(char_type *__lo, const char_type *__hi) const (CompoundStmt 0x9e86de0 </usr/include/c++/4.6/bits/locale_facets.h:813:7, col:46>
  (ReturnStmt 0x9e86dd0 <col:9, col:43>
    (CXXMemberCallExpr 0x9e86d88 <col:16, col:43> 'const char_type *'
      (MemberExpr 0x9e86d68 <col:16, col:22> '<bound member function type>' ->do_toupper 0x9e86030
        (CXXThisExpr 0x9e86ce8 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9e86db0 <col:33> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9e86d38 <col:33> 'char_type *' lvalue ParmVar 0x9e852b0 '__lo' 'char_type *'))
      (ImplicitCastExpr 0x9e86dc0 <col:39> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9e86d50 <col:39> 'const char_type *' lvalue ParmVar 0x9e85320 '__hi' 'const char_type *')))))


        char_type tolower(char_type __c) const (CompoundStmt 0x9e86ec0 </usr/include/c++/4.6/bits/locale_facets.h:829:7, col:39>
  (ReturnStmt 0x9e86eb0 <col:9, col:36>
    (CXXMemberCallExpr 0x9e86e80 <col:16, col:36> 'char_type':'char'
      (MemberExpr 0x9e86e60 <col:16, col:22> '<bound member function type>' ->do_tolower 0x9e860f0
        (CXXThisExpr 0x9e86df8 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9e86ea0 <col:33> 'char_type':'char' <LValueToRValue>
        (DeclRefExpr 0x9e86e48 <col:33> 'char_type':'char' lvalue ParmVar 0x9e85430 '__c' 'char_type':'char')))))


        const char_type *tolower(char_type *__lo, const char_type *__hi) const (CompoundStmt 0x9e86fd0 </usr/include/c++/4.6/bits/locale_facets.h:846:7, col:46>
  (ReturnStmt 0x9e86fc0 <col:9, col:43>
    (CXXMemberCallExpr 0x9e86f78 <col:16, col:43> 'const char_type *'
      (MemberExpr 0x9e86f58 <col:16, col:22> '<bound member function type>' ->do_tolower 0x9e86220
        (CXXThisExpr 0x9e86ed8 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9e86fa0 <col:33> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9e86f28 <col:33> 'char_type *' lvalue ParmVar 0x9e85500 '__lo' 'char_type *'))
      (ImplicitCastExpr 0x9e86fb0 <col:39> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9e86f40 <col:39> 'const char_type *' lvalue ParmVar 0x9e85550 '__hi' 'const char_type *')))))


        char_type widen(char __c) const (CompoundStmt 0x9e87268 </usr/include/c++/4.6/bits/locale_facets.h:866:7, line:871:7>
  (IfStmt 0x9e87130 <line:867:2, line:868:51>
    <<<NULL>>>
    (ImplicitCastExpr 0x9e87048 <line:867:6> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x9e87038 <col:6> 'char' <LValueToRValue>
        (MemberExpr 0x9e87014 <col:6> 'char' lvalue ->_M_widen_ok 0x9e84030
          (CXXThisExpr 0x9e86fe8 <col:6> 'const class std::ctype<char> *' this))))
    (ReturnStmt 0x9e87120 <line:868:4, col:51>
      (ImplicitCastExpr 0x9e87110 <col:11, col:51> 'char' <LValueToRValue>
        (ArraySubscriptExpr 0x9e870f8 <col:11, col:51> 'char' lvalue
          (ImplicitCastExpr 0x9e870e8 <col:11> 'char *' <ArrayToPointerDecay>
            (MemberExpr 0x9e87068 <col:11> 'char [256]' lvalue ->_M_widen 0x9e84150
              (CXXThisExpr 0x9e87058 <col:11> 'const class std::ctype<char> *' this)))
          (CXXStaticCastExpr 0x9e870d0 <col:20, col:50> 'unsigned char' static_cast<unsigned char> <NoOp>
            (ImplicitCastExpr 0x9e870c0 <col:47> 'unsigned char' <IntegralCast>
              (ImplicitCastExpr 0x9e870b0 <col:47> 'char' <LValueToRValue>
                (DeclRefExpr 0x9e87088 <col:47> 'char' lvalue ParmVar 0x9e85620 '__c' 'char')))))))
    <<<NULL>>>)
  (CXXMemberCallExpr 0x9e87180 <line:869:2, col:22> 'void'
    (MemberExpr 0x9e87160 <col:2, col:8> '<bound member function type>' ->_M_widen_init 0x9e86890
      (CXXThisExpr 0x9e87150 <col:2> 'const class std::ctype<char> *' this)))
  (ReturnStmt 0x9e87258 <line:870:2, col:27>
    (CXXMemberCallExpr 0x9e87228 <col:9, col:27> 'char_type':'char'
      (MemberExpr 0x9e87208 <col:9, col:15> '<bound member function type>' ->do_widen 0x9e862e0
        (CXXThisExpr 0x9e871a0 <col:9> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9e87248 <col:24> 'char' <LValueToRValue>
        (DeclRefExpr 0x9e871f0 <col:24> 'char' lvalue ParmVar 0x9e85620 '__c' 'char')))))


        const char *widen(const char *__lo, const char *__hi, char_type *__to) const (CompoundStmt 0x9e876a8 </usr/include/c++/4.6/bits/locale_facets.h:893:7, line:902:7>
  (IfStmt 0x9e87490 <line:894:2, line:898:4>
    <<<NULL>>>
    (BinaryOperator 0x9e872f0 <line:894:6, col:21> '_Bool' '=='
      (ImplicitCastExpr 0x9e872e0 <col:6> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9e872d0 <col:6> 'char' <LValueToRValue>
          (MemberExpr 0x9e87298 <col:6> 'char' lvalue ->_M_widen_ok 0x9e84030
            (CXXThisExpr 0x9e87288 <col:6> 'const class std::ctype<char> *' this))))
      (IntegerLiteral 0x9e872b8 <col:21> 'int' 1))
    (CompoundStmt 0x9e87478 <line:895:4, line:898:4>
      (CallExpr 0x9e873c8 <line:896:6, col:46> 'void *'
        (ImplicitCastExpr 0x9e873b8 <col:6> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9e87308 <col:6> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9c1d810 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0x9e87400 <col:23> 'void *' <BitCast>
          (ImplicitCastExpr 0x9e873f0 <col:23> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x9e87320 <col:23> 'char_type *' lvalue ParmVar 0x9e857c0 '__to' 'char_type *')))
        (ImplicitCastExpr 0x9e87420 <col:29> 'const void *' <BitCast>
          (ImplicitCastExpr 0x9e87410 <col:29> 'const char *' <LValueToRValue>
            (DeclRefExpr 0x9e87338 <col:29> 'const char *' lvalue ParmVar 0x9e85720 '__lo' 'const char *')))
        (ImplicitCastExpr 0x9e87430 <col:35, col:42> 'unsigned int' <IntegralCast>
          (BinaryOperator 0x9e873a0 <col:35, col:42> 'int' '-'
            (ImplicitCastExpr 0x9e87380 <col:35> 'const char *' <LValueToRValue>
              (DeclRefExpr 0x9e87350 <col:35> 'const char *' lvalue ParmVar 0x9e85770 '__hi' 'const char *'))
            (ImplicitCastExpr 0x9e87390 <col:42> 'const char *' <LValueToRValue>
              (DeclRefExpr 0x9e87368 <col:42> 'const char *' lvalue ParmVar 0x9e85720 '__lo' 'const char *')))))
      (ReturnStmt 0x9e87468 <line:897:6, col:13>
        (ImplicitCastExpr 0x9e87458 <col:13> 'const char *' <LValueToRValue>
          (DeclRefExpr 0x9e8743c <col:13> 'const char *' lvalue ParmVar 0x9e85770 '__hi' 'const char *'))))
    <<<NULL>>>)
  (IfStmt 0x9e87568 <line:899:2, line:900:18>
    <<<NULL>>>
    (UnaryOperator 0x9e87500 <line:899:6, col:7> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9e874f0 <col:7> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0x9e874e0 <col:7> 'char' <LValueToRValue>
          (MemberExpr 0x9e874c0 <col:7> 'char' lvalue ->_M_widen_ok 0x9e84030
            (CXXThisExpr 0x9e874b0 <col:7> 'const class std::ctype<char> *' this)))))
    (CXXMemberCallExpr 0x9e87548 <line:900:4, col:18> 'void'
      (MemberExpr 0x9e87528 <col:4> '<bound member function type>' ->_M_widen_init 0x9e86890
        (CXXThisExpr 0x9e87518 <col:4> 'const class std::ctype<char> *' this)))
    <<<NULL>>>)
  (ReturnStmt 0x9e87698 <line:901:2, col:40>
    (CXXMemberCallExpr 0x9e87640 <col:9, col:40> 'const char *'
      (MemberExpr 0x9e87620 <col:9, col:15> '<bound member function type>' ->do_widen 0x9e86460
        (CXXThisExpr 0x9e87588 <col:9> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9e87668 <col:24> 'const char *' <LValueToRValue>
        (DeclRefExpr 0x9e875d8 <col:24> 'const char *' lvalue ParmVar 0x9e85720 '__lo' 'const char *'))
      (ImplicitCastExpr 0x9e87678 <col:30> 'const char *' <LValueToRValue>
        (DeclRefExpr 0x9e875f0 <col:30> 'const char *' lvalue ParmVar 0x9e85770 '__hi' 'const char *'))
      (ImplicitCastExpr 0x9e87688 <col:36> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9e87608 <col:36> 'char_type *' lvalue ParmVar 0x9e857c0 '__to' 'char_type *')))))


        char narrow(char_type __c, char __dfault) const (CompoundStmt 0x9e87bf0 </usr/include/c++/4.6/bits/locale_facets.h:924:7, line:931:7>
  (IfStmt 0x9e87878 <line:925:2, line:926:52>
    <<<NULL>>>
    (ImplicitCastExpr 0x9e87790 <line:925:6, col:47> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x9e87780 <col:6, col:47> 'char' <LValueToRValue>
        (ArraySubscriptExpr 0x9e87768 <col:6, col:47> 'char' lvalue
          (ImplicitCastExpr 0x9e87758 <col:6> 'char *' <ArrayToPointerDecay>
            (MemberExpr 0x9e876d8 <col:6> 'char [256]' lvalue ->_M_narrow 0x9e84240
              (CXXThisExpr 0x9e876c8 <col:6> 'const class std::ctype<char> *' this)))
          (CXXStaticCastExpr 0x9e87740 <col:16, col:46> 'unsigned char' static_cast<unsigned char> <NoOp>
            (ImplicitCastExpr 0x9e87730 <col:43> 'unsigned char' <IntegralCast>
              (ImplicitCastExpr 0x9e87720 <col:43> 'char_type':'char' <LValueToRValue>
                (DeclRefExpr 0x9e876f8 <col:43> 'char_type':'char' lvalue ParmVar 0x9e85900 '__c' 'char_type':'char')))))))
    (ReturnStmt 0x9e87868 <line:926:4, col:52>
      (ImplicitCastExpr 0x9e87858 <col:11, col:52> 'char' <LValueToRValue>
        (ArraySubscriptExpr 0x9e87840 <col:11, col:52> 'char' lvalue
          (ImplicitCastExpr 0x9e87830 <col:11> 'char *' <ArrayToPointerDecay>
            (MemberExpr 0x9e877b0 <col:11> 'char [256]' lvalue ->_M_narrow 0x9e84240
              (CXXThisExpr 0x9e877a0 <col:11> 'const class std::ctype<char> *' this)))
          (CXXStaticCastExpr 0x9e87818 <col:21, col:51> 'unsigned char' static_cast<unsigned char> <NoOp>
            (ImplicitCastExpr 0x9e87808 <col:48> 'unsigned char' <IntegralCast>
              (ImplicitCastExpr 0x9e877f8 <col:48> 'char_type':'char' <LValueToRValue>
                (DeclRefExpr 0x9e877d0 <col:48> 'char_type':'char' lvalue ParmVar 0x9e85900 '__c' 'char_type':'char')))))))
    <<<NULL>>>)
  (DeclStmt 0x9e879d0 <line:927:2, col:43>
    0x9e878a0 "const char __t =
      (CXXMemberCallExpr 0x9e87988 <col:19, col:42> 'char'
        (MemberExpr 0x9e87968 <col:19> '<bound member function type>' ->do_narrow 0x9e86580
          (CXXThisExpr 0x9e87958 <col:19> 'const class std::ctype<char> *' this))
        (ImplicitCastExpr 0x9e879b0 <col:29> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9e87928 <col:29> 'char_type':'char' lvalue ParmVar 0x9e85900 '__c' 'char_type':'char'))
        (ImplicitCastExpr 0x9e879c0 <col:34> 'char' <LValueToRValue>
          (DeclRefExpr 0x9e87940 <col:34> 'char' lvalue ParmVar 0x9e85940 '__dfault' 'char')))")
  (IfStmt 0x9e87b98 <line:928:2, line:929:49>
    <<<NULL>>>
    (BinaryOperator 0x9e87a50 <line:928:6, col:13> '_Bool' '!='
      (ImplicitCastExpr 0x9e87a20 <col:6> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9e87a10 <col:6> 'char' <LValueToRValue>
          (DeclRefExpr 0x9e879e0 <col:6> 'const char' lvalue Var 0x9e878a0 '__t' 'const char')))
      (ImplicitCastExpr 0x9e87a40 <col:13> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9e87a30 <col:13> 'char' <LValueToRValue>
          (DeclRefExpr 0x9e879f8 <col:13> 'char' lvalue ParmVar 0x9e85940 '__dfault' 'char'))))
    (BinaryOperator 0x9e87b80 <line:929:4, col:49> 'char' lvalue '='
      (ArraySubscriptExpr 0x9e87b40 <col:4, col:45> 'char' lvalue
        (ImplicitCastExpr 0x9e87b30 <col:4> 'char *' <ArrayToPointerDecay>
          (MemberExpr 0x9e87ab0 <col:4> 'char [256]' lvalue ->_M_narrow 0x9e84240
            (CXXThisExpr 0x9e87aa0 <col:4> 'const class std::ctype<char> *' this)))
        (CXXStaticCastExpr 0x9e87b18 <col:14, col:44> 'unsigned char' static_cast<unsigned char> <NoOp>
          (ImplicitCastExpr 0x9e87b08 <col:41> 'unsigned char' <IntegralCast>
            (ImplicitCastExpr 0x9e87af8 <col:41> 'char_type':'char' <LValueToRValue>
              (DeclRefExpr 0x9e87ad0 <col:41> 'char_type':'char' lvalue ParmVar 0x9e85900 '__c' 'char_type':'char')))))
      (ImplicitCastExpr 0x9e87b70 <col:49> 'char' <LValueToRValue>
        (DeclRefExpr 0x9e87b54 <col:49> 'const char' lvalue Var 0x9e878a0 '__t' 'const char')))
    <<<NULL>>>)
  (ReturnStmt 0x9e87be0 <line:930:2, col:9>
    (ImplicitCastExpr 0x9e87bd0 <col:9> 'char' <LValueToRValue>
      (DeclRefExpr 0x9e87bb4 <col:9> 'const char' lvalue Var 0x9e878a0 '__t' 'const char'))))


        const char_type *narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__to) const (CompoundStmt 0x9e880f0 </usr/include/c++/4.6/bits/locale_facets.h:958:7, line:967:7>
  (IfStmt 0x9e87ea8 <line:959:2, line:963:4>
    <<<NULL>>>
    (ImplicitCastExpr 0x9e87d10 <line:959:6, col:46> '_Bool' <IntegralToBoolean>
      (CallExpr 0x9e87cc8 <col:6, col:46> 'long'
        (ImplicitCastExpr 0x9e87cb8 <col:6> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9e87c10 <col:6> 'long (long, long)' lvalue Function 0x9d45c10 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0x9e87cf0 <col:23, col:39> 'long' <IntegralCast>
          (BinaryOperator 0x9e87c90 <col:23, col:39> '_Bool' '=='
            (ImplicitCastExpr 0x9e87c80 <col:23> 'int' <IntegralCast>
              (ImplicitCastExpr 0x9e87c70 <col:23> 'char' <LValueToRValue>
                (MemberExpr 0x9e87c38 <col:23> 'char' lvalue ->_M_narrow_ok 0x9e84280
                  (CXXThisExpr 0x9e87c28 <col:23> 'const class std::ctype<char> *' this))))
            (IntegerLiteral 0x9e87c58 <col:39> 'int' 1)))
        (ImplicitCastExpr 0x9e87d00 <col:42> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0x9e87ca8 <col:42> '_Bool' true))))
    (CompoundStmt 0x9e87e90 <line:960:4, line:963:4>
      (CallExpr 0x9e87de0 <line:961:6, col:46> 'void *'
        (ImplicitCastExpr 0x9e87dd0 <col:6> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9e87d1c <col:6> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9c1d810 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0x9e87e18 <col:23> 'void *' <BitCast>
          (ImplicitCastExpr 0x9e87e08 <col:23> 'char *' <LValueToRValue>
            (DeclRefExpr 0x9e87d34 <col:23> 'char *' lvalue ParmVar 0x9e85b40 '__to' 'char *')))
        (ImplicitCastExpr 0x9e87e38 <col:29> 'const void *' <BitCast>
          (ImplicitCastExpr 0x9e87e28 <col:29> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x9e87d4c <col:29> 'const char_type *' lvalue ParmVar 0x9e85a60 '__lo' 'const char_type *')))
        (ImplicitCastExpr 0x9e87e48 <col:35, col:42> 'unsigned int' <IntegralCast>
          (BinaryOperator 0x9e87db8 <col:35, col:42> 'int' '-'
            (ImplicitCastExpr 0x9e87d98 <col:35> 'const char_type *' <LValueToRValue>
              (DeclRefExpr 0x9e87d64 <col:35> 'const char_type *' lvalue ParmVar 0x9e85ab0 '__hi' 'const char_type *'))
            (ImplicitCastExpr 0x9e87da8 <col:42> 'const char_type *' <LValueToRValue>
              (DeclRefExpr 0x9e87d7c <col:42> 'const char_type *' lvalue ParmVar 0x9e85a60 '__lo' 'const char_type *')))))
      (ReturnStmt 0x9e87e80 <line:962:6, col:13>
        (ImplicitCastExpr 0x9e87e70 <col:13> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9e87e54 <col:13> 'const char_type *' lvalue ParmVar 0x9e85ab0 '__hi' 'const char_type *'))))
    <<<NULL>>>)
  (IfStmt 0x9e87f80 <line:964:2, line:965:19>
    <<<NULL>>>
    (UnaryOperator 0x9e87f18 <line:964:6, col:7> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9e87f08 <col:7> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0x9e87ef8 <col:7> 'char' <LValueToRValue>
          (MemberExpr 0x9e87ed8 <col:7> 'char' lvalue ->_M_narrow_ok 0x9e84280
            (CXXThisExpr 0x9e87ec8 <col:7> 'const class std::ctype<char> *' this)))))
    (CXXMemberCallExpr 0x9e87f60 <line:965:4, col:19> 'void'
      (MemberExpr 0x9e87f40 <col:4> '<bound member function type>' ->_M_narrow_init 0x9e86810
        (CXXThisExpr 0x9e87f30 <col:4> 'const class std::ctype<char> *' this)))
    <<<NULL>>>)
  (ReturnStmt 0x9e880e0 <line:966:2, col:51>
    (CXXMemberCallExpr 0x9e88070 <col:9, col:51> 'const char_type *'
      (MemberExpr 0x9e88050 <col:9, col:15> '<bound member function type>' ->do_narrow 0x9e86740
        (CXXThisExpr 0x9e87fa0 <col:9> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9e880a0 <col:25> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9e87ff0 <col:25> 'const char_type *' lvalue ParmVar 0x9e85a60 '__lo' 'const char_type *'))
      (ImplicitCastExpr 0x9e880b0 <col:31> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9e88008 <col:31> 'const char_type *' lvalue ParmVar 0x9e85ab0 '__hi' 'const char_type *'))
      (ImplicitCastExpr 0x9e880c0 <col:37> 'char' <LValueToRValue>
        (DeclRefExpr 0x9e88020 <col:37> 'char' lvalue ParmVar 0x9e85af0 '__dfault' 'char'))
      (ImplicitCastExpr 0x9e880d0 <col:47> 'char *' <LValueToRValue>
        (DeclRefExpr 0x9e88038 <col:47> 'char *' lvalue ParmVar 0x9e85b40 '__to' 'char *')))))


        const mask *table() const throw() (CompoundStmt 0x9e88160 </usr/include/c++/4.6/bits/locale_facets.h:975:7, col:26>
  (ReturnStmt 0x9e88150 <col:9, col:16>
    (ImplicitCastExpr 0x9e88140 <col:16> 'const mask *' <LValueToRValue>
      (MemberExpr 0x9e88120 <col:16> 'const mask *const' lvalue ->_M_table 0x9e83ff0
        (CXXThisExpr 0x9e88110 <col:16> 'const class std::ctype<char> *' this)))))


        static const mask *classic_table() throw();
    protected:
    protected:
        virtual void ~ctype();
        virtual char_type do_toupper(char_type) const;
        virtual const char_type *do_toupper(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_tolower(char_type) const;
        virtual const char_type *do_tolower(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_widen(char __c) const (CompoundStmt 0x9e881b0 </usr/include/c++/4.6/bits/locale_facets.h:1076:7, col:21>
  (ReturnStmt 0x9e881a0 <col:9, col:16>
    (ImplicitCastExpr 0x9e88190 <col:16> 'char' <LValueToRValue>
      (DeclRefExpr 0x9e88174 <col:16> 'char' lvalue ParmVar 0x9e86290 '__c' 'char'))))


        virtual const char *do_widen(const char *__lo, const char *__hi, char_type *__dest) const (CompoundStmt 0x9e88338 </usr/include/c++/4.6/bits/locale_facets.h:1099:7, line:1102:7>
  (CallExpr 0x9e88288 <line:1100:2, col:44> 'void *'
    (ImplicitCastExpr 0x9e88278 <col:2> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9e881c4 <col:2> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9c1d810 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
    (ImplicitCastExpr 0x9e882c0 <col:19> 'void *' <BitCast>
      (ImplicitCastExpr 0x9e882b0 <col:19> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9e881dc <col:19> 'char_type *' lvalue ParmVar 0x9e86400 '__dest' 'char_type *')))
    (ImplicitCastExpr 0x9e882e0 <col:27> 'const void *' <BitCast>
      (ImplicitCastExpr 0x9e882d0 <col:27> 'const char *' <LValueToRValue>
        (DeclRefExpr 0x9e881f4 <col:27> 'const char *' lvalue ParmVar 0x9e86360 '__lo' 'const char *')))
    (ImplicitCastExpr 0x9e882f0 <col:33, col:40> 'unsigned int' <IntegralCast>
      (BinaryOperator 0x9e88260 <col:33, col:40> 'int' '-'
        (ImplicitCastExpr 0x9e88240 <col:33> 'const char *' <LValueToRValue>
          (DeclRefExpr 0x9e8820c <col:33> 'const char *' lvalue ParmVar 0x9e863b0 '__hi' 'const char *'))
        (ImplicitCastExpr 0x9e88250 <col:40> 'const char *' <LValueToRValue>
          (DeclRefExpr 0x9e88224 <col:40> 'const char *' lvalue ParmVar 0x9e86360 '__lo' 'const char *')))))
  (ReturnStmt 0x9e88328 <line:1101:2, col:9>
    (ImplicitCastExpr 0x9e88318 <col:9> 'const char *' <LValueToRValue>
      (DeclRefExpr 0x9e882fc <col:9> 'const char *' lvalue ParmVar 0x9e863b0 '__hi' 'const char *'))))


        virtual char do_narrow(char_type __c, char) const (CompoundStmt 0x9e88388 </usr/include/c++/4.6/bits/locale_facets.h:1125:7, col:21>
  (ReturnStmt 0x9e88378 <col:9, col:16>
    (ImplicitCastExpr 0x9e88368 <col:16> 'char_type':'char' <LValueToRValue>
      (DeclRefExpr 0x9e88350 <col:16> 'char_type':'char' lvalue ParmVar 0x9e864e0 '__c' 'char_type':'char'))))


        virtual const char_type *do_narrow(const char_type *__lo, const char_type *__hi, char, char *__dest) const (CompoundStmt 0x9e88510 </usr/include/c++/4.6/bits/locale_facets.h:1152:7, line:1155:7>
  (CallExpr 0x9e88460 <line:1153:2, col:44> 'void *'
    (ImplicitCastExpr 0x9e88450 <col:2> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9e8839c <col:2> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9c1d810 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
    (ImplicitCastExpr 0x9e88498 <col:19> 'void *' <BitCast>
      (ImplicitCastExpr 0x9e88488 <col:19> 'char *' <LValueToRValue>
        (DeclRefExpr 0x9e883b4 <col:19> 'char *' lvalue ParmVar 0x9e866e0 '__dest' 'char *')))
    (ImplicitCastExpr 0x9e884b8 <col:27> 'const void *' <BitCast>
      (ImplicitCastExpr 0x9e884a8 <col:27> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9e883cc <col:27> 'const char_type *' lvalue ParmVar 0x9e86600 '__lo' 'const char_type *')))
    (ImplicitCastExpr 0x9e884c8 <col:33, col:40> 'unsigned int' <IntegralCast>
      (BinaryOperator 0x9e88438 <col:33, col:40> 'int' '-'
        (ImplicitCastExpr 0x9e88418 <col:33> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9e883e4 <col:33> 'const char_type *' lvalue ParmVar 0x9e86650 '__hi' 'const char_type *'))
        (ImplicitCastExpr 0x9e88428 <col:40> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9e883fc <col:40> 'const char_type *' lvalue ParmVar 0x9e86600 '__lo' 'const char_type *')))))
  (ReturnStmt 0x9e88500 <line:1154:2, col:9>
    (ImplicitCastExpr 0x9e884f0 <col:9> 'const char_type *' <LValueToRValue>
      (DeclRefExpr 0x9e884d4 <col:9> 'const char_type *' lvalue ParmVar 0x9e86650 '__hi' 'const char_type *'))))


    private:
    private:
        void _M_narrow_init() const;
        void _M_widen_init() const;
        inline std::ctype<char> &operator=(const std::ctype<char> &);
    };
    class ctype : public __ctype_abstract_base<wchar_t> {
        class ctype;
    public:
    public:
        typedef wchar_t char_type;
        typedef wctype_t __wmask_type;
    protected:
    protected:
        __c_locale _M_c_locale_ctype;
        bool _M_narrow_ok;
        char _M_narrow[128];
        wint_t _M_widen[256];
        mask _M_bit[16];
        __wmask_type _M_wmask[16];
    public:
    public:
        static locale::id id;
        ctype(size_t __refs = (ImplicitCastExpr 0x9e90508 </usr/include/c++/4.6/bits/locale_facets.h:1208:29> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9e904f0 <col:29> 'int' 0))
);
        ctype(__c_locale __cloc, size_t __refs = (ImplicitCastExpr 0x9e90530 </usr/include/c++/4.6/bits/locale_facets.h:1219:48> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9e90518 <col:48> 'int' 0))
);
    protected:
    protected:
        __wmask_type _M_convert_to_wmask(const mask __m) const throw();
        virtual void ~ctype();
        virtual bool do_is(mask __m, char_type __c) const;
        virtual const char_type *do_is(const char_type *__lo, const char_type *__hi, mask *__vec) const;
        virtual const char_type *do_scan_is(mask __m, const char_type *__lo, const char_type *__hi) const;
        virtual const char_type *do_scan_not(mask __m, const char_type *__lo, const char_type *__hi) const;
        virtual char_type do_toupper(char_type) const;
        virtual const char_type *do_toupper(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_tolower(char_type) const;
        virtual const char_type *do_tolower(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_widen(char) const;
        virtual const char *do_widen(const char *__lo, const char *__hi, char_type *__dest) const;
        virtual char do_narrow(char_type, char __dfault) const;
        virtual const char_type *do_narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__dest) const;
        void _M_initialize_ctype() throw();
        inline std::ctype<wchar_t> &operator=(const std::ctype<wchar_t> &);
    };
    template <typename _CharT = char> class ctype_byname
template <typename _CharT = wchar_t> class ctype_byname
template <typename _CharT> class ctype_byname : public ctype<_CharT> {
        class ctype_byname;
    public:
    public:
        typedef typename ctype<_CharT>::mask mask;
        ctype_byname<_CharT>(const char *__s, size_t __refs = (ImplicitCastExpr 0x9e90b40 </usr/include/c++/4.6/bits/locale_facets.h:1473:53> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9e90b28 <col:53> 'int' 0))
);
    protected:
    protected:
        virtual void ~ctype_byname<_CharT>() (CompoundStmt 0x9e90b50 </usr/include/c++/4.6/bits/locale_facets.h:1477:23, col:25>)


    };
    class ctype_byname : public ctype<char> {
        class ctype_byname;
    public:
    public:
        ctype_byname(const char *__s, size_t __refs = (ImplicitCastExpr 0x9e91178 </usr/include/c++/4.6/bits/locale_facets.h:1486:53> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9e91160 <col:53> 'int' 0))
);
    protected:
    protected:
        virtual void ~ctype_byname();
        inline std::ctype_byname<char> &operator=(const std::ctype_byname<char> &);
    };
    class ctype_byname : public ctype<wchar_t> {
        class ctype_byname;
    public:
    public:
        ctype_byname(const char *__s, size_t __refs = (ImplicitCastExpr 0x9e91798 </usr/include/c++/4.6/bits/locale_facets.h:1499:53> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9e91780 <col:53> 'int' 0))
);
    protected:
    protected:
        virtual void ~ctype_byname();
        inline std::ctype_byname<wchar_t> &operator=(const std::ctype_byname<wchar_t> &);
    };
}
namespace std {
    bool is(mask __m, char __c) const (CompoundStmt 0x9e91b58 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_inline.h:44:3, col:61>
  (ReturnStmt 0x9e91b48 <col:5, col:56>
    (ImplicitCastExpr 0x9e91b38 <col:12, col:56> '_Bool' <IntegralToBoolean>
      (BinaryOperator 0x9e91b20 <col:12, col:56> 'int' '&'
        (ImplicitCastExpr 0x9e91af0 <col:12, col:52> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9e91ae0 <col:12, col:52> 'mask':'unsigned short' <LValueToRValue>
            (ArraySubscriptExpr 0x9e91ab0 <col:12, col:52> 'const mask':'const unsigned short' lvalue
              (ImplicitCastExpr 0x9e91aa0 <col:12> 'const mask *' <LValueToRValue>
                (MemberExpr 0x9e91a20 <col:12> 'const mask *const' lvalue ->_M_table 0x9e83ff0
                  (CXXThisExpr 0x9e91a10 <col:12> 'const class std::ctype<char> *' this)))
              (CXXStaticCastExpr 0x9e91a88 <col:21, col:51> 'unsigned char' static_cast<unsigned char> <NoOp>
                (ImplicitCastExpr 0x9e91a78 <col:48> 'unsigned char' <IntegralCast>
                  (ImplicitCastExpr 0x9e91a68 <col:48> 'char' <LValueToRValue>
                    (DeclRefExpr 0x9e91a40 <col:48> 'char' lvalue ParmVar 0x9e91920 '__c' 'char')))))))
        (ImplicitCastExpr 0x9e91b10 <col:56> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9e91b00 <col:56> 'mask':'unsigned short' <LValueToRValue>
            (DeclRefExpr 0x9e91ac4 <col:56> 'mask':'unsigned short' lvalue ParmVar 0x9e918e0 '__m' 'mask':'unsigned short')))))))


    const char *is(const char *__low, const char *__high, mask *__vec) const (CompoundStmt 0x9e91fa8 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_inline.h:49:3, line:53:3>
  (WhileStmt 0x9e91f58 <line:50:5, line:51:63>
    <<<NULL>>>
    (BinaryOperator 0x9e91de8 <line:50:12, col:20> '_Bool' '<'
      (ImplicitCastExpr 0x9e91dc8 <col:12> 'const char *' <LValueToRValue>
        (DeclRefExpr 0x9e91d94 <col:12> 'const char *' lvalue ParmVar 0x9e91bf0 '__low' 'const char *'))
      (ImplicitCastExpr 0x9e91dd8 <col:20> 'const char *' <LValueToRValue>
        (DeclRefExpr 0x9e91dac <col:20> 'const char *' lvalue ParmVar 0x9e91c40 '__high' 'const char *')))
    (BinaryOperator 0x9e91f40 <line:51:7, col:63> 'mask':'unsigned short' lvalue '='
      (UnaryOperator 0x9e91e30 <col:7, col:13> 'mask':'unsigned short' lvalue prefix '*'
        (UnaryOperator 0x9e91e18 <col:8, col:13> 'mask *' postfix '++'
          (DeclRefExpr 0x9e91e00 <col:8> 'mask *' lvalue ParmVar 0x9e91c90 '__vec' 'mask *')))
      (ImplicitCastExpr 0x9e91f30 <col:18, col:63> 'mask':'unsigned short' <LValueToRValue>
        (ArraySubscriptExpr 0x9e91f18 <col:18, col:63> 'const mask':'const unsigned short' lvalue
          (ImplicitCastExpr 0x9e91f08 <col:18> 'const mask *' <LValueToRValue>
            (MemberExpr 0x9e91e58 <col:18> 'const mask *const' lvalue ->_M_table 0x9e83ff0
              (CXXThisExpr 0x9e91e48 <col:18> 'const class std::ctype<char> *' this)))
          (CXXStaticCastExpr 0x9e91ef0 <col:27, col:62> 'unsigned char' static_cast<unsigned char> <NoOp>
            (ImplicitCastExpr 0x9e91ee0 <col:54, col:60> 'unsigned char' <IntegralCast>
              (ImplicitCastExpr 0x9e91ed0 <col:54, col:60> 'char' <LValueToRValue>
                (UnaryOperator 0x9e91ea8 <col:54, col:60> 'const char' lvalue prefix '*'
                  (UnaryOperator 0x9e91e90 <col:55, col:60> 'const char *' postfix '++'
                    (DeclRefExpr 0x9e91e78 <col:55> 'const char *' lvalue ParmVar 0x9e91bf0 '__low' 'const char *'))))))))))
  (ReturnStmt 0x9e91f98 <line:52:5, col:12>
    (ImplicitCastExpr 0x9e91f88 <col:12> 'const char *' <LValueToRValue>
      (DeclRefExpr 0x9e91f6c <col:12> 'const char *' lvalue ParmVar 0x9e91c40 '__high' 'const char *'))))


    const char *scan_is(mask __m, const char *__low, const char *__high) const (CompoundStmt 0x9e92468 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_inline.h:58:3, line:63:3>
  (WhileStmt 0x9e92418 <line:59:5, line:61:9>
    <<<NULL>>>
    (BinaryOperator 0x9e923d0 <line:59:12, line:60:60> '_Bool' '&&'
      (BinaryOperator 0x9e92228 <line:59:12, col:20> '_Bool' '<'
        (ImplicitCastExpr 0x9e92208 <col:12> 'const char *' <LValueToRValue>
          (DeclRefExpr 0x9e921d4 <col:12> 'const char *' lvalue ParmVar 0x9e92080 '__low' 'const char *'))
        (ImplicitCastExpr 0x9e92218 <col:20> 'const char *' <LValueToRValue>
          (DeclRefExpr 0x9e921ec <col:20> 'const char *' lvalue ParmVar 0x9e920d0 '__high' 'const char *')))
      (UnaryOperator 0x9e923b8 <line:60:8, col:60> '_Bool' prefix '!'
        (ImplicitCastExpr 0x9e923a8 <col:9, col:60> '_Bool' <IntegralToBoolean>
          (ParenExpr 0x9e92390 <col:9, col:60> 'int'
            (BinaryOperator 0x9e92378 <col:10, col:57> 'int' '&'
              (ImplicitCastExpr 0x9e92348 <col:10, col:53> 'int' <IntegralCast>
                (ImplicitCastExpr 0x9e92338 <col:10, col:53> 'mask':'unsigned short' <LValueToRValue>
                  (ArraySubscriptExpr 0x9e92308 <col:10, col:53> 'const mask':'const unsigned short' lvalue
                    (ImplicitCastExpr 0x9e922f8 <col:10> 'const mask *' <LValueToRValue>
                      (MemberExpr 0x9e92250 <col:10> 'const mask *const' lvalue ->_M_table 0x9e83ff0
                        (CXXThisExpr 0x9e92240 <col:10> 'const class std::ctype<char> *' this)))
                    (CXXStaticCastExpr 0x9e922e0 <col:19, col:52> 'unsigned char' static_cast<unsigned char> <NoOp>
                      (ImplicitCastExpr 0x9e922d0 <col:46, col:47> 'unsigned char' <IntegralCast>
                        (ImplicitCastExpr 0x9e922c0 <col:46, col:47> 'char' <LValueToRValue>
                          (UnaryOperator 0x9e92298 <col:46, col:47> 'const char' lvalue prefix '*'
                            (ImplicitCastExpr 0x9e92288 <col:47> 'const char *' <LValueToRValue>
                              (DeclRefExpr 0x9e92270 <col:47> 'const char *' lvalue ParmVar 0x9e92080 '__low' 'const char *')))))))))
              (ImplicitCastExpr 0x9e92368 <col:57> 'int' <IntegralCast>
                (ImplicitCastExpr 0x9e92358 <col:57> 'mask':'unsigned short' <LValueToRValue>
                  (DeclRefExpr 0x9e9231c <col:57> 'mask':'unsigned short' lvalue ParmVar 0x9e92030 '__m' 'mask':'unsigned short'))))))))
    (UnaryOperator 0x9e92400 <line:61:7, col:9> 'const char *' lvalue prefix '++'
      (DeclRefExpr 0x9e923e8 <col:9> 'const char *' lvalue ParmVar 0x9e92080 '__low' 'const char *')))
  (ReturnStmt 0x9e92458 <line:62:5, col:12>
    (ImplicitCastExpr 0x9e92448 <col:12> 'const char *' <LValueToRValue>
      (DeclRefExpr 0x9e9242c <col:12> 'const char *' lvalue ParmVar 0x9e92080 '__low' 'const char *'))))


    const char *scan_not(mask __m, const char *__low, const char *__high) const (CompoundStmt 0x9e92930 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_inline.h:68:3, line:73:3>
  (WhileStmt 0x9e928e0 <line:69:5, line:71:9>
    <<<NULL>>>
    (BinaryOperator 0x9e92898 <line:69:12, line:70:64> '_Bool' '&&'
      (BinaryOperator 0x9e926e8 <line:69:12, col:20> '_Bool' '<'
        (ImplicitCastExpr 0x9e926c8 <col:12> 'const char *' <LValueToRValue>
          (DeclRefExpr 0x9e92694 <col:12> 'const char *' lvalue ParmVar 0x9e92540 '__low' 'const char *'))
        (ImplicitCastExpr 0x9e926d8 <col:20> 'const char *' <LValueToRValue>
          (DeclRefExpr 0x9e926ac <col:20> 'const char *' lvalue ParmVar 0x9e92590 '__high' 'const char *')))
      (BinaryOperator 0x9e92880 <line:70:8, col:64> '_Bool' '!='
        (ParenExpr 0x9e92850 <col:8, col:59> 'int'
          (BinaryOperator 0x9e92838 <col:9, col:56> 'int' '&'
            (ImplicitCastExpr 0x9e92808 <col:9, col:52> 'int' <IntegralCast>
              (ImplicitCastExpr 0x9e927f8 <col:9, col:52> 'mask':'unsigned short' <LValueToRValue>
                (ArraySubscriptExpr 0x9e927c8 <col:9, col:52> 'const mask':'const unsigned short' lvalue
                  (ImplicitCastExpr 0x9e927b8 <col:9> 'const mask *' <LValueToRValue>
                    (MemberExpr 0x9e92710 <col:9> 'const mask *const' lvalue ->_M_table 0x9e83ff0
                      (CXXThisExpr 0x9e92700 <col:9> 'const class std::ctype<char> *' this)))
                  (CXXStaticCastExpr 0x9e927a0 <col:18, col:51> 'unsigned char' static_cast<unsigned char> <NoOp>
                    (ImplicitCastExpr 0x9e92790 <col:45, col:46> 'unsigned char' <IntegralCast>
                      (ImplicitCastExpr 0x9e92780 <col:45, col:46> 'char' <LValueToRValue>
                        (UnaryOperator 0x9e92758 <col:45, col:46> 'const char' lvalue prefix '*'
                          (ImplicitCastExpr 0x9e92748 <col:46> 'const char *' <LValueToRValue>
                            (DeclRefExpr 0x9e92730 <col:46> 'const char *' lvalue ParmVar 0x9e92540 '__low' 'const char *')))))))))
            (ImplicitCastExpr 0x9e92828 <col:56> 'int' <IntegralCast>
              (ImplicitCastExpr 0x9e92818 <col:56> 'mask':'unsigned short' <LValueToRValue>
                (DeclRefExpr 0x9e927dc <col:56> 'mask':'unsigned short' lvalue ParmVar 0x9e924f0 '__m' 'mask':'unsigned short')))))
        (IntegerLiteral 0x9e92868 <col:64> 'int' 0)))
    (UnaryOperator 0x9e928c8 <line:71:7, col:9> 'const char *' lvalue prefix '++'
      (DeclRefExpr 0x9e928b0 <col:9> 'const char *' lvalue ParmVar 0x9e92540 '__low' 'const char *')))
  (ReturnStmt 0x9e92920 <line:72:5, col:12>
    (ImplicitCastExpr 0x9e92910 <col:12> 'const char *' <LValueToRValue>
      (DeclRefExpr 0x9e928f4 <col:12> 'const char *' lvalue ParmVar 0x9e92540 '__low' 'const char *'))))


}
namespace std {
    class __num_base {
        class __num_base;
    public:
    public:
        enum  {
            _S_ominus,
            _S_oplus,
            _S_ox,
            _S_oX,
            _S_odigits,
            _S_odigits_end = (ImplicitCastExpr 0x9e93f08 </usr/include/c++/4.6/bits/locale_facets.h:1530:26, col:39> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9e93c98 <col:26, col:39> 'int' '+'
    (DeclRefExpr 0x9e92cf4 <col:26> 'int' EnumConstant 0x9e92cc0 '_S_odigits' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')
    (IntegerLiteral 0x9e93c80 <col:39> 'int' 16)))
,
            _S_oudigits = (ImplicitCastExpr 0x9e93f18 </usr/include/c++/4.6/bits/locale_facets.h:1531:23> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0x9e93ce4 <col:23> 'int' EnumConstant 0x9e93cb0 '_S_odigits_end' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>'))
,
            _S_oudigits_end = (ImplicitCastExpr 0x9e93f28 </usr/include/c++/4.6/bits/locale_facets.h:1532:27, col:41> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9e93d68 <col:27, col:41> 'int' '+'
    (DeclRefExpr 0x9e93d34 <col:27> 'int' EnumConstant 0x9e93d00 '_S_oudigits' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')
    (IntegerLiteral 0x9e93d50 <col:41> 'int' 16)))
,
            _S_oe = (ImplicitCastExpr 0x9e93f38 </usr/include/c++/4.6/bits/locale_facets.h:1533:17, col:30> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9e93de8 <col:17, col:30> 'int' '+'
    (DeclRefExpr 0x9e93db4 <col:17> 'int' EnumConstant 0x9e92cc0 '_S_odigits' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')
    (IntegerLiteral 0x9e93dd0 <col:30> 'int' 14)))
,
            _S_oE = (ImplicitCastExpr 0x9e93f48 </usr/include/c++/4.6/bits/locale_facets.h:1534:17, col:31> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9e93e68 <col:17, col:31> 'int' '+'
    (DeclRefExpr 0x9e93e34 <col:17> 'int' EnumConstant 0x9e93d00 '_S_oudigits' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')
    (IntegerLiteral 0x9e93e50 <col:31> 'int' 14)))
,
            _S_oend = (ImplicitCastExpr 0x9e93f58 </usr/include/c++/4.6/bits/locale_facets.h:1535:12> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0x9e93eb4 <col:12> 'int' EnumConstant 0x9e93d80 '_S_oudigits_end' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>'))

        };
        static const char *_S_atoms_out;
        static const char *_S_atoms_in;
        enum  {
            _S_iminus,
            _S_iplus,
            _S_ix,
            _S_iX,
            _S_izero,
            _S_ie = (ImplicitCastExpr 0x9e942f8 </usr/include/c++/4.6/bits/locale_facets.h:1556:15, col:26> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9e941d8 <col:15, col:26> 'int' '+'
    (DeclRefExpr 0x9e941a4 <col:15> 'int' EnumConstant 0x9e94170 '_S_izero' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')
    (IntegerLiteral 0x9e941c0 <col:26> 'int' 14)))
,
            _S_iE = (ImplicitCastExpr 0x9e94308 </usr/include/c++/4.6/bits/locale_facets.h:1557:15, col:26> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9e94258 <col:15, col:26> 'int' '+'
    (DeclRefExpr 0x9e94224 <col:15> 'int' EnumConstant 0x9e94170 '_S_izero' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')
    (IntegerLiteral 0x9e94240 <col:26> 'int' 20)))
,
            _S_iend = (ImplicitCastExpr 0x9e94318 </usr/include/c++/4.6/bits/locale_facets.h:1558:17> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9e942a8 <col:17> 'int' 26))

        };
        static void _S_format_float(const std::ios_base &__io, char *__fptr, char __mod) throw();
    };
    template <typename _CharT = char> struct __numpunct_cache
template <typename _CharT = wchar_t> struct __numpunct_cache
template <typename _CharT> struct __numpunct_cache : public locale::facet {
        struct __numpunct_cache;
        const char *_M_grouping;
        size_t _M_grouping_size;
        bool _M_use_grouping;
        const _CharT *_M_truename;
        size_t _M_truename_size;
        const _CharT *_M_falsename;
        size_t _M_falsename_size;
        _CharT _M_decimal_point;
        _CharT _M_thousands_sep;
        _CharT _M_atoms_out[36];
        _CharT _M_atoms_in[26];
        bool _M_allocated;
        __numpunct_cache<_CharT>(size_t __refs = (ImplicitCastExpr 0x9e95108 </usr/include/c++/4.6/bits/locale_facets.h:1594:40> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9e950f0 <col:40> 'int' 0))
) : std::locale::facet((DeclRefExpr 0x9e95114 </usr/include/c++/4.6/bits/locale_facets.h:1595:15> 'size_t':'unsigned int' lvalue ParmVar 0x9e94c20 '__refs' 'size_t':'unsigned int')
), _M_grouping((IntegerLiteral 0x9e951a8 </usr/include/c++/4.6/bits/locale_facets.h:1595:36> 'int' 0)
), _M_grouping_size((IntegerLiteral 0x9e95208 </usr/include/c++/4.6/bits/locale_facets.h:1595:57> 'int' 0)
), _M_use_grouping((CXXBoolLiteralExpr 0x9e95268 </usr/include/c++/4.6/bits/locale_facets.h:1596:18> '_Bool' false)
), _M_truename((IntegerLiteral 0x9e952b8 </usr/include/c++/4.6/bits/locale_facets.h:1597:14> 'int' 0)
), _M_truename_size((IntegerLiteral 0x9e95308 </usr/include/c++/4.6/bits/locale_facets.h:1597:35> 'int' 0)
), _M_falsename((IntegerLiteral 0x9e95368 </usr/include/c++/4.6/bits/locale_facets.h:1597:52> 'int' 0)
), _M_falsename_size((IntegerLiteral 0x9e953b8 </usr/include/c++/4.6/bits/locale_facets.h:1598:20> 'int' 0)
), _M_decimal_point((CXXUnresolvedConstructExpr 0x9e95420 </usr/include/c++/4.6/bits/locale_facets.h:1598:41, col:48> '_CharT')
), _M_thousands_sep((CXXUnresolvedConstructExpr 0x9e95480 </usr/include/c++/4.6/bits/locale_facets.h:1599:19, col:26> '_CharT')
), _M_allocated((CXXBoolLiteralExpr 0x9e954d8 </usr/include/c++/4.6/bits/locale_facets.h:1599:43> '_Bool' false)
) (CompoundStmt 0x9e95558 </usr/include/c++/4.6/bits/locale_facets.h:1600:9, col:11>)


        void ~__numpunct_cache<_CharT>();
        void _M_cache(const std::locale &__loc);
    private:
    private:
        __numpunct_cache<_CharT> &operator=(const __numpunct_cache<_CharT> &);
        __numpunct_cache<_CharT>(const __numpunct_cache<_CharT> &);
    };
    void ~__numpunct_cache<_CharT>() (CompoundStmt 0x9e95920 </usr/include/c++/4.6/bits/locale_facets.h:1617:5, line:1624:5>
  (IfStmt 0x9e95900 <line:1618:7, line:1623:2>
    <<<NULL>>>
    (MemberExpr 0x9e957e8 <line:1618:11> '_Bool' lvalue ->_M_allocated 0x9e94be0
      (CXXThisExpr 0x9e957d8 <col:11> '__numpunct_cache<_CharT> *' this))
    (CompoundStmt 0x9e958e0 <line:1619:2, line:1623:2>
      (CXXDeleteExpr 0x9e95838 <line:1620:4, col:14> 'void'
        (MemberExpr 0x9e95818 <col:14> 'const char *' lvalue ->_M_grouping 0x9e947d0
          (CXXThisExpr 0x9e95808 <col:14> '__numpunct_cache<_CharT> *' this)))
      (CXXDeleteExpr 0x9e95880 <line:1621:4, col:14> 'void'
        (MemberExpr 0x9e95860 <col:14> 'const _CharT *' lvalue ->_M_truename 0x9e948b0
          (CXXThisExpr 0x9e95850 <col:14> '__numpunct_cache<_CharT> *' this)))
      (CXXDeleteExpr 0x9e958c8 <line:1622:4, col:14> 'void'
        (MemberExpr 0x9e958a8 <col:14> 'const _CharT *' lvalue ->_M_falsename 0x9e94930
          (CXXThisExpr 0x9e95898 <col:14> '__numpunct_cache<_CharT> *' this))))
    <<<NULL>>>))


    template <typename _CharT = char> class numpunct : public locale::facet {
        class numpunct;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
        typedef __numpunct_cache<char> __cache_type;
    protected:
    protected:
        __cache_type *_M_data;
    public:
    public:
        static locale::id id;
        numpunct(size_t __refs);
        numpunct(__cache_type *__cache, size_t __refs);
        numpunct(__c_locale __cloc, size_t __refs);
        char_type decimal_point() const;
        char_type thousands_sep() const;
        string grouping() const;
        string_type truename() const;
        string_type falsename() const;
    protected:
    protected:
        virtual void ~numpunct();
        virtual char_type do_decimal_point() const;
        virtual char_type do_thousands_sep() const;
        virtual string do_grouping() const;
        virtual string_type do_truename() const;
        virtual string_type do_falsename() const;
        void _M_initialize_numpunct(__c_locale __cloc);
        inline std::numpunct<char> &operator=(const std::numpunct<char> &);
    }
template <typename _CharT = wchar_t> class numpunct : public locale::facet {
        class numpunct;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
        typedef __numpunct_cache<wchar_t> __cache_type;
    protected:
    protected:
        __cache_type *_M_data;
    public:
    public:
        static locale::id id;
        numpunct(size_t __refs);
        numpunct(__cache_type *__cache, size_t __refs);
        numpunct(__c_locale __cloc, size_t __refs);
        char_type decimal_point() const;
        char_type thousands_sep() const;
        string grouping() const;
        string_type truename() const;
        string_type falsename() const;
    protected:
    protected:
        virtual void ~numpunct();
        virtual char_type do_decimal_point() const;
        virtual char_type do_thousands_sep() const;
        virtual string do_grouping() const;
        virtual string_type do_truename() const;
        virtual string_type do_falsename() const;
        void _M_initialize_numpunct(__c_locale __cloc);
        inline std::numpunct<wchar_t> &operator=(const std::numpunct<wchar_t> &);
    }
template <typename _CharT> class numpunct : public locale::facet {
        class numpunct;
    public:
    public:
        typedef _CharT char_type;
        typedef basic_string<_CharT> string_type;
        typedef __numpunct_cache<_CharT> __cache_type;
    protected:
    protected:
        __cache_type *_M_data;
    public:
    public:
        static locale::id id;
        numpunct<_CharT>(size_t __refs = (ImplicitCastExpr 0x9e96ae0 </usr/include/c++/4.6/bits/locale_facets.h:1665:32> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9e96ac8 <col:32> 'int' 0))
) : std::locale::facet((DeclRefExpr 0x9e96b64 </usr/include/c++/4.6/bits/locale_facets.h:1666:15> 'size_t':'unsigned int' lvalue ParmVar 0x9e96040 '__refs' 'size_t':'unsigned int')
), _M_data((IntegerLiteral 0x9e96bf8 </usr/include/c++/4.6/bits/locale_facets.h:1666:32> 'int' 0)
) (CompoundStmt 0x9e96cb8 </usr/include/c++/4.6/bits/locale_facets.h:1667:7, col:35>
  (CallExpr 0x9e96c98 <col:9, col:32> '<dependent type>'
    (MemberExpr 0x9e96c78 <col:9> '<bound member function type>' ->_M_initialize_numpunct 0x9e96a60
      (CXXThisExpr 0x9e96c68 <col:9> 'numpunct<_CharT> *' this))))


        numpunct<_CharT>(__cache_type *__cache, size_t __refs = (ImplicitCastExpr 0x9e96b08 </usr/include/c++/4.6/bits/locale_facets.h:1679:55> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9e96af0 <col:55> 'int' 0))
) : std::locale::facet((DeclRefExpr 0x9e96ccc </usr/include/c++/4.6/bits/locale_facets.h:1680:15> 'size_t':'unsigned int' lvalue ParmVar 0x9e96170 '__refs' 'size_t':'unsigned int')
), _M_data((DeclRefExpr 0x9e96d68 </usr/include/c++/4.6/bits/locale_facets.h:1680:32> '__cache_type *' lvalue ParmVar 0x9e96130 '__cache' '__cache_type *')
) (CompoundStmt 0x9e96e10 </usr/include/c++/4.6/bits/locale_facets.h:1681:7, col:35>
  (CallExpr 0x9e96df0 <col:9, col:32> '<dependent type>'
    (MemberExpr 0x9e96dd0 <col:9> '<bound member function type>' ->_M_initialize_numpunct 0x9e96a60
      (CXXThisExpr 0x9e96dc0 <col:9> 'numpunct<_CharT> *' this))))


        numpunct<_CharT>(__c_locale __cloc, size_t __refs = (ImplicitCastExpr 0x9e96b30 </usr/include/c++/4.6/bits/locale_facets.h:1693:51> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9e96b18 <col:51> 'int' 0))
) : std::locale::facet((DeclRefExpr 0x9e96e24 </usr/include/c++/4.6/bits/locale_facets.h:1694:15> 'size_t':'unsigned int' lvalue ParmVar 0x9e962d0 '__refs' 'size_t':'unsigned int')
), _M_data((IntegerLiteral 0x9e96eb8 </usr/include/c++/4.6/bits/locale_facets.h:1694:32> 'int' 0)
) (CompoundStmt 0x9e96f78 </usr/include/c++/4.6/bits/locale_facets.h:1695:7, col:41>
  (CallExpr 0x9e96f58 <col:9, col:38> '<dependent type>'
    (MemberExpr 0x9e96f20 <col:9> '<bound member function type>' ->_M_initialize_numpunct 0x9e96a60
      (CXXThisExpr 0x9e96f10 <col:9> 'numpunct<_CharT> *' this))
    (DeclRefExpr 0x9e96f40 <col:32> '__c_locale':'struct __locale_struct *' lvalue ParmVar 0x9e96290 '__cloc' '__c_locale':'struct __locale_struct *')))


        char_type decimal_point() const (CompoundStmt 0x9e97020 </usr/include/c++/4.6/bits/locale_facets.h:1708:7, col:42>
  (ReturnStmt 0x9e97010 <col:9, col:39>
    (CallExpr 0x9e96ff0 <col:16, col:39> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e96fb8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9e96fa8 <col:16> 'const numpunct<_CharT> *' this)))))


        char_type thousands_sep() const (CompoundStmt 0x9e970b0 </usr/include/c++/4.6/bits/locale_facets.h:1721:7, col:42>
  (ReturnStmt 0x9e970a0 <col:9, col:39>
    (CallExpr 0x9e97080 <col:16, col:39> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e97048 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9e97038 <col:16> 'const numpunct<_CharT> *' this)))))


        string grouping() const (CompoundStmt 0x9e97140 </usr/include/c++/4.6/bits/locale_facets.h:1752:7, col:37>
  (ReturnStmt 0x9e97130 <col:9, col:34>
    (CallExpr 0x9e97110 <col:16, col:34> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e970d8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9e970c8 <col:16> 'const numpunct<_CharT> *' this)))))


        string_type truename() const (CompoundStmt 0x9e971d0 </usr/include/c++/4.6/bits/locale_facets.h:1765:7, col:37>
  (ReturnStmt 0x9e971c0 <col:9, col:34>
    (CallExpr 0x9e971a0 <col:16, col:34> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e97168 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9e97158 <col:16> 'const numpunct<_CharT> *' this)))))


        string_type falsename() const (CompoundStmt 0x9e97260 </usr/include/c++/4.6/bits/locale_facets.h:1778:7, col:38>
  (ReturnStmt 0x9e97250 <col:9, col:35>
    (CallExpr 0x9e97230 <col:16, col:35> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e971f8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9e971e8 <col:16> 'const numpunct<_CharT> *' this)))))


    protected:
    protected:
        virtual void ~numpunct<_CharT>();
        virtual char_type do_decimal_point() const (CompoundStmt 0x9e972f0 </usr/include/c++/4.6/bits/locale_facets.h:1795:7, col:43>
  (ReturnStmt 0x9e972e0 <col:9, col:25>
    (CXXDependentScopeMemberExpr 0x9e972a8 <col:16, col:25> '<dependent type>' lvalue
      (MemberExpr 0x9e97288 <col:16> '__cache_type *const' lvalue ->_M_data 0x9e95f60
        (CXXThisExpr 0x9e97278 <col:16> 'const numpunct<_CharT> *' this)))))


        virtual char_type do_thousands_sep() const (CompoundStmt 0x9e97380 </usr/include/c++/4.6/bits/locale_facets.h:1807:7, col:43>
  (ReturnStmt 0x9e97370 <col:9, col:25>
    (CXXDependentScopeMemberExpr 0x9e97338 <col:16, col:25> '<dependent type>' lvalue
      (MemberExpr 0x9e97318 <col:16> '__cache_type *const' lvalue ->_M_data 0x9e95f60
        (CXXThisExpr 0x9e97308 <col:16> 'const numpunct<_CharT> *' this)))))


        virtual string do_grouping() const (CompoundStmt 0x9e97410 </usr/include/c++/4.6/bits/locale_facets.h:1820:7, col:38>
  (ReturnStmt 0x9e97400 <col:9, col:25>
    (CXXDependentScopeMemberExpr 0x9e973c8 <col:16, col:25> '<dependent type>' lvalue
      (MemberExpr 0x9e973a8 <col:16> '__cache_type *const' lvalue ->_M_data 0x9e95f60
        (CXXThisExpr 0x9e97398 <col:16> 'const numpunct<_CharT> *' this)))))


        virtual string_type do_truename() const (CompoundStmt 0x9e974a0 </usr/include/c++/4.6/bits/locale_facets.h:1833:7, col:38>
  (ReturnStmt 0x9e97490 <col:9, col:25>
    (CXXDependentScopeMemberExpr 0x9e97458 <col:16, col:25> '<dependent type>' lvalue
      (MemberExpr 0x9e97438 <col:16> '__cache_type *const' lvalue ->_M_data 0x9e95f60
        (CXXThisExpr 0x9e97428 <col:16> 'const numpunct<_CharT> *' this)))))


        virtual string_type do_falsename() const (CompoundStmt 0x9e97530 </usr/include/c++/4.6/bits/locale_facets.h:1846:7, col:39>
  (ReturnStmt 0x9e97520 <col:9, col:25>
    (CXXDependentScopeMemberExpr 0x9e974e8 <col:16, col:25> '<dependent type>' lvalue
      (MemberExpr 0x9e974c8 <col:16> '__cache_type *const' lvalue ->_M_data 0x9e95f60
        (CXXThisExpr 0x9e974b8 <col:16> 'const numpunct<_CharT> *' this)))))


        void _M_initialize_numpunct(__c_locale __cloc = (ImplicitCastExpr 0x9e96b58 </usr/include/c++/4.6/bits/locale_facets.h:1850:50> '__c_locale':'struct __locale_struct *' <NullToPointer>
  (IntegerLiteral 0x9e96b40 <col:50> 'int' 0))
);
    };
    static locale::id id(CXXConstructExpr 0x9e97788 </usr/include/c++/4.6/bits/locale_facets.h:1854:34> 'class locale::id':'class std::locale::id''void (void)')
;
    void ~numpunct();
    void _M_initialize_numpunct(__c_locale __cloc);
    void ~numpunct();
    void _M_initialize_numpunct(__c_locale __cloc);
    template <typename _CharT = char> class numpunct_byname : public numpunct<char> {
        class numpunct_byname;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
        numpunct_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~numpunct_byname();
        inline std::numpunct_byname<char> &operator=(const std::numpunct_byname<char> &);
    }
template <typename _CharT = wchar_t> class numpunct_byname : public numpunct<wchar_t> {
        class numpunct_byname;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
        numpunct_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~numpunct_byname();
        inline std::numpunct_byname<wchar_t> &operator=(const std::numpunct_byname<wchar_t> &);
    }
template <typename _CharT> class numpunct_byname : public numpunct<_CharT> {
        class numpunct_byname;
    public:
    public:
        typedef _CharT char_type;
        typedef basic_string<_CharT> string_type;
        numpunct_byname<_CharT>(const char *__s, size_t __refs = (ImplicitCastExpr 0x9e9d530 </usr/include/c++/4.6/bits/locale_facets.h:1881:56> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9e9d518 <col:56> 'int' 0))
) : numpunct<_CharT>((DeclRefExpr 0x9e9d5d0 </usr/include/c++/4.6/bits/locale_facets.h:1882:26> 'size_t':'unsigned int' lvalue ParmVar 0x9e9d360 '__refs' 'size_t':'unsigned int')
) (CompoundStmt 0x9e9df68 </usr/include/c++/4.6/bits/locale_facets.h:1883:7, line:1892:7>
  (IfStmt 0x9e9df48 <line:1884:2, line:1891:4>
    <<<NULL>>>
    (BinaryOperator 0x9e9d7e8 <line:1884:6, line:1885:43> '_Bool' '&&'
      (BinaryOperator 0x9e9d6f0 <line:1884:6, col:36> '_Bool' '!='
        (CallExpr 0x9e9d690 <col:6, col:31> 'int'
          (ImplicitCastExpr 0x9e9d680 <col:6> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9e9d62c <col:6> 'int (const char *, const char *)' lvalue Function 0x9df34d0 '__builtin_strcmp' 'int (const char *, const char *)'))
          (ImplicitCastExpr 0x9e9d6b8 <col:23> 'const char *' <LValueToRValue>
            (DeclRefExpr 0x9e9d644 <col:23> 'const char *' lvalue ParmVar 0x9e9d320 '__s' 'const char *'))
          (ImplicitCastExpr 0x9e9d6c8 <col:28> 'const char *' <ArrayToPointerDecay>
            (StringLiteral 0x9e9d65c <col:28> 'const char [2]' lvalue "C")))
        (IntegerLiteral 0x9e9d6d8 <col:36> 'int' 0))
      (BinaryOperator 0x9e9d7d0 <line:1885:9, col:43> '_Bool' '!='
        (CallExpr 0x9e9d770 <col:9, col:38> 'int'
          (ImplicitCastExpr 0x9e9d760 <col:9> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9e9d708 <col:9> 'int (const char *, const char *)' lvalue Function 0x9df34d0 '__builtin_strcmp' 'int (const char *, const char *)'))
          (ImplicitCastExpr 0x9e9d798 <col:26> 'const char *' <LValueToRValue>
            (DeclRefExpr 0x9e9d720 <col:26> 'const char *' lvalue ParmVar 0x9e9d320 '__s' 'const char *'))
          (ImplicitCastExpr 0x9e9d7a8 <col:31> 'const char *' <ArrayToPointerDecay>
            (StringLiteral 0x9e9d738 <col:31> 'const char [6]' lvalue "POSIX")))
        (IntegerLiteral 0x9e9d7b8 <col:43> 'int' 0)))
    (CompoundStmt 0x9e9da18 <line:1886:4, line:1891:4>
      (DeclStmt 0x9e9d848 <line:1887:6, col:22>
        0x9e9d810 "__c_locale __tmp")
      (CallExpr 0x9e9d8f0 <line:1888:6, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e9d888 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0x9e9d878 <col:6> 'numpunct_byname<_CharT> *' this))
        (DeclRefExpr 0x9e9d8bc <col:31> '__c_locale':'struct __locale_struct *' lvalue Var 0x9e9d810 '__tmp' '__c_locale':'struct __locale_struct *')
        (DeclRefExpr 0x9e9d8d4 <col:38> 'const char *' lvalue ParmVar 0x9e9d320 '__s' 'const char *'))
      (CallExpr 0x9e9d978 <line:1889:6, col:40> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e9d928 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0x9e9d918 <col:6> 'numpunct_byname<_CharT> *' this))
        (DeclRefExpr 0x9e9d95c <col:35> '__c_locale':'struct __locale_struct *' lvalue Var 0x9e9d810 '__tmp' '__c_locale':'struct __locale_struct *'))
      (CallExpr 0x9e9d9f8 <line:1890:6, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e9d9a8 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0x9e9d998 <col:6> 'numpunct_byname<_CharT> *' this))
        (DeclRefExpr 0x9e9d9dc <col:32> '__c_locale':'struct __locale_struct *' lvalue Var 0x9e9d810 '__tmp' '__c_locale':'struct __locale_struct *')))
    <<<NULL>>>))


    protected:
    protected:
        virtual void ~numpunct_byname<_CharT>() (CompoundStmt 0x9e9df80 </usr/include/c++/4.6/bits/locale_facets.h:1896:26, col:28>)


    };
    template <typename _CharT = char, typename _InIter = std::istreambuf_iterator<char, std::char_traits<char> >> class num_get : public locale::facet {
        class num_get;
    public:
    public:
        typedef char char_type;
        typedef std::istreambuf_iterator<char, std::char_traits<char> > iter_type;
        static locale::id id;
        num_get(size_t __refs);
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, bool &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, float &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, void *&__v) const;
    protected:
    protected:
        virtual void ~num_get();
        iter_type _M_extract_float(iter_type, iter_type, std::ios_base &, ios_base::iostate &, string &) const;
        template <typename _ValueT> iter_type _M_extract_int(iter_type, iter_type, std::ios_base &, ios_base::iostate &, _ValueT &) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *, size_t __len, _CharT2 __c) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<!__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *__zero, size_t __len, _CharT2 __c) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &, bool &) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, float &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, long double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, void *&) const;
        inline std::num_get<char> &operator=(const std::num_get<char> &);
    }
template <typename _CharT = wchar_t, typename _InIter = std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >> class num_get : public locale::facet {
        class num_get;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > iter_type;
        static locale::id id;
        num_get(size_t __refs);
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, bool &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, float &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, void *&__v) const;
    protected:
    protected:
        virtual void ~num_get();
        iter_type _M_extract_float(iter_type, iter_type, std::ios_base &, ios_base::iostate &, string &) const;
        template <typename _ValueT> iter_type _M_extract_int(iter_type, iter_type, std::ios_base &, ios_base::iostate &, _ValueT &) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *, size_t __len, _CharT2 __c) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<!__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *__zero, size_t __len, _CharT2 __c) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &, bool &) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, float &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, long double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, void *&) const;
        inline std::num_get<wchar_t> &operator=(const std::num_get<wchar_t> &);
    }
template <typename _CharT, typename _InIter = istreambuf_iterator<_CharT>> class num_get : public locale::facet {
        class num_get;
    public:
    public:
        typedef _CharT char_type;
        typedef _InIter iter_type;
        static locale::id id;
        num_get<_CharT, _InIter>(size_t __refs = (ImplicitCastExpr 0x9ea4dd0 </usr/include/c++/4.6/bits/locale_facets.h:1936:31> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9ea4db8 <col:31> 'int' 0))
) : std::locale::facet((DeclRefExpr 0x9ea4ddc </usr/include/c++/4.6/bits/locale_facets.h:1936:42> 'size_t':'unsigned int' lvalue ParmVar 0x9e9e310 '__refs' 'size_t':'unsigned int')
) (CompoundStmt 0x9ea4e80 </usr/include/c++/4.6/bits/locale_facets.h:1936:50, col:52>)


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, bool &__v) const (CompoundStmt 0x9ea4fa8 </usr/include/c++/4.6/bits/locale_facets.h:1964:7, col:61>
  (ReturnStmt 0x9ea4f98 <col:9, col:58>
    (CallExpr 0x9ea4f68 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9ea4eb8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9ea4ea8 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0x9ea4eec <col:29> 'iter_type':'_InIter' lvalue ParmVar 0x9e9e410 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0x9ea4f04 <col:35> 'iter_type':'_InIter' lvalue ParmVar 0x9e9e450 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x9ea4f1c <col:42> 'class std::ios_base' lvalue ParmVar 0x9e9e4a0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9ea4f34 <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9e9e510 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x9ea4f4c <col:55> '_Bool' lvalue ParmVar 0x9e9e560 '__v' '_Bool &'))))


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const (CompoundStmt 0x9ea50c0 </usr/include/c++/4.6/bits/locale_facets.h:2000:7, col:61>
  (ReturnStmt 0x9ea50b0 <col:9, col:58>
    (CallExpr 0x9ea5080 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9ea4fd0 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9ea4fc0 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0x9ea5004 <col:29> 'iter_type':'_InIter' lvalue ParmVar 0x9e9e6b0 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0x9ea501c <col:35> 'iter_type':'_InIter' lvalue ParmVar 0x9e9e6f0 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x9ea5034 <col:42> 'class std::ios_base' lvalue ParmVar 0x9e9e740 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9ea504c <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9e9e7b0 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x9ea5064 <col:55> 'long' lvalue ParmVar 0x9e9e800 '__v' 'long &'))))


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const (CompoundStmt 0x9ea51d8 </usr/include/c++/4.6/bits/locale_facets.h:2005:7, col:61>
  (ReturnStmt 0x9ea51c8 <col:9, col:58>
    (CallExpr 0x9ea5198 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9ea50e8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9ea50d8 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0x9ea511c <col:29> 'iter_type':'_InIter' lvalue ParmVar 0x9e9e950 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0x9ea5134 <col:35> 'iter_type':'_InIter' lvalue ParmVar 0x9e9e990 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x9ea514c <col:42> 'class std::ios_base' lvalue ParmVar 0x9e9e9e0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9ea5164 <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9e9ea50 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x9ea517c <col:55> 'unsigned short' lvalue ParmVar 0x9e9eaa0 '__v' 'unsigned short &'))))


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const (CompoundStmt 0x9ea52f0 </usr/include/c++/4.6/bits/locale_facets.h:2010:7, col:61>
  (ReturnStmt 0x9ea52e0 <col:9, col:58>
    (CallExpr 0x9ea52b0 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9ea5200 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9ea51f0 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0x9ea5234 <col:29> 'iter_type':'_InIter' lvalue ParmVar 0x9e9ebf0 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0x9ea524c <col:35> 'iter_type':'_InIter' lvalue ParmVar 0x9e9ec30 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x9ea5264 <col:42> 'class std::ios_base' lvalue ParmVar 0x9e9ec80 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9ea527c <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9e9ecf0 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x9ea5294 <col:55> 'unsigned int' lvalue ParmVar 0x9e9ed40 '__v' 'unsigned int &'))))


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const (CompoundStmt 0x9ea5408 </usr/include/c++/4.6/bits/locale_facets.h:2015:7, col:61>
  (ReturnStmt 0x9ea53f8 <col:9, col:58>
    (CallExpr 0x9ea53c8 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9ea5318 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9ea5308 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0x9ea534c <col:29> 'iter_type':'_InIter' lvalue ParmVar 0x9e9ee90 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0x9ea5364 <col:35> 'iter_type':'_InIter' lvalue ParmVar 0x9e9eed0 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x9ea537c <col:42> 'class std::ios_base' lvalue ParmVar 0x9e9ef20 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9ea5394 <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9e9ef90 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x9ea53ac <col:55> 'unsigned long' lvalue ParmVar 0x9e9efe0 '__v' 'unsigned long &'))))


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const (CompoundStmt 0x9ea5520 </usr/include/c++/4.6/bits/locale_facets.h:2021:7, col:61>
  (ReturnStmt 0x9ea5510 <col:9, col:58>
    (CallExpr 0x9ea54e0 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9ea5430 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9ea5420 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0x9ea5464 <col:29> 'iter_type':'_InIter' lvalue ParmVar 0x9e9f130 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0x9ea547c <col:35> 'iter_type':'_InIter' lvalue ParmVar 0x9e9f170 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x9ea5494 <col:42> 'class std::ios_base' lvalue ParmVar 0x9e9f1c0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9ea54ac <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9e9f230 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x9ea54c4 <col:55> 'long long' lvalue ParmVar 0x9e9f280 '__v' 'long long &'))))


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const (CompoundStmt 0x9ea5638 </usr/include/c++/4.6/bits/locale_facets.h:2026:7, col:61>
  (ReturnStmt 0x9ea5628 <col:9, col:58>
    (CallExpr 0x9ea55f8 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9ea5548 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9ea5538 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0x9ea557c <col:29> 'iter_type':'_InIter' lvalue ParmVar 0x9e9f3d0 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0x9ea5594 <col:35> 'iter_type':'_InIter' lvalue ParmVar 0x9e9f410 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x9ea55ac <col:42> 'class std::ios_base' lvalue ParmVar 0x9e9f460 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9ea55c4 <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9e9f4d0 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x9ea55dc <col:55> 'unsigned long long' lvalue ParmVar 0x9e9f520 '__v' 'unsigned long long &'))))


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, float &__v) const (CompoundStmt 0x9ea5750 </usr/include/c++/4.6/bits/locale_facets.h:2059:7, col:61>
  (ReturnStmt 0x9ea5740 <col:9, col:58>
    (CallExpr 0x9ea5710 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9ea5660 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9ea5650 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0x9ea5694 <col:29> 'iter_type':'_InIter' lvalue ParmVar 0x9e9f670 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0x9ea56ac <col:35> 'iter_type':'_InIter' lvalue ParmVar 0x9e9f6b0 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x9ea56c4 <col:42> 'class std::ios_base' lvalue ParmVar 0x9e9f700 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9ea56dc <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9e9f770 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x9ea56f4 <col:55> 'float' lvalue ParmVar 0x9e9f7c0 '__v' 'float &'))))


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, double &__v) const (CompoundStmt 0x9ea5868 </usr/include/c++/4.6/bits/locale_facets.h:2064:7, col:61>
  (ReturnStmt 0x9ea5858 <col:9, col:58>
    (CallExpr 0x9ea5828 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9ea5778 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9ea5768 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0x9ea57ac <col:29> 'iter_type':'_InIter' lvalue ParmVar 0x9e9f910 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0x9ea57c4 <col:35> 'iter_type':'_InIter' lvalue ParmVar 0x9e9f950 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x9ea57dc <col:42> 'class std::ios_base' lvalue ParmVar 0x9e9f9a0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9ea57f4 <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9e9fa10 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x9ea580c <col:55> 'double' lvalue ParmVar 0x9e9fa60 '__v' 'double &'))))


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long double &__v) const (CompoundStmt 0x9ea5980 </usr/include/c++/4.6/bits/locale_facets.h:2069:7, col:61>
  (ReturnStmt 0x9ea5970 <col:9, col:58>
    (CallExpr 0x9ea5940 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9ea5890 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9ea5880 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0x9ea58c4 <col:29> 'iter_type':'_InIter' lvalue ParmVar 0x9e9fbb0 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0x9ea58dc <col:35> 'iter_type':'_InIter' lvalue ParmVar 0x9e9fbf0 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x9ea58f4 <col:42> 'class std::ios_base' lvalue ParmVar 0x9e9fc40 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9ea590c <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9e9fcb0 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x9ea5924 <col:55> 'long double' lvalue ParmVar 0x9e9fd00 '__v' 'long double &'))))


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, void *&__v) const (CompoundStmt 0x9ea5a98 </usr/include/c++/4.6/bits/locale_facets.h:2101:7, col:61>
  (ReturnStmt 0x9ea5a88 <col:9, col:58>
    (CallExpr 0x9ea5a58 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9ea59a8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9ea5998 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0x9ea59dc <col:29> 'iter_type':'_InIter' lvalue ParmVar 0x9e9fe50 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0x9ea59f4 <col:35> 'iter_type':'_InIter' lvalue ParmVar 0x9e9fe90 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x9ea5a0c <col:42> 'class std::ios_base' lvalue ParmVar 0x9e9fee0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9ea5a24 <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9e9ff50 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x9ea5a3c <col:55> 'void *' lvalue ParmVar 0x9e9ffa0 '__v' 'void *&'))))


    protected:
    protected:
        virtual void ~num_get<_CharT, _InIter>() (CompoundStmt 0x9ea5ab0 </usr/include/c++/4.6/bits/locale_facets.h:2105:26, col:28>)


        iter_type _M_extract_float(iter_type, iter_type, std::ios_base &, ios_base::iostate &, string &) const;
        template <typename _ValueT> iter_type _M_extract_int(iter_type, iter_type, std::ios_base &, ios_base::iostate &, _ValueT &) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *, size_t __len, _CharT2 __c) const (CompoundStmt 0x9ea68d8 </usr/include/c++/4.6/bits/locale_facets.h:2119:9, line:2136:2>
  (DeclStmt 0x9ea5b38 <line:2120:4, col:18>
    0x9ea5ad0 "int __ret =
      (UnaryOperator 0x9ea5b20 <col:16, col:17> 'int' prefix '-'
        (IntegerLiteral 0x9ea5b08 <col:17> 'int' 1))")
  (IfStmt 0x9ea6890 <line:2121:4, line:2134:6>
    <<<NULL>>>
    (BinaryOperator 0x9ea5b98 <line:2121:8, col:17> '_Bool' '<='
      (ImplicitCastExpr 0x9ea5b78 <col:8> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9ea5b48 <col:8> 'size_t':'unsigned int' lvalue ParmVar 0x9ea0b20 '__len' 'size_t':'unsigned int'))
      (ImplicitCastExpr 0x9ea5b88 <col:17> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0x9ea5b60 <col:17> 'int' 10)))
    (CompoundStmt 0x9ea5f10 <line:2122:6, line:2125:6>
      (IfStmt 0x9ea5ef0 <line:2123:8, line:2124:28>
        <<<NULL>>>
        (BinaryOperator 0x9ea5df0 <line:2123:12, col:69> '<dependent type>' '&&'
          (CXXOperatorCallExpr 0x9ea5c50 <col:12, col:30> '<dependent type>'
            (UnresolvedLookupExpr 0x9ea5c08 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bae1e0 0x9bc3fc0 0x9bc7850 0x9d64480 0x9d649b0 0x9d64ee0)
            (DeclRefExpr 0x9ea5bb0 <col:12> '_CharT2' lvalue ParmVar 0x9ea0b60 '__c' '_CharT2')
            (CXXUnresolvedConstructExpr 0x9ea5be8 <col:19, col:30> '_CharT2'
              (CharacterLiteral 0x9ea5bd0 <col:27> 'char'48)))
          (CXXOperatorCallExpr 0x9ea5dc8 <col:35, col:69> '<dependent type>'
            (UnresolvedLookupExpr 0x9ea5d80 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bac3c0 0x9bc2c90 0x9bc5590 0x9d61190 0x9d616c0 0x9d61bf0)
            (DeclRefExpr 0x9ea5c74 <col:35> '_CharT2' lvalue ParmVar 0x9ea0b60 '__c' '_CharT2')
            (CXXUnresolvedConstructExpr 0x9ea5d60 <col:41, col:69> '_CharT2'
              (CXXOperatorCallExpr 0x9ea5d38 <col:49, col:64> '<dependent type>'
                (UnresolvedLookupExpr 0x9ea5cf0 <col:62, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d86680 0x9d87280 0x9d5d090 0x9d5d890)
                (CXXUnresolvedConstructExpr 0x9ea5cb8 <col:49, col:60> '_CharT2'
                  (CharacterLiteral 0x9ea5ca0 <col:57> 'char'48))
                (DeclRefExpr 0x9ea5cd4 <col:64> 'size_t':'unsigned int' lvalue ParmVar 0x9ea0b20 '__len' 'size_t':'unsigned int')))))
        (BinaryOperator 0x9ea5ed8 <line:2124:3, col:28> '<dependent type>' '='
          (DeclRefExpr 0x9ea5e08 <col:3> 'int' lvalue Var 0x9ea5ad0 '__ret' 'int')
          (CXXOperatorCallExpr 0x9ea5eb0 <col:11, col:28> '<dependent type>'
            (UnresolvedLookupExpr 0x9ea5e78 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
            (DeclRefExpr 0x9ea5e20 <col:11> '_CharT2' lvalue ParmVar 0x9ea0b60 '__c' '_CharT2')
            (CXXUnresolvedConstructExpr 0x9ea5e58 <col:17, col:28> '_CharT2'
              (CharacterLiteral 0x9ea5e40 <col:25> 'char'48))))
        <<<NULL>>>))
    (CompoundStmt 0x9ea6878 <line:2127:6, line:2134:6>
      (IfStmt 0x9ea6858 <line:2128:8, line:2133:35>
        <<<NULL>>>
        (BinaryOperator 0x9ea60b8 <line:2128:12, col:53> '<dependent type>' '&&'
          (CXXOperatorCallExpr 0x9ea5fc8 <col:12, col:30> '<dependent type>'
            (UnresolvedLookupExpr 0x9ea5f80 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bae1e0 0x9bc3fc0 0x9bc7850 0x9d64480 0x9d649b0 0x9d64ee0)
            (DeclRefExpr 0x9ea5f24 <col:12> '_CharT2' lvalue ParmVar 0x9ea0b60 '__c' '_CharT2')
            (CXXUnresolvedConstructExpr 0x9ea5f60 <col:19, col:30> '_CharT2'
              (CharacterLiteral 0x9ea5f48 <col:27> 'char'48)))
          (CXXOperatorCallExpr 0x9ea6090 <col:35, col:53> '<dependent type>'
            (UnresolvedLookupExpr 0x9ea6048 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9badc90 0x9bc3ba0 0x9bc6b90 0x9d63390 0x9d638c0 0x9d63df0)
            (DeclRefExpr 0x9ea5fec <col:35> '_CharT2' lvalue ParmVar 0x9ea0b60 '__c' '_CharT2')
            (CXXUnresolvedConstructExpr 0x9ea6028 <col:42, col:53> '_CharT2'
              (CharacterLiteral 0x9ea6010 <col:50> 'char'57))))
        (BinaryOperator 0x9ea61a0 <line:2129:3, col:28> '<dependent type>' '='
          (DeclRefExpr 0x9ea60d0 <col:3> 'int' lvalue Var 0x9ea5ad0 '__ret' 'int')
          (CXXOperatorCallExpr 0x9ea6178 <col:11, col:28> '<dependent type>'
            (UnresolvedLookupExpr 0x9ea6140 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
            (DeclRefExpr 0x9ea60e8 <col:11> '_CharT2' lvalue ParmVar 0x9ea0b60 '__c' '_CharT2')
            (CXXUnresolvedConstructExpr 0x9ea6120 <col:17, col:28> '_CharT2'
              (CharacterLiteral 0x9ea6108 <col:25> 'char'48))))
        (IfStmt 0x9ea6838 <line:2130:13, line:2133:35>
          <<<NULL>>>
          (BinaryOperator 0x9ea6348 <line:2130:17, col:58> '<dependent type>' '&&'
            (CXXOperatorCallExpr 0x9ea6258 <col:17, col:35> '<dependent type>'
              (UnresolvedLookupExpr 0x9ea6210 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bae1e0 0x9bc3fc0 0x9bc7850 0x9d64480 0x9d649b0 0x9d64ee0)
              (DeclRefExpr 0x9ea61b8 <col:17> '_CharT2' lvalue ParmVar 0x9ea0b60 '__c' '_CharT2')
              (CXXUnresolvedConstructExpr 0x9ea61f0 <col:24, col:35> '_CharT2'
                (CharacterLiteral 0x9ea61d8 <col:32> 'char'97)))
            (CXXOperatorCallExpr 0x9ea6320 <col:40, col:58> '<dependent type>'
              (UnresolvedLookupExpr 0x9ea62d8 <col:44, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9badc90 0x9bc3ba0 0x9bc6b90 0x9d63390 0x9d638c0 0x9d63df0)
              (DeclRefExpr 0x9ea627c <col:40> '_CharT2' lvalue ParmVar 0x9ea0b60 '__c' '_CharT2')
              (CXXUnresolvedConstructExpr 0x9ea62b8 <col:47, col:58> '_CharT2'
                (CharacterLiteral 0x9ea62a0 <col:55> 'char'102))))
          (BinaryOperator 0x9ea64d0 <line:2131:3, col:35> '<dependent type>' '='
            (DeclRefExpr 0x9ea6360 <col:3> 'int' lvalue Var 0x9ea5ad0 '__ret' 'int')
            (CXXOperatorCallExpr 0x9ea64a8 <col:11, col:35> '<dependent type>'
              (UnresolvedLookupExpr 0x9ea6460 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d86680 0x9d87280 0x9d5d090 0x9d5d890)
              (IntegerLiteral 0x9ea6378 <col:11> 'int' 10)
              (ParenExpr 0x9ea6448 <col:16, col:35> '<dependent type>'
                (CXXOperatorCallExpr 0x9ea6420 <col:17, col:34> '<dependent type>'
                  (UnresolvedLookupExpr 0x9ea63e8 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
                  (DeclRefExpr 0x9ea6390 <col:17> '_CharT2' lvalue ParmVar 0x9ea0b60 '__c' '_CharT2')
                  (CXXUnresolvedConstructExpr 0x9ea63c8 <col:23, col:34> '_CharT2'
                    (CharacterLiteral 0x9ea63b0 <col:31> 'char'97))))))
          (IfStmt 0x9ea6818 <line:2132:13, line:2133:35>
            <<<NULL>>>
            (BinaryOperator 0x9ea6678 <line:2132:17, col:58> '<dependent type>' '&&'
              (CXXOperatorCallExpr 0x9ea6588 <col:17, col:35> '<dependent type>'
                (UnresolvedLookupExpr 0x9ea6540 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bae1e0 0x9bc3fc0 0x9bc7850 0x9d64480 0x9d649b0 0x9d64ee0)
                (DeclRefExpr 0x9ea64e8 <col:17> '_CharT2' lvalue ParmVar 0x9ea0b60 '__c' '_CharT2')
                (CXXUnresolvedConstructExpr 0x9ea6520 <col:24, col:35> '_CharT2'
                  (CharacterLiteral 0x9ea6508 <col:32> 'char'65)))
              (CXXOperatorCallExpr 0x9ea6650 <col:40, col:58> '<dependent type>'
                (UnresolvedLookupExpr 0x9ea6608 <col:44, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9badc90 0x9bc3ba0 0x9bc6b90 0x9d63390 0x9d638c0 0x9d63df0)
                (DeclRefExpr 0x9ea65ac <col:40> '_CharT2' lvalue ParmVar 0x9ea0b60 '__c' '_CharT2')
                (CXXUnresolvedConstructExpr 0x9ea65e8 <col:47, col:58> '_CharT2'
                  (CharacterLiteral 0x9ea65d0 <col:55> 'char'70))))
            (BinaryOperator 0x9ea6800 <line:2133:3, col:35> '<dependent type>' '='
              (DeclRefExpr 0x9ea6690 <col:3> 'int' lvalue Var 0x9ea5ad0 '__ret' 'int')
              (CXXOperatorCallExpr 0x9ea67d8 <col:11, col:35> '<dependent type>'
                (UnresolvedLookupExpr 0x9ea6790 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d86680 0x9d87280 0x9d5d090 0x9d5d890)
                (IntegerLiteral 0x9ea66a8 <col:11> 'int' 10)
                (ParenExpr 0x9ea6778 <col:16, col:35> '<dependent type>'
                  (CXXOperatorCallExpr 0x9ea6750 <col:17, col:34> '<dependent type>'
                    (UnresolvedLookupExpr 0x9ea6718 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
                    (DeclRefExpr 0x9ea66c0 <col:17> '_CharT2' lvalue ParmVar 0x9ea0b60 '__c' '_CharT2')
                    (CXXUnresolvedConstructExpr 0x9ea66f8 <col:23, col:34> '_CharT2'
                      (CharacterLiteral 0x9ea66e0 <col:31> 'char'65))))))
            <<<NULL>>>)))))
  (ReturnStmt 0x9ea68c8 <line:2135:4, col:11>
    (DeclRefExpr 0x9ea68ac <col:11> 'int' lvalue Var 0x9ea5ad0 '__ret' 'int')))

;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<!__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *__zero, size_t __len, _CharT2 __c) const (CompoundStmt 0x9ea6d68 </usr/include/c++/4.6/bits/locale_facets.h:2142:9, line:2152:2>
  (DeclStmt 0x9ea6978 <line:2143:4, col:18>
    0x9ea6910 "int __ret =
      (UnaryOperator 0x9ea6960 <col:16, col:17> 'int' prefix '-'
        (IntegerLiteral 0x9ea6948 <col:17> 'int' 1))")
  (DeclStmt 0x9ea6b58 <line:2144:4, col:73>
    0x9ea69d0 "const char_type *__q =
      (CallExpr 0x9ea6b30 <col:27, col:72> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ea6ab0 <col:27, col:49> '<dependent type>' lvalue)
        (DeclRefExpr 0x9ea6ae4 <col:54> 'const _CharT2 *' lvalue ParmVar 0x9ea0fe0 '__zero' 'const _CharT2 *')
        (DeclRefExpr 0x9ea6afc <col:62> 'size_t':'unsigned int' lvalue ParmVar 0x9ea1020 '__len' 'size_t':'unsigned int')
        (DeclRefExpr 0x9ea6b14 <col:69> '_CharT2' lvalue ParmVar 0x9ea1060 '__c' '_CharT2'))")
  (IfStmt 0x9ea6d20 <line:2145:4, line:2150:6>
    <<<NULL>>>
    (DeclRefExpr 0x9ea6b68 <line:2145:8> 'const char_type *' lvalue Var 0x9ea69d0 '__q' 'const char_type *')
    (CompoundStmt 0x9ea6d08 <line:2146:6, line:2150:6>
      (BinaryOperator 0x9ea6c28 <line:2147:8, col:22> '<dependent type>' '='
        (DeclRefExpr 0x9ea6b80 <col:8> 'int' lvalue Var 0x9ea6910 '__ret' 'int')
        (CXXOperatorCallExpr 0x9ea6c00 <col:16, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0x9ea6bc8 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
          (DeclRefExpr 0x9ea6b98 <col:16> 'const char_type *' lvalue Var 0x9ea69d0 '__q' 'const char_type *')
          (DeclRefExpr 0x9ea6bb0 <col:22> 'const _CharT2 *' lvalue ParmVar 0x9ea0fe0 '__zero' 'const _CharT2 *')))
      (IfStmt 0x9ea6ce8 <line:2148:8, line:2149:12>
        <<<NULL>>>
        (BinaryOperator 0x9ea6c80 <line:2148:12, col:20> '_Bool' '>'
          (ImplicitCastExpr 0x9ea6c70 <col:12> 'int' <LValueToRValue>
            (DeclRefExpr 0x9ea6c40 <col:12> 'int' lvalue Var 0x9ea6910 '__ret' 'int'))
          (IntegerLiteral 0x9ea6c58 <col:20> 'int' 15))
        (CompoundAssignOperator 0x9ea6cc8 <line:2149:3, col:12> 'int' lvalue '-=' ComputeLHSTy='int' ComputeResultTy='int'
          (DeclRefExpr 0x9ea6c98 <col:3> 'int' lvalue Var 0x9ea6910 '__ret' 'int')
          (IntegerLiteral 0x9ea6cb0 <col:12> 'int' 6))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9ea6d58 <line:2151:4, col:11>
    (DeclRefExpr 0x9ea6d3c <col:11> 'int' lvalue Var 0x9ea6910 '__ret' 'int')))

;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &, bool &) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const (CompoundStmt 0x9ea6e90 </usr/include/c++/4.6/bits/locale_facets.h:2175:7, col:64>
  (ReturnStmt 0x9ea6e80 <col:9, col:61>
    (CallExpr 0x9ea6e50 <col:16, col:61> '<dependent type>'
      (UnresolvedMemberExpr 0x9ea6d98 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9ea6dd4 <col:31> 'iter_type':'_InIter' lvalue ParmVar 0x9ea1400 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0x9ea6dec <col:38> 'iter_type':'_InIter' lvalue ParmVar 0x9ea1440 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x9ea6e04 <col:45> 'class std::ios_base' lvalue ParmVar 0x9ea1490 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9ea6e1c <col:51> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9ea1500 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x9ea6e34 <col:58> 'long' lvalue ParmVar 0x9ea1550 '__v' 'long &'))))


        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const (CompoundStmt 0x9ea6fb0 </usr/include/c++/4.6/bits/locale_facets.h:2180:7, col:64>
  (ReturnStmt 0x9ea6fa0 <col:9, col:61>
    (CallExpr 0x9ea6f70 <col:16, col:61> '<dependent type>'
      (UnresolvedMemberExpr 0x9ea6eb8 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9ea6ef4 <col:31> 'iter_type':'_InIter' lvalue ParmVar 0x9ea1630 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0x9ea6f0c <col:38> 'iter_type':'_InIter' lvalue ParmVar 0x9ea1670 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x9ea6f24 <col:45> 'class std::ios_base' lvalue ParmVar 0x9ea16c0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9ea6f3c <col:51> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9ea1730 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x9ea6f54 <col:58> 'unsigned short' lvalue ParmVar 0x9ea1780 '__v' 'unsigned short &'))))


        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const (CompoundStmt 0x9ea70d0 </usr/include/c++/4.6/bits/locale_facets.h:2185:7, col:64>
  (ReturnStmt 0x9ea70c0 <col:9, col:61>
    (CallExpr 0x9ea7090 <col:16, col:61> '<dependent type>'
      (UnresolvedMemberExpr 0x9ea6fd8 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9ea7014 <col:31> 'iter_type':'_InIter' lvalue ParmVar 0x9ea1860 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0x9ea702c <col:38> 'iter_type':'_InIter' lvalue ParmVar 0x9ea18a0 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x9ea7044 <col:45> 'class std::ios_base' lvalue ParmVar 0x9ea18f0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9ea705c <col:51> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9ea1960 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x9ea7074 <col:58> 'unsigned int' lvalue ParmVar 0x9ea19b0 '__v' 'unsigned int &'))))


        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const (CompoundStmt 0x9ea71f0 </usr/include/c++/4.6/bits/locale_facets.h:2190:7, col:64>
  (ReturnStmt 0x9ea71e0 <col:9, col:61>
    (CallExpr 0x9ea71b0 <col:16, col:61> '<dependent type>'
      (UnresolvedMemberExpr 0x9ea70f8 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9ea7134 <col:31> 'iter_type':'_InIter' lvalue ParmVar 0x9ea1a90 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0x9ea714c <col:38> 'iter_type':'_InIter' lvalue ParmVar 0x9ea1ad0 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x9ea7164 <col:45> 'class std::ios_base' lvalue ParmVar 0x9ea1b20 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9ea717c <col:51> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9ea1b90 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x9ea7194 <col:58> 'unsigned long' lvalue ParmVar 0x9ea1be0 '__v' 'unsigned long &'))))


        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const (CompoundStmt 0x9ea7310 </usr/include/c++/4.6/bits/locale_facets.h:2196:7, col:64>
  (ReturnStmt 0x9ea7300 <col:9, col:61>
    (CallExpr 0x9ea72d0 <col:16, col:61> '<dependent type>'
      (UnresolvedMemberExpr 0x9ea7218 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9ea7254 <col:31> 'iter_type':'_InIter' lvalue ParmVar 0x9ea1cc0 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0x9ea726c <col:38> 'iter_type':'_InIter' lvalue ParmVar 0x9ea1d00 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x9ea7284 <col:45> 'class std::ios_base' lvalue ParmVar 0x9ea1d50 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9ea729c <col:51> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9ea1dc0 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x9ea72b4 <col:58> 'long long' lvalue ParmVar 0x9ea1e10 '__v' 'long long &'))))


        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const (CompoundStmt 0x9ea7430 </usr/include/c++/4.6/bits/locale_facets.h:2201:7, col:64>
  (ReturnStmt 0x9ea7420 <col:9, col:61>
    (CallExpr 0x9ea73f0 <col:16, col:61> '<dependent type>'
      (UnresolvedMemberExpr 0x9ea7338 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9ea7374 <col:31> 'iter_type':'_InIter' lvalue ParmVar 0x9ea1ef0 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0x9ea738c <col:38> 'iter_type':'_InIter' lvalue ParmVar 0x9ea4310 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x9ea73a4 <col:45> 'class std::ios_base' lvalue ParmVar 0x9ea4360 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9ea73bc <col:51> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9ea43d0 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x9ea73d4 <col:58> 'unsigned long long' lvalue ParmVar 0x9ea4420 '__v' 'unsigned long long &'))))


        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, float &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, long double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, void *&) const;
    };
    static locale::id id(CXXConstructExpr 0x9ea7778 </usr/include/c++/4.6/bits/locale_facets.h:2237:42> 'class locale::id':'class std::locale::id''void (void)')
;
    template <typename _CharT = wchar_t, typename _OutIter = std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >> class num_put : public locale::facet {
        class num_put;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > iter_type;
        static locale::id id;
        num_put(size_t __refs);
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, bool __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, const void *__v) const;
    protected:
    protected:
        template <typename _ValueT> iter_type _M_insert_float(iter_type, std::ios_base &__io, char_type __fill, char __mod, _ValueT __v) const;
        void _M_group_float(const char *__grouping, size_t __grouping_size, char_type __sep, const char_type *__p, char_type *__new, char_type *__cs, int &__len) const;
        template <typename _ValueT> iter_type _M_insert_int(iter_type, std::ios_base &__io, char_type __fill, _ValueT __v) const;
        void _M_group_int(const char *__grouping, size_t __grouping_size, char_type __sep, std::ios_base &__io, char_type *__new, char_type *__cs, int &__len) const;
        void _M_pad(char_type __fill, streamsize __w, std::ios_base &__io, char_type *__new, const char_type *__cs, int &__len) const;
        virtual void ~num_put();
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, bool __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long long __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, long double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, const void *__v) const;
        inline std::num_put<wchar_t> &operator=(const std::num_put<wchar_t> &);
    }
template <typename _CharT = char, typename _OutIter = std::ostreambuf_iterator<char, std::char_traits<char> >> class num_put : public locale::facet {
        class num_put;
    public:
    public:
        typedef char char_type;
        typedef std::ostreambuf_iterator<char, std::char_traits<char> > iter_type;
        static locale::id id;
        num_put(size_t __refs);
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, bool __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, const void *__v) const;
    protected:
    protected:
        template <typename _ValueT> iter_type _M_insert_float(iter_type, std::ios_base &__io, char_type __fill, char __mod, _ValueT __v) const;
        void _M_group_float(const char *__grouping, size_t __grouping_size, char_type __sep, const char_type *__p, char_type *__new, char_type *__cs, int &__len) const;
        template <typename _ValueT> iter_type _M_insert_int(iter_type, std::ios_base &__io, char_type __fill, _ValueT __v) const;
        void _M_group_int(const char *__grouping, size_t __grouping_size, char_type __sep, std::ios_base &__io, char_type *__new, char_type *__cs, int &__len) const;
        void _M_pad(char_type __fill, streamsize __w, std::ios_base &__io, char_type *__new, const char_type *__cs, int &__len) const;
        virtual void ~num_put();
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, bool __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long long __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, long double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, const void *__v) const;
        inline std::num_put<char> &operator=(const std::num_put<char> &);
    }
template <typename _CharT, typename _OutIter = ostreambuf_iterator<_CharT>> class num_put : public locale::facet {
        class num_put;
    public:
    public:
        typedef _CharT char_type;
        typedef _OutIter iter_type;
        static locale::id id;
        num_put<_CharT, _OutIter>(size_t __refs = (ImplicitCastExpr 0x9eab698 </usr/include/c++/4.6/bits/locale_facets.h:2274:31> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9eab680 <col:31> 'int' 0))
) : std::locale::facet((DeclRefExpr 0x9eab6a4 </usr/include/c++/4.6/bits/locale_facets.h:2274:42> 'size_t':'unsigned int' lvalue ParmVar 0x9ea7b20 '__refs' 'size_t':'unsigned int')
) (CompoundStmt 0x9eab740 </usr/include/c++/4.6/bits/locale_facets.h:2274:50, col:52>)


        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, bool __v) const (CompoundStmt 0x9eab850 </usr/include/c++/4.6/bits/locale_facets.h:2293:7, col:53>
  (ReturnStmt 0x9eab840 <col:9, col:50>
    (CallExpr 0x9eab810 <col:16, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9eab778 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9eab768 <col:16> 'const num_put<_CharT, _OutIter> *' this))
      (DeclRefExpr 0x9eab7ac <col:29> 'iter_type':'_OutIter' lvalue ParmVar 0x9ea7c20 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0x9eab7c4 <col:34> 'class std::ios_base' lvalue ParmVar 0x9ea7c70 '__f' 'class std::ios_base &')
      (DeclRefExpr 0x9eab7dc <col:39> 'char_type':'_CharT' lvalue ParmVar 0x9ea7cd0 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0x9eab7f4 <col:47> '_Bool' lvalue ParmVar 0x9ea7d10 '__v' '_Bool'))))


        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long __v) const (CompoundStmt 0x9eab950 </usr/include/c++/4.6/bits/locale_facets.h:2335:7, col:53>
  (ReturnStmt 0x9eab940 <col:9, col:50>
    (CallExpr 0x9eab910 <col:16, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9eab878 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9eab868 <col:16> 'const num_put<_CharT, _OutIter> *' this))
      (DeclRefExpr 0x9eab8ac <col:29> 'iter_type':'_OutIter' lvalue ParmVar 0x9ea7e50 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0x9eab8c4 <col:34> 'class std::ios_base' lvalue ParmVar 0x9ea7ea0 '__f' 'class std::ios_base &')
      (DeclRefExpr 0x9eab8dc <col:39> 'char_type':'_CharT' lvalue ParmVar 0x9ea7ee0 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0x9eab8f4 <col:47> 'long' lvalue ParmVar 0x9ea7f30 '__v' 'long'))))


        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long __v) const (CompoundStmt 0x9eaba50 </usr/include/c++/4.6/bits/locale_facets.h:2340:7, col:53>
  (ReturnStmt 0x9eaba40 <col:9, col:50>
    (CallExpr 0x9eaba10 <col:16, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9eab978 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9eab968 <col:16> 'const num_put<_CharT, _OutIter> *' this))
      (DeclRefExpr 0x9eab9ac <col:29> 'iter_type':'_OutIter' lvalue ParmVar 0x9ea8070 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0x9eab9c4 <col:34> 'class std::ios_base' lvalue ParmVar 0x9ea80c0 '__f' 'class std::ios_base &')
      (DeclRefExpr 0x9eab9dc <col:39> 'char_type':'_CharT' lvalue ParmVar 0x9ea8100 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0x9eab9f4 <col:47> 'unsigned long' lvalue ParmVar 0x9ea8150 '__v' 'unsigned long'))))


        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long long __v) const (CompoundStmt 0x9eabb50 </usr/include/c++/4.6/bits/locale_facets.h:2345:7, col:53>
  (ReturnStmt 0x9eabb40 <col:9, col:50>
    (CallExpr 0x9eabb10 <col:16, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9eaba78 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9eaba68 <col:16> 'const num_put<_CharT, _OutIter> *' this))
      (DeclRefExpr 0x9eabaac <col:29> 'iter_type':'_OutIter' lvalue ParmVar 0x9ea8290 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0x9eabac4 <col:34> 'class std::ios_base' lvalue ParmVar 0x9ea8e70 '__f' 'class std::ios_base &')
      (DeclRefExpr 0x9eabadc <col:39> 'char_type':'_CharT' lvalue ParmVar 0x9ea8eb0 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0x9eabaf4 <col:47> 'long long' lvalue ParmVar 0x9ea8f00 '__v' 'long long'))))


        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long long __v) const (CompoundStmt 0x9eabc50 </usr/include/c++/4.6/bits/locale_facets.h:2350:7, col:53>
  (ReturnStmt 0x9eabc40 <col:9, col:50>
    (CallExpr 0x9eabc10 <col:16, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9eabb78 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9eabb68 <col:16> 'const num_put<_CharT, _OutIter> *' this))
      (DeclRefExpr 0x9eabbac <col:29> 'iter_type':'_OutIter' lvalue ParmVar 0x9ea9040 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0x9eabbc4 <col:34> 'class std::ios_base' lvalue ParmVar 0x9ea9090 '__f' 'class std::ios_base &')
      (DeclRefExpr 0x9eabbdc <col:39> 'char_type':'_CharT' lvalue ParmVar 0x9ea90d0 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0x9eabbf4 <col:47> 'unsigned long long' lvalue ParmVar 0x9ea9120 '__v' 'unsigned long long'))))


        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, double __v) const (CompoundStmt 0x9eabd50 </usr/include/c++/4.6/bits/locale_facets.h:2398:7, col:53>
  (ReturnStmt 0x9eabd40 <col:9, col:50>
    (CallExpr 0x9eabd10 <col:16, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9eabc78 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9eabc68 <col:16> 'const num_put<_CharT, _OutIter> *' this))
      (DeclRefExpr 0x9eabcac <col:29> 'iter_type':'_OutIter' lvalue ParmVar 0x9ea9260 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0x9eabcc4 <col:34> 'class std::ios_base' lvalue ParmVar 0x9ea92b0 '__f' 'class std::ios_base &')
      (DeclRefExpr 0x9eabcdc <col:39> 'char_type':'_CharT' lvalue ParmVar 0x9ea92f0 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0x9eabcf4 <col:47> 'double' lvalue ParmVar 0x9ea9340 '__v' 'double'))))


        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long double __v) const (CompoundStmt 0x9eabe50 </usr/include/c++/4.6/bits/locale_facets.h:2403:7, col:53>
  (ReturnStmt 0x9eabe40 <col:9, col:50>
    (CallExpr 0x9eabe10 <col:16, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9eabd78 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9eabd68 <col:16> 'const num_put<_CharT, _OutIter> *' this))
      (DeclRefExpr 0x9eabdac <col:29> 'iter_type':'_OutIter' lvalue ParmVar 0x9ea9480 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0x9eabdc4 <col:34> 'class std::ios_base' lvalue ParmVar 0x9ea94d0 '__f' 'class std::ios_base &')
      (DeclRefExpr 0x9eabddc <col:39> 'char_type':'_CharT' lvalue ParmVar 0x9ea9510 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0x9eabdf4 <col:47> 'long double' lvalue ParmVar 0x9ea9560 '__v' 'long double'))))


        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, const void *__v) const (CompoundStmt 0x9eabf50 </usr/include/c++/4.6/bits/locale_facets.h:2424:7, col:53>
  (ReturnStmt 0x9eabf40 <col:9, col:50>
    (CallExpr 0x9eabf10 <col:16, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9eabe78 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9eabe68 <col:16> 'const num_put<_CharT, _OutIter> *' this))
      (DeclRefExpr 0x9eabeac <col:29> 'iter_type':'_OutIter' lvalue ParmVar 0x9ea96a0 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0x9eabec4 <col:34> 'class std::ios_base' lvalue ParmVar 0x9ea96f0 '__f' 'class std::ios_base &')
      (DeclRefExpr 0x9eabedc <col:39> 'char_type':'_CharT' lvalue ParmVar 0x9ea9730 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0x9eabef4 <col:47> 'const void *' lvalue ParmVar 0x9ea9780 '__v' 'const void *'))))


    protected:
    protected:
        template <typename _ValueT> iter_type _M_insert_float(iter_type, std::ios_base &__io, char_type __fill, char __mod, _ValueT __v) const;
        void _M_group_float(const char *__grouping, size_t __grouping_size, char_type __sep, const char_type *__p, char_type *__new, char_type *__cs, int &__len) const;
        template <typename _ValueT> iter_type _M_insert_int(iter_type, std::ios_base &__io, char_type __fill, _ValueT __v) const;
        void _M_group_int(const char *__grouping, size_t __grouping_size, char_type __sep, std::ios_base &__io, char_type *__new, char_type *__cs, int &__len) const;
        void _M_pad(char_type __fill, streamsize __w, std::ios_base &__io, char_type *__new, const char_type *__cs, int &__len) const;
        virtual void ~num_put<_CharT, _OutIter>() (CompoundStmt 0x9eabf68 </usr/include/c++/4.6/bits/locale_facets.h:2453:18, col:20>)


        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, bool __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long __v) const (CompoundStmt 0x9eac068 </usr/include/c++/4.6/bits/locale_facets.h:2474:7, col:55>
  (ReturnStmt 0x9eac058 <col:9, col:52>
    (CallExpr 0x9eac028 <col:16, col:52> '<dependent type>'
      (UnresolvedMemberExpr 0x9eabf88 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9eabfc4 <col:30> 'iter_type':'_OutIter' lvalue ParmVar 0x9eaaa50 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0x9eabfdc <col:35> 'class std::ios_base' lvalue ParmVar 0x9eaaaa0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9eabff4 <col:41> 'char_type':'_CharT' lvalue ParmVar 0x9eaaae0 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0x9eac00c <col:49> 'long' lvalue ParmVar 0x9eaab30 '__v' 'long'))))


        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long __v) const (CompoundStmt 0x9eac170 </usr/include/c++/4.6/bits/locale_facets.h:2479:7, col:55>
  (ReturnStmt 0x9eac160 <col:9, col:52>
    (CallExpr 0x9eac130 <col:16, col:52> '<dependent type>'
      (UnresolvedMemberExpr 0x9eac090 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9eac0cc <col:30> 'iter_type':'_OutIter' lvalue ParmVar 0x9eaac10 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0x9eac0e4 <col:35> 'class std::ios_base' lvalue ParmVar 0x9eaac60 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9eac0fc <col:41> 'char_type':'_CharT' lvalue ParmVar 0x9eaaca0 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0x9eac114 <col:49> 'unsigned long' lvalue ParmVar 0x9eaacf0 '__v' 'unsigned long'))))


        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long long __v) const (CompoundStmt 0x9eac278 </usr/include/c++/4.6/bits/locale_facets.h:2485:7, col:55>
  (ReturnStmt 0x9eac268 <col:9, col:52>
    (CallExpr 0x9eac238 <col:16, col:52> '<dependent type>'
      (UnresolvedMemberExpr 0x9eac198 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9eac1d4 <col:30> 'iter_type':'_OutIter' lvalue ParmVar 0x9eaadd0 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0x9eac1ec <col:35> 'class std::ios_base' lvalue ParmVar 0x9eaae20 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9eac204 <col:41> 'char_type':'_CharT' lvalue ParmVar 0x9eaae60 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0x9eac21c <col:49> 'long long' lvalue ParmVar 0x9eaaeb0 '__v' 'long long'))))


        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long long __v) const (CompoundStmt 0x9eac380 </usr/include/c++/4.6/bits/locale_facets.h:2490:7, col:55>
  (ReturnStmt 0x9eac370 <col:9, col:52>
    (CallExpr 0x9eac340 <col:16, col:52> '<dependent type>'
      (UnresolvedMemberExpr 0x9eac2a0 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9eac2dc <col:30> 'iter_type':'_OutIter' lvalue ParmVar 0x9eaaf90 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0x9eac2f4 <col:35> 'class std::ios_base' lvalue ParmVar 0x9eaafe0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9eac30c <col:41> 'char_type':'_CharT' lvalue ParmVar 0x9eab020 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0x9eac324 <col:49> 'unsigned long long' lvalue ParmVar 0x9eab070 '__v' 'unsigned long long'))))


        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, long double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, const void *__v) const;
    };
    static locale::id id(CXXConstructExpr 0x9eac6c8 </usr/include/c++/4.6/bits/locale_facets.h:2517:43> 'class locale::id':'class std::locale::id''void (void)')
;
    template <typename _CharT> inline bool isspace(_CharT __c, const std::locale &__loc) (CompoundStmt 0x9eacaf0 </usr/include/c++/4.6/bits/locale_facets.h:2530:5, col:75>
  (ReturnStmt 0x9eacae0 <col:7, col:72>
    (CallExpr 0x9eacab8 <col:14, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9eaca20 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0x9eaca00 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0x9eac980 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0x9e01120)
          (DeclRefExpr 0x9eac9e8 <col:40> 'const class std::locale' lvalue ParmVar 0x9eac7a0 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0x9eaca80 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0x9e69860 'space' 'const mask':'const unsigned short')
      (DeclRefExpr 0x9eacaa0 <col:69> '_CharT' lvalue ParmVar 0x9eac750 '__c' '_CharT'))))

;
    template <typename _CharT> inline bool isprint(_CharT __c, const std::locale &__loc) (CompoundStmt 0x9eacf38 </usr/include/c++/4.6/bits/locale_facets.h:2536:5, col:75>
  (ReturnStmt 0x9eacf28 <col:7, col:72>
    (CallExpr 0x9eacf00 <col:14, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9eace70 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0x9eace20 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0x9eacda0 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0x9e01120)
          (DeclRefExpr 0x9eace08 <col:40> 'const class std::locale' lvalue ParmVar 0x9eacbc0 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0x9eacec4 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0x9e698d0 'print' 'const mask':'const unsigned short')
      (DeclRefExpr 0x9eacee4 <col:69> '_CharT' lvalue ParmVar 0x9eacb70 '__c' '_CharT'))))

;
    template <typename _CharT> inline bool iscntrl(_CharT __c, const std::locale &__loc) (CompoundStmt 0x9ead348 </usr/include/c++/4.6/bits/locale_facets.h:2542:5, col:75>
  (ReturnStmt 0x9ead338 <col:7, col:72>
    (CallExpr 0x9ead310 <col:14, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9ead280 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0x9ead260 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0x9ead1e0 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0x9e01120)
          (DeclRefExpr 0x9ead248 <col:40> 'const class std::locale' lvalue ParmVar 0x9ead000 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0x9ead2d4 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0x9e69a40 'cntrl' 'const mask':'const unsigned short')
      (DeclRefExpr 0x9ead2f4 <col:69> '_CharT' lvalue ParmVar 0x9eacfb0 '__c' '_CharT'))))

;
    template <typename _CharT> inline bool isupper(_CharT __c, const std::locale &__loc) (CompoundStmt 0x9ead758 </usr/include/c++/4.6/bits/locale_facets.h:2548:5, col:75>
  (ReturnStmt 0x9ead748 <col:7, col:72>
    (CallExpr 0x9ead720 <col:14, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9ead690 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0x9ead670 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0x9ead5f0 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0x9e01120)
          (DeclRefExpr 0x9ead658 <col:40> 'const class std::locale' lvalue ParmVar 0x9ead410 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0x9ead6e4 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0x9e69630 'upper' 'const mask':'const unsigned short')
      (DeclRefExpr 0x9ead704 <col:69> '_CharT' lvalue ParmVar 0x9ead3c0 '__c' '_CharT'))))

;
    template <typename _CharT> inline bool islower(_CharT __c, const std::locale &__loc) (CompoundStmt 0x9eadb68 </usr/include/c++/4.6/bits/locale_facets.h:2554:5, col:75>
  (ReturnStmt 0x9eadb58 <col:7, col:72>
    (CallExpr 0x9eadb30 <col:14, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9eadaa0 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0x9eada80 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0x9eada00 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0x9e01120)
          (DeclRefExpr 0x9eada68 <col:40> 'const class std::locale' lvalue ParmVar 0x9ead820 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0x9eadaf4 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0x9e696a0 'lower' 'const mask':'const unsigned short')
      (DeclRefExpr 0x9eadb14 <col:69> '_CharT' lvalue ParmVar 0x9ead7d0 '__c' '_CharT'))))

;
    template <typename _CharT> inline bool isalpha(_CharT __c, const std::locale &__loc) (CompoundStmt 0x9eadf78 </usr/include/c++/4.6/bits/locale_facets.h:2560:5, col:75>
  (ReturnStmt 0x9eadf68 <col:7, col:72>
    (CallExpr 0x9eadf40 <col:14, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9eadeb0 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0x9eade90 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0x9eade10 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0x9e01120)
          (DeclRefExpr 0x9eade78 <col:40> 'const class std::locale' lvalue ParmVar 0x9eadc30 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0x9eadf04 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0x9e69710 'alpha' 'const mask':'const unsigned short')
      (DeclRefExpr 0x9eadf24 <col:69> '_CharT' lvalue ParmVar 0x9eadbe0 '__c' '_CharT'))))

;
    template <typename _CharT> inline bool isdigit(_CharT __c, const std::locale &__loc) (CompoundStmt 0x9eae388 </usr/include/c++/4.6/bits/locale_facets.h:2566:5, col:75>
  (ReturnStmt 0x9eae378 <col:7, col:72>
    (CallExpr 0x9eae350 <col:14, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9eae2c0 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0x9eae2a0 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0x9eae220 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0x9e01120)
          (DeclRefExpr 0x9eae288 <col:40> 'const class std::locale' lvalue ParmVar 0x9eae040 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0x9eae314 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0x9e69780 'digit' 'const mask':'const unsigned short')
      (DeclRefExpr 0x9eae334 <col:69> '_CharT' lvalue ParmVar 0x9eadff0 '__c' '_CharT'))))

;
    template <typename _CharT> inline bool ispunct(_CharT __c, const std::locale &__loc) (CompoundStmt 0x9eae798 </usr/include/c++/4.6/bits/locale_facets.h:2572:5, col:75>
  (ReturnStmt 0x9eae788 <col:7, col:72>
    (CallExpr 0x9eae760 <col:14, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9eae6d0 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0x9eae6b0 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0x9eae630 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0x9e01120)
          (DeclRefExpr 0x9eae698 <col:40> 'const class std::locale' lvalue ParmVar 0x9eae450 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0x9eae724 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0x9e69ab0 'punct' 'const mask':'const unsigned short')
      (DeclRefExpr 0x9eae744 <col:69> '_CharT' lvalue ParmVar 0x9eae400 '__c' '_CharT'))))

;
    template <typename _CharT> inline bool isxdigit(_CharT __c, const std::locale &__loc) (CompoundStmt 0x9eaeba8 </usr/include/c++/4.6/bits/locale_facets.h:2578:5, col:76>
  (ReturnStmt 0x9eaeb98 <col:7, col:73>
    (CallExpr 0x9eaeb70 <col:14, col:73> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9eaeae0 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0x9eaeac0 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0x9eaea40 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0x9e01120)
          (DeclRefExpr 0x9eaeaa8 <col:40> 'const class std::locale' lvalue ParmVar 0x9eae860 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0x9eaeb34 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0x9e697f0 'xdigit' 'const mask':'const unsigned short')
      (DeclRefExpr 0x9eaeb54 <col:70> '_CharT' lvalue ParmVar 0x9eae810 '__c' '_CharT'))))

;
    template <typename _CharT> inline bool isalnum(_CharT __c, const std::locale &__loc) (CompoundStmt 0x9eaefb8 </usr/include/c++/4.6/bits/locale_facets.h:2584:5, col:75>
  (ReturnStmt 0x9eaefa8 <col:7, col:72>
    (CallExpr 0x9eaef80 <col:14, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9eaeef0 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0x9eaeed0 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0x9eaee50 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0x9e01120)
          (DeclRefExpr 0x9eaeeb8 <col:40> 'const class std::locale' lvalue ParmVar 0x9eaec70 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0x9eaef44 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0x9e69b20 'alnum' 'const mask':'const unsigned short')
      (DeclRefExpr 0x9eaef64 <col:69> '_CharT' lvalue ParmVar 0x9eaec20 '__c' '_CharT'))))

;
    template <typename _CharT> inline bool isgraph(_CharT __c, const std::locale &__loc) (CompoundStmt 0x9eaf3c8 </usr/include/c++/4.6/bits/locale_facets.h:2590:5, col:75>
  (ReturnStmt 0x9eaf3b8 <col:7, col:72>
    (CallExpr 0x9eaf390 <col:14, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9eaf300 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0x9eaf2e0 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0x9eaf260 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0x9e01120)
          (DeclRefExpr 0x9eaf2c8 <col:40> 'const class std::locale' lvalue ParmVar 0x9eaf080 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0x9eaf354 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0x9e69940 'graph' 'const mask':'const unsigned short')
      (DeclRefExpr 0x9eaf374 <col:69> '_CharT' lvalue ParmVar 0x9eaf030 '__c' '_CharT'))))

;
    template <typename _CharT> inline _CharT toupper(_CharT __c, const std::locale &__loc) (CompoundStmt 0x9eaf790 </usr/include/c++/4.6/bits/locale_facets.h:2596:5, col:61>
  (ReturnStmt 0x9eaf780 <col:7, col:58>
    (CallExpr 0x9eaf760 <col:14, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9eaf710 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0x9eaf6f0 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0x9eaf670 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0x9e01120)
          (DeclRefExpr 0x9eaf6d8 <col:40> 'const class std::locale' lvalue ParmVar 0x9eaf490 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0x9eaf744 <col:55> '_CharT' lvalue ParmVar 0x9eaf440 '__c' '_CharT'))))

;
    template <typename _CharT> inline _CharT tolower(_CharT __c, const std::locale &__loc) (CompoundStmt 0x9eafb60 </usr/include/c++/4.6/bits/locale_facets.h:2602:5, col:61>
  (ReturnStmt 0x9eafb50 <col:7, col:58>
    (CallExpr 0x9eafb30 <col:14, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9eafae0 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0x9eafac0 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0x9eafa40 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0x9e01120)
          (DeclRefExpr 0x9eafaa8 <col:40> 'const class std::locale' lvalue ParmVar 0x9eaf860 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0x9eafb14 <col:55> '_CharT' lvalue ParmVar 0x9eaf810 '__c' '_CharT'))))

;
}
namespace std {
    template <typename _Facet> struct __use_cache {
        struct __use_cache;
        const _Facet *operator()(const std::locale &__loc) const;
    };
    struct __use_cache {
        struct __use_cache;
        const __numpunct_cache<_CharT> *operator()(const std::locale &__loc) const (CompoundStmt 0x9eb0e08 </usr/include/c++/4.6/bits/locale_facets.tcc:55:7, line:74:7>
  (DeclStmt 0x9eb0648 <line:56:2, col:49>
    0x9eb04c0 "const size_t __i =
      (CallExpr 0x9eb0628 <col:21, col:48> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9eb05f0 <col:21, col:42> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9eb05b8 <col:21, col:39> '<dependent type>' lvalue)))")
  (DeclStmt 0x9eb0740 <line:57:2, col:59>
    0x9eb0690 "const locale::facet **__caches =
      (ImplicitCastExpr 0x9eb0730 <col:35, col:50> 'const class std::locale::facet **' <LValueToRValue>
        (MemberExpr 0x9eb070c <col:35, col:50> 'const class std::locale::facet **' lvalue ->_M_caches 0x9df1420
          (ImplicitCastExpr 0x9eb0700 <col:35, col:41> 'class std::locale::_Impl *' <LValueToRValue>
            (MemberExpr 0x9eb06dc <col:35, col:41> 'class std::locale::_Impl *const' lvalue ._M_impl 0x9dee470
              (DeclRefExpr 0x9eb06c4 <col:35> 'const class std::locale' lvalue ParmVar 0x9eb0330 '__loc' 'const class std::locale &')))))")
  (IfStmt 0x9eb0c80 <line:58:2, line:72:4>
    <<<NULL>>>
    (UnaryOperator 0x9eb07d8 <line:58:6, col:19> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9eb07c8 <col:7, col:19> '_Bool' <PointerToBoolean>
        (ImplicitCastExpr 0x9eb07b8 <col:7, col:19> 'const class locale::facet *' <LValueToRValue>
          (ArraySubscriptExpr 0x9eb07a0 <col:7, col:19> 'const class locale::facet *' lvalue
            (ImplicitCastExpr 0x9eb0780 <col:7> 'const class locale::facet **' <LValueToRValue>
              (DeclRefExpr 0x9eb0750 <col:7> 'const class locale::facet **' lvalue Var 0x9eb0690 '__caches' 'const class locale::facet **'))
            (ImplicitCastExpr 0x9eb0790 <col:16> 'size_t':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0x9eb0768 <col:16> 'const size_t':'const unsigned int' lvalue Var 0x9eb04c0 '__i' 'const size_t':'const unsigned int'))))))
    (CompoundStmt 0x9eb0c60 <line:59:4, line:72:4>
      (DeclStmt 0x9eb0910 <line:60:6, col:41>
        0x9eb08c0 "__numpunct_cache<_CharT> *__tmp =
          (IntegerLiteral 0x9eb08f8 <col:40> 'int' 0)")
      (IfStmt 0x9eb0af8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/locale_facets.tcc:65:8>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9eb0920 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9eb0ae0 </usr/include/c++/4.6/bits/locale_facets.tcc:62:8, line:65:8>
          (BinaryOperator 0x9eb0a40 <line:63:3, col:38> '<dependent type>' '='
            (DeclRefExpr 0x9eb0930 <col:3> '__numpunct_cache<_CharT> *' lvalue Var 0x9eb08c0 '__tmp' '__numpunct_cache<_CharT> *')
            (CXXNewExpr 0x9eb0a08 <col:11, col:38> '__numpunct_cache<_CharT> *'))
          (CallExpr 0x9eb0ac0 <line:64:3, col:24> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9eb0a70 <col:3, col:10> '<dependent type>' lvalue
              (DeclRefExpr 0x9eb0a58 <col:3> '__numpunct_cache<_CharT> *' lvalue Var 0x9eb08c0 '__tmp' '__numpunct_cache<_CharT> *'))
            (DeclRefExpr 0x9eb0aa4 <col:19> 'const class std::locale' lvalue ParmVar 0x9eb0330 '__loc' 'const class std::locale &')))
        <<<NULL>>>)
      (IfStmt 0x9eb0b80 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/locale_facets.tcc:70:8>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9eb0b18 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9eb0b68 </usr/include/c++/4.6/bits/locale_facets.tcc:67:8, line:70:8>
          (CXXDeleteExpr 0x9eb0b40 <line:68:3, col:10> 'void'
            (DeclRefExpr 0x9eb0b28 <col:10> '__numpunct_cache<_CharT> *' lvalue Var 0x9eb08c0 '__tmp' '__numpunct_cache<_CharT> *'))
          (NullStmt 0x9eb0b58 <line:69:26>))
        <<<NULL>>>)
      (CallExpr 0x9eb0c38 <line:71:6, col:48> '<dependent type>'
        (MemberExpr 0x9eb0be4 <col:6, col:21> '<bound member function type>' ->_M_install_cache 0x9df2e80
          (ImplicitCastExpr 0x9eb0bd8 <col:6, col:12> 'class std::locale::_Impl *' <LValueToRValue>
            (MemberExpr 0x9eb0bb4 <col:6, col:12> 'class std::locale::_Impl *const' lvalue ._M_impl 0x9dee470
              (DeclRefExpr 0x9eb0b9c <col:6> 'const class std::locale' lvalue ParmVar 0x9eb0330 '__loc' 'const class std::locale &'))))
        (DeclRefExpr 0x9eb0c04 <col:38> '__numpunct_cache<_CharT> *' lvalue Var 0x9eb08c0 '__tmp' '__numpunct_cache<_CharT> *')
        (DeclRefExpr 0x9eb0c1c <col:45> 'const size_t':'const unsigned int' lvalue Var 0x9eb04c0 '__i' 'const size_t':'const unsigned int')))
    <<<NULL>>>)
  (ReturnStmt 0x9eb0df8 <line:73:2, col:67>
    (CXXStaticCastExpr 0x9eb0de0 <col:9, col:67> 'const __numpunct_cache<_CharT> *' static_cast<const __numpunct_cache<_CharT> *> <Dependent>
      (ArraySubscriptExpr 0x9eb0d80 <col:54, col:66> 'const class locale::facet *' lvalue
        (ImplicitCastExpr 0x9eb0d60 <col:54> 'const class locale::facet **' <LValueToRValue>
          (DeclRefExpr 0x9eb0d30 <col:54> 'const class locale::facet **' lvalue Var 0x9eb0690 '__caches' 'const class locale::facet **'))
        (ImplicitCastExpr 0x9eb0d70 <col:63> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9eb0d48 <col:63> 'const size_t':'const unsigned int' lvalue Var 0x9eb04c0 '__i' 'const size_t':'const unsigned int'))))))


    };
    void _M_cache(const std::locale &__loc) (CompoundStmt 0x9eb8120 </usr/include/c++/4.6/bits/locale_facets.tcc:80:5, line:127:5>
  (BinaryOperator 0x9eb56e8 <line:81:7, col:22> '<dependent type>' '='
    (MemberExpr 0x9eb56b8 <col:7> '_Bool' lvalue ->_M_allocated 0x9e94be0
      (CXXThisExpr 0x9eb56a8 <col:7> '__numpunct_cache<_CharT> *' this))
    (CXXBoolLiteralExpr 0x9eb56d8 <col:22> '_Bool' true))
  (DeclStmt 0x9eb5970 <line:83:7, col:73>
    0x9eb57f0 "const numpunct<_CharT> &__np =
      (CallExpr 0x9eb5950 <col:38, col:72> '<dependent type>'
        (UnresolvedLookupExpr 0x9eb58d0 <col:38, col:65> '<dependent type>' lvalue (ADL) = '1' 0x9e01120)
        (DeclRefExpr 0x9eb5938 <col:67> 'const class std::locale' lvalue ParmVar 0x9eb55c0 '__loc' 'const class std::locale &'))")
  (DeclStmt 0x9eb59f0 <line:85:7, col:27>
    0x9eb5990 "char *__grouping =
      (ImplicitCastExpr 0x9eb59e0 <col:26> 'char *' <NullToPointer>
        (IntegerLiteral 0x9eb59c8 <col:26> 'int' 0))")
  (DeclStmt 0x9eb5a80 <line:86:7, col:29>
    0x9eb5a30 "_CharT *__truename =
      (IntegerLiteral 0x9eb5a68 <col:28> 'int' 0)")
  (DeclStmt 0x9eb5af0 <line:87:7, col:30>
    0x9eb5aa0 "_CharT *__falsename =
      (IntegerLiteral 0x9eb5ad8 <col:29> 'int' 0)")
  (IfStmt 0x9eb8000 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/locale_facets.tcc:119:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9eb5b00 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x9eb7fa8 </usr/include/c++/4.6/bits/locale_facets.tcc:89:2, line:119:2>
      (BinaryOperator 0x9eb5c08 <line:90:4, col:44> '<dependent type>' '='
        (MemberExpr 0x9eb5b20 <col:4> 'size_t':'unsigned int' lvalue ->_M_grouping_size 0x9e94810
          (CXXThisExpr 0x9eb5b10 <col:4> '__numpunct_cache<_CharT> *' this))
        (CallExpr 0x9eb5be8 <col:23, col:44> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9eb5bb0 <col:23, col:39> '<dependent type>' lvalue
            (CallExpr 0x9eb5b90 <col:23, col:37> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9eb5b58 <col:23, col:28> '<dependent type>' lvalue
                (DeclRefExpr 0x9eb5b40 <col:23> 'const numpunct<_CharT>' lvalue Var 0x9eb57f0 '__np' 'const numpunct<_CharT> &'))))))
      (BinaryOperator 0x9eb5cb0 <line:91:4, col:21> 'char *' lvalue '='
        (DeclRefExpr 0x9eb5c20 <col:4> 'char *' lvalue Var 0x9eb5990 '__grouping' 'char *')
        (CXXNewExpr 0x9eb5c70 <col:17, col:21> 'char *'
          (MemberExpr 0x9eb5c48 <col:26> 'size_t':'unsigned int' lvalue ->_M_grouping_size 0x9e94810
            (CXXThisExpr 0x9eb5c38 <col:26> '__numpunct_cache<_CharT> *' this))))
      (CallExpr 0x9eb5db8 <line:92:4, col:53> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9eb5d38 <col:4, col:20> '<dependent type>' lvalue
          (CallExpr 0x9eb5d18 <col:4, col:18> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9eb5ce0 <col:4, col:9> '<dependent type>' lvalue
              (DeclRefExpr 0x9eb5cc8 <col:4> 'const numpunct<_CharT>' lvalue Var 0x9eb57f0 '__np' 'const numpunct<_CharT> &'))))
        (DeclRefExpr 0x9eb5d6c <col:25> 'char *' lvalue Var 0x9eb5990 '__grouping' 'char *')
        (MemberExpr 0x9eb5d98 <col:37> 'size_t':'unsigned int' lvalue ->_M_grouping_size 0x9e94810
          (CXXThisExpr 0x9eb5d88 <col:37> '__numpunct_cache<_CharT> *' this)))
      (BinaryOperator 0x9eb5e28 <line:93:4, col:18> '<dependent type>' '='
        (MemberExpr 0x9eb5df0 <col:4> 'const char *' lvalue ->_M_grouping 0x9e947d0
          (CXXThisExpr 0x9eb5de0 <col:4> '__numpunct_cache<_CharT> *' this))
        (DeclRefExpr 0x9eb5e10 <col:18> 'char *' lvalue Var 0x9eb5990 '__grouping' 'char *'))
      (BinaryOperator 0x9eb71f0 <line:94:4, line:97:50> '<dependent type>' '='
        (MemberExpr 0x9eb5e50 <line:94:4> '_Bool' lvalue ->_M_use_grouping 0x9e94850
          (CXXThisExpr 0x9eb5e40 <col:4> '__numpunct_cache<_CharT> *' this))
        (ParenExpr 0x9eb71d8 <col:22, line:97:50> '<dependent type>'
          (BinaryOperator 0x9eb71c0 <line:94:23, line:97:49> '<dependent type>' '&&'
            (BinaryOperator 0x9eb5f68 <line:94:23, line:95:55> '<dependent type>' '&&'
              (MemberExpr 0x9eb5e80 <line:94:23> 'size_t':'unsigned int' lvalue ->_M_grouping_size 0x9e94810
                (CXXThisExpr 0x9eb5e70 <col:23> '__numpunct_cache<_CharT> *' this))
              (BinaryOperator 0x9eb5f50 <line:95:12, col:55> '_Bool' '>'
                (ImplicitCastExpr 0x9eb5f40 <col:12, col:51> 'int' <IntegralCast>
                  (CXXStaticCastExpr 0x9eb5f10 <col:12, col:51> 'signed char' static_cast<signed char> <Dependent>
                    (ArraySubscriptExpr 0x9eb5ee8 <col:37, col:50> '<dependent type>' lvalue
                      (MemberExpr 0x9eb5eb0 <col:37> 'const char *' lvalue ->_M_grouping 0x9e947d0
                        (CXXThisExpr 0x9eb5ea0 <col:37> '__numpunct_cache<_CharT> *' this))
                      (IntegerLiteral 0x9eb5ed0 <col:49> 'int' 0))))
                (IntegerLiteral 0x9eb5f28 <col:55> 'int' 0)))
            (ParenExpr 0x9eb71a8 <line:96:12, line:97:49> '<dependent type>'
              (CXXOperatorCallExpr 0x9eb7180 <line:96:13, line:97:44> '<dependent type>'
                (UnresolvedLookupExpr 0x9eb7128 <col:6, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bacde0 0x9bc3130 0x9bc62c0 0x9c11360 0x9c32300 0x9c32670 0x9d60120 0x9d60630 0x9d60b40 0x9e73820)
                (ArraySubscriptExpr 0x9eb5fc8 <line:96:13, col:26> '<dependent type>' lvalue
                  (MemberExpr 0x9eb5f90 <col:13> 'const char *' lvalue ->_M_grouping 0x9e947d0
                    (CXXThisExpr 0x9eb5f80 <col:13> '__numpunct_cache<_CharT> *' this))
                  (IntegerLiteral 0x9eb5fb0 <col:25> 'int' 0))
                (DeclRefExpr 0x9eb7108 <line:97:9, col:44> 'const char':'const char' lvalue Var 0x9eb6ac0 '__max' 'const char':'const char'))))))
      (BinaryOperator 0x9eb7300 <line:99:4, col:44> '<dependent type>' '='
        (MemberExpr 0x9eb7218 <col:4> 'size_t':'unsigned int' lvalue ->_M_truename_size 0x9e948f0
          (CXXThisExpr 0x9eb7208 <col:4> '__numpunct_cache<_CharT> *' this))
        (CallExpr 0x9eb72e0 <col:23, col:44> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9eb72a8 <col:23, col:39> '<dependent type>' lvalue
            (CallExpr 0x9eb7288 <col:23, col:37> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9eb7250 <col:23, col:28> '<dependent type>' lvalue
                (DeclRefExpr 0x9eb7238 <col:23> 'const numpunct<_CharT>' lvalue Var 0x9eb57f0 '__np' 'const numpunct<_CharT> &'))))))
      (BinaryOperator 0x9eb73a8 <line:100:4, col:21> '<dependent type>' '='
        (DeclRefExpr 0x9eb7318 <col:4> '_CharT *' lvalue Var 0x9eb5a30 '__truename' '_CharT *')
        (CXXNewExpr 0x9eb7368 <col:17, col:21> '_CharT *'
          (MemberExpr 0x9eb7340 <col:28> 'size_t':'unsigned int' lvalue ->_M_truename_size 0x9e948f0
            (CXXThisExpr 0x9eb7330 <col:28> '__numpunct_cache<_CharT> *' this))))
      (CallExpr 0x9eb74b0 <line:101:4, col:53> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9eb7430 <col:4, col:20> '<dependent type>' lvalue
          (CallExpr 0x9eb7410 <col:4, col:18> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9eb73d8 <col:4, col:9> '<dependent type>' lvalue
              (DeclRefExpr 0x9eb73c0 <col:4> 'const numpunct<_CharT>' lvalue Var 0x9eb57f0 '__np' 'const numpunct<_CharT> &'))))
        (DeclRefExpr 0x9eb7464 <col:25> '_CharT *' lvalue Var 0x9eb5a30 '__truename' '_CharT *')
        (MemberExpr 0x9eb7490 <col:37> 'size_t':'unsigned int' lvalue ->_M_truename_size 0x9e948f0
          (CXXThisExpr 0x9eb7480 <col:37> '__numpunct_cache<_CharT> *' this)))
      (BinaryOperator 0x9eb7520 <line:102:4, col:18> '<dependent type>' '='
        (MemberExpr 0x9eb74e8 <col:4> 'const _CharT *' lvalue ->_M_truename 0x9e948b0
          (CXXThisExpr 0x9eb74d8 <col:4> '__numpunct_cache<_CharT> *' this))
        (DeclRefExpr 0x9eb7508 <col:18> '_CharT *' lvalue Var 0x9eb5a30 '__truename' '_CharT *'))
      (BinaryOperator 0x9eb7630 <line:104:4, col:46> '<dependent type>' '='
        (MemberExpr 0x9eb7548 <col:4> 'size_t':'unsigned int' lvalue ->_M_falsename_size 0x9e94970
          (CXXThisExpr 0x9eb7538 <col:4> '__numpunct_cache<_CharT> *' this))
        (CallExpr 0x9eb7610 <col:24, col:46> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9eb75d8 <col:24, col:41> '<dependent type>' lvalue
            (CallExpr 0x9eb75b8 <col:24, col:39> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9eb7580 <col:24, col:29> '<dependent type>' lvalue
                (DeclRefExpr 0x9eb7568 <col:24> 'const numpunct<_CharT>' lvalue Var 0x9eb57f0 '__np' 'const numpunct<_CharT> &'))))))
      (BinaryOperator 0x9eb76d8 <line:105:4, col:22> '<dependent type>' '='
        (DeclRefExpr 0x9eb7648 <col:4> '_CharT *' lvalue Var 0x9eb5aa0 '__falsename' '_CharT *')
        (CXXNewExpr 0x9eb7698 <col:18, col:22> '_CharT *'
          (MemberExpr 0x9eb7670 <col:29> 'size_t':'unsigned int' lvalue ->_M_falsename_size 0x9e94970
            (CXXThisExpr 0x9eb7660 <col:29> '__numpunct_cache<_CharT> *' this))))
      (CallExpr 0x9eb77e0 <line:106:4, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9eb7760 <col:4, col:21> '<dependent type>' lvalue
          (CallExpr 0x9eb7740 <col:4, col:19> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9eb7708 <col:4, col:9> '<dependent type>' lvalue
              (DeclRefExpr 0x9eb76f0 <col:4> 'const numpunct<_CharT>' lvalue Var 0x9eb57f0 '__np' 'const numpunct<_CharT> &'))))
        (DeclRefExpr 0x9eb7794 <col:26> '_CharT *' lvalue Var 0x9eb5aa0 '__falsename' '_CharT *')
        (MemberExpr 0x9eb77c0 <col:39> 'size_t':'unsigned int' lvalue ->_M_falsename_size 0x9e94970
          (CXXThisExpr 0x9eb77b0 <col:39> '__numpunct_cache<_CharT> *' this)))
      (BinaryOperator 0x9eb7850 <line:107:4, col:19> '<dependent type>' '='
        (MemberExpr 0x9eb7818 <col:4> 'const _CharT *' lvalue ->_M_falsename 0x9e94930
          (CXXThisExpr 0x9eb7808 <col:4> '__numpunct_cache<_CharT> *' this))
        (DeclRefExpr 0x9eb7838 <col:19> '_CharT *' lvalue Var 0x9eb5aa0 '__falsename' '_CharT *'))
      (BinaryOperator 0x9eb7908 <line:109:4, col:42> '<dependent type>' '='
        (MemberExpr 0x9eb7878 <col:4> '_CharT' lvalue ->_M_decimal_point 0x9e949b0
          (CXXThisExpr 0x9eb7868 <col:4> '__numpunct_cache<_CharT> *' this))
        (CallExpr 0x9eb78e8 <col:23, col:42> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9eb78b0 <col:23, col:28> '<dependent type>' lvalue
            (DeclRefExpr 0x9eb7898 <col:23> 'const numpunct<_CharT>' lvalue Var 0x9eb57f0 '__np' 'const numpunct<_CharT> &'))))
      (BinaryOperator 0x9eb79c0 <line:110:4, col:42> '<dependent type>' '='
        (MemberExpr 0x9eb7930 <col:4> '_CharT' lvalue ->_M_thousands_sep 0x9e949f0
          (CXXThisExpr 0x9eb7920 <col:4> '__numpunct_cache<_CharT> *' this))
        (CallExpr 0x9eb79a0 <col:23, col:42> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9eb7968 <col:23, col:28> '<dependent type>' lvalue
            (DeclRefExpr 0x9eb7950 <col:23> 'const numpunct<_CharT>' lvalue Var 0x9eb57f0 '__np' 'const numpunct<_CharT> &'))))
      (DeclStmt 0x9eb7c20 <line:112:4, col:64>
        0x9eb7aa0 "const ctype<_CharT> &__ct =
          (CallExpr 0x9eb7c00 <col:32, col:63> '<dependent type>'
            (UnresolvedLookupExpr 0x9eb7b80 <col:32, col:56> '<dependent type>' lvalue (ADL) = '1' 0x9e01120)
            (DeclRefExpr 0x9eb7be8 <col:58> 'const class std::locale' lvalue ParmVar 0x9eb55c0 '__loc' 'const class std::locale &'))")
      (CallExpr 0x9eb7de0 <line:113:4, line:115:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9eb7c48 <line:113:4, col:9> '<dependent type>' lvalue
          (DeclRefExpr 0x9eb7c30 <col:4> 'const ctype<_CharT>' lvalue Var 0x9eb7aa0 '__ct' 'const ctype<_CharT> &'))
        (DeclRefExpr 0x9eb7c9c <col:15, col:27> 'const char *' lvalue Var 0x9e93f80 '_S_atoms_out' 'const char *')
        (BinaryOperator 0x9eb7d98 <line:114:8, line:115:22> 'const char *' '+'
          (ImplicitCastExpr 0x9eb7d78 <line:114:8, col:20> 'const char *' <LValueToRValue>
            (DeclRefExpr 0x9eb7cdc <col:8, col:20> 'const char *' lvalue Var 0x9e93f80 '_S_atoms_out' 'const char *'))
          (ImplicitCastExpr 0x9eb7d88 <line:115:10, col:22> 'int' <IntegralCast>
            (DeclRefExpr 0x9eb7d1c <col:10, col:22> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>' EnumConstant 0x9e93ed0 '_S_oend' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')))
        (MemberExpr 0x9eb7dc0 <col:31> '_CharT [36]' lvalue ->_M_atoms_out 0x9e94ad0
          (CXXThisExpr 0x9eb7db0 <col:31> '__numpunct_cache<_CharT> *' this)))
      (CallExpr 0x9eb7f80 <line:116:4, line:118:42> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9eb7e20 <line:116:4, col:9> '<dependent type>' lvalue
          (DeclRefExpr 0x9eb7e08 <col:4> 'const ctype<_CharT>' lvalue Var 0x9eb7aa0 '__ct' 'const ctype<_CharT> &'))
        (DeclRefExpr 0x9eb7e74 <col:15, col:27> 'const char *' lvalue Var 0x9e93fd0 '_S_atoms_in' 'const char *')
        (BinaryOperator 0x9eb7f38 <line:117:8, line:118:22> 'const char *' '+'
          (ImplicitCastExpr 0x9eb7f18 <line:117:8, col:20> 'const char *' <LValueToRValue>
            (DeclRefExpr 0x9eb7eb4 <col:8, col:20> 'const char *' lvalue Var 0x9e93fd0 '_S_atoms_in' 'const char *'))
          (ImplicitCastExpr 0x9eb7f28 <line:118:10, col:22> 'int' <IntegralCast>
            (DeclRefExpr 0x9eb7ef4 <col:10, col:22> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x9e942c0 '_S_iend' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))
        (MemberExpr 0x9eb7f60 <col:31> '_CharT [26]' lvalue ->_M_atoms_in 0x9e94ba0
          (CXXThisExpr 0x9eb7f50 <col:31> '__numpunct_cache<_CharT> *' this))))
    <<<NULL>>>)
  (IfStmt 0x9eb8100 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/locale_facets.tcc:126:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9eb8020 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9eb80e0 </usr/include/c++/4.6/bits/locale_facets.tcc:121:2, line:126:2>
      (CXXDeleteExpr 0x9eb8058 <line:122:4, col:14> 'void'
        (ImplicitCastExpr 0x9eb8048 <col:14> 'void *' <NoOp>
          (DeclRefExpr 0x9eb8030 <col:14> 'char *' lvalue Var 0x9eb5990 '__grouping' 'char *')))
      (CXXDeleteExpr 0x9eb8088 <line:123:4, col:14> 'void'
        (DeclRefExpr 0x9eb8070 <col:14> '_CharT *' lvalue Var 0x9eb5a30 '__truename' '_CharT *'))
      (CXXDeleteExpr 0x9eb80b8 <line:124:4, col:14> 'void'
        (DeclRefExpr 0x9eb80a0 <col:14> '_CharT *' lvalue Var 0x9eb5aa0 '__falsename' '_CharT *'))
      (NullStmt 0x9eb80d0 <line:125:27>))
    <<<NULL>>>))


    bool __verify_grouping(const char *__grouping, size_t __grouping_size, const string &__grouping_tmp) throw();
    _InIter _M_extract_float(_InIter __beg, _InIter __end, std::ios_base &__io, ios_base::iostate &__err, string &__xtrc) const (CompoundStmt 0x9ebd630 </usr/include/c++/4.6/bits/locale_facets.tcc:148:5, line:365:5>
  (DeclStmt 0x9eb8980 <line:149:7, col:50>
    0x9eb8950 "typedef char_traits<_CharT> __traits_type")
  (DeclStmt 0x9eb8a70 <line:150:7, col:69>
    0x9eb8a40 "typedef __numpunct_cache<_CharT> __cache_type")
  (DeclStmt 0x9eb8b78 <line:151:7, col:37>
    0x9eb8b40 "__use_cache<__cache_type> __uc")
  (DeclStmt 0x9eb8c40 <line:152:7, col:45>
    0x9eb8ba0 "const std::locale &__loc =
      (CXXMemberCallExpr 0x9eb8c10 <col:29, col:44> 'const class std::locale' lvalue
        (MemberExpr 0x9eb8bec <col:29, col:34> '<bound member function type>' ._M_getloc 0x9e15ff0
          (ImplicitCastExpr 0x9eb8c30 <col:29> 'const class std::ios_base' lvalue <NoOp>
            (DeclRefExpr 0x9eb8bd4 <col:29> 'class std::ios_base' lvalue ParmVar 0x9eb8690 '__io' 'class std::ios_base &'))))")
  (DeclStmt 0x9eb8d08 <line:153:7, col:45>
    0x9eb8c80 "const __cache_type *__lc =
      (CallExpr 0x9eb8ce8 <col:34, col:44> '<dependent type>'
        (DeclRefExpr 0x9eb8cb4 <col:34> '__use_cache<__cache_type>' lvalue Var 0x9eb8b40 '__uc' '__use_cache<__cache_type>')
        (DeclRefExpr 0x9eb8ccc <col:39> 'const class std::locale' lvalue Var 0x9eb8ba0 '__loc' 'const class std::locale &'))")
  (DeclStmt 0x9eb8dd8 <line:154:7, col:46>
    0x9eb8d50 "const _CharT *__lit =
      (CXXDependentScopeMemberExpr 0x9eb8da0 <col:29, col:35> '<dependent type>' lvalue
        (DeclRefExpr 0x9eb8d84 <col:29> 'const __cache_type *' lvalue Var 0x9eb8c80 '__lc' 'const __cache_type *'))")
  (DeclStmt 0x9eb8e48 <line:155:7, col:34>
    0x9eb8df0 "char_type __c =
      (CXXUnresolvedConstructExpr 0x9eb8e30 <col:23, col:33> 'char_type':'_CharT')")
  (DeclStmt 0x9eb8f50 <line:158:7, col:38>
    0x9eb8e60 "bool __testeof =
      (CXXOperatorCallExpr 0x9eb8f28 <col:24, col:33> '<dependent type>'
        (UnresolvedLookupExpr 0x9eb8ec8 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30 0x9d5e270 0x9d5ece0 0x9d5f520 0x9d5fa90 0x9e73300)
        (DeclRefExpr 0x9eb8e94 <col:24> '_InIter' lvalue ParmVar 0x9eb8600 '__beg' '_InIter')
        (DeclRefExpr 0x9eb8eac <col:33> '_InIter' lvalue ParmVar 0x9eb8640 '__end' '_InIter'))")
  (IfStmt 0x9eb98c0 <line:161:7, line:175:2>
    <<<NULL>>>
    (UnaryOperator 0x9eb8f88 <line:161:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9eb8f78 <col:12> '_Bool' <LValueToRValue>
        (DeclRefExpr 0x9eb8f60 <col:12> '_Bool' lvalue Var 0x9eb8e60 '__testeof' '_Bool')))
    (CompoundStmt 0x9eb98a0 <line:162:2, line:175:2>
      (BinaryOperator 0x9eb8fe8 <line:163:4, col:11> '<dependent type>' '='
        (DeclRefExpr 0x9eb8f9c <col:4> 'char_type':'_CharT' lvalue Var 0x9eb8df0 '__c' 'char_type':'_CharT')
        (UnaryOperator 0x9eb8fd0 <col:10, col:11> '<dependent type>' prefix '*'
          (DeclRefExpr 0x9eb8fb4 <col:11> '_InIter' lvalue ParmVar 0x9eb8600 '__beg' '_InIter')))
      (DeclStmt 0x9eb9158 <line:164:4, col:58>
        0x9eb9010 "const bool __plus =
          (CXXOperatorCallExpr 0x9eb9130 <col:24, col:57> '<dependent type>'
            (UnresolvedLookupExpr 0x9eb90d0 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30 0x9d5e270 0x9d5ece0 0x9d5f520 0x9d5fa90 0x9e73300)
            (DeclRefExpr 0x9eb9044 <col:24> 'char_type':'_CharT' lvalue Var 0x9eb8df0 '__c' 'char_type':'_CharT')
            (ArraySubscriptExpr 0x9eb90b8 <col:31, col:57> '<dependent type>' lvalue
              (DeclRefExpr 0x9eb905c <col:31> 'const _CharT *' lvalue Var 0x9eb8d50 '__lit' 'const _CharT *')
              (DeclRefExpr 0x9eb9094 <col:37, col:49> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x9e940b0 '_S_iplus' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))")
      (IfStmt 0x9eb9880 <line:165:4, line:174:6>
        <<<NULL>>>
        (BinaryOperator 0x9eb9598 <line:165:8, line:167:42> '<dependent type>' '&&'
          (BinaryOperator 0x9eb9460 <line:165:8, line:166:67> '<dependent type>' '&&'
            (ParenExpr 0x9eb92a8 <line:165:8, col:54> '<dependent type>'
              (BinaryOperator 0x9eb9290 <col:9, col:53> '<dependent type>' '||'
                (DeclRefExpr 0x9eb9168 <col:9> 'const _Bool' lvalue Var 0x9eb9010 '__plus' 'const _Bool')
                (CXXOperatorCallExpr 0x9eb9268 <col:19, col:53> '<dependent type>'
                  (UnresolvedLookupExpr 0x9eb9208 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30 0x9d5e270 0x9d5ece0 0x9d5f520 0x9d5fa90 0x9e73300)
                  (DeclRefExpr 0x9eb9180 <col:19> 'char_type':'_CharT' lvalue Var 0x9eb8df0 '__c' 'char_type':'_CharT')
                  (ArraySubscriptExpr 0x9eb91f0 <col:26, col:53> '<dependent type>' lvalue
                    (DeclRefExpr 0x9eb9198 <col:26> 'const _CharT *' lvalue Var 0x9eb8d50 '__lit' 'const _CharT *')
                    (DeclRefExpr 0x9eb91cc <col:32, col:44> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x9e94070 '_S_iminus' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))))
            (UnaryOperator 0x9eb9448 <line:166:11, col:67> '<dependent type>' prefix '!'
              (ParenExpr 0x9eb9418 <col:12, col:67> '<dependent type>'
                (BinaryOperator 0x9eb9400 <col:13, col:51> '<dependent type>' '&&'
                  (CXXDependentScopeMemberExpr 0x9eb92d8 <col:13, col:19> '<dependent type>' lvalue
                    (DeclRefExpr 0x9eb92bc <col:13> 'const __cache_type *' lvalue Var 0x9eb8c80 '__lc' 'const __cache_type *'))
                  (CXXOperatorCallExpr 0x9eb93d8 <col:38, col:51> '<dependent type>'
                    (UnresolvedLookupExpr 0x9eb9378 <col:42, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30 0x9d5e270 0x9d5ece0 0x9d5f520 0x9d5fa90 0x9e73300)
                    (DeclRefExpr 0x9eb930c <col:38> 'char_type':'_CharT' lvalue Var 0x9eb8df0 '__c' 'char_type':'_CharT')
                    (CXXDependentScopeMemberExpr 0x9eb9340 <col:45, col:51> '<dependent type>' lvalue
                      (DeclRefExpr 0x9eb9324 <col:45> 'const __cache_type *' lvalue Var 0x9eb8c80 '__lc' 'const __cache_type *')))))))
          (UnaryOperator 0x9eb9580 <line:167:11, col:42> '<dependent type>' prefix '!'
            (ParenExpr 0x9eb9568 <col:12, col:42> '<dependent type>'
              (CXXOperatorCallExpr 0x9eb9540 <col:13, col:26> '<dependent type>'
                (UnresolvedLookupExpr 0x9eb94e0 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30 0x9d5e270 0x9d5ece0 0x9d5f520 0x9d5fa90 0x9e73300)
                (DeclRefExpr 0x9eb9478 <col:13> 'char_type':'_CharT' lvalue Var 0x9eb8df0 '__c' 'char_type':'_CharT')
                (CXXDependentScopeMemberExpr 0x9eb94a8 <col:20, col:26> '<dependent type>' lvalue
                  (DeclRefExpr 0x9eb9490 <col:20> 'const __cache_type *' lvalue Var 0x9eb8c80 '__lc' 'const __cache_type *'))))))
        (CompoundStmt 0x9eb9868 <line:168:6, line:174:6>
          (CXXOperatorCallExpr 0x9eb96b8 <line:169:8, col:33> 'class std::basic_string<char>' lvalue
            (ImplicitCastExpr 0x9eb96a8 <col:15, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9eb9658 <col:15, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0x9da46d0 'operator+=' 'class std::basic_string<char> &(char)'))
            (DeclRefExpr 0x9eb95b0 <col:8> 'string':'class std::basic_string<char>' lvalue ParmVar 0x9eb8750 '__xtrc' 'string &')
            (ConditionalOperator 0x9eb9620 <col:18, col:33> 'char'
              (ImplicitCastExpr 0x9eb9610 <col:18> '_Bool' <LValueToRValue>
                (DeclRefExpr 0x9eb95c8 <col:18> 'const _Bool' lvalue Var 0x9eb9010 '__plus' 'const _Bool'))
              (CharacterLiteral 0x9eb95e0 <col:27> 'char'43)
              (CharacterLiteral 0x9eb95f8 <col:33> 'char'45)))
          (IfStmt 0x9eb9848 <line:170:8, line:173:15>
            <<<NULL>>>
            (CXXOperatorCallExpr 0x9eb9780 <line:170:12, col:23> '<dependent type>'
              (UnresolvedLookupExpr 0x9eb9728 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bacde0 0x9bc3130 0x9bc62c0 0x9c11360 0x9c32300 0x9c32670 0x9d60120 0x9d60630 0x9d60b40 0x9e73820)
              (UnaryOperator 0x9eb96f8 <col:12, col:14> '<dependent type>' prefix '++'
                (DeclRefExpr 0x9eb96dc <col:14> '_InIter' lvalue ParmVar 0x9eb8600 '__beg' '_InIter'))
              (DeclRefExpr 0x9eb970c <col:23> '_InIter' lvalue ParmVar 0x9eb8640 '__end' '_InIter'))
            (BinaryOperator 0x9eb97f0 <line:171:3, col:10> '<dependent type>' '='
              (DeclRefExpr 0x9eb97a4 <col:3> 'char_type':'_CharT' lvalue Var 0x9eb8df0 '__c' 'char_type':'_CharT')
              (UnaryOperator 0x9eb97d8 <col:9, col:10> '<dependent type>' prefix '*'
                (DeclRefExpr 0x9eb97bc <col:10> '_InIter' lvalue ParmVar 0x9eb8600 '__beg' '_InIter')))
            (BinaryOperator 0x9eb9830 <line:173:3, col:15> '_Bool' lvalue '='
              (DeclRefExpr 0x9eb9808 <col:3> '_Bool' lvalue Var 0x9eb8e60 '__testeof' '_Bool')
              (CXXBoolLiteralExpr 0x9eb9820 <col:15> '_Bool' true))))
        <<<NULL>>>))
    <<<NULL>>>)
  (DeclStmt 0x9eb9938 <line:178:7, col:36>
    0x9eb98f0 "bool __found_mantissa =
      (CXXBoolLiteralExpr 0x9eb9928 <col:31> '_Bool' false)")
  (DeclStmt 0x9eb99b0 <line:179:7, col:24>
    0x9eb9960 "int __sep_pos =
      (IntegerLiteral 0x9eb9998 <col:23> 'int' 0)")
  (WhileStmt 0x9eba100 <line:180:7, line:201:2>
    <<<NULL>>>
    (UnaryOperator 0x9eb99e8 <line:180:14, col:15> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9eb99d8 <col:15> '_Bool' <LValueToRValue>
        (DeclRefExpr 0x9eb99c0 <col:15> '_Bool' lvalue Var 0x9eb8e60 '__testeof' '_Bool')))
    (CompoundStmt 0x9eba0e8 <line:181:2, line:201:2>
      (IfStmt 0x9eba0c8 <line:182:4, line:200:6>
        <<<NULL>>>
        (BinaryOperator 0x9eb9c60 <line:182:8, line:183:24> '<dependent type>' '||'
          (ParenExpr 0x9eb9b58 <line:182:8, col:63> '<dependent type>'
            (BinaryOperator 0x9eb9b40 <col:9, col:47> '<dependent type>' '&&'
              (CXXDependentScopeMemberExpr 0x9eb9a18 <col:9, col:15> '<dependent type>' lvalue
                (DeclRefExpr 0x9eb99fc <col:9> 'const __cache_type *' lvalue Var 0x9eb8c80 '__lc' 'const __cache_type *'))
              (CXXOperatorCallExpr 0x9eb9b18 <col:34, col:47> '<dependent type>'
                (UnresolvedLookupExpr 0x9eb9ab8 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30 0x9d5e270 0x9d5ece0 0x9d5f520 0x9d5fa90 0x9e73300)
                (DeclRefExpr 0x9eb9a4c <col:34> 'char_type':'_CharT' lvalue Var 0x9eb8df0 '__c' 'char_type':'_CharT')
                (CXXDependentScopeMemberExpr 0x9eb9a80 <col:41, col:47> '<dependent type>' lvalue
                  (DeclRefExpr 0x9eb9a64 <col:41> 'const __cache_type *' lvalue Var 0x9eb8c80 '__lc' 'const __cache_type *')))))
          (CXXOperatorCallExpr 0x9eb9c38 <line:183:11, col:24> '<dependent type>'
            (UnresolvedLookupExpr 0x9eb9bd8 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30 0x9d5e270 0x9d5ece0 0x9d5f520 0x9d5fa90 0x9e73300)
            (DeclRefExpr 0x9eb9b6c <col:11> 'char_type':'_CharT' lvalue Var 0x9eb8df0 '__c' 'char_type':'_CharT')
            (CXXDependentScopeMemberExpr 0x9eb9ba0 <col:18, col:24> '<dependent type>' lvalue
              (DeclRefExpr 0x9eb9b84 <col:18> 'const __cache_type *' lvalue Var 0x9eb8c80 '__lc' 'const __cache_type *'))))
        (BreakStmt 0x9eb9c78 <line:184:6>)
        (IfStmt 0x9eba0a8 <line:185:9, line:200:6>
          <<<NULL>>>
          (CXXOperatorCallExpr 0x9eb9d68 <line:185:13, col:46> '<dependent type>'
            (UnresolvedLookupExpr 0x9eb9d08 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30 0x9d5e270 0x9d5ece0 0x9d5f520 0x9d5fa90 0x9e73300)
            (DeclRefExpr 0x9eb9c80 <col:13> 'char_type':'_CharT' lvalue Var 0x9eb8df0 '__c' 'char_type':'_CharT')
            (ArraySubscriptExpr 0x9eb9cf0 <col:20, col:46> '<dependent type>' lvalue
              (DeclRefExpr 0x9eb9c98 <col:20> 'const _CharT *' lvalue Var 0x9eb8d50 '__lit' 'const _CharT *')
              (DeclRefExpr 0x9eb9ccc <col:26, col:38> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x9e94170 '_S_izero' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))
          (CompoundStmt 0x9eba080 <line:186:6, line:198:6>
            (IfStmt 0x9eb9ea8 <line:187:8, line:191:3>
              <<<NULL>>>
              (UnaryOperator 0x9eb9db8 <line:187:12, col:13> '_Bool' prefix '!'
                (ImplicitCastExpr 0x9eb9da8 <col:13> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0x9eb9d8c <col:13> '_Bool' lvalue Var 0x9eb98f0 '__found_mantissa' '_Bool')))
              (CompoundStmt 0x9eb9e90 <line:188:3, line:191:3>
                (CXXOperatorCallExpr 0x9eb9e28 <line:189:5, col:15> 'class std::basic_string<char>' lvalue
                  (ImplicitCastExpr 0x9eb9e18 <col:12, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                    (DeclRefExpr 0x9eb9e00 <col:12, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0x9da46d0 'operator+=' 'class std::basic_string<char> &(char)'))
                  (DeclRefExpr 0x9eb9dcc <col:5> 'string':'class std::basic_string<char>' lvalue ParmVar 0x9eb8750 '__xtrc' 'string &')
                  (CharacterLiteral 0x9eb9de8 <col:15> 'char'48))
                (BinaryOperator 0x9eb9e78 <line:190:5, col:24> '_Bool' lvalue '='
                  (DeclRefExpr 0x9eb9e4c <col:5> '_Bool' lvalue Var 0x9eb98f0 '__found_mantissa' '_Bool')
                  (CXXBoolLiteralExpr 0x9eb9e68 <col:24> '_Bool' true)))
              <<<NULL>>>)
            (UnaryOperator 0x9eb9ee0 <line:192:8, col:10> 'int' lvalue prefix '++'
              (DeclRefExpr 0x9eb9ec4 <col:10> 'int' lvalue Var 0x9eb9960 '__sep_pos' 'int'))
            (IfStmt 0x9eba060 <line:194:8, line:197:15>
              <<<NULL>>>
              (CXXOperatorCallExpr 0x9eb9f98 <line:194:12, col:23> '<dependent type>'
                (UnresolvedLookupExpr 0x9eb9f40 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bacde0 0x9bc3130 0x9bc62c0 0x9c11360 0x9c32300 0x9c32670 0x9d60120 0x9d60630 0x9d60b40 0x9e73820)
                (UnaryOperator 0x9eb9f10 <col:12, col:14> '<dependent type>' prefix '++'
                  (DeclRefExpr 0x9eb9ef4 <col:14> '_InIter' lvalue ParmVar 0x9eb8600 '__beg' '_InIter'))
                (DeclRefExpr 0x9eb9f24 <col:23> '_InIter' lvalue ParmVar 0x9eb8640 '__end' '_InIter'))
              (BinaryOperator 0x9eba008 <line:195:3, col:10> '<dependent type>' '='
                (DeclRefExpr 0x9eb9fbc <col:3> 'char_type':'_CharT' lvalue Var 0x9eb8df0 '__c' 'char_type':'_CharT')
                (UnaryOperator 0x9eb9ff0 <col:9, col:10> '<dependent type>' prefix '*'
                  (DeclRefExpr 0x9eb9fd4 <col:10> '_InIter' lvalue ParmVar 0x9eb8600 '__beg' '_InIter')))
              (BinaryOperator 0x9eba048 <line:197:3, col:15> '_Bool' lvalue '='
                (DeclRefExpr 0x9eba020 <col:3> '_Bool' lvalue Var 0x9eb8e60 '__testeof' '_Bool')
                (CXXBoolLiteralExpr 0x9eba038 <col:15> '_Bool' true))))
          (BreakStmt 0x9eba0a0 <line:200:6>)))))
  (DeclStmt 0x9eba168 <line:204:7, col:31>
    0x9eba120 "bool __found_dec =
      (CXXBoolLiteralExpr 0x9eba158 <col:26> '_Bool' false)")
  (DeclStmt 0x9eba1c8 <line:205:7, col:31>
    0x9eba180 "bool __found_sci =
      (CXXBoolLiteralExpr 0x9eba1b8 <col:26> '_Bool' false)")
  (DeclStmt 0x9eba238 <line:206:7, col:30>
    0x9eba1e0 "string __found_grouping =
      (CXXConstructExpr 0x9eba218 <col:14> 'string':'class std::basic_string<char>''void (void)')")
  (IfStmt 0x9eba318 <line:207:7, line:208:29>
    <<<NULL>>>
    (CXXDependentScopeMemberExpr 0x9eba260 <line:207:11, col:17> '<dependent type>' lvalue
      (DeclRefExpr 0x9eba248 <col:11> 'const __cache_type *' lvalue Var 0x9eb8c80 '__lc' 'const __cache_type *'))
    (CXXMemberCallExpr 0x9eba2e8 <line:208:2, col:29> 'void'
      (MemberExpr 0x9eba2ac <col:2, col:19> '<bound member function type>' .reserve 0x9da3290
        (DeclRefExpr 0x9eba294 <col:2> 'string':'class std::basic_string<char>' lvalue Var 0x9eba1e0 '__found_grouping' 'string':'class std::basic_string<char>'))
      (ImplicitCastExpr 0x9eba308 <col:27> 'size_type':'unsigned int' <IntegralCast>
        (IntegerLiteral 0x9eba2d0 <col:27> 'int' 32)))
    <<<NULL>>>)
  (DeclStmt 0x9eba450 <line:209:7, col:65>
    0x9eba350 "const char_type *__lit_zero =
      (CXXOperatorCallExpr 0x9eba428 <col:37, col:57> '<dependent type>'
        (UnresolvedLookupExpr 0x9eba3e0 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d86680 0x9d87280 0x9d5d090 0x9d5d890)
        (DeclRefExpr 0x9eba384 <col:37> 'const _CharT *' lvalue Var 0x9eb8d50 '__lit' 'const _CharT *')
        (DeclRefExpr 0x9eba3bc <col:45, col:57> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x9e94170 '_S_izero' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>'))")
  (IfStmt 0x9ebd1a8 <line:211:7, line:348:4>
    <<<NULL>>>
    (UnaryOperator 0x9eba4b0 <line:211:11, col:18> '<dependent type>' prefix '!'
      (CXXDependentScopeMemberExpr 0x9eba478 <col:12, col:18> '<dependent type>' lvalue
        (DeclRefExpr 0x9eba460 <col:12> 'const __cache_type *' lvalue Var 0x9eb8c80 '__lc' 'const __cache_type *')))
    (WhileStmt 0x9ebb580 <line:213:2, line:258:4>
      <<<NULL>>>
      (UnaryOperator 0x9eba4f0 <line:213:9, col:10> '_Bool' prefix '!'
        (ImplicitCastExpr 0x9eba4e0 <col:10> '_Bool' <LValueToRValue>
          (DeclRefExpr 0x9eba4c4 <col:10> '_Bool' lvalue Var 0x9eb8e60 '__testeof' '_Bool')))
      (CompoundStmt 0x9ebb560 <line:214:4, line:258:4>
        (DeclStmt 0x9eba618 <line:215:6, col:54>
          0x9eba520 "const int __digit =
            (CallExpr 0x9eba5f0 <col:26, col:53> '<dependent type>'
              (UnresolvedMemberExpr 0x9eba568 <col:26> '<bound member function type>' lvalue)
              (DeclRefExpr 0x9eba5a8 <col:34> 'const char_type *' lvalue Var 0x9eba350 '__lit_zero' 'const char_type *')
              (IntegerLiteral 0x9eba5c0 <col:46> 'int' 10)
              (DeclRefExpr 0x9eba5d8 <col:50> 'char_type':'_CharT' lvalue Var 0x9eb8df0 '__c' 'char_type':'_CharT'))")
        (IfStmt 0x9ebb3b8 <line:216:6, line:252:8>
          <<<NULL>>>
          (BinaryOperator 0x9eba680 <line:216:10, col:22> '_Bool' '!='
            (ImplicitCastExpr 0x9eba670 <col:10> 'int' <LValueToRValue>
              (DeclRefExpr 0x9eba628 <col:10> 'const int' lvalue Var 0x9eba520 '__digit' 'const int'))
            (UnaryOperator 0x9eba658 <col:21, col:22> 'int' prefix '-'
              (IntegerLiteral 0x9eba640 <col:22> 'int' 1)))
          (CompoundStmt 0x9eba7b8 <line:217:8, line:220:8>
            (CXXOperatorCallExpr 0x9eba750 <line:218:3, col:19> 'class std::basic_string<char>' lvalue
              (ImplicitCastExpr 0x9eba740 <col:10, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9eba728 <col:10, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0x9da46d0 'operator+=' 'class std::basic_string<char> &(char)'))
              (DeclRefExpr 0x9eba698 <col:3> 'string':'class std::basic_string<char>' lvalue ParmVar 0x9eb8750 '__xtrc' 'string &')
              (ImplicitCastExpr 0x9eba718 <col:13, col:19> 'char':'char' <IntegralCast>
                (BinaryOperator 0x9eba700 <col:13, col:19> 'int' '+'
                  (ImplicitCastExpr 0x9eba6e0 <col:13> 'int' <IntegralCast>
                    (CharacterLiteral 0x9eba6b0 <col:13> 'char'48))
                  (ImplicitCastExpr 0x9eba6f0 <col:19> 'int' <LValueToRValue>
                    (DeclRefExpr 0x9eba6c4 <col:19> 'const int' lvalue Var 0x9eba520 '__digit' 'const int')))))
            (BinaryOperator 0x9eba7a0 <line:219:3, col:22> '_Bool' lvalue '='
              (DeclRefExpr 0x9eba774 <col:3> '_Bool' lvalue Var 0x9eb98f0 '__found_mantissa' '_Bool')
              (CXXBoolLiteralExpr 0x9eba790 <col:22> '_Bool' true)))
          (IfStmt 0x9ebb398 <line:221:11, line:252:8>
            <<<NULL>>>
            (BinaryOperator 0x9eba958 <line:221:15, line:222:28> '<dependent type>' '&&'
              (BinaryOperator 0x9eba900 <line:221:15, line:222:12> '<dependent type>' '&&'
                (CXXOperatorCallExpr 0x9eba898 <line:221:15, col:28> '<dependent type>'
                  (UnresolvedLookupExpr 0x9eba838 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30 0x9d5e270 0x9d5ece0 0x9d5f520 0x9d5fa90 0x9e73300)
                  (DeclRefExpr 0x9eba7d0 <col:15> 'char_type':'_CharT' lvalue Var 0x9eb8df0 '__c' 'char_type':'_CharT')
                  (CXXDependentScopeMemberExpr 0x9eba800 <col:22, col:28> '<dependent type>' lvalue
                    (DeclRefExpr 0x9eba7e8 <col:22> 'const __cache_type *' lvalue Var 0x9eb8c80 '__lc' 'const __cache_type *')))
                (UnaryOperator 0x9eba8e8 <line:222:11, col:12> '_Bool' prefix '!'
                  (ImplicitCastExpr 0x9eba8d8 <col:12> '_Bool' <LValueToRValue>
                    (DeclRefExpr 0x9eba8bc <col:12> '_Bool' lvalue Var 0x9eba120 '__found_dec' '_Bool'))))
              (UnaryOperator 0x9eba940 <col:27, col:28> '_Bool' prefix '!'
                (ImplicitCastExpr 0x9eba930 <col:28> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0x9eba918 <col:28> '_Bool' lvalue Var 0x9eba180 '__found_sci' '_Bool'))))
            (CompoundStmt 0x9ebaa30 <line:223:8, line:226:8>
              (CXXOperatorCallExpr 0x9eba9c8 <line:224:3, col:13> 'class std::basic_string<char>' lvalue
                (ImplicitCastExpr 0x9eba9b8 <col:10, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                  (DeclRefExpr 0x9eba9a0 <col:10, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0x9da46d0 'operator+=' 'class std::basic_string<char> &(char)'))
                (DeclRefExpr 0x9eba970 <col:3> 'string':'class std::basic_string<char>' lvalue ParmVar 0x9eb8750 '__xtrc' 'string &')
                (CharacterLiteral 0x9eba988 <col:13> 'char'46))
              (BinaryOperator 0x9ebaa18 <line:225:3, col:17> '_Bool' lvalue '='
                (DeclRefExpr 0x9eba9ec <col:3> '_Bool' lvalue Var 0x9eba120 '__found_dec' '_Bool')
                (CXXBoolLiteralExpr 0x9ebaa08 <col:17> '_Bool' true)))
            (IfStmt 0x9ebb378 <line:227:11, line:252:8>
              <<<NULL>>>
              (BinaryOperator 0x9ebad08 <line:227:15, line:229:27> '<dependent type>' '&&'
                (BinaryOperator 0x9ebacd8 <line:227:15, line:229:12> '<dependent type>' '&&'
                  (ParenExpr 0x9ebac80 <line:227:15, line:228:43> '<dependent type>'
                    (BinaryOperator 0x9ebac68 <line:227:16, line:228:42> '<dependent type>' '||'
                      (CXXOperatorCallExpr 0x9ebab30 <line:227:16, col:46> '<dependent type>'
                        (UnresolvedLookupExpr 0x9ebaad0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30 0x9d5e270 0x9d5ece0 0x9d5f520 0x9d5fa90 0x9e73300)
                        (DeclRefExpr 0x9ebaa48 <col:16> 'char_type':'_CharT' lvalue Var 0x9eb8df0 '__c' 'char_type':'_CharT')
                        (ArraySubscriptExpr 0x9ebaab8 <col:23, col:46> '<dependent type>' lvalue
                          (DeclRefExpr 0x9ebaa60 <col:23> 'const _CharT *' lvalue Var 0x9eb8d50 '__lit' 'const _CharT *')
                          (DeclRefExpr 0x9ebaa94 <col:29, col:41> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x9e941f0 '_S_ie' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))
                      (CXXOperatorCallExpr 0x9ebac40 <line:228:12, col:42> '<dependent type>'
                        (UnresolvedLookupExpr 0x9ebabe0 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30 0x9d5e270 0x9d5ece0 0x9d5f520 0x9d5fa90 0x9e73300)
                        (DeclRefExpr 0x9ebab54 <col:12> 'char_type':'_CharT' lvalue Var 0x9eb8df0 '__c' 'char_type':'_CharT')
                        (ArraySubscriptExpr 0x9ebabc8 <col:19, col:42> '<dependent type>' lvalue
                          (DeclRefExpr 0x9ebab6c <col:19> 'const _CharT *' lvalue Var 0x9eb8d50 '__lit' 'const _CharT *')
                          (DeclRefExpr 0x9ebaba4 <col:25, col:37> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x9e94270 '_S_iE' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))))
                  (UnaryOperator 0x9ebacc0 <line:229:11, col:12> '_Bool' prefix '!'
                    (ImplicitCastExpr 0x9ebacb0 <col:12> '_Bool' <LValueToRValue>
                      (DeclRefExpr 0x9ebac94 <col:12> '_Bool' lvalue Var 0x9eba180 '__found_sci' '_Bool'))))
                (DeclRefExpr 0x9ebacf0 <col:27> '_Bool' lvalue Var 0x9eb98f0 '__found_mantissa' '_Bool'))
              (CompoundStmt 0x9ebb350 <line:230:8, line:250:8>
                (CXXOperatorCallExpr 0x9ebad78 <line:232:3, col:13> 'class std::basic_string<char>' lvalue
                  (ImplicitCastExpr 0x9ebad68 <col:10, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                    (DeclRefExpr 0x9ebad50 <col:10, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0x9da46d0 'operator+=' 'class std::basic_string<char> &(char)'))
                  (DeclRefExpr 0x9ebad20 <col:3> 'string':'class std::basic_string<char>' lvalue ParmVar 0x9eb8750 '__xtrc' 'string &')
                  (CharacterLiteral 0x9ebad38 <col:13> 'char'101))
                (BinaryOperator 0x9ebadc8 <line:233:3, col:17> '_Bool' lvalue '='
                  (DeclRefExpr 0x9ebad9c <col:3> '_Bool' lvalue Var 0x9eba180 '__found_sci' '_Bool')
                  (CXXBoolLiteralExpr 0x9ebadb8 <col:17> '_Bool' true))
                (IfStmt 0x9ebb330 <line:236:3, line:249:5>
                  <<<NULL>>>
                  (CXXOperatorCallExpr 0x9ebae80 <line:236:7, col:18> '<dependent type>'
                    (UnresolvedLookupExpr 0x9ebae28 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bacde0 0x9bc3130 0x9bc62c0 0x9c11360 0x9c32300 0x9c32670 0x9d60120 0x9d60630 0x9d60b40 0x9e73820)
                    (UnaryOperator 0x9ebadf8 <col:7, col:9> '<dependent type>' prefix '++'
                      (DeclRefExpr 0x9ebade0 <col:9> '_InIter' lvalue ParmVar 0x9eb8600 '__beg' '_InIter'))
                    (DeclRefExpr 0x9ebae0c <col:18> '_InIter' lvalue ParmVar 0x9eb8640 '__end' '_InIter'))
                  (CompoundStmt 0x9ebb2b0 <line:237:5, line:244:5>
                    (BinaryOperator 0x9ebaef0 <line:238:7, col:14> '<dependent type>' '='
                      (DeclRefExpr 0x9ebaea4 <col:7> 'char_type':'_CharT' lvalue Var 0x9eb8df0 '__c' 'char_type':'_CharT')
                      (UnaryOperator 0x9ebaed8 <col:13, col:14> '<dependent type>' prefix '*'
                        (DeclRefExpr 0x9ebaebc <col:14> '_InIter' lvalue ParmVar 0x9eb8600 '__beg' '_InIter')))
                    (DeclStmt 0x9ebb058 <line:239:7, col:61>
                      0x9ebaf10 "const bool __plus =
                        (CXXOperatorCallExpr 0x9ebb030 <col:27, col:60> '<dependent type>'
                          (UnresolvedLookupExpr 0x9ebafd0 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30 0x9d5e270 0x9d5ece0 0x9d5f520 0x9d5fa90 0x9e73300)
                          (DeclRefExpr 0x9ebaf44 <col:27> 'char_type':'_CharT' lvalue Var 0x9eb8df0 '__c' 'char_type':'_CharT')
                          (ArraySubscriptExpr 0x9ebafb8 <col:34, col:60> '<dependent type>' lvalue
                            (DeclRefExpr 0x9ebaf5c <col:34> 'const _CharT *' lvalue Var 0x9eb8d50 '__lit' 'const _CharT *')
                            (DeclRefExpr 0x9ebaf94 <col:40, col:52> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x9e940b0 '_S_iplus' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))")
                    (IfStmt 0x9ebb290 <line:240:7, line:243:9>
                      <<<NULL>>>
                      (BinaryOperator 0x9ebb190 <line:240:11, col:55> '<dependent type>' '||'
                        (DeclRefExpr 0x9ebb068 <col:11> 'const _Bool' lvalue Var 0x9ebaf10 '__plus' 'const _Bool')
                        (CXXOperatorCallExpr 0x9ebb168 <col:21, col:55> '<dependent type>'
                          (UnresolvedLookupExpr 0x9ebb108 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30 0x9d5e270 0x9d5ece0 0x9d5f520 0x9d5fa90 0x9e73300)
                          (DeclRefExpr 0x9ebb080 <col:21> 'char_type':'_CharT' lvalue Var 0x9eb8df0 '__c' 'char_type':'_CharT')
                          (ArraySubscriptExpr 0x9ebb0f0 <col:28, col:55> '<dependent type>' lvalue
                            (DeclRefExpr 0x9ebb098 <col:28> 'const _CharT *' lvalue Var 0x9eb8d50 '__lit' 'const _CharT *')
                            (DeclRefExpr 0x9ebb0cc <col:34, col:46> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x9e94070 '_S_iminus' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>'))))
                      (CXXOperatorCallExpr 0x9ebb260 <line:241:9, col:34> 'class std::basic_string<char>' lvalue
                        (ImplicitCastExpr 0x9ebb250 <col:16, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                          (DeclRefExpr 0x9ebb238 <col:16, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0x9da46d0 'operator+=' 'class std::basic_string<char> &(char)'))
                        (DeclRefExpr 0x9ebb1a8 <col:9> 'string':'class std::basic_string<char>' lvalue ParmVar 0x9eb8750 '__xtrc' 'string &')
                        (ConditionalOperator 0x9ebb218 <col:19, col:34> 'char'
                          (ImplicitCastExpr 0x9ebb208 <col:19> '_Bool' <LValueToRValue>
                            (DeclRefExpr 0x9ebb1c0 <col:19> 'const _Bool' lvalue Var 0x9ebaf10 '__plus' 'const _Bool'))
                          (CharacterLiteral 0x9ebb1d8 <col:28> 'char'43)
                          (CharacterLiteral 0x9ebb1f0 <col:34> 'char'45)))
                      (ContinueStmt 0x9ebb288 <line:243:9>)))
                  (CompoundStmt 0x9ebb318 <line:246:5, line:249:5>
                    (BinaryOperator 0x9ebb2f8 <line:247:7, col:19> '_Bool' lvalue '='
                      (DeclRefExpr 0x9ebb2cc <col:7> '_Bool' lvalue Var 0x9eb8e60 '__testeof' '_Bool')
                      (CXXBoolLiteralExpr 0x9ebb2e8 <col:19> '_Bool' true))
                    (BreakStmt 0x9ebb310 <line:248:7>))))
              (BreakStmt 0x9ebb370 <line:252:8>))))
        (IfStmt 0x9ebb540 <line:254:6, line:257:20>
          <<<NULL>>>
          (CXXOperatorCallExpr 0x9ebb478 <line:254:10, col:21> '<dependent type>'
            (UnresolvedLookupExpr 0x9ebb420 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bacde0 0x9bc3130 0x9bc62c0 0x9c11360 0x9c32300 0x9c32670 0x9d60120 0x9d60630 0x9d60b40 0x9e73820)
            (UnaryOperator 0x9ebb3f0 <col:10, col:12> '<dependent type>' prefix '++'
              (DeclRefExpr 0x9ebb3d4 <col:12> '_InIter' lvalue ParmVar 0x9eb8600 '__beg' '_InIter'))
            (DeclRefExpr 0x9ebb404 <col:21> '_InIter' lvalue ParmVar 0x9eb8640 '__end' '_InIter'))
          (BinaryOperator 0x9ebb4e8 <line:255:8, col:15> '<dependent type>' '='
            (DeclRefExpr 0x9ebb49c <col:8> 'char_type':'_CharT' lvalue Var 0x9eb8df0 '__c' 'char_type':'_CharT')
            (UnaryOperator 0x9ebb4d0 <col:14, col:15> '<dependent type>' prefix '*'
              (DeclRefExpr 0x9ebb4b4 <col:15> '_InIter' lvalue ParmVar 0x9eb8600 '__beg' '_InIter')))
          (BinaryOperator 0x9ebb528 <line:257:8, col:20> '_Bool' lvalue '='
            (DeclRefExpr 0x9ebb500 <col:8> '_Bool' lvalue Var 0x9eb8e60 '__testeof' '_Bool')
            (CXXBoolLiteralExpr 0x9ebb518 <col:20> '_Bool' true)))))
    (WhileStmt 0x9ebd190 <line:260:2, line:348:4>
      <<<NULL>>>
      (UnaryOperator 0x9ebb5c0 <line:260:9, col:10> '_Bool' prefix '!'
        (ImplicitCastExpr 0x9ebb5b0 <col:10> '_Bool' <LValueToRValue>
          (DeclRefExpr 0x9ebb594 <col:10> '_Bool' lvalue Var 0x9eb8e60 '__testeof' '_Bool')))
      (CompoundStmt 0x9ebd178 <line:261:4, line:348:4>
        (IfStmt 0x9ebcfd0 <line:264:6, line:342:8>
          <<<NULL>>>
          (BinaryOperator 0x9ebb718 <line:264:10, col:48> '<dependent type>' '&&'
            (CXXDependentScopeMemberExpr 0x9ebb5f0 <col:10, col:16> '<dependent type>' lvalue
              (DeclRefExpr 0x9ebb5d4 <col:10> 'const __cache_type *' lvalue Var 0x9eb8c80 '__lc' 'const __cache_type *'))
            (CXXOperatorCallExpr 0x9ebb6f0 <col:35, col:48> '<dependent type>'
              (UnresolvedLookupExpr 0x9ebb690 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30 0x9d5e270 0x9d5ece0 0x9d5f520 0x9d5fa90 0x9e73300)
              (DeclRefExpr 0x9ebb624 <col:35> 'char_type':'_CharT' lvalue Var 0x9eb8df0 '__c' 'char_type':'_CharT')
              (CXXDependentScopeMemberExpr 0x9ebb658 <col:42, col:48> '<dependent type>' lvalue
                (DeclRefExpr 0x9ebb63c <col:42> 'const __cache_type *' lvalue Var 0x9eb8c80 '__lc' 'const __cache_type *'))))
          (CompoundStmt 0x9ebb9f8 <line:265:8, line:285:8>
            (IfStmt 0x9ebb9d8 <line:266:3, line:284:5>
              <<<NULL>>>
              (BinaryOperator 0x9ebb7b0 <line:266:7, col:24> '_Bool' '&&'
                (UnaryOperator 0x9ebb758 <col:7, col:8> '_Bool' prefix '!'
                  (ImplicitCastExpr 0x9ebb748 <col:8> '_Bool' <LValueToRValue>
                    (DeclRefExpr 0x9ebb730 <col:8> '_Bool' lvalue Var 0x9eba120 '__found_dec' '_Bool')))
                (UnaryOperator 0x9ebb798 <col:23, col:24> '_Bool' prefix '!'
                  (ImplicitCastExpr 0x9ebb788 <col:24> '_Bool' <LValueToRValue>
                    (DeclRefExpr 0x9ebb76c <col:24> '_Bool' lvalue Var 0x9eba180 '__found_sci' '_Bool'))))
              (CompoundStmt 0x9ebb9b8 <line:267:5, line:282:5>
                (IfStmt 0x9ebb998 <line:270:7, line:281:9>
                  <<<NULL>>>
                  (ImplicitCastExpr 0x9ebb7f0 <line:270:11> '_Bool' <IntegralToBoolean>
                    (ImplicitCastExpr 0x9ebb7e0 <col:11> 'int' <LValueToRValue>
                      (DeclRefExpr 0x9ebb7c8 <col:11> 'int' lvalue Var 0x9eb9960 '__sep_pos' 'int')))
                  (CompoundStmt 0x9ebb908 <line:271:9, line:274:9>
                    (CXXOperatorCallExpr 0x9ebb898 <line:272:4, col:51> 'class std::basic_string<char>' lvalue
                      (ImplicitCastExpr 0x9ebb888 <col:21, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                        (DeclRefExpr 0x9ebb870 <col:21, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0x9da46d0 'operator+=' 'class std::basic_string<char> &(char)'))
                      (DeclRefExpr 0x9ebb7fc <col:4> 'string':'class std::basic_string<char>' lvalue Var 0x9eba1e0 '__found_grouping' 'string':'class std::basic_string<char>')
                      (CXXStaticCastExpr 0x9ebb858 <col:24, col:51> 'char' static_cast<char> <NoOp>
                        (ImplicitCastExpr 0x9ebb848 <col:42> 'char' <IntegralCast>
                          (ImplicitCastExpr 0x9ebb838 <col:42> 'int' <LValueToRValue>
                            (DeclRefExpr 0x9ebb814 <col:42> 'int' lvalue Var 0x9eb9960 '__sep_pos' 'int')))))
                    (BinaryOperator 0x9ebb8f0 <line:273:4, col:16> 'int' lvalue '='
                      (DeclRefExpr 0x9ebb8bc <col:4> 'int' lvalue Var 0x9eb9960 '__sep_pos' 'int')
                      (IntegerLiteral 0x9ebb8d8 <col:16> 'int' 0)))
                  (CompoundStmt 0x9ebb980 <line:276:9, line:281:9>
                    (CXXMemberCallExpr 0x9ebb958 <line:279:4, col:17> 'void'
                      (MemberExpr 0x9ebb938 <col:4, col:11> '<bound member function type>' .clear 0x9da3300
                        (DeclRefExpr 0x9ebb920 <col:4> 'string':'class std::basic_string<char>' lvalue ParmVar 0x9eb8750 '__xtrc' 'string &')))
                    (BreakStmt 0x9ebb978 <line:280:4>))))
              (BreakStmt 0x9ebb9d0 <line:284:5>)))
          (IfStmt 0x9ebcfb0 <line:286:11, line:342:8>
            <<<NULL>>>
            (CXXOperatorCallExpr 0x9ebbad8 <line:286:15, col:28> '<dependent type>'
              (UnresolvedLookupExpr 0x9ebba78 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30 0x9d5e270 0x9d5ece0 0x9d5f520 0x9d5fa90 0x9e73300)
              (DeclRefExpr 0x9ebba0c <col:15> 'char_type':'_CharT' lvalue Var 0x9eb8df0 '__c' 'char_type':'_CharT')
              (CXXDependentScopeMemberExpr 0x9ebba40 <col:22, col:28> '<dependent type>' lvalue
                (DeclRefExpr 0x9ebba24 <col:22> 'const __cache_type *' lvalue Var 0x9eb8c80 '__lc' 'const __cache_type *')))
            (CompoundStmt 0x9ebbe10 <line:287:8, line:300:8>
              (IfStmt 0x9ebbdf0 <line:288:3, line:299:5>
                <<<NULL>>>
                (BinaryOperator 0x9ebbb80 <line:288:7, col:24> '_Bool' '&&'
                  (UnaryOperator 0x9ebbb28 <col:7, col:8> '_Bool' prefix '!'
                    (ImplicitCastExpr 0x9ebbb18 <col:8> '_Bool' <LValueToRValue>
                      (DeclRefExpr 0x9ebbafc <col:8> '_Bool' lvalue Var 0x9eba120 '__found_dec' '_Bool')))
                  (UnaryOperator 0x9ebbb68 <col:23, col:24> '_Bool' prefix '!'
                    (ImplicitCastExpr 0x9ebbb58 <col:24> '_Bool' <LValueToRValue>
                      (DeclRefExpr 0x9ebbb3c <col:24> '_Bool' lvalue Var 0x9eba180 '__found_sci' '_Bool'))))
                (CompoundStmt 0x9ebbdc8 <line:289:5, line:297:5>
                  (IfStmt 0x9ebbce8 <line:293:7, line:294:56>
                    <<<NULL>>>
                    (ImplicitCastExpr 0x9ebbc18 <line:293:11, col:33> '_Bool' <IntegralToBoolean>
                      (CXXMemberCallExpr 0x9ebbbd0 <col:11, col:33> 'size_type':'unsigned int'
                        (MemberExpr 0x9ebbbb0 <col:11, col:28> '<bound member function type>' .size 0x9da2750
                          (ImplicitCastExpr 0x9ebbc08 <col:11> 'const class std::basic_string<char>' lvalue <NoOp>
                            (DeclRefExpr 0x9ebbb98 <col:11> 'string':'class std::basic_string<char>' lvalue Var 0x9eba1e0 '__found_grouping' 'string':'class std::basic_string<char>')))))
                    (CXXOperatorCallExpr 0x9ebbcc0 <line:294:9, col:56> 'class std::basic_string<char>' lvalue
                      (ImplicitCastExpr 0x9ebbcb0 <col:26, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                        (DeclRefExpr 0x9ebbc98 <col:26, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0x9da46d0 'operator+=' 'class std::basic_string<char> &(char)'))
                      (DeclRefExpr 0x9ebbc24 <col:9> 'string':'class std::basic_string<char>' lvalue Var 0x9eba1e0 '__found_grouping' 'string':'class std::basic_string<char>')
                      (CXXStaticCastExpr 0x9ebbc80 <col:29, col:56> 'char' static_cast<char> <NoOp>
                        (ImplicitCastExpr 0x9ebbc70 <col:47> 'char' <IntegralCast>
                          (ImplicitCastExpr 0x9ebbc60 <col:47> 'int' <LValueToRValue>
                            (DeclRefExpr 0x9ebbc3c <col:47> 'int' lvalue Var 0x9eb9960 '__sep_pos' 'int')))))
                    <<<NULL>>>)
                  (CXXOperatorCallExpr 0x9ebbd60 <line:295:7, col:17> 'class std::basic_string<char>' lvalue
                    (ImplicitCastExpr 0x9ebbd50 <col:14, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                      (DeclRefExpr 0x9ebbd38 <col:14, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0x9da46d0 'operator+=' 'class std::basic_string<char> &(char)'))
                    (DeclRefExpr 0x9ebbd04 <col:7> 'string':'class std::basic_string<char>' lvalue ParmVar 0x9eb8750 '__xtrc' 'string &')
                    (CharacterLiteral 0x9ebbd20 <col:17> 'char'46))
                  (BinaryOperator 0x9ebbdb0 <line:296:7, col:21> '_Bool' lvalue '='
                    (DeclRefExpr 0x9ebbd84 <col:7> '_Bool' lvalue Var 0x9eba120 '__found_dec' '_Bool')
                    (CXXBoolLiteralExpr 0x9ebbda0 <col:21> '_Bool' true)))
                (BreakStmt 0x9ebbde8 <line:299:5>)))
            (CompoundStmt 0x9ebcf98 <line:302:8, line:342:8>
              (DeclStmt 0x9ebbf60 <line:303:3, line:304:45>
                0x9ebbe40 "const char_type *__q =
                  (CallExpr 0x9ebbf38 <col:5, col:44> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9ebbeb8 <col:5, col:20> '<dependent type>' lvalue)
                    (DeclRefExpr 0x9ebbeec <col:25> 'const char_type *' lvalue Var 0x9eba350 '__lit_zero' 'const char_type *')
                    (IntegerLiteral 0x9ebbf08 <col:37> 'int' 10)
                    (DeclRefExpr 0x9ebbf20 <col:41> 'char_type':'_CharT' lvalue Var 0x9eb8df0 '__c' 'char_type':'_CharT'))")
              (IfStmt 0x9ebcf78 <line:305:3, line:341:5>
                <<<NULL>>>
                (DeclRefExpr 0x9ebbf70 <line:305:7> 'const char_type *' lvalue Var 0x9ebbe40 '__q' 'const char_type *')
                (CompoundStmt 0x9ebc160 <line:306:5, line:310:5>
                  (CompoundAssignOperator 0x9ebc0d0 <line:307:7, col:40> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                    (DeclRefExpr 0x9ebbf88 <col:7> 'string':'class std::basic_string<char>' lvalue ParmVar 0x9eb8750 '__xtrc' 'string &')
                    (CXXOperatorCallExpr 0x9ebc0a8 <col:17, col:40> '<dependent type>'
                      (UnresolvedLookupExpr 0x9ebc060 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d86680 0x9d87280 0x9d5d090 0x9d5d890)
                      (CharacterLiteral 0x9ebbfa0 <col:17> 'char'48)
                      (ParenExpr 0x9ebc048 <col:23, col:40> '<dependent type>'
                        (CXXOperatorCallExpr 0x9ebc020 <col:24, col:30> '<dependent type>'
                          (UnresolvedLookupExpr 0x9ebbfe8 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
                          (DeclRefExpr 0x9ebbfb4 <col:24> 'const char_type *' lvalue Var 0x9ebbe40 '__q' 'const char_type *')
                          (DeclRefExpr 0x9ebbfcc <col:30> 'const char_type *' lvalue Var 0x9eba350 '__lit_zero' 'const char_type *')))))
                  (BinaryOperator 0x9ebc118 <line:308:7, col:26> '_Bool' lvalue '='
                    (DeclRefExpr 0x9ebc0f0 <col:7> '_Bool' lvalue Var 0x9eb98f0 '__found_mantissa' '_Bool')
                    (CXXBoolLiteralExpr 0x9ebc108 <col:26> '_Bool' true))
                  (UnaryOperator 0x9ebc148 <line:309:7, col:9> 'int' lvalue prefix '++'
                    (DeclRefExpr 0x9ebc130 <col:9> 'int' lvalue Var 0x9eb9960 '__sep_pos' 'int')))
                (IfStmt 0x9ebcf58 <line:311:8, line:341:5>
                  <<<NULL>>>
                  (BinaryOperator 0x9ebc440 <line:311:12, line:313:24> '<dependent type>' '&&'
                    (BinaryOperator 0x9ebc410 <line:311:12, line:313:9> '<dependent type>' '&&'
                      (ParenExpr 0x9ebc3b8 <line:311:12, line:312:40> '<dependent type>'
                        (BinaryOperator 0x9ebc3a0 <line:311:13, line:312:39> '<dependent type>' '||'
                          (CXXOperatorCallExpr 0x9ebc268 <line:311:13, col:43> '<dependent type>'
                            (UnresolvedLookupExpr 0x9ebc208 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30 0x9d5e270 0x9d5ece0 0x9d5f520 0x9d5fa90 0x9e73300)
                            (DeclRefExpr 0x9ebc17c <col:13> 'char_type':'_CharT' lvalue Var 0x9eb8df0 '__c' 'char_type':'_CharT')
                            (ArraySubscriptExpr 0x9ebc1f0 <col:20, col:43> '<dependent type>' lvalue
                              (DeclRefExpr 0x9ebc194 <col:20> 'const _CharT *' lvalue Var 0x9eb8d50 '__lit' 'const _CharT *')
                              (DeclRefExpr 0x9ebc1cc <col:26, col:38> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x9e941f0 '_S_ie' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))
                          (CXXOperatorCallExpr 0x9ebc378 <line:312:9, col:39> '<dependent type>'
                            (UnresolvedLookupExpr 0x9ebc318 <col:13, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30 0x9d5e270 0x9d5ece0 0x9d5f520 0x9d5fa90 0x9e73300)
                            (DeclRefExpr 0x9ebc28c <col:9> 'char_type':'_CharT' lvalue Var 0x9eb8df0 '__c' 'char_type':'_CharT')
                            (ArraySubscriptExpr 0x9ebc300 <col:16, col:39> '<dependent type>' lvalue
                              (DeclRefExpr 0x9ebc2a4 <col:16> 'const _CharT *' lvalue Var 0x9eb8d50 '__lit' 'const _CharT *')
                              (DeclRefExpr 0x9ebc2dc <col:22, col:34> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x9e94270 '_S_iE' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))))
                      (UnaryOperator 0x9ebc3f8 <line:313:8, col:9> '_Bool' prefix '!'
                        (ImplicitCastExpr 0x9ebc3e8 <col:9> '_Bool' <LValueToRValue>
                          (DeclRefExpr 0x9ebc3cc <col:9> '_Bool' lvalue Var 0x9eba180 '__found_sci' '_Bool'))))
                    (DeclRefExpr 0x9ebc428 <col:24> '_Bool' lvalue Var 0x9eb98f0 '__found_mantissa' '_Bool'))
                  (CompoundStmt 0x9ebcf30 <line:314:5, line:339:5>
                    (IfStmt 0x9ebc5e8 <line:316:7, line:317:56>
                      <<<NULL>>>
                      (BinaryOperator 0x9ebc510 <line:316:11, col:39> '_Bool' '&&'
                        (ImplicitCastExpr 0x9ebc500 <col:11, col:33> '_Bool' <IntegralToBoolean>
                          (CXXMemberCallExpr 0x9ebc490 <col:11, col:33> 'size_type':'unsigned int'
                            (MemberExpr 0x9ebc470 <col:11, col:28> '<bound member function type>' .size 0x9da2750
                              (ImplicitCastExpr 0x9ebc4b0 <col:11> 'const class std::basic_string<char>' lvalue <NoOp>
                                (DeclRefExpr 0x9ebc458 <col:11> 'string':'class std::basic_string<char>' lvalue Var 0x9eba1e0 '__found_grouping' 'string':'class std::basic_string<char>')))))
                        (UnaryOperator 0x9ebc4e8 <col:38, col:39> '_Bool' prefix '!'
                          (ImplicitCastExpr 0x9ebc4d8 <col:39> '_Bool' <LValueToRValue>
                            (DeclRefExpr 0x9ebc4bc <col:39> '_Bool' lvalue Var 0x9eba120 '__found_dec' '_Bool'))))
                      (CXXOperatorCallExpr 0x9ebc5c0 <line:317:9, col:56> 'class std::basic_string<char>' lvalue
                        (ImplicitCastExpr 0x9ebc5b0 <col:26, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                          (DeclRefExpr 0x9ebc598 <col:26, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0x9da46d0 'operator+=' 'class std::basic_string<char> &(char)'))
                        (DeclRefExpr 0x9ebc528 <col:9> 'string':'class std::basic_string<char>' lvalue Var 0x9eba1e0 '__found_grouping' 'string':'class std::basic_string<char>')
                        (CXXStaticCastExpr 0x9ebc580 <col:29, col:56> 'char' static_cast<char> <NoOp>
                          (ImplicitCastExpr 0x9ebc570 <col:47> 'char' <IntegralCast>
                            (ImplicitCastExpr 0x9ebc560 <col:47> 'int' <LValueToRValue>
                              (DeclRefExpr 0x9ebc540 <col:47> 'int' lvalue Var 0x9eb9960 '__sep_pos' 'int')))))
                      <<<NULL>>>)
                    (CXXOperatorCallExpr 0x9ebc660 <line:318:7, col:17> 'class std::basic_string<char>' lvalue
                      (ImplicitCastExpr 0x9ebc650 <col:14, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                        (DeclRefExpr 0x9ebc638 <col:14, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0x9da46d0 'operator+=' 'class std::basic_string<char> &(char)'))
                      (DeclRefExpr 0x9ebc604 <col:7> 'string':'class std::basic_string<char>' lvalue ParmVar 0x9eb8750 '__xtrc' 'string &')
                      (CharacterLiteral 0x9ebc620 <col:17> 'char'101))
                    (BinaryOperator 0x9ebc6b0 <line:319:7, col:21> '_Bool' lvalue '='
                      (DeclRefExpr 0x9ebc684 <col:7> '_Bool' lvalue Var 0x9eba180 '__found_sci' '_Bool')
                      (CXXBoolLiteralExpr 0x9ebc6a0 <col:21> '_Bool' true))
                    (IfStmt 0x9ebcf10 <line:322:7, line:338:9>
                      <<<NULL>>>
                      (CXXOperatorCallExpr 0x9ebc768 <line:322:11, col:22> '<dependent type>'
                        (UnresolvedLookupExpr 0x9ebc710 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bacde0 0x9bc3130 0x9bc62c0 0x9c11360 0x9c32300 0x9c32670 0x9d60120 0x9d60630 0x9d60b40 0x9e73820)
                        (UnaryOperator 0x9ebc6e0 <col:11, col:13> '<dependent type>' prefix '++'
                          (DeclRefExpr 0x9ebc6c8 <col:13> '_InIter' lvalue ParmVar 0x9eb8600 '__beg' '_InIter'))
                        (DeclRefExpr 0x9ebc6f4 <col:22> '_InIter' lvalue ParmVar 0x9eb8640 '__end' '_InIter'))
                      (CompoundStmt 0x9ebce90 <line:323:9, line:333:9>
                        (BinaryOperator 0x9ebc7d8 <line:324:4, col:11> '<dependent type>' '='
                          (DeclRefExpr 0x9ebc78c <col:4> 'char_type':'_CharT' lvalue Var 0x9eb8df0 '__c' 'char_type':'_CharT')
                          (UnaryOperator 0x9ebc7c0 <col:10, col:11> '<dependent type>' prefix '*'
                            (DeclRefExpr 0x9ebc7a4 <col:11> '_InIter' lvalue ParmVar 0x9eb8600 '__beg' '_InIter')))
                        (DeclStmt 0x9ebc948 <line:325:4, col:58>
                          0x9ebc800 "const bool __plus =
                            (CXXOperatorCallExpr 0x9ebc920 <col:24, col:57> '<dependent type>'
                              (UnresolvedLookupExpr 0x9ebc8c0 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30 0x9d5e270 0x9d5ece0 0x9d5f520 0x9d5fa90 0x9e73300)
                              (DeclRefExpr 0x9ebc834 <col:24> 'char_type':'_CharT' lvalue Var 0x9eb8df0 '__c' 'char_type':'_CharT')
                              (ArraySubscriptExpr 0x9ebc8a8 <col:31, col:57> '<dependent type>' lvalue
                                (DeclRefExpr 0x9ebc84c <col:31> 'const _CharT *' lvalue Var 0x9eb8d50 '__lit' 'const _CharT *')
                                (DeclRefExpr 0x9ebc884 <col:37, col:49> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x9e940b0 '_S_iplus' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))")
                        (IfStmt 0x9ebce70 <line:326:4, line:332:6>
                          <<<NULL>>>
                          (BinaryOperator 0x9ebcd70 <line:326:8, line:329:42> '<dependent type>' '&&'
                            (BinaryOperator 0x9ebcc38 <line:326:8, line:328:38> '<dependent type>' '&&'
                              (ParenExpr 0x9ebca98 <line:326:8, col:54> '<dependent type>'
                                (BinaryOperator 0x9ebca80 <col:9, col:53> '<dependent type>' '||'
                                  (DeclRefExpr 0x9ebc958 <col:9> 'const _Bool' lvalue Var 0x9ebc800 '__plus' 'const _Bool')
                                  (CXXOperatorCallExpr 0x9ebca58 <col:19, col:53> '<dependent type>'
                                    (UnresolvedLookupExpr 0x9ebc9f8 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30 0x9d5e270 0x9d5ece0 0x9d5f520 0x9d5fa90 0x9e73300)
                                    (DeclRefExpr 0x9ebc970 <col:19> 'char_type':'_CharT' lvalue Var 0x9eb8df0 '__c' 'char_type':'_CharT')
                                    (ArraySubscriptExpr 0x9ebc9e0 <col:26, col:53> '<dependent type>' lvalue
                                      (DeclRefExpr 0x9ebc988 <col:26> 'const _CharT *' lvalue Var 0x9eb8d50 '__lit' 'const _CharT *')
                                      (DeclRefExpr 0x9ebc9bc <col:32, col:44> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x9e94070 '_S_iminus' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))))
                              (UnaryOperator 0x9ebcc20 <line:327:11, line:328:38> '<dependent type>' prefix '!'
                                (ParenExpr 0x9ebcc08 <line:327:12, line:328:38> '<dependent type>'
                                  (BinaryOperator 0x9ebcbf0 <line:327:13, line:328:22> '<dependent type>' '&&'
                                    (CXXDependentScopeMemberExpr 0x9ebcac8 <line:327:13, col:19> '<dependent type>' lvalue
                                      (DeclRefExpr 0x9ebcaac <col:13> 'const __cache_type *' lvalue Var 0x9eb8c80 '__lc' 'const __cache_type *'))
                                    (CXXOperatorCallExpr 0x9ebcbc8 <line:328:9, col:22> '<dependent type>'
                                      (UnresolvedLookupExpr 0x9ebcb68 <col:13, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30 0x9d5e270 0x9d5ece0 0x9d5f520 0x9d5fa90 0x9e73300)
                                      (DeclRefExpr 0x9ebcafc <col:9> 'char_type':'_CharT' lvalue Var 0x9eb8df0 '__c' 'char_type':'_CharT')
                                      (CXXDependentScopeMemberExpr 0x9ebcb30 <col:16, col:22> '<dependent type>' lvalue
                                        (DeclRefExpr 0x9ebcb14 <col:16> 'const __cache_type *' lvalue Var 0x9eb8c80 '__lc' 'const __cache_type *')))))))
                            (UnaryOperator 0x9ebcd58 <line:329:11, col:42> '<dependent type>' prefix '!'
                              (ParenExpr 0x9ebcd40 <col:12, col:42> '<dependent type>'
                                (CXXOperatorCallExpr 0x9ebcd18 <col:13, col:26> '<dependent type>'
                                  (UnresolvedLookupExpr 0x9ebccb8 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30 0x9d5e270 0x9d5ece0 0x9d5f520 0x9d5fa90 0x9e73300)
                                  (DeclRefExpr 0x9ebcc50 <col:13> 'char_type':'_CharT' lvalue Var 0x9eb8df0 '__c' 'char_type':'_CharT')
                                  (CXXDependentScopeMemberExpr 0x9ebcc80 <col:20, col:26> '<dependent type>' lvalue
                                    (DeclRefExpr 0x9ebcc68 <col:20> 'const __cache_type *' lvalue Var 0x9eb8c80 '__lc' 'const __cache_type *'))))))
                          (CXXOperatorCallExpr 0x9ebce40 <line:330:9, col:34> 'class std::basic_string<char>' lvalue
                            (ImplicitCastExpr 0x9ebce30 <col:16, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                              (DeclRefExpr 0x9ebce18 <col:16, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0x9da46d0 'operator+=' 'class std::basic_string<char> &(char)'))
                            (DeclRefExpr 0x9ebcd88 <col:9> 'string':'class std::basic_string<char>' lvalue ParmVar 0x9eb8750 '__xtrc' 'string &')
                            (ConditionalOperator 0x9ebcdf8 <col:19, col:34> 'char'
                              (ImplicitCastExpr 0x9ebcde8 <col:19> '_Bool' <LValueToRValue>
                                (DeclRefExpr 0x9ebcda0 <col:19> 'const _Bool' lvalue Var 0x9ebc800 '__plus' 'const _Bool'))
                              (CharacterLiteral 0x9ebcdb8 <col:28> 'char'43)
                              (CharacterLiteral 0x9ebcdd0 <col:34> 'char'45)))
                          (ContinueStmt 0x9ebce68 <line:332:6>)))
                      (CompoundStmt 0x9ebcef8 <line:335:9, line:338:9>
                        (BinaryOperator 0x9ebced8 <line:336:4, col:16> '_Bool' lvalue '='
                          (DeclRefExpr 0x9ebceac <col:4> '_Bool' lvalue Var 0x9eb8e60 '__testeof' '_Bool')
                          (CXXBoolLiteralExpr 0x9ebcec8 <col:16> '_Bool' true))
                        (BreakStmt 0x9ebcef0 <line:337:4>))))
                  (BreakStmt 0x9ebcf50 <line:341:5>))))))
        (IfStmt 0x9ebd158 <line:344:6, line:347:20>
          <<<NULL>>>
          (CXXOperatorCallExpr 0x9ebd090 <line:344:10, col:21> '<dependent type>'
            (UnresolvedLookupExpr 0x9ebd038 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bacde0 0x9bc3130 0x9bc62c0 0x9c11360 0x9c32300 0x9c32670 0x9d60120 0x9d60630 0x9d60b40 0x9e73820)
            (UnaryOperator 0x9ebd008 <col:10, col:12> '<dependent type>' prefix '++'
              (DeclRefExpr 0x9ebcfec <col:12> '_InIter' lvalue ParmVar 0x9eb8600 '__beg' '_InIter'))
            (DeclRefExpr 0x9ebd01c <col:21> '_InIter' lvalue ParmVar 0x9eb8640 '__end' '_InIter'))
          (BinaryOperator 0x9ebd100 <line:345:8, col:15> '<dependent type>' '='
            (DeclRefExpr 0x9ebd0b4 <col:8> 'char_type':'_CharT' lvalue Var 0x9eb8df0 '__c' 'char_type':'_CharT')
            (UnaryOperator 0x9ebd0e8 <col:14, col:15> '<dependent type>' prefix '*'
              (DeclRefExpr 0x9ebd0cc <col:15> '_InIter' lvalue ParmVar 0x9eb8600 '__beg' '_InIter')))
          (BinaryOperator 0x9ebd140 <line:347:8, col:20> '_Bool' lvalue '='
            (DeclRefExpr 0x9ebd118 <col:8> '_Bool' lvalue Var 0x9eb8e60 '__testeof' '_Bool')
            (CXXBoolLiteralExpr 0x9ebd130 <col:20> '_Bool' true))))))
  (IfStmt 0x9ebd5e8 <line:352:7, line:362:9>
    <<<NULL>>>
    (ImplicitCastExpr 0x9ebd230 <line:352:11, col:33> '_Bool' <IntegralToBoolean>
      (CXXMemberCallExpr 0x9ebd200 <col:11, col:33> 'size_type':'unsigned int'
        (MemberExpr 0x9ebd1dc <col:11, col:28> '<bound member function type>' .size 0x9da2750
          (ImplicitCastExpr 0x9ebd220 <col:11> 'const class std::basic_string<char>' lvalue <NoOp>
            (DeclRefExpr 0x9ebd1c4 <col:11> 'string':'class std::basic_string<char>' lvalue Var 0x9eba1e0 '__found_grouping' 'string':'class std::basic_string<char>')))))
    (CompoundStmt 0x9ebd5d0 <line:353:9, line:362:9>
      (IfStmt 0x9ebd398 <line:355:4, line:356:53>
        <<<NULL>>>
        (BinaryOperator 0x9ebd2c0 <line:355:8, col:25> '_Bool' '&&'
          (UnaryOperator 0x9ebd268 <col:8, col:9> '_Bool' prefix '!'
            (ImplicitCastExpr 0x9ebd258 <col:9> '_Bool' <LValueToRValue>
              (DeclRefExpr 0x9ebd23c <col:9> '_Bool' lvalue Var 0x9eba120 '__found_dec' '_Bool')))
          (UnaryOperator 0x9ebd2a8 <col:24, col:25> '_Bool' prefix '!'
            (ImplicitCastExpr 0x9ebd298 <col:25> '_Bool' <LValueToRValue>
              (DeclRefExpr 0x9ebd27c <col:25> '_Bool' lvalue Var 0x9eba180 '__found_sci' '_Bool'))))
        (CXXOperatorCallExpr 0x9ebd370 <line:356:6, col:53> 'class std::basic_string<char>' lvalue
          (ImplicitCastExpr 0x9ebd360 <col:23, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9ebd348 <col:23, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0x9da46d0 'operator+=' 'class std::basic_string<char> &(char)'))
          (DeclRefExpr 0x9ebd2d8 <col:6> 'string':'class std::basic_string<char>' lvalue Var 0x9eba1e0 '__found_grouping' 'string':'class std::basic_string<char>')
          (CXXStaticCastExpr 0x9ebd330 <col:26, col:53> 'char' static_cast<char> <NoOp>
            (ImplicitCastExpr 0x9ebd320 <col:44> 'char' <IntegralCast>
              (ImplicitCastExpr 0x9ebd310 <col:44> 'int' <LValueToRValue>
                (DeclRefExpr 0x9ebd2f0 <col:44> 'int' lvalue Var 0x9eb9960 '__sep_pos' 'int')))))
        <<<NULL>>>)
      (IfStmt 0x9ebd5b0 <line:358:11, line:361:24>
        <<<NULL>>>
        (UnaryOperator 0x9ebd518 <line:358:15, line:360:27> '<dependent type>' prefix '!'
          (CallExpr 0x9ebd4f0 <line:358:16, line:360:27> '<dependent type>'
            (DeclRefExpr 0x9ebd3d8 <line:358:16, col:21> '_Bool (const char *, size_t, const string &) throw()' lvalue Function 0x9eb82b0 '__verify_grouping' '_Bool (const char *, size_t, const string &) throw()')
            (CXXDependentScopeMemberExpr 0x9ebd450 <col:39, col:45> '<dependent type>' lvalue
              (DeclRefExpr 0x9ebd3f8 <col:39> 'const __cache_type *' lvalue Var 0x9eb8c80 '__lc' 'const __cache_type *'))
            (CXXDependentScopeMemberExpr 0x9ebd4a0 <line:359:11, col:17> '<dependent type>' lvalue
              (DeclRefExpr 0x9ebd484 <col:11> 'const __cache_type *' lvalue Var 0x9eb8c80 '__lc' 'const __cache_type *'))
            (DeclRefExpr 0x9ebd4d4 <line:360:11> 'string':'class std::basic_string<char>' lvalue Var 0x9eba1e0 '__found_grouping' 'string':'class std::basic_string<char>')))
        (BinaryOperator 0x9ebd598 <line:361:6, col:24> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue '='
          (DeclRefExpr 0x9ebd52c <col:6> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9eb8700 '__err' 'class ios_base::iostate &')
          (ImplicitCastExpr 0x9ebd588 <col:14, col:24> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9ebd564 <col:14, col:24> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11450 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9ebd620 <line:364:7, col:14>
    (DeclRefExpr 0x9ebd604 <col:14> '_InIter' lvalue ParmVar 0x9eb8600 '__beg' '_InIter')))


    template <typename _ValueT> _InIter _M_extract_int(_InIter __beg, _InIter __end, std::ios_base &__io, ios_base::iostate &__err, _ValueT &__v) const (CompoundStmt 0x9ec2e88 </usr/include/c++/4.6/bits/locale_facets.tcc:373:7, line:584:7>
  (DeclStmt 0x9ebdda0 <line:374:9, col:57>
    0x9ebdd70 "typedef char_traits<_CharT> __traits_type")
  (DeclStmt 0x9ebde28 <line:375:2, col:33>
    0x9ebddc0 "Using__gnu_cxx::;")
  (DeclStmt 0x9ebdfb0 <line:376:2, col:66>
    0x9ebdf80 "typedef typename __add_unsigned<_ValueT>::__type __unsigned_type")
  (DeclStmt 0x9ebe0a0 <line:377:2, col:67>
    0x9ebe070 "typedef __numpunct_cache<_CharT> __cache_type")
  (DeclStmt 0x9ebe1a8 <line:378:2, col:32>
    0x9ebe170 "__use_cache<__cache_type> __uc")
  (DeclStmt 0x9ebe270 <line:379:2, col:40>
    0x9ebe1d0 "const std::locale &__loc =
      (CXXMemberCallExpr 0x9ebe240 <col:24, col:39> 'const class std::locale' lvalue
        (MemberExpr 0x9ebe21c <col:24, col:29> '<bound member function type>' ._M_getloc 0x9e15ff0
          (ImplicitCastExpr 0x9ebe260 <col:24> 'const class std::ios_base' lvalue <NoOp>
            (DeclRefExpr 0x9ebe204 <col:24> 'class std::ios_base' lvalue ParmVar 0x9ebda20 '__io' 'class std::ios_base &'))))")
  (DeclStmt 0x9ebe338 <line:380:2, col:40>
    0x9ebe2b0 "const __cache_type *__lc =
      (CallExpr 0x9ebe318 <col:29, col:39> '<dependent type>'
        (DeclRefExpr 0x9ebe2e4 <col:29> '__use_cache<__cache_type>' lvalue Var 0x9ebe170 '__uc' '__use_cache<__cache_type>')
        (DeclRefExpr 0x9ebe2fc <col:34> 'const class std::locale' lvalue Var 0x9ebe1d0 '__loc' 'const class std::locale &'))")
  (DeclStmt 0x9ebe408 <line:381:2, col:41>
    0x9ebe380 "const _CharT *__lit =
      (CXXDependentScopeMemberExpr 0x9ebe3d0 <col:24, col:30> '<dependent type>' lvalue
        (DeclRefExpr 0x9ebe3b4 <col:24> 'const __cache_type *' lvalue Var 0x9ebe2b0 '__lc' 'const __cache_type *'))")
  (DeclStmt 0x9ebe478 <line:382:2, col:29>
    0x9ebe420 "char_type __c =
      (CXXUnresolvedConstructExpr 0x9ebe460 <col:18, col:28> 'char_type':'_CharT')")
  (DeclStmt 0x9ebe660 <line:385:2, line:386:62>
    0x9ebe4e0 "const ios_base::fmtflags __basefield =
      (CXXOperatorCallExpr 0x9ebe638 <line:385:41, line:386:53> 'enum std::_Ios_Fmtflags'
        (ImplicitCastExpr 0x9ebe628 <col:41, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9ebe610 <col:41, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9e0a5b0 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
        (CXXMemberCallExpr 0x9ebe590 <line:385:41, col:52> 'fmtflags':'enum std::_Ios_Fmtflags'
          (MemberExpr 0x9ebe56c <col:41, col:46> '<bound member function type>' .flags 0x9e133f0
            (ImplicitCastExpr 0x9ebe5b0 <col:41> 'const class std::ios_base' lvalue <NoOp>
              (DeclRefExpr 0x9ebe514 <col:41> 'class std::ios_base' lvalue ParmVar 0x9ebda20 '__io' 'class std::ios_base &'))))
        (ImplicitCastExpr 0x9ebe600 <line:386:43, col:53> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
          (DeclRefExpr 0x9ebe5dc <col:43, col:53> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9e11280 'basefield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))")
  (DeclStmt 0x9ebe7d0 <line:387:2, col:49>
    0x9ebe680 "const bool __oct =
      (BinaryOperator 0x9ebe750 <col:21, col:46> '_Bool' '=='
        (ImplicitCastExpr 0x9ebe730 <col:21> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9ebe710 <col:21> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9ebe6b4 <col:21> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9ebe4e0 '__basefield' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
        (ImplicitCastExpr 0x9ebe740 <col:36, col:46> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9ebe720 <col:36, col:46> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9ebe6ec <col:36, col:46> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9e10ec0 'oct' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))")
  (DeclStmt 0x9ebe9d0 <line:388:2, col:67>
    0x9ebe7f0 "int __base =
      (ConditionalOperator 0x9ebe980 <col:15, col:66> 'int'
        (ImplicitCastExpr 0x9ebe970 <col:15> '_Bool' <LValueToRValue>
          (DeclRefExpr 0x9ebe824 <col:15> 'const _Bool' lvalue Var 0x9ebe680 '__oct' 'const _Bool'))
        (IntegerLiteral 0x9ebe840 <col:23> 'int' 8)
        (ParenExpr 0x9ebe958 <col:27, col:66> 'int'
          (ConditionalOperator 0x9ebe938 <col:28, col:64> 'int'
            (BinaryOperator 0x9ebe8f0 <col:28, col:53> '_Bool' '=='
              (ImplicitCastExpr 0x9ebe8d0 <col:28> 'int' <IntegralCast>
                (ImplicitCastExpr 0x9ebe8b0 <col:28> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                  (DeclRefExpr 0x9ebe858 <col:28> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9ebe4e0 '__basefield' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
              (ImplicitCastExpr 0x9ebe8e0 <col:43, col:53> 'int' <IntegralCast>
                (ImplicitCastExpr 0x9ebe8c0 <col:43, col:53> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                  (DeclRefExpr 0x9ebe88c <col:43, col:53> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9e10da0 'hex' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
            (IntegerLiteral 0x9ebe908 <col:59> 'int' 16)
            (IntegerLiteral 0x9ebe920 <col:64> 'int' 10))))")
  (DeclStmt 0x9ebeae0 <line:391:2, col:33>
    0x9ebe9f0 "bool __testeof =
      (CXXOperatorCallExpr 0x9ebeab8 <col:19, col:28> '<dependent type>'
        (UnresolvedLookupExpr 0x9ebea58 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30 0x9d5e270 0x9d5ece0 0x9d5f520 0x9d5fa90 0x9e73300)
        (DeclRefExpr 0x9ebea24 <col:19> '_InIter' lvalue ParmVar 0x9ebd990 '__beg' '_InIter')
        (DeclRefExpr 0x9ebea3c <col:28> '_InIter' lvalue ParmVar 0x9ebd9d0 '__end' '_InIter'))")
  (DeclStmt 0x9ebeb48 <line:394:2, col:25>
    0x9ebeb00 "bool __negative =
      (CXXBoolLiteralExpr 0x9ebeb38 <col:20> '_Bool' false)")
  (IfStmt 0x9ebf348 <line:395:2, line:408:4>
    <<<NULL>>>
    (UnaryOperator 0x9ebeb80 <line:395:6, col:7> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9ebeb70 <col:7> '_Bool' <LValueToRValue>
        (DeclRefExpr 0x9ebeb58 <col:7> '_Bool' lvalue Var 0x9ebe9f0 '__testeof' '_Bool')))
    (CompoundStmt 0x9ebf328 <line:396:4, line:408:4>
      (BinaryOperator 0x9ebebe0 <line:397:6, col:13> '<dependent type>' '='
        (DeclRefExpr 0x9ebeb94 <col:6> 'char_type':'_CharT' lvalue Var 0x9ebe420 '__c' 'char_type':'_CharT')
        (UnaryOperator 0x9ebebc8 <col:12, col:13> '<dependent type>' prefix '*'
          (DeclRefExpr 0x9ebebac <col:13> '_InIter' lvalue ParmVar 0x9ebd990 '__beg' '_InIter')))
      (BinaryOperator 0x9ebed20 <line:398:6, col:53> '<dependent type>' '='
        (DeclRefExpr 0x9ebebf8 <col:6> '_Bool' lvalue Var 0x9ebeb00 '__negative' '_Bool')
        (CXXOperatorCallExpr 0x9ebecf8 <col:19, col:53> '<dependent type>'
          (UnresolvedLookupExpr 0x9ebec98 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30 0x9d5e270 0x9d5ece0 0x9d5f520 0x9d5fa90 0x9e73300)
          (DeclRefExpr 0x9ebec10 <col:19> 'char_type':'_CharT' lvalue Var 0x9ebe420 '__c' 'char_type':'_CharT')
          (ArraySubscriptExpr 0x9ebec80 <col:26, col:53> '<dependent type>' lvalue
            (DeclRefExpr 0x9ebec28 <col:26> 'const _CharT *' lvalue Var 0x9ebe380 '__lit' 'const _CharT *')
            (DeclRefExpr 0x9ebec5c <col:32, col:44> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x9e94070 '_S_iminus' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>'))))
      (IfStmt 0x9ebf308 <line:399:6, line:407:8>
        <<<NULL>>>
        (BinaryOperator 0x9ebf150 <line:399:10, line:401:37> '<dependent type>' '&&'
          (BinaryOperator 0x9ebf018 <line:399:10, line:400:62> '<dependent type>' '&&'
            (ParenExpr 0x9ebee78 <line:399:10, col:59> '<dependent type>'
              (BinaryOperator 0x9ebee60 <col:11, col:58> '<dependent type>' '||'
                (DeclRefExpr 0x9ebed38 <col:11> '_Bool' lvalue Var 0x9ebeb00 '__negative' '_Bool')
                (CXXOperatorCallExpr 0x9ebee38 <col:25, col:58> '<dependent type>'
                  (UnresolvedLookupExpr 0x9ebedd8 <col:29, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30 0x9d5e270 0x9d5ece0 0x9d5f520 0x9d5fa90 0x9e73300)
                  (DeclRefExpr 0x9ebed50 <col:25> 'char_type':'_CharT' lvalue Var 0x9ebe420 '__c' 'char_type':'_CharT')
                  (ArraySubscriptExpr 0x9ebedc0 <col:32, col:58> '<dependent type>' lvalue
                    (DeclRefExpr 0x9ebed68 <col:32> 'const _CharT *' lvalue Var 0x9ebe380 '__lit' 'const _CharT *')
                    (DeclRefExpr 0x9ebed9c <col:38, col:50> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x9e940b0 '_S_iplus' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))))
            (UnaryOperator 0x9ebf000 <line:400:6, col:62> '<dependent type>' prefix '!'
              (ParenExpr 0x9ebefe8 <col:7, col:62> '<dependent type>'
                (BinaryOperator 0x9ebefd0 <col:8, col:46> '<dependent type>' '&&'
                  (CXXDependentScopeMemberExpr 0x9ebeea8 <col:8, col:14> '<dependent type>' lvalue
                    (DeclRefExpr 0x9ebee8c <col:8> 'const __cache_type *' lvalue Var 0x9ebe2b0 '__lc' 'const __cache_type *'))
                  (CXXOperatorCallExpr 0x9ebefa8 <col:33, col:46> '<dependent type>'
                    (UnresolvedLookupExpr 0x9ebef48 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30 0x9d5e270 0x9d5ece0 0x9d5f520 0x9d5fa90 0x9e73300)
                    (DeclRefExpr 0x9ebeedc <col:33> 'char_type':'_CharT' lvalue Var 0x9ebe420 '__c' 'char_type':'_CharT')
                    (CXXDependentScopeMemberExpr 0x9ebef10 <col:40, col:46> '<dependent type>' lvalue
                      (DeclRefExpr 0x9ebeef4 <col:40> 'const __cache_type *' lvalue Var 0x9ebe2b0 '__lc' 'const __cache_type *')))))))
          (UnaryOperator 0x9ebf138 <line:401:6, col:37> '<dependent type>' prefix '!'
            (ParenExpr 0x9ebf120 <col:7, col:37> '<dependent type>'
              (CXXOperatorCallExpr 0x9ebf0f8 <col:8, col:21> '<dependent type>'
                (UnresolvedLookupExpr 0x9ebf098 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30 0x9d5e270 0x9d5ece0 0x9d5f520 0x9d5fa90 0x9e73300)
                (DeclRefExpr 0x9ebf030 <col:8> 'char_type':'_CharT' lvalue Var 0x9ebe420 '__c' 'char_type':'_CharT')
                (CXXDependentScopeMemberExpr 0x9ebf060 <col:15, col:21> '<dependent type>' lvalue
                  (DeclRefExpr 0x9ebf048 <col:15> 'const __cache_type *' lvalue Var 0x9ebe2b0 '__lc' 'const __cache_type *'))))))
        (CompoundStmt 0x9ebf2f0 <line:402:8, line:407:8>
          (IfStmt 0x9ebf2d0 <line:403:3, line:406:17>
            <<<NULL>>>
            (CXXOperatorCallExpr 0x9ebf208 <line:403:7, col:18> '<dependent type>'
              (UnresolvedLookupExpr 0x9ebf1b0 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bacde0 0x9bc3130 0x9bc62c0 0x9c11360 0x9c32300 0x9c32670 0x9d60120 0x9d60630 0x9d60b40 0x9e73820)
              (UnaryOperator 0x9ebf180 <col:7, col:9> '<dependent type>' prefix '++'
                (DeclRefExpr 0x9ebf168 <col:9> '_InIter' lvalue ParmVar 0x9ebd990 '__beg' '_InIter'))
              (DeclRefExpr 0x9ebf194 <col:18> '_InIter' lvalue ParmVar 0x9ebd9d0 '__end' '_InIter'))
            (BinaryOperator 0x9ebf278 <line:404:5, col:12> '<dependent type>' '='
              (DeclRefExpr 0x9ebf22c <col:5> 'char_type':'_CharT' lvalue Var 0x9ebe420 '__c' 'char_type':'_CharT')
              (UnaryOperator 0x9ebf260 <col:11, col:12> '<dependent type>' prefix '*'
                (DeclRefExpr 0x9ebf244 <col:12> '_InIter' lvalue ParmVar 0x9ebd990 '__beg' '_InIter')))
            (BinaryOperator 0x9ebf2b8 <line:406:5, col:17> '_Bool' lvalue '='
              (DeclRefExpr 0x9ebf290 <col:5> '_Bool' lvalue Var 0x9ebe9f0 '__testeof' '_Bool')
              (CXXBoolLiteralExpr 0x9ebf2a8 <col:17> '_Bool' true))))
        <<<NULL>>>))
    <<<NULL>>>)
  (DeclStmt 0x9ebf3b8 <line:412:2, col:27>
    0x9ebf370 "bool __found_zero =
      (CXXBoolLiteralExpr 0x9ebf3a8 <col:22> '_Bool' false)")
  (DeclStmt 0x9ebf430 <line:413:2, col:19>
    0x9ebf3e0 "int __sep_pos =
      (IntegerLiteral 0x9ebf418 <col:18> 'int' 0)")
  (WhileStmt 0x9ec0220 <line:414:2, line:454:4>
    <<<NULL>>>
    (UnaryOperator 0x9ebf468 <line:414:9, col:10> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9ebf458 <col:10> '_Bool' <LValueToRValue>
        (DeclRefExpr 0x9ebf440 <col:10> '_Bool' lvalue Var 0x9ebe9f0 '__testeof' '_Bool')))
    (CompoundStmt 0x9ec0208 <line:415:4, line:454:4>
      (IfStmt 0x9ebffe0 <line:416:6, line:444:8>
        <<<NULL>>>
        (BinaryOperator 0x9ebf6e0 <line:416:10, line:417:19> '<dependent type>' '||'
          (ParenExpr 0x9ebf5d8 <line:416:10, col:65> '<dependent type>'
            (BinaryOperator 0x9ebf5c0 <col:11, col:49> '<dependent type>' '&&'
              (CXXDependentScopeMemberExpr 0x9ebf498 <col:11, col:17> '<dependent type>' lvalue
                (DeclRefExpr 0x9ebf47c <col:11> 'const __cache_type *' lvalue Var 0x9ebe2b0 '__lc' 'const __cache_type *'))
              (CXXOperatorCallExpr 0x9ebf598 <col:36, col:49> '<dependent type>'
                (UnresolvedLookupExpr 0x9ebf538 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30 0x9d5e270 0x9d5ece0 0x9d5f520 0x9d5fa90 0x9e73300)
                (DeclRefExpr 0x9ebf4cc <col:36> 'char_type':'_CharT' lvalue Var 0x9ebe420 '__c' 'char_type':'_CharT')
                (CXXDependentScopeMemberExpr 0x9ebf500 <col:43, col:49> '<dependent type>' lvalue
                  (DeclRefExpr 0x9ebf4e4 <col:43> 'const __cache_type *' lvalue Var 0x9ebe2b0 '__lc' 'const __cache_type *')))))
          (CXXOperatorCallExpr 0x9ebf6b8 <line:417:6, col:19> '<dependent type>'
            (UnresolvedLookupExpr 0x9ebf658 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30 0x9d5e270 0x9d5ece0 0x9d5f520 0x9d5fa90 0x9e73300)
            (DeclRefExpr 0x9ebf5ec <col:6> 'char_type':'_CharT' lvalue Var 0x9ebe420 '__c' 'char_type':'_CharT')
            (CXXDependentScopeMemberExpr 0x9ebf620 <col:13, col:19> '<dependent type>' lvalue
              (DeclRefExpr 0x9ebf604 <col:13> 'const __cache_type *' lvalue Var 0x9ebe2b0 '__lc' 'const __cache_type *'))))
        (BreakStmt 0x9ebf6f8 <line:418:8>)
        (IfStmt 0x9ebffc0 <line:419:11, line:444:8>
          <<<NULL>>>
          (BinaryOperator 0x9ebf8d8 <line:419:15, line:420:41> '<dependent type>' '&&'
            (CXXOperatorCallExpr 0x9ebf7e8 <line:419:15, col:48> '<dependent type>'
              (UnresolvedLookupExpr 0x9ebf788 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30 0x9d5e270 0x9d5ece0 0x9d5f520 0x9d5fa90 0x9e73300)
              (DeclRefExpr 0x9ebf700 <col:15> 'char_type':'_CharT' lvalue Var 0x9ebe420 '__c' 'char_type':'_CharT')
              (ArraySubscriptExpr 0x9ebf770 <col:22, col:48> '<dependent type>' lvalue
                (DeclRefExpr 0x9ebf718 <col:22> 'const _CharT *' lvalue Var 0x9ebe380 '__lit' 'const _CharT *')
                (DeclRefExpr 0x9ebf74c <col:28, col:40> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x9e94170 '_S_izero' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))
            (ParenExpr 0x9ebf8c0 <line:420:11, col:41> '_Bool'
              (BinaryOperator 0x9ebf8a8 <col:12, col:39> '_Bool' '||'
                (UnaryOperator 0x9ebf838 <col:12, col:13> '_Bool' prefix '!'
                  (ImplicitCastExpr 0x9ebf828 <col:13> '_Bool' <LValueToRValue>
                    (DeclRefExpr 0x9ebf80c <col:13> '_Bool' lvalue Var 0x9ebf370 '__found_zero' '_Bool')))
                (BinaryOperator 0x9ebf890 <col:29, col:39> '_Bool' '=='
                  (ImplicitCastExpr 0x9ebf880 <col:29> 'int' <LValueToRValue>
                    (DeclRefExpr 0x9ebf84c <col:29> 'int' lvalue Var 0x9ebe7f0 '__base' 'int'))
                  (IntegerLiteral 0x9ebf868 <col:39> 'int' 10)))))
          (CompoundStmt 0x9ebfaf0 <line:421:8, line:428:8>
            (BinaryOperator 0x9ebf918 <line:422:3, col:18> '_Bool' lvalue '='
              (DeclRefExpr 0x9ebf8f0 <col:3> '_Bool' lvalue Var 0x9ebf370 '__found_zero' '_Bool')
              (CXXBoolLiteralExpr 0x9ebf908 <col:18> '_Bool' true))
            (UnaryOperator 0x9ebf948 <line:423:3, col:5> 'int' lvalue prefix '++'
              (DeclRefExpr 0x9ebf930 <col:5> 'int' lvalue Var 0x9ebf3e0 '__sep_pos' 'int'))
            (IfStmt 0x9ebfa10 <line:424:3, line:425:14>
              <<<NULL>>>
              (BinaryOperator 0x9ebf9b0 <line:424:7, col:22> '_Bool' '=='
                (ImplicitCastExpr 0x9ebf9a0 <col:7> 'int' <IntegralCast>
                  (ImplicitCastExpr 0x9ebf990 <col:7> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                    (DeclRefExpr 0x9ebf95c <col:7> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9ebe4e0 '__basefield' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
                (IntegerLiteral 0x9ebf978 <col:22> 'int' 0))
              (BinaryOperator 0x9ebf9f8 <line:425:5, col:14> 'int' lvalue '='
                (DeclRefExpr 0x9ebf9c8 <col:5> 'int' lvalue Var 0x9ebe7f0 '__base' 'int')
                (IntegerLiteral 0x9ebf9e0 <col:14> 'int' 8))
              <<<NULL>>>)
            (IfStmt 0x9ebfad0 <line:426:3, line:427:17>
              <<<NULL>>>
              (BinaryOperator 0x9ebfa70 <line:426:7, col:17> '_Bool' '=='
                (ImplicitCastExpr 0x9ebfa60 <col:7> 'int' <LValueToRValue>
                  (DeclRefExpr 0x9ebfa2c <col:7> 'int' lvalue Var 0x9ebe7f0 '__base' 'int'))
                (IntegerLiteral 0x9ebfa48 <col:17> 'int' 8))
              (BinaryOperator 0x9ebfab8 <line:427:5, col:17> 'int' lvalue '='
                (DeclRefExpr 0x9ebfa88 <col:5> 'int' lvalue Var 0x9ebf3e0 '__sep_pos' 'int')
                (IntegerLiteral 0x9ebfaa0 <col:17> 'int' 0))
              <<<NULL>>>))
          (IfStmt 0x9ebffa0 <line:429:11, line:444:8>
            <<<NULL>>>
            (BinaryOperator 0x9ebfd78 <line:429:15, line:431:39> '<dependent type>' '&&'
              (DeclRefExpr 0x9ebfb10 <line:429:15> '_Bool' lvalue Var 0x9ebf370 '__found_zero' '_Bool')
              (ParenExpr 0x9ebfd60 <line:430:11, line:431:39> '<dependent type>'
                (BinaryOperator 0x9ebfd48 <line:430:12, line:431:38> '<dependent type>' '||'
                  (CXXOperatorCallExpr 0x9ebfc10 <line:430:12, col:42> '<dependent type>'
                    (UnresolvedLookupExpr 0x9ebfbb0 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30 0x9d5e270 0x9d5ece0 0x9d5f520 0x9d5fa90 0x9e73300)
                    (DeclRefExpr 0x9ebfb28 <col:12> 'char_type':'_CharT' lvalue Var 0x9ebe420 '__c' 'char_type':'_CharT')
                    (ArraySubscriptExpr 0x9ebfb98 <col:19, col:42> '<dependent type>' lvalue
                      (DeclRefExpr 0x9ebfb40 <col:19> 'const _CharT *' lvalue Var 0x9ebe380 '__lit' 'const _CharT *')
                      (DeclRefExpr 0x9ebfb74 <col:25, col:37> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x9e940f0 '_S_ix' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))
                  (CXXOperatorCallExpr 0x9ebfd20 <line:431:8, col:38> '<dependent type>'
                    (UnresolvedLookupExpr 0x9ebfcc0 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30 0x9d5e270 0x9d5ece0 0x9d5f520 0x9d5fa90 0x9e73300)
                    (DeclRefExpr 0x9ebfc34 <col:8> 'char_type':'_CharT' lvalue Var 0x9ebe420 '__c' 'char_type':'_CharT')
                    (ArraySubscriptExpr 0x9ebfca8 <col:15, col:38> '<dependent type>' lvalue
                      (DeclRefExpr 0x9ebfc4c <col:15> 'const _CharT *' lvalue Var 0x9ebe380 '__lit' 'const _CharT *')
                      (DeclRefExpr 0x9ebfc84 <col:21, col:33> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x9e94130 '_S_iX' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>'))))))
            (CompoundStmt 0x9ebff80 <line:432:8, line:442:8>
              (IfStmt 0x9ebfe40 <line:433:3, line:434:14>
                <<<NULL>>>
                (BinaryOperator 0x9ebfde0 <line:433:7, col:22> '_Bool' '=='
                  (ImplicitCastExpr 0x9ebfdd0 <col:7> 'int' <IntegralCast>
                    (ImplicitCastExpr 0x9ebfdc0 <col:7> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                      (DeclRefExpr 0x9ebfd90 <col:7> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9ebe4e0 '__basefield' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
                  (IntegerLiteral 0x9ebfda8 <col:22> 'int' 0))
                (BinaryOperator 0x9ebfe28 <line:434:5, col:14> 'int' lvalue '='
                  (DeclRefExpr 0x9ebfdf8 <col:5> 'int' lvalue Var 0x9ebe7f0 '__base' 'int')
                  (IntegerLiteral 0x9ebfe10 <col:14> 'int' 16))
                <<<NULL>>>)
              (IfStmt 0x9ebff60 <line:435:3, line:441:5>
                <<<NULL>>>
                (BinaryOperator 0x9ebfea0 <line:435:7, col:17> '_Bool' '=='
                  (ImplicitCastExpr 0x9ebfe90 <col:7> 'int' <LValueToRValue>
                    (DeclRefExpr 0x9ebfe5c <col:7> 'int' lvalue Var 0x9ebe7f0 '__base' 'int'))
                  (IntegerLiteral 0x9ebfe78 <col:17> 'int' 16))
                (CompoundStmt 0x9ebff40 <line:436:5, line:439:5>
                  (BinaryOperator 0x9ebfee0 <line:437:7, col:22> '_Bool' lvalue '='
                    (DeclRefExpr 0x9ebfeb8 <col:7> '_Bool' lvalue Var 0x9ebf370 '__found_zero' '_Bool')
                    (CXXBoolLiteralExpr 0x9ebfed0 <col:22> '_Bool' false))
                  (BinaryOperator 0x9ebff28 <line:438:7, col:19> 'int' lvalue '='
                    (DeclRefExpr 0x9ebfef8 <col:7> 'int' lvalue Var 0x9ebf3e0 '__sep_pos' 'int')
                    (IntegerLiteral 0x9ebff10 <col:19> 'int' 0)))
                (BreakStmt 0x9ebff58 <line:441:5>)))
            (BreakStmt 0x9ebff98 <line:444:8>))))
      (IfStmt 0x9ec01e8 <line:446:6, line:453:20>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9ec00a0 <line:446:10, col:21> '<dependent type>'
          (UnresolvedLookupExpr 0x9ec0048 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bacde0 0x9bc3130 0x9bc62c0 0x9c11360 0x9c32300 0x9c32670 0x9d60120 0x9d60630 0x9d60b40 0x9e73820)
          (UnaryOperator 0x9ec0018 <col:10, col:12> '<dependent type>' prefix '++'
            (DeclRefExpr 0x9ebfffc <col:12> '_InIter' lvalue ParmVar 0x9ebd990 '__beg' '_InIter'))
          (DeclRefExpr 0x9ec002c <col:21> '_InIter' lvalue ParmVar 0x9ebd9d0 '__end' '_InIter'))
        (CompoundStmt 0x9ec0190 <line:447:8, line:451:8>
          (BinaryOperator 0x9ec0110 <line:448:3, col:10> '<dependent type>' '='
            (DeclRefExpr 0x9ec00c4 <col:3> 'char_type':'_CharT' lvalue Var 0x9ebe420 '__c' 'char_type':'_CharT')
            (UnaryOperator 0x9ec00f8 <col:9, col:10> '<dependent type>' prefix '*'
              (DeclRefExpr 0x9ec00dc <col:10> '_InIter' lvalue ParmVar 0x9ebd990 '__beg' '_InIter')))
          (IfStmt 0x9ec0170 <line:449:3, line:450:5>
            <<<NULL>>>
            (UnaryOperator 0x9ec0150 <line:449:7, col:8> '_Bool' prefix '!'
              (ImplicitCastExpr 0x9ec0140 <col:8> '_Bool' <LValueToRValue>
                (DeclRefExpr 0x9ec0128 <col:8> '_Bool' lvalue Var 0x9ebf370 '__found_zero' '_Bool')))
            (BreakStmt 0x9ec0168 <line:450:5>)
            <<<NULL>>>))
        (BinaryOperator 0x9ec01d0 <line:453:8, col:20> '_Bool' lvalue '='
          (DeclRefExpr 0x9ec01a8 <col:8> '_Bool' lvalue Var 0x9ebe9f0 '__testeof' '_Bool')
          (CXXBoolLiteralExpr 0x9ec01c0 <col:20> '_Bool' true)))))
  (DeclStmt 0x9ec03f8 <line:458:2, line:459:42>
    0x9ec0240 "const size_t __len =
      (ImplicitCastExpr 0x9ec03e8 <line:458:23, line:459:41> 'const size_t':'const unsigned int' <IntegralCast>
        (ParenExpr 0x9ec03d0 <line:458:23, line:459:41> 'int'
          (ConditionalOperator 0x9ec03b0 <line:458:24, line:459:35> 'int'
            (BinaryOperator 0x9ec02b8 <line:458:24, col:34> '_Bool' '=='
              (ImplicitCastExpr 0x9ec02a8 <col:24> 'int' <LValueToRValue>
                (DeclRefExpr 0x9ec0274 <col:24> 'int' lvalue Var 0x9ebe7f0 '__base' 'int'))
              (IntegerLiteral 0x9ec0290 <col:34> 'int' 16))
            (BinaryOperator 0x9ec0370 <col:39, line:459:24> 'int' '-'
              (ImplicitCastExpr 0x9ec0350 <line:458:39, col:51> 'int' <IntegralCast>
                (DeclRefExpr 0x9ec02ec <col:39, col:51> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x9e942c0 '_S_iend' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>'))
              (ImplicitCastExpr 0x9ec0360 <line:459:12, col:24> 'int' <IntegralCast>
                (DeclRefExpr 0x9ec032c <col:12, col:24> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x9e94170 '_S_izero' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))
            (ImplicitCastExpr 0x9ec03a0 <col:35> 'int' <LValueToRValue>
              (DeclRefExpr 0x9ec0388 <col:35> 'int' lvalue Var 0x9ebe7f0 '__base' 'int')))))")
  (DeclStmt 0x9ec0468 <line:462:2, col:25>
    0x9ec0410 "string __found_grouping =
      (CXXConstructExpr 0x9ec0448 <col:9> 'string':'class std::basic_string<char>''void (void)')")
  (IfStmt 0x9ec0548 <line:463:2, line:464:31>
    <<<NULL>>>
    (CXXDependentScopeMemberExpr 0x9ec0490 <line:463:6, col:12> '<dependent type>' lvalue
      (DeclRefExpr 0x9ec0478 <col:6> 'const __cache_type *' lvalue Var 0x9ebe2b0 '__lc' 'const __cache_type *'))
    (CXXMemberCallExpr 0x9ec0518 <line:464:4, col:31> 'void'
      (MemberExpr 0x9ec04dc <col:4, col:21> '<bound member function type>' .reserve 0x9da3290
        (DeclRefExpr 0x9ec04c4 <col:4> 'string':'class std::basic_string<char>' lvalue Var 0x9ec0410 '__found_grouping' 'string':'class std::basic_string<char>'))
      (ImplicitCastExpr 0x9ec0538 <col:29> 'size_type':'unsigned int' <IntegralCast>
        (IntegerLiteral 0x9ec0500 <col:29> 'int' 32)))
    <<<NULL>>>)
  (DeclStmt 0x9ec05b8 <line:465:2, col:25>
    0x9ec0570 "bool __testfail =
      (CXXBoolLiteralExpr 0x9ec05a8 <col:20> '_Bool' false)")
  (DeclStmt 0x9ec0618 <line:466:2, col:29>
    0x9ec05d0 "bool __testoverflow =
      (CXXBoolLiteralExpr 0x9ec0608 <col:24> '_Bool' false)")
  (DeclStmt 0x9ec0a58 <line:467:2, line:470:49>
    0x9ec0650 "const __unsigned_type __max =
      (ConditionalOperator 0x9ec0a38 <line:468:4, line:470:44> '<dependent type>'
        (ParenExpr 0x9ec07e0 <line:468:4, col:68> '<dependent type>'
          (BinaryOperator 0x9ec07c8 <col:5, col:57> '<dependent type>' '&&'
            (DeclRefExpr 0x9ec0684 <col:5> '_Bool' lvalue Var 0x9ebeb00 '__negative' '_Bool')
            (CXXDependentScopeMemberExpr 0x9ec0790 <col:19, col:57> '<dependent type>' lvalue)))
        (CXXOperatorCallExpr 0x9ec0920 <line:469:6, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0x9ec08e8 <col:6, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
          (CXXDependentScopeMemberExpr 0x9ec08b0 <col:7, col:45> '<dependent type>' lvalue))
        (CXXDependentScopeMemberExpr 0x9ec0a00 <line:470:6, col:44> '<dependent type>' lvalue))")
  (DeclStmt 0x9ec0af0 <line:471:2, col:47>
    0x9ec0a70 "const __unsigned_type __smax =
      (BinaryOperator 0x9ec0ad8 <col:33, col:41> '<dependent type>' '/'
        (DeclRefExpr 0x9ec0aa4 <col:33> 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type' lvalue Var 0x9ec0650 '__max' 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type')
        (DeclRefExpr 0x9ec0abc <col:41> 'int' lvalue Var 0x9ebe7f0 '__base' 'int'))")
  (DeclStmt 0x9ec0b60 <line:472:2, col:30>
    0x9ec0b10 "__unsigned_type __result =
      (IntegerLiteral 0x9ec0b48 <col:29> 'int' 0)")
  (DeclStmt 0x9ec0bd0 <line:473:2, col:17>
    0x9ec0b80 "int __digit =
      (IntegerLiteral 0x9ec0bb8 <col:16> 'int' 0)")
  (DeclStmt 0x9ec0cf0 <line:474:2, col:60>
    0x9ec0bf0 "const char_type *__lit_zero =
      (CXXOperatorCallExpr 0x9ec0cc8 <col:32, col:52> '<dependent type>'
        (UnresolvedLookupExpr 0x9ec0c80 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d86680 0x9d87280 0x9d5d090 0x9d5d890)
        (DeclRefExpr 0x9ec0c24 <col:32> 'const _CharT *' lvalue Var 0x9ebe380 '__lit' 'const _CharT *')
        (DeclRefExpr 0x9ec0c5c <col:40, col:52> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x9e94170 '_S_izero' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>'))")
  (IfStmt 0x9ec21d8 <line:476:2, line:546:6>
    <<<NULL>>>
    (UnaryOperator 0x9ec0d50 <line:476:6, col:13> '<dependent type>' prefix '!'
      (CXXDependentScopeMemberExpr 0x9ec0d18 <col:7, col:13> '<dependent type>' lvalue
        (DeclRefExpr 0x9ec0d00 <col:7> 'const __cache_type *' lvalue Var 0x9ebe2b0 '__lc' 'const __cache_type *')))
    (WhileStmt 0x9ec1478 <line:478:4, line:498:6>
      <<<NULL>>>
      (UnaryOperator 0x9ec0d90 <line:478:11, col:12> '_Bool' prefix '!'
        (ImplicitCastExpr 0x9ec0d80 <col:12> '_Bool' <LValueToRValue>
          (DeclRefExpr 0x9ec0d64 <col:12> '_Bool' lvalue Var 0x9ebe9f0 '__testeof' '_Bool')))
      (CompoundStmt 0x9ec1458 <line:479:6, line:498:6>
        (BinaryOperator 0x9ec0e80 <line:480:8, col:48> '<dependent type>' '='
          (DeclRefExpr 0x9ec0da4 <col:8> 'int' lvalue Var 0x9ec0b80 '__digit' 'int')
          (CallExpr 0x9ec0e58 <col:18, col:48> '<dependent type>'
            (UnresolvedMemberExpr 0x9ec0dd0 <col:18> '<bound member function type>' lvalue)
            (DeclRefExpr 0x9ec0e10 <col:26> 'const char_type *' lvalue Var 0x9ec0bf0 '__lit_zero' 'const char_type *')
            (DeclRefExpr 0x9ec0e28 <col:38> 'const size_t':'const unsigned int' lvalue Var 0x9ec0240 '__len' 'const size_t':'const unsigned int')
            (DeclRefExpr 0x9ec0e40 <col:45> 'char_type':'_CharT' lvalue Var 0x9ebe420 '__c' 'char_type':'_CharT')))
        (IfStmt 0x9ec0f10 <line:481:8, line:482:3>
          <<<NULL>>>
          (BinaryOperator 0x9ec0ef0 <line:481:12, col:24> '_Bool' '=='
            (ImplicitCastExpr 0x9ec0ee0 <col:12> 'int' <LValueToRValue>
              (DeclRefExpr 0x9ec0e98 <col:12> 'int' lvalue Var 0x9ec0b80 '__digit' 'int'))
            (UnaryOperator 0x9ec0ec8 <col:23, col:24> 'int' prefix '-'
              (IntegerLiteral 0x9ec0eb0 <col:24> 'int' 1)))
          (BreakStmt 0x9ec0f08 <line:482:3>)
          <<<NULL>>>)
        (IfStmt 0x9ec1298 <line:484:8, line:492:3>
          <<<NULL>>>
          (CXXOperatorCallExpr 0x9ec0fa8 <line:484:12, col:23> '<dependent type>'
            (UnresolvedLookupExpr 0x9ec0f60 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bad330 0x9bc37b0 0x9bc6740 0x9d622b0 0x9d627e0 0x9d62d10)
            (DeclRefExpr 0x9ec0f2c <col:12> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type' lvalue Var 0x9ec0b10 '__result' '__unsigned_type':'typename __add_unsigned<_ValueT>::__type')
            (DeclRefExpr 0x9ec0f44 <col:23> 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type' lvalue Var 0x9ec0a70 '__smax' 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type'))
          (BinaryOperator 0x9ec0ff8 <line:485:3, col:20> '_Bool' lvalue '='
            (DeclRefExpr 0x9ec0fcc <col:3> '_Bool' lvalue Var 0x9ec05d0 '__testoverflow' '_Bool')
            (CXXBoolLiteralExpr 0x9ec0fe8 <col:20> '_Bool' true))
          (CompoundStmt 0x9ec1278 <line:487:3, line:492:3>
            (CompoundAssignOperator 0x9ec1040 <line:488:5, col:17> '<dependent type>' lvalue '*=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
              (DeclRefExpr 0x9ec1010 <col:5> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type' lvalue Var 0x9ec0b10 '__result' '__unsigned_type':'typename __add_unsigned<_ValueT>::__type')
              (DeclRefExpr 0x9ec1028 <col:17> 'int' lvalue Var 0x9ebe7f0 '__base' 'int'))
            (CXXOperatorCallExpr 0x9ec11d0 <line:489:5, col:42> '<dependent type>'
              (UnresolvedLookupExpr 0x9ec1190 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e0ae60 0x9e0c660 0x9e0fd60)
              (DeclRefExpr 0x9ec1060 <col:5> '_Bool' lvalue Var 0x9ec05d0 '__testoverflow' '_Bool')
              (CXXOperatorCallExpr 0x9ec1168 <col:23, col:42> '<dependent type>'
                (UnresolvedLookupExpr 0x9ec1120 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bad330 0x9bc37b0 0x9bc6740 0x9d622b0 0x9d627e0 0x9d62d10)
                (DeclRefExpr 0x9ec1078 <col:23> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type' lvalue Var 0x9ec0b10 '__result' '__unsigned_type':'typename __add_unsigned<_ValueT>::__type')
                (CXXOperatorCallExpr 0x9ec10f8 <col:34, col:42> '<dependent type>'
                  (UnresolvedLookupExpr 0x9ec10c0 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
                  (DeclRefExpr 0x9ec1090 <col:34> 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type' lvalue Var 0x9ec0650 '__max' 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type')
                  (DeclRefExpr 0x9ec10a8 <col:42> 'int' lvalue Var 0x9ec0b80 '__digit' 'int'))))
            (CompoundAssignOperator 0x9ec1228 <line:490:5, col:17> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
              (DeclRefExpr 0x9ec11f4 <col:5> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type' lvalue Var 0x9ec0b10 '__result' '__unsigned_type':'typename __add_unsigned<_ValueT>::__type')
              (DeclRefExpr 0x9ec120c <col:17> 'int' lvalue Var 0x9ec0b80 '__digit' 'int'))
            (UnaryOperator 0x9ec1260 <line:491:5, col:7> 'int' lvalue prefix '++'
              (DeclRefExpr 0x9ec1248 <col:7> 'int' lvalue Var 0x9ebf3e0 '__sep_pos' 'int'))))
        (IfStmt 0x9ec1420 <line:494:8, line:497:15>
          <<<NULL>>>
          (CXXOperatorCallExpr 0x9ec1358 <line:494:12, col:23> '<dependent type>'
            (UnresolvedLookupExpr 0x9ec1300 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bacde0 0x9bc3130 0x9bc62c0 0x9c11360 0x9c32300 0x9c32670 0x9d60120 0x9d60630 0x9d60b40 0x9e73820)
            (UnaryOperator 0x9ec12d0 <col:12, col:14> '<dependent type>' prefix '++'
              (DeclRefExpr 0x9ec12b4 <col:14> '_InIter' lvalue ParmVar 0x9ebd990 '__beg' '_InIter'))
            (DeclRefExpr 0x9ec12e4 <col:23> '_InIter' lvalue ParmVar 0x9ebd9d0 '__end' '_InIter'))
          (BinaryOperator 0x9ec13c8 <line:495:3, col:10> '<dependent type>' '='
            (DeclRefExpr 0x9ec137c <col:3> 'char_type':'_CharT' lvalue Var 0x9ebe420 '__c' 'char_type':'_CharT')
            (UnaryOperator 0x9ec13b0 <col:9, col:10> '<dependent type>' prefix '*'
              (DeclRefExpr 0x9ec1394 <col:10> '_InIter' lvalue ParmVar 0x9ebd990 '__beg' '_InIter')))
          (BinaryOperator 0x9ec1408 <line:497:3, col:15> '_Bool' lvalue '='
            (DeclRefExpr 0x9ec13e0 <col:3> '_Bool' lvalue Var 0x9ebe9f0 '__testeof' '_Bool')
            (CXXBoolLiteralExpr 0x9ec13f8 <col:15> '_Bool' true)))))
    (WhileStmt 0x9ec21c0 <line:500:4, line:546:6>
      <<<NULL>>>
      (UnaryOperator 0x9ec14b8 <line:500:11, col:12> '_Bool' prefix '!'
        (ImplicitCastExpr 0x9ec14a8 <col:12> '_Bool' <LValueToRValue>
          (DeclRefExpr 0x9ec148c <col:12> '_Bool' lvalue Var 0x9ebe9f0 '__testeof' '_Bool')))
      (CompoundStmt 0x9ec21a8 <line:501:6, line:546:6>
        (IfStmt 0x9ec2000 <line:504:8, line:540:3>
          <<<NULL>>>
          (BinaryOperator 0x9ec1610 <line:504:12, col:50> '<dependent type>' '&&'
            (CXXDependentScopeMemberExpr 0x9ec14e8 <col:12, col:18> '<dependent type>' lvalue
              (DeclRefExpr 0x9ec14cc <col:12> 'const __cache_type *' lvalue Var 0x9ebe2b0 '__lc' 'const __cache_type *'))
            (CXXOperatorCallExpr 0x9ec15e8 <col:37, col:50> '<dependent type>'
              (UnresolvedLookupExpr 0x9ec1588 <col:41, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30 0x9d5e270 0x9d5ece0 0x9d5f520 0x9d5fa90 0x9e73300)
              (DeclRefExpr 0x9ec151c <col:37> 'char_type':'_CharT' lvalue Var 0x9ebe420 '__c' 'char_type':'_CharT')
              (CXXDependentScopeMemberExpr 0x9ec1550 <col:44, col:50> '<dependent type>' lvalue
                (DeclRefExpr 0x9ec1534 <col:44> 'const __cache_type *' lvalue Var 0x9ebe2b0 '__lc' 'const __cache_type *'))))
          (CompoundStmt 0x9ec1800 <line:505:3, line:518:3>
            (IfStmt 0x9ec17e0 <line:508:5, line:517:7>
              <<<NULL>>>
              (ImplicitCastExpr 0x9ec1650 <line:508:9> '_Bool' <IntegralToBoolean>
                (ImplicitCastExpr 0x9ec1640 <col:9> 'int' <LValueToRValue>
                  (DeclRefExpr 0x9ec1628 <col:9> 'int' lvalue Var 0x9ebf3e0 '__sep_pos' 'int')))
              (CompoundStmt 0x9ec1768 <line:509:7, line:512:7>
                (CXXOperatorCallExpr 0x9ec16f8 <line:510:9, col:56> 'class std::basic_string<char>' lvalue
                  (ImplicitCastExpr 0x9ec16e8 <col:26, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                    (DeclRefExpr 0x9ec16d0 <col:26, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0x9da46d0 'operator+=' 'class std::basic_string<char> &(char)'))
                  (DeclRefExpr 0x9ec165c <col:9> 'string':'class std::basic_string<char>' lvalue Var 0x9ec0410 '__found_grouping' 'string':'class std::basic_string<char>')
                  (CXXStaticCastExpr 0x9ec16b8 <col:29, col:56> 'char' static_cast<char> <NoOp>
                    (ImplicitCastExpr 0x9ec16a8 <col:47> 'char' <IntegralCast>
                      (ImplicitCastExpr 0x9ec1698 <col:47> 'int' <LValueToRValue>
                        (DeclRefExpr 0x9ec1674 <col:47> 'int' lvalue Var 0x9ebf3e0 '__sep_pos' 'int')))))
                (BinaryOperator 0x9ec1750 <line:511:9, col:21> 'int' lvalue '='
                  (DeclRefExpr 0x9ec171c <col:9> 'int' lvalue Var 0x9ebf3e0 '__sep_pos' 'int')
                  (IntegerLiteral 0x9ec1738 <col:21> 'int' 0)))
              (CompoundStmt 0x9ec17c8 <line:514:7, line:517:7>
                (BinaryOperator 0x9ec17a8 <line:515:9, col:22> '_Bool' lvalue '='
                  (DeclRefExpr 0x9ec1780 <col:9> '_Bool' lvalue Var 0x9ec0570 '__testfail' '_Bool')
                  (CXXBoolLiteralExpr 0x9ec1798 <col:22> '_Bool' true))
                (BreakStmt 0x9ec17c0 <line:516:9>))))
          (IfStmt 0x9ec1fe0 <line:519:13, line:540:3>
            <<<NULL>>>
            (CXXOperatorCallExpr 0x9ec18e0 <line:519:17, col:30> '<dependent type>'
              (UnresolvedLookupExpr 0x9ec1880 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30 0x9d5e270 0x9d5ece0 0x9d5f520 0x9d5fa90 0x9e73300)
              (DeclRefExpr 0x9ec1814 <col:17> 'char_type':'_CharT' lvalue Var 0x9ebe420 '__c' 'char_type':'_CharT')
              (CXXDependentScopeMemberExpr 0x9ec1848 <col:24, col:30> '<dependent type>' lvalue
                (DeclRefExpr 0x9ec182c <col:24> 'const __cache_type *' lvalue Var 0x9ebe2b0 '__lc' 'const __cache_type *')))
            (BreakStmt 0x9ec1908 <line:520:3>)
            (CompoundStmt 0x9ec1fb8 <line:522:3, line:540:3>
              (DeclStmt 0x9ec1a40 <line:523:5, line:524:50>
                0x9ec1920 "const char_type *__q =
                  (CallExpr 0x9ec1a18 <col:7, col:49> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9ec1998 <col:7, col:22> '<dependent type>' lvalue)
                    (DeclRefExpr 0x9ec19cc <col:27> 'const char_type *' lvalue Var 0x9ec0bf0 '__lit_zero' 'const char_type *')
                    (DeclRefExpr 0x9ec19e4 <col:39> 'const size_t':'const unsigned int' lvalue Var 0x9ec0240 '__len' 'const size_t':'const unsigned int')
                    (DeclRefExpr 0x9ec19fc <col:46> 'char_type':'_CharT' lvalue Var 0x9ebe420 '__c' 'char_type':'_CharT'))")
              (IfStmt 0x9ec1a88 <line:525:5, line:526:7>
                <<<NULL>>>
                (UnaryOperator 0x9ec1a68 <line:525:9, col:10> '<dependent type>' prefix '!'
                  (DeclRefExpr 0x9ec1a50 <col:10> 'const char_type *' lvalue Var 0x9ec1920 '__q' 'const char_type *'))
                (BreakStmt 0x9ec1a80 <line:526:7>)
                <<<NULL>>>)
              (BinaryOperator 0x9ec1b50 <line:528:5, col:21> '<dependent type>' '='
                (DeclRefExpr 0x9ec1aa4 <col:5> 'int' lvalue Var 0x9ec0b80 '__digit' 'int')
                (CXXOperatorCallExpr 0x9ec1b28 <col:15, col:21> '<dependent type>'
                  (UnresolvedLookupExpr 0x9ec1af0 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
                  (DeclRefExpr 0x9ec1abc <col:15> 'const char_type *' lvalue Var 0x9ec1920 '__q' 'const char_type *')
                  (DeclRefExpr 0x9ec1ad4 <col:21> 'const char_type *' lvalue Var 0x9ec0bf0 '__lit_zero' 'const char_type *')))
              (IfStmt 0x9ec1c10 <line:529:5, line:530:18>
                <<<NULL>>>
                (BinaryOperator 0x9ec1ba8 <line:529:9, col:19> '_Bool' '>'
                  (ImplicitCastExpr 0x9ec1b98 <col:9> 'int' <LValueToRValue>
                    (DeclRefExpr 0x9ec1b68 <col:9> 'int' lvalue Var 0x9ec0b80 '__digit' 'int'))
                  (IntegerLiteral 0x9ec1b80 <col:19> 'int' 15))
                (CompoundAssignOperator 0x9ec1bf0 <line:530:7, col:18> 'int' lvalue '-=' ComputeLHSTy='int' ComputeResultTy='int'
                  (DeclRefExpr 0x9ec1bc0 <col:7> 'int' lvalue Var 0x9ec0b80 '__digit' 'int')
                  (IntegerLiteral 0x9ec1bd8 <col:18> 'int' 6))
                <<<NULL>>>)
              (IfStmt 0x9ec1f98 <line:531:5, line:539:7>
                <<<NULL>>>
                (CXXOperatorCallExpr 0x9ec1ca8 <line:531:9, col:20> '<dependent type>'
                  (UnresolvedLookupExpr 0x9ec1c60 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bad330 0x9bc37b0 0x9bc6740 0x9d622b0 0x9d627e0 0x9d62d10)
                  (DeclRefExpr 0x9ec1c2c <col:9> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type' lvalue Var 0x9ec0b10 '__result' '__unsigned_type':'typename __add_unsigned<_ValueT>::__type')
                  (DeclRefExpr 0x9ec1c44 <col:20> 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type' lvalue Var 0x9ec0a70 '__smax' 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type'))
                (BinaryOperator 0x9ec1cf8 <line:532:7, col:24> '_Bool' lvalue '='
                  (DeclRefExpr 0x9ec1ccc <col:7> '_Bool' lvalue Var 0x9ec05d0 '__testoverflow' '_Bool')
                  (CXXBoolLiteralExpr 0x9ec1ce8 <col:24> '_Bool' true))
                (CompoundStmt 0x9ec1f78 <line:534:7, line:539:7>
                  (CompoundAssignOperator 0x9ec1d40 <line:535:9, col:21> '<dependent type>' lvalue '*=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                    (DeclRefExpr 0x9ec1d10 <col:9> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type' lvalue Var 0x9ec0b10 '__result' '__unsigned_type':'typename __add_unsigned<_ValueT>::__type')
                    (DeclRefExpr 0x9ec1d28 <col:21> 'int' lvalue Var 0x9ebe7f0 '__base' 'int'))
                  (CXXOperatorCallExpr 0x9ec1ed0 <line:536:9, col:46> '<dependent type>'
                    (UnresolvedLookupExpr 0x9ec1e90 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e0ae60 0x9e0c660 0x9e0fd60)
                    (DeclRefExpr 0x9ec1d60 <col:9> '_Bool' lvalue Var 0x9ec05d0 '__testoverflow' '_Bool')
                    (CXXOperatorCallExpr 0x9ec1e68 <col:27, col:46> '<dependent type>'
                      (UnresolvedLookupExpr 0x9ec1e20 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bad330 0x9bc37b0 0x9bc6740 0x9d622b0 0x9d627e0 0x9d62d10)
                      (DeclRefExpr 0x9ec1d78 <col:27> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type' lvalue Var 0x9ec0b10 '__result' '__unsigned_type':'typename __add_unsigned<_ValueT>::__type')
                      (CXXOperatorCallExpr 0x9ec1df8 <col:38, col:46> '<dependent type>'
                        (UnresolvedLookupExpr 0x9ec1dc0 <col:44, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
                        (DeclRefExpr 0x9ec1d90 <col:38> 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type' lvalue Var 0x9ec0650 '__max' 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type')
                        (DeclRefExpr 0x9ec1da8 <col:46> 'int' lvalue Var 0x9ec0b80 '__digit' 'int'))))
                  (CompoundAssignOperator 0x9ec1f28 <line:537:9, col:21> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                    (DeclRefExpr 0x9ec1ef4 <col:9> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type' lvalue Var 0x9ec0b10 '__result' '__unsigned_type':'typename __add_unsigned<_ValueT>::__type')
                    (DeclRefExpr 0x9ec1f0c <col:21> 'int' lvalue Var 0x9ec0b80 '__digit' 'int'))
                  (UnaryOperator 0x9ec1f60 <line:538:9, col:11> 'int' lvalue prefix '++'
                    (DeclRefExpr 0x9ec1f48 <col:11> 'int' lvalue Var 0x9ebf3e0 '__sep_pos' 'int')))))))
        (IfStmt 0x9ec2188 <line:542:8, line:545:15>
          <<<NULL>>>
          (CXXOperatorCallExpr 0x9ec20c0 <line:542:12, col:23> '<dependent type>'
            (UnresolvedLookupExpr 0x9ec2068 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bacde0 0x9bc3130 0x9bc62c0 0x9c11360 0x9c32300 0x9c32670 0x9d60120 0x9d60630 0x9d60b40 0x9e73820)
            (UnaryOperator 0x9ec2038 <col:12, col:14> '<dependent type>' prefix '++'
              (DeclRefExpr 0x9ec201c <col:14> '_InIter' lvalue ParmVar 0x9ebd990 '__beg' '_InIter'))
            (DeclRefExpr 0x9ec204c <col:23> '_InIter' lvalue ParmVar 0x9ebd9d0 '__end' '_InIter'))
          (BinaryOperator 0x9ec2130 <line:543:3, col:10> '<dependent type>' '='
            (DeclRefExpr 0x9ec20e4 <col:3> 'char_type':'_CharT' lvalue Var 0x9ebe420 '__c' 'char_type':'_CharT')
            (UnaryOperator 0x9ec2118 <col:9, col:10> '<dependent type>' prefix '*'
              (DeclRefExpr 0x9ec20fc <col:10> '_InIter' lvalue ParmVar 0x9ebd990 '__beg' '_InIter')))
          (BinaryOperator 0x9ec2170 <line:545:3, col:15> '_Bool' lvalue '='
            (DeclRefExpr 0x9ec2148 <col:3> '_Bool' lvalue Var 0x9ebe9f0 '__testeof' '_Bool')
            (CXXBoolLiteralExpr 0x9ec2160 <col:15> '_Bool' true))))))
  (IfStmt 0x9ec2518 <line:550:2, line:559:4>
    <<<NULL>>>
    (ImplicitCastExpr 0x9ec2260 <line:550:6, col:28> '_Bool' <IntegralToBoolean>
      (CXXMemberCallExpr 0x9ec2230 <col:6, col:28> 'size_type':'unsigned int'
        (MemberExpr 0x9ec220c <col:6, col:23> '<bound member function type>' .size 0x9da2750
          (ImplicitCastExpr 0x9ec2250 <col:6> 'const class std::basic_string<char>' lvalue <NoOp>
            (DeclRefExpr 0x9ec21f4 <col:6> 'string':'class std::basic_string<char>' lvalue Var 0x9ec0410 '__found_grouping' 'string':'class std::basic_string<char>')))))
    (CompoundStmt 0x9ec2500 <line:551:4, line:559:4>
      (CXXOperatorCallExpr 0x9ec2308 <line:553:6, col:53> 'class std::basic_string<char>' lvalue
        (ImplicitCastExpr 0x9ec22f8 <col:23, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9ec22e0 <col:23, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0x9da46d0 'operator+=' 'class std::basic_string<char> &(char)'))
        (DeclRefExpr 0x9ec226c <col:6> 'string':'class std::basic_string<char>' lvalue Var 0x9ec0410 '__found_grouping' 'string':'class std::basic_string<char>')
        (CXXStaticCastExpr 0x9ec22c8 <col:26, col:53> 'char' static_cast<char> <NoOp>
          (ImplicitCastExpr 0x9ec22b8 <col:44> 'char' <IntegralCast>
            (ImplicitCastExpr 0x9ec22a8 <col:44> 'int' <LValueToRValue>
              (DeclRefExpr 0x9ec2284 <col:44> 'int' lvalue Var 0x9ebf3e0 '__sep_pos' 'int')))))
      (IfStmt 0x9ec24e0 <line:555:6, line:558:26>
        <<<NULL>>>
        (UnaryOperator 0x9ec2448 <line:555:10, line:557:22> '<dependent type>' prefix '!'
          (CallExpr 0x9ec2420 <line:555:11, line:557:22> '<dependent type>'
            (DeclRefExpr 0x9ec2344 <line:555:11, col:16> '_Bool (const char *, size_t, const string &) throw()' lvalue Function 0x9eb82b0 '__verify_grouping' '_Bool (const char *, size_t, const string &) throw()')
            (CXXDependentScopeMemberExpr 0x9ec2380 <col:34, col:40> '<dependent type>' lvalue
              (DeclRefExpr 0x9ec2364 <col:34> 'const __cache_type *' lvalue Var 0x9ebe2b0 '__lc' 'const __cache_type *'))
            (CXXDependentScopeMemberExpr 0x9ec23d0 <line:556:6, col:12> '<dependent type>' lvalue
              (DeclRefExpr 0x9ec23b4 <col:6> 'const __cache_type *' lvalue Var 0x9ebe2b0 '__lc' 'const __cache_type *'))
            (DeclRefExpr 0x9ec2404 <line:557:6> 'string':'class std::basic_string<char>' lvalue Var 0x9ec0410 '__found_grouping' 'string':'class std::basic_string<char>')))
        (BinaryOperator 0x9ec24c8 <line:558:8, col:26> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue '='
          (DeclRefExpr 0x9ec245c <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9ebda90 '__err' 'class ios_base::iostate &')
          (ImplicitCastExpr 0x9ec24b8 <col:16, col:26> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9ec2494 <col:16, col:26> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11450 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0x9ec2d28 <line:563:2, line:579:35>
    <<<NULL>>>
    (BinaryOperator 0x9ec26c8 <line:563:6, line:564:9> '_Bool' '||'
      (ParenExpr 0x9ec2688 <line:563:6, col:62> '_Bool'
        (BinaryOperator 0x9ec2670 <col:7, col:61> '_Bool' '&&'
          (BinaryOperator 0x9ec25c8 <col:7, col:22> '_Bool' '&&'
            (UnaryOperator 0x9ec2570 <col:7, col:8> '_Bool' prefix '!'
              (ImplicitCastExpr 0x9ec2560 <col:8> '_Bool' <IntegralToBoolean>
                (ImplicitCastExpr 0x9ec2550 <col:8> 'int' <LValueToRValue>
                  (DeclRefExpr 0x9ec2534 <col:8> 'int' lvalue Var 0x9ebf3e0 '__sep_pos' 'int'))))
            (UnaryOperator 0x9ec25b0 <col:21, col:22> '_Bool' prefix '!'
              (ImplicitCastExpr 0x9ec25a0 <col:22> '_Bool' <LValueToRValue>
                (DeclRefExpr 0x9ec2584 <col:22> '_Bool' lvalue Var 0x9ebf370 '__found_zero' '_Bool'))))
          (UnaryOperator 0x9ec2658 <col:38, col:61> '_Bool' prefix '!'
            (ImplicitCastExpr 0x9ec2648 <col:39, col:61> '_Bool' <IntegralToBoolean>
              (CXXMemberCallExpr 0x9ec2618 <col:39, col:61> 'size_type':'unsigned int'
                (MemberExpr 0x9ec25f8 <col:39, col:56> '<bound member function type>' .size 0x9da2750
                  (ImplicitCastExpr 0x9ec2638 <col:39> 'const class std::basic_string<char>' lvalue <NoOp>
                    (DeclRefExpr 0x9ec25e0 <col:39> 'string':'class std::basic_string<char>' lvalue Var 0x9ec0410 '__found_grouping' 'string':'class std::basic_string<char>'))))))))
      (ImplicitCastExpr 0x9ec26b8 <line:564:9> '_Bool' <LValueToRValue>
        (DeclRefExpr 0x9ec269c <col:9> '_Bool' lvalue Var 0x9ec0570 '__testfail' '_Bool')))
    (CompoundStmt 0x9ec27a8 <line:565:4, line:568:4>
      (BinaryOperator 0x9ec2710 <line:566:6, col:12> '<dependent type>' '='
        (DeclRefExpr 0x9ec26e0 <col:6> '_ValueT' lvalue ParmVar 0x9ebdb00 '__v' '_ValueT &')
        (IntegerLiteral 0x9ec26f8 <col:12> 'int' 0))
      (BinaryOperator 0x9ec2790 <line:567:6, col:24> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue '='
        (DeclRefExpr 0x9ec2728 <col:6> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9ebda90 '__err' 'class ios_base::iostate &')
        (ImplicitCastExpr 0x9ec2780 <col:14, col:24> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
          (DeclRefExpr 0x9ec275c <col:14, col:24> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11450 'failbit' 'const iostate':'const enum std::_Ios_Iostate'))))
    (IfStmt 0x9ec2d08 <line:569:7, line:579:35>
      <<<NULL>>>
      (ImplicitCastExpr 0x9ec27d8 <line:569:11> '_Bool' <LValueToRValue>
        (DeclRefExpr 0x9ec27c0 <col:11> '_Bool' lvalue Var 0x9ec05d0 '__testoverflow' '_Bool'))
      (CompoundStmt 0x9ec2bf0 <line:570:4, line:577:4>
        (IfStmt 0x9ec2b50 <line:571:6, line:575:52>
          <<<NULL>>>
          (BinaryOperator 0x9ec28f8 <line:571:10, line:572:44> '<dependent type>' '&&'
            (DeclRefExpr 0x9ec27e4 <line:571:10> '_Bool' lvalue Var 0x9ebeb00 '__negative' '_Bool')
            (CXXDependentScopeMemberExpr 0x9ec28c0 <line:572:6, col:44> '<dependent type>' lvalue))
          (BinaryOperator 0x9ec2a18 <line:573:8, col:52> '<dependent type>' '='
            (DeclRefExpr 0x9ec2910 <col:8> '_ValueT' lvalue ParmVar 0x9ebdb00 '__v' '_ValueT &')
            (CXXDependentScopeMemberExpr 0x9ec29e0 <col:14, col:52> '<dependent type>' lvalue))
          (BinaryOperator 0x9ec2b38 <line:575:8, col:52> '<dependent type>' '='
            (DeclRefExpr 0x9ec2a30 <col:8> '_ValueT' lvalue ParmVar 0x9ebdb00 '__v' '_ValueT &')
            (CXXDependentScopeMemberExpr 0x9ec2b00 <col:14, col:52> '<dependent type>' lvalue)))
        (BinaryOperator 0x9ec2bd8 <line:576:6, col:24> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue '='
          (DeclRefExpr 0x9ec2b6c <col:6> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9ebda90 '__err' 'class ios_base::iostate &')
          (ImplicitCastExpr 0x9ec2bc8 <col:14, col:24> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9ec2ba4 <col:14, col:24> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11450 'failbit' 'const iostate':'const enum std::_Ios_Iostate'))))
      (BinaryOperator 0x9ec2cf0 <line:579:4, col:35> '<dependent type>' '='
        (DeclRefExpr 0x9ec2c08 <col:4> '_ValueT' lvalue ParmVar 0x9ebdb00 '__v' '_ValueT &')
        (ConditionalOperator 0x9ec2cd0 <col:10, col:35> '<dependent type>'
          (ImplicitCastExpr 0x9ec2cc0 <col:10> '_Bool' <LValueToRValue>
            (DeclRefExpr 0x9ec2c20 <col:10> '_Bool' lvalue Var 0x9ebeb00 '__negative' '_Bool'))
          (CXXOperatorCallExpr 0x9ec2c88 <col:23, col:24> '<dependent type>'
            (UnresolvedLookupExpr 0x9ec2c50 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
            (DeclRefExpr 0x9ec2c38 <col:24> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type' lvalue Var 0x9ec0b10 '__result' '__unsigned_type':'typename __add_unsigned<_ValueT>::__type'))
          (DeclRefExpr 0x9ec2ca8 <col:35> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type' lvalue Var 0x9ec0b10 '__result' '__unsigned_type':'typename __add_unsigned<_ValueT>::__type')))))
  (IfStmt 0x9ec2e40 <line:581:2, line:582:23>
    <<<NULL>>>
    (ImplicitCastExpr 0x9ec2d60 <line:581:6> '_Bool' <LValueToRValue>
      (DeclRefExpr 0x9ec2d44 <col:6> '_Bool' lvalue Var 0x9ebe9f0 '__testeof' '_Bool'))
    (CXXOperatorCallExpr 0x9ec2e18 <line:582:4, col:23> 'const enum std::_Ios_Iostate' lvalue
      (ImplicitCastExpr 0x9ec2e08 <col:10, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9ec2dd8 <col:10, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9e0fd60 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
      (DeclRefExpr 0x9ec2d6c <col:4> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9ebda90 '__err' 'class ios_base::iostate &')
      (ImplicitCastExpr 0x9ec2dc8 <col:13, col:23> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9ec2da4 <col:13, col:23> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e113f0 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (ReturnStmt 0x9ec2e78 <line:583:2, col:9>
    (DeclRefExpr 0x9ec2e5c <col:9> '_InIter' lvalue ParmVar 0x9ebd990 '__beg' '_InIter')))

;
    _InIter do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, bool &__v) const (CompoundStmt 0x9ec5898 </usr/include/c++/4.6/bits/locale_facets.tcc:593:5, line:682:5>
  (IfStmt 0x9ec5850 <line:594:7, line:680:2>
    <<<NULL>>>
    (UnaryOperator 0x9ec35d8 <line:594:11, col:47> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9ec35c8 <col:12, col:47> '_Bool' <IntegralToBoolean>
        (ParenExpr 0x9ec35b0 <col:12, col:47> 'enum std::_Ios_Fmtflags'
          (CXXOperatorCallExpr 0x9ec3588 <col:13, col:38> 'enum std::_Ios_Fmtflags'
            (ImplicitCastExpr 0x9ec3578 <col:26, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9ec3560 <col:26, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9e0a5b0 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
            (CXXMemberCallExpr 0x9ec34e0 <col:13, col:24> 'fmtflags':'enum std::_Ios_Fmtflags'
              (MemberExpr 0x9ec34bc <col:13, col:18> '<bound member function type>' .flags 0x9e133f0
                (ImplicitCastExpr 0x9ec3500 <col:13> 'const class std::ios_base' lvalue <NoOp>
                  (DeclRefExpr 0x9ec3464 <col:13> 'class std::ios_base' lvalue ParmVar 0x9ec3250 '__io' 'class std::ios_base &'))))
            (ImplicitCastExpr 0x9ec3550 <col:28, col:38> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0x9ec352c <col:28, col:38> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9e10c80 'boolalpha' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))))
    (CompoundStmt 0x9ec3bb0 <line:595:9, line:612:9>
      (DeclStmt 0x9ec3678 <line:599:4, col:17>
        0x9ec3600 "long __l =
          (ImplicitCastExpr 0x9ec3668 <col:15, col:16> 'long' <IntegralCast>
            (UnaryOperator 0x9ec3650 <col:15, col:16> 'int' prefix '-'
              (IntegerLiteral 0x9ec3638 <col:16> 'int' 1)))")
      (BinaryOperator 0x9ec3798 <line:600:11, col:64> '<dependent type>' '='
        (DeclRefExpr 0x9ec3688 <col:11> 'iter_type':'_InIter' lvalue ParmVar 0x9ec31c0 '__beg' 'iter_type':'_InIter')
        (CallExpr 0x9ec3768 <col:19, col:64> '<dependent type>'
          (UnresolvedMemberExpr 0x9ec36b0 <col:19> '<bound member function type>' lvalue)
          (DeclRefExpr 0x9ec36ec <col:34> 'iter_type':'_InIter' lvalue ParmVar 0x9ec31c0 '__beg' 'iter_type':'_InIter')
          (DeclRefExpr 0x9ec3704 <col:41> 'iter_type':'_InIter' lvalue ParmVar 0x9ec3200 '__end' 'iter_type':'_InIter')
          (DeclRefExpr 0x9ec371c <col:48> 'class std::ios_base' lvalue ParmVar 0x9ec3250 '__io' 'class std::ios_base &')
          (DeclRefExpr 0x9ec3734 <col:54> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9ec32c0 '__err' 'class ios_base::iostate &')
          (DeclRefExpr 0x9ec374c <col:61> 'long' lvalue Var 0x9ec3600 '__l' 'long')))
      (IfStmt 0x9ec3b90 <line:601:4, line:611:6>
        <<<NULL>>>
        (BinaryOperator 0x9ec3880 <line:601:8, col:27> '_Bool' '||'
          (BinaryOperator 0x9ec3800 <col:8, col:15> '_Bool' '=='
            (ImplicitCastExpr 0x9ec37e0 <col:8> 'long' <LValueToRValue>
              (DeclRefExpr 0x9ec37b0 <col:8> 'long' lvalue Var 0x9ec3600 '__l' 'long'))
            (ImplicitCastExpr 0x9ec37f0 <col:15> 'long' <IntegralCast>
              (IntegerLiteral 0x9ec37c8 <col:15> 'int' 0)))
          (BinaryOperator 0x9ec3868 <col:20, col:27> '_Bool' '=='
            (ImplicitCastExpr 0x9ec3848 <col:20> 'long' <LValueToRValue>
              (DeclRefExpr 0x9ec3818 <col:20> 'long' lvalue Var 0x9ec3600 '__l' 'long'))
            (ImplicitCastExpr 0x9ec3858 <col:27> 'long' <IntegralCast>
              (IntegerLiteral 0x9ec3830 <col:27> 'int' 1))))
        (BinaryOperator 0x9ec3908 <line:602:6, col:20> '_Bool' lvalue '='
          (DeclRefExpr 0x9ec3898 <col:6> '_Bool' lvalue ParmVar 0x9ec3310 '__v' '_Bool &')
          (CXXFunctionalCastExpr 0x9ec38f0 <col:12, col:20> '_Bool' functional cast to _Bool <NoOp>
            (ImplicitCastExpr 0x9ec38e0 <col:17> '_Bool' <IntegralToBoolean>
              (ImplicitCastExpr 0x9ec38d0 <col:17> 'long' <LValueToRValue>
                (DeclRefExpr 0x9ec38b8 <col:17> 'long' lvalue Var 0x9ec3600 '__l' 'long')))))
        (CompoundStmt 0x9ec3b70 <line:604:6, line:611:6>
          (BinaryOperator 0x9ec3948 <line:607:8, col:14> '_Bool' lvalue '='
            (DeclRefExpr 0x9ec3920 <col:8> '_Bool' lvalue ParmVar 0x9ec3310 '__v' '_Bool &')
            (CXXBoolLiteralExpr 0x9ec3938 <col:14> '_Bool' true))
          (BinaryOperator 0x9ec39c8 <line:608:8, col:26> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue '='
            (DeclRefExpr 0x9ec3960 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9ec32c0 '__err' 'class ios_base::iostate &')
            (ImplicitCastExpr 0x9ec39b8 <col:16, col:26> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
              (DeclRefExpr 0x9ec3994 <col:16, col:26> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11450 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
          (IfStmt 0x9ec3b50 <line:609:8, line:610:22>
            <<<NULL>>>
            (CXXOperatorCallExpr 0x9ec3a70 <line:609:12, col:21> '<dependent type>'
              (UnresolvedLookupExpr 0x9ec3a10 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30 0x9d5e270 0x9d5ece0 0x9d5f520 0x9d5fa90 0x9e73300)
              (DeclRefExpr 0x9ec39e0 <col:12> 'iter_type':'_InIter' lvalue ParmVar 0x9ec31c0 '__beg' 'iter_type':'_InIter')
              (DeclRefExpr 0x9ec39f8 <col:21> 'iter_type':'_InIter' lvalue ParmVar 0x9ec3200 '__end' 'iter_type':'_InIter'))
            (CXXOperatorCallExpr 0x9ec3b28 <line:610:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x9ec3b18 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9ec3b00 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9e0fd60 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x9ec3a94 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9ec32c0 '__err' 'class ios_base::iostate &')
              (ImplicitCastExpr 0x9ec3af0 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x9ec3acc <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e113f0 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))))
    (CompoundStmt 0x9ec5810 <line:614:9, line:680:2>
      (DeclStmt 0x9ec3cb0 <line:616:4, col:50>
        0x9ec3c80 "typedef __numpunct_cache<_CharT> __cache_type")
      (DeclStmt 0x9ec3db8 <line:617:4, col:34>
        0x9ec3d80 "__use_cache<__cache_type> __uc")
      (DeclStmt 0x9ec3e80 <line:618:4, col:42>
        0x9ec3de0 "const std::locale &__loc =
          (CXXMemberCallExpr 0x9ec3e50 <col:26, col:41> 'const class std::locale' lvalue
            (MemberExpr 0x9ec3e2c <col:26, col:31> '<bound member function type>' ._M_getloc 0x9e15ff0
              (ImplicitCastExpr 0x9ec3e70 <col:26> 'const class std::ios_base' lvalue <NoOp>
                (DeclRefExpr 0x9ec3e14 <col:26> 'class std::ios_base' lvalue ParmVar 0x9ec3250 '__io' 'class std::ios_base &'))))")
      (DeclStmt 0x9ec3f48 <line:619:4, col:42>
        0x9ec3ec0 "const __cache_type *__lc =
          (CallExpr 0x9ec3f28 <col:31, col:41> '<dependent type>'
            (DeclRefExpr 0x9ec3ef4 <col:31> '__use_cache<__cache_type>' lvalue Var 0x9ec3d80 '__uc' '__use_cache<__cache_type>')
            (DeclRefExpr 0x9ec3f0c <col:36> 'const class std::locale' lvalue Var 0x9ec3de0 '__loc' 'const class std::locale &'))")
      (DeclStmt 0x9ec3fa8 <line:621:4, col:23>
        0x9ec3f60 "bool __testf =
          (CXXBoolLiteralExpr 0x9ec3f98 <col:19> '_Bool' true)")
      (DeclStmt 0x9ec4008 <line:622:4, col:23>
        0x9ec3fc0 "bool __testt =
          (CXXBoolLiteralExpr 0x9ec3ff8 <col:19> '_Bool' true)")
      (DeclStmt 0x9ec4148 <line:623:4, col:47>
        0x9ec4020 "bool __donef =
          (CXXOperatorCallExpr 0x9ec4120 <col:19, col:46> '<dependent type>'
            (UnresolvedLookupExpr 0x9ec40c0 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30 0x9d5e270 0x9d5ece0 0x9d5f520 0x9d5fa90 0x9e73300)
            (CXXDependentScopeMemberExpr 0x9ec4070 <col:19, col:25> '<dependent type>' lvalue
              (DeclRefExpr 0x9ec4054 <col:19> 'const __cache_type *' lvalue Var 0x9ec3ec0 '__lc' 'const __cache_type *'))
            (IntegerLiteral 0x9ec40a8 <col:46> 'int' 0))")
      (DeclStmt 0x9ec4288 <line:624:4, col:46>
        0x9ec4160 "bool __donet =
          (CXXOperatorCallExpr 0x9ec4260 <col:19, col:45> '<dependent type>'
            (UnresolvedLookupExpr 0x9ec4200 <col:42, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30 0x9d5e270 0x9d5ece0 0x9d5f520 0x9d5fa90 0x9e73300)
            (CXXDependentScopeMemberExpr 0x9ec41b0 <col:19, col:25> '<dependent type>' lvalue
              (DeclRefExpr 0x9ec4194 <col:19> 'const __cache_type *' lvalue Var 0x9ec3ec0 '__lc' 'const __cache_type *'))
            (IntegerLiteral 0x9ec41e8 <col:45> 'int' 0))")
      (DeclStmt 0x9ec42e8 <line:625:4, col:26>
        0x9ec42a0 "bool __testeof =
          (CXXBoolLiteralExpr 0x9ec42d8 <col:21> '_Bool' false)")
      (DeclStmt 0x9ec4360 <line:626:4, col:18>
        0x9ec4300 "size_t __n =
          (ImplicitCastExpr 0x9ec4350 <col:17> 'size_t':'unsigned int' <IntegralCast>
            (IntegerLiteral 0x9ec4338 <col:17> 'int' 0))")
      (WhileStmt 0x9ec4e98 <line:627:4, line:657:6>
        <<<NULL>>>
        (BinaryOperator 0x9ec43f0 <line:627:11, col:24> '_Bool' '||'
          (UnaryOperator 0x9ec4398 <col:11, col:12> '_Bool' prefix '!'
            (ImplicitCastExpr 0x9ec4388 <col:12> '_Bool' <LValueToRValue>
              (DeclRefExpr 0x9ec4370 <col:12> '_Bool' lvalue Var 0x9ec4020 '__donef' '_Bool')))
          (UnaryOperator 0x9ec43d8 <col:23, col:24> '_Bool' prefix '!'
            (ImplicitCastExpr 0x9ec43c8 <col:24> '_Bool' <LValueToRValue>
              (DeclRefExpr 0x9ec43ac <col:24> '_Bool' lvalue Var 0x9ec4160 '__donet' '_Bool'))))
        (CompoundStmt 0x9ec4e58 <line:628:6, line:657:6>
          (IfStmt 0x9ec4520 <line:629:8, line:633:3>
            <<<NULL>>>
            (CXXOperatorCallExpr 0x9ec4498 <line:629:12, col:21> '<dependent type>'
              (UnresolvedLookupExpr 0x9ec4438 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30 0x9d5e270 0x9d5ece0 0x9d5f520 0x9d5fa90 0x9e73300)
              (DeclRefExpr 0x9ec4408 <col:12> 'iter_type':'_InIter' lvalue ParmVar 0x9ec31c0 '__beg' 'iter_type':'_InIter')
              (DeclRefExpr 0x9ec4420 <col:21> 'iter_type':'_InIter' lvalue ParmVar 0x9ec3200 '__end' 'iter_type':'_InIter'))
            (CompoundStmt 0x9ec4508 <line:630:3, line:633:3>
              (BinaryOperator 0x9ec44e8 <line:631:5, col:17> '_Bool' lvalue '='
                (DeclRefExpr 0x9ec44bc <col:5> '_Bool' lvalue Var 0x9ec42a0 '__testeof' '_Bool')
                (CXXBoolLiteralExpr 0x9ec44d8 <col:17> '_Bool' true))
              (BreakStmt 0x9ec4500 <line:632:5>))
            <<<NULL>>>)
          (DeclStmt 0x9ec45b8 <line:635:8, col:36>
            0x9ec4550 "const char_type __c =
              (UnaryOperator 0x9ec45a0 <col:30, col:31> '<dependent type>' prefix '*'
                (DeclRefExpr 0x9ec4584 <col:31> 'iter_type':'_InIter' lvalue ParmVar 0x9ec31c0 '__beg' 'iter_type':'_InIter'))")
          (IfStmt 0x9ec4758 <line:637:8, line:638:42>
            <<<NULL>>>
            (UnaryOperator 0x9ec45f0 <line:637:12, col:13> '_Bool' prefix '!'
              (ImplicitCastExpr 0x9ec45e0 <col:13> '_Bool' <LValueToRValue>
                (DeclRefExpr 0x9ec45c8 <col:13> '_Bool' lvalue Var 0x9ec4020 '__donef' '_Bool')))
            (BinaryOperator 0x9ec4740 <line:638:3, col:42> '<dependent type>' '='
              (DeclRefExpr 0x9ec4604 <col:3> '_Bool' lvalue Var 0x9ec3f60 '__testf' '_Bool')
              (CXXOperatorCallExpr 0x9ec4718 <col:13, col:42> '<dependent type>'
                (UnresolvedLookupExpr 0x9ec46b8 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30 0x9d5e270 0x9d5ece0 0x9d5f520 0x9d5fa90 0x9e73300)
                (DeclRefExpr 0x9ec461c <col:13> 'const char_type':'const _CharT' lvalue Var 0x9ec4550 '__c' 'const char_type':'const _CharT')
                (ArraySubscriptExpr 0x9ec46a0 <col:20, col:42> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0x9ec4650 <col:20, col:26> '<dependent type>' lvalue
                    (DeclRefExpr 0x9ec4634 <col:20> 'const __cache_type *' lvalue Var 0x9ec3ec0 '__lc' 'const __cache_type *'))
                  (DeclRefExpr 0x9ec4684 <col:39> 'size_t':'unsigned int' lvalue Var 0x9ec4300 '__n' 'size_t':'unsigned int'))))
            <<<NULL>>>)
          (IfStmt 0x9ec4800 <line:640:8, line:641:3>
            <<<NULL>>>
            (BinaryOperator 0x9ec47e0 <line:640:12, col:24> '_Bool' '&&'
              (UnaryOperator 0x9ec47a0 <col:12, col:13> '_Bool' prefix '!'
                (ImplicitCastExpr 0x9ec4790 <col:13> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0x9ec4774 <col:13> '_Bool' lvalue Var 0x9ec3f60 '__testf' '_Bool')))
              (ImplicitCastExpr 0x9ec47d0 <col:24> '_Bool' <LValueToRValue>
                (DeclRefExpr 0x9ec47b4 <col:24> '_Bool' lvalue Var 0x9ec4160 '__donet' '_Bool')))
            (BreakStmt 0x9ec47f8 <line:641:3>)
            <<<NULL>>>)
          (IfStmt 0x9ec49b0 <line:643:8, line:644:41>
            <<<NULL>>>
            (UnaryOperator 0x9ec4848 <line:643:12, col:13> '_Bool' prefix '!'
              (ImplicitCastExpr 0x9ec4838 <col:13> '_Bool' <LValueToRValue>
                (DeclRefExpr 0x9ec481c <col:13> '_Bool' lvalue Var 0x9ec4160 '__donet' '_Bool')))
            (BinaryOperator 0x9ec4998 <line:644:3, col:41> '<dependent type>' '='
              (DeclRefExpr 0x9ec485c <col:3> '_Bool' lvalue Var 0x9ec3fc0 '__testt' '_Bool')
              (CXXOperatorCallExpr 0x9ec4970 <col:13, col:41> '<dependent type>'
                (UnresolvedLookupExpr 0x9ec4910 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30 0x9d5e270 0x9d5ece0 0x9d5f520 0x9d5fa90 0x9e73300)
                (DeclRefExpr 0x9ec4874 <col:13> 'const char_type':'const _CharT' lvalue Var 0x9ec4550 '__c' 'const char_type':'const _CharT')
                (ArraySubscriptExpr 0x9ec48f8 <col:20, col:41> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0x9ec48a8 <col:20, col:26> '<dependent type>' lvalue
                    (DeclRefExpr 0x9ec488c <col:20> 'const __cache_type *' lvalue Var 0x9ec3ec0 '__lc' 'const __cache_type *'))
                  (DeclRefExpr 0x9ec48dc <col:38> 'size_t':'unsigned int' lvalue Var 0x9ec4300 '__n' 'size_t':'unsigned int'))))
            <<<NULL>>>)
          (IfStmt 0x9ec4a58 <line:646:8, line:647:3>
            <<<NULL>>>
            (BinaryOperator 0x9ec4a38 <line:646:12, col:24> '_Bool' '&&'
              (UnaryOperator 0x9ec49f8 <col:12, col:13> '_Bool' prefix '!'
                (ImplicitCastExpr 0x9ec49e8 <col:13> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0x9ec49cc <col:13> '_Bool' lvalue Var 0x9ec3fc0 '__testt' '_Bool')))
              (ImplicitCastExpr 0x9ec4a28 <col:24> '_Bool' <LValueToRValue>
                (DeclRefExpr 0x9ec4a0c <col:24> '_Bool' lvalue Var 0x9ec4020 '__donef' '_Bool')))
            (BreakStmt 0x9ec4a50 <line:647:3>)
            <<<NULL>>>)
          (IfStmt 0x9ec4b18 <line:649:8, line:650:3>
            <<<NULL>>>
            (BinaryOperator 0x9ec4af8 <line:649:12, col:25> '_Bool' '&&'
              (UnaryOperator 0x9ec4aa0 <col:12, col:13> '_Bool' prefix '!'
                (ImplicitCastExpr 0x9ec4a90 <col:13> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0x9ec4a74 <col:13> '_Bool' lvalue Var 0x9ec3fc0 '__testt' '_Bool')))
              (UnaryOperator 0x9ec4ae0 <col:24, col:25> '_Bool' prefix '!'
                (ImplicitCastExpr 0x9ec4ad0 <col:25> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0x9ec4ab4 <col:25> '_Bool' lvalue Var 0x9ec3f60 '__testf' '_Bool'))))
            (BreakStmt 0x9ec4b10 <line:650:3>)
            <<<NULL>>>)
          (UnaryOperator 0x9ec4b50 <line:652:8, col:10> 'size_t':'unsigned int' lvalue prefix '++'
            (DeclRefExpr 0x9ec4b34 <col:10> 'size_t':'unsigned int' lvalue Var 0x9ec4300 '__n' 'size_t':'unsigned int'))
          (UnaryOperator 0x9ec4b80 <line:653:8, col:10> '<dependent type>' prefix '++'
            (DeclRefExpr 0x9ec4b64 <col:10> 'iter_type':'_InIter' lvalue ParmVar 0x9ec31c0 '__beg' 'iter_type':'_InIter'))
          (BinaryOperator 0x9ec4ce0 <line:655:8, col:43> '<dependent type>' '='
            (DeclRefExpr 0x9ec4b94 <col:8> '_Bool' lvalue Var 0x9ec4020 '__donef' '_Bool')
            (BinaryOperator 0x9ec4cc8 <col:18, col:43> '<dependent type>' '||'
              (UnaryOperator 0x9ec4bd8 <col:18, col:19> '_Bool' prefix '!'
                (ImplicitCastExpr 0x9ec4bc8 <col:19> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0x9ec4bac <col:19> '_Bool' lvalue Var 0x9ec3f60 '__testf' '_Bool')))
              (CXXOperatorCallExpr 0x9ec4ca0 <col:30, col:43> '<dependent type>'
                (UnresolvedLookupExpr 0x9ec4c58 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bae1e0 0x9bc3fc0 0x9bc7850 0x9d64480 0x9d649b0 0x9d64ee0)
                (DeclRefExpr 0x9ec4bec <col:30> 'size_t':'unsigned int' lvalue Var 0x9ec4300 '__n' 'size_t':'unsigned int')
                (CXXDependentScopeMemberExpr 0x9ec4c20 <col:37, col:43> '<dependent type>' lvalue
                  (DeclRefExpr 0x9ec4c04 <col:37> 'const __cache_type *' lvalue Var 0x9ec3ec0 '__lc' 'const __cache_type *')))))
          (BinaryOperator 0x9ec4e40 <line:656:8, col:43> '<dependent type>' '='
            (DeclRefExpr 0x9ec4cf8 <col:8> '_Bool' lvalue Var 0x9ec4160 '__donet' '_Bool')
            (BinaryOperator 0x9ec4e28 <col:18, col:43> '<dependent type>' '||'
              (UnaryOperator 0x9ec4d38 <col:18, col:19> '_Bool' prefix '!'
                (ImplicitCastExpr 0x9ec4d28 <col:19> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0x9ec4d10 <col:19> '_Bool' lvalue Var 0x9ec3fc0 '__testt' '_Bool')))
              (CXXOperatorCallExpr 0x9ec4e00 <col:30, col:43> '<dependent type>'
                (UnresolvedLookupExpr 0x9ec4db8 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bae1e0 0x9bc3fc0 0x9bc7850 0x9d64480 0x9d649b0 0x9d64ee0)
                (DeclRefExpr 0x9ec4d4c <col:30> 'size_t':'unsigned int' lvalue Var 0x9ec4300 '__n' 'size_t':'unsigned int')
                (CXXDependentScopeMemberExpr 0x9ec4d80 <col:37, col:43> '<dependent type>' lvalue
                  (DeclRefExpr 0x9ec4d64 <col:37> 'const __cache_type *' lvalue Var 0x9ec3ec0 '__lc' 'const __cache_type *')))))))
      (IfStmt 0x9ec57f0 <line:658:4, line:679:6>
        <<<NULL>>>
        (BinaryOperator 0x9ec4fe8 <line:658:8, col:53> '<dependent type>' '&&'
          (BinaryOperator 0x9ec4fb8 <col:8, col:32> '<dependent type>' '&&'
            (DeclRefExpr 0x9ec4eac <col:8> '_Bool' lvalue Var 0x9ec3f60 '__testf' '_Bool')
            (CXXOperatorCallExpr 0x9ec4f90 <col:19, col:32> '<dependent type>'
              (UnresolvedLookupExpr 0x9ec4f30 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30 0x9d5e270 0x9d5ece0 0x9d5f520 0x9d5fa90 0x9e73300)
              (DeclRefExpr 0x9ec4ec4 <col:19> 'size_t':'unsigned int' lvalue Var 0x9ec4300 '__n' 'size_t':'unsigned int')
              (CXXDependentScopeMemberExpr 0x9ec4ef8 <col:26, col:32> '<dependent type>' lvalue
                (DeclRefExpr 0x9ec4edc <col:26> 'const __cache_type *' lvalue Var 0x9ec3ec0 '__lc' 'const __cache_type *'))))
          (DeclRefExpr 0x9ec4fd0 <col:53> 'size_t':'unsigned int' lvalue Var 0x9ec4300 '__n' 'size_t':'unsigned int'))
        (CompoundStmt 0x9ec5308 <line:659:6, line:665:6>
          (BinaryOperator 0x9ec5028 <line:660:8, col:14> '_Bool' lvalue '='
            (DeclRefExpr 0x9ec5000 <col:8> '_Bool' lvalue ParmVar 0x9ec3310 '__v' '_Bool &')
            (CXXBoolLiteralExpr 0x9ec5018 <col:14> '_Bool' false))
          (IfStmt 0x9ec52e8 <line:661:8, line:664:52>
            <<<NULL>>>
            (BinaryOperator 0x9ec5148 <line:661:12, col:36> '<dependent type>' '&&'
              (DeclRefExpr 0x9ec5040 <col:12> '_Bool' lvalue Var 0x9ec3fc0 '__testt' '_Bool')
              (CXXOperatorCallExpr 0x9ec5120 <col:23, col:36> '<dependent type>'
                (UnresolvedLookupExpr 0x9ec50c0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30 0x9d5e270 0x9d5ece0 0x9d5f520 0x9d5fa90 0x9e73300)
                (DeclRefExpr 0x9ec5058 <col:23> 'size_t':'unsigned int' lvalue Var 0x9ec4300 '__n' 'size_t':'unsigned int')
                (CXXDependentScopeMemberExpr 0x9ec5088 <col:30, col:36> '<dependent type>' lvalue
                  (DeclRefExpr 0x9ec5070 <col:30> 'const __cache_type *' lvalue Var 0x9ec3ec0 '__lc' 'const __cache_type *'))))
            (BinaryOperator 0x9ec51c8 <line:662:3, col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue '='
              (DeclRefExpr 0x9ec5160 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9ec32c0 '__err' 'class ios_base::iostate &')
              (ImplicitCastExpr 0x9ec51b8 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x9ec5194 <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11450 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
            (BinaryOperator 0x9ec52d0 <line:664:3, col:52> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue '='
              (DeclRefExpr 0x9ec51e0 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9ec32c0 '__err' 'class ios_base::iostate &')
              (ImplicitCastExpr 0x9ec52c0 <col:11, col:52> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (ConditionalOperator 0x9ec52a0 <col:11, col:52> 'const iostate':'const enum std::_Ios_Iostate' lvalue
                  (ImplicitCastExpr 0x9ec5290 <col:11> '_Bool' <LValueToRValue>
                    (DeclRefExpr 0x9ec51f8 <col:11> '_Bool' lvalue Var 0x9ec42a0 '__testeof' '_Bool'))
                  (DeclRefExpr 0x9ec522c <col:23, col:33> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e113f0 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')
                  (DeclRefExpr 0x9ec526c <col:42, col:52> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e114b0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))))))
        (IfStmt 0x9ec57d0 <line:666:9, line:679:6>
          <<<NULL>>>
          (BinaryOperator 0x9ec5478 <line:666:13, col:57> '<dependent type>' '&&'
            (BinaryOperator 0x9ec5428 <col:13, col:37> '<dependent type>' '&&'
              (DeclRefExpr 0x9ec5320 <col:13> '_Bool' lvalue Var 0x9ec3fc0 '__testt' '_Bool')
              (CXXOperatorCallExpr 0x9ec5400 <col:24, col:37> '<dependent type>'
                (UnresolvedLookupExpr 0x9ec53a0 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30 0x9d5e270 0x9d5ece0 0x9d5f520 0x9d5fa90 0x9e73300)
                (DeclRefExpr 0x9ec5338 <col:24> 'size_t':'unsigned int' lvalue Var 0x9ec4300 '__n' 'size_t':'unsigned int')
                (CXXDependentScopeMemberExpr 0x9ec5368 <col:31, col:37> '<dependent type>' lvalue
                  (DeclRefExpr 0x9ec5350 <col:31> 'const __cache_type *' lvalue Var 0x9ec3ec0 '__lc' 'const __cache_type *'))))
            (DeclRefExpr 0x9ec5460 <col:57> 'size_t':'unsigned int' lvalue Var 0x9ec4300 '__n' 'size_t':'unsigned int'))
          (CompoundStmt 0x9ec55d8 <line:667:6, line:670:6>
            (BinaryOperator 0x9ec54b8 <line:668:8, col:14> '_Bool' lvalue '='
              (DeclRefExpr 0x9ec5490 <col:8> '_Bool' lvalue ParmVar 0x9ec3310 '__v' '_Bool &')
              (CXXBoolLiteralExpr 0x9ec54a8 <col:14> '_Bool' true))
            (BinaryOperator 0x9ec55c0 <line:669:8, col:57> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue '='
              (DeclRefExpr 0x9ec54d0 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9ec32c0 '__err' 'class ios_base::iostate &')
              (ImplicitCastExpr 0x9ec55b0 <col:16, col:57> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (ConditionalOperator 0x9ec5590 <col:16, col:57> 'const iostate':'const enum std::_Ios_Iostate' lvalue
                  (ImplicitCastExpr 0x9ec5580 <col:16> '_Bool' <LValueToRValue>
                    (DeclRefExpr 0x9ec54e8 <col:16> '_Bool' lvalue Var 0x9ec42a0 '__testeof' '_Bool'))
                  (DeclRefExpr 0x9ec551c <col:28, col:38> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e113f0 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')
                  (DeclRefExpr 0x9ec555c <col:47, col:57> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e114b0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate')))))
          (CompoundStmt 0x9ec57b0 <line:672:6, line:679:6>
            (BinaryOperator 0x9ec5618 <line:675:8, col:14> '_Bool' lvalue '='
              (DeclRefExpr 0x9ec55f0 <col:8> '_Bool' lvalue ParmVar 0x9ec3310 '__v' '_Bool &')
              (CXXBoolLiteralExpr 0x9ec5608 <col:14> '_Bool' false))
            (BinaryOperator 0x9ec5698 <line:676:8, col:26> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue '='
              (DeclRefExpr 0x9ec5630 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9ec32c0 '__err' 'class ios_base::iostate &')
              (ImplicitCastExpr 0x9ec5688 <col:16, col:26> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x9ec5664 <col:16, col:26> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11450 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
            (IfStmt 0x9ec5790 <line:677:8, line:678:22>
              <<<NULL>>>
              (ImplicitCastExpr 0x9ec56c8 <line:677:12> '_Bool' <LValueToRValue>
                (DeclRefExpr 0x9ec56b0 <col:12> '_Bool' lvalue Var 0x9ec42a0 '__testeof' '_Bool'))
              (CXXOperatorCallExpr 0x9ec5768 <line:678:3, col:22> 'const enum std::_Ios_Iostate' lvalue
                (ImplicitCastExpr 0x9ec5758 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                  (DeclRefExpr 0x9ec5740 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9e0fd60 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
                (DeclRefExpr 0x9ec56d4 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9ec32c0 '__err' 'class ios_base::iostate &')
                (ImplicitCastExpr 0x9ec5730 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                  (DeclRefExpr 0x9ec570c <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e113f0 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
              <<<NULL>>>))))))
  (ReturnStmt 0x9ec5888 <line:681:7, col:14>
    (DeclRefExpr 0x9ec586c <col:14> 'iter_type':'_InIter' lvalue ParmVar 0x9ec31c0 '__beg' 'iter_type':'_InIter')))


    _InIter do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, float &__v) const (CompoundStmt 0x9ec63d0 </usr/include/c++/4.6/bits/locale_facets.tcc:689:5, line:697:5>
  (DeclStmt 0x9ec5e58 <line:690:7, col:20>
    0x9ec5e00 "string __xtrc =
      (CXXConstructExpr 0x9ec5e38 <col:14> 'string':'class std::basic_string<char>''void (void)')")
  (CXXMemberCallExpr 0x9ec5eb8 <line:691:7, col:24> 'void'
    (MemberExpr 0x9ec5e80 <col:7, col:14> '<bound member function type>' .reserve 0x9da3290
      (DeclRefExpr 0x9ec5e68 <col:7> 'string':'class std::basic_string<char>' lvalue Var 0x9ec5e00 '__xtrc' 'string':'class std::basic_string<char>'))
    (ImplicitCastExpr 0x9ec5ed8 <col:22> 'size_type':'unsigned int' <IntegralCast>
      (IntegerLiteral 0x9ec5ea0 <col:22> 'int' 32)))
  (BinaryOperator 0x9ec5fd8 <line:692:7, col:65> '<dependent type>' '='
    (DeclRefExpr 0x9ec5ee4 <col:7> 'iter_type':'_InIter' lvalue ParmVar 0x9ec5b50 '__beg' 'iter_type':'_InIter')
    (CallExpr 0x9ec5fa8 <col:15, col:65> '<dependent type>'
      (MemberExpr 0x9ec5f10 <col:15> '<bound member function type>' ->_M_extract_float 0x9eb8800
        (CXXThisExpr 0x9ec5f00 <col:15> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0x9ec5f30 <col:32> 'iter_type':'_InIter' lvalue ParmVar 0x9ec5b50 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0x9ec5f48 <col:39> 'iter_type':'_InIter' lvalue ParmVar 0x9ec5b90 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x9ec5f60 <col:46> 'class std::ios_base' lvalue ParmVar 0x9ec5be0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9ec5f78 <col:52> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9ec5c50 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x9ec5f90 <col:59> 'string':'class std::basic_string<char>' lvalue Var 0x9ec5e00 '__xtrc' 'string':'class std::basic_string<char>')))
  (CallExpr 0x9ec61d8 <line:693:7, col:72> 'void'
    (ImplicitCastExpr 0x9ec61c8 <col:7, col:12> 'void (*)(const char *, float &, class ios_base::iostate &, const __c_locale &) throw()' <FunctionToPointerDecay>
      (DeclRefExpr 0x9ec6160 <col:7, col:12> 'void (const char *, float &, class ios_base::iostate &, const __c_locale &) throw()' lvalue Function 0x9e7bbd0 '__convert_to_v' 'void (const char *, float &, class ios_base::iostate &, const __c_locale &) throw()' (FunctionTemplate 0x9e7b370 '__convert_to_v')))
    (CXXMemberCallExpr 0x9ec6088 <col:27, col:40> 'const char *'
      (MemberExpr 0x9ec6064 <col:27, col:34> '<bound member function type>' .c_str 0x9db30a0
        (ImplicitCastExpr 0x9ec60a8 <col:27> 'const class std::basic_string<char>' lvalue <NoOp>
          (DeclRefExpr 0x9ec604c <col:27> 'string':'class std::basic_string<char>' lvalue Var 0x9ec5e00 '__xtrc' 'string':'class std::basic_string<char>'))))
    (DeclRefExpr 0x9ec60b4 <col:43> 'float' lvalue ParmVar 0x9ec5ca0 '__v' 'float &')
    (DeclRefExpr 0x9ec60cc <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9ec5c50 '__err' 'class ios_base::iostate &')
    (MaterializeTemporaryExpr 0x9ec6208 <col:55, col:71> 'const __c_locale':'struct __locale_struct *const' lvalue
      (CallExpr 0x9ec6110 <col:55, col:71> '__c_locale':'struct __locale_struct *'
        (ImplicitCastExpr 0x9ec6100 <col:55> '__c_locale (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9ec60e4 <col:55> '__c_locale (void)' lvalue CXXMethod 0x9def8a0 '_S_get_c_locale' '__c_locale (void)')))))
  (IfStmt 0x9ec6388 <line:694:7, line:695:21>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9ec62a8 <line:694:11, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0x9ec6248 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30 0x9d5e270 0x9d5ece0 0x9d5f520 0x9d5fa90 0x9e73300)
      (DeclRefExpr 0x9ec6214 <col:11> 'iter_type':'_InIter' lvalue ParmVar 0x9ec5b50 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0x9ec622c <col:20> 'iter_type':'_InIter' lvalue ParmVar 0x9ec5b90 '__end' 'iter_type':'_InIter'))
    (CXXOperatorCallExpr 0x9ec6360 <line:695:2, col:21> 'const enum std::_Ios_Iostate' lvalue
      (ImplicitCastExpr 0x9ec6350 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9ec6338 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9e0fd60 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
      (DeclRefExpr 0x9ec62cc <col:2> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9ec5c50 '__err' 'class ios_base::iostate &')
      (ImplicitCastExpr 0x9ec6328 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9ec6304 <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e113f0 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (ReturnStmt 0x9ec63c0 <line:696:7, col:14>
    (DeclRefExpr 0x9ec63a4 <col:14> 'iter_type':'_InIter' lvalue ParmVar 0x9ec5b50 '__beg' 'iter_type':'_InIter')))


    _InIter do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, double &__v) const (CompoundStmt 0x9ec6f20 </usr/include/c++/4.6/bits/locale_facets.tcc:704:5, line:712:5>
  (DeclStmt 0x9ec69a8 <line:705:7, col:20>
    0x9ec6950 "string __xtrc =
      (CXXConstructExpr 0x9ec6988 <col:14> 'string':'class std::basic_string<char>''void (void)')")
  (CXXMemberCallExpr 0x9ec6a08 <line:706:7, col:24> 'void'
    (MemberExpr 0x9ec69d0 <col:7, col:14> '<bound member function type>' .reserve 0x9da3290
      (DeclRefExpr 0x9ec69b8 <col:7> 'string':'class std::basic_string<char>' lvalue Var 0x9ec6950 '__xtrc' 'string':'class std::basic_string<char>'))
    (ImplicitCastExpr 0x9ec6a28 <col:22> 'size_type':'unsigned int' <IntegralCast>
      (IntegerLiteral 0x9ec69f0 <col:22> 'int' 32)))
  (BinaryOperator 0x9ec6b28 <line:707:7, col:65> '<dependent type>' '='
    (DeclRefExpr 0x9ec6a34 <col:7> 'iter_type':'_InIter' lvalue ParmVar 0x9ec66a0 '__beg' 'iter_type':'_InIter')
    (CallExpr 0x9ec6af8 <col:15, col:65> '<dependent type>'
      (MemberExpr 0x9ec6a60 <col:15> '<bound member function type>' ->_M_extract_float 0x9eb8800
        (CXXThisExpr 0x9ec6a50 <col:15> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0x9ec6a80 <col:32> 'iter_type':'_InIter' lvalue ParmVar 0x9ec66a0 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0x9ec6a98 <col:39> 'iter_type':'_InIter' lvalue ParmVar 0x9ec66e0 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x9ec6ab0 <col:46> 'class std::ios_base' lvalue ParmVar 0x9ec6730 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9ec6ac8 <col:52> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9ec67a0 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x9ec6ae0 <col:59> 'string':'class std::basic_string<char>' lvalue Var 0x9ec6950 '__xtrc' 'string':'class std::basic_string<char>')))
  (CallExpr 0x9ec6d28 <line:708:7, col:72> 'void'
    (ImplicitCastExpr 0x9ec6d18 <col:7, col:12> 'void (*)(const char *, double &, class ios_base::iostate &, const __c_locale &) throw()' <FunctionToPointerDecay>
      (DeclRefExpr 0x9ec6cb0 <col:7, col:12> 'void (const char *, double &, class ios_base::iostate &, const __c_locale &) throw()' lvalue Function 0x9e7c150 '__convert_to_v' 'void (const char *, double &, class ios_base::iostate &, const __c_locale &) throw()' (FunctionTemplate 0x9e7b370 '__convert_to_v')))
    (CXXMemberCallExpr 0x9ec6bd8 <col:27, col:40> 'const char *'
      (MemberExpr 0x9ec6bb4 <col:27, col:34> '<bound member function type>' .c_str 0x9db30a0
        (ImplicitCastExpr 0x9ec6bf8 <col:27> 'const class std::basic_string<char>' lvalue <NoOp>
          (DeclRefExpr 0x9ec6b9c <col:27> 'string':'class std::basic_string<char>' lvalue Var 0x9ec6950 '__xtrc' 'string':'class std::basic_string<char>'))))
    (DeclRefExpr 0x9ec6c04 <col:43> 'double' lvalue ParmVar 0x9ec67f0 '__v' 'double &')
    (DeclRefExpr 0x9ec6c1c <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9ec67a0 '__err' 'class ios_base::iostate &')
    (MaterializeTemporaryExpr 0x9ec6d58 <col:55, col:71> 'const __c_locale':'struct __locale_struct *const' lvalue
      (CallExpr 0x9ec6c60 <col:55, col:71> '__c_locale':'struct __locale_struct *'
        (ImplicitCastExpr 0x9ec6c50 <col:55> '__c_locale (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9ec6c34 <col:55> '__c_locale (void)' lvalue CXXMethod 0x9def8a0 '_S_get_c_locale' '__c_locale (void)')))))
  (IfStmt 0x9ec6ed8 <line:709:7, line:710:21>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9ec6df8 <line:709:11, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0x9ec6d98 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30 0x9d5e270 0x9d5ece0 0x9d5f520 0x9d5fa90 0x9e73300)
      (DeclRefExpr 0x9ec6d64 <col:11> 'iter_type':'_InIter' lvalue ParmVar 0x9ec66a0 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0x9ec6d7c <col:20> 'iter_type':'_InIter' lvalue ParmVar 0x9ec66e0 '__end' 'iter_type':'_InIter'))
    (CXXOperatorCallExpr 0x9ec6eb0 <line:710:2, col:21> 'const enum std::_Ios_Iostate' lvalue
      (ImplicitCastExpr 0x9ec6ea0 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9ec6e88 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9e0fd60 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
      (DeclRefExpr 0x9ec6e1c <col:2> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9ec67a0 '__err' 'class ios_base::iostate &')
      (ImplicitCastExpr 0x9ec6e78 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9ec6e54 <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e113f0 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (ReturnStmt 0x9ec6f10 <line:711:7, col:14>
    (DeclRefExpr 0x9ec6ef4 <col:14> 'iter_type':'_InIter' lvalue ParmVar 0x9ec66a0 '__beg' 'iter_type':'_InIter')))


    _InIter do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long double &__v) const (CompoundStmt 0x9ec7a70 </usr/include/c++/4.6/bits/locale_facets.tcc:736:5, line:744:5>
  (DeclStmt 0x9ec74f8 <line:737:7, col:20>
    0x9ec74a0 "string __xtrc =
      (CXXConstructExpr 0x9ec74d8 <col:14> 'string':'class std::basic_string<char>''void (void)')")
  (CXXMemberCallExpr 0x9ec7558 <line:738:7, col:24> 'void'
    (MemberExpr 0x9ec7520 <col:7, col:14> '<bound member function type>' .reserve 0x9da3290
      (DeclRefExpr 0x9ec7508 <col:7> 'string':'class std::basic_string<char>' lvalue Var 0x9ec74a0 '__xtrc' 'string':'class std::basic_string<char>'))
    (ImplicitCastExpr 0x9ec7578 <col:22> 'size_type':'unsigned int' <IntegralCast>
      (IntegerLiteral 0x9ec7540 <col:22> 'int' 32)))
  (BinaryOperator 0x9ec7678 <line:739:7, col:65> '<dependent type>' '='
    (DeclRefExpr 0x9ec7584 <col:7> 'iter_type':'_InIter' lvalue ParmVar 0x9ec71f0 '__beg' 'iter_type':'_InIter')
    (CallExpr 0x9ec7648 <col:15, col:65> '<dependent type>'
      (MemberExpr 0x9ec75b0 <col:15> '<bound member function type>' ->_M_extract_float 0x9eb8800
        (CXXThisExpr 0x9ec75a0 <col:15> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0x9ec75d0 <col:32> 'iter_type':'_InIter' lvalue ParmVar 0x9ec71f0 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0x9ec75e8 <col:39> 'iter_type':'_InIter' lvalue ParmVar 0x9ec7230 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x9ec7600 <col:46> 'class std::ios_base' lvalue ParmVar 0x9ec7280 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9ec7618 <col:52> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9ec72f0 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x9ec7630 <col:59> 'string':'class std::basic_string<char>' lvalue Var 0x9ec74a0 '__xtrc' 'string':'class std::basic_string<char>')))
  (CallExpr 0x9ec7878 <line:740:7, col:72> 'void'
    (ImplicitCastExpr 0x9ec7868 <col:7, col:12> 'void (*)(const char *, long double &, class ios_base::iostate &, const __c_locale &) throw()' <FunctionToPointerDecay>
      (DeclRefExpr 0x9ec7800 <col:7, col:12> 'void (const char *, long double &, class ios_base::iostate &, const __c_locale &) throw()' lvalue Function 0x9e7c6b0 '__convert_to_v' 'void (const char *, long double &, class ios_base::iostate &, const __c_locale &) throw()' (FunctionTemplate 0x9e7b370 '__convert_to_v')))
    (CXXMemberCallExpr 0x9ec7728 <col:27, col:40> 'const char *'
      (MemberExpr 0x9ec7704 <col:27, col:34> '<bound member function type>' .c_str 0x9db30a0
        (ImplicitCastExpr 0x9ec7748 <col:27> 'const class std::basic_string<char>' lvalue <NoOp>
          (DeclRefExpr 0x9ec76ec <col:27> 'string':'class std::basic_string<char>' lvalue Var 0x9ec74a0 '__xtrc' 'string':'class std::basic_string<char>'))))
    (DeclRefExpr 0x9ec7754 <col:43> 'long double' lvalue ParmVar 0x9ec7340 '__v' 'long double &')
    (DeclRefExpr 0x9ec776c <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9ec72f0 '__err' 'class ios_base::iostate &')
    (MaterializeTemporaryExpr 0x9ec78a8 <col:55, col:71> 'const __c_locale':'struct __locale_struct *const' lvalue
      (CallExpr 0x9ec77b0 <col:55, col:71> '__c_locale':'struct __locale_struct *'
        (ImplicitCastExpr 0x9ec77a0 <col:55> '__c_locale (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9ec7784 <col:55> '__c_locale (void)' lvalue CXXMethod 0x9def8a0 '_S_get_c_locale' '__c_locale (void)')))))
  (IfStmt 0x9ec7a28 <line:741:7, line:742:21>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9ec7948 <line:741:11, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0x9ec78e8 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30 0x9d5e270 0x9d5ece0 0x9d5f520 0x9d5fa90 0x9e73300)
      (DeclRefExpr 0x9ec78b4 <col:11> 'iter_type':'_InIter' lvalue ParmVar 0x9ec71f0 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0x9ec78cc <col:20> 'iter_type':'_InIter' lvalue ParmVar 0x9ec7230 '__end' 'iter_type':'_InIter'))
    (CXXOperatorCallExpr 0x9ec7a00 <line:742:2, col:21> 'const enum std::_Ios_Iostate' lvalue
      (ImplicitCastExpr 0x9ec79f0 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9ec79d8 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9e0fd60 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
      (DeclRefExpr 0x9ec796c <col:2> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9ec72f0 '__err' 'class ios_base::iostate &')
      (ImplicitCastExpr 0x9ec79c8 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9ec79a4 <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e113f0 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (ReturnStmt 0x9ec7a60 <line:743:7, col:14>
    (DeclRefExpr 0x9ec7a44 <col:14> 'iter_type':'_InIter' lvalue ParmVar 0x9ec71f0 '__beg' 'iter_type':'_InIter')))


    _InIter do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, void *&__v) const (CompoundStmt 0x9ec8ab8 </usr/include/c++/4.6/bits/locale_facets.tcc:751:5, line:769:5>
  (DeclStmt 0x9ec8050 <line:753:7, col:49>
    0x9ec8020 "typedef class ios_base::fmtflags fmtflags")
  (DeclStmt 0x9ec8160 <line:754:7, col:42>
    0x9ec8080 "const fmtflags __fmt =
      (CXXMemberCallExpr 0x9ec8130 <col:30, col:41> 'fmtflags':'enum std::_Ios_Fmtflags'
        (MemberExpr 0x9ec810c <col:30, col:35> '<bound member function type>' .flags 0x9e133f0
          (ImplicitCastExpr 0x9ec8150 <col:30> 'const class std::ios_base' lvalue <NoOp>
            (DeclRefExpr 0x9ec80b4 <col:30> 'class std::ios_base' lvalue ParmVar 0x9ec7dd0 '__io' 'class std::ios_base &'))))")
  (CXXMemberCallExpr 0x9ec83b0 <line:755:7, col:64> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x9ec838c <col:7, col:12> '<bound member function type>' .flags 0x9e134e0
      (DeclRefExpr 0x9ec8170 <col:7> 'class std::ios_base' lvalue ParmVar 0x9ec7dd0 '__io' 'class std::ios_base &'))
    (CXXOperatorCallExpr 0x9ec8368 <col:18, col:61> 'enum std::_Ios_Fmtflags'
      (ImplicitCastExpr 0x9ec8358 <col:49, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9ec8340 <col:49, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9e0a7e0 'operator|' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
      (ParenExpr 0x9ec82d8 <col:18, col:47> 'enum std::_Ios_Fmtflags'
        (CXXOperatorCallExpr 0x9ec82b0 <col:19, col:38> 'enum std::_Ios_Fmtflags'
          (ImplicitCastExpr 0x9ec82a0 <col:25, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9ec8288 <col:25, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9e0a5b0 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
          (ImplicitCastExpr 0x9ec8278 <col:19> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9ec81c8 <col:19> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9ec8080 '__fmt' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
          (CXXOperatorCallExpr 0x9ec8258 <col:27, col:38> 'enum std::_Ios_Fmtflags'
            (ImplicitCastExpr 0x9ec8248 <<invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9ec8230 <<invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags)' lvalue Function 0x9e0ac20 'operator~' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags)'))
            (ImplicitCastExpr 0x9ec8220 <col:28, col:38> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0x9ec81fc <col:28, col:38> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9e11280 'basefield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))))
      (ImplicitCastExpr 0x9ec8330 <col:51, col:61> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
        (DeclRefExpr 0x9ec830c <col:51, col:61> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9e10da0 'hex' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
  (DeclStmt 0x9ec87b0 <line:757:7, line:759:57>
    0x9ec8780 "typedef __gnu_cxx::__conditional_type<(sizeof(void *) <= sizeof(unsigned long)), unsigned long, unsigned long long>::__type _UIntPtrType")
  (DeclStmt 0x9ec8818 <line:761:7, col:24>
    0x9ec87e0 "_UIntPtrType __ul")
  (BinaryOperator 0x9ec8938 <line:762:7, col:61> '<dependent type>' '='
    (DeclRefExpr 0x9ec8828 <col:7> 'iter_type':'_InIter' lvalue ParmVar 0x9ec7d40 '__beg' 'iter_type':'_InIter')
    (CallExpr 0x9ec8908 <col:15, col:61> '<dependent type>'
      (UnresolvedMemberExpr 0x9ec8850 <col:15> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9ec888c <col:30> 'iter_type':'_InIter' lvalue ParmVar 0x9ec7d40 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0x9ec88a4 <col:37> 'iter_type':'_InIter' lvalue ParmVar 0x9ec7d80 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x9ec88bc <col:44> 'class std::ios_base' lvalue ParmVar 0x9ec7dd0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9ec88d4 <col:50> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9ec7e40 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x9ec88ec <col:57> '_UIntPtrType':'unsigned long' lvalue Var 0x9ec87e0 '__ul' '_UIntPtrType':'unsigned long')))
  (CXXMemberCallExpr 0x9ec89e0 <line:765:7, col:23> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x9ec89c0 <col:7, col:12> '<bound member function type>' .flags 0x9e134e0
      (DeclRefExpr 0x9ec8950 <col:7> 'class std::ios_base' lvalue ParmVar 0x9ec7dd0 '__io' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9ec8a00 <col:18> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9ec89a8 <col:18> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9ec8080 '__fmt' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (BinaryOperator 0x9ec8a78 <line:767:7, col:41> 'void *' lvalue '='
    (DeclRefExpr 0x9ec8a0c <col:7> 'void *' lvalue ParmVar 0x9ec7e90 '__v' 'void *&')
    (CXXReinterpretCastExpr 0x9ec8a60 <col:13, col:41> 'void *' reinterpret_cast<void *> <IntegralToPointer>
      (ImplicitCastExpr 0x9ec8a50 <col:37> '_UIntPtrType':'unsigned long' <LValueToRValue>
        (DeclRefExpr 0x9ec8a24 <col:37> '_UIntPtrType':'unsigned long' lvalue Var 0x9ec87e0 '__ul' '_UIntPtrType':'unsigned long'))))
  (ReturnStmt 0x9ec8aa8 <line:768:7, col:14>
    (DeclRefExpr 0x9ec8a90 <col:14> 'iter_type':'_InIter' lvalue ParmVar 0x9ec7d40 '__beg' 'iter_type':'_InIter')))


    void _M_pad(_CharT __fill, streamsize __w, std::ios_base &__io, _CharT *__new, const _CharT *__cs, int &__len) const (CompoundStmt 0x9ec9418 </usr/include/c++/4.6/bits/locale_facets.tcc:778:5, line:784:5>
  (CallExpr 0x9ec9360 <line:781:7, line:782:25> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9ec9298 <line:781:7, col:44> '<dependent type>' lvalue)
    (DeclRefExpr 0x9ec92cc <col:51> 'class std::ios_base' lvalue ParmVar 0x9ec8e20 '__io' 'class std::ios_base &')
    (DeclRefExpr 0x9ec92e4 <col:57> '_CharT' lvalue ParmVar 0x9ec8d90 '__fill' '_CharT')
    (DeclRefExpr 0x9ec92fc <col:65> '_CharT *' lvalue ParmVar 0x9ec8e90 '__new' '_CharT *')
    (DeclRefExpr 0x9ec9314 <line:782:9> 'const _CharT *' lvalue ParmVar 0x9ec8f00 '__cs' 'const _CharT *')
    (DeclRefExpr 0x9ec932c <col:15> 'streamsize':'int' lvalue ParmVar 0x9ec8dd0 '__w' 'streamsize':'int')
    (DeclRefExpr 0x9ec9344 <col:20> 'int' lvalue ParmVar 0x9ec8f50 '__len' 'int &'))
  (BinaryOperator 0x9ec9400 <line:783:7, col:35> 'int' lvalue '='
    (DeclRefExpr 0x9ec9394 <col:7> 'int' lvalue ParmVar 0x9ec8f50 '__len' 'int &')
    (CXXStaticCastExpr 0x9ec93e8 <col:15, col:35> 'int' static_cast<int> <NoOp>
      (ImplicitCastExpr 0x9ec93d8 <col:32> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0x9ec93ac <col:32> 'streamsize':'int' lvalue ParmVar 0x9ec8dd0 '__w' 'streamsize':'int')))))


    template <typename _CharT, typename _ValueT> int __int_to_char(_CharT *__bufend, _ValueT __v, const _CharT *__lit, ios_base::fmtflags __flags, bool __dec) (CompoundStmt 0x9ecc158 </usr/include/c++/4.6/bits/locale_facets.tcc:792:5, line:828:5>
  (DeclStmt 0x9ecb2b0 <line:793:7, col:31>
    0x9ecb260 "_CharT *__buf =
      (DeclRefExpr 0x9ecb294 <col:23> '_CharT *' lvalue ParmVar 0x9ecaf80 '__bufend' '_CharT *')")
  (IfStmt 0x9ecc098 <line:794:7, line:826:2>
    <<<NULL>>>
    (ImplicitCastExpr 0x9ecb368 <line:794:11, col:39> '_Bool' <IntegralToBoolean>
      (CallExpr 0x9ecb310 <col:11, col:39> 'long'
        (ImplicitCastExpr 0x9ecb300 <col:11> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9ecb2c0 <col:11> 'long (long, long)' lvalue Function 0x9d45c10 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0x9ecb348 <col:28> 'long' <IntegralCast>
          (ImplicitCastExpr 0x9ecb338 <col:28> '_Bool' <LValueToRValue>
            (DeclRefExpr 0x9ecb2d8 <col:28> '_Bool' lvalue ParmVar 0x9ecb0e0 '__dec' '_Bool')))
        (ImplicitCastExpr 0x9ecb358 <col:35> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0x9ecb2f0 <col:35> '_Bool' true))))
    (CompoundStmt 0x9ecb648 <line:795:2, line:803:2>
      (DoStmt 0x9ecb630 <line:797:4, line:802:19>
        (CompoundStmt 0x9ecb568 <line:798:6, line:801:6>
          (BinaryOperator 0x9ecb500 <line:799:8, col:60> '<dependent type>' '='
            (UnaryOperator 0x9ecb3a8 <col:8, col:11> '<dependent type>' prefix '*'
              (UnaryOperator 0x9ecb390 <col:9, col:11> '<dependent type>' prefix '--'
                (DeclRefExpr 0x9ecb374 <col:11> '_CharT *' lvalue Var 0x9ecb260 '__buf' '_CharT *')))
            (ArraySubscriptExpr 0x9ecb4e8 <col:19, col:60> '<dependent type>' lvalue
              (DeclRefExpr 0x9ecb3bc <col:19> 'const _CharT *' lvalue ParmVar 0x9ecb030 '__lit' 'const _CharT *')
              (CXXOperatorCallExpr 0x9ecb4c0 <col:25, col:50> '<dependent type>'
                (UnresolvedLookupExpr 0x9ecb478 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d86680 0x9d87280 0x9d5d090 0x9d5d890)
                (ParenExpr 0x9ecb420 <col:25, col:34> '<dependent type>'
                  (BinaryOperator 0x9ecb408 <col:26, col:32> '<dependent type>' '%'
                    (DeclRefExpr 0x9ecb3d4 <col:26> '_ValueT' lvalue ParmVar 0x9ecafc0 '__v' '_ValueT')
                    (IntegerLiteral 0x9ecb3f0 <col:32> 'int' 10)))
                (DeclRefExpr 0x9ecb454 <col:38, col:50> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>' EnumConstant 0x9e92cc0 '_S_odigits' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>'))))
          (CompoundAssignOperator 0x9ecb548 <line:800:8, col:15> '<dependent type>' lvalue '/=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
            (DeclRefExpr 0x9ecb518 <col:8> '_ValueT' lvalue ParmVar 0x9ecafc0 '__v' '_ValueT')
            (IntegerLiteral 0x9ecb530 <col:15> 'int' 10)))
        (CXXOperatorCallExpr 0x9ecb608 <line:802:11, col:18> '<dependent type>'
          (UnresolvedLookupExpr 0x9ecb5b0 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bacde0 0x9bc3130 0x9bc62c0 0x9c11360 0x9c32300 0x9c32670 0x9d60120 0x9d60630 0x9d60b40 0x9e73820)
          (DeclRefExpr 0x9ecb580 <col:11> '_ValueT' lvalue ParmVar 0x9ecafc0 '__v' '_ValueT')
          (IntegerLiteral 0x9ecb598 <col:18> 'int' 0))))
    (IfStmt 0x9ecc078 <line:804:12, line:826:2>
      <<<NULL>>>
      (BinaryOperator 0x9ecb7b0 <line:804:16, col:61> '_Bool' '=='
        (ImplicitCastExpr 0x9ecb790 <col:16, col:46> 'int' <IntegralCast>
          (ParenExpr 0x9ecb728 <col:16, col:46> 'enum std::_Ios_Fmtflags'
            (CXXOperatorCallExpr 0x9ecb700 <col:17, col:37> 'enum std::_Ios_Fmtflags'
              (ImplicitCastExpr 0x9ecb6f0 <col:25, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9ecb6d8 <col:25, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9e0a5b0 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
              (ImplicitCastExpr 0x9ecb6b8 <col:17> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                (DeclRefExpr 0x9ecb65c <col:17> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9ecb0a0 '__flags' 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags'))
              (ImplicitCastExpr 0x9ecb6c8 <col:27, col:37> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                (DeclRefExpr 0x9ecb694 <col:27, col:37> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9e11280 'basefield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))))
        (ImplicitCastExpr 0x9ecb7a0 <col:51, col:61> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9ecb780 <col:51, col:61> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9ecb75c <col:51, col:61> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9e10ec0 'oct' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
      (CompoundStmt 0x9ecbae8 <line:805:2, line:813:2>
        (DoStmt 0x9ecbad0 <line:807:4, line:812:19>
          (CompoundStmt 0x9ecba08 <line:808:6, line:811:6>
            (BinaryOperator 0x9ecb9a0 <line:809:8, col:61> '<dependent type>' '='
              (UnaryOperator 0x9ecb7f8 <col:8, col:11> '<dependent type>' prefix '*'
                (UnaryOperator 0x9ecb7e0 <col:9, col:11> '<dependent type>' prefix '--'
                  (DeclRefExpr 0x9ecb7c8 <col:11> '_CharT *' lvalue Var 0x9ecb260 '__buf' '_CharT *')))
              (ArraySubscriptExpr 0x9ecb988 <col:19, col:61> '<dependent type>' lvalue
                (DeclRefExpr 0x9ecb80c <col:19> 'const _CharT *' lvalue ParmVar 0x9ecb030 '__lit' 'const _CharT *')
                (CXXOperatorCallExpr 0x9ecb960 <col:25, col:51> '<dependent type>'
                  (UnresolvedLookupExpr 0x9ecb918 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d86680 0x9d87280 0x9d5d090 0x9d5d890)
                  (ParenExpr 0x9ecb8c0 <col:25, col:35> '<dependent type>'
                    (CXXOperatorCallExpr 0x9ecb898 <col:26, col:32> '<dependent type>'
                      (UnresolvedLookupExpr 0x9ecb858 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e0a5b0 0x9e0bdb0 0x9e0d020)
                      (DeclRefExpr 0x9ecb824 <col:26> '_ValueT' lvalue ParmVar 0x9ecafc0 '__v' '_ValueT')
                      (IntegerLiteral 0x9ecb840 <col:32> 'int' 7)))
                  (DeclRefExpr 0x9ecb8f4 <col:39, col:51> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>' EnumConstant 0x9e92cc0 '_S_odigits' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>'))))
            (CompoundAssignOperator 0x9ecb9e8 <line:810:8, col:16> '<dependent type>' lvalue '>>=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
              (DeclRefExpr 0x9ecb9b8 <col:8> '_ValueT' lvalue ParmVar 0x9ecafc0 '__v' '_ValueT')
              (IntegerLiteral 0x9ecb9d0 <col:16> 'int' 3)))
          (CXXOperatorCallExpr 0x9ecbaa8 <line:812:11, col:18> '<dependent type>'
            (UnresolvedLookupExpr 0x9ecba50 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bacde0 0x9bc3130 0x9bc62c0 0x9c11360 0x9c32300 0x9c32670 0x9d60120 0x9d60630 0x9d60b40 0x9e73820)
            (DeclRefExpr 0x9ecba20 <col:11> '_ValueT' lvalue ParmVar 0x9ecafc0 '__v' '_ValueT')
            (IntegerLiteral 0x9ecba38 <col:18> 'int' 0))))
      (CompoundStmt 0x9ecc058 <line:815:2, line:826:2>
        (DeclStmt 0x9ecbc20 <line:817:4, col:58>
          0x9ecbb10 "const bool __uppercase =
            (ImplicitCastExpr 0x9ecbc10 <col:29, col:49> '_Bool' <IntegralToBoolean>
              (CXXOperatorCallExpr 0x9ecbbe8 <col:29, col:49> 'enum std::_Ios_Fmtflags'
                (ImplicitCastExpr 0x9ecbbd8 <col:37, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
                  (DeclRefExpr 0x9ecbbc0 <col:37, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9e0a5b0 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
                (ImplicitCastExpr 0x9ecbba0 <col:29> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                  (DeclRefExpr 0x9ecbb44 <col:29> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9ecb0a0 '__flags' 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags'))
                (ImplicitCastExpr 0x9ecbbb0 <col:39, col:49> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                  (DeclRefExpr 0x9ecbb7c <col:39, col:49> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9e111c0 'uppercase' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))")
        (DeclStmt 0x9ecbd50 <line:818:4, line:819:66>
          0x9ecbc40 "const int __case_offset =
            (ImplicitCastExpr 0x9ecbd40 <line:818:30, line:819:56> 'const int' <IntegralCast>
              (ConditionalOperator 0x9ecbd20 <line:818:30, line:819:56> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>'
                (ImplicitCastExpr 0x9ecbd10 <line:818:30> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0x9ecbc74 <col:30> 'const _Bool' lvalue Var 0x9ecbb10 '__uppercase' 'const _Bool'))
                (DeclRefExpr 0x9ecbcac <col:44, col:56> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>' EnumConstant 0x9e93d00 '_S_oudigits' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')
                (DeclRefExpr 0x9ecbcec <line:819:44, col:56> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>' EnumConstant 0x9e92cc0 '_S_odigits' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')))")
        (DoStmt 0x9ecc040 <line:820:4, line:825:19>
          (CompoundStmt 0x9ecbf78 <line:821:6, line:824:6>
            (BinaryOperator 0x9ecbf10 <line:822:8, col:52> '<dependent type>' '='
              (UnaryOperator 0x9ecbd90 <col:8, col:11> '<dependent type>' prefix '*'
                (UnaryOperator 0x9ecbd78 <col:9, col:11> '<dependent type>' prefix '--'
                  (DeclRefExpr 0x9ecbd60 <col:11> '_CharT *' lvalue Var 0x9ecb260 '__buf' '_CharT *')))
              (ArraySubscriptExpr 0x9ecbef8 <col:19, col:52> '<dependent type>' lvalue
                (DeclRefExpr 0x9ecbda4 <col:19> 'const _CharT *' lvalue ParmVar 0x9ecb030 '__lit' 'const _CharT *')
                (CXXOperatorCallExpr 0x9ecbed0 <col:25, col:39> '<dependent type>'
                  (UnresolvedLookupExpr 0x9ecbe88 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d86680 0x9d87280 0x9d5d090 0x9d5d890)
                  (ParenExpr 0x9ecbe58 <col:25, col:35> '<dependent type>'
                    (CXXOperatorCallExpr 0x9ecbe30 <col:26, col:32> '<dependent type>'
                      (UnresolvedLookupExpr 0x9ecbdf0 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e0a5b0 0x9e0bdb0 0x9e0d020)
                      (DeclRefExpr 0x9ecbdbc <col:26> '_ValueT' lvalue ParmVar 0x9ecafc0 '__v' '_ValueT')
                      (IntegerLiteral 0x9ecbdd8 <col:32> 'int' 15)))
                  (DeclRefExpr 0x9ecbe6c <col:39> 'const int' lvalue Var 0x9ecbc40 '__case_offset' 'const int'))))
            (CompoundAssignOperator 0x9ecbf58 <line:823:8, col:16> '<dependent type>' lvalue '>>=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
              (DeclRefExpr 0x9ecbf28 <col:8> '_ValueT' lvalue ParmVar 0x9ecafc0 '__v' '_ValueT')
              (IntegerLiteral 0x9ecbf40 <col:16> 'int' 4)))
          (CXXOperatorCallExpr 0x9ecc018 <line:825:11, col:18> '<dependent type>'
            (UnresolvedLookupExpr 0x9ecbfc0 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bacde0 0x9bc3130 0x9bc62c0 0x9c11360 0x9c32300 0x9c32670 0x9d60120 0x9d60630 0x9d60b40 0x9e73820)
            (DeclRefExpr 0x9ecbf90 <col:11> '_ValueT' lvalue ParmVar 0x9ecafc0 '__v' '_ValueT')
            (IntegerLiteral 0x9ecbfa8 <col:18> 'int' 0))))))
  (ReturnStmt 0x9ecc148 <line:827:7, col:25>
    (CXXOperatorCallExpr 0x9ecc120 <col:14, col:25> '<dependent type>'
      (UnresolvedLookupExpr 0x9ecc0e8 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
      (DeclRefExpr 0x9ecc0b4 <col:14> '_CharT *' lvalue ParmVar 0x9ecaf80 '__bufend' '_CharT *')
      (DeclRefExpr 0x9ecc0cc <col:25> '_CharT *' lvalue Var 0x9ecb260 '__buf' '_CharT *'))))

;
    void _M_group_int(const char *__grouping, size_t __grouping_size, _CharT __sep, std::ios_base &, _CharT *__new, _CharT *__cs, int &__len) const (CompoundStmt 0x9ecca18 </usr/include/c++/4.6/bits/locale_facets.tcc:837:5, line:841:5>
  (DeclStmt 0x9ecc948 <line:838:7, line:839:42>
    0x9ecc770 "_CharT *__p =
      (CallExpr 0x9ecc910 <line:838:21, line:839:41> '<dependent type>'
        (UnresolvedLookupExpr 0x9ecc7c0 <line:838:21, col:26> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e7d360)
        (DeclRefExpr 0x9ecc7f4 <col:41> '_CharT *' lvalue ParmVar 0x9ecc560 '__new' '_CharT *')
        (DeclRefExpr 0x9ecc80c <col:48> '_CharT' lvalue ParmVar 0x9ecc4a0 '__sep' '_CharT')
        (DeclRefExpr 0x9ecc824 <col:55> 'const char *' lvalue ParmVar 0x9ecc420 '__grouping' 'const char *')
        (DeclRefExpr 0x9ecc83c <line:839:6> 'size_t':'unsigned int' lvalue ParmVar 0x9ecc460 '__grouping_size' 'size_t':'unsigned int')
        (DeclRefExpr 0x9ecc854 <col:23> '_CharT *' lvalue ParmVar 0x9ecc5b0 '__cs' '_CharT *')
        (CXXOperatorCallExpr 0x9ecc8e8 <col:29, col:36> '<dependent type>'
          (UnresolvedLookupExpr 0x9ecc8a0 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d86680 0x9d87280 0x9d5d090 0x9d5d890)
          (DeclRefExpr 0x9ecc86c <col:29> '_CharT *' lvalue ParmVar 0x9ecc5b0 '__cs' '_CharT *')
          (DeclRefExpr 0x9ecc884 <col:36> 'int' lvalue ParmVar 0x9ecc600 '__len' 'int &')))")
  (BinaryOperator 0x9ecca00 <line:840:7, col:21> '<dependent type>' '='
    (DeclRefExpr 0x9ecc958 <col:7> 'int' lvalue ParmVar 0x9ecc600 '__len' 'int &')
    (CXXOperatorCallExpr 0x9ecc9d8 <col:15, col:21> '<dependent type>'
      (UnresolvedLookupExpr 0x9ecc9a0 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
      (DeclRefExpr 0x9ecc970 <col:15> '_CharT *' lvalue Var 0x9ecc770 '__p' '_CharT *')
      (DeclRefExpr 0x9ecc988 <col:21> '_CharT *' lvalue ParmVar 0x9ecc560 '__new' '_CharT *'))))


    template <typename _ValueT> _OutIter _M_insert_int(_OutIter __s, std::ios_base &__io, _CharT __fill, _ValueT __v) const (CompoundStmt 0x9ed20b8 </usr/include/c++/4.6/bits/locale_facets.tcc:849:7, line:930:7>
  (DeclStmt 0x9ecd018 <line:850:2, col:33>
    0x9eccfb0 "Using__gnu_cxx::;")
  (DeclStmt 0x9ecd140 <line:851:2, col:66>
    0x9ecd110 "typedef typename __add_unsigned<_ValueT>::__type __unsigned_type")
  (DeclStmt 0x9ecd230 <line:852:2, col:60>
    0x9ecd200 "typedef __numpunct_cache<_CharT> __cache_type")
  (DeclStmt 0x9ecd338 <line:853:2, col:32>
    0x9ecd300 "__use_cache<__cache_type> __uc")
  (DeclStmt 0x9ecd400 <line:854:2, col:40>
    0x9ecd360 "const std::locale &__loc =
      (CXXMemberCallExpr 0x9ecd3d0 <col:24, col:39> 'const class std::locale' lvalue
        (MemberExpr 0x9ecd3ac <col:24, col:29> '<bound member function type>' ._M_getloc 0x9e15ff0
          (ImplicitCastExpr 0x9ecd3f0 <col:24> 'const class std::ios_base' lvalue <NoOp>
            (DeclRefExpr 0x9ecd394 <col:24> 'class std::ios_base' lvalue ParmVar 0x9eccd80 '__io' 'class std::ios_base &'))))")
  (DeclStmt 0x9ecd4c8 <line:855:2, col:40>
    0x9ecd440 "const __cache_type *__lc =
      (CallExpr 0x9ecd4a8 <col:29, col:39> '<dependent type>'
        (DeclRefExpr 0x9ecd474 <col:29> '__use_cache<__cache_type>' lvalue Var 0x9ecd300 '__uc' '__use_cache<__cache_type>')
        (DeclRefExpr 0x9ecd48c <col:34> 'const class std::locale' lvalue Var 0x9ecd360 '__loc' 'const class std::locale &'))")
  (DeclStmt 0x9ecd598 <line:856:2, col:42>
    0x9ecd510 "const _CharT *__lit =
      (CXXDependentScopeMemberExpr 0x9ecd560 <col:24, col:30> '<dependent type>' lvalue
        (DeclRefExpr 0x9ecd544 <col:24> 'const __cache_type *' lvalue Var 0x9ecd440 '__lc' 'const __cache_type *'))")
  (DeclStmt 0x9ecd6c0 <line:857:2, col:49>
    0x9ecd5e0 "const ios_base::fmtflags __flags =
      (CXXMemberCallExpr 0x9ecd690 <col:37, col:48> 'fmtflags':'enum std::_Ios_Fmtflags'
        (MemberExpr 0x9ecd66c <col:37, col:42> '<bound member function type>' .flags 0x9e133f0
          (ImplicitCastExpr 0x9ecd6b0 <col:37> 'const class std::ios_base' lvalue <NoOp>
            (DeclRefExpr 0x9ecd614 <col:37> 'class std::ios_base' lvalue ParmVar 0x9eccd80 '__io' 'class std::ios_base &'))))")
  (DeclStmt 0x9ecd788 <line:860:2, col:40>
    0x9ecd6e0 "const int __ilen =
      (ImplicitCastExpr 0x9ecd778 <col:21, col:39> 'const int' <IntegralCast>
        (BinaryOperator 0x9ecd760 <col:21, col:39> 'unsigned int' '*'
          (ImplicitCastExpr 0x9ecd750 <col:21> 'unsigned int' <IntegralCast>
            (IntegerLiteral 0x9ecd718 <col:21> 'int' 5))
          (UnaryExprOrTypeTraitExpr 0x9ecd738 <col:25, col:39> 'unsigned int' sizeof '_ValueT')))")
  (DeclStmt 0x9ecd9c8 <line:861:2, line:862:23>
    0x9ecd7d0 "_CharT *__cs =
      (CXXStaticCastExpr 0x9ecd9b0 <line:861:17, line:862:22> '_CharT *' static_cast<_CharT *> <Dependent>
        (CallExpr 0x9ecd980 <line:861:38, line:862:21> 'void *'
          (ImplicitCastExpr 0x9ecd970 <line:861:38> 'void *(*)(unsigned int)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9ecd8e4 <col:38> 'void *(unsigned int)' lvalue Function 0x9ecd810 '__builtin_alloca' 'void *(unsigned int)'))
          (BinaryOperator 0x9ecd958 <col:55, line:862:15> 'unsigned int' '*'
            (UnaryExprOrTypeTraitExpr 0x9ecd908 <line:861:55, col:68> 'unsigned int' sizeof '_CharT')
            (ImplicitCastExpr 0x9ecd948 <line:862:15> 'unsigned int' <IntegralCast>
              (ImplicitCastExpr 0x9ecd938 <col:15> 'int' <LValueToRValue>
                (DeclRefExpr 0x9ecd920 <col:15> 'const int' lvalue Var 0x9ecd6e0 '__ilen' 'const int'))))))")
  (DeclStmt 0x9ecdb10 <line:866:2, col:70>
    0x9ecda10 "const ios_base::fmtflags __basefield =
      (CXXOperatorCallExpr 0x9ecdae8 <col:41, col:61> 'enum std::_Ios_Fmtflags'
        (ImplicitCastExpr 0x9ecdad8 <col:49, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9ecdac0 <col:49, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9e0a5b0 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
        (ImplicitCastExpr 0x9ecdaa0 <col:41> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
          (DeclRefExpr 0x9ecda44 <col:41> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9ecd5e0 '__flags' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags'))
        (ImplicitCastExpr 0x9ecdab0 <col:51, col:61> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
          (DeclRefExpr 0x9ecda7c <col:51, col:61> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9e11280 'basefield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))")
  (DeclStmt 0x9ecdd30 <line:867:2, line:868:40>
    0x9ecdb30 "const bool __dec =
      (ParenExpr 0x9ecdce0 <line:867:21, line:868:39> '_Bool'
        (BinaryOperator 0x9ecdcc8 <line:867:22, line:868:36> '_Bool' '&&'
          (BinaryOperator 0x9ecdc00 <line:867:22, col:47> '_Bool' '!='
            (ImplicitCastExpr 0x9ecdbe0 <col:22> 'int' <IntegralCast>
              (ImplicitCastExpr 0x9ecdbc0 <col:22> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                (DeclRefExpr 0x9ecdb64 <col:22> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9ecda10 '__basefield' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
            (ImplicitCastExpr 0x9ecdbf0 <col:37, col:47> 'int' <IntegralCast>
              (ImplicitCastExpr 0x9ecdbd0 <col:37, col:47> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                (DeclRefExpr 0x9ecdb9c <col:37, col:47> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9e10ec0 'oct' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
          (BinaryOperator 0x9ecdcb0 <line:868:11, col:36> '_Bool' '!='
            (ImplicitCastExpr 0x9ecdc90 <col:11> 'int' <IntegralCast>
              (ImplicitCastExpr 0x9ecdc70 <col:11> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                (DeclRefExpr 0x9ecdc18 <col:11> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9ecda10 '__basefield' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
            (ImplicitCastExpr 0x9ecdca0 <col:26, col:36> 'int' <IntegralCast>
              (ImplicitCastExpr 0x9ecdc80 <col:26, col:36> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                (DeclRefExpr 0x9ecdc4c <col:26, col:36> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9e10da0 'hex' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))))")
  (DeclStmt 0x9ecdfb8 <line:869:2, line:871:34>
    0x9ecdd60 "const __unsigned_type __u =
      (ParenExpr 0x9ecdfa0 <line:869:30, line:871:33> '<dependent type>'
        (ConditionalOperator 0x9ecdf80 <line:869:31, line:871:32> '<dependent type>'
          (ParenExpr 0x9ecde90 <line:869:31, col:49> '<dependent type>'
            (BinaryOperator 0x9ecde78 <col:32, col:44> '<dependent type>' '||'
              (CXXOperatorCallExpr 0x9ecde10 <col:32, col:38> '<dependent type>'
                (UnresolvedLookupExpr 0x9ecddc8 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bad330 0x9bc37b0 0x9bc6740 0x9d622b0 0x9d627e0 0x9d62d10)
                (DeclRefExpr 0x9ecdd94 <col:32> '_ValueT' lvalue ParmVar 0x9ecce00 '__v' '_ValueT')
                (IntegerLiteral 0x9ecddb0 <col:38> 'int' 0))
              (UnaryOperator 0x9ecde60 <col:43, col:44> '_Bool' prefix '!'
                (ImplicitCastExpr 0x9ecde50 <col:44> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0x9ecde34 <col:44> 'const _Bool' lvalue Var 0x9ecdb30 '__dec' 'const _Bool')))))
          (CXXUnresolvedConstructExpr 0x9ecdec8 <line:870:12, col:31> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type'
            (DeclRefExpr 0x9ecdeb0 <col:28> '_ValueT' lvalue ParmVar 0x9ecce00 '__v' '_ValueT'))
          (CXXOperatorCallExpr 0x9ecdf60 <line:871:12, col:32> '<dependent type>'
            (UnresolvedLookupExpr 0x9ecdf28 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
            (CXXUnresolvedConstructExpr 0x9ecdf08 <col:13, col:32> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type'
              (DeclRefExpr 0x9ecdef0 <col:29> '_ValueT' lvalue ParmVar 0x9ecce00 '__v' '_ValueT')))))")
  (DeclStmt 0x9ece180 <line:872:3, col:71>
    0x9ecdfe0 "int __len =
      (CallExpr 0x9ece150 <col:15, col:70> '<dependent type>'
        (UnresolvedLookupExpr 0x9ece018 <col:15> '<overloaded function type>' lvalue (ADL) = '1' 0x9ecb210)
        (CXXOperatorCallExpr 0x9ece0c8 <col:29, col:36> '<dependent type>'
          (UnresolvedLookupExpr 0x9ece080 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d86680 0x9d87280 0x9d5d090 0x9d5d890)
          (DeclRefExpr 0x9ece04c <col:29> '_CharT *' lvalue Var 0x9ecd7d0 '__cs' '_CharT *')
          (DeclRefExpr 0x9ece064 <col:36> 'const int' lvalue Var 0x9ecd6e0 '__ilen' 'const int'))
        (DeclRefExpr 0x9ece0ec <col:44> 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type' lvalue Var 0x9ecdd60 '__u' 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type')
        (DeclRefExpr 0x9ece104 <col:49> 'const _CharT *' lvalue Var 0x9ecd510 '__lit' 'const _CharT *')
        (DeclRefExpr 0x9ece11c <col:56> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9ecd5e0 '__flags' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')
        (DeclRefExpr 0x9ece134 <col:65> 'const _Bool' lvalue Var 0x9ecdb30 '__dec' 'const _Bool'))")
  (CompoundAssignOperator 0x9ece210 <line:873:2, col:19> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (DeclRefExpr 0x9ece190 <col:2> '_CharT *' lvalue Var 0x9ecd7d0 '__cs' '_CharT *')
    (BinaryOperator 0x9ece1f8 <col:10, col:19> 'int' '-'
      (ImplicitCastExpr 0x9ece1d8 <col:10> 'int' <LValueToRValue>
        (DeclRefExpr 0x9ece1a8 <col:10> 'const int' lvalue Var 0x9ecd6e0 '__ilen' 'const int'))
      (ImplicitCastExpr 0x9ece1e8 <col:19> 'int' <LValueToRValue>
        (DeclRefExpr 0x9ece1c0 <col:19> 'int' lvalue Var 0x9ecdfe0 '__len' 'int'))))
  (IfStmt 0x9ece770 <line:876:2, line:886:4>
    <<<NULL>>>
    (CXXDependentScopeMemberExpr 0x9ece248 <line:876:6, col:12> '<dependent type>' lvalue
      (DeclRefExpr 0x9ece230 <col:6> 'const __cache_type *' lvalue Var 0x9ecd440 '__lc' 'const __cache_type *'))
    (CompoundStmt 0x9ece750 <line:877:4, line:886:4>
      (DeclStmt 0x9ece430 <line:880:6, line:882:16>
        0x9ece290 "_CharT *__cs2 =
          (CXXStaticCastExpr 0x9ece418 <line:880:22, line:882:15> '_CharT *' static_cast<_CharT *> <Dependent>
            (CallExpr 0x9ece3e8 <line:880:43, line:882:14> 'void *'
              (ImplicitCastExpr 0x9ece3d8 <line:880:43> 'void *(*)(unsigned int)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9ece2c4 <col:43> 'void *(unsigned int)' lvalue Function 0x9ecd810 '__builtin_alloca' 'void *(unsigned int)'))
              (BinaryOperator 0x9ece3c0 <col:60, line:882:13> 'unsigned int' '*'
                (BinaryOperator 0x9ece380 <line:880:60, line:881:23> 'unsigned int' '*'
                  (UnaryExprOrTypeTraitExpr 0x9ece2e8 <line:880:60, col:73> 'unsigned int' sizeof '_CharT')
                  (ImplicitCastExpr 0x9ece370 <line:881:13, col:23> 'unsigned int' <IntegralCast>
                    (ParenExpr 0x9ece358 <col:13, col:23> 'int'
                      (BinaryOperator 0x9ece340 <col:14, col:22> 'int' '+'
                        (ImplicitCastExpr 0x9ece330 <col:14> 'int' <LValueToRValue>
                          (DeclRefExpr 0x9ece300 <col:14> 'int' lvalue Var 0x9ecdfe0 '__len' 'int'))
                        (IntegerLiteral 0x9ece318 <col:22> 'int' 1)))))
                (ImplicitCastExpr 0x9ece3b0 <line:882:13> 'unsigned int' <IntegralCast>
                  (IntegerLiteral 0x9ece398 <col:13> 'int' 2)))))")
      (CallExpr 0x9ece648 <line:883:6, line:884:57> '<dependent type>'
        (MemberExpr 0x9ece450 <line:883:6> '<bound member function type>' ->_M_group_int 0x9ecc6b0
          (CXXThisExpr 0x9ece440 <col:6> 'const num_put<_CharT, _OutIter> *' this))
        (CXXDependentScopeMemberExpr 0x9ece488 <col:19, col:25> '<dependent type>' lvalue
          (DeclRefExpr 0x9ece470 <col:19> 'const __cache_type *' lvalue Var 0x9ecd440 '__lc' 'const __cache_type *'))
        (CXXDependentScopeMemberExpr 0x9ece4d8 <col:38, col:44> '<dependent type>' lvalue
          (DeclRefExpr 0x9ece4bc <col:38> 'const __cache_type *' lvalue Var 0x9ecd440 '__lc' 'const __cache_type *'))
        (CXXDependentScopeMemberExpr 0x9ece528 <line:884:5, col:11> '<dependent type>' lvalue
          (DeclRefExpr 0x9ece50c <col:5> 'const __cache_type *' lvalue Var 0x9ecd440 '__lc' 'const __cache_type *'))
        (DeclRefExpr 0x9ece55c <col:29> 'class std::ios_base' lvalue ParmVar 0x9eccd80 '__io' 'class std::ios_base &')
        (CXXOperatorCallExpr 0x9ece5f0 <col:35, col:43> '<dependent type>'
          (UnresolvedLookupExpr 0x9ece5a8 <col:41, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d86680 0x9d87280 0x9d5d090 0x9d5d890)
          (DeclRefExpr 0x9ece574 <col:35> '_CharT *' lvalue Var 0x9ece290 '__cs2' '_CharT *')
          (IntegerLiteral 0x9ece590 <col:43> 'int' 2))
        (DeclRefExpr 0x9ece614 <col:46> '_CharT *' lvalue Var 0x9ecd7d0 '__cs' '_CharT *')
        (DeclRefExpr 0x9ece62c <col:52> 'int' lvalue Var 0x9ecdfe0 '__len' 'int'))
      (BinaryOperator 0x9ece738 <line:885:6, col:21> '<dependent type>' '='
        (DeclRefExpr 0x9ece680 <col:6> '_CharT *' lvalue Var 0x9ecd7d0 '__cs' '_CharT *')
        (CXXOperatorCallExpr 0x9ece710 <col:13, col:21> '<dependent type>'
          (UnresolvedLookupExpr 0x9ece6c8 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d86680 0x9d87280 0x9d5d090 0x9d5d890)
          (DeclRefExpr 0x9ece698 <col:13> '_CharT *' lvalue Var 0x9ece290 '__cs2' '_CharT *')
          (IntegerLiteral 0x9ece6b0 <col:21> 'int' 2))))
    <<<NULL>>>)
  (IfStmt 0x9ed1ad8 <line:889:2, line:914:4>
    <<<NULL>>>
    (ImplicitCastExpr 0x9ece838 <line:889:6, col:34> '_Bool' <IntegralToBoolean>
      (CallExpr 0x9ece7e0 <col:6, col:34> 'long'
        (ImplicitCastExpr 0x9ece7d0 <col:6> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9ece78c <col:6> 'long (long, long)' lvalue Function 0x9d45c10 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0x9ece818 <col:23> 'long' <IntegralCast>
          (ImplicitCastExpr 0x9ece808 <col:23> '_Bool' <LValueToRValue>
            (DeclRefExpr 0x9ece7a4 <col:23> 'const _Bool' lvalue Var 0x9ecdb30 '__dec' 'const _Bool')))
        (ImplicitCastExpr 0x9ece828 <col:30> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0x9ece7c0 <col:30> '_Bool' true))))
    (CompoundStmt 0x9eceda8 <line:890:4, line:900:4>
      (IfStmt 0x9eced88 <line:892:6, line:899:50>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9ece8f8 <line:892:10, col:17> '<dependent type>'
          (UnresolvedLookupExpr 0x9ece8b0 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bae1e0 0x9bc3fc0 0x9bc7850 0x9d64480 0x9d649b0 0x9d64ee0)
          (DeclRefExpr 0x9ece87c <col:10> '_ValueT' lvalue ParmVar 0x9ecce00 '__v' '_ValueT')
          (IntegerLiteral 0x9ece898 <col:17> 'int' 0))
        (CompoundStmt 0x9ecec58 <line:893:8, line:897:8>
          (IfStmt 0x9ecec38 <line:894:3, line:896:46>
            <<<NULL>>>
            (BinaryOperator 0x9eceb08 <line:894:7, line:895:48> '<dependent type>' '&&'
              (CXXFunctionalCastExpr 0x9ecea00 <line:894:7, col:39> '_Bool' functional cast to _Bool <NoOp>
                (ImplicitCastExpr 0x9ece9f0 <col:12, col:32> '_Bool' <IntegralToBoolean>
                  (CXXOperatorCallExpr 0x9ece9c8 <col:12, col:32> 'enum std::_Ios_Fmtflags'
                    (ImplicitCastExpr 0x9ece9b8 <col:20, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
                      (DeclRefExpr 0x9ece9a0 <col:20, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9e0a5b0 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
                    (ImplicitCastExpr 0x9ece980 <col:12> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                      (DeclRefExpr 0x9ece928 <col:12> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9ecd5e0 '__flags' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags'))
                    (ImplicitCastExpr 0x9ece990 <col:22, col:32> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                      (DeclRefExpr 0x9ece95c <col:22, col:32> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9e110a0 'showpos' 'const fmtflags':'const enum std::_Ios_Fmtflags')))))
              (CXXDependentScopeMemberExpr 0x9ecead0 <line:895:10, col:48> '<dependent type>' lvalue))
            (BinaryOperator 0x9ecec20 <line:896:5, col:46> '<dependent type>' ','
              (BinaryOperator 0x9ecebd8 <col:5, col:41> '<dependent type>' '='
                (UnaryOperator 0x9eceb50 <col:5, col:8> '<dependent type>' prefix '*'
                  (UnaryOperator 0x9eceb38 <col:6, col:8> '<dependent type>' prefix '--'
                    (DeclRefExpr 0x9eceb20 <col:8> '_CharT *' lvalue Var 0x9ecd7d0 '__cs' '_CharT *')))
                (ArraySubscriptExpr 0x9ecebc0 <col:15, col:41> '<dependent type>' lvalue
                  (DeclRefExpr 0x9eceb64 <col:15> 'const _CharT *' lvalue Var 0x9ecd510 '__lit' 'const _CharT *')
                  (DeclRefExpr 0x9eceb9c <col:21, col:33> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>' EnumConstant 0x9e92c00 '_S_oplus' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')))
              (UnaryOperator 0x9ecec08 <col:44, col:46> 'int' lvalue prefix '++'
                (DeclRefExpr 0x9ecebf0 <col:46> 'int' lvalue Var 0x9ecdfe0 '__len' 'int')))
            <<<NULL>>>))
        (BinaryOperator 0x9eced70 <line:899:8, col:50> '<dependent type>' ','
          (BinaryOperator 0x9eced28 <col:8, col:45> '<dependent type>' '='
            (UnaryOperator 0x9ececa0 <col:8, col:11> '<dependent type>' prefix '*'
              (UnaryOperator 0x9ecec88 <col:9, col:11> '<dependent type>' prefix '--'
                (DeclRefExpr 0x9ecec6c <col:11> '_CharT *' lvalue Var 0x9ecd7d0 '__cs' '_CharT *')))
            (ArraySubscriptExpr 0x9eced10 <col:18, col:45> '<dependent type>' lvalue
              (DeclRefExpr 0x9ececb4 <col:18> 'const _CharT *' lvalue Var 0x9ecd510 '__lit' 'const _CharT *')
              (DeclRefExpr 0x9ececec <col:24, col:36> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>' EnumConstant 0x9e92bc0 '_S_ominus' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')))
          (UnaryOperator 0x9eced58 <col:48, col:50> 'int' lvalue prefix '++'
            (DeclRefExpr 0x9eced40 <col:50> 'int' lvalue Var 0x9ecdfe0 '__len' 'int')))))
    (IfStmt 0x9ed1ab8 <line:901:7, line:914:4>
      <<<NULL>>>
      (BinaryOperator 0x9ed1500 <line:901:11, col:49> '<dependent type>' '&&'
        (CXXFunctionalCastExpr 0x9ed14d0 <col:11, col:44> '_Bool' functional cast to _Bool <NoOp>
          (ImplicitCastExpr 0x9ed14c0 <col:16, col:36> '_Bool' <IntegralToBoolean>
            (CXXOperatorCallExpr 0x9ecee68 <col:16, col:36> 'enum std::_Ios_Fmtflags'
              (ImplicitCastExpr 0x9ecee58 <col:24, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9ecee40 <col:24, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9e0a5b0 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
              (ImplicitCastExpr 0x9ecee20 <col:16> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                (DeclRefExpr 0x9ecedc8 <col:16> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9ecd5e0 '__flags' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags'))
              (ImplicitCastExpr 0x9ecee30 <col:26, col:36> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                (DeclRefExpr 0x9ecedfc <col:26, col:36> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9e10fe0 'showbase' 'const fmtflags':'const enum std::_Ios_Fmtflags')))))
        (DeclRefExpr 0x9ed14e8 <col:49> '_ValueT' lvalue ParmVar 0x9ecce00 '__v' '_ValueT'))
      (CompoundStmt 0x9ed1aa0 <line:902:4, line:914:4>
        (IfStmt 0x9ed1a80 <line:903:6, line:913:8>
          <<<NULL>>>
          (BinaryOperator 0x9ed15b0 <line:903:10, col:35> '_Bool' '=='
            (ImplicitCastExpr 0x9ed1590 <col:10> 'int' <IntegralCast>
              (ImplicitCastExpr 0x9ed1570 <col:10> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                (DeclRefExpr 0x9ed1518 <col:10> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9ecda10 '__basefield' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
            (ImplicitCastExpr 0x9ed15a0 <col:25, col:35> 'int' <IntegralCast>
              (ImplicitCastExpr 0x9ed1580 <col:25, col:35> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                (DeclRefExpr 0x9ed154c <col:25, col:35> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9e10ec0 'oct' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
          (BinaryOperator 0x9ed16c8 <line:904:8, col:51> '<dependent type>' ','
            (BinaryOperator 0x9ed1680 <col:8, col:46> '<dependent type>' '='
              (UnaryOperator 0x9ed15f8 <col:8, col:11> '<dependent type>' prefix '*'
                (UnaryOperator 0x9ed15e0 <col:9, col:11> '<dependent type>' prefix '--'
                  (DeclRefExpr 0x9ed15c8 <col:11> '_CharT *' lvalue Var 0x9ecd7d0 '__cs' '_CharT *')))
              (ArraySubscriptExpr 0x9ed1668 <col:18, col:46> '<dependent type>' lvalue
                (DeclRefExpr 0x9ed160c <col:18> 'const _CharT *' lvalue Var 0x9ecd510 '__lit' 'const _CharT *')
                (DeclRefExpr 0x9ed1644 <col:24, col:36> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>' EnumConstant 0x9e92cc0 '_S_odigits' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')))
            (UnaryOperator 0x9ed16b0 <col:49, col:51> 'int' lvalue prefix '++'
              (DeclRefExpr 0x9ed1698 <col:51> 'int' lvalue Var 0x9ecdfe0 '__len' 'int')))
          (CompoundStmt 0x9ed1a60 <line:906:8, line:913:8>
            (DeclStmt 0x9ed1800 <line:908:3, col:57>
              0x9ed16f0 "const bool __uppercase =
                (ImplicitCastExpr 0x9ed17f0 <col:28, col:48> '_Bool' <IntegralToBoolean>
                  (CXXOperatorCallExpr 0x9ed17c8 <col:28, col:48> 'enum std::_Ios_Fmtflags'
                    (ImplicitCastExpr 0x9ed17b8 <col:36, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
                      (DeclRefExpr 0x9ed17a0 <col:36, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9e0a5b0 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
                    (ImplicitCastExpr 0x9ed1780 <col:28> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                      (DeclRefExpr 0x9ed1724 <col:28> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9ecd5e0 '__flags' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags'))
                    (ImplicitCastExpr 0x9ed1790 <col:38, col:48> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                      (DeclRefExpr 0x9ed175c <col:38, col:48> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9e111c0 'uppercase' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))")
            (BinaryOperator 0x9ed1928 <line:909:3, col:50> '<dependent type>' '='
              (UnaryOperator 0x9ed1840 <col:3, col:6> '<dependent type>' prefix '*'
                (UnaryOperator 0x9ed1828 <col:4, col:6> '<dependent type>' prefix '--'
                  (DeclRefExpr 0x9ed1810 <col:6> '_CharT *' lvalue Var 0x9ecd7d0 '__cs' '_CharT *')))
              (ArraySubscriptExpr 0x9ed1910 <col:13, col:50> '<dependent type>' lvalue
                (DeclRefExpr 0x9ed1854 <col:13> 'const _CharT *' lvalue Var 0x9ecd510 '__lit' 'const _CharT *')
                (BinaryOperator 0x9ed18f8 <col:19, col:39> 'int' '+'
                  (ImplicitCastExpr 0x9ed18c8 <col:19, col:31> 'int' <IntegralCast>
                    (DeclRefExpr 0x9ed188c <col:19, col:31> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>' EnumConstant 0x9e92c40 '_S_ox' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>'))
                  (ImplicitCastExpr 0x9ed18e8 <col:39> 'int' <IntegralCast>
                    (ImplicitCastExpr 0x9ed18d8 <col:39> '_Bool' <LValueToRValue>
                      (DeclRefExpr 0x9ed18ac <col:39> 'const _Bool' lvalue Var 0x9ed16f0 '__uppercase' 'const _Bool'))))))
            (BinaryOperator 0x9ed19f8 <line:911:3, col:41> '<dependent type>' '='
              (UnaryOperator 0x9ed1970 <col:3, col:6> '<dependent type>' prefix '*'
                (UnaryOperator 0x9ed1958 <col:4, col:6> '<dependent type>' prefix '--'
                  (DeclRefExpr 0x9ed1940 <col:6> '_CharT *' lvalue Var 0x9ecd7d0 '__cs' '_CharT *')))
              (ArraySubscriptExpr 0x9ed19e0 <col:13, col:41> '<dependent type>' lvalue
                (DeclRefExpr 0x9ed1984 <col:13> 'const _CharT *' lvalue Var 0x9ecd510 '__lit' 'const _CharT *')
                (DeclRefExpr 0x9ed19bc <col:19, col:31> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>' EnumConstant 0x9e92cc0 '_S_odigits' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')))
            (CompoundAssignOperator 0x9ed1a40 <line:912:3, col:12> 'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
              (DeclRefExpr 0x9ed1a10 <col:3> 'int' lvalue Var 0x9ecdfe0 '__len' 'int')
              (IntegerLiteral 0x9ed1a28 <col:12> 'int' 2)))))
      <<<NULL>>>))
  (DeclStmt 0x9ed1be0 <line:917:2, col:37>
    0x9ed1b00 "const streamsize __w =
      (CXXMemberCallExpr 0x9ed1bb0 <col:25, col:36> 'streamsize':'int'
        (MemberExpr 0x9ed1b8c <col:25, col:30> '<bound member function type>' .width 0x9e15c10
          (ImplicitCastExpr 0x9ed1bd0 <col:25> 'const class std::ios_base' lvalue <NoOp>
            (DeclRefExpr 0x9ed1b34 <col:25> 'class std::ios_base' lvalue ParmVar 0x9eccd80 '__io' 'class std::ios_base &'))))")
  (IfStmt 0x9ed1f18 <line:918:2, line:924:4>
    <<<NULL>>>
    (BinaryOperator 0x9ed1c60 <line:918:6, col:41> '_Bool' '>'
      (ImplicitCastExpr 0x9ed1c50 <col:6> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0x9ed1bf0 <col:6> 'const streamsize':'const int' lvalue Var 0x9ed1b00 '__w' 'const streamsize':'const int'))
      (CXXStaticCastExpr 0x9ed1c38 <col:12, col:41> 'streamsize':'int' static_cast<streamsize> <NoOp>
        (ImplicitCastExpr 0x9ed1c28 <col:36> 'int' <LValueToRValue>
          (DeclRefExpr 0x9ed1c08 <col:36> 'int' lvalue Var 0x9ecdfe0 '__len' 'int'))))
    (CompoundStmt 0x9ed1ef8 <line:919:4, line:924:4>
      (DeclStmt 0x9ed1da8 <line:920:6, line:921:18>
        0x9ed1c90 "_CharT *__cs3 =
          (CXXStaticCastExpr 0x9ed1d90 <line:920:22, line:921:17> '_CharT *' static_cast<_CharT *> <Dependent>
            (CallExpr 0x9ed1d60 <line:920:43, line:921:16> 'void *'
              (ImplicitCastExpr 0x9ed1d50 <line:920:43> 'void *(*)(unsigned int)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9ed1cc4 <col:43> 'void *(unsigned int)' lvalue Function 0x9ecd810 '__builtin_alloca' 'void *(unsigned int)'))
              (BinaryOperator 0x9ed1d38 <col:60, line:921:13> 'unsigned int' '*'
                (UnaryExprOrTypeTraitExpr 0x9ed1ce8 <line:920:60, col:73> 'unsigned int' sizeof '_CharT')
                (ImplicitCastExpr 0x9ed1d28 <line:921:13> 'unsigned int' <IntegralCast>
                  (ImplicitCastExpr 0x9ed1d18 <col:13> 'streamsize':'int' <LValueToRValue>
                    (DeclRefExpr 0x9ed1d00 <col:13> 'const streamsize':'const int' lvalue Var 0x9ed1b00 '__w' 'const streamsize':'const int'))))))")
      (CallExpr 0x9ed1e78 <line:922:6, col:50> '<dependent type>'
        (MemberExpr 0x9ed1dc8 <col:6> '<bound member function type>' ->_M_pad 0x9ec8ff0
          (CXXThisExpr 0x9ed1db8 <col:6> 'const num_put<_CharT, _OutIter> *' this))
        (DeclRefExpr 0x9ed1de8 <col:13> '_CharT' lvalue ParmVar 0x9eccdc0 '__fill' '_CharT')
        (DeclRefExpr 0x9ed1e00 <col:21> 'const streamsize':'const int' lvalue Var 0x9ed1b00 '__w' 'const streamsize':'const int')
        (DeclRefExpr 0x9ed1e18 <col:26> 'class std::ios_base' lvalue ParmVar 0x9eccd80 '__io' 'class std::ios_base &')
        (DeclRefExpr 0x9ed1e30 <col:32> '_CharT *' lvalue Var 0x9ed1c90 '__cs3' '_CharT *')
        (DeclRefExpr 0x9ed1e48 <col:39> '_CharT *' lvalue Var 0x9ecd7d0 '__cs' '_CharT *')
        (DeclRefExpr 0x9ed1e60 <col:45> 'int' lvalue Var 0x9ecdfe0 '__len' 'int'))
      (BinaryOperator 0x9ed1ee0 <line:923:6, col:13> '<dependent type>' '='
        (DeclRefExpr 0x9ed1eac <col:6> '_CharT *' lvalue Var 0x9ecd7d0 '__cs' '_CharT *')
        (DeclRefExpr 0x9ed1ec4 <col:13> '_CharT *' lvalue Var 0x9ed1c90 '__cs3' '_CharT *')))
    <<<NULL>>>)
  (CXXMemberCallExpr 0x9ed1fc8 <line:925:2, col:14> 'streamsize':'int'
    (MemberExpr 0x9ed1fa8 <col:2, col:7> '<bound member function type>' .width 0x9e15cd0
      (DeclRefExpr 0x9ed1f34 <col:2> 'class std::ios_base' lvalue ParmVar 0x9eccd80 '__io' 'class std::ios_base &'))
    (IntegerLiteral 0x9ed1f90 <col:13> 'int' 0))
  (ReturnStmt 0x9ed20a8 <line:929:2, col:38>
    (CallExpr 0x9ed2080 <col:9, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0x9ed2000 <col:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e7d870 0x9e7dc30)
      (DeclRefExpr 0x9ed2038 <col:22> '_OutIter' lvalue ParmVar 0x9eccd30 '__s' '_OutIter')
      (DeclRefExpr 0x9ed2050 <col:27> '_CharT *' lvalue Var 0x9ecd7d0 '__cs' '_CharT *')
      (DeclRefExpr 0x9ed2068 <col:33> 'int' lvalue Var 0x9ecdfe0 '__len' 'int'))))

;
    void _M_group_float(const char *__grouping, size_t __grouping_size, _CharT __sep, const _CharT *__p, _CharT *__new, _CharT *__cs, int &__len) const (CompoundStmt 0x9ed2e48 </usr/include/c++/4.6/bits/locale_facets.tcc:938:5, line:955:5>
  (DeclStmt 0x9ed2848 <line:942:7, col:52>
    0x9ed2730 "const int __declen =
      (ConditionalOperator 0x9ed2828 <col:28, col:47> '<dependent type>'
        (DeclRefExpr 0x9ed2764 <col:28> 'const _CharT *' lvalue ParmVar 0x9ed24b0 '__p' 'const _CharT *')
        (CXXOperatorCallExpr 0x9ed27e8 <col:34, col:40> '<dependent type>'
          (UnresolvedLookupExpr 0x9ed27b0 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
          (DeclRefExpr 0x9ed277c <col:34> 'const _CharT *' lvalue ParmVar 0x9ed24b0 '__p' 'const _CharT *')
          (DeclRefExpr 0x9ed2794 <col:40> '_CharT *' lvalue ParmVar 0x9ed2570 '__cs' '_CharT *'))
        (DeclRefExpr 0x9ed280c <col:47> 'int' lvalue ParmVar 0x9ed25c0 '__len' 'int &'))")
  (DeclStmt 0x9ed2a48 <line:943:7, line:945:29>
    0x9ed2870 "_CharT *__p2 =
      (CallExpr 0x9ed2a10 <line:943:22, line:945:28> '<dependent type>'
        (UnresolvedLookupExpr 0x9ed28c0 <line:943:22, col:27> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e7d360)
        (DeclRefExpr 0x9ed28f4 <col:42> '_CharT *' lvalue ParmVar 0x9ed2520 '__new' '_CharT *')
        (DeclRefExpr 0x9ed290c <col:49> '_CharT' lvalue ParmVar 0x9ed2440 '__sep' '_CharT')
        (DeclRefExpr 0x9ed2924 <col:56> 'const char *' lvalue ParmVar 0x9ed23c0 '__grouping' 'const char *')
        (DeclRefExpr 0x9ed293c <line:944:7> 'size_t':'unsigned int' lvalue ParmVar 0x9ed2400 '__grouping_size' 'size_t':'unsigned int')
        (DeclRefExpr 0x9ed2954 <line:945:7> '_CharT *' lvalue ParmVar 0x9ed2570 '__cs' '_CharT *')
        (CXXOperatorCallExpr 0x9ed29e8 <col:13, col:20> '<dependent type>'
          (UnresolvedLookupExpr 0x9ed29a0 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d86680 0x9d87280 0x9d5d090 0x9d5d890)
          (DeclRefExpr 0x9ed296c <col:13> '_CharT *' lvalue ParmVar 0x9ed2570 '__cs' '_CharT *')
          (DeclRefExpr 0x9ed2984 <col:20> 'const int' lvalue Var 0x9ed2730 '__declen' 'const int')))")
  (DeclStmt 0x9ed2b38 <line:948:7, col:34>
    0x9ed2a70 "int __newlen =
      (CXXOperatorCallExpr 0x9ed2b10 <col:22, col:29> '<dependent type>'
        (UnresolvedLookupExpr 0x9ed2ad8 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
        (DeclRefExpr 0x9ed2aa4 <col:22> '_CharT *' lvalue Var 0x9ed2870 '__p2' '_CharT *')
        (DeclRefExpr 0x9ed2abc <col:29> '_CharT *' lvalue ParmVar 0x9ed2520 '__new' '_CharT *'))")
  (IfStmt 0x9ed2dd0 <line:949:7, line:953:2>
    <<<NULL>>>
    (DeclRefExpr 0x9ed2b48 <line:949:11> 'const _CharT *' lvalue ParmVar 0x9ed24b0 '__p' 'const _CharT *')
    (CompoundStmt 0x9ed2db8 <line:950:2, line:953:2>
      (CallExpr 0x9ed2cf0 <line:951:4, col:57> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ed2c20 <col:4, col:25> '<dependent type>' lvalue)
        (DeclRefExpr 0x9ed2c54 <col:30> '_CharT *' lvalue Var 0x9ed2870 '__p2' '_CharT *')
        (DeclRefExpr 0x9ed2c6c <col:36> 'const _CharT *' lvalue ParmVar 0x9ed24b0 '__p' 'const _CharT *')
        (BinaryOperator 0x9ed2cd8 <col:41, col:49> 'int' '-'
          (ImplicitCastExpr 0x9ed2cb8 <col:41> 'int' <LValueToRValue>
            (DeclRefExpr 0x9ed2c84 <col:41> 'int' lvalue ParmVar 0x9ed25c0 '__len' 'int &'))
          (ImplicitCastExpr 0x9ed2cc8 <col:49> 'int' <LValueToRValue>
            (DeclRefExpr 0x9ed2c9c <col:49> 'const int' lvalue Var 0x9ed2730 '__declen' 'const int'))))
      (CompoundAssignOperator 0x9ed2d98 <line:952:4, col:24> 'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
        (DeclRefExpr 0x9ed2d18 <col:4> 'int' lvalue Var 0x9ed2a70 '__newlen' 'int')
        (BinaryOperator 0x9ed2d80 <col:16, col:24> 'int' '-'
          (ImplicitCastExpr 0x9ed2d60 <col:16> 'int' <LValueToRValue>
            (DeclRefExpr 0x9ed2d30 <col:16> 'int' lvalue ParmVar 0x9ed25c0 '__len' 'int &'))
          (ImplicitCastExpr 0x9ed2d70 <col:24> 'int' <LValueToRValue>
            (DeclRefExpr 0x9ed2d48 <col:24> 'const int' lvalue Var 0x9ed2730 '__declen' 'const int')))))
    <<<NULL>>>)
  (BinaryOperator 0x9ed2e30 <line:954:7, col:15> 'int' lvalue '='
    (DeclRefExpr 0x9ed2dec <col:7> 'int' lvalue ParmVar 0x9ed25c0 '__len' 'int &')
    (ImplicitCastExpr 0x9ed2e20 <col:15> 'int' <LValueToRValue>
      (DeclRefExpr 0x9ed2e04 <col:15> 'int' lvalue Var 0x9ed2a70 '__newlen' 'int'))))


    template <typename _ValueT> _OutIter _M_insert_float(_OutIter __s, std::ios_base &__io, _CharT __fill, char __mod, _ValueT __v) const (CompoundStmt 0x9ed6018 </usr/include/c++/4.6/bits/locale_facets.tcc:973:7, line:1085:7>
  (DeclStmt 0x9ed3520 <line:974:2, col:62>
    0x9ed34f0 "typedef __numpunct_cache<_CharT> __cache_type")
  (DeclStmt 0x9ed3628 <line:975:2, col:32>
    0x9ed35f0 "__use_cache<__cache_type> __uc")
  (DeclStmt 0x9ed36f0 <line:976:2, col:40>
    0x9ed3650 "const std::locale &__loc =
      (CXXMemberCallExpr 0x9ed36c0 <col:24, col:39> 'const class std::locale' lvalue
        (MemberExpr 0x9ed369c <col:24, col:29> '<bound member function type>' ._M_getloc 0x9e15ff0
          (ImplicitCastExpr 0x9ed36e0 <col:24> 'const class std::ios_base' lvalue <NoOp>
            (DeclRefExpr 0x9ed3684 <col:24> 'class std::ios_base' lvalue ParmVar 0x9ed31c0 '__io' 'class std::ios_base &'))))")
  (DeclStmt 0x9ed37b8 <line:977:2, col:40>
    0x9ed3730 "const __cache_type *__lc =
      (CallExpr 0x9ed3798 <col:29, col:39> '<dependent type>'
        (DeclRefExpr 0x9ed3764 <col:29> '__use_cache<__cache_type>' lvalue Var 0x9ed35f0 '__uc' '__use_cache<__cache_type>')
        (DeclRefExpr 0x9ed377c <col:34> 'const class std::locale' lvalue Var 0x9ed3650 '__loc' 'const class std::locale &'))")
  (DeclStmt 0x9ed39c0 <line:980:2, col:71>
    0x9ed37d0 "const streamsize __prec =
      (ConditionalOperator 0x9ed39a0 <col:28, col:70> 'int'
        (BinaryOperator 0x9ed38c8 <col:28, col:47> '_Bool' '<'
          (CXXMemberCallExpr 0x9ed3880 <col:28, col:43> 'streamsize':'int'
            (MemberExpr 0x9ed385c <col:28, col:33> '<bound member function type>' .precision 0x9e15aa0
              (ImplicitCastExpr 0x9ed38a0 <col:28> 'const class std::ios_base' lvalue <NoOp>
                (DeclRefExpr 0x9ed3804 <col:28> 'class std::ios_base' lvalue ParmVar 0x9ed31c0 '__io' 'class std::ios_base &'))))
          (IntegerLiteral 0x9ed38b0 <col:47> 'int' 0))
        (IntegerLiteral 0x9ed38e0 <col:51> 'int' 6)
        (CXXMemberCallExpr 0x9ed3970 <col:55, col:70> 'streamsize':'int'
          (MemberExpr 0x9ed3950 <col:55, col:60> '<bound member function type>' .precision 0x9e15aa0
            (ImplicitCastExpr 0x9ed3990 <col:55> 'const class std::ios_base' lvalue <NoOp>
              (DeclRefExpr 0x9ed38f8 <col:55> 'class std::ios_base' lvalue ParmVar 0x9ed31c0 '__io' 'class std::ios_base &')))))")
  (DeclStmt 0x9ed3b08 <line:982:2, line:983:52>
    0x9ed39e0 "const int __max_digits =
      (CXXDependentScopeMemberExpr 0x9ed3ad0 <col:4, col:42> '<dependent type>' lvalue)")
  (DeclStmt 0x9ed3b68 <line:986:2, col:11>
    0x9ed3b30 "int __len")
  (DeclStmt 0x9ed3c08 <line:988:2, col:17>
    0x9ed3bd0 "char __fbuf[16]")
  (CallExpr 0x9ed3cf8 <line:989:2, col:49> 'void'
    (ImplicitCastExpr 0x9ed3ce8 <col:2, col:14> 'void (*)(const class std::ios_base &, char *, char) throw()' <FunctionToPointerDecay>
      (DeclRefExpr 0x9ed3c40 <col:2, col:14> 'void (const class std::ios_base &, char *, char) throw()' lvalue CXXMethod 0x9e94490 '_S_format_float' 'void (const class std::ios_base &, char *, char) throw()'))
    (ImplicitCastExpr 0x9ed3d20 <col:30> 'const class std::ios_base' lvalue <NoOp>
      (DeclRefExpr 0x9ed3c60 <col:30> 'class std::ios_base' lvalue ParmVar 0x9ed31c0 '__io' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9ed3d30 <col:36> 'char *' <ArrayToPointerDecay>
      (DeclRefExpr 0x9ed3c78 <col:36> 'char [16]' lvalue Var 0x9ed3bd0 '__fbuf' 'char [16]'))
    (ImplicitCastExpr 0x9ed3d40 <col:44> 'char' <LValueToRValue>
      (DeclRefExpr 0x9ed3c90 <col:44> 'char' lvalue ParmVar 0x9ed3240 '__mod' 'char')))
  (DeclStmt 0x9ed3df0 <line:994:2, col:34>
    0x9ed3d60 "int __cs_size =
      (BinaryOperator 0x9ed3dd8 <col:18, col:33> 'int' '*'
        (ImplicitCastExpr 0x9ed3dc8 <col:18> 'int' <LValueToRValue>
          (DeclRefExpr 0x9ed3d94 <col:18> 'const int' lvalue Var 0x9ed39e0 '__max_digits' 'const int'))
        (IntegerLiteral 0x9ed3db0 <col:33> 'int' 3))")
  (DeclStmt 0x9ed3ef0 <line:995:2, col:62>
    0x9ed3e10 "char *__cs =
      (CXXStaticCastExpr 0x9ed3ed8 <col:15, col:61> 'char *' static_cast<char *> <BitCast>
        (CallExpr 0x9ed3e88 <col:34, col:60> 'void *'
          (ImplicitCastExpr 0x9ed3e78 <col:34> 'void *(*)(unsigned int)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9ed3e44 <col:34> 'void *(unsigned int)' lvalue Function 0x9ecd810 '__builtin_alloca' 'void *(unsigned int)'))
          (ImplicitCastExpr 0x9ed3eb8 <col:51> 'unsigned int' <IntegralCast>
            (ImplicitCastExpr 0x9ed3ea8 <col:51> 'int' <LValueToRValue>
              (DeclRefExpr 0x9ed3e5c <col:51> 'int' lvalue Var 0x9ed3d60 '__cs_size' 'int')))))")
  (BinaryOperator 0x9ed4048 <line:996:2, line:997:30> '<dependent type>' '='
    (DeclRefExpr 0x9ed3f00 <line:996:2> 'int' lvalue Var 0x9ed3b30 '__len' 'int')
    (CallExpr 0x9ed4010 <col:10, line:997:30> '<dependent type>'
      (DeclRefExpr 0x9ed3f30 <line:996:10, col:15> 'int (const __c_locale &, char *, const int, const char *, ...)' lvalue Function 0x9c47f50 '__convert_from_v' 'int (const __c_locale &, char *, const int, const char *, ...)')
      (CallExpr 0x9ed3f78 <col:32, col:48> '__c_locale':'struct __locale_struct *'
        (ImplicitCastExpr 0x9ed3f68 <col:32> '__c_locale (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9ed3f50 <col:32> '__c_locale (void)' lvalue CXXMethod 0x9def8a0 '_S_get_c_locale' '__c_locale (void)')))
      (DeclRefExpr 0x9ed3f94 <col:51> 'char *' lvalue Var 0x9ed3e10 '__cs' 'char *')
      (DeclRefExpr 0x9ed3fac <col:57> 'int' lvalue Var 0x9ed3d60 '__cs_size' 'int')
      (DeclRefExpr 0x9ed3fc4 <line:997:11> 'char [16]' lvalue Var 0x9ed3bd0 '__fbuf' 'char [16]')
      (DeclRefExpr 0x9ed3fdc <col:19> 'const streamsize':'const int' lvalue Var 0x9ed37d0 '__prec' 'const streamsize':'const int')
      (DeclRefExpr 0x9ed3ff4 <col:27> '_ValueT' lvalue ParmVar 0x9ed3280 '__v' '_ValueT')))
  (IfStmt 0x9ed43a8 <line:1000:2, line:1006:4>
    <<<NULL>>>
    (BinaryOperator 0x9ed40b0 <line:1000:6, col:15> '_Bool' '>='
      (ImplicitCastExpr 0x9ed4090 <col:6> 'int' <LValueToRValue>
        (DeclRefExpr 0x9ed4060 <col:6> 'int' lvalue Var 0x9ed3b30 '__len' 'int'))
      (ImplicitCastExpr 0x9ed40a0 <col:15> 'int' <LValueToRValue>
        (DeclRefExpr 0x9ed4078 <col:15> 'int' lvalue Var 0x9ed3d60 '__cs_size' 'int')))
    (CompoundStmt 0x9ed4388 <line:1001:4, line:1006:4>
      (BinaryOperator 0x9ed4138 <line:1002:6, col:26> 'int' lvalue '='
        (DeclRefExpr 0x9ed40c8 <col:6> 'int' lvalue Var 0x9ed3d60 '__cs_size' 'int')
        (BinaryOperator 0x9ed4120 <col:18, col:26> 'int' '+'
          (ImplicitCastExpr 0x9ed4110 <col:18> 'int' <LValueToRValue>
            (DeclRefExpr 0x9ed40e0 <col:18> 'int' lvalue Var 0x9ed3b30 '__len' 'int'))
          (IntegerLiteral 0x9ed40f8 <col:26> 'int' 1)))
      (BinaryOperator 0x9ed4210 <line:1003:6, col:59> 'char *' lvalue '='
        (DeclRefExpr 0x9ed4150 <col:6> 'char *' lvalue Var 0x9ed3e10 '__cs' 'char *')
        (CXXStaticCastExpr 0x9ed41f8 <col:13, col:59> 'char *' static_cast<char *> <BitCast>
          (CallExpr 0x9ed41a8 <col:32, col:58> 'void *'
            (ImplicitCastExpr 0x9ed4198 <col:32> 'void *(*)(unsigned int)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9ed4168 <col:32> 'void *(unsigned int)' lvalue Function 0x9ecd810 '__builtin_alloca' 'void *(unsigned int)'))
            (ImplicitCastExpr 0x9ed41d8 <col:49> 'unsigned int' <IntegralCast>
              (ImplicitCastExpr 0x9ed41c8 <col:49> 'int' <LValueToRValue>
                (DeclRefExpr 0x9ed4180 <col:49> 'int' lvalue Var 0x9ed3d60 '__cs_size' 'int'))))))
      (BinaryOperator 0x9ed4370 <line:1004:6, line:1005:27> '<dependent type>' '='
        (DeclRefExpr 0x9ed4228 <line:1004:6> 'int' lvalue Var 0x9ed3b30 '__len' 'int')
        (CallExpr 0x9ed4338 <col:14, line:1005:27> '<dependent type>'
          (DeclRefExpr 0x9ed4258 <line:1004:14, col:19> 'int (const __c_locale &, char *, const int, const char *, ...)' lvalue Function 0x9c47f50 '__convert_from_v' 'int (const __c_locale &, char *, const int, const char *, ...)')
          (CallExpr 0x9ed42a0 <col:36, col:52> '__c_locale':'struct __locale_struct *'
            (ImplicitCastExpr 0x9ed4290 <col:36> '__c_locale (*)(void)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9ed4278 <col:36> '__c_locale (void)' lvalue CXXMethod 0x9def8a0 '_S_get_c_locale' '__c_locale (void)')))
          (DeclRefExpr 0x9ed42bc <col:55> 'char *' lvalue Var 0x9ed3e10 '__cs' 'char *')
          (DeclRefExpr 0x9ed42d4 <col:61> 'int' lvalue Var 0x9ed3d60 '__cs_size' 'int')
          (DeclRefExpr 0x9ed42ec <line:1005:8> 'char [16]' lvalue Var 0x9ed3bd0 '__fbuf' 'char [16]')
          (DeclRefExpr 0x9ed4304 <col:16> 'const streamsize':'const int' lvalue Var 0x9ed37d0 '__prec' 'const streamsize':'const int')
          (DeclRefExpr 0x9ed431c <col:24> '_ValueT' lvalue ParmVar 0x9ed3280 '__v' '_ValueT'))))
    <<<NULL>>>)
  (DeclStmt 0x9ed4610 <line:1028:2, col:65>
    0x9ed4490 "const ctype<_CharT> &__ctype =
      (CallExpr 0x9ed45f0 <col:33, col:64> '<dependent type>'
        (UnresolvedLookupExpr 0x9ed4570 <col:33, col:57> '<dependent type>' lvalue (ADL) = '1' 0x9e01120)
        (DeclRefExpr 0x9ed45d8 <col:59> 'const class std::locale' lvalue Var 0x9ed3650 '__loc' 'const class std::locale &'))")
  (DeclStmt 0x9ed4768 <line:1030:2, line:1031:22>
    0x9ed4650 "_CharT *__ws =
      (CXXStaticCastExpr 0x9ed4750 <line:1030:17, line:1031:21> '_CharT *' static_cast<_CharT *> <Dependent>
        (CallExpr 0x9ed4720 <line:1030:38, line:1031:20> 'void *'
          (ImplicitCastExpr 0x9ed4710 <line:1030:38> 'void *(*)(unsigned int)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9ed4684 <col:38> 'void *(unsigned int)' lvalue Function 0x9ecd810 '__builtin_alloca' 'void *(unsigned int)'))
          (BinaryOperator 0x9ed46f8 <col:55, line:1031:15> 'unsigned int' '*'
            (UnaryExprOrTypeTraitExpr 0x9ed46a8 <line:1030:55, col:68> 'unsigned int' sizeof '_CharT')
            (ImplicitCastExpr 0x9ed46e8 <line:1031:15> 'unsigned int' <IntegralCast>
              (ImplicitCastExpr 0x9ed46d8 <col:15> 'int' <LValueToRValue>
                (DeclRefExpr 0x9ed46c0 <col:15> 'int' lvalue Var 0x9ed3b30 '__len' 'int'))))))")
  (CallExpr 0x9ed4860 <line:1032:2, col:40> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9ed4790 <col:2, col:10> '<dependent type>' lvalue
      (DeclRefExpr 0x9ed4778 <col:2> 'const ctype<_CharT>' lvalue Var 0x9ed4490 '__ctype' 'const ctype<_CharT> &'))
    (DeclRefExpr 0x9ed47c4 <col:16> 'char *' lvalue Var 0x9ed3e10 '__cs' 'char *')
    (BinaryOperator 0x9ed4830 <col:22, col:29> 'char *' '+'
      (ImplicitCastExpr 0x9ed4810 <col:22> 'char *' <LValueToRValue>
        (DeclRefExpr 0x9ed47dc <col:22> 'char *' lvalue Var 0x9ed3e10 '__cs' 'char *'))
      (ImplicitCastExpr 0x9ed4820 <col:29> 'int' <LValueToRValue>
        (DeclRefExpr 0x9ed47f4 <col:29> 'int' lvalue Var 0x9ed3b30 '__len' 'int')))
    (DeclRefExpr 0x9ed4848 <col:36> '_CharT *' lvalue Var 0x9ed4650 '__ws' '_CharT *'))
  (DeclStmt 0x9ed48f0 <line:1035:2, col:18>
    0x9ed48a0 "_CharT *__wp =
      (IntegerLiteral 0x9ed48d8 <col:17> 'int' 0)")
  (DeclStmt 0x9ed4af0 <line:1036:2, col:61>
    0x9ed4910 "const char *__p =
      (CallExpr 0x9ed4a78 <col:20, col:60> 'const char_type *'
        (ImplicitCastExpr 0x9ed4a68 <col:20, col:39> 'const char_type *(*)(const char_type *, size_t, const char_type &)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9ed49c0 <col:20, col:39> 'const char_type *(const char_type *, size_t, const char_type &)' lvalue CXXMethod 0x9c1b1e0 'find' 'const char_type *(const char_type *, size_t, const char_type &)'))
        (ImplicitCastExpr 0x9ed4ab0 <col:44> 'const char_type *' <NoOp>
          (ImplicitCastExpr 0x9ed4aa0 <col:44> 'char *' <LValueToRValue>
            (DeclRefExpr 0x9ed49e0 <col:44> 'char *' lvalue Var 0x9ed3e10 '__cs' 'char *')))
        (ImplicitCastExpr 0x9ed4ad0 <col:50> 'size_t':'unsigned int' <IntegralCast>
          (ImplicitCastExpr 0x9ed4ac0 <col:50> 'int' <LValueToRValue>
            (DeclRefExpr 0x9ed49f8 <col:50> 'int' lvalue Var 0x9ed3b30 '__len' 'int')))
        (MaterializeTemporaryExpr 0x9ed4ae0 <col:57> 'const char_type':'const char' lvalue
          (CharacterLiteral 0x9ed4a10 <col:57> 'char'46)))")
  (IfStmt 0x9ed4d20 <line:1037:2, line:1041:4>
    <<<NULL>>>
    (ImplicitCastExpr 0x9ed4b28 <line:1037:6> '_Bool' <PointerToBoolean>
      (ImplicitCastExpr 0x9ed4b18 <col:6> 'const char *' <LValueToRValue>
        (DeclRefExpr 0x9ed4b00 <col:6> 'const char *' lvalue Var 0x9ed4910 '__p' 'const char *')))
    (CompoundStmt 0x9ed4d08 <line:1038:4, line:1041:4>
      (BinaryOperator 0x9ed4c58 <line:1039:6, col:31> '<dependent type>' '='
        (DeclRefExpr 0x9ed4b34 <col:6> '_CharT *' lvalue Var 0x9ed48a0 '__wp' '_CharT *')
        (CXXOperatorCallExpr 0x9ed4c30 <col:13, col:31> '<dependent type>'
          (UnresolvedLookupExpr 0x9ed4be8 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d86680 0x9d87280 0x9d5d090 0x9d5d890)
          (DeclRefExpr 0x9ed4b4c <col:13> '_CharT *' lvalue Var 0x9ed4650 '__ws' '_CharT *')
          (ParenExpr 0x9ed4bd0 <col:20, col:31> 'int'
            (BinaryOperator 0x9ed4bb8 <col:21, col:27> 'int' '-'
              (ImplicitCastExpr 0x9ed4b98 <col:21> 'const char *' <LValueToRValue>
                (DeclRefExpr 0x9ed4b64 <col:21> 'const char *' lvalue Var 0x9ed4910 '__p' 'const char *'))
              (ImplicitCastExpr 0x9ed4ba8 <col:27> 'char *' <LValueToRValue>
                (DeclRefExpr 0x9ed4b7c <col:27> 'char *' lvalue Var 0x9ed3e10 '__cs' 'char *'))))))
      (BinaryOperator 0x9ed4cf0 <line:1040:6, col:20> '<dependent type>' '='
        (UnaryOperator 0x9ed4c88 <col:6, col:7> '<dependent type>' prefix '*'
          (DeclRefExpr 0x9ed4c70 <col:7> '_CharT *' lvalue Var 0x9ed48a0 '__wp' '_CharT *'))
        (CXXDependentScopeMemberExpr 0x9ed4cb8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9ed4c9c <col:14> 'const __cache_type *' lvalue Var 0x9ed3730 '__lc' 'const __cache_type *'))))
    <<<NULL>>>)
  (IfStmt 0x9ed5a30 <line:1046:2, line:1069:4>
    <<<NULL>>>
    (BinaryOperator 0x9ed5188 <line:1046:6, line:1048:47> '<dependent type>' '&&'
      (CXXDependentScopeMemberExpr 0x9ed4d58 <line:1046:6, col:12> '<dependent type>' lvalue
        (DeclRefExpr 0x9ed4d3c <col:6> 'const __cache_type *' lvalue Var 0x9ed3730 '__lc' 'const __cache_type *'))
      (ParenExpr 0x9ed5170 <line:1047:9, line:1048:47> '<dependent type>'
        (BinaryOperator 0x9ed5158 <line:1047:10, line:1048:46> '<dependent type>' '||'
          (BinaryOperator 0x9ed4e00 <line:1047:10, col:26> '<dependent type>' '||'
            (DeclRefExpr 0x9ed4d8c <col:10> '_CharT *' lvalue Var 0x9ed48a0 '__wp' '_CharT *')
            (BinaryOperator 0x9ed4de8 <col:18, col:26> '_Bool' '<'
              (ImplicitCastExpr 0x9ed4dd8 <col:18> 'int' <LValueToRValue>
                (DeclRefExpr 0x9ed4da4 <col:18> 'int' lvalue Var 0x9ed3b30 '__len' 'int'))
              (IntegerLiteral 0x9ed4dc0 <col:26> 'int' 3)))
          (ParenExpr 0x9ed5140 <col:31, line:1048:46> '_Bool'
            (BinaryOperator 0x9ed5128 <line:1047:32, line:1048:43> '_Bool' '&&'
              (BinaryOperator 0x9ed5058 <line:1047:32, line:1048:25> '_Bool' '&&'
                (BinaryOperator 0x9ed4f88 <line:1047:32, col:61> '_Bool' '&&'
                  (BinaryOperator 0x9ed4eb8 <col:32, col:43> '_Bool' '<='
                    (ImplicitCastExpr 0x9ed4e98 <col:32, col:38> 'int' <IntegralCast>
                      (ImplicitCastExpr 0x9ed4e88 <col:32, col:38> 'char' <LValueToRValue>
                        (ArraySubscriptExpr 0x9ed4e58 <col:32, col:38> 'char' lvalue
                          (ImplicitCastExpr 0x9ed4e48 <col:32> 'char *' <LValueToRValue>
                            (DeclRefExpr 0x9ed4e18 <col:32> 'char *' lvalue Var 0x9ed3e10 '__cs' 'char *'))
                          (IntegerLiteral 0x9ed4e30 <col:37> 'int' 1))))
                    (ImplicitCastExpr 0x9ed4ea8 <col:43> 'int' <IntegralCast>
                      (CharacterLiteral 0x9ed4e70 <col:43> 'char'57)))
                  (BinaryOperator 0x9ed4f70 <col:50, col:61> '_Bool' '<='
                    (ImplicitCastExpr 0x9ed4f50 <col:50, col:56> 'int' <IntegralCast>
                      (ImplicitCastExpr 0x9ed4f40 <col:50, col:56> 'char' <LValueToRValue>
                        (ArraySubscriptExpr 0x9ed4f10 <col:50, col:56> 'char' lvalue
                          (ImplicitCastExpr 0x9ed4f00 <col:50> 'char *' <LValueToRValue>
                            (DeclRefExpr 0x9ed4ed0 <col:50> 'char *' lvalue Var 0x9ed3e10 '__cs' 'char *'))
                          (IntegerLiteral 0x9ed4ee8 <col:55> 'int' 2))))
                    (ImplicitCastExpr 0x9ed4f60 <col:61> 'int' <IntegralCast>
                      (CharacterLiteral 0x9ed4f28 <col:61> 'char'57))))
                (BinaryOperator 0x9ed5040 <line:1048:14, col:25> '_Bool' '>='
                  (ImplicitCastExpr 0x9ed5020 <col:14, col:20> 'int' <IntegralCast>
                    (ImplicitCastExpr 0x9ed5010 <col:14, col:20> 'char' <LValueToRValue>
                      (ArraySubscriptExpr 0x9ed4fe0 <col:14, col:20> 'char' lvalue
                        (ImplicitCastExpr 0x9ed4fd0 <col:14> 'char *' <LValueToRValue>
                          (DeclRefExpr 0x9ed4fa0 <col:14> 'char *' lvalue Var 0x9ed3e10 '__cs' 'char *'))
                        (IntegerLiteral 0x9ed4fb8 <col:19> 'int' 1))))
                  (ImplicitCastExpr 0x9ed5030 <col:25> 'int' <IntegralCast>
                    (CharacterLiteral 0x9ed4ff8 <col:25> 'char'48))))
              (BinaryOperator 0x9ed5110 <col:32, col:43> '_Bool' '>='
                (ImplicitCastExpr 0x9ed50f0 <col:32, col:38> 'int' <IntegralCast>
                  (ImplicitCastExpr 0x9ed50e0 <col:32, col:38> 'char' <LValueToRValue>
                    (ArraySubscriptExpr 0x9ed50b0 <col:32, col:38> 'char' lvalue
                      (ImplicitCastExpr 0x9ed50a0 <col:32> 'char *' <LValueToRValue>
                        (DeclRefExpr 0x9ed5070 <col:32> 'char *' lvalue Var 0x9ed3e10 '__cs' 'char *'))
                      (IntegerLiteral 0x9ed5088 <col:37> 'int' 2))))
                (ImplicitCastExpr 0x9ed5100 <col:43> 'int' <IntegralCast>
                  (CharacterLiteral 0x9ed50c8 <col:43> 'char'48))))))))
    (CompoundStmt 0x9ed5a08 <line:1049:4, line:1069:4>
      (DeclStmt 0x9ed5308 <line:1052:6, line:1053:24>
        0x9ed51b0 "_CharT *__ws2 =
          (CXXStaticCastExpr 0x9ed52f0 <line:1052:22, line:1053:23> '_CharT *' static_cast<_CharT *> <Dependent>
            (CallExpr 0x9ed52c0 <line:1052:43, line:1053:22> 'void *'
              (ImplicitCastExpr 0x9ed52b0 <line:1052:43> 'void *(*)(unsigned int)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9ed51e4 <col:43> 'void *(unsigned int)' lvalue Function 0x9ecd810 '__builtin_alloca' 'void *(unsigned int)'))
              (BinaryOperator 0x9ed5298 <col:60, line:1053:21> 'unsigned int' '*'
                (BinaryOperator 0x9ed5258 <line:1052:60, line:1053:13> 'unsigned int' '*'
                  (UnaryExprOrTypeTraitExpr 0x9ed5208 <line:1052:60, col:73> 'unsigned int' sizeof '_CharT')
                  (ImplicitCastExpr 0x9ed5248 <line:1053:13> 'unsigned int' <IntegralCast>
                    (ImplicitCastExpr 0x9ed5238 <col:13> 'int' <LValueToRValue>
                      (DeclRefExpr 0x9ed5220 <col:13> 'int' lvalue Var 0x9ed3b30 '__len' 'int'))))
                (ImplicitCastExpr 0x9ed5288 <col:21> 'unsigned int' <IntegralCast>
                  (IntegerLiteral 0x9ed5270 <col:21> 'int' 2)))))")
      (DeclStmt 0x9ed5370 <line:1055:6, col:26>
        0x9ed5320 "streamsize __off =
          (IntegerLiteral 0x9ed5358 <col:25> 'int' 0)")
      (IfStmt 0x9ed5678 <line:1056:6, line:1061:8>
        <<<NULL>>>
        (BinaryOperator 0x9ed5500 <line:1056:10, col:39> '_Bool' '||'
          (BinaryOperator 0x9ed5420 <col:10, col:21> '_Bool' '=='
            (ImplicitCastExpr 0x9ed5400 <col:10, col:16> 'int' <IntegralCast>
              (ImplicitCastExpr 0x9ed53f0 <col:10, col:16> 'char' <LValueToRValue>
                (ArraySubscriptExpr 0x9ed53c0 <col:10, col:16> 'char' lvalue
                  (ImplicitCastExpr 0x9ed53b0 <col:10> 'char *' <LValueToRValue>
                    (DeclRefExpr 0x9ed5380 <col:10> 'char *' lvalue Var 0x9ed3e10 '__cs' 'char *'))
                  (IntegerLiteral 0x9ed5398 <col:15> 'int' 0))))
            (ImplicitCastExpr 0x9ed5410 <col:21> 'int' <IntegralCast>
              (CharacterLiteral 0x9ed53d8 <col:21> 'char'45)))
          (BinaryOperator 0x9ed54e8 <col:28, col:39> '_Bool' '=='
            (ImplicitCastExpr 0x9ed54c8 <col:28, col:34> 'int' <IntegralCast>
              (ImplicitCastExpr 0x9ed54a8 <col:28, col:34> 'char' <LValueToRValue>
                (ArraySubscriptExpr 0x9ed5478 <col:28, col:34> 'char' lvalue
                  (ImplicitCastExpr 0x9ed5468 <col:28> 'char *' <LValueToRValue>
                    (DeclRefExpr 0x9ed5438 <col:28> 'char *' lvalue Var 0x9ed3e10 '__cs' 'char *'))
                  (IntegerLiteral 0x9ed5450 <col:33> 'int' 0))))
            (ImplicitCastExpr 0x9ed54d8 <col:39> 'int' <IntegralCast>
              (CharacterLiteral 0x9ed5490 <col:39> 'char'43))))
        (CompoundStmt 0x9ed5658 <line:1057:8, line:1061:8>
          (BinaryOperator 0x9ed5548 <line:1058:3, col:11> 'streamsize':'int' lvalue '='
            (DeclRefExpr 0x9ed5518 <col:3> 'streamsize':'int' lvalue Var 0x9ed5320 '__off' 'streamsize':'int')
            (IntegerLiteral 0x9ed5530 <col:11> 'int' 1))
          (BinaryOperator 0x9ed55f0 <line:1059:3, col:20> '<dependent type>' '='
            (ArraySubscriptExpr 0x9ed5590 <col:3, col:10> '<dependent type>' lvalue
              (DeclRefExpr 0x9ed5560 <col:3> '_CharT *' lvalue Var 0x9ed51b0 '__ws2' '_CharT *')
              (IntegerLiteral 0x9ed5578 <col:9> 'int' 0))
            (ArraySubscriptExpr 0x9ed55d8 <col:14, col:20> '<dependent type>' lvalue
              (DeclRefExpr 0x9ed55a4 <col:14> '_CharT *' lvalue Var 0x9ed4650 '__ws' '_CharT *')
              (IntegerLiteral 0x9ed55c0 <col:19> 'int' 0)))
          (CompoundAssignOperator 0x9ed5638 <line:1060:3, col:12> 'int' lvalue '-=' ComputeLHSTy='int' ComputeResultTy='int'
            (DeclRefExpr 0x9ed5608 <col:3> 'int' lvalue Var 0x9ed3b30 '__len' 'int')
            (IntegerLiteral 0x9ed5620 <col:12> 'int' 1)))
        <<<NULL>>>)
      (CallExpr 0x9ed5928 <line:1063:6, line:1065:26> '<dependent type>'
        (MemberExpr 0x9ed56a8 <line:1063:6> '<bound member function type>' ->_M_group_float 0x9ed2670
          (CXXThisExpr 0x9ed5698 <col:6> 'const num_put<_CharT, _OutIter> *' this))
        (CXXDependentScopeMemberExpr 0x9ed56e0 <col:21, col:27> '<dependent type>' lvalue
          (DeclRefExpr 0x9ed56c8 <col:21> 'const __cache_type *' lvalue Var 0x9ed3730 '__lc' 'const __cache_type *'))
        (CXXDependentScopeMemberExpr 0x9ed5730 <col:40, col:46> '<dependent type>' lvalue
          (DeclRefExpr 0x9ed5714 <col:40> 'const __cache_type *' lvalue Var 0x9ed3730 '__lc' 'const __cache_type *'))
        (CXXDependentScopeMemberExpr 0x9ed5780 <line:1064:7, col:13> '<dependent type>' lvalue
          (DeclRefExpr 0x9ed5764 <col:7> 'const __cache_type *' lvalue Var 0x9ed3730 '__lc' 'const __cache_type *'))
        (DeclRefExpr 0x9ed57b4 <col:31> '_CharT *' lvalue Var 0x9ed48a0 '__wp' '_CharT *')
        (CXXOperatorCallExpr 0x9ed5848 <col:37, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0x9ed5800 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d86680 0x9d87280 0x9d5d090 0x9d5d890)
          (DeclRefExpr 0x9ed57cc <col:37> '_CharT *' lvalue Var 0x9ed51b0 '__ws2' '_CharT *')
          (DeclRefExpr 0x9ed57e4 <col:45> 'streamsize':'int' lvalue Var 0x9ed5320 '__off' 'streamsize':'int'))
        (CXXOperatorCallExpr 0x9ed58e8 <line:1065:7, col:14> '<dependent type>'
          (UnresolvedLookupExpr 0x9ed58a0 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d86680 0x9d87280 0x9d5d090 0x9d5d890)
          (DeclRefExpr 0x9ed586c <col:7> '_CharT *' lvalue Var 0x9ed4650 '__ws' '_CharT *')
          (DeclRefExpr 0x9ed5884 <col:14> 'streamsize':'int' lvalue Var 0x9ed5320 '__off' 'streamsize':'int'))
        (DeclRefExpr 0x9ed590c <col:21> 'int' lvalue Var 0x9ed3b30 '__len' 'int'))
      (CompoundAssignOperator 0x9ed59a0 <line:1066:6, col:15> 'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
        (DeclRefExpr 0x9ed5960 <col:6> 'int' lvalue Var 0x9ed3b30 '__len' 'int')
        (ImplicitCastExpr 0x9ed5990 <col:15> 'streamsize':'int' <LValueToRValue>
          (DeclRefExpr 0x9ed5978 <col:15> 'streamsize':'int' lvalue Var 0x9ed5320 '__off' 'streamsize':'int')))
      (BinaryOperator 0x9ed59f0 <line:1068:6, col:13> '<dependent type>' '='
        (DeclRefExpr 0x9ed59c0 <col:6> '_CharT *' lvalue Var 0x9ed4650 '__ws' '_CharT *')
        (DeclRefExpr 0x9ed59d8 <col:13> '_CharT *' lvalue Var 0x9ed51b0 '__ws2' '_CharT *')))
    <<<NULL>>>)
  (DeclStmt 0x9ed5b40 <line:1072:2, col:37>
    0x9ed5a60 "const streamsize __w =
      (CXXMemberCallExpr 0x9ed5b10 <col:25, col:36> 'streamsize':'int'
        (MemberExpr 0x9ed5aec <col:25, col:30> '<bound member function type>' .width 0x9e15c10
          (ImplicitCastExpr 0x9ed5b30 <col:25> 'const class std::ios_base' lvalue <NoOp>
            (DeclRefExpr 0x9ed5a94 <col:25> 'class std::ios_base' lvalue ParmVar 0x9ed31c0 '__io' 'class std::ios_base &'))))")
  (IfStmt 0x9ed5e78 <line:1073:2, line:1079:4>
    <<<NULL>>>
    (BinaryOperator 0x9ed5bc0 <line:1073:6, col:41> '_Bool' '>'
      (ImplicitCastExpr 0x9ed5bb0 <col:6> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0x9ed5b50 <col:6> 'const streamsize':'const int' lvalue Var 0x9ed5a60 '__w' 'const streamsize':'const int'))
      (CXXStaticCastExpr 0x9ed5b98 <col:12, col:41> 'streamsize':'int' static_cast<streamsize> <NoOp>
        (ImplicitCastExpr 0x9ed5b88 <col:36> 'int' <LValueToRValue>
          (DeclRefExpr 0x9ed5b68 <col:36> 'int' lvalue Var 0x9ed3b30 '__len' 'int'))))
    (CompoundStmt 0x9ed5e58 <line:1074:4, line:1079:4>
      (DeclStmt 0x9ed5d08 <line:1075:6, line:1076:18>
        0x9ed5bf0 "_CharT *__ws3 =
          (CXXStaticCastExpr 0x9ed5cf0 <line:1075:22, line:1076:17> '_CharT *' static_cast<_CharT *> <Dependent>
            (CallExpr 0x9ed5cc0 <line:1075:43, line:1076:16> 'void *'
              (ImplicitCastExpr 0x9ed5cb0 <line:1075:43> 'void *(*)(unsigned int)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9ed5c24 <col:43> 'void *(unsigned int)' lvalue Function 0x9ecd810 '__builtin_alloca' 'void *(unsigned int)'))
              (BinaryOperator 0x9ed5c98 <col:60, line:1076:13> 'unsigned int' '*'
                (UnaryExprOrTypeTraitExpr 0x9ed5c48 <line:1075:60, col:73> 'unsigned int' sizeof '_CharT')
                (ImplicitCastExpr 0x9ed5c88 <line:1076:13> 'unsigned int' <IntegralCast>
                  (ImplicitCastExpr 0x9ed5c78 <col:13> 'streamsize':'int' <LValueToRValue>
                    (DeclRefExpr 0x9ed5c60 <col:13> 'const streamsize':'const int' lvalue Var 0x9ed5a60 '__w' 'const streamsize':'const int'))))))")
      (CallExpr 0x9ed5dd8 <line:1077:6, col:50> '<dependent type>'
        (MemberExpr 0x9ed5d28 <col:6> '<bound member function type>' ->_M_pad 0x9ec8ff0
          (CXXThisExpr 0x9ed5d18 <col:6> 'const num_put<_CharT, _OutIter> *' this))
        (DeclRefExpr 0x9ed5d48 <col:13> '_CharT' lvalue ParmVar 0x9ed3200 '__fill' '_CharT')
        (DeclRefExpr 0x9ed5d60 <col:21> 'const streamsize':'const int' lvalue Var 0x9ed5a60 '__w' 'const streamsize':'const int')
        (DeclRefExpr 0x9ed5d78 <col:26> 'class std::ios_base' lvalue ParmVar 0x9ed31c0 '__io' 'class std::ios_base &')
        (DeclRefExpr 0x9ed5d90 <col:32> '_CharT *' lvalue Var 0x9ed5bf0 '__ws3' '_CharT *')
        (DeclRefExpr 0x9ed5da8 <col:39> '_CharT *' lvalue Var 0x9ed4650 '__ws' '_CharT *')
        (DeclRefExpr 0x9ed5dc0 <col:45> 'int' lvalue Var 0x9ed3b30 '__len' 'int'))
      (BinaryOperator 0x9ed5e40 <line:1078:6, col:13> '<dependent type>' '='
        (DeclRefExpr 0x9ed5e0c <col:6> '_CharT *' lvalue Var 0x9ed4650 '__ws' '_CharT *')
        (DeclRefExpr 0x9ed5e24 <col:13> '_CharT *' lvalue Var 0x9ed5bf0 '__ws3' '_CharT *')))
    <<<NULL>>>)
  (CXXMemberCallExpr 0x9ed5f28 <line:1080:2, col:14> 'streamsize':'int'
    (MemberExpr 0x9ed5f08 <col:2, col:7> '<bound member function type>' .width 0x9e15cd0
      (DeclRefExpr 0x9ed5e94 <col:2> 'class std::ios_base' lvalue ParmVar 0x9ed31c0 '__io' 'class std::ios_base &'))
    (IntegerLiteral 0x9ed5ef0 <col:13> 'int' 0))
  (ReturnStmt 0x9ed6008 <line:1084:2, col:38>
    (CallExpr 0x9ed5fe0 <col:9, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0x9ed5f60 <col:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e7d870 0x9e7dc30)
      (DeclRefExpr 0x9ed5f98 <col:22> '_OutIter' lvalue ParmVar 0x9ed3170 '__s' '_OutIter')
      (DeclRefExpr 0x9ed5fb0 <col:27> '_CharT *' lvalue Var 0x9ed4650 '__ws' '_CharT *')
      (DeclRefExpr 0x9ed5fc8 <col:33> 'int' lvalue Var 0x9ed3b30 '__len' 'int'))))

;
    _OutIter do_put(iter_type __s, std::ios_base &__io, char_type __fill, bool __v) const (CompoundStmt 0x9ed7d40 </usr/include/c++/4.6/bits/locale_facets.tcc:1091:5, line:1137:5>
  (DeclStmt 0x9ed6650 <line:1092:7, col:54>
    0x9ed6570 "const ios_base::fmtflags __flags =
      (CXXMemberCallExpr 0x9ed6620 <col:42, col:53> 'fmtflags':'enum std::_Ios_Fmtflags'
        (MemberExpr 0x9ed65fc <col:42, col:47> '<bound member function type>' .flags 0x9e133f0
          (ImplicitCastExpr 0x9ed6640 <col:42> 'const class std::ios_base' lvalue <NoOp>
            (DeclRefExpr 0x9ed65a4 <col:42> 'class std::ios_base' lvalue ParmVar 0x9ed6380 '__io' 'class std::ios_base &'))))")
  (IfStmt 0x9ed7cf8 <line:1093:7, line:1135:2>
    <<<NULL>>>
    (BinaryOperator 0x9ed6768 <line:1093:11, col:46> '_Bool' '=='
      (ImplicitCastExpr 0x9ed6758 <col:11, col:41> 'int' <IntegralCast>
        (ParenExpr 0x9ed6728 <col:11, col:41> 'enum std::_Ios_Fmtflags'
          (CXXOperatorCallExpr 0x9ed6700 <col:12, col:32> 'enum std::_Ios_Fmtflags'
            (ImplicitCastExpr 0x9ed66f0 <col:20, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9ed66d8 <col:20, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9e0a5b0 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
            (ImplicitCastExpr 0x9ed66b8 <col:12> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0x9ed6660 <col:12> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9ed6570 '__flags' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags'))
            (ImplicitCastExpr 0x9ed66c8 <col:22, col:32> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0x9ed6694 <col:22, col:32> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9e10c80 'boolalpha' 'const fmtflags':'const enum std::_Ios_Fmtflags')))))
      (IntegerLiteral 0x9ed6740 <col:46> 'int' 0))
    (CompoundStmt 0x9ed6920 <line:1094:9, line:1097:9>
      (DeclStmt 0x9ed6800 <line:1095:11, col:31>
        0x9ed6790 "const long __l =
          (ImplicitCastExpr 0x9ed67f0 <col:28> 'const long' <IntegralCast>
            (ImplicitCastExpr 0x9ed67e0 <col:28> '_Bool' <LValueToRValue>
              (DeclRefExpr 0x9ed67c4 <col:28> '_Bool' lvalue ParmVar 0x9ed6400 '__v' '_Bool')))")
      (BinaryOperator 0x9ed6908 <line:1096:11, col:53> '<dependent type>' '='
        (DeclRefExpr 0x9ed6810 <col:11> 'iter_type':'_OutIter' lvalue ParmVar 0x9ed6330 '__s' 'iter_type':'_OutIter')
        (CallExpr 0x9ed68d8 <col:17, col:53> '<dependent type>'
          (UnresolvedMemberExpr 0x9ed6838 <col:17> '<bound member function type>' lvalue)
          (DeclRefExpr 0x9ed6874 <col:31> 'iter_type':'_OutIter' lvalue ParmVar 0x9ed6330 '__s' 'iter_type':'_OutIter')
          (DeclRefExpr 0x9ed688c <col:36> 'class std::ios_base' lvalue ParmVar 0x9ed6380 '__io' 'class std::ios_base &')
          (DeclRefExpr 0x9ed68a4 <col:42> 'char_type':'_CharT' lvalue ParmVar 0x9ed63c0 '__fill' 'char_type':'_CharT')
          (DeclRefExpr 0x9ed68bc <col:50> 'const long' lvalue Var 0x9ed6790 '__l' 'const long'))))
    (CompoundStmt 0x9ed7cc0 <line:1099:9, line:1135:2>
      (DeclStmt 0x9ed6a10 <line:1100:4, col:62>
        0x9ed69e0 "typedef __numpunct_cache<_CharT> __cache_type")
      (DeclStmt 0x9ed6b18 <line:1101:4, col:34>
        0x9ed6ae0 "__use_cache<__cache_type> __uc")
      (DeclStmt 0x9ed6be0 <line:1102:4, col:42>
        0x9ed6b40 "const std::locale &__loc =
          (CXXMemberCallExpr 0x9ed6bb0 <col:26, col:41> 'const class std::locale' lvalue
            (MemberExpr 0x9ed6b8c <col:26, col:31> '<bound member function type>' ._M_getloc 0x9e15ff0
              (ImplicitCastExpr 0x9ed6bd0 <col:26> 'const class std::ios_base' lvalue <NoOp>
                (DeclRefExpr 0x9ed6b74 <col:26> 'class std::ios_base' lvalue ParmVar 0x9ed6380 '__io' 'class std::ios_base &'))))")
      (DeclStmt 0x9ed6ca8 <line:1103:4, col:42>
        0x9ed6c20 "const __cache_type *__lc =
          (CallExpr 0x9ed6c88 <col:31, col:41> '<dependent type>'
            (DeclRefExpr 0x9ed6c54 <col:31> '__use_cache<__cache_type>' lvalue Var 0x9ed6ae0 '__uc' '__use_cache<__cache_type>')
            (DeclRefExpr 0x9ed6c6c <col:36> 'const class std::locale' lvalue Var 0x9ed6b40 '__loc' 'const class std::locale &'))")
      (DeclStmt 0x9ed6e10 <line:1105:4, line:1106:51>
        0x9ed6cf0 "const _CharT *__name =
          (ConditionalOperator 0x9ed6df0 <line:1105:27, line:1106:39> '<dependent type>'
            (ImplicitCastExpr 0x9ed6de0 <line:1105:27> '_Bool' <LValueToRValue>
              (DeclRefExpr 0x9ed6d24 <col:27> '_Bool' lvalue ParmVar 0x9ed6400 '__v' '_Bool'))
            (CXXDependentScopeMemberExpr 0x9ed6d58 <col:33, col:39> '<dependent type>' lvalue
              (DeclRefExpr 0x9ed6d3c <col:33> 'const __cache_type *' lvalue Var 0x9ed6c20 '__lc' 'const __cache_type *'))
            (CXXDependentScopeMemberExpr 0x9ed6da8 <line:1106:33, col:39> '<dependent type>' lvalue
              (DeclRefExpr 0x9ed6d8c <col:33> 'const __cache_type *' lvalue Var 0x9ed6c20 '__lc' 'const __cache_type *')))")
      (DeclStmt 0x9ed6f50 <line:1107:4, line:1108:45>
        0x9ed6e30 "int __len =
          (ConditionalOperator 0x9ed6f30 <line:1107:16, line:1108:28> '<dependent type>'
            (ImplicitCastExpr 0x9ed6f20 <line:1107:16> '_Bool' <LValueToRValue>
              (DeclRefExpr 0x9ed6e64 <col:16> '_Bool' lvalue ParmVar 0x9ed6400 '__v' '_Bool'))
            (CXXDependentScopeMemberExpr 0x9ed6e98 <col:22, col:28> '<dependent type>' lvalue
              (DeclRefExpr 0x9ed6e7c <col:22> 'const __cache_type *' lvalue Var 0x9ed6c20 '__lc' 'const __cache_type *'))
            (CXXDependentScopeMemberExpr 0x9ed6ee8 <line:1108:22, col:28> '<dependent type>' lvalue
              (DeclRefExpr 0x9ed6ecc <col:22> 'const __cache_type *' lvalue Var 0x9ed6c20 '__lc' 'const __cache_type *')))")
      (DeclStmt 0x9ed7050 <line:1110:4, col:39>
        0x9ed6f70 "const streamsize __w =
          (CXXMemberCallExpr 0x9ed7020 <col:27, col:38> 'streamsize':'int'
            (MemberExpr 0x9ed6ffc <col:27, col:32> '<bound member function type>' .width 0x9e15c10
              (ImplicitCastExpr 0x9ed7040 <col:27> 'const class std::ios_base' lvalue <NoOp>
                (DeclRefExpr 0x9ed6fa4 <col:27> 'class std::ios_base' lvalue ParmVar 0x9ed6380 '__io' 'class std::ios_base &'))))")
      (IfStmt 0x9ed7b00 <line:1111:4, line:1132:6>
        <<<NULL>>>
        (BinaryOperator 0x9ed70d0 <line:1111:8, col:43> '_Bool' '>'
          (ImplicitCastExpr 0x9ed70c0 <col:8> 'streamsize':'int' <LValueToRValue>
            (DeclRefExpr 0x9ed7060 <col:8> 'const streamsize':'const int' lvalue Var 0x9ed6f70 '__w' 'const streamsize':'const int'))
          (CXXStaticCastExpr 0x9ed70a8 <col:14, col:43> 'streamsize':'int' static_cast<streamsize> <NoOp>
            (ImplicitCastExpr 0x9ed7098 <col:38> 'int' <LValueToRValue>
              (DeclRefExpr 0x9ed7078 <col:38> 'int' lvalue Var 0x9ed6e30 '__len' 'int'))))
        (CompoundStmt 0x9ed7ad8 <line:1112:6, line:1132:6>
          (DeclStmt 0x9ed7190 <line:1113:8, col:45>
            0x9ed70f0 "const streamsize __plen =
              (BinaryOperator 0x9ed7178 <col:34, col:40> 'int' '-'
                (ImplicitCastExpr 0x9ed7158 <col:34> 'streamsize':'int' <LValueToRValue>
                  (DeclRefExpr 0x9ed7124 <col:34> 'const streamsize':'const int' lvalue Var 0x9ed6f70 '__w' 'const streamsize':'const int'))
                (ImplicitCastExpr 0x9ed7168 <col:40> 'int' <LValueToRValue>
                  (DeclRefExpr 0x9ed713c <col:40> 'int' lvalue Var 0x9ed6e30 '__len' 'int')))")
          (DeclStmt 0x9ed72e8 <line:1114:8, line:1116:18>
            0x9ed71d0 "_CharT *__ps =
              (CXXStaticCastExpr 0x9ed72d0 <line:1115:5, line:1116:17> '_CharT *' static_cast<_CharT *> <Dependent>
                (CallExpr 0x9ed72a0 <line:1115:26, line:1116:16> 'void *'
                  (ImplicitCastExpr 0x9ed7290 <line:1115:26> 'void *(*)(unsigned int)' <FunctionToPointerDecay>
                    (DeclRefExpr 0x9ed7204 <col:26> 'void *(unsigned int)' lvalue Function 0x9ecd810 '__builtin_alloca' 'void *(unsigned int)'))
                  (BinaryOperator 0x9ed7278 <col:43, line:1116:10> 'unsigned int' '*'
                    (UnaryExprOrTypeTraitExpr 0x9ed7228 <line:1115:43, col:56> 'unsigned int' sizeof '_CharT')
                    (ImplicitCastExpr 0x9ed7268 <line:1116:10> 'unsigned int' <IntegralCast>
                      (ImplicitCastExpr 0x9ed7258 <col:10> 'streamsize':'int' <LValueToRValue>
                        (DeclRefExpr 0x9ed7240 <col:10> 'const streamsize':'const int' lvalue Var 0x9ed70f0 '__plen' 'const streamsize':'const int'))))))")
          (CallExpr 0x9ed7430 <line:1118:8, col:56> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9ed73b0 <col:8, col:29> '<dependent type>' lvalue)
            (DeclRefExpr 0x9ed73e4 <col:36> '_CharT *' lvalue Var 0x9ed71d0 '__ps' '_CharT *')
            (DeclRefExpr 0x9ed73fc <col:42> 'const streamsize':'const int' lvalue Var 0x9ed70f0 '__plen' 'const streamsize':'const int')
            (DeclRefExpr 0x9ed7414 <col:50> 'char_type':'_CharT' lvalue ParmVar 0x9ed63c0 '__fill' 'char_type':'_CharT'))
          (CXXMemberCallExpr 0x9ed74e8 <line:1119:8, col:20> 'streamsize':'int'
            (MemberExpr 0x9ed74c8 <col:8, col:13> '<bound member function type>' .width 0x9e15cd0
              (DeclRefExpr 0x9ed7458 <col:8> 'class std::ios_base' lvalue ParmVar 0x9ed6380 '__io' 'class std::ios_base &'))
            (IntegerLiteral 0x9ed74b0 <col:19> 'int' 0))
          (IfStmt 0x9ed7a90 <line:1121:8, line:1130:3>
            <<<NULL>>>
            (BinaryOperator 0x9ed7658 <line:1121:12, col:59> '_Bool' '=='
              (ImplicitCastExpr 0x9ed7638 <col:12, col:44> 'int' <IntegralCast>
                (ParenExpr 0x9ed75d0 <col:12, col:44> 'enum std::_Ios_Fmtflags'
                  (CXXOperatorCallExpr 0x9ed75a8 <col:13, col:33> 'enum std::_Ios_Fmtflags'
                    (ImplicitCastExpr 0x9ed7598 <col:21, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
                      (DeclRefExpr 0x9ed7580 <col:21, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9e0a5b0 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
                    (ImplicitCastExpr 0x9ed7560 <col:13> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                      (DeclRefExpr 0x9ed7508 <col:13> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9ed6570 '__flags' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags'))
                    (ImplicitCastExpr 0x9ed7570 <col:23, col:33> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                      (DeclRefExpr 0x9ed753c <col:23, col:33> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9e11220 'adjustfield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))))
              (ImplicitCastExpr 0x9ed7648 <col:49, col:59> 'int' <IntegralCast>
                (ImplicitCastExpr 0x9ed7628 <col:49, col:59> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                  (DeclRefExpr 0x9ed7604 <col:49, col:59> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9e10e60 'left' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
            (CompoundStmt 0x9ed7880 <line:1122:3, line:1125:3>
              (BinaryOperator 0x9ed7778 <line:1123:5, col:42> '<dependent type>' '='
                (DeclRefExpr 0x9ed769c <col:5> 'iter_type':'_OutIter' lvalue ParmVar 0x9ed6330 '__s' 'iter_type':'_OutIter')
                (CallExpr 0x9ed7750 <col:11, col:42> '<dependent type>'
                  (UnresolvedLookupExpr 0x9ed76d0 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e7d870 0x9e7dc30)
                  (DeclRefExpr 0x9ed7708 <col:24> 'iter_type':'_OutIter' lvalue ParmVar 0x9ed6330 '__s' 'iter_type':'_OutIter')
                  (DeclRefExpr 0x9ed7720 <col:29> 'const _CharT *' lvalue Var 0x9ed6cf0 '__name' 'const _CharT *')
                  (DeclRefExpr 0x9ed7738 <col:37> 'int' lvalue Var 0x9ed6e30 '__len' 'int')))
              (BinaryOperator 0x9ed7868 <line:1124:5, col:41> '<dependent type>' '='
                (DeclRefExpr 0x9ed7790 <col:5> 'iter_type':'_OutIter' lvalue ParmVar 0x9ed6330 '__s' 'iter_type':'_OutIter')
                (CallExpr 0x9ed7840 <col:11, col:41> '<dependent type>'
                  (UnresolvedLookupExpr 0x9ed77c0 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e7d870 0x9e7dc30)
                  (DeclRefExpr 0x9ed77f8 <col:24> 'iter_type':'_OutIter' lvalue ParmVar 0x9ed6330 '__s' 'iter_type':'_OutIter')
                  (DeclRefExpr 0x9ed7810 <col:29> '_CharT *' lvalue Var 0x9ed71d0 '__ps' '_CharT *')
                  (DeclRefExpr 0x9ed7828 <col:35> 'const streamsize':'const int' lvalue Var 0x9ed70f0 '__plen' 'const streamsize':'const int'))))
            (CompoundStmt 0x9ed7a78 <line:1127:3, line:1130:3>
              (BinaryOperator 0x9ed7970 <line:1128:5, col:41> '<dependent type>' '='
                (DeclRefExpr 0x9ed7898 <col:5> 'iter_type':'_OutIter' lvalue ParmVar 0x9ed6330 '__s' 'iter_type':'_OutIter')
                (CallExpr 0x9ed7948 <col:11, col:41> '<dependent type>'
                  (UnresolvedLookupExpr 0x9ed78c8 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e7d870 0x9e7dc30)
                  (DeclRefExpr 0x9ed7900 <col:24> 'iter_type':'_OutIter' lvalue ParmVar 0x9ed6330 '__s' 'iter_type':'_OutIter')
                  (DeclRefExpr 0x9ed7918 <col:29> '_CharT *' lvalue Var 0x9ed71d0 '__ps' '_CharT *')
                  (DeclRefExpr 0x9ed7930 <col:35> 'const streamsize':'const int' lvalue Var 0x9ed70f0 '__plen' 'const streamsize':'const int')))
              (BinaryOperator 0x9ed7a60 <line:1129:5, col:42> '<dependent type>' '='
                (DeclRefExpr 0x9ed7988 <col:5> 'iter_type':'_OutIter' lvalue ParmVar 0x9ed6330 '__s' 'iter_type':'_OutIter')
                (CallExpr 0x9ed7a38 <col:11, col:42> '<dependent type>'
                  (UnresolvedLookupExpr 0x9ed79b8 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e7d870 0x9e7dc30)
                  (DeclRefExpr 0x9ed79f0 <col:24> 'iter_type':'_OutIter' lvalue ParmVar 0x9ed6330 '__s' 'iter_type':'_OutIter')
                  (DeclRefExpr 0x9ed7a08 <col:29> 'const _CharT *' lvalue Var 0x9ed6cf0 '__name' 'const _CharT *')
                  (DeclRefExpr 0x9ed7a20 <col:37> 'int' lvalue Var 0x9ed6e30 '__len' 'int')))))
          (ReturnStmt 0x9ed7ac8 <line:1131:8, col:15>
            (DeclRefExpr 0x9ed7aac <col:15> 'iter_type':'_OutIter' lvalue ParmVar 0x9ed6330 '__s' 'iter_type':'_OutIter')))
        <<<NULL>>>)
      (CXXMemberCallExpr 0x9ed7bb0 <line:1133:4, col:16> 'streamsize':'int'
        (MemberExpr 0x9ed7b90 <col:4, col:9> '<bound member function type>' .width 0x9e15cd0
          (DeclRefExpr 0x9ed7b1c <col:4> 'class std::ios_base' lvalue ParmVar 0x9ed6380 '__io' 'class std::ios_base &'))
        (IntegerLiteral 0x9ed7b78 <col:15> 'int' 0))
      (BinaryOperator 0x9ed7ca8 <line:1134:4, col:41> '<dependent type>' '='
        (DeclRefExpr 0x9ed7bd0 <col:4> 'iter_type':'_OutIter' lvalue ParmVar 0x9ed6330 '__s' 'iter_type':'_OutIter')
        (CallExpr 0x9ed7c80 <col:10, col:41> '<dependent type>'
          (UnresolvedLookupExpr 0x9ed7c00 <col:10, col:15> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e7d870 0x9e7dc30)
          (DeclRefExpr 0x9ed7c38 <col:23> 'iter_type':'_OutIter' lvalue ParmVar 0x9ed6330 '__s' 'iter_type':'_OutIter')
          (DeclRefExpr 0x9ed7c50 <col:28> 'const _CharT *' lvalue Var 0x9ed6cf0 '__name' 'const _CharT *')
          (DeclRefExpr 0x9ed7c68 <col:36> 'int' lvalue Var 0x9ed6e30 '__len' 'int')))))
  (ReturnStmt 0x9ed7d30 <line:1136:7, col:14>
    (DeclRefExpr 0x9ed7d14 <col:14> 'iter_type':'_OutIter' lvalue ParmVar 0x9ed6330 '__s' 'iter_type':'_OutIter')))


    _OutIter do_put(iter_type __s, std::ios_base &__io, char_type __fill, double __v) const (CompoundStmt 0x9ed8328 </usr/include/c++/4.6/bits/locale_facets.tcc:1143:5, col:63>
  (ReturnStmt 0x9ed8318 <col:7, col:60>
    (CallExpr 0x9ed82e8 <col:14, col:60> '<dependent type>'
      (UnresolvedMemberExpr 0x9ed8230 <col:14> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9ed826c <col:30> 'iter_type':'_OutIter' lvalue ParmVar 0x9ed8000 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0x9ed8284 <col:35> 'class std::ios_base' lvalue ParmVar 0x9ed8050 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9ed829c <col:41> 'char_type':'_CharT' lvalue ParmVar 0x9ed8090 '__fill' 'char_type':'_CharT')
      (CXXScalarValueInitExpr 0x9ed82c0 <col:49, col:54> 'char')
      (DeclRefExpr 0x9ed82d0 <col:57> 'double' lvalue ParmVar 0x9ed80e0 '__v' 'double'))))


    _OutIter do_put(iter_type __s, std::ios_base &__io, char_type __fill, long double __v) const (CompoundStmt 0x9ed8908 </usr/include/c++/4.6/bits/locale_facets.tcc:1158:5, col:60>
  (ReturnStmt 0x9ed88f8 <col:7, col:57>
    (CallExpr 0x9ed88c8 <col:14, col:57> '<dependent type>'
      (UnresolvedMemberExpr 0x9ed8810 <col:14> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9ed884c <col:30> 'iter_type':'_OutIter' lvalue ParmVar 0x9ed85e0 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0x9ed8864 <col:35> 'class std::ios_base' lvalue ParmVar 0x9ed8630 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9ed887c <col:41> 'char_type':'_CharT' lvalue ParmVar 0x9ed8670 '__fill' 'char_type':'_CharT')
      (CharacterLiteral 0x9ed8898 <col:49> 'char'76)
      (DeclRefExpr 0x9ed88ac <col:54> 'long double' lvalue ParmVar 0x9ed86c0 '__v' 'long double'))))


    _OutIter do_put(iter_type __s, std::ios_base &__io, char_type __fill, const void *__v) const (CompoundStmt 0x9ed9798 </usr/include/c++/4.6/bits/locale_facets.tcc:1165:5, line:1179:5>
  (DeclStmt 0x9ed8ef0 <line:1166:7, col:54>
    0x9ed8e10 "const ios_base::fmtflags __flags =
      (CXXMemberCallExpr 0x9ed8ec0 <col:42, col:53> 'fmtflags':'enum std::_Ios_Fmtflags'
        (MemberExpr 0x9ed8e9c <col:42, col:47> '<bound member function type>' .flags 0x9e133f0
          (ImplicitCastExpr 0x9ed8ee0 <col:42> 'const class std::ios_base' lvalue <NoOp>
            (DeclRefExpr 0x9ed8e44 <col:42> 'class std::ios_base' lvalue ParmVar 0x9ed8c10 '__io' 'class std::ios_base &'))))")
  (DeclStmt 0x9ed90c0 <line:1167:7, line:1168:29>
    0x9ed8f30 "const ios_base::fmtflags __fmt =
      (CXXOperatorCallExpr 0x9ed90a0 <line:1167:40, line:1168:28> 'enum std::_Ios_Fmtflags'
        (ImplicitCastExpr 0x9ed9090 <<invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9ed9078 <<invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags)' lvalue Function 0x9e0ac20 'operator~' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags)'))
        (ParenExpr 0x9ed9060 <line:1167:41, line:1168:28> 'enum std::_Ios_Fmtflags'
          (CXXOperatorCallExpr 0x9ed9038 <line:1167:42, line:1168:19> 'enum std::_Ios_Fmtflags'
            (ImplicitCastExpr 0x9ed9028 <col:7, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9ed9010 <col:7, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9e0a7e0 'operator|' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
            (ImplicitCastExpr 0x9ed8ff0 <line:1167:42, col:52> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0x9ed8f90 <col:42, col:52> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9e11280 'basefield' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
            (ImplicitCastExpr 0x9ed9000 <line:1168:9, col:19> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0x9ed8fcc <col:9, col:19> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9e111c0 'uppercase' 'const fmtflags':'const enum std::_Ios_Fmtflags')))))")
  (CXXMemberCallExpr 0x9ed9360 <line:1169:7, col:74> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x9ed933c <col:7, col:12> '<bound member function type>' .flags 0x9e134e0
      (DeclRefExpr 0x9ed90d0 <col:7> 'class std::ios_base' lvalue ParmVar 0x9ed8c10 '__io' 'class std::ios_base &'))
    (CXXOperatorCallExpr 0x9ed9318 <col:18, col:73> 'enum std::_Ios_Fmtflags'
      (ImplicitCastExpr 0x9ed9308 <col:36, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9ed92f0 <col:36, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9e0a7e0 'operator|' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
      (ParenExpr 0x9ed91c8 <col:18, col:34> 'enum std::_Ios_Fmtflags'
        (CXXOperatorCallExpr 0x9ed91a0 <col:19, col:29> 'enum std::_Ios_Fmtflags'
          (ImplicitCastExpr 0x9ed9190 <col:27, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9ed9178 <col:27, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9e0a5b0 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
          (ImplicitCastExpr 0x9ed9158 <col:19> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9ed9128 <col:19> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9ed8e10 '__flags' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags'))
          (ImplicitCastExpr 0x9ed9168 <col:29> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9ed9140 <col:29> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9ed8f30 '__fmt' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags'))))
      (ParenExpr 0x9ed92d8 <col:38, col:73> 'enum std::_Ios_Fmtflags'
        (CXXOperatorCallExpr 0x9ed92b0 <col:39, col:65> 'enum std::_Ios_Fmtflags'
          (ImplicitCastExpr 0x9ed92a0 <col:53, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9ed9288 <col:53, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9e0a7e0 'operator|' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
          (ImplicitCastExpr 0x9ed9268 <col:39, col:49> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9ed9208 <col:39, col:49> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9e10da0 'hex' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
          (ImplicitCastExpr 0x9ed9278 <col:55, col:65> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9ed9244 <col:55, col:65> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9e10fe0 'showbase' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))))
  (DeclStmt 0x9ed9550 <line:1171:7, line:1173:57>
    0x9ed9520 "typedef __gnu_cxx::__conditional_type<(sizeof(const void *) <= sizeof(unsigned long)), unsigned long, unsigned long long>::__type _UIntPtrType")
  (BinaryOperator 0x9ed9698 <line:1175:7, line:1176:41> '<dependent type>' '='
    (DeclRefExpr 0x9ed9560 <line:1175:7> 'iter_type':'_OutIter' lvalue ParmVar 0x9ed8bc0 '__s' 'iter_type':'_OutIter')
    (CallExpr 0x9ed9668 <col:13, line:1176:41> '<dependent type>'
      (UnresolvedMemberExpr 0x9ed9588 <line:1175:13> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9ed95c4 <col:27> 'iter_type':'_OutIter' lvalue ParmVar 0x9ed8bc0 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0x9ed95dc <col:32> 'class std::ios_base' lvalue ParmVar 0x9ed8c10 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9ed95f4 <col:38> 'char_type':'_CharT' lvalue ParmVar 0x9ed8c50 '__fill' 'char_type':'_CharT')
      (CXXReinterpretCastExpr 0x9ed9650 <line:1176:6, col:40> '_UIntPtrType':'unsigned long' reinterpret_cast<_UIntPtrType> <PointerToIntegral>
        (ImplicitCastExpr 0x9ed9640 <col:37> 'const void *' <LValueToRValue>
          (DeclRefExpr 0x9ed9620 <col:37> 'const void *' lvalue ParmVar 0x9ed8ca0 '__v' 'const void *')))))
  (CXXMemberCallExpr 0x9ed9740 <line:1177:7, col:25> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x9ed9720 <col:7, col:12> '<bound member function type>' .flags 0x9e134e0
      (DeclRefExpr 0x9ed96b0 <col:7> 'class std::ios_base' lvalue ParmVar 0x9ed8c10 '__io' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9ed9760 <col:18> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9ed9708 <col:18> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9ed8e10 '__flags' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9ed9788 <line:1178:7, col:14>
    (DeclRefExpr 0x9ed976c <col:14> 'iter_type':'_OutIter' lvalue ParmVar 0x9ed8bc0 '__s' 'iter_type':'_OutIter')))


    static void _S_pad(std::ios_base &__io, _CharT __fill, _CharT *__news, const _CharT *__olds, streamsize __newlen, streamsize __oldlen) (CompoundStmt 0x9edb620 </usr/include/c++/4.6/bits/locale_facets.tcc:1195:5, line:1237:5>
  (DeclStmt 0x9ed9e30 <line:1196:7, col:69>
    0x9ed9d60 "const size_t __plen =
      (CXXStaticCastExpr 0x9ed9e18 <col:29, col:68> 'size_t':'unsigned int' static_cast<size_t> <NoOp>
        (ImplicitCastExpr 0x9ed9e08 <col:49, col:60> 'size_t':'unsigned int' <IntegralCast>
          (BinaryOperator 0x9ed9de8 <col:49, col:60> 'int' '-'
            (ImplicitCastExpr 0x9ed9dc8 <col:49> 'streamsize':'int' <LValueToRValue>
              (DeclRefExpr 0x9ed9d94 <col:49> 'streamsize':'int' lvalue ParmVar 0x9ed9bd0 '__newlen' 'streamsize':'int'))
            (ImplicitCastExpr 0x9ed9dd8 <col:60> 'streamsize':'int' <LValueToRValue>
              (DeclRefExpr 0x9ed9dac <col:60> 'streamsize':'int' lvalue ParmVar 0x9ed9c10 '__oldlen' 'streamsize':'int')))))")
  (DeclStmt 0x9ed9ff0 <line:1197:7, col:79>
    0x9ed9e70 "const ios_base::fmtflags __adjust =
      (CXXOperatorCallExpr 0x9ed9fc8 <col:43, col:68> 'enum std::_Ios_Fmtflags'
        (ImplicitCastExpr 0x9ed9fb8 <col:56, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9ed9fa0 <col:56, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9e0a5b0 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
        (CXXMemberCallExpr 0x9ed9f20 <col:43, col:54> 'fmtflags':'enum std::_Ios_Fmtflags'
          (MemberExpr 0x9ed9efc <col:43, col:48> '<bound member function type>' .flags 0x9e133f0
            (ImplicitCastExpr 0x9ed9f40 <col:43> 'const class std::ios_base' lvalue <NoOp>
              (DeclRefExpr 0x9ed9ea4 <col:43> 'class std::ios_base' lvalue ParmVar 0x9ed9a70 '__io' 'class std::ios_base &'))))
        (ImplicitCastExpr 0x9ed9f90 <col:58, col:68> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
          (DeclRefExpr 0x9ed9f6c <col:58, col:68> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9e11220 'adjustfield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))")
  (IfStmt 0x9eda328 <line:1200:7, line:1205:2>
    <<<NULL>>>
    (BinaryOperator 0x9eda098 <line:1200:11, col:33> '_Bool' '=='
      (ImplicitCastExpr 0x9eda078 <col:11> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9eda058 <col:11> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
          (DeclRefExpr 0x9eda000 <col:11> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9ed9e70 '__adjust' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
      (ImplicitCastExpr 0x9eda088 <col:23, col:33> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9eda068 <col:23, col:33> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
          (DeclRefExpr 0x9eda034 <col:23, col:33> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9e10e60 'left' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
    (CompoundStmt 0x9eda308 <line:1201:2, line:1205:2>
      (CallExpr 0x9eda188 <line:1202:4, col:42> '<dependent type>'
        (DependentScopeDeclRefExpr 0x9eda118 <col:4, col:13> '<dependent type>' lvalue)
        (DeclRefExpr 0x9eda13c <col:18> '_CharT *' lvalue ParmVar 0x9ed9b20 '__news' '_CharT *')
        (DeclRefExpr 0x9eda154 <col:26> 'const _CharT *' lvalue ParmVar 0x9ed9b90 '__olds' 'const _CharT *')
        (DeclRefExpr 0x9eda16c <col:34> 'streamsize':'int' lvalue ParmVar 0x9ed9c10 '__oldlen' 'streamsize':'int'))
      (CallExpr 0x9eda2d0 <line:1203:4, col:53> '<dependent type>'
        (DependentScopeDeclRefExpr 0x9eda1d8 <col:4, col:13> '<dependent type>' lvalue)
        (CXXOperatorCallExpr 0x9eda278 <col:20, col:29> '<dependent type>'
          (UnresolvedLookupExpr 0x9eda230 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d86680 0x9d87280 0x9d5d090 0x9d5d890)
          (DeclRefExpr 0x9eda1fc <col:20> '_CharT *' lvalue ParmVar 0x9ed9b20 '__news' '_CharT *')
          (DeclRefExpr 0x9eda214 <col:29> 'streamsize':'int' lvalue ParmVar 0x9ed9c10 '__oldlen' 'streamsize':'int'))
        (DeclRefExpr 0x9eda29c <col:39> 'const size_t':'const unsigned int' lvalue Var 0x9ed9d60 '__plen' 'const size_t':'const unsigned int')
        (DeclRefExpr 0x9eda2b4 <col:47> '_CharT' lvalue ParmVar 0x9ed9ab0 '__fill' '_CharT'))
      (ReturnStmt 0x9eda2f8 <line:1204:4>))
    <<<NULL>>>)
  (DeclStmt 0x9eda3b0 <line:1207:7, col:23>
    0x9eda350 "size_t __mod =
      (ImplicitCastExpr 0x9eda3a0 <col:22> 'size_t':'unsigned int' <IntegralCast>
        (IntegerLiteral 0x9eda388 <col:22> 'int' 0))")
  (IfStmt 0x9edb310 <line:1208:7, line:1234:2>
    <<<NULL>>>
    (BinaryOperator 0x9eda458 <line:1208:11, col:33> '_Bool' '=='
      (ImplicitCastExpr 0x9eda438 <col:11> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9eda418 <col:11> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
          (DeclRefExpr 0x9eda3c0 <col:11> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9ed9e70 '__adjust' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
      (ImplicitCastExpr 0x9eda448 <col:23, col:33> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9eda428 <col:23, col:33> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
          (DeclRefExpr 0x9eda3f4 <col:23, col:33> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9e10e00 'internal' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
    (CompoundStmt 0x9edb2f0 <line:1209:2, line:1234:2>
      (DeclStmt 0x9eda550 <line:1213:11, col:49>
        0x9eda4b0 "const std::locale &__loc =
          (CXXMemberCallExpr 0x9eda520 <col:33, col:48> 'const class std::locale' lvalue
            (MemberExpr 0x9eda4fc <col:33, col:38> '<bound member function type>' ._M_getloc 0x9e15ff0
              (ImplicitCastExpr 0x9eda540 <col:33> 'const class std::ios_base' lvalue <NoOp>
                (DeclRefExpr 0x9eda4e4 <col:33> 'class std::ios_base' lvalue ParmVar 0x9ed9a70 '__io' 'class std::ios_base &'))))")
      (DeclStmt 0x9eda7b0 <line:1214:4, col:67>
        0x9eda630 "const ctype<_CharT> &__ctype =
          (CallExpr 0x9eda790 <col:35, col:66> '<dependent type>'
            (UnresolvedLookupExpr 0x9eda710 <col:35, col:59> '<dependent type>' lvalue (ADL) = '1' 0x9e01120)
            (DeclRefExpr 0x9eda778 <col:61> 'const class std::locale' lvalue Var 0x9eda4b0 '__loc' 'const class std::locale &'))")
      (IfStmt 0x9edb2d0 <line:1216:4, line:1232:6>
        <<<NULL>>>
        (BinaryOperator 0x9edaa70 <line:1216:8, line:1217:41> '<dependent type>' '||'
          (CXXOperatorCallExpr 0x9eda8f0 <line:1216:8, col:38> '<dependent type>'
            (UnresolvedLookupExpr 0x9eda890 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30 0x9d5e270 0x9d5ece0 0x9d5f520 0x9d5fa90 0x9e73300)
            (CallExpr 0x9eda828 <col:8, col:25> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9eda7d8 <col:8, col:16> '<dependent type>' lvalue
                (DeclRefExpr 0x9eda7c0 <col:8> 'const ctype<_CharT>' lvalue Var 0x9eda630 '__ctype' 'const ctype<_CharT> &'))
              (CharacterLiteral 0x9eda810 <col:22> 'char'45))
            (ArraySubscriptExpr 0x9eda878 <col:30, col:38> '<dependent type>' lvalue
              (DeclRefExpr 0x9eda848 <col:30> 'const _CharT *' lvalue ParmVar 0x9ed9b90 '__olds' 'const _CharT *')
              (IntegerLiteral 0x9eda860 <col:37> 'int' 0)))
          (CXXOperatorCallExpr 0x9edaa48 <line:1217:11, col:41> '<dependent type>'
            (UnresolvedLookupExpr 0x9eda9e8 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30 0x9d5e270 0x9d5ece0 0x9d5f520 0x9d5fa90 0x9e73300)
            (CallExpr 0x9eda980 <col:11, col:28> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9eda930 <col:11, col:19> '<dependent type>' lvalue
                (DeclRefExpr 0x9eda914 <col:11> 'const ctype<_CharT>' lvalue Var 0x9eda630 '__ctype' 'const ctype<_CharT> &'))
              (CharacterLiteral 0x9eda968 <col:25> 'char'43))
            (ArraySubscriptExpr 0x9eda9d0 <col:33, col:41> '<dependent type>' lvalue
              (DeclRefExpr 0x9eda9a0 <col:33> 'const _CharT *' lvalue ParmVar 0x9ed9b90 '__olds' 'const _CharT *')
              (IntegerLiteral 0x9eda9b8 <col:40> 'int' 0))))
        (CompoundStmt 0x9edabb8 <line:1218:6, line:1222:6>
          (BinaryOperator 0x9edab18 <line:1219:8, col:28> '<dependent type>' '='
            (ArraySubscriptExpr 0x9edaab8 <col:8, col:16> '<dependent type>' lvalue
              (DeclRefExpr 0x9edaa88 <col:8> '_CharT *' lvalue ParmVar 0x9ed9b20 '__news' '_CharT *')
              (IntegerLiteral 0x9edaaa0 <col:15> 'int' 0))
            (ArraySubscriptExpr 0x9edab00 <col:20, col:28> '<dependent type>' lvalue
              (DeclRefExpr 0x9edaacc <col:20> 'const _CharT *' lvalue ParmVar 0x9ed9b90 '__olds' 'const _CharT *')
              (IntegerLiteral 0x9edaae8 <col:27> 'int' 0)))
          (BinaryOperator 0x9edab70 <line:1220:8, col:16> 'size_t':'unsigned int' lvalue '='
            (DeclRefExpr 0x9edab30 <col:8> 'size_t':'unsigned int' lvalue Var 0x9eda350 '__mod' 'size_t':'unsigned int')
            (ImplicitCastExpr 0x9edab60 <col:16> 'size_t':'unsigned int' <IntegralCast>
              (IntegerLiteral 0x9edab48 <col:16> 'int' 1)))
          (UnaryOperator 0x9edaba0 <line:1221:8, col:10> '<dependent type>' prefix '++'
            (DeclRefExpr 0x9edab88 <col:10> '_CharT *' lvalue ParmVar 0x9ed9b20 '__news' '_CharT *')))
        (IfStmt 0x9edb2b0 <line:1223:9, line:1232:6>
          <<<NULL>>>
          (BinaryOperator 0x9edb080 <line:1223:13, line:1226:44> '<dependent type>' '&&'
            (BinaryOperator 0x9edad88 <line:1223:13, line:1224:20> '<dependent type>' '&&'
              (CXXOperatorCallExpr 0x9edad08 <line:1223:13, col:43> '<dependent type>'
                (UnresolvedLookupExpr 0x9edaca8 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30 0x9d5e270 0x9d5ece0 0x9d5f520 0x9d5fa90 0x9e73300)
                (CallExpr 0x9edac40 <col:13, col:30> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9edabf0 <col:13, col:21> '<dependent type>' lvalue
                    (DeclRefExpr 0x9edabd4 <col:13> 'const ctype<_CharT>' lvalue Var 0x9eda630 '__ctype' 'const ctype<_CharT> &'))
                  (CharacterLiteral 0x9edac28 <col:27> 'char'48))
                (ArraySubscriptExpr 0x9edac90 <col:35, col:43> '<dependent type>' lvalue
                  (DeclRefExpr 0x9edac60 <col:35> 'const _CharT *' lvalue ParmVar 0x9ed9b90 '__olds' 'const _CharT *')
                  (IntegerLiteral 0x9edac78 <col:42> 'int' 0)))
              (BinaryOperator 0x9edad70 <line:1224:9, col:20> '_Bool' '>'
                (ImplicitCastExpr 0x9edad60 <col:9> 'streamsize':'int' <LValueToRValue>
                  (DeclRefExpr 0x9edad2c <col:9> 'streamsize':'int' lvalue ParmVar 0x9ed9c10 '__oldlen' 'streamsize':'int'))
                (IntegerLiteral 0x9edad48 <col:20> 'int' 1)))
            (ParenExpr 0x9edb068 <line:1225:9, line:1226:44> '<dependent type>'
              (BinaryOperator 0x9edb050 <line:1225:10, line:1226:43> '<dependent type>' '||'
                (CXXOperatorCallExpr 0x9edaed0 <line:1225:10, col:40> '<dependent type>'
                  (UnresolvedLookupExpr 0x9edae70 <col:29, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30 0x9d5e270 0x9d5ece0 0x9d5f520 0x9d5fa90 0x9e73300)
                  (CallExpr 0x9edae08 <col:10, col:27> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9edadb8 <col:10, col:18> '<dependent type>' lvalue
                      (DeclRefExpr 0x9edada0 <col:10> 'const ctype<_CharT>' lvalue Var 0x9eda630 '__ctype' 'const ctype<_CharT> &'))
                    (CharacterLiteral 0x9edadf0 <col:24> 'char'120))
                  (ArraySubscriptExpr 0x9edae58 <col:32, col:40> '<dependent type>' lvalue
                    (DeclRefExpr 0x9edae28 <col:32> 'const _CharT *' lvalue ParmVar 0x9ed9b90 '__olds' 'const _CharT *')
                    (IntegerLiteral 0x9edae40 <col:39> 'int' 1)))
                (CXXOperatorCallExpr 0x9edb028 <line:1226:13, col:43> '<dependent type>'
                  (UnresolvedLookupExpr 0x9edafc8 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30 0x9d5e270 0x9d5ece0 0x9d5f520 0x9d5fa90 0x9e73300)
                  (CallExpr 0x9edaf60 <col:13, col:30> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9edaf10 <col:13, col:21> '<dependent type>' lvalue
                      (DeclRefExpr 0x9edaef4 <col:13> 'const ctype<_CharT>' lvalue Var 0x9eda630 '__ctype' 'const ctype<_CharT> &'))
                    (CharacterLiteral 0x9edaf48 <col:27> 'char'88))
                  (ArraySubscriptExpr 0x9edafb0 <col:35, col:43> '<dependent type>' lvalue
                    (DeclRefExpr 0x9edaf80 <col:35> 'const _CharT *' lvalue ParmVar 0x9ed9b90 '__olds' 'const _CharT *')
                    (IntegerLiteral 0x9edaf98 <col:42> 'int' 1))))))
          (CompoundStmt 0x9edb290 <line:1227:6, line:1232:6>
            (BinaryOperator 0x9edb128 <line:1228:8, col:28> '<dependent type>' '='
              (ArraySubscriptExpr 0x9edb0c8 <col:8, col:16> '<dependent type>' lvalue
                (DeclRefExpr 0x9edb098 <col:8> '_CharT *' lvalue ParmVar 0x9ed9b20 '__news' '_CharT *')
                (IntegerLiteral 0x9edb0b0 <col:15> 'int' 0))
              (ArraySubscriptExpr 0x9edb110 <col:20, col:28> '<dependent type>' lvalue
                (DeclRefExpr 0x9edb0dc <col:20> 'const _CharT *' lvalue ParmVar 0x9ed9b90 '__olds' 'const _CharT *')
                (IntegerLiteral 0x9edb0f8 <col:27> 'int' 0)))
            (BinaryOperator 0x9edb1d0 <line:1229:8, col:28> '<dependent type>' '='
              (ArraySubscriptExpr 0x9edb170 <col:8, col:16> '<dependent type>' lvalue
                (DeclRefExpr 0x9edb140 <col:8> '_CharT *' lvalue ParmVar 0x9ed9b20 '__news' '_CharT *')
                (IntegerLiteral 0x9edb158 <col:15> 'int' 1))
              (ArraySubscriptExpr 0x9edb1b8 <col:20, col:28> '<dependent type>' lvalue
                (DeclRefExpr 0x9edb184 <col:20> 'const _CharT *' lvalue ParmVar 0x9ed9b90 '__olds' 'const _CharT *')
                (IntegerLiteral 0x9edb1a0 <col:27> 'int' 1)))
            (BinaryOperator 0x9edb228 <line:1230:8, col:16> 'size_t':'unsigned int' lvalue '='
              (DeclRefExpr 0x9edb1e8 <col:8> 'size_t':'unsigned int' lvalue Var 0x9eda350 '__mod' 'size_t':'unsigned int')
              (ImplicitCastExpr 0x9edb218 <col:16> 'size_t':'unsigned int' <IntegralCast>
                (IntegerLiteral 0x9edb200 <col:16> 'int' 2)))
            (CompoundAssignOperator 0x9edb270 <line:1231:8, col:18> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
              (DeclRefExpr 0x9edb240 <col:8> '_CharT *' lvalue ParmVar 0x9ed9b20 '__news' '_CharT *')
              (IntegerLiteral 0x9edb258 <col:18> 'int' 2)))
          <<<NULL>>>)))
    <<<NULL>>>)
  (CallExpr 0x9edb3c8 <line:1235:7, col:45> '<dependent type>'
    (DependentScopeDeclRefExpr 0x9edb358 <col:7, col:16> '<dependent type>' lvalue)
    (DeclRefExpr 0x9edb37c <col:23> '_CharT *' lvalue ParmVar 0x9ed9b20 '__news' '_CharT *')
    (DeclRefExpr 0x9edb394 <col:31> 'const size_t':'const unsigned int' lvalue Var 0x9ed9d60 '__plen' 'const size_t':'const unsigned int')
    (DeclRefExpr 0x9edb3ac <col:39> '_CharT' lvalue ParmVar 0x9ed9ab0 '__fill' '_CharT'))
  (CallExpr 0x9edb5f8 <line:1236:7, col:70> '<dependent type>'
    (DependentScopeDeclRefExpr 0x9edb418 <col:7, col:16> '<dependent type>' lvalue)
    (CXXOperatorCallExpr 0x9edb4b8 <col:21, col:30> '<dependent type>'
      (UnresolvedLookupExpr 0x9edb470 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d86680 0x9d87280 0x9d5d090 0x9d5d890)
      (DeclRefExpr 0x9edb43c <col:21> '_CharT *' lvalue ParmVar 0x9ed9b20 '__news' '_CharT *')
      (DeclRefExpr 0x9edb454 <col:30> 'const size_t':'const unsigned int' lvalue Var 0x9ed9d60 '__plen' 'const size_t':'const unsigned int'))
    (CXXOperatorCallExpr 0x9edb558 <col:38, col:47> '<dependent type>'
      (UnresolvedLookupExpr 0x9edb510 <col:45, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d86680 0x9d87280 0x9d5d090 0x9d5d890)
      (DeclRefExpr 0x9edb4dc <col:38> 'const _CharT *' lvalue ParmVar 0x9ed9b90 '__olds' 'const _CharT *')
      (DeclRefExpr 0x9edb4f4 <col:47> 'size_t':'unsigned int' lvalue Var 0x9eda350 '__mod' 'size_t':'unsigned int'))
    (BinaryOperator 0x9edb5e0 <col:54, col:65> 'unsigned int' '-'
      (ImplicitCastExpr 0x9edb5d0 <col:54> 'unsigned int' <IntegralCast>
        (ImplicitCastExpr 0x9edb5b0 <col:54> 'streamsize':'int' <LValueToRValue>
          (DeclRefExpr 0x9edb57c <col:54> 'streamsize':'int' lvalue ParmVar 0x9ed9c10 '__oldlen' 'streamsize':'int')))
      (ImplicitCastExpr 0x9edb5c0 <col:65> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9edb594 <col:65> 'size_t':'unsigned int' lvalue Var 0x9eda350 '__mod' 'size_t':'unsigned int')))))


    template <typename _CharT> _CharT *__add_grouping(_CharT *__s, _CharT __sep, const char *__gbeg, size_t __gsize, const _CharT *__first, const _CharT *__last) (CompoundStmt 0x9edc940 </usr/include/c++/4.6/bits/locale_facets.tcc:1244:5, line:1274:5>
  (DeclStmt 0x9edba40 <line:1245:7, col:23>
    0x9edb9e0 "size_t __idx =
      (ImplicitCastExpr 0x9edba30 <col:22> 'size_t':'unsigned int' <IntegralCast>
        (IntegerLiteral 0x9edba18 <col:22> 'int' 0))")
  (DeclStmt 0x9edbac0 <line:1246:7, col:23>
    0x9edba60 "size_t __ctr =
      (ImplicitCastExpr 0x9edbab0 <col:22> 'size_t':'unsigned int' <IntegralCast>
        (IntegerLiteral 0x9edba98 <col:22> 'int' 0))")
  (WhileStmt 0x9edc0a0 <line:1248:7, line:1254:2>
    <<<NULL>>>
    (BinaryOperator 0x9edbea8 <line:1248:14, line:1250:62> '<dependent type>' '&&'
      (BinaryOperator 0x9edbd28 <line:1248:14, line:1249:52> '<dependent type>' '&&'
        (CXXOperatorCallExpr 0x9edbc10 <line:1248:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0x9edbbc8 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bad330 0x9bc37b0 0x9bc6740 0x9d622b0 0x9d627e0 0x9d62d10)
          (CXXOperatorCallExpr 0x9edbb38 <col:14, col:23> '<dependent type>'
            (UnresolvedLookupExpr 0x9edbb00 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
            (DeclRefExpr 0x9edbad0 <col:14> 'const _CharT *' lvalue ParmVar 0x9edb870 '__last' 'const _CharT *')
            (DeclRefExpr 0x9edbae8 <col:23> 'const _CharT *' lvalue ParmVar 0x9edb820 '__first' 'const _CharT *'))
          (ArraySubscriptExpr 0x9edbbb0 <col:33, col:45> 'const char' lvalue
            (ImplicitCastExpr 0x9edbb90 <col:33> 'const char *' <LValueToRValue>
              (DeclRefExpr 0x9edbb5c <col:33> 'const char *' lvalue ParmVar 0x9edb770 '__gbeg' 'const char *'))
            (ImplicitCastExpr 0x9edbba0 <col:40> 'size_t':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0x9edbb74 <col:40> 'size_t':'unsigned int' lvalue Var 0x9edb9e0 '__idx' 'size_t':'unsigned int'))))
        (BinaryOperator 0x9edbd10 <line:1249:10, col:52> '_Bool' '>'
          (ImplicitCastExpr 0x9edbd00 <col:10, col:48> 'int' <IntegralCast>
            (CXXStaticCastExpr 0x9edbcd0 <col:10, col:48> 'signed char' static_cast<signed char> <NoOp>
              (ImplicitCastExpr 0x9edbcc0 <col:35, col:47> 'signed char' <IntegralCast>
                (ImplicitCastExpr 0x9edbcb0 <col:35, col:47> 'char' <LValueToRValue>
                  (ArraySubscriptExpr 0x9edbc88 <col:35, col:47> 'const char' lvalue
                    (ImplicitCastExpr 0x9edbc68 <col:35> 'const char *' <LValueToRValue>
                      (DeclRefExpr 0x9edbc34 <col:35> 'const char *' lvalue ParmVar 0x9edb770 '__gbeg' 'const char *'))
                    (ImplicitCastExpr 0x9edbc78 <col:42> 'size_t':'unsigned int' <LValueToRValue>
                      (DeclRefExpr 0x9edbc4c <col:42> 'size_t':'unsigned int' lvalue Var 0x9edb9e0 '__idx' 'size_t':'unsigned int')))))))
          (IntegerLiteral 0x9edbce8 <col:52> 'int' 0)))
      (BinaryOperator 0x9edbe90 <line:1250:10, col:62> '_Bool' '!='
        (ImplicitCastExpr 0x9edbe60 <col:10, col:22> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9edbe50 <col:10, col:22> 'char' <LValueToRValue>
            (ArraySubscriptExpr 0x9edbd90 <col:10, col:22> 'const char' lvalue
              (ImplicitCastExpr 0x9edbd70 <col:10> 'const char *' <LValueToRValue>
                (DeclRefExpr 0x9edbd40 <col:10> 'const char *' lvalue ParmVar 0x9edb770 '__gbeg' 'const char *'))
              (ImplicitCastExpr 0x9edbd80 <col:17> 'size_t':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0x9edbd58 <col:17> 'size_t':'unsigned int' lvalue Var 0x9edb9e0 '__idx' 'size_t':'unsigned int')))))
        (ImplicitCastExpr 0x9edbe80 <col:27, col:62> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9edbe70 <col:27, col:62> 'char':'char' <LValueToRValue>
            (DeclRefExpr 0x9edbe30 <col:27, col:62> 'const char':'const char' lvalue Var 0x9eb6ac0 '__max' 'const char':'const char')))))
    (CompoundStmt 0x9edc088 <line:1251:2, line:1254:2>
      (CompoundAssignOperator 0x9edbf40 <line:1252:4, col:26> '<dependent type>' lvalue '-=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
        (DeclRefExpr 0x9edbec0 <col:4> 'const _CharT *' lvalue ParmVar 0x9edb870 '__last' 'const _CharT *')
        (ArraySubscriptExpr 0x9edbf28 <col:14, col:26> 'const char' lvalue
          (ImplicitCastExpr 0x9edbf08 <col:14> 'const char *' <LValueToRValue>
            (DeclRefExpr 0x9edbed8 <col:14> 'const char *' lvalue ParmVar 0x9edb770 '__gbeg' 'const char *'))
          (ImplicitCastExpr 0x9edbf18 <col:21> 'size_t':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0x9edbef0 <col:21> 'size_t':'unsigned int' lvalue Var 0x9edb9e0 '__idx' 'size_t':'unsigned int'))))
      (ConditionalOperator 0x9edc068 <line:1253:4, col:38> 'size_t':'unsigned int' lvalue
        (BinaryOperator 0x9edbff0 <col:4, col:22> '_Bool' '<'
          (ImplicitCastExpr 0x9edbfe0 <col:4> 'size_t':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0x9edbf60 <col:4> 'size_t':'unsigned int' lvalue Var 0x9edb9e0 '__idx' 'size_t':'unsigned int'))
          (BinaryOperator 0x9edbfc8 <col:12, col:22> 'unsigned int' '-'
            (ImplicitCastExpr 0x9edbfa8 <col:12> 'size_t':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0x9edbf78 <col:12> 'size_t':'unsigned int' lvalue ParmVar 0x9edb7b0 '__gsize' 'size_t':'unsigned int'))
            (ImplicitCastExpr 0x9edbfb8 <col:22> 'unsigned int' <IntegralCast>
              (IntegerLiteral 0x9edbf90 <col:22> 'int' 1))))
        (UnaryOperator 0x9edc020 <col:26, col:28> 'size_t':'unsigned int' lvalue prefix '++'
          (DeclRefExpr 0x9edc008 <col:28> 'size_t':'unsigned int' lvalue Var 0x9edb9e0 '__idx' 'size_t':'unsigned int'))
        (UnaryOperator 0x9edc050 <col:36, col:38> 'size_t':'unsigned int' lvalue prefix '++'
          (DeclRefExpr 0x9edc034 <col:38> 'size_t':'unsigned int' lvalue Var 0x9edba60 '__ctr' 'size_t':'unsigned int')))))
  (WhileStmt 0x9edc240 <line:1256:7, line:1257:19>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9edc140 <line:1256:14, col:25> '<dependent type>'
      (UnresolvedLookupExpr 0x9edc0e8 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bacde0 0x9bc3130 0x9bc62c0 0x9c11360 0x9c32300 0x9c32670 0x9d60120 0x9d60630 0x9d60b40 0x9e73820)
      (DeclRefExpr 0x9edc0b4 <col:14> 'const _CharT *' lvalue ParmVar 0x9edb820 '__first' 'const _CharT *')
      (DeclRefExpr 0x9edc0cc <col:25> 'const _CharT *' lvalue ParmVar 0x9edb870 '__last' 'const _CharT *'))
    (BinaryOperator 0x9edc228 <line:1257:2, col:19> '<dependent type>' '='
      (UnaryOperator 0x9edc1b0 <col:2, col:6> '<dependent type>' prefix '*'
        (UnaryOperator 0x9edc198 <col:3, col:6> '<dependent type>' postfix '++'
          (DeclRefExpr 0x9edc164 <col:3> '_CharT *' lvalue ParmVar 0x9edb6e0 '__s' '_CharT *')))
      (UnaryOperator 0x9edc210 <col:11, col:19> '<dependent type>' prefix '*'
        (UnaryOperator 0x9edc1f8 <col:12, col:19> '<dependent type>' postfix '++'
          (DeclRefExpr 0x9edc1c4 <col:12> 'const _CharT *' lvalue ParmVar 0x9edb820 '__first' 'const _CharT *')))))
  (WhileStmt 0x9edc5a0 <line:1259:7, line:1264:2>
    <<<NULL>>>
    (ImplicitCastExpr 0x9edc288 <line:1259:14, col:19> '_Bool' <IntegralToBoolean>
      (UnaryOperator 0x9edc270 <col:14, col:19> 'size_t':'unsigned int' postfix '--'
        (DeclRefExpr 0x9edc254 <col:14> 'size_t':'unsigned int' lvalue Var 0x9edba60 '__ctr' 'size_t':'unsigned int')))
    (CompoundStmt 0x9edc588 <line:1260:2, line:1264:2>
      (BinaryOperator 0x9edc310 <line:1261:4, col:13> '<dependent type>' '='
        (UnaryOperator 0x9edc2e0 <col:4, col:8> '<dependent type>' prefix '*'
          (UnaryOperator 0x9edc2c8 <col:5, col:8> '<dependent type>' postfix '++'
            (DeclRefExpr 0x9edc294 <col:5> '_CharT *' lvalue ParmVar 0x9edb6e0 '__s' '_CharT *')))
        (DeclRefExpr 0x9edc2f4 <col:13> '_CharT' lvalue ParmVar 0x9edb720 '__sep' '_CharT'))
      (ForStmt 0x9edc560 <line:1262:4, line:1263:23>
        (DeclStmt 0x9edc3e0 <line:1262:9, col:33>
          0x9edc330 "char __i =
            (ImplicitCastExpr 0x9edc3d0 <col:20, col:32> 'char' <LValueToRValue>
              (ArraySubscriptExpr 0x9edc3b8 <col:20, col:32> 'const char' lvalue
                (ImplicitCastExpr 0x9edc398 <col:20> 'const char *' <LValueToRValue>
                  (DeclRefExpr 0x9edc364 <col:20> 'const char *' lvalue ParmVar 0x9edb770 '__gbeg' 'const char *'))
                (ImplicitCastExpr 0x9edc3a8 <col:27> 'size_t':'unsigned int' <LValueToRValue>
                  (DeclRefExpr 0x9edc37c <col:27> 'size_t':'unsigned int' lvalue Var 0x9edb9e0 '__idx' 'size_t':'unsigned int'))))")
        <<<NULL>>>
        (BinaryOperator 0x9edc440 <col:35, col:41> '_Bool' '>'
          (ImplicitCastExpr 0x9edc430 <col:35> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9edc420 <col:35> 'char' <LValueToRValue>
              (DeclRefExpr 0x9edc3f0 <col:35> 'char' lvalue Var 0x9edc330 '__i' 'char')))
          (IntegerLiteral 0x9edc408 <col:41> 'int' 0))
        (UnaryOperator 0x9edc470 <col:44, col:46> 'char' lvalue prefix '--'
          (DeclRefExpr 0x9edc458 <col:46> 'char' lvalue Var 0x9edc330 '__i' 'char'))
        (BinaryOperator 0x9edc548 <line:1263:6, col:23> '<dependent type>' '='
          (UnaryOperator 0x9edc4d0 <col:6, col:10> '<dependent type>' prefix '*'
            (UnaryOperator 0x9edc4b8 <col:7, col:10> '<dependent type>' postfix '++'
              (DeclRefExpr 0x9edc484 <col:7> '_CharT *' lvalue ParmVar 0x9edb6e0 '__s' '_CharT *')))
          (UnaryOperator 0x9edc530 <col:15, col:23> '<dependent type>' prefix '*'
            (UnaryOperator 0x9edc518 <col:16, col:23> '<dependent type>' postfix '++'
              (DeclRefExpr 0x9edc4e4 <col:16> 'const _CharT *' lvalue ParmVar 0x9edb820 '__first' 'const _CharT *')))))))
  (WhileStmt 0x9edc900 <line:1266:7, line:1271:2>
    <<<NULL>>>
    (ImplicitCastExpr 0x9edc5e8 <line:1266:14, col:19> '_Bool' <IntegralToBoolean>
      (UnaryOperator 0x9edc5d0 <col:14, col:19> 'size_t':'unsigned int' postfix '--'
        (DeclRefExpr 0x9edc5b4 <col:14> 'size_t':'unsigned int' lvalue Var 0x9edb9e0 '__idx' 'size_t':'unsigned int')))
    (CompoundStmt 0x9edc8e8 <line:1267:2, line:1271:2>
      (BinaryOperator 0x9edc670 <line:1268:4, col:13> '<dependent type>' '='
        (UnaryOperator 0x9edc640 <col:4, col:8> '<dependent type>' prefix '*'
          (UnaryOperator 0x9edc628 <col:5, col:8> '<dependent type>' postfix '++'
            (DeclRefExpr 0x9edc5f4 <col:5> '_CharT *' lvalue ParmVar 0x9edb6e0 '__s' '_CharT *')))
        (DeclRefExpr 0x9edc654 <col:13> '_CharT' lvalue ParmVar 0x9edb720 '__sep' '_CharT'))
      (ForStmt 0x9edc8c0 <line:1269:4, line:1270:23>
        (DeclStmt 0x9edc740 <line:1269:9, col:33>
          0x9edc690 "char __i =
            (ImplicitCastExpr 0x9edc730 <col:20, col:32> 'char' <LValueToRValue>
              (ArraySubscriptExpr 0x9edc718 <col:20, col:32> 'const char' lvalue
                (ImplicitCastExpr 0x9edc6f8 <col:20> 'const char *' <LValueToRValue>
                  (DeclRefExpr 0x9edc6c4 <col:20> 'const char *' lvalue ParmVar 0x9edb770 '__gbeg' 'const char *'))
                (ImplicitCastExpr 0x9edc708 <col:27> 'size_t':'unsigned int' <LValueToRValue>
                  (DeclRefExpr 0x9edc6dc <col:27> 'size_t':'unsigned int' lvalue Var 0x9edb9e0 '__idx' 'size_t':'unsigned int'))))")
        <<<NULL>>>
        (BinaryOperator 0x9edc7a0 <col:35, col:41> '_Bool' '>'
          (ImplicitCastExpr 0x9edc790 <col:35> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9edc780 <col:35> 'char' <LValueToRValue>
              (DeclRefExpr 0x9edc750 <col:35> 'char' lvalue Var 0x9edc690 '__i' 'char')))
          (IntegerLiteral 0x9edc768 <col:41> 'int' 0))
        (UnaryOperator 0x9edc7d0 <col:44, col:46> 'char' lvalue prefix '--'
          (DeclRefExpr 0x9edc7b8 <col:46> 'char' lvalue Var 0x9edc690 '__i' 'char'))
        (BinaryOperator 0x9edc8a8 <line:1270:6, col:23> '<dependent type>' '='
          (UnaryOperator 0x9edc830 <col:6, col:10> '<dependent type>' prefix '*'
            (UnaryOperator 0x9edc818 <col:7, col:10> '<dependent type>' postfix '++'
              (DeclRefExpr 0x9edc7e4 <col:7> '_CharT *' lvalue ParmVar 0x9edb6e0 '__s' '_CharT *')))
          (UnaryOperator 0x9edc890 <col:15, col:23> '<dependent type>' prefix '*'
            (UnaryOperator 0x9edc878 <col:16, col:23> '<dependent type>' postfix '++'
              (DeclRefExpr 0x9edc844 <col:16> 'const _CharT *' lvalue ParmVar 0x9edb820 '__first' 'const _CharT *')))))))
  (ReturnStmt 0x9edc930 <line:1273:7, col:14>
    (DeclRefExpr 0x9edc914 <col:14> '_CharT *' lvalue ParmVar 0x9edb6e0 '__s' '_CharT *')))

;
    class numpunct : public locale::facet {
        class numpunct;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
        typedef __numpunct_cache<char> __cache_type;
    protected:
    protected:
        __cache_type *_M_data;
    public:
    public:
        static locale::id id;
        numpunct(size_t __refs);
        numpunct(__cache_type *__cache, size_t __refs);
        numpunct(__c_locale __cloc, size_t __refs);
        char_type decimal_point() const;
        char_type thousands_sep() const;
        string grouping() const;
        string_type truename() const;
        string_type falsename() const;
    protected:
    protected:
        virtual void ~numpunct();
        virtual char_type do_decimal_point() const;
        virtual char_type do_thousands_sep() const;
        virtual string do_grouping() const;
        virtual string_type do_truename() const;
        virtual string_type do_falsename() const;
        void _M_initialize_numpunct(__c_locale __cloc);
        inline std::numpunct<char> &operator=(const std::numpunct<char> &);
    };
    class numpunct_byname : public numpunct<char> {
        class numpunct_byname;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
        numpunct_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~numpunct_byname();
        inline std::numpunct_byname<char> &operator=(const std::numpunct_byname<char> &);
    };
    class num_get : public locale::facet {
        class num_get;
    public:
    public:
        typedef char char_type;
        typedef std::istreambuf_iterator<char, std::char_traits<char> > iter_type;
        static locale::id id;
        num_get(size_t __refs);
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, bool &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, float &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, void *&__v) const;
    protected:
    protected:
        virtual void ~num_get();
        iter_type _M_extract_float(iter_type, iter_type, std::ios_base &, ios_base::iostate &, string &) const;
        template <typename _ValueT> iter_type _M_extract_int(iter_type, iter_type, std::ios_base &, ios_base::iostate &, _ValueT &) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *, size_t __len, _CharT2 __c) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<!__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *__zero, size_t __len, _CharT2 __c) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &, bool &) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, float &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, long double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, void *&) const;
        inline std::num_get<char> &operator=(const std::num_get<char> &);
    };
    class num_put : public locale::facet {
        class num_put;
    public:
    public:
        typedef char char_type;
        typedef std::ostreambuf_iterator<char, std::char_traits<char> > iter_type;
        static locale::id id;
        num_put(size_t __refs);
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, bool __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, const void *__v) const;
    protected:
    protected:
        template <typename _ValueT> iter_type _M_insert_float(iter_type, std::ios_base &__io, char_type __fill, char __mod, _ValueT __v) const;
        void _M_group_float(const char *__grouping, size_t __grouping_size, char_type __sep, const char_type *__p, char_type *__new, char_type *__cs, int &__len) const;
        template <typename _ValueT> iter_type _M_insert_int(iter_type, std::ios_base &__io, char_type __fill, _ValueT __v) const;
        void _M_group_int(const char *__grouping, size_t __grouping_size, char_type __sep, std::ios_base &__io, char_type *__new, char_type *__cs, int &__len) const;
        void _M_pad(char_type __fill, streamsize __w, std::ios_base &__io, char_type *__new, const char_type *__cs, int &__len) const;
        virtual void ~num_put();
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, bool __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long long __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, long double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, const void *__v) const;
        inline std::num_put<char> &operator=(const std::num_put<char> &);
    };
    class ctype_byname;
    class numpunct : public locale::facet {
        class numpunct;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
        typedef __numpunct_cache<wchar_t> __cache_type;
    protected:
    protected:
        __cache_type *_M_data;
    public:
    public:
        static locale::id id;
        numpunct(size_t __refs);
        numpunct(__cache_type *__cache, size_t __refs);
        numpunct(__c_locale __cloc, size_t __refs);
        char_type decimal_point() const;
        char_type thousands_sep() const;
        string grouping() const;
        string_type truename() const;
        string_type falsename() const;
    protected:
    protected:
        virtual void ~numpunct();
        virtual char_type do_decimal_point() const;
        virtual char_type do_thousands_sep() const;
        virtual string do_grouping() const;
        virtual string_type do_truename() const;
        virtual string_type do_falsename() const;
        void _M_initialize_numpunct(__c_locale __cloc);
        inline std::numpunct<wchar_t> &operator=(const std::numpunct<wchar_t> &);
    };
    class numpunct_byname : public numpunct<wchar_t> {
        class numpunct_byname;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
        numpunct_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~numpunct_byname();
        inline std::numpunct_byname<wchar_t> &operator=(const std::numpunct_byname<wchar_t> &);
    };
    class num_get : public locale::facet {
        class num_get;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > iter_type;
        static locale::id id;
        num_get(size_t __refs);
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, bool &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, float &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, void *&__v) const;
    protected:
    protected:
        virtual void ~num_get();
        iter_type _M_extract_float(iter_type, iter_type, std::ios_base &, ios_base::iostate &, string &) const;
        template <typename _ValueT> iter_type _M_extract_int(iter_type, iter_type, std::ios_base &, ios_base::iostate &, _ValueT &) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *, size_t __len, _CharT2 __c) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<!__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *__zero, size_t __len, _CharT2 __c) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &, bool &) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, float &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, long double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, void *&) const;
        inline std::num_get<wchar_t> &operator=(const std::num_get<wchar_t> &);
    };
    class num_put : public locale::facet {
        class num_put;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > iter_type;
        static locale::id id;
        num_put(size_t __refs);
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, bool __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, const void *__v) const;
    protected:
    protected:
        template <typename _ValueT> iter_type _M_insert_float(iter_type, std::ios_base &__io, char_type __fill, char __mod, _ValueT __v) const;
        void _M_group_float(const char *__grouping, size_t __grouping_size, char_type __sep, const char_type *__p, char_type *__new, char_type *__cs, int &__len) const;
        template <typename _ValueT> iter_type _M_insert_int(iter_type, std::ios_base &__io, char_type __fill, _ValueT __v) const;
        void _M_group_int(const char *__grouping, size_t __grouping_size, char_type __sep, std::ios_base &__io, char_type *__new, char_type *__cs, int &__len) const;
        void _M_pad(char_type __fill, streamsize __w, std::ios_base &__io, char_type *__new, const char_type *__cs, int &__len) const;
        virtual void ~num_put();
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, bool __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long long __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, long double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, const void *__v) const;
        inline std::num_put<wchar_t> &operator=(const std::num_put<wchar_t> &);
    };
    class ctype_byname;
}
extern void *__builtin_alloca(unsigned int);
namespace std {
    template <typename _Facet> inline const _Facet &__check_facet(const _Facet *__f) (CompoundStmt 0x9f003b0 </usr/include/c++/4.6/bits/basic_ios.h:48:5, line:52:5>
  (IfStmt 0x9f00350 <line:49:7, line:50:19>
    <<<NULL>>>
    (UnaryOperator 0x9f002b8 <line:49:11, col:12> '<dependent type>' prefix '!'
      (DeclRefExpr 0x9f0029c <col:12> 'const _Facet *' lvalue ParmVar 0x9f00150 '__f' 'const _Facet *'))
    (CallExpr 0x9f00330 <line:50:2, col:19> 'void'
      (ImplicitCastExpr 0x9f00320 <col:2> 'void (*)(void) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x9f00304 <col:2> 'void (void) __attribute__((noreturn))' lvalue Function 0x9b761c0 '__throw_bad_cast' 'void (void) __attribute__((noreturn))')))
    <<<NULL>>>)
  (ReturnStmt 0x9f003a0 <line:51:7, col:15>
    (UnaryOperator 0x9f00388 <col:14, col:15> '<dependent type>' prefix '*'
      (DeclRefExpr 0x9f0036c <col:15> 'const _Facet *' lvalue ParmVar 0x9f00150 '__f' 'const _Facet *'))))

;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_ios : public std::ios_base {
        class basic_ios;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef ctype<wchar_t> __ctype_type;
        typedef num_put<wchar_t, ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_put_type;
        typedef num_get<wchar_t, istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_get_type;
    protected:
    protected:
        basic_ostream<wchar_t, std::char_traits<wchar_t> > *_M_tie;
        mutable char_type _M_fill;
        mutable bool _M_fill_init;
        basic_streambuf<wchar_t, std::char_traits<wchar_t> > *_M_streambuf;
        const __ctype_type *_M_ctype;
        const __num_put_type *_M_num_put;
        const __num_get_type *_M_num_get;
    public:
    public:
        void *operator void *() const;
        bool operator!() const;
        iostate rdstate() const;
        void clear(iostate __state);
        void setstate(iostate __state);
        void _M_setstate(iostate __state);
        bool good() const;
        bool eof() const;
        bool fail() const;
        bool bad() const;
        iostate exceptions() const;
        void exceptions(iostate __except);
        basic_ios(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        virtual void ~basic_ios();
        basic_ostream<wchar_t, std::char_traits<wchar_t> > *tie() const;
        basic_ostream<wchar_t, std::char_traits<wchar_t> > *tie(basic_ostream<wchar_t, std::char_traits<wchar_t> > *__tiestr);
        basic_streambuf<wchar_t, std::char_traits<wchar_t> > *rdbuf() const;
        basic_streambuf<wchar_t, std::char_traits<wchar_t> > *rdbuf(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        std::basic_ios<wchar_t> &copyfmt(const std::basic_ios<wchar_t> &__rhs);
        char_type fill() const;
        char_type fill(char_type __ch);
        std::locale imbue(const std::locale &__loc);
        char narrow(char_type __c, char __dfault) const;
        char_type widen(char __c) const;
    protected:
    protected:
        basic_ios();
        void init(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        void _M_cache_locale(const std::locale &__loc);
        inline std::basic_ios<wchar_t> &operator=(const std::basic_ios<wchar_t> &);
        inline basic_ios(const std::basic_ios<wchar_t> &);
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_ios : public std::ios_base {
        class basic_ios;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef ctype<char> __ctype_type;
        typedef num_put<char, ostreambuf_iterator<char, std::char_traits<char> > > __num_put_type;
        typedef num_get<char, istreambuf_iterator<char, std::char_traits<char> > > __num_get_type;
    protected:
    protected:
        basic_ostream<char, std::char_traits<char> > *_M_tie;
        mutable char_type _M_fill;
        mutable bool _M_fill_init;
        basic_streambuf<char, std::char_traits<char> > *_M_streambuf;
        const __ctype_type *_M_ctype;
        const __num_put_type *_M_num_put;
        const __num_get_type *_M_num_get;
    public:
    public:
        void *operator void *() const;
        bool operator!() const;
        iostate rdstate() const;
        void clear(iostate __state);
        void setstate(iostate __state);
        void _M_setstate(iostate __state);
        bool good() const;
        bool eof() const;
        bool fail() const;
        bool bad() const;
        iostate exceptions() const;
        void exceptions(iostate __except);
        basic_ios(basic_streambuf<char, std::char_traits<char> > *__sb);
        virtual void ~basic_ios();
        basic_ostream<char, std::char_traits<char> > *tie() const;
        basic_ostream<char, std::char_traits<char> > *tie(basic_ostream<char, std::char_traits<char> > *__tiestr);
        basic_streambuf<char, std::char_traits<char> > *rdbuf() const;
        basic_streambuf<char, std::char_traits<char> > *rdbuf(basic_streambuf<char, std::char_traits<char> > *__sb);
        std::basic_ios<char> &copyfmt(const std::basic_ios<char> &__rhs);
        char_type fill() const;
        char_type fill(char_type __ch);
        std::locale imbue(const std::locale &__loc);
        char narrow(char_type __c, char __dfault) const;
        char_type widen(char __c) const;
    protected:
    protected:
        basic_ios();
        void init(basic_streambuf<char, std::char_traits<char> > *__sb);
        void _M_cache_locale(const std::locale &__loc);
        inline std::basic_ios<char> &operator=(const std::basic_ios<char> &);
        inline basic_ios(const std::basic_ios<char> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_ios : public std::ios_base {
        class basic_ios;
    public:
    public:
        typedef _CharT char_type;
        typedef typename _Traits::int_type int_type;
        typedef typename _Traits::pos_type pos_type;
        typedef typename _Traits::off_type off_type;
        typedef _Traits traits_type;
        typedef ctype<_CharT> __ctype_type;
        typedef num_put<_CharT, ostreambuf_iterator<_CharT, _Traits> > __num_put_type;
        typedef num_get<_CharT, istreambuf_iterator<_CharT, _Traits> > __num_get_type;
    protected:
    protected:
        basic_ostream<_CharT, _Traits> *_M_tie;
        mutable char_type _M_fill;
        mutable bool _M_fill_init;
        basic_streambuf<_CharT, _Traits> *_M_streambuf;
        const __ctype_type *_M_ctype;
        const __num_put_type *_M_num_put;
        const __num_get_type *_M_num_get;
    public:
    public:
        void *operator void *() const (CompoundStmt 0x9f03430 </usr/include/c++/4.6/bits/basic_ios.h:113:7, col:65>
  (ReturnStmt 0x9f03420 <col:9, col:62>
    (ConditionalOperator 0x9f03400 <col:16, col:62> '<dependent type>'
      (CallExpr 0x9f03370 <col:16, col:27> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f03338 <col:16, col:22> '<dependent type>' lvalue
          (CXXThisExpr 0x9f03328 <col:16> 'const basic_ios<_CharT, _Traits> *' this)))
      (IntegerLiteral 0x9f03390 <col:31> 'int' 0)
      (CXXConstCastExpr 0x9f033e8 <col:35, col:62> 'basic_ios<_CharT, _Traits> *' const_cast<basic_ios<_CharT, _Traits> *> <NoOp>
        (CXXThisExpr 0x9f033a8 <col:58> 'const basic_ios<_CharT, _Traits> *' this)))))


        bool operator!() const (CompoundStmt 0x9f034c0 </usr/include/c++/4.6/bits/basic_ios.h:117:7, col:30>
  (ReturnStmt 0x9f034b0 <col:9, col:27>
    (CallExpr 0x9f03490 <col:16, col:27> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f03458 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9f03448 <col:16> 'const basic_ios<_CharT, _Traits> *' this)))))


        iostate rdstate() const (CompoundStmt 0x9f03518 </usr/include/c++/4.6/bits/basic_ios.h:129:7, col:36>
  (ReturnStmt 0x9f03508 <col:9, col:16>
    (MemberExpr 0x9f034e8 <col:16> 'const iostate':'const enum std::_Ios_Iostate' lvalue ->_M_streambuf_state 0x9e120b0
      (CXXThisExpr 0x9f034d8 <col:16> 'const basic_ios<_CharT, _Traits> *' this))))


        void clear(iostate __state = (ImplicitCastExpr 0x9f03300 </usr/include/c++/4.6/bits/basic_ios.h:139:31> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
  (DeclRefExpr 0x9f032e4 <col:31> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e114b0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))
);
        void setstate(iostate __state) (CompoundStmt 0x9f03680 </usr/include/c++/4.6/bits/basic_ios.h:149:7, col:49>
  (CallExpr 0x9f03660 <col:9, col:46> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9f03540 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0x9f03530 <col:9> 'basic_ios<_CharT, _Traits> *' this))
    (CXXOperatorCallExpr 0x9f03638 <col:21, col:39> '<dependent type>'
      (UnresolvedLookupExpr 0x9f035f8 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e0a7e0 0x9e0bfe0 0x9e0f6e0)
      (CallExpr 0x9f035c0 <col:21, col:35> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f03588 <col:21, col:27> '<dependent type>' lvalue
          (CXXThisExpr 0x9f03578 <col:21> 'basic_ios<_CharT, _Traits> *' this)))
      (DeclRefExpr 0x9f035dc <col:39> 'iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9f01740 '__state' 'iostate':'enum std::_Ios_Iostate'))))


        void _M_setstate(iostate __state) (CompoundStmt 0x9f03858 </usr/include/c++/4.6/bits/basic_ios.h:156:7, line:162:7>
  (CXXOperatorCallExpr 0x9f03718 <line:159:2, col:24> '<dependent type>'
    (UnresolvedLookupExpr 0x9f036e0 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e0fd60)
    (MemberExpr 0x9f036a8 <col:2> 'iostate':'enum std::_Ios_Iostate' lvalue ->_M_streambuf_state 0x9e120b0
      (CXXThisExpr 0x9f03698 <col:2> 'basic_ios<_CharT, _Traits> *' this))
    (DeclRefExpr 0x9f036c8 <col:24> 'iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9f01800 '__state' 'iostate':'enum std::_Ios_Iostate'))
  (IfStmt 0x9f03838 <line:160:2, line:161:27>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9f03800 <line:160:6, col:27> '<dependent type>'
      (UnresolvedLookupExpr 0x9f037c0 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e0a5b0 0x9e0bdb0 0x9e0d020)
      (CallExpr 0x9f03788 <col:6, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f03750 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0x9f03740 <col:6> 'basic_ios<_CharT, _Traits> *' this)))
      (DeclRefExpr 0x9f037a4 <col:27> 'iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9f01800 '__state' 'iostate':'enum std::_Ios_Iostate'))
    (NullStmt 0x9f03828 <line:161:27>)
    <<<NULL>>>))


        bool good() const (CompoundStmt 0x9f03988 </usr/include/c++/4.6/bits/basic_ios.h:172:7, col:38>
  (ReturnStmt 0x9f03978 <col:9, col:35>
    (CXXOperatorCallExpr 0x9f03950 <col:16, col:35> '<dependent type>'
      (UnresolvedLookupExpr 0x9f038f0 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30 0x9d5e270 0x9d5ece0 0x9d5f520 0x9d5fa90 0x9e73300)
      (CallExpr 0x9f038b8 <col:16, col:30> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f03880 <col:16, col:22> '<dependent type>' lvalue
          (CXXThisExpr 0x9f03870 <col:16> 'const basic_ios<_CharT, _Traits> *' this)))
      (IntegerLiteral 0x9f038d8 <col:35> 'int' 0))))


        bool eof() const (CompoundStmt 0x9f03b48 </usr/include/c++/4.6/bits/basic_ios.h:182:7, col:49>
  (ReturnStmt 0x9f03b38 <col:9, col:46>
    (CXXOperatorCallExpr 0x9f03b10 <col:16, col:46> '<dependent type>'
      (UnresolvedLookupExpr 0x9f03ab8 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bacde0 0x9bc3130 0x9bc62c0 0x9c11360 0x9c32300 0x9c32670 0x9d60120 0x9d60630 0x9d60b40 0x9e73820)
      (ParenExpr 0x9f03a88 <col:16, col:41> '<dependent type>'
        (CXXOperatorCallExpr 0x9f03a60 <col:17, col:35> '<dependent type>'
          (UnresolvedLookupExpr 0x9f03a20 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e0a5b0 0x9e0bdb0 0x9e0d020)
          (CallExpr 0x9f039e8 <col:17, col:31> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f039b0 <col:17, col:23> '<dependent type>' lvalue
              (CXXThisExpr 0x9f039a0 <col:17> 'const basic_ios<_CharT, _Traits> *' this)))
          (DeclRefExpr 0x9f03a04 <col:35> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e113f0 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
      (IntegerLiteral 0x9f03aa0 <col:46> 'int' 0))))


        bool fail() const (CompoundStmt 0x9f03da8 </usr/include/c++/4.6/bits/basic_ios.h:193:7, col:61>
  (ReturnStmt 0x9f03d98 <col:9, col:58>
    (CXXOperatorCallExpr 0x9f03d70 <col:16, col:58> '<dependent type>'
      (UnresolvedLookupExpr 0x9f03d18 <col:55, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bacde0 0x9bc3130 0x9bc62c0 0x9c11360 0x9c32300 0x9c32670 0x9d60120 0x9d60630 0x9d60b40 0x9e73820)
      (ParenExpr 0x9f03ce8 <col:16, col:53> '<dependent type>'
        (CXXOperatorCallExpr 0x9f03cc0 <col:17, col:52> '<dependent type>'
          (UnresolvedLookupExpr 0x9f03c80 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e0a5b0 0x9e0bdb0 0x9e0d020)
          (CallExpr 0x9f03ba8 <col:17, col:31> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f03b70 <col:17, col:23> '<dependent type>' lvalue
              (CXXThisExpr 0x9f03b60 <col:17> 'const basic_ios<_CharT, _Traits> *' this)))
          (ParenExpr 0x9f03c68 <col:35, col:52> 'enum std::_Ios_Iostate'
            (CXXOperatorCallExpr 0x9f03c40 <col:36, col:45> 'enum std::_Ios_Iostate'
              (ImplicitCastExpr 0x9f03c30 <col:43, <invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9f03c18 <col:43, <invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)' lvalue Function 0x9e0f6e0 'operator|' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)'))
              (ImplicitCastExpr 0x9f03bf8 <col:36> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x9f03bc4 <col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11390 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
              (ImplicitCastExpr 0x9f03c08 <col:45> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x9f03bdc <col:45> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11450 'failbit' 'const iostate':'const enum std::_Ios_Iostate'))))))
      (IntegerLiteral 0x9f03d00 <col:58> 'int' 0))))


        bool bad() const (CompoundStmt 0x9f03f68 </usr/include/c++/4.6/bits/basic_ios.h:203:7, col:49>
  (ReturnStmt 0x9f03f58 <col:9, col:46>
    (CXXOperatorCallExpr 0x9f03f30 <col:16, col:46> '<dependent type>'
      (UnresolvedLookupExpr 0x9f03ed8 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bacde0 0x9bc3130 0x9bc62c0 0x9c11360 0x9c32300 0x9c32670 0x9d60120 0x9d60630 0x9d60b40 0x9e73820)
      (ParenExpr 0x9f03ea8 <col:16, col:41> '<dependent type>'
        (CXXOperatorCallExpr 0x9f03e80 <col:17, col:35> '<dependent type>'
          (UnresolvedLookupExpr 0x9f03e40 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e0a5b0 0x9e0bdb0 0x9e0d020)
          (CallExpr 0x9f03e08 <col:17, col:31> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f03dd0 <col:17, col:23> '<dependent type>' lvalue
              (CXXThisExpr 0x9f03dc0 <col:17> 'const basic_ios<_CharT, _Traits> *' this)))
          (DeclRefExpr 0x9f03e24 <col:35> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11390 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
      (IntegerLiteral 0x9f03ec0 <col:46> 'int' 0))))


        iostate exceptions() const (CompoundStmt 0x9f03fc0 </usr/include/c++/4.6/bits/basic_ios.h:214:7, col:30>
  (ReturnStmt 0x9f03fb0 <col:9, col:16>
    (MemberExpr 0x9f03f90 <col:16> 'const iostate':'const enum std::_Ios_Iostate' lvalue ->_M_exception 0x9e12070
      (CXXThisExpr 0x9f03f80 <col:16> 'const basic_ios<_CharT, _Traits> *' this))))


        void exceptions(iostate __except) (CompoundStmt 0x9f040d0 </usr/include/c++/4.6/bits/basic_ios.h:249:7, line:252:7>
  (BinaryOperator 0x9f04020 <line:250:9, col:24> '<dependent type>' '='
    (MemberExpr 0x9f03fe8 <col:9> 'iostate':'enum std::_Ios_Iostate' lvalue ->_M_exception 0x9e12070
      (CXXThisExpr 0x9f03fd8 <col:9> 'basic_ios<_CharT, _Traits> *' this))
    (DeclRefExpr 0x9f04008 <col:24> 'iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9f01b40 '__except' 'iostate':'enum std::_Ios_Iostate'))
  (CallExpr 0x9f040b0 <line:251:9, col:39> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9f04048 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0x9f04038 <col:9> 'basic_ios<_CharT, _Traits> *' this))
    (MemberExpr 0x9f04090 <col:21> 'iostate':'enum std::_Ios_Iostate' lvalue ->_M_streambuf_state 0x9e120b0
      (CXXThisExpr 0x9f04080 <col:21> 'basic_ios<_CharT, _Traits> *' this))))


        basic_ios<_CharT, _Traits>(basic_streambuf<_CharT, _Traits> *__sb) : std::ios_base(), _M_tie((IntegerLiteral 0x9f04148 </usr/include/c++/4.6/bits/basic_ios.h:262:28> 'int' 0)
), _M_fill(), _M_fill_init((CXXBoolLiteralExpr 0x9f041c8 </usr/include/c++/4.6/bits/basic_ios.h:262:56> '_Bool' false)
), _M_streambuf((IntegerLiteral 0x9f04218 </usr/include/c++/4.6/bits/basic_ios.h:262:77> 'int' 0)
), _M_ctype((IntegerLiteral 0x9f04268 </usr/include/c++/4.6/bits/basic_ios.h:263:11> 'int' 0)
), _M_num_put((IntegerLiteral 0x9f042b8 </usr/include/c++/4.6/bits/basic_ios.h:263:26> 'int' 0)
), _M_num_get((IntegerLiteral 0x9f04308 </usr/include/c++/4.6/bits/basic_ios.h:263:41> 'int' 0)
) (CompoundStmt 0x9f043f8 </usr/include/c++/4.6/bits/basic_ios.h:264:7, col:27>
  (CallExpr 0x9f043d8 <col:9, col:24> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9f04388 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0x9f04378 <col:9> 'basic_ios<_CharT, _Traits> *' this))
    (DeclRefExpr 0x9f043bc <col:20> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0x9f01d30 '__sb' 'basic_streambuf<_CharT, _Traits> *')))


        virtual void ~basic_ios<_CharT, _Traits>() (CompoundStmt 0x9f04410 </usr/include/c++/4.6/bits/basic_ios.h:273:20, col:22>)


        basic_ostream<_CharT, _Traits> *tie() const (CompoundStmt 0x9f04460 </usr/include/c++/4.6/bits/basic_ios.h:287:7, col:24>
  (ReturnStmt 0x9f04450 <col:9, col:16>
    (MemberExpr 0x9f04430 <col:16> 'basic_ostream<_CharT, _Traits> *const' lvalue ->_M_tie 0x9f01030
      (CXXThisExpr 0x9f04420 <col:16> 'const basic_ios<_CharT, _Traits> *' this))))


        basic_ostream<_CharT, _Traits> *tie(basic_ostream<_CharT, _Traits> *__tiestr) (CompoundStmt 0x9f046b0 </usr/include/c++/4.6/bits/basic_ios.h:299:7, line:303:7>
  (DeclStmt 0x9f04618 <line:300:9, col:55>
    0x9f045b0 "basic_ostream<_CharT, _Traits> *__old =
      (MemberExpr 0x9f045f8 <col:49> 'basic_ostream<_CharT, _Traits> *' lvalue ->_M_tie 0x9f01030
        (CXXThisExpr 0x9f045e8 <col:49> 'basic_ios<_CharT, _Traits> *' this))")
  (BinaryOperator 0x9f04670 <line:301:9, col:18> '<dependent type>' '='
    (MemberExpr 0x9f04638 <col:9> 'basic_ostream<_CharT, _Traits> *' lvalue ->_M_tie 0x9f01030
      (CXXThisExpr 0x9f04628 <col:9> 'basic_ios<_CharT, _Traits> *' this))
    (DeclRefExpr 0x9f04658 <col:18> 'basic_ostream<_CharT, _Traits> *' lvalue ParmVar 0x9f022c0 '__tiestr' 'basic_ostream<_CharT, _Traits> *'))
  (ReturnStmt 0x9f046a0 <line:302:9, col:16>
    (DeclRefExpr 0x9f04688 <col:16> 'basic_ostream<_CharT, _Traits> *' lvalue Var 0x9f045b0 '__old' 'basic_ostream<_CharT, _Traits> *')))


        basic_streambuf<_CharT, _Traits> *rdbuf() const (CompoundStmt 0x9f04710 </usr/include/c++/4.6/bits/basic_ios.h:313:7, col:30>
  (ReturnStmt 0x9f04700 <col:9, col:16>
    (MemberExpr 0x9f046e0 <col:16> 'basic_streambuf<_CharT, _Traits> *const' lvalue ->_M_streambuf 0x9f01220
      (CXXThisExpr 0x9f046d0 <col:16> 'const basic_ios<_CharT, _Traits> *' this))))


        basic_streambuf<_CharT, _Traits> *rdbuf(basic_streambuf<_CharT, _Traits> *__sb);
        basic_ios<_CharT, _Traits> &copyfmt(const basic_ios<_CharT, _Traits> &__rhs);
        char_type fill() const (CompoundStmt 0x9f04918 </usr/include/c++/4.6/bits/basic_ios.h:362:7, line:369:7>
  (IfStmt 0x9f048b8 <line:363:2, line:367:4>
    <<<NULL>>>
    (UnaryOperator 0x9f04768 <line:363:6, col:7> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9f04758 <col:7> '_Bool' <LValueToRValue>
        (MemberExpr 0x9f04738 <col:7> '_Bool' lvalue ->_M_fill_init 0x9f010c0
          (CXXThisExpr 0x9f04728 <col:7> 'const basic_ios<_CharT, _Traits> *' this))))
    (CompoundStmt 0x9f048a0 <line:364:4, line:367:4>
      (BinaryOperator 0x9f04830 <line:365:6, col:31> '<dependent type>' '='
        (MemberExpr 0x9f04790 <col:6> 'char_type':'_CharT' lvalue ->_M_fill 0x9f01080
          (CXXThisExpr 0x9f04780 <col:6> 'const basic_ios<_CharT, _Traits> *' this))
        (CallExpr 0x9f04810 <col:16, col:31> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9f047c0 <col:16, col:22> '<dependent type>' lvalue
            (CXXThisExpr 0x9f047b0 <col:16> 'const basic_ios<_CharT, _Traits> *' this))
          (CharacterLiteral 0x9f047f8 <col:28> 'char'32)))
      (BinaryOperator 0x9f04888 <line:366:6, col:21> '<dependent type>' '='
        (MemberExpr 0x9f04858 <col:6> '_Bool' lvalue ->_M_fill_init 0x9f010c0
          (CXXThisExpr 0x9f04848 <col:6> 'const basic_ios<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0x9f04878 <col:21> '_Bool' true)))
    <<<NULL>>>)
  (ReturnStmt 0x9f04908 <line:368:2, col:9>
    (MemberExpr 0x9f048e8 <col:9> 'char_type':'_CharT' lvalue ->_M_fill 0x9f01080
      (CXXThisExpr 0x9f048d8 <col:9> 'const basic_ios<_CharT, _Traits> *' this))))


        char_type fill(char_type __ch) (CompoundStmt 0x9f04a78 </usr/include/c++/4.6/bits/basic_ios.h:382:7, line:386:7>
  (DeclStmt 0x9f049e0 <line:383:2, col:32>
    0x9f04940 "char_type __old =
      (CallExpr 0x9f049c0 <col:20, col:31> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f04988 <col:20, col:26> '<dependent type>' lvalue
          (CXXThisExpr 0x9f04978 <col:20> 'basic_ios<_CharT, _Traits> *' this)))")
  (BinaryOperator 0x9f04a38 <line:384:2, col:12> '<dependent type>' '='
    (MemberExpr 0x9f04a00 <col:2> 'char_type':'_CharT' lvalue ->_M_fill 0x9f01080
      (CXXThisExpr 0x9f049f0 <col:2> 'basic_ios<_CharT, _Traits> *' this))
    (DeclRefExpr 0x9f04a20 <col:12> 'char_type':'_CharT' lvalue ParmVar 0x9f02b50 '__ch' 'char_type':'_CharT'))
  (ReturnStmt 0x9f04a68 <line:385:2, col:9>
    (DeclRefExpr 0x9f04a50 <col:9> 'char_type':'_CharT' lvalue Var 0x9f04940 '__old' 'char_type':'_CharT')))


        std::locale imbue(const std::locale &__loc);
        char narrow(char_type __c, char __dfault) const (CompoundStmt 0x9f04bc0 </usr/include/c++/4.6/bits/basic_ios.h:422:7, col:63>
  (ReturnStmt 0x9f04bb0 <col:9, col:60>
    (CallExpr 0x9f04b88 <col:16, col:60> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f04b20 <col:16, col:40> '<dependent type>' lvalue
        (CallExpr 0x9f04b00 <col:16, col:38> '<dependent type>'
          (UnresolvedLookupExpr 0x9f04a98 <col:16> '<overloaded function type>' lvalue (ADL) = '1' 0x9f00270)
          (MemberExpr 0x9f04ae0 <col:30> 'const __ctype_type *const' lvalue ->_M_ctype 0x9f012b0
            (CXXThisExpr 0x9f04ad0 <col:30> 'const basic_ios<_CharT, _Traits> *' this))))
      (DeclRefExpr 0x9f04b54 <col:47> 'char_type':'_CharT' lvalue ParmVar 0x9f02d10 '__c' 'char_type':'_CharT')
      (DeclRefExpr 0x9f04b6c <col:52> 'char' lvalue ParmVar 0x9f02d50 '__dfault' 'char'))))


        char_type widen(char __c) const (CompoundStmt 0x9f04ce0 </usr/include/c++/4.6/bits/basic_ios.h:441:7, col:52>
  (ReturnStmt 0x9f04cd0 <col:9, col:49>
    (CallExpr 0x9f04cb0 <col:16, col:49> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f04c60 <col:16, col:40> '<dependent type>' lvalue
        (CallExpr 0x9f04c40 <col:16, col:38> '<dependent type>'
          (UnresolvedLookupExpr 0x9f04bd8 <col:16> '<overloaded function type>' lvalue (ADL) = '1' 0x9f00270)
          (MemberExpr 0x9f04c20 <col:30> 'const __ctype_type *const' lvalue ->_M_ctype 0x9f012b0
            (CXXThisExpr 0x9f04c10 <col:30> 'const basic_ios<_CharT, _Traits> *' this))))
      (DeclRefExpr 0x9f04c94 <col:46> 'char' lvalue ParmVar 0x9f02e40 '__c' 'char'))))


    protected:
    protected:
        basic_ios<_CharT, _Traits>() : std::ios_base(), _M_tie((IntegerLiteral 0x9f04d58 </usr/include/c++/4.6/bits/basic_ios.h:452:28> 'int' 0)
), _M_fill((CXXUnresolvedConstructExpr 0x9f04db0 </usr/include/c++/4.6/bits/basic_ios.h:452:40, col:50> 'char_type':'_CharT')
), _M_fill_init((CXXBoolLiteralExpr 0x9f04e08 </usr/include/c++/4.6/bits/basic_ios.h:452:67> '_Bool' false)
), _M_streambuf((IntegerLiteral 0x9f04e58 </usr/include/c++/4.6/bits/basic_ios.h:453:15> 'int' 0)
), _M_ctype((IntegerLiteral 0x9f04ea8 </usr/include/c++/4.6/bits/basic_ios.h:453:28> 'int' 0)
), _M_num_put((IntegerLiteral 0x9f04ef8 </usr/include/c++/4.6/bits/basic_ios.h:453:43> 'int' 0)
), _M_num_get((IntegerLiteral 0x9f04f48 </usr/include/c++/4.6/bits/basic_ios.h:453:58> 'int' 0)
) (CompoundStmt 0x9f04fb8 </usr/include/c++/4.6/bits/basic_ios.h:454:7, col:9>)


        void init(basic_streambuf<_CharT, _Traits> *__sb);
        void _M_cache_locale(const std::locale &__loc);
    };
}
namespace std {
    void clear(iostate __state = (ImplicitCastExpr 0x9f03300 </usr/include/c++/4.6/bits/basic_ios.h:139:31> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
  (DeclRefExpr 0x9f032e4 <col:31> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e114b0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))
) (CompoundStmt 0x9f05800 </usr/include/c++/4.6/bits/basic_ios.tcc:42:5, line:49:5>
  (IfStmt 0x9f055b8 <line:43:7, line:46:35>
    <<<NULL>>>
    (CallExpr 0x9f05450 <line:43:11, col:23> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f05418 <col:11, col:17> '<dependent type>' lvalue
        (CXXThisExpr 0x9f05408 <col:11> 'basic_ios<_CharT, _Traits> *' this)))
    (BinaryOperator 0x9f054b8 <line:44:2, col:23> '<dependent type>' '='
      (MemberExpr 0x9f05480 <col:2> 'iostate':'enum std::_Ios_Iostate' lvalue ->_M_streambuf_state 0x9e120b0
        (CXXThisExpr 0x9f05470 <col:2> 'basic_ios<_CharT, _Traits> *' this))
      (DeclRefExpr 0x9f054a0 <col:23> 'iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9f05320 '__state' 'iostate':'enum std::_Ios_Iostate'))
    (BinaryOperator 0x9f055a0 <line:46:4, col:35> '<dependent type>' '='
      (MemberExpr 0x9f054e0 <col:4> 'iostate':'enum std::_Ios_Iostate' lvalue ->_M_streambuf_state 0x9e120b0
        (CXXThisExpr 0x9f054d0 <col:4> 'basic_ios<_CharT, _Traits> *' this))
      (CXXOperatorCallExpr 0x9f05578 <col:25, col:35> 'enum std::_Ios_Iostate'
        (ImplicitCastExpr 0x9f05568 <col:33, <invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9f05550 <col:33, <invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)' lvalue Function 0x9e0f6e0 'operator|' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)'))
        (ImplicitCastExpr 0x9f05530 <col:25> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
          (DeclRefExpr 0x9f05500 <col:25> 'iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9f05320 '__state' 'iostate':'enum std::_Ios_Iostate'))
        (ImplicitCastExpr 0x9f05540 <col:35> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
          (DeclRefExpr 0x9f05518 <col:35> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11390 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))))
  (IfStmt 0x9f057e0 <line:47:7, line:48:45>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9f056e8 <line:47:11, col:46> '<dependent type>'
      (UnresolvedLookupExpr 0x9f056a8 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e0a5b0 0x9e0bdb0 0x9e0d020)
      (CallExpr 0x9f05620 <col:11, col:28> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f055e8 <col:11, col:17> '<dependent type>' lvalue
          (CXXThisExpr 0x9f055d8 <col:11> 'basic_ios<_CharT, _Traits> *' this)))
      (CallExpr 0x9f05688 <col:32, col:46> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f05650 <col:32, col:38> '<dependent type>' lvalue
          (CXXThisExpr 0x9f05640 <col:32> 'basic_ios<_CharT, _Traits> *' this))))
    (CallExpr 0x9f057b0 <line:48:2, col:45> 'void'
      (ImplicitCastExpr 0x9f057a0 <col:2> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x9f05784 <col:2> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9b79200 '__throw_ios_failure' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0x9f057d0 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0x9f05770 <col:24, col:30> 'const char [17]' lvalue
          (StringLiteral 0x9f05744 </usr/include/c++/4.6/bits/basic_ios.tcc:48:26> 'const char [17]' lvalue "basic_ios::clear"))))
    <<<NULL>>>))


    basic_streambuf<_CharT, _Traits> *rdbuf(basic_streambuf<_CharT, _Traits> *__sb) (CompoundStmt 0x9f061a8 </usr/include/c++/4.6/bits/basic_ios.tcc:54:5, line:59:5>
  (DeclStmt 0x9f060a8 <line:55:7, col:61>
    0x9f06040 "basic_streambuf<_CharT, _Traits> *__old =
      (MemberExpr 0x9f06088 <col:49> 'basic_streambuf<_CharT, _Traits> *' lvalue ->_M_streambuf 0x9f01220
        (CXXThisExpr 0x9f06078 <col:49> 'basic_ios<_CharT, _Traits> *' this))")
  (BinaryOperator 0x9f06100 <line:56:7, col:22> '<dependent type>' '='
    (MemberExpr 0x9f060c8 <col:7> 'basic_streambuf<_CharT, _Traits> *' lvalue ->_M_streambuf 0x9f01220
      (CXXThisExpr 0x9f060b8 <col:7> 'basic_ios<_CharT, _Traits> *' this))
    (DeclRefExpr 0x9f060e8 <col:22> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0x9f05cc0 '__sb' 'basic_streambuf<_CharT, _Traits> *'))
  (CallExpr 0x9f06160 <line:57:7, col:19> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9f06128 <col:7, col:13> '<dependent type>' lvalue
      (CXXThisExpr 0x9f06118 <col:7> 'basic_ios<_CharT, _Traits> *' this)))
  (ReturnStmt 0x9f06198 <line:58:7, col:14>
    (DeclRefExpr 0x9f0617c <col:14> 'basic_streambuf<_CharT, _Traits> *' lvalue Var 0x9f06040 '__old' 'basic_streambuf<_CharT, _Traits> *')))


    basic_ios<_CharT, _Traits> &copyfmt(const basic_ios<_CharT, _Traits> &__rhs) (CompoundStmt 0x9f0da70 </usr/include/c++/4.6/bits/basic_ios.tcc:64:5, line:109:5>
  (IfStmt 0x9f0da18 <line:67:7, line:107:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9f06878 <line:67:11, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0x9f06820 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bacde0 0x9bc3130 0x9bc62c0 0x9c11360 0x9c32300 0x9c32670 0x9d60120 0x9d60630 0x9d60b40 0x9e73820)
      (CXXThisExpr 0x9f06798 <col:11> 'basic_ios<_CharT, _Traits> *' this)
      (CXXOperatorCallExpr 0x9f06800 <col:19, col:20> '<dependent type>'
        (UnresolvedLookupExpr 0x9f067c0 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e0a5b0 0x9e0bdb0 0x9e0d020)
        (DeclRefExpr 0x9f067a8 <col:20> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0x9f06550 '__rhs' 'const basic_ios<_CharT, _Traits> &')))
    (CompoundStmt 0x9f0d9b8 <line:68:2, line:107:2>
      (DeclStmt 0x9f0cb20 <line:73:4, line:74:69>
        0x9f068b0 "std::ios_base::_Words *__words =
          (ConditionalOperator 0x9f0cb00 <line:73:22, line:74:43> '<dependent type>'
            (ParenExpr 0x9f069c0 <line:73:22, col:63> '<dependent type>'
              (CXXOperatorCallExpr 0x9f06998 <col:23, col:45> '<dependent type>'
                (UnresolvedLookupExpr 0x9f06950 <col:42, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9badc90 0x9bc3ba0 0x9bc6b90 0x9d63390 0x9d638c0 0x9d63df0)
                (CXXDependentScopeMemberExpr 0x9f06900 <col:23, col:29> '<dependent type>' lvalue
                  (DeclRefExpr 0x9f068e4 <col:23> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0x9f06550 '__rhs' 'const basic_ios<_CharT, _Traits> &'))
                (DeclRefExpr 0x9f06934 <col:45> 'enum std::ios_base::<anonymous at /usr/include/c++/4.6/bits/ios_base.h:512:5>' EnumConstant 0x9e12b80 '_S_local_word_size' 'enum std::ios_base::<anonymous at /usr/include/c++/4.6/bits/ios_base.h:512:5>')))
            (MemberExpr 0x9f069e8 <line:74:23> 'struct std::ios_base::_Words [8]' lvalue ->_M_local_word 0x9e12cb0
              (CXXThisExpr 0x9f069d8 <col:23> 'basic_ios<_CharT, _Traits> *' this))
            (CXXNewExpr 0x9f06c20 <col:39, col:43> 'struct std::ios_base::_Words *'
              (CXXDependentScopeMemberExpr 0x9f06a20 <col:50, col:56> '<dependent type>' lvalue
                (DeclRefExpr 0x9f06a08 <col:50> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0x9f06550 '__rhs' 'const basic_ios<_CharT, _Traits> &'))))")
      (DeclStmt 0x9f0cbc8 <line:77:4, col:45>
        0x9f0cb40 "std::ios_base::_Callback_list *__cb =
          (CXXDependentScopeMemberExpr 0x9f0cb90 <col:27, col:33> '<dependent type>' lvalue
            (DeclRefExpr 0x9f0cb74 <col:27> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0x9f06550 '__rhs' 'const basic_ios<_CharT, _Traits> &'))")
      (IfStmt 0x9f0cc78 <line:78:4, line:79:29>
        <<<NULL>>>
        (ImplicitCastExpr 0x9f0cc00 <line:78:8> '_Bool' <PointerToBoolean>
          (ImplicitCastExpr 0x9f0cbf0 <col:8> 'struct std::ios_base::_Callback_list *' <LValueToRValue>
            (DeclRefExpr 0x9f0cbd8 <col:8> 'struct std::ios_base::_Callback_list *' lvalue Var 0x9f0cb40 '__cb' 'struct std::ios_base::_Callback_list *')))
        (CXXMemberCallExpr 0x9f0cc58 <line:79:6, col:29> 'void'
          (MemberExpr 0x9f0cc34 <col:6, col:12> '<bound member function type>' ->_M_add_reference 0x9e125a0
            (ImplicitCastExpr 0x9f0cc28 <col:6> 'struct std::ios_base::_Callback_list *' <LValueToRValue>
              (DeclRefExpr 0x9f0cc0c <col:6> 'struct std::ios_base::_Callback_list *' lvalue Var 0x9f0cb40 '__cb' 'struct std::ios_base::_Callback_list *'))))
        <<<NULL>>>)
      (CallExpr 0x9f0cce0 <line:80:4, col:33> '<dependent type>'
        (MemberExpr 0x9f0cca8 <col:4> '<bound member function type>' ->_M_call_callbacks 0x9e12770
          (CXXThisExpr 0x9f0cc98 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (DeclRefExpr 0x9f0ccc8 <col:22> 'enum std::ios_base::event' EnumConstant 0x9e11b30 'erase_event' 'enum std::ios_base::event'))
      (IfStmt 0x9f0cea0 <line:81:4, line:85:6>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9f0cdb8 <line:81:8, col:19> '<dependent type>'
          (UnresolvedLookupExpr 0x9f0cd60 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bacde0 0x9bc3130 0x9bc62c0 0x9c11360 0x9c32300 0x9c32670 0x9d60120 0x9d60630 0x9d60b40 0x9e73820)
          (MemberExpr 0x9f0cd10 <col:8> 'struct std::ios_base::_Words *' lvalue ->_M_word 0x9e12d50
            (CXXThisExpr 0x9f0cd00 <col:8> 'basic_ios<_CharT, _Traits> *' this))
          (MemberExpr 0x9f0cd40 <col:19> 'struct std::ios_base::_Words [8]' lvalue ->_M_local_word 0x9e12cb0
            (CXXThisExpr 0x9f0cd30 <col:19> 'basic_ios<_CharT, _Traits> *' this)))
        (CompoundStmt 0x9f0ce88 <line:82:6, line:85:6>
          (CXXDeleteExpr 0x9f0ce10 <line:83:8, col:18> 'void'
            (MemberExpr 0x9f0cdf0 <col:18> 'struct std::ios_base::_Words *' lvalue ->_M_word 0x9e12d50
              (CXXThisExpr 0x9f0cde0 <col:18> 'basic_ios<_CharT, _Traits> *' this)))
          (BinaryOperator 0x9f0ce70 <line:84:8, col:18> '<dependent type>' '='
            (MemberExpr 0x9f0ce38 <col:8> 'struct std::ios_base::_Words *' lvalue ->_M_word 0x9e12d50
              (CXXThisExpr 0x9f0ce28 <col:8> 'basic_ios<_CharT, _Traits> *' this))
            (IntegerLiteral 0x9f0ce58 <col:18> 'int' 0)))
        <<<NULL>>>)
      (CallExpr 0x9f0cef0 <line:86:4, col:25> '<dependent type>'
        (MemberExpr 0x9f0ced0 <col:4> '<bound member function type>' ->_M_dispose_callbacks 0x9e12830
          (CXXThisExpr 0x9f0cec0 <col:4> 'basic_ios<_CharT, _Traits> *' this)))
      (BinaryOperator 0x9f0cf58 <line:89:4, col:19> '<dependent type>' '='
        (MemberExpr 0x9f0cf20 <col:4> 'struct std::ios_base::_Callback_list *' lvalue ->_M_callbacks 0x9e12690
          (CXXThisExpr 0x9f0cf10 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (DeclRefExpr 0x9f0cf40 <col:19> 'struct std::ios_base::_Callback_list *' lvalue Var 0x9f0cb40 '__cb' 'struct std::ios_base::_Callback_list *'))
      (ForStmt 0x9f0d1e8 <line:90:4, line:91:38>
        (DeclStmt 0x9f0cfd0 <line:90:9, col:20>
          0x9f0cf80 "int __i =
            (IntegerLiteral 0x9f0cfb8 <col:19> 'int' 0)")
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9f0d090 <col:22, col:34> '<dependent type>'
          (UnresolvedLookupExpr 0x9f0d048 <col:26, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bac3c0 0x9bc2c90 0x9bc5590 0x9d61190 0x9d616c0 0x9d61bf0)
          (DeclRefExpr 0x9f0cfe0 <col:22> 'int' lvalue Var 0x9f0cf80 '__i' 'int')
          (CXXDependentScopeMemberExpr 0x9f0d010 <col:28, col:34> '<dependent type>' lvalue
            (DeclRefExpr 0x9f0cff8 <col:28> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0x9f06550 '__rhs' 'const basic_ios<_CharT, _Traits> &')))
        (UnaryOperator 0x9f0d0d0 <col:48, col:50> 'int' lvalue prefix '++'
          (DeclRefExpr 0x9f0d0b4 <col:50> 'int' lvalue Var 0x9f0cf80 '__i' 'int'))
        (BinaryOperator 0x9f0d1d0 <line:91:6, col:38> '<dependent type>' '='
          (ArraySubscriptExpr 0x9f0d138 <col:6, col:17> 'struct std::ios_base::_Words' lvalue
            (ImplicitCastExpr 0x9f0d118 <col:6> 'struct std::ios_base::_Words *' <LValueToRValue>
              (DeclRefExpr 0x9f0d0e4 <col:6> 'struct std::ios_base::_Words *' lvalue Var 0x9f068b0 '__words' 'struct std::ios_base::_Words *'))
            (ImplicitCastExpr 0x9f0d128 <col:14> 'int' <LValueToRValue>
              (DeclRefExpr 0x9f0d0fc <col:14> 'int' lvalue Var 0x9f0cf80 '__i' 'int')))
          (ArraySubscriptExpr 0x9f0d1b8 <col:21, col:38> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x9f0d168 <col:21, col:27> '<dependent type>' lvalue
              (DeclRefExpr 0x9f0d14c <col:21> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0x9f06550 '__rhs' 'const basic_ios<_CharT, _Traits> &'))
            (DeclRefExpr 0x9f0d19c <col:35> 'int' lvalue Var 0x9f0cf80 '__i' 'int'))))
      (BinaryOperator 0x9f0d258 <line:92:4, col:14> '<dependent type>' '='
        (MemberExpr 0x9f0d220 <col:4> 'struct std::ios_base::_Words *' lvalue ->_M_word 0x9e12d50
          (CXXThisExpr 0x9f0d210 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (DeclRefExpr 0x9f0d240 <col:14> 'struct std::ios_base::_Words *' lvalue Var 0x9f068b0 '__words' 'struct std::ios_base::_Words *'))
      (BinaryOperator 0x9f0d2f0 <line:93:4, col:25> '<dependent type>' '='
        (MemberExpr 0x9f0d280 <col:4> 'int' lvalue ->_M_word_size 0x9e12cf0
          (CXXThisExpr 0x9f0d270 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (CXXDependentScopeMemberExpr 0x9f0d2b8 <col:19, col:25> '<dependent type>' lvalue
          (DeclRefExpr 0x9f0d2a0 <col:19> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0x9f06550 '__rhs' 'const basic_ios<_CharT, _Traits> &')))
      (CallExpr 0x9f0d3c0 <line:95:4, col:29> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f0d318 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x9f0d308 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (CallExpr 0x9f0d3a0 <col:16, col:28> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9f0d368 <col:16, col:22> '<dependent type>' lvalue
            (DeclRefExpr 0x9f0d34c <col:16> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0x9f06550 '__rhs' 'const basic_ios<_CharT, _Traits> &'))))
      (CallExpr 0x9f0d498 <line:96:4, col:29> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f0d3f0 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x9f0d3e0 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (CallExpr 0x9f0d478 <col:16, col:28> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9f0d440 <col:16, col:22> '<dependent type>' lvalue
            (DeclRefExpr 0x9f0d424 <col:16> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0x9f06550 '__rhs' 'const basic_ios<_CharT, _Traits> &'))))
      (CallExpr 0x9f0d570 <line:97:4, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f0d4c8 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x9f0d4b8 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (CallExpr 0x9f0d550 <col:20, col:36> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9f0d518 <col:20, col:26> '<dependent type>' lvalue
            (DeclRefExpr 0x9f0d4fc <col:20> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0x9f06550 '__rhs' 'const basic_ios<_CharT, _Traits> &'))))
      (CallExpr 0x9f0d648 <line:98:4, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f0d5a0 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x9f0d590 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (CallExpr 0x9f0d628 <col:14, col:24> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9f0d5f0 <col:14, col:20> '<dependent type>' lvalue
            (DeclRefExpr 0x9f0d5d4 <col:14> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0x9f06550 '__rhs' 'const basic_ios<_CharT, _Traits> &'))))
      (CallExpr 0x9f0d720 <line:99:4, col:27> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f0d678 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x9f0d668 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (CallExpr 0x9f0d700 <col:15, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9f0d6c8 <col:15, col:21> '<dependent type>' lvalue
            (DeclRefExpr 0x9f0d6ac <col:15> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0x9f06550 '__rhs' 'const basic_ios<_CharT, _Traits> &'))))
      (BinaryOperator 0x9f0d7e0 <line:100:4, col:33> '<dependent type>' '='
        (MemberExpr 0x9f0d750 <col:4> 'class std::locale' lvalue ->_M_ios_locale 0x9e12ee0
          (CXXThisExpr 0x9f0d740 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (CallExpr 0x9f0d7c0 <col:20, col:33> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9f0d788 <col:20, col:26> '<dependent type>' lvalue
            (DeclRefExpr 0x9f0d770 <col:20> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0x9f06550 '__rhs' 'const basic_ios<_CharT, _Traits> &'))))
      (CallExpr 0x9f0d858 <line:101:4, col:33> '<dependent type>'
        (MemberExpr 0x9f0d808 <col:4> '<bound member function type>' ->_M_cache_locale 0x9f03280
          (CXXThisExpr 0x9f0d7f8 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (MemberExpr 0x9f0d838 <col:20> 'class std::locale' lvalue ->_M_ios_locale 0x9e12ee0
          (CXXThisExpr 0x9f0d828 <col:20> 'basic_ios<_CharT, _Traits> *' this)))
      (CallExpr 0x9f0d8c0 <line:103:4, col:35> '<dependent type>'
        (MemberExpr 0x9f0d888 <col:4> '<bound member function type>' ->_M_call_callbacks 0x9e12770
          (CXXThisExpr 0x9f0d878 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (DeclRefExpr 0x9f0d8a8 <col:22> 'enum std::ios_base::event' EnumConstant 0x9e11bb0 'copyfmt_event' 'enum std::ios_base::event'))
      (CallExpr 0x9f0d998 <line:106:4, col:39> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f0d8f0 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x9f0d8e0 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (CallExpr 0x9f0d978 <col:21, col:38> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9f0d940 <col:21, col:27> '<dependent type>' lvalue
            (DeclRefExpr 0x9f0d924 <col:21> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0x9f06550 '__rhs' 'const basic_ios<_CharT, _Traits> &')))))
    <<<NULL>>>)
  (ReturnStmt 0x9f0da60 <line:108:7, col:15>
    (UnaryOperator 0x9f0da48 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9f0da38 <col:15> 'basic_ios<_CharT, _Traits> *' this))))


    std::locale imbue(const std::locale &__loc) (CompoundStmt 0x9f0e250 </usr/include/c++/4.6/bits/basic_ios.tcc:115:5, line:122:5>
  (DeclStmt 0x9f0dee0 <line:116:7, col:35>
    0x9f0de20 "std::locale __old =
      (ParenListExpr 0x9f0dec0 <col:19, col:34> 'class std::locale'
        (CallExpr 0x9f0dea0 <col:20, col:33> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9f0de68 <col:20, col:26> '<dependent type>' lvalue
            (CXXThisExpr 0x9f0de58 <col:20> 'basic_ios<_CharT, _Traits> *' this))))")
  (CallExpr 0x9f0df70 <line:117:7, col:28> '<dependent type>'
    (MemberExpr 0x9f0df28 <col:7, col:17> '<bound member function type>' ->imbue 0x9e15ec0
      (CXXThisExpr 0x9f0df18 <col:17> 'basic_ios<_CharT, _Traits> *' this))
    (DeclRefExpr 0x9f0df54 <col:23> 'const class std::locale' lvalue ParmVar 0x9f0dd30 '__loc' 'const class std::locale &'))
  (CallExpr 0x9f0dfd8 <line:118:7, col:28> '<dependent type>'
    (MemberExpr 0x9f0dfa0 <col:7> '<bound member function type>' ->_M_cache_locale 0x9f03280
      (CXXThisExpr 0x9f0df90 <col:7> 'basic_ios<_CharT, _Traits> *' this))
    (DeclRefExpr 0x9f0dfc0 <col:23> 'const class std::locale' lvalue ParmVar 0x9f0dd30 '__loc' 'const class std::locale &'))
  (IfStmt 0x9f0e1d0 <line:119:7, line:120:31>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9f0e0d0 <line:119:11, col:28> '<dependent type>'
      (UnresolvedLookupExpr 0x9f0e078 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bacde0 0x9bc3130 0x9bc62c0 0x9c11360 0x9c32300 0x9c32670 0x9d60120 0x9d60630 0x9d60b40 0x9e73820)
      (CallExpr 0x9f0e040 <col:11, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f0e008 <col:11, col:17> '<dependent type>' lvalue
          (CXXThisExpr 0x9f0dff8 <col:11> 'basic_ios<_CharT, _Traits> *' this)))
      (IntegerLiteral 0x9f0e060 <col:28> 'int' 0))
    (CallExpr 0x9f0e1b0 <line:120:2, col:31> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f0e160 <col:2, col:17> '<dependent type>' lvalue
        (CallExpr 0x9f0e140 <col:2, col:14> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9f0e108 <col:2, col:8> '<dependent type>' lvalue
            (CXXThisExpr 0x9f0e0f8 <col:2> 'basic_ios<_CharT, _Traits> *' this))))
      (DeclRefExpr 0x9f0e194 <col:26> 'const class std::locale' lvalue ParmVar 0x9f0dd30 '__loc' 'const class std::locale &'))
    <<<NULL>>>)
  (ReturnStmt 0x9f0e240 <line:121:7, col:14>
    (CXXConstructExpr 0x9f0e218 <col:14> 'class std::locale''void (const class std::locale &) throw()' elidable
      (ImplicitCastExpr 0x9f0e208 <col:14> 'const class std::locale' lvalue <NoOp>
        (DeclRefExpr 0x9f0e1ec <col:14> 'class std::locale' lvalue Var 0x9f0de20 '__old' 'class std::locale')))))


    void init(basic_streambuf<_CharT, _Traits> *__sb) (CompoundStmt 0x9f0eaf0 </usr/include/c++/4.6/bits/basic_ios.tcc:127:5, line:153:5>
  (CallExpr 0x9f0e7c0 <line:129:7, col:25> '<dependent type>'
    (MemberExpr 0x9f0e790 <col:7, col:17> '<bound member function type>' ->_M_init 0x9e12f30
      (CXXThisExpr 0x9f0e780 <col:17> 'basic_ios<_CharT, _Traits> *' this)))
  (CallExpr 0x9f0e840 <line:132:7, col:36> '<dependent type>'
    (MemberExpr 0x9f0e7f0 <col:7> '<bound member function type>' ->_M_cache_locale 0x9f03280
      (CXXThisExpr 0x9f0e7e0 <col:7> 'basic_ios<_CharT, _Traits> *' this))
    (MemberExpr 0x9f0e820 <col:23> 'class std::locale' lvalue ->_M_ios_locale 0x9e12ee0
      (CXXThisExpr 0x9f0e810 <col:23> 'basic_ios<_CharT, _Traits> *' this)))
  (BinaryOperator 0x9f0e8b0 <line:146:7, col:24> '<dependent type>' '='
    (MemberExpr 0x9f0e870 <col:7> 'char_type':'_CharT' lvalue ->_M_fill 0x9f01080
      (CXXThisExpr 0x9f0e860 <col:7> 'basic_ios<_CharT, _Traits> *' this))
    (CXXUnresolvedConstructExpr 0x9f0e898 <col:17, col:24> '_CharT'))
  (BinaryOperator 0x9f0e908 <line:147:7, col:22> '<dependent type>' '='
    (MemberExpr 0x9f0e8d8 <col:7> '_Bool' lvalue ->_M_fill_init 0x9f010c0
      (CXXThisExpr 0x9f0e8c8 <col:7> 'basic_ios<_CharT, _Traits> *' this))
    (CXXBoolLiteralExpr 0x9f0e8f8 <col:22> '_Bool' false))
  (BinaryOperator 0x9f0e968 <line:149:7, col:16> '<dependent type>' '='
    (MemberExpr 0x9f0e930 <col:7> 'basic_ostream<_CharT, _Traits> *' lvalue ->_M_tie 0x9f01030
      (CXXThisExpr 0x9f0e920 <col:7> 'basic_ios<_CharT, _Traits> *' this))
    (IntegerLiteral 0x9f0e950 <col:16> 'int' 0))
  (BinaryOperator 0x9f0e9c8 <line:150:7, col:22> '<dependent type>' '='
    (MemberExpr 0x9f0e990 <col:7> 'iostate':'enum std::_Ios_Iostate' lvalue ->_M_exception 0x9e12070
      (CXXThisExpr 0x9f0e980 <col:7> 'basic_ios<_CharT, _Traits> *' this))
    (DeclRefExpr 0x9f0e9b0 <col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e114b0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))
  (BinaryOperator 0x9f0ea28 <line:151:7, col:22> '<dependent type>' '='
    (MemberExpr 0x9f0e9f0 <col:7> 'basic_streambuf<_CharT, _Traits> *' lvalue ->_M_streambuf 0x9f01220
      (CXXThisExpr 0x9f0e9e0 <col:7> 'basic_ios<_CharT, _Traits> *' this))
    (DeclRefExpr 0x9f0ea10 <col:22> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0x9f0e640 '__sb' 'basic_streambuf<_CharT, _Traits> *'))
  (BinaryOperator 0x9f0ead8 <line:152:7, col:45> '<dependent type>' '='
    (MemberExpr 0x9f0ea50 <col:7> 'iostate':'enum std::_Ios_Iostate' lvalue ->_M_streambuf_state 0x9e120b0
      (CXXThisExpr 0x9f0ea40 <col:7> 'basic_ios<_CharT, _Traits> *' this))
    (ConditionalOperator 0x9f0eab8 <col:28, col:45> 'const iostate':'const enum std::_Ios_Iostate' lvalue
      (DeclRefExpr 0x9f0ea70 <col:28> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0x9f0e640 '__sb' 'basic_streambuf<_CharT, _Traits> *')
      (DeclRefExpr 0x9f0ea88 <col:35> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e114b0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate')
      (DeclRefExpr 0x9f0eaa0 <col:45> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11390 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))))


    void _M_cache_locale(const std::locale &__loc) (CompoundStmt 0x9f0f700 </usr/include/c++/4.6/bits/basic_ios.tcc:158:5, line:173:5>
  (IfStmt 0x9f0f150 <line:159:7, line:162:13>
    <<<NULL>>>
    (CallExpr 0x9f0ef78 <line:159:11, col:64> '<dependent type>'
      (DeclRefExpr 0x9f0eea4 <col:11> 'long (long, long)' lvalue Function 0x9d45c10 '__builtin_expect' 'long (long, long)')
      (CallExpr 0x9f0ef48 <col:28, col:57> '<dependent type>'
        (UnresolvedLookupExpr 0x9f0eec8 <col:28, col:50> '<dependent type>' lvalue (ADL) = '1' 0x9e00b90)
        (DeclRefExpr 0x9f0ef30 <col:52> 'const class std::locale' lvalue ParmVar 0x9f0edc0 '__loc' 'const class std::locale &'))
      (CXXBoolLiteralExpr 0x9f0ef68 <col:60> '_Bool' true))
    (BinaryOperator 0x9f0f0d8 <line:160:2, col:43> '<dependent type>' '='
      (MemberExpr 0x9f0efb0 <col:2> 'const __ctype_type *' lvalue ->_M_ctype 0x9f012b0
        (CXXThisExpr 0x9f0efa0 <col:2> 'basic_ios<_CharT, _Traits> *' this))
      (CXXOperatorCallExpr 0x9f0f0b8 <col:13, col:43> '<dependent type>'
        (UnresolvedLookupExpr 0x9f0f078 <col:13, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e0a5b0 0x9e0bdb0 0x9e0d020)
        (CallExpr 0x9f0f058 <col:14, col:43> '<dependent type>'
          (UnresolvedLookupExpr 0x9f0efd8 <col:14, col:36> '<dependent type>' lvalue (ADL) = '1' 0x9e01120)
          (DeclRefExpr 0x9f0f040 <col:38> 'const class std::locale' lvalue ParmVar 0x9f0edc0 '__loc' 'const class std::locale &'))))
    (BinaryOperator 0x9f0f138 <line:162:2, col:13> '<dependent type>' '='
      (MemberExpr 0x9f0f100 <col:2> 'const __ctype_type *' lvalue ->_M_ctype 0x9f012b0
        (CXXThisExpr 0x9f0f0f0 <col:2> 'basic_ios<_CharT, _Traits> *' this))
      (IntegerLiteral 0x9f0f120 <col:13> 'int' 0)))
  (IfStmt 0x9f0f418 <line:164:7, line:167:15>
    <<<NULL>>>
    (CallExpr 0x9f0f240 <line:164:11, col:66> '<dependent type>'
      (DeclRefExpr 0x9f0f16c <col:11> 'long (long, long)' lvalue Function 0x9d45c10 '__builtin_expect' 'long (long, long)')
      (CallExpr 0x9f0f210 <col:28, col:59> '<dependent type>'
        (UnresolvedLookupExpr 0x9f0f190 <col:28, col:52> '<dependent type>' lvalue (ADL) = '1' 0x9e00b90)
        (DeclRefExpr 0x9f0f1f8 <col:54> 'const class std::locale' lvalue ParmVar 0x9f0edc0 '__loc' 'const class std::locale &'))
      (CXXBoolLiteralExpr 0x9f0f230 <col:62> '_Bool' true))
    (BinaryOperator 0x9f0f3a0 <line:165:2, col:47> '<dependent type>' '='
      (MemberExpr 0x9f0f278 <col:2> 'const __num_put_type *' lvalue ->_M_num_put 0x9f01340
        (CXXThisExpr 0x9f0f268 <col:2> 'basic_ios<_CharT, _Traits> *' this))
      (CXXOperatorCallExpr 0x9f0f380 <col:15, col:47> '<dependent type>'
        (UnresolvedLookupExpr 0x9f0f340 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e0a5b0 0x9e0bdb0 0x9e0d020)
        (CallExpr 0x9f0f320 <col:16, col:47> '<dependent type>'
          (UnresolvedLookupExpr 0x9f0f2a0 <col:16, col:40> '<dependent type>' lvalue (ADL) = '1' 0x9e01120)
          (DeclRefExpr 0x9f0f308 <col:42> 'const class std::locale' lvalue ParmVar 0x9f0edc0 '__loc' 'const class std::locale &'))))
    (BinaryOperator 0x9f0f400 <line:167:2, col:15> '<dependent type>' '='
      (MemberExpr 0x9f0f3c8 <col:2> 'const __num_put_type *' lvalue ->_M_num_put 0x9f01340
        (CXXThisExpr 0x9f0f3b8 <col:2> 'basic_ios<_CharT, _Traits> *' this))
      (IntegerLiteral 0x9f0f3e8 <col:15> 'int' 0)))
  (IfStmt 0x9f0f6e0 <line:169:7, line:172:15>
    <<<NULL>>>
    (CallExpr 0x9f0f508 <line:169:11, col:66> '<dependent type>'
      (DeclRefExpr 0x9f0f434 <col:11> 'long (long, long)' lvalue Function 0x9d45c10 '__builtin_expect' 'long (long, long)')
      (CallExpr 0x9f0f4d8 <col:28, col:59> '<dependent type>'
        (UnresolvedLookupExpr 0x9f0f458 <col:28, col:52> '<dependent type>' lvalue (ADL) = '1' 0x9e00b90)
        (DeclRefExpr 0x9f0f4c0 <col:54> 'const class std::locale' lvalue ParmVar 0x9f0edc0 '__loc' 'const class std::locale &'))
      (CXXBoolLiteralExpr 0x9f0f4f8 <col:62> '_Bool' true))
    (BinaryOperator 0x9f0f668 <line:170:2, col:47> '<dependent type>' '='
      (MemberExpr 0x9f0f540 <col:2> 'const __num_get_type *' lvalue ->_M_num_get 0x9f013d0
        (CXXThisExpr 0x9f0f530 <col:2> 'basic_ios<_CharT, _Traits> *' this))
      (CXXOperatorCallExpr 0x9f0f648 <col:15, col:47> '<dependent type>'
        (UnresolvedLookupExpr 0x9f0f608 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e0a5b0 0x9e0bdb0 0x9e0d020)
        (CallExpr 0x9f0f5e8 <col:16, col:47> '<dependent type>'
          (UnresolvedLookupExpr 0x9f0f568 <col:16, col:40> '<dependent type>' lvalue (ADL) = '1' 0x9e01120)
          (DeclRefExpr 0x9f0f5d0 <col:42> 'const class std::locale' lvalue ParmVar 0x9f0edc0 '__loc' 'const class std::locale &'))))
    (BinaryOperator 0x9f0f6c8 <line:172:2, col:15> '<dependent type>' '='
      (MemberExpr 0x9f0f690 <col:2> 'const __num_get_type *' lvalue ->_M_num_get 0x9f013d0
        (CXXThisExpr 0x9f0f680 <col:2> 'basic_ios<_CharT, _Traits> *' this))
      (IntegerLiteral 0x9f0f6b0 <col:15> 'int' 0))))


    class basic_ios : public std::ios_base {
        class basic_ios;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef ctype<char> __ctype_type;
        typedef num_put<char, ostreambuf_iterator<char, std::char_traits<char> > > __num_put_type;
        typedef num_get<char, istreambuf_iterator<char, std::char_traits<char> > > __num_get_type;
    protected:
    protected:
        basic_ostream<char, std::char_traits<char> > *_M_tie;
        mutable char_type _M_fill;
        mutable bool _M_fill_init;
        basic_streambuf<char, std::char_traits<char> > *_M_streambuf;
        const __ctype_type *_M_ctype;
        const __num_put_type *_M_num_put;
        const __num_get_type *_M_num_get;
    public:
    public:
        void *operator void *() const;
        bool operator!() const;
        iostate rdstate() const;
        void clear(iostate __state);
        void setstate(iostate __state);
        void _M_setstate(iostate __state);
        bool good() const;
        bool eof() const;
        bool fail() const;
        bool bad() const;
        iostate exceptions() const;
        void exceptions(iostate __except);
        basic_ios(basic_streambuf<char, std::char_traits<char> > *__sb);
        virtual void ~basic_ios();
        basic_ostream<char, std::char_traits<char> > *tie() const;
        basic_ostream<char, std::char_traits<char> > *tie(basic_ostream<char, std::char_traits<char> > *__tiestr);
        basic_streambuf<char, std::char_traits<char> > *rdbuf() const;
        basic_streambuf<char, std::char_traits<char> > *rdbuf(basic_streambuf<char, std::char_traits<char> > *__sb);
        std::basic_ios<char> &copyfmt(const std::basic_ios<char> &__rhs);
        char_type fill() const;
        char_type fill(char_type __ch);
        std::locale imbue(const std::locale &__loc);
        char narrow(char_type __c, char __dfault) const;
        char_type widen(char __c) const;
    protected:
    protected:
        basic_ios();
        void init(basic_streambuf<char, std::char_traits<char> > *__sb);
        void _M_cache_locale(const std::locale &__loc);
        inline std::basic_ios<char> &operator=(const std::basic_ios<char> &);
        inline basic_ios(const std::basic_ios<char> &);
    };
    class basic_ios : public std::ios_base {
        class basic_ios;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef ctype<wchar_t> __ctype_type;
        typedef num_put<wchar_t, ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_put_type;
        typedef num_get<wchar_t, istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_get_type;
    protected:
    protected:
        basic_ostream<wchar_t, std::char_traits<wchar_t> > *_M_tie;
        mutable char_type _M_fill;
        mutable bool _M_fill_init;
        basic_streambuf<wchar_t, std::char_traits<wchar_t> > *_M_streambuf;
        const __ctype_type *_M_ctype;
        const __num_put_type *_M_num_put;
        const __num_get_type *_M_num_get;
    public:
    public:
        void *operator void *() const;
        bool operator!() const;
        iostate rdstate() const;
        void clear(iostate __state);
        void setstate(iostate __state);
        void _M_setstate(iostate __state);
        bool good() const;
        bool eof() const;
        bool fail() const;
        bool bad() const;
        iostate exceptions() const;
        void exceptions(iostate __except);
        basic_ios(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        virtual void ~basic_ios();
        basic_ostream<wchar_t, std::char_traits<wchar_t> > *tie() const;
        basic_ostream<wchar_t, std::char_traits<wchar_t> > *tie(basic_ostream<wchar_t, std::char_traits<wchar_t> > *__tiestr);
        basic_streambuf<wchar_t, std::char_traits<wchar_t> > *rdbuf() const;
        basic_streambuf<wchar_t, std::char_traits<wchar_t> > *rdbuf(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        std::basic_ios<wchar_t> &copyfmt(const std::basic_ios<wchar_t> &__rhs);
        char_type fill() const;
        char_type fill(char_type __ch);
        std::locale imbue(const std::locale &__loc);
        char narrow(char_type __c, char __dfault) const;
        char_type widen(char __c) const;
    protected:
    protected:
        basic_ios();
        void init(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        void _M_cache_locale(const std::locale &__loc);
        inline std::basic_ios<wchar_t> &operator=(const std::basic_ios<wchar_t> &);
        inline basic_ios(const std::basic_ios<wchar_t> &);
    };
}
namespace std {
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_ostream : virtual public basic_ios<wchar_t, std::char_traits<wchar_t> > {
        class basic_ostream;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef basic_streambuf<wchar_t, std::char_traits<wchar_t> > __streambuf_type;
        typedef basic_ios<wchar_t, std::char_traits<wchar_t> > __ios_type;
        typedef basic_ostream<wchar_t, std::char_traits<wchar_t> > __ostream_type;
        typedef num_put<wchar_t, ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_put_type;
        typedef ctype<wchar_t> __ctype_type;
        basic_ostream(__streambuf_type *__sb);
        virtual void ~basic_ostream();
        class sentry {
            class sentry;
            bool _M_ok;
            basic_ostream<wchar_t, std::char_traits<wchar_t> > &_M_os;
        public:
        public:
            sentry(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__os);
            void ~sentry();
            bool operator _Bool() const;
        };
        ;
        __ostream_type &operator<<(__ostream_type &(*__pf)(__ostream_type &));
        __ostream_type &operator<<(__ios_type &(*__pf)(__ios_type &));
        __ostream_type &operator<<(std::ios_base &(*__pf)(std::ios_base &));
        __ostream_type &operator<<(long __n);
        __ostream_type &operator<<(unsigned long __n);
        __ostream_type &operator<<(bool __n);
        __ostream_type &operator<<(short __n);
        __ostream_type &operator<<(unsigned short __n);
        __ostream_type &operator<<(int __n);
        __ostream_type &operator<<(unsigned int __n);
        __ostream_type &operator<<(long long __n);
        __ostream_type &operator<<(unsigned long long __n);
        __ostream_type &operator<<(double __f);
        __ostream_type &operator<<(float __f);
        __ostream_type &operator<<(long double __f);
        __ostream_type &operator<<(const void *__p);
        __ostream_type &operator<<(__streambuf_type *__sb);
        __ostream_type &put(char_type __c);
        void _M_write(const char_type *__s, streamsize __n);
        __ostream_type &write(const char_type *__s, streamsize __n);
        __ostream_type &flush();
        pos_type tellp();
        __ostream_type &seekp(pos_type);
        __ostream_type &seekp(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_ostream();
        template <typename _ValueT = unsigned long long> __ostream_type &_M_insert(unsigned long long __v)template <typename _ValueT = double> __ostream_type &_M_insert(double __v)template <typename _ValueT = long> __ostream_type &_M_insert(long __v)template <typename _ValueT = long double> __ostream_type &_M_insert(long double __v)template <typename _ValueT = const void *> __ostream_type &_M_insert(const void *__v)template <typename _ValueT = unsigned long> __ostream_type &_M_insert(unsigned long __v)template <typename _ValueT = bool> __ostream_type &_M_insert(bool __v)template <typename _ValueT = long long> __ostream_type &_M_insert(long long __v)template <typename _ValueT> __ostream_type &_M_insert(_ValueT __v);
        inline std::basic_ostream<wchar_t> &operator=(const std::basic_ostream<wchar_t> &);
        inline basic_ostream(const std::basic_ostream<wchar_t> &);
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_ostream : virtual public basic_ios<char, std::char_traits<char> > {
        class basic_ostream;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef basic_streambuf<char, std::char_traits<char> > __streambuf_type;
        typedef basic_ios<char, std::char_traits<char> > __ios_type;
        typedef basic_ostream<char, std::char_traits<char> > __ostream_type;
        typedef num_put<char, ostreambuf_iterator<char, std::char_traits<char> > > __num_put_type;
        typedef ctype<char> __ctype_type;
        basic_ostream(__streambuf_type *__sb);
        virtual void ~basic_ostream();
        class sentry {
            class sentry;
            bool _M_ok;
            basic_ostream<char, std::char_traits<char> > &_M_os;
        public:
        public:
            sentry(basic_ostream<char, std::char_traits<char> > &__os);
            void ~sentry();
            bool operator _Bool() const;
        };
        ;
        __ostream_type &operator<<(__ostream_type &(*__pf)(__ostream_type &));
        __ostream_type &operator<<(__ios_type &(*__pf)(__ios_type &));
        __ostream_type &operator<<(std::ios_base &(*__pf)(std::ios_base &));
        __ostream_type &operator<<(long __n);
        __ostream_type &operator<<(unsigned long __n);
        __ostream_type &operator<<(bool __n);
        __ostream_type &operator<<(short __n);
        __ostream_type &operator<<(unsigned short __n);
        __ostream_type &operator<<(int __n);
        __ostream_type &operator<<(unsigned int __n);
        __ostream_type &operator<<(long long __n);
        __ostream_type &operator<<(unsigned long long __n);
        __ostream_type &operator<<(double __f);
        __ostream_type &operator<<(float __f);
        __ostream_type &operator<<(long double __f);
        __ostream_type &operator<<(const void *__p);
        __ostream_type &operator<<(__streambuf_type *__sb);
        __ostream_type &put(char_type __c);
        void _M_write(const char_type *__s, streamsize __n);
        __ostream_type &write(const char_type *__s, streamsize __n);
        __ostream_type &flush();
        pos_type tellp();
        __ostream_type &seekp(pos_type);
        __ostream_type &seekp(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_ostream();
        template <typename _ValueT = unsigned long long> __ostream_type &_M_insert(unsigned long long __v)template <typename _ValueT = double> __ostream_type &_M_insert(double __v)template <typename _ValueT = long> __ostream_type &_M_insert(long __v)template <typename _ValueT = long double> __ostream_type &_M_insert(long double __v)template <typename _ValueT = const void *> __ostream_type &_M_insert(const void *__v)template <typename _ValueT = unsigned long> __ostream_type &_M_insert(unsigned long __v)template <typename _ValueT = bool> __ostream_type &_M_insert(bool __v)template <typename _ValueT = long long> __ostream_type &_M_insert(long long __v)template <typename _ValueT> __ostream_type &_M_insert(_ValueT __v);
        inline std::basic_ostream<char> &operator=(const std::basic_ostream<char> &);
        inline basic_ostream(const std::basic_ostream<char> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_ostream : virtual public basic_ios<_CharT, _Traits> {
        class basic_ostream;
    public:
    public:
        typedef _CharT char_type;
        typedef typename _Traits::int_type int_type;
        typedef typename _Traits::pos_type pos_type;
        typedef typename _Traits::off_type off_type;
        typedef _Traits traits_type;
        typedef basic_streambuf<_CharT, _Traits> __streambuf_type;
        typedef basic_ios<_CharT, _Traits> __ios_type;
        typedef basic_ostream<_CharT, _Traits> __ostream_type;
        typedef num_put<_CharT, ostreambuf_iterator<_CharT, _Traits> > __num_put_type;
        typedef ctype<_CharT> __ctype_type;
        basic_ostream<_CharT, _Traits>(__streambuf_type *__sb) (CompoundStmt 0x9f18b58 </usr/include/c++/4.6/ostream:84:7, col:27>
  (CallExpr 0x9f18b38 <col:9, col:24> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9f18ae8 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0x9f18ad8 <col:9> 'basic_ostream<_CharT, _Traits> *' this))
    (DeclRefExpr 0x9f18b1c <col:20> '__streambuf_type *' lvalue ParmVar 0x9f16750 '__sb' '__streambuf_type *')))


        virtual void ~basic_ostream<_CharT, _Traits>() (CompoundStmt 0x9f18b70 </usr/include/c++/4.6/ostream:92:24, col:26>)


        class sentry;
        ;
        __ostream_type &operator<<(__ostream_type &(*__pf)(__ostream_type &)) (CompoundStmt 0x9f18bf0 </usr/include/c++/4.6/ostream:110:7, line:115:7>
  (ReturnStmt 0x9f18be0 <line:114:2, col:19>
    (CallExpr 0x9f18bc0 <col:9, col:19> '<dependent type>'
      (DeclRefExpr 0x9f18b80 <col:9> '__ostream_type &(*)(__ostream_type &)' lvalue ParmVar 0x9f16b10 '__pf' '__ostream_type &(*)(__ostream_type &)')
      (UnaryOperator 0x9f18ba8 <col:14, col:15> '<dependent type>' prefix '*'
        (CXXThisExpr 0x9f18b98 <col:15> 'basic_ostream<_CharT, _Traits> *' this)))))


        __ostream_type &operator<<(__ios_type &(*__pf)(__ios_type &)) (CompoundStmt 0x9f18ca0 </usr/include/c++/4.6/ostream:119:7, line:125:7>
  (CallExpr 0x9f18c48 <line:123:2, col:12> '<dependent type>'
    (DeclRefExpr 0x9f18c04 <col:2> '__ios_type &(*)(__ios_type &)' lvalue ParmVar 0x9f16d80 '__pf' '__ios_type &(*)(__ios_type &)')
    (UnaryOperator 0x9f18c30 <col:7, col:8> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9f18c20 <col:8> 'basic_ostream<_CharT, _Traits> *' this)))
  (ReturnStmt 0x9f18c90 <line:124:2, col:10>
    (UnaryOperator 0x9f18c78 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9f18c68 <col:10> 'basic_ostream<_CharT, _Traits> *' this))))


        __ostream_type &operator<<(std::ios_base &(*__pf)(std::ios_base &)) (CompoundStmt 0x9f18d50 </usr/include/c++/4.6/ostream:129:7, line:135:7>
  (CallExpr 0x9f18cf8 <line:133:2, col:12> '<dependent type>'
    (DeclRefExpr 0x9f18cb8 <col:2> 'class std::ios_base &(*)(class std::ios_base &)' lvalue ParmVar 0x9f16f60 '__pf' 'class std::ios_base &(*)(class std::ios_base &)')
    (UnaryOperator 0x9f18ce0 <col:7, col:8> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9f18cd0 <col:8> 'basic_ostream<_CharT, _Traits> *' this)))
  (ReturnStmt 0x9f18d40 <line:134:2, col:10>
    (UnaryOperator 0x9f18d28 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9f18d18 <col:10> 'basic_ostream<_CharT, _Traits> *' this))))


        __ostream_type &operator<<(long __n) (CompoundStmt 0x9f18e00 </usr/include/c++/4.6/ostream:167:7, col:32>
  (ReturnStmt 0x9f18df0 <col:9, col:29>
    (CallExpr 0x9f18dd0 <col:16, col:29> '<dependent type>'
      (UnresolvedMemberExpr 0x9f18d78 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9f18db4 <col:26> 'long' lvalue ParmVar 0x9f17080 '__n' 'long'))))


        __ostream_type &operator<<(unsigned long __n) (CompoundStmt 0x9f18eb0 </usr/include/c++/4.6/ostream:171:7, col:32>
  (ReturnStmt 0x9f18ea0 <col:9, col:29>
    (CallExpr 0x9f18e80 <col:16, col:29> '<dependent type>'
      (UnresolvedMemberExpr 0x9f18e28 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9f18e64 <col:26> 'unsigned long' lvalue ParmVar 0x9f171a0 '__n' 'unsigned long'))))


        __ostream_type &operator<<(bool __n) (CompoundStmt 0x9f18f60 </usr/include/c++/4.6/ostream:175:7, col:32>
  (ReturnStmt 0x9f18f50 <col:9, col:29>
    (CallExpr 0x9f18f30 <col:16, col:29> '<dependent type>'
      (UnresolvedMemberExpr 0x9f18ed8 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9f18f14 <col:26> '_Bool' lvalue ParmVar 0x9f172b0 '__n' '_Bool'))))


        __ostream_type &operator<<(short __n);
        __ostream_type &operator<<(unsigned short __n) (CompoundStmt 0x9f19058 </usr/include/c++/4.6/ostream:182:7, line:186:7>
  (ReturnStmt 0x9f19048 <line:185:2, col:50>
    (CallExpr 0x9f19028 <col:9, col:50> '<dependent type>'
      (UnresolvedMemberExpr 0x9f18f88 <col:9> '<bound member function type>' lvalue)
      (CXXStaticCastExpr 0x9f19010 <col:19, col:49> 'unsigned long' static_cast<unsigned long> <NoOp>
        (ImplicitCastExpr 0x9f19000 <col:46> 'unsigned long' <IntegralCast>
          (ImplicitCastExpr 0x9f18ff0 <col:46> 'unsigned short' <LValueToRValue>
            (DeclRefExpr 0x9f18fc4 <col:46> 'unsigned short' lvalue ParmVar 0x9f174f0 '__n' 'unsigned short')))))))


        __ostream_type &operator<<(int __n);
        __ostream_type &operator<<(unsigned int __n) (CompoundStmt 0x9f19150 </usr/include/c++/4.6/ostream:193:7, line:197:7>
  (ReturnStmt 0x9f19140 <line:196:2, col:50>
    (CallExpr 0x9f19120 <col:9, col:50> '<dependent type>'
      (UnresolvedMemberExpr 0x9f19080 <col:9> '<bound member function type>' lvalue)
      (CXXStaticCastExpr 0x9f19108 <col:19, col:49> 'unsigned long' static_cast<unsigned long> <NoOp>
        (ImplicitCastExpr 0x9f190f8 <col:46> 'unsigned long' <IntegralCast>
          (ImplicitCastExpr 0x9f190e8 <col:46> 'unsigned int' <LValueToRValue>
            (DeclRefExpr 0x9f190bc <col:46> 'unsigned int' lvalue ParmVar 0x9f17730 '__n' 'unsigned int')))))))


        __ostream_type &operator<<(long long __n) (CompoundStmt 0x9f19200 </usr/include/c++/4.6/ostream:202:7, col:32>
  (ReturnStmt 0x9f191f0 <col:9, col:29>
    (CallExpr 0x9f191d0 <col:16, col:29> '<dependent type>'
      (UnresolvedMemberExpr 0x9f19178 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9f191b4 <col:26> 'long long' lvalue ParmVar 0x9f17850 '__n' 'long long'))))


        __ostream_type &operator<<(unsigned long long __n) (CompoundStmt 0x9f192b0 </usr/include/c++/4.6/ostream:206:7, col:32>
  (ReturnStmt 0x9f192a0 <col:9, col:29>
    (CallExpr 0x9f19280 <col:16, col:29> '<dependent type>'
      (UnresolvedMemberExpr 0x9f19228 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9f19264 <col:26> 'unsigned long long' lvalue ParmVar 0x9f17970 '__n' 'unsigned long long'))))


        __ostream_type &operator<<(double __f) (CompoundStmt 0x9f19360 </usr/include/c++/4.6/ostream:211:7, col:32>
  (ReturnStmt 0x9f19350 <col:9, col:29>
    (CallExpr 0x9f19330 <col:16, col:29> '<dependent type>'
      (UnresolvedMemberExpr 0x9f192d8 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9f19314 <col:26> 'double' lvalue ParmVar 0x9f17a90 '__f' 'double'))))


        __ostream_type &operator<<(float __f) (CompoundStmt 0x9f19458 </usr/include/c++/4.6/ostream:215:7, line:219:7>
  (ReturnStmt 0x9f19448 <line:218:2, col:43>
    (CallExpr 0x9f19428 <col:9, col:43> '<dependent type>'
      (UnresolvedMemberExpr 0x9f19388 <col:9> '<bound member function type>' lvalue)
      (CXXStaticCastExpr 0x9f19410 <col:19, col:42> 'double' static_cast<double> <NoOp>
        (ImplicitCastExpr 0x9f19400 <col:39> 'double' <FloatingCast>
          (ImplicitCastExpr 0x9f193f0 <col:39> 'float' <LValueToRValue>
            (DeclRefExpr 0x9f193c4 <col:39> 'float' lvalue ParmVar 0x9f17bb0 '__f' 'float')))))))


        __ostream_type &operator<<(long double __f) (CompoundStmt 0x9f19508 </usr/include/c++/4.6/ostream:223:7, col:32>
  (ReturnStmt 0x9f194f8 <col:9, col:29>
    (CallExpr 0x9f194d8 <col:16, col:29> '<dependent type>'
      (UnresolvedMemberExpr 0x9f19480 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9f194bc <col:26> 'long double' lvalue ParmVar 0x9f17cd0 '__f' 'long double'))))


        __ostream_type &operator<<(const void *__p) (CompoundStmt 0x9f195b8 </usr/include/c++/4.6/ostream:227:7, col:32>
  (ReturnStmt 0x9f195a8 <col:9, col:29>
    (CallExpr 0x9f19588 <col:16, col:29> '<dependent type>'
      (UnresolvedMemberExpr 0x9f19530 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9f1956c <col:26> 'const void *' lvalue ParmVar 0x9f17df0 '__p' 'const void *'))))


        __ostream_type &operator<<(__streambuf_type *__sb);
        __ostream_type &put(char_type __c);
        void _M_write(const char_type *__s, streamsize __n) (CompoundStmt 0x9f19850 </usr/include/c++/4.6/ostream:289:7, line:293:7>
  (DeclStmt 0x9f19710 <line:290:2, col:57>
    0x9f195e0 "const streamsize __put =
      (CallExpr 0x9f196e8 <col:27, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f19680 <col:27, col:42> '<dependent type>' lvalue
          (CallExpr 0x9f19660 <col:27, col:39> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f19628 <col:27, col:33> '<dependent type>' lvalue
              (CXXThisExpr 0x9f19618 <col:27> 'basic_ostream<_CharT, _Traits> *' this))))
        (DeclRefExpr 0x9f196b4 <col:48> 'const char_type *' lvalue ParmVar 0x9f18180 '__s' 'const char_type *')
        (DeclRefExpr 0x9f196cc <col:53> 'streamsize':'int' lvalue ParmVar 0x9f181c0 '__n' 'streamsize':'int'))")
  (IfStmt 0x9f19830 <line:291:2, line:292:35>
    <<<NULL>>>
    (BinaryOperator 0x9f19770 <line:291:6, col:15> '_Bool' '!='
      (ImplicitCastExpr 0x9f19750 <col:6> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0x9f19720 <col:6> 'const streamsize':'const int' lvalue Var 0x9f195e0 '__put' 'const streamsize':'const int'))
      (ImplicitCastExpr 0x9f19760 <col:15> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0x9f19738 <col:15> 'streamsize':'int' lvalue ParmVar 0x9f181c0 '__n' 'streamsize':'int')))
    (CallExpr 0x9f19810 <line:292:4, col:35> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f19798 <col:4, col:10> '<dependent type>' lvalue
        (CXXThisExpr 0x9f19788 <col:4> 'basic_ostream<_CharT, _Traits> *' this))
      (DeclRefExpr 0x9f197ec <col:19, col:29> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11390 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
    <<<NULL>>>))


        __ostream_type &write(const char_type *__s, streamsize __n);
        __ostream_type &flush();
        pos_type tellp();
        __ostream_type &seekp(pos_type);
        __ostream_type &seekp(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_ostream<_CharT, _Traits>() (CompoundStmt 0x9f198e8 </usr/include/c++/4.6/ostream:363:7, col:24>
  (CallExpr 0x9f198c8 <col:9, col:21> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9f19878 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0x9f19868 <col:9> 'basic_ostream<_CharT, _Traits> *' this))
    (IntegerLiteral 0x9f198b0 <col:20> 'int' 0)))


        template <typename _ValueT> __ostream_type &_M_insert(_ValueT __v);
    };
    class sentry {
        class sentry;
        bool _M_ok;
        basic_ostream<_CharT, _Traits> &_M_os;
    public:
    public:
        sentry(basic_ostream<_CharT, _Traits> &__os);
        void ~sentry() (CompoundStmt 0x9f1a700 </usr/include/c++/4.6/ostream:407:7, line:415:7>
  (IfStmt 0x9f1a6e0 <line:409:2, line:414:4>
    <<<NULL>>>
    (BinaryOperator 0x9f1a390 <line:409:6, col:69> '_Bool' '&&'
      (CXXUnresolvedConstructExpr 0x9f1a298 <col:6, col:44> '_Bool'
        (CXXOperatorCallExpr 0x9f1a270 <col:11, col:37> '<dependent type>'
          (UnresolvedLookupExpr 0x9f1a230 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e0a5b0 0x9e0bdb0 0x9e0d020)
          (CallExpr 0x9f1a1d0 <col:11, col:23> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f1a198 <col:11, col:17> '<dependent type>' lvalue
              (MemberExpr 0x9f1a178 <col:11> 'basic_ostream<_CharT, _Traits>':'basic_ostream<_CharT, _Traits>' lvalue ->_M_os 0x9f19d50
                (CXXThisExpr 0x9f1a168 <col:11> 'class std::basic_ostream::sentry *' this))))
          (DeclRefExpr 0x9f1a20c <col:27, col:37> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9e11160 'unitbuf' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
      (UnaryOperator 0x9f1a378 <col:49, col:69> '_Bool' prefix '!'
        (CallExpr 0x9f1a358 <col:50, col:69> '_Bool'
          (ImplicitCastExpr 0x9f1a348 <col:50> '_Bool (*)(void) throw()' <FunctionToPointerDecay>
            (DeclRefExpr 0x9f1a2ec <col:50> '_Bool (void) throw()' lvalue Function 0x9c29080 'uncaught_exception' '_Bool (void) throw()')))))
    (CompoundStmt 0x9f1a6c8 <line:410:4, line:414:4>
      (IfStmt 0x9f1a6a8 <line:412:6, line:413:39>
        <<<NULL>>>
        (BinaryOperator 0x9f1a5c8 <line:412:10, col:56> '<dependent type>' '&&'
          (CallExpr 0x9f1a410 <col:10, col:22> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f1a3d8 <col:10, col:16> '<dependent type>' lvalue
              (MemberExpr 0x9f1a3b8 <col:10> 'basic_ostream<_CharT, _Traits>':'basic_ostream<_CharT, _Traits>' lvalue ->_M_os 0x9f19d50
                (CXXThisExpr 0x9f1a3a8 <col:10> 'class std::basic_ostream::sentry *' this))))
          (CXXOperatorCallExpr 0x9f1a5a0 <col:27, col:56> '<dependent type>'
            (UnresolvedLookupExpr 0x9f1a540 <col:52, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30 0x9d5e270 0x9d5ece0 0x9d5f520 0x9d5fa90 0x9e73300)
            (CallExpr 0x9f1a4f0 <col:27, col:50> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9f1a4b8 <col:27, col:42> '<dependent type>' lvalue
                (CallExpr 0x9f1a498 <col:27, col:39> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9f1a460 <col:27, col:33> '<dependent type>' lvalue
                    (MemberExpr 0x9f1a440 <col:27> 'basic_ostream<_CharT, _Traits>':'basic_ostream<_CharT, _Traits>' lvalue ->_M_os 0x9f19d50
                      (CXXThisExpr 0x9f1a430 <col:27> 'class std::basic_ostream::sentry *' this))))))
            (UnaryOperator 0x9f1a528 <col:55, col:56> 'int' prefix '-'
              (IntegerLiteral 0x9f1a510 <col:56> 'int' 1))))
        (CallExpr 0x9f1a688 <line:413:8, col:39> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9f1a610 <col:8, col:14> '<dependent type>' lvalue
            (MemberExpr 0x9f1a5f0 <col:8> 'basic_ostream<_CharT, _Traits>':'basic_ostream<_CharT, _Traits>' lvalue ->_M_os 0x9f19d50
              (CXXThisExpr 0x9f1a5e0 <col:8> 'class std::basic_ostream::sentry *' this)))
          (DeclRefExpr 0x9f1a664 <col:23, col:33> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11390 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>))


        bool operator _Bool() const (CompoundStmt 0x9f1a778 </usr/include/c++/4.6/ostream:428:7, col:23>
  (ReturnStmt 0x9f1a768 <col:9, col:16>
    (MemberExpr 0x9f1a748 <col:16> 'const _Bool' lvalue ->_M_ok 0x9f19bf0
      (CXXThisExpr 0x9f1a738 <col:16> 'const class std::basic_ostream::sentry *' this))))


    };
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> inline basic_ostream<wchar_t, std::char_traits<wchar_t> > &operator<<(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__out, wchar_t __c)template <typename _CharT = char, typename _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, char __c)template <typename _CharT, typename _Traits> inline basic_ostream<_CharT, _Traits> &operator<<(basic_ostream<_CharT, _Traits> &__out, _CharT __c) (CompoundStmt 0x9f1ad28 </usr/include/c++/4.6/ostream:451:5, col:48>
  (ReturnStmt 0x9f1ad18 <col:7, col:45>
    (CallExpr 0x9f1acf0 <col:14, col:45> '<dependent type>'
      (UnresolvedLookupExpr 0x9f1ac10 <col:14> '<overloaded function type>' lvalue (ADL) = '1' 0x9c6c440)
      (DeclRefExpr 0x9f1ac44 <col:31> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9f1aa50 '__out' 'basic_ostream<_CharT, _Traits> &')
      (CXXOperatorCallExpr 0x9f1acb8 <col:38, col:39> '<dependent type>'
        (UnresolvedLookupExpr 0x9f1ac78 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e0a5b0 0x9e0bdb0 0x9e0d020)
        (DeclRefExpr 0x9f1ac5c <col:39> '_CharT' lvalue ParmVar 0x9f1aa90 '__c' '_CharT'))
      (IntegerLiteral 0x9f1acd8 <col:44> 'int' 1))))

;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> inline basic_ostream<wchar_t, std::char_traits<wchar_t> > &operator<<(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__out, char __c)template <typename _CharT = char, typename _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, char __c)template <typename _CharT, typename _Traits> inline basic_ostream<_CharT, _Traits> &operator<<(basic_ostream<_CharT, _Traits> &__out, char __c) (CompoundStmt 0x9f1b2f0 </usr/include/c++/4.6/ostream:456:5, col:43>
  (ReturnStmt 0x9f1b2e0 <col:7, col:40>
    (ParenExpr 0x9f1b2c8 <col:14, col:40> '<dependent type>'
      (CXXOperatorCallExpr 0x9f1b2a0 <col:15, col:39> '<dependent type>'
        (UnresolvedLookupExpr 0x9f1b260 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f1b190 0x9f1abe0 0x9d66d00)
        (DeclRefExpr 0x9f1b1c0 <col:15> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9f1b000 '__out' 'basic_ostream<_CharT, _Traits> &')
        (CallExpr 0x9f1b240 <col:24, col:39> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9f1b1f0 <col:24, col:30> '<dependent type>' lvalue
            (DeclRefExpr 0x9f1b1d8 <col:24> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9f1b000 '__out' 'basic_ostream<_CharT, _Traits> &'))
          (DeclRefExpr 0x9f1b224 <col:36> 'char' lvalue ParmVar 0x9f1b040 '__c' 'char'))))))

;
    template <class _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, char __c)template <class _Traits> inline basic_ostream<char, _Traits> &operator<<(basic_ostream<char, _Traits> &__out, char __c) (CompoundStmt 0x9f1b880 </usr/include/c++/4.6/ostream:462:5, col:48>
  (ReturnStmt 0x9f1b870 <col:7, col:45>
    (CallExpr 0x9f1b848 <col:14, col:45> '<dependent type>'
      (UnresolvedLookupExpr 0x9f1b7b0 <col:14> '<overloaded function type>' lvalue (ADL) = '1' 0x9c6c440)
      (DeclRefExpr 0x9f1b7e4 <col:31> 'basic_ostream<char, _Traits>' lvalue ParmVar 0x9f1b5f0 '__out' 'basic_ostream<char, _Traits> &')
      (UnaryOperator 0x9f1b818 <col:38, col:39> 'char *' prefix '&'
        (DeclRefExpr 0x9f1b7fc <col:39> 'char' lvalue ParmVar 0x9f1b630 '__c' 'char'))
      (IntegerLiteral 0x9f1b830 <col:44> 'int' 1))))

;
    template <class _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, signed char __c)template <class _Traits> inline basic_ostream<char, _Traits> &operator<<(basic_ostream<char, _Traits> &__out, signed char __c) (CompoundStmt 0x9f1bde8 </usr/include/c++/4.6/ostream:468:5, col:49>
  (ReturnStmt 0x9f1bdd8 <col:7, col:46>
    (ParenExpr 0x9f1bdc0 <col:14, col:46> '<dependent type>'
      (CXXOperatorCallExpr 0x9f1bd98 <col:15, col:45> '<dependent type>'
        (UnresolvedLookupExpr 0x9f1bd50 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f1bcb0 0x9f1b780 0x9f1b190 0x9f1abe0 0x9d66d00)
        (DeclRefExpr 0x9f1bce0 <col:15> 'basic_ostream<char, _Traits>' lvalue ParmVar 0x9f1bb10 '__out' 'basic_ostream<char, _Traits> &')
        (CXXStaticCastExpr 0x9f1bd38 <col:24, col:45> 'char' static_cast<char> <NoOp>
          (ImplicitCastExpr 0x9f1bd28 <col:42> 'char' <IntegralCast>
            (ImplicitCastExpr 0x9f1bd18 <col:42> 'signed char' <LValueToRValue>
              (DeclRefExpr 0x9f1bcf8 <col:42> 'signed char' lvalue ParmVar 0x9f1bb60 '__c' 'signed char'))))))))

;
    template <class _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, unsigned char __c)template <class _Traits> inline basic_ostream<char, _Traits> &operator<<(basic_ostream<char, _Traits> &__out, unsigned char __c) (CompoundStmt 0x9f1c348 </usr/include/c++/4.6/ostream:473:5, col:49>
  (ReturnStmt 0x9f1c338 <col:7, col:46>
    (ParenExpr 0x9f1c320 <col:14, col:46> '<dependent type>'
      (CXXOperatorCallExpr 0x9f1c2f8 <col:15, col:45> '<dependent type>'
        (UnresolvedLookupExpr 0x9f1c2b0 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f1c210 0x9f1bcb0 0x9f1b780 0x9f1b190 0x9f1abe0 0x9d66d00)
        (DeclRefExpr 0x9f1c240 <col:15> 'basic_ostream<char, _Traits>' lvalue ParmVar 0x9f1c070 '__out' 'basic_ostream<char, _Traits> &')
        (CXXStaticCastExpr 0x9f1c298 <col:24, col:45> 'char' static_cast<char> <NoOp>
          (ImplicitCastExpr 0x9f1c288 <col:42> 'char' <IntegralCast>
            (ImplicitCastExpr 0x9f1c278 <col:42> 'unsigned char' <LValueToRValue>
              (DeclRefExpr 0x9f1c258 <col:42> 'unsigned char' lvalue ParmVar 0x9f1c0c0 '__c' 'unsigned char'))))))))

;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> inline basic_ostream<wchar_t, std::char_traits<wchar_t> > &operator<<(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__out, const wchar_t *__s)template <typename _CharT = char, typename _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, const char *__s)template <typename _CharT, typename _Traits> inline basic_ostream<_CharT, _Traits> &operator<<(basic_ostream<_CharT, _Traits> &__out, const _CharT *__s) (CompoundStmt 0x9f1ca70 </usr/include/c++/4.6/ostream:493:5, line:500:5>
  (IfStmt 0x9f1ca28 <line:494:7, line:498:50>
    <<<NULL>>>
    (UnaryOperator 0x9f1c828 <line:494:11, col:12> '<dependent type>' prefix '!'
      (DeclRefExpr 0x9f1c810 <col:12> 'const _CharT *' lvalue ParmVar 0x9f1c690 '__s' 'const _CharT *'))
    (CallExpr 0x9f1c8d0 <line:495:2, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f1c858 <col:2, col:8> '<dependent type>' lvalue
        (DeclRefExpr 0x9f1c83c <col:2> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9f1c620 '__out' 'basic_ostream<_CharT, _Traits> &'))
      (DeclRefExpr 0x9f1c8ac <col:17, col:27> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11390 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
    (CallExpr 0x9f1ca00 <line:497:2, line:498:50> '<dependent type>'
      (UnresolvedLookupExpr 0x9f1c8f0 <line:497:2> '<overloaded function type>' lvalue (ADL) = '1' 0x9c6c440)
      (DeclRefExpr 0x9f1c924 <col:19> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9f1c620 '__out' 'basic_ostream<_CharT, _Traits> &')
      (DeclRefExpr 0x9f1c93c <col:26> 'const _CharT *' lvalue ParmVar 0x9f1c690 '__s' 'const _CharT *')
      (CXXStaticCastExpr 0x9f1c9e8 <line:498:5, col:49> 'streamsize':'int' static_cast<streamsize> <Dependent>
        (CallExpr 0x9f1c9c0 <col:29, col:48> '<dependent type>'
          (DependentScopeDeclRefExpr 0x9f1c980 <col:29, col:38> '<dependent type>' lvalue)
          (DeclRefExpr 0x9f1c9a4 <col:45> 'const _CharT *' lvalue ParmVar 0x9f1c690 '__s' 'const _CharT *')))))
  (ReturnStmt 0x9f1ca60 <line:499:7, col:14>
    (DeclRefExpr 0x9f1ca44 <col:14> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9f1c620 '__out' 'basic_ostream<_CharT, _Traits> &')))

;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> basic_ostream<wchar_t, std::char_traits<wchar_t> > &operator<<(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__out, const char *__s)template <typename _CharT = char, typename _Traits = std::char_traits<char>> basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, const char *__s)template <typename _CharT, typename _Traits> basic_ostream<_CharT, _Traits> &operator<<(basic_ostream<_CharT, _Traits> &__out, const char *__s);
    template <class _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, const char *__s)template <class _Traits> inline basic_ostream<char, _Traits> &operator<<(basic_ostream<char, _Traits> &__out, const char *__s) (CompoundStmt 0x9f1fe70 </usr/include/c++/4.6/ostream:510:5, line:517:5>
  (IfStmt 0x9f1fe28 <line:511:7, line:515:50>
    <<<NULL>>>
    (UnaryOperator 0x9f1fc28 <line:511:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9f1fc18 <col:12> '_Bool' <PointerToBoolean>
        (ImplicitCastExpr 0x9f1fc08 <col:12> 'const char *' <LValueToRValue>
          (DeclRefExpr 0x9f1fbf0 <col:12> 'const char *' lvalue ParmVar 0x9f1fa70 '__s' 'const char *'))))
    (CallExpr 0x9f1fcd0 <line:512:2, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f1fc58 <col:2, col:8> '<dependent type>' lvalue
        (DeclRefExpr 0x9f1fc3c <col:2> 'basic_ostream<char, _Traits>' lvalue ParmVar 0x9f1fa20 '__out' 'basic_ostream<char, _Traits> &'))
      (DeclRefExpr 0x9f1fcac <col:17, col:27> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11390 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
    (CallExpr 0x9f1fe00 <line:514:2, line:515:50> '<dependent type>'
      (UnresolvedLookupExpr 0x9f1fcf0 <line:514:2> '<overloaded function type>' lvalue (ADL) = '1' 0x9c6c440)
      (DeclRefExpr 0x9f1fd24 <col:19> 'basic_ostream<char, _Traits>' lvalue ParmVar 0x9f1fa20 '__out' 'basic_ostream<char, _Traits> &')
      (DeclRefExpr 0x9f1fd3c <col:26> 'const char *' lvalue ParmVar 0x9f1fa70 '__s' 'const char *')
      (CXXStaticCastExpr 0x9f1fde8 <line:515:5, col:49> 'streamsize':'int' static_cast<streamsize> <Dependent>
        (CallExpr 0x9f1fdc0 <col:29, col:48> '<dependent type>'
          (DependentScopeDeclRefExpr 0x9f1fd80 <col:29, col:38> '<dependent type>' lvalue)
          (DeclRefExpr 0x9f1fda4 <col:45> 'const char *' lvalue ParmVar 0x9f1fa70 '__s' 'const char *')))))
  (ReturnStmt 0x9f1fe60 <line:516:7, col:14>
    (DeclRefExpr 0x9f1fe44 <col:14> 'basic_ostream<char, _Traits>' lvalue ParmVar 0x9f1fa20 '__out' 'basic_ostream<char, _Traits> &')))

;
    template <class _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, const signed char *__s)template <class _Traits> inline basic_ostream<char, _Traits> &operator<<(basic_ostream<char, _Traits> &__out, const signed char *__s) (CompoundStmt 0x9f20400 </usr/include/c++/4.6/ostream:523:5, col:61>
  (ReturnStmt 0x9f203f0 <col:7, col:58>
    (ParenExpr 0x9f203d8 <col:14, col:58> '<dependent type>'
      (CXXOperatorCallExpr 0x9f203b0 <col:15, col:57> '<dependent type>'
        (UnresolvedLookupExpr 0x9f20358 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f202c0 0x9f1fbc0 0x9f1f780 0x9f1c7e0 0x9f1c210 0x9f1bcb0 0x9f1b780 0x9f1b190 0x9f1abe0 0x9d66d00)
        (DeclRefExpr 0x9f202f0 <col:15> 'basic_ostream<char, _Traits>' lvalue ParmVar 0x9f20100 '__out' 'basic_ostream<char, _Traits> &')
        (CXXReinterpretCastExpr 0x9f20340 <col:24, col:57> 'const char *' reinterpret_cast<const char *> <BitCast>
          (ImplicitCastExpr 0x9f20330 <col:54> 'const signed char *' <LValueToRValue>
            (DeclRefExpr 0x9f20308 <col:54> 'const signed char *' lvalue ParmVar 0x9f20170 '__s' 'const signed char *')))))))

;
    template <class _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, const unsigned char *__s)template <class _Traits> inline basic_ostream<char, _Traits> &operator<<(basic_ostream<char, _Traits> &__out, const unsigned char *__s) (CompoundStmt 0x9f20998 </usr/include/c++/4.6/ostream:528:5, col:61>
  (ReturnStmt 0x9f20988 <col:7, col:58>
    (ParenExpr 0x9f20970 <col:14, col:58> '<dependent type>'
      (CXXOperatorCallExpr 0x9f20948 <col:15, col:57> '<dependent type>'
        (UnresolvedLookupExpr 0x9f208e8 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f20850 0x9f202c0 0x9f1fbc0 0x9f1f780 0x9f1c7e0 0x9f1c210 0x9f1bcb0 0x9f1b780 0x9f1b190 0x9f1abe0 0x9d66d00)
        (DeclRefExpr 0x9f20880 <col:15> 'basic_ostream<char, _Traits>' lvalue ParmVar 0x9f20690 '__out' 'basic_ostream<char, _Traits> &')
        (CXXReinterpretCastExpr 0x9f208d0 <col:24, col:57> 'const char *' reinterpret_cast<const char *> <BitCast>
          (ImplicitCastExpr 0x9f208c0 <col:54> 'const unsigned char *' <LValueToRValue>
            (DeclRefExpr 0x9f20898 <col:54> 'const unsigned char *' lvalue ParmVar 0x9f20700 '__s' 'const unsigned char *')))))))

;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> inline basic_ostream<wchar_t, std::char_traits<wchar_t> > &endl(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__os)template <typename _CharT = char, typename _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &endl(basic_ostream<char, std::char_traits<char> > &__os)template <typename _CharT, typename _Traits> inline basic_ostream<_CharT, _Traits> &endl(basic_ostream<_CharT, _Traits> &__os) (CompoundStmt 0x9f20f48 </usr/include/c++/4.6/ostream:543:5, col:49>
  (ReturnStmt 0x9f20f38 <col:7, col:46>
    (CallExpr 0x9f20f18 <col:14, col:46> '<dependent type>'
      (UnresolvedLookupExpr 0x9f20df0 <col:14> '<overloaded function type>' lvalue (ADL) = '1' empty)
      (CallExpr 0x9f20ef8 <col:20, col:45> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f20e38 <col:20, col:25> '<dependent type>' lvalue
          (DeclRefExpr 0x9f20e20 <col:20> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9f20c70 '__os' 'basic_ostream<_CharT, _Traits> &'))
        (CallExpr 0x9f20ed8 <col:29, col:44> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9f20e88 <col:29, col:34> '<dependent type>' lvalue
            (DeclRefExpr 0x9f20e6c <col:29> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9f20c70 '__os' 'basic_ostream<_CharT, _Traits> &'))
          (CharacterLiteral 0x9f20ec0 <col:40> 'char'10))))))

;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> inline basic_ostream<wchar_t, std::char_traits<wchar_t> > &ends(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__os)template <typename _CharT = char, typename _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &ends(basic_ostream<char, std::char_traits<char> > &__os)template <typename _CharT, typename _Traits> inline basic_ostream<_CharT, _Traits> &ends(basic_ostream<_CharT, _Traits> &__os) (CompoundStmt 0x9f21420 </usr/include/c++/4.6/ostream:554:5, col:34>
  (ReturnStmt 0x9f21410 <col:7, col:31>
    (CallExpr 0x9f213f0 <col:14, col:31> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f21398 <col:14, col:19> '<dependent type>' lvalue
        (DeclRefExpr 0x9f2137c <col:14> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9f21220 '__os' 'basic_ostream<_CharT, _Traits> &'))
      (CXXUnresolvedConstructExpr 0x9f213d8 <col:23, col:30> '_CharT'))))

;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> inline basic_ostream<wchar_t, std::char_traits<wchar_t> > &flush(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__os)template <typename _CharT = char, typename _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &flush(basic_ostream<char, std::char_traits<char> > &__os)template <typename _CharT, typename _Traits> inline basic_ostream<_CharT, _Traits> &flush(basic_ostream<_CharT, _Traits> &__os) (CompoundStmt 0x9f218e0 </usr/include/c++/4.6/ostream:564:5, col:28>
  (ReturnStmt 0x9f218d0 <col:7, col:25>
    (CallExpr 0x9f218b0 <col:14, col:25> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f21878 <col:14, col:19> '<dependent type>' lvalue
        (DeclRefExpr 0x9f2185c <col:14> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9f21700 '__os' 'basic_ostream<_CharT, _Traits> &')))))

;
}
namespace std {
    basic_ostream<_CharT, _Traits>::class sentry::sentry(basic_ostream<_CharT, _Traits> &__os) : _M_ok((CXXBoolLiteralExpr 0x9f22018 </usr/include/c++/4.6/bits/ostream.tcc:49:13> '_Bool' false)
), _M_os((DeclRefExpr 0x9f22068 </usr/include/c++/4.6/bits/ostream.tcc:49:27> 'basic_ostream<_CharT, _Traits>':'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9f21ef0 '__os' 'basic_ostream<_CharT, _Traits> &')
) (CompoundStmt 0x9f22438 </usr/include/c++/4.6/bits/ostream.tcc:50:5, line:59:5>
  (IfStmt 0x9f22280 <line:52:7, line:53:20>
    <<<NULL>>>
    (BinaryOperator 0x9f221a0 <line:52:11, col:35> '<dependent type>' '&&'
      (CallExpr 0x9f22110 <col:11, col:20> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f220d8 <col:11, col:16> '<dependent type>' lvalue
          (DeclRefExpr 0x9f220c0 <col:11> 'basic_ostream<_CharT, _Traits>':'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9f21ef0 '__os' 'basic_ostream<_CharT, _Traits> &')))
      (CallExpr 0x9f22180 <col:25, col:35> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f22148 <col:25, col:30> '<dependent type>' lvalue
          (DeclRefExpr 0x9f2212c <col:25> 'basic_ostream<_CharT, _Traits>':'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9f21ef0 '__os' 'basic_ostream<_CharT, _Traits> &'))))
    (CallExpr 0x9f22260 <line:53:2, col:20> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f22228 <col:2, col:14> '<dependent type>' lvalue
        (CallExpr 0x9f22208 <col:2, col:11> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9f221d0 <col:2, col:7> '<dependent type>' lvalue
            (DeclRefExpr 0x9f221b8 <col:2> 'basic_ostream<_CharT, _Traits>':'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9f21ef0 '__os' 'basic_ostream<_CharT, _Traits> &')))))
    <<<NULL>>>)
  (IfStmt 0x9f22418 <line:55:7, line:58:33>
    <<<NULL>>>
    (CallExpr 0x9f222f0 <line:55:11, col:21> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f222b8 <col:11, col:16> '<dependent type>' lvalue
        (DeclRefExpr 0x9f2229c <col:11> 'basic_ostream<_CharT, _Traits>':'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9f21ef0 '__os' 'basic_ostream<_CharT, _Traits> &')))
    (BinaryOperator 0x9f22350 <line:56:2, col:10> '<dependent type>' '='
      (MemberExpr 0x9f22320 <col:2> '_Bool' lvalue ->_M_ok 0x9f19bf0
        (CXXThisExpr 0x9f22310 <col:2> 'class std::basic_ostream::sentry *' this))
      (CXXBoolLiteralExpr 0x9f22340 <col:10> '_Bool' true))
    (CallExpr 0x9f223f8 <line:58:2, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f22380 <col:2, col:7> '<dependent type>' lvalue
        (DeclRefExpr 0x9f22368 <col:2> 'basic_ostream<_CharT, _Traits>':'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9f21ef0 '__os' 'basic_ostream<_CharT, _Traits> &'))
      (DeclRefExpr 0x9f223d4 <col:16, col:26> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11450 'failbit' 'const iostate':'const enum std::_Ios_Iostate'))))


    template <typename _ValueT> basic_ostream<_CharT, _Traits> &_M_insert(_ValueT __v) (CompoundStmt 0x9f233c8 </usr/include/c++/4.6/bits/ostream.tcc:66:7, line:88:7>
  (DeclStmt 0x9f22b70 <line:67:2, col:22>
    0x9f22af0 "std::basic_ostream::sentry __cerb =
      (ParenListExpr 0x9f22b50 <col:15, col:21> 'class std::basic_ostream::sentry'
        (UnaryOperator 0x9f22b38 <col:16, col:17> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9f22b28 <col:17> 'basic_ostream<_CharT, _Traits> *' this)))")
  (IfStmt 0x9f23370 <line:68:2, line:86:4>
    <<<NULL>>>
    (DeclRefExpr 0x9f22b80 <line:68:6> 'class std::basic_ostream::sentry' lvalue Var 0x9f22af0 '__cerb' 'class std::basic_ostream::sentry')
    (CompoundStmt 0x9f23348 <line:69:4, line:86:4>
      (DeclStmt 0x9f22c58 <line:70:6, col:49>
        0x9f22bd0 "ios_base::iostate __err =
          (ImplicitCastExpr 0x9f22c48 <col:32, col:42> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9f22c24 <col:32, col:42> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e114b0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0x9f23060 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/ostream.tcc:76:8>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9f22c68 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9f23048 </usr/include/c++/4.6/bits/ostream.tcc:72:8, line:76:8>
          (DeclStmt 0x9f22db8 <line:73:3, col:63>
            0x9f22ce0 "const __num_put_type &__np =
              (CallExpr 0x9f22d98 <col:32, col:62> '<dependent type>'
                (UnresolvedLookupExpr 0x9f22d18 <col:32> '<overloaded function type>' lvalue (ADL) = '1' 0x9f00270)
                (CXXDependentScopeMemberExpr 0x9f22d60 <col:46, col:52> '<dependent type>' lvalue
                  (CXXThisExpr 0x9f22d50 <col:46> 'basic_ostream<_CharT, _Traits> *' this)))")
          (IfStmt 0x9f23028 <line:74:3, line:75:24>
            <<<NULL>>>
            (CallExpr 0x9f22f50 <line:74:7, col:56> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9f22f18 <col:7, col:49> '<dependent type>' lvalue
                (CallExpr 0x9f22ee8 <col:7, col:47> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9f22de0 <col:7, col:12> '<dependent type>' lvalue
                    (DeclRefExpr 0x9f22dc8 <col:7> 'const __num_put_type':'const num_put<_CharT, ostreambuf_iterator<_CharT, _Traits> >' lvalue Var 0x9f22ce0 '__np' 'const __num_put_type &'))
                  (UnaryOperator 0x9f22e28 <col:16, col:17> '<dependent type>' prefix '*'
                    (CXXThisExpr 0x9f22e18 <col:17> 'basic_ostream<_CharT, _Traits> *' this))
                  (UnaryOperator 0x9f22e50 <col:23, col:24> '<dependent type>' prefix '*'
                    (CXXThisExpr 0x9f22e40 <col:24> 'basic_ostream<_CharT, _Traits> *' this))
                  (CallExpr 0x9f22eb0 <col:30, col:41> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9f22e78 <col:30, col:36> '<dependent type>' lvalue
                      (CXXThisExpr 0x9f22e68 <col:30> 'basic_ostream<_CharT, _Traits> *' this)))
                  (DeclRefExpr 0x9f22ecc <col:44> '_ValueT' lvalue ParmVar 0x9f22830 '__v' '_ValueT'))))
            (CXXOperatorCallExpr 0x9f23000 <line:75:5, col:24> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x9f22ff0 <col:11, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9f22fd8 <col:11, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9e0fd60 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x9f22f6c <col:5> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f22bd0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0x9f22fc8 <col:14, col:24> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x9f22fa4 <col:14, col:24> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11390 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0x9f23160 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:81:8>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9f23080 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9f23148 </usr/include/c++/4.6/bits/ostream.tcc:78:8, line:81:8>
          (CallExpr 0x9f23118 <line:79:3, col:37> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f230a0 <col:3, col:9> '<dependent type>' lvalue
              (CXXThisExpr 0x9f23090 <col:3> 'basic_ostream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9f230f4 <col:21, col:31> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11390 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x9f23138 <line:80:26>))
        <<<NULL>>>)
      (IfStmt 0x9f23250 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:83:47>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9f23180 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9f23238 </usr/include/c++/4.6/bits/ostream.tcc:83:8, col:47>
          (CallExpr 0x9f23218 <col:10, col:44> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f231a0 <col:10, col:16> '<dependent type>' lvalue
              (CXXThisExpr 0x9f23190 <col:10> 'basic_ostream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9f231f4 <col:28, col:38> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11390 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0x9f23328 <line:84:6, line:85:28>
        <<<NULL>>>
        (ImplicitCastExpr 0x9f23298 <line:84:10> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0x9f23288 <col:10> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9f2326c <col:10> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f22bd0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0x9f23308 <line:85:8, col:28> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9f232b8 <col:8, col:14> '<dependent type>' lvalue
            (CXXThisExpr 0x9f232a8 <col:8> 'basic_ostream<_CharT, _Traits> *' this))
          (DeclRefExpr 0x9f232ec <col:23> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f22bd0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9f233b8 <line:87:2, col:10>
    (UnaryOperator 0x9f233a0 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9f23390 <col:10> 'basic_ostream<_CharT, _Traits> *' this))))

;
    basic_ostream<_CharT, _Traits> &operator<<(short __n) (CompoundStmt 0x9f23ed8 </usr/include/c++/4.6/bits/ostream.tcc:94:5, line:102:5>
  (DeclStmt 0x9f23b38 <line:97:7, col:75>
    0x9f239f0 "const ios_base::fmtflags __fmt =
      (CXXOperatorCallExpr 0x9f23b10 <col:40, col:66> '<dependent type>'
        (UnresolvedLookupExpr 0x9f23ad0 <col:54, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e0a5b0 0x9e0bdb0 0x9e0d020)
        (CallExpr 0x9f23a70 <col:40, col:52> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9f23a38 <col:40, col:46> '<dependent type>' lvalue
            (CXXThisExpr 0x9f23a28 <col:40> 'basic_ostream<_CharT, _Traits> *' this)))
        (DeclRefExpr 0x9f23aac <col:56, col:66> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9e11280 'basefield' 'const fmtflags':'const enum std::_Ios_Fmtflags'))")
  (IfStmt 0x9f23eb8 <line:98:7, line:101:41>
    <<<NULL>>>
    (BinaryOperator 0x9f23ca8 <line:98:11, col:56> '_Bool' '||'
      (BinaryOperator 0x9f23be0 <col:11, col:30> '_Bool' '=='
        (ImplicitCastExpr 0x9f23bc0 <col:11> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9f23ba0 <col:11> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9f23b48 <col:11> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9f239f0 '__fmt' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
        (ImplicitCastExpr 0x9f23bd0 <col:20, col:30> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9f23bb0 <col:20, col:30> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9f23b7c <col:20, col:30> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9e10ec0 'oct' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
      (BinaryOperator 0x9f23c90 <col:37, col:56> '_Bool' '=='
        (ImplicitCastExpr 0x9f23c70 <col:37> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9f23c50 <col:37> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9f23bf8 <col:37> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9f239f0 '__fmt' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
        (ImplicitCastExpr 0x9f23c80 <col:46, col:56> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9f23c60 <col:46, col:56> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9f23c2c <col:46, col:56> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9e10da0 'hex' 'const fmtflags':'const enum std::_Ios_Fmtflags')))))
    (ReturnStmt 0x9f23dc8 <line:99:2, col:70>
      (CallExpr 0x9f23da8 <col:9, col:70> '<dependent type>'
        (UnresolvedMemberExpr 0x9f23cd0 <col:9> '<bound member function type>' lvalue)
        (CXXStaticCastExpr 0x9f23d90 <col:19, col:69> 'long' static_cast<long> <NoOp>
          (ImplicitCastExpr 0x9f23d80 <col:37, col:68> 'long' <IntegralCast>
            (CXXStaticCastExpr 0x9f23d58 <col:37, col:68> 'unsigned short' static_cast<unsigned short> <NoOp>
              (ImplicitCastExpr 0x9f23d48 <col:65> 'unsigned short' <IntegralCast>
                (ImplicitCastExpr 0x9f23d38 <col:65> 'short' <LValueToRValue>
                  (DeclRefExpr 0x9f23d0c <col:65> 'short' lvalue ParmVar 0x9f23770 '__n' 'short'))))))))
    (ReturnStmt 0x9f23ea8 <line:101:2, col:41>
      (CallExpr 0x9f23e88 <col:9, col:41> '<dependent type>'
        (UnresolvedMemberExpr 0x9f23de8 <col:9> '<bound member function type>' lvalue)
        (CXXStaticCastExpr 0x9f23e70 <col:19, col:40> 'long' static_cast<long> <NoOp>
          (ImplicitCastExpr 0x9f23e60 <col:37> 'long' <IntegralCast>
            (ImplicitCastExpr 0x9f23e50 <col:37> 'short' <LValueToRValue>
              (DeclRefExpr 0x9f23e24 <col:37> 'short' lvalue ParmVar 0x9f23770 '__n' 'short'))))))))


    basic_ostream<_CharT, _Traits> &operator<<(int __n) (CompoundStmt 0x9f249d8 </usr/include/c++/4.6/bits/ostream.tcc:108:5, line:116:5>
  (DeclStmt 0x9f24638 <line:111:7, col:75>
    0x9f244f0 "const ios_base::fmtflags __fmt =
      (CXXOperatorCallExpr 0x9f24610 <col:40, col:66> '<dependent type>'
        (UnresolvedLookupExpr 0x9f245d0 <col:54, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e0a5b0 0x9e0bdb0 0x9e0d020)
        (CallExpr 0x9f24570 <col:40, col:52> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9f24538 <col:40, col:46> '<dependent type>' lvalue
            (CXXThisExpr 0x9f24528 <col:40> 'basic_ostream<_CharT, _Traits> *' this)))
        (DeclRefExpr 0x9f245ac <col:56, col:66> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9e11280 'basefield' 'const fmtflags':'const enum std::_Ios_Fmtflags'))")
  (IfStmt 0x9f249b8 <line:112:7, line:115:41>
    <<<NULL>>>
    (BinaryOperator 0x9f247a8 <line:112:11, col:56> '_Bool' '||'
      (BinaryOperator 0x9f246e0 <col:11, col:30> '_Bool' '=='
        (ImplicitCastExpr 0x9f246c0 <col:11> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9f246a0 <col:11> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9f24648 <col:11> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9f244f0 '__fmt' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
        (ImplicitCastExpr 0x9f246d0 <col:20, col:30> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9f246b0 <col:20, col:30> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9f2467c <col:20, col:30> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9e10ec0 'oct' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
      (BinaryOperator 0x9f24790 <col:37, col:56> '_Bool' '=='
        (ImplicitCastExpr 0x9f24770 <col:37> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9f24750 <col:37> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9f246f8 <col:37> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9f244f0 '__fmt' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
        (ImplicitCastExpr 0x9f24780 <col:46, col:56> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9f24760 <col:46, col:56> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9f2472c <col:46, col:56> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9e10da0 'hex' 'const fmtflags':'const enum std::_Ios_Fmtflags')))))
    (ReturnStmt 0x9f248c8 <line:113:2, col:68>
      (CallExpr 0x9f248a8 <col:9, col:68> '<dependent type>'
        (UnresolvedMemberExpr 0x9f247d0 <col:9> '<bound member function type>' lvalue)
        (CXXStaticCastExpr 0x9f24890 <col:19, col:67> 'long' static_cast<long> <NoOp>
          (ImplicitCastExpr 0x9f24880 <col:37, col:66> 'long' <IntegralCast>
            (CXXStaticCastExpr 0x9f24858 <col:37, col:66> 'unsigned int' static_cast<unsigned int> <NoOp>
              (ImplicitCastExpr 0x9f24848 <col:63> 'unsigned int' <IntegralCast>
                (ImplicitCastExpr 0x9f24838 <col:63> 'int' <LValueToRValue>
                  (DeclRefExpr 0x9f2480c <col:63> 'int' lvalue ParmVar 0x9f24270 '__n' 'int'))))))))
    (ReturnStmt 0x9f249a8 <line:115:2, col:41>
      (CallExpr 0x9f24988 <col:9, col:41> '<dependent type>'
        (UnresolvedMemberExpr 0x9f248e8 <col:9> '<bound member function type>' lvalue)
        (CXXStaticCastExpr 0x9f24970 <col:19, col:40> 'long' static_cast<long> <NoOp>
          (ImplicitCastExpr 0x9f24960 <col:37> 'long' <IntegralCast>
            (ImplicitCastExpr 0x9f24950 <col:37> 'int' <LValueToRValue>
              (DeclRefExpr 0x9f24924 <col:37> 'int' lvalue ParmVar 0x9f24270 '__n' 'int'))))))))


    basic_ostream<_CharT, _Traits> &operator<<(__streambuf_type *__sbin) (CompoundStmt 0x9f257c8 </usr/include/c++/4.6/bits/ostream.tcc:122:5, line:145:5>
  (DeclStmt 0x9f25078 <line:123:7, col:50>
    0x9f24ff0 "ios_base::iostate __err =
      (ImplicitCastExpr 0x9f25068 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9f25044 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e114b0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (DeclStmt 0x9f25110 <line:124:7, col:27>
    0x9f25090 "std::basic_ostream::sentry __cerb =
      (ParenListExpr 0x9f250f0 <col:20, col:26> 'class std::basic_ostream::sentry'
        (UnaryOperator 0x9f250d8 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9f250c8 <col:22> 'basic_ostream<_CharT, _Traits> *' this)))")
  (IfStmt 0x9f25698 <line:125:7, line:141:21>
    <<<NULL>>>
    (BinaryOperator 0x9f25150 <line:125:11, col:21> '<dependent type>' '&&'
      (DeclRefExpr 0x9f25120 <col:11> 'class std::basic_ostream::sentry' lvalue Var 0x9f25090 '__cerb' 'class std::basic_ostream::sentry')
      (DeclRefExpr 0x9f25138 <col:21> '__streambuf_type *' lvalue ParmVar 0x9f24d70 '__sbin' '__streambuf_type *'))
    (CompoundStmt 0x9f25570 <line:126:2, line:139:2>
      (IfStmt 0x9f25360 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/ostream.tcc:131:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9f25168 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9f25348 </usr/include/c++/4.6/bits/ostream.tcc:128:6, line:131:6>
          (IfStmt 0x9f25328 <line:129:8, line:130:22>
            <<<NULL>>>
            (UnaryOperator 0x9f25258 <line:129:12, col:52> '<dependent type>' prefix '!'
              (CallExpr 0x9f25230 <col:13, col:52> '<dependent type>'
                (UnresolvedLookupExpr 0x9f25178 <col:13> '<overloaded function type>' lvalue (ADL) = '1' 0x9e43040)
                (DeclRefExpr 0x9f251ac <col:31> '__streambuf_type *' lvalue ParmVar 0x9f24d70 '__sbin' '__streambuf_type *')
                (CallExpr 0x9f25210 <col:39, col:51> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9f251d8 <col:39, col:45> '<dependent type>' lvalue
                    (CXXThisExpr 0x9f251c8 <col:39> 'basic_ostream<_CharT, _Traits> *' this)))))
            (CXXOperatorCallExpr 0x9f25300 <line:130:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x9f252f0 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9f252d8 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9e0fd60 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x9f2526c <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f24ff0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0x9f252c8 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x9f252a4 <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11450 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0x9f25460 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:136:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9f25380 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9f25448 </usr/include/c++/4.6/bits/ostream.tcc:133:6, line:136:6>
          (CallExpr 0x9f25418 <line:134:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f253a0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9f25390 <col:8> 'basic_ostream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9f253f4 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11390 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x9f25438 <line:135:31>))
        <<<NULL>>>)
      (IfStmt 0x9f25550 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:138:46>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9f25480 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9f25538 </usr/include/c++/4.6/bits/ostream.tcc:138:6, col:46>
          (CallExpr 0x9f25518 <col:8, col:43> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f254a0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9f25490 <col:8> 'basic_ostream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9f254f4 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11450 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    (IfStmt 0x9f25678 <line:140:12, line:141:21>
      <<<NULL>>>
      (UnaryOperator 0x9f255a8 <line:140:16, col:17> '<dependent type>' prefix '!'
        (DeclRefExpr 0x9f2558c <col:17> '__streambuf_type *' lvalue ParmVar 0x9f24d70 '__sbin' '__streambuf_type *'))
      (CXXOperatorCallExpr 0x9f25650 <line:141:2, col:21> 'const enum std::_Ios_Iostate' lvalue
        (ImplicitCastExpr 0x9f25640 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9f25628 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9e0fd60 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
        (DeclRefExpr 0x9f255bc <col:2> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f24ff0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
        (ImplicitCastExpr 0x9f25618 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
          (DeclRefExpr 0x9f255f4 <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11390 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
      <<<NULL>>>))
  (IfStmt 0x9f25770 <line:142:7, line:143:22>
    <<<NULL>>>
    (ImplicitCastExpr 0x9f256e0 <line:142:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x9f256d0 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9f256b4 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f24ff0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0x9f25750 <line:143:2, col:22> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f25700 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0x9f256f0 <col:2> 'basic_ostream<_CharT, _Traits> *' this))
      (DeclRefExpr 0x9f25734 <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f24ff0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0x9f257b8 <line:144:7, col:15>
    (UnaryOperator 0x9f257a0 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9f25790 <col:15> 'basic_ostream<_CharT, _Traits> *' this))))


    basic_ostream<_CharT, _Traits> &put(char_type __c) (CompoundStmt 0x9f26620 </usr/include/c++/4.6/bits/ostream.tcc:151:5, line:179:5>
  (DeclStmt 0x9f25e40 <line:158:7, col:27>
    0x9f25dc0 "std::basic_ostream::sentry __cerb =
      (ParenListExpr 0x9f25e20 <col:20, col:26> 'class std::basic_ostream::sentry'
        (UnaryOperator 0x9f25e08 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9f25df8 <col:22> 'basic_ostream<_CharT, _Traits> *' this)))")
  (IfStmt 0x9f265c8 <line:159:7, line:177:2>
    <<<NULL>>>
    (DeclRefExpr 0x9f25e50 <line:159:11> 'class std::basic_ostream::sentry' lvalue Var 0x9f25dc0 '__cerb' 'class std::basic_ostream::sentry')
    (CompoundStmt 0x9f265a0 <line:160:2, line:177:2>
      (DeclStmt 0x9f25f28 <line:161:4, col:47>
        0x9f25ea0 "ios_base::iostate __err =
          (ImplicitCastExpr 0x9f25f18 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9f25ef4 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e114b0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0x9f262b8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/ostream.tcc:167:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9f25f38 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9f262a0 </usr/include/c++/4.6/bits/ostream.tcc:163:6, line:167:6>
          (DeclStmt 0x9f26080 <line:164:8, col:56>
            0x9f25f70 "const int_type __put =
              (CallExpr 0x9f26060 <col:31, col:55> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9f26010 <col:31, col:46> '<dependent type>' lvalue
                  (CallExpr 0x9f25ff0 <col:31, col:43> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9f25fb8 <col:31, col:37> '<dependent type>' lvalue
                      (CXXThisExpr 0x9f25fa8 <col:31> 'basic_ostream<_CharT, _Traits> *' this))))
                (DeclRefExpr 0x9f26044 <col:52> 'char_type':'_CharT' lvalue ParmVar 0x9f25b70 '__c' 'char_type':'_CharT'))")
          (IfStmt 0x9f26280 <line:165:8, line:166:22>
            <<<NULL>>>
            (CallExpr 0x9f261a0 <line:165:12, col:62> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9f260d8 <col:12, col:25> '<dependent type>' lvalue)
              (DeclRefExpr 0x9f2610c <col:37> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x9f25f70 '__put' 'const int_type':'const typename _Traits::int_type')
              (CallExpr 0x9f26180 <col:44, col:61> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9f26148 <col:44, col:57> '<dependent type>' lvalue)))
            (CXXOperatorCallExpr 0x9f26258 <line:166:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x9f26248 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9f26230 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9e0fd60 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x9f261c4 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f25ea0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0x9f26220 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x9f261fc <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11390 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0x9f263b8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:172:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9f262d8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9f263a0 </usr/include/c++/4.6/bits/ostream.tcc:169:6, line:172:6>
          (CallExpr 0x9f26370 <line:170:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f262f8 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9f262e8 <col:8> 'basic_ostream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9f2634c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11390 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x9f26390 <line:171:31>))
        <<<NULL>>>)
      (IfStmt 0x9f264a8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:174:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9f263d8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9f26490 </usr/include/c++/4.6/bits/ostream.tcc:174:6, col:45>
          (CallExpr 0x9f26470 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f263f8 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9f263e8 <col:8> 'basic_ostream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9f2644c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11390 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0x9f26580 <line:175:4, line:176:26>
        <<<NULL>>>
        (ImplicitCastExpr 0x9f264f0 <line:175:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0x9f264e0 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9f264c4 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f25ea0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0x9f26560 <line:176:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9f26510 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x9f26500 <col:6> 'basic_ostream<_CharT, _Traits> *' this))
          (DeclRefExpr 0x9f26544 <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f25ea0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9f26610 <line:178:7, col:15>
    (UnaryOperator 0x9f265f8 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9f265e8 <col:15> 'basic_ostream<_CharT, _Traits> *' this))))


    basic_ostream<_CharT, _Traits> &write(const _CharT *__s, streamsize __n) (CompoundStmt 0x9f27050 </usr/include/c++/4.6/bits/ostream.tcc:185:5, line:207:5>
  (DeclStmt 0x9f26cf0 <line:193:7, col:27>
    0x9f26c70 "std::basic_ostream::sentry __cerb =
      (ParenListExpr 0x9f26cd0 <col:20, col:26> 'class std::basic_ostream::sentry'
        (UnaryOperator 0x9f26cb8 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9f26ca8 <col:22> 'basic_ostream<_CharT, _Traits> *' this)))")
  (IfStmt 0x9f26ff8 <line:194:7, line:205:2>
    <<<NULL>>>
    (DeclRefExpr 0x9f26d00 <line:194:11> 'class std::basic_ostream::sentry' lvalue Var 0x9f26c70 '__cerb' 'class std::basic_ostream::sentry')
    (CompoundStmt 0x9f26fd8 <line:195:2, line:205:2>
      (IfStmt 0x9f26dc8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/ostream.tcc:197:28>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9f26d18 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9f26db0 </usr/include/c++/4.6/bits/ostream.tcc:197:6, col:28>
          (CallExpr 0x9f26d88 <col:8, col:25> '<dependent type>'
            (MemberExpr 0x9f26d38 <col:8> '<bound member function type>' ->_M_write 0x9f18260
              (CXXThisExpr 0x9f26d28 <col:8> 'basic_ostream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9f26d58 <col:17> 'const _CharT *' lvalue ParmVar 0x9f269e0 '__s' 'const _CharT *')
            (DeclRefExpr 0x9f26d70 <col:22> 'streamsize':'int' lvalue ParmVar 0x9f26a20 '__n' 'streamsize':'int')))
        <<<NULL>>>)
      (IfStmt 0x9f26ec8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:202:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9f26de8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9f26eb0 </usr/include/c++/4.6/bits/ostream.tcc:199:6, line:202:6>
          (CallExpr 0x9f26e80 <line:200:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f26e08 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9f26df8 <col:8> 'basic_ostream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9f26e5c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11390 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x9f26ea0 <line:201:31>))
        <<<NULL>>>)
      (IfStmt 0x9f26fb8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:204:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9f26ee8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9f26fa0 </usr/include/c++/4.6/bits/ostream.tcc:204:6, col:45>
          (CallExpr 0x9f26f80 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f26f08 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9f26ef8 <col:8> 'basic_ostream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9f26f5c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11390 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9f27040 <line:206:7, col:15>
    (UnaryOperator 0x9f27028 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9f27018 <col:15> 'basic_ostream<_CharT, _Traits> *' this))))


    basic_ostream<_CharT, _Traits> &flush() (CompoundStmt 0x9f2c9c0 </usr/include/c++/4.6/bits/ostream.tcc:213:5, line:233:5>
  (DeclStmt 0x9f2c398 <line:217:7, col:50>
    0x9f2c310 "ios_base::iostate __err =
      (ImplicitCastExpr 0x9f2c388 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9f2c364 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e114b0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (IfStmt 0x9f2c6a0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/ostream.tcc:222:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9f2c3a8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x9f2c688 </usr/include/c++/4.6/bits/ostream.tcc:219:2, line:222:2>
      (IfStmt 0x9f2c668 <line:220:4, line:221:25>
        <<<NULL>>>
        (BinaryOperator 0x9f2c598 <line:220:8, col:54> '<dependent type>' '&&'
          (CallExpr 0x9f2c400 <col:8, col:20> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f2c3c8 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9f2c3b8 <col:8> 'basic_ostream<_CharT, _Traits> *' this)))
          (CXXOperatorCallExpr 0x9f2c570 <col:25, col:54> '<dependent type>'
            (UnresolvedLookupExpr 0x9f2c510 <col:50, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30 0x9d5e270 0x9d5ece0 0x9d5f520 0x9d5fa90 0x9e73300)
            (CallExpr 0x9f2c4c0 <col:25, col:48> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9f2c488 <col:25, col:40> '<dependent type>' lvalue
                (CallExpr 0x9f2c468 <col:25, col:37> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9f2c430 <col:25, col:31> '<dependent type>' lvalue
                    (CXXThisExpr 0x9f2c420 <col:25> 'basic_ostream<_CharT, _Traits> *' this)))))
            (UnaryOperator 0x9f2c4f8 <col:53, col:54> 'int' prefix '-'
              (IntegerLiteral 0x9f2c4e0 <col:54> 'int' 1))))
        (CXXOperatorCallExpr 0x9f2c640 <line:221:6, col:25> 'const enum std::_Ios_Iostate' lvalue
          (ImplicitCastExpr 0x9f2c630 <col:12, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9f2c618 <col:12, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9e0fd60 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
          (DeclRefExpr 0x9f2c5b0 <col:6> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f2c310 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
          (ImplicitCastExpr 0x9f2c608 <col:15, col:25> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9f2c5e4 <col:15, col:25> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11390 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0x9f2c7a0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:227:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9f2c6c0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9f2c788 </usr/include/c++/4.6/bits/ostream.tcc:224:2, line:227:2>
      (CallExpr 0x9f2c758 <line:225:4, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f2c6e0 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x9f2c6d0 <col:4> 'basic_ostream<_CharT, _Traits> *' this))
        (DeclRefExpr 0x9f2c734 <col:22, col:32> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11390 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
      (NullStmt 0x9f2c778 <line:226:27>))
    <<<NULL>>>)
  (IfStmt 0x9f2c890 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:229:41>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9f2c7c0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9f2c878 </usr/include/c++/4.6/bits/ostream.tcc:229:2, col:41>
      (CallExpr 0x9f2c858 <col:4, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f2c7e0 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x9f2c7d0 <col:4> 'basic_ostream<_CharT, _Traits> *' this))
        (DeclRefExpr 0x9f2c834 <col:22, col:32> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11390 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (IfStmt 0x9f2c968 <line:230:7, line:231:22>
    <<<NULL>>>
    (ImplicitCastExpr 0x9f2c8d8 <line:230:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x9f2c8c8 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9f2c8ac <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f2c310 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0x9f2c948 <line:231:2, col:22> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f2c8f8 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0x9f2c8e8 <col:2> 'basic_ostream<_CharT, _Traits> *' this))
      (DeclRefExpr 0x9f2c92c <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f2c310 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0x9f2c9b0 <line:232:7, col:15>
    (UnaryOperator 0x9f2c998 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9f2c988 <col:15> 'basic_ostream<_CharT, _Traits> *' this))))


    typename basic_ostream<_CharT, _Traits>::pos_type tellp() (CompoundStmt 0x9f2d4f0 </usr/include/c++/4.6/bits/ostream.tcc:239:5, line:254:5>
  (DeclStmt 0x9f2d050 <line:240:7, col:36>
    0x9f2cfc0 "pos_type __ret =
      (CXXUnresolvedConstructExpr 0x9f2d030 <col:24, col:35> 'pos_type':'typename _Traits::pos_type'
        (UnaryOperator 0x9f2d018 <col:33, col:34> 'int' prefix '-'
          (IntegerLiteral 0x9f2d000 <col:34> 'int' 1)))")
  (IfStmt 0x9f2d2b8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/ostream.tcc:245:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9f2d060 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x9f2d2a0 </usr/include/c++/4.6/bits/ostream.tcc:242:2, line:245:2>
      (IfStmt 0x9f2d280 <line:243:4, line:244:71>
        <<<NULL>>>
        (UnaryOperator 0x9f2d0d8 <line:243:8, col:20> '<dependent type>' prefix '!'
          (CallExpr 0x9f2d0b8 <col:9, col:20> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f2d080 <col:9, col:15> '<dependent type>' lvalue
              (CXXThisExpr 0x9f2d070 <col:9> 'basic_ostream<_CharT, _Traits> *' this))))
        (BinaryOperator 0x9f2d268 <line:244:6, col:71> '<dependent type>' '='
          (DeclRefExpr 0x9f2d0ec <col:6> 'pos_type':'typename _Traits::pos_type' lvalue Var 0x9f2cfc0 '__ret' 'pos_type':'typename _Traits::pos_type')
          (CallExpr 0x9f2d240 <col:14, col:71> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f2d170 <col:14, col:29> '<dependent type>' lvalue
              (CallExpr 0x9f2d150 <col:14, col:26> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9f2d118 <col:14, col:20> '<dependent type>' lvalue
                  (CXXThisExpr 0x9f2d108 <col:14> 'basic_ostream<_CharT, _Traits> *' this))))
            (IntegerLiteral 0x9f2d1a8 <col:40> 'int' 0)
            (DeclRefExpr 0x9f2d1dc <col:43, col:53> 'const seekdir':'const enum std::_Ios_Seekdir' lvalue Var 0x9e11850 'cur' 'const seekdir':'const enum std::_Ios_Seekdir')
            (DeclRefExpr 0x9f2d21c <col:58, col:68> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9e116e0 'out' 'const openmode':'const enum std::_Ios_Openmode')))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0x9f2d3b8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:250:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9f2d2d8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9f2d3a0 </usr/include/c++/4.6/bits/ostream.tcc:247:2, line:250:2>
      (CallExpr 0x9f2d370 <line:248:4, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f2d2f8 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x9f2d2e8 <col:4> 'basic_ostream<_CharT, _Traits> *' this))
        (DeclRefExpr 0x9f2d34c <col:22, col:32> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11390 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
      (NullStmt 0x9f2d390 <line:249:27>))
    <<<NULL>>>)
  (IfStmt 0x9f2d4a8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:252:41>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9f2d3d8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9f2d490 </usr/include/c++/4.6/bits/ostream.tcc:252:2, col:41>
      (CallExpr 0x9f2d470 <col:4, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f2d3f8 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x9f2d3e8 <col:4> 'basic_ostream<_CharT, _Traits> *' this))
        (DeclRefExpr 0x9f2d44c <col:22, col:32> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11390 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (ReturnStmt 0x9f2d4e0 <line:253:7, col:14>
    (DeclRefExpr 0x9f2d4c4 <col:14> 'pos_type':'typename _Traits::pos_type' lvalue Var 0x9f2cfc0 '__ret' 'pos_type':'typename _Traits::pos_type')))


    basic_ostream<_CharT, _Traits> &seekp(pos_type __pos) (CompoundStmt 0x9f2e320 </usr/include/c++/4.6/bits/ostream.tcc:260:5, line:286:5>
  (DeclStmt 0x9f2dba8 <line:261:7, col:50>
    0x9f2db20 "ios_base::iostate __err =
      (ImplicitCastExpr 0x9f2db98 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9f2db74 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e114b0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (IfStmt 0x9f2e000 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/ostream.tcc:275:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9f2dbb8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x9f2dfe8 </usr/include/c++/4.6/bits/ostream.tcc:263:2, line:275:2>
      (IfStmt 0x9f2dfc8 <line:264:4, line:274:6>
        <<<NULL>>>
        (UnaryOperator 0x9f2dc30 <line:264:8, col:20> '<dependent type>' prefix '!'
          (CallExpr 0x9f2dc10 <col:9, col:20> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f2dbd8 <col:9, col:15> '<dependent type>' lvalue
              (CXXThisExpr 0x9f2dbc8 <col:9> 'basic_ostream<_CharT, _Traits> *' this))))
        (CompoundStmt 0x9f2dfb0 <line:265:6, line:274:6>
          (DeclStmt 0x9f2dda8 <line:268:8, line:269:27>
            0x9f2dc50 "const pos_type __p =
              (CallExpr 0x9f2dd80 <line:268:29, line:269:26> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9f2dcf0 <line:268:29, col:44> '<dependent type>' lvalue
                  (CallExpr 0x9f2dcd0 <col:29, col:41> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9f2dc98 <col:29, col:35> '<dependent type>' lvalue
                      (CXXThisExpr 0x9f2dc88 <col:29> 'basic_ostream<_CharT, _Traits> *' this))))
                (DeclRefExpr 0x9f2dd24 <col:55> 'pos_type':'typename _Traits::pos_type' lvalue ParmVar 0x9f2d8a0 '__pos' 'pos_type':'typename _Traits::pos_type')
                (DeclRefExpr 0x9f2dd5c <line:269:13, col:23> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9e116e0 'out' 'const openmode':'const enum std::_Ios_Openmode'))")
          (IfStmt 0x9f2df90 <line:272:8, line:273:22>
            <<<NULL>>>
            (CXXOperatorCallExpr 0x9f2deb0 <line:272:12, col:40> '<dependent type>'
              (UnresolvedLookupExpr 0x9f2de50 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30 0x9d5e270 0x9d5ece0 0x9d5f520 0x9d5fa90 0x9e73300)
              (DeclRefExpr 0x9f2ddb8 <col:12> 'const pos_type':'const typename _Traits::pos_type' lvalue Var 0x9f2dc50 '__p' 'const pos_type':'const typename _Traits::pos_type')
              (CXXUnresolvedConstructExpr 0x9f2de30 <col:19, col:40> 'pos_type':'typename _Traits::pos_type'
                (CXXUnresolvedConstructExpr 0x9f2de10 <col:28, col:39> 'off_type':'typename _Traits::off_type'
                  (UnaryOperator 0x9f2ddf8 <col:37, col:38> 'int' prefix '-'
                    (IntegerLiteral 0x9f2dde0 <col:38> 'int' 1)))))
            (CXXOperatorCallExpr 0x9f2df68 <line:273:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x9f2df58 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9f2df40 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9e0fd60 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x9f2ded4 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f2db20 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0x9f2df30 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x9f2df0c <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11450 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0x9f2e100 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:280:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9f2e020 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9f2e0e8 </usr/include/c++/4.6/bits/ostream.tcc:277:2, line:280:2>
      (CallExpr 0x9f2e0b8 <line:278:4, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f2e040 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x9f2e030 <col:4> 'basic_ostream<_CharT, _Traits> *' this))
        (DeclRefExpr 0x9f2e094 <col:22, col:32> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11390 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
      (NullStmt 0x9f2e0d8 <line:279:27>))
    <<<NULL>>>)
  (IfStmt 0x9f2e1f0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:282:41>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9f2e120 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9f2e1d8 </usr/include/c++/4.6/bits/ostream.tcc:282:2, col:41>
      (CallExpr 0x9f2e1b8 <col:4, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f2e140 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x9f2e130 <col:4> 'basic_ostream<_CharT, _Traits> *' this))
        (DeclRefExpr 0x9f2e194 <col:22, col:32> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11390 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (IfStmt 0x9f2e2c8 <line:283:7, line:284:22>
    <<<NULL>>>
    (ImplicitCastExpr 0x9f2e238 <line:283:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x9f2e228 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9f2e20c <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f2db20 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0x9f2e2a8 <line:284:2, col:22> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f2e258 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0x9f2e248 <col:2> 'basic_ostream<_CharT, _Traits> *' this))
      (DeclRefExpr 0x9f2e28c <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f2db20 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0x9f2e310 <line:285:7, col:15>
    (UnaryOperator 0x9f2e2f8 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9f2e2e8 <col:15> 'basic_ostream<_CharT, _Traits> *' this))))


    basic_ostream<_CharT, _Traits> &seekp(off_type __off, ios_base::seekdir __dir) (CompoundStmt 0x9f2f1d8 </usr/include/c++/4.6/bits/ostream.tcc:292:5, line:318:5>
  (DeclStmt 0x9f2ea48 <line:293:7, col:50>
    0x9f2e9c0 "ios_base::iostate __err =
      (ImplicitCastExpr 0x9f2ea38 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9f2ea14 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e114b0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (IfStmt 0x9f2eeb8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/ostream.tcc:307:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9f2ea58 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x9f2eea0 </usr/include/c++/4.6/bits/ostream.tcc:295:2, line:307:2>
      (IfStmt 0x9f2ee80 <line:296:4, line:306:6>
        <<<NULL>>>
        (UnaryOperator 0x9f2ead0 <line:296:8, col:20> '<dependent type>' prefix '!'
          (CallExpr 0x9f2eab0 <col:9, col:20> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f2ea78 <col:9, col:15> '<dependent type>' lvalue
              (CXXThisExpr 0x9f2ea68 <col:9> 'basic_ostream<_CharT, _Traits> *' this))))
        (CompoundStmt 0x9f2ee68 <line:297:6, line:306:6>
          (DeclStmt 0x9f2ec60 <line:300:8, line:301:27>
            0x9f2eaf0 "const pos_type __p =
              (CallExpr 0x9f2ec38 <line:300:29, line:301:26> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9f2eb90 <line:300:29, col:44> '<dependent type>' lvalue
                  (CallExpr 0x9f2eb70 <col:29, col:41> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9f2eb38 <col:29, col:35> '<dependent type>' lvalue
                      (CXXThisExpr 0x9f2eb28 <col:29> 'basic_ostream<_CharT, _Traits> *' this))))
                (DeclRefExpr 0x9f2ebc4 <col:55> 'off_type':'typename _Traits::off_type' lvalue ParmVar 0x9f2e6d0 '__off' 'off_type':'typename _Traits::off_type')
                (DeclRefExpr 0x9f2ebdc <col:62> 'class ios_base::seekdir':'enum std::_Ios_Seekdir' lvalue ParmVar 0x9f2e740 '__dir' 'class ios_base::seekdir':'enum std::_Ios_Seekdir')
                (DeclRefExpr 0x9f2ec14 <line:301:13, col:23> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9e116e0 'out' 'const openmode':'const enum std::_Ios_Openmode'))")
          (IfStmt 0x9f2ee48 <line:304:8, line:305:22>
            <<<NULL>>>
            (CXXOperatorCallExpr 0x9f2ed68 <line:304:12, col:40> '<dependent type>'
              (UnresolvedLookupExpr 0x9f2ed08 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30 0x9d5e270 0x9d5ece0 0x9d5f520 0x9d5fa90 0x9e73300)
              (DeclRefExpr 0x9f2ec70 <col:12> 'const pos_type':'const typename _Traits::pos_type' lvalue Var 0x9f2eaf0 '__p' 'const pos_type':'const typename _Traits::pos_type')
              (CXXUnresolvedConstructExpr 0x9f2ece8 <col:19, col:40> 'pos_type':'typename _Traits::pos_type'
                (CXXUnresolvedConstructExpr 0x9f2ecc8 <col:28, col:39> 'off_type':'typename _Traits::off_type'
                  (UnaryOperator 0x9f2ecb0 <col:37, col:38> 'int' prefix '-'
                    (IntegerLiteral 0x9f2ec98 <col:38> 'int' 1)))))
            (CXXOperatorCallExpr 0x9f2ee20 <line:305:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x9f2ee10 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9f2edf8 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9e0fd60 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x9f2ed8c <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f2e9c0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0x9f2ede8 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x9f2edc4 <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11450 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0x9f2efb8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:312:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9f2eed8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9f2efa0 </usr/include/c++/4.6/bits/ostream.tcc:309:2, line:312:2>
      (CallExpr 0x9f2ef70 <line:310:4, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f2eef8 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x9f2eee8 <col:4> 'basic_ostream<_CharT, _Traits> *' this))
        (DeclRefExpr 0x9f2ef4c <col:22, col:32> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11390 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
      (NullStmt 0x9f2ef90 <line:311:27>))
    <<<NULL>>>)
  (IfStmt 0x9f2f0a8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:314:41>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9f2efd8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9f2f090 </usr/include/c++/4.6/bits/ostream.tcc:314:2, col:41>
      (CallExpr 0x9f2f070 <col:4, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f2eff8 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x9f2efe8 <col:4> 'basic_ostream<_CharT, _Traits> *' this))
        (DeclRefExpr 0x9f2f04c <col:22, col:32> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11390 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (IfStmt 0x9f2f180 <line:315:7, line:316:22>
    <<<NULL>>>
    (ImplicitCastExpr 0x9f2f0f0 <line:315:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x9f2f0e0 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9f2f0c4 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f2e9c0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0x9f2f160 <line:316:2, col:22> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f2f110 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0x9f2f100 <col:2> 'basic_ostream<_CharT, _Traits> *' this))
      (DeclRefExpr 0x9f2f144 <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f2e9c0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0x9f2f1c8 <line:317:7, col:15>
    (UnaryOperator 0x9f2f1b0 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9f2f1a0 <col:15> 'basic_ostream<_CharT, _Traits> *' this))))


    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> basic_ostream<wchar_t, std::char_traits<wchar_t> > &operator<<(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__out, const char *__s)template <typename _CharT = char, typename _Traits = std::char_traits<char>> basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, const char *__s)template <typename _CharT, typename _Traits> basic_ostream<_CharT, _Traits> &operator<<(basic_ostream<_CharT, _Traits> &__out, const char *__s) (CompoundStmt 0x9f305d8 </usr/include/c++/4.6/bits/ostream.tcc:323:5, line:355:5>
  (IfStmt 0x9f30590 <line:324:7, line:353:2>
    <<<NULL>>>
    (UnaryOperator 0x9f2f6c8 <line:324:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9f2f6b8 <col:12> '_Bool' <PointerToBoolean>
        (ImplicitCastExpr 0x9f2f6a8 <col:12> 'const char *' <LValueToRValue>
          (DeclRefExpr 0x9f2f68c <col:12> 'const char *' lvalue ParmVar 0x9f2f510 '__s' 'const char *'))))
    (CallExpr 0x9f2f770 <line:325:2, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f2f6f8 <col:2, col:8> '<dependent type>' lvalue
        (DeclRefExpr 0x9f2f6dc <col:2> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9f2f4c0 '__out' 'basic_ostream<_CharT, _Traits> &'))
      (DeclRefExpr 0x9f2f74c <col:17, col:27> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11390 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
    (CompoundStmt 0x9f30570 <line:327:2, line:353:2>
      (DeclStmt 0x9f2f8e8 <line:330:4, col:56>
        0x9f2f7a0 "const size_t __clen =
          (CallExpr 0x9f2f8b8 <col:26, col:55> 'size_t':'unsigned int'
            (ImplicitCastExpr 0x9f2f8a8 <col:26, col:45> 'size_t (*)(const char_type *)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9f2f850 <col:26, col:45> 'size_t (const char_type *)' lvalue CXXMethod 0x9c1b010 'length' 'size_t (const char_type *)'))
            (ImplicitCastExpr 0x9f2f8d8 <col:52> 'const char *' <LValueToRValue>
              (DeclRefExpr 0x9f2f870 <col:52> 'const char *' lvalue ParmVar 0x9f2f510 '__s' 'const char *')))")
      (IfStmt 0x9f30350 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/ostream.tcc:345:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9f2f8f8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9f30330 </usr/include/c++/4.6/bits/ostream.tcc:332:6, line:345:6>
          (DeclStmt 0x9f2ff38 <line:333:8, line:339:35>
            0x9f2f910 "struct __ptr_guard;"
            0x9f2fe40 "struct __ptr_guard __pg =
              (ParenListExpr 0x9f2ff10 <col:15, col:34> 'struct __ptr_guard':'struct std::__ptr_guard'
                (CXXNewExpr 0x9f2fed0 <col:16, col:20> '_CharT *'
                  (DeclRefExpr 0x9f2fe74 <col:27> 'const size_t':'const unsigned int' lvalue Var 0x9f2f7a0 '__clen' 'const size_t':'const unsigned int')))")
          (DeclStmt 0x9f30008 <line:341:8, col:35>
            0x9f2ff60 "_CharT *__ws =
              (CallExpr 0x9f2ffe8 <col:23, col:34> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9f2ffb0 <col:23, col:28> '<dependent type>' lvalue
                  (DeclRefExpr 0x9f2ff94 <col:23> 'struct __ptr_guard':'struct std::__ptr_guard' lvalue Var 0x9f2fe40 '__pg' 'struct __ptr_guard':'struct std::__ptr_guard')))")
          (ForStmt 0x9f30260 <line:342:8, line:343:35>
            (DeclStmt 0x9f30080 <line:342:13, col:28>
              0x9f30020 "size_t __i =
                (ImplicitCastExpr 0x9f30070 <col:27> 'size_t':'unsigned int' <IntegralCast>
                  (IntegerLiteral 0x9f30058 <col:27> 'int' 0))")
            <<<NULL>>>
            (BinaryOperator 0x9f300e0 <col:30, col:36> '_Bool' '<'
              (ImplicitCastExpr 0x9f300c0 <col:30> 'size_t':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0x9f30090 <col:30> 'size_t':'unsigned int' lvalue Var 0x9f30020 '__i' 'size_t':'unsigned int'))
              (ImplicitCastExpr 0x9f300d0 <col:36> 'size_t':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0x9f300a8 <col:36> 'const size_t':'const unsigned int' lvalue Var 0x9f2f7a0 '__clen' 'const size_t':'const unsigned int')))
            (UnaryOperator 0x9f30110 <col:44, col:46> 'size_t':'unsigned int' lvalue prefix '++'
              (DeclRefExpr 0x9f300f8 <col:46> 'size_t':'unsigned int' lvalue Var 0x9f30020 '__i' 'size_t':'unsigned int'))
            (BinaryOperator 0x9f30248 <line:343:3, col:35> '<dependent type>' '='
              (ArraySubscriptExpr 0x9f30158 <col:3, col:11> '<dependent type>' lvalue
                (DeclRefExpr 0x9f30124 <col:3> '_CharT *' lvalue Var 0x9f2ff60 '__ws' '_CharT *')
                (DeclRefExpr 0x9f3013c <col:8> 'size_t':'unsigned int' lvalue Var 0x9f30020 '__i' 'size_t':'unsigned int'))
              (CallExpr 0x9f30228 <col:15, col:35> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9f30188 <col:15, col:21> '<dependent type>' lvalue
                  (DeclRefExpr 0x9f3016c <col:15> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9f2f4c0 '__out' 'basic_ostream<_CharT, _Traits> &'))
                (ArraySubscriptExpr 0x9f30210 <col:27, col:34> 'const char' lvalue
                  (ImplicitCastExpr 0x9f301f0 <col:27> 'const char *' <LValueToRValue>
                    (DeclRefExpr 0x9f301bc <col:27> 'const char *' lvalue ParmVar 0x9f2f510 '__s' 'const char *'))
                  (ImplicitCastExpr 0x9f30200 <col:31> 'size_t':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0x9f301d4 <col:31> 'size_t':'unsigned int' lvalue Var 0x9f30020 '__i' 'size_t':'unsigned int'))))))
          (CallExpr 0x9f30308 <line:344:8, col:44> '<dependent type>'
            (UnresolvedLookupExpr 0x9f30288 <col:8> '<overloaded function type>' lvalue (ADL) = '1' 0x9c6c440)
            (DeclRefExpr 0x9f302bc <col:25> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9f2f4c0 '__out' 'basic_ostream<_CharT, _Traits> &')
            (DeclRefExpr 0x9f302d4 <col:32> '_CharT *' lvalue Var 0x9f2ff60 '__ws' '_CharT *')
            (DeclRefExpr 0x9f302ec <col:38> 'const size_t':'const unsigned int' lvalue Var 0x9f2f7a0 '__clen' 'const size_t':'const unsigned int')))
        <<<NULL>>>)
      (IfStmt 0x9f30458 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:350:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9f30370 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9f30440 </usr/include/c++/4.6/bits/ostream.tcc:347:6, line:350:6>
          (CallExpr 0x9f30410 <line:348:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f30398 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0x9f30380 <col:8> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9f2f4c0 '__out' 'basic_ostream<_CharT, _Traits> &'))
            (DeclRefExpr 0x9f303ec <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11390 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x9f30430 <line:349:31>))
        <<<NULL>>>)
      (IfStmt 0x9f30550 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:352:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9f30478 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9f30538 </usr/include/c++/4.6/bits/ostream.tcc:352:6, col:45>
          (CallExpr 0x9f30518 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f304a0 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0x9f30488 <col:8> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9f2f4c0 '__out' 'basic_ostream<_CharT, _Traits> &'))
            (DeclRefExpr 0x9f304f4 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11390 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)))
  (ReturnStmt 0x9f305c8 <line:354:7, col:14>
    (DeclRefExpr 0x9f305ac <col:14> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9f2f4c0 '__out' 'basic_ostream<_CharT, _Traits> &')))

;
    class basic_ostream : virtual public basic_ios<char, std::char_traits<char> > {
        class basic_ostream;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef basic_streambuf<char, std::char_traits<char> > __streambuf_type;
        typedef basic_ios<char, std::char_traits<char> > __ios_type;
        typedef basic_ostream<char, std::char_traits<char> > __ostream_type;
        typedef num_put<char, ostreambuf_iterator<char, std::char_traits<char> > > __num_put_type;
        typedef ctype<char> __ctype_type;
        basic_ostream(__streambuf_type *__sb);
        virtual void ~basic_ostream();
        class sentry {
            class sentry;
            bool _M_ok;
            basic_ostream<char, std::char_traits<char> > &_M_os;
        public:
        public:
            sentry(basic_ostream<char, std::char_traits<char> > &__os);
            void ~sentry();
            bool operator _Bool() const;
        };
        ;
        __ostream_type &operator<<(__ostream_type &(*__pf)(__ostream_type &));
        __ostream_type &operator<<(__ios_type &(*__pf)(__ios_type &));
        __ostream_type &operator<<(std::ios_base &(*__pf)(std::ios_base &));
        __ostream_type &operator<<(long __n);
        __ostream_type &operator<<(unsigned long __n);
        __ostream_type &operator<<(bool __n);
        __ostream_type &operator<<(short __n);
        __ostream_type &operator<<(unsigned short __n);
        __ostream_type &operator<<(int __n);
        __ostream_type &operator<<(unsigned int __n);
        __ostream_type &operator<<(long long __n);
        __ostream_type &operator<<(unsigned long long __n);
        __ostream_type &operator<<(double __f);
        __ostream_type &operator<<(float __f);
        __ostream_type &operator<<(long double __f);
        __ostream_type &operator<<(const void *__p);
        __ostream_type &operator<<(__streambuf_type *__sb);
        __ostream_type &put(char_type __c);
        void _M_write(const char_type *__s, streamsize __n);
        __ostream_type &write(const char_type *__s, streamsize __n);
        __ostream_type &flush();
        pos_type tellp();
        __ostream_type &seekp(pos_type);
        __ostream_type &seekp(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_ostream();
        template <typename _ValueT = unsigned long long> __ostream_type &_M_insert(unsigned long long __v)template <typename _ValueT = double> __ostream_type &_M_insert(double __v)template <typename _ValueT = long> __ostream_type &_M_insert(long __v)template <typename _ValueT = long double> __ostream_type &_M_insert(long double __v)template <typename _ValueT = const void *> __ostream_type &_M_insert(const void *__v)template <typename _ValueT = unsigned long> __ostream_type &_M_insert(unsigned long __v)template <typename _ValueT = bool> __ostream_type &_M_insert(bool __v)template <typename _ValueT = long long> __ostream_type &_M_insert(long long __v)template <typename _ValueT> __ostream_type &_M_insert(_ValueT __v);
        inline std::basic_ostream<char> &operator=(const std::basic_ostream<char> &);
        inline basic_ostream(const std::basic_ostream<char> &);
    };
    class basic_ostream : virtual public basic_ios<wchar_t, std::char_traits<wchar_t> > {
        class basic_ostream;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef basic_streambuf<wchar_t, std::char_traits<wchar_t> > __streambuf_type;
        typedef basic_ios<wchar_t, std::char_traits<wchar_t> > __ios_type;
        typedef basic_ostream<wchar_t, std::char_traits<wchar_t> > __ostream_type;
        typedef num_put<wchar_t, ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_put_type;
        typedef ctype<wchar_t> __ctype_type;
        basic_ostream(__streambuf_type *__sb);
        virtual void ~basic_ostream();
        class sentry {
            class sentry;
            bool _M_ok;
            basic_ostream<wchar_t, std::char_traits<wchar_t> > &_M_os;
        public:
        public:
            sentry(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__os);
            void ~sentry();
            bool operator _Bool() const;
        };
        ;
        __ostream_type &operator<<(__ostream_type &(*__pf)(__ostream_type &));
        __ostream_type &operator<<(__ios_type &(*__pf)(__ios_type &));
        __ostream_type &operator<<(std::ios_base &(*__pf)(std::ios_base &));
        __ostream_type &operator<<(long __n);
        __ostream_type &operator<<(unsigned long __n);
        __ostream_type &operator<<(bool __n);
        __ostream_type &operator<<(short __n);
        __ostream_type &operator<<(unsigned short __n);
        __ostream_type &operator<<(int __n);
        __ostream_type &operator<<(unsigned int __n);
        __ostream_type &operator<<(long long __n);
        __ostream_type &operator<<(unsigned long long __n);
        __ostream_type &operator<<(double __f);
        __ostream_type &operator<<(float __f);
        __ostream_type &operator<<(long double __f);
        __ostream_type &operator<<(const void *__p);
        __ostream_type &operator<<(__streambuf_type *__sb);
        __ostream_type &put(char_type __c);
        void _M_write(const char_type *__s, streamsize __n);
        __ostream_type &write(const char_type *__s, streamsize __n);
        __ostream_type &flush();
        pos_type tellp();
        __ostream_type &seekp(pos_type);
        __ostream_type &seekp(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_ostream();
        template <typename _ValueT = unsigned long long> __ostream_type &_M_insert(unsigned long long __v)template <typename _ValueT = double> __ostream_type &_M_insert(double __v)template <typename _ValueT = long> __ostream_type &_M_insert(long __v)template <typename _ValueT = long double> __ostream_type &_M_insert(long double __v)template <typename _ValueT = const void *> __ostream_type &_M_insert(const void *__v)template <typename _ValueT = unsigned long> __ostream_type &_M_insert(unsigned long __v)template <typename _ValueT = bool> __ostream_type &_M_insert(bool __v)template <typename _ValueT = long long> __ostream_type &_M_insert(long long __v)template <typename _ValueT> __ostream_type &_M_insert(_ValueT __v);
        inline std::basic_ostream<wchar_t> &operator=(const std::basic_ostream<wchar_t> &);
        inline basic_ostream(const std::basic_ostream<wchar_t> &);
    };
}
namespace std {
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_istream : virtual public basic_ios<wchar_t, std::char_traits<wchar_t> > {
        class basic_istream;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef basic_streambuf<wchar_t, std::char_traits<wchar_t> > __streambuf_type;
        typedef basic_ios<wchar_t, std::char_traits<wchar_t> > __ios_type;
        typedef basic_istream<wchar_t, std::char_traits<wchar_t> > __istream_type;
        typedef num_get<wchar_t, istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_get_type;
        typedef ctype<wchar_t> __ctype_type;
    protected:
    protected:
        streamsize _M_gcount;
    public:
    public:
        basic_istream(__streambuf_type *__sb);
        virtual void ~basic_istream();
        class sentry {
            class sentry;
            bool _M_ok;
        public:
        public:
            typedef std::char_traits<wchar_t> traits_type;
            typedef basic_streambuf<wchar_t, std::char_traits<wchar_t> > __streambuf_type;
            typedef basic_istream<wchar_t, std::char_traits<wchar_t> > __istream_type;
            typedef typename __istream_type::__ctype_type __ctype_type;
            typedef typename char_traits<wchar_t>::int_type __int_type;
            sentry(basic_istream<wchar_t, std::char_traits<wchar_t> > &__is, bool __noskipws);
            bool operator _Bool() const;
        };
        ;
        __istream_type &operator>>(__istream_type &(*__pf)(__istream_type &));
        __istream_type &operator>>(__ios_type &(*__pf)(__ios_type &));
        __istream_type &operator>>(std::ios_base &(*__pf)(std::ios_base &));
        __istream_type &operator>>(bool &__n);
        __istream_type &operator>>(short &__n);
        __istream_type &operator>>(unsigned short &__n);
        __istream_type &operator>>(int &__n);
        __istream_type &operator>>(unsigned int &__n);
        __istream_type &operator>>(long &__n);
        __istream_type &operator>>(unsigned long &__n);
        __istream_type &operator>>(long long &__n);
        __istream_type &operator>>(unsigned long long &__n);
        __istream_type &operator>>(float &__f);
        __istream_type &operator>>(double &__f);
        __istream_type &operator>>(long double &__f);
        __istream_type &operator>>(void *&__p);
        __istream_type &operator>>(__streambuf_type *__sb);
        streamsize gcount() const;
        int_type get();
        __istream_type &get(char_type &__c);
        __istream_type &get(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &get(char_type *__s, streamsize __n);
        __istream_type &get(__streambuf_type &__sb, char_type __delim);
        __istream_type &get(__streambuf_type &__sb);
        __istream_type &getline(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &getline(char_type *__s, streamsize __n);
        __istream_type &ignore();
        __istream_type &ignore(streamsize __n);
        __istream_type &ignore(streamsize __n, int_type __delim);
        int_type peek();
        __istream_type &read(char_type *__s, streamsize __n);
        streamsize readsome(char_type *__s, streamsize __n);
        __istream_type &putback(char_type __c);
        __istream_type &unget();
        int sync();
        pos_type tellg();
        __istream_type &seekg(pos_type);
        __istream_type &seekg(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_istream();
        template <typename _ValueT = float> __istream_type &_M_extract(float &__v)template <typename _ValueT = unsigned long long> __istream_type &_M_extract(unsigned long long &__v)template <typename _ValueT = double> __istream_type &_M_extract(double &__v)template <typename _ValueT = void *> __istream_type &_M_extract(void *&__v)template <typename _ValueT = long> __istream_type &_M_extract(long &__v)template <typename _ValueT = unsigned short> __istream_type &_M_extract(unsigned short &__v)template <typename _ValueT = long double> __istream_type &_M_extract(long double &__v)template <typename _ValueT = unsigned long> __istream_type &_M_extract(unsigned long &__v)template <typename _ValueT = bool> __istream_type &_M_extract(bool &__v)template <typename _ValueT = unsigned int> __istream_type &_M_extract(unsigned int &__v)template <typename _ValueT = long long> __istream_type &_M_extract(long long &__v)template <typename _ValueT> __istream_type &_M_extract(_ValueT &__v);
        inline std::basic_istream<wchar_t> &operator=(const std::basic_istream<wchar_t> &);
        inline basic_istream(const std::basic_istream<wchar_t> &);
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_istream : virtual public basic_ios<char, std::char_traits<char> > {
        class basic_istream;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef basic_streambuf<char, std::char_traits<char> > __streambuf_type;
        typedef basic_ios<char, std::char_traits<char> > __ios_type;
        typedef basic_istream<char, std::char_traits<char> > __istream_type;
        typedef num_get<char, istreambuf_iterator<char, std::char_traits<char> > > __num_get_type;
        typedef ctype<char> __ctype_type;
    protected:
    protected:
        streamsize _M_gcount;
    public:
    public:
        basic_istream(__streambuf_type *__sb);
        virtual void ~basic_istream();
        class sentry {
            class sentry;
            bool _M_ok;
        public:
        public:
            typedef std::char_traits<char> traits_type;
            typedef basic_streambuf<char, std::char_traits<char> > __streambuf_type;
            typedef basic_istream<char, std::char_traits<char> > __istream_type;
            typedef typename __istream_type::__ctype_type __ctype_type;
            typedef typename char_traits<char>::int_type __int_type;
            sentry(basic_istream<char, std::char_traits<char> > &__is, bool __noskipws);
            bool operator _Bool() const;
        };
        ;
        __istream_type &operator>>(__istream_type &(*__pf)(__istream_type &));
        __istream_type &operator>>(__ios_type &(*__pf)(__ios_type &));
        __istream_type &operator>>(std::ios_base &(*__pf)(std::ios_base &));
        __istream_type &operator>>(bool &__n);
        __istream_type &operator>>(short &__n);
        __istream_type &operator>>(unsigned short &__n);
        __istream_type &operator>>(int &__n);
        __istream_type &operator>>(unsigned int &__n);
        __istream_type &operator>>(long &__n);
        __istream_type &operator>>(unsigned long &__n);
        __istream_type &operator>>(long long &__n);
        __istream_type &operator>>(unsigned long long &__n);
        __istream_type &operator>>(float &__f);
        __istream_type &operator>>(double &__f);
        __istream_type &operator>>(long double &__f);
        __istream_type &operator>>(void *&__p);
        __istream_type &operator>>(__streambuf_type *__sb);
        streamsize gcount() const;
        int_type get();
        __istream_type &get(char_type &__c);
        __istream_type &get(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &get(char_type *__s, streamsize __n);
        __istream_type &get(__streambuf_type &__sb, char_type __delim);
        __istream_type &get(__streambuf_type &__sb);
        __istream_type &getline(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &getline(char_type *__s, streamsize __n);
        __istream_type &ignore();
        __istream_type &ignore(streamsize __n);
        __istream_type &ignore(streamsize __n, int_type __delim);
        int_type peek();
        __istream_type &read(char_type *__s, streamsize __n);
        streamsize readsome(char_type *__s, streamsize __n);
        __istream_type &putback(char_type __c);
        __istream_type &unget();
        int sync();
        pos_type tellg();
        __istream_type &seekg(pos_type);
        __istream_type &seekg(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_istream();
        template <typename _ValueT = float> __istream_type &_M_extract(float &__v)template <typename _ValueT = unsigned long long> __istream_type &_M_extract(unsigned long long &__v)template <typename _ValueT = double> __istream_type &_M_extract(double &__v)template <typename _ValueT = void *> __istream_type &_M_extract(void *&__v)template <typename _ValueT = long> __istream_type &_M_extract(long &__v)template <typename _ValueT = unsigned short> __istream_type &_M_extract(unsigned short &__v)template <typename _ValueT = long double> __istream_type &_M_extract(long double &__v)template <typename _ValueT = unsigned long> __istream_type &_M_extract(unsigned long &__v)template <typename _ValueT = bool> __istream_type &_M_extract(bool &__v)template <typename _ValueT = unsigned int> __istream_type &_M_extract(unsigned int &__v)template <typename _ValueT = long long> __istream_type &_M_extract(long long &__v)template <typename _ValueT> __istream_type &_M_extract(_ValueT &__v);
        inline std::basic_istream<char> &operator=(const std::basic_istream<char> &);
        inline basic_istream(const std::basic_istream<char> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_istream : virtual public basic_ios<_CharT, _Traits> {
        class basic_istream;
    public:
    public:
        typedef _CharT char_type;
        typedef typename _Traits::int_type int_type;
        typedef typename _Traits::pos_type pos_type;
        typedef typename _Traits::off_type off_type;
        typedef _Traits traits_type;
        typedef basic_streambuf<_CharT, _Traits> __streambuf_type;
        typedef basic_ios<_CharT, _Traits> __ios_type;
        typedef basic_istream<_CharT, _Traits> __istream_type;
        typedef num_get<_CharT, istreambuf_iterator<_CharT, _Traits> > __num_get_type;
        typedef ctype<_CharT> __ctype_type;
    protected:
    protected:
        streamsize _M_gcount;
    public:
    public:
        basic_istream<_CharT, _Traits>(__streambuf_type *__sb) : _M_gcount((CXXFunctionalCastExpr 0x9f4a1c0 </usr/include/c++/4.6/istream:93:19, col:31> 'streamsize':'int' functional cast to streamsize <NoOp>
  (IntegerLiteral 0x9f4a1a8 <col:30> 'int' 0))
) (CompoundStmt 0x9f4a2b8 </usr/include/c++/4.6/istream:94:7, col:27>
  (CallExpr 0x9f4a298 <col:9, col:24> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9f4a248 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0x9f4a238 <col:9> 'basic_istream<_CharT, _Traits> *' this))
    (DeclRefExpr 0x9f4a27c <col:20> '__streambuf_type *' lvalue ParmVar 0x9f448a0 '__sb' '__streambuf_type *')))


        virtual void ~basic_istream<_CharT, _Traits>() (CompoundStmt 0x9f4a350 </usr/include/c++/4.6/istream:103:7, col:36>
  (BinaryOperator 0x9f4a338 <col:9, col:33> '<dependent type>' '='
    (MemberExpr 0x9f4a2e0 <col:9> 'streamsize':'int' lvalue ->_M_gcount 0x9f447f0
      (CXXThisExpr 0x9f4a2d0 <col:9> 'basic_istream<_CharT, _Traits> *' this))
    (CXXFunctionalCastExpr 0x9f4a320 <col:21, col:33> 'streamsize':'int' functional cast to streamsize <NoOp>
      (IntegerLiteral 0x9f4a308 <col:32> 'int' 0))))


        class sentry;
        ;
        __istream_type &operator>>(__istream_type &(*__pf)(__istream_type &)) (CompoundStmt 0x9f4a3d8 </usr/include/c++/4.6/istream:122:7, col:29>
  (ReturnStmt 0x9f4a3c8 <col:9, col:26>
    (CallExpr 0x9f4a3a8 <col:16, col:26> '<dependent type>'
      (DeclRefExpr 0x9f4a364 <col:16> '__istream_type &(*)(__istream_type &)' lvalue ParmVar 0x9f44c60 '__pf' '__istream_type &(*)(__istream_type &)')
      (UnaryOperator 0x9f4a390 <col:21, col:22> '<dependent type>' prefix '*'
        (CXXThisExpr 0x9f4a380 <col:22> 'basic_istream<_CharT, _Traits> *' this)))))


        __istream_type &operator>>(__ios_type &(*__pf)(__ios_type &)) (CompoundStmt 0x9f4a488 </usr/include/c++/4.6/istream:126:7, line:129:7>
  (CallExpr 0x9f4a430 <line:127:2, col:12> '<dependent type>'
    (DeclRefExpr 0x9f4a3ec <col:2> '__ios_type &(*)(__ios_type &)' lvalue ParmVar 0x9f44e70 '__pf' '__ios_type &(*)(__ios_type &)')
    (UnaryOperator 0x9f4a418 <col:7, col:8> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9f4a408 <col:8> 'basic_istream<_CharT, _Traits> *' this)))
  (ReturnStmt 0x9f4a478 <line:128:2, col:10>
    (UnaryOperator 0x9f4a460 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9f4a450 <col:10> 'basic_istream<_CharT, _Traits> *' this))))


        __istream_type &operator>>(std::ios_base &(*__pf)(std::ios_base &)) (CompoundStmt 0x9f4a538 </usr/include/c++/4.6/istream:133:7, line:136:7>
  (CallExpr 0x9f4a4e0 <line:134:2, col:12> '<dependent type>'
    (DeclRefExpr 0x9f4a4a0 <col:2> 'class std::ios_base &(*)(class std::ios_base &)' lvalue ParmVar 0x9f44ff0 '__pf' 'class std::ios_base &(*)(class std::ios_base &)')
    (UnaryOperator 0x9f4a4c8 <col:7, col:8> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9f4a4b8 <col:8> 'basic_istream<_CharT, _Traits> *' this)))
  (ReturnStmt 0x9f4a528 <line:135:2, col:10>
    (UnaryOperator 0x9f4a510 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9f4a500 <col:10> 'basic_istream<_CharT, _Traits> *' this))))


        __istream_type &operator>>(bool &__n) (CompoundStmt 0x9f4a5e8 </usr/include/c++/4.6/istream:169:7, col:33>
  (ReturnStmt 0x9f4a5d8 <col:9, col:30>
    (CallExpr 0x9f4a5b8 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0x9f4a560 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9f4a59c <col:27> '_Bool' lvalue ParmVar 0x9f45110 '__n' '_Bool &'))))


        __istream_type &operator>>(short &__n);
        __istream_type &operator>>(unsigned short &__n) (CompoundStmt 0x9f4a698 </usr/include/c++/4.6/istream:176:7, col:33>
  (ReturnStmt 0x9f4a688 <col:9, col:30>
    (CallExpr 0x9f4a668 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0x9f4a610 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9f4a64c <col:27> 'unsigned short' lvalue ParmVar 0x9f45350 '__n' 'unsigned short &'))))


        __istream_type &operator>>(int &__n);
        __istream_type &operator>>(unsigned int &__n) (CompoundStmt 0x9f4a748 </usr/include/c++/4.6/istream:183:7, col:33>
  (ReturnStmt 0x9f4a738 <col:9, col:30>
    (CallExpr 0x9f4a718 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0x9f4a6c0 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9f4a6fc <col:27> 'unsigned int' lvalue ParmVar 0x9f45590 '__n' 'unsigned int &'))))


        __istream_type &operator>>(long &__n) (CompoundStmt 0x9f4a7f8 </usr/include/c++/4.6/istream:187:7, col:33>
  (ReturnStmt 0x9f4a7e8 <col:9, col:30>
    (CallExpr 0x9f4a7c8 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0x9f4a770 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9f4a7ac <col:27> 'long' lvalue ParmVar 0x9f456b0 '__n' 'long &'))))


        __istream_type &operator>>(unsigned long &__n) (CompoundStmt 0x9f4a8a8 </usr/include/c++/4.6/istream:191:7, col:33>
  (ReturnStmt 0x9f4a898 <col:9, col:30>
    (CallExpr 0x9f4a878 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0x9f4a820 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9f4a85c <col:27> 'unsigned long' lvalue ParmVar 0x9f457d0 '__n' 'unsigned long &'))))


        __istream_type &operator>>(long long &__n) (CompoundStmt 0x9f4a958 </usr/include/c++/4.6/istream:196:7, col:33>
  (ReturnStmt 0x9f4a948 <col:9, col:30>
    (CallExpr 0x9f4a928 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0x9f4a8d0 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9f4a90c <col:27> 'long long' lvalue ParmVar 0x9f458f0 '__n' 'long long &'))))


        __istream_type &operator>>(unsigned long long &__n) (CompoundStmt 0x9f4aa08 </usr/include/c++/4.6/istream:200:7, col:33>
  (ReturnStmt 0x9f4a9f8 <col:9, col:30>
    (CallExpr 0x9f4a9d8 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0x9f4a980 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9f4a9bc <col:27> 'unsigned long long' lvalue ParmVar 0x9f45a10 '__n' 'unsigned long long &'))))


        __istream_type &operator>>(float &__f) (CompoundStmt 0x9f4aab8 </usr/include/c++/4.6/istream:205:7, col:33>
  (ReturnStmt 0x9f4aaa8 <col:9, col:30>
    (CallExpr 0x9f4aa88 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0x9f4aa30 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9f4aa6c <col:27> 'float' lvalue ParmVar 0x9f45b30 '__f' 'float &'))))


        __istream_type &operator>>(double &__f) (CompoundStmt 0x9f4ab68 </usr/include/c++/4.6/istream:209:7, col:33>
  (ReturnStmt 0x9f4ab58 <col:9, col:30>
    (CallExpr 0x9f4ab38 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0x9f4aae0 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9f4ab1c <col:27> 'double' lvalue ParmVar 0x9f45c50 '__f' 'double &'))))


        __istream_type &operator>>(long double &__f) (CompoundStmt 0x9f4ac18 </usr/include/c++/4.6/istream:213:7, col:33>
  (ReturnStmt 0x9f4ac08 <col:9, col:30>
    (CallExpr 0x9f4abe8 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0x9f4ab90 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9f4abcc <col:27> 'long double' lvalue ParmVar 0x9f45d70 '__f' 'long double &'))))


        __istream_type &operator>>(void *&__p) (CompoundStmt 0x9f4acc8 </usr/include/c++/4.6/istream:217:7, col:33>
  (ReturnStmt 0x9f4acb8 <col:9, col:30>
    (CallExpr 0x9f4ac98 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0x9f4ac40 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9f4ac7c <col:27> 'void *' lvalue ParmVar 0x9f45e90 '__p' 'void *&'))))


        __istream_type &operator>>(__streambuf_type *__sb);
        streamsize gcount() const (CompoundStmt 0x9f4ad38 </usr/include/c++/4.6/istream:251:7, col:27>
  (ReturnStmt 0x9f4ad28 <col:9, col:16>
    (MemberExpr 0x9f4ad08 <col:16> 'const streamsize':'const int' lvalue ->_M_gcount 0x9f447f0
      (CXXThisExpr 0x9f4acf8 <col:16> 'const basic_istream<_CharT, _Traits> *' this))))


        int_type get();
        __istream_type &get(char_type &__c);
        __istream_type &get(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &get(char_type *__s, streamsize __n) (CompoundStmt 0x9f4ae80 </usr/include/c++/4.6/istream:335:7, col:56>
  (ReturnStmt 0x9f4ae70 <col:9, col:53>
    (CallExpr 0x9f4ae48 <col:16, col:53> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f4ad60 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9f4ad50 <col:16> 'basic_istream<_CharT, _Traits> *' this))
      (DeclRefExpr 0x9f4ad94 <col:26> 'char_type *' lvalue ParmVar 0x9f48d30 '__s' 'char_type *')
      (DeclRefExpr 0x9f4adac <col:31> 'streamsize':'int' lvalue ParmVar 0x9f48d70 '__n' 'streamsize':'int')
      (CallExpr 0x9f4ae28 <col:36, col:52> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f4add8 <col:36, col:42> '<dependent type>' lvalue
          (CXXThisExpr 0x9f4adc8 <col:36> 'basic_istream<_CharT, _Traits> *' this))
        (CharacterLiteral 0x9f4ae10 <col:48> 'char'10)))))


        __istream_type &get(__streambuf_type &__sb, char_type __delim);
        __istream_type &get(__streambuf_type &__sb) (CompoundStmt 0x9f4afb0 </usr/include/c++/4.6/istream:368:7, col:52>
  (ReturnStmt 0x9f4afa0 <col:9, col:49>
    (CallExpr 0x9f4af78 <col:16, col:49> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f4aea8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9f4ae98 <col:16> 'basic_istream<_CharT, _Traits> *' this))
      (DeclRefExpr 0x9f4aedc <col:26> '__streambuf_type':'basic_streambuf<_CharT, _Traits>' lvalue ParmVar 0x9f49030 '__sb' '__streambuf_type &')
      (CallExpr 0x9f4af58 <col:32, col:48> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f4af08 <col:32, col:38> '<dependent type>' lvalue
          (CXXThisExpr 0x9f4aef8 <col:32> 'basic_istream<_CharT, _Traits> *' this))
        (CharacterLiteral 0x9f4af40 <col:44> 'char'10)))))


        __istream_type &getline(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &getline(char_type *__s, streamsize __n) (CompoundStmt 0x9f4b0f8 </usr/include/c++/4.6/istream:408:7, col:60>
  (ReturnStmt 0x9f4b0e8 <col:9, col:57>
    (CallExpr 0x9f4b0c0 <col:16, col:57> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f4afd8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9f4afc8 <col:16> 'basic_istream<_CharT, _Traits> *' this))
      (DeclRefExpr 0x9f4b00c <col:30> 'char_type *' lvalue ParmVar 0x9f492b0 '__s' 'char_type *')
      (DeclRefExpr 0x9f4b024 <col:35> 'streamsize':'int' lvalue ParmVar 0x9f492f0 '__n' 'streamsize':'int')
      (CallExpr 0x9f4b0a0 <col:40, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f4b050 <col:40, col:46> '<dependent type>' lvalue
          (CXXThisExpr 0x9f4b040 <col:40> 'basic_istream<_CharT, _Traits> *' this))
        (CharacterLiteral 0x9f4b088 <col:52> 'char'10)))))


        __istream_type &ignore();
        __istream_type &ignore(streamsize __n);
        __istream_type &ignore(streamsize __n, int_type __delim);
        int_type peek();
        __istream_type &read(char_type *__s, streamsize __n);
        streamsize readsome(char_type *__s, streamsize __n);
        __istream_type &putback(char_type __c);
        __istream_type &unget();
        int sync();
        pos_type tellg();
        __istream_type &seekg(pos_type);
        __istream_type &seekg(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_istream<_CharT, _Traits>() : _M_gcount((CXXFunctionalCastExpr 0x9f4b130 </usr/include/c++/4.6/istream:587:19, col:31> 'streamsize':'int' functional cast to streamsize <NoOp>
  (IntegerLiteral 0x9f4b118 <col:30> 'int' 0))
) (CompoundStmt 0x9f4b210 </usr/include/c++/4.6/istream:588:7, col:24>
  (CallExpr 0x9f4b1f0 <col:9, col:21> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9f4b1a0 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0x9f4b190 <col:9> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0x9f4b1d8 <col:20> 'int' 0)))


        template <typename _ValueT> __istream_type &_M_extract(_ValueT &__v);
    };
    basic_istream<char> &getline(char_type *__s, streamsize __n, char_type __delim);
    basic_istream<char> &ignore(streamsize __n);
    basic_istream<char> &ignore(streamsize __n, int_type __delim);
    basic_istream<wchar_t> &getline(char_type *__s, streamsize __n, char_type __delim);
    basic_istream<wchar_t> &ignore(streamsize __n);
    basic_istream<wchar_t> &ignore(streamsize __n, int_type __delim);
    class sentry {
        class sentry;
        bool _M_ok;
    public:
    public:
        typedef _Traits traits_type;
        typedef basic_streambuf<_CharT, _Traits> __streambuf_type;
        typedef basic_istream<_CharT, _Traits> __istream_type;
        typedef typename __istream_type::__ctype_type __ctype_type;
        typedef typename _Traits::int_type __int_type;
        sentry(basic_istream<_CharT, _Traits> &__is, bool __noskipws = (CXXBoolLiteralExpr 0x9f5bc50 </usr/include/c++/4.6/istream:673:70> '_Bool' false)
);
        bool operator _Bool() const (CompoundStmt 0x9f5bcd8 </usr/include/c++/4.6/istream:686:7, col:23>
  (ReturnStmt 0x9f5bcc8 <col:9, col:16>
    (MemberExpr 0x9f5bca4 <col:16> 'const _Bool' lvalue ->_M_ok 0x9f5b4c0
      (CXXThisExpr 0x9f5bc78 <col:16> 'const class std::basic_istream::sentry *' this))))


    };
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> basic_istream<wchar_t, std::char_traits<wchar_t> > &operator>>(basic_istream<wchar_t, std::char_traits<wchar_t> > &__in, wchar_t &__c)template <typename _CharT = char, typename _Traits = std::char_traits<char>> basic_istream<char, std::char_traits<char> > &operator>>(basic_istream<char, std::char_traits<char> > &__in, char &__c)template <typename _CharT, typename _Traits> basic_istream<_CharT, _Traits> &operator>>(basic_istream<_CharT, _Traits> &__in, _CharT &__c);
    template <class _Traits = std::char_traits<char>> inline basic_istream<char, std::char_traits<char> > &operator>>(basic_istream<char, std::char_traits<char> > &__in, unsigned char &__c)template <class _Traits> inline basic_istream<char, _Traits> &operator>>(basic_istream<char, _Traits> &__in, unsigned char &__c) (CompoundStmt 0x9f5c750 </usr/include/c++/4.6/istream:709:5, col:54>
  (ReturnStmt 0x9f5c740 <col:7, col:51>
    (ParenExpr 0x9f5c728 <col:14, col:51> '<dependent type>'
      (CXXOperatorCallExpr 0x9f5c700 <col:15, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x9f5c6c0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f5c620 0x9f5c170 0x9e4fff0 0x9e4fa20)
        (DeclRefExpr 0x9f5c650 <col:15> 'basic_istream<char, _Traits>' lvalue ParmVar 0x9f5c480 '__in' 'basic_istream<char, _Traits> &')
        (CXXReinterpretCastExpr 0x9f5c6a8 <col:23, col:50> 'char' lvalue reinterpret_cast<char &> <LValueBitCast>
          (DeclRefExpr 0x9f5c668 <col:47> 'unsigned char' lvalue ParmVar 0x9f5c4d0 '__c' 'unsigned char &'))))))

;
    template <class _Traits = std::char_traits<char>> inline basic_istream<char, std::char_traits<char> > &operator>>(basic_istream<char, std::char_traits<char> > &__in, signed char &__c)template <class _Traits> inline basic_istream<char, _Traits> &operator>>(basic_istream<char, _Traits> &__in, signed char &__c) (CompoundStmt 0x9f5ccb8 </usr/include/c++/4.6/istream:714:5, col:54>
  (ReturnStmt 0x9f5cca8 <col:7, col:51>
    (ParenExpr 0x9f5cc90 <col:14, col:51> '<dependent type>'
      (CXXOperatorCallExpr 0x9f5cc68 <col:15, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x9f5cc20 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f5cb80 0x9f5c620 0x9f5c170 0x9e4fff0 0x9e4fa20)
        (DeclRefExpr 0x9f5cbb0 <col:15> 'basic_istream<char, _Traits>' lvalue ParmVar 0x9f5c9e0 '__in' 'basic_istream<char, _Traits> &')
        (CXXReinterpretCastExpr 0x9f5cc08 <col:23, col:50> 'char' lvalue reinterpret_cast<char &> <LValueBitCast>
          (DeclRefExpr 0x9f5cbc8 <col:47> 'signed char' lvalue ParmVar 0x9f5ca30 '__c' 'signed char &'))))))

;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> basic_istream<wchar_t, std::char_traits<wchar_t> > &operator>>(basic_istream<wchar_t, std::char_traits<wchar_t> > &__in, wchar_t *__s)template <typename _CharT = char, typename _Traits = std::char_traits<char>> basic_istream<char> &operator>>(basic_istream<char> &__in, char *__s)template <typename _CharT, typename _Traits> basic_istream<_CharT, _Traits> &operator>>(basic_istream<_CharT, _Traits> &__in, _CharT *__s);
    basic_istream<char> &operator>>(basic_istream<char> &__in, char *__s);
    template <class _Traits = std::char_traits<char>> inline basic_istream<char, std::char_traits<char> > &operator>>(basic_istream<char, std::char_traits<char> > &__in, unsigned char *__s)template <class _Traits> inline basic_istream<char, _Traits> &operator>>(basic_istream<char, _Traits> &__in, unsigned char *__s) (CompoundStmt 0x9f5ddc0 </usr/include/c++/4.6/istream:756:5, col:54>
  (ReturnStmt 0x9f5ddb0 <col:7, col:51>
    (ParenExpr 0x9f5dd98 <col:14, col:51> '<dependent type>'
      (CXXOperatorCallExpr 0x9f5dd70 <col:15, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x9f5dd28 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f5dc90 0x9f5d130 0x9f5cb80 0x9f5c620 0x9f5c170 0x9e4fff0)
        (DeclRefExpr 0x9f5dcc0 <col:15> 'basic_istream<char, _Traits>' lvalue ParmVar 0x9f5daf0 '__in' 'basic_istream<char, _Traits> &')
        (CXXReinterpretCastExpr 0x9f5dd10 <col:23, col:50> 'char *' reinterpret_cast<char *> <BitCast>
          (ImplicitCastExpr 0x9f5dd00 <col:47> 'unsigned char *' <LValueToRValue>
            (DeclRefExpr 0x9f5dcd8 <col:47> 'unsigned char *' lvalue ParmVar 0x9f5db40 '__s' 'unsigned char *')))))))

;
    template <class _Traits = std::char_traits<char>> inline basic_istream<char, std::char_traits<char> > &operator>>(basic_istream<char, std::char_traits<char> > &__in, signed char *__s)template <class _Traits> inline basic_istream<char, _Traits> &operator>>(basic_istream<char, _Traits> &__in, signed char *__s) (CompoundStmt 0x9f5e328 </usr/include/c++/4.6/istream:761:5, col:54>
  (ReturnStmt 0x9f5e318 <col:7, col:51>
    (ParenExpr 0x9f5e300 <col:14, col:51> '<dependent type>'
      (CXXOperatorCallExpr 0x9f5e2d8 <col:15, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x9f5e288 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f5e1f0 0x9f5dc90 0x9f5d130 0x9f5cb80 0x9f5c620 0x9f5c170 0x9e4fff0)
        (DeclRefExpr 0x9f5e220 <col:15> 'basic_istream<char, _Traits>' lvalue ParmVar 0x9f5e050 '__in' 'basic_istream<char, _Traits> &')
        (CXXReinterpretCastExpr 0x9f5e270 <col:23, col:50> 'char *' reinterpret_cast<char *> <BitCast>
          (ImplicitCastExpr 0x9f5e260 <col:47> 'signed char *' <LValueToRValue>
            (DeclRefExpr 0x9f5e238 <col:47> 'signed char *' lvalue ParmVar 0x9f5e0a0 '__s' 'signed char *')))))))

;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_iostream : public basic_istream<wchar_t, std::char_traits<wchar_t> >, public basic_ostream<wchar_t, std::char_traits<wchar_t> > {
        class basic_iostream;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef basic_istream<wchar_t, std::char_traits<wchar_t> > __istream_type;
        typedef basic_ostream<wchar_t, std::char_traits<wchar_t> > __ostream_type;
        basic_iostream(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        virtual void ~basic_iostream();
    protected:
    protected:
        basic_iostream();
        inline std::basic_iostream<wchar_t> &operator=(const std::basic_iostream<wchar_t> &);
        inline basic_iostream(const std::basic_iostream<wchar_t> &);
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_iostream : public basic_istream<char, std::char_traits<char> >, public basic_ostream<char, std::char_traits<char> > {
        class basic_iostream;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef basic_istream<char, std::char_traits<char> > __istream_type;
        typedef basic_ostream<char, std::char_traits<char> > __ostream_type;
        basic_iostream(basic_streambuf<char, std::char_traits<char> > *__sb);
        virtual void ~basic_iostream();
    protected:
    protected:
        basic_iostream();
        inline std::basic_iostream<char> &operator=(const std::basic_iostream<char> &);
        inline basic_iostream(const std::basic_iostream<char> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_iostream : public basic_istream<_CharT, _Traits>, public basic_ostream<_CharT, _Traits> {
        class basic_iostream;
    public:
    public:
        typedef _CharT char_type;
        typedef typename _Traits::int_type int_type;
        typedef typename _Traits::pos_type pos_type;
        typedef typename _Traits::off_type off_type;
        typedef _Traits traits_type;
        typedef basic_istream<_CharT, _Traits> __istream_type;
        typedef basic_ostream<_CharT, _Traits> __ostream_type;
        basic_iostream<_CharT, _Traits>(basic_streambuf<_CharT, _Traits> *__sb) : __istream_type((DeclRefExpr 0x9f5efe8 </usr/include/c++/4.6/istream:799:24> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0x9f5ed80 '__sb' 'basic_streambuf<_CharT, _Traits> *')
), __ostream_type((DeclRefExpr 0x9f5f058 </usr/include/c++/4.6/istream:799:46> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0x9f5ed80 '__sb' 'basic_streambuf<_CharT, _Traits> *')
) (CompoundStmt 0x9f5f0d0 </usr/include/c++/4.6/istream:799:52, col:54>)


        virtual void ~basic_iostream<_CharT, _Traits>() (CompoundStmt 0x9f5f0e0 </usr/include/c++/4.6/istream:805:25, col:27>)


    protected:
    protected:
        basic_iostream<_CharT, _Traits>() : __istream_type(), __ostream_type() (CompoundStmt 0x9f5f170 </usr/include/c++/4.6/istream:809:44, col:46>)


    };
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> basic_istream<wchar_t, std::char_traits<wchar_t> > &ws(basic_istream<wchar_t, std::char_traits<wchar_t> > &__in)template <typename _CharT = char, typename _Traits = std::char_traits<char>> basic_istream<char, std::char_traits<char> > &ws(basic_istream<char, std::char_traits<char> > &__in)template <typename _CharT, typename _Traits> basic_istream<_CharT, _Traits> &ws(basic_istream<_CharT, _Traits> &__is);
}
namespace std {
    basic_istream<_CharT, _Traits>::class sentry::sentry(basic_istream<_CharT, _Traits> &__in, bool __noskip = (CXXBoolLiteralExpr 0x9f5bc50 </usr/include/c++/4.6/istream:673:70> '_Bool' false)
) : _M_ok((CXXBoolLiteralExpr 0x9f5fd18 </usr/include/c++/4.6/bits/istream.tcc:48:73> '_Bool' false)
) (CompoundStmt 0x9f60d88 </usr/include/c++/4.6/bits/istream.tcc:49:5, line:82:5>
  (DeclStmt 0x9f5fe28 <line:50:7, col:50>
    0x9f5fda0 "ios_base::iostate __err =
      (ImplicitCastExpr 0x9f5fe18 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9f5fdf4 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e114b0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (IfStmt 0x9f60a60 <line:51:7, line:73:2>
    <<<NULL>>>
    (CallExpr 0x9f5fe88 <line:51:11, col:21> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f5fe50 <col:11, col:16> '<dependent type>' lvalue
        (DeclRefExpr 0x9f5fe38 <col:11> 'basic_istream<_CharT, _Traits>':'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9f5fbb0 '__in' 'basic_istream<_CharT, _Traits> &')))
    (CompoundStmt 0x9f60a48 <line:52:2, line:73:2>
      (IfStmt 0x9f5ffe0 <line:53:4, line:54:24>
        <<<NULL>>>
        (CallExpr 0x9f5fef8 <line:53:8, col:17> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9f5fec0 <col:8, col:13> '<dependent type>' lvalue
            (DeclRefExpr 0x9f5fea4 <col:8> 'basic_istream<_CharT, _Traits>':'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9f5fbb0 '__in' 'basic_istream<_CharT, _Traits> &')))
        (CallExpr 0x9f5ffc0 <line:54:6, col:24> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9f5ff88 <col:6, col:18> '<dependent type>' lvalue
            (CallExpr 0x9f5ff68 <col:6, col:15> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9f5ff30 <col:6, col:11> '<dependent type>' lvalue
                (DeclRefExpr 0x9f5ff14 <col:6> 'basic_istream<_CharT, _Traits>':'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9f5fbb0 '__in' 'basic_istream<_CharT, _Traits> &')))))
        <<<NULL>>>)
      (IfStmt 0x9f60a28 <line:55:4, line:72:6>
        <<<NULL>>>
        (BinaryOperator 0x9f60180 <line:55:8, col:57> '_Bool' '&&'
          (UnaryOperator 0x9f60028 <col:8, col:9> '_Bool' prefix '!'
            (ImplicitCastExpr 0x9f60018 <col:9> '_Bool' <LValueToRValue>
              (DeclRefExpr 0x9f5fffc <col:9> '_Bool' lvalue ParmVar 0x9f5fbf0 '__noskip' '_Bool')))
          (CXXUnresolvedConstructExpr 0x9f60160 <col:21, col:57> '_Bool'
            (CXXOperatorCallExpr 0x9f60138 <col:26, col:51> '<dependent type>'
              (UnresolvedLookupExpr 0x9f600f8 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e0a5b0 0x9e0bdb0 0x9e0d020)
              (CallExpr 0x9f60098 <col:26, col:37> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9f60060 <col:26, col:31> '<dependent type>' lvalue
                  (DeclRefExpr 0x9f60048 <col:26> 'basic_istream<_CharT, _Traits>':'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9f5fbb0 '__in' 'basic_istream<_CharT, _Traits> &')))
              (DeclRefExpr 0x9f600d4 <col:41, col:51> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9e11100 'skipws' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
        (CompoundStmt 0x9f60a00 <line:56:6, line:72:6>
          (DeclStmt 0x9f60290 <line:57:8, col:51>
            0x9f601c0 "const __int_type __eof =
              (CallExpr 0x9f60270 <col:33, col:50> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9f60238 <col:33, col:46> '<dependent type>' lvalue))")
          (DeclStmt 0x9f60388 <line:58:8, col:45>
            0x9f602e0 "__streambuf_type *__sb =
              (CallExpr 0x9f60368 <col:33, col:44> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9f60330 <col:33, col:38> '<dependent type>' lvalue
                  (DeclRefExpr 0x9f60314 <col:33> 'basic_istream<_CharT, _Traits>':'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9f5fbb0 '__in' 'basic_istream<_CharT, _Traits> &')))")
          (DeclStmt 0x9f60448 <line:59:8, col:38>
            0x9f603a0 "__int_type __c =
              (CallExpr 0x9f60428 <col:25, col:37> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9f603f0 <col:25, col:31> '<dependent type>' lvalue
                  (DeclRefExpr 0x9f603d4 <col:25> '__streambuf_type *' lvalue Var 0x9f602e0 '__sb' '__streambuf_type *')))")
          (DeclStmt 0x9f60580 <line:61:8, col:63>
            0x9f604a0 "const __ctype_type &__ct =
              (CallExpr 0x9f60560 <col:35, col:62> '<dependent type>'
                (UnresolvedLookupExpr 0x9f604d8 <col:35> '<overloaded function type>' lvalue (ADL) = '1' 0x9f00270)
                (CXXDependentScopeMemberExpr 0x9f60528 <col:49, col:54> '<dependent type>' lvalue
                  (DeclRefExpr 0x9f6050c <col:49> 'basic_istream<_CharT, _Traits>':'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9f5fbb0 '__in' 'basic_istream<_CharT, _Traits> &')))")
          (WhileStmt 0x9f60858 <line:62:8, line:65:22>
            <<<NULL>>>
            (BinaryOperator 0x9f607a0 <line:62:15, line:64:35> '<dependent type>' '&&'
              (UnaryOperator 0x9f60640 <line:62:15, col:51> '<dependent type>' prefix '!'
                (CallExpr 0x9f60618 <col:16, col:51> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9f605b0 <col:16, col:29> '<dependent type>' lvalue)
                  (DeclRefExpr 0x9f605e4 <col:41> '__int_type':'typename _Traits::int_type' lvalue Var 0x9f603a0 '__c' '__int_type':'typename _Traits::int_type')
                  (DeclRefExpr 0x9f605fc <col:46> 'const __int_type':'const typename _Traits::int_type' lvalue Var 0x9f601c0 '__eof' 'const __int_type':'const typename _Traits::int_type')))
              (CallExpr 0x9f60778 <line:63:11, line:64:35> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9f60670 <line:63:11, col:16> '<dependent type>' lvalue
                  (DeclRefExpr 0x9f60654 <col:11> 'const __ctype_type':'const ctype<_CharT>' lvalue Var 0x9f604a0 '__ct' 'const __ctype_type &'))
                (DeclRefExpr 0x9f606c4 <col:19, col:31> 'const mask':'const unsigned short' lvalue Var 0x9e69860 'space' 'const mask':'const unsigned short')
                (CallExpr 0x9f60758 <line:64:5, col:34> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9f60708 <col:5, col:18> '<dependent type>' lvalue)
                  (DeclRefExpr 0x9f6073c <col:31> '__int_type':'typename _Traits::int_type' lvalue Var 0x9f603a0 '__c' '__int_type':'typename _Traits::int_type'))))
            (BinaryOperator 0x9f60840 <line:65:3, col:22> '<dependent type>' '='
              (DeclRefExpr 0x9f607b8 <col:3> '__int_type':'typename _Traits::int_type' lvalue Var 0x9f603a0 '__c' '__int_type':'typename _Traits::int_type')
              (CallExpr 0x9f60820 <col:9, col:22> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9f607e8 <col:9, col:15> '<dependent type>' lvalue
                  (DeclRefExpr 0x9f607d0 <col:9> '__streambuf_type *' lvalue Var 0x9f602e0 '__sb' '__streambuf_type *')))))
          (IfStmt 0x9f609e0 <line:70:8, line:71:22>
            <<<NULL>>>
            (CallExpr 0x9f60900 <line:70:12, col:47> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9f60898 <col:12, col:25> '<dependent type>' lvalue)
              (DeclRefExpr 0x9f608cc <col:37> '__int_type':'typename _Traits::int_type' lvalue Var 0x9f603a0 '__c' '__int_type':'typename _Traits::int_type')
              (DeclRefExpr 0x9f608e4 <col:42> 'const __int_type':'const typename _Traits::int_type' lvalue Var 0x9f601c0 '__eof' 'const __int_type':'const typename _Traits::int_type'))
            (CXXOperatorCallExpr 0x9f609b8 <line:71:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x9f609a8 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9f60990 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9e0fd60 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x9f60924 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f5fda0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0x9f60980 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x9f6095c <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e113f0 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0x9f60d68 <line:75:7, line:81:2>
    <<<NULL>>>
    (BinaryOperator 0x9f60ba0 <line:75:11, col:45> '<dependent type>' '&&'
      (CallExpr 0x9f60ad0 <col:11, col:21> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f60a98 <col:11, col:16> '<dependent type>' lvalue
          (DeclRefExpr 0x9f60a7c <col:11> 'basic_istream<_CharT, _Traits>':'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9f5fbb0 '__in' 'basic_istream<_CharT, _Traits> &')))
      (BinaryOperator 0x9f60b88 <col:26, col:45> '_Bool' '=='
        (ImplicitCastExpr 0x9f60b68 <col:26> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9f60b48 <col:26> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9f60aec <col:26> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f5fda0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (ImplicitCastExpr 0x9f60b78 <col:35, col:45> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9f60b58 <col:35, col:45> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9f60b24 <col:35, col:45> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e114b0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate')))))
    (BinaryOperator 0x9f60bf8 <line:76:2, col:10> '<dependent type>' '='
      (MemberExpr 0x9f60bc8 <col:2> '_Bool' lvalue ->_M_ok 0x9f5b4c0
        (CXXThisExpr 0x9f60bb8 <col:2> 'class std::basic_istream::sentry *' this))
      (CXXBoolLiteralExpr 0x9f60be8 <col:10> '_Bool' true))
    (CompoundStmt 0x9f60d50 <line:78:2, line:81:2>
      (CXXOperatorCallExpr 0x9f60ca0 <line:79:4, col:23> 'const enum std::_Ios_Iostate' lvalue
        (ImplicitCastExpr 0x9f60c90 <col:10, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9f60c78 <col:10, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9e0fd60 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
        (DeclRefExpr 0x9f60c10 <col:4> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f5fda0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
        (ImplicitCastExpr 0x9f60c68 <col:13, col:23> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
          (DeclRefExpr 0x9f60c44 <col:13, col:23> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11450 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
      (CallExpr 0x9f60d30 <line:80:4, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f60ce0 <col:4, col:9> '<dependent type>' lvalue
          (DeclRefExpr 0x9f60cc4 <col:4> 'basic_istream<_CharT, _Traits>':'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9f5fbb0 '__in' 'basic_istream<_CharT, _Traits> &'))
        (DeclRefExpr 0x9f60d14 <col:18> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f5fda0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))))


    template <typename _ValueT> basic_istream<_CharT, _Traits> &_M_extract(_ValueT &__v) (CompoundStmt 0x9f61bf0 </usr/include/c++/4.6/bits/istream.tcc:89:7, line:110:7>
  (DeclStmt 0x9f61500 <line:90:2, col:29>
    0x9f61470 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0x9f614e0 <col:15, col:28> 'class std::basic_istream::sentry'
        (UnaryOperator 0x9f614b8 <col:16, col:17> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9f614a8 <col:17> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0x9f614d0 <col:23> '_Bool' false))")
  (IfStmt 0x9f61b98 <line:91:2, line:108:4>
    <<<NULL>>>
    (DeclRefExpr 0x9f61510 <line:91:6> 'class std::basic_istream::sentry' lvalue Var 0x9f61470 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0x9f61b70 <line:92:4, line:108:4>
      (DeclStmt 0x9f615e8 <line:93:6, col:49>
        0x9f61560 "ios_base::iostate __err =
          (ImplicitCastExpr 0x9f615d8 <col:32, col:42> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9f615b4 <col:32, col:42> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e114b0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0x9f61888 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:98:8>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9f615f8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9f61870 </usr/include/c++/4.6/bits/istream.tcc:95:8, line:98:8>
          (DeclStmt 0x9f61748 <line:96:3, col:63>
            0x9f61670 "const __num_get_type &__ng =
              (CallExpr 0x9f61728 <col:32, col:62> '<dependent type>'
                (UnresolvedLookupExpr 0x9f616a8 <col:32> '<overloaded function type>' lvalue (ADL) = '1' 0x9f00270)
                (CXXDependentScopeMemberExpr 0x9f616f0 <col:46, col:52> '<dependent type>' lvalue
                  (CXXThisExpr 0x9f616e0 <col:46> 'basic_istream<_CharT, _Traits> *' this)))")
          (CallExpr 0x9f61840 <line:97:3, col:39> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f61770 <col:3, col:8> '<dependent type>' lvalue
              (DeclRefExpr 0x9f61758 <col:3> 'const __num_get_type':'const num_get<_CharT, istreambuf_iterator<_CharT, _Traits> >' lvalue Var 0x9f61670 '__ng' 'const __num_get_type &'))
            (UnaryOperator 0x9f617b8 <col:12, col:13> '<dependent type>' prefix '*'
              (CXXThisExpr 0x9f617a8 <col:13> 'basic_istream<_CharT, _Traits> *' this))
            (IntegerLiteral 0x9f617d0 <col:19> 'int' 0)
            (UnaryOperator 0x9f617f8 <col:22, col:23> '<dependent type>' prefix '*'
              (CXXThisExpr 0x9f617e8 <col:23> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9f6180c <col:29> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f61560 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
            (DeclRefExpr 0x9f61824 <col:36> '_ValueT' lvalue ParmVar 0x9f611b0 '__v' '_ValueT &')))
        <<<NULL>>>)
      (IfStmt 0x9f61988 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:103:8>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9f618a8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9f61970 </usr/include/c++/4.6/bits/istream.tcc:100:8, line:103:8>
          (CallExpr 0x9f61940 <line:101:3, col:37> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f618c8 <col:3, col:9> '<dependent type>' lvalue
              (CXXThisExpr 0x9f618b8 <col:3> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9f6191c <col:21, col:31> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11390 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x9f61960 <line:102:26>))
        <<<NULL>>>)
      (IfStmt 0x9f61a78 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:105:47>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9f619a8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9f61a60 </usr/include/c++/4.6/bits/istream.tcc:105:8, col:47>
          (CallExpr 0x9f61a40 <col:10, col:44> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f619c8 <col:10, col:16> '<dependent type>' lvalue
              (CXXThisExpr 0x9f619b8 <col:10> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9f61a1c <col:28, col:38> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11390 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0x9f61b50 <line:106:6, line:107:28>
        <<<NULL>>>
        (ImplicitCastExpr 0x9f61ac0 <line:106:10> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0x9f61ab0 <col:10> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9f61a94 <col:10> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f61560 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0x9f61b30 <line:107:8, col:28> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9f61ae0 <col:8, col:14> '<dependent type>' lvalue
            (CXXThisExpr 0x9f61ad0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0x9f61b14 <col:23> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f61560 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9f61be0 <line:109:2, col:10>
    (UnaryOperator 0x9f61bc8 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9f61bb8 <col:10> 'basic_istream<_CharT, _Traits> *' this))))

;
    basic_istream<_CharT, _Traits> &operator>>(short &__n) (CompoundStmt 0x9f682a8 </usr/include/c++/4.6/bits/istream.tcc:116:5, line:155:5>
  (DeclStmt 0x9f66420 <line:119:7, col:34>
    0x9f66390 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0x9f66400 <col:20, col:33> 'class std::basic_istream::sentry'
        (UnaryOperator 0x9f663d8 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9f663c8 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0x9f663f0 <col:28> '_Bool' false))")
  (IfStmt 0x9f68250 <line:120:7, line:153:2>
    <<<NULL>>>
    (DeclRefExpr 0x9f66430 <line:120:11> 'class std::basic_istream::sentry' lvalue Var 0x9f66390 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0x9f68228 <line:121:2, line:153:2>
      (DeclStmt 0x9f66508 <line:122:4, col:47>
        0x9f66480 "ios_base::iostate __err =
          (ImplicitCastExpr 0x9f664f8 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9f664d4 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e114b0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0x9f67f40 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:143:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9f66518 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9f67f20 </usr/include/c++/4.6/bits/istream.tcc:124:6, line:143:6>
          (DeclStmt 0x9f66578 <line:125:8, col:16>
            0x9f66540 "long __l")
          (DeclStmt 0x9f66678 <line:126:8, col:68>
            0x9f665a0 "const __num_get_type &__ng =
              (CallExpr 0x9f66658 <col:37, col:67> '<dependent type>'
                (UnresolvedLookupExpr 0x9f665d8 <col:37> '<overloaded function type>' lvalue (ADL) = '1' 0x9f00270)
                (CXXDependentScopeMemberExpr 0x9f66620 <col:51, col:57> '<dependent type>' lvalue
                  (CXXThisExpr 0x9f66610 <col:51> 'basic_istream<_CharT, _Traits> *' this)))")
          (CallExpr 0x9f66770 <line:127:8, col:44> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f666a0 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0x9f66688 <col:8> 'const __num_get_type':'const num_get<_CharT, istreambuf_iterator<_CharT, _Traits> >' lvalue Var 0x9f665a0 '__ng' 'const __num_get_type &'))
            (UnaryOperator 0x9f666e8 <col:17, col:18> '<dependent type>' prefix '*'
              (CXXThisExpr 0x9f666d8 <col:18> 'basic_istream<_CharT, _Traits> *' this))
            (IntegerLiteral 0x9f66700 <col:24> 'int' 0)
            (UnaryOperator 0x9f66728 <col:27, col:28> '<dependent type>' prefix '*'
              (CXXThisExpr 0x9f66718 <col:28> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9f6673c <col:34> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f66480 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
            (DeclRefExpr 0x9f66754 <col:41> 'long' lvalue Var 0x9f66540 '__l' 'long'))
          (IfStmt 0x9f67f00 <line:131:8, line:142:18>
            <<<NULL>>>
            (BinaryOperator 0x9f67938 <line:131:12, col:54> '_Bool' '<'
              (ImplicitCastExpr 0x9f67908 <col:12> 'long' <LValueToRValue>
                (DeclRefExpr 0x9f667a0 <col:12> 'long' lvalue Var 0x9f66540 '__l' 'long'))
              (ImplicitCastExpr 0x9f67928 <col:18, col:54> 'long' <IntegralCast>
                (ImplicitCastExpr 0x9f67918 <col:18, col:54> 'short':'short' <LValueToRValue>
                  (DeclRefExpr 0x9f678e8 <col:18, col:54> 'const short':'const short' lvalue Var 0x9f67000 '__min' 'const short':'const short'))))
            (CompoundStmt 0x9f67b28 <line:132:3, line:135:3>
              (CXXOperatorCallExpr 0x9f67a10 <line:133:5, col:24> 'const enum std::_Ios_Iostate' lvalue
                (ImplicitCastExpr 0x9f67a00 <col:11, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                  (DeclRefExpr 0x9f679e8 <col:11, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9e0fd60 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
                (DeclRefExpr 0x9f6797c <col:5> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f66480 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
                (ImplicitCastExpr 0x9f679d8 <col:14, col:24> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                  (DeclRefExpr 0x9f679b4 <col:14, col:24> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11450 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
              (BinaryOperator 0x9f67b10 <line:134:5, col:47> 'short' lvalue '='
                (DeclRefExpr 0x9f67a34 <col:5> 'short' lvalue ParmVar 0x9f66140 '__n' 'short &')
                (ImplicitCastExpr 0x9f67b00 <col:11, col:47> 'short':'short' <LValueToRValue>
                  (DeclRefExpr 0x9f67ae0 <col:11, col:47> 'const short':'const short' lvalue Var 0x9f67000 '__min' 'const short':'const short'))))
            (IfStmt 0x9f67ee0 <line:136:13, line:142:18>
              <<<NULL>>>
              (BinaryOperator 0x9f67c40 <line:136:17, col:59> '_Bool' '>'
                (ImplicitCastExpr 0x9f67c10 <col:17> 'long' <LValueToRValue>
                  (DeclRefExpr 0x9f67b40 <col:17> 'long' lvalue Var 0x9f66540 '__l' 'long'))
                (ImplicitCastExpr 0x9f67c30 <col:23, col:59> 'long' <IntegralCast>
                  (ImplicitCastExpr 0x9f67c20 <col:23, col:59> 'short':'short' <LValueToRValue>
                    (DeclRefExpr 0x9f67bf0 <col:23, col:59> 'const short':'const short' lvalue Var 0x9f672a0 '__max' 'const short':'const short'))))
              (CompoundStmt 0x9f67e38 <line:137:3, line:140:3>
                (CXXOperatorCallExpr 0x9f67d20 <line:138:5, col:24> 'const enum std::_Ios_Iostate' lvalue
                  (ImplicitCastExpr 0x9f67d10 <col:11, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                    (DeclRefExpr 0x9f67cf8 <col:11, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9e0fd60 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
                  (DeclRefExpr 0x9f67c8c <col:5> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f66480 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
                  (ImplicitCastExpr 0x9f67ce8 <col:14, col:24> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                    (DeclRefExpr 0x9f67cc4 <col:14, col:24> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11450 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
                (BinaryOperator 0x9f67e20 <line:139:5, col:47> 'short' lvalue '='
                  (DeclRefExpr 0x9f67d44 <col:5> 'short' lvalue ParmVar 0x9f66140 '__n' 'short &')
                  (ImplicitCastExpr 0x9f67e10 <col:11, col:47> 'short':'short' <LValueToRValue>
                    (DeclRefExpr 0x9f67df0 <col:11, col:47> 'const short':'const short' lvalue Var 0x9f672a0 '__max' 'const short':'const short'))))
              (BinaryOperator 0x9f67ec8 <line:142:3, col:18> 'short' lvalue '='
                (DeclRefExpr 0x9f67e50 <col:3> 'short' lvalue ParmVar 0x9f66140 '__n' 'short &')
                (CXXFunctionalCastExpr 0x9f67eb0 <col:9, col:18> 'short' functional cast to short <NoOp>
                  (ImplicitCastExpr 0x9f67ea0 <col:15> 'short' <IntegralCast>
                    (ImplicitCastExpr 0x9f67e90 <col:15> 'long' <LValueToRValue>
                      (DeclRefExpr 0x9f67e74 <col:15> 'long' lvalue Var 0x9f66540 '__l' 'long'))))))))
        <<<NULL>>>)
      (IfStmt 0x9f68040 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:148:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9f67f60 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9f68028 </usr/include/c++/4.6/bits/istream.tcc:145:6, line:148:6>
          (CallExpr 0x9f67ff8 <line:146:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f67f80 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9f67f70 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9f67fd4 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11390 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x9f68018 <line:147:31>))
        <<<NULL>>>)
      (IfStmt 0x9f68130 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:150:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9f68060 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9f68118 </usr/include/c++/4.6/bits/istream.tcc:150:6, col:45>
          (CallExpr 0x9f680f8 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f68080 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9f68070 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9f680d4 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11390 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0x9f68208 <line:151:4, line:152:26>
        <<<NULL>>>
        (ImplicitCastExpr 0x9f68178 <line:151:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0x9f68168 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9f6814c <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f66480 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0x9f681e8 <line:152:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9f68198 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x9f68188 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0x9f681cc <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f66480 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9f68298 <line:154:7, col:15>
    (UnaryOperator 0x9f68280 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9f68270 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &operator>>(int &__n) (CompoundStmt 0x9f69728 </usr/include/c++/4.6/bits/istream.tcc:161:5, line:200:5>
  (DeclStmt 0x9f68930 <line:164:7, col:34>
    0x9f688a0 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0x9f68910 <col:20, col:33> 'class std::basic_istream::sentry'
        (UnaryOperator 0x9f688e8 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9f688d8 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0x9f68900 <col:28> '_Bool' false))")
  (IfStmt 0x9f696d0 <line:165:7, line:198:2>
    <<<NULL>>>
    (DeclRefExpr 0x9f68940 <line:165:11> 'class std::basic_istream::sentry' lvalue Var 0x9f688a0 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0x9f696a8 <line:166:2, line:198:2>
      (DeclStmt 0x9f68a18 <line:167:4, col:47>
        0x9f68990 "ios_base::iostate __err =
          (ImplicitCastExpr 0x9f68a08 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9f689e4 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e114b0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0x9f693c0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:188:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9f68a28 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9f693a0 </usr/include/c++/4.6/bits/istream.tcc:169:6, line:188:6>
          (DeclStmt 0x9f68a88 <line:170:8, col:16>
            0x9f68a50 "long __l")
          (DeclStmt 0x9f68b88 <line:171:8, col:68>
            0x9f68ab0 "const __num_get_type &__ng =
              (CallExpr 0x9f68b68 <col:37, col:67> '<dependent type>'
                (UnresolvedLookupExpr 0x9f68ae8 <col:37> '<overloaded function type>' lvalue (ADL) = '1' 0x9f00270)
                (CXXDependentScopeMemberExpr 0x9f68b30 <col:51, col:57> '<dependent type>' lvalue
                  (CXXThisExpr 0x9f68b20 <col:51> 'basic_istream<_CharT, _Traits> *' this)))")
          (CallExpr 0x9f68c80 <line:172:8, col:44> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f68bb0 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0x9f68b98 <col:8> 'const __num_get_type':'const num_get<_CharT, istreambuf_iterator<_CharT, _Traits> >' lvalue Var 0x9f68ab0 '__ng' 'const __num_get_type &'))
            (UnaryOperator 0x9f68bf8 <col:17, col:18> '<dependent type>' prefix '*'
              (CXXThisExpr 0x9f68be8 <col:18> 'basic_istream<_CharT, _Traits> *' this))
            (IntegerLiteral 0x9f68c10 <col:24> 'int' 0)
            (UnaryOperator 0x9f68c38 <col:27, col:28> '<dependent type>' prefix '*'
              (CXXThisExpr 0x9f68c28 <col:28> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9f68c4c <col:34> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f68990 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
            (DeclRefExpr 0x9f68c64 <col:41> 'long' lvalue Var 0x9f68a50 '__l' 'long'))
          (IfStmt 0x9f69380 <line:176:8, line:187:16>
            <<<NULL>>>
            (BinaryOperator 0x9f68db0 <line:176:12, col:52> '_Bool' '<'
              (ImplicitCastExpr 0x9f68d80 <col:12> 'long' <LValueToRValue>
                (DeclRefExpr 0x9f68cb0 <col:12> 'long' lvalue Var 0x9f68a50 '__l' 'long'))
              (ImplicitCastExpr 0x9f68da0 <col:18, col:52> 'long' <IntegralCast>
                (ImplicitCastExpr 0x9f68d90 <col:18, col:52> 'int':'int' <LValueToRValue>
                  (DeclRefExpr 0x9f68d60 <col:18, col:52> 'const int':'const int' lvalue Var 0x9d4cdd0 '__min' 'const int':'const int'))))
            (CompoundStmt 0x9f68fa8 <line:177:3, line:180:3>
              (CXXOperatorCallExpr 0x9f68e90 <line:178:5, col:24> 'const enum std::_Ios_Iostate' lvalue
                (ImplicitCastExpr 0x9f68e80 <col:11, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                  (DeclRefExpr 0x9f68e68 <col:11, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9e0fd60 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
                (DeclRefExpr 0x9f68dfc <col:5> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f68990 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
                (ImplicitCastExpr 0x9f68e58 <col:14, col:24> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                  (DeclRefExpr 0x9f68e34 <col:14, col:24> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11450 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
              (BinaryOperator 0x9f68f90 <line:179:5, col:45> 'int' lvalue '='
                (DeclRefExpr 0x9f68eb4 <col:5> 'int' lvalue ParmVar 0x9f68650 '__n' 'int &')
                (ImplicitCastExpr 0x9f68f80 <col:11, col:45> 'int':'int' <LValueToRValue>
                  (DeclRefExpr 0x9f68f60 <col:11, col:45> 'const int':'const int' lvalue Var 0x9d4cdd0 '__min' 'const int':'const int'))))
            (IfStmt 0x9f69360 <line:181:13, line:187:16>
              <<<NULL>>>
              (BinaryOperator 0x9f690c0 <line:181:17, col:57> '_Bool' '>'
                (ImplicitCastExpr 0x9f69090 <col:17> 'long' <LValueToRValue>
                  (DeclRefExpr 0x9f68fc0 <col:17> 'long' lvalue Var 0x9f68a50 '__l' 'long'))
                (ImplicitCastExpr 0x9f690b0 <col:23, col:57> 'long' <IntegralCast>
                  (ImplicitCastExpr 0x9f690a0 <col:23, col:57> 'int':'int' <LValueToRValue>
                    (DeclRefExpr 0x9f69070 <col:23, col:57> 'const int':'const int' lvalue Var 0x9d4cfe0 '__max' 'const int':'const int'))))
              (CompoundStmt 0x9f692b8 <line:182:3, line:185:3>
                (CXXOperatorCallExpr 0x9f691a0 <line:183:5, col:24> 'const enum std::_Ios_Iostate' lvalue
                  (ImplicitCastExpr 0x9f69190 <col:11, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                    (DeclRefExpr 0x9f69178 <col:11, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9e0fd60 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
                  (DeclRefExpr 0x9f6910c <col:5> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f68990 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
                  (ImplicitCastExpr 0x9f69168 <col:14, col:24> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                    (DeclRefExpr 0x9f69144 <col:14, col:24> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11450 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
                (BinaryOperator 0x9f692a0 <line:184:5, col:45> 'int' lvalue '='
                  (DeclRefExpr 0x9f691c4 <col:5> 'int' lvalue ParmVar 0x9f68650 '__n' 'int &')
                  (ImplicitCastExpr 0x9f69290 <col:11, col:45> 'int':'int' <LValueToRValue>
                    (DeclRefExpr 0x9f69270 <col:11, col:45> 'const int':'const int' lvalue Var 0x9d4cfe0 '__max' 'const int':'const int'))))
              (BinaryOperator 0x9f69348 <line:187:3, col:16> 'int' lvalue '='
                (DeclRefExpr 0x9f692d0 <col:3> 'int' lvalue ParmVar 0x9f68650 '__n' 'int &')
                (CXXFunctionalCastExpr 0x9f69330 <col:9, col:16> 'int' functional cast to int <NoOp>
                  (ImplicitCastExpr 0x9f69320 <col:13> 'int' <IntegralCast>
                    (ImplicitCastExpr 0x9f69310 <col:13> 'long' <LValueToRValue>
                      (DeclRefExpr 0x9f692f4 <col:13> 'long' lvalue Var 0x9f68a50 '__l' 'long'))))))))
        <<<NULL>>>)
      (IfStmt 0x9f694c0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:193:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9f693e0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9f694a8 </usr/include/c++/4.6/bits/istream.tcc:190:6, line:193:6>
          (CallExpr 0x9f69478 <line:191:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f69400 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9f693f0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9f69454 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11390 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x9f69498 <line:192:31>))
        <<<NULL>>>)
      (IfStmt 0x9f695b0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:195:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9f694e0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9f69598 </usr/include/c++/4.6/bits/istream.tcc:195:6, col:45>
          (CallExpr 0x9f69578 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f69500 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9f694f0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9f69554 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11390 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0x9f69688 <line:196:4, line:197:26>
        <<<NULL>>>
        (ImplicitCastExpr 0x9f695f8 <line:196:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0x9f695e8 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9f695cc <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f68990 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0x9f69668 <line:197:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9f69618 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x9f69608 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0x9f6964c <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f68990 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9f69718 <line:199:7, col:15>
    (UnaryOperator 0x9f69700 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9f696f0 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &operator>>(__streambuf_type *__sbout) (CompoundStmt 0x9f6a6a8 </usr/include/c++/4.6/bits/istream.tcc:206:5, line:232:5>
  (DeclStmt 0x9f69dd8 <line:207:7, col:50>
    0x9f69d50 "ios_base::iostate __err =
      (ImplicitCastExpr 0x9f69dc8 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9f69da4 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e114b0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (DeclStmt 0x9f69e80 <line:208:7, col:34>
    0x9f69df0 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0x9f69e60 <col:20, col:33> 'class std::basic_istream::sentry'
        (UnaryOperator 0x9f69e38 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9f69e28 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0x9f69e50 <col:28> '_Bool' false))")
  (IfStmt 0x9f6a578 <line:209:7, line:228:21>
    <<<NULL>>>
    (BinaryOperator 0x9f69ec0 <line:209:11, col:21> '<dependent type>' '&&'
      (DeclRefExpr 0x9f69e90 <col:11> 'class std::basic_istream::sentry' lvalue Var 0x9f69df0 '__cerb' 'class std::basic_istream::sentry')
      (DeclRefExpr 0x9f69ea8 <col:21> '__streambuf_type *' lvalue ParmVar 0x9f69ad0 '__sbout' '__streambuf_type *'))
    (CompoundStmt 0x9f6a450 <line:210:2, line:226:2>
      (IfStmt 0x9f6a240 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:218:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9f69ed8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9f6a220 </usr/include/c++/4.6/bits/istream.tcc:212:6, line:218:6>
          (DeclStmt 0x9f69f28 <line:213:8, col:20>
            0x9f69ef0 "bool __ineof")
          (IfStmt 0x9f6a100 <line:214:8, line:215:22>
            <<<NULL>>>
            (UnaryOperator 0x9f6a030 <line:214:12, col:66> '<dependent type>' prefix '!'
              (CallExpr 0x9f6a008 <col:13, col:66> '<dependent type>'
                (UnresolvedLookupExpr 0x9f69f38 <col:13> '<overloaded function type>' lvalue (ADL) = '1' 0x9e410c0)
                (CallExpr 0x9f69fb8 <col:35, col:47> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9f69f80 <col:35, col:41> '<dependent type>' lvalue
                    (CXXThisExpr 0x9f69f70 <col:35> 'basic_istream<_CharT, _Traits> *' this)))
                (DeclRefExpr 0x9f69fd4 <col:50> '__streambuf_type *' lvalue ParmVar 0x9f69ad0 '__sbout' '__streambuf_type *')
                (DeclRefExpr 0x9f69fec <col:59> '_Bool' lvalue Var 0x9f69ef0 '__ineof' '_Bool')))
            (CXXOperatorCallExpr 0x9f6a0d8 <line:215:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x9f6a0c8 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9f6a0b0 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9e0fd60 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x9f6a044 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f69d50 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0x9f6a0a0 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x9f6a07c <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11450 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>)
          (IfStmt 0x9f6a200 <line:216:8, line:217:22>
            <<<NULL>>>
            (ImplicitCastExpr 0x9f6a138 <line:216:12> '_Bool' <LValueToRValue>
              (DeclRefExpr 0x9f6a11c <col:12> '_Bool' lvalue Var 0x9f69ef0 '__ineof' '_Bool'))
            (CXXOperatorCallExpr 0x9f6a1d8 <line:217:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x9f6a1c8 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9f6a1b0 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9e0fd60 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x9f6a144 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f69d50 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0x9f6a1a0 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x9f6a17c <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e113f0 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0x9f6a340 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:223:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9f6a260 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9f6a328 </usr/include/c++/4.6/bits/istream.tcc:220:6, line:223:6>
          (CallExpr 0x9f6a2f8 <line:221:8, col:43> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f6a280 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9f6a270 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9f6a2d4 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11450 'failbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x9f6a318 <line:222:31>))
        <<<NULL>>>)
      (IfStmt 0x9f6a430 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:225:46>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9f6a360 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9f6a418 </usr/include/c++/4.6/bits/istream.tcc:225:6, col:46>
          (CallExpr 0x9f6a3f8 <col:8, col:43> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f6a380 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9f6a370 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9f6a3d4 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11450 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    (IfStmt 0x9f6a558 <line:227:12, line:228:21>
      <<<NULL>>>
      (UnaryOperator 0x9f6a488 <line:227:16, col:17> '<dependent type>' prefix '!'
        (DeclRefExpr 0x9f6a46c <col:17> '__streambuf_type *' lvalue ParmVar 0x9f69ad0 '__sbout' '__streambuf_type *'))
      (CXXOperatorCallExpr 0x9f6a530 <line:228:2, col:21> 'const enum std::_Ios_Iostate' lvalue
        (ImplicitCastExpr 0x9f6a520 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9f6a508 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9e0fd60 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
        (DeclRefExpr 0x9f6a49c <col:2> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f69d50 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
        (ImplicitCastExpr 0x9f6a4f8 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
          (DeclRefExpr 0x9f6a4d4 <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11450 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
      <<<NULL>>>))
  (IfStmt 0x9f6a650 <line:229:7, line:230:22>
    <<<NULL>>>
    (ImplicitCastExpr 0x9f6a5c0 <line:229:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x9f6a5b0 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9f6a594 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f69d50 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0x9f6a630 <line:230:2, col:22> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f6a5e0 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0x9f6a5d0 <col:2> 'basic_istream<_CharT, _Traits> *' this))
      (DeclRefExpr 0x9f6a614 <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f69d50 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0x9f6a698 <line:231:7, col:15>
    (UnaryOperator 0x9f6a680 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9f6a670 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    typename basic_istream<_CharT, _Traits>::int_type get() (CompoundStmt 0x9f6b7b0 </usr/include/c++/4.6/bits/istream.tcc:238:5, line:268:5>
  (DeclStmt 0x9f6ada0 <line:239:7, col:48>
    0x9f6acd0 "const int_type __eof =
      (CallExpr 0x9f6ad80 <col:30, col:47> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f6ad48 <col:30, col:43> '<dependent type>' lvalue))")
  (DeclStmt 0x9f6ae10 <line:240:7, col:27>
    0x9f6adc0 "int_type __c =
      (DeclRefExpr 0x9f6adf4 <col:22> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x9f6acd0 '__eof' 'const int_type':'const typename _Traits::int_type')")
  (BinaryOperator 0x9f6ae68 <line:241:7, col:19> '<dependent type>' '='
    (MemberExpr 0x9f6ae30 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0x9f447f0
      (CXXThisExpr 0x9f6ae20 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0x9f6ae50 <col:19> 'int' 0))
  (DeclStmt 0x9f6af38 <line:242:7, col:50>
    0x9f6aeb0 "ios_base::iostate __err =
      (ImplicitCastExpr 0x9f6af28 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9f6af04 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e114b0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (DeclStmt 0x9f6afe0 <line:243:7, col:33>
    0x9f6af50 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0x9f6afc0 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0x9f6af98 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9f6af88 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0x9f6afb0 <col:28> '_Bool' true))")
  (IfStmt 0x9f6b550 <line:244:7, line:262:2>
    <<<NULL>>>
    (DeclRefExpr 0x9f6aff0 <line:244:11> 'class std::basic_istream::sentry' lvalue Var 0x9f6af50 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0x9f6b530 <line:245:2, line:262:2>
      (IfStmt 0x9f6b320 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:254:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9f6b008 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9f6b308 </usr/include/c++/4.6/bits/istream.tcc:247:6, line:254:6>
          (BinaryOperator 0x9f6b0f0 <line:248:8, col:36> '<dependent type>' '='
            (DeclRefExpr 0x9f6b018 <col:8> 'int_type':'typename _Traits::int_type' lvalue Var 0x9f6adc0 '__c' 'int_type':'typename _Traits::int_type')
            (CallExpr 0x9f6b0d0 <col:14, col:36> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9f6b098 <col:14, col:29> '<dependent type>' lvalue
                (CallExpr 0x9f6b078 <col:14, col:26> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9f6b040 <col:14, col:20> '<dependent type>' lvalue
                    (CXXThisExpr 0x9f6b030 <col:14> 'basic_istream<_CharT, _Traits> *' this))))))
          (IfStmt 0x9f6b2e8 <line:250:8, line:253:22>
            <<<NULL>>>
            (UnaryOperator 0x9f6b1b8 <line:250:12, col:48> '<dependent type>' prefix '!'
              (CallExpr 0x9f6b190 <col:13, col:48> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9f6b128 <col:13, col:26> '<dependent type>' lvalue)
                (DeclRefExpr 0x9f6b15c <col:38> 'int_type':'typename _Traits::int_type' lvalue Var 0x9f6adc0 '__c' 'int_type':'typename _Traits::int_type')
                (DeclRefExpr 0x9f6b174 <col:43> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x9f6acd0 '__eof' 'const int_type':'const typename _Traits::int_type')))
            (BinaryOperator 0x9f6b218 <line:251:3, col:15> '<dependent type>' '='
              (MemberExpr 0x9f6b1e0 <col:3> 'streamsize':'int' lvalue ->_M_gcount 0x9f447f0
                (CXXThisExpr 0x9f6b1d0 <col:3> 'basic_istream<_CharT, _Traits> *' this))
              (IntegerLiteral 0x9f6b200 <col:15> 'int' 1))
            (CXXOperatorCallExpr 0x9f6b2c0 <line:253:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x9f6b2b0 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9f6b298 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9e0fd60 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x9f6b230 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f6aeb0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0x9f6b288 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x9f6b264 <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e113f0 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))))
        <<<NULL>>>)
      (IfStmt 0x9f6b420 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:259:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9f6b340 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9f6b408 </usr/include/c++/4.6/bits/istream.tcc:256:6, line:259:6>
          (CallExpr 0x9f6b3d8 <line:257:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f6b360 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9f6b350 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9f6b3b4 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11390 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x9f6b3f8 <line:258:31>))
        <<<NULL>>>)
      (IfStmt 0x9f6b510 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:261:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9f6b440 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9f6b4f8 </usr/include/c++/4.6/bits/istream.tcc:261:6, col:45>
          (CallExpr 0x9f6b4d8 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f6b460 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9f6b450 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9f6b4b4 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11390 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0x9f6b690 <line:263:7, line:264:21>
    <<<NULL>>>
    (UnaryOperator 0x9f6b5c0 <line:263:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9f6b5b0 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0x9f6b5a0 <col:12> 'streamsize':'int' <LValueToRValue>
          (MemberExpr 0x9f6b580 <col:12> 'streamsize':'int' lvalue ->_M_gcount 0x9f447f0
            (CXXThisExpr 0x9f6b570 <col:12> 'basic_istream<_CharT, _Traits> *' this)))))
    (CXXOperatorCallExpr 0x9f6b668 <line:264:2, col:21> 'const enum std::_Ios_Iostate' lvalue
      (ImplicitCastExpr 0x9f6b658 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9f6b640 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9e0fd60 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
      (DeclRefExpr 0x9f6b5d4 <col:2> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f6aeb0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
      (ImplicitCastExpr 0x9f6b630 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9f6b60c <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11450 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (IfStmt 0x9f6b768 <line:265:7, line:266:22>
    <<<NULL>>>
    (ImplicitCastExpr 0x9f6b6d8 <line:265:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x9f6b6c8 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9f6b6ac <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f6aeb0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0x9f6b748 <line:266:2, col:22> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f6b6f8 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0x9f6b6e8 <col:2> 'basic_istream<_CharT, _Traits> *' this))
      (DeclRefExpr 0x9f6b72c <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f6aeb0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0x9f6b7a0 <line:267:7, col:14>
    (DeclRefExpr 0x9f6b784 <col:14> 'int_type':'typename _Traits::int_type' lvalue Var 0x9f6adc0 '__c' 'int_type':'typename _Traits::int_type')))


    basic_istream<_CharT, _Traits> &get(char_type &__c) (CompoundStmt 0x9f6c8b8 </usr/include/c++/4.6/bits/istream.tcc:274:5, line:305:5>
  (BinaryOperator 0x9f6be00 <line:275:7, col:19> '<dependent type>' '='
    (MemberExpr 0x9f6bdc8 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0x9f447f0
      (CXXThisExpr 0x9f6bdb8 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0x9f6bde8 <col:19> 'int' 0))
  (DeclStmt 0x9f6bed8 <line:276:7, col:50>
    0x9f6be50 "ios_base::iostate __err =
      (ImplicitCastExpr 0x9f6bec8 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9f6bea4 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e114b0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (DeclStmt 0x9f6bf80 <line:277:7, col:33>
    0x9f6bef0 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0x9f6bf60 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0x9f6bf38 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9f6bf28 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0x9f6bf50 <col:28> '_Bool' true))")
  (IfStmt 0x9f6c648 <line:278:7, line:299:2>
    <<<NULL>>>
    (DeclRefExpr 0x9f6bf90 <line:278:11> 'class std::basic_istream::sentry' lvalue Var 0x9f6bef0 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0x9f6c628 <line:279:2, line:299:2>
      (IfStmt 0x9f6c418 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:291:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9f6bfa8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9f6c400 </usr/include/c++/4.6/bits/istream.tcc:281:6, line:291:6>
          (DeclStmt 0x9f6c0b8 <line:282:8, col:53>
            0x9f6bfc0 "const int_type __cb =
              (CallExpr 0x9f6c098 <col:30, col:52> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9f6c060 <col:30, col:45> '<dependent type>' lvalue
                  (CallExpr 0x9f6c040 <col:30, col:42> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9f6c008 <col:30, col:36> '<dependent type>' lvalue
                      (CXXThisExpr 0x9f6bff8 <col:30> 'basic_istream<_CharT, _Traits> *' this)))))")
          (IfStmt 0x9f6c3e0 <line:284:8, line:290:22>
            <<<NULL>>>
            (UnaryOperator 0x9f6c1d8 <line:284:12, col:62> '<dependent type>' prefix '!'
              (CallExpr 0x9f6c1b0 <col:13, col:62> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9f6c0e8 <col:13, col:26> '<dependent type>' lvalue)
                (DeclRefExpr 0x9f6c11c <col:38> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x9f6bfc0 '__cb' 'const int_type':'const typename _Traits::int_type')
                (CallExpr 0x9f6c190 <col:44, col:61> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9f6c158 <col:44, col:57> '<dependent type>' lvalue))))
            (CompoundStmt 0x9f6c310 <line:285:3, line:288:3>
              (BinaryOperator 0x9f6c238 <line:286:5, col:17> '<dependent type>' '='
                (MemberExpr 0x9f6c200 <col:5> 'streamsize':'int' lvalue ->_M_gcount 0x9f447f0
                  (CXXThisExpr 0x9f6c1f0 <col:5> 'basic_istream<_CharT, _Traits> *' this))
                (IntegerLiteral 0x9f6c220 <col:17> 'int' 1))
              (BinaryOperator 0x9f6c2f8 <line:287:5, col:41> '<dependent type>' '='
                (DeclRefExpr 0x9f6c250 <col:5> 'char_type':'_CharT' lvalue ParmVar 0x9f6bb70 '__c' 'char_type &')
                (CallExpr 0x9f6c2d8 <col:11, col:41> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9f6c288 <col:11, col:24> '<dependent type>' lvalue)
                  (DeclRefExpr 0x9f6c2bc <col:37> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x9f6bfc0 '__cb' 'const int_type':'const typename _Traits::int_type'))))
            (CXXOperatorCallExpr 0x9f6c3b8 <line:290:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x9f6c3a8 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9f6c390 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9e0fd60 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x9f6c328 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f6be50 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0x9f6c380 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x9f6c35c <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e113f0 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))))
        <<<NULL>>>)
      (IfStmt 0x9f6c518 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:296:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9f6c438 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9f6c500 </usr/include/c++/4.6/bits/istream.tcc:293:6, line:296:6>
          (CallExpr 0x9f6c4d0 <line:294:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f6c458 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9f6c448 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9f6c4ac <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11390 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x9f6c4f0 <line:295:31>))
        <<<NULL>>>)
      (IfStmt 0x9f6c608 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:298:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9f6c538 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9f6c5f0 </usr/include/c++/4.6/bits/istream.tcc:298:6, col:45>
          (CallExpr 0x9f6c5d0 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f6c558 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9f6c548 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9f6c5ac <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11390 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0x9f6c788 <line:300:7, line:301:21>
    <<<NULL>>>
    (UnaryOperator 0x9f6c6b8 <line:300:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9f6c6a8 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0x9f6c698 <col:12> 'streamsize':'int' <LValueToRValue>
          (MemberExpr 0x9f6c678 <col:12> 'streamsize':'int' lvalue ->_M_gcount 0x9f447f0
            (CXXThisExpr 0x9f6c668 <col:12> 'basic_istream<_CharT, _Traits> *' this)))))
    (CXXOperatorCallExpr 0x9f6c760 <line:301:2, col:21> 'const enum std::_Ios_Iostate' lvalue
      (ImplicitCastExpr 0x9f6c750 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9f6c738 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9e0fd60 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
      (DeclRefExpr 0x9f6c6cc <col:2> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f6be50 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
      (ImplicitCastExpr 0x9f6c728 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9f6c704 <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11450 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (IfStmt 0x9f6c860 <line:302:7, line:303:22>
    <<<NULL>>>
    (ImplicitCastExpr 0x9f6c7d0 <line:302:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x9f6c7c0 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9f6c7a4 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f6be50 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0x9f6c840 <line:303:2, col:22> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f6c7f0 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0x9f6c7e0 <col:2> 'basic_istream<_CharT, _Traits> *' this))
      (DeclRefExpr 0x9f6c824 <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f6be50 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0x9f6c8a8 <line:304:7, col:15>
    (UnaryOperator 0x9f6c890 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9f6c880 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &get(char_type *__s, streamsize __n, char_type __delim) (CompoundStmt 0x9f6e0f8 </usr/include/c++/4.6/bits/istream.tcc:311:5, line:352:5>
  (BinaryOperator 0x9f6cf98 <line:312:7, col:19> '<dependent type>' '='
    (MemberExpr 0x9f6cf60 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0x9f447f0
      (CXXThisExpr 0x9f6cf50 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0x9f6cf80 <col:19> 'int' 0))
  (DeclStmt 0x9f6d068 <line:313:7, col:50>
    0x9f6cfe0 "ios_base::iostate __err =
      (ImplicitCastExpr 0x9f6d058 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9f6d034 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e114b0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (DeclStmt 0x9f6d110 <line:314:7, col:33>
    0x9f6d080 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0x9f6d0f0 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0x9f6d0c8 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9f6d0b8 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0x9f6d0e0 <col:28> '_Bool' true))")
  (IfStmt 0x9f6dd88 <line:315:7, line:342:2>
    <<<NULL>>>
    (DeclRefExpr 0x9f6d120 <line:315:11> 'class std::basic_istream::sentry' lvalue Var 0x9f6d080 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0x9f6dd68 <line:316:2, line:342:2>
      (IfStmt 0x9f6db58 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:334:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9f6d138 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9f6db30 </usr/include/c++/4.6/bits/istream.tcc:318:6, line:334:6>
          (DeclStmt 0x9f6d218 <line:319:8, col:67>
            0x9f6d150 "const int_type __idelim =
              (CallExpr 0x9f6d1f8 <col:34, col:66> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9f6d1a8 <col:34, col:47> '<dependent type>' lvalue)
                (DeclRefExpr 0x9f6d1dc <col:59> 'char_type':'_CharT' lvalue ParmVar 0x9f6ccf0 '__delim' 'char_type':'_CharT'))")
          (DeclStmt 0x9f6d2e0 <line:320:8, col:49>
            0x9f6d230 "const int_type __eof =
              (CallExpr 0x9f6d2c0 <col:31, col:48> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9f6d288 <col:31, col:44> '<dependent type>' lvalue))")
          (DeclStmt 0x9f6d3a0 <line:321:8, col:46>
            0x9f6d300 "__streambuf_type *__sb =
              (CallExpr 0x9f6d380 <col:33, col:45> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9f6d348 <col:33, col:39> '<dependent type>' lvalue
                  (CXXThisExpr 0x9f6d338 <col:33> 'basic_istream<_CharT, _Traits> *' this)))")
          (DeclStmt 0x9f6d468 <line:322:8, col:36>
            0x9f6d3c0 "int_type __c =
              (CallExpr 0x9f6d448 <col:23, col:35> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9f6d410 <col:23, col:29> '<dependent type>' lvalue
                  (DeclRefExpr 0x9f6d3f4 <col:23> '__streambuf_type *' lvalue Var 0x9f6d300 '__sb' '__streambuf_type *')))")
          (WhileStmt 0x9f6d988 <line:324:8, line:331:3>
            <<<NULL>>>
            (BinaryOperator 0x9f6d760 <line:324:15, line:326:50> '<dependent type>' '&&'
              (BinaryOperator 0x9f6d680 <line:324:15, line:325:47> '<dependent type>' '&&'
                (CXXOperatorCallExpr 0x9f6d590 <line:324:15, col:31> '<dependent type>'
                  (UnresolvedLookupExpr 0x9f6d548 <col:29, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bac3c0 0x9bc2c90 0x9bc5590 0x9d61190 0x9d616c0 0x9d61bf0)
                  (CXXOperatorCallExpr 0x9f6d508 <col:15, col:27> '<dependent type>'
                    (UnresolvedLookupExpr 0x9f6d4c0 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d86680 0x9d87280 0x9d5d090 0x9d5d890)
                    (MemberExpr 0x9f6d488 <col:15> 'streamsize':'int' lvalue ->_M_gcount 0x9f447f0
                      (CXXThisExpr 0x9f6d478 <col:15> 'basic_istream<_CharT, _Traits> *' this))
                    (IntegerLiteral 0x9f6d4a8 <col:27> 'int' 1))
                  (DeclRefExpr 0x9f6d52c <col:31> 'streamsize':'int' lvalue ParmVar 0x9f6ccb0 '__n' 'streamsize':'int'))
                (UnaryOperator 0x9f6d668 <line:325:11, col:47> '<dependent type>' prefix '!'
                  (CallExpr 0x9f6d640 <col:12, col:47> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9f6d5d8 <col:12, col:25> '<dependent type>' lvalue)
                    (DeclRefExpr 0x9f6d60c <col:37> 'int_type':'typename _Traits::int_type' lvalue Var 0x9f6d3c0 '__c' 'int_type':'typename _Traits::int_type')
                    (DeclRefExpr 0x9f6d624 <col:42> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x9f6d230 '__eof' 'const int_type':'const typename _Traits::int_type'))))
              (UnaryOperator 0x9f6d748 <line:326:11, col:50> '<dependent type>' prefix '!'
                (CallExpr 0x9f6d720 <col:12, col:50> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9f6d6b8 <col:12, col:25> '<dependent type>' lvalue)
                  (DeclRefExpr 0x9f6d6ec <col:37> 'int_type':'typename _Traits::int_type' lvalue Var 0x9f6d3c0 '__c' 'int_type':'typename _Traits::int_type')
                  (DeclRefExpr 0x9f6d704 <col:42> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x9f6d150 '__idelim' 'const int_type':'const typename _Traits::int_type'))))
            (CompoundStmt 0x9f6d968 <line:327:3, line:331:3>
              (BinaryOperator 0x9f6d868 <line:328:5, col:43> '<dependent type>' '='
                (UnaryOperator 0x9f6d7c0 <col:5, col:9> '<dependent type>' prefix '*'
                  (UnaryOperator 0x9f6d7a8 <col:6, col:9> '<dependent type>' postfix '++'
                    (DeclRefExpr 0x9f6d778 <col:6> 'char_type *' lvalue ParmVar 0x9f6cc70 '__s' 'char_type *')))
                (CallExpr 0x9f6d848 <col:14, col:43> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9f6d7f8 <col:14, col:27> '<dependent type>' lvalue)
                  (DeclRefExpr 0x9f6d82c <col:40> 'int_type':'typename _Traits::int_type' lvalue Var 0x9f6d3c0 '__c' 'int_type':'typename _Traits::int_type')))
              (UnaryOperator 0x9f6d8b0 <line:329:5, col:7> '<dependent type>' prefix '++'
                (MemberExpr 0x9f6d890 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0x9f447f0
                  (CXXThisExpr 0x9f6d880 <col:7> 'basic_istream<_CharT, _Traits> *' this)))
              (BinaryOperator 0x9f6d950 <line:330:5, col:24> '<dependent type>' '='
                (DeclRefExpr 0x9f6d8c4 <col:5> 'int_type':'typename _Traits::int_type' lvalue Var 0x9f6d3c0 '__c' 'int_type':'typename _Traits::int_type')
                (CallExpr 0x9f6d930 <col:11, col:24> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9f6d8f8 <col:11, col:17> '<dependent type>' lvalue
                    (DeclRefExpr 0x9f6d8dc <col:11> '__streambuf_type *' lvalue Var 0x9f6d300 '__sb' '__streambuf_type *'))))))
          (IfStmt 0x9f6db10 <line:332:8, line:333:22>
            <<<NULL>>>
            (CallExpr 0x9f6da30 <line:332:12, col:47> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9f6d9c8 <col:12, col:25> '<dependent type>' lvalue)
              (DeclRefExpr 0x9f6d9fc <col:37> 'int_type':'typename _Traits::int_type' lvalue Var 0x9f6d3c0 '__c' 'int_type':'typename _Traits::int_type')
              (DeclRefExpr 0x9f6da14 <col:42> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x9f6d230 '__eof' 'const int_type':'const typename _Traits::int_type'))
            (CXXOperatorCallExpr 0x9f6dae8 <line:333:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x9f6dad8 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9f6dac0 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9e0fd60 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x9f6da54 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f6cfe0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0x9f6dab0 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x9f6da8c <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e113f0 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0x9f6dc58 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:339:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9f6db78 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9f6dc40 </usr/include/c++/4.6/bits/istream.tcc:336:6, line:339:6>
          (CallExpr 0x9f6dc10 <line:337:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f6db98 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9f6db88 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9f6dbec <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11390 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x9f6dc30 <line:338:31>))
        <<<NULL>>>)
      (IfStmt 0x9f6dd48 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:341:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9f6dc78 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9f6dd30 </usr/include/c++/4.6/bits/istream.tcc:341:6, col:45>
          (CallExpr 0x9f6dd10 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f6dc98 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9f6dc88 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9f6dcec <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11390 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0x9f6de88 <line:345:7, line:346:19>
    <<<NULL>>>
    (BinaryOperator 0x9f6de08 <line:345:11, col:17> '_Bool' '>'
      (ImplicitCastExpr 0x9f6ddf8 <col:11> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0x9f6ddc8 <col:11> 'streamsize':'int' lvalue ParmVar 0x9f6ccb0 '__n' 'streamsize':'int'))
      (IntegerLiteral 0x9f6dde0 <col:17> 'int' 0))
    (BinaryOperator 0x9f6de70 <line:346:2, col:19> '<dependent type>' '='
      (UnaryOperator 0x9f6de38 <col:2, col:3> '<dependent type>' prefix '*'
        (DeclRefExpr 0x9f6de20 <col:3> 'char_type *' lvalue ParmVar 0x9f6cc70 '__s' 'char_type *'))
      (CXXUnresolvedConstructExpr 0x9f6de58 <col:9, col:19> 'char_type':'_CharT'))
    <<<NULL>>>)
  (IfStmt 0x9f6dfc8 <line:347:7, line:348:21>
    <<<NULL>>>
    (UnaryOperator 0x9f6def8 <line:347:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9f6dee8 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0x9f6ded8 <col:12> 'streamsize':'int' <LValueToRValue>
          (MemberExpr 0x9f6deb8 <col:12> 'streamsize':'int' lvalue ->_M_gcount 0x9f447f0
            (CXXThisExpr 0x9f6dea8 <col:12> 'basic_istream<_CharT, _Traits> *' this)))))
    (CXXOperatorCallExpr 0x9f6dfa0 <line:348:2, col:21> 'const enum std::_Ios_Iostate' lvalue
      (ImplicitCastExpr 0x9f6df90 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9f6df78 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9e0fd60 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
      (DeclRefExpr 0x9f6df0c <col:2> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f6cfe0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
      (ImplicitCastExpr 0x9f6df68 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9f6df44 <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11450 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (IfStmt 0x9f6e0a0 <line:349:7, line:350:22>
    <<<NULL>>>
    (ImplicitCastExpr 0x9f6e010 <line:349:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x9f6e000 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9f6dfe4 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f6cfe0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0x9f6e080 <line:350:2, col:22> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f6e030 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0x9f6e020 <col:2> 'basic_istream<_CharT, _Traits> *' this))
      (DeclRefExpr 0x9f6e064 <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f6cfe0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0x9f6e0e8 <line:351:7, col:15>
    (UnaryOperator 0x9f6e0d0 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9f6e0c0 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &get(__streambuf_type &__sb, char_type __delim) (CompoundStmt 0x9f6f880 </usr/include/c++/4.6/bits/istream.tcc:358:5, line:396:5>
  (BinaryOperator 0x9f6e780 <line:359:7, col:19> '<dependent type>' '='
    (MemberExpr 0x9f6e748 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0x9f447f0
      (CXXThisExpr 0x9f6e738 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0x9f6e768 <col:19> 'int' 0))
  (DeclStmt 0x9f6e858 <line:360:7, col:50>
    0x9f6e7d0 "ios_base::iostate __err =
      (ImplicitCastExpr 0x9f6e848 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9f6e824 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e114b0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (DeclStmt 0x9f6e900 <line:361:7, col:33>
    0x9f6e870 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0x9f6e8e0 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0x9f6e8b8 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9f6e8a8 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0x9f6e8d0 <col:28> '_Bool' true))")
  (IfStmt 0x9f6f610 <line:362:7, line:390:2>
    <<<NULL>>>
    (DeclRefExpr 0x9f6e910 <line:362:11> 'class std::basic_istream::sentry' lvalue Var 0x9f6e870 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0x9f6f5f0 <line:363:2, line:390:2>
      (IfStmt 0x9f6f3e0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:382:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9f6e928 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9f6f3b0 </usr/include/c++/4.6/bits/istream.tcc:365:6, line:382:6>
          (DeclStmt 0x9f6ea08 <line:366:8, col:67>
            0x9f6e940 "const int_type __idelim =
              (CallExpr 0x9f6e9e8 <col:34, col:66> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9f6e998 <col:34, col:47> '<dependent type>' lvalue)
                (DeclRefExpr 0x9f6e9cc <col:59> 'char_type':'_CharT' lvalue ParmVar 0x9f6e4f0 '__delim' 'char_type':'_CharT'))")
          (DeclStmt 0x9f6ead0 <line:367:8, col:49>
            0x9f6ea20 "const int_type __eof =
              (CallExpr 0x9f6eab0 <col:31, col:48> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9f6ea78 <col:31, col:44> '<dependent type>' lvalue))")
          (DeclStmt 0x9f6eb90 <line:368:8, col:51>
            0x9f6eaf0 "__streambuf_type *__this_sb =
              (CallExpr 0x9f6eb70 <col:38, col:50> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9f6eb38 <col:38, col:44> '<dependent type>' lvalue
                  (CXXThisExpr 0x9f6eb28 <col:38> 'basic_istream<_CharT, _Traits> *' this)))")
          (DeclStmt 0x9f6ec58 <line:369:8, col:41>
            0x9f6ebb0 "int_type __c =
              (CallExpr 0x9f6ec38 <col:23, col:40> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9f6ec00 <col:23, col:34> '<dependent type>' lvalue
                  (DeclRefExpr 0x9f6ebe4 <col:23> '__streambuf_type *' lvalue Var 0x9f6eaf0 '__this_sb' '__streambuf_type *')))")
          (DeclStmt 0x9f6ed38 <line:370:8, col:55>
            0x9f6ec70 "char_type __c2 =
              (CallExpr 0x9f6ed18 <col:25, col:54> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9f6ecc8 <col:25, col:38> '<dependent type>' lvalue)
                (DeclRefExpr 0x9f6ecfc <col:51> 'int_type':'typename _Traits::int_type' lvalue Var 0x9f6ebb0 '__c' 'int_type':'typename _Traits::int_type'))")
          (WhileStmt 0x9f6f208 <line:372:8, line:379:3>
            <<<NULL>>>
            (BinaryOperator 0x9f6f028 <line:372:15, line:374:60> '<dependent type>' '&&'
              (BinaryOperator 0x9f6eed8 <line:372:15, line:373:50> '<dependent type>' '&&'
                (UnaryOperator 0x9f6edf8 <line:372:15, col:51> '<dependent type>' prefix '!'
                  (CallExpr 0x9f6edd0 <col:16, col:51> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9f6ed68 <col:16, col:29> '<dependent type>' lvalue)
                    (DeclRefExpr 0x9f6ed9c <col:41> 'int_type':'typename _Traits::int_type' lvalue Var 0x9f6ebb0 '__c' 'int_type':'typename _Traits::int_type')
                    (DeclRefExpr 0x9f6edb4 <col:46> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x9f6ea20 '__eof' 'const int_type':'const typename _Traits::int_type')))
                (UnaryOperator 0x9f6eec0 <line:373:11, col:50> '<dependent type>' prefix '!'
                  (CallExpr 0x9f6ee98 <col:12, col:50> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9f6ee30 <col:12, col:25> '<dependent type>' lvalue)
                    (DeclRefExpr 0x9f6ee64 <col:37> 'int_type':'typename _Traits::int_type' lvalue Var 0x9f6ebb0 '__c' 'int_type':'typename _Traits::int_type')
                    (DeclRefExpr 0x9f6ee7c <col:42> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x9f6e940 '__idelim' 'const int_type':'const typename _Traits::int_type'))))
              (UnaryOperator 0x9f6f010 <line:374:11, col:60> '<dependent type>' prefix '!'
                (CallExpr 0x9f6efe8 <col:12, col:60> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9f6ef10 <col:12, col:25> '<dependent type>' lvalue)
                  (CallExpr 0x9f6efb0 <col:37, col:52> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9f6ef60 <col:37, col:42> '<dependent type>' lvalue
                      (DeclRefExpr 0x9f6ef44 <col:37> '__streambuf_type':'basic_streambuf<_CharT, _Traits>' lvalue ParmVar 0x9f6e4b0 '__sb' '__streambuf_type &'))
                    (DeclRefExpr 0x9f6ef94 <col:48> 'char_type':'_CharT' lvalue Var 0x9f6ec70 '__c2' 'char_type':'_CharT'))
                  (DeclRefExpr 0x9f6efd0 <col:55> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x9f6ea20 '__eof' 'const int_type':'const typename _Traits::int_type'))))
            (CompoundStmt 0x9f6f1e8 <line:375:3, line:379:3>
              (UnaryOperator 0x9f6f070 <line:376:5, col:7> '<dependent type>' prefix '++'
                (MemberExpr 0x9f6f050 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0x9f447f0
                  (CXXThisExpr 0x9f6f040 <col:7> 'basic_istream<_CharT, _Traits> *' this)))
              (BinaryOperator 0x9f6f110 <line:377:5, col:29> '<dependent type>' '='
                (DeclRefExpr 0x9f6f084 <col:5> 'int_type':'typename _Traits::int_type' lvalue Var 0x9f6ebb0 '__c' 'int_type':'typename _Traits::int_type')
                (CallExpr 0x9f6f0f0 <col:11, col:29> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9f6f0b8 <col:11, col:22> '<dependent type>' lvalue
                    (DeclRefExpr 0x9f6f09c <col:11> '__streambuf_type *' lvalue Var 0x9f6eaf0 '__this_sb' '__streambuf_type *'))))
              (BinaryOperator 0x9f6f1d0 <line:378:5, col:41> '<dependent type>' '='
                (DeclRefExpr 0x9f6f128 <col:5> 'char_type':'_CharT' lvalue Var 0x9f6ec70 '__c2' 'char_type':'_CharT')
                (CallExpr 0x9f6f1b0 <col:12, col:41> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9f6f160 <col:12, col:25> '<dependent type>' lvalue)
                  (DeclRefExpr 0x9f6f194 <col:38> 'int_type':'typename _Traits::int_type' lvalue Var 0x9f6ebb0 '__c' 'int_type':'typename _Traits::int_type')))))
          (IfStmt 0x9f6f390 <line:380:8, line:381:22>
            <<<NULL>>>
            (CallExpr 0x9f6f2b0 <line:380:12, col:47> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9f6f248 <col:12, col:25> '<dependent type>' lvalue)
              (DeclRefExpr 0x9f6f27c <col:37> 'int_type':'typename _Traits::int_type' lvalue Var 0x9f6ebb0 '__c' 'int_type':'typename _Traits::int_type')
              (DeclRefExpr 0x9f6f294 <col:42> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x9f6ea20 '__eof' 'const int_type':'const typename _Traits::int_type'))
            (CXXOperatorCallExpr 0x9f6f368 <line:381:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x9f6f358 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9f6f340 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9e0fd60 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x9f6f2d4 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f6e7d0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0x9f6f330 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x9f6f30c <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e113f0 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0x9f6f4e0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:387:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9f6f400 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9f6f4c8 </usr/include/c++/4.6/bits/istream.tcc:384:6, line:387:6>
          (CallExpr 0x9f6f498 <line:385:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f6f420 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9f6f410 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9f6f474 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11390 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x9f6f4b8 <line:386:31>))
        <<<NULL>>>)
      (IfStmt 0x9f6f5d0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:389:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9f6f500 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9f6f5b8 </usr/include/c++/4.6/bits/istream.tcc:389:6, col:45>
          (CallExpr 0x9f6f598 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f6f520 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9f6f510 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9f6f574 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11390 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0x9f6f750 <line:391:7, line:392:21>
    <<<NULL>>>
    (UnaryOperator 0x9f6f680 <line:391:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9f6f670 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0x9f6f660 <col:12> 'streamsize':'int' <LValueToRValue>
          (MemberExpr 0x9f6f640 <col:12> 'streamsize':'int' lvalue ->_M_gcount 0x9f447f0
            (CXXThisExpr 0x9f6f630 <col:12> 'basic_istream<_CharT, _Traits> *' this)))))
    (CXXOperatorCallExpr 0x9f6f728 <line:392:2, col:21> 'const enum std::_Ios_Iostate' lvalue
      (ImplicitCastExpr 0x9f6f718 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9f6f700 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9e0fd60 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
      (DeclRefExpr 0x9f6f694 <col:2> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f6e7d0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
      (ImplicitCastExpr 0x9f6f6f0 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9f6f6cc <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11450 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (IfStmt 0x9f6f828 <line:393:7, line:394:22>
    <<<NULL>>>
    (ImplicitCastExpr 0x9f6f798 <line:393:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x9f6f788 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9f6f76c <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f6e7d0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0x9f6f808 <line:394:2, col:22> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f6f7b8 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0x9f6f7a8 <col:2> 'basic_istream<_CharT, _Traits> *' this))
      (DeclRefExpr 0x9f6f7ec <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f6e7d0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0x9f6f870 <line:395:7, col:15>
    (UnaryOperator 0x9f6f858 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9f6f848 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &getline(char_type *__s, streamsize __n, char_type __delim) (CompoundStmt 0x9f71310 </usr/include/c++/4.6/bits/istream.tcc:402:5, line:453:5>
  (BinaryOperator 0x9f6ff58 <line:403:7, col:19> '<dependent type>' '='
    (MemberExpr 0x9f6ff20 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0x9f447f0
      (CXXThisExpr 0x9f6ff10 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0x9f6ff40 <col:19> 'int' 0))
  (DeclStmt 0x9f70028 <line:404:7, col:50>
    0x9f6ffa0 "ios_base::iostate __err =
      (ImplicitCastExpr 0x9f70018 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9f6fff4 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e114b0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (DeclStmt 0x9f700d0 <line:405:7, col:33>
    0x9f70040 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0x9f700b0 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0x9f70088 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9f70078 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0x9f700a0 <col:28> '_Bool' true))")
  (IfStmt 0x9f70fc0 <line:406:7, line:443:9>
    <<<NULL>>>
    (DeclRefExpr 0x9f700e0 <line:406:11> 'class std::basic_istream::sentry' lvalue Var 0x9f70040 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0x9f70fa0 <line:407:9, line:443:9>
      (IfStmt 0x9f70d90 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:435:13>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9f700f8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9f70d68 </usr/include/c++/4.6/bits/istream.tcc:409:13, line:435:13>
          (DeclStmt 0x9f701d8 <line:410:15, col:74>
            0x9f70110 "const int_type __idelim =
              (CallExpr 0x9f701b8 <col:41, col:73> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9f70168 <col:41, col:54> '<dependent type>' lvalue)
                (DeclRefExpr 0x9f7019c <col:66> 'char_type':'_CharT' lvalue ParmVar 0x9f6fcb0 '__delim' 'char_type':'_CharT'))")
          (DeclStmt 0x9f702a0 <line:411:15, col:56>
            0x9f701f0 "const int_type __eof =
              (CallExpr 0x9f70280 <col:38, col:55> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9f70248 <col:38, col:51> '<dependent type>' lvalue))")
          (DeclStmt 0x9f70360 <line:412:15, col:53>
            0x9f702c0 "__streambuf_type *__sb =
              (CallExpr 0x9f70340 <col:40, col:52> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9f70308 <col:40, col:46> '<dependent type>' lvalue
                  (CXXThisExpr 0x9f702f8 <col:40> 'basic_istream<_CharT, _Traits> *' this)))")
          (DeclStmt 0x9f70428 <line:413:15, col:43>
            0x9f70380 "int_type __c =
              (CallExpr 0x9f70408 <col:30, col:42> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9f703d0 <col:30, col:36> '<dependent type>' lvalue
                  (DeclRefExpr 0x9f703b4 <col:30> '__streambuf_type *' lvalue Var 0x9f702c0 '__sb' '__streambuf_type *')))")
          (WhileStmt 0x9f70948 <line:415:15, line:422:17>
            <<<NULL>>>
            (BinaryOperator 0x9f70720 <line:415:22, line:417:64> '<dependent type>' '&&'
              (BinaryOperator 0x9f70640 <line:415:22, line:416:61> '<dependent type>' '&&'
                (CXXOperatorCallExpr 0x9f70550 <line:415:22, col:38> '<dependent type>'
                  (UnresolvedLookupExpr 0x9f70508 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bac3c0 0x9bc2c90 0x9bc5590 0x9d61190 0x9d616c0 0x9d61bf0)
                  (CXXOperatorCallExpr 0x9f704c8 <col:22, col:34> '<dependent type>'
                    (UnresolvedLookupExpr 0x9f70480 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d86680 0x9d87280 0x9d5d090 0x9d5d890)
                    (MemberExpr 0x9f70448 <col:22> 'streamsize':'int' lvalue ->_M_gcount 0x9f447f0
                      (CXXThisExpr 0x9f70438 <col:22> 'basic_istream<_CharT, _Traits> *' this))
                    (IntegerLiteral 0x9f70468 <col:34> 'int' 1))
                  (DeclRefExpr 0x9f704ec <col:38> 'streamsize':'int' lvalue ParmVar 0x9f6fc70 '__n' 'streamsize':'int'))
                (UnaryOperator 0x9f70628 <line:416:25, col:61> '<dependent type>' prefix '!'
                  (CallExpr 0x9f70600 <col:26, col:61> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9f70598 <col:26, col:39> '<dependent type>' lvalue)
                    (DeclRefExpr 0x9f705cc <col:51> 'int_type':'typename _Traits::int_type' lvalue Var 0x9f70380 '__c' 'int_type':'typename _Traits::int_type')
                    (DeclRefExpr 0x9f705e4 <col:56> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x9f701f0 '__eof' 'const int_type':'const typename _Traits::int_type'))))
              (UnaryOperator 0x9f70708 <line:417:25, col:64> '<dependent type>' prefix '!'
                (CallExpr 0x9f706e0 <col:26, col:64> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9f70678 <col:26, col:39> '<dependent type>' lvalue)
                  (DeclRefExpr 0x9f706ac <col:51> 'int_type':'typename _Traits::int_type' lvalue Var 0x9f70380 '__c' 'int_type':'typename _Traits::int_type')
                  (DeclRefExpr 0x9f706c4 <col:56> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x9f70110 '__idelim' 'const int_type':'const typename _Traits::int_type'))))
            (CompoundStmt 0x9f70928 <line:418:17, line:422:17>
              (BinaryOperator 0x9f70828 <line:419:19, col:57> '<dependent type>' '='
                (UnaryOperator 0x9f70780 <col:19, col:23> '<dependent type>' prefix '*'
                  (UnaryOperator 0x9f70768 <col:20, col:23> '<dependent type>' postfix '++'
                    (DeclRefExpr 0x9f70738 <col:20> 'char_type *' lvalue ParmVar 0x9f6fc30 '__s' 'char_type *')))
                (CallExpr 0x9f70808 <col:28, col:57> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9f707b8 <col:28, col:41> '<dependent type>' lvalue)
                  (DeclRefExpr 0x9f707ec <col:54> 'int_type':'typename _Traits::int_type' lvalue Var 0x9f70380 '__c' 'int_type':'typename _Traits::int_type')))
              (BinaryOperator 0x9f708c8 <line:420:19, col:38> '<dependent type>' '='
                (DeclRefExpr 0x9f70840 <col:19> 'int_type':'typename _Traits::int_type' lvalue Var 0x9f70380 '__c' 'int_type':'typename _Traits::int_type')
                (CallExpr 0x9f708a8 <col:25, col:38> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9f70870 <col:25, col:31> '<dependent type>' lvalue
                    (DeclRefExpr 0x9f70858 <col:25> '__streambuf_type *' lvalue Var 0x9f702c0 '__sb' '__streambuf_type *'))))
              (UnaryOperator 0x9f70910 <line:421:19, col:21> '<dependent type>' prefix '++'
                (MemberExpr 0x9f708f0 <col:21> 'streamsize':'int' lvalue ->_M_gcount 0x9f447f0
                  (CXXThisExpr 0x9f708e0 <col:21> 'basic_istream<_CharT, _Traits> *' this)))))
          (IfStmt 0x9f70d48 <line:423:15, line:434:17>
            <<<NULL>>>
            (CallExpr 0x9f709f0 <line:423:19, col:54> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9f70988 <col:19, col:32> '<dependent type>' lvalue)
              (DeclRefExpr 0x9f709bc <col:44> 'int_type':'typename _Traits::int_type' lvalue Var 0x9f70380 '__c' 'int_type':'typename _Traits::int_type')
              (DeclRefExpr 0x9f709d4 <col:49> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x9f701f0 '__eof' 'const int_type':'const typename _Traits::int_type'))
            (CXXOperatorCallExpr 0x9f70aa8 <line:424:17, col:36> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x9f70a98 <col:23, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9f70a80 <col:23, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9e0fd60 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x9f70a14 <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f6ffa0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0x9f70a70 <col:26, col:36> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x9f70a4c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e113f0 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            (CompoundStmt 0x9f70d30 <line:426:17, line:434:17>
              (IfStmt 0x9f70d10 <line:427:19, line:433:40>
                <<<NULL>>>
                (CallExpr 0x9f70b60 <line:427:23, col:61> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9f70af8 <col:23, col:36> '<dependent type>' lvalue)
                  (DeclRefExpr 0x9f70b2c <col:48> 'int_type':'typename _Traits::int_type' lvalue Var 0x9f70380 '__c' 'int_type':'typename _Traits::int_type')
                  (DeclRefExpr 0x9f70b44 <col:53> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x9f70110 '__idelim' 'const int_type':'const typename _Traits::int_type'))
                (CompoundStmt 0x9f70c40 <line:428:21, line:431:21>
                  (CallExpr 0x9f70bd8 <line:429:23, col:36> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9f70ba0 <col:23, col:29> '<dependent type>' lvalue
                      (DeclRefExpr 0x9f70b84 <col:23> '__streambuf_type *' lvalue Var 0x9f702c0 '__sb' '__streambuf_type *')))
                  (UnaryOperator 0x9f70c28 <line:430:23, col:25> '<dependent type>' prefix '++'
                    (MemberExpr 0x9f70c08 <col:25> 'streamsize':'int' lvalue ->_M_gcount 0x9f447f0
                      (CXXThisExpr 0x9f70bf8 <col:25> 'basic_istream<_CharT, _Traits> *' this))))
                (CXXOperatorCallExpr 0x9f70ce8 <line:433:21, col:40> 'const enum std::_Ios_Iostate' lvalue
                  (ImplicitCastExpr 0x9f70cd8 <col:27, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                    (DeclRefExpr 0x9f70cc0 <col:27, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9e0fd60 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
                  (DeclRefExpr 0x9f70c58 <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f6ffa0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
                  (ImplicitCastExpr 0x9f70cb0 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                    (DeclRefExpr 0x9f70c8c <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11450 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))))))
        <<<NULL>>>)
      (IfStmt 0x9f70e90 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:440:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9f70db0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9f70e78 </usr/include/c++/4.6/bits/istream.tcc:437:6, line:440:6>
          (CallExpr 0x9f70e48 <line:438:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f70dd0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9f70dc0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9f70e24 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11390 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x9f70e68 <line:439:31>))
        <<<NULL>>>)
      (IfStmt 0x9f70f80 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:442:52>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9f70eb0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9f70f68 </usr/include/c++/4.6/bits/istream.tcc:442:13, col:52>
          (CallExpr 0x9f70f48 <col:15, col:49> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f70ed0 <col:15, col:21> '<dependent type>' lvalue
              (CXXThisExpr 0x9f70ec0 <col:15> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9f70f24 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11390 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0x9f710a0 <line:446:7, line:447:19>
    <<<NULL>>>
    (BinaryOperator 0x9f71020 <line:446:11, col:17> '_Bool' '>'
      (ImplicitCastExpr 0x9f71010 <col:11> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0x9f70fdc <col:11> 'streamsize':'int' lvalue ParmVar 0x9f6fc70 '__n' 'streamsize':'int'))
      (IntegerLiteral 0x9f70ff8 <col:17> 'int' 0))
    (BinaryOperator 0x9f71088 <line:447:2, col:19> '<dependent type>' '='
      (UnaryOperator 0x9f71050 <col:2, col:3> '<dependent type>' prefix '*'
        (DeclRefExpr 0x9f71038 <col:3> 'char_type *' lvalue ParmVar 0x9f6fc30 '__s' 'char_type *'))
      (CXXUnresolvedConstructExpr 0x9f71070 <col:9, col:19> 'char_type':'_CharT'))
    <<<NULL>>>)
  (IfStmt 0x9f711e0 <line:448:7, line:449:28>
    <<<NULL>>>
    (UnaryOperator 0x9f71110 <line:448:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9f71100 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0x9f710f0 <col:12> 'streamsize':'int' <LValueToRValue>
          (MemberExpr 0x9f710d0 <col:12> 'streamsize':'int' lvalue ->_M_gcount 0x9f447f0
            (CXXThisExpr 0x9f710c0 <col:12> 'basic_istream<_CharT, _Traits> *' this)))))
    (CXXOperatorCallExpr 0x9f711b8 <line:449:9, col:28> 'const enum std::_Ios_Iostate' lvalue
      (ImplicitCastExpr 0x9f711a8 <col:15, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9f71190 <col:15, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9e0fd60 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
      (DeclRefExpr 0x9f71124 <col:9> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f6ffa0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
      (ImplicitCastExpr 0x9f71180 <col:18, col:28> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9f7115c <col:18, col:28> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11450 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (IfStmt 0x9f712b8 <line:450:7, line:451:29>
    <<<NULL>>>
    (ImplicitCastExpr 0x9f71228 <line:450:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x9f71218 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9f711fc <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f6ffa0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0x9f71298 <line:451:9, col:29> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f71248 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x9f71238 <col:9> 'basic_istream<_CharT, _Traits> *' this))
      (DeclRefExpr 0x9f7127c <col:24> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f6ffa0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0x9f71300 <line:452:7, col:15>
    (UnaryOperator 0x9f712e8 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9f712d8 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &ignore() (CompoundStmt 0x9f72250 </usr/include/c++/4.6/bits/istream.tcc:462:5, line:489:5>
  (BinaryOperator 0x9f71938 <line:463:7, col:19> '<dependent type>' '='
    (MemberExpr 0x9f71900 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0x9f447f0
      (CXXThisExpr 0x9f718f0 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0x9f71920 <col:19> 'int' 0))
  (DeclStmt 0x9f719f0 <line:464:7, col:33>
    0x9f71960 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0x9f719d0 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0x9f719a8 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9f71998 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0x9f719c0 <col:28> '_Bool' true))")
  (IfStmt 0x9f721f8 <line:465:7, line:487:2>
    <<<NULL>>>
    (DeclRefExpr 0x9f71a00 <line:465:11> 'class std::basic_istream::sentry' lvalue Var 0x9f71960 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0x9f721d0 <line:466:2, line:487:2>
      (DeclStmt 0x9f71ad8 <line:467:4, col:47>
        0x9f71a50 "ios_base::iostate __err =
          (ImplicitCastExpr 0x9f71ac8 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9f71aa4 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e114b0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0x9f71ee8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:477:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9f71ae8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9f71ec8 </usr/include/c++/4.6/bits/istream.tcc:469:6, line:477:6>
          (DeclStmt 0x9f71bb0 <line:470:8, col:49>
            0x9f71b00 "const int_type __eof =
              (CallExpr 0x9f71b90 <col:31, col:48> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9f71b58 <col:31, col:44> '<dependent type>' lvalue))")
          (DeclStmt 0x9f71c70 <line:471:8, col:46>
            0x9f71bd0 "__streambuf_type *__sb =
              (CallExpr 0x9f71c50 <col:33, col:45> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9f71c18 <col:33, col:39> '<dependent type>' lvalue
                  (CXXThisExpr 0x9f71c08 <col:33> 'basic_istream<_CharT, _Traits> *' this)))")
          (IfStmt 0x9f71ea8 <line:473:8, line:476:15>
            <<<NULL>>>
            (CallExpr 0x9f71d68 <line:473:12, col:58> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9f71ca8 <col:12, col:25> '<dependent type>' lvalue)
              (CallExpr 0x9f71d30 <col:37, col:50> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9f71cf8 <col:37, col:43> '<dependent type>' lvalue
                  (DeclRefExpr 0x9f71cdc <col:37> '__streambuf_type *' lvalue Var 0x9f71bd0 '__sb' '__streambuf_type *')))
              (DeclRefExpr 0x9f71d4c <col:53> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x9f71b00 '__eof' 'const int_type':'const typename _Traits::int_type'))
            (CXXOperatorCallExpr 0x9f71e20 <line:474:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x9f71e10 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9f71df8 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9e0fd60 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x9f71d8c <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f71a50 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0x9f71de8 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x9f71dc4 <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e113f0 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            (BinaryOperator 0x9f71e90 <line:476:3, col:15> '<dependent type>' '='
              (MemberExpr 0x9f71e58 <col:3> 'streamsize':'int' lvalue ->_M_gcount 0x9f447f0
                (CXXThisExpr 0x9f71e48 <col:3> 'basic_istream<_CharT, _Traits> *' this))
              (IntegerLiteral 0x9f71e78 <col:15> 'int' 1))))
        <<<NULL>>>)
      (IfStmt 0x9f71fe8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:482:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9f71f08 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9f71fd0 </usr/include/c++/4.6/bits/istream.tcc:479:6, line:482:6>
          (CallExpr 0x9f71fa0 <line:480:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f71f28 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9f71f18 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9f71f7c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11390 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x9f71fc0 <line:481:31>))
        <<<NULL>>>)
      (IfStmt 0x9f720d8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:484:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9f72008 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9f720c0 </usr/include/c++/4.6/bits/istream.tcc:484:6, col:45>
          (CallExpr 0x9f720a0 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f72028 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9f72018 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9f7207c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11390 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0x9f721b0 <line:485:4, line:486:26>
        <<<NULL>>>
        (ImplicitCastExpr 0x9f72120 <line:485:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0x9f72110 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9f720f4 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f71a50 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0x9f72190 <line:486:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9f72140 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x9f72130 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0x9f72174 <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f71a50 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9f72240 <line:488:7, col:15>
    (UnaryOperator 0x9f72228 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9f72218 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &ignore(streamsize __n) (CompoundStmt 0x9f73a00 </usr/include/c++/4.6/bits/istream.tcc:495:5, line:551:5>
  (BinaryOperator 0x9f72880 <line:496:7, col:19> '<dependent type>' '='
    (MemberExpr 0x9f72848 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0x9f447f0
      (CXXThisExpr 0x9f72838 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0x9f72868 <col:19> 'int' 0))
  (DeclStmt 0x9f72930 <line:497:7, col:33>
    0x9f728a0 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0x9f72910 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0x9f728e8 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9f728d8 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0x9f72900 <col:28> '_Bool' true))")
  (IfStmt 0x9f739a8 <line:498:7, line:549:9>
    <<<NULL>>>
    (BinaryOperator 0x9f729b0 <line:498:11, col:27> '<dependent type>' '&&'
      (DeclRefExpr 0x9f72940 <col:11> 'class std::basic_istream::sentry' lvalue Var 0x9f728a0 '__cerb' 'class std::basic_istream::sentry')
      (BinaryOperator 0x9f72998 <col:21, col:27> '_Bool' '>'
        (ImplicitCastExpr 0x9f72988 <col:21> 'streamsize':'int' <LValueToRValue>
          (DeclRefExpr 0x9f72958 <col:21> 'streamsize':'int' lvalue ParmVar 0x9f725f0 '__n' 'streamsize':'int'))
        (IntegerLiteral 0x9f72970 <col:27> 'int' 0)))
    (CompoundStmt 0x9f73980 <line:499:9, line:549:9>
      (DeclStmt 0x9f72a88 <line:500:11, col:54>
        0x9f72a00 "ios_base::iostate __err =
          (ImplicitCastExpr 0x9f72a78 <col:37, col:47> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9f72a54 <col:37, col:47> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e114b0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0x9f73698 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:539:13>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9f72a98 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9f73668 </usr/include/c++/4.6/bits/istream.tcc:502:13, line:539:13>
          (DeclStmt 0x9f72b60 <line:503:15, col:56>
            0x9f72ab0 "const int_type __eof =
              (CallExpr 0x9f72b40 <col:38, col:55> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9f72b08 <col:38, col:51> '<dependent type>' lvalue))")
          (DeclStmt 0x9f72c20 <line:504:15, col:53>
            0x9f72b80 "__streambuf_type *__sb =
              (CallExpr 0x9f72c00 <col:40, col:52> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9f72bc8 <col:40, col:46> '<dependent type>' lvalue
                  (CXXThisExpr 0x9f72bb8 <col:40> 'basic_istream<_CharT, _Traits> *' this)))")
          (DeclStmt 0x9f72ce8 <line:505:15, col:43>
            0x9f72c40 "int_type __c =
              (CallExpr 0x9f72cc8 <col:30, col:42> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9f72c90 <col:30, col:36> '<dependent type>' lvalue
                  (DeclRefExpr 0x9f72c74 <col:30> '__streambuf_type *' lvalue Var 0x9f72b80 '__sb' '__streambuf_type *')))")
          (DeclStmt 0x9f72d48 <line:514:8, col:35>
            0x9f72d00 "bool __large_ignore =
              (CXXBoolLiteralExpr 0x9f72d38 <col:30> '_Bool' false)")
          (WhileStmt 0x9f73380 <line:515:8, line:532:3>
            <<<NULL>>>
            (CXXBoolLiteralExpr 0x9f72d58 <line:515:15> '_Bool' true)
            (CompoundStmt 0x9f73368 <line:516:3, line:532:3>
              (WhileStmt 0x9f73000 <line:517:5, line:522:7>
                <<<NULL>>>
                (BinaryOperator 0x9f72ee8 <line:517:12, line:518:44> '<dependent type>' '&&'
                  (CXXOperatorCallExpr 0x9f72df8 <line:517:12, col:24> '<dependent type>'
                    (UnresolvedLookupExpr 0x9f72db0 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bac3c0 0x9bc2c90 0x9bc5590 0x9d61190 0x9d616c0 0x9d61bf0)
                    (MemberExpr 0x9f72d78 <col:12> 'streamsize':'int' lvalue ->_M_gcount 0x9f447f0
                      (CXXThisExpr 0x9f72d68 <col:12> 'basic_istream<_CharT, _Traits> *' this))
                    (DeclRefExpr 0x9f72d98 <col:24> 'streamsize':'int' lvalue ParmVar 0x9f725f0 '__n' 'streamsize':'int'))
                  (UnaryOperator 0x9f72ed0 <line:518:8, col:44> '<dependent type>' prefix '!'
                    (CallExpr 0x9f72ea8 <col:9, col:44> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0x9f72e40 <col:9, col:22> '<dependent type>' lvalue)
                      (DeclRefExpr 0x9f72e74 <col:34> 'int_type':'typename _Traits::int_type' lvalue Var 0x9f72c40 '__c' 'int_type':'typename _Traits::int_type')
                      (DeclRefExpr 0x9f72e8c <col:39> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x9f72ab0 '__eof' 'const int_type':'const typename _Traits::int_type'))))
                (CompoundStmt 0x9f72fe8 <line:519:7, line:522:7>
                  (UnaryOperator 0x9f72f30 <line:520:9, col:11> '<dependent type>' prefix '++'
                    (MemberExpr 0x9f72f10 <col:11> 'streamsize':'int' lvalue ->_M_gcount 0x9f447f0
                      (CXXThisExpr 0x9f72f00 <col:11> 'basic_istream<_CharT, _Traits> *' this)))
                  (BinaryOperator 0x9f72fd0 <line:521:9, col:28> '<dependent type>' '='
                    (DeclRefExpr 0x9f72f44 <col:9> 'int_type':'typename _Traits::int_type' lvalue Var 0x9f72c40 '__c' 'int_type':'typename _Traits::int_type')
                    (CallExpr 0x9f72fb0 <col:15, col:28> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0x9f72f78 <col:15, col:21> '<dependent type>' lvalue
                        (DeclRefExpr 0x9f72f5c <col:15> '__streambuf_type *' lvalue Var 0x9f72b80 '__sb' '__streambuf_type *'))))))
              (IfStmt 0x9f73348 <line:523:5, line:531:7>
                <<<NULL>>>
                (BinaryOperator 0x9f731e0 <line:523:9, line:524:48> '<dependent type>' '&&'
                  (BinaryOperator 0x9f73100 <line:523:9, col:57> '_Bool' '=='
                    (ImplicitCastExpr 0x9f730e0 <col:9> 'streamsize':'int' <LValueToRValue>
                      (DeclRefExpr 0x9f73014 <col:9> 'streamsize':'int' lvalue ParmVar 0x9f725f0 '__n' 'streamsize':'int'))
                    (ImplicitCastExpr 0x9f730f0 <col:16, col:57> 'int':'int' <LValueToRValue>
                      (DeclRefExpr 0x9f730c0 <col:16, col:57> 'const int':'const int' lvalue Var 0x9d4cfe0 '__max' 'const int':'const int')))
                  (UnaryOperator 0x9f731c8 <line:524:12, col:48> '<dependent type>' prefix '!'
                    (CallExpr 0x9f731a0 <col:13, col:48> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0x9f73138 <col:13, col:26> '<dependent type>' lvalue)
                      (DeclRefExpr 0x9f7316c <col:38> 'int_type':'typename _Traits::int_type' lvalue Var 0x9f72c40 '__c' 'int_type':'typename _Traits::int_type')
                      (DeclRefExpr 0x9f73184 <col:43> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x9f72ab0 '__eof' 'const int_type':'const typename _Traits::int_type'))))
                (CompoundStmt 0x9f73328 <line:525:7, line:529:7>
                  (BinaryOperator 0x9f732d0 <line:526:9, line:527:45> '<dependent type>' '='
                    (MemberExpr 0x9f73208 <line:526:9> 'streamsize':'int' lvalue ->_M_gcount 0x9f447f0
                      (CXXThisExpr 0x9f731f8 <col:9> 'basic_istream<_CharT, _Traits> *' this))
                    (DeclRefExpr 0x9f732b0 <line:527:4, col:45> 'const int':'const int' lvalue Var 0x9d4cdd0 '__min' 'const int':'const int'))
                  (BinaryOperator 0x9f73310 <line:528:9, col:26> '_Bool' lvalue '='
                    (DeclRefExpr 0x9f732e8 <col:9> '_Bool' lvalue Var 0x9f72d00 '__large_ignore' '_Bool')
                    (CXXBoolLiteralExpr 0x9f73300 <col:26> '_Bool' true)))
                (BreakStmt 0x9f73340 <line:531:7>))))
          (IfStmt 0x9f734b8 <line:534:8, line:535:56>
            <<<NULL>>>
            (ImplicitCastExpr 0x9f733b0 <line:534:12> '_Bool' <LValueToRValue>
              (DeclRefExpr 0x9f73394 <col:12> '_Bool' lvalue Var 0x9f72d00 '__large_ignore' '_Bool'))
            (BinaryOperator 0x9f734a0 <line:535:3, col:56> '<dependent type>' '='
              (MemberExpr 0x9f733d0 <col:3> 'streamsize':'int' lvalue ->_M_gcount 0x9f447f0
                (CXXThisExpr 0x9f733c0 <col:3> 'basic_istream<_CharT, _Traits> *' this))
              (DeclRefExpr 0x9f73480 <col:15, col:56> 'const int':'const int' lvalue Var 0x9d4cfe0 '__max' 'const int':'const int'))
            <<<NULL>>>)
          (IfStmt 0x9f73648 <line:537:8, line:538:36>
            <<<NULL>>>
            (CallExpr 0x9f73568 <line:537:12, col:47> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9f73500 <col:12, col:25> '<dependent type>' lvalue)
              (DeclRefExpr 0x9f73534 <col:37> 'int_type':'typename _Traits::int_type' lvalue Var 0x9f72c40 '__c' 'int_type':'typename _Traits::int_type')
              (DeclRefExpr 0x9f7354c <col:42> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x9f72ab0 '__eof' 'const int_type':'const typename _Traits::int_type'))
            (CXXOperatorCallExpr 0x9f73620 <line:538:17, col:36> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x9f73610 <col:23, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9f735f8 <col:23, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9e0fd60 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x9f7358c <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f72a00 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0x9f735e8 <col:26, col:36> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x9f735c4 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e113f0 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0x9f73798 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:544:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9f736b8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9f73780 </usr/include/c++/4.6/bits/istream.tcc:541:6, line:544:6>
          (CallExpr 0x9f73750 <line:542:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f736d8 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9f736c8 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9f7372c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11390 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x9f73770 <line:543:31>))
        <<<NULL>>>)
      (IfStmt 0x9f73888 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:546:52>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9f737b8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9f73870 </usr/include/c++/4.6/bits/istream.tcc:546:13, col:52>
          (CallExpr 0x9f73850 <col:15, col:49> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f737d8 <col:15, col:21> '<dependent type>' lvalue
              (CXXThisExpr 0x9f737c8 <col:15> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9f7382c <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11390 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0x9f73960 <line:547:11, line:548:33>
        <<<NULL>>>
        (ImplicitCastExpr 0x9f738d0 <line:547:15> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0x9f738c0 <col:15> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9f738a4 <col:15> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f72a00 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0x9f73940 <line:548:13, col:33> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9f738f0 <col:13, col:19> '<dependent type>' lvalue
            (CXXThisExpr 0x9f738e0 <col:13> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0x9f73924 <col:28> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f72a00 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9f739f0 <line:550:7, col:15>
    (UnaryOperator 0x9f739d8 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9f739c8 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &ignore(streamsize __n, int_type __delim) (CompoundStmt 0x9f756c8 </usr/include/c++/4.6/bits/istream.tcc:557:5, line:616:5>
  (BinaryOperator 0x9f74070 <line:558:7, col:19> '<dependent type>' '='
    (MemberExpr 0x9f74038 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0x9f447f0
      (CXXThisExpr 0x9f74028 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0x9f74058 <col:19> 'int' 0))
  (DeclStmt 0x9f74120 <line:559:7, col:33>
    0x9f74090 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0x9f74100 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0x9f740d8 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9f740c8 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0x9f740f0 <col:28> '_Bool' true))")
  (IfStmt 0x9f75670 <line:560:7, line:614:9>
    <<<NULL>>>
    (BinaryOperator 0x9f741a0 <line:560:11, col:27> '<dependent type>' '&&'
      (DeclRefExpr 0x9f74130 <col:11> 'class std::basic_istream::sentry' lvalue Var 0x9f74090 '__cerb' 'class std::basic_istream::sentry')
      (BinaryOperator 0x9f74188 <col:21, col:27> '_Bool' '>'
        (ImplicitCastExpr 0x9f74178 <col:21> 'streamsize':'int' <LValueToRValue>
          (DeclRefExpr 0x9f74148 <col:21> 'streamsize':'int' lvalue ParmVar 0x9f73da0 '__n' 'streamsize':'int'))
        (IntegerLiteral 0x9f74160 <col:27> 'int' 0)))
    (CompoundStmt 0x9f75648 <line:561:9, line:614:9>
      (DeclStmt 0x9f74278 <line:562:11, col:54>
        0x9f741f0 "ios_base::iostate __err =
          (ImplicitCastExpr 0x9f74268 <col:37, col:47> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9f74244 <col:37, col:47> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e114b0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0x9f75360 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:604:13>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9f74288 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9f75330 </usr/include/c++/4.6/bits/istream.tcc:564:13, line:604:13>
          (DeclStmt 0x9f74350 <line:565:15, col:56>
            0x9f742a0 "const int_type __eof =
              (CallExpr 0x9f74330 <col:38, col:55> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9f742f8 <col:38, col:51> '<dependent type>' lvalue))")
          (DeclStmt 0x9f74410 <line:566:15, col:53>
            0x9f74370 "__streambuf_type *__sb =
              (CallExpr 0x9f743f0 <col:40, col:52> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9f743b8 <col:40, col:46> '<dependent type>' lvalue
                  (CXXThisExpr 0x9f743a8 <col:40> 'basic_istream<_CharT, _Traits> *' this)))")
          (DeclStmt 0x9f744d8 <line:567:15, col:43>
            0x9f74430 "int_type __c =
              (CallExpr 0x9f744b8 <col:30, col:42> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9f74480 <col:30, col:36> '<dependent type>' lvalue
                  (DeclRefExpr 0x9f74464 <col:30> '__streambuf_type *' lvalue Var 0x9f74370 '__sb' '__streambuf_type *')))")
          (DeclStmt 0x9f74538 <line:570:8, col:35>
            0x9f744f0 "bool __large_ignore =
              (CXXBoolLiteralExpr 0x9f74528 <col:30> '_Bool' false)")
          (WhileStmt 0x9f74d30 <line:571:8, line:590:3>
            <<<NULL>>>
            (CXXBoolLiteralExpr 0x9f74548 <line:571:15> '_Bool' true)
            (CompoundStmt 0x9f74d18 <line:572:3, line:590:3>
              (WhileStmt 0x9f748d0 <line:573:5, line:579:7>
                <<<NULL>>>
                (BinaryOperator 0x9f747b8 <line:573:12, line:575:46> '<dependent type>' '&&'
                  (BinaryOperator 0x9f746d8 <line:573:12, line:574:44> '<dependent type>' '&&'
                    (CXXOperatorCallExpr 0x9f745e8 <line:573:12, col:24> '<dependent type>'
                      (UnresolvedLookupExpr 0x9f745a0 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bac3c0 0x9bc2c90 0x9bc5590 0x9d61190 0x9d616c0 0x9d61bf0)
                      (MemberExpr 0x9f74568 <col:12> 'streamsize':'int' lvalue ->_M_gcount 0x9f447f0
                        (CXXThisExpr 0x9f74558 <col:12> 'basic_istream<_CharT, _Traits> *' this))
                      (DeclRefExpr 0x9f74588 <col:24> 'streamsize':'int' lvalue ParmVar 0x9f73da0 '__n' 'streamsize':'int'))
                    (UnaryOperator 0x9f746c0 <line:574:8, col:44> '<dependent type>' prefix '!'
                      (CallExpr 0x9f74698 <col:9, col:44> '<dependent type>'
                        (CXXDependentScopeMemberExpr 0x9f74630 <col:9, col:22> '<dependent type>' lvalue)
                        (DeclRefExpr 0x9f74664 <col:34> 'int_type':'typename _Traits::int_type' lvalue Var 0x9f74430 '__c' 'int_type':'typename _Traits::int_type')
                        (DeclRefExpr 0x9f7467c <col:39> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x9f742a0 '__eof' 'const int_type':'const typename _Traits::int_type'))))
                  (UnaryOperator 0x9f747a0 <line:575:8, col:46> '<dependent type>' prefix '!'
                    (CallExpr 0x9f74778 <col:9, col:46> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0x9f74710 <col:9, col:22> '<dependent type>' lvalue)
                      (DeclRefExpr 0x9f74744 <col:34> 'int_type':'typename _Traits::int_type' lvalue Var 0x9f74430 '__c' 'int_type':'typename _Traits::int_type')
                      (DeclRefExpr 0x9f7475c <col:39> 'int_type':'typename _Traits::int_type' lvalue ParmVar 0x9f73de0 '__delim' 'int_type':'typename _Traits::int_type'))))
                (CompoundStmt 0x9f748b8 <line:576:7, line:579:7>
                  (UnaryOperator 0x9f74800 <line:577:9, col:11> '<dependent type>' prefix '++'
                    (MemberExpr 0x9f747e0 <col:11> 'streamsize':'int' lvalue ->_M_gcount 0x9f447f0
                      (CXXThisExpr 0x9f747d0 <col:11> 'basic_istream<_CharT, _Traits> *' this)))
                  (BinaryOperator 0x9f748a0 <line:578:9, col:28> '<dependent type>' '='
                    (DeclRefExpr 0x9f74814 <col:9> 'int_type':'typename _Traits::int_type' lvalue Var 0x9f74430 '__c' 'int_type':'typename _Traits::int_type')
                    (CallExpr 0x9f74880 <col:15, col:28> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0x9f74848 <col:15, col:21> '<dependent type>' lvalue
                        (DeclRefExpr 0x9f7482c <col:15> '__streambuf_type *' lvalue Var 0x9f74370 '__sb' '__streambuf_type *'))))))
              (IfStmt 0x9f74cf8 <line:580:5, line:589:7>
                <<<NULL>>>
                (BinaryOperator 0x9f74b90 <line:580:9, line:582:50> '<dependent type>' '&&'
                  (BinaryOperator 0x9f74ab0 <line:580:9, line:581:48> '<dependent type>' '&&'
                    (BinaryOperator 0x9f749d0 <line:580:9, col:57> '_Bool' '=='
                      (ImplicitCastExpr 0x9f749b0 <col:9> 'streamsize':'int' <LValueToRValue>
                        (DeclRefExpr 0x9f748e4 <col:9> 'streamsize':'int' lvalue ParmVar 0x9f73da0 '__n' 'streamsize':'int'))
                      (ImplicitCastExpr 0x9f749c0 <col:16, col:57> 'int':'int' <LValueToRValue>
                        (DeclRefExpr 0x9f74990 <col:16, col:57> 'const int':'const int' lvalue Var 0x9d4cfe0 '__max' 'const int':'const int')))
                    (UnaryOperator 0x9f74a98 <line:581:12, col:48> '<dependent type>' prefix '!'
                      (CallExpr 0x9f74a70 <col:13, col:48> '<dependent type>'
                        (CXXDependentScopeMemberExpr 0x9f74a08 <col:13, col:26> '<dependent type>' lvalue)
                        (DeclRefExpr 0x9f74a3c <col:38> 'int_type':'typename _Traits::int_type' lvalue Var 0x9f74430 '__c' 'int_type':'typename _Traits::int_type')
                        (DeclRefExpr 0x9f74a54 <col:43> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x9f742a0 '__eof' 'const int_type':'const typename _Traits::int_type'))))
                  (UnaryOperator 0x9f74b78 <line:582:12, col:50> '<dependent type>' prefix '!'
                    (CallExpr 0x9f74b50 <col:13, col:50> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0x9f74ae8 <col:13, col:26> '<dependent type>' lvalue)
                      (DeclRefExpr 0x9f74b1c <col:38> 'int_type':'typename _Traits::int_type' lvalue Var 0x9f74430 '__c' 'int_type':'typename _Traits::int_type')
                      (DeclRefExpr 0x9f74b34 <col:43> 'int_type':'typename _Traits::int_type' lvalue ParmVar 0x9f73de0 '__delim' 'int_type':'typename _Traits::int_type'))))
                (CompoundStmt 0x9f74cd8 <line:583:7, line:587:7>
                  (BinaryOperator 0x9f74c80 <line:584:9, line:585:45> '<dependent type>' '='
                    (MemberExpr 0x9f74bb8 <line:584:9> 'streamsize':'int' lvalue ->_M_gcount 0x9f447f0
                      (CXXThisExpr 0x9f74ba8 <col:9> 'basic_istream<_CharT, _Traits> *' this))
                    (DeclRefExpr 0x9f74c60 <line:585:4, col:45> 'const int':'const int' lvalue Var 0x9d4cdd0 '__min' 'const int':'const int'))
                  (BinaryOperator 0x9f74cc0 <line:586:9, col:26> '_Bool' lvalue '='
                    (DeclRefExpr 0x9f74c98 <col:9> '_Bool' lvalue Var 0x9f744f0 '__large_ignore' '_Bool')
                    (CXXBoolLiteralExpr 0x9f74cb0 <col:26> '_Bool' true)))
                (BreakStmt 0x9f74cf0 <line:589:7>))))
          (IfStmt 0x9f74e68 <line:592:8, line:593:56>
            <<<NULL>>>
            (ImplicitCastExpr 0x9f74d60 <line:592:12> '_Bool' <LValueToRValue>
              (DeclRefExpr 0x9f74d44 <col:12> '_Bool' lvalue Var 0x9f744f0 '__large_ignore' '_Bool'))
            (BinaryOperator 0x9f74e50 <line:593:3, col:56> '<dependent type>' '='
              (MemberExpr 0x9f74d80 <col:3> 'streamsize':'int' lvalue ->_M_gcount 0x9f447f0
                (CXXThisExpr 0x9f74d70 <col:3> 'basic_istream<_CharT, _Traits> *' this))
              (DeclRefExpr 0x9f74e30 <col:15, col:56> 'const int':'const int' lvalue Var 0x9d4cfe0 '__max' 'const int':'const int'))
            <<<NULL>>>)
          (IfStmt 0x9f75310 <line:595:15, line:603:3>
            <<<NULL>>>
            (CallExpr 0x9f74f18 <line:595:19, col:54> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9f74eb0 <col:19, col:32> '<dependent type>' lvalue)
              (DeclRefExpr 0x9f74ee4 <col:44> 'int_type':'typename _Traits::int_type' lvalue Var 0x9f74430 '__c' 'int_type':'typename _Traits::int_type')
              (DeclRefExpr 0x9f74efc <col:49> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x9f742a0 '__eof' 'const int_type':'const typename _Traits::int_type'))
            (CXXOperatorCallExpr 0x9f74fd0 <line:596:17, col:36> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x9f74fc0 <col:23, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9f74fa8 <col:23, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9e0fd60 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x9f74f3c <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f741f0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0x9f74f98 <col:26, col:36> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x9f74f74 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e113f0 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            (IfStmt 0x9f752f0 <line:597:13, line:603:3>
              <<<NULL>>>
              (CallExpr 0x9f75088 <line:597:17, col:54> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9f75020 <col:17, col:30> '<dependent type>' lvalue)
                (DeclRefExpr 0x9f75054 <col:42> 'int_type':'typename _Traits::int_type' lvalue Var 0x9f74430 '__c' 'int_type':'typename _Traits::int_type')
                (DeclRefExpr 0x9f7506c <col:47> 'int_type':'typename _Traits::int_type' lvalue ParmVar 0x9f73de0 '__delim' 'int_type':'typename _Traits::int_type'))
              (CompoundStmt 0x9f752d8 <line:598:3, line:603:3>
                (IfStmt 0x9f75248 <line:599:5, line:601:9>
                  <<<NULL>>>
                  (CXXOperatorCallExpr 0x9f751d8 <line:599:9, line:600:52> '<dependent type>'
                    (UnresolvedLookupExpr 0x9f75190 <col:9, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bac3c0 0x9bc2c90 0x9bc5590 0x9d61190 0x9d616c0 0x9d61bf0)
                    (MemberExpr 0x9f750c0 <line:599:9> 'streamsize':'int' lvalue ->_M_gcount 0x9f447f0
                      (CXXThisExpr 0x9f750b0 <col:9> 'basic_istream<_CharT, _Traits> *' this))
                    (DeclRefExpr 0x9f75170 <line:600:11, col:52> 'const int':'const int' lvalue Var 0x9d4cfe0 '__max' 'const int':'const int'))
                  (UnaryOperator 0x9f75230 <line:601:7, col:9> '<dependent type>' prefix '++'
                    (MemberExpr 0x9f75210 <col:9> 'streamsize':'int' lvalue ->_M_gcount 0x9f447f0
                      (CXXThisExpr 0x9f75200 <col:9> 'basic_istream<_CharT, _Traits> *' this)))
                  <<<NULL>>>)
                (CallExpr 0x9f752b8 <line:602:5, col:18> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9f75280 <col:5, col:11> '<dependent type>' lvalue
                    (DeclRefExpr 0x9f75264 <col:5> '__streambuf_type *' lvalue Var 0x9f74370 '__sb' '__streambuf_type *'))))
              <<<NULL>>>)))
        <<<NULL>>>)
      (IfStmt 0x9f75460 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:609:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9f75380 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9f75448 </usr/include/c++/4.6/bits/istream.tcc:606:6, line:609:6>
          (CallExpr 0x9f75418 <line:607:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f753a0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9f75390 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9f753f4 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11390 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x9f75438 <line:608:31>))
        <<<NULL>>>)
      (IfStmt 0x9f75550 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:611:52>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9f75480 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9f75538 </usr/include/c++/4.6/bits/istream.tcc:611:13, col:52>
          (CallExpr 0x9f75518 <col:15, col:49> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f754a0 <col:15, col:21> '<dependent type>' lvalue
              (CXXThisExpr 0x9f75490 <col:15> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9f754f4 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11390 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0x9f75628 <line:612:11, line:613:33>
        <<<NULL>>>
        (ImplicitCastExpr 0x9f75598 <line:612:15> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0x9f75588 <col:15> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9f7556c <col:15> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f741f0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0x9f75608 <line:613:13, col:33> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9f755b8 <col:13, col:19> '<dependent type>' lvalue
            (CXXThisExpr 0x9f755a8 <col:13> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0x9f755ec <col:28> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f741f0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9f756b8 <line:615:7, col:15>
    (UnaryOperator 0x9f756a0 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9f75690 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    typename basic_istream<_CharT, _Traits>::int_type peek() (CompoundStmt 0x9f76618 </usr/include/c++/4.6/bits/istream.tcc:622:5, line:646:5>
  (DeclStmt 0x9f75da0 <line:623:7, col:40>
    0x9f75cf0 "int_type __c =
      (CallExpr 0x9f75d80 <col:22, col:39> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f75d48 <col:22, col:35> '<dependent type>' lvalue))")
  (BinaryOperator 0x9f75e08 <line:624:7, col:19> '<dependent type>' '='
    (MemberExpr 0x9f75dd0 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0x9f447f0
      (CXXThisExpr 0x9f75db0 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0x9f75df0 <col:19> 'int' 0))
  (DeclStmt 0x9f75ec0 <line:625:7, col:33>
    0x9f75e30 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0x9f75ea0 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0x9f75e78 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9f75e68 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0x9f75e90 <col:28> '_Bool' true))")
  (IfStmt 0x9f765d0 <line:626:7, line:644:2>
    <<<NULL>>>
    (DeclRefExpr 0x9f75ed0 <line:626:11> 'class std::basic_istream::sentry' lvalue Var 0x9f75e30 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0x9f765a8 <line:627:2, line:644:2>
      (DeclStmt 0x9f75fa8 <line:628:4, col:47>
        0x9f75f20 "ios_base::iostate __err =
          (ImplicitCastExpr 0x9f75f98 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9f75f74 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e114b0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0x9f762c0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:634:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9f75fb8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9f762a8 </usr/include/c++/4.6/bits/istream.tcc:630:6, line:634:6>
          (BinaryOperator 0x9f760a0 <line:631:8, col:35> '<dependent type>' '='
            (DeclRefExpr 0x9f75fc8 <col:8> 'int_type':'typename _Traits::int_type' lvalue Var 0x9f75cf0 '__c' 'int_type':'typename _Traits::int_type')
            (CallExpr 0x9f76080 <col:14, col:35> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9f76048 <col:14, col:29> '<dependent type>' lvalue
                (CallExpr 0x9f76028 <col:14, col:26> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9f75ff0 <col:14, col:20> '<dependent type>' lvalue
                    (CXXThisExpr 0x9f75fe0 <col:14> 'basic_istream<_CharT, _Traits> *' this))))))
          (IfStmt 0x9f76288 <line:632:8, line:633:22>
            <<<NULL>>>
            (CallExpr 0x9f761a8 <line:632:12, col:60> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9f760e0 <col:12, col:25> '<dependent type>' lvalue)
              (DeclRefExpr 0x9f76114 <col:37> 'int_type':'typename _Traits::int_type' lvalue Var 0x9f75cf0 '__c' 'int_type':'typename _Traits::int_type')
              (CallExpr 0x9f76188 <col:42, col:59> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9f76150 <col:42, col:55> '<dependent type>' lvalue)))
            (CXXOperatorCallExpr 0x9f76260 <line:633:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x9f76250 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9f76238 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9e0fd60 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x9f761cc <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f75f20 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0x9f76228 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x9f76204 <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e113f0 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0x9f763c0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:639:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9f762e0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9f763a8 </usr/include/c++/4.6/bits/istream.tcc:636:6, line:639:6>
          (CallExpr 0x9f76378 <line:637:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f76300 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9f762f0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9f76354 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11390 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x9f76398 <line:638:31>))
        <<<NULL>>>)
      (IfStmt 0x9f764b0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:641:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9f763e0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9f76498 </usr/include/c++/4.6/bits/istream.tcc:641:6, col:45>
          (CallExpr 0x9f76478 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f76400 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9f763f0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9f76454 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11390 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0x9f76588 <line:642:4, line:643:26>
        <<<NULL>>>
        (ImplicitCastExpr 0x9f764f8 <line:642:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0x9f764e8 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9f764cc <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f75f20 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0x9f76568 <line:643:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9f76518 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x9f76508 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0x9f7654c <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f75f20 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9f76608 <line:645:7, col:14>
    (DeclRefExpr 0x9f765ec <col:14> 'int_type':'typename _Traits::int_type' lvalue Var 0x9f75cf0 '__c' 'int_type':'typename _Traits::int_type')))


    basic_istream<_CharT, _Traits> &read(char_type *__s, streamsize __n) (CompoundStmt 0x9f77568 </usr/include/c++/4.6/bits/istream.tcc:652:5, line:675:5>
  (BinaryOperator 0x9f76c90 <line:653:7, col:19> '<dependent type>' '='
    (MemberExpr 0x9f76c58 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0x9f447f0
      (CXXThisExpr 0x9f76c48 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0x9f76c78 <col:19> 'int' 0))
  (DeclStmt 0x9f76d40 <line:654:7, col:33>
    0x9f76cb0 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0x9f76d20 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0x9f76cf8 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9f76ce8 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0x9f76d10 <col:28> '_Bool' true))")
  (IfStmt 0x9f77510 <line:655:7, line:673:2>
    <<<NULL>>>
    (DeclRefExpr 0x9f76d50 <line:655:11> 'class std::basic_istream::sentry' lvalue Var 0x9f76cb0 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0x9f774e8 <line:656:2, line:673:2>
      (DeclStmt 0x9f76e28 <line:657:4, col:47>
        0x9f76da0 "ios_base::iostate __err =
          (ImplicitCastExpr 0x9f76e18 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9f76df4 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e114b0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0x9f77200 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:663:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9f76e38 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9f771e8 </usr/include/c++/4.6/bits/istream.tcc:659:6, line:663:6>
          (BinaryOperator 0x9f76f70 <line:660:8, col:49> '<dependent type>' '='
            (MemberExpr 0x9f76e58 <col:8> 'streamsize':'int' lvalue ->_M_gcount 0x9f447f0
              (CXXThisExpr 0x9f76e48 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (CallExpr 0x9f76f48 <col:20, col:49> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9f76ee0 <col:20, col:35> '<dependent type>' lvalue
                (CallExpr 0x9f76ec0 <col:20, col:32> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9f76e88 <col:20, col:26> '<dependent type>' lvalue
                    (CXXThisExpr 0x9f76e78 <col:20> 'basic_istream<_CharT, _Traits> *' this))))
              (DeclRefExpr 0x9f76f14 <col:41> 'char_type *' lvalue ParmVar 0x9f769c0 '__s' 'char_type *')
              (DeclRefExpr 0x9f76f2c <col:46> 'streamsize':'int' lvalue ParmVar 0x9f76a00 '__n' 'streamsize':'int')))
          (IfStmt 0x9f771c8 <line:661:8, line:662:49>
            <<<NULL>>>
            (CXXOperatorCallExpr 0x9f77028 <line:661:12, col:25> '<dependent type>'
              (UnresolvedLookupExpr 0x9f76fd0 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bacde0 0x9bc3130 0x9bc62c0 0x9c11360 0x9c32300 0x9c32670 0x9d60120 0x9d60630 0x9d60b40 0x9e73820)
              (MemberExpr 0x9f76f98 <col:12> 'streamsize':'int' lvalue ->_M_gcount 0x9f447f0
                (CXXThisExpr 0x9f76f88 <col:12> 'basic_istream<_CharT, _Traits> *' this))
              (DeclRefExpr 0x9f76fb8 <col:25> 'streamsize':'int' lvalue ParmVar 0x9f76a00 '__n' 'streamsize':'int'))
            (CXXOperatorCallExpr 0x9f771a0 <line:662:3, col:49> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x9f77190 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9f77178 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9e0fd60 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x9f7704c <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f76da0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ParenExpr 0x9f77160 <col:12, col:49> 'enum std::_Ios_Iostate'
                (CXXOperatorCallExpr 0x9f77138 <col:13, col:42> 'enum std::_Ios_Iostate'
                  (ImplicitCastExpr 0x9f77128 <col:30, <invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                    (DeclRefExpr 0x9f77110 <col:30, <invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)' lvalue Function 0x9e0f6e0 'operator|' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)'))
                  (ImplicitCastExpr 0x9f770f0 <col:13, col:23> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                    (DeclRefExpr 0x9f77090 <col:13, col:23> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e113f0 'eofbit' 'const iostate':'const enum std::_Ios_Iostate'))
                  (ImplicitCastExpr 0x9f77100 <col:32, col:42> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                    (DeclRefExpr 0x9f770cc <col:32, col:42> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11450 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0x9f77300 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:668:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9f77220 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9f772e8 </usr/include/c++/4.6/bits/istream.tcc:665:6, line:668:6>
          (CallExpr 0x9f772b8 <line:666:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f77240 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9f77230 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9f77294 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11390 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x9f772d8 <line:667:31>))
        <<<NULL>>>)
      (IfStmt 0x9f773f0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:670:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9f77320 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9f773d8 </usr/include/c++/4.6/bits/istream.tcc:670:6, col:45>
          (CallExpr 0x9f773b8 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f77340 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9f77330 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9f77394 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11390 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0x9f774c8 <line:671:4, line:672:26>
        <<<NULL>>>
        (ImplicitCastExpr 0x9f77438 <line:671:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0x9f77428 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9f7740c <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f76da0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0x9f774a8 <line:672:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9f77458 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x9f77448 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0x9f7748c <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f76da0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9f77558 <line:674:7, col:15>
    (UnaryOperator 0x9f77540 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9f77530 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    streamsize readsome(char_type *__s, streamsize __n) (CompoundStmt 0x9f78410 </usr/include/c++/4.6/bits/istream.tcc:681:5, line:707:5>
  (BinaryOperator 0x9f779b0 <line:682:7, col:19> '<dependent type>' '='
    (MemberExpr 0x9f77978 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0x9f447f0
      (CXXThisExpr 0x9f77968 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0x9f77998 <col:19> 'int' 0))
  (DeclStmt 0x9f77a60 <line:683:7, col:33>
    0x9f779d0 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0x9f77a40 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0x9f77a18 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9f77a08 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0x9f77a30 <col:28> '_Bool' true))")
  (IfStmt 0x9f783b0 <line:684:7, line:705:2>
    <<<NULL>>>
    (DeclRefExpr 0x9f77a70 <line:684:11> 'class std::basic_istream::sentry' lvalue Var 0x9f779d0 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0x9f78388 <line:685:2, line:705:2>
      (DeclStmt 0x9f77b48 <line:686:4, col:47>
        0x9f77ac0 "ios_base::iostate __err =
          (ImplicitCastExpr 0x9f77b38 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9f77b14 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e114b0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0x9f780a0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:695:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9f77b58 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9f78088 </usr/include/c++/4.6/bits/istream.tcc:688:6, line:695:6>
          (DeclStmt 0x9f77c68 <line:690:8, col:58>
            0x9f77b70 "const streamsize __num =
              (CallExpr 0x9f77c48 <col:33, col:57> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9f77c10 <col:33, col:48> '<dependent type>' lvalue
                  (CallExpr 0x9f77bf0 <col:33, col:45> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9f77bb8 <col:33, col:39> '<dependent type>' lvalue
                      (CXXThisExpr 0x9f77ba8 <col:33> 'basic_istream<_CharT, _Traits> *' this)))))")
          (IfStmt 0x9f78068 <line:691:8, line:694:22>
            <<<NULL>>>
            (BinaryOperator 0x9f77cb8 <line:691:12, col:20> '_Bool' '>'
              (ImplicitCastExpr 0x9f77ca8 <col:12> 'streamsize':'int' <LValueToRValue>
                (DeclRefExpr 0x9f77c78 <col:12> 'const streamsize':'const int' lvalue Var 0x9f77b70 '__num' 'const streamsize':'const int'))
              (IntegerLiteral 0x9f77c90 <col:20> 'int' 0))
            (BinaryOperator 0x9f77f08 <line:692:3, col:61> '<dependent type>' '='
              (MemberExpr 0x9f77ce0 <col:3> 'streamsize':'int' lvalue ->_M_gcount 0x9f447f0
                (CXXThisExpr 0x9f77cd0 <col:3> 'basic_istream<_CharT, _Traits> *' this))
              (CallExpr 0x9f77ee0 <col:15, col:61> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9f77d68 <col:15, col:30> '<dependent type>' lvalue
                  (CallExpr 0x9f77d48 <col:15, col:27> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9f77d10 <col:15, col:21> '<dependent type>' lvalue
                      (CXXThisExpr 0x9f77d00 <col:15> 'basic_istream<_CharT, _Traits> *' this))))
                (DeclRefExpr 0x9f77d9c <col:36> 'char_type *' lvalue ParmVar 0x9f77830 '__s' 'char_type *')
                (CallExpr 0x9f77ea8 <col:41, col:60> 'const int':'const int' lvalue
                  (ImplicitCastExpr 0x9f77e98 <col:41, col:46> 'const int &(*)(const int &, const int &)' <FunctionToPointerDecay>
                    (DeclRefExpr 0x9f77e70 <col:41, col:46> 'const int &(const int &, const int &)' lvalue Function 0x9e3f3a0 'min' 'const int &(const int &, const int &)' (FunctionTemplate 0x9bdffa0 'min')))
                  (DeclRefExpr 0x9f77e10 <col:50> 'const streamsize':'const int' lvalue Var 0x9f77b70 '__num' 'const streamsize':'const int')
                  (ImplicitCastExpr 0x9f77ed0 <col:57> 'const int':'const int' lvalue <NoOp>
                    (DeclRefExpr 0x9f77e28 <col:57> 'streamsize':'int' lvalue ParmVar 0x9f77870 '__n' 'streamsize':'int')))))
            (IfStmt 0x9f78048 <line:693:13, line:694:22>
              <<<NULL>>>
              (BinaryOperator 0x9f77f78 <line:693:17, col:27> '_Bool' '=='
                (ImplicitCastExpr 0x9f77f68 <col:17> 'streamsize':'int' <LValueToRValue>
                  (DeclRefExpr 0x9f77f20 <col:17> 'const streamsize':'const int' lvalue Var 0x9f77b70 '__num' 'const streamsize':'const int'))
                (UnaryOperator 0x9f77f50 <col:26, col:27> 'int' prefix '-'
                  (IntegerLiteral 0x9f77f38 <col:27> 'int' 1)))
              (CXXOperatorCallExpr 0x9f78020 <line:694:3, col:22> 'const enum std::_Ios_Iostate' lvalue
                (ImplicitCastExpr 0x9f78010 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                  (DeclRefExpr 0x9f77ff8 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9e0fd60 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
                (DeclRefExpr 0x9f77f90 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f77ac0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
                (ImplicitCastExpr 0x9f77fe8 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                  (DeclRefExpr 0x9f77fc4 <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e113f0 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
              <<<NULL>>>)))
        <<<NULL>>>)
      (IfStmt 0x9f781a0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:700:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9f780c0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9f78188 </usr/include/c++/4.6/bits/istream.tcc:697:6, line:700:6>
          (CallExpr 0x9f78158 <line:698:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f780e0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9f780d0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9f78134 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11390 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x9f78178 <line:699:31>))
        <<<NULL>>>)
      (IfStmt 0x9f78290 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:702:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9f781c0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9f78278 </usr/include/c++/4.6/bits/istream.tcc:702:6, col:45>
          (CallExpr 0x9f78258 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f781e0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9f781d0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9f78234 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11390 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0x9f78368 <line:703:4, line:704:26>
        <<<NULL>>>
        (ImplicitCastExpr 0x9f782d8 <line:703:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0x9f782c8 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9f782ac <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f77ac0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0x9f78348 <line:704:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9f782f8 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x9f782e8 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0x9f7832c <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f77ac0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9f78400 <line:706:7, col:14>
    (MemberExpr 0x9f783e0 <col:14> 'streamsize':'int' lvalue ->_M_gcount 0x9f447f0
      (CXXThisExpr 0x9f783d0 <col:14> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &putback(char_type __c) (CompoundStmt 0x9f79538 </usr/include/c++/4.6/bits/istream.tcc:713:5, line:742:5>
  (BinaryOperator 0x9f78a40 <line:716:7, col:19> '<dependent type>' '='
    (MemberExpr 0x9f78a08 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0x9f447f0
      (CXXThisExpr 0x9f789f8 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0x9f78a28 <col:19> 'int' 0))
  (CallExpr 0x9f78c20 <line:718:7, col:54> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9f78a68 <col:7, col:13> '<dependent type>' lvalue
      (CXXThisExpr 0x9f78a58 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (CXXOperatorCallExpr 0x9f78bf8 <col:19, col:48> '<dependent type>'
      (UnresolvedLookupExpr 0x9f78bb8 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e0a5b0 0x9e0bdb0 0x9e0d020)
      (CallExpr 0x9f78ae8 <col:19, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f78ab0 <col:19, col:25> '<dependent type>' lvalue
          (CXXThisExpr 0x9f78aa0 <col:19> 'basic_istream<_CharT, _Traits> *' this)))
      (CXXOperatorCallExpr 0x9f78b98 <col:37, col:48> 'enum std::_Ios_Iostate'
        (ImplicitCastExpr 0x9f78b88 <<invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9f78b58 <<invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate)' lvalue Function 0x9e0fb20 'operator~' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate)'))
        (ImplicitCastExpr 0x9f78b48 <col:38, col:48> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
          (DeclRefExpr 0x9f78b24 <col:38, col:48> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e113f0 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))))
  (DeclStmt 0x9f78ce0 <line:719:7, col:33>
    0x9f78c50 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0x9f78cc0 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0x9f78c98 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9f78c88 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0x9f78cb0 <col:28> '_Bool' true))")
  (IfStmt 0x9f794e0 <line:720:7, line:740:2>
    <<<NULL>>>
    (DeclRefExpr 0x9f78cf0 <line:720:11> 'class std::basic_istream::sentry' lvalue Var 0x9f78c50 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0x9f794b8 <line:721:2, line:740:2>
      (DeclStmt 0x9f78dc8 <line:722:4, col:47>
        0x9f78d40 "ios_base::iostate __err =
          (ImplicitCastExpr 0x9f78db8 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9f78d94 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e114b0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0x9f791d0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:730:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9f78dd8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9f791b0 </usr/include/c++/4.6/bits/istream.tcc:724:6, line:730:6>
          (DeclStmt 0x9f78ea0 <line:725:8, col:49>
            0x9f78df0 "const int_type __eof =
              (CallExpr 0x9f78e80 <col:31, col:48> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9f78e48 <col:31, col:44> '<dependent type>' lvalue))")
          (DeclStmt 0x9f78f60 <line:726:8, col:46>
            0x9f78ec0 "__streambuf_type *__sb =
              (CallExpr 0x9f78f40 <col:33, col:45> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9f78f08 <col:33, col:39> '<dependent type>' lvalue
                  (CXXThisExpr 0x9f78ef8 <col:33> 'basic_istream<_CharT, _Traits> *' this)))")
          (IfStmt 0x9f79190 <line:727:8, line:729:22>
            <<<NULL>>>
            (BinaryOperator 0x9f790c0 <line:727:12, line:728:60> '<dependent type>' '||'
              (UnaryOperator 0x9f78f88 <line:727:12, col:13> '<dependent type>' prefix '!'
                (DeclRefExpr 0x9f78f70 <col:13> '__streambuf_type *' lvalue Var 0x9f78ec0 '__sb' '__streambuf_type *'))
              (CallExpr 0x9f79098 <line:728:8, col:60> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9f78fc0 <col:8, col:21> '<dependent type>' lvalue)
                (CallExpr 0x9f79060 <col:33, col:52> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9f79010 <col:33, col:39> '<dependent type>' lvalue
                    (DeclRefExpr 0x9f78ff4 <col:33> '__streambuf_type *' lvalue Var 0x9f78ec0 '__sb' '__streambuf_type *'))
                  (DeclRefExpr 0x9f79044 <col:49> 'char_type':'_CharT' lvalue ParmVar 0x9f787b0 '__c' 'char_type':'_CharT'))
                (DeclRefExpr 0x9f79080 <col:55> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x9f78df0 '__eof' 'const int_type':'const typename _Traits::int_type')))
            (CXXOperatorCallExpr 0x9f79168 <line:729:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x9f79158 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9f79140 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9e0fd60 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x9f790d8 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f78d40 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0x9f79130 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x9f7910c <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11390 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0x9f792d0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:735:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9f791f0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9f792b8 </usr/include/c++/4.6/bits/istream.tcc:732:6, line:735:6>
          (CallExpr 0x9f79288 <line:733:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f79210 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9f79200 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9f79264 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11390 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x9f792a8 <line:734:31>))
        <<<NULL>>>)
      (IfStmt 0x9f793c0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:737:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9f792f0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9f793a8 </usr/include/c++/4.6/bits/istream.tcc:737:6, col:45>
          (CallExpr 0x9f79388 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f79310 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9f79300 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9f79364 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11390 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0x9f79498 <line:738:4, line:739:26>
        <<<NULL>>>
        (ImplicitCastExpr 0x9f79408 <line:738:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0x9f793f8 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9f793dc <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f78d40 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0x9f79478 <line:739:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9f79428 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x9f79418 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0x9f7945c <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f78d40 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9f79528 <line:741:7, col:15>
    (UnaryOperator 0x9f79510 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9f79500 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &unget() (CompoundStmt 0x9f7a620 </usr/include/c++/4.6/bits/istream.tcc:748:5, line:777:5>
  (BinaryOperator 0x9f79b58 <line:751:7, col:19> '<dependent type>' '='
    (MemberExpr 0x9f79b20 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0x9f447f0
      (CXXThisExpr 0x9f79b10 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0x9f79b40 <col:19> 'int' 0))
  (CallExpr 0x9f79d20 <line:753:7, col:54> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9f79b80 <col:7, col:13> '<dependent type>' lvalue
      (CXXThisExpr 0x9f79b70 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (CXXOperatorCallExpr 0x9f79cf8 <col:19, col:48> '<dependent type>'
      (UnresolvedLookupExpr 0x9f79cb8 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e0a5b0 0x9e0bdb0 0x9e0d020)
      (CallExpr 0x9f79c00 <col:19, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f79bc8 <col:19, col:25> '<dependent type>' lvalue
          (CXXThisExpr 0x9f79bb8 <col:19> 'basic_istream<_CharT, _Traits> *' this)))
      (CXXOperatorCallExpr 0x9f79c98 <col:37, col:48> 'enum std::_Ios_Iostate'
        (ImplicitCastExpr 0x9f79c88 <<invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9f79c70 <<invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate)' lvalue Function 0x9e0fb20 'operator~' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate)'))
        (ImplicitCastExpr 0x9f79c60 <col:38, col:48> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
          (DeclRefExpr 0x9f79c3c <col:38, col:48> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e113f0 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))))
  (DeclStmt 0x9f79de0 <line:754:7, col:33>
    0x9f79d50 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0x9f79dc0 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0x9f79d98 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9f79d88 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0x9f79db0 <col:28> '_Bool' true))")
  (IfStmt 0x9f7a5c8 <line:755:7, line:775:2>
    <<<NULL>>>
    (DeclRefExpr 0x9f79df0 <line:755:11> 'class std::basic_istream::sentry' lvalue Var 0x9f79d50 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0x9f7a5a0 <line:756:2, line:775:2>
      (DeclStmt 0x9f79ec8 <line:757:4, col:47>
        0x9f79e40 "ios_base::iostate __err =
          (ImplicitCastExpr 0x9f79eb8 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9f79e94 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e114b0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0x9f7a2b8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:765:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9f79ed8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9f7a298 </usr/include/c++/4.6/bits/istream.tcc:759:6, line:765:6>
          (DeclStmt 0x9f79fa0 <line:760:8, col:49>
            0x9f79ef0 "const int_type __eof =
              (CallExpr 0x9f79f80 <col:31, col:48> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9f79f48 <col:31, col:44> '<dependent type>' lvalue))")
          (DeclStmt 0x9f7a060 <line:761:8, col:46>
            0x9f79fc0 "__streambuf_type *__sb =
              (CallExpr 0x9f7a040 <col:33, col:45> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9f7a008 <col:33, col:39> '<dependent type>' lvalue
                  (CXXThisExpr 0x9f79ff8 <col:33> 'basic_istream<_CharT, _Traits> *' this)))")
          (IfStmt 0x9f7a278 <line:762:8, line:764:22>
            <<<NULL>>>
            (BinaryOperator 0x9f7a1a8 <line:762:12, line:763:55> '<dependent type>' '||'
              (UnaryOperator 0x9f7a088 <line:762:12, col:13> '<dependent type>' prefix '!'
                (DeclRefExpr 0x9f7a070 <col:13> '__streambuf_type *' lvalue Var 0x9f79fc0 '__sb' '__streambuf_type *'))
              (CallExpr 0x9f7a180 <line:763:8, col:55> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9f7a0c0 <col:8, col:21> '<dependent type>' lvalue)
                (CallExpr 0x9f7a148 <col:33, col:47> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9f7a110 <col:33, col:39> '<dependent type>' lvalue
                    (DeclRefExpr 0x9f7a0f4 <col:33> '__streambuf_type *' lvalue Var 0x9f79fc0 '__sb' '__streambuf_type *')))
                (DeclRefExpr 0x9f7a164 <col:50> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x9f79ef0 '__eof' 'const int_type':'const typename _Traits::int_type')))
            (CXXOperatorCallExpr 0x9f7a250 <line:764:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x9f7a240 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9f7a228 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9e0fd60 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x9f7a1c0 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f79e40 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0x9f7a218 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x9f7a1f4 <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11390 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0x9f7a3b8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:770:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9f7a2d8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9f7a3a0 </usr/include/c++/4.6/bits/istream.tcc:767:6, line:770:6>
          (CallExpr 0x9f7a370 <line:768:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f7a2f8 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9f7a2e8 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9f7a34c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11390 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x9f7a390 <line:769:31>))
        <<<NULL>>>)
      (IfStmt 0x9f7a4a8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:772:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9f7a3d8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9f7a490 </usr/include/c++/4.6/bits/istream.tcc:772:6, col:45>
          (CallExpr 0x9f7a470 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f7a3f8 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9f7a3e8 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9f7a44c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11390 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0x9f7a580 <line:773:4, line:774:26>
        <<<NULL>>>
        (ImplicitCastExpr 0x9f7a4f0 <line:773:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0x9f7a4e0 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9f7a4c4 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f79e40 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0x9f7a560 <line:774:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9f7a510 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x9f7a500 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0x9f7a544 <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f79e40 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9f7a610 <line:776:7, col:15>
    (UnaryOperator 0x9f7a5f8 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9f7a5e8 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    int sync() (CompoundStmt 0x9f7b2d8 </usr/include/c++/4.6/bits/istream.tcc:783:5, line:813:5>
  (DeclStmt 0x9f7aa48 <line:786:7, col:21>
    0x9f7a9e0 "int __ret =
      (UnaryOperator 0x9f7aa30 <col:19, col:20> 'int' prefix '-'
        (IntegerLiteral 0x9f7aa18 <col:20> 'int' 1))")
  (DeclStmt 0x9f7aaf0 <line:787:7, col:33>
    0x9f7aa60 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0x9f7aad0 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0x9f7aaa8 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9f7aa98 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0x9f7aac0 <col:28> '_Bool' true))")
  (IfStmt 0x9f7b280 <line:788:7, line:811:2>
    <<<NULL>>>
    (DeclRefExpr 0x9f7ab00 <line:788:11> 'class std::basic_istream::sentry' lvalue Var 0x9f7aa60 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0x9f7b258 <line:789:2, line:811:2>
      (DeclStmt 0x9f7abd8 <line:790:4, col:47>
        0x9f7ab50 "ios_base::iostate __err =
          (ImplicitCastExpr 0x9f7abc8 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9f7aba4 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e114b0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0x9f7af70 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:801:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9f7abe8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9f7af58 </usr/include/c++/4.6/bits/istream.tcc:792:6, line:801:6>
          (DeclStmt 0x9f7acb0 <line:793:8, col:46>
            0x9f7ac10 "__streambuf_type *__sb =
              (CallExpr 0x9f7ac90 <col:33, col:45> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9f7ac58 <col:33, col:39> '<dependent type>' lvalue
                  (CXXThisExpr 0x9f7ac48 <col:33> 'basic_istream<_CharT, _Traits> *' this)))")
          (IfStmt 0x9f7af38 <line:794:8, line:800:3>
            <<<NULL>>>
            (DeclRefExpr 0x9f7acc0 <line:794:12> '__streambuf_type *' lvalue Var 0x9f7ac10 '__sb' '__streambuf_type *')
            (CompoundStmt 0x9f7af20 <line:795:3, line:800:3>
              (IfStmt 0x9f7af00 <line:796:5, line:799:15>
                <<<NULL>>>
                (CXXOperatorCallExpr 0x9f7add8 <line:796:9, col:29> '<dependent type>'
                  (UnresolvedLookupExpr 0x9f7ad78 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30 0x9d5e270 0x9d5ece0 0x9d5f520 0x9d5fa90 0x9e73300)
                  (CallExpr 0x9f7ad28 <col:9, col:23> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9f7acf0 <col:9, col:15> '<dependent type>' lvalue
                      (DeclRefExpr 0x9f7acd8 <col:9> '__streambuf_type *' lvalue Var 0x9f7ac10 '__sb' '__streambuf_type *')))
                  (UnaryOperator 0x9f7ad60 <col:28, col:29> 'int' prefix '-'
                    (IntegerLiteral 0x9f7ad48 <col:29> 'int' 1)))
                (CXXOperatorCallExpr 0x9f7ae90 <line:797:7, col:26> 'const enum std::_Ios_Iostate' lvalue
                  (ImplicitCastExpr 0x9f7ae80 <col:13, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                    (DeclRefExpr 0x9f7ae68 <col:13, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9e0fd60 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
                  (DeclRefExpr 0x9f7adfc <col:7> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f7ab50 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
                  (ImplicitCastExpr 0x9f7ae58 <col:16, col:26> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                    (DeclRefExpr 0x9f7ae34 <col:16, col:26> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11390 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
                (BinaryOperator 0x9f7aee8 <line:799:7, col:15> 'int' lvalue '='
                  (DeclRefExpr 0x9f7aeb4 <col:7> 'int' lvalue Var 0x9f7a9e0 '__ret' 'int')
                  (IntegerLiteral 0x9f7aed0 <col:15> 'int' 0))))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0x9f7b070 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:806:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9f7af90 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9f7b058 </usr/include/c++/4.6/bits/istream.tcc:803:6, line:806:6>
          (CallExpr 0x9f7b028 <line:804:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f7afb0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9f7afa0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9f7b004 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11390 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x9f7b048 <line:805:31>))
        <<<NULL>>>)
      (IfStmt 0x9f7b160 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:808:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9f7b090 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9f7b148 </usr/include/c++/4.6/bits/istream.tcc:808:6, col:45>
          (CallExpr 0x9f7b128 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f7b0b0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9f7b0a0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9f7b104 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11390 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0x9f7b238 <line:809:4, line:810:26>
        <<<NULL>>>
        (ImplicitCastExpr 0x9f7b1a8 <line:809:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0x9f7b198 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9f7b17c <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f7ab50 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0x9f7b218 <line:810:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9f7b1c8 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x9f7b1b8 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0x9f7b1fc <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f7ab50 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9f7b2c8 <line:812:7, col:14>
    (ImplicitCastExpr 0x9f7b2b8 <col:14> 'int' <LValueToRValue>
      (DeclRefExpr 0x9f7b29c <col:14> 'int' lvalue Var 0x9f7a9e0 '__ret' 'int'))))


    typename basic_istream<_CharT, _Traits>::pos_type tellg() (CompoundStmt 0x9f7bf58 </usr/include/c++/4.6/bits/istream.tcc:819:5, line:841:5>
  (DeclStmt 0x9f7b9b0 <line:822:7, col:36>
    0x9f7b920 "pos_type __ret =
      (CXXUnresolvedConstructExpr 0x9f7b990 <col:24, col:35> 'pos_type':'typename _Traits::pos_type'
        (UnaryOperator 0x9f7b978 <col:33, col:34> 'int' prefix '-'
          (IntegerLiteral 0x9f7b960 <col:34> 'int' 1)))")
  (DeclStmt 0x9f7ba60 <line:823:7, col:33>
    0x9f7b9d0 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0x9f7ba40 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0x9f7ba18 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9f7ba08 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0x9f7ba30 <col:28> '_Bool' true))")
  (IfStmt 0x9f7bf10 <line:824:7, line:839:2>
    <<<NULL>>>
    (DeclRefExpr 0x9f7ba70 <line:824:11> 'class std::basic_istream::sentry' lvalue Var 0x9f7b9d0 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0x9f7bef0 <line:825:2, line:839:2>
      (IfStmt 0x9f7bce0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:831:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9f7ba88 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9f7bcc8 </usr/include/c++/4.6/bits/istream.tcc:827:6, line:831:6>
          (IfStmt 0x9f7bca8 <line:828:8, line:830:21>
            <<<NULL>>>
            (UnaryOperator 0x9f7bb00 <line:828:12, col:24> '<dependent type>' prefix '!'
              (CallExpr 0x9f7bae0 <col:13, col:24> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9f7baa8 <col:13, col:19> '<dependent type>' lvalue
                  (CXXThisExpr 0x9f7ba98 <col:13> 'basic_istream<_CharT, _Traits> *' this))))
            (BinaryOperator 0x9f7bc90 <line:829:3, line:830:21> '<dependent type>' '='
              (DeclRefExpr 0x9f7bb14 <line:829:3> 'pos_type':'typename _Traits::pos_type' lvalue Var 0x9f7b920 '__ret' 'pos_type':'typename _Traits::pos_type')
              (CallExpr 0x9f7bc68 <col:11, line:830:21> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9f7bb98 <line:829:11, col:26> '<dependent type>' lvalue
                  (CallExpr 0x9f7bb78 <col:11, col:23> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9f7bb40 <col:11, col:17> '<dependent type>' lvalue
                      (CXXThisExpr 0x9f7bb30 <col:11> 'basic_istream<_CharT, _Traits> *' this))))
                (IntegerLiteral 0x9f7bbd0 <col:37> 'int' 0)
                (DeclRefExpr 0x9f7bc04 <col:40, col:50> 'const seekdir':'const enum std::_Ios_Seekdir' lvalue Var 0x9e11850 'cur' 'const seekdir':'const enum std::_Ios_Seekdir')
                (DeclRefExpr 0x9f7bc44 <line:830:9, col:19> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9e11680 'in' 'const openmode':'const enum std::_Ios_Openmode')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0x9f7bde0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:836:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9f7bd00 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9f7bdc8 </usr/include/c++/4.6/bits/istream.tcc:833:6, line:836:6>
          (CallExpr 0x9f7bd98 <line:834:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f7bd20 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9f7bd10 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9f7bd74 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11390 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x9f7bdb8 <line:835:31>))
        <<<NULL>>>)
      (IfStmt 0x9f7bed0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:838:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9f7be00 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9f7beb8 </usr/include/c++/4.6/bits/istream.tcc:838:6, col:45>
          (CallExpr 0x9f7be98 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f7be20 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9f7be10 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9f7be74 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11390 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9f7bf48 <line:840:7, col:14>
    (DeclRefExpr 0x9f7bf2c <col:14> 'pos_type':'typename _Traits::pos_type' lvalue Var 0x9f7b920 '__ret' 'pos_type':'typename _Traits::pos_type')))


    basic_istream<_CharT, _Traits> &seekg(pos_type __pos) (CompoundStmt 0x9f7d058 </usr/include/c++/4.6/bits/istream.tcc:847:5, line:880:5>
  (CallExpr 0x9f7c6f8 <line:851:7, col:54> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9f7c558 <col:7, col:13> '<dependent type>' lvalue
      (CXXThisExpr 0x9f7c548 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (CXXOperatorCallExpr 0x9f7c6d0 <col:19, col:48> '<dependent type>'
      (UnresolvedLookupExpr 0x9f7c690 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e0a5b0 0x9e0bdb0 0x9e0d020)
      (CallExpr 0x9f7c5d8 <col:19, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f7c5a0 <col:19, col:25> '<dependent type>' lvalue
          (CXXThisExpr 0x9f7c590 <col:19> 'basic_istream<_CharT, _Traits> *' this)))
      (CXXOperatorCallExpr 0x9f7c670 <col:37, col:48> 'enum std::_Ios_Iostate'
        (ImplicitCastExpr 0x9f7c660 <<invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9f7c648 <<invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate)' lvalue Function 0x9e0fb20 'operator~' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate)'))
        (ImplicitCastExpr 0x9f7c638 <col:38, col:48> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
          (DeclRefExpr 0x9f7c614 <col:38, col:48> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e113f0 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))))
  (DeclStmt 0x9f7c7b0 <line:852:7, col:33>
    0x9f7c720 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0x9f7c790 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0x9f7c768 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9f7c758 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0x9f7c780 <col:28> '_Bool' true))")
  (IfStmt 0x9f7d000 <line:853:7, line:878:2>
    <<<NULL>>>
    (DeclRefExpr 0x9f7c7c0 <line:853:11> 'class std::basic_istream::sentry' lvalue Var 0x9f7c720 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0x9f7cfd8 <line:854:2, line:878:2>
      (DeclStmt 0x9f7c898 <line:855:4, col:47>
        0x9f7c810 "ios_base::iostate __err =
          (ImplicitCastExpr 0x9f7c888 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9f7c864 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e114b0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0x9f7ccf0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:868:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9f7c8a8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9f7ccd8 </usr/include/c++/4.6/bits/istream.tcc:857:6, line:868:6>
          (IfStmt 0x9f7ccb8 <line:858:8, line:867:3>
            <<<NULL>>>
            (UnaryOperator 0x9f7c920 <line:858:12, col:24> '<dependent type>' prefix '!'
              (CallExpr 0x9f7c900 <col:13, col:24> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9f7c8c8 <col:13, col:19> '<dependent type>' lvalue
                  (CXXThisExpr 0x9f7c8b8 <col:13> 'basic_istream<_CharT, _Traits> *' this))))
            (CompoundStmt 0x9f7cca0 <line:859:3, line:867:3>
              (DeclStmt 0x9f7ca98 <line:861:5, line:862:23>
                0x9f7c940 "const pos_type __p =
                  (CallExpr 0x9f7ca70 <line:861:26, line:862:22> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9f7c9e0 <line:861:26, col:41> '<dependent type>' lvalue
                      (CallExpr 0x9f7c9c0 <col:26, col:38> '<dependent type>'
                        (CXXDependentScopeMemberExpr 0x9f7c988 <col:26, col:32> '<dependent type>' lvalue
                          (CXXThisExpr 0x9f7c978 <col:26> 'basic_istream<_CharT, _Traits> *' this))))
                    (DeclRefExpr 0x9f7ca14 <col:52> 'pos_type':'typename _Traits::pos_type' lvalue ParmVar 0x9f7c300 '__pos' 'pos_type':'typename _Traits::pos_type')
                    (DeclRefExpr 0x9f7ca4c <line:862:10, col:20> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9e11680 'in' 'const openmode':'const enum std::_Ios_Openmode'))")
              (IfStmt 0x9f7cc80 <line:865:5, line:866:26>
                <<<NULL>>>
                (CXXOperatorCallExpr 0x9f7cba0 <line:865:9, col:37> '<dependent type>'
                  (UnresolvedLookupExpr 0x9f7cb40 <col:13, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30 0x9d5e270 0x9d5ece0 0x9d5f520 0x9d5fa90 0x9e73300)
                  (DeclRefExpr 0x9f7caa8 <col:9> 'const pos_type':'const typename _Traits::pos_type' lvalue Var 0x9f7c940 '__p' 'const pos_type':'const typename _Traits::pos_type')
                  (CXXUnresolvedConstructExpr 0x9f7cb20 <col:16, col:37> 'pos_type':'typename _Traits::pos_type'
                    (CXXUnresolvedConstructExpr 0x9f7cb00 <col:25, col:36> 'off_type':'typename _Traits::off_type'
                      (UnaryOperator 0x9f7cae8 <col:34, col:35> 'int' prefix '-'
                        (IntegerLiteral 0x9f7cad0 <col:35> 'int' 1)))))
                (CXXOperatorCallExpr 0x9f7cc58 <line:866:7, col:26> 'const enum std::_Ios_Iostate' lvalue
                  (ImplicitCastExpr 0x9f7cc48 <col:13, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                    (DeclRefExpr 0x9f7cc30 <col:13, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9e0fd60 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
                  (DeclRefExpr 0x9f7cbc4 <col:7> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f7c810 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
                  (ImplicitCastExpr 0x9f7cc20 <col:16, col:26> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                    (DeclRefExpr 0x9f7cbfc <col:16, col:26> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11450 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
                <<<NULL>>>))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0x9f7cdf0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:873:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9f7cd10 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9f7cdd8 </usr/include/c++/4.6/bits/istream.tcc:870:6, line:873:6>
          (CallExpr 0x9f7cda8 <line:871:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f7cd30 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9f7cd20 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9f7cd84 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11390 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x9f7cdc8 <line:872:31>))
        <<<NULL>>>)
      (IfStmt 0x9f7cee0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:875:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9f7ce10 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9f7cec8 </usr/include/c++/4.6/bits/istream.tcc:875:6, col:45>
          (CallExpr 0x9f7cea8 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f7ce30 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9f7ce20 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9f7ce84 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11390 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0x9f7cfb8 <line:876:4, line:877:26>
        <<<NULL>>>
        (ImplicitCastExpr 0x9f7cf28 <line:876:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0x9f7cf18 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9f7cefc <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f7c810 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0x9f7cf98 <line:877:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9f7cf48 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x9f7cf38 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0x9f7cf7c <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f7c810 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9f7d048 <line:879:7, col:15>
    (UnaryOperator 0x9f7d030 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9f7d020 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &seekg(off_type __off, ios_base::seekdir __dir) (CompoundStmt 0x9f80248 </usr/include/c++/4.6/bits/istream.tcc:886:5, line:919:5>
  (CallExpr 0x9f7d868 <line:890:7, col:54> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9f7d6c8 <col:7, col:13> '<dependent type>' lvalue
      (CXXThisExpr 0x9f7d6b8 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (CXXOperatorCallExpr 0x9f7d840 <col:19, col:48> '<dependent type>'
      (UnresolvedLookupExpr 0x9f7d800 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e0a5b0 0x9e0bdb0 0x9e0d020)
      (CallExpr 0x9f7d748 <col:19, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f7d710 <col:19, col:25> '<dependent type>' lvalue
          (CXXThisExpr 0x9f7d700 <col:19> 'basic_istream<_CharT, _Traits> *' this)))
      (CXXOperatorCallExpr 0x9f7d7e0 <col:37, col:48> 'enum std::_Ios_Iostate'
        (ImplicitCastExpr 0x9f7d7d0 <<invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9f7d7b8 <<invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate)' lvalue Function 0x9e0fb20 'operator~' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate)'))
        (ImplicitCastExpr 0x9f7d7a8 <col:38, col:48> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
          (DeclRefExpr 0x9f7d784 <col:38, col:48> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e113f0 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))))
  (DeclStmt 0x9f7d920 <line:891:7, col:33>
    0x9f7d890 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0x9f7d900 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0x9f7d8d8 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9f7d8c8 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0x9f7d8f0 <col:28> '_Bool' true))")
  (IfStmt 0x9f801f0 <line:892:7, line:917:2>
    <<<NULL>>>
    (DeclRefExpr 0x9f7d930 <line:892:11> 'class std::basic_istream::sentry' lvalue Var 0x9f7d890 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0x9f801c8 <line:893:2, line:917:2>
      (DeclStmt 0x9f7da08 <line:894:4, col:47>
        0x9f7d980 "ios_base::iostate __err =
          (ImplicitCastExpr 0x9f7d9f8 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9f7d9d4 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e114b0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0x9f7fee0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:907:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9f7da18 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9f7fec8 </usr/include/c++/4.6/bits/istream.tcc:896:6, line:907:6>
          (IfStmt 0x9f7fea8 <line:897:8, line:906:3>
            <<<NULL>>>
            (UnaryOperator 0x9f7da90 <line:897:12, col:24> '<dependent type>' prefix '!'
              (CallExpr 0x9f7da70 <col:13, col:24> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9f7da38 <col:13, col:19> '<dependent type>' lvalue
                  (CXXThisExpr 0x9f7da28 <col:13> 'basic_istream<_CharT, _Traits> *' this))))
            (CompoundStmt 0x9f7fe90 <line:898:3, line:906:3>
              (DeclStmt 0x9f7dc20 <line:900:5, line:901:23>
                0x9f7dab0 "const pos_type __p =
                  (CallExpr 0x9f7dbf8 <line:900:26, line:901:22> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9f7db50 <line:900:26, col:41> '<dependent type>' lvalue
                      (CallExpr 0x9f7db30 <col:26, col:38> '<dependent type>'
                        (CXXDependentScopeMemberExpr 0x9f7daf8 <col:26, col:32> '<dependent type>' lvalue
                          (CXXThisExpr 0x9f7dae8 <col:26> 'basic_istream<_CharT, _Traits> *' this))))
                    (DeclRefExpr 0x9f7db84 <col:52> 'off_type':'typename _Traits::off_type' lvalue ParmVar 0x9f7d400 '__off' 'off_type':'typename _Traits::off_type')
                    (DeclRefExpr 0x9f7db9c <col:59> 'class ios_base::seekdir':'enum std::_Ios_Seekdir' lvalue ParmVar 0x9f7d470 '__dir' 'class ios_base::seekdir':'enum std::_Ios_Seekdir')
                    (DeclRefExpr 0x9f7dbd4 <line:901:10, col:20> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9e11680 'in' 'const openmode':'const enum std::_Ios_Openmode'))")
              (IfStmt 0x9f7fe70 <line:904:5, line:905:26>
                <<<NULL>>>
                (CXXOperatorCallExpr 0x9f7dd28 <line:904:9, col:37> '<dependent type>'
                  (UnresolvedLookupExpr 0x9f7dcc8 <col:13, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30 0x9d5e270 0x9d5ece0 0x9d5f520 0x9d5fa90 0x9e73300)
                  (DeclRefExpr 0x9f7dc30 <col:9> 'const pos_type':'const typename _Traits::pos_type' lvalue Var 0x9f7dab0 '__p' 'const pos_type':'const typename _Traits::pos_type')
                  (CXXUnresolvedConstructExpr 0x9f7dca8 <col:16, col:37> 'pos_type':'typename _Traits::pos_type'
                    (CXXUnresolvedConstructExpr 0x9f7dc88 <col:25, col:36> 'off_type':'typename _Traits::off_type'
                      (UnaryOperator 0x9f7dc70 <col:34, col:35> 'int' prefix '-'
                        (IntegerLiteral 0x9f7dc58 <col:35> 'int' 1)))))
                (CXXOperatorCallExpr 0x9f7fe48 <line:905:7, col:26> 'const enum std::_Ios_Iostate' lvalue
                  (ImplicitCastExpr 0x9f7fe38 <col:13, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                    (DeclRefExpr 0x9f7fe20 <col:13, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9e0fd60 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
                  (DeclRefExpr 0x9f7dd4c <col:7> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f7d980 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
                  (ImplicitCastExpr 0x9f7dda8 <col:16, col:26> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                    (DeclRefExpr 0x9f7dd84 <col:16, col:26> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11450 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
                <<<NULL>>>))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0x9f7ffe0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:912:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9f7ff00 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9f7ffc8 </usr/include/c++/4.6/bits/istream.tcc:909:6, line:912:6>
          (CallExpr 0x9f7ff98 <line:910:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f7ff20 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9f7ff10 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9f7ff74 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11390 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x9f7ffb8 <line:911:31>))
        <<<NULL>>>)
      (IfStmt 0x9f800d0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:914:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9f80000 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9f800b8 </usr/include/c++/4.6/bits/istream.tcc:914:6, col:45>
          (CallExpr 0x9f80098 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f80020 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9f80010 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9f80074 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11390 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0x9f801a8 <line:915:4, line:916:26>
        <<<NULL>>>
        (ImplicitCastExpr 0x9f80118 <line:915:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0x9f80108 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9f800ec <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f7d980 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0x9f80188 <line:916:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9f80138 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x9f80128 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0x9f8016c <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f7d980 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9f80238 <line:918:7, col:15>
    (UnaryOperator 0x9f80220 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9f80210 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> basic_istream<wchar_t, std::char_traits<wchar_t> > &operator>>(basic_istream<wchar_t, std::char_traits<wchar_t> > &__in, wchar_t &__c)template <typename _CharT = char, typename _Traits = std::char_traits<char>> basic_istream<char, std::char_traits<char> > &operator>>(basic_istream<char, std::char_traits<char> > &__in, char &__c)template <typename _CharT, typename _Traits> basic_istream<_CharT, _Traits> &operator>>(basic_istream<_CharT, _Traits> &__in, _CharT &__c) (CompoundStmt 0x9f81330 </usr/include/c++/4.6/bits/istream.tcc:925:5, line:952:5>
  (DeclStmt 0x9f80860 <line:926:7, col:61>
    0x9f80830 "typedef basic_istream<_CharT, _Traits> __istream_type")
  (DeclStmt 0x9f80920 <line:927:7, col:67>
    0x9f808f0 "typedef typename __istream_type::int_type __int_type")
  (DeclStmt 0x9f80a10 <line:929:7, col:58>
    0x9f80990 "typename __istream_type::sentry __cerb =
      (ParenListExpr 0x9f809f0 <col:45, col:57> 'typename __istream_type::sentry'
        (DeclRefExpr 0x9f809c4 <col:46> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9f80530 '__in' 'basic_istream<_CharT, _Traits> &')
        (CXXBoolLiteralExpr 0x9f809e0 <col:52> '_Bool' false))")
  (IfStmt 0x9f812e8 <line:930:7, line:950:2>
    <<<NULL>>>
    (DeclRefExpr 0x9f80a20 <line:930:11> 'typename __istream_type::sentry' lvalue Var 0x9f80990 '__cerb' 'typename __istream_type::sentry')
    (CompoundStmt 0x9f812c0 <line:931:2, line:950:2>
      (DeclStmt 0x9f80af8 <line:932:4, col:47>
        0x9f80a70 "ios_base::iostate __err =
          (ImplicitCastExpr 0x9f80ae8 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9f80ac4 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e114b0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0x9f80fc0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:940:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9f80b08 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9f80fa8 </usr/include/c++/4.6/bits/istream.tcc:934:6, line:940:6>
          (DeclStmt 0x9f80c40 <line:935:8, col:54>
            0x9f80b40 "const __int_type __cb =
              (CallExpr 0x9f80c20 <col:32, col:53> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9f80be8 <col:32, col:46> '<dependent type>' lvalue
                  (CallExpr 0x9f80bc8 <col:32, col:43> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9f80b90 <col:32, col:37> '<dependent type>' lvalue
                      (DeclRefExpr 0x9f80b74 <col:32> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9f80530 '__in' 'basic_istream<_CharT, _Traits> &')))))")
          (IfStmt 0x9f80f88 <line:936:8, line:939:49>
            <<<NULL>>>
            (UnaryOperator 0x9f80d48 <line:936:12, col:54> '<dependent type>' prefix '!'
              (CallExpr 0x9f80d20 <col:13, col:54> '<dependent type>'
                (DependentScopeDeclRefExpr 0x9f80c78 <col:13, col:22> '<dependent type>' lvalue)
                (DeclRefExpr 0x9f80c9c <col:34> 'const __int_type':'const typename __istream_type::int_type' lvalue Var 0x9f80b40 '__cb' 'const __int_type':'const typename __istream_type::int_type')
                (CallExpr 0x9f80d00 <col:40, col:53> '<dependent type>'
                  (DependentScopeDeclRefExpr 0x9f80cd8 <col:40, col:49> '<dependent type>' lvalue))))
            (BinaryOperator 0x9f80df8 <line:937:3, col:35> '<dependent type>' '='
              (DeclRefExpr 0x9f80d5c <col:3> '_CharT' lvalue ParmVar 0x9f805a0 '__c' '_CharT &')
              (CallExpr 0x9f80dd8 <col:9, col:35> '<dependent type>'
                (DependentScopeDeclRefExpr 0x9f80d98 <col:9, col:18> '<dependent type>' lvalue)
                (DeclRefExpr 0x9f80dbc <col:31> 'const __int_type':'const typename __istream_type::int_type' lvalue Var 0x9f80b40 '__cb' 'const __int_type':'const typename __istream_type::int_type')))
            (CXXOperatorCallExpr 0x9f80f60 <line:939:3, col:49> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x9f80f50 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9f80f38 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9e0fd60 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x9f80e10 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f80a70 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ParenExpr 0x9f80f20 <col:12, col:49> 'enum std::_Ios_Iostate'
                (CXXOperatorCallExpr 0x9f80ef8 <col:13, col:42> 'enum std::_Ios_Iostate'
                  (ImplicitCastExpr 0x9f80ee8 <col:30, <invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                    (DeclRefExpr 0x9f80ed0 <col:30, <invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)' lvalue Function 0x9e0f6e0 'operator|' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)'))
                  (ImplicitCastExpr 0x9f80eb0 <col:13, col:23> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                    (DeclRefExpr 0x9f80e50 <col:13, col:23> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e113f0 'eofbit' 'const iostate':'const enum std::_Ios_Iostate'))
                  (ImplicitCastExpr 0x9f80ec0 <col:32, col:42> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                    (DeclRefExpr 0x9f80e8c <col:32, col:42> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11450 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))))))
        <<<NULL>>>)
      (IfStmt 0x9f810c8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:945:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9f80fe0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9f810b0 </usr/include/c++/4.6/bits/istream.tcc:942:6, line:945:6>
          (CallExpr 0x9f81080 <line:943:8, col:41> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f81008 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0x9f80ff0 <col:8> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9f80530 '__in' 'basic_istream<_CharT, _Traits> &'))
            (DeclRefExpr 0x9f8105c <col:25, col:35> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11390 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x9f810a0 <line:944:31>))
        <<<NULL>>>)
      (IfStmt 0x9f811c0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:947:44>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9f810e8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9f811a8 </usr/include/c++/4.6/bits/istream.tcc:947:6, col:44>
          (CallExpr 0x9f81188 <col:8, col:41> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f81110 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0x9f810f8 <col:8> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9f80530 '__in' 'basic_istream<_CharT, _Traits> &'))
            (DeclRefExpr 0x9f81164 <col:25, col:35> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11390 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0x9f812a0 <line:948:4, line:949:25>
        <<<NULL>>>
        (ImplicitCastExpr 0x9f81208 <line:948:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0x9f811f8 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9f811dc <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f80a70 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0x9f81280 <line:949:6, col:25> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9f81230 <col:6, col:11> '<dependent type>' lvalue
            (DeclRefExpr 0x9f81214 <col:6> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9f80530 '__in' 'basic_istream<_CharT, _Traits> &'))
          (DeclRefExpr 0x9f81264 <col:20> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f80a70 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9f81320 <line:951:7, col:14>
    (DeclRefExpr 0x9f81304 <col:14> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9f80530 '__in' 'basic_istream<_CharT, _Traits> &')))

;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> basic_istream<wchar_t, std::char_traits<wchar_t> > &operator>>(basic_istream<wchar_t, std::char_traits<wchar_t> > &__in, wchar_t *__s)template <typename _CharT = char, typename _Traits = std::char_traits<char>> basic_istream<char> &operator>>(basic_istream<char> &__in, char *__s)template <typename _CharT, typename _Traits> basic_istream<_CharT, _Traits> &operator>>(basic_istream<_CharT, _Traits> &__in, _CharT *__s) (CompoundStmt 0x9f83158 </usr/include/c++/4.6/bits/istream.tcc:957:5, line:1012:5>
  (DeclStmt 0x9f81930 <line:958:7, col:61>
    0x9f81900 "typedef basic_istream<_CharT, _Traits> __istream_type")
  (DeclStmt 0x9f81a80 <line:959:7, col:73>
    0x9f81a50 "typedef basic_streambuf<_CharT, _Traits> __streambuf_type")
  (DeclStmt 0x9f81b30 <line:960:7, col:51>
    0x9f81b00 "typedef typename _Traits::int_type int_type")
  (DeclStmt 0x9f81b80 <line:961:7, col:35>
    0x9f81b50 "typedef _CharT char_type")
  (DeclStmt 0x9f81c70 <line:962:7, col:44>
    0x9f81c40 "typedef ctype<_CharT> __ctype_type")
  (DeclStmt 0x9f81ce0 <line:964:7, col:33>
    0x9f81c90 "streamsize __extracted =
      (IntegerLiteral 0x9f81cc8 <col:32> 'int' 0)")
  (DeclStmt 0x9f81da8 <line:965:7, col:50>
    0x9f81d20 "ios_base::iostate __err =
      (ImplicitCastExpr 0x9f81d98 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9f81d74 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e114b0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (DeclStmt 0x9f81ec0 <line:966:7, col:58>
    0x9f81e40 "typename __istream_type::sentry __cerb =
      (ParenListExpr 0x9f81ea0 <col:45, col:57> 'typename __istream_type::sentry'
        (DeclRefExpr 0x9f81e74 <col:46> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9f81620 '__in' 'basic_istream<_CharT, _Traits> &')
        (CXXBoolLiteralExpr 0x9f81e90 <col:52> '_Bool' false))")
  (IfStmt 0x9f82f08 <line:967:7, line:1006:2>
    <<<NULL>>>
    (DeclRefExpr 0x9f81ed0 <line:967:11> 'typename __istream_type::sentry' lvalue Var 0x9f81e40 '__cerb' 'typename __istream_type::sentry')
    (CompoundStmt 0x9f82ee8 <line:968:2, line:1006:2>
      (IfStmt 0x9f82cc8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:998:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9f81ee8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9f82c90 </usr/include/c++/4.6/bits/istream.tcc:970:6, line:998:6>
          (DeclStmt 0x9f81fa8 <line:972:8, col:39>
            0x9f81f00 "streamsize __num =
              (CallExpr 0x9f81f88 <col:27, col:38> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9f81f50 <col:27, col:32> '<dependent type>' lvalue
                  (DeclRefExpr 0x9f81f34 <col:27> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9f81620 '__in' 'basic_istream<_CharT, _Traits> &')))")
          (IfStmt 0x9f820f8 <line:973:8, line:974:52>
            <<<NULL>>>
            (BinaryOperator 0x9f81ff8 <line:973:12, col:21> '_Bool' '<='
              (ImplicitCastExpr 0x9f81fe8 <col:12> 'streamsize':'int' <LValueToRValue>
                (DeclRefExpr 0x9f81fb8 <col:12> 'streamsize':'int' lvalue Var 0x9f81f00 '__num' 'streamsize':'int'))
              (IntegerLiteral 0x9f81fd0 <col:21> 'int' 0))
            (BinaryOperator 0x9f820e0 <line:974:3, col:52> 'streamsize':'int' lvalue '='
              (DeclRefExpr 0x9f82010 <col:3> 'streamsize':'int' lvalue Var 0x9f81f00 '__num' 'streamsize':'int')
              (ImplicitCastExpr 0x9f820d0 <col:11, col:52> 'int':'int' <LValueToRValue>
                (DeclRefExpr 0x9f820b0 <col:11, col:52> 'const int':'const int' lvalue Var 0x9d4cfe0 '__max' 'const int':'const int')))
            <<<NULL>>>)
          (DeclStmt 0x9f82298 <line:976:8, col:73>
            0x9f82160 "const __ctype_type &__ct =
              (CallExpr 0x9f82278 <col:35, col:72> '<dependent type>'
                (UnresolvedLookupExpr 0x9f821a0 <col:35, col:57> '<dependent type>' lvalue (ADL) = '1' 0x9e01120)
                (CallExpr 0x9f82258 <col:59, col:71> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9f82220 <col:59, col:64> '<dependent type>' lvalue
                    (DeclRefExpr 0x9f82208 <col:59> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9f81620 '__in' 'basic_istream<_CharT, _Traits> &'))))")
          (DeclStmt 0x9f82370 <line:978:8, col:45>
            0x9f822d0 "const int_type __eof =
              (CallExpr 0x9f82350 <col:31, col:44> '<dependent type>'
                (DependentScopeDeclRefExpr 0x9f82328 <col:31, col:40> '<dependent type>' lvalue))")
          (DeclStmt 0x9f82468 <line:979:8, col:45>
            0x9f823c0 "__streambuf_type *__sb =
              (CallExpr 0x9f82448 <col:33, col:44> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9f82410 <col:33, col:38> '<dependent type>' lvalue
                  (DeclRefExpr 0x9f823f4 <col:33> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9f81620 '__in' 'basic_istream<_CharT, _Traits> &')))")
          (DeclStmt 0x9f82528 <line:980:8, col:36>
            0x9f82480 "int_type __c =
              (CallExpr 0x9f82508 <col:23, col:35> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9f824d0 <col:23, col:29> '<dependent type>' lvalue
                  (DeclRefExpr 0x9f824b4 <col:23> '__streambuf_type *' lvalue Var 0x9f823c0 '__sb' '__streambuf_type *')))")
          (WhileStmt 0x9f829f0 <line:982:8, line:990:3>
            <<<NULL>>>
            (BinaryOperator 0x9f827f0 <line:982:15, line:985:32> '<dependent type>' '&&'
              (BinaryOperator 0x9f82688 <line:982:15, line:983:43> '<dependent type>' '&&'
                (BinaryOperator 0x9f825b8 <line:982:15, col:37> '_Bool' '<'
                  (ImplicitCastExpr 0x9f825a8 <col:15> 'streamsize':'int' <LValueToRValue>
                    (DeclRefExpr 0x9f82538 <col:15> 'streamsize':'int' lvalue Var 0x9f81c90 '__extracted' 'streamsize':'int'))
                  (BinaryOperator 0x9f82590 <col:29, col:37> 'int' '-'
                    (ImplicitCastExpr 0x9f82580 <col:29> 'streamsize':'int' <LValueToRValue>
                      (DeclRefExpr 0x9f82550 <col:29> 'streamsize':'int' lvalue Var 0x9f81f00 '__num' 'streamsize':'int'))
                    (IntegerLiteral 0x9f82568 <col:37> 'int' 1)))
                (UnaryOperator 0x9f82670 <line:983:11, col:43> '<dependent type>' prefix '!'
                  (CallExpr 0x9f82648 <col:12, col:43> '<dependent type>'
                    (DependentScopeDeclRefExpr 0x9f825f0 <col:12, col:21> '<dependent type>' lvalue)
                    (DeclRefExpr 0x9f82614 <col:33> 'int_type':'typename _Traits::int_type' lvalue Var 0x9f82480 '__c' 'int_type':'typename _Traits::int_type')
                    (DeclRefExpr 0x9f8262c <col:38> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x9f822d0 '__eof' 'const int_type':'const typename _Traits::int_type'))))
              (UnaryOperator 0x9f827d8 <line:984:11, line:985:32> '<dependent type>' prefix '!'
                (CallExpr 0x9f827b0 <line:984:12, line:985:32> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9f826b8 <line:984:12, col:17> '<dependent type>' lvalue
                    (DeclRefExpr 0x9f826a0 <col:12> 'const __ctype_type':'const ctype<_CharT>' lvalue Var 0x9f82160 '__ct' 'const __ctype_type &'))
                  (DeclRefExpr 0x9f8270c <col:20, col:32> 'const mask':'const unsigned short' lvalue Var 0x9e69860 'space' 'const mask':'const unsigned short')
                  (CallExpr 0x9f82790 <line:985:6, col:31> '<dependent type>'
                    (DependentScopeDeclRefExpr 0x9f82750 <col:6, col:15> '<dependent type>' lvalue)
                    (DeclRefExpr 0x9f82774 <col:28> 'int_type':'typename _Traits::int_type' lvalue Var 0x9f82480 '__c' 'int_type':'typename _Traits::int_type')))))
            (CompoundStmt 0x9f829d0 <line:986:3, line:990:3>
              (BinaryOperator 0x9f828e8 <line:987:5, col:39> '<dependent type>' '='
                (UnaryOperator 0x9f82850 <col:5, col:9> '<dependent type>' prefix '*'
                  (UnaryOperator 0x9f82838 <col:6, col:9> '<dependent type>' postfix '++'
                    (DeclRefExpr 0x9f82808 <col:6> '_CharT *' lvalue ParmVar 0x9f81690 '__s' '_CharT *')))
                (CallExpr 0x9f828c8 <col:14, col:39> '<dependent type>'
                  (DependentScopeDeclRefExpr 0x9f82888 <col:14, col:23> '<dependent type>' lvalue)
                  (DeclRefExpr 0x9f828ac <col:36> 'int_type':'typename _Traits::int_type' lvalue Var 0x9f82480 '__c' 'int_type':'typename _Traits::int_type')))
              (UnaryOperator 0x9f82918 <line:988:5, col:7> 'streamsize':'int' lvalue prefix '++'
                (DeclRefExpr 0x9f82900 <col:7> 'streamsize':'int' lvalue Var 0x9f81c90 '__extracted' 'streamsize':'int'))
              (BinaryOperator 0x9f829b8 <line:989:5, col:24> '<dependent type>' '='
                (DeclRefExpr 0x9f8292c <col:5> 'int_type':'typename _Traits::int_type' lvalue Var 0x9f82480 '__c' 'int_type':'typename _Traits::int_type')
                (CallExpr 0x9f82998 <col:11, col:24> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9f82960 <col:11, col:17> '<dependent type>' lvalue
                    (DeclRefExpr 0x9f82944 <col:11> '__streambuf_type *' lvalue Var 0x9f823c0 '__sb' '__streambuf_type *'))))))
          (IfStmt 0x9f82b68 <line:991:8, line:992:22>
            <<<NULL>>>
            (CallExpr 0x9f82a88 <line:991:12, col:43> '<dependent type>'
              (DependentScopeDeclRefExpr 0x9f82a30 <col:12, col:21> '<dependent type>' lvalue)
              (DeclRefExpr 0x9f82a54 <col:33> 'int_type':'typename _Traits::int_type' lvalue Var 0x9f82480 '__c' 'int_type':'typename _Traits::int_type')
              (DeclRefExpr 0x9f82a6c <col:38> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x9f822d0 '__eof' 'const int_type':'const typename _Traits::int_type'))
            (CXXOperatorCallExpr 0x9f82b40 <line:992:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x9f82b30 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9f82b18 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9e0fd60 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x9f82aac <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f81d20 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0x9f82b08 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x9f82ae4 <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e113f0 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>)
          (BinaryOperator 0x9f82bf0 <line:996:8, col:25> '<dependent type>' '='
            (UnaryOperator 0x9f82ba0 <col:8, col:9> '<dependent type>' prefix '*'
              (DeclRefExpr 0x9f82b84 <col:9> '_CharT *' lvalue ParmVar 0x9f81690 '__s' '_CharT *'))
            (CXXUnresolvedConstructExpr 0x9f82bd8 <col:15, col:25> 'char_type':'_CharT'))
          (CallExpr 0x9f82c70 <line:997:8, col:20> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f82c20 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0x9f82c08 <col:8> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9f81620 '__in' 'basic_istream<_CharT, _Traits> &'))
            (IntegerLiteral 0x9f82c58 <col:19> 'int' 0)))
        <<<NULL>>>)
      (IfStmt 0x9f82dd0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:1003:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9f82ce8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9f82db8 </usr/include/c++/4.6/bits/istream.tcc:1000:6, line:1003:6>
          (CallExpr 0x9f82d88 <line:1001:8, col:41> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f82d10 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0x9f82cf8 <col:8> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9f81620 '__in' 'basic_istream<_CharT, _Traits> &'))
            (DeclRefExpr 0x9f82d64 <col:25, col:35> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11390 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x9f82da8 <line:1002:31>))
        <<<NULL>>>)
      (IfStmt 0x9f82ec8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:1005:44>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9f82df0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9f82eb0 </usr/include/c++/4.6/bits/istream.tcc:1005:6, col:44>
          (CallExpr 0x9f82e90 <col:8, col:41> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f82e18 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0x9f82e00 <col:8> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9f81620 '__in' 'basic_istream<_CharT, _Traits> &'))
            (DeclRefExpr 0x9f82e6c <col:25, col:35> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11390 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0x9f83030 <line:1007:7, line:1008:21>
    <<<NULL>>>
    (UnaryOperator 0x9f82f60 <line:1007:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9f82f50 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0x9f82f40 <col:12> 'streamsize':'int' <LValueToRValue>
          (DeclRefExpr 0x9f82f24 <col:12> 'streamsize':'int' lvalue Var 0x9f81c90 '__extracted' 'streamsize':'int'))))
    (CXXOperatorCallExpr 0x9f83008 <line:1008:2, col:21> 'const enum std::_Ios_Iostate' lvalue
      (ImplicitCastExpr 0x9f82ff8 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9f82fe0 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9e0fd60 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
      (DeclRefExpr 0x9f82f74 <col:2> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f81d20 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
      (ImplicitCastExpr 0x9f82fd0 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9f82fac <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e11450 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (IfStmt 0x9f83110 <line:1009:7, line:1010:21>
    <<<NULL>>>
    (ImplicitCastExpr 0x9f83078 <line:1009:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x9f83068 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9f8304c <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f81d20 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0x9f830f0 <line:1010:2, col:21> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f830a0 <col:2, col:7> '<dependent type>' lvalue
        (DeclRefExpr 0x9f83084 <col:2> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9f81620 '__in' 'basic_istream<_CharT, _Traits> &'))
      (DeclRefExpr 0x9f830d4 <col:16> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9f81d20 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0x9f83148 <line:1011:7, col:14>
    (DeclRefExpr 0x9f8312c <col:14> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9f81620 '__in' 'basic_istream<_CharT, _Traits> &')))

;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> basic_istream<wchar_t, std::char_traits<wchar_t> > &ws(basic_istream<wchar_t, std::char_traits<wchar_t> > &__in)template <typename _CharT = char, typename _Traits = std::char_traits<char>> basic_istream<char, std::char_traits<char> > &ws(basic_istream<char, std::char_traits<char> > &__in)template <typename _CharT, typename _Traits> basic_istream<_CharT, _Traits> &ws(basic_istream<_CharT, _Traits> &__in) (CompoundStmt 0x9f842b8 </usr/include/c++/4.6/bits/istream.tcc:1018:5, line:1036:5>
  (DeclStmt 0x9f83720 <line:1019:7, col:61>
    0x9f836f0 "typedef basic_istream<_CharT, _Traits> __istream_type")
  (DeclStmt 0x9f83870 <line:1020:7, col:73>
    0x9f83840 "typedef basic_streambuf<_CharT, _Traits> __streambuf_type")
  (DeclStmt 0x9f83930 <line:1021:7, col:60>
    0x9f83900 "typedef typename __istream_type::int_type __int_type")
  (DeclStmt 0x9f83a20 <line:1022:7, col:44>
    0x9f839f0 "typedef ctype<_CharT> __ctype_type")
  (DeclStmt 0x9f83ba8 <line:1024:7, col:72>
    0x9f83a70 "const __ctype_type &__ct =
      (CallExpr 0x9f83b88 <col:34, col:71> '<dependent type>'
        (UnresolvedLookupExpr 0x9f83ab0 <col:34, col:56> '<dependent type>' lvalue (ADL) = '1' 0x9e01120)
        (CallExpr 0x9f83b68 <col:58, col:70> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9f83b30 <col:58, col:63> '<dependent type>' lvalue
            (DeclRefExpr 0x9f83b18 <col:58> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9f83460 '__in' 'basic_istream<_CharT, _Traits> &'))))")
  (DeclStmt 0x9f83c88 <line:1025:7, col:46>
    0x9f83be0 "const __int_type __eof =
      (CallExpr 0x9f83c68 <col:32, col:45> '<dependent type>'
        (DependentScopeDeclRefExpr 0x9f83c40 <col:32, col:41> '<dependent type>' lvalue))")
  (DeclStmt 0x9f83d88 <line:1026:7, col:44>
    0x9f83ce0 "__streambuf_type *__sb =
      (CallExpr 0x9f83d68 <col:32, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f83d30 <col:32, col:37> '<dependent type>' lvalue
          (DeclRefExpr 0x9f83d14 <col:32> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9f83460 '__in' 'basic_istream<_CharT, _Traits> &')))")
  (DeclStmt 0x9f83e48 <line:1027:7, col:37>
    0x9f83da0 "__int_type __c =
      (CallExpr 0x9f83e28 <col:24, col:36> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f83df0 <col:24, col:30> '<dependent type>' lvalue
          (DeclRefExpr 0x9f83dd4 <col:24> '__streambuf_type *' lvalue Var 0x9f83ce0 '__sb' '__streambuf_type *')))")
  (WhileStmt 0x9f84100 <line:1029:7, line:1031:21>
    <<<NULL>>>
    (BinaryOperator 0x9f84048 <line:1029:14, line:1030:63> '<dependent type>' '&&'
      (UnaryOperator 0x9f83ef8 <line:1029:14, col:46> '<dependent type>' prefix '!'
        (CallExpr 0x9f83ed0 <col:15, col:46> '<dependent type>'
          (DependentScopeDeclRefExpr 0x9f83e78 <col:15, col:24> '<dependent type>' lvalue)
          (DeclRefExpr 0x9f83e9c <col:36> '__int_type':'typename __istream_type::int_type' lvalue Var 0x9f83da0 '__c' '__int_type':'typename __istream_type::int_type')
          (DeclRefExpr 0x9f83eb4 <col:41> 'const __int_type':'const typename __istream_type::int_type' lvalue Var 0x9f83be0 '__eof' 'const __int_type':'const typename __istream_type::int_type')))
      (CallExpr 0x9f84020 <line:1030:10, col:63> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f83f28 <col:10, col:15> '<dependent type>' lvalue
          (DeclRefExpr 0x9f83f0c <col:10> 'const __ctype_type':'const ctype<_CharT>' lvalue Var 0x9f83a70 '__ct' 'const __ctype_type &'))
        (DeclRefExpr 0x9f83f7c <col:18, col:30> 'const mask':'const unsigned short' lvalue Var 0x9e69860 'space' 'const mask':'const unsigned short')
        (CallExpr 0x9f84000 <col:37, col:62> '<dependent type>'
          (DependentScopeDeclRefExpr 0x9f83fc0 <col:37, col:46> '<dependent type>' lvalue)
          (DeclRefExpr 0x9f83fe4 <col:59> '__int_type':'typename __istream_type::int_type' lvalue Var 0x9f83da0 '__c' '__int_type':'typename __istream_type::int_type'))))
    (BinaryOperator 0x9f840e8 <line:1031:2, col:21> '<dependent type>' '='
      (DeclRefExpr 0x9f84060 <col:2> '__int_type':'typename __istream_type::int_type' lvalue Var 0x9f83da0 '__c' '__int_type':'typename __istream_type::int_type')
      (CallExpr 0x9f840c8 <col:8, col:21> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f84090 <col:8, col:14> '<dependent type>' lvalue
          (DeclRefExpr 0x9f84078 <col:8> '__streambuf_type *' lvalue Var 0x9f83ce0 '__sb' '__streambuf_type *')))))
  (IfStmt 0x9f84270 <line:1033:8, line:1034:33>
    <<<NULL>>>
    (CallExpr 0x9f84198 <line:1033:12, col:43> '<dependent type>'
      (DependentScopeDeclRefExpr 0x9f84140 <col:12, col:21> '<dependent type>' lvalue)
      (DeclRefExpr 0x9f84164 <col:33> '__int_type':'typename __istream_type::int_type' lvalue Var 0x9f83da0 '__c' '__int_type':'typename __istream_type::int_type')
      (DeclRefExpr 0x9f8417c <col:38> 'const __int_type':'const typename __istream_type::int_type' lvalue Var 0x9f83be0 '__eof' 'const __int_type':'const typename __istream_type::int_type'))
    (CallExpr 0x9f84250 <line:1034:3, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f841d8 <col:3, col:8> '<dependent type>' lvalue
        (DeclRefExpr 0x9f841bc <col:3> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9f83460 '__in' 'basic_istream<_CharT, _Traits> &'))
      (DeclRefExpr 0x9f8422c <col:17, col:27> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9e113f0 'eofbit' 'const iostate':'const enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0x9f842a8 <line:1035:7, col:14>
    (DeclRefExpr 0x9f8428c <col:14> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9f83460 '__in' 'basic_istream<_CharT, _Traits> &')))

;
    class basic_istream : virtual public basic_ios<char, std::char_traits<char> > {
        class basic_istream;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef basic_streambuf<char, std::char_traits<char> > __streambuf_type;
        typedef basic_ios<char, std::char_traits<char> > __ios_type;
        typedef basic_istream<char, std::char_traits<char> > __istream_type;
        typedef num_get<char, istreambuf_iterator<char, std::char_traits<char> > > __num_get_type;
        typedef ctype<char> __ctype_type;
    protected:
    protected:
        streamsize _M_gcount;
    public:
    public:
        basic_istream(__streambuf_type *__sb);
        virtual void ~basic_istream();
        class sentry {
            class sentry;
            bool _M_ok;
        public:
        public:
            typedef std::char_traits<char> traits_type;
            typedef basic_streambuf<char, std::char_traits<char> > __streambuf_type;
            typedef basic_istream<char, std::char_traits<char> > __istream_type;
            typedef typename __istream_type::__ctype_type __ctype_type;
            typedef typename char_traits<char>::int_type __int_type;
            sentry(basic_istream<char, std::char_traits<char> > &__is, bool __noskipws);
            bool operator _Bool() const;
        };
        ;
        __istream_type &operator>>(__istream_type &(*__pf)(__istream_type &));
        __istream_type &operator>>(__ios_type &(*__pf)(__ios_type &));
        __istream_type &operator>>(std::ios_base &(*__pf)(std::ios_base &));
        __istream_type &operator>>(bool &__n);
        __istream_type &operator>>(short &__n);
        __istream_type &operator>>(unsigned short &__n);
        __istream_type &operator>>(int &__n);
        __istream_type &operator>>(unsigned int &__n);
        __istream_type &operator>>(long &__n);
        __istream_type &operator>>(unsigned long &__n);
        __istream_type &operator>>(long long &__n);
        __istream_type &operator>>(unsigned long long &__n);
        __istream_type &operator>>(float &__f);
        __istream_type &operator>>(double &__f);
        __istream_type &operator>>(long double &__f);
        __istream_type &operator>>(void *&__p);
        __istream_type &operator>>(__streambuf_type *__sb);
        streamsize gcount() const;
        int_type get();
        __istream_type &get(char_type &__c);
        __istream_type &get(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &get(char_type *__s, streamsize __n);
        __istream_type &get(__streambuf_type &__sb, char_type __delim);
        __istream_type &get(__streambuf_type &__sb);
        __istream_type &getline(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &getline(char_type *__s, streamsize __n);
        __istream_type &ignore();
        __istream_type &ignore(streamsize __n);
        __istream_type &ignore(streamsize __n, int_type __delim);
        int_type peek();
        __istream_type &read(char_type *__s, streamsize __n);
        streamsize readsome(char_type *__s, streamsize __n);
        __istream_type &putback(char_type __c);
        __istream_type &unget();
        int sync();
        pos_type tellg();
        __istream_type &seekg(pos_type);
        __istream_type &seekg(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_istream();
        template <typename _ValueT = float> __istream_type &_M_extract(float &__v)template <typename _ValueT = unsigned long long> __istream_type &_M_extract(unsigned long long &__v)template <typename _ValueT = double> __istream_type &_M_extract(double &__v)template <typename _ValueT = void *> __istream_type &_M_extract(void *&__v)template <typename _ValueT = long> __istream_type &_M_extract(long &__v)template <typename _ValueT = unsigned short> __istream_type &_M_extract(unsigned short &__v)template <typename _ValueT = long double> __istream_type &_M_extract(long double &__v)template <typename _ValueT = unsigned long> __istream_type &_M_extract(unsigned long &__v)template <typename _ValueT = bool> __istream_type &_M_extract(bool &__v)template <typename _ValueT = unsigned int> __istream_type &_M_extract(unsigned int &__v)template <typename _ValueT = long long> __istream_type &_M_extract(long long &__v)template <typename _ValueT> __istream_type &_M_extract(_ValueT &__v);
        inline std::basic_istream<char> &operator=(const std::basic_istream<char> &);
        inline basic_istream(const std::basic_istream<char> &);
    };
    class basic_iostream : public basic_istream<char, std::char_traits<char> >, public basic_ostream<char, std::char_traits<char> > {
        class basic_iostream;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef basic_istream<char, std::char_traits<char> > __istream_type;
        typedef basic_ostream<char, std::char_traits<char> > __ostream_type;
        basic_iostream(basic_streambuf<char, std::char_traits<char> > *__sb);
        virtual void ~basic_iostream();
    protected:
    protected:
        basic_iostream();
        inline std::basic_iostream<char> &operator=(const std::basic_iostream<char> &);
        inline basic_iostream(const std::basic_iostream<char> &);
    };
    class basic_istream : virtual public basic_ios<wchar_t, std::char_traits<wchar_t> > {
        class basic_istream;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef basic_streambuf<wchar_t, std::char_traits<wchar_t> > __streambuf_type;
        typedef basic_ios<wchar_t, std::char_traits<wchar_t> > __ios_type;
        typedef basic_istream<wchar_t, std::char_traits<wchar_t> > __istream_type;
        typedef num_get<wchar_t, istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_get_type;
        typedef ctype<wchar_t> __ctype_type;
    protected:
    protected:
        streamsize _M_gcount;
    public:
    public:
        basic_istream(__streambuf_type *__sb);
        virtual void ~basic_istream();
        class sentry {
            class sentry;
            bool _M_ok;
        public:
        public:
            typedef std::char_traits<wchar_t> traits_type;
            typedef basic_streambuf<wchar_t, std::char_traits<wchar_t> > __streambuf_type;
            typedef basic_istream<wchar_t, std::char_traits<wchar_t> > __istream_type;
            typedef typename __istream_type::__ctype_type __ctype_type;
            typedef typename char_traits<wchar_t>::int_type __int_type;
            sentry(basic_istream<wchar_t, std::char_traits<wchar_t> > &__is, bool __noskipws);
            bool operator _Bool() const;
        };
        ;
        __istream_type &operator>>(__istream_type &(*__pf)(__istream_type &));
        __istream_type &operator>>(__ios_type &(*__pf)(__ios_type &));
        __istream_type &operator>>(std::ios_base &(*__pf)(std::ios_base &));
        __istream_type &operator>>(bool &__n);
        __istream_type &operator>>(short &__n);
        __istream_type &operator>>(unsigned short &__n);
        __istream_type &operator>>(int &__n);
        __istream_type &operator>>(unsigned int &__n);
        __istream_type &operator>>(long &__n);
        __istream_type &operator>>(unsigned long &__n);
        __istream_type &operator>>(long long &__n);
        __istream_type &operator>>(unsigned long long &__n);
        __istream_type &operator>>(float &__f);
        __istream_type &operator>>(double &__f);
        __istream_type &operator>>(long double &__f);
        __istream_type &operator>>(void *&__p);
        __istream_type &operator>>(__streambuf_type *__sb);
        streamsize gcount() const;
        int_type get();
        __istream_type &get(char_type &__c);
        __istream_type &get(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &get(char_type *__s, streamsize __n);
        __istream_type &get(__streambuf_type &__sb, char_type __delim);
        __istream_type &get(__streambuf_type &__sb);
        __istream_type &getline(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &getline(char_type *__s, streamsize __n);
        __istream_type &ignore();
        __istream_type &ignore(streamsize __n);
        __istream_type &ignore(streamsize __n, int_type __delim);
        int_type peek();
        __istream_type &read(char_type *__s, streamsize __n);
        streamsize readsome(char_type *__s, streamsize __n);
        __istream_type &putback(char_type __c);
        __istream_type &unget();
        int sync();
        pos_type tellg();
        __istream_type &seekg(pos_type);
        __istream_type &seekg(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_istream();
        template <typename _ValueT = float> __istream_type &_M_extract(float &__v)template <typename _ValueT = unsigned long long> __istream_type &_M_extract(unsigned long long &__v)template <typename _ValueT = double> __istream_type &_M_extract(double &__v)template <typename _ValueT = void *> __istream_type &_M_extract(void *&__v)template <typename _ValueT = long> __istream_type &_M_extract(long &__v)template <typename _ValueT = unsigned short> __istream_type &_M_extract(unsigned short &__v)template <typename _ValueT = long double> __istream_type &_M_extract(long double &__v)template <typename _ValueT = unsigned long> __istream_type &_M_extract(unsigned long &__v)template <typename _ValueT = bool> __istream_type &_M_extract(bool &__v)template <typename _ValueT = unsigned int> __istream_type &_M_extract(unsigned int &__v)template <typename _ValueT = long long> __istream_type &_M_extract(long long &__v)template <typename _ValueT> __istream_type &_M_extract(_ValueT &__v);
        inline std::basic_istream<wchar_t> &operator=(const std::basic_istream<wchar_t> &);
        inline basic_istream(const std::basic_istream<wchar_t> &);
    };
    class basic_iostream : public basic_istream<wchar_t, std::char_traits<wchar_t> >, public basic_ostream<wchar_t, std::char_traits<wchar_t> > {
        class basic_iostream;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef basic_istream<wchar_t, std::char_traits<wchar_t> > __istream_type;
        typedef basic_ostream<wchar_t, std::char_traits<wchar_t> > __ostream_type;
        basic_iostream(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        virtual void ~basic_iostream();
    protected:
    protected:
        basic_iostream();
        inline std::basic_iostream<wchar_t> &operator=(const std::basic_iostream<wchar_t> &);
        inline basic_iostream(const std::basic_iostream<wchar_t> &);
    };
}
namespace std {
    template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> class basic_stringbuf : public basic_streambuf<char, std::char_traits<char> > {
        class basic_stringbuf;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        typedef basic_string<char_type, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef typename __string_type::size_type __size_type;
    protected:
    protected:
        ios_base::openmode _M_mode;
        __string_type _M_string;
    public:
    public:
        basic_stringbuf(ios_base::openmode __mode);
        basic_stringbuf(const __string_type &__str, ios_base::openmode __mode);
        __string_type str() const;
        void str(const __string_type &__s);
    protected:
    protected:
        void _M_stringbuf_init(ios_base::openmode __mode);
        virtual streamsize showmanyc();
        virtual int_type underflow();
        virtual int_type pbackfail(int_type __c);
        virtual int_type overflow(int_type __c);
        virtual __streambuf_type *setbuf(char_type *__s, streamsize __n);
        virtual pos_type seekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        virtual pos_type seekpos(pos_type __sp, ios_base::openmode __mode);
        void _M_sync(char_type *__base, __size_type __i, __size_type __o);
        void _M_update_egptr();
        void _M_pbump(char_type *__pbeg, char_type *__pend, off_type __off);
        inline std::basic_stringbuf<char> &operator=(const std::basic_stringbuf<char> &);
        inline void ~basic_stringbuf();
        inline basic_stringbuf(const std::basic_stringbuf<char> &);
    }
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> class basic_stringbuf : public basic_streambuf<wchar_t, std::char_traits<wchar_t> > {
        class basic_stringbuf;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        typedef basic_string<char_type, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef typename __string_type::size_type __size_type;
    protected:
    protected:
        ios_base::openmode _M_mode;
        __string_type _M_string;
    public:
    public:
        basic_stringbuf(ios_base::openmode __mode);
        basic_stringbuf(const __string_type &__str, ios_base::openmode __mode);
        __string_type str() const;
        void str(const __string_type &__s);
    protected:
    protected:
        void _M_stringbuf_init(ios_base::openmode __mode);
        virtual streamsize showmanyc();
        virtual int_type underflow();
        virtual int_type pbackfail(int_type __c);
        virtual int_type overflow(int_type __c);
        virtual __streambuf_type *setbuf(char_type *__s, streamsize __n);
        virtual pos_type seekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        virtual pos_type seekpos(pos_type __sp, ios_base::openmode __mode);
        void _M_sync(char_type *__base, __size_type __i, __size_type __o);
        void _M_update_egptr();
        void _M_pbump(char_type *__pbeg, char_type *__pend, off_type __off);
        inline std::basic_stringbuf<wchar_t> &operator=(const std::basic_stringbuf<wchar_t> &);
        inline void ~basic_stringbuf();
        inline basic_stringbuf(const std::basic_stringbuf<wchar_t> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>, typename _Alloc = allocator<_CharT>> class basic_stringbuf : public basic_streambuf<_CharT, _Traits> {
        class basic_stringbuf;
    public:
    public:
        typedef _CharT char_type;
        typedef _Traits traits_type;
        typedef _Alloc allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        typedef basic_string<char_type, _Traits, _Alloc> __string_type;
        typedef typename __string_type::size_type __size_type;
    protected:
    protected:
        ios_base::openmode _M_mode;
        __string_type _M_string;
    public:
    public:
        basic_stringbuf<_CharT, _Traits, _Alloc>(ios_base::openmode __mode = (CXXOperatorCallExpr 0x9f8faa8 </usr/include/c++/4.6/sstream:93:51, col:76> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0x9f8fa98 <col:64, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0x9f8fa80 <col:64, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9e0bfe0 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0x9f8fa60 <col:51, col:61> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x9f8f9fc <col:51, col:61> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9e11680 'in' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0x9f8fa70 <col:66, col:76> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x9f8fa3c <col:66, col:76> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9e116e0 'out' 'const openmode':'const enum std::_Ios_Openmode')))
) : __streambuf_type(), _M_mode((DeclRefExpr 0x9f8fea8 </usr/include/c++/4.6/sstream:94:37> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0x9f8e7e0 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode')
), _M_string() (CompoundStmt 0x9f8ff48 </usr/include/c++/4.6/sstream:95:7, col:9>)


        basic_stringbuf<_CharT, _Traits, _Alloc>(const __string_type &__str, ios_base::openmode __mode = (CXXOperatorCallExpr 0x9f8fb98 </usr/include/c++/4.6/sstream:107:37, col:62> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0x9f8fb88 <col:50, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0x9f8fb70 <col:50, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9e0bfe0 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0x9f8fb50 <col:37, col:47> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x9f8faec <col:37, col:47> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9e11680 'in' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0x9f8fb60 <col:52, col:62> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x9f8fb2c <col:52, col:62> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9e116e0 'out' 'const openmode':'const enum std::_Ios_Openmode')))
) : __streambuf_type(), _M_mode(), _M_string((CallExpr 0x9f90028 </usr/include/c++/4.6/sstream:108:50, col:61> '<dependent type>'
  (CXXDependentScopeMemberExpr 0x9f8fff0 <col:50, col:56> '<dependent type>' lvalue
    (DeclRefExpr 0x9f8ffd8 <col:50> 'const __string_type':'const basic_string<char_type, _Traits, _Alloc>' lvalue ParmVar 0x9f8e930 '__str' 'const __string_type &')))
, (CallExpr 0x9f90098 </usr/include/c++/4.6/sstream:108:64, col:75> '<dependent type>'
  (CXXDependentScopeMemberExpr 0x9f90060 <col:64, col:70> '<dependent type>' lvalue
    (DeclRefExpr 0x9f90044 <col:64> 'const __string_type':'const basic_string<char_type, _Traits, _Alloc>' lvalue ParmVar 0x9f8e930 '__str' 'const __string_type &')))
) (CompoundStmt 0x9f90190 </usr/include/c++/4.6/sstream:109:7, col:36>
  (CallExpr 0x9f90170 <col:9, col:33> '<dependent type>'
    (MemberExpr 0x9f90138 <col:9> '<bound member function type>' ->_M_stringbuf_init 0x9f8ed40
      (CXXThisExpr 0x9f90128 <col:9> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9f90158 <col:27> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0x9f8e9a0 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode')))


        __string_type str() const (CompoundStmt 0x9f906f0 </usr/include/c++/4.6/sstream:122:7, line:135:7>
  (DeclStmt 0x9f901e8 <line:123:2, col:21>
    0x9f901b0 "__string_type __ret")
  (IfStmt 0x9f906a8 <line:124:2, line:133:12>
    <<<NULL>>>
    (CallExpr 0x9f90260 <line:124:6, col:17> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f90228 <col:6, col:12> '<dependent type>' lvalue
        (CXXThisExpr 0x9f90218 <col:6> 'const basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
    (CompoundStmt 0x9f90630 <line:125:4, line:131:4>
      (IfStmt 0x9f90610 <line:127:6, line:130:59>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9f90398 <line:127:10, col:37> '<dependent type>'
          (UnresolvedLookupExpr 0x9f90350 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bad330 0x9bc37b0 0x9bc6740 0x9d622b0 0x9d627e0 0x9d62d10)
          (CallExpr 0x9f902c8 <col:10, col:21> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f90290 <col:10, col:16> '<dependent type>' lvalue
              (CXXThisExpr 0x9f90280 <col:10> 'const basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
          (CallExpr 0x9f90330 <col:25, col:37> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f902f8 <col:25, col:31> '<dependent type>' lvalue
              (CXXThisExpr 0x9f902e8 <col:25> 'const basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
        (BinaryOperator 0x9f904d0 <line:128:8, col:57> '<dependent type>' '='
          (DeclRefExpr 0x9f903bc <col:8> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue Var 0x9f901b0 '__ret' '__string_type':'basic_string<char_type, _Traits, _Alloc>')
          (CXXUnresolvedConstructExpr 0x9f904b0 <col:16, col:57> '__string_type':'basic_string<char_type, _Traits, _Alloc>'
            (CallExpr 0x9f90428 <col:30, col:42> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9f903f0 <col:30, col:36> '<dependent type>' lvalue
                (CXXThisExpr 0x9f903e0 <col:30> 'const basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
            (CallExpr 0x9f90490 <col:45, col:56> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9f90458 <col:45, col:51> '<dependent type>' lvalue
                (CXXThisExpr 0x9f90448 <col:45> 'const basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))))
        (BinaryOperator 0x9f905f8 <line:130:9, col:59> '<dependent type>' '='
          (DeclRefExpr 0x9f904e8 <col:9> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue Var 0x9f901b0 '__ret' '__string_type':'basic_string<char_type, _Traits, _Alloc>')
          (CXXUnresolvedConstructExpr 0x9f905d8 <col:17, col:59> '__string_type':'basic_string<char_type, _Traits, _Alloc>'
            (CallExpr 0x9f90550 <col:31, col:43> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9f90518 <col:31, col:37> '<dependent type>' lvalue
                (CXXThisExpr 0x9f90508 <col:31> 'const basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
            (CallExpr 0x9f905b8 <col:46, col:58> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9f90580 <col:46, col:52> '<dependent type>' lvalue
                (CXXThisExpr 0x9f90570 <col:46> 'const basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))))))
    (BinaryOperator 0x9f90690 <line:133:4, col:12> '<dependent type>' '='
      (DeclRefExpr 0x9f90644 <col:4> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue Var 0x9f901b0 '__ret' '__string_type':'basic_string<char_type, _Traits, _Alloc>')
      (MemberExpr 0x9f90670 <col:12> 'const __string_type':'const basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0x9f8e740
        (CXXThisExpr 0x9f90660 <col:12> 'const basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
  (ReturnStmt 0x9f906e0 <line:134:2, col:9>
    (DeclRefExpr 0x9f906c4 <col:9> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue Var 0x9f901b0 '__ret' '__string_type':'basic_string<char_type, _Traits, _Alloc>')))


        void str(const __string_type &__s) (CompoundStmt 0x9f90900 </usr/include/c++/4.6/sstream:146:7, line:150:7>
  (CallExpr 0x9f90858 <line:148:2, col:41> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9f90740 <col:2, col:12> '<dependent type>' lvalue
      (MemberExpr 0x9f90720 <col:2> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0x9f8e740
        (CXXThisExpr 0x9f90710 <col:2> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
    (CallExpr 0x9f907c8 <col:19, col:28> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f90790 <col:19, col:23> '<dependent type>' lvalue
        (DeclRefExpr 0x9f90774 <col:19> 'const __string_type':'const basic_string<char_type, _Traits, _Alloc>' lvalue ParmVar 0x9f8eb70 '__s' 'const __string_type &')))
    (CallExpr 0x9f90838 <col:31, col:40> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f90800 <col:31, col:35> '<dependent type>' lvalue
        (DeclRefExpr 0x9f907e4 <col:31> 'const __string_type':'const basic_string<char_type, _Traits, _Alloc>' lvalue ParmVar 0x9f8eb70 '__s' 'const __string_type &'))))
  (CallExpr 0x9f908e0 <line:149:2, col:27> '<dependent type>'
    (MemberExpr 0x9f90890 <col:2> '<bound member function type>' ->_M_stringbuf_init 0x9f8ed40
      (CXXThisExpr 0x9f90880 <col:2> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
    (MemberExpr 0x9f908c0 <col:20> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ->_M_mode 0x9f8e700
      (CXXThisExpr 0x9f908b0 <col:20> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))


    protected:
    protected:
        void _M_stringbuf_init(ios_base::openmode __mode) (CompoundStmt 0x9f90d90 </usr/include/c++/4.6/sstream:156:7, line:162:7>
  (BinaryOperator 0x9f90960 <line:157:2, col:12> '<dependent type>' '='
    (MemberExpr 0x9f90928 <col:2> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ->_M_mode 0x9f8e700
      (CXXThisExpr 0x9f90918 <col:2> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9f90948 <col:12> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0x9f8ecf0 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode'))
  (DeclStmt 0x9f909d0 <line:158:2, col:23>
    0x9f90980 "__size_type __len =
      (IntegerLiteral 0x9f909b8 <col:22> 'int' 0)")
  (IfStmt 0x9f90c38 <line:159:2, line:160:27>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9f90b58 <line:159:6, col:46> '<dependent type>'
      (UnresolvedLookupExpr 0x9f90b20 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e0bdb0)
      (MemberExpr 0x9f909f0 <col:6> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ->_M_mode 0x9f8e700
        (CXXThisExpr 0x9f909e0 <col:6> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
      (ParenExpr 0x9f90b08 <col:16, col:46> 'enum std::_Ios_Openmode'
        (CXXOperatorCallExpr 0x9f90ae0 <col:17, col:43> 'enum std::_Ios_Openmode'
          (ImplicitCastExpr 0x9f90ad0 <col:31, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9f90ab8 <col:31, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9e0bfe0 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
          (ImplicitCastExpr 0x9f90a98 <col:17, col:27> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
            (DeclRefExpr 0x9f90a38 <col:17, col:27> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9e115c0 'ate' 'const openmode':'const enum std::_Ios_Openmode'))
          (ImplicitCastExpr 0x9f90aa8 <col:33, col:43> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
            (DeclRefExpr 0x9f90a74 <col:33, col:43> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9e11560 'app' 'const openmode':'const enum std::_Ios_Openmode')))))
    (BinaryOperator 0x9f90c20 <line:160:4, col:27> '<dependent type>' '='
      (DeclRefExpr 0x9f90b7c <col:4> '__size_type':'typename __string_type::size_type' lvalue Var 0x9f90980 '__len' '__size_type':'typename __string_type::size_type')
      (CallExpr 0x9f90c00 <col:12, col:27> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f90bc8 <col:12, col:22> '<dependent type>' lvalue
          (MemberExpr 0x9f90ba8 <col:12> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0x9f8e740
            (CXXThisExpr 0x9f90b98 <col:12> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))))
    <<<NULL>>>)
  (CallExpr 0x9f90d68 <line:161:2, col:60> '<dependent type>'
    (MemberExpr 0x9f90c68 <col:2> '<bound member function type>' ->_M_sync 0x9f8f720
      (CXXThisExpr 0x9f90c58 <col:2> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
    (CXXConstCastExpr 0x9f90d20 <col:10, col:49> 'char_type *' const_cast<char_type *> <NoOp>
      (CallExpr 0x9f90cf0 <col:33, col:48> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f90cb8 <col:33, col:43> '<dependent type>' lvalue
          (MemberExpr 0x9f90c98 <col:33> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0x9f8e740
            (CXXThisExpr 0x9f90c88 <col:33> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))))
    (IntegerLiteral 0x9f90d38 <col:52> 'int' 0)
    (DeclRefExpr 0x9f90d50 <col:55> '__size_type':'typename __string_type::size_type' lvalue Var 0x9f90980 '__len' '__size_type':'typename __string_type::size_type')))


        virtual streamsize showmanyc() (CompoundStmt 0x9f94c78 </usr/include/c++/4.6/sstream:166:7, line:174:7>
  (DeclStmt 0x9f90e28 <line:167:2, col:23>
    0x9f90dc0 "streamsize __ret =
      (UnaryOperator 0x9f90e10 <col:21, col:22> 'int' prefix '-'
        (IntegerLiteral 0x9f90df8 <col:22> 'int' 1))")
  (IfStmt 0x9f94c20 <line:168:2, line:172:4>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9f94a30 <line:168:6, col:26> '<dependent type>'
      (UnresolvedLookupExpr 0x9f949f8 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e0bdb0)
      (MemberExpr 0x9f90e48 <col:6> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ->_M_mode 0x9f8e700
        (CXXThisExpr 0x9f90e38 <col:6> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9f949d4 <col:16, col:26> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9e11680 'in' 'const openmode':'const enum std::_Ios_Openmode'))
    (CompoundStmt 0x9f94c08 <line:169:4, line:172:4>
      (CallExpr 0x9f94a88 <line:170:6, col:22> '<dependent type>'
        (MemberExpr 0x9f94a68 <col:6> '<bound member function type>' ->_M_update_egptr 0x9f8f7b0
          (CXXThisExpr 0x9f94a58 <col:6> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
      (BinaryOperator 0x9f94bf0 <line:171:6, col:41> '<dependent type>' '='
        (DeclRefExpr 0x9f94aa4 <col:6> 'streamsize':'int' lvalue Var 0x9f90dc0 '__ret' 'streamsize':'int')
        (CXXOperatorCallExpr 0x9f94bc8 <col:14, col:41> '<dependent type>'
          (UnresolvedLookupExpr 0x9f94b90 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
          (CallExpr 0x9f94b08 <col:14, col:26> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f94ad0 <col:14, col:20> '<dependent type>' lvalue
              (CXXThisExpr 0x9f94ac0 <col:14> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
          (CallExpr 0x9f94b70 <col:30, col:41> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f94b38 <col:30, col:36> '<dependent type>' lvalue
              (CXXThisExpr 0x9f94b28 <col:30> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))))
    <<<NULL>>>)
  (ReturnStmt 0x9f94c68 <line:173:2, col:9>
    (ImplicitCastExpr 0x9f94c58 <col:9> 'streamsize':'int' <LValueToRValue>
      (DeclRefExpr 0x9f94c3c <col:9> 'streamsize':'int' lvalue Var 0x9f90dc0 '__ret' 'streamsize':'int'))))


        virtual int_type underflow();
        virtual int_type pbackfail(int_type __c = (CallExpr 0x9f8fc08 </usr/include/c++/4.6/sstream:180:32, col:49> '<dependent type>'
  (DependentScopeDeclRefExpr 0x9f8fbe0 <col:32, col:45> '<dependent type>' lvalue))
);
        virtual int_type overflow(int_type __c = (CallExpr 0x9f8fc70 </usr/include/c++/4.6/sstream:183:31, col:48> '<dependent type>'
  (DependentScopeDeclRefExpr 0x9f8fc48 <col:31, col:44> '<dependent type>' lvalue))
);
        virtual __streambuf_type *setbuf(char_type *__s, streamsize __n) (CompoundStmt 0x9f94ea0 </usr/include/c++/4.6/sstream:198:7, line:213:7>
  (IfStmt 0x9f94e60 <line:199:2, line:211:4>
    <<<NULL>>>
    (BinaryOperator 0x9f94d08 <line:199:6, col:20> '<dependent type>' '&&'
      (DeclRefExpr 0x9f94c94 <col:6> 'char_type *' lvalue ParmVar 0x9f8f0c0 '__s' 'char_type *')
      (BinaryOperator 0x9f94cf0 <col:13, col:20> '_Bool' '>='
        (ImplicitCastExpr 0x9f94ce0 <col:13> 'streamsize':'int' <LValueToRValue>
          (DeclRefExpr 0x9f94cac <col:13> 'streamsize':'int' lvalue ParmVar 0x9f8f100 '__n' 'streamsize':'int'))
        (IntegerLiteral 0x9f94cc8 <col:20> 'int' 0)))
    (CompoundStmt 0x9f94e48 <line:200:4, line:211:4>
      (CallExpr 0x9f94d88 <line:207:6, col:22> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f94d50 <col:6, col:16> '<dependent type>' lvalue
          (MemberExpr 0x9f94d30 <col:6> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0x9f8e740
            (CXXThisExpr 0x9f94d20 <col:6> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
      (CallExpr 0x9f94e20 <line:210:6, col:25> '<dependent type>'
        (MemberExpr 0x9f94db8 <col:6> '<bound member function type>' ->_M_sync 0x9f8f720
          (CXXThisExpr 0x9f94da8 <col:6> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x9f94dd8 <col:14> 'char_type *' lvalue ParmVar 0x9f8f0c0 '__s' 'char_type *')
        (DeclRefExpr 0x9f94df0 <col:19> 'streamsize':'int' lvalue ParmVar 0x9f8f100 '__n' 'streamsize':'int')
        (IntegerLiteral 0x9f94e08 <col:24> 'int' 0)))
    <<<NULL>>>)
  (ReturnStmt 0x9f94e90 <line:212:2, col:9>
    (CXXThisExpr 0x9f94e80 <col:9> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))


        virtual pos_type seekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode = (CXXOperatorCallExpr 0x9f8fd58 </usr/include/c++/4.6/sstream:217:36, col:61> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0x9f8fd48 <col:49, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0x9f8fd30 <col:49, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9e0bfe0 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0x9f8fd10 <col:36, col:46> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x9f8fcac <col:36, col:46> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9e11680 'in' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0x9f8fd20 <col:51, col:61> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x9f8fcec <col:51, col:61> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9e116e0 'out' 'const openmode':'const enum std::_Ios_Openmode')))
);
        virtual pos_type seekpos(pos_type __sp, ios_base::openmode __mode = (CXXOperatorCallExpr 0x9f8fe48 </usr/include/c++/4.6/sstream:221:36, col:61> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0x9f8fe38 <col:49, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0x9f8fe20 <col:49, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9e0bfe0 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0x9f8fe00 <col:36, col:46> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x9f8fd9c <col:36, col:46> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9e11680 'in' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0x9f8fe10 <col:51, col:61> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x9f8fddc <col:51, col:61> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9e116e0 'out' 'const openmode':'const enum std::_Ios_Openmode')))
);
        void _M_sync(char_type *__base, __size_type __i, __size_type __o);
        void _M_update_egptr() (CompoundStmt 0x9f95568 </usr/include/c++/4.6/sstream:233:7, line:242:7>
  (DeclStmt 0x9f94fc8 <line:234:2, col:46>
    0x9f94ec0 "const bool __testin =
      (CXXOperatorCallExpr 0x9f94fa0 <col:24, col:44> '<dependent type>'
        (UnresolvedLookupExpr 0x9f94f68 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e0bdb0)
        (MemberExpr 0x9f94f08 <col:24> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ->_M_mode 0x9f8e700
          (CXXThisExpr 0x9f94ef8 <col:24> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x9f94f44 <col:34, col:44> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9e11680 'in' 'const openmode':'const enum std::_Ios_Openmode'))")
  (IfStmt 0x9f95548 <line:235:2, line:241:4>
    <<<NULL>>>
    (BinaryOperator 0x9f95180 <line:235:6, col:49> '<dependent type>' '&&'
      (CallExpr 0x9f95020 <col:6, col:17> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f94fe8 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0x9f94fd8 <col:6> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
      (CXXOperatorCallExpr 0x9f95158 <col:22, col:49> '<dependent type>'
        (UnresolvedLookupExpr 0x9f95110 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bad330 0x9bc37b0 0x9bc6740 0x9d622b0 0x9d627e0 0x9d62d10)
        (CallExpr 0x9f95088 <col:22, col:33> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9f95050 <col:22, col:28> '<dependent type>' lvalue
            (CXXThisExpr 0x9f95040 <col:22> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
        (CallExpr 0x9f950f0 <col:37, col:49> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9f950b8 <col:37, col:43> '<dependent type>' lvalue
            (CXXThisExpr 0x9f950a8 <col:37> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))))
    (CompoundStmt 0x9f95530 <line:236:4, line:241:4>
      (IfStmt 0x9f95510 <line:237:6, line:240:59>
        <<<NULL>>>
        (ImplicitCastExpr 0x9f951b0 <line:237:10> '_Bool' <LValueToRValue>
          (DeclRefExpr 0x9f95198 <col:10> 'const _Bool' lvalue Var 0x9f94ec0 '__testin' 'const _Bool'))
        (CallExpr 0x9f95340 <line:238:8, col:60> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9f951d0 <col:8, col:14> '<dependent type>' lvalue
            (CXXThisExpr 0x9f951c0 <col:8> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
          (CallExpr 0x9f95250 <col:19, col:31> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f95218 <col:19, col:25> '<dependent type>' lvalue
              (CXXThisExpr 0x9f95208 <col:19> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
          (CallExpr 0x9f952b8 <col:34, col:45> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f95280 <col:34, col:40> '<dependent type>' lvalue
              (CXXThisExpr 0x9f95270 <col:34> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
          (CallExpr 0x9f95320 <col:48, col:59> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f952e8 <col:48, col:54> '<dependent type>' lvalue
              (CXXThisExpr 0x9f952d8 <col:48> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
        (CallExpr 0x9f954e8 <line:240:8, col:59> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9f95378 <col:8, col:14> '<dependent type>' lvalue
            (CXXThisExpr 0x9f95368 <col:8> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
          (CallExpr 0x9f953f8 <col:19, col:30> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f953c0 <col:19, col:25> '<dependent type>' lvalue
              (CXXThisExpr 0x9f953b0 <col:19> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
          (CallExpr 0x9f95460 <col:33, col:44> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f95428 <col:33, col:39> '<dependent type>' lvalue
              (CXXThisExpr 0x9f95418 <col:33> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
          (CallExpr 0x9f954c8 <col:47, col:58> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f95490 <col:47, col:53> '<dependent type>' lvalue
              (CXXThisExpr 0x9f95480 <col:47> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))))
    <<<NULL>>>))


        void _M_pbump(char_type *__pbeg, char_type *__pend, off_type __off);
    };
    template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> class basic_istringstream : public basic_istream<char, std::char_traits<char> > {
        class basic_istringstream;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<char, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef basic_stringbuf<char, std::char_traits<char>, std::allocator<char> > __stringbuf_type;
        typedef basic_istream<char_type, traits_type> __istream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_istringstream(ios_base::openmode __mode);
        basic_istringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_istringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_istringstream<char> &operator=(const std::basic_istringstream<char> &);
    }
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> class basic_istringstream : public basic_istream<wchar_t, std::char_traits<wchar_t> > {
        class basic_istringstream;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __stringbuf_type;
        typedef basic_istream<char_type, traits_type> __istream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_istringstream(ios_base::openmode __mode);
        basic_istringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_istringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_istringstream<wchar_t> &operator=(const std::basic_istringstream<wchar_t> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>, typename _Alloc = allocator<_CharT>> class basic_istringstream : public basic_istream<_CharT, _Traits> {
        class basic_istringstream;
    public:
    public:
        typedef _CharT char_type;
        typedef _Traits traits_type;
        typedef _Alloc allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<_CharT, _Traits, _Alloc> __string_type;
        typedef basic_stringbuf<_CharT, _Traits, _Alloc> __stringbuf_type;
        typedef basic_istream<char_type, traits_type> __istream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_istringstream<_CharT, _Traits, _Alloc>(ios_base::openmode __mode = (ImplicitCastExpr 0x9f966e8 </usr/include/c++/4.6/sstream:298:55, col:65> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
  (DeclRefExpr 0x9f966c4 <col:55, col:65> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9e11680 'in' 'const openmode':'const enum std::_Ios_Openmode'))
) : __istream_type(), _M_stringbuf((CXXOperatorCallExpr 0x9f96838 </usr/include/c++/4.6/sstream:299:40, col:59> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0x9f96828 <col:47, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0x9f96810 <col:47, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9e0bfe0 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0x9f967f0 <col:40> 'class ios_base::openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x9f96798 <col:40> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0x9f96110 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0x9f96800 <col:49, col:59> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x9f967cc <col:49, col:59> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9e11680 'in' 'const openmode':'const enum std::_Ios_Openmode')))
) (CompoundStmt 0x9f969b0 </usr/include/c++/4.6/sstream:300:7, col:36>
  (CallExpr 0x9f96990 <col:9, col:33> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9f968c8 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0x9f968b8 <col:9> 'basic_istringstream<_CharT, _Traits, _Alloc> *' this))
    (CXXOperatorCallExpr 0x9f96970 <col:20, col:21> '<dependent type>'
      (UnresolvedLookupExpr 0x9f96930 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e0a5b0 0x9e0bdb0 0x9e0d020)
      (MemberExpr 0x9f96910 <col:21> '__stringbuf_type':'basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0x9f96070
        (CXXThisExpr 0x9f96900 <col:21> 'basic_istringstream<_CharT, _Traits, _Alloc> *' this)))))


        basic_istringstream<_CharT, _Traits, _Alloc>(const __string_type &__str, ios_base::openmode __mode = (ImplicitCastExpr 0x9f96738 </usr/include/c++/4.6/sstream:317:34, col:44> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
  (DeclRefExpr 0x9f96714 <col:34, col:44> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9e11680 'in' 'const openmode':'const enum std::_Ios_Openmode'))
) : __istream_type(), _M_stringbuf((DeclRefExpr 0x9f96a08 </usr/include/c++/4.6/sstream:318:40> 'const __string_type':'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9f96230 '__str' 'const __string_type &')
, (CXXOperatorCallExpr 0x9f96ac0 </usr/include/c++/4.6/sstream:318:47, col:66> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0x9f96ab0 <col:54, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0x9f96a98 <col:54, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9e0bfe0 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0x9f96a78 <col:47> 'class ios_base::openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x9f96a20 <col:47> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0x9f962a0 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0x9f96a88 <col:56, col:66> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x9f96a54 <col:56, col:66> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9e11680 'in' 'const openmode':'const enum std::_Ios_Openmode')))
) (CompoundStmt 0x9f96c28 </usr/include/c++/4.6/sstream:319:7, col:36>
  (CallExpr 0x9f96c08 <col:9, col:33> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9f96b40 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0x9f96b30 <col:9> 'basic_istringstream<_CharT, _Traits, _Alloc> *' this))
    (CXXOperatorCallExpr 0x9f96be8 <col:20, col:21> '<dependent type>'
      (UnresolvedLookupExpr 0x9f96ba8 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e0a5b0 0x9e0bdb0 0x9e0d020)
      (MemberExpr 0x9f96b88 <col:21> '__stringbuf_type':'basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0x9f96070
        (CXXThisExpr 0x9f96b78 <col:21> 'basic_istringstream<_CharT, _Traits, _Alloc> *' this)))))


        void ~basic_istringstream<_CharT, _Traits, _Alloc>() (CompoundStmt 0x9f96c40 </usr/include/c++/4.6/sstream:328:7, col:9>)


        __stringbuf_type *rdbuf() const (CompoundStmt 0x9f96d30 </usr/include/c++/4.6/sstream:339:7, col:62>
  (ReturnStmt 0x9f96d20 <col:9, col:59>
    (CXXConstCastExpr 0x9f96d08 <col:16, col:59> '__stringbuf_type *' const_cast<__stringbuf_type *> <NoOp>
      (CXXOperatorCallExpr 0x9f96cd8 <col:46, col:47> '<dependent type>'
        (UnresolvedLookupExpr 0x9f96c98 <col:46, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e0a5b0 0x9e0bdb0 0x9e0d020)
        (MemberExpr 0x9f96c78 <col:47> 'const __stringbuf_type':'const basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0x9f96070
          (CXXThisExpr 0x9f96c68 <col:47> 'const basic_istringstream<_CharT, _Traits, _Alloc> *' this))))))


        __string_type str() const (CompoundStmt 0x9f96de0 </usr/include/c++/4.6/sstream:347:7, col:36>
  (ReturnStmt 0x9f96dd0 <col:9, col:33>
    (CallExpr 0x9f96db0 <col:16, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f96d78 <col:16, col:29> '<dependent type>' lvalue
        (MemberExpr 0x9f96d58 <col:16> 'const __stringbuf_type':'const basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0x9f96070
          (CXXThisExpr 0x9f96d48 <col:16> 'const basic_istringstream<_CharT, _Traits, _Alloc> *' this))))))


        void str(const __string_type &__s) (CompoundStmt 0x9f96e98 </usr/include/c++/4.6/sstream:357:7, col:32>
  (CallExpr 0x9f96e78 <col:9, col:29> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9f96e28 <col:9, col:22> '<dependent type>' lvalue
      (MemberExpr 0x9f96e08 <col:9> '__stringbuf_type':'basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0x9f96070
        (CXXThisExpr 0x9f96df8 <col:9> 'basic_istringstream<_CharT, _Traits, _Alloc> *' this)))
    (DeclRefExpr 0x9f96e5c <col:26> 'const __string_type':'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9f965c0 '__s' 'const __string_type &')))


    };
    template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> class basic_ostringstream : public basic_ostream<char, std::char_traits<char> > {
        class basic_ostringstream;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<char, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef basic_stringbuf<char, std::char_traits<char>, std::allocator<char> > __stringbuf_type;
        typedef basic_ostream<char_type, traits_type> __ostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_ostringstream(ios_base::openmode __mode);
        basic_ostringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_ostringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_ostringstream<char> &operator=(const std::basic_ostringstream<char> &);
    }
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> class basic_ostringstream : public basic_ostream<wchar_t, std::char_traits<wchar_t> > {
        class basic_ostringstream;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __stringbuf_type;
        typedef basic_ostream<char_type, traits_type> __ostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_ostringstream(ios_base::openmode __mode);
        basic_ostringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_ostringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_ostringstream<wchar_t> &operator=(const std::basic_ostringstream<wchar_t> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>, typename _Alloc = allocator<_CharT>> class basic_ostringstream : public basic_ostream<_CharT, _Traits> {
        class basic_ostringstream;
    public:
    public:
        typedef _CharT char_type;
        typedef _Traits traits_type;
        typedef _Alloc allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<_CharT, _Traits, _Alloc> __string_type;
        typedef basic_stringbuf<_CharT, _Traits, _Alloc> __stringbuf_type;
        typedef basic_ostream<char_type, traits_type> __ostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_ostringstream<_CharT, _Traits, _Alloc>(ios_base::openmode __mode = (ImplicitCastExpr 0x9f97fd8 </usr/include/c++/4.6/sstream:408:55, col:65> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
  (DeclRefExpr 0x9f97fb4 <col:55, col:65> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9e116e0 'out' 'const openmode':'const enum std::_Ios_Openmode'))
) : __ostream_type(), _M_stringbuf((CXXOperatorCallExpr 0x9f98128 </usr/include/c++/4.6/sstream:409:40, col:59> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0x9f98118 <col:47, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0x9f98100 <col:47, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9e0bfe0 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0x9f980e0 <col:40> 'class ios_base::openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x9f98088 <col:40> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0x9f97a40 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0x9f980f0 <col:49, col:59> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x9f980bc <col:49, col:59> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9e116e0 'out' 'const openmode':'const enum std::_Ios_Openmode')))
) (CompoundStmt 0x9f982a0 </usr/include/c++/4.6/sstream:410:7, col:36>
  (CallExpr 0x9f98280 <col:9, col:33> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9f981b8 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0x9f981a8 <col:9> 'basic_ostringstream<_CharT, _Traits, _Alloc> *' this))
    (CXXOperatorCallExpr 0x9f98260 <col:20, col:21> '<dependent type>'
      (UnresolvedLookupExpr 0x9f98220 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e0a5b0 0x9e0bdb0 0x9e0d020)
      (MemberExpr 0x9f98200 <col:21> '__stringbuf_type':'basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0x9f979a0
        (CXXThisExpr 0x9f981f0 <col:21> 'basic_ostringstream<_CharT, _Traits, _Alloc> *' this)))))


        basic_ostringstream<_CharT, _Traits, _Alloc>(const __string_type &__str, ios_base::openmode __mode = (ImplicitCastExpr 0x9f98028 </usr/include/c++/4.6/sstream:427:34, col:44> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
  (DeclRefExpr 0x9f98004 <col:34, col:44> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9e116e0 'out' 'const openmode':'const enum std::_Ios_Openmode'))
) : __ostream_type(), _M_stringbuf((DeclRefExpr 0x9f982f8 </usr/include/c++/4.6/sstream:428:40> 'const __string_type':'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9f97b60 '__str' 'const __string_type &')
, (CXXOperatorCallExpr 0x9f983b0 </usr/include/c++/4.6/sstream:428:47, col:66> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0x9f983a0 <col:54, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0x9f98388 <col:54, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9e0bfe0 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0x9f98368 <col:47> 'class ios_base::openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x9f98310 <col:47> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0x9f97bd0 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0x9f98378 <col:56, col:66> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x9f98344 <col:56, col:66> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9e116e0 'out' 'const openmode':'const enum std::_Ios_Openmode')))
) (CompoundStmt 0x9f98518 </usr/include/c++/4.6/sstream:429:7, col:36>
  (CallExpr 0x9f984f8 <col:9, col:33> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9f98430 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0x9f98420 <col:9> 'basic_ostringstream<_CharT, _Traits, _Alloc> *' this))
    (CXXOperatorCallExpr 0x9f984d8 <col:20, col:21> '<dependent type>'
      (UnresolvedLookupExpr 0x9f98498 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e0a5b0 0x9e0bdb0 0x9e0d020)
      (MemberExpr 0x9f98478 <col:21> '__stringbuf_type':'basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0x9f979a0
        (CXXThisExpr 0x9f98468 <col:21> 'basic_ostringstream<_CharT, _Traits, _Alloc> *' this)))))


        void ~basic_ostringstream<_CharT, _Traits, _Alloc>() (CompoundStmt 0x9f98530 </usr/include/c++/4.6/sstream:438:7, col:9>)


        __stringbuf_type *rdbuf() const (CompoundStmt 0x9f98620 </usr/include/c++/4.6/sstream:449:7, col:62>
  (ReturnStmt 0x9f98610 <col:9, col:59>
    (CXXConstCastExpr 0x9f985f8 <col:16, col:59> '__stringbuf_type *' const_cast<__stringbuf_type *> <NoOp>
      (CXXOperatorCallExpr 0x9f985c8 <col:46, col:47> '<dependent type>'
        (UnresolvedLookupExpr 0x9f98588 <col:46, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e0a5b0 0x9e0bdb0 0x9e0d020)
        (MemberExpr 0x9f98568 <col:47> 'const __stringbuf_type':'const basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0x9f979a0
          (CXXThisExpr 0x9f98558 <col:47> 'const basic_ostringstream<_CharT, _Traits, _Alloc> *' this))))))


        __string_type str() const (CompoundStmt 0x9f986d0 </usr/include/c++/4.6/sstream:457:7, col:36>
  (ReturnStmt 0x9f986c0 <col:9, col:33>
    (CallExpr 0x9f986a0 <col:16, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f98668 <col:16, col:29> '<dependent type>' lvalue
        (MemberExpr 0x9f98648 <col:16> 'const __stringbuf_type':'const basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0x9f979a0
          (CXXThisExpr 0x9f98638 <col:16> 'const basic_ostringstream<_CharT, _Traits, _Alloc> *' this))))))


        void str(const __string_type &__s) (CompoundStmt 0x9f98788 </usr/include/c++/4.6/sstream:467:7, col:32>
  (CallExpr 0x9f98768 <col:9, col:29> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9f98718 <col:9, col:22> '<dependent type>' lvalue
      (MemberExpr 0x9f986f8 <col:9> '__stringbuf_type':'basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0x9f979a0
        (CXXThisExpr 0x9f986e8 <col:9> 'basic_ostringstream<_CharT, _Traits, _Alloc> *' this)))
    (DeclRefExpr 0x9f9874c <col:26> 'const __string_type':'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9f97eb0 '__s' 'const __string_type &')))


    };
    template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> class basic_stringstream : public basic_iostream<char, std::char_traits<char> > {
        class basic_stringstream;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<char, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef basic_stringbuf<char, std::char_traits<char>, std::allocator<char> > __stringbuf_type;
        typedef basic_iostream<char_type, traits_type> __iostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_stringstream(ios_base::openmode __m);
        basic_stringstream(const __string_type &__str, ios_base::openmode __m);
        void ~basic_stringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_stringstream<char> &operator=(const std::basic_stringstream<char> &);
        inline basic_stringstream(const std::basic_stringstream<char> &);
    }
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> class basic_stringstream : public basic_iostream<wchar_t, std::char_traits<wchar_t> > {
        class basic_stringstream;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __stringbuf_type;
        typedef basic_iostream<char_type, traits_type> __iostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_stringstream(ios_base::openmode __m);
        basic_stringstream(const __string_type &__str, ios_base::openmode __m);
        void ~basic_stringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_stringstream<wchar_t> &operator=(const std::basic_stringstream<wchar_t> &);
        inline basic_stringstream(const std::basic_stringstream<wchar_t> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>, typename _Alloc = allocator<_CharT>> class basic_stringstream : public basic_iostream<_CharT, _Traits> {
        class basic_stringstream;
    public:
    public:
        typedef _CharT char_type;
        typedef _Traits traits_type;
        typedef _Alloc allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<_CharT, _Traits, _Alloc> __string_type;
        typedef basic_stringbuf<_CharT, _Traits, _Alloc> __stringbuf_type;
        typedef basic_iostream<char_type, traits_type> __iostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_stringstream<_CharT, _Traits, _Alloc>(ios_base::openmode __m = (CXXOperatorCallExpr 0x9f99950 </usr/include/c++/4.6/sstream:516:51, col:77> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0x9f99940 <col:65, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0x9f99928 <col:65, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9e0bfe0 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0x9f99908 <col:51, col:61> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x9f998a4 <col:51, col:61> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9e116e0 'out' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0x9f99918 <col:67, col:77> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x9f998e4 <col:67, col:77> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9e11680 'in' 'const openmode':'const enum std::_Ios_Openmode')))
) : __iostream_type(), _M_stringbuf((DeclRefExpr 0x9f99ab8 </usr/include/c++/4.6/sstream:517:41> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0x9f99330 '__m' 'class ios_base::openmode':'enum std::_Ios_Openmode')
) (CompoundStmt 0x9f99c20 </usr/include/c++/4.6/sstream:518:7, col:36>
  (CallExpr 0x9f99c00 <col:9, col:33> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9f99b38 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0x9f99b28 <col:9> 'basic_stringstream<_CharT, _Traits, _Alloc> *' this))
    (CXXOperatorCallExpr 0x9f99be0 <col:20, col:21> '<dependent type>'
      (UnresolvedLookupExpr 0x9f99ba0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e0a5b0 0x9e0bdb0 0x9e0d020)
      (MemberExpr 0x9f99b80 <col:21> '__stringbuf_type':'basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0x9f99290
        (CXXThisExpr 0x9f99b70 <col:21> 'basic_stringstream<_CharT, _Traits, _Alloc> *' this)))))


        basic_stringstream<_CharT, _Traits, _Alloc>(const __string_type &__str, ios_base::openmode __m = (CXXOperatorCallExpr 0x9f99a40 </usr/include/c++/4.6/sstream:533:30, col:56> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0x9f99a30 <col:44, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0x9f99a18 <col:44, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9e0bfe0 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0x9f999f8 <col:30, col:40> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x9f99994 <col:30, col:40> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9e116e0 'out' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0x9f99a08 <col:46, col:56> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x9f999d4 <col:46, col:56> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9e11680 'in' 'const openmode':'const enum std::_Ios_Openmode')))
) : __iostream_type(), _M_stringbuf((DeclRefExpr 0x9f99c78 </usr/include/c++/4.6/sstream:534:41> 'const __string_type':'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9f99450 '__str' 'const __string_type &')
, (DeclRefExpr 0x9f99c90 </usr/include/c++/4.6/sstream:534:48> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0x9f994c0 '__m' 'class ios_base::openmode':'enum std::_Ios_Openmode')
) (CompoundStmt 0x9f99de8 </usr/include/c++/4.6/sstream:535:7, col:36>
  (CallExpr 0x9f99dc8 <col:9, col:33> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9f99d00 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0x9f99cf0 <col:9> 'basic_stringstream<_CharT, _Traits, _Alloc> *' this))
    (CXXOperatorCallExpr 0x9f99da8 <col:20, col:21> '<dependent type>'
      (UnresolvedLookupExpr 0x9f99d68 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e0a5b0 0x9e0bdb0 0x9e0d020)
      (MemberExpr 0x9f99d48 <col:21> '__stringbuf_type':'basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0x9f99290
        (CXXThisExpr 0x9f99d38 <col:21> 'basic_stringstream<_CharT, _Traits, _Alloc> *' this)))))


        void ~basic_stringstream<_CharT, _Traits, _Alloc>() (CompoundStmt 0x9f99e00 </usr/include/c++/4.6/sstream:544:7, col:9>)


        __stringbuf_type *rdbuf() const (CompoundStmt 0x9f99ef0 </usr/include/c++/4.6/sstream:555:7, col:62>
  (ReturnStmt 0x9f99ee0 <col:9, col:59>
    (CXXConstCastExpr 0x9f99ec8 <col:16, col:59> '__stringbuf_type *' const_cast<__stringbuf_type *> <NoOp>
      (CXXOperatorCallExpr 0x9f99e98 <col:46, col:47> '<dependent type>'
        (UnresolvedLookupExpr 0x9f99e58 <col:46, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e0a5b0 0x9e0bdb0 0x9e0d020)
        (MemberExpr 0x9f99e38 <col:47> 'const __stringbuf_type':'const basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0x9f99290
          (CXXThisExpr 0x9f99e28 <col:47> 'const basic_stringstream<_CharT, _Traits, _Alloc> *' this))))))


        __string_type str() const (CompoundStmt 0x9f99fa0 </usr/include/c++/4.6/sstream:563:7, col:36>
  (ReturnStmt 0x9f99f90 <col:9, col:33>
    (CallExpr 0x9f99f70 <col:16, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f99f38 <col:16, col:29> '<dependent type>' lvalue
        (MemberExpr 0x9f99f18 <col:16> 'const __stringbuf_type':'const basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0x9f99290
          (CXXThisExpr 0x9f99f08 <col:16> 'const basic_stringstream<_CharT, _Traits, _Alloc> *' this))))))


        void str(const __string_type &__s) (CompoundStmt 0x9f9a058 </usr/include/c++/4.6/sstream:573:7, col:32>
  (CallExpr 0x9f9a038 <col:9, col:29> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9f99fe8 <col:9, col:22> '<dependent type>' lvalue
      (MemberExpr 0x9f99fc8 <col:9> '__stringbuf_type':'basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0x9f99290
        (CXXThisExpr 0x9f99fb8 <col:9> 'basic_stringstream<_CharT, _Traits, _Alloc> *' this)))
    (DeclRefExpr 0x9f9a01c <col:26> 'const __string_type':'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9f997a0 '__s' 'const __string_type &')))


    };
}
namespace std {
    typename basic_stringbuf<_CharT, _Traits, _Alloc>::int_type pbackfail(int_type __c = (CallExpr 0x9f8fc08 </usr/include/c++/4.6/sstream:180:32, col:49> '<dependent type>'
  (DependentScopeDeclRefExpr 0x9f8fbe0 <col:32, col:45> '<dependent type>' lvalue))
) (CompoundStmt 0x9f9b458 </usr/include/c++/4.6/bits/sstream.tcc:48:5, line:76:5>
  (DeclStmt 0x9f9a950 <line:49:7, col:42>
    0x9f9a8a0 "int_type __ret =
      (CallExpr 0x9f9a930 <col:24, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f9a8f8 <col:24, col:37> '<dependent type>' lvalue))")
  (IfStmt 0x9f9b410 <line:50:7, line:74:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9f9aa78 <line:50:11, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0x9f9aa30 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bac3c0 0x9bc2c90 0x9bc5590 0x9d61190 0x9d616c0 0x9d61bf0)
      (CallExpr 0x9f9a9a8 <col:11, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f9a970 <col:11, col:17> '<dependent type>' lvalue
          (CXXThisExpr 0x9f9a960 <col:11> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
      (CallExpr 0x9f9aa10 <col:27, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f9a9d8 <col:27, col:33> '<dependent type>' lvalue
          (CXXThisExpr 0x9f9a9c8 <col:27> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
    (CompoundStmt 0x9f9b3f8 <line:51:2, line:74:2>
      (DeclStmt 0x9f9ab98 <line:54:4, col:63>
        0x9f9aab0 "const bool __testeof =
          (CallExpr 0x9f9ab70 <col:27, col:62> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f9ab08 <col:27, col:40> '<dependent type>' lvalue)
            (DeclRefExpr 0x9f9ab3c <col:52> 'int_type':'typename traits_type::int_type' lvalue ParmVar 0x9f9a620 '__c' 'int_type':'typename traits_type::int_type')
            (DeclRefExpr 0x9f9ab54 <col:57> 'int_type':'typename traits_type::int_type' lvalue Var 0x9f9a8a0 '__ret' 'int_type':'typename traits_type::int_type'))")
      (IfStmt 0x9f9b3d8 <line:55:4, line:73:6>
        <<<NULL>>>
        (UnaryOperator 0x9f9abd0 <line:55:8, col:9> '_Bool' prefix '!'
          (ImplicitCastExpr 0x9f9abc0 <col:9> '_Bool' <LValueToRValue>
            (DeclRefExpr 0x9f9aba8 <col:9> 'const _Bool' lvalue Var 0x9f9aab0 '__testeof' 'const _Bool')))
        (CompoundStmt 0x9f9b248 <line:56:6, line:68:6>
          (DeclStmt 0x9f9ade8 <line:57:8, line:59:28>
            0x9f9abf0 "const bool __testeq =
              (CallExpr 0x9f9adc0 <line:57:30, line:59:27> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9f9ac48 <line:57:30, col:43> '<dependent type>' lvalue)
                (CallExpr 0x9f9acf0 <col:46, line:58:27> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9f9aca0 <line:57:46, line:58:11> '<dependent type>' lvalue)
                  (DeclRefExpr 0x9f9acd4 <col:24> 'int_type':'typename traits_type::int_type' lvalue ParmVar 0x9f9a620 '__c' 'int_type':'typename traits_type::int_type'))
                (ArraySubscriptExpr 0x9f9ada8 <line:59:11, col:26> '<dependent type>' lvalue
                  (CallExpr 0x9f9ad58 <col:11, col:22> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9f9ad20 <col:11, col:17> '<dependent type>' lvalue
                      (CXXThisExpr 0x9f9ad10 <col:11> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
                  (UnaryOperator 0x9f9ad90 <col:24, col:25> 'int' prefix '-'
                    (IntegerLiteral 0x9f9ad78 <col:25> 'int' 1))))")
          (DeclStmt 0x9f9af28 <line:60:8, col:60>
            0x9f9ae00 "const bool __testout =
              (CXXOperatorCallExpr 0x9f9af00 <col:31, col:57> '<dependent type>'
                (UnresolvedLookupExpr 0x9f9aec0 <col:45, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e0a5b0 0x9e0bdb0 0x9e0d020)
                (CXXDependentScopeMemberExpr 0x9f9ae48 <col:31, col:37> '<dependent type>' lvalue
                  (CXXThisExpr 0x9f9ae38 <col:31> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
                (DeclRefExpr 0x9f9ae9c <col:47, col:57> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9e116e0 'out' 'const openmode':'const enum std::_Ios_Openmode'))")
          (IfStmt 0x9f9b228 <line:61:8, line:67:3>
            <<<NULL>>>
            (BinaryOperator 0x9f9af88 <line:61:12, col:24> '_Bool' '||'
              (ImplicitCastExpr 0x9f9af68 <col:12> '_Bool' <LValueToRValue>
                (DeclRefExpr 0x9f9af38 <col:12> 'const _Bool' lvalue Var 0x9f9abf0 '__testeq' 'const _Bool'))
              (ImplicitCastExpr 0x9f9af78 <col:24> '_Bool' <LValueToRValue>
                (DeclRefExpr 0x9f9af50 <col:24> 'const _Bool' lvalue Var 0x9f9ae00 '__testout' 'const _Bool')))
            (CompoundStmt 0x9f9b208 <line:62:3, line:67:3>
              (CallExpr 0x9f9b018 <line:63:5, col:19> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9f9afb0 <col:5, col:11> '<dependent type>' lvalue
                  (CXXThisExpr 0x9f9afa0 <col:5> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
                (UnaryOperator 0x9f9b000 <col:17, col:18> 'int' prefix '-'
                  (IntegerLiteral 0x9f9afe8 <col:18> 'int' 1)))
              (IfStmt 0x9f9b1a0 <line:64:5, line:65:52>
                <<<NULL>>>
                (UnaryOperator 0x9f9b060 <line:64:9, col:10> '_Bool' prefix '!'
                  (ImplicitCastExpr 0x9f9b050 <col:10> '_Bool' <LValueToRValue>
                    (DeclRefExpr 0x9f9b038 <col:10> 'const _Bool' lvalue Var 0x9f9abf0 '__testeq' 'const _Bool')))
                (BinaryOperator 0x9f9b188 <line:65:7, col:52> '<dependent type>' '='
                  (UnaryOperator 0x9f9b0e0 <col:7, col:19> '<dependent type>' prefix '*'
                    (CallExpr 0x9f9b0c0 <col:8, col:19> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0x9f9b088 <col:8, col:14> '<dependent type>' lvalue
                        (CXXThisExpr 0x9f9b078 <col:8> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
                  (CallExpr 0x9f9b168 <col:23, col:52> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9f9b118 <col:23, col:36> '<dependent type>' lvalue)
                    (DeclRefExpr 0x9f9b14c <col:49> 'int_type':'typename traits_type::int_type' lvalue ParmVar 0x9f9a620 '__c' 'int_type':'typename traits_type::int_type')))
                <<<NULL>>>)
              (BinaryOperator 0x9f9b1f0 <line:66:5, col:13> '<dependent type>' '='
                (DeclRefExpr 0x9f9b1bc <col:5> 'int_type':'typename traits_type::int_type' lvalue Var 0x9f9a8a0 '__ret' 'int_type':'typename traits_type::int_type')
                (DeclRefExpr 0x9f9b1d4 <col:13> 'int_type':'typename traits_type::int_type' lvalue ParmVar 0x9f9a620 '__c' 'int_type':'typename traits_type::int_type')))
            <<<NULL>>>))
        (CompoundStmt 0x9f9b3c0 <line:70:6, line:73:6>
          (CallExpr 0x9f9b2e0 <line:71:8, col:22> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f9b278 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9f9b268 <col:8> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
            (UnaryOperator 0x9f9b2c8 <col:20, col:21> 'int' prefix '-'
              (IntegerLiteral 0x9f9b2b0 <col:21> 'int' 1)))
          (BinaryOperator 0x9f9b3a8 <line:72:8, col:40> '<dependent type>' '='
            (DeclRefExpr 0x9f9b300 <col:8> 'int_type':'typename traits_type::int_type' lvalue Var 0x9f9a8a0 '__ret' 'int_type':'typename traits_type::int_type')
            (CallExpr 0x9f9b388 <col:16, col:40> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9f9b338 <col:16, col:29> '<dependent type>' lvalue)
              (DeclRefExpr 0x9f9b36c <col:37> 'int_type':'typename traits_type::int_type' lvalue ParmVar 0x9f9a620 '__c' 'int_type':'typename traits_type::int_type'))))))
    <<<NULL>>>)
  (ReturnStmt 0x9f9b448 <line:75:7, col:14>
    (DeclRefExpr 0x9f9b42c <col:14> 'int_type':'typename traits_type::int_type' lvalue Var 0x9f9a8a0 '__ret' 'int_type':'typename traits_type::int_type')))


    typename basic_stringbuf<_CharT, _Traits, _Alloc>::int_type overflow(int_type __c = (CallExpr 0x9f8fc70 </usr/include/c++/4.6/sstream:183:31, col:48> '<dependent type>'
  (DependentScopeDeclRefExpr 0x9f8fc48 <col:31, col:44> '<dependent type>' lvalue))
) (CompoundStmt 0x9fa0dd0 </usr/include/c++/4.6/bits/sstream.tcc:82:5, line:127:5>
  (DeclStmt 0x9f9bcf8 <line:83:7, col:59>
    0x9f9bbd0 "const bool __testout =
      (CXXOperatorCallExpr 0x9f9bcd0 <col:30, col:56> '<dependent type>'
        (UnresolvedLookupExpr 0x9f9bc90 <col:44, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e0a5b0 0x9e0bdb0 0x9e0d020)
        (CXXDependentScopeMemberExpr 0x9f9bc18 <col:30, col:36> '<dependent type>' lvalue
          (CXXThisExpr 0x9f9bc08 <col:30> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x9f9bc6c <col:46, col:56> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9e116e0 'out' 'const openmode':'const enum std::_Ios_Openmode'))")
  (IfStmt 0x9f9be60 <line:84:7, line:85:26>
    <<<NULL>>>
    (ImplicitCastExpr 0x9f9bdc8 <line:84:11, col:45> '_Bool' <IntegralToBoolean>
      (CallExpr 0x9f9bd80 <col:11, col:45> 'long'
        (ImplicitCastExpr 0x9f9bd70 <col:11> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9f9bd08 <col:11> 'long (long, long)' lvalue Function 0x9d45c10 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0x9f9bda8 <col:28, col:29> 'long' <IntegralCast>
          (UnaryOperator 0x9f9bd48 <col:28, col:29> '_Bool' prefix '!'
            (ImplicitCastExpr 0x9f9bd38 <col:29> '_Bool' <LValueToRValue>
              (DeclRefExpr 0x9f9bd20 <col:29> 'const _Bool' lvalue Var 0x9f9bbd0 '__testout' 'const _Bool'))))
        (ImplicitCastExpr 0x9f9bdb8 <col:40> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0x9f9bd60 <col:40> '_Bool' false))))
    (ReturnStmt 0x9f9be50 <line:85:2, col:26>
      (CallExpr 0x9f9be30 <col:9, col:26> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f9bdf8 <col:9, col:22> '<dependent type>' lvalue)))
    <<<NULL>>>)
  (DeclStmt 0x9f9bfd8 <line:87:7, col:79>
    0x9f9be90 "const bool __testeof =
      (CallExpr 0x9f9bfb0 <col:30, col:78> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f9bee8 <col:30, col:43> '<dependent type>' lvalue)
        (DeclRefExpr 0x9f9bf1c <col:55> 'int_type':'typename traits_type::int_type' lvalue ParmVar 0x9f9b950 '__c' 'int_type':'typename traits_type::int_type')
        (CallExpr 0x9f9bf90 <col:60, col:77> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9f9bf58 <col:60, col:73> '<dependent type>' lvalue)))")
  (IfStmt 0x9f9c140 <line:88:7, line:89:33>
    <<<NULL>>>
    (ImplicitCastExpr 0x9f9c090 <line:88:11, col:44> '_Bool' <IntegralToBoolean>
      (CallExpr 0x9f9c038 <col:11, col:44> 'long'
        (ImplicitCastExpr 0x9f9c028 <col:11> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9f9bfe8 <col:11> 'long (long, long)' lvalue Function 0x9d45c10 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0x9f9c070 <col:28> 'long' <IntegralCast>
          (ImplicitCastExpr 0x9f9c060 <col:28> '_Bool' <LValueToRValue>
            (DeclRefExpr 0x9f9c000 <col:28> 'const _Bool' lvalue Var 0x9f9be90 '__testeof' 'const _Bool')))
        (ImplicitCastExpr 0x9f9c080 <col:39> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0x9f9c018 <col:39> '_Bool' false))))
    (ReturnStmt 0x9f9c130 <line:89:2, col:33>
      (CallExpr 0x9f9c110 <col:9, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f9c0c0 <col:9, col:22> '<dependent type>' lvalue)
        (DeclRefExpr 0x9f9c0f4 <col:30> 'int_type':'typename traits_type::int_type' lvalue ParmVar 0x9f9b950 '__c' 'int_type':'typename traits_type::int_type')))
    <<<NULL>>>)
  (DeclStmt 0x9f9c230 <line:91:7, col:58>
    0x9f9c170 "const __size_type __capacity =
      (CallExpr 0x9f9c210 <col:38, col:57> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f9c1d8 <col:38, col:48> '<dependent type>' lvalue
          (MemberExpr 0x9f9c1b8 <col:38> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0x9f8e740
            (CXXThisExpr 0x9f9c1a8 <col:38> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))")
  (DeclStmt 0x9f9c310 <line:92:7, col:58>
    0x9f9c250 "const __size_type __max_size =
      (CallExpr 0x9f9c2f0 <col:38, col:57> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f9c2b8 <col:38, col:48> '<dependent type>' lvalue
          (MemberExpr 0x9f9c298 <col:38> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0x9f8e740
            (CXXThisExpr 0x9f9c288 <col:38> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))")
  (DeclStmt 0x9f9c4a8 <line:93:7, col:58>
    0x9f9c330 "const bool __testput =
      (CXXOperatorCallExpr 0x9f9c480 <col:30, col:57> '<dependent type>'
        (UnresolvedLookupExpr 0x9f9c438 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bac3c0 0x9bc2c90 0x9bc5590 0x9d61190 0x9d616c0 0x9d61bf0)
        (CallExpr 0x9f9c3b0 <col:30, col:41> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9f9c378 <col:30, col:36> '<dependent type>' lvalue
            (CXXThisExpr 0x9f9c368 <col:30> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
        (CallExpr 0x9f9c418 <col:45, col:57> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9f9c3e0 <col:45, col:51> '<dependent type>' lvalue
            (CXXThisExpr 0x9f9c3d0 <col:45> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))")
  (IfStmt 0x9f9c6a0 <line:94:7, line:95:26>
    <<<NULL>>>
    (CallExpr 0x9f9c5f0 <line:94:11, col:73> '<dependent type>'
      (DeclRefExpr 0x9f9c4b8 <col:11> 'long (long, long)' lvalue Function 0x9d45c10 '__builtin_expect' 'long (long, long)')
      (BinaryOperator 0x9f9c5c8 <col:28, col:56> '<dependent type>' '&&'
        (UnaryOperator 0x9f9c4f8 <col:28, col:29> '_Bool' prefix '!'
          (ImplicitCastExpr 0x9f9c4e8 <col:29> '_Bool' <LValueToRValue>
            (DeclRefExpr 0x9f9c4d0 <col:29> 'const _Bool' lvalue Var 0x9f9c330 '__testput' 'const _Bool')))
        (CXXOperatorCallExpr 0x9f9c5a0 <col:42, col:56> '<dependent type>'
          (UnresolvedLookupExpr 0x9f9c540 <col:53, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30 0x9d5e270 0x9d5ece0 0x9d5f520 0x9d5fa90 0x9e73300)
          (DeclRefExpr 0x9f9c50c <col:42> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0x9f9c170 '__capacity' 'const __size_type':'const typename __string_type::size_type')
          (DeclRefExpr 0x9f9c524 <col:56> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0x9f9c250 '__max_size' 'const __size_type':'const typename __string_type::size_type')))
      (CXXBoolLiteralExpr 0x9f9c5e0 <col:68> '_Bool' false))
    (ReturnStmt 0x9f9c690 <line:95:2, col:26>
      (CallExpr 0x9f9c670 <col:9, col:26> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f9c638 <col:9, col:22> '<dependent type>' lvalue)))
    <<<NULL>>>)
  (DeclStmt 0x9f9c798 <line:99:7, col:62>
    0x9f9c6d0 "const char_type __conv =
      (CallExpr 0x9f9c778 <col:32, col:61> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f9c728 <col:32, col:45> '<dependent type>' lvalue)
        (DeclRefExpr 0x9f9c75c <col:58> 'int_type':'typename traits_type::int_type' lvalue ParmVar 0x9f9b950 '__c' 'int_type':'typename traits_type::int_type'))")
  (IfStmt 0x9fa0d08 <line:100:7, line:124:18>
    <<<NULL>>>
    (UnaryOperator 0x9f9c7d0 <line:100:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9f9c7c0 <col:12> '_Bool' <LValueToRValue>
        (DeclRefExpr 0x9f9c7a8 <col:12> 'const _Bool' lvalue Var 0x9f9c330 '__testput' 'const _Bool')))
    (CompoundStmt 0x9fa0c28 <line:101:2, line:122:2>
      (DeclStmt 0x9f9c958 <line:111:4, line:112:25>
        0x9f9c7f0 "const __size_type __opt_len =
          (CallExpr 0x9f9c930 <line:111:34, line:112:24> '<dependent type>'
            (UnresolvedLookupExpr 0x9f9c848 <line:111:34, col:39> '<overloaded function type>' lvalue (no ADL) = '1' 0x9be02b0 0x9b949b0)
            (CXXUnresolvedConstructExpr 0x9f9c8d0 <col:43, col:69> '__size_type':'typename __string_type::size_type'
              (BinaryOperator 0x9f9c8b8 <col:55, col:59> '<dependent type>' '*'
                (IntegerLiteral 0x9f9c888 <col:55> 'int' 2)
                (DeclRefExpr 0x9f9c8a0 <col:59> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0x9f9c170 '__capacity' 'const __size_type':'const typename __string_type::size_type')))
            (CXXUnresolvedConstructExpr 0x9f9c910 <line:112:8, col:23> '__size_type':'typename __string_type::size_type'
              (IntegerLiteral 0x9f9c8f8 <col:20> 'int' 512)))")
      (DeclStmt 0x9fa0418 <line:113:4, col:61>
        0x9f9c970 "const __size_type __len =
          (CallExpr 0x9fa03f0 <col:30, col:60> '<dependent type>'
            (UnresolvedLookupExpr 0x9fa0388 <col:30, col:35> '<overloaded function type>' lvalue (no ADL) = '1' 0x9bdffa0 0x9b94620)
            (DeclRefExpr 0x9fa03c0 <col:39> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0x9f9c7f0 '__opt_len' 'const __size_type':'const typename __string_type::size_type')
            (DeclRefExpr 0x9fa03d8 <col:50> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0x9f9c250 '__max_size' 'const __size_type':'const typename __string_type::size_type'))")
      (DeclStmt 0x9fa0468 <line:114:4, col:23>
        0x9fa0430 "__string_type __tmp")
      (CallExpr 0x9fa04e0 <line:115:4, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fa0490 <col:4, col:10> '<dependent type>' lvalue
          (DeclRefExpr 0x9fa0478 <col:4> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue Var 0x9fa0430 '__tmp' '__string_type':'basic_string<char_type, _Traits, _Alloc>'))
        (DeclRefExpr 0x9fa04c4 <col:18> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0x9f9c970 '__len' 'const __size_type':'const typename __string_type::size_type'))
      (IfStmt 0x9fa0778 <line:116:4, line:117:63>
        <<<NULL>>>
        (CallExpr 0x9fa0548 <line:116:8, col:20> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9fa0510 <col:8, col:14> '<dependent type>' lvalue
            (CXXThisExpr 0x9fa0500 <col:8> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
        (CallExpr 0x9fa0750 <line:117:6, col:63> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9fa0580 <col:6, col:12> '<dependent type>' lvalue
            (DeclRefExpr 0x9fa0564 <col:6> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue Var 0x9fa0430 '__tmp' '__string_type':'basic_string<char_type, _Traits, _Alloc>'))
          (CallExpr 0x9fa0600 <col:19, col:31> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9fa05c8 <col:19, col:25> '<dependent type>' lvalue
              (CXXThisExpr 0x9fa05b8 <col:19> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
          (CXXOperatorCallExpr 0x9fa0728 <col:34, col:62> '<dependent type>'
            (UnresolvedLookupExpr 0x9fa06f0 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
            (CallExpr 0x9fa0668 <col:34, col:46> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9fa0630 <col:34, col:40> '<dependent type>' lvalue
                (CXXThisExpr 0x9fa0620 <col:34> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
            (CallExpr 0x9fa06d0 <col:50, col:62> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9fa0698 <col:50, col:56> '<dependent type>' lvalue
                (CXXThisExpr 0x9fa0688 <col:50> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))))
        <<<NULL>>>)
      (CallExpr 0x9fa0800 <line:118:4, col:26> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fa07b0 <col:4, col:10> '<dependent type>' lvalue
          (DeclRefExpr 0x9fa0794 <col:4> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue Var 0x9fa0430 '__tmp' '__string_type':'basic_string<char_type, _Traits, _Alloc>'))
        (DeclRefExpr 0x9fa07e4 <col:20> 'const char_type':'const _CharT' lvalue Var 0x9f9c6d0 '__conv' 'const char_type':'const _CharT'))
      (CallExpr 0x9fa08a0 <line:119:4, col:24> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fa0850 <col:4, col:14> '<dependent type>' lvalue
          (MemberExpr 0x9fa0830 <col:4> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0x9f8e740
            (CXXThisExpr 0x9fa0820 <col:4> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
        (DeclRefExpr 0x9fa0884 <col:19> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue Var 0x9fa0430 '__tmp' '__string_type':'basic_string<char_type, _Traits, _Alloc>'))
      (CallExpr 0x9fa0c00 <line:120:4, line:121:63> '<dependent type>'
        (MemberExpr 0x9fa08d0 <line:120:4> '<bound member function type>' ->_M_sync 0x9f8f720
          (CXXThisExpr 0x9fa08c0 <col:4> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
        (CXXConstCastExpr 0x9fa0988 <col:12, col:51> 'char_type *' const_cast<char_type *> <NoOp>
          (CallExpr 0x9fa0958 <col:35, col:50> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9fa0920 <col:35, col:45> '<dependent type>' lvalue
              (MemberExpr 0x9fa0900 <col:35> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0x9f8e740
                (CXXThisExpr 0x9fa08f0 <col:35> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))))
        (CXXOperatorCallExpr 0x9fa0aa8 <line:121:5, col:32> '<dependent type>'
          (UnresolvedLookupExpr 0x9fa0a70 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
          (CallExpr 0x9fa09e8 <col:5, col:16> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9fa09b0 <col:5, col:11> '<dependent type>' lvalue
              (CXXThisExpr 0x9fa09a0 <col:5> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
          (CallExpr 0x9fa0a50 <col:20, col:32> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9fa0a18 <col:20, col:26> '<dependent type>' lvalue
              (CXXThisExpr 0x9fa0a08 <col:20> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
        (CXXOperatorCallExpr 0x9fa0bd8 <col:35, col:62> '<dependent type>'
          (UnresolvedLookupExpr 0x9fa0ba0 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
          (CallExpr 0x9fa0b18 <col:35, col:46> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9fa0ae0 <col:35, col:41> '<dependent type>' lvalue
              (CXXThisExpr 0x9fa0ad0 <col:35> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
          (CallExpr 0x9fa0b80 <col:50, col:62> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9fa0b48 <col:50, col:56> '<dependent type>' lvalue
              (CXXThisExpr 0x9fa0b38 <col:50> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))))
    (BinaryOperator 0x9fa0cf0 <line:124:2, col:18> '<dependent type>' '='
      (UnaryOperator 0x9fa0cc0 <col:2, col:14> '<dependent type>' prefix '*'
        (CallExpr 0x9fa0ca0 <col:3, col:14> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9fa0c68 <col:3, col:9> '<dependent type>' lvalue
            (CXXThisExpr 0x9fa0c58 <col:3> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
      (DeclRefExpr 0x9fa0cd4 <col:18> 'const char_type':'const _CharT' lvalue Var 0x9f9c6d0 '__conv' 'const char_type':'const _CharT')))
  (CallExpr 0x9fa0d88 <line:125:7, col:20> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9fa0d38 <col:7, col:13> '<dependent type>' lvalue
      (CXXThisExpr 0x9fa0d28 <col:7> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
    (IntegerLiteral 0x9fa0d70 <col:19> 'int' 1))
  (ReturnStmt 0x9fa0dc0 <line:126:7, col:14>
    (DeclRefExpr 0x9fa0da8 <col:14> 'int_type':'typename traits_type::int_type' lvalue ParmVar 0x9f9b950 '__c' 'int_type':'typename traits_type::int_type')))


    typename basic_stringbuf<_CharT, _Traits, _Alloc>::int_type underflow() (CompoundStmt 0x9fa1a88 </usr/include/c++/4.6/bits/sstream.tcc:133:5, line:145:5>
  (DeclStmt 0x9fa15d0 <line:134:7, col:42>
    0x9fa1520 "int_type __ret =
      (CallExpr 0x9fa15b0 <col:24, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fa1578 <col:24, col:37> '<dependent type>' lvalue))")
  (DeclStmt 0x9fa1718 <line:135:7, col:57>
    0x9fa15f0 "const bool __testin =
      (CXXOperatorCallExpr 0x9fa16f0 <col:29, col:55> '<dependent type>'
        (UnresolvedLookupExpr 0x9fa16b0 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e0a5b0 0x9e0bdb0 0x9e0d020)
        (CXXDependentScopeMemberExpr 0x9fa1638 <col:29, col:35> '<dependent type>' lvalue
          (CXXThisExpr 0x9fa1628 <col:29> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x9fa168c <col:45, col:55> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9e11680 'in' 'const openmode':'const enum std::_Ios_Openmode'))")
  (IfStmt 0x9fa1a40 <line:136:7, line:143:2>
    <<<NULL>>>
    (ImplicitCastExpr 0x9fa1740 <line:136:11> '_Bool' <LValueToRValue>
      (DeclRefExpr 0x9fa1728 <col:11> 'const _Bool' lvalue Var 0x9fa15f0 '__testin' 'const _Bool'))
    (CompoundStmt 0x9fa1a28 <line:137:2, line:143:2>
      (CallExpr 0x9fa1780 <line:139:4, col:20> '<dependent type>'
        (MemberExpr 0x9fa1760 <col:4> '<bound member function type>' ->_M_update_egptr 0x9f8f7b0
          (CXXThisExpr 0x9fa1750 <col:4> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
      (IfStmt 0x9fa1a08 <line:141:4, line:142:52>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9fa18b8 <line:141:8, col:35> '<dependent type>'
          (UnresolvedLookupExpr 0x9fa1870 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bac3c0 0x9bc2c90 0x9bc5590 0x9d61190 0x9d616c0 0x9d61bf0)
          (CallExpr 0x9fa17e8 <col:8, col:19> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9fa17b0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9fa17a0 <col:8> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
          (CallExpr 0x9fa1850 <col:23, col:35> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9fa1818 <col:23, col:29> '<dependent type>' lvalue
              (CXXThisExpr 0x9fa1808 <col:23> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
        (BinaryOperator 0x9fa19f0 <line:142:6, col:52> '<dependent type>' '='
          (DeclRefExpr 0x9fa18dc <col:6> 'int_type':'typename traits_type::int_type' lvalue Var 0x9fa1520 '__ret' 'int_type':'typename traits_type::int_type')
          (CallExpr 0x9fa19d0 <col:14, col:52> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9fa1918 <col:14, col:27> '<dependent type>' lvalue)
            (UnaryOperator 0x9fa19b8 <col:39, col:51> '<dependent type>' prefix '*'
              (CallExpr 0x9fa1998 <col:40, col:51> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9fa1960 <col:40, col:46> '<dependent type>' lvalue
                  (CXXThisExpr 0x9fa1950 <col:40> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9fa1a78 <line:144:7, col:14>
    (DeclRefExpr 0x9fa1a5c <col:14> 'int_type':'typename traits_type::int_type' lvalue Var 0x9fa1520 '__ret' 'int_type':'typename traits_type::int_type')))


    typename basic_stringbuf<_CharT, _Traits, _Alloc>::pos_type seekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode = (CXXOperatorCallExpr 0x9f8fd58 </usr/include/c++/4.6/sstream:217:36, col:61> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0x9f8fd48 <col:49, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0x9f8fd30 <col:49, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9e0bfe0 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0x9f8fd10 <col:36, col:46> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x9f8fcac <col:36, col:46> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9e11680 'in' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0x9f8fd20 <col:51, col:61> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x9f8fcec <col:51, col:61> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9e116e0 'out' 'const openmode':'const enum std::_Ios_Openmode')))
) (CompoundStmt 0x9fa4158 </usr/include/c++/4.6/bits/sstream.tcc:151:5, line:193:5>
  (DeclStmt 0x9fa23d8 <line:152:7, col:47>
    0x9fa2320 "pos_type __ret =
      (CXXUnresolvedConstructExpr 0x9fa23b8 <col:25, col:46> 'pos_type':'typename traits_type::pos_type'
        (CXXUnresolvedConstructExpr 0x9fa2398 <col:34, col:45> 'off_type':'typename traits_type::off_type'
          (UnaryOperator 0x9fa2380 <col:43, col:44> 'int' prefix '-'
            (IntegerLiteral 0x9fa2368 <col:44> 'int' 1))))")
  (DeclStmt 0x9fa2650 <line:153:7, col:67>
    0x9fa23f0 "bool __testin =
      (CXXOperatorCallExpr 0x9fa2628 <col:23, col:66> '<dependent type>'
        (UnresolvedLookupExpr 0x9fa25d0 <col:63, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bacde0 0x9bc3130 0x9bc62c0 0x9c11360 0x9c32300 0x9c32670 0x9d60120 0x9d60630 0x9d60b40 0x9e73820)
        (ParenExpr 0x9fa25a0 <col:23, col:61> '<dependent type>'
          (CXXOperatorCallExpr 0x9fa2578 <col:24, col:55> '<dependent type>'
            (UnresolvedLookupExpr 0x9fa2538 <col:53, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e0a5b0 0x9e0bdb0 0x9e0d020)
            (CXXOperatorCallExpr 0x9fa24f8 <col:24, col:45> '<dependent type>'
              (UnresolvedLookupExpr 0x9fa24b8 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e0a5b0 0x9e0bdb0 0x9e0d020)
              (DeclRefExpr 0x9fa2450 <col:24, col:34> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9e11680 'in' 'const openmode':'const enum std::_Ios_Openmode')
              (CXXDependentScopeMemberExpr 0x9fa2480 <col:39, col:45> '<dependent type>' lvalue
                (CXXThisExpr 0x9fa2470 <col:39> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
            (DeclRefExpr 0x9fa251c <col:55> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0x9fa2080 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode')))
        (IntegerLiteral 0x9fa25b8 <col:66> 'int' 0))")
  (DeclStmt 0x9fa28d0 <line:154:7, col:69>
    0x9fa2670 "bool __testout =
      (CXXOperatorCallExpr 0x9fa28a8 <col:24, col:68> '<dependent type>'
        (UnresolvedLookupExpr 0x9fa2850 <col:65, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bacde0 0x9bc3130 0x9bc62c0 0x9c11360 0x9c32300 0x9c32670 0x9d60120 0x9d60630 0x9d60b40 0x9e73820)
        (ParenExpr 0x9fa2820 <col:24, col:63> '<dependent type>'
          (CXXOperatorCallExpr 0x9fa27f8 <col:25, col:57> '<dependent type>'
            (UnresolvedLookupExpr 0x9fa27b8 <col:55, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e0a5b0 0x9e0bdb0 0x9e0d020)
            (CXXOperatorCallExpr 0x9fa2778 <col:25, col:47> '<dependent type>'
              (UnresolvedLookupExpr 0x9fa2738 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e0a5b0 0x9e0bdb0 0x9e0d020)
              (DeclRefExpr 0x9fa26d0 <col:25, col:35> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9e116e0 'out' 'const openmode':'const enum std::_Ios_Openmode')
              (CXXDependentScopeMemberExpr 0x9fa2700 <col:41, col:47> '<dependent type>' lvalue
                (CXXThisExpr 0x9fa26f0 <col:41> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
            (DeclRefExpr 0x9fa279c <col:57> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0x9fa2080 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode')))
        (IntegerLiteral 0x9fa2838 <col:68> 'int' 0))")
  (DeclStmt 0x9fa2a90 <line:155:7, col:78>
    0x9fa28f0 "const bool __testboth =
      (BinaryOperator 0x9fa2a40 <col:31, col:75> '_Bool' '&&'
        (BinaryOperator 0x9fa2978 <col:31, col:43> '_Bool' '&&'
          (ImplicitCastExpr 0x9fa2958 <col:31> '_Bool' <LValueToRValue>
            (DeclRefExpr 0x9fa2924 <col:31> '_Bool' lvalue Var 0x9fa23f0 '__testin' '_Bool'))
          (ImplicitCastExpr 0x9fa2968 <col:43> '_Bool' <LValueToRValue>
            (DeclRefExpr 0x9fa293c <col:43> '_Bool' lvalue Var 0x9fa2670 '__testout' '_Bool')))
        (BinaryOperator 0x9fa2a28 <col:56, col:75> '_Bool' '!='
          (ImplicitCastExpr 0x9fa2a08 <col:56> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9fa29e8 <col:56> 'class ios_base::seekdir':'enum std::_Ios_Seekdir' <LValueToRValue>
              (DeclRefExpr 0x9fa2990 <col:56> 'class ios_base::seekdir':'enum std::_Ios_Seekdir' lvalue ParmVar 0x9fa2010 '__way' 'class ios_base::seekdir':'enum std::_Ios_Seekdir')))
          (ImplicitCastExpr 0x9fa2a18 <col:65, col:75> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9fa29f8 <col:65, col:75> 'seekdir':'enum std::_Ios_Seekdir' <LValueToRValue>
              (DeclRefExpr 0x9fa29c4 <col:65, col:75> 'const seekdir':'const enum std::_Ios_Seekdir' lvalue Var 0x9e11850 'cur' 'const seekdir':'const enum std::_Ios_Seekdir')))))")
  (CompoundAssignOperator 0x9fa2bd0 <line:156:7, col:43> '_Bool' lvalue '&=' ComputeLHSTy='int' ComputeResultTy='int'
    (DeclRefExpr 0x9fa2aa0 <col:7> '_Bool' lvalue Var 0x9fa23f0 '__testin' '_Bool')
    (ImplicitCastExpr 0x9fa2bc0 <col:19, col:43> 'int' <IntegralCast>
      (UnaryOperator 0x9fa2ba8 <col:19, col:43> '_Bool' prefix '!'
        (ImplicitCastExpr 0x9fa2b98 <col:20, col:43> '_Bool' <IntegralToBoolean>
          (ParenExpr 0x9fa2b80 <col:20, col:43> 'enum std::_Ios_Openmode'
            (CXXOperatorCallExpr 0x9fa2b58 <col:21, col:40> 'enum std::_Ios_Openmode'
              (ImplicitCastExpr 0x9fa2b48 <col:28, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9fa2b30 <col:28, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9e0bdb0 'operator&' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
              (ImplicitCastExpr 0x9fa2b10 <col:21> 'class ios_base::openmode':'enum std::_Ios_Openmode' <LValueToRValue>
                (DeclRefExpr 0x9fa2ab8 <col:21> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0x9fa2080 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode'))
              (ImplicitCastExpr 0x9fa2b20 <col:30, col:40> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
                (DeclRefExpr 0x9fa2aec <col:30, col:40> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9e116e0 'out' 'const openmode':'const enum std::_Ios_Openmode'))))))))
  (CompoundAssignOperator 0x9fa2d20 <line:157:7, col:43> '_Bool' lvalue '&=' ComputeLHSTy='int' ComputeResultTy='int'
    (DeclRefExpr 0x9fa2bf0 <col:7> '_Bool' lvalue Var 0x9fa2670 '__testout' '_Bool')
    (ImplicitCastExpr 0x9fa2d10 <col:20, col:43> 'int' <IntegralCast>
      (UnaryOperator 0x9fa2cf8 <col:20, col:43> '_Bool' prefix '!'
        (ImplicitCastExpr 0x9fa2ce8 <col:21, col:43> '_Bool' <IntegralToBoolean>
          (ParenExpr 0x9fa2cd0 <col:21, col:43> 'enum std::_Ios_Openmode'
            (CXXOperatorCallExpr 0x9fa2ca8 <col:22, col:41> 'enum std::_Ios_Openmode'
              (ImplicitCastExpr 0x9fa2c98 <col:29, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9fa2c80 <col:29, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9e0bdb0 'operator&' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
              (ImplicitCastExpr 0x9fa2c60 <col:22> 'class ios_base::openmode':'enum std::_Ios_Openmode' <LValueToRValue>
                (DeclRefExpr 0x9fa2c08 <col:22> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0x9fa2080 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode'))
              (ImplicitCastExpr 0x9fa2c70 <col:31, col:41> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
                (DeclRefExpr 0x9fa2c3c <col:31, col:41> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9e11680 'in' 'const openmode':'const enum std::_Ios_Openmode'))))))))
  (DeclStmt 0x9fa2ec0 <line:161:7, col:72>
    0x9fa2d70 "const char_type *__beg =
      (ConditionalOperator 0x9fa2ea0 <col:32, col:71> '<dependent type>'
        (ImplicitCastExpr 0x9fa2e90 <col:32> '_Bool' <LValueToRValue>
          (DeclRefExpr 0x9fa2da4 <col:32> '_Bool' lvalue Var 0x9fa23f0 '__testin' '_Bool'))
        (CallExpr 0x9fa2e08 <col:43, col:55> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9fa2dd0 <col:43, col:49> '<dependent type>' lvalue
            (CXXThisExpr 0x9fa2dc0 <col:43> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
        (CallExpr 0x9fa2e70 <col:59, col:71> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9fa2e38 <col:59, col:65> '<dependent type>' lvalue
            (CXXThisExpr 0x9fa2e28 <col:59> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))")
  (IfStmt 0x9fa4110 <line:162:7, line:191:2>
    <<<NULL>>>
    (BinaryOperator 0x9fa3008 <line:162:11, col:68> '<dependent type>' '&&'
      (ParenExpr 0x9fa2f30 <col:11, col:27> '<dependent type>'
        (BinaryOperator 0x9fa2f18 <col:12, col:22> '<dependent type>' '||'
          (DeclRefExpr 0x9fa2ed0 <col:12> 'const char_type *' lvalue Var 0x9fa2d70 '__beg' 'const char_type *')
          (UnaryOperator 0x9fa2f00 <col:21, col:22> '<dependent type>' prefix '!'
            (DeclRefExpr 0x9fa2ee8 <col:22> 'off_type':'typename traits_type::off_type' lvalue ParmVar 0x9fa1fa0 '__off' 'off_type':'typename traits_type::off_type'))))
      (ParenExpr 0x9fa2ff0 <col:32, col:68> '_Bool'
        (BinaryOperator 0x9fa2fd8 <col:33, col:58> '_Bool' '||'
          (BinaryOperator 0x9fa2f98 <col:33, col:45> '_Bool' '||'
            (ImplicitCastExpr 0x9fa2f78 <col:33> '_Bool' <LValueToRValue>
              (DeclRefExpr 0x9fa2f44 <col:33> '_Bool' lvalue Var 0x9fa23f0 '__testin' '_Bool'))
            (ImplicitCastExpr 0x9fa2f88 <col:45> '_Bool' <LValueToRValue>
              (DeclRefExpr 0x9fa2f5c <col:45> '_Bool' lvalue Var 0x9fa2670 '__testout' '_Bool')))
          (ImplicitCastExpr 0x9fa2fc8 <col:58> '_Bool' <LValueToRValue>
            (DeclRefExpr 0x9fa2fb0 <col:58> 'const _Bool' lvalue Var 0x9fa28f0 '__testboth' 'const _Bool')))))
    (CompoundStmt 0x9fa40e8 <line:163:2, line:191:2>
      (CallExpr 0x9fa3050 <line:164:4, col:20> '<dependent type>'
        (MemberExpr 0x9fa3030 <col:4> '<bound member function type>' ->_M_update_egptr 0x9f8f7b0
          (CXXThisExpr 0x9fa3020 <col:4> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
      (DeclStmt 0x9fa30d0 <line:166:4, col:30>
        0x9fa3080 "off_type __newoffi =
          (DeclRefExpr 0x9fa30b4 <col:25> 'off_type':'typename traits_type::off_type' lvalue ParmVar 0x9fa1fa0 '__off' 'off_type':'typename traits_type::off_type')")
      (DeclStmt 0x9fa3140 <line:167:4, col:34>
        0x9fa30f0 "off_type __newoffo =
          (DeclRefExpr 0x9fa3124 <col:25> 'off_type':'typename traits_type::off_type' lvalue Var 0x9fa3080 '__newoffi' 'off_type':'typename traits_type::off_type')")
      (IfStmt 0x9fa3698 <line:168:4, line:174:47>
        <<<NULL>>>
        (BinaryOperator 0x9fa31e8 <line:168:8, col:27> '_Bool' '=='
          (ImplicitCastExpr 0x9fa31c8 <col:8> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9fa31a8 <col:8> 'class ios_base::seekdir':'enum std::_Ios_Seekdir' <LValueToRValue>
              (DeclRefExpr 0x9fa3150 <col:8> 'class ios_base::seekdir':'enum std::_Ios_Seekdir' lvalue ParmVar 0x9fa2010 '__way' 'class ios_base::seekdir':'enum std::_Ios_Seekdir')))
          (ImplicitCastExpr 0x9fa31d8 <col:17, col:27> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9fa31b8 <col:17, col:27> 'seekdir':'enum std::_Ios_Seekdir' <LValueToRValue>
              (DeclRefExpr 0x9fa3184 <col:17, col:27> 'const seekdir':'const enum std::_Ios_Seekdir' lvalue Var 0x9e11850 'cur' 'const seekdir':'const enum std::_Ios_Seekdir'))))
        (CompoundStmt 0x9fa3430 <line:169:6, line:172:6>
          (CompoundAssignOperator 0x9fa32f8 <line:170:8, col:36> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
            (DeclRefExpr 0x9fa3200 <col:8> 'off_type':'typename traits_type::off_type' lvalue Var 0x9fa3080 '__newoffi' 'off_type':'typename traits_type::off_type')
            (CXXOperatorCallExpr 0x9fa32d0 <col:21, col:36> '<dependent type>'
              (UnresolvedLookupExpr 0x9fa3298 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
              (CallExpr 0x9fa3260 <col:21, col:32> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9fa3228 <col:21, col:27> '<dependent type>' lvalue
                  (CXXThisExpr 0x9fa3218 <col:21> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
              (DeclRefExpr 0x9fa327c <col:36> 'const char_type *' lvalue Var 0x9fa2d70 '__beg' 'const char_type *')))
          (CompoundAssignOperator 0x9fa3410 <line:171:8, col:36> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
            (DeclRefExpr 0x9fa3318 <col:8> 'off_type':'typename traits_type::off_type' lvalue Var 0x9fa30f0 '__newoffo' 'off_type':'typename traits_type::off_type')
            (CXXOperatorCallExpr 0x9fa33e8 <col:21, col:36> '<dependent type>'
              (UnresolvedLookupExpr 0x9fa33b0 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
              (CallExpr 0x9fa3378 <col:21, col:32> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9fa3340 <col:21, col:27> '<dependent type>' lvalue
                  (CXXThisExpr 0x9fa3330 <col:21> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
              (DeclRefExpr 0x9fa3394 <col:36> 'const char_type *' lvalue Var 0x9fa2d70 '__beg' 'const char_type *'))))
        (IfStmt 0x9fa3678 <line:173:9, line:174:47>
          <<<NULL>>>
          (BinaryOperator 0x9fa34e0 <line:173:13, col:32> '_Bool' '=='
            (ImplicitCastExpr 0x9fa34c0 <col:13> 'int' <IntegralCast>
              (ImplicitCastExpr 0x9fa34a0 <col:13> 'class ios_base::seekdir':'enum std::_Ios_Seekdir' <LValueToRValue>
                (DeclRefExpr 0x9fa3448 <col:13> 'class ios_base::seekdir':'enum std::_Ios_Seekdir' lvalue ParmVar 0x9fa2010 '__way' 'class ios_base::seekdir':'enum std::_Ios_Seekdir')))
            (ImplicitCastExpr 0x9fa34d0 <col:22, col:32> 'int' <IntegralCast>
              (ImplicitCastExpr 0x9fa34b0 <col:22, col:32> 'seekdir':'enum std::_Ios_Seekdir' <LValueToRValue>
                (DeclRefExpr 0x9fa347c <col:22, col:32> 'const seekdir':'const enum std::_Ios_Seekdir' lvalue Var 0x9e118b0 'end' 'const seekdir':'const enum std::_Ios_Seekdir'))))
          (BinaryOperator 0x9fa3660 <line:174:6, col:47> '<dependent type>' '='
            (DeclRefExpr 0x9fa352c <col:6> 'off_type':'typename traits_type::off_type' lvalue Var 0x9fa30f0 '__newoffo' 'off_type':'typename traits_type::off_type')
            (CompoundAssignOperator 0x9fa3640 <col:18, col:47> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
              (DeclRefExpr 0x9fa3544 <col:18> 'off_type':'typename traits_type::off_type' lvalue Var 0x9fa3080 '__newoffi' 'off_type':'typename traits_type::off_type')
              (CXXOperatorCallExpr 0x9fa3618 <col:31, col:47> '<dependent type>'
                (UnresolvedLookupExpr 0x9fa35e0 <col:45, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
                (CallExpr 0x9fa35a8 <col:31, col:43> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9fa3570 <col:31, col:37> '<dependent type>' lvalue
                    (CXXThisExpr 0x9fa3560 <col:31> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
                (DeclRefExpr 0x9fa35c4 <col:47> 'const char_type *' lvalue Var 0x9fa2d70 '__beg' 'const char_type *'))))
          <<<NULL>>>))
      (IfStmt 0x9fa3c28 <line:176:4, line:183:6>
        <<<NULL>>>
        (BinaryOperator 0x9fa3958 <line:176:8, line:178:36> '<dependent type>' '&&'
          (BinaryOperator 0x9fa37d8 <line:176:8, line:177:24> '<dependent type>' '&&'
            (ParenExpr 0x9fa3720 <line:176:8, col:31> '_Bool'
              (BinaryOperator 0x9fa3708 <col:9, col:21> '_Bool' '||'
                (ImplicitCastExpr 0x9fa36e8 <col:9> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0x9fa36b4 <col:9> '_Bool' lvalue Var 0x9fa23f0 '__testin' '_Bool'))
                (ImplicitCastExpr 0x9fa36f8 <col:21> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0x9fa36cc <col:21> 'const _Bool' lvalue Var 0x9fa28f0 '__testboth' 'const _Bool'))))
            (CXXOperatorCallExpr 0x9fa37b0 <line:177:11, col:24> '<dependent type>'
              (UnresolvedLookupExpr 0x9fa3768 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bae1e0 0x9bc3fc0 0x9bc7850 0x9d64480 0x9d649b0 0x9d64ee0)
              (DeclRefExpr 0x9fa3734 <col:11> 'off_type':'typename traits_type::off_type' lvalue Var 0x9fa3080 '__newoffi' 'off_type':'typename traits_type::off_type')
              (IntegerLiteral 0x9fa3750 <col:24> 'int' 0)))
          (CXXOperatorCallExpr 0x9fa3930 <line:178:11, col:36> '<dependent type>'
            (UnresolvedLookupExpr 0x9fa38e8 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bae1e0 0x9bc3fc0 0x9bc7850 0x9d64480 0x9d649b0 0x9d64ee0)
            (CXXOperatorCallExpr 0x9fa38a8 <col:11, col:27> '<dependent type>'
              (UnresolvedLookupExpr 0x9fa3870 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
              (CallExpr 0x9fa3838 <col:11, col:23> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9fa3800 <col:11, col:17> '<dependent type>' lvalue
                  (CXXThisExpr 0x9fa37f0 <col:11> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
              (DeclRefExpr 0x9fa3854 <col:27> 'const char_type *' lvalue Var 0x9fa2d70 '__beg' 'const char_type *'))
            (DeclRefExpr 0x9fa38cc <col:36> 'off_type':'typename traits_type::off_type' lvalue Var 0x9fa3080 '__newoffi' 'off_type':'typename traits_type::off_type')))
        (CompoundStmt 0x9fa3c10 <line:179:6, line:183:6>
          (CallExpr 0x9fa3b78 <line:180:8, line:181:18> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9fa3980 <line:180:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9fa3970 <col:8> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
            (CallExpr 0x9fa3a00 <col:19, col:31> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9fa39c8 <col:19, col:25> '<dependent type>' lvalue
                (CXXThisExpr 0x9fa39b8 <col:19> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
            (CXXOperatorCallExpr 0x9fa3ae8 <col:34, col:50> '<dependent type>'
              (UnresolvedLookupExpr 0x9fa3aa0 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d86680 0x9d87280 0x9d5d090 0x9d5d890)
              (CallExpr 0x9fa3a68 <col:34, col:46> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9fa3a30 <col:34, col:40> '<dependent type>' lvalue
                  (CXXThisExpr 0x9fa3a20 <col:34> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
              (DeclRefExpr 0x9fa3a84 <col:50> 'off_type':'typename traits_type::off_type' lvalue Var 0x9fa3080 '__newoffi' 'off_type':'typename traits_type::off_type'))
            (CallExpr 0x9fa3b58 <line:181:5, col:17> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9fa3b20 <col:5, col:11> '<dependent type>' lvalue
                (CXXThisExpr 0x9fa3b10 <col:5> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
          (BinaryOperator 0x9fa3bf8 <line:182:8, col:34> '<dependent type>' '='
            (DeclRefExpr 0x9fa3ba0 <col:8> 'pos_type':'typename traits_type::pos_type' lvalue Var 0x9fa2320 '__ret' 'pos_type':'typename traits_type::pos_type')
            (CXXUnresolvedConstructExpr 0x9fa3bd8 <col:16, col:34> 'pos_type':'typename traits_type::pos_type'
              (DeclRefExpr 0x9fa3bc0 <col:25> 'off_type':'typename traits_type::off_type' lvalue Var 0x9fa3080 '__newoffi' 'off_type':'typename traits_type::off_type'))))
        <<<NULL>>>)
      (IfStmt 0x9fa40c8 <line:184:4, line:190:6>
        <<<NULL>>>
        (BinaryOperator 0x9fa3ee8 <line:184:8, line:186:36> '<dependent type>' '&&'
          (BinaryOperator 0x9fa3d68 <line:184:8, line:185:24> '<dependent type>' '&&'
            (ParenExpr 0x9fa3cb0 <line:184:8, col:32> '_Bool'
              (BinaryOperator 0x9fa3c98 <col:9, col:22> '_Bool' '||'
                (ImplicitCastExpr 0x9fa3c78 <col:9> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0x9fa3c44 <col:9> '_Bool' lvalue Var 0x9fa2670 '__testout' '_Bool'))
                (ImplicitCastExpr 0x9fa3c88 <col:22> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0x9fa3c5c <col:22> 'const _Bool' lvalue Var 0x9fa28f0 '__testboth' 'const _Bool'))))
            (CXXOperatorCallExpr 0x9fa3d40 <line:185:11, col:24> '<dependent type>'
              (UnresolvedLookupExpr 0x9fa3cf8 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bae1e0 0x9bc3fc0 0x9bc7850 0x9d64480 0x9d649b0 0x9d64ee0)
              (DeclRefExpr 0x9fa3cc4 <col:11> 'off_type':'typename traits_type::off_type' lvalue Var 0x9fa30f0 '__newoffo' 'off_type':'typename traits_type::off_type')
              (IntegerLiteral 0x9fa3ce0 <col:24> 'int' 0)))
          (CXXOperatorCallExpr 0x9fa3ec0 <line:186:11, col:36> '<dependent type>'
            (UnresolvedLookupExpr 0x9fa3e78 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bae1e0 0x9bc3fc0 0x9bc7850 0x9d64480 0x9d649b0 0x9d64ee0)
            (CXXOperatorCallExpr 0x9fa3e38 <col:11, col:27> '<dependent type>'
              (UnresolvedLookupExpr 0x9fa3e00 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
              (CallExpr 0x9fa3dc8 <col:11, col:23> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9fa3d90 <col:11, col:17> '<dependent type>' lvalue
                  (CXXThisExpr 0x9fa3d80 <col:11> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
              (DeclRefExpr 0x9fa3de4 <col:27> 'const char_type *' lvalue Var 0x9fa2d70 '__beg' 'const char_type *'))
            (DeclRefExpr 0x9fa3e5c <col:36> 'off_type':'typename traits_type::off_type' lvalue Var 0x9fa30f0 '__newoffo' 'off_type':'typename traits_type::off_type')))
        (CompoundStmt 0x9fa40b0 <line:187:6, line:190:6>
          (CallExpr 0x9fa4018 <line:188:8, col:56> '<dependent type>'
            (MemberExpr 0x9fa3f10 <col:8> '<bound member function type>' ->_M_pbump 0x9f8f970
              (CXXThisExpr 0x9fa3f00 <col:8> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
            (CallExpr 0x9fa3f78 <col:17, col:29> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9fa3f40 <col:17, col:23> '<dependent type>' lvalue
                (CXXThisExpr 0x9fa3f30 <col:17> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
            (CallExpr 0x9fa3fe0 <col:32, col:44> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9fa3fa8 <col:32, col:38> '<dependent type>' lvalue
                (CXXThisExpr 0x9fa3f98 <col:32> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
            (DeclRefExpr 0x9fa3ffc <col:47> 'off_type':'typename traits_type::off_type' lvalue Var 0x9fa30f0 '__newoffo' 'off_type':'typename traits_type::off_type'))
          (BinaryOperator 0x9fa4098 <line:189:8, col:34> '<dependent type>' '='
            (DeclRefExpr 0x9fa4040 <col:8> 'pos_type':'typename traits_type::pos_type' lvalue Var 0x9fa2320 '__ret' 'pos_type':'typename traits_type::pos_type')
            (CXXUnresolvedConstructExpr 0x9fa4078 <col:16, col:34> 'pos_type':'typename traits_type::pos_type'
              (DeclRefExpr 0x9fa4060 <col:25> 'off_type':'typename traits_type::off_type' lvalue Var 0x9fa30f0 '__newoffo' 'off_type':'typename traits_type::off_type'))))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9fa4148 <line:192:7, col:14>
    (DeclRefExpr 0x9fa412c <col:14> 'pos_type':'typename traits_type::pos_type' lvalue Var 0x9fa2320 '__ret' 'pos_type':'typename traits_type::pos_type')))


    typename basic_stringbuf<_CharT, _Traits, _Alloc>::pos_type seekpos(pos_type __sp, ios_base::openmode __mode = (CXXOperatorCallExpr 0x9f8fe48 </usr/include/c++/4.6/sstream:221:36, col:61> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0x9f8fe38 <col:49, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0x9f8fe20 <col:49, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9e0bfe0 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0x9f8fe00 <col:36, col:46> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x9f8fd9c <col:36, col:46> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9e11680 'in' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0x9f8fe10 <col:51, col:61> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x9f8fddc <col:51, col:61> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9e116e0 'out' 'const openmode':'const enum std::_Ios_Openmode')))
) (CompoundStmt 0x9fa5a48 </usr/include/c++/4.6/bits/sstream.tcc:199:5, line:223:5>
  (DeclStmt 0x9fa4a18 <line:200:7, col:47>
    0x9fa4960 "pos_type __ret =
      (CXXUnresolvedConstructExpr 0x9fa49f8 <col:25, col:46> 'pos_type':'typename traits_type::pos_type'
        (CXXUnresolvedConstructExpr 0x9fa49d8 <col:34, col:45> 'off_type':'typename traits_type::off_type'
          (UnaryOperator 0x9fa49c0 <col:43, col:44> 'int' prefix '-'
            (IntegerLiteral 0x9fa49a8 <col:44> 'int' 1))))")
  (DeclStmt 0x9fa4c90 <line:201:7, col:73>
    0x9fa4a30 "const bool __testin =
      (CXXOperatorCallExpr 0x9fa4c68 <col:29, col:72> '<dependent type>'
        (UnresolvedLookupExpr 0x9fa4c10 <col:69, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bacde0 0x9bc3130 0x9bc62c0 0x9c11360 0x9c32300 0x9c32670 0x9d60120 0x9d60630 0x9d60b40 0x9e73820)
        (ParenExpr 0x9fa4be0 <col:29, col:67> '<dependent type>'
          (CXXOperatorCallExpr 0x9fa4bb8 <col:30, col:61> '<dependent type>'
            (UnresolvedLookupExpr 0x9fa4b78 <col:59, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e0a5b0 0x9e0bdb0 0x9e0d020)
            (CXXOperatorCallExpr 0x9fa4b38 <col:30, col:51> '<dependent type>'
              (UnresolvedLookupExpr 0x9fa4af8 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e0a5b0 0x9e0bdb0 0x9e0d020)
              (DeclRefExpr 0x9fa4a90 <col:30, col:40> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9e11680 'in' 'const openmode':'const enum std::_Ios_Openmode')
              (CXXDependentScopeMemberExpr 0x9fa4ac0 <col:45, col:51> '<dependent type>' lvalue
                (CXXThisExpr 0x9fa4ab0 <col:45> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
            (DeclRefExpr 0x9fa4b5c <col:61> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0x9fa46d0 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode')))
        (IntegerLiteral 0x9fa4bf8 <col:72> 'int' 0))")
  (DeclStmt 0x9fa4f10 <line:202:7, col:75>
    0x9fa4cb0 "const bool __testout =
      (CXXOperatorCallExpr 0x9fa4ee8 <col:30, col:74> '<dependent type>'
        (UnresolvedLookupExpr 0x9fa4e90 <col:71, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bacde0 0x9bc3130 0x9bc62c0 0x9c11360 0x9c32300 0x9c32670 0x9d60120 0x9d60630 0x9d60b40 0x9e73820)
        (ParenExpr 0x9fa4e60 <col:30, col:69> '<dependent type>'
          (CXXOperatorCallExpr 0x9fa4e38 <col:31, col:63> '<dependent type>'
            (UnresolvedLookupExpr 0x9fa4df8 <col:61, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e0a5b0 0x9e0bdb0 0x9e0d020)
            (CXXOperatorCallExpr 0x9fa4db8 <col:31, col:53> '<dependent type>'
              (UnresolvedLookupExpr 0x9fa4d78 <col:45, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e0a5b0 0x9e0bdb0 0x9e0d020)
              (DeclRefExpr 0x9fa4d10 <col:31, col:41> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9e116e0 'out' 'const openmode':'const enum std::_Ios_Openmode')
              (CXXDependentScopeMemberExpr 0x9fa4d40 <col:47, col:53> '<dependent type>' lvalue
                (CXXThisExpr 0x9fa4d30 <col:47> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
            (DeclRefExpr 0x9fa4ddc <col:63> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0x9fa46d0 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode')))
        (IntegerLiteral 0x9fa4e78 <col:74> 'int' 0))")
  (DeclStmt 0x9fa5080 <line:204:7, col:72>
    0x9fa4f30 "const char_type *__beg =
      (ConditionalOperator 0x9fa5060 <col:32, col:71> '<dependent type>'
        (ImplicitCastExpr 0x9fa5050 <col:32> '_Bool' <LValueToRValue>
          (DeclRefExpr 0x9fa4f64 <col:32> 'const _Bool' lvalue Var 0x9fa4a30 '__testin' 'const _Bool'))
        (CallExpr 0x9fa4fc8 <col:43, col:55> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9fa4f90 <col:43, col:49> '<dependent type>' lvalue
            (CXXThisExpr 0x9fa4f80 <col:43> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
        (CallExpr 0x9fa5030 <col:59, col:71> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9fa4ff8 <col:59, col:65> '<dependent type>' lvalue
            (CXXThisExpr 0x9fa4fe8 <col:59> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))")
  (IfStmt 0x9fa5a00 <line:205:7, line:221:2>
    <<<NULL>>>
    (BinaryOperator 0x9fa51b0 <line:205:11, col:63> '<dependent type>' '&&'
      (ParenExpr 0x9fa5118 <col:11, col:36> '<dependent type>'
        (BinaryOperator 0x9fa5100 <col:12, col:35> '<dependent type>' '||'
          (DeclRefExpr 0x9fa5090 <col:12> 'const char_type *' lvalue Var 0x9fa4f30 '__beg' 'const char_type *')
          (UnaryOperator 0x9fa50e8 <col:21, col:35> '<dependent type>' prefix '!'
            (CXXUnresolvedConstructExpr 0x9fa50c8 <col:22, col:35> 'off_type':'typename traits_type::off_type'
              (DeclRefExpr 0x9fa50b0 <col:31> 'pos_type':'typename traits_type::pos_type' lvalue ParmVar 0x9fa4660 '__sp' 'pos_type':'typename traits_type::pos_type')))))
      (ParenExpr 0x9fa5198 <col:41, col:63> '_Bool'
        (BinaryOperator 0x9fa5180 <col:42, col:54> '_Bool' '||'
          (ImplicitCastExpr 0x9fa5160 <col:42> '_Bool' <LValueToRValue>
            (DeclRefExpr 0x9fa512c <col:42> 'const _Bool' lvalue Var 0x9fa4a30 '__testin' 'const _Bool'))
          (ImplicitCastExpr 0x9fa5170 <col:54> '_Bool' <LValueToRValue>
            (DeclRefExpr 0x9fa5144 <col:54> 'const _Bool' lvalue Var 0x9fa4cb0 '__testout' 'const _Bool')))))
    (CompoundStmt 0x9fa59e0 <line:206:2, line:221:2>
      (CallExpr 0x9fa51f8 <line:207:4, col:20> '<dependent type>'
        (MemberExpr 0x9fa51d8 <col:4> '<bound member function type>' ->_M_update_egptr 0x9f8f7b0
          (CXXThisExpr 0x9fa51c8 <col:4> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
      (DeclStmt 0x9fa5290 <line:209:4, col:30>
        0x9fa5220 "const off_type __pos =
          (ParenListExpr 0x9fa5270 <col:24, col:29> 'const off_type':'const typename traits_type::off_type'
            (DeclRefExpr 0x9fa5254 <col:25> 'pos_type':'typename traits_type::pos_type' lvalue ParmVar 0x9fa4660 '__sp' 'pos_type':'typename traits_type::pos_type'))")
      (DeclStmt 0x9fa5520 <line:210:4, line:211:41>
        0x9fa52b0 "const bool __testpos =
          (ParenExpr 0x9fa5508 <line:210:27, line:211:40> '<dependent type>'
            (BinaryOperator 0x9fa54f0 <line:210:28, line:211:35> '<dependent type>' '&&'
              (CXXOperatorCallExpr 0x9fa5360 <line:210:28, col:33> '<dependent type>'
                (UnresolvedLookupExpr 0x9fa5318 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9badc90 0x9bc3ba0 0x9bc6b90 0x9d63390 0x9d638c0 0x9d63df0)
                (IntegerLiteral 0x9fa52e8 <col:28> 'int' 0)
                (DeclRefExpr 0x9fa5300 <col:33> 'const off_type':'const typename traits_type::off_type' lvalue Var 0x9fa5220 '__pos' 'const off_type':'const typename traits_type::off_type'))
              (CXXOperatorCallExpr 0x9fa54c8 <line:211:10, col:35> '<dependent type>'
                (UnresolvedLookupExpr 0x9fa5480 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9badc90 0x9bc3ba0 0x9bc6b90 0x9d63390 0x9d638c0 0x9d63df0)
                (DeclRefExpr 0x9fa5384 <col:10> 'const off_type':'const typename traits_type::off_type' lvalue Var 0x9fa5220 '__pos' 'const off_type':'const typename traits_type::off_type')
                (CXXOperatorCallExpr 0x9fa5458 <col:19, col:35> '<dependent type>'
                  (UnresolvedLookupExpr 0x9fa5420 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
                  (CallExpr 0x9fa53e8 <col:19, col:31> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9fa53b0 <col:19, col:25> '<dependent type>' lvalue
                      (CXXThisExpr 0x9fa53a0 <col:19> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
                  (DeclRefExpr 0x9fa5404 <col:35> 'const char_type *' lvalue Var 0x9fa4f30 '__beg' 'const char_type *')))))")
      (IfStmt 0x9fa59c0 <line:212:4, line:220:6>
        <<<NULL>>>
        (ImplicitCastExpr 0x9fa5548 <line:212:8> '_Bool' <LValueToRValue>
          (DeclRefExpr 0x9fa5530 <col:8> 'const _Bool' lvalue Var 0x9fa52b0 '__testpos' 'const _Bool'))
        (CompoundStmt 0x9fa59a0 <line:213:6, line:220:6>
          (IfStmt 0x9fa57b0 <line:214:8, line:216:20>
            <<<NULL>>>
            (ImplicitCastExpr 0x9fa5570 <line:214:12> '_Bool' <LValueToRValue>
              (DeclRefExpr 0x9fa5554 <col:12> 'const _Bool' lvalue Var 0x9fa4a30 '__testin' 'const _Bool'))
            (CallExpr 0x9fa5788 <line:215:3, line:216:20> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9fa5590 <line:215:3, col:9> '<dependent type>' lvalue
                (CXXThisExpr 0x9fa5580 <col:3> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
              (CallExpr 0x9fa5610 <col:14, col:26> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9fa55d8 <col:14, col:20> '<dependent type>' lvalue
                  (CXXThisExpr 0x9fa55c8 <col:14> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
              (CXXOperatorCallExpr 0x9fa56f8 <col:29, col:45> '<dependent type>'
                (UnresolvedLookupExpr 0x9fa56b0 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d86680 0x9d87280 0x9d5d090 0x9d5d890)
                (CallExpr 0x9fa5678 <col:29, col:41> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9fa5640 <col:29, col:35> '<dependent type>' lvalue
                    (CXXThisExpr 0x9fa5630 <col:29> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
                (DeclRefExpr 0x9fa5694 <col:45> 'const off_type':'const typename traits_type::off_type' lvalue Var 0x9fa5220 '__pos' 'const off_type':'const typename traits_type::off_type'))
              (CallExpr 0x9fa5768 <line:216:7, col:19> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9fa5730 <col:7, col:13> '<dependent type>' lvalue
                  (CXXThisExpr 0x9fa5720 <col:7> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
            <<<NULL>>>)
          (IfStmt 0x9fa5938 <line:217:8, line:218:47>
            <<<NULL>>>
            (ImplicitCastExpr 0x9fa57e8 <line:217:12> '_Bool' <LValueToRValue>
              (DeclRefExpr 0x9fa57cc <col:12> 'const _Bool' lvalue Var 0x9fa4cb0 '__testout' 'const _Bool'))
            (CallExpr 0x9fa5910 <line:218:3, col:47> '<dependent type>'
              (MemberExpr 0x9fa5808 <col:3> '<bound member function type>' ->_M_pbump 0x9f8f970
                (CXXThisExpr 0x9fa57f8 <col:3> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
              (CallExpr 0x9fa5870 <col:12, col:24> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9fa5838 <col:12, col:18> '<dependent type>' lvalue
                  (CXXThisExpr 0x9fa5828 <col:12> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
              (CallExpr 0x9fa58d8 <col:27, col:39> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9fa58a0 <col:27, col:33> '<dependent type>' lvalue
                  (CXXThisExpr 0x9fa5890 <col:27> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
              (DeclRefExpr 0x9fa58f4 <col:42> 'const off_type':'const typename traits_type::off_type' lvalue Var 0x9fa5220 '__pos' 'const off_type':'const typename traits_type::off_type'))
            <<<NULL>>>)
          (BinaryOperator 0x9fa5988 <line:219:8, col:16> '<dependent type>' '='
            (DeclRefExpr 0x9fa5954 <col:8> 'pos_type':'typename traits_type::pos_type' lvalue Var 0x9fa4960 '__ret' 'pos_type':'typename traits_type::pos_type')
            (DeclRefExpr 0x9fa596c <col:16> 'pos_type':'typename traits_type::pos_type' lvalue ParmVar 0x9fa4660 '__sp' 'pos_type':'typename traits_type::pos_type')))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9fa5a38 <line:222:7, col:14>
    (DeclRefExpr 0x9fa5a1c <col:14> 'pos_type':'typename traits_type::pos_type' lvalue Var 0x9fa4960 '__ret' 'pos_type':'typename traits_type::pos_type')))


    void _M_sync(char_type *__base, __size_type __i, __size_type __o) (CompoundStmt 0x9fa6a78 </usr/include/c++/4.6/bits/sstream.tcc:229:5, line:254:5>
  (DeclStmt 0x9fa6088 <line:230:7, col:51>
    0x9fa5f80 "const bool __testin =
      (CXXOperatorCallExpr 0x9fa6060 <col:29, col:49> '<dependent type>'
        (UnresolvedLookupExpr 0x9fa6028 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e0bdb0)
        (MemberExpr 0x9fa5fc8 <col:29> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ->_M_mode 0x9f8e700
          (CXXThisExpr 0x9fa5fb8 <col:29> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x9fa6004 <col:39, col:49> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9e11680 'in' 'const openmode':'const enum std::_Ios_Openmode'))")
  (DeclStmt 0x9fa61a8 <line:231:7, col:53>
    0x9fa60a0 "const bool __testout =
      (CXXOperatorCallExpr 0x9fa6180 <col:30, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x9fa6148 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e0bdb0)
        (MemberExpr 0x9fa60e8 <col:30> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ->_M_mode 0x9f8e700
          (CXXThisExpr 0x9fa60d8 <col:30> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x9fa6124 <col:40, col:50> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9e116e0 'out' 'const openmode':'const enum std::_Ios_Openmode'))")
  (DeclStmt 0x9fa6318 <line:232:7, col:52>
    0x9fa61d0 "char_type *__endg =
      (CXXOperatorCallExpr 0x9fa62f0 <col:27, col:51> '<dependent type>'
        (UnresolvedLookupExpr 0x9fa62a8 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d86680 0x9d87280 0x9d5d090 0x9d5d890)
        (DeclRefExpr 0x9fa6204 <col:27> 'char_type *' lvalue ParmVar 0x9fa5df0 '__base' 'char_type *')
        (CallExpr 0x9fa6288 <col:36, col:51> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9fa6250 <col:36, col:46> '<dependent type>' lvalue
            (MemberExpr 0x9fa6230 <col:36> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0x9f8e740
              (CXXThisExpr 0x9fa6220 <col:36> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))))")
  (DeclStmt 0x9fa6488 <line:233:7, col:56>
    0x9fa6340 "char_type *__endp =
      (CXXOperatorCallExpr 0x9fa6460 <col:27, col:55> '<dependent type>'
        (UnresolvedLookupExpr 0x9fa6418 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d86680 0x9d87280 0x9d5d090 0x9d5d890)
        (DeclRefExpr 0x9fa6374 <col:27> 'char_type *' lvalue ParmVar 0x9fa5df0 '__base' 'char_type *')
        (CallExpr 0x9fa63f8 <col:36, col:55> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9fa63c0 <col:36, col:46> '<dependent type>' lvalue
            (MemberExpr 0x9fa63a0 <col:36> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0x9f8e740
              (CXXThisExpr 0x9fa6390 <col:36> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))))")
  (IfStmt 0x9fa66b8 <line:235:7, line:241:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9fa6590 <line:235:11, col:36> '<dependent type>'
      (UnresolvedLookupExpr 0x9fa6538 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bacde0 0x9bc3130 0x9bc62c0 0x9c11360 0x9c32300 0x9c32670 0x9d60120 0x9d60630 0x9d60b40 0x9e73820)
      (DeclRefExpr 0x9fa6498 <col:11> 'char_type *' lvalue ParmVar 0x9fa5df0 '__base' 'char_type *')
      (CallExpr 0x9fa6518 <col:21, col:36> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fa64e0 <col:21, col:31> '<dependent type>' lvalue
          (MemberExpr 0x9fa64c0 <col:21> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0x9f8e740
            (CXXThisExpr 0x9fa64b0 <col:21> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))))
    (CompoundStmt 0x9fa6698 <line:236:2, line:241:2>
      (CompoundAssignOperator 0x9fa65e8 <line:238:4, col:14> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
        (DeclRefExpr 0x9fa65b4 <col:4> 'char_type *' lvalue Var 0x9fa61d0 '__endg' 'char_type *')
        (DeclRefExpr 0x9fa65cc <col:14> '__size_type':'typename __string_type::size_type' lvalue ParmVar 0x9fa5e30 '__i' '__size_type':'typename __string_type::size_type'))
      (BinaryOperator 0x9fa6638 <line:239:4, col:10> '<dependent type>' '='
        (DeclRefExpr 0x9fa6608 <col:4> '__size_type':'typename __string_type::size_type' lvalue ParmVar 0x9fa5e30 '__i' '__size_type':'typename __string_type::size_type')
        (IntegerLiteral 0x9fa6620 <col:10> 'int' 0))
      (BinaryOperator 0x9fa6680 <line:240:4, col:13> '<dependent type>' '='
        (DeclRefExpr 0x9fa6650 <col:4> 'char_type *' lvalue Var 0x9fa6340 '__endp' 'char_type *')
        (DeclRefExpr 0x9fa6668 <col:13> 'char_type *' lvalue Var 0x9fa61d0 '__endg' 'char_type *')))
    <<<NULL>>>)
  (IfStmt 0x9fa6840 <line:243:7, line:244:41>
    <<<NULL>>>
    (ImplicitCastExpr 0x9fa66f0 <line:243:11> '_Bool' <LValueToRValue>
      (DeclRefExpr 0x9fa66d4 <col:11> 'const _Bool' lvalue Var 0x9fa5f80 '__testin' 'const _Bool'))
    (CallExpr 0x9fa6818 <line:244:2, col:41> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9fa6710 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0x9fa6700 <col:2> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9fa6744 <col:13> 'char_type *' lvalue ParmVar 0x9fa5df0 '__base' 'char_type *')
      (CXXOperatorCallExpr 0x9fa67d8 <col:21, col:30> '<dependent type>'
        (UnresolvedLookupExpr 0x9fa6790 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d86680 0x9d87280 0x9d5d090 0x9d5d890)
        (DeclRefExpr 0x9fa675c <col:21> 'char_type *' lvalue ParmVar 0x9fa5df0 '__base' 'char_type *')
        (DeclRefExpr 0x9fa6774 <col:30> '__size_type':'typename __string_type::size_type' lvalue ParmVar 0x9fa5e30 '__i' '__size_type':'typename __string_type::size_type'))
      (DeclRefExpr 0x9fa67fc <col:35> 'char_type *' lvalue Var 0x9fa61d0 '__endg' 'char_type *'))
    <<<NULL>>>)
  (IfStmt 0x9fa6a58 <line:245:7, line:253:2>
    <<<NULL>>>
    (ImplicitCastExpr 0x9fa6878 <line:245:11> '_Bool' <LValueToRValue>
      (DeclRefExpr 0x9fa685c <col:11> 'const _Bool' lvalue Var 0x9fa60a0 '__testout' 'const _Bool'))
    (CompoundStmt 0x9fa6a40 <line:246:2, line:253:2>
      (CallExpr 0x9fa6900 <line:247:4, col:32> '<dependent type>'
        (MemberExpr 0x9fa6898 <col:4> '<bound member function type>' ->_M_pbump 0x9f8f970
          (CXXThisExpr 0x9fa6888 <col:4> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x9fa68b8 <col:13> 'char_type *' lvalue ParmVar 0x9fa5df0 '__base' 'char_type *')
        (DeclRefExpr 0x9fa68d0 <col:21> 'char_type *' lvalue Var 0x9fa6340 '__endp' 'char_type *')
        (DeclRefExpr 0x9fa68e8 <col:29> '__size_type':'typename __string_type::size_type' lvalue ParmVar 0x9fa5e70 '__o' '__size_type':'typename __string_type::size_type'))
      (IfStmt 0x9fa6a20 <line:251:4, line:252:39>
        <<<NULL>>>
        (UnaryOperator 0x9fa6950 <line:251:8, col:9> '_Bool' prefix '!'
          (ImplicitCastExpr 0x9fa6940 <col:9> '_Bool' <LValueToRValue>
            (DeclRefExpr 0x9fa6928 <col:9> 'const _Bool' lvalue Var 0x9fa5f80 '__testin' 'const _Bool')))
        (CallExpr 0x9fa69f8 <line:252:6, col:39> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9fa6978 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x9fa6968 <col:6> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
          (DeclRefExpr 0x9fa69ac <col:17> 'char_type *' lvalue Var 0x9fa61d0 '__endg' 'char_type *')
          (DeclRefExpr 0x9fa69c4 <col:25> 'char_type *' lvalue Var 0x9fa61d0 '__endg' 'char_type *')
          (DeclRefExpr 0x9fa69dc <col:33> 'char_type *' lvalue Var 0x9fa61d0 '__endg' 'char_type *'))
        <<<NULL>>>))
    <<<NULL>>>))


    void _M_pbump(char_type *__pbeg, char_type *__pend, off_type __off) (CompoundStmt 0x9fa7460 </usr/include/c++/4.6/bits/sstream.tcc:260:5, line:268:5>
  (CallExpr 0x9fa7038 <line:261:7, col:32> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9fa6fd0 <col:7, col:13> '<dependent type>' lvalue
      (CXXThisExpr 0x9fa6fc0 <col:7> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9fa7004 <col:18> 'char_type *' lvalue ParmVar 0x9fa6e30 '__pbeg' 'char_type *')
    (DeclRefExpr 0x9fa701c <col:26> 'char_type *' lvalue ParmVar 0x9fa6e80 '__pend' 'char_type *'))
  (WhileStmt 0x9fa73c8 <line:262:7, line:266:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9fa7178 <line:262:14, col:56> '<dependent type>'
      (UnresolvedLookupExpr 0x9fa7130 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bad330 0x9bc37b0 0x9bc6740 0x9d622b0 0x9d627e0 0x9d62d10)
      (DeclRefExpr 0x9fa705c <col:14> 'off_type':'typename traits_type::off_type' lvalue ParmVar 0x9fa6ec0 '__off' 'off_type':'typename traits_type::off_type')
      (DeclRefExpr 0x9fa7110 <col:22, col:56> 'const int':'const int' lvalue Var 0x9d4cfe0 '__max' 'const int':'const int'))
    (CompoundStmt 0x9fa73b0 <line:263:2, line:266:2>
      (CallExpr 0x9fa72a0 <line:264:4, col:55> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fa71b0 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x9fa71a0 <col:4> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x9fa7280 <col:16, col:50> 'const int':'const int' lvalue Var 0x9d4cfe0 '__max' 'const int':'const int'))
      (CompoundAssignOperator 0x9fa7390 <line:265:4, col:47> '<dependent type>' lvalue '-=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
        (DeclRefExpr 0x9fa72c0 <col:4> 'off_type':'typename traits_type::off_type' lvalue ParmVar 0x9fa6ec0 '__off' 'off_type':'typename traits_type::off_type')
        (DeclRefExpr 0x9fa7370 <col:13, col:47> 'const int':'const int' lvalue Var 0x9d4cfe0 '__max' 'const int':'const int'))))
  (CallExpr 0x9fa7440 <line:267:7, col:24> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9fa73f0 <col:7, col:13> '<dependent type>' lvalue
      (CXXThisExpr 0x9fa73e0 <col:7> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9fa7424 <col:19> 'off_type':'typename traits_type::off_type' lvalue ParmVar 0x9fa6ec0 '__off' 'off_type':'typename traits_type::off_type')))


    class basic_stringbuf : public basic_streambuf<char, std::char_traits<char> > {
        class basic_stringbuf;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        typedef basic_string<char_type, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef typename __string_type::size_type __size_type;
    protected:
    protected:
        ios_base::openmode _M_mode;
        __string_type _M_string;
    public:
    public:
        basic_stringbuf(ios_base::openmode __mode);
        basic_stringbuf(const __string_type &__str, ios_base::openmode __mode);
        __string_type str() const;
        void str(const __string_type &__s);
    protected:
    protected:
        void _M_stringbuf_init(ios_base::openmode __mode);
        virtual streamsize showmanyc();
        virtual int_type underflow();
        virtual int_type pbackfail(int_type __c);
        virtual int_type overflow(int_type __c);
        virtual __streambuf_type *setbuf(char_type *__s, streamsize __n);
        virtual pos_type seekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        virtual pos_type seekpos(pos_type __sp, ios_base::openmode __mode);
        void _M_sync(char_type *__base, __size_type __i, __size_type __o);
        void _M_update_egptr();
        void _M_pbump(char_type *__pbeg, char_type *__pend, off_type __off);
        inline std::basic_stringbuf<char> &operator=(const std::basic_stringbuf<char> &);
        inline void ~basic_stringbuf();
        inline basic_stringbuf(const std::basic_stringbuf<char> &);
    };
    class basic_istringstream : public basic_istream<char, std::char_traits<char> > {
        class basic_istringstream;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<char, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef basic_stringbuf<char, std::char_traits<char>, std::allocator<char> > __stringbuf_type;
        typedef basic_istream<char_type, traits_type> __istream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_istringstream(ios_base::openmode __mode);
        basic_istringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_istringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_istringstream<char> &operator=(const std::basic_istringstream<char> &);
    };
    class basic_ostringstream : public basic_ostream<char, std::char_traits<char> > {
        class basic_ostringstream;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<char, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef basic_stringbuf<char, std::char_traits<char>, std::allocator<char> > __stringbuf_type;
        typedef basic_ostream<char_type, traits_type> __ostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_ostringstream(ios_base::openmode __mode);
        basic_ostringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_ostringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_ostringstream<char> &operator=(const std::basic_ostringstream<char> &);
    };
    class basic_stringstream : public basic_iostream<char, std::char_traits<char> > {
        class basic_stringstream;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<char, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef basic_stringbuf<char, std::char_traits<char>, std::allocator<char> > __stringbuf_type;
        typedef basic_iostream<char_type, traits_type> __iostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_stringstream(ios_base::openmode __m);
        basic_stringstream(const __string_type &__str, ios_base::openmode __m);
        void ~basic_stringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_stringstream<char> &operator=(const std::basic_stringstream<char> &);
        inline basic_stringstream(const std::basic_stringstream<char> &);
    };
    class basic_stringbuf : public basic_streambuf<wchar_t, std::char_traits<wchar_t> > {
        class basic_stringbuf;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        typedef basic_string<char_type, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef typename __string_type::size_type __size_type;
    protected:
    protected:
        ios_base::openmode _M_mode;
        __string_type _M_string;
    public:
    public:
        basic_stringbuf(ios_base::openmode __mode);
        basic_stringbuf(const __string_type &__str, ios_base::openmode __mode);
        __string_type str() const;
        void str(const __string_type &__s);
    protected:
    protected:
        void _M_stringbuf_init(ios_base::openmode __mode);
        virtual streamsize showmanyc();
        virtual int_type underflow();
        virtual int_type pbackfail(int_type __c);
        virtual int_type overflow(int_type __c);
        virtual __streambuf_type *setbuf(char_type *__s, streamsize __n);
        virtual pos_type seekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        virtual pos_type seekpos(pos_type __sp, ios_base::openmode __mode);
        void _M_sync(char_type *__base, __size_type __i, __size_type __o);
        void _M_update_egptr();
        void _M_pbump(char_type *__pbeg, char_type *__pend, off_type __off);
        inline std::basic_stringbuf<wchar_t> &operator=(const std::basic_stringbuf<wchar_t> &);
        inline void ~basic_stringbuf();
        inline basic_stringbuf(const std::basic_stringbuf<wchar_t> &);
    };
    class basic_istringstream : public basic_istream<wchar_t, std::char_traits<wchar_t> > {
        class basic_istringstream;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __stringbuf_type;
        typedef basic_istream<char_type, traits_type> __istream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_istringstream(ios_base::openmode __mode);
        basic_istringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_istringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_istringstream<wchar_t> &operator=(const std::basic_istringstream<wchar_t> &);
    };
    class basic_ostringstream : public basic_ostream<wchar_t, std::char_traits<wchar_t> > {
        class basic_ostringstream;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __stringbuf_type;
        typedef basic_ostream<char_type, traits_type> __ostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_ostringstream(ios_base::openmode __mode);
        basic_ostringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_ostringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_ostringstream<wchar_t> &operator=(const std::basic_ostringstream<wchar_t> &);
    };
    class basic_stringstream : public basic_iostream<wchar_t, std::char_traits<wchar_t> > {
        class basic_stringstream;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __stringbuf_type;
        typedef basic_iostream<char_type, traits_type> __iostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_stringstream(ios_base::openmode __m);
        basic_stringstream(const __string_type &__str, ios_base::openmode __m);
        void ~basic_stringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_stringstream<wchar_t> &operator=(const std::basic_stringstream<wchar_t> &);
        inline basic_stringstream(const std::basic_stringstream<wchar_t> &);
    };
}
namespace std {
    template <typename _T1 = std::basic_string<wchar_t>, typename _T2 = std::basic_string<wchar_t>> inline void _Construct(std::basic_string<wchar_t> *__p, const std::basic_string<wchar_t> &__value) (CompoundStmt 0xa0e8e58 </usr/include/c++/4.6/bits/stl_construct.h:81:5, line:85:5>
  (CXXNewExpr 0xa0e8e18 <line:84:7, col:49> 'class std::basic_string<wchar_t> *'
    (CXXStaticCastExpr 0xa0e8c60 <col:13, col:35> 'void *' static_cast<void *> <NoOp>
      (ImplicitCastExpr 0xa0e8c50 <col:32> 'void *' <BitCast>
        (ImplicitCastExpr 0xa0e8c40 <col:32> 'class std::basic_string<wchar_t> *' <LValueToRValue>
          (DeclRefExpr 0xa0e8c28 <col:32> 'class std::basic_string<wchar_t> *' lvalue ParmVar 0xa0e87a0 '__p' 'class std::basic_string<wchar_t> *'))))
    (DeclRefExpr 0xa0e8c78 <col:42> 'const class std::basic_string<wchar_t>':'const class std::basic_string<wchar_t>' lvalue ParmVar 0xa0e8830 '__value' 'const class std::basic_string<wchar_t> &')))

template <typename _T1, typename _T2> inline void _Construct(_T1 *__p, const _T2 &__value) (CompoundStmt 0x9fbc1a0 </usr/include/c++/4.6/bits/stl_construct.h:81:5, line:85:5>
  (CXXNewExpr 0x9fbc160 <line:84:7, col:49> '_T1 *'
    (CXXStaticCastExpr 0x9fbc128 <col:13, col:35> 'void *' static_cast<void *> <Dependent>
      (DeclRefExpr 0x9fbc100 <col:32> '_T1 *' lvalue ParmVar 0x9fbbf60 '__p' '_T1 *'))
    (DeclRefExpr 0x9fbc140 <col:42> 'const _T2' lvalue ParmVar 0x9fbbfd0 '__value' 'const _T2 &')))

;
    template <typename _Tp = std::basic_string<wchar_t>> inline void _Destroy(std::basic_string<wchar_t> *__pointer) (CompoundStmt 0xa0deaf0 </usr/include/c++/4.6/bits/stl_construct.h:94:5, col:26>
  (CXXMemberCallExpr 0xa0dead0 <col:7, col:23> 'void'
    (MemberExpr 0xa0deaac <col:7, col:19> '<bound member function type>' ->~basic_string 0x9dc6480
      (ImplicitCastExpr 0xa0deaa0 <col:7> 'class std::basic_string<wchar_t> *' <LValueToRValue>
        (DeclRefExpr 0xa0dea7c <col:7> 'class std::basic_string<wchar_t> *' lvalue ParmVar 0xa0de7c0 '__pointer' 'class std::basic_string<wchar_t> *')))))

template <typename _Tp> inline void _Destroy(_Tp *__pointer) (CompoundStmt 0x9fbc3d0 </usr/include/c++/4.6/bits/stl_construct.h:94:5, col:26>
  (CallExpr 0x9fbc3b0 <col:7, col:23> 'void'
    (CXXPseudoDestructorExpr 0x9fbc380 <col:7, col:19> 'void (*)(void)'
      (DeclRefExpr 0x9fbc35c <col:7> '_Tp *' lvalue ParmVar 0x9fbc250 '__pointer' '_Tp *'))))

;
    template <bool = true> struct _Destroy_aux {
        struct _Destroy_aux;
        template <typename _ForwardIterator> static void __destroy(_ForwardIterator, _ForwardIterator) (CompoundStmt 0x9fbce60 </usr/include/c++/4.6/bits/stl_construct.h:113:55, col:57>)

;
    }
template <bool = false> struct _Destroy_aux {
        struct _Destroy_aux;
        template <typename _ForwardIterator = std::basic_string<wchar_t> *> static void __destroy(std::basic_string<wchar_t> *__first, std::basic_string<wchar_t> *__last) (CompoundStmt 0xa0de9a0 </usr/include/c++/4.6/bits/stl_construct.h:102:2, line:105:2>
  (ForStmt 0xa0de978 <line:103:4, line:104:46>
    <<<NULL>>>
    <<<NULL>>>
    (BinaryOperator 0xa0de398 <line:103:11, col:22> '_Bool' '!='
      (ImplicitCastExpr 0xa0de378 <col:11> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' <LValueToRValue>
        (DeclRefExpr 0xa0de348 <col:11> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' lvalue ParmVar 0xa0de0b0 '__first' 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *'))
      (ImplicitCastExpr 0xa0de388 <col:22> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' <LValueToRValue>
        (DeclRefExpr 0xa0de360 <col:22> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' lvalue ParmVar 0xa0de0f0 '__last' 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *')))
    (UnaryOperator 0xa0de3c8 <col:30, col:32> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' lvalue prefix '++'
      (DeclRefExpr 0xa0de3b0 <col:32> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' lvalue ParmVar 0xa0de0b0 '__first' 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *'))
    (CallExpr 0xa0de958 <line:104:6, col:46> 'void'
      (ImplicitCastExpr 0xa0de948 <col:6, col:11> 'void (*)(class std::basic_string<wchar_t> *)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0de8e8 <col:6, col:11> 'void (class std::basic_string<wchar_t> *)' lvalue Function 0xa0de840 '_Destroy' 'void (class std::basic_string<wchar_t> *)' (FunctionTemplate 0x9fbc330 '_Destroy')))
      (CallExpr 0xa0de708 <col:20, col:45> 'class std::basic_string<wchar_t> *'
        (ImplicitCastExpr 0xa0de6f8 <col:20, col:25> 'class std::basic_string<wchar_t> *(*)(class std::basic_string<wchar_t> &)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa0de698 <col:20, col:25> 'class std::basic_string<wchar_t> *(class std::basic_string<wchar_t> &)' lvalue Function 0xa0de5f0 '__addressof' 'class std::basic_string<wchar_t> *(class std::basic_string<wchar_t> &)' (FunctionTemplate 0x9ba4270 '__addressof')))
        (UnaryOperator 0xa0de478 <col:37, col:38> 'class std::basic_string<wchar_t>' lvalue prefix '*'
          (ImplicitCastExpr 0xa0de468 <col:38> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' <LValueToRValue>
            (DeclRefExpr 0xa0de44c <col:38> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' lvalue ParmVar 0xa0de0b0 '__first' 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *')))))))

template <typename _ForwardIterator> static void __destroy(_ForwardIterator __first, _ForwardIterator __last);
    }
template <bool> struct _Destroy_aux {
        struct _Destroy_aux;
        template <typename _ForwardIterator> static void __destroy(_ForwardIterator __first, _ForwardIterator __last) (CompoundStmt 0x9fbca60 </usr/include/c++/4.6/bits/stl_construct.h:102:2, line:105:2>
  (ForStmt 0x9fbca38 <line:103:4, line:104:46>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9fbc8b8 <line:103:11, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0x9fbc860 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bacde0 0x9bc3130 0x9bc62c0 0x9c11360 0x9c32300 0x9c32670 0x9d60120 0x9d60630 0x9d60b40 0x9e73820)
      (DeclRefExpr 0x9fbc830 <col:11> '_ForwardIterator' lvalue ParmVar 0x9fbc6b0 '__first' '_ForwardIterator')
      (DeclRefExpr 0x9fbc848 <col:22> '_ForwardIterator' lvalue ParmVar 0x9fbc6f0 '__last' '_ForwardIterator'))
    (UnaryOperator 0x9fbc8f8 <col:30, col:32> '<dependent type>' prefix '++'
      (DeclRefExpr 0x9fbc8dc <col:32> '_ForwardIterator' lvalue ParmVar 0x9fbc6b0 '__first' '_ForwardIterator'))
    (CallExpr 0x9fbca18 <line:104:6, col:46> '<dependent type>'
      (UnresolvedLookupExpr 0x9fbc940 <col:6, col:11> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fbc330)
      (CallExpr 0x9fbc9f8 <col:20, col:45> '<dependent type>'
        (UnresolvedLookupExpr 0x9fbc990 <col:20, col:25> '<overloaded function type>' lvalue (no ADL) = '1' 0x9ba4270)
        (UnaryOperator 0x9fbc9e0 <col:37, col:38> '<dependent type>' prefix '*'
          (DeclRefExpr 0x9fbc9c4 <col:38> '_ForwardIterator' lvalue ParmVar 0x9fbc6b0 '__first' '_ForwardIterator'))))))

;
    };
    struct _Destroy_aux {
        struct _Destroy_aux;
        template <typename _ForwardIterator> static void __destroy(_ForwardIterator, _ForwardIterator) (CompoundStmt 0x9fbce60 </usr/include/c++/4.6/bits/stl_construct.h:113:55, col:57>)

;
    };
    template <typename _ForwardIterator = std::basic_string<wchar_t> *> inline void _Destroy(std::basic_string<wchar_t> *__first, std::basic_string<wchar_t> *__last) (CompoundStmt 0xa0de2b0 </usr/include/c++/4.6/bits/stl_construct.h:124:5, line:129:5>
  (DeclStmt 0xa0ddc00 <line:125:7, line:126:35>
    0xa0ddbd0 "typedef typename iterator_traits<class basic_string<wchar_t> *>::value_type _Value_type")
  (CallExpr 0xa0de268 <line:127:7, line:128:27> 'void'
    (ImplicitCastExpr 0xa0de258 <line:127:7, line:128:2> 'void (*)(class std::basic_string<wchar_t> *, class std::basic_string<wchar_t> *)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa0de210 <line:127:7, line:128:2> 'void (class std::basic_string<wchar_t> *, class std::basic_string<wchar_t> *)' lvalue CXXMethod 0xa0de170 '__destroy' 'void (class std::basic_string<wchar_t> *, class std::basic_string<wchar_t> *)' (FunctionTemplate 0xa0ddfa0 '__destroy')))
    (ImplicitCastExpr 0xa0de290 <col:12> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' <LValueToRValue>
      (DeclRefExpr 0xa0de024 <col:12> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' lvalue ParmVar 0xa0dd590 '__first' 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *'))
    (ImplicitCastExpr 0xa0de2a0 <col:21> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' <LValueToRValue>
      (DeclRefExpr 0xa0de03c <col:21> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' lvalue ParmVar 0xa0dd5d0 '__last' 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *'))))

template <typename _ForwardIterator> inline void _Destroy(_ForwardIterator __first, _ForwardIterator __last) (CompoundStmt 0x9fbd308 </usr/include/c++/4.6/bits/stl_construct.h:124:5, line:129:5>
  (DeclStmt 0x9fbd140 <line:125:7, line:126:35>
    0x9fbd110 "typedef typename iterator_traits<_ForwardIterator>::value_type _Value_type")
  (CallExpr 0x9fbd2e0 <line:127:7, line:128:27> '<dependent type>'
    (DependentScopeDeclRefExpr 0x9fbd288 <line:127:7, line:128:2> '<dependent type>' lvalue)
    (DeclRefExpr 0x9fbd2ac <col:12> '_ForwardIterator' lvalue ParmVar 0x9fbced0 '__first' '_ForwardIterator')
    (DeclRefExpr 0x9fbd2c4 <col:21> '_ForwardIterator' lvalue ParmVar 0x9fbcf10 '__last' '_ForwardIterator')))

;
    template <typename _Tp = char> class allocator : public __gnu_cxx::new_allocator<char> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef char *pointer;
        typedef const char *const_pointer;
        typedef char &reference;
        typedef const char &const_reference;
        typedef char value_type;
        template <typename _Tp1 = char> struct rebind {
            struct rebind;
            typedef allocator<char> other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw();
        allocator(const std::allocator<char> &__a) throw();
        template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw();
    }
template <typename _Tp = wchar_t> class allocator : public __gnu_cxx::new_allocator<wchar_t> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef wchar_t *pointer;
        typedef const wchar_t *const_pointer;
        typedef wchar_t &reference;
        typedef const wchar_t &const_reference;
        typedef wchar_t value_type;
        template <typename _Tp1 = char> struct rebind {
            struct rebind;
            typedef allocator<char> other;
        }
template <typename _Tp1 = wchar_t> struct rebind {
            struct rebind;
            typedef allocator<wchar_t> other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw() : __gnu_cxx::new_allocator<wchar_t>() (CompoundStmt 0x9c31668 </usr/include/c++/4.6/bits/allocator.h:107:27, col:29>)


        allocator(const std::allocator<wchar_t> &__a) throw() : __gnu_cxx::new_allocator<wchar_t>((ImplicitCastExpr 0xa0d6e10 </usr/include/c++/4.6/bits/allocator.h:110:39> 'const class __gnu_cxx::new_allocator<wchar_t>' lvalue <DerivedToBase (new_allocator)>
  (DeclRefExpr 0xa0d6b64 <col:39> 'const class std::allocator<wchar_t>' lvalue ParmVar 0x9c37df0 '__a' 'const class std::allocator<wchar_t> &'))
) (CompoundStmt 0x9c31780 </usr/include/c++/4.6/bits/allocator.h:110:44, col:46>)


        template <typename _Tp1 = wchar_t> allocator(const allocator<wchar_t> &) throw()template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw() (CompoundStmt 0x9c317a0 </usr/include/c++/4.6/bits/allocator.h:115:28, col:30>)


    }
template <typename _Tp = std::basic_string<wchar_t>> class allocator : public __gnu_cxx::new_allocator<basic_string<wchar_t> > {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef std::basic_string<wchar_t> *pointer;
        typedef const std::basic_string<wchar_t> *const_pointer;
        typedef std::basic_string<wchar_t> &reference;
        typedef const std::basic_string<wchar_t> &const_reference;
        typedef std::basic_string<wchar_t> value_type;
        template <typename _Tp1 = std::basic_string<wchar_t>> struct rebind {
            struct rebind;
            typedef allocator<std::basic_string<wchar_t> > other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw() : __gnu_cxx::new_allocator<basic_string<wchar_t> >() (CompoundStmt 0x9c31668 </usr/include/c++/4.6/bits/allocator.h:107:27, col:29>)


        allocator(const std::allocator<std::basic_string<wchar_t> > &__a) throw() : __gnu_cxx::new_allocator<basic_string<wchar_t> >((ImplicitCastExpr 0x9e295f0 </usr/include/c++/4.6/bits/allocator.h:110:39> 'const class __gnu_cxx::new_allocator<class std::basic_string<wchar_t> >' lvalue <DerivedToBase (new_allocator)>
  (DeclRefExpr 0x9e29348 <col:39> 'const class std::allocator<class std::basic_string<wchar_t> >' lvalue ParmVar 0xa0b9cb0 '__a' 'const class std::allocator<class std::basic_string<wchar_t> > &'))
) (CompoundStmt 0x9c31780 </usr/include/c++/4.6/bits/allocator.h:110:44, col:46>)


        template <typename _Tp1 = std::basic_string<wchar_t>> allocator(const allocator<std::basic_string<wchar_t> > &) throw()template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw() (CompoundStmt 0x9c317a0 </usr/include/c++/4.6/bits/allocator.h:115:28, col:30>)


    }
template <typename _Tp = void> class allocator {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef void *pointer;
        typedef const void *const_pointer;
        typedef void value_type;
        template <typename _Tp1> struct rebind {
            struct rebind;
            typedef allocator<_Tp1> other;
        };
    }
template <typename _Tp = std::basic_string<char>> class allocator
template <typename _Tp> class allocator;
    template <typename _ForwardIterator = std::basic_string<wchar_t> *, typename _Allocator = std::allocator<std::basic_string<wchar_t> >> void _Destroy(std::basic_string<wchar_t> *__first, std::basic_string<wchar_t> *__last, std::allocator<std::basic_string<wchar_t> > &__alloc)template <typename _ForwardIterator, typename _Allocator> void _Destroy(_ForwardIterator __first, _ForwardIterator __last, _Allocator &__alloc) (CompoundStmt 0x9fbd8e0 </usr/include/c++/4.6/bits/stl_construct.h:143:5, line:146:5>
  (ForStmt 0x9fbd8b8 <line:144:7, line:145:44>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9fbd750 <line:144:14, col:25> '<dependent type>'
      (UnresolvedLookupExpr 0x9fbd6f8 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bacde0 0x9bc3130 0x9bc62c0 0x9c11360 0x9c32300 0x9c32670 0x9d60120 0x9d60630 0x9d60b40 0x9e73820)
      (DeclRefExpr 0x9fbd6c4 <col:14> '_ForwardIterator' lvalue ParmVar 0x9fbd4c0 '__first' '_ForwardIterator')
      (DeclRefExpr 0x9fbd6dc <col:25> '_ForwardIterator' lvalue ParmVar 0x9fbd500 '__last' '_ForwardIterator'))
    (UnaryOperator 0x9fbd790 <col:33, col:35> '<dependent type>' prefix '++'
      (DeclRefExpr 0x9fbd774 <col:35> '_ForwardIterator' lvalue ParmVar 0x9fbd4c0 '__first' '_ForwardIterator'))
    (CallExpr 0x9fbd898 <line:145:2, col:44> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9fbd7c0 <col:2, col:10> '<dependent type>' lvalue
        (DeclRefExpr 0x9fbd7a4 <col:2> '_Allocator' lvalue ParmVar 0x9fbd570 '__alloc' '_Allocator &'))
      (CallExpr 0x9fbd878 <col:18, col:43> '<dependent type>'
        (UnresolvedLookupExpr 0x9fbd810 <col:18, col:23> '<overloaded function type>' lvalue (no ADL) = '1' 0x9ba4270)
        (UnaryOperator 0x9fbd860 <col:35, col:36> '<dependent type>' prefix '*'
          (DeclRefExpr 0x9fbd844 <col:36> '_ForwardIterator' lvalue ParmVar 0x9fbd4c0 '__first' '_ForwardIterator'))))))

;
    template <typename _ForwardIterator = std::basic_string<wchar_t> *, typename _Tp = std::basic_string<wchar_t>> inline void _Destroy(std::basic_string<wchar_t> *__first, std::basic_string<wchar_t> *__last, allocator<std::basic_string<wchar_t> > &) (CompoundStmt 0xa0dd7d0 </usr/include/c++/4.6/bits/stl_construct.h:152:5, line:154:5>
  (CallExpr 0xa0dd788 <line:153:7, col:31> 'void'
    (ImplicitCastExpr 0xa0dd778 <col:7> 'void (*)(class std::basic_string<wchar_t> *, class std::basic_string<wchar_t> *)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa0dd718 <col:7> 'void (class std::basic_string<wchar_t> *, class std::basic_string<wchar_t> *)' lvalue Function 0xa0dd670 '_Destroy' 'void (class std::basic_string<wchar_t> *, class std::basic_string<wchar_t> *)' (FunctionTemplate 0x9fbcff0 '_Destroy')))
    (ImplicitCastExpr 0xa0dd7b0 <col:16> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' <LValueToRValue>
      (DeclRefExpr 0xa0dd4e8 <col:16> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' lvalue ParmVar 0xa0dcf40 '__first' 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *'))
    (ImplicitCastExpr 0xa0dd7c0 <col:25> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' <LValueToRValue>
      (DeclRefExpr 0xa0dd500 <col:25> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' lvalue ParmVar 0xa0dcf80 '__last' 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *'))))

template <typename _ForwardIterator, typename _Tp> inline void _Destroy(_ForwardIterator __first, _ForwardIterator __last, allocator<_Tp> &) (CompoundStmt 0x9fbdd10 </usr/include/c++/4.6/bits/stl_construct.h:152:5, line:154:5>
  (CallExpr 0x9fbdce8 <line:153:7, col:31> '<dependent type>'
    (UnresolvedLookupExpr 0x9fbdc78 <col:7> '<overloaded function type>' lvalue (ADL) = '1' 0x9fbdc40 0x9fbd690 0x9fbcff0 0x9fbc330)
    (DeclRefExpr 0x9fbdcb8 <col:16> '_ForwardIterator' lvalue ParmVar 0x9fbd9c0 '__first' '_ForwardIterator')
    (DeclRefExpr 0x9fbdcd0 <col:25> '_ForwardIterator' lvalue ParmVar 0x9fbda00 '__last' '_ForwardIterator')))

;
}
namespace std {
    template <bool _TrivialValueTypes = true> struct __uninitialized_copy {
        struct __uninitialized_copy;
        template <typename _InputIterator, typename _ForwardIterator> static _ForwardIterator __uninit_copy(_InputIterator __first, _InputIterator __last, _ForwardIterator __result) (CompoundStmt 0x9fbecf0 </usr/include/c++/4.6/bits/stl_uninitialized.h:95:9, col:56>
  (ReturnStmt 0x9fbece0 <col:11, col:53>
    (CallExpr 0x9fbecb8 <col:18, col:53> '<dependent type>'
      (UnresolvedLookupExpr 0x9fbec38 <col:18, col:23> '<overloaded function type>' lvalue (no ADL) = '1' 0x9bebb70 0x9e76600)
      (DeclRefExpr 0x9fbec70 <col:28> '_InputIterator' lvalue ParmVar 0x9fbea60 '__first' '_InputIterator')
      (DeclRefExpr 0x9fbec88 <col:37> '_InputIterator' lvalue ParmVar 0x9fbeaa0 '__last' '_InputIterator')
      (DeclRefExpr 0x9fbeca0 <col:45> '_ForwardIterator' lvalue ParmVar 0x9fbeae0 '__result' '_ForwardIterator'))))

;
    }
template <bool _TrivialValueTypes = false> struct __uninitialized_copy {
        struct __uninitialized_copy;
        template <typename _InputIterator = __gnu_cxx::__normal_iterator<const std::basic_string<wchar_t> *, std::vector<std::basic_string<wchar_t>, std::allocator<std::basic_string<wchar_t> > > >, typename _ForwardIterator = std::basic_string<wchar_t> *> static std::basic_string<wchar_t> *__uninit_copy(__gnu_cxx::__normal_iterator<const std::basic_string<wchar_t> *, std::vector<std::basic_string<wchar_t>, std::allocator<std::basic_string<wchar_t> > > > __first, __gnu_cxx::__normal_iterator<const std::basic_string<wchar_t> *, std::vector<std::basic_string<wchar_t>, std::allocator<std::basic_string<wchar_t> > > > __last, std::basic_string<wchar_t> *__result) (CompoundStmt 0x9e2c7a0 </usr/include/c++/4.6/bits/stl_uninitialized.h:72:9, line:85:2>
  (DeclStmt 0x9e2b8b0 <line:73:4, col:37>
    0x9e2b850 "std::basic_string<wchar_t> *__cur =
      (ImplicitCastExpr 0x9e2b8a0 <col:29> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' <LValueToRValue>
        (DeclRefExpr 0x9e2b884 <col:29> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' lvalue ParmVar 0x9e2b260 '__result' 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *'))")
  (IfStmt 0x9e2c628 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:79:6>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9fbe340 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x9e2c610 </usr/include/c++/4.6/bits/stl_uninitialized.h:75:6, line:79:6>
      (ForStmt 0x9e2c5b0 <line:76:8, line:77:53>
        <<<NULL>>>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9e2c148 <line:76:15, col:26> '_Bool'
          (ImplicitCastExpr 0x9e2c138 <col:23, <invalid sloc>> '_Bool (*)(const __normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > > &, const __normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > > &)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9e2c0e8 <col:23, <invalid sloc>> '_Bool (const __normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > > &, const __normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > > &)' lvalue Function 0x9e2bc30 'operator!=' '_Bool (const __normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > > &, const __normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > > &)'))
          (ImplicitCastExpr 0x9e2c0c8 <col:15> 'const __normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >':'const class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >' lvalue <NoOp>
            (DeclRefExpr 0x9e2b918 <col:15> 'class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >':'class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >' lvalue ParmVar 0x9e2b1e0 '__first' 'class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >':'class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >'))
          (ImplicitCastExpr 0x9e2c0d8 <col:26> 'const __normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >':'const class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >' lvalue <NoOp>
            (DeclRefExpr 0x9e2b930 <col:26> 'class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >':'class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >' lvalue ParmVar 0x9e2b220 '__last' 'class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >':'class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >')))
        (BinaryOperator 0x9e2c2f8 <col:34, col:47> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' lvalue ','
          (CXXOperatorCallExpr 0x9e2c1e8 <col:34, col:36> 'class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >' lvalue
            (ImplicitCastExpr 0x9e2c1d8 <<invalid sloc>> 'class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > > &(*)(void)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9e2c1a8 <<invalid sloc>> 'class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > > &(void)' lvalue CXXMethod 0x9e25f30 'operator++' 'class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > > &(void)'))
            (DeclRefExpr 0x9e2c16c <col:36> 'class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >':'class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >' lvalue ParmVar 0x9e2b1e0 '__first' 'class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >':'class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >'))
          (UnaryOperator 0x9e2c220 <col:45, col:47> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' lvalue prefix '++'
            (DeclRefExpr 0x9e2c208 <col:47> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' lvalue Var 0x9e2b850 '__cur' 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *')))
        (CallExpr 0x9e2c588 <line:77:3, col:53> 'void'
          (ImplicitCastExpr 0x9e2c578 <col:3, col:8> 'void (*)(class std::basic_string<wchar_t> *, const class std::basic_string<wchar_t> &)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9e2c550 <col:3, col:8> 'void (class std::basic_string<wchar_t> *, const class std::basic_string<wchar_t> &)' lvalue Function 0xa0e88b0 '_Construct' 'void (class std::basic_string<wchar_t> *, const class std::basic_string<wchar_t> &)' (FunctionTemplate 0x9fbc0d0 '_Construct')))
          (CallExpr 0x9e2c420 <col:19, col:42> 'class std::basic_string<wchar_t> *'
            (ImplicitCastExpr 0x9e2c410 <col:19, col:24> 'class std::basic_string<wchar_t> *(*)(class std::basic_string<wchar_t> &)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9e2c3e8 <col:19, col:24> 'class std::basic_string<wchar_t> *(class std::basic_string<wchar_t> &)' lvalue Function 0xa0de5f0 '__addressof' 'class std::basic_string<wchar_t> *(class std::basic_string<wchar_t> &)' (FunctionTemplate 0x9ba4270 '__addressof')))
            (UnaryOperator 0x9e2c3a8 <col:36, col:37> 'class std::basic_string<wchar_t>' lvalue prefix '*'
              (ImplicitCastExpr 0x9e2c398 <col:37> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' <LValueToRValue>
                (DeclRefExpr 0x9e2c37c <col:37> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' lvalue Var 0x9e2b850 '__cur' 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *'))))
          (CXXOperatorCallExpr 0x9e2c4e8 <col:45, col:46> 'const class std::basic_string<wchar_t>':'const class std::basic_string<wchar_t>' lvalue
            (ImplicitCastExpr 0x9e2c4d8 <<invalid sloc>> 'reference (*)(void) const' <FunctionToPointerDecay>
              (DeclRefExpr 0x9e2c488 <<invalid sloc>> 'reference (void) const' lvalue CXXMethod 0x9e25c20 'operator*' 'reference (void) const'))
            (ImplicitCastExpr 0x9e2c478 <col:46> 'const class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >' lvalue <NoOp>
              (DeclRefExpr 0x9e2c440 <col:46> 'class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >':'class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >' lvalue ParmVar 0x9e2b1e0 '__first' 'class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >':'class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >')))))
      (ReturnStmt 0x9e2c600 <line:78:8, col:15>
        (ImplicitCastExpr 0x9e2c5f0 <col:15> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' <LValueToRValue>
          (DeclRefExpr 0x9e2c5d4 <col:15> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' lvalue Var 0x9e2b850 '__cur' 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *'))))
    <<<NULL>>>)
  (IfStmt 0x9e2c780 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:84:6>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9fbe660 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9e2c768 </usr/include/c++/4.6/bits/stl_uninitialized.h:81:6, line:84:6>
      (CallExpr 0x9e2c720 <line:82:8, col:37> 'void'
        (ImplicitCastExpr 0x9e2c710 <col:8, col:13> 'void (*)(class std::basic_string<wchar_t> *, class std::basic_string<wchar_t> *)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9e2c6e8 <col:8, col:13> 'void (class std::basic_string<wchar_t> *, class std::basic_string<wchar_t> *)' lvalue Function 0xa0dd670 '_Destroy' 'void (class std::basic_string<wchar_t> *, class std::basic_string<wchar_t> *)' (FunctionTemplate 0x9fbcff0 '_Destroy')))
        (ImplicitCastExpr 0x9e2c748 <col:22> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' <LValueToRValue>
          (DeclRefExpr 0x9e2c688 <col:22> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' lvalue ParmVar 0x9e2b260 '__result' 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *'))
        (ImplicitCastExpr 0x9e2c758 <col:32> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' <LValueToRValue>
          (DeclRefExpr 0x9e2c6a0 <col:32> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' lvalue Var 0x9e2b850 '__cur' 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *')))
      (NullStmt 0x9fbe730 <line:83:31>))
    <<<NULL>>>))

template <typename _InputIterator = std::basic_string<wchar_t> *, typename _ForwardIterator = std::basic_string<wchar_t> *> static std::basic_string<wchar_t> *__uninit_copy(std::basic_string<wchar_t> *__first, std::basic_string<wchar_t> *__last, std::basic_string<wchar_t> *__result) (CompoundStmt 0xa0e8c00 </usr/include/c++/4.6/bits/stl_uninitialized.h:72:9, line:85:2>
  (DeclStmt 0xa0e8430 <line:73:4, col:37>
    0xa0e83d0 "std::basic_string<wchar_t> *__cur =
      (ImplicitCastExpr 0xa0e8420 <col:29> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' <LValueToRValue>
        (DeclRefExpr 0xa0e8404 <col:29> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' lvalue ParmVar 0xa0e33a0 '__result' 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *'))")
  (IfStmt 0xa0e8a88 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:79:6>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9fbe340 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0xa0e8a70 </usr/include/c++/4.6/bits/stl_uninitialized.h:75:6, line:79:6>
      (ForStmt 0xa0e8a10 <line:76:8, line:77:53>
        <<<NULL>>>
        <<<NULL>>>
        (BinaryOperator 0xa0e84e8 <line:76:15, col:26> '_Bool' '!='
          (ImplicitCastExpr 0xa0e84c8 <col:15> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' <LValueToRValue>
            (DeclRefExpr 0xa0e8498 <col:15> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' lvalue ParmVar 0xa0e3320 '__first' 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *'))
          (ImplicitCastExpr 0xa0e84d8 <col:26> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' <LValueToRValue>
            (DeclRefExpr 0xa0e84b0 <col:26> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' lvalue ParmVar 0xa0e3360 '__last' 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *')))
        (BinaryOperator 0xa0e8560 <col:34, col:47> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' lvalue ','
          (UnaryOperator 0xa0e8518 <col:34, col:36> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' lvalue prefix '++'
            (DeclRefExpr 0xa0e8500 <col:36> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' lvalue ParmVar 0xa0e3320 '__first' 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *'))
          (UnaryOperator 0xa0e8548 <col:45, col:47> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' lvalue prefix '++'
            (DeclRefExpr 0xa0e852c <col:47> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' lvalue Var 0xa0e83d0 '__cur' 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *')))
        (CallExpr 0xa0e89d8 <line:77:3, col:53> 'void'
          (ImplicitCastExpr 0xa0e89c8 <col:3, col:8> 'void (*)(class std::basic_string<wchar_t> *, const class std::basic_string<wchar_t> &)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa0e8968 <col:3, col:8> 'void (class std::basic_string<wchar_t> *, const class std::basic_string<wchar_t> &)' lvalue Function 0xa0e88b0 '_Construct' 'void (class std::basic_string<wchar_t> *, const class std::basic_string<wchar_t> &)' (FunctionTemplate 0x9fbc0d0 '_Construct')))
          (CallExpr 0xa0e8688 <col:19, col:42> 'class std::basic_string<wchar_t> *'
            (ImplicitCastExpr 0xa0e8678 <col:19, col:24> 'class std::basic_string<wchar_t> *(*)(class std::basic_string<wchar_t> &)' <FunctionToPointerDecay>
              (DeclRefExpr 0xa0e8650 <col:19, col:24> 'class std::basic_string<wchar_t> *(class std::basic_string<wchar_t> &)' lvalue Function 0xa0de5f0 '__addressof' 'class std::basic_string<wchar_t> *(class std::basic_string<wchar_t> &)' (FunctionTemplate 0x9ba4270 '__addressof')))
            (UnaryOperator 0xa0e8610 <col:36, col:37> 'class std::basic_string<wchar_t>' lvalue prefix '*'
              (ImplicitCastExpr 0xa0e8600 <col:37> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' <LValueToRValue>
                (DeclRefExpr 0xa0e85e4 <col:37> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' lvalue Var 0xa0e83d0 '__cur' 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *'))))
          (ImplicitCastExpr 0xa0e8a00 <col:45, col:46> 'const class std::basic_string<wchar_t>':'const class std::basic_string<wchar_t>' lvalue <NoOp>
            (UnaryOperator 0xa0e86d0 <col:45, col:46> 'class std::basic_string<wchar_t>' lvalue prefix '*'
              (ImplicitCastExpr 0xa0e86c0 <col:46> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' <LValueToRValue>
                (DeclRefExpr 0xa0e86a8 <col:46> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' lvalue ParmVar 0xa0e3320 '__first' 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *'))))))
      (ReturnStmt 0xa0e8a60 <line:78:8, col:15>
        (ImplicitCastExpr 0xa0e8a50 <col:15> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' <LValueToRValue>
          (DeclRefExpr 0xa0e8a34 <col:15> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' lvalue Var 0xa0e83d0 '__cur' 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *'))))
    <<<NULL>>>)
  (IfStmt 0xa0e8be0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:84:6>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9fbe660 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa0e8bc8 </usr/include/c++/4.6/bits/stl_uninitialized.h:81:6, line:84:6>
      (CallExpr 0xa0e8b80 <line:82:8, col:37> 'void'
        (ImplicitCastExpr 0xa0e8b70 <col:8, col:13> 'void (*)(class std::basic_string<wchar_t> *, class std::basic_string<wchar_t> *)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa0e8b48 <col:8, col:13> 'void (class std::basic_string<wchar_t> *, class std::basic_string<wchar_t> *)' lvalue Function 0xa0dd670 '_Destroy' 'void (class std::basic_string<wchar_t> *, class std::basic_string<wchar_t> *)' (FunctionTemplate 0x9fbcff0 '_Destroy')))
        (ImplicitCastExpr 0xa0e8ba8 <col:22> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' <LValueToRValue>
          (DeclRefExpr 0xa0e8ae8 <col:22> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' lvalue ParmVar 0xa0e33a0 '__result' 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *'))
        (ImplicitCastExpr 0xa0e8bb8 <col:32> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' <LValueToRValue>
          (DeclRefExpr 0xa0e8b00 <col:32> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' lvalue Var 0xa0e83d0 '__cur' 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *')))
      (NullStmt 0x9fbe730 <line:83:31>))
    <<<NULL>>>))

template <typename _InputIterator, typename _ForwardIterator> static _ForwardIterator __uninit_copy(_InputIterator __first, _InputIterator __last, _ForwardIterator __result);
    }
template <bool _TrivialValueTypes> struct __uninitialized_copy {
        struct __uninitialized_copy;
        template <typename _InputIterator, typename _ForwardIterator> static _ForwardIterator __uninit_copy(_InputIterator __first, _InputIterator __last, _ForwardIterator __result) (CompoundStmt 0x9fbe778 </usr/include/c++/4.6/bits/stl_uninitialized.h:72:9, line:85:2>
  (DeclStmt 0x9fbe330 <line:73:4, col:37>
    0x9fbe2e0 "_ForwardIterator __cur =
      (DeclRefExpr 0x9fbe314 <col:29> '_ForwardIterator' lvalue ParmVar 0x9fbe190 '__result' '_ForwardIterator')")
  (IfStmt 0x9fbe640 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:79:6>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9fbe340 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x9fbe628 </usr/include/c++/4.6/bits/stl_uninitialized.h:75:6, line:79:6>
      (ForStmt 0x9fbe5d8 <line:76:8, line:77:53>
        <<<NULL>>>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9fbe3d8 <line:76:15, col:26> '<dependent type>'
          (UnresolvedLookupExpr 0x9fbe380 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bacde0 0x9bc3130 0x9bc62c0 0x9c11360 0x9c32300 0x9c32670 0x9d60120 0x9d60630 0x9d60b40 0x9e73820)
          (DeclRefExpr 0x9fbe350 <col:15> '_InputIterator' lvalue ParmVar 0x9fbe110 '__first' '_InputIterator')
          (DeclRefExpr 0x9fbe368 <col:26> '_InputIterator' lvalue ParmVar 0x9fbe150 '__last' '_InputIterator'))
        (BinaryOperator 0x9fbe460 <col:34, col:47> '<dependent type>' ','
          (UnaryOperator 0x9fbe418 <col:34, col:36> '<dependent type>' prefix '++'
            (DeclRefExpr 0x9fbe3fc <col:36> '_InputIterator' lvalue ParmVar 0x9fbe110 '__first' '_InputIterator'))
          (UnaryOperator 0x9fbe448 <col:45, col:47> '<dependent type>' prefix '++'
            (DeclRefExpr 0x9fbe42c <col:47> '_ForwardIterator' lvalue Var 0x9fbe2e0 '__cur' '_ForwardIterator')))
        (CallExpr 0x9fbe5b0 <line:77:3, col:53> '<dependent type>'
          (UnresolvedLookupExpr 0x9fbe4a8 <col:3, col:8> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fbc0d0)
          (CallExpr 0x9fbe560 <col:19, col:42> '<dependent type>'
            (UnresolvedLookupExpr 0x9fbe4f8 <col:19, col:24> '<overloaded function type>' lvalue (no ADL) = '1' 0x9ba4270)
            (UnaryOperator 0x9fbe548 <col:36, col:37> '<dependent type>' prefix '*'
              (DeclRefExpr 0x9fbe52c <col:37> '_ForwardIterator' lvalue Var 0x9fbe2e0 '__cur' '_ForwardIterator')))
          (UnaryOperator 0x9fbe598 <col:45, col:46> '<dependent type>' prefix '*'
            (DeclRefExpr 0x9fbe580 <col:46> '_InputIterator' lvalue ParmVar 0x9fbe110 '__first' '_InputIterator'))))
      (ReturnStmt 0x9fbe618 <line:78:8, col:15>
        (DeclRefExpr 0x9fbe5fc <col:15> '_ForwardIterator' lvalue Var 0x9fbe2e0 '__cur' '_ForwardIterator')))
    <<<NULL>>>)
  (IfStmt 0x9fbe758 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:84:6>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9fbe660 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9fbe740 </usr/include/c++/4.6/bits/stl_uninitialized.h:81:6, line:84:6>
      (CallExpr 0x9fbe708 <line:82:8, col:37> '<dependent type>'
        (UnresolvedLookupExpr 0x9fbe698 <col:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fbc330 0x9fbcff0 0x9fbd690 0x9fbdc40)
        (DeclRefExpr 0x9fbe6d8 <col:22> '_ForwardIterator' lvalue ParmVar 0x9fbe190 '__result' '_ForwardIterator')
        (DeclRefExpr 0x9fbe6f0 <col:32> '_ForwardIterator' lvalue Var 0x9fbe2e0 '__cur' '_ForwardIterator'))
      (NullStmt 0x9fbe730 <line:83:31>))
    <<<NULL>>>))

;
    };
    struct __uninitialized_copy {
        struct __uninitialized_copy;
        template <typename _InputIterator, typename _ForwardIterator> static _ForwardIterator __uninit_copy(_InputIterator __first, _InputIterator __last, _ForwardIterator __result) (CompoundStmt 0x9fbecf0 </usr/include/c++/4.6/bits/stl_uninitialized.h:95:9, col:56>
  (ReturnStmt 0x9fbece0 <col:11, col:53>
    (CallExpr 0x9fbecb8 <col:18, col:53> '<dependent type>'
      (UnresolvedLookupExpr 0x9fbec38 <col:18, col:23> '<overloaded function type>' lvalue (no ADL) = '1' 0x9bebb70 0x9e76600)
      (DeclRefExpr 0x9fbec70 <col:28> '_InputIterator' lvalue ParmVar 0x9fbea60 '__first' '_InputIterator')
      (DeclRefExpr 0x9fbec88 <col:37> '_InputIterator' lvalue ParmVar 0x9fbeaa0 '__last' '_InputIterator')
      (DeclRefExpr 0x9fbeca0 <col:45> '_ForwardIterator' lvalue ParmVar 0x9fbeae0 '__result' '_ForwardIterator'))))

;
    };
    template <typename _InputIterator = __gnu_cxx::__normal_iterator<const std::basic_string<wchar_t> *, std::vector<std::basic_string<wchar_t>, std::allocator<std::basic_string<wchar_t> > > >, typename _ForwardIterator = std::basic_string<wchar_t> *> inline std::basic_string<wchar_t> *uninitialized_copy(__gnu_cxx::__normal_iterator<const std::basic_string<wchar_t> *, std::vector<std::basic_string<wchar_t>, std::allocator<std::basic_string<wchar_t> > > > __first, __gnu_cxx::__normal_iterator<const std::basic_string<wchar_t> *, std::vector<std::basic_string<wchar_t>, std::allocator<std::basic_string<wchar_t> > > > __last, std::basic_string<wchar_t> *__result) (CompoundStmt 0x9e2b828 </usr/include/c++/4.6/bits/stl_uninitialized.h:111:5, line:120:5>
  (DeclStmt 0x9e2aef0 <line:112:7, line:113:13>
    0x9e2aec0 "typedef typename iterator_traits<class __normal_iterator<const class basic_string<wchar_t> *, class vector<class basic_string<wchar_t>, class allocator<class basic_string<wchar_t> > > > >::value_type _ValueType1")
  (DeclStmt 0x9e2afe0 <line:114:7, line:115:13>
    0x9e2afb0 "typedef typename iterator_traits<class basic_string<wchar_t> *>::value_type _ValueType2")
  (ReturnStmt 0x9e2b818 <line:117:7, line:119:41>
    (CallExpr 0x9e2b408 <line:117:14, line:119:41> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *'
      (ImplicitCastExpr 0x9e2b3f8 <line:117:14, line:119:2> 'class std::basic_string<wchar_t> *(*)(class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >, class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >, class std::basic_string<wchar_t> *)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9e2b3b4 <line:117:14, line:119:2> 'class std::basic_string<wchar_t> *(class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >, class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >, class std::basic_string<wchar_t> *)' lvalue CXXMethod 0x9e2b2f0 '__uninit_copy' 'class std::basic_string<wchar_t> *(class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >, class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >, class std::basic_string<wchar_t> *)' (FunctionTemplate 0xa0e31a0 '__uninit_copy')))
      (CXXConstructExpr 0x9e2b5f0 <col:16> 'class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >':'class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >''void (const class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > > &) throw()'
        (ImplicitCastExpr 0x9e2b5e0 <col:16> 'const class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >' lvalue <NoOp>
          (DeclRefExpr 0x9e2b124 <col:16> 'class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >':'class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >' lvalue ParmVar 0x9e2a360 '__first' 'class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >':'class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >')))
      (CXXConstructExpr 0x9e2b7e0 <col:25> 'class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >':'class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >''void (const class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > > &) throw()'
        (ImplicitCastExpr 0x9e2b7d0 <col:25> 'const class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >' lvalue <NoOp>
          (DeclRefExpr 0x9e2b13c <col:25> 'class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >':'class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >' lvalue ParmVar 0x9e2a3a0 '__last' 'class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >':'class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >')))
      (ImplicitCastExpr 0x9e2b808 <col:33> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' <LValueToRValue>
        (DeclRefExpr 0x9e2b154 <col:33> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' lvalue ParmVar 0x9e2a3e0 '__result' 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *')))))

template <typename _InputIterator = std::basic_string<wchar_t> *, typename _ForwardIterator = std::basic_string<wchar_t> *> inline std::basic_string<wchar_t> *uninitialized_copy(std::basic_string<wchar_t> *__first, std::basic_string<wchar_t> *__last, std::basic_string<wchar_t> *__result) (CompoundStmt 0xa0e8370 </usr/include/c++/4.6/bits/stl_uninitialized.h:111:5, line:120:5>
  (DeclStmt 0xa0e2c00 <line:112:7, line:113:13>
    0xa0e2bd0 "typedef typename iterator_traits<class basic_string<wchar_t> *>::value_type _ValueType1")
  (DeclStmt 0xa0e2cf0 <line:114:7, line:115:13>
    0xa0e2cc0 "typedef typename iterator_traits<class basic_string<wchar_t> *>::value_type _ValueType2")
  (ReturnStmt 0xa0e8360 <line:117:7, line:119:41>
    (CallExpr 0xa0e8308 <line:117:14, line:119:41> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *'
      (ImplicitCastExpr 0xa0e82f8 <line:117:14, line:119:2> 'class std::basic_string<wchar_t> *(*)(class std::basic_string<wchar_t> *, class std::basic_string<wchar_t> *, class std::basic_string<wchar_t> *)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0e82b4 <line:117:14, line:119:2> 'class std::basic_string<wchar_t> *(class std::basic_string<wchar_t> *, class std::basic_string<wchar_t> *, class std::basic_string<wchar_t> *)' lvalue CXXMethod 0xa0e81f0 '__uninit_copy' 'class std::basic_string<wchar_t> *(class std::basic_string<wchar_t> *, class std::basic_string<wchar_t> *, class std::basic_string<wchar_t> *)' (FunctionTemplate 0xa0e31a0 '__uninit_copy')))
      (ImplicitCastExpr 0xa0e8330 <col:16> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' <LValueToRValue>
        (DeclRefExpr 0xa0e3234 <col:16> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' lvalue ParmVar 0xa0e2830 '__first' 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *'))
      (ImplicitCastExpr 0xa0e8340 <col:25> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' <LValueToRValue>
        (DeclRefExpr 0xa0e324c <col:25> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' lvalue ParmVar 0xa0e2870 '__last' 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *'))
      (ImplicitCastExpr 0xa0e8350 <col:33> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' <LValueToRValue>
        (DeclRefExpr 0xa0e3264 <col:33> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' lvalue ParmVar 0xa0e28b0 '__result' 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *')))))

template <typename _InputIterator, typename _ForwardIterator> inline _ForwardIterator uninitialized_copy(_InputIterator __first, _InputIterator __last, _ForwardIterator __result) (CompoundStmt 0x9fbf3f8 </usr/include/c++/4.6/bits/stl_uninitialized.h:111:5, line:120:5>
  (DeclStmt 0x9fbf090 <line:112:7, line:113:13>
    0x9fbf060 "typedef typename iterator_traits<_InputIterator>::value_type _ValueType1")
  (DeclStmt 0x9fbf1c0 <line:114:7, line:115:13>
    0x9fbf190 "typedef typename iterator_traits<_ForwardIterator>::value_type _ValueType2")
  (ReturnStmt 0x9fbf3e8 <line:117:7, line:119:41>
    (CallExpr 0x9fbf3c0 <line:117:14, line:119:41> '<dependent type>'
      (DependentScopeDeclRefExpr 0x9fbf350 <line:117:14, line:119:2> '<dependent type>' lvalue)
      (DeclRefExpr 0x9fbf374 <col:16> '_InputIterator' lvalue ParmVar 0x9fbedd0 '__first' '_InputIterator')
      (DeclRefExpr 0x9fbf38c <col:25> '_InputIterator' lvalue ParmVar 0x9fbee10 '__last' '_InputIterator')
      (DeclRefExpr 0x9fbf3a4 <col:33> '_ForwardIterator' lvalue ParmVar 0x9fbee50 '__result' '_ForwardIterator'))))

;
    template <bool _TrivialValueType = true> struct __uninitialized_fill {
        struct __uninitialized_fill;
        template <typename _ForwardIterator, typename _Tp> static void __uninit_fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__x) (CompoundStmt 0x9fc0330 </usr/include/c++/4.6/bits/stl_uninitialized.h:152:9, col:44>
  (CallExpr 0x9fc0308 <col:11, col:41> '<dependent type>'
    (UnresolvedLookupExpr 0x9fc0288 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0x9bf30e0)
    (DeclRefExpr 0x9fc02bc <col:21> '_ForwardIterator' lvalue ParmVar 0x9fc0070 '__first' '_ForwardIterator')
    (DeclRefExpr 0x9fc02d4 <col:30> '_ForwardIterator' lvalue ParmVar 0x9fc00b0 '__last' '_ForwardIterator')
    (DeclRefExpr 0x9fc02ec <col:38> 'const _Tp' lvalue ParmVar 0x9fc0120 '__x' 'const _Tp &')))

;
    }
template <bool _TrivialValueType> struct __uninitialized_fill {
        struct __uninitialized_fill;
        template <typename _ForwardIterator, typename _Tp> static void __uninit_fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__x) (CompoundStmt 0x9fbfd90 </usr/include/c++/4.6/bits/stl_uninitialized.h:130:9, line:142:2>
  (DeclStmt 0x9fbf9e0 <line:131:4, col:36>
    0x9fbf990 "_ForwardIterator __cur =
      (DeclRefExpr 0x9fbf9c4 <col:29> '_ForwardIterator' lvalue ParmVar 0x9fbf740 '__first' '_ForwardIterator')")
  (IfStmt 0x9fbfc58 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:136:6>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9fbf9f0 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x9fbfc40 </usr/include/c++/4.6/bits/stl_uninitialized.h:133:6, line:136:6>
      (ForStmt 0x9fbfc18 <line:134:8, line:135:48>
        <<<NULL>>>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9fbfa88 <line:134:15, col:24> '<dependent type>'
          (UnresolvedLookupExpr 0x9fbfa30 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bacde0 0x9bc3130 0x9bc62c0 0x9c11360 0x9c32300 0x9c32670 0x9d60120 0x9d60630 0x9d60b40 0x9e73820)
          (DeclRefExpr 0x9fbfa00 <col:15> '_ForwardIterator' lvalue Var 0x9fbf990 '__cur' '_ForwardIterator')
          (DeclRefExpr 0x9fbfa18 <col:24> '_ForwardIterator' lvalue ParmVar 0x9fbf780 '__last' '_ForwardIterator'))
        (UnaryOperator 0x9fbfac8 <col:32, col:34> '<dependent type>' prefix '++'
          (DeclRefExpr 0x9fbfaac <col:34> '_ForwardIterator' lvalue Var 0x9fbf990 '__cur' '_ForwardIterator'))
        (CallExpr 0x9fbfbf0 <line:135:3, col:48> '<dependent type>'
          (UnresolvedLookupExpr 0x9fbfb00 <col:3, col:8> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fbc0d0)
          (CallExpr 0x9fbfbb8 <col:19, col:42> '<dependent type>'
            (UnresolvedLookupExpr 0x9fbfb50 <col:19, col:24> '<overloaded function type>' lvalue (no ADL) = '1' 0x9ba4270)
            (UnaryOperator 0x9fbfba0 <col:36, col:37> '<dependent type>' prefix '*'
              (DeclRefExpr 0x9fbfb84 <col:37> '_ForwardIterator' lvalue Var 0x9fbf990 '__cur' '_ForwardIterator')))
          (DeclRefExpr 0x9fbfbd8 <col:45> 'const _Tp' lvalue ParmVar 0x9fbf810 '__x' 'const _Tp &'))))
    <<<NULL>>>)
  (IfStmt 0x9fbfd70 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:141:6>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9fbfc78 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9fbfd58 </usr/include/c++/4.6/bits/stl_uninitialized.h:138:6, line:141:6>
      (CallExpr 0x9fbfd20 <line:139:8, col:36> '<dependent type>'
        (UnresolvedLookupExpr 0x9fbfcb0 <col:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fbc330 0x9fbcff0 0x9fbd690 0x9fbdc40)
        (DeclRefExpr 0x9fbfcf0 <col:22> '_ForwardIterator' lvalue ParmVar 0x9fbf740 '__first' '_ForwardIterator')
        (DeclRefExpr 0x9fbfd08 <col:31> '_ForwardIterator' lvalue Var 0x9fbf990 '__cur' '_ForwardIterator'))
      (NullStmt 0x9fbfd48 <line:140:31>))
    <<<NULL>>>))

;
    };
    struct __uninitialized_fill {
        struct __uninitialized_fill;
        template <typename _ForwardIterator, typename _Tp> static void __uninit_fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__x) (CompoundStmt 0x9fc0330 </usr/include/c++/4.6/bits/stl_uninitialized.h:152:9, col:44>
  (CallExpr 0x9fc0308 <col:11, col:41> '<dependent type>'
    (UnresolvedLookupExpr 0x9fc0288 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0x9bf30e0)
    (DeclRefExpr 0x9fc02bc <col:21> '_ForwardIterator' lvalue ParmVar 0x9fc0070 '__first' '_ForwardIterator')
    (DeclRefExpr 0x9fc02d4 <col:30> '_ForwardIterator' lvalue ParmVar 0x9fc00b0 '__last' '_ForwardIterator')
    (DeclRefExpr 0x9fc02ec <col:38> 'const _Tp' lvalue ParmVar 0x9fc0120 '__x' 'const _Tp &')))

;
    };
    template <typename _ForwardIterator, typename _Tp> inline void uninitialized_fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__x) (CompoundStmt 0x9fc08e0 </usr/include/c++/4.6/bits/stl_uninitialized.h:168:5, line:174:5>
  (DeclStmt 0x9fc0700 <line:169:7, line:170:12>
    0x9fc06d0 "typedef typename iterator_traits<_ForwardIterator>::value_type _ValueType")
  (CallExpr 0x9fc08b8 <line:172:7, line:173:36> '<dependent type>'
    (DependentScopeDeclRefExpr 0x9fc0848 <line:172:7, line:173:2> '<dependent type>' lvalue)
    (DeclRefExpr 0x9fc086c <col:16> '_ForwardIterator' lvalue ParmVar 0x9fc0410 '__first' '_ForwardIterator')
    (DeclRefExpr 0x9fc0884 <col:25> '_ForwardIterator' lvalue ParmVar 0x9fc0450 '__last' '_ForwardIterator')
    (DeclRefExpr 0x9fc089c <col:33> 'const _Tp' lvalue ParmVar 0x9fc04c0 '__x' 'const _Tp &')))

;
    template <bool _TrivialValueType = true> struct __uninitialized_fill_n {
        struct __uninitialized_fill_n;
        template <typename _ForwardIterator, typename _Size, typename _Tp> static void __uninit_fill_n(_ForwardIterator __first, _Size __n, const _Tp &__x) (CompoundStmt 0x9fc1920 </usr/include/c++/4.6/bits/stl_uninitialized.h:206:9, col:43>
  (CallExpr 0x9fc18f8 <col:11, col:40> '<dependent type>'
    (UnresolvedLookupExpr 0x9fc1878 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0x9bf5800)
    (DeclRefExpr 0x9fc18ac <col:23> '_ForwardIterator' lvalue ParmVar 0x9fc1630 '__first' '_ForwardIterator')
    (DeclRefExpr 0x9fc18c4 <col:32> '_Size' lvalue ParmVar 0x9fc1670 '__n' '_Size')
    (DeclRefExpr 0x9fc18dc <col:37> 'const _Tp' lvalue ParmVar 0x9fc16e0 '__x' 'const _Tp &')))

;
    }
template <bool _TrivialValueType> struct __uninitialized_fill_n {
        struct __uninitialized_fill_n;
        template <typename _ForwardIterator, typename _Size, typename _Tp> static void __uninit_fill_n(_ForwardIterator __first, _Size __n, const _Tp &__x) (CompoundStmt 0x9fc1300 </usr/include/c++/4.6/bits/stl_uninitialized.h:184:9, line:196:2>
  (DeclStmt 0x9fc0f10 <line:185:4, col:36>
    0x9fc0ec0 "_ForwardIterator __cur =
      (DeclRefExpr 0x9fc0ef4 <col:29> '_ForwardIterator' lvalue ParmVar 0x9fc0c70 '__first' '_ForwardIterator')")
  (IfStmt 0x9fc11c8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:190:6>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9fc0f20 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x9fc11b0 </usr/include/c++/4.6/bits/stl_uninitialized.h:187:6, line:190:6>
      (ForStmt 0x9fc1188 <line:188:8, line:189:48>
        <<<NULL>>>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9fc0fa8 <line:188:15, col:21> '<dependent type>'
          (UnresolvedLookupExpr 0x9fc0f60 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bad330 0x9bc37b0 0x9bc6740 0x9d622b0 0x9d627e0 0x9d62d10)
          (DeclRefExpr 0x9fc0f30 <col:15> '_Size' lvalue ParmVar 0x9fc0cb0 '__n' '_Size')
          (IntegerLiteral 0x9fc0f48 <col:21> 'int' 0))
        (BinaryOperator 0x9fc1030 <col:24, col:33> '<dependent type>' ','
          (UnaryOperator 0x9fc0fe8 <col:24, col:26> '<dependent type>' prefix '--'
            (DeclRefExpr 0x9fc0fcc <col:26> '_Size' lvalue ParmVar 0x9fc0cb0 '__n' '_Size'))
          (UnaryOperator 0x9fc1018 <col:31, col:33> '<dependent type>' prefix '++'
            (DeclRefExpr 0x9fc0ffc <col:33> '_ForwardIterator' lvalue Var 0x9fc0ec0 '__cur' '_ForwardIterator')))
        (CallExpr 0x9fc1160 <line:189:3, col:48> '<dependent type>'
          (UnresolvedLookupExpr 0x9fc1070 <col:3, col:8> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fbc0d0)
          (CallExpr 0x9fc1128 <col:19, col:42> '<dependent type>'
            (UnresolvedLookupExpr 0x9fc10c0 <col:19, col:24> '<overloaded function type>' lvalue (no ADL) = '1' 0x9ba4270)
            (UnaryOperator 0x9fc1110 <col:36, col:37> '<dependent type>' prefix '*'
              (DeclRefExpr 0x9fc10f4 <col:37> '_ForwardIterator' lvalue Var 0x9fc0ec0 '__cur' '_ForwardIterator')))
          (DeclRefExpr 0x9fc1148 <col:45> 'const _Tp' lvalue ParmVar 0x9fc0d40 '__x' 'const _Tp &'))))
    <<<NULL>>>)
  (IfStmt 0x9fc12e0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:195:6>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9fc11e8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9fc12c8 </usr/include/c++/4.6/bits/stl_uninitialized.h:192:6, line:195:6>
      (CallExpr 0x9fc1290 <line:193:8, col:36> '<dependent type>'
        (UnresolvedLookupExpr 0x9fc1220 <col:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fbc330 0x9fbcff0 0x9fbd690 0x9fbdc40)
        (DeclRefExpr 0x9fc1260 <col:22> '_ForwardIterator' lvalue ParmVar 0x9fc0c70 '__first' '_ForwardIterator')
        (DeclRefExpr 0x9fc1278 <col:31> '_ForwardIterator' lvalue Var 0x9fc0ec0 '__cur' '_ForwardIterator'))
      (NullStmt 0x9fc12b8 <line:194:31>))
    <<<NULL>>>))

;
    };
    struct __uninitialized_fill_n {
        struct __uninitialized_fill_n;
        template <typename _ForwardIterator, typename _Size, typename _Tp> static void __uninit_fill_n(_ForwardIterator __first, _Size __n, const _Tp &__x) (CompoundStmt 0x9fc1920 </usr/include/c++/4.6/bits/stl_uninitialized.h:206:9, col:43>
  (CallExpr 0x9fc18f8 <col:11, col:40> '<dependent type>'
    (UnresolvedLookupExpr 0x9fc1878 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0x9bf5800)
    (DeclRefExpr 0x9fc18ac <col:23> '_ForwardIterator' lvalue ParmVar 0x9fc1630 '__first' '_ForwardIterator')
    (DeclRefExpr 0x9fc18c4 <col:32> '_Size' lvalue ParmVar 0x9fc1670 '__n' '_Size')
    (DeclRefExpr 0x9fc18dc <col:37> 'const _Tp' lvalue ParmVar 0x9fc16e0 '__x' 'const _Tp &')))

;
    };
    template <typename _ForwardIterator, typename _Size, typename _Tp> inline void uninitialized_fill_n(_ForwardIterator __first, _Size __n, const _Tp &__x) (CompoundStmt 0x9fc1f20 </usr/include/c++/4.6/bits/stl_uninitialized.h:221:5, line:227:5>
  (DeclStmt 0x9fc1d40 <line:222:7, line:223:12>
    0x9fc1d10 "typedef typename iterator_traits<_ForwardIterator>::value_type _ValueType")
  (CallExpr 0x9fc1ef8 <line:225:7, line:226:35> '<dependent type>'
    (DependentScopeDeclRefExpr 0x9fc1e88 <line:225:7, line:226:2> '<dependent type>' lvalue)
    (DeclRefExpr 0x9fc1eac <col:18> '_ForwardIterator' lvalue ParmVar 0x9fc1a50 '__first' '_ForwardIterator')
    (DeclRefExpr 0x9fc1ec4 <col:27> '_Size' lvalue ParmVar 0x9fc1a90 '__n' '_Size')
    (DeclRefExpr 0x9fc1edc <col:32> 'const _Tp' lvalue ParmVar 0x9fc1b00 '__x' 'const _Tp &')))

;
    template <typename _InputIterator = __gnu_cxx::__normal_iterator<const std::basic_string<wchar_t> *, std::vector<std::basic_string<wchar_t>, std::allocator<std::basic_string<wchar_t> > > >, typename _ForwardIterator = std::basic_string<wchar_t> *, typename _Allocator = std::allocator<std::basic_string<wchar_t> >> std::basic_string<wchar_t> *__uninitialized_copy_a(__gnu_cxx::__normal_iterator<const std::basic_string<wchar_t> *, std::vector<std::basic_string<wchar_t>, std::allocator<std::basic_string<wchar_t> > > > __first, __gnu_cxx::__normal_iterator<const std::basic_string<wchar_t> *, std::vector<std::basic_string<wchar_t>, std::allocator<std::basic_string<wchar_t> > > > __last, std::basic_string<wchar_t> *__result, std::allocator<std::basic_string<wchar_t> > &__alloc)template <typename _InputIterator = std::basic_string<wchar_t> *, typename _ForwardIterator = std::basic_string<wchar_t> *, typename _Allocator = std::allocator<std::basic_string<wchar_t> >> std::basic_string<wchar_t> *__uninitialized_copy_a(std::basic_string<wchar_t> *__first, std::basic_string<wchar_t> *__last, std::basic_string<wchar_t> *__result, std::allocator<std::basic_string<wchar_t> > &__alloc)template <typename _InputIterator, typename _ForwardIterator, typename _Allocator> _ForwardIterator __uninitialized_copy_a(_InputIterator __first, _InputIterator __last, _ForwardIterator __result, _Allocator &__alloc) (CompoundStmt 0x9fc8ad8 </usr/include/c++/4.6/bits/stl_uninitialized.h:240:5, line:253:5>
  (DeclStmt 0x9fc8690 <line:241:7, col:40>
    0x9fc8640 "_ForwardIterator __cur =
      (DeclRefExpr 0x9fc8674 <col:32> '_ForwardIterator' lvalue ParmVar 0x9fc20d0 '__result' '_ForwardIterator')")
  (IfStmt 0x9fc8988 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:247:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9fc86a0 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x9fc8970 </usr/include/c++/4.6/bits/stl_uninitialized.h:243:2, line:247:2>
      (ForStmt 0x9fc8920 <line:244:4, line:245:58>
        <<<NULL>>>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9fc8738 <line:244:11, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0x9fc86e0 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bacde0 0x9bc3130 0x9bc62c0 0x9c11360 0x9c32300 0x9c32670 0x9d60120 0x9d60630 0x9d60b40 0x9e73820)
          (DeclRefExpr 0x9fc86b0 <col:11> '_InputIterator' lvalue ParmVar 0x9fc2050 '__first' '_InputIterator')
          (DeclRefExpr 0x9fc86c8 <col:22> '_InputIterator' lvalue ParmVar 0x9fc2090 '__last' '_InputIterator'))
        (BinaryOperator 0x9fc87c0 <col:30, col:43> '<dependent type>' ','
          (UnaryOperator 0x9fc8778 <col:30, col:32> '<dependent type>' prefix '++'
            (DeclRefExpr 0x9fc875c <col:32> '_InputIterator' lvalue ParmVar 0x9fc2050 '__first' '_InputIterator'))
          (UnaryOperator 0x9fc87a8 <col:41, col:43> '<dependent type>' prefix '++'
            (DeclRefExpr 0x9fc878c <col:43> '_ForwardIterator' lvalue Var 0x9fc8640 '__cur' '_ForwardIterator')))
        (CallExpr 0x9fc88f8 <line:245:6, col:58> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9fc87f0 <col:6, col:14> '<dependent type>' lvalue
            (DeclRefExpr 0x9fc87d8 <col:6> '_Allocator' lvalue ParmVar 0x9fc2160 '__alloc' '_Allocator &'))
          (CallExpr 0x9fc88a8 <col:24, col:47> '<dependent type>'
            (UnresolvedLookupExpr 0x9fc8840 <col:24, col:29> '<overloaded function type>' lvalue (no ADL) = '1' 0x9ba4270)
            (UnaryOperator 0x9fc8890 <col:41, col:42> '<dependent type>' prefix '*'
              (DeclRefExpr 0x9fc8874 <col:42> '_ForwardIterator' lvalue Var 0x9fc8640 '__cur' '_ForwardIterator')))
          (UnaryOperator 0x9fc88e0 <col:50, col:51> '<dependent type>' prefix '*'
            (DeclRefExpr 0x9fc88c8 <col:51> '_InputIterator' lvalue ParmVar 0x9fc2050 '__first' '_InputIterator'))))
      (ReturnStmt 0x9fc8960 <line:246:4, col:11>
        (DeclRefExpr 0x9fc8944 <col:11> '_ForwardIterator' lvalue Var 0x9fc8640 '__cur' '_ForwardIterator')))
    <<<NULL>>>)
  (IfStmt 0x9fc8ab8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:252:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9fc89a8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9fc8aa0 </usr/include/c++/4.6/bits/stl_uninitialized.h:249:2, line:252:2>
      (CallExpr 0x9fc8a68 <line:250:4, col:42> '<dependent type>'
        (UnresolvedLookupExpr 0x9fc89e0 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fbc330 0x9fbcff0 0x9fbd690 0x9fbdc40)
        (DeclRefExpr 0x9fc8a20 <col:18> '_ForwardIterator' lvalue ParmVar 0x9fc20d0 '__result' '_ForwardIterator')
        (DeclRefExpr 0x9fc8a38 <col:28> '_ForwardIterator' lvalue Var 0x9fc8640 '__cur' '_ForwardIterator')
        (DeclRefExpr 0x9fc8a50 <col:35> '_Allocator' lvalue ParmVar 0x9fc2160 '__alloc' '_Allocator &'))
      (NullStmt 0x9fc8a90 <line:251:27>))
    <<<NULL>>>))

;
    template <typename _InputIterator = __gnu_cxx::__normal_iterator<const std::basic_string<wchar_t> *, std::vector<std::basic_string<wchar_t>, std::allocator<std::basic_string<wchar_t> > > >, typename _ForwardIterator = std::basic_string<wchar_t> *, typename _Tp = std::basic_string<wchar_t>> inline std::basic_string<wchar_t> *__uninitialized_copy_a(__gnu_cxx::__normal_iterator<const std::basic_string<wchar_t> *, std::vector<std::basic_string<wchar_t>, std::allocator<std::basic_string<wchar_t> > > > __first, __gnu_cxx::__normal_iterator<const std::basic_string<wchar_t> *, std::vector<std::basic_string<wchar_t>, std::allocator<std::basic_string<wchar_t> > > > __last, std::basic_string<wchar_t> *__result, allocator<std::basic_string<wchar_t> > &) (CompoundStmt 0x9e2a9f8 </usr/include/c++/4.6/bits/stl_uninitialized.h:259:5, col:66>
  (ReturnStmt 0x9e2a9e8 <col:7, col:63>
    (CallExpr 0x9e2a5d8 <col:14, col:63> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *'
      (ImplicitCastExpr 0x9e2a5c8 <col:14, col:19> 'class std::basic_string<wchar_t> *(*)(class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >, class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >, class std::basic_string<wchar_t> *)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9e2a568 <col:14, col:19> 'class std::basic_string<wchar_t> *(class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >, class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >, class std::basic_string<wchar_t> *)' lvalue Function 0x9e2a4a0 'uninitialized_copy' 'class std::basic_string<wchar_t> *(class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >, class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >, class std::basic_string<wchar_t> *)' (FunctionTemplate 0x9fbef40 'uninitialized_copy')))
      (CXXConstructExpr 0x9e2a7c0 <col:38> 'class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >':'class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >''void (const class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > > &) throw()'
        (ImplicitCastExpr 0x9e2a7b0 <col:38> 'const class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >' lvalue <NoOp>
          (DeclRefExpr 0x9e2a2a4 <col:38> 'class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >':'class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >' lvalue ParmVar 0x9e27a30 '__first' 'class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >':'class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >')))
      (CXXConstructExpr 0x9e2a9b0 <col:47> 'class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >':'class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >''void (const class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > > &) throw()'
        (ImplicitCastExpr 0x9e2a9a0 <col:47> 'const class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >' lvalue <NoOp>
          (DeclRefExpr 0x9e2a2bc <col:47> 'class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >':'class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >' lvalue ParmVar 0x9e27a70 '__last' 'class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >':'class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >')))
      (ImplicitCastExpr 0x9e2a9d8 <col:55> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' <LValueToRValue>
        (DeclRefExpr 0x9e2a2d4 <col:55> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' lvalue ParmVar 0x9e27ab0 '__result' 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *')))))

template <typename _InputIterator = std::basic_string<wchar_t> *, typename _ForwardIterator = std::basic_string<wchar_t> *, typename _Tp = std::basic_string<wchar_t>> inline std::basic_string<wchar_t> *__uninitialized_copy_a(std::basic_string<wchar_t> *__first, std::basic_string<wchar_t> *__last, std::basic_string<wchar_t> *__result, allocator<std::basic_string<wchar_t> > &) (CompoundStmt 0xa0e2b10 </usr/include/c++/4.6/bits/stl_uninitialized.h:259:5, col:66>
  (ReturnStmt 0xa0e2b00 <col:7, col:63>
    (CallExpr 0xa0e2aa8 <col:14, col:63> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *'
      (ImplicitCastExpr 0xa0e2a98 <col:14, col:19> 'class std::basic_string<wchar_t> *(*)(class std::basic_string<wchar_t> *, class std::basic_string<wchar_t> *, class std::basic_string<wchar_t> *)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0e2a38 <col:14, col:19> 'class std::basic_string<wchar_t> *(class std::basic_string<wchar_t> *, class std::basic_string<wchar_t> *, class std::basic_string<wchar_t> *)' lvalue Function 0xa0e2970 'uninitialized_copy' 'class std::basic_string<wchar_t> *(class std::basic_string<wchar_t> *, class std::basic_string<wchar_t> *, class std::basic_string<wchar_t> *)' (FunctionTemplate 0x9fbef40 'uninitialized_copy')))
      (ImplicitCastExpr 0xa0e2ad0 <col:38> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' <LValueToRValue>
        (DeclRefExpr 0xa0e2724 <col:38> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' lvalue ParmVar 0xa0e1ae0 '__first' 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *'))
      (ImplicitCastExpr 0xa0e2ae0 <col:47> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' <LValueToRValue>
        (DeclRefExpr 0xa0e273c <col:47> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' lvalue ParmVar 0xa0e1b20 '__last' 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *'))
      (ImplicitCastExpr 0xa0e2af0 <col:55> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' <LValueToRValue>
        (DeclRefExpr 0xa0e2754 <col:55> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' lvalue ParmVar 0xa0e1b60 '__result' 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *')))))

template <typename _InputIterator, typename _ForwardIterator, typename _Tp> inline _ForwardIterator __uninitialized_copy_a(_InputIterator __first, _InputIterator __last, _ForwardIterator __result, allocator<_Tp> &) (CompoundStmt 0x9fc9008 </usr/include/c++/4.6/bits/stl_uninitialized.h:259:5, col:66>
  (ReturnStmt 0x9fc8ff8 <col:7, col:63>
    (CallExpr 0x9fc8fd0 <col:14, col:63> '<dependent type>'
      (UnresolvedLookupExpr 0x9fc8f50 <col:14, col:19> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fbef40)
      (DeclRefExpr 0x9fc8f84 <col:38> '_InputIterator' lvalue ParmVar 0x9fc8c10 '__first' '_InputIterator')
      (DeclRefExpr 0x9fc8f9c <col:47> '_InputIterator' lvalue ParmVar 0x9fc8c50 '__last' '_InputIterator')
      (DeclRefExpr 0x9fc8fb4 <col:55> '_ForwardIterator' lvalue ParmVar 0x9fc8c90 '__result' '_ForwardIterator'))))

;
    template <typename _InputIterator = std::basic_string<wchar_t> *, typename _ForwardIterator = std::basic_string<wchar_t> *, typename _Allocator = std::allocator<std::basic_string<wchar_t> >> inline std::basic_string<wchar_t> *__uninitialized_move_a(std::basic_string<wchar_t> *__first, std::basic_string<wchar_t> *__last, std::basic_string<wchar_t> *__result, std::allocator<std::basic_string<wchar_t> > &__alloc) (CompoundStmt 0xa0f6ab8 </usr/include/c++/4.6/bits/stl_uninitialized.h:266:5, line:270:5>
  (ReturnStmt 0xa0f6aa8 <line:267:7, line:269:24>
    (CallExpr 0xa0f6a48 <line:267:14, line:269:24> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *'
      (ImplicitCastExpr 0xa0f6a38 <line:267:14, col:19> 'class std::basic_string<wchar_t> *(*)(class std::basic_string<wchar_t> *, class std::basic_string<wchar_t> *, class std::basic_string<wchar_t> *, allocator<class std::basic_string<wchar_t> > &)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0f6a10 <col:14, col:19> 'class std::basic_string<wchar_t> *(class std::basic_string<wchar_t> *, class std::basic_string<wchar_t> *, class std::basic_string<wchar_t> *, allocator<class std::basic_string<wchar_t> > &)' lvalue Function 0xa0e1cc0 '__uninitialized_copy_a' 'class std::basic_string<wchar_t> *(class std::basic_string<wchar_t> *, class std::basic_string<wchar_t> *, class std::basic_string<wchar_t> *, allocator<class std::basic_string<wchar_t> > &)' (FunctionTemplate 0x9fc8f00 '__uninitialized_copy_a')))
      (ImplicitCastExpr 0xa0f6a78 </usr/include/c++/4.6/bits/stl_iterator.h:1128:44, col:50> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' <LValueToRValue>
        (ParenExpr 0xa0f68a8 <col:44, col:50> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' lvalue
          (DeclRefExpr 0xa0f6890 </usr/include/c++/4.6/bits/stl_uninitialized.h:267:70> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' lvalue ParmVar 0xa0ef570 '__first' 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *')))
      (ImplicitCastExpr 0xa0f6a88 </usr/include/c++/4.6/bits/stl_iterator.h:1128:44, col:50> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' <LValueToRValue>
        (ParenExpr 0xa0f68d8 <col:44, col:50> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' lvalue
          (DeclRefExpr 0xa0f68bc </usr/include/c++/4.6/bits/stl_uninitialized.h:268:35> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' lvalue ParmVar 0xa0ef5b0 '__last' 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *')))
      (ImplicitCastExpr 0xa0f6a98 <line:269:7> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' <LValueToRValue>
        (DeclRefExpr 0xa0f68ec <col:7> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' lvalue ParmVar 0xa0ef5f0 '__result' 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *'))
      (DeclRefExpr 0xa0f6904 <col:17> 'class std::allocator<class std::basic_string<wchar_t> >':'class std::allocator<class std::basic_string<wchar_t> >' lvalue ParmVar 0xa0ef680 '__alloc' 'class std::allocator<class std::basic_string<wchar_t> > &'))))

template <typename _InputIterator, typename _ForwardIterator, typename _Allocator> inline _ForwardIterator __uninitialized_move_a(_InputIterator __first, _InputIterator __last, _ForwardIterator __result, _Allocator &__alloc) (CompoundStmt 0x9fc9468 </usr/include/c++/4.6/bits/stl_uninitialized.h:266:5, line:270:5>
  (ReturnStmt 0x9fc9458 <line:267:7, line:269:24>
    (CallExpr 0x9fc9428 <line:267:14, line:269:24> '<dependent type>'
      (UnresolvedLookupExpr 0x9fc9360 <line:267:14, col:19> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fc8600 0x9fc8f00)
      (ParenExpr 0x9fc93b0 </usr/include/c++/4.6/bits/stl_iterator.h:1128:44, col:50> '_InputIterator' lvalue
        (DeclRefExpr 0x9fc9398 </usr/include/c++/4.6/bits/stl_uninitialized.h:267:70> '_InputIterator' lvalue ParmVar 0x9fc9130 '__first' '_InputIterator'))
      (ParenExpr 0x9fc93e0 </usr/include/c++/4.6/bits/stl_iterator.h:1128:44, col:50> '_InputIterator' lvalue
        (DeclRefExpr 0x9fc93c4 </usr/include/c++/4.6/bits/stl_uninitialized.h:268:35> '_InputIterator' lvalue ParmVar 0x9fc9170 '__last' '_InputIterator'))
      (DeclRefExpr 0x9fc93f4 <line:269:7> '_ForwardIterator' lvalue ParmVar 0x9fc91b0 '__result' '_ForwardIterator')
      (DeclRefExpr 0x9fc940c <col:17> '_Allocator' lvalue ParmVar 0x9fc9220 '__alloc' '_Allocator &'))))

;
    template <typename _ForwardIterator, typename _Tp, typename _Allocator> void __uninitialized_fill_a(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__x, _Allocator &__alloc) (CompoundStmt 0x9fc9c20 </usr/include/c++/4.6/bits/stl_uninitialized.h:276:5, line:288:5>
  (DeclStmt 0x9fc9860 <line:277:7, col:39>
    0x9fc9810 "_ForwardIterator __cur =
      (DeclRefExpr 0x9fc9844 <col:32> '_ForwardIterator' lvalue ParmVar 0x9fc9590 '__first' '_ForwardIterator')")
  (IfStmt 0x9fc9ad0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:282:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9fc9870 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x9fc9ab8 </usr/include/c++/4.6/bits/stl_uninitialized.h:279:2, line:282:2>
      (ForStmt 0x9fc9a90 <line:280:4, line:281:53>
        <<<NULL>>>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9fc9908 <line:280:11, col:20> '<dependent type>'
          (UnresolvedLookupExpr 0x9fc98b0 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bacde0 0x9bc3130 0x9bc62c0 0x9c11360 0x9c32300 0x9c32670 0x9d60120 0x9d60630 0x9d60b40 0x9e73820)
          (DeclRefExpr 0x9fc9880 <col:11> '_ForwardIterator' lvalue Var 0x9fc9810 '__cur' '_ForwardIterator')
          (DeclRefExpr 0x9fc9898 <col:20> '_ForwardIterator' lvalue ParmVar 0x9fc95d0 '__last' '_ForwardIterator'))
        (UnaryOperator 0x9fc9948 <col:28, col:30> '<dependent type>' prefix '++'
          (DeclRefExpr 0x9fc992c <col:30> '_ForwardIterator' lvalue Var 0x9fc9810 '__cur' '_ForwardIterator'))
        (CallExpr 0x9fc9a68 <line:281:6, col:53> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9fc9978 <col:6, col:14> '<dependent type>' lvalue
            (DeclRefExpr 0x9fc995c <col:6> '_Allocator' lvalue ParmVar 0x9fc96b0 '__alloc' '_Allocator &'))
          (CallExpr 0x9fc9a30 <col:24, col:47> '<dependent type>'
            (UnresolvedLookupExpr 0x9fc99c8 <col:24, col:29> '<overloaded function type>' lvalue (no ADL) = '1' 0x9ba4270)
            (UnaryOperator 0x9fc9a18 <col:41, col:42> '<dependent type>' prefix '*'
              (DeclRefExpr 0x9fc99fc <col:42> '_ForwardIterator' lvalue Var 0x9fc9810 '__cur' '_ForwardIterator')))
          (DeclRefExpr 0x9fc9a50 <col:50> 'const _Tp' lvalue ParmVar 0x9fc9640 '__x' 'const _Tp &'))))
    <<<NULL>>>)
  (IfStmt 0x9fc9c00 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:287:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9fc9af0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9fc9be8 </usr/include/c++/4.6/bits/stl_uninitialized.h:284:2, line:287:2>
      (CallExpr 0x9fc9bb0 <line:285:4, col:41> '<dependent type>'
        (UnresolvedLookupExpr 0x9fc9b28 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fbc330 0x9fbcff0 0x9fbd690 0x9fbdc40)
        (DeclRefExpr 0x9fc9b68 <col:18> '_ForwardIterator' lvalue ParmVar 0x9fc9590 '__first' '_ForwardIterator')
        (DeclRefExpr 0x9fc9b80 <col:27> '_ForwardIterator' lvalue Var 0x9fc9810 '__cur' '_ForwardIterator')
        (DeclRefExpr 0x9fc9b98 <col:34> '_Allocator' lvalue ParmVar 0x9fc96b0 '__alloc' '_Allocator &'))
      (NullStmt 0x9fc9bd8 <line:286:27>))
    <<<NULL>>>))

;
    template <typename _ForwardIterator, typename _Tp, typename _Tp2> inline void __uninitialized_fill_a(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__x, allocator<_Tp2> &) (CompoundStmt 0x9fca128 </usr/include/c++/4.6/bits/stl_uninitialized.h:294:5, col:54>
  (CallExpr 0x9fca100 <col:7, col:51> '<dependent type>'
    (UnresolvedLookupExpr 0x9fca080 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fc05b0)
    (DeclRefExpr 0x9fca0b4 <col:31> '_ForwardIterator' lvalue ParmVar 0x9fc9d50 '__first' '_ForwardIterator')
    (DeclRefExpr 0x9fca0cc <col:40> '_ForwardIterator' lvalue ParmVar 0x9fc9d90 '__last' '_ForwardIterator')
    (DeclRefExpr 0x9fca0e4 <col:48> 'const _Tp' lvalue ParmVar 0x9fc9e00 '__x' 'const _Tp &')))

;
    template <typename _ForwardIterator, typename _Size, typename _Tp, typename _Allocator> void __uninitialized_fill_n_a(_ForwardIterator __first, _Size __n, const _Tp &__x, _Allocator &__alloc) (CompoundStmt 0x9fca988 </usr/include/c++/4.6/bits/stl_uninitialized.h:301:5, line:313:5>
  (DeclStmt 0x9fca590 <line:302:7, col:39>
    0x9fca540 "_ForwardIterator __cur =
      (DeclRefExpr 0x9fca574 <col:32> '_ForwardIterator' lvalue ParmVar 0x9fca2a0 '__first' '_ForwardIterator')")
  (IfStmt 0x9fca838 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:307:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9fca5a0 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x9fca820 </usr/include/c++/4.6/bits/stl_uninitialized.h:304:2, line:307:2>
      (ForStmt 0x9fca7f8 <line:305:4, line:306:53>
        <<<NULL>>>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9fca628 <line:305:11, col:17> '<dependent type>'
          (UnresolvedLookupExpr 0x9fca5e0 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bad330 0x9bc37b0 0x9bc6740 0x9d622b0 0x9d627e0 0x9d62d10)
          (DeclRefExpr 0x9fca5b0 <col:11> '_Size' lvalue ParmVar 0x9fca2e0 '__n' '_Size')
          (IntegerLiteral 0x9fca5c8 <col:17> 'int' 0))
        (BinaryOperator 0x9fca6b0 <col:20, col:29> '<dependent type>' ','
          (UnaryOperator 0x9fca668 <col:20, col:22> '<dependent type>' prefix '--'
            (DeclRefExpr 0x9fca64c <col:22> '_Size' lvalue ParmVar 0x9fca2e0 '__n' '_Size'))
          (UnaryOperator 0x9fca698 <col:27, col:29> '<dependent type>' prefix '++'
            (DeclRefExpr 0x9fca67c <col:29> '_ForwardIterator' lvalue Var 0x9fca540 '__cur' '_ForwardIterator')))
        (CallExpr 0x9fca7d0 <line:306:6, col:53> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9fca6e0 <col:6, col:14> '<dependent type>' lvalue
            (DeclRefExpr 0x9fca6c8 <col:6> '_Allocator' lvalue ParmVar 0x9fca3e0 '__alloc' '_Allocator &'))
          (CallExpr 0x9fca798 <col:24, col:47> '<dependent type>'
            (UnresolvedLookupExpr 0x9fca730 <col:24, col:29> '<overloaded function type>' lvalue (no ADL) = '1' 0x9ba4270)
            (UnaryOperator 0x9fca780 <col:41, col:42> '<dependent type>' prefix '*'
              (DeclRefExpr 0x9fca764 <col:42> '_ForwardIterator' lvalue Var 0x9fca540 '__cur' '_ForwardIterator')))
          (DeclRefExpr 0x9fca7b8 <col:50> 'const _Tp' lvalue ParmVar 0x9fca350 '__x' 'const _Tp &'))))
    <<<NULL>>>)
  (IfStmt 0x9fca968 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:312:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9fca858 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9fca950 </usr/include/c++/4.6/bits/stl_uninitialized.h:309:2, line:312:2>
      (CallExpr 0x9fca918 <line:310:4, col:41> '<dependent type>'
        (UnresolvedLookupExpr 0x9fca890 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fbc330 0x9fbcff0 0x9fbd690 0x9fbdc40)
        (DeclRefExpr 0x9fca8d0 <col:18> '_ForwardIterator' lvalue ParmVar 0x9fca2a0 '__first' '_ForwardIterator')
        (DeclRefExpr 0x9fca8e8 <col:27> '_ForwardIterator' lvalue Var 0x9fca540 '__cur' '_ForwardIterator')
        (DeclRefExpr 0x9fca900 <col:34> '_Allocator' lvalue ParmVar 0x9fca3e0 '__alloc' '_Allocator &'))
      (NullStmt 0x9fca940 <line:311:27>))
    <<<NULL>>>))

;
    template <typename _ForwardIterator, typename _Size, typename _Tp, typename _Tp2> inline void __uninitialized_fill_n_a(_ForwardIterator __first, _Size __n, const _Tp &__x, allocator<_Tp2> &) (CompoundStmt 0x9fcaf38 </usr/include/c++/4.6/bits/stl_uninitialized.h:320:5, col:53>
  (CallExpr 0x9fcaf10 <col:7, col:50> '<dependent type>'
    (UnresolvedLookupExpr 0x9fcae90 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fc1bf0)
    (DeclRefExpr 0x9fcaec4 <col:33> '_ForwardIterator' lvalue ParmVar 0x9fcab10 '__first' '_ForwardIterator')
    (DeclRefExpr 0x9fcaedc <col:42> '_Size' lvalue ParmVar 0x9fcab50 '__n' '_Size')
    (DeclRefExpr 0x9fcaef4 <col:47> 'const _Tp' lvalue ParmVar 0x9fcabc0 '__x' 'const _Tp &')))

;
    template <typename _InputIterator1, typename _InputIterator2, typename _ForwardIterator, typename _Allocator> inline _ForwardIterator __uninitialized_copy_move(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _InputIterator2 __last2, _ForwardIterator __result, _Allocator &__alloc) (CompoundStmt 0x9fcb730 </usr/include/c++/4.6/bits/stl_uninitialized.h:341:5, line:354:5>
  (DeclStmt 0x9fcb4b8 <line:342:7, line:344:19>
    0x9fcb3a0 "_ForwardIterator __mid =
      (CallExpr 0x9fcb488 <line:342:32, line:344:18> '<dependent type>'
        (UnresolvedLookupExpr 0x9fcb3f0 <line:342:32, col:37> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fc8600 0x9fc8f00)
        (DeclRefExpr 0x9fcb428 <col:60> '_InputIterator1' lvalue ParmVar 0x9fcb0b0 '__first1' '_InputIterator1')
        (DeclRefExpr 0x9fcb440 <col:70> '_InputIterator1' lvalue ParmVar 0x9fcb0f0 '__last1' '_InputIterator1')
        (DeclRefExpr 0x9fcb458 <line:343:11> '_ForwardIterator' lvalue ParmVar 0x9fcb1b0 '__result' '_ForwardIterator')
        (DeclRefExpr 0x9fcb470 <line:344:11> '_Allocator' lvalue ParmVar 0x9fcb220 '__alloc' '_Allocator &'))")
  (IfStmt 0x9fcb5e0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:348:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9fcb4c8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x9fcb5c8 </usr/include/c++/4.6/bits/stl_uninitialized.h:346:2, line:348:2>
      (ReturnStmt 0x9fcb5b8 <line:347:4, col:72>
        (CallExpr 0x9fcb588 <col:11, col:72> '<dependent type>'
          (UnresolvedLookupExpr 0x9fcb4f0 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fc9310)
          (DeclRefExpr 0x9fcb524 <col:39> '_InputIterator2' lvalue ParmVar 0x9fcb130 '__first2' '_InputIterator2')
          (DeclRefExpr 0x9fcb53c <col:49> '_InputIterator2' lvalue ParmVar 0x9fcb170 '__last2' '_InputIterator2')
          (DeclRefExpr 0x9fcb554 <col:58> '_ForwardIterator' lvalue Var 0x9fcb3a0 '__mid' '_ForwardIterator')
          (DeclRefExpr 0x9fcb56c <col:65> '_Allocator' lvalue ParmVar 0x9fcb220 '__alloc' '_Allocator &'))))
    <<<NULL>>>)
  (IfStmt 0x9fcb710 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:353:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9fcb600 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9fcb6f8 </usr/include/c++/4.6/bits/stl_uninitialized.h:350:2, line:353:2>
      (CallExpr 0x9fcb6c0 <line:351:4, col:42> '<dependent type>'
        (UnresolvedLookupExpr 0x9fcb638 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fbc330 0x9fbcff0 0x9fbd690 0x9fbdc40)
        (DeclRefExpr 0x9fcb678 <col:18> '_ForwardIterator' lvalue ParmVar 0x9fcb1b0 '__result' '_ForwardIterator')
        (DeclRefExpr 0x9fcb690 <col:28> '_ForwardIterator' lvalue Var 0x9fcb3a0 '__mid' '_ForwardIterator')
        (DeclRefExpr 0x9fcb6a8 <col:35> '_Allocator' lvalue ParmVar 0x9fcb220 '__alloc' '_Allocator &'))
      (NullStmt 0x9fcb6e8 <line:352:27>))
    <<<NULL>>>))

;
    template <typename _InputIterator1, typename _InputIterator2, typename _ForwardIterator, typename _Allocator> inline _ForwardIterator __uninitialized_move_copy(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _InputIterator2 __last2, _ForwardIterator __result, _Allocator &__alloc) (CompoundStmt 0x9fcbf00 </usr/include/c++/4.6/bits/stl_uninitialized.h:369:5, line:382:5>
  (DeclStmt 0x9fcbc88 <line:370:7, line:372:19>
    0x9fcbb70 "_ForwardIterator __mid =
      (CallExpr 0x9fcbc58 <line:370:32, line:372:18> '<dependent type>'
        (UnresolvedLookupExpr 0x9fcbbc0 <line:370:32, col:37> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fc9310)
        (DeclRefExpr 0x9fcbbf4 <col:60> '_InputIterator1' lvalue ParmVar 0x9fcb8b0 '__first1' '_InputIterator1')
        (DeclRefExpr 0x9fcbc0c <col:70> '_InputIterator1' lvalue ParmVar 0x9fcb8f0 '__last1' '_InputIterator1')
        (DeclRefExpr 0x9fcbc24 <line:371:11> '_ForwardIterator' lvalue ParmVar 0x9fcb9b0 '__result' '_ForwardIterator')
        (DeclRefExpr 0x9fcbc3c <line:372:11> '_Allocator' lvalue ParmVar 0x9fcba20 '__alloc' '_Allocator &'))")
  (IfStmt 0x9fcbdb0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:376:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9fcbc98 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x9fcbd98 </usr/include/c++/4.6/bits/stl_uninitialized.h:374:2, line:376:2>
      (ReturnStmt 0x9fcbd88 <line:375:4, col:72>
        (CallExpr 0x9fcbd58 <col:11, col:72> '<dependent type>'
          (UnresolvedLookupExpr 0x9fcbcc0 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fc8600 0x9fc8f00)
          (DeclRefExpr 0x9fcbcf8 <col:39> '_InputIterator2' lvalue ParmVar 0x9fcb930 '__first2' '_InputIterator2')
          (DeclRefExpr 0x9fcbd10 <col:49> '_InputIterator2' lvalue ParmVar 0x9fcb970 '__last2' '_InputIterator2')
          (DeclRefExpr 0x9fcbd28 <col:58> '_ForwardIterator' lvalue Var 0x9fcbb70 '__mid' '_ForwardIterator')
          (DeclRefExpr 0x9fcbd40 <col:65> '_Allocator' lvalue ParmVar 0x9fcba20 '__alloc' '_Allocator &'))))
    <<<NULL>>>)
  (IfStmt 0x9fcbee0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:381:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9fcbdd0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9fcbec8 </usr/include/c++/4.6/bits/stl_uninitialized.h:378:2, line:381:2>
      (CallExpr 0x9fcbe90 <line:379:4, col:42> '<dependent type>'
        (UnresolvedLookupExpr 0x9fcbe08 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fbc330 0x9fbcff0 0x9fbd690 0x9fbdc40)
        (DeclRefExpr 0x9fcbe48 <col:18> '_ForwardIterator' lvalue ParmVar 0x9fcb9b0 '__result' '_ForwardIterator')
        (DeclRefExpr 0x9fcbe60 <col:28> '_ForwardIterator' lvalue Var 0x9fcbb70 '__mid' '_ForwardIterator')
        (DeclRefExpr 0x9fcbe78 <col:35> '_Allocator' lvalue ParmVar 0x9fcba20 '__alloc' '_Allocator &'))
      (NullStmt 0x9fcbeb8 <line:380:27>))
    <<<NULL>>>))

;
    template <typename _ForwardIterator, typename _Tp, typename _InputIterator, typename _Allocator> inline _ForwardIterator __uninitialized_fill_move(_ForwardIterator __result, _ForwardIterator __mid, const _Tp &__x, _InputIterator __first, _InputIterator __last, _Allocator &__alloc) (CompoundStmt 0x9fcc6e8 </usr/include/c++/4.6/bits/stl_uninitialized.h:393:5, line:404:5>
  (CallExpr 0x9fcc450 <line:394:7, col:64> '<dependent type>'
    (UnresolvedLookupExpr 0x9fcc3b8 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fc97d0 0x9fca020)
    (DeclRefExpr 0x9fcc3f0 <col:35> '_ForwardIterator' lvalue ParmVar 0x9fcc080 '__result' '_ForwardIterator')
    (DeclRefExpr 0x9fcc408 <col:45> '_ForwardIterator' lvalue ParmVar 0x9fcc0c0 '__mid' '_ForwardIterator')
    (DeclRefExpr 0x9fcc420 <col:52> 'const _Tp' lvalue ParmVar 0x9fcc130 '__x' 'const _Tp &')
    (DeclRefExpr 0x9fcc438 <col:57> '_Allocator' lvalue ParmVar 0x9fcc220 '__alloc' '_Allocator &'))
  (IfStmt 0x9fcc598 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:398:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9fcc480 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x9fcc580 </usr/include/c++/4.6/bits/stl_uninitialized.h:396:2, line:398:2>
      (ReturnStmt 0x9fcc570 <line:397:4, col:70>
        (CallExpr 0x9fcc540 <col:11, col:70> '<dependent type>'
          (UnresolvedLookupExpr 0x9fcc4a8 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fc9310)
          (DeclRefExpr 0x9fcc4dc <col:39> '_InputIterator' lvalue ParmVar 0x9fcc170 '__first' '_InputIterator')
          (DeclRefExpr 0x9fcc4f4 <col:48> '_InputIterator' lvalue ParmVar 0x9fcc1b0 '__last' '_InputIterator')
          (DeclRefExpr 0x9fcc50c <col:56> '_ForwardIterator' lvalue ParmVar 0x9fcc0c0 '__mid' '_ForwardIterator')
          (DeclRefExpr 0x9fcc524 <col:63> '_Allocator' lvalue ParmVar 0x9fcc220 '__alloc' '_Allocator &'))))
    <<<NULL>>>)
  (IfStmt 0x9fcc6c8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:403:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9fcc5b8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9fcc6b0 </usr/include/c++/4.6/bits/stl_uninitialized.h:400:2, line:403:2>
      (CallExpr 0x9fcc678 <line:401:4, col:42> '<dependent type>'
        (UnresolvedLookupExpr 0x9fcc5f0 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fbc330 0x9fbcff0 0x9fbd690 0x9fbdc40)
        (DeclRefExpr 0x9fcc630 <col:18> '_ForwardIterator' lvalue ParmVar 0x9fcc080 '__result' '_ForwardIterator')
        (DeclRefExpr 0x9fcc648 <col:28> '_ForwardIterator' lvalue ParmVar 0x9fcc0c0 '__mid' '_ForwardIterator')
        (DeclRefExpr 0x9fcc660 <col:35> '_Allocator' lvalue ParmVar 0x9fcc220 '__alloc' '_Allocator &'))
      (NullStmt 0x9fcc6a0 <line:402:27>))
    <<<NULL>>>))

;
    template <typename _InputIterator, typename _ForwardIterator, typename _Tp, typename _Allocator> inline void __uninitialized_move_fill(_InputIterator __first1, _InputIterator __last1, _ForwardIterator __first2, _ForwardIterator __last2, const _Tp &__x, _Allocator &__alloc) (CompoundStmt 0x9fccf20 </usr/include/c++/4.6/bits/stl_uninitialized.h:416:5, line:429:5>
  (DeclStmt 0x9fccca8 <line:417:7, line:419:20>
    0x9fccb90 "_ForwardIterator __mid2 =
      (CallExpr 0x9fccc78 <line:417:33, line:419:19> '<dependent type>'
        (UnresolvedLookupExpr 0x9fccbe0 <line:417:33, col:38> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fc9310)
        (DeclRefExpr 0x9fccc14 <col:61> '_InputIterator' lvalue ParmVar 0x9fcc870 '__first1' '_InputIterator')
        (DeclRefExpr 0x9fccc2c <col:71> '_InputIterator' lvalue ParmVar 0x9fcc8b0 '__last1' '_InputIterator')
        (DeclRefExpr 0x9fccc44 <line:418:12> '_ForwardIterator' lvalue ParmVar 0x9fcc8f0 '__first2' '_ForwardIterator')
        (DeclRefExpr 0x9fccc5c <line:419:12> '_Allocator' lvalue ParmVar 0x9fcca10 '__alloc' '_Allocator &'))")
  (IfStmt 0x9fccdd0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:423:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9fcccb8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x9fccdb8 </usr/include/c++/4.6/bits/stl_uninitialized.h:421:2, line:423:2>
      (CallExpr 0x9fccd88 <line:422:4, col:61> '<dependent type>'
        (UnresolvedLookupExpr 0x9fcccf0 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fc97d0 0x9fca020)
        (DeclRefExpr 0x9fccd28 <col:32> '_ForwardIterator' lvalue Var 0x9fccb90 '__mid2' '_ForwardIterator')
        (DeclRefExpr 0x9fccd40 <col:40> '_ForwardIterator' lvalue ParmVar 0x9fcc930 '__last2' '_ForwardIterator')
        (DeclRefExpr 0x9fccd58 <col:49> 'const _Tp' lvalue ParmVar 0x9fcc9a0 '__x' 'const _Tp &')
        (DeclRefExpr 0x9fccd70 <col:54> '_Allocator' lvalue ParmVar 0x9fcca10 '__alloc' '_Allocator &')))
    <<<NULL>>>)
  (IfStmt 0x9fccf00 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:428:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9fccdf0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9fccee8 </usr/include/c++/4.6/bits/stl_uninitialized.h:425:2, line:428:2>
      (CallExpr 0x9fcceb0 <line:426:4, col:43> '<dependent type>'
        (UnresolvedLookupExpr 0x9fcce28 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fbc330 0x9fbcff0 0x9fbd690 0x9fbdc40)
        (DeclRefExpr 0x9fcce68 <col:18> '_ForwardIterator' lvalue ParmVar 0x9fcc8f0 '__first2' '_ForwardIterator')
        (DeclRefExpr 0x9fcce80 <col:28> '_ForwardIterator' lvalue Var 0x9fccb90 '__mid2' '_ForwardIterator')
        (DeclRefExpr 0x9fcce98 <col:36> '_Allocator' lvalue ParmVar 0x9fcca10 '__alloc' '_Allocator &'))
      (NullStmt 0x9fcced8 <line:427:27>))
    <<<NULL>>>))

;
}
namespace std {
    template <typename _Tp = std::basic_string<wchar_t>, typename _Alloc = std::allocator<std::basic_string<wchar_t> >> struct _Vector_base {
        struct _Vector_base;
        typedef typename allocator<basic_string<wchar_t> >::rebind<basic_string<wchar_t> >::other _Tp_alloc_type;
        struct _Vector_impl : public _Tp_alloc_type {
            struct _Vector_impl;
            typename _Tp_alloc_type::pointer _M_start;
            typename _Tp_alloc_type::pointer _M_finish;
            typename _Tp_alloc_type::pointer _M_end_of_storage;
            _Vector_impl() : _Tp_alloc_type(), _M_start((ImplicitCastExpr 0xa0dbeb8 </usr/include/c++/4.6/bits/stl_vector.h:83:31> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' <NullToPointer>
  (IntegerLiteral 0x9fce4e8 <col:31> 'int' 0))
), _M_finish((ImplicitCastExpr 0xa0dbfb8 </usr/include/c++/4.6/bits/stl_vector.h:83:45> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' <NullToPointer>
  (IntegerLiteral 0x9fce538 <col:45> 'int' 0))
), _M_end_of_storage((ImplicitCastExpr 0xa0dc0b8 </usr/include/c++/4.6/bits/stl_vector.h:83:67> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' <NullToPointer>
  (IntegerLiteral 0x9fce588 <col:67> 'int' 0))
) (CompoundStmt 0x9fce5e8 </usr/include/c++/4.6/bits/stl_vector.h:84:2, col:4>)


            _Vector_impl(const _Tp_alloc_type &__a) : _Tp_alloc_type((DeclRefExpr 0x9e28ee4 </usr/include/c++/4.6/bits/stl_vector.h:87:19> 'const _Tp_alloc_type':'const class std::allocator<class std::basic_string<wchar_t> >' lvalue ParmVar 0xa0bbed0 '__a' 'const _Tp_alloc_type &')
), _M_start((ImplicitCastExpr 0x9e29108 </usr/include/c++/4.6/bits/stl_vector.h:87:34> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' <NullToPointer>
  (IntegerLiteral 0x9fce658 <col:34> 'int' 0))
), _M_finish((ImplicitCastExpr 0x9e29208 </usr/include/c++/4.6/bits/stl_vector.h:87:48> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' <NullToPointer>
  (IntegerLiteral 0x9fce6a8 <col:48> 'int' 0))
), _M_end_of_storage((ImplicitCastExpr 0x9e29308 </usr/include/c++/4.6/bits/stl_vector.h:87:70> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' <NullToPointer>
  (IntegerLiteral 0x9fce6f8 <col:70> 'int' 0))
) (CompoundStmt 0x9fce758 </usr/include/c++/4.6/bits/stl_vector.h:88:2, col:4>)


            inline _Vector_impl(const std::_Vector_base<std::basic_string<wchar_t>, std::allocator<std::basic_string<wchar_t> > >::_Vector_impl &) throw();
            inline void ~_Vector_impl() throw() (CompoundStmt 0xa0dbcd0 </usr/include/c++/4.6/bits/stl_vector.h:75:14>)


        };
    public:
    public:
        typedef std::allocator<std::basic_string<wchar_t> > allocator_type;
        _Tp_alloc_type &_M_get_Tp_allocator() (CompoundStmt 0xa0dd490 </usr/include/c++/4.6/bits/stl_vector.h:96:7, col:63>
  (ReturnStmt 0xa0dd480 <col:9, col:60>
    (UnaryOperator 0xa0dd468 <col:16, col:60> '_Tp_alloc_type':'class std::allocator<class std::basic_string<wchar_t> >' lvalue prefix '*'
      (CXXStaticCastExpr 0xa0dd450 <col:17, col:60> '_Tp_alloc_type *' static_cast<_Tp_alloc_type *> <NoOp>
        (ImplicitCastExpr 0xa0dd440 <col:46, col:53> '_Tp_alloc_type *' <DerivedToBase (allocator)>
          (UnaryOperator 0xa0dd428 <col:46, col:53> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > >::_Vector_impl *' prefix '&'
            (MemberExpr 0xa0dd3e8 <col:47, col:53> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > >::_Vector_impl' lvalue ->_M_impl 0xa0bc0a0
              (CXXThisExpr 0xa0dd3d8 <col:47> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' this))))))))


        const _Tp_alloc_type &_M_get_Tp_allocator() const (CompoundStmt 0xa0e0b20 </usr/include/c++/4.6/bits/stl_vector.h:100:7, col:69>
  (ReturnStmt 0xa0e0b10 <col:9, col:66>
    (UnaryOperator 0xa0e0af8 <col:16, col:66> 'const _Tp_alloc_type':'const class std::allocator<class std::basic_string<wchar_t> >' lvalue prefix '*'
      (CXXStaticCastExpr 0xa0e0ae0 <col:17, col:66> 'const _Tp_alloc_type *' static_cast<const _Tp_alloc_type *> <NoOp>
        (ImplicitCastExpr 0xa0e0ad0 <col:52, col:59> 'const _Tp_alloc_type *' <DerivedToBase (allocator)>
          (UnaryOperator 0xa0e0ab8 <col:52, col:59> 'const struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > >::_Vector_impl *' prefix '&'
            (MemberExpr 0xa0e0a78 <col:53, col:59> 'const struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > >::_Vector_impl' lvalue ->_M_impl 0xa0bc0a0
              (CXXThisExpr 0xa0e0a68 <col:53> 'const struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' this))))))))


        allocator_type get_allocator() const;
        _Vector_base() : _M_impl() (CompoundStmt 0x9fceb30 </usr/include/c++/4.6/bits/stl_vector.h:107:19, col:21>)


        _Vector_base(const allocator_type &__a);
        _Vector_base(size_t __n);
        _Vector_base(size_t __n, const allocator_type &__a) : _M_impl((DeclRefExpr 0x9e28aa4 </usr/include/c++/4.6/bits/stl_vector.h:121:17> 'const allocator_type':'const class std::allocator<class std::basic_string<wchar_t> >' lvalue ParmVar 0xa0bb2a0 '__a' 'const allocator_type &')
) (CompoundStmt 0x9e28ec8 </usr/include/c++/4.6/bits/stl_vector.h:122:7, line:126:7>
  (BinaryOperator 0x9e28c98 <line:123:2, col:48> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' lvalue '='
    (MemberExpr 0x9e28c00 <col:2, col:16> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' lvalue ._M_start 0xa0bba10
      (MemberExpr 0x9e28be0 <col:2, col:8> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > >::_Vector_impl' lvalue ->_M_impl 0xa0bc0a0
        (CXXThisExpr 0x9e28bd0 <col:2> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' this)))
    (CXXMemberCallExpr 0x9e28c68 <col:27, col:48> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *'
      (MemberExpr 0x9e28c30 <col:27, col:33> '<bound member function type>' ->_M_allocate 0xa0bc250
        (CXXThisExpr 0x9e28c20 <col:27> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' this))
      (ImplicitCastExpr 0x9e28c88 <col:45> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9e28c50 <col:45> 'size_t':'unsigned int' lvalue ParmVar 0xa0bb180 '__n' 'size_t':'unsigned int'))))
  (BinaryOperator 0x9e28d60 <line:124:2, col:42> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' lvalue '='
    (MemberExpr 0x9e28ce0 <col:2, col:16> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' lvalue ._M_finish 0xa0bbb30
      (MemberExpr 0x9e28cc0 <col:2, col:8> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > >::_Vector_impl' lvalue ->_M_impl 0xa0bc0a0
        (CXXThisExpr 0x9e28cb0 <col:2> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' this)))
    (ImplicitCastExpr 0x9e28d50 <col:28, col:42> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' <LValueToRValue>
      (MemberExpr 0x9e28d30 <col:28, col:42> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' lvalue ._M_start 0xa0bba10
        (MemberExpr 0x9e28d10 <col:28, col:34> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > >::_Vector_impl' lvalue ->_M_impl 0xa0bc0a0
          (CXXThisExpr 0x9e28d00 <col:28> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' this)))))
  (BinaryOperator 0x9e28eb0 <line:125:2, col:61> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' lvalue '='
    (MemberExpr 0x9e28da8 <col:2, col:16> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' lvalue ._M_end_of_storage 0xa0bbc50
      (MemberExpr 0x9e28d88 <col:2, col:8> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > >::_Vector_impl' lvalue ->_M_impl 0xa0bc0a0
        (CXXThisExpr 0x9e28d78 <col:2> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' this)))
    (BinaryOperator 0x9e28e98 <col:36, col:61> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' '+'
      (ImplicitCastExpr 0x9e28e78 <col:36, col:50> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' <LValueToRValue>
        (MemberExpr 0x9e28e40 <col:36, col:50> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' lvalue ._M_start 0xa0bba10
          (MemberExpr 0x9e28e20 <col:36, col:42> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > >::_Vector_impl' lvalue ->_M_impl 0xa0bc0a0
            (CXXThisExpr 0x9e28e10 <col:36> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' this))))
      (ImplicitCastExpr 0x9e28e88 <col:61> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9e28e60 <col:61> 'size_t':'unsigned int' lvalue ParmVar 0xa0bb180 '__n' 'size_t':'unsigned int')))))


        void ~_Vector_base() (CompoundStmt 0xa0dc430 </usr/include/c++/4.6/bits/stl_vector.h:142:7, line:143:36>
  (CXXMemberCallExpr 0xa0dc3e8 <line:142:9, line:143:33> 'void'
    (MemberExpr 0xa0dc268 <line:142:9> '<bound member function type>' ->_M_deallocate 0xa0bc470
      (CXXThisExpr 0xa0dc188 <col:9> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' this))
    (ImplicitCastExpr 0xa0dc410 <col:23, col:37> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' <LValueToRValue>
      (MemberExpr 0xa0dc2b8 <col:23, col:37> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' lvalue ._M_start 0xa0bba10
        (MemberExpr 0xa0dc298 <col:23, col:29> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > >::_Vector_impl' lvalue ->_M_impl 0xa0bc0a0
          (CXXThisExpr 0xa0dc288 <col:23> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' this))))
    (ImplicitCastExpr 0xa0dc420 <col:47, line:143:25> 'size_t':'unsigned int' <IntegralCast>
      (BinaryOperator 0xa0dc3d0 <line:142:47, line:143:25> 'int' '-'
        (ImplicitCastExpr 0xa0dc3b0 <line:142:47, col:61> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' <LValueToRValue>
          (MemberExpr 0xa0dc340 <col:47, col:61> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' lvalue ._M_end_of_storage 0xa0bbc50
            (MemberExpr 0xa0dc320 <col:47, col:53> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > >::_Vector_impl' lvalue ->_M_impl 0xa0bc0a0
              (CXXThisExpr 0xa0dc310 <col:47> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' this))))
        (ImplicitCastExpr 0xa0dc3c0 <line:143:11, col:25> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' <LValueToRValue>
          (MemberExpr 0xa0dc390 <col:11, col:25> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' lvalue ._M_start 0xa0bba10
            (MemberExpr 0xa0dc370 <col:11, col:17> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > >::_Vector_impl' lvalue ->_M_impl 0xa0bc0a0
              (CXXThisExpr 0xa0dc360 <col:11> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' this))))))))


    public:
    public:
        std::_Vector_base<std::basic_string<wchar_t>, std::allocator<std::basic_string<wchar_t> > >::_Vector_impl _M_impl;
        typename _Tp_alloc_type::pointer _M_allocate(size_t __n) (CompoundStmt 0xa0e24d0 </usr/include/c++/4.6/bits/stl_vector.h:150:7, col:54>
  (ReturnStmt 0xa0e24c0 <col:9, col:51>
    (ConditionalOperator 0xa0e24a0 <col:16, col:51> 'pointer':'class std::basic_string<wchar_t> *'
      (BinaryOperator 0xa0e22c0 <col:16, col:23> '_Bool' '!='
        (ImplicitCastExpr 0xa0e22a0 <col:16> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa0e2284 <col:16> 'size_t':'unsigned int' lvalue ParmVar 0xa0bc1b0 '__n' 'size_t':'unsigned int'))
        (ImplicitCastExpr 0xa0e22b0 <col:23> 'unsigned int' <IntegralCast>
          (IntegerLiteral 0x9fcf698 <col:23> 'int' 0)))
      (CXXMemberCallExpr 0xa0e2410 <col:27, col:47> 'pointer':'class std::basic_string<wchar_t> *'
        (MemberExpr 0xa0e23d8 <col:27, col:35> '<bound member function type>' .allocate 0xa0b9000
          (ImplicitCastExpr 0xa0e2430 <col:27> 'class __gnu_cxx::new_allocator<class std::basic_string<wchar_t> >' lvalue <UncheckedDerivedToBase (allocator -> new_allocator)>
            (MemberExpr 0xa0e23b8 <col:27> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > >::_Vector_impl' lvalue ->_M_impl 0xa0bc0a0
              (CXXThisExpr 0xa0e22d8 <col:27> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' this))))
        (ImplicitCastExpr 0xa0e2458 <col:44> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa0e23f8 <col:44> 'size_t':'unsigned int' lvalue ParmVar 0xa0bc1b0 '__n' 'size_t':'unsigned int'))
        (CXXDefaultArgExpr 0xa0e2478 <<invalid sloc>> 'const void *'))
      (ImplicitCastExpr 0xa0e2490 <col:51> 'pointer':'class std::basic_string<wchar_t> *' <NullToPointer>
        (IntegerLiteral 0x9fcf788 <col:51> 'int' 0)))))


        void _M_deallocate(typename _Tp_alloc_type::pointer __p, size_t __n) (CompoundStmt 0xa0dc660 </usr/include/c++/4.6/bits/stl_vector.h:154:7, line:157:7>
  (IfStmt 0xa0dc640 <line:155:2, line:156:31>
    <<<NULL>>>
    (ImplicitCastExpr 0xa0dc470 <line:155:6> '_Bool' <PointerToBoolean>
      (ImplicitCastExpr 0xa0dc460 <col:6> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' <LValueToRValue>
        (DeclRefExpr 0xa0dc444 <col:6> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' lvalue ParmVar 0xa0bc3b0 '__p' 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *')))
    (CXXMemberCallExpr 0xa0dc5c8 <line:156:4, col:31> 'void'
      (MemberExpr 0xa0dc578 <col:4, col:12> '<bound member function type>' .deallocate 0xa0b91e0
        (ImplicitCastExpr 0xa0dc608 <col:4> 'class __gnu_cxx::new_allocator<class std::basic_string<wchar_t> >' lvalue <UncheckedDerivedToBase (allocator -> new_allocator)>
          (MemberExpr 0xa0dc558 <col:4> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > >::_Vector_impl' lvalue ->_M_impl 0xa0bc0a0
            (CXXThisExpr 0xa0dc480 <col:4> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' this))))
      (ImplicitCastExpr 0xa0dc620 <col:23> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' <LValueToRValue>
        (DeclRefExpr 0xa0dc598 <col:23> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' lvalue ParmVar 0xa0bc3b0 '__p' 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *'))
      (ImplicitCastExpr 0xa0dc630 <col:28> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa0dc5b0 <col:28> 'size_t':'unsigned int' lvalue ParmVar 0xa0bc3f0 '__n' 'size_t':'unsigned int')))
    <<<NULL>>>))


        inline _Vector_base(const std::_Vector_base<std::basic_string<wchar_t>, std::allocator<std::basic_string<wchar_t> > > &) throw();
    }
template <typename _Tp, typename _Alloc> struct _Vector_base {
        struct _Vector_base;
        typedef typename _Alloc::_Alloc::rebind<_Tp>::other _Tp_alloc_type;
        struct _Vector_impl : public _Tp_alloc_type {
            struct _Vector_impl;
            typename _Tp_alloc_type::pointer _M_start;
            typename _Tp_alloc_type::pointer _M_finish;
            typename _Tp_alloc_type::pointer _M_end_of_storage;
            _Vector_impl() : _Tp_alloc_type(), _M_start((IntegerLiteral 0x9fce4e8 </usr/include/c++/4.6/bits/stl_vector.h:83:31> 'int' 0)
), _M_finish((IntegerLiteral 0x9fce538 </usr/include/c++/4.6/bits/stl_vector.h:83:45> 'int' 0)
), _M_end_of_storage((IntegerLiteral 0x9fce588 </usr/include/c++/4.6/bits/stl_vector.h:83:67> 'int' 0)
) (CompoundStmt 0x9fce5e8 </usr/include/c++/4.6/bits/stl_vector.h:84:2, col:4>)


            _Vector_impl(const _Tp_alloc_type &__a) : _Tp_alloc_type((DeclRefExpr 0x9fce5f8 </usr/include/c++/4.6/bits/stl_vector.h:87:19> 'const _Tp_alloc_type':'const typename _Alloc::_Alloc::rebind<_Tp>::other' lvalue ParmVar 0x9fcd8a0 '__a' 'const _Tp_alloc_type &')
), _M_start((IntegerLiteral 0x9fce658 </usr/include/c++/4.6/bits/stl_vector.h:87:34> 'int' 0)
), _M_finish((IntegerLiteral 0x9fce6a8 </usr/include/c++/4.6/bits/stl_vector.h:87:48> 'int' 0)
), _M_end_of_storage((IntegerLiteral 0x9fce6f8 </usr/include/c++/4.6/bits/stl_vector.h:87:70> 'int' 0)
) (CompoundStmt 0x9fce758 </usr/include/c++/4.6/bits/stl_vector.h:88:2, col:4>)


        };
    public:
    public:
        typedef _Alloc allocator_type;
        _Tp_alloc_type &_M_get_Tp_allocator() (CompoundStmt 0x9fce8b8 </usr/include/c++/4.6/bits/stl_vector.h:96:7, col:63>
  (ReturnStmt 0x9fce8a8 <col:9, col:60>
    (UnaryOperator 0x9fce890 <col:16, col:60> '<dependent type>' prefix '*'
      (CXXStaticCastExpr 0x9fce878 <col:17, col:60> '_Tp_alloc_type *' static_cast<_Tp_alloc_type *> <Dependent>
        (CXXOperatorCallExpr 0x9fce810 <col:46, col:53> '<dependent type>'
          (UnresolvedLookupExpr 0x9fce7d0 <col:46, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e0a5b0 0x9e0bdb0 0x9e0d020)
          (CXXDependentScopeMemberExpr 0x9fce798 <col:47, col:53> '<dependent type>' lvalue
            (CXXThisExpr 0x9fce788 <col:47> '_Vector_base<_Tp, _Alloc> *' this)))))))


        const _Tp_alloc_type &_M_get_Tp_allocator() const (CompoundStmt 0x9fcea18 </usr/include/c++/4.6/bits/stl_vector.h:100:7, col:69>
  (ReturnStmt 0x9fcea08 <col:9, col:66>
    (UnaryOperator 0x9fce9f0 <col:16, col:66> '<dependent type>' prefix '*'
      (CXXStaticCastExpr 0x9fce9d8 <col:17, col:66> 'const _Tp_alloc_type *' static_cast<const _Tp_alloc_type *> <Dependent>
        (CXXOperatorCallExpr 0x9fce970 <col:52, col:59> '<dependent type>'
          (UnresolvedLookupExpr 0x9fce930 <col:52, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e0a5b0 0x9e0bdb0 0x9e0d020)
          (CXXDependentScopeMemberExpr 0x9fce8f8 <col:53, col:59> '<dependent type>' lvalue
            (CXXThisExpr 0x9fce8e8 <col:53> 'const _Vector_base<_Tp, _Alloc> *' this)))))))


        allocator_type get_allocator() const (CompoundStmt 0x9fcead8 </usr/include/c++/4.6/bits/stl_vector.h:104:7, col:55>
  (ReturnStmt 0x9fceac8 <col:9, col:52>
    (CXXUnresolvedConstructExpr 0x9fceaa8 <col:16, col:52> 'allocator_type':'_Alloc'
      (CallExpr 0x9fcea88 <col:31, col:51> '<dependent type>'
        (UnresolvedMemberExpr 0x9fcea48 <col:31> '<bound member function type>' lvalue)))))


        _Vector_base<_Tp, _Alloc>() : _M_impl() (CompoundStmt 0x9fceb30 </usr/include/c++/4.6/bits/stl_vector.h:107:19, col:21>)


        _Vector_base<_Tp, _Alloc>(const allocator_type &__a) : _M_impl((DeclRefExpr 0x9fceb40 </usr/include/c++/4.6/bits/stl_vector.h:110:17> 'const allocator_type':'const _Alloc' lvalue ParmVar 0x9fcdd60 '__a' 'const allocator_type &')
) (CompoundStmt 0x9fceba0 </usr/include/c++/4.6/bits/stl_vector.h:110:22, col:24>)


        _Vector_base<_Tp, _Alloc>(size_t __n) : _M_impl() (CompoundStmt 0x9fcefc0 </usr/include/c++/4.6/bits/stl_vector.h:114:7, line:118:7>
  (BinaryOperator 0x9fcecf0 <line:115:2, col:48> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x9fcec38 <col:2, col:16> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9fcec00 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0x9fcebf0 <col:2> '_Vector_base<_Tp, _Alloc> *' this)))
    (CallExpr 0x9fcecd0 <col:27, col:48> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9fcec80 <col:27, col:33> '<dependent type>' lvalue
        (CXXThisExpr 0x9fcec70 <col:27> '_Vector_base<_Tp, _Alloc> *' this))
      (DeclRefExpr 0x9fcecb4 <col:45> 'size_t':'unsigned int' lvalue ParmVar 0x9fcde80 '__n' 'size_t':'unsigned int')))
  (BinaryOperator 0x9fcee08 <line:116:2, col:42> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x9fced50 <col:2, col:16> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9fced18 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0x9fced08 <col:2> '_Vector_base<_Tp, _Alloc> *' this)))
    (CXXDependentScopeMemberExpr 0x9fcedd0 <col:28, col:42> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9fced98 <col:28, col:34> '<dependent type>' lvalue
        (CXXThisExpr 0x9fced88 <col:28> '_Vector_base<_Tp, _Alloc> *' this))))
  (BinaryOperator 0x9fcefa8 <line:117:2, col:61> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x9fcee68 <col:2, col:16> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9fcee30 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0x9fcee20 <col:2> '_Vector_base<_Tp, _Alloc> *' this)))
    (CXXOperatorCallExpr 0x9fcef80 <col:36, col:61> '<dependent type>'
      (UnresolvedLookupExpr 0x9fcef38 <col:59, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d86680 0x9d87280 0x9d5d090 0x9d5d890)
      (CXXDependentScopeMemberExpr 0x9fceee8 <col:36, col:50> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0x9fceeb0 <col:36, col:42> '<dependent type>' lvalue
          (CXXThisExpr 0x9fceea0 <col:36> '_Vector_base<_Tp, _Alloc> *' this)))
      (DeclRefExpr 0x9fcef1c <col:61> 'size_t':'unsigned int' lvalue ParmVar 0x9fcde80 '__n' 'size_t':'unsigned int'))))


        _Vector_base<_Tp, _Alloc>(size_t __n, const allocator_type &__a) : _M_impl((DeclRefExpr 0x9fcefdc </usr/include/c++/4.6/bits/stl_vector.h:121:17> 'const allocator_type':'const _Alloc' lvalue ParmVar 0x9fcdfa0 '__a' 'const allocator_type &')
) (CompoundStmt 0x9fcf410 </usr/include/c++/4.6/bits/stl_vector.h:122:7, line:126:7>
  (BinaryOperator 0x9fcf140 <line:123:2, col:48> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x9fcf088 <col:2, col:16> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9fcf050 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0x9fcf040 <col:2> '_Vector_base<_Tp, _Alloc> *' this)))
    (CallExpr 0x9fcf120 <col:27, col:48> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9fcf0d0 <col:27, col:33> '<dependent type>' lvalue
        (CXXThisExpr 0x9fcf0c0 <col:27> '_Vector_base<_Tp, _Alloc> *' this))
      (DeclRefExpr 0x9fcf104 <col:45> 'size_t':'unsigned int' lvalue ParmVar 0x9fcdf50 '__n' 'size_t':'unsigned int')))
  (BinaryOperator 0x9fcf258 <line:124:2, col:42> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x9fcf1a0 <col:2, col:16> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9fcf168 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0x9fcf158 <col:2> '_Vector_base<_Tp, _Alloc> *' this)))
    (CXXDependentScopeMemberExpr 0x9fcf220 <col:28, col:42> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9fcf1e8 <col:28, col:34> '<dependent type>' lvalue
        (CXXThisExpr 0x9fcf1d8 <col:28> '_Vector_base<_Tp, _Alloc> *' this))))
  (BinaryOperator 0x9fcf3f8 <line:125:2, col:61> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x9fcf2b8 <col:2, col:16> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9fcf280 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0x9fcf270 <col:2> '_Vector_base<_Tp, _Alloc> *' this)))
    (CXXOperatorCallExpr 0x9fcf3d0 <col:36, col:61> '<dependent type>'
      (UnresolvedLookupExpr 0x9fcf388 <col:59, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d86680 0x9d87280 0x9d5d090 0x9d5d890)
      (CXXDependentScopeMemberExpr 0x9fcf338 <col:36, col:50> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0x9fcf300 <col:36, col:42> '<dependent type>' lvalue
          (CXXThisExpr 0x9fcf2f0 <col:36> '_Vector_base<_Tp, _Alloc> *' this)))
      (DeclRefExpr 0x9fcf36c <col:61> 'size_t':'unsigned int' lvalue ParmVar 0x9fcdf50 '__n' 'size_t':'unsigned int'))))


        void ~_Vector_base<_Tp, _Alloc>() (CompoundStmt 0x9fcf668 </usr/include/c++/4.6/bits/stl_vector.h:142:7, line:143:36>
  (CallExpr 0x9fcf640 <line:142:9, line:143:33> '<dependent type>'
    (MemberExpr 0x9fcf440 <line:142:9> '<bound member function type>' ->_M_deallocate 0x9fce440
      (CXXThisExpr 0x9fcf430 <col:9> '_Vector_base<_Tp, _Alloc> *' this))
    (CXXDependentScopeMemberExpr 0x9fcf4a8 <col:23, col:37> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9fcf470 <col:23, col:29> '<dependent type>' lvalue
        (CXXThisExpr 0x9fcf460 <col:23> '_Vector_base<_Tp, _Alloc> *' this)))
    (CXXOperatorCallExpr 0x9fcf618 <col:47, line:143:25> '<dependent type>'
      (UnresolvedLookupExpr 0x9fcf5e0 <col:9, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
      (CXXDependentScopeMemberExpr 0x9fcf528 <line:142:47, col:61> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0x9fcf4f0 <col:47, col:53> '<dependent type>' lvalue
          (CXXThisExpr 0x9fcf4e0 <col:47> '_Vector_base<_Tp, _Alloc> *' this)))
      (CXXDependentScopeMemberExpr 0x9fcf5a8 <line:143:11, col:25> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0x9fcf570 <col:11, col:17> '<dependent type>' lvalue
          (CXXThisExpr 0x9fcf560 <col:11> '_Vector_base<_Tp, _Alloc> *' this))))))


    public:
    public:
        std::_Vector_base::_Vector_impl _M_impl;
        typename _Tp_alloc_type::pointer _M_allocate(size_t __n) (CompoundStmt 0x9fcf7d0 </usr/include/c++/4.6/bits/stl_vector.h:150:7, col:54>
  (ReturnStmt 0x9fcf7c0 <col:9, col:51>
    (ConditionalOperator 0x9fcf7a0 <col:16, col:51> '<dependent type>'
      (BinaryOperator 0x9fcf6d0 <col:16, col:23> '_Bool' '!='
        (ImplicitCastExpr 0x9fcf6b0 <col:16> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9fcf67c <col:16> 'size_t':'unsigned int' lvalue ParmVar 0x9fce200 '__n' 'size_t':'unsigned int'))
        (ImplicitCastExpr 0x9fcf6c0 <col:23> 'unsigned int' <IntegralCast>
          (IntegerLiteral 0x9fcf698 <col:23> 'int' 0)))
      (CallExpr 0x9fcf768 <col:27, col:47> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fcf718 <col:27, col:35> '<dependent type>' lvalue
          (MemberExpr 0x9fcf6f8 <col:27> 'struct std::_Vector_base::_Vector_impl' lvalue ->_M_impl 0x9fce1a0
            (CXXThisExpr 0x9fcf6e8 <col:27> '_Vector_base<_Tp, _Alloc> *' this)))
        (DeclRefExpr 0x9fcf74c <col:44> 'size_t':'unsigned int' lvalue ParmVar 0x9fce200 '__n' 'size_t':'unsigned int'))
      (IntegerLiteral 0x9fcf788 <col:51> 'int' 0))))


        void _M_deallocate(typename _Tp_alloc_type::pointer __p, size_t __n) (CompoundStmt 0x9fcf8e0 </usr/include/c++/4.6/bits/stl_vector.h:154:7, line:157:7>
  (IfStmt 0x9fcf8c0 <line:155:2, line:156:31>
    <<<NULL>>>
    (DeclRefExpr 0x9fcf7e4 <line:155:6> 'typename _Tp_alloc_type::pointer' lvalue ParmVar 0x9fce360 '__p' 'typename _Tp_alloc_type::pointer')
    (CallExpr 0x9fcf898 <line:156:4, col:31> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9fcf830 <col:4, col:12> '<dependent type>' lvalue
        (MemberExpr 0x9fcf810 <col:4> 'struct std::_Vector_base::_Vector_impl' lvalue ->_M_impl 0x9fce1a0
          (CXXThisExpr 0x9fcf800 <col:4> '_Vector_base<_Tp, _Alloc> *' this)))
      (DeclRefExpr 0x9fcf864 <col:23> 'typename _Tp_alloc_type::pointer' lvalue ParmVar 0x9fce360 '__p' 'typename _Tp_alloc_type::pointer')
      (DeclRefExpr 0x9fcf87c <col:28> 'size_t':'unsigned int' lvalue ParmVar 0x9fce3a0 '__n' 'size_t':'unsigned int'))
    <<<NULL>>>))


    };
    template <typename _Tp = std::basic_string<char>, typename _Alloc = std::allocator<std::basic_string<char> >> class vector
template <typename _Tp = std::basic_string<wchar_t>, typename _Alloc = std::allocator<std::basic_string<wchar_t> >> class vector : protected _Vector_base<std::basic_string<wchar_t>, std::allocator<std::basic_string<wchar_t> > > {
        class vector;
        typedef typename allocator<basic_string<wchar_t> >::value_type _Alloc_value_type;
        typedef _Vector_base<std::basic_string<wchar_t>, std::allocator<std::basic_string<wchar_t> > > _Base;
        typedef typename _Base::_Tp_alloc_type _Tp_alloc_type;
    public:
    public:
        typedef std::basic_string<wchar_t> value_type;
        typedef typename _Tp_alloc_type::pointer pointer;
        typedef typename _Tp_alloc_type::const_pointer const_pointer;
        typedef typename _Tp_alloc_type::reference reference;
        typedef typename _Tp_alloc_type::const_reference const_reference;
        typedef __gnu_cxx::__normal_iterator<pointer, vector<basic_string<wchar_t>, allocator<basic_string<wchar_t> > > > iterator;
        typedef __gnu_cxx::__normal_iterator<const_pointer, vector<basic_string<wchar_t>, allocator<basic_string<wchar_t> > > > const_iterator;
        typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
        typedef std::reverse_iterator<iterator> reverse_iterator;
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef std::allocator<std::basic_string<wchar_t> > allocator_type;
    protected:
    protected:
        using _Base::_M_allocate;
        ;
        using _Base::_M_deallocate;
        ;
        using _Base::_M_impl;
        ;
        using _Base::_M_get_Tp_allocator;
        ;
        ;
    public:
    public:
        vector() : _Base() (CompoundStmt 0x9fd9e30 </usr/include/c++/4.6/bits/stl_vector.h:218:17, col:19>)


        vector(const allocator_type &__a);
        vector(size_type __n, const value_type &__value, const allocator_type &__a);
        vector(const std::vector<std::basic_string<wchar_t>, std::allocator<std::basic_string<wchar_t> > > &__x) : _Base((CXXMemberCallExpr 0xa0f6df8 </usr/include/c++/4.6/bits/stl_vector.h:279:15, col:24> 'size_type':'unsigned int'
  (MemberExpr 0xa0f6dd4 <col:15, col:19> '<bound member function type>' .size 0xa0c13c0
    (DeclRefExpr 0xa0f6dbc <col:15> 'const class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > >' lvalue ParmVar 0xa0bf8d0 '__x' 'const class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > &')))
, (CXXMemberCallExpr 0xa0f6e98 </usr/include/c++/4.6/bits/stl_vector.h:279:27, col:51> 'const _Tp_alloc_type':'const class std::allocator<class std::basic_string<wchar_t> >' lvalue
  (MemberExpr 0xa0f6e6c <col:27, col:31> '<bound member function type>' ._M_get_Tp_allocator 0xa0ba9b0
    (ImplicitCastExpr 0xa0f6eb8 <col:27> 'const struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > >' lvalue <UncheckedDerivedToBase (_Vector_base)>
      (DeclRefExpr 0xa0f6e14 <col:27> 'const class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > >' lvalue ParmVar 0xa0bf8d0 '__x' 'const class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > &'))))
) (CompoundStmt 0x9e28a90 </usr/include/c++/4.6/bits/stl_vector.h:280:7, line:284:7>
  (BinaryOperator 0x9e28a78 <line:280:9, line:283:32> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' lvalue '='
    (MemberExpr 0xa0f703c <line:280:9, col:23> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' lvalue ._M_finish 0xa0bbb30
      (MemberExpr 0xa0f7010 <col:9, col:15> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > >::_Vector_impl' lvalue ->_M_impl 0xa0bc0a0
        (ImplicitCastExpr 0xa0f7000 <col:9> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' <UncheckedDerivedToBase (_Vector_base)>
          (CXXThisExpr 0xa0f6ff0 <col:9> 'class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' this))))
    (CallExpr 0x9e27d38 <line:281:4, line:283:32> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *'
      (ImplicitCastExpr 0x9e27d28 <line:281:4, col:9> 'class std::basic_string<wchar_t> *(*)(class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >, class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >, class std::basic_string<wchar_t> *, allocator<class std::basic_string<wchar_t> > &)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9e27cc8 <col:4, col:9> 'class std::basic_string<wchar_t> *(class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >, class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >, class std::basic_string<wchar_t> *, allocator<class std::basic_string<wchar_t> > &)' lvalue Function 0x9e27bf0 '__uninitialized_copy_a' 'class std::basic_string<wchar_t> *(class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >, class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >, class std::basic_string<wchar_t> *, allocator<class std::basic_string<wchar_t> > &)' (FunctionTemplate 0x9fc8f00 '__uninitialized_copy_a')))
      (CXXConstructExpr 0x9e28690 <col:32, col:42> 'class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >':'class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >''void (const class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > > &) throw()' elidable
        (MaterializeTemporaryExpr 0x9e28600 <col:32, col:42> 'const class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >' lvalue
          (ImplicitCastExpr 0x9e285f0 <col:32, col:42> 'const class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >' <NoOp>
            (CXXMemberCallExpr 0xa0f7110 <col:32, col:42> 'const_iterator':'class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >'
              (MemberExpr 0xa0f70f0 <col:32, col:36> '<bound member function type>' .begin 0xa0c0ad0
                (DeclRefExpr 0xa0f7098 <col:32> 'const class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > >' lvalue ParmVar 0xa0bf8d0 '__x' 'const class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > &'))))))
      (CXXConstructExpr 0x9e28a40 <col:45, col:53> 'class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >':'class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >''void (const class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > > &) throw()' elidable
        (MaterializeTemporaryExpr 0x9e28a30 <col:45, col:53> 'const class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >' lvalue
          (ImplicitCastExpr 0x9e28a20 <col:45, col:53> 'const class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >' <NoOp>
            (CXXMemberCallExpr 0x9e272d0 <col:45, col:53> 'const_iterator':'class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >'
              (MemberExpr 0x9e272b0 <col:45, col:49> '<bound member function type>' .end 0xa0c0d70
                (DeclRefExpr 0x9e27258 <col:45> 'const class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > >' lvalue ParmVar 0xa0bf8d0 '__x' 'const class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > &'))))))
      (ImplicitCastExpr 0x9e28a68 <line:282:11, col:25> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' <LValueToRValue>
        (MemberExpr 0x9e2733c <col:11, col:25> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' lvalue ._M_start 0xa0bba10
          (MemberExpr 0x9e27310 <col:11, col:17> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > >::_Vector_impl' lvalue ->_M_impl 0xa0bc0a0
            (ImplicitCastExpr 0x9e27300 <col:11> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' <UncheckedDerivedToBase (_Vector_base)>
              (CXXThisExpr 0x9e272f0 <col:11> 'class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' this)))))
      (CXXMemberCallExpr 0x9e27668 <line:283:11, col:31> '_Tp_alloc_type':'class std::allocator<class std::basic_string<wchar_t> >' lvalue
        (MemberExpr 0x9e27638 <col:11> '<bound member function type>' ->_M_get_Tp_allocator 0xa0ba800
          (ImplicitCastExpr 0x9e27688 <col:11> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' <UncheckedDerivedToBase (_Vector_base)>
            (CXXThisExpr 0x9e27628 <col:11> 'class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' this)))))))


        template <typename _InputIterator> vector(_InputIterator __first, _InputIterator __last, const allocator_type &__a);
        void ~vector() (CompoundStmt 0xa0dd260 </usr/include/c++/4.6/bits/stl_vector.h:350:7, line:351:33>
  (CallExpr 0xa0dd218 <line:350:9, line:351:30> 'void'
    (ImplicitCastExpr 0xa0dd208 <line:350:9, col:14> 'void (*)(class std::basic_string<wchar_t> *, class std::basic_string<wchar_t> *, allocator<class std::basic_string<wchar_t> > &)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa0dd1a8 <col:9, col:14> 'void (class std::basic_string<wchar_t> *, class std::basic_string<wchar_t> *, allocator<class std::basic_string<wchar_t> > &)' lvalue Function 0xa0dd0e0 '_Destroy' 'void (class std::basic_string<wchar_t> *, class std::basic_string<wchar_t> *, allocator<class std::basic_string<wchar_t> > &)' (FunctionTemplate 0x9fbdc40 '_Destroy')))
    (ImplicitCastExpr 0xa0dd240 <col:23, col:37> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' <LValueToRValue>
      (MemberExpr 0xa0dc7e4 <col:23, col:37> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' lvalue ._M_start 0xa0bba10
        (MemberExpr 0xa0dc7b8 <col:23, col:29> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > >::_Vector_impl' lvalue ->_M_impl 0xa0bc0a0
          (ImplicitCastExpr 0xa0dc7a8 <col:23> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' <UncheckedDerivedToBase (_Vector_base)>
            (CXXThisExpr 0xa0dc798 <col:23> 'class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' this)))))
    (ImplicitCastExpr 0xa0dd250 <col:47, col:61> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' <LValueToRValue>
      (MemberExpr 0xa0dc854 <col:47, col:61> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' lvalue ._M_finish 0xa0bbb30
        (MemberExpr 0xa0dc828 <col:47, col:53> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > >::_Vector_impl' lvalue ->_M_impl 0xa0bc0a0
          (ImplicitCastExpr 0xa0dc818 <col:47> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' <UncheckedDerivedToBase (_Vector_base)>
            (CXXThisExpr 0xa0dc808 <col:47> 'class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' this)))))
    (CXXMemberCallExpr 0xa0dcb88 <line:351:9, col:29> '_Tp_alloc_type':'class std::allocator<class std::basic_string<wchar_t> >' lvalue
      (MemberExpr 0xa0dcb58 <col:9> '<bound member function type>' ->_M_get_Tp_allocator 0xa0ba800
        (ImplicitCastExpr 0xa0dcba8 <col:9> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' <UncheckedDerivedToBase (_Vector_base)>
          (CXXThisExpr 0xa0dcb48 <col:9> 'class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' this))))))


        std::vector<std::basic_string<wchar_t>, std::allocator<std::basic_string<wchar_t> > > &operator=(const std::vector<std::basic_string<wchar_t>, std::allocator<std::basic_string<wchar_t> > > &__x);
        void assign(size_type __n, const value_type &__val);
        template <typename _InputIterator> void assign(_InputIterator __first, _InputIterator __last);
        using _Base::get_allocator;
        ;
        iterator begin() (CompoundStmt 0xa0f65d8 </usr/include/c++/4.6/bits/stl_vector.h:464:7, col:50>
  (ReturnStmt 0xa0f65c8 <col:9, col:47>
    (CXXConstructExpr 0xa0f65a0 <col:16, col:47> 'iterator':'class __gnu_cxx::__normal_iterator<class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >''void (const class __gnu_cxx::__normal_iterator<class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > > &) throw()' elidable
      (MaterializeTemporaryExpr 0xa0f6590 <col:16, col:47> 'const class __gnu_cxx::__normal_iterator<class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >' lvalue
        (ImplicitCastExpr 0xa0f6580 <col:16, col:47> 'const class __gnu_cxx::__normal_iterator<class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >' <NoOp>
          (CXXFunctionalCastExpr 0xa0f6508 <col:16, col:47> 'iterator':'class __gnu_cxx::__normal_iterator<class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >' functional cast to iterator <ConstructorConversion>
            (CXXConstructExpr 0xa0f64e0 <col:16, col:39> 'iterator':'class __gnu_cxx::__normal_iterator<class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >''void (class std::basic_string<wchar_t> *const &)'
              (ImplicitCastExpr 0xa0f64d0 <col:25, col:39> 'class std::basic_string<wchar_t> *const':'class std::basic_string<wchar_t> *const' lvalue <NoOp>
                (MemberExpr 0xa0f64ac <col:25, col:39> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' lvalue ._M_start 0xa0bba10
                  (MemberExpr 0xa0f6480 <col:25, col:31> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > >::_Vector_impl' lvalue ->_M_impl 0xa0bc0a0
                    (ImplicitCastExpr 0xa0f6470 <col:25> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' <UncheckedDerivedToBase (_Vector_base)>
                      (CXXThisExpr 0xa0f6460 <col:25> 'class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' this))))))))))))


        const_iterator begin() const (CompoundStmt 0x9e29bb8 </usr/include/c++/4.6/bits/stl_vector.h:473:7, col:56>
  (ReturnStmt 0x9e29ba8 <col:9, col:53>
    (CXXConstructExpr 0x9e29b80 <col:16, col:53> 'const_iterator':'class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >''void (const class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > > &) throw()' elidable
      (MaterializeTemporaryExpr 0x9e29b70 <col:16, col:53> 'const class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >' lvalue
        (ImplicitCastExpr 0x9e29b60 <col:16, col:53> 'const class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >' <NoOp>
          (CXXFunctionalCastExpr 0x9e297e8 <col:16, col:53> 'const_iterator':'class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >' functional cast to const_iterator <ConstructorConversion>
            (CXXConstructExpr 0x9e297c0 <col:16, col:45> 'const_iterator':'class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >''void (const class std::basic_string<wchar_t> *const &)'
              (MaterializeTemporaryExpr 0x9e297b0 <col:31, col:45> 'const class std::basic_string<wchar_t> *const':'const class std::basic_string<wchar_t> *const' lvalue
                (ImplicitCastExpr 0x9e297a0 <col:31, col:45> 'const class std::basic_string<wchar_t> *':'const class std::basic_string<wchar_t> *' <NoOp>
                  (ImplicitCastExpr 0x9e29790 <col:31, col:45> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' <LValueToRValue>
                    (MemberExpr 0x9e2976c <col:31, col:45> 'const typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *const' lvalue ._M_start 0xa0bba10
                      (MemberExpr 0x9e29740 <col:31, col:37> 'const struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > >::_Vector_impl' lvalue ->_M_impl 0xa0bc0a0
                        (ImplicitCastExpr 0x9e29730 <col:31> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' <UncheckedDerivedToBase (_Vector_base)>
                          (CXXThisExpr 0x9e29720 <col:31> 'const class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' this))))))))))))))


        iterator end() (CompoundStmt 0xa0f6da8 </usr/include/c++/4.6/bits/stl_vector.h:482:7, col:51>
  (ReturnStmt 0xa0f6d98 <col:9, col:48>
    (CXXConstructExpr 0xa0f6d70 <col:16, col:48> 'iterator':'class __gnu_cxx::__normal_iterator<class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >''void (const class __gnu_cxx::__normal_iterator<class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > > &) throw()' elidable
      (MaterializeTemporaryExpr 0xa0f6d60 <col:16, col:48> 'const class __gnu_cxx::__normal_iterator<class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >' lvalue
        (ImplicitCastExpr 0xa0f6d50 <col:16, col:48> 'const class __gnu_cxx::__normal_iterator<class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >' <NoOp>
          (CXXFunctionalCastExpr 0xa0f6cd8 <col:16, col:48> 'iterator':'class __gnu_cxx::__normal_iterator<class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >' functional cast to iterator <ConstructorConversion>
            (CXXConstructExpr 0xa0f6cb0 <col:16, col:39> 'iterator':'class __gnu_cxx::__normal_iterator<class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >''void (class std::basic_string<wchar_t> *const &)'
              (ImplicitCastExpr 0xa0f6ca0 <col:25, col:39> 'class std::basic_string<wchar_t> *const':'class std::basic_string<wchar_t> *const' lvalue <NoOp>
                (MemberExpr 0xa0f6c7c <col:25, col:39> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' lvalue ._M_finish 0xa0bbb30
                  (MemberExpr 0xa0f6c50 <col:25, col:31> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > >::_Vector_impl' lvalue ->_M_impl 0xa0bc0a0
                    (ImplicitCastExpr 0xa0f6c40 <col:25> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' <UncheckedDerivedToBase (_Vector_base)>
                      (CXXThisExpr 0xa0f6c30 <col:25> 'class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' this))))))))))))


        const_iterator end() const (CompoundStmt 0x9e2a258 </usr/include/c++/4.6/bits/stl_vector.h:491:7, col:57>
  (ReturnStmt 0x9e2a248 <col:9, col:54>
    (CXXConstructExpr 0x9e2a220 <col:16, col:54> 'const_iterator':'class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >''void (const class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > > &) throw()' elidable
      (MaterializeTemporaryExpr 0x9e2a210 <col:16, col:54> 'const class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >' lvalue
        (ImplicitCastExpr 0x9e2a200 <col:16, col:54> 'const class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >' <NoOp>
          (CXXFunctionalCastExpr 0x9e29e88 <col:16, col:54> 'const_iterator':'class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >' functional cast to const_iterator <ConstructorConversion>
            (CXXConstructExpr 0x9e29e60 <col:16, col:45> 'const_iterator':'class __gnu_cxx::__normal_iterator<const class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >''void (const class std::basic_string<wchar_t> *const &)'
              (MaterializeTemporaryExpr 0x9e29e50 <col:31, col:45> 'const class std::basic_string<wchar_t> *const':'const class std::basic_string<wchar_t> *const' lvalue
                (ImplicitCastExpr 0x9e29e40 <col:31, col:45> 'const class std::basic_string<wchar_t> *':'const class std::basic_string<wchar_t> *' <NoOp>
                  (ImplicitCastExpr 0x9e29e30 <col:31, col:45> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' <LValueToRValue>
                    (MemberExpr 0x9e29e0c <col:31, col:45> 'const typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *const' lvalue ._M_finish 0xa0bbb30
                      (MemberExpr 0x9e29de0 <col:31, col:37> 'const struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > >::_Vector_impl' lvalue ->_M_impl 0xa0bc0a0
                        (ImplicitCastExpr 0x9e29dd0 <col:31> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' <UncheckedDerivedToBase (_Vector_base)>
                          (CXXThisExpr 0x9e29dc0 <col:31> 'const class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' this))))))))))))))


        reverse_iterator rbegin();
        const_reverse_iterator rbegin() const;
        reverse_iterator rend();
        const_reverse_iterator rend() const;
        size_type size() const (CompoundStmt 0xa0e10e8 </usr/include/c++/4.6/bits/stl_vector.h:571:7, col:77>
  (ReturnStmt 0xa0e10d8 <col:9, col:74>
    (CXXFunctionalCastExpr 0xa0e10c0 <col:16, col:74> 'size_type':'unsigned int' functional cast to size_type <NoOp>
      (ImplicitCastExpr 0xa0e10b0 <col:26, col:66> 'size_type':'unsigned int' <IntegralCast>
        (BinaryOperator 0xa0e1098 <col:26, col:66> 'int' '-'
          (ImplicitCastExpr 0xa0e1078 <col:26, col:40> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' <LValueToRValue>
            (MemberExpr 0xa0e0fe4 <col:26, col:40> 'const typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *const' lvalue ._M_finish 0xa0bbb30
              (MemberExpr 0xa0e0fb8 <col:26, col:32> 'const struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > >::_Vector_impl' lvalue ->_M_impl 0xa0bc0a0
                (ImplicitCastExpr 0xa0e0fa8 <col:26> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' <UncheckedDerivedToBase (_Vector_base)>
                  (CXXThisExpr 0xa0e0f98 <col:26> 'const class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' this)))))
          (ImplicitCastExpr 0xa0e1088 <col:52, col:66> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' <LValueToRValue>
            (MemberExpr 0xa0e1054 <col:52, col:66> 'const typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *const' lvalue ._M_start 0xa0bba10
              (MemberExpr 0xa0e1028 <col:52, col:58> 'const struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > >::_Vector_impl' lvalue ->_M_impl 0xa0bc0a0
                (ImplicitCastExpr 0xa0e1018 <col:52> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' <UncheckedDerivedToBase (_Vector_base)>
                  (CXXThisExpr 0xa0e1008 <col:52> 'const class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' this))))))))))


        size_type max_size() const (CompoundStmt 0xa0e08f8 </usr/include/c++/4.6/bits/stl_vector.h:576:7, col:50>
  (ReturnStmt 0xa0e08e8 <col:9, col:47>
    (CXXMemberCallExpr 0xa0e0898 <col:16, col:47> 'size_type':'unsigned int'
      (MemberExpr 0xa0e0878 <col:16, col:38> '<bound member function type>' .max_size 0xa0b9250
        (ImplicitCastExpr 0xa0e08d8 <col:16, col:36> 'const class __gnu_cxx::new_allocator<class std::basic_string<wchar_t> >' lvalue <UncheckedDerivedToBase (new_allocator)>
          (CXXMemberCallExpr 0xa0e0828 <col:16, col:36> 'const _Tp_alloc_type':'const class std::allocator<class std::basic_string<wchar_t> >' lvalue
            (MemberExpr 0xa0e07f8 <col:16> '<bound member function type>' ->_M_get_Tp_allocator 0xa0ba9b0
              (ImplicitCastExpr 0xa0e0868 <col:16> 'const struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' <UncheckedDerivedToBase (_Vector_base)>
                (CXXThisExpr 0xa0e07e8 <col:16> 'const class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' this)))))))))


        void resize(size_type __new_size, value_type __x);
        size_type capacity() const (CompoundStmt 0xa0e0f48 </usr/include/c++/4.6/bits/stl_vector.h:651:7, line:652:32>
  (ReturnStmt 0xa0e0f38 <line:651:9, line:652:29>
    (CXXFunctionalCastExpr 0xa0e0f20 <line:651:16, line:652:29> 'size_type':'unsigned int' functional cast to size_type <NoOp>
      (ImplicitCastExpr 0xa0e0f10 <line:651:26, line:652:21> 'size_type':'unsigned int' <IntegralCast>
        (BinaryOperator 0xa0e0ef8 <line:651:26, line:652:21> 'int' '-'
          (ImplicitCastExpr 0xa0e0ed8 <line:651:26, col:40> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' <LValueToRValue>
            (MemberExpr 0xa0e0e44 <col:26, col:40> 'const typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *const' lvalue ._M_end_of_storage 0xa0bbc50
              (MemberExpr 0xa0e0e18 <col:26, col:32> 'const struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > >::_Vector_impl' lvalue ->_M_impl 0xa0bc0a0
                (ImplicitCastExpr 0xa0e0e08 <col:26> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' <UncheckedDerivedToBase (_Vector_base)>
                  (CXXThisExpr 0xa0e0df8 <col:26> 'const class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' this)))))
          (ImplicitCastExpr 0xa0e0ee8 <line:652:7, col:21> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' <LValueToRValue>
            (MemberExpr 0xa0e0eb4 <col:7, col:21> 'const typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *const' lvalue ._M_start 0xa0bba10
              (MemberExpr 0xa0e0e88 <col:7, col:13> 'const struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > >::_Vector_impl' lvalue ->_M_impl 0xa0bc0a0
                (ImplicitCastExpr 0xa0e0e78 <col:7> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' <UncheckedDerivedToBase (_Vector_base)>
                  (CXXThisExpr 0xa0e0e68 <col:7> 'const class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' this))))))))))


        bool empty() const;
        void reserve(size_type __n) (CompoundStmt 0xa0e0500 </usr/include/c++/4.6/bits/vector.tcc:68:5, line:86:5>
  (IfStmt 0xa0dec50 <line:69:7, line:70:45>
    <<<NULL>>>
    (BinaryOperator 0xa0debf8 <line:69:11, col:32> '_Bool' '>'
      (ImplicitCastExpr 0xa0debe8 <col:11> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa0deb54 <col:11> 'size_type':'unsigned int' lvalue ParmVar 0xa0c17a0 '__n' 'size_type':'unsigned int'))
      (CXXMemberCallExpr 0xa0deba0 <col:17, col:32> 'size_type':'unsigned int'
        (MemberExpr 0xa0deb80 <col:17, col:23> '<bound member function type>' ->max_size 0xa0c1430
          (ImplicitCastExpr 0xa0debd8 <col:17> 'const class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' <NoOp>
            (CXXThisExpr 0xa0deb70 <col:17> 'class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' this)))))
    (CallExpr 0xa0dec20 <line:70:2, col:45> 'void'
      (ImplicitCastExpr 0xa0dec10 <col:2> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0xa019c04 <col:2> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9b765e0 '__throw_length_error' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa0dec40 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0xa019bf0 <col:24, col:30> 'const char [16]' lvalue
          (StringLiteral 0xa019bc0 </usr/include/c++/4.6/bits/vector.tcc:70:27> 'const char [16]' lvalue "vector::reserve"))))
    <<<NULL>>>)
  (IfStmt 0xa0e04e0 <line:71:7, line:85:2>
    <<<NULL>>>
    (BinaryOperator 0xa0ded48 <line:71:11, col:30> '_Bool' '<'
      (CXXMemberCallExpr 0xa0decf0 <col:11, col:26> 'size_type':'unsigned int'
        (MemberExpr 0xa0decd0 <col:11, col:17> '<bound member function type>' ->capacity 0xa0c16c0
          (ImplicitCastExpr 0xa0ded10 <col:11> 'const class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' <NoOp>
            (CXXThisExpr 0xa0decc0 <col:11> 'class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' this))))
      (ImplicitCastExpr 0xa0ded38 <col:30> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa0ded1c <col:30> 'size_type':'unsigned int' lvalue ParmVar 0xa0c17a0 '__n' 'size_type':'unsigned int')))
    (CompoundStmt 0xa0e04b0 <line:72:2, line:85:2>
      (DeclStmt 0xa0deec8 <line:73:4, col:39>
        0xa0ded60 "const size_type __old_size =
          (CXXMemberCallExpr 0xa0dee98 <col:33, col:38> 'size_type':'unsigned int'
            (MemberExpr 0xa0dee78 <col:33> '<bound member function type>' ->size 0xa0c13c0
              (ImplicitCastExpr 0xa0deeb8 <col:33> 'const class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' <NoOp>
                (CXXThisExpr 0xa0ded98 <col:33> 'class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' this))))")
      (DeclStmt 0xa0df6b0 <line:74:4, line:76:57>
        0xa0defb0 "pointer __tmp =
          (CXXMemberCallExpr 0xa0df658 <line:74:20, line:76:56> 'pointer':'class std::basic_string<wchar_t> *'
            (MemberExpr 0xa0df628 <line:74:20> '<bound member function type>' ->_M_allocate_and_copy 0xa0df570
              (CXXThisExpr 0xa0df618 <col:20> 'class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' this))
            (ImplicitCastExpr 0xa0df680 <col:41> 'size_type':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0xa0df2b4 <col:41> 'size_type':'unsigned int' lvalue ParmVar 0xa0c17a0 '__n' 'size_type':'unsigned int'))
            (ImplicitCastExpr 0xa0df690 </usr/include/c++/4.6/bits/stl_iterator.h:1128:44, col:50> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' <LValueToRValue>
              (ParenExpr 0xa0df340 <col:44, col:50> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' lvalue
                (MemberExpr 0xa0df31c </usr/include/c++/4.6/bits/vector.tcc:75:32, col:46> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' lvalue ._M_start 0xa0bba10
                  (MemberExpr 0xa0df2f0 <col:32, col:38> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > >::_Vector_impl' lvalue ->_M_impl 0xa0bc0a0
                    (ImplicitCastExpr 0xa0df2e0 <col:32> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' <UncheckedDerivedToBase (_Vector_base)>
                      (CXXThisExpr 0xa0df2d0 <col:32> 'class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' this))))))
            (ImplicitCastExpr 0xa0df6a0 </usr/include/c++/4.6/bits/stl_iterator.h:1128:44, col:50> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' <LValueToRValue>
              (ParenExpr 0xa0df3c8 <col:44, col:50> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' lvalue
                (MemberExpr 0xa0df3a4 </usr/include/c++/4.6/bits/vector.tcc:76:32, col:46> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' lvalue ._M_finish 0xa0bbb30
                  (MemberExpr 0xa0df378 <col:32, col:38> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > >::_Vector_impl' lvalue ->_M_impl 0xa0bc0a0
                    (ImplicitCastExpr 0xa0df368 <col:32> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' <UncheckedDerivedToBase (_Vector_base)>
                      (CXXThisExpr 0xa0df358 <col:32> 'class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' this)))))))")
      (CallExpr 0xa0dfbf0 <line:77:4, line:78:25> 'void'
        (ImplicitCastExpr 0xa0dfbe0 <line:77:4, col:9> 'void (*)(class std::basic_string<wchar_t> *, class std::basic_string<wchar_t> *, allocator<class std::basic_string<wchar_t> > &)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa0dfbb8 <col:4, col:9> 'void (class std::basic_string<wchar_t> *, class std::basic_string<wchar_t> *, allocator<class std::basic_string<wchar_t> > &)' lvalue Function 0xa0dd0e0 '_Destroy' 'void (class std::basic_string<wchar_t> *, class std::basic_string<wchar_t> *, allocator<class std::basic_string<wchar_t> > &)' (FunctionTemplate 0x9fbdc40 '_Destroy')))
        (ImplicitCastExpr 0xa0dfc18 <col:18, col:32> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' <LValueToRValue>
          (MemberExpr 0xa0df74c <col:18, col:32> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' lvalue ._M_start 0xa0bba10
            (MemberExpr 0xa0df720 <col:18, col:24> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > >::_Vector_impl' lvalue ->_M_impl 0xa0bc0a0
              (ImplicitCastExpr 0xa0df710 <col:18> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' <UncheckedDerivedToBase (_Vector_base)>
                (CXXThisExpr 0xa0df700 <col:18> 'class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' this)))))
        (ImplicitCastExpr 0xa0dfc28 <col:42, col:56> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' <LValueToRValue>
          (MemberExpr 0xa0df7bc <col:42, col:56> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' lvalue ._M_finish 0xa0bbb30
            (MemberExpr 0xa0df790 <col:42, col:48> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > >::_Vector_impl' lvalue ->_M_impl 0xa0bc0a0
              (ImplicitCastExpr 0xa0df780 <col:42> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' <UncheckedDerivedToBase (_Vector_base)>
                (CXXThisExpr 0xa0df770 <col:42> 'class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' this)))))
        (CXXMemberCallExpr 0xa0dfae8 <line:78:4, col:24> '_Tp_alloc_type':'class std::allocator<class std::basic_string<wchar_t> >' lvalue
          (MemberExpr 0xa0dfab8 <col:4> '<bound member function type>' ->_M_get_Tp_allocator 0xa0ba800
            (ImplicitCastExpr 0xa0dfb08 <col:4> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' <UncheckedDerivedToBase (_Vector_base)>
              (CXXThisExpr 0xa0dfaa8 <col:4> 'class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' this)))))
      (CXXMemberCallExpr 0xa0e00d0 <line:79:4, line:81:28> 'void'
        (MemberExpr 0xa0dfed8 <line:79:4> '<bound member function type>' ->_M_deallocate 0xa0bc470
          (ImplicitCastExpr 0xa0e00f8 <col:4> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' <UncheckedDerivedToBase (_Vector_base)>
            (CXXThisExpr 0xa0dfec8 <col:4> 'class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' this)))
        (ImplicitCastExpr 0xa0e0108 <col:18, col:32> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' <LValueToRValue>
          (MemberExpr 0xa0dff54 <col:18, col:32> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' lvalue ._M_start 0xa0bba10
            (MemberExpr 0xa0dff28 <col:18, col:24> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > >::_Vector_impl' lvalue ->_M_impl 0xa0bc0a0
              (ImplicitCastExpr 0xa0dff18 <col:18> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' <UncheckedDerivedToBase (_Vector_base)>
                (CXXThisExpr 0xa0dff08 <col:18> 'class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' this)))))
        (ImplicitCastExpr 0xa0e0118 <line:80:4, line:81:20> 'size_t':'unsigned int' <IntegralCast>
          (BinaryOperator 0xa0e00b8 <line:80:4, line:81:20> 'int' '-'
            (ImplicitCastExpr 0xa0e0098 <line:80:4, col:18> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' <LValueToRValue>
              (MemberExpr 0xa0e0004 <col:4, col:18> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' lvalue ._M_end_of_storage 0xa0bbc50
                (MemberExpr 0xa0dffd8 <col:4, col:10> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > >::_Vector_impl' lvalue ->_M_impl 0xa0bc0a0
                  (ImplicitCastExpr 0xa0dffc8 <col:4> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' <UncheckedDerivedToBase (_Vector_base)>
                    (CXXThisExpr 0xa0dffb8 <col:4> 'class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' this)))))
            (ImplicitCastExpr 0xa0e00a8 <line:81:6, col:20> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' <LValueToRValue>
              (MemberExpr 0xa0e0074 <col:6, col:20> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' lvalue ._M_start 0xa0bba10
                (MemberExpr 0xa0e0048 <col:6, col:12> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > >::_Vector_impl' lvalue ->_M_impl 0xa0bc0a0
                  (ImplicitCastExpr 0xa0e0038 <col:6> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' <UncheckedDerivedToBase (_Vector_base)>
                    (CXXThisExpr 0xa0e0028 <col:6> 'class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' this))))))))
      (BinaryOperator 0xa0e01c0 <line:82:4, col:29> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' lvalue '='
        (MemberExpr 0xa0e0174 <col:4, col:18> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' lvalue ._M_start 0xa0bba10
          (MemberExpr 0xa0e0148 <col:4, col:10> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > >::_Vector_impl' lvalue ->_M_impl 0xa0bc0a0
            (ImplicitCastExpr 0xa0e0138 <col:4> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' <UncheckedDerivedToBase (_Vector_base)>
              (CXXThisExpr 0xa0e0128 <col:4> 'class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' this))))
        (ImplicitCastExpr 0xa0e01b0 <col:29> 'pointer':'class std::basic_string<wchar_t> *' <LValueToRValue>
          (DeclRefExpr 0xa0e0194 <col:29> 'pointer':'class std::basic_string<wchar_t> *' lvalue Var 0xa0defb0 '__tmp' 'pointer':'class std::basic_string<wchar_t> *')))
      (BinaryOperator 0xa0e0300 <line:83:4, col:38> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' lvalue '='
        (MemberExpr 0xa0e0224 <col:4, col:18> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' lvalue ._M_finish 0xa0bbb30
          (MemberExpr 0xa0e01f8 <col:4, col:10> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > >::_Vector_impl' lvalue ->_M_impl 0xa0bc0a0
            (ImplicitCastExpr 0xa0e01e8 <col:4> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' <UncheckedDerivedToBase (_Vector_base)>
              (CXXThisExpr 0xa0e01d8 <col:4> 'class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' this))))
        (BinaryOperator 0xa0e02e8 <col:30, col:38> 'pointer':'class std::basic_string<wchar_t> *' '+'
          (ImplicitCastExpr 0xa0e02c8 <col:30> 'pointer':'class std::basic_string<wchar_t> *' <LValueToRValue>
            (DeclRefExpr 0xa0e0298 <col:30> 'pointer':'class std::basic_string<wchar_t> *' lvalue Var 0xa0defb0 '__tmp' 'pointer':'class std::basic_string<wchar_t> *'))
          (ImplicitCastExpr 0xa0e02d8 <col:38> 'size_type':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0xa0e02b0 <col:38> 'const size_type':'const unsigned int' lvalue Var 0xa0ded60 '__old_size' 'const size_type':'const unsigned int'))))
      (BinaryOperator 0xa0e0498 <line:84:4, col:63> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' lvalue '='
        (MemberExpr 0xa0e0364 <col:4, col:18> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' lvalue ._M_end_of_storage 0xa0bbc50
          (MemberExpr 0xa0e0338 <col:4, col:10> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > >::_Vector_impl' lvalue ->_M_impl 0xa0bc0a0
            (ImplicitCastExpr 0xa0e0328 <col:4> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' <UncheckedDerivedToBase (_Vector_base)>
              (CXXThisExpr 0xa0e0318 <col:4> 'class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' this))))
        (BinaryOperator 0xa0e0480 <col:38, col:63> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' '+'
          (ImplicitCastExpr 0xa0e0460 <col:38, col:52> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' <LValueToRValue>
            (MemberExpr 0xa0e0424 <col:38, col:52> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' lvalue ._M_start 0xa0bba10
              (MemberExpr 0xa0e03f8 <col:38, col:44> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > >::_Vector_impl' lvalue ->_M_impl 0xa0bc0a0
                (ImplicitCastExpr 0xa0e03e8 <col:38> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' <UncheckedDerivedToBase (_Vector_base)>
                  (CXXThisExpr 0xa0e03d8 <col:38> 'class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' this)))))
          (ImplicitCastExpr 0xa0e0470 <col:63> 'size_type':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0xa0e0444 <col:63> 'size_type':'unsigned int' lvalue ParmVar 0xa0c17a0 '__n' 'size_type':'unsigned int')))))
    <<<NULL>>>))


        reference operator[](size_type __n);
        const_reference operator[](size_type __n) const;
    protected:
    protected:
        void _M_range_check(size_type __n) const;
    public:
    public:
        reference at(size_type __n);
        const_reference at(size_type __n) const;
        reference front();
        const_reference front() const;
        reference back();
        const_reference back() const;
        pointer data();
        const_pointer data() const;
        void push_back(const value_type &__x) (CompoundStmt 0xa0ece08 </usr/include/c++/4.6/bits/stl_vector.h:827:7, line:835:7>
  (IfStmt 0xa0ecde8 <line:828:2, line:834:28>
    <<<NULL>>>
    (BinaryOperator 0xa0e8fc8 <line:828:6, col:47> '_Bool' '!='
      (ImplicitCastExpr 0xa0e8fa8 <col:6, col:20> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' <LValueToRValue>
        (MemberExpr 0xa0e8f14 <col:6, col:20> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' lvalue ._M_finish 0xa0bbb30
          (MemberExpr 0xa0e8ee8 <col:6, col:12> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > >::_Vector_impl' lvalue ->_M_impl 0xa0bc0a0
            (ImplicitCastExpr 0xa0e8ed8 <col:6> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' <UncheckedDerivedToBase (_Vector_base)>
              (CXXThisExpr 0xa0e8ec8 <col:6> 'class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' this)))))
      (ImplicitCastExpr 0xa0e8fb8 <col:33, col:47> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' <LValueToRValue>
        (MemberExpr 0xa0e8f84 <col:33, col:47> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' lvalue ._M_end_of_storage 0xa0bbc50
          (MemberExpr 0xa0e8f58 <col:33, col:39> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > >::_Vector_impl' lvalue ->_M_impl 0xa0bc0a0
            (ImplicitCastExpr 0xa0e8f48 <col:33> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' <UncheckedDerivedToBase (_Vector_base)>
              (CXXThisExpr 0xa0e8f38 <col:33> 'class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' this))))))
    (CompoundStmt 0xa0e91b0 <line:829:4, line:832:4>
      (CXXMemberCallExpr 0xa0e90d8 <line:830:6, col:58> 'void'
        (MemberExpr 0xa0e902c <col:6, col:20> '<bound member function type>' .construct 0xa0b9440
          (ImplicitCastExpr 0xa0e9100 <col:6, col:12> 'class __gnu_cxx::new_allocator<class std::basic_string<wchar_t> >' lvalue <UncheckedDerivedToBase (allocator -> new_allocator)>
            (MemberExpr 0xa0e9000 <col:6, col:12> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > >::_Vector_impl' lvalue ->_M_impl 0xa0bc0a0
              (ImplicitCastExpr 0xa0e8ff0 <col:6> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' <UncheckedDerivedToBase (_Vector_base)>
                (CXXThisExpr 0xa0e8fe0 <col:6> 'class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' this)))))
        (ImplicitCastExpr 0xa0e9118 <col:30, col:44> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' <LValueToRValue>
          (MemberExpr 0xa0e909c <col:30, col:44> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' lvalue ._M_finish 0xa0bbb30
            (MemberExpr 0xa0e9070 <col:30, col:36> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > >::_Vector_impl' lvalue ->_M_impl 0xa0bc0a0
              (ImplicitCastExpr 0xa0e9060 <col:30> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' <UncheckedDerivedToBase (_Vector_base)>
                (CXXThisExpr 0xa0e9050 <col:30> 'class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' this)))))
        (DeclRefExpr 0xa0e90bc <col:55> 'const value_type':'const class std::basic_string<wchar_t>' lvalue ParmVar 0xa0c2a40 '__x' 'const value_type &'))
      (UnaryOperator 0xa0e9198 <line:831:6, col:22> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' lvalue prefix '++'
        (MemberExpr 0xa0e9174 <col:8, col:22> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' lvalue ._M_finish 0xa0bbb30
          (MemberExpr 0xa0e9148 <col:8, col:14> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > >::_Vector_impl' lvalue ->_M_impl 0xa0bc0a0
            (ImplicitCastExpr 0xa0e9138 <col:8> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' <UncheckedDerivedToBase (_Vector_base)>
              (CXXThisExpr 0xa0e9128 <col:8> 'class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' this))))))
    (CXXMemberCallExpr 0xa0ec2d0 <line:834:4, col:28> 'void'
      (MemberExpr 0xa0e92a8 <col:4> '<bound member function type>' ->_M_insert_aux 0xa0c8d20
        (CXXThisExpr 0xa0e91c8 <col:4> 'class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' this))
      (CXXConstructExpr 0xa0ecdc0 <col:18, col:22> 'iterator':'class __gnu_cxx::__normal_iterator<class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >''void (const class __gnu_cxx::__normal_iterator<class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > > &) throw()' elidable
        (MaterializeTemporaryExpr 0xa0ecd30 <col:18, col:22> 'const class __gnu_cxx::__normal_iterator<class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >' lvalue
          (ImplicitCastExpr 0xa0ecd20 <col:18, col:22> 'const class __gnu_cxx::__normal_iterator<class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >' <NoOp>
            (CXXMemberCallExpr 0xa0e9698 <col:18, col:22> 'iterator':'class __gnu_cxx::__normal_iterator<class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >'
              (MemberExpr 0xa0e9678 <col:18> '<bound member function type>' ->end 0xa0c0c20
                (CXXThisExpr 0xa0e9668 <col:18> 'class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' this))))))
      (DeclRefExpr 0xa0ec2b8 <col:25> 'const value_type':'const class std::basic_string<wchar_t>' lvalue ParmVar 0xa0c2a40 '__x' 'const value_type &'))))


        void pop_back();
        iterator insert(iterator __position, const value_type &__x);
        void insert(iterator __position, size_type __n, const value_type &__x);
        template <typename _InputIterator> void insert(iterator __position, _InputIterator __first, _InputIterator __last);
        iterator erase(iterator __position);
        iterator erase(iterator __first, iterator __last);
        void swap(std::vector<std::basic_string<wchar_t>, std::allocator<std::basic_string<wchar_t> > > &__x);
        void clear();
    protected:
    protected:
        template <typename _ForwardIterator = std::basic_string<wchar_t> *> pointer _M_allocate_and_copy(size_type __n, std::basic_string<wchar_t> *__first, std::basic_string<wchar_t> *__last) (CompoundStmt 0xa0e2268 </usr/include/c++/4.6/bits/stl_vector.h:1051:9, line:1064:2>
  (DeclStmt 0xa0e12c0 <line:1052:4, col:45>
    0xa0e11f0 "pointer __result =
      (CXXMemberCallExpr 0xa0e1280 <col:23, col:44> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *'
        (MemberExpr 0xa0e1238 <col:23, col:29> '<bound member function type>' ->_M_allocate 0xa0bc250
          (ImplicitCastExpr 0xa0e12a0 <col:23> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' <UncheckedDerivedToBase (_Vector_base)>
            (CXXThisExpr 0xa0e1228 <col:23> 'class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' this)))
        (ImplicitCastExpr 0xa0e12b0 <col:41> 'size_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa0e1264 <col:41> 'size_type':'unsigned int' lvalue ParmVar 0xa0df410 '__n' 'size_type':'unsigned int')))")
  (IfStmt 0xa0e1eb8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_vector.h:1058:6>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9fe6168 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0xa0e1ea0 </usr/include/c++/4.6/bits/stl_vector.h:1054:6, line:1058:6>
      (CallExpr 0xa0e1e08 <line:1055:8, line:1056:29> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *'
        (ImplicitCastExpr 0xa0e1df8 <line:1055:8, col:13> 'class std::basic_string<wchar_t> *(*)(class std::basic_string<wchar_t> *, class std::basic_string<wchar_t> *, class std::basic_string<wchar_t> *, allocator<class std::basic_string<wchar_t> > &)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa0e1d98 <col:8, col:13> 'class std::basic_string<wchar_t> *(class std::basic_string<wchar_t> *, class std::basic_string<wchar_t> *, class std::basic_string<wchar_t> *, allocator<class std::basic_string<wchar_t> > &)' lvalue Function 0xa0e1cc0 '__uninitialized_copy_a' 'class std::basic_string<wchar_t> *(class std::basic_string<wchar_t> *, class std::basic_string<wchar_t> *, class std::basic_string<wchar_t> *, allocator<class std::basic_string<wchar_t> > &)' (FunctionTemplate 0x9fc8f00 '__uninitialized_copy_a')))
        (ImplicitCastExpr 0xa0e1e38 <col:36> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' <LValueToRValue>
          (DeclRefExpr 0xa0e1308 <col:36> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' lvalue ParmVar 0xa0df470 '__first' 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *'))
        (ImplicitCastExpr 0xa0e1e48 <col:45> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' <LValueToRValue>
          (DeclRefExpr 0xa0e1320 <col:45> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' lvalue ParmVar 0xa0df4b0 '__last' 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *'))
        (ImplicitCastExpr 0xa0e1e58 <col:53> 'pointer':'class std::basic_string<wchar_t> *' <LValueToRValue>
          (DeclRefExpr 0xa0e1338 <col:53> 'pointer':'class std::basic_string<wchar_t> *' lvalue Var 0xa0e11f0 '__result' 'pointer':'class std::basic_string<wchar_t> *'))
        (CXXMemberCallExpr 0xa0e1658 <line:1056:8, col:28> '_Tp_alloc_type':'class std::allocator<class std::basic_string<wchar_t> >' lvalue
          (MemberExpr 0xa0e1628 <col:8> '<bound member function type>' ->_M_get_Tp_allocator 0xa0ba800
            (ImplicitCastExpr 0xa0e1678 <col:8> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' <UncheckedDerivedToBase (_Vector_base)>
              (CXXThisExpr 0xa0e1618 <col:8> 'class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' this)))))
      (ReturnStmt 0xa0e1e90 <line:1057:8, col:15>
        (ImplicitCastExpr 0xa0e1e80 <col:15> 'pointer':'class std::basic_string<wchar_t> *' <LValueToRValue>
          (DeclRefExpr 0xa0e1e64 <col:15> 'pointer':'class std::basic_string<wchar_t> *' lvalue Var 0xa0e11f0 '__result' 'pointer':'class std::basic_string<wchar_t> *'))))
    <<<NULL>>>)
  (IfStmt 0xa0e2248 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_vector.h:1063:6>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9fe6310 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa0e2230 </usr/include/c++/4.6/bits/stl_vector.h:1060:6, line:1063:6>
      (CXXMemberCallExpr 0xa0e21d8 <line:1061:8, col:35> 'void'
        (MemberExpr 0xa0e2178 <col:8> '<bound member function type>' ->_M_deallocate 0xa0bc470
          (ImplicitCastExpr 0xa0e2200 <col:8> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' <UncheckedDerivedToBase (_Vector_base)>
            (CXXThisExpr 0xa0e2168 <col:8> 'class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' this)))
        (ImplicitCastExpr 0xa0e2210 <col:22> 'pointer':'class std::basic_string<wchar_t> *' <LValueToRValue>
          (DeclRefExpr 0xa0e21a4 <col:22> 'pointer':'class std::basic_string<wchar_t> *' lvalue Var 0xa0e11f0 '__result' 'pointer':'class std::basic_string<wchar_t> *'))
        (ImplicitCastExpr 0xa0e2220 <col:32> 'size_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa0e21bc <col:32> 'size_type':'unsigned int' lvalue ParmVar 0xa0df410 '__n' 'size_type':'unsigned int')))
      (NullStmt 0x9fe63b8 <line:1062:31>))
    <<<NULL>>>))

template <typename _ForwardIterator> pointer _M_allocate_and_copy(size_type __n, _ForwardIterator __first, _ForwardIterator __last);
        template <typename _Integer> void _M_initialize_dispatch(_Integer __n, _Integer __value, std::__true_type);
        template <typename _InputIterator> void _M_initialize_dispatch(_InputIterator __first, _InputIterator __last, std::__false_type);
        template <typename _InputIterator> void _M_range_initialize(_InputIterator __first, _InputIterator __last, std::input_iterator_tag);
        template <typename _ForwardIterator> void _M_range_initialize(_ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag);
        void _M_fill_initialize(size_type __n, const value_type &__value);
        template <typename _Integer> void _M_assign_dispatch(_Integer __n, _Integer __val, std::__true_type);
        template <typename _InputIterator> void _M_assign_dispatch(_InputIterator __first, _InputIterator __last, std::__false_type);
        template <typename _InputIterator> void _M_assign_aux(_InputIterator __first, _InputIterator __last, std::input_iterator_tag);
        template <typename _ForwardIterator> void _M_assign_aux(_ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag);
        void _M_fill_assign(size_type __n, const value_type &__val);
        template <typename _Integer> void _M_insert_dispatch(iterator __pos, _Integer __n, _Integer __val, std::__true_type);
        template <typename _InputIterator> void _M_insert_dispatch(iterator __pos, _InputIterator __first, _InputIterator __last, std::__false_type);
        template <typename _InputIterator> void _M_range_insert(iterator __pos, _InputIterator __first, _InputIterator __last, std::input_iterator_tag);
        template <typename _ForwardIterator> void _M_range_insert(iterator __pos, _ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag);
        void _M_fill_insert(iterator __pos, size_type __n, const value_type &__x);
        void _M_insert_aux(iterator __position, const value_type &__x) (CompoundStmt 0xa0f1678 </usr/include/c++/4.6/bits/vector.tcc:303:5, line:373:5>
  (IfStmt 0xa0f1658 <line:304:7, line:372:2>
    <<<NULL>>>
    (BinaryOperator 0xa0ed070 <line:304:11, col:52> '_Bool' '!='
      (ImplicitCastExpr 0xa0ed050 <col:11, col:25> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' <LValueToRValue>
        (MemberExpr 0xa0ecfbc <col:11, col:25> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' lvalue ._M_finish 0xa0bbb30
          (MemberExpr 0xa0ecf90 <col:11, col:17> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > >::_Vector_impl' lvalue ->_M_impl 0xa0bc0a0
            (ImplicitCastExpr 0xa0ecf80 <col:11> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' <UncheckedDerivedToBase (_Vector_base)>
              (CXXThisExpr 0xa0ecf70 <col:11> 'class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' this)))))
      (ImplicitCastExpr 0xa0ed060 <col:38, col:52> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' <LValueToRValue>
        (MemberExpr 0xa0ed02c <col:38, col:52> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' lvalue ._M_end_of_storage 0xa0bbc50
          (MemberExpr 0xa0ed000 <col:38, col:44> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > >::_Vector_impl' lvalue ->_M_impl 0xa0bc0a0
            (ImplicitCastExpr 0xa0ecff0 <col:38> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' <UncheckedDerivedToBase (_Vector_base)>
              (CXXThisExpr 0xa0ecfe0 <col:38> 'class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' this))))))
    (CompoundStmt 0xa0edae0 <line:305:2, line:321:2>
      (CXXMemberCallExpr 0xa0ed288 <line:306:4, line:308:14> 'void'
        (MemberExpr 0xa0ed0d4 <line:306:4, col:18> '<bound member function type>' .construct 0xa0b9440
          (ImplicitCastExpr 0xa0ed2b0 <col:4, col:10> 'class __gnu_cxx::new_allocator<class std::basic_string<wchar_t> >' lvalue <UncheckedDerivedToBase (allocator -> new_allocator)>
            (MemberExpr 0xa0ed0a8 <col:4, col:10> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > >::_Vector_impl' lvalue ->_M_impl 0xa0bc0a0
              (ImplicitCastExpr 0xa0ed098 <col:4> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' <UncheckedDerivedToBase (_Vector_base)>
                (CXXThisExpr 0xa0ed088 <col:4> 'class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' this)))))
        (ImplicitCastExpr 0xa0ed2c8 <col:28, col:42> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' <LValueToRValue>
          (MemberExpr 0xa0ed144 <col:28, col:42> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' lvalue ._M_finish 0xa0bbb30
            (MemberExpr 0xa0ed118 <col:28, col:34> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > >::_Vector_impl' lvalue ->_M_impl 0xa0bc0a0
              (ImplicitCastExpr 0xa0ed108 <col:28> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' <UncheckedDerivedToBase (_Vector_base)>
                (CXXThisExpr 0xa0ed0f8 <col:28> 'class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' this)))))
        (ImplicitCastExpr 0xa0ed2d8 </usr/include/c++/4.6/bits/move.h:105:30, col:36> 'const class std::basic_string<wchar_t>':'const class std::basic_string<wchar_t>' lvalue <NoOp>
          (ParenExpr 0xa0ed270 <col:30, col:36> 'class std::basic_string<wchar_t>':'class std::basic_string<wchar_t>' lvalue
            (UnaryOperator 0xa0ed258 </usr/include/c++/4.6/bits/vector.tcc:307:21, line:308:12> 'class std::basic_string<wchar_t>':'class std::basic_string<wchar_t>' lvalue prefix '*'
              (ParenExpr 0xa0ed240 <line:307:22, line:308:12> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *'
                (BinaryOperator 0xa0ed228 <line:307:23, line:308:11> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' '-'
                  (ImplicitCastExpr 0xa0ed218 <line:307:23, col:37> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' <LValueToRValue>
                    (MemberExpr 0xa0ed1f4 <col:23, col:37> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' lvalue ._M_finish 0xa0bbb30
                      (MemberExpr 0xa0ed1c8 <col:23, col:29> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > >::_Vector_impl' lvalue ->_M_impl 0xa0bc0a0
                        (ImplicitCastExpr 0xa0ed1b8 <col:23> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' <UncheckedDerivedToBase (_Vector_base)>
                          (CXXThisExpr 0xa0ed1a8 <col:23> 'class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' this)))))
                  (IntegerLiteral 0xa026500 <line:308:11> 'int' 1)))))))
      (UnaryOperator 0xa0ed358 <line:309:4, col:20> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' lvalue prefix '++'
        (MemberExpr 0xa0ed334 <col:6, col:20> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' lvalue ._M_finish 0xa0bbb30
          (MemberExpr 0xa0ed308 <col:6, col:12> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > >::_Vector_impl' lvalue ->_M_impl 0xa0bc0a0
            (ImplicitCastExpr 0xa0ed2f8 <col:6> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' <UncheckedDerivedToBase (_Vector_base)>
              (CXXThisExpr 0xa0ed2e8 <col:6> 'class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' this)))))
      (DeclStmt 0xa0ed408 <line:311:4, col:22>
        0xa0ed390 "std::basic_string<wchar_t> __x_copy =
          (CXXConstructExpr 0xa0ed3e0 <col:19> 'class std::basic_string<wchar_t>':'class std::basic_string<wchar_t>''void (const class std::basic_string<wchar_t> &)'
            (DeclRefExpr 0xa0ed3c4 <col:19> 'const value_type':'const class std::basic_string<wchar_t>' lvalue ParmVar 0xa0c8c80 '__x' 'const value_type &'))")
      (CallExpr 0xa0ed968 </usr/include/c++/4.6/bits/stl_algobase.h:666:48, col:80> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *'
        (ImplicitCastExpr 0xa0ed958 <col:48, col:53> 'class std::basic_string<wchar_t> *(*)(class std::basic_string<wchar_t> *, class std::basic_string<wchar_t> *, class std::basic_string<wchar_t> *)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa0ed918 <col:48, col:53> 'class std::basic_string<wchar_t> *(class std::basic_string<wchar_t> *, class std::basic_string<wchar_t> *, class std::basic_string<wchar_t> *)' lvalue Function 0xa0ed850 'copy_backward' 'class std::basic_string<wchar_t> *(class std::basic_string<wchar_t> *, class std::basic_string<wchar_t> *, class std::basic_string<wchar_t> *)' (FunctionTemplate 0x9bf0b70 'copy_backward')))
        (ImplicitCastExpr 0xa0ed990 </usr/include/c++/4.6/bits/vector.tcc:313:28, col:44> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' <LValueToRValue>
          (CXXMemberCallExpr 0xa0ed488 <col:28, col:44> 'class std::basic_string<wchar_t> *const':'class std::basic_string<wchar_t> *const' lvalue
            (MemberExpr 0xa0ed464 <col:28, col:39> '<bound member function type>' .base 0xa0ec250
              (ImplicitCastExpr 0xa0ed4c8 <col:28> 'const class __gnu_cxx::__normal_iterator<class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >' lvalue <NoOp>
                (DeclRefExpr 0xa0ed44c <col:28> 'iterator':'class __gnu_cxx::__normal_iterator<class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >' lvalue ParmVar 0xa0c8b60 '__position' 'iterator':'class __gnu_cxx::__normal_iterator<class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >')))))
        (BinaryOperator 0xa0ed598 <line:314:7, col:33> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' '-'
          (ImplicitCastExpr 0xa0ed588 <col:7, col:21> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' <LValueToRValue>
            (MemberExpr 0xa0ed564 <col:7, col:21> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' lvalue ._M_finish 0xa0bbb30
              (MemberExpr 0xa0ed538 <col:7, col:13> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > >::_Vector_impl' lvalue ->_M_impl 0xa0bc0a0
                (ImplicitCastExpr 0xa0ed528 <col:7> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' <UncheckedDerivedToBase (_Vector_base)>
                  (CXXThisExpr 0xa0ed518 <col:7> 'class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' this)))))
          (IntegerLiteral 0xa026840 <col:33> 'int' 2))
        (BinaryOperator 0xa0ed670 <line:315:7, col:33> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' '-'
          (ImplicitCastExpr 0xa0ed660 <col:7, col:21> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' <LValueToRValue>
            (MemberExpr 0xa0ed63c <col:7, col:21> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' lvalue ._M_finish 0xa0bbb30
              (MemberExpr 0xa0ed610 <col:7, col:13> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > >::_Vector_impl' lvalue ->_M_impl 0xa0bc0a0
                (ImplicitCastExpr 0xa0ed600 <col:7> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' <UncheckedDerivedToBase (_Vector_base)>
                  (CXXThisExpr 0xa0ed5f0 <col:7> 'class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' this)))))
          (IntegerLiteral 0xa026940 <col:33> 'int' 1)))
      (CXXOperatorCallExpr 0xa0edab8 <line:317:4, col:18> 'class std::basic_string<wchar_t>' lvalue
        (ImplicitCastExpr 0xa0edaa8 <col:16, <invalid sloc>> 'class std::basic_string<wchar_t> &(*)(const class std::basic_string<wchar_t> &)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa0eda70 <col:16, <invalid sloc>> 'class std::basic_string<wchar_t> &(const class std::basic_string<wchar_t> &)' lvalue CXXMethod 0x9dc67b0 'operator=' 'class std::basic_string<wchar_t> &(const class std::basic_string<wchar_t> &)'))
        (CXXOperatorCallExpr 0xa0eda28 <col:4, col:5> 'class std::basic_string<wchar_t>':'class std::basic_string<wchar_t>' lvalue
          (ImplicitCastExpr 0xa0eda18 <<invalid sloc>> 'reference (*)(void) const' <FunctionToPointerDecay>
            (DeclRefExpr 0xa0ed9c8 <<invalid sloc>> 'reference (void) const' lvalue CXXMethod 0xa0eac60 'operator*' 'reference (void) const'))
          (ImplicitCastExpr 0xa0ed9b8 <col:5> 'const class __gnu_cxx::__normal_iterator<class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >' lvalue <NoOp>
            (DeclRefExpr 0xa0ed99c <col:5> 'iterator':'class __gnu_cxx::__normal_iterator<class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >' lvalue ParmVar 0xa0c8b60 '__position' 'iterator':'class __gnu_cxx::__normal_iterator<class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >')))
        (ImplicitCastExpr 0xa0eda60 <col:18> 'const class std::basic_string<wchar_t>' lvalue <NoOp>
          (DeclRefExpr 0xa0eda48 <col:18> 'class std::basic_string<wchar_t>':'class std::basic_string<wchar_t>' lvalue Var 0xa0ed390 '__x_copy' 'class std::basic_string<wchar_t>':'class std::basic_string<wchar_t>'))))
    (CompoundStmt 0xa0f1618 <line:323:2, line:372:2>
      (DeclStmt 0xa0edcb8 <line:324:4, line:325:57>
        0xa0edb10 "const size_type __len =
          (CXXMemberCallExpr 0xa0edc70 <col:6, col:56> 'size_type':'unsigned int'
            (MemberExpr 0xa0edc28 <col:6> '<bound member function type>' ->_M_check_len 0xa0c8e10
              (ImplicitCastExpr 0xa0edc98 <col:6> 'const class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' <NoOp>
                (CXXThisExpr 0xa0edb48 <col:6> 'class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' this)))
            (CXXFunctionalCastExpr 0xa0edc58 <col:19, col:30> 'size_type':'unsigned int' functional cast to size_type <NoOp>
              (ImplicitCastExpr 0xa0edc48 <col:29> 'size_type':'unsigned int' <IntegralCast>
                (IntegerLiteral 0xa026b30 <col:29> 'int' 1)))
            (ImplicitCastExpr 0xa0edca8 <col:33> 'const char *' <ArrayToPointerDecay>
              (StringLiteral 0xa026b70 <col:33> 'const char [22]' lvalue "vector::_M_insert_aux")))")
      (DeclStmt 0xa0eeb60 <line:326:4, col:57>
        0xa0edcd0 "const size_type __elems_before =
          (ImplicitCastExpr 0xa0eeb50 <col:37, col:56> 'const size_type':'const unsigned int' <IntegralCast>
            (CXXOperatorCallExpr 0xa0eeb28 <col:37, col:56> 'typename __normal_iterator<class basic_string<wchar_t> *, class vector<class basic_string<wchar_t>, class allocator<class basic_string<wchar_t> > > >::difference_type':'int'
              (ImplicitCastExpr 0xa0eeb18 <col:48, <invalid sloc>> 'typename __normal_iterator<class basic_string<wchar_t> *, class vector<class basic_string<wchar_t>, class allocator<class basic_string<wchar_t> > > >::difference_type (*)(const __normal_iterator<class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > > &, const __normal_iterator<class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > > &)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa0eeac8 <col:48, <invalid sloc>> 'typename __normal_iterator<class basic_string<wchar_t> *, class vector<class basic_string<wchar_t>, class allocator<class basic_string<wchar_t> > > >::difference_type (const __normal_iterator<class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > > &, const __normal_iterator<class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > > &)' lvalue Function 0xa0ee500 'operator-' 'typename __normal_iterator<class basic_string<wchar_t> *, class vector<class basic_string<wchar_t>, class allocator<class basic_string<wchar_t> > > >::difference_type (const __normal_iterator<class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > > &, const __normal_iterator<class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > > &)'))
              (ImplicitCastExpr 0xa0eea68 <col:37> 'const __normal_iterator<class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >':'const class __gnu_cxx::__normal_iterator<class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >' lvalue <NoOp>
                (DeclRefExpr 0xa0edd44 <col:37> 'iterator':'class __gnu_cxx::__normal_iterator<class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >' lvalue ParmVar 0xa0c8b60 '__position' 'iterator':'class __gnu_cxx::__normal_iterator<class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >'))
              (MaterializeTemporaryExpr 0xa0eeab8 <col:50, col:56> 'const __normal_iterator<class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >':'const class __gnu_cxx::__normal_iterator<class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >' lvalue
                (ImplicitCastExpr 0xa0eeaa8 <col:50, col:56> 'const __normal_iterator<class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >':'const class __gnu_cxx::__normal_iterator<class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >' <NoOp>
                  (CXXMemberCallExpr 0xa0ee128 <col:50, col:56> 'iterator':'class __gnu_cxx::__normal_iterator<class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >'
                    (MemberExpr 0xa0ee108 <col:50> '<bound member function type>' ->begin 0xa0c0940
                      (CXXThisExpr 0xa0ee0f8 <col:50> 'class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' this)))))))")
      (DeclStmt 0xa0eed10 <line:327:4, col:49>
        0xa0eec40 "pointer __new_start =
          (CXXMemberCallExpr 0xa0eecd0 <col:24, col:47> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *'
            (MemberExpr 0xa0eec88 <col:24, col:30> '<bound member function type>' ->_M_allocate 0xa0bc250
              (ImplicitCastExpr 0xa0eecf0 <col:24> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' <UncheckedDerivedToBase (_Vector_base)>
                (CXXThisExpr 0xa0eec78 <col:24> 'class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' this)))
            (ImplicitCastExpr 0xa0eed00 <col:42> 'size_type':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0xa0eecb4 <col:42> 'const size_type':'const unsigned int' lvalue Var 0xa0edb10 '__len' 'const size_type':'const unsigned int')))")
      (DeclStmt 0xa0eee50 <line:328:4, col:37>
        0xa0eedf0 "pointer __new_finish =
          (ImplicitCastExpr 0xa0eee40 <col:25> 'pointer':'class std::basic_string<wchar_t> *' <LValueToRValue>
            (DeclRefExpr 0xa0eee24 <col:25> 'pointer':'class std::basic_string<wchar_t> *' lvalue Var 0xa0eec40 '__new_start' 'pointer':'class std::basic_string<wchar_t> *'))")
      (IfStmt 0xa0efea8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/vector.tcc:354:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa026ea0 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa0efe80 </usr/include/c++/4.6/bits/vector.tcc:330:6, line:354:6>
          (CXXMemberCallExpr 0xa0eefa0 <line:335:8, line:339:35> 'void'
            (MemberExpr 0xa0eeeac <line:335:8, col:22> '<bound member function type>' .construct 0xa0b9440
              (ImplicitCastExpr 0xa0eefc8 <col:8, col:14> 'class __gnu_cxx::new_allocator<class std::basic_string<wchar_t> >' lvalue <UncheckedDerivedToBase (allocator -> new_allocator)>
                (MemberExpr 0xa0eee80 <col:8, col:14> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > >::_Vector_impl' lvalue ->_M_impl 0xa0bc0a0
                  (ImplicitCastExpr 0xa0eee70 <col:8> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' <UncheckedDerivedToBase (_Vector_base)>
                    (CXXThisExpr 0xa0eee60 <col:8> 'class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' this)))))
            (BinaryOperator 0xa0eef70 <col:32, col:46> 'pointer':'class std::basic_string<wchar_t> *' '+'
              (ImplicitCastExpr 0xa0eef50 <col:32> 'pointer':'class std::basic_string<wchar_t> *' <LValueToRValue>
                (DeclRefExpr 0xa0eef20 <col:32> 'pointer':'class std::basic_string<wchar_t> *' lvalue Var 0xa0eec40 '__new_start' 'pointer':'class std::basic_string<wchar_t> *'))
              (ImplicitCastExpr 0xa0eef60 <col:46> 'size_type':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0xa0eef38 <col:46> 'const size_type':'const unsigned int' lvalue Var 0xa0edcd0 '__elems_before' 'const size_type':'const unsigned int')))
            (DeclRefExpr 0xa0eef88 <line:339:32> 'const value_type':'const class std::basic_string<wchar_t>' lvalue ParmVar 0xa0c8c80 '__x' 'const value_type &'))
          (BinaryOperator 0xa0ef008 <line:341:8, col:23> 'pointer':'class std::basic_string<wchar_t> *' lvalue '='
            (DeclRefExpr 0xa0eefdc <col:8> 'pointer':'class std::basic_string<wchar_t> *' lvalue Var 0xa0eedf0 '__new_finish' 'pointer':'class std::basic_string<wchar_t> *')
            (ImplicitCastExpr 0xa0eeff8 <col:23> 'pointer':'class std::basic_string<wchar_t> *' <NullToPointer>
              (IntegerLiteral 0xa027030 <col:23> 'int' 0)))
          (BinaryOperator 0xa0ef898 <line:343:8, line:346:31> 'pointer':'class std::basic_string<wchar_t> *' lvalue '='
            (DeclRefExpr 0xa0ef020 <line:343:8> 'pointer':'class std::basic_string<wchar_t> *' lvalue Var 0xa0eedf0 '__new_finish' 'pointer':'class std::basic_string<wchar_t> *')
            (CallExpr 0xa0ef838 <line:344:3, line:346:31> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *'
              (ImplicitCastExpr 0xa0ef828 <line:344:3, col:8> 'class std::basic_string<wchar_t> *(*)(class std::basic_string<wchar_t> *, class std::basic_string<wchar_t> *, class std::basic_string<wchar_t> *, class std::allocator<class std::basic_string<wchar_t> > &)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa0ef7e8 <col:3, col:8> 'class std::basic_string<wchar_t> *(class std::basic_string<wchar_t> *, class std::basic_string<wchar_t> *, class std::basic_string<wchar_t> *, class std::allocator<class std::basic_string<wchar_t> > &)' lvalue Function 0xa0ef710 '__uninitialized_move_a' 'class std::basic_string<wchar_t> *(class std::basic_string<wchar_t> *, class std::basic_string<wchar_t> *, class std::basic_string<wchar_t> *, class std::allocator<class std::basic_string<wchar_t> > &)' (FunctionTemplate 0x9fc9310 '__uninitialized_move_a')))
              (ImplicitCastExpr 0xa0ef868 <col:31, col:45> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' <LValueToRValue>
                (MemberExpr 0xa0ef0bc <col:31, col:45> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' lvalue ._M_start 0xa0bba10
                  (MemberExpr 0xa0ef090 <col:31, col:37> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > >::_Vector_impl' lvalue ->_M_impl 0xa0bc0a0
                    (ImplicitCastExpr 0xa0ef080 <col:31> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' <UncheckedDerivedToBase (_Vector_base)>
                      (CXXThisExpr 0xa0ef070 <col:31> 'class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' this)))))
              (ImplicitCastExpr 0xa0ef878 <line:345:10, col:26> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' <LValueToRValue>
                (CXXMemberCallExpr 0xa0ef118 <col:10, col:26> 'class std::basic_string<wchar_t> *const':'class std::basic_string<wchar_t> *const' lvalue
                  (MemberExpr 0xa0ef0f4 <col:10, col:21> '<bound member function type>' .base 0xa0ec250
                    (ImplicitCastExpr 0xa0ef138 <col:10> 'const class __gnu_cxx::__normal_iterator<class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >' lvalue <NoOp>
                      (DeclRefExpr 0xa0ef0dc <col:10> 'iterator':'class __gnu_cxx::__normal_iterator<class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >' lvalue ParmVar 0xa0c8b60 '__position' 'iterator':'class __gnu_cxx::__normal_iterator<class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >')))))
              (ImplicitCastExpr 0xa0ef888 <col:29> 'pointer':'class std::basic_string<wchar_t> *' <LValueToRValue>
                (DeclRefExpr 0xa0ef144 <col:29> 'pointer':'class std::basic_string<wchar_t> *' lvalue Var 0xa0eec40 '__new_start' 'pointer':'class std::basic_string<wchar_t> *'))
              (CXXMemberCallExpr 0xa0ef468 <line:346:10, col:30> '_Tp_alloc_type':'class std::allocator<class std::basic_string<wchar_t> >' lvalue
                (MemberExpr 0xa0ef438 <col:10> '<bound member function type>' ->_M_get_Tp_allocator 0xa0ba800
                  (ImplicitCastExpr 0xa0ef488 <col:10> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' <UncheckedDerivedToBase (_Vector_base)>
                    (CXXThisExpr 0xa0ef428 <col:10> 'class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' this))))))
          (UnaryOperator 0xa0ef8c8 <line:347:8, col:10> 'pointer':'class std::basic_string<wchar_t> *' lvalue prefix '++'
            (DeclRefExpr 0xa0ef8b0 <col:10> 'pointer':'class std::basic_string<wchar_t> *' lvalue Var 0xa0eedf0 '__new_finish' 'pointer':'class std::basic_string<wchar_t> *'))
          (BinaryOperator 0xa0efe68 <line:349:8, line:353:31> 'pointer':'class std::basic_string<wchar_t> *' lvalue '='
            (DeclRefExpr 0xa0ef8dc <line:349:8> 'pointer':'class std::basic_string<wchar_t> *' lvalue Var 0xa0eedf0 '__new_finish' 'pointer':'class std::basic_string<wchar_t> *')
            (CallExpr 0xa0efe08 <line:350:3, line:353:31> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *'
              (ImplicitCastExpr 0xa0efdf8 <line:350:3, col:8> 'class std::basic_string<wchar_t> *(*)(class std::basic_string<wchar_t> *, class std::basic_string<wchar_t> *, class std::basic_string<wchar_t> *, class std::allocator<class std::basic_string<wchar_t> > &)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa0efdd0 <col:3, col:8> 'class std::basic_string<wchar_t> *(class std::basic_string<wchar_t> *, class std::basic_string<wchar_t> *, class std::basic_string<wchar_t> *, class std::allocator<class std::basic_string<wchar_t> > &)' lvalue Function 0xa0ef710 '__uninitialized_move_a' 'class std::basic_string<wchar_t> *(class std::basic_string<wchar_t> *, class std::basic_string<wchar_t> *, class std::basic_string<wchar_t> *, class std::allocator<class std::basic_string<wchar_t> > &)' (FunctionTemplate 0x9fc9310 '__uninitialized_move_a')))
              (ImplicitCastExpr 0xa0efe38 <col:31, col:47> 'class std::basic_string<wchar_t> *':'class std::basic_string<wchar_t> *' <LValueToRValue>
                (CXXMemberCallExpr 0xa0ef968 <col:31, col:47> 'class std::basic_string<wchar_t> *const':'class std::basic_string<wchar_t> *const' lvalue
                  (MemberExpr 0xa0ef944 <col:31, col:42> '<bound member function type>' .base 0xa0ec250
                    (ImplicitCastExpr 0xa0ef988 <col:31> 'const class __gnu_cxx::__normal_iterator<class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >' lvalue <NoOp>
                      (DeclRefExpr 0xa0ef92c <col:31> 'iterator':'class __gnu_cxx::__normal_iterator<class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >' lvalue ParmVar 0xa0c8b60 '__position' 'iterator':'class __gnu_cxx::__normal_iterator<class std::basic_string<wchar_t> *, class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > >')))))
              (ImplicitCastExpr 0xa0efe48 <line:351:10, col:24> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' <LValueToRValue>
                (MemberExpr 0xa0ef9e4 <col:10, col:24> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' lvalue ._M_finish 0xa0bbb30
                  (MemberExpr 0xa0ef9b8 <col:10, col:16> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > >::_Vector_impl' lvalue ->_M_impl 0xa0bc0a0
                    (ImplicitCastExpr 0xa0ef9a8 <col:10> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' <UncheckedDerivedToBase (_Vector_base)>
                      (CXXThisExpr 0xa0ef998 <col:10> 'class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' this)))))
              (ImplicitCastExpr 0xa0efe58 <line:352:10> 'pointer':'class std::basic_string<wchar_t> *' <LValueToRValue>
                (DeclRefExpr 0xa0efa04 <col:10> 'pointer':'class std::basic_string<wchar_t> *' lvalue Var 0xa0eedf0 '__new_finish' 'pointer':'class std::basic_string<wchar_t> *'))
              (CXXMemberCallExpr 0xa0efd28 <line:353:10, col:30> '_Tp_alloc_type':'class std::allocator<class std::basic_string<wchar_t> >' lvalue
                (MemberExpr 0xa0efcf8 <col:10> '<bound member function type>' ->_M_get_Tp_allocator 0xa0ba800
                  (ImplicitCastExpr 0xa0efd48 <col:10> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' <UncheckedDerivedToBase (_Vector_base)>
                    (CXXThisExpr 0xa0efce8 <col:10> 'class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' this)))))))
        <<<NULL>>>)
      (IfStmt 0xa0f08f0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/vector.tcc:363:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa0274f8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa0f08d0 </usr/include/c++/4.6/bits/vector.tcc:356:6, line:363:6>
          (IfStmt 0xa0f0558 <line:357:8, line:360:65>
            <<<NULL>>>
            (UnaryOperator 0xa0eff00 <line:357:12, col:13> '_Bool' prefix '!'
              (ImplicitCastExpr 0xa0efef0 <col:13> '_Bool' <PointerToBoolean>
                (ImplicitCastExpr 0xa0efee0 <col:13> 'pointer':'class std::basic_string<wchar_t> *' <LValueToRValue>
                  (DeclRefExpr 0xa0efec4 <col:13> 'pointer':'class std::basic_string<wchar_t> *' lvalue Var 0xa0eedf0 '__new_finish' 'pointer':'class std::basic_string<wchar_t> *'))))
            (CXXMemberCallExpr 0xa0f0040 <line:358:3, col:53> 'void'
              (MemberExpr 0xa0eff64 <col:3, col:17> '<bound member function type>' .destroy 0xa0b95e0
                (ImplicitCastExpr 0xa0f0060 <col:3, col:9> 'class __gnu_cxx::new_allocator<class std::basic_string<wchar_t> >' lvalue <UncheckedDerivedToBase (allocator -> new_allocator)>
                  (MemberExpr 0xa0eff38 <col:3, col:9> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > >::_Vector_impl' lvalue ->_M_impl 0xa0bc0a0
                    (ImplicitCastExpr 0xa0eff28 <col:3> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' <UncheckedDerivedToBase (_Vector_base)>
                      (CXXThisExpr 0xa0eff18 <col:3> 'class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' this)))))
              (BinaryOperator 0xa0f0028 <col:25, col:39> 'pointer':'class std::basic_string<wchar_t> *' '+'
                (ImplicitCastExpr 0xa0f0008 <col:25> 'pointer':'class std::basic_string<wchar_t> *' <LValueToRValue>
                  (DeclRefExpr 0xa0effd8 <col:25> 'pointer':'class std::basic_string<wchar_t> *' lvalue Var 0xa0eec40 '__new_start' 'pointer':'class std::basic_string<wchar_t> *'))
                (ImplicitCastExpr 0xa0f0018 <col:39> 'size_type':'unsigned int' <LValueToRValue>
                  (DeclRefExpr 0xa0efff0 <col:39> 'const size_type':'const unsigned int' lvalue Var 0xa0edcd0 '__elems_before' 'const size_type':'const unsigned int'))))
            (CallExpr 0xa0f0510 <line:360:3, col:65> 'void'
              (ImplicitCastExpr 0xa0f0500 <col:3, col:8> 'void (*)(class std::basic_string<wchar_t> *, class std::basic_string<wchar_t> *, allocator<class std::basic_string<wchar_t> > &)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa0f04d8 <col:3, col:8> 'void (class std::basic_string<wchar_t> *, class std::basic_string<wchar_t> *, allocator<class std::basic_string<wchar_t> > &)' lvalue Function 0xa0dd0e0 '_Destroy' 'void (class std::basic_string<wchar_t> *, class std::basic_string<wchar_t> *, allocator<class std::basic_string<wchar_t> > &)' (FunctionTemplate 0x9fbdc40 '_Destroy')))
              (ImplicitCastExpr 0xa0f0538 <col:17> 'pointer':'class std::basic_string<wchar_t> *' <LValueToRValue>
                (DeclRefExpr 0xa0f00b8 <col:17> 'pointer':'class std::basic_string<wchar_t> *' lvalue Var 0xa0eec40 '__new_start' 'pointer':'class std::basic_string<wchar_t> *'))
              (ImplicitCastExpr 0xa0f0548 <col:30> 'pointer':'class std::basic_string<wchar_t> *' <LValueToRValue>
                (DeclRefExpr 0xa0f00d0 <col:30> 'pointer':'class std::basic_string<wchar_t> *' lvalue Var 0xa0eedf0 '__new_finish' 'pointer':'class std::basic_string<wchar_t> *'))
              (CXXMemberCallExpr 0xa0f0408 <col:44, col:64> '_Tp_alloc_type':'class std::allocator<class std::basic_string<wchar_t> >' lvalue
                (MemberExpr 0xa0f03d8 <col:44> '<bound member function type>' ->_M_get_Tp_allocator 0xa0ba800
                  (ImplicitCastExpr 0xa0f0428 <col:44> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' <UncheckedDerivedToBase (_Vector_base)>
                    (CXXThisExpr 0xa0f03c8 <col:44> 'class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' this))))))
          (CXXMemberCallExpr 0xa0f0878 <line:361:8, col:40> 'void'
            (MemberExpr 0xa0f0818 <col:8> '<bound member function type>' ->_M_deallocate 0xa0bc470
              (ImplicitCastExpr 0xa0f08a0 <col:8> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' <UncheckedDerivedToBase (_Vector_base)>
                (CXXThisExpr 0xa0f0808 <col:8> 'class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' this)))
            (ImplicitCastExpr 0xa0f08b0 <col:22> 'pointer':'class std::basic_string<wchar_t> *' <LValueToRValue>
              (DeclRefExpr 0xa0f0844 <col:22> 'pointer':'class std::basic_string<wchar_t> *' lvalue Var 0xa0eec40 '__new_start' 'pointer':'class std::basic_string<wchar_t> *'))
            (ImplicitCastExpr 0xa0f08c0 <col:35> 'size_type':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0xa0f085c <col:35> 'const size_type':'const unsigned int' lvalue Var 0xa0edb10 '__len' 'const size_type':'const unsigned int')))
          (NullStmt 0xa027850 <line:362:31>))
        <<<NULL>>>)
      (CallExpr 0xa0f0e40 <line:364:4, line:365:25> 'void'
        (ImplicitCastExpr 0xa0f0e30 <line:364:4, col:9> 'void (*)(class std::basic_string<wchar_t> *, class std::basic_string<wchar_t> *, allocator<class std::basic_string<wchar_t> > &)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa0f0e08 <col:4, col:9> 'void (class std::basic_string<wchar_t> *, class std::basic_string<wchar_t> *, allocator<class std::basic_string<wchar_t> > &)' lvalue Function 0xa0dd0e0 '_Destroy' 'void (class std::basic_string<wchar_t> *, class std::basic_string<wchar_t> *, allocator<class std::basic_string<wchar_t> > &)' (FunctionTemplate 0x9fbdc40 '_Destroy')))
        (ImplicitCastExpr 0xa0f0e68 <col:18, col:32> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' <LValueToRValue>
          (MemberExpr 0xa0f099c <col:18, col:32> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' lvalue ._M_start 0xa0bba10
            (MemberExpr 0xa0f0970 <col:18, col:24> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > >::_Vector_impl' lvalue ->_M_impl 0xa0bc0a0
              (ImplicitCastExpr 0xa0f0960 <col:18> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' <UncheckedDerivedToBase (_Vector_base)>
                (CXXThisExpr 0xa0f0950 <col:18> 'class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' this)))))
        (ImplicitCastExpr 0xa0f0e78 <col:42, col:56> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' <LValueToRValue>
          (MemberExpr 0xa0f0a0c <col:42, col:56> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' lvalue ._M_finish 0xa0bbb30
            (MemberExpr 0xa0f09e0 <col:42, col:48> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > >::_Vector_impl' lvalue ->_M_impl 0xa0bc0a0
              (ImplicitCastExpr 0xa0f09d0 <col:42> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' <UncheckedDerivedToBase (_Vector_base)>
                (CXXThisExpr 0xa0f09c0 <col:42> 'class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' this)))))
        (CXXMemberCallExpr 0xa0f0d38 <line:365:4, col:24> '_Tp_alloc_type':'class std::allocator<class std::basic_string<wchar_t> >' lvalue
          (MemberExpr 0xa0f0d08 <col:4> '<bound member function type>' ->_M_get_Tp_allocator 0xa0ba800
            (ImplicitCastExpr 0xa0f0d58 <col:4> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' <UncheckedDerivedToBase (_Vector_base)>
              (CXXThisExpr 0xa0f0cf8 <col:4> 'class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' this)))))
      (CXXMemberCallExpr 0xa0f1320 <line:366:4, line:368:28> 'void'
        (MemberExpr 0xa0f1128 <line:366:4> '<bound member function type>' ->_M_deallocate 0xa0bc470
          (ImplicitCastExpr 0xa0f1348 <col:4> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' <UncheckedDerivedToBase (_Vector_base)>
            (CXXThisExpr 0xa0f1118 <col:4> 'class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' this)))
        (ImplicitCastExpr 0xa0f1358 <col:18, col:32> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' <LValueToRValue>
          (MemberExpr 0xa0f11a4 <col:18, col:32> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' lvalue ._M_start 0xa0bba10
            (MemberExpr 0xa0f1178 <col:18, col:24> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > >::_Vector_impl' lvalue ->_M_impl 0xa0bc0a0
              (ImplicitCastExpr 0xa0f1168 <col:18> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' <UncheckedDerivedToBase (_Vector_base)>
                (CXXThisExpr 0xa0f1158 <col:18> 'class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' this)))))
        (ImplicitCastExpr 0xa0f1368 <line:367:4, line:368:20> 'size_t':'unsigned int' <IntegralCast>
          (BinaryOperator 0xa0f1308 <line:367:4, line:368:20> 'int' '-'
            (ImplicitCastExpr 0xa0f12e8 <line:367:4, col:18> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' <LValueToRValue>
              (MemberExpr 0xa0f1254 <col:4, col:18> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' lvalue ._M_end_of_storage 0xa0bbc50
                (MemberExpr 0xa0f1228 <col:4, col:10> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > >::_Vector_impl' lvalue ->_M_impl 0xa0bc0a0
                  (ImplicitCastExpr 0xa0f1218 <col:4> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' <UncheckedDerivedToBase (_Vector_base)>
                    (CXXThisExpr 0xa0f1208 <col:4> 'class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' this)))))
            (ImplicitCastExpr 0xa0f12f8 <line:368:6, col:20> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' <LValueToRValue>
              (MemberExpr 0xa0f12c4 <col:6, col:20> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' lvalue ._M_start 0xa0bba10
                (MemberExpr 0xa0f1298 <col:6, col:12> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > >::_Vector_impl' lvalue ->_M_impl 0xa0bc0a0
                  (ImplicitCastExpr 0xa0f1288 <col:6> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' <UncheckedDerivedToBase (_Vector_base)>
                    (CXXThisExpr 0xa0f1278 <col:6> 'class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' this))))))))
      (BinaryOperator 0xa0f1410 <line:369:4, col:29> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' lvalue '='
        (MemberExpr 0xa0f13c4 <col:4, col:18> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' lvalue ._M_start 0xa0bba10
          (MemberExpr 0xa0f1398 <col:4, col:10> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > >::_Vector_impl' lvalue ->_M_impl 0xa0bc0a0
            (ImplicitCastExpr 0xa0f1388 <col:4> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' <UncheckedDerivedToBase (_Vector_base)>
              (CXXThisExpr 0xa0f1378 <col:4> 'class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' this))))
        (ImplicitCastExpr 0xa0f1400 <col:29> 'pointer':'class std::basic_string<wchar_t> *' <LValueToRValue>
          (DeclRefExpr 0xa0f13e4 <col:29> 'pointer':'class std::basic_string<wchar_t> *' lvalue Var 0xa0eec40 '__new_start' 'pointer':'class std::basic_string<wchar_t> *')))
      (BinaryOperator 0xa0f14c0 <line:370:4, col:30> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' lvalue '='
        (MemberExpr 0xa0f1474 <col:4, col:18> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' lvalue ._M_finish 0xa0bbb30
          (MemberExpr 0xa0f1448 <col:4, col:10> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > >::_Vector_impl' lvalue ->_M_impl 0xa0bc0a0
            (ImplicitCastExpr 0xa0f1438 <col:4> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' <UncheckedDerivedToBase (_Vector_base)>
              (CXXThisExpr 0xa0f1428 <col:4> 'class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' this))))
        (ImplicitCastExpr 0xa0f14b0 <col:30> 'pointer':'class std::basic_string<wchar_t> *' <LValueToRValue>
          (DeclRefExpr 0xa0f1494 <col:30> 'pointer':'class std::basic_string<wchar_t> *' lvalue Var 0xa0eedf0 '__new_finish' 'pointer':'class std::basic_string<wchar_t> *')))
      (BinaryOperator 0xa0f1600 <line:371:4, col:52> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' lvalue '='
        (MemberExpr 0xa0f1524 <col:4, col:18> 'typename _Tp_alloc_type::pointer':'class std::basic_string<wchar_t> *' lvalue ._M_end_of_storage 0xa0bbc50
          (MemberExpr 0xa0f14f8 <col:4, col:10> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > >::_Vector_impl' lvalue ->_M_impl 0xa0bc0a0
            (ImplicitCastExpr 0xa0f14e8 <col:4> 'struct std::_Vector_base<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' <UncheckedDerivedToBase (_Vector_base)>
              (CXXThisExpr 0xa0f14d8 <col:4> 'class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' this))))
        (BinaryOperator 0xa0f15e8 <col:38, col:52> 'pointer':'class std::basic_string<wchar_t> *' '+'
          (ImplicitCastExpr 0xa0f15c8 <col:38> 'pointer':'class std::basic_string<wchar_t> *' <LValueToRValue>
            (DeclRefExpr 0xa0f1598 <col:38> 'pointer':'class std::basic_string<wchar_t> *' lvalue Var 0xa0eec40 '__new_start' 'pointer':'class std::basic_string<wchar_t> *'))
          (ImplicitCastExpr 0xa0f15d8 <col:52> 'size_type':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0xa0f15b0 <col:52> 'const size_type':'const unsigned int' lvalue Var 0xa0edb10 '__len' 'const size_type':'const unsigned int')))))))


        size_type _M_check_len(size_type __n, const char *__s) const (CompoundStmt 0xa0f6240 </usr/include/c++/4.6/bits/stl_vector.h:1240:7, line:1246:7>
  (IfStmt 0xa0f5720 <line:1241:2, line:1242:33>
    <<<NULL>>>
    (BinaryOperator 0xa0f5698 <line:1241:6, col:28> '_Bool' '<'
      (BinaryOperator 0xa0f5658 <col:6, col:24> 'unsigned int' '-'
        (CXXMemberCallExpr 0xa0f5518 <col:6, col:15> 'size_type':'unsigned int'
          (MemberExpr 0xa0f54f8 <col:6> '<bound member function type>' ->max_size 0xa0c1430
            (CXXThisExpr 0xa0f5418 <col:6> 'const class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' this)))
        (CXXMemberCallExpr 0xa0f5638 <col:19, col:24> 'size_type':'unsigned int'
          (MemberExpr 0xa0f5618 <col:19> '<bound member function type>' ->size 0xa0c13c0
            (CXXThisExpr 0xa0f5538 <col:19> 'const class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' this))))
      (ImplicitCastExpr 0xa0f5688 <col:28> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa0f5670 <col:28> 'size_type':'unsigned int' lvalue ParmVar 0xa0c8d90 '__n' 'size_type':'unsigned int')))
    (CallExpr 0xa0f56f0 <line:1242:4, col:33> 'void'
      (ImplicitCastExpr 0xa0f56e0 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x9fe7c24 <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9b765e0 '__throw_length_error' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa0f5710 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <LValueToRValue>
        (ParenExpr 0xa0f56c8 <col:24, col:30> 'const char *' lvalue
          (DeclRefExpr 0xa0f56b0 </usr/include/c++/4.6/bits/stl_vector.h:1242:29> 'const char *' lvalue ParmVar 0xa0c8dd0 '__s' 'const char *'))))
    <<<NULL>>>)
  (DeclStmt 0xa0f5d18 <line:1244:2, col:56>
    0xa0f5740 "const size_type __len =
      (BinaryOperator 0xa0f5d00 <col:26, col:55> 'unsigned int' '+'
        (CXXMemberCallExpr 0xa0f58b8 <col:26, col:31> 'size_type':'unsigned int'
          (MemberExpr 0xa0f5898 <col:26> '<bound member function type>' ->size 0xa0c13c0
            (CXXThisExpr 0xa0f57c0 <col:26> 'const class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' this)))
        (ImplicitCastExpr 0xa0f5cf0 <col:35, col:55> 'unsigned int':'unsigned int' <LValueToRValue>
          (CallExpr 0xa0f5ca8 <col:35, col:55> 'const unsigned int':'const unsigned int' lvalue
            (ImplicitCastExpr 0xa0f5c98 <col:35, col:40> 'const unsigned int &(*)(const unsigned int &, const unsigned int &)' <FunctionToPointerDecay>
              (DeclRefExpr 0xa0f5c58 <col:35, col:40> 'const unsigned int &(const unsigned int &, const unsigned int &)' lvalue Function 0xa0f5bb0 'max' 'const unsigned int &(const unsigned int &, const unsigned int &)' (FunctionTemplate 0x9be02b0 'max')))
            (MaterializeTemporaryExpr 0xa0f5cd0 <col:44, col:49> 'const unsigned int':'const unsigned int' lvalue
              (CXXMemberCallExpr 0xa0f5a08 <col:44, col:49> 'size_type':'unsigned int'
                (MemberExpr 0xa0f59e8 <col:44> '<bound member function type>' ->size 0xa0c13c0
                  (CXXThisExpr 0xa0f5910 <col:44> 'const class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' this))))
            (ImplicitCastExpr 0xa0f5ce0 <col:52> 'const unsigned int':'const unsigned int' lvalue <NoOp>
              (DeclRefExpr 0xa0f5a24 <col:52> 'size_type':'unsigned int' lvalue ParmVar 0xa0c8d90 '__n' 'size_type':'unsigned int')))))")
  (ReturnStmt 0xa0f6230 <line:1245:2, col:63>
    (ConditionalOperator 0xa0f61e0 <col:9, col:63> 'size_type':'unsigned int'
      (ParenExpr 0xa0f6088 <col:9, col:46> '_Bool'
        (BinaryOperator 0xa0f6070 <col:10, col:45> '_Bool' '||'
          (BinaryOperator 0xa0f5eb8 <col:10, col:23> '_Bool' '<'
            (ImplicitCastExpr 0xa0f5ea8 <col:10> 'size_type':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0xa0f5d70 <col:10> 'const size_type':'const unsigned int' lvalue Var 0xa0f5740 '__len' 'const size_type':'const unsigned int'))
            (CXXMemberCallExpr 0xa0f5e88 <col:18, col:23> 'size_type':'unsigned int'
              (MemberExpr 0xa0f5e68 <col:18> '<bound member function type>' ->size 0xa0c13c0
                (CXXThisExpr 0xa0f5d88 <col:18> 'const class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' this))))
          (BinaryOperator 0xa0f6058 <col:28, col:45> '_Bool' '>'
            (ImplicitCastExpr 0xa0f6048 <col:28> 'size_type':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0xa0f5f18 <col:28> 'const size_type':'const unsigned int' lvalue Var 0xa0f5740 '__len' 'const size_type':'const unsigned int'))
            (CXXMemberCallExpr 0xa0f6028 <col:36, col:45> 'size_type':'unsigned int'
              (MemberExpr 0xa0f6008 <col:36> '<bound member function type>' ->max_size 0xa0c1430
                (CXXThisExpr 0xa0f5f30 <col:36> 'const class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' this))))))
      (CXXMemberCallExpr 0xa0f6198 <col:50, col:59> 'size_type':'unsigned int'
        (MemberExpr 0xa0f6178 <col:50> '<bound member function type>' ->max_size 0xa0c1430
          (CXXThisExpr 0xa0f60a0 <col:50> 'const class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > *' this)))
      (ImplicitCastExpr 0xa0f61d0 <col:63> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa0f61b4 <col:63> 'const size_type':'const unsigned int' lvalue Var 0xa0f5740 '__len' 'const size_type':'const unsigned int')))))


        void _M_erase_at_end(pointer __pos);
    }
template <typename _Tp, typename _Alloc = std::allocator<_Tp>> class vector : protected _Vector_base<_Tp, _Alloc> {
        class vector;
        typedef typename _Alloc::value_type _Alloc_value_type;
        typedef _Vector_base<_Tp, _Alloc> _Base;
        typedef typename _Base::_Tp_alloc_type _Tp_alloc_type;
    public:
    public:
        typedef _Tp value_type;
        typedef typename _Tp_alloc_type::pointer pointer;
        typedef typename _Tp_alloc_type::const_pointer const_pointer;
        typedef typename _Tp_alloc_type::reference reference;
        typedef typename _Tp_alloc_type::const_reference const_reference;
        typedef __gnu_cxx::__normal_iterator<pointer, vector<_Tp, _Alloc> > iterator;
        typedef __gnu_cxx::__normal_iterator<const_pointer, vector<_Tp, _Alloc> > const_iterator;
        typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
        typedef std::reverse_iterator<iterator> reverse_iterator;
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef _Alloc allocator_type;
    protected:
    protected:
        using _Base::1;
        using _Base::1;
        using _Base::1;
        using _Base::1;
    public:
    public:
        vector<_Tp, _Alloc>() : _Base() (CompoundStmt 0x9fd9e30 </usr/include/c++/4.6/bits/stl_vector.h:218:17, col:19>)


        vector<_Tp, _Alloc>(const allocator_type &__a) : _Base((DeclRefExpr 0x9fd9e40 </usr/include/c++/4.6/bits/stl_vector.h:226:15> 'const allocator_type':'const _Alloc' lvalue ParmVar 0x9fd4e50 '__a' 'const allocator_type &')
) (CompoundStmt 0x9fd9ea0 </usr/include/c++/4.6/bits/stl_vector.h:226:20, col:22>)


        vector<_Tp, _Alloc>(size_type __n, const value_type &__value = (CXXUnresolvedConstructExpr 0x9fd9d70 </usr/include/c++/4.6/bits/stl_vector.h:263:57, col:68> 'value_type':'_Tp')
, const allocator_type &__a = (CXXUnresolvedConstructExpr 0x9fd9d90 </usr/include/c++/4.6/bits/stl_vector.h:264:35, col:50> 'allocator_type':'_Alloc')
) : _Base((DeclRefExpr 0x9fd9eb0 </usr/include/c++/4.6/bits/stl_vector.h:265:15> 'size_type':'unsigned int' lvalue ParmVar 0x9fd4f60 '__n' 'size_type':'unsigned int')
, (DeclRefExpr 0x9fd9ec8 </usr/include/c++/4.6/bits/stl_vector.h:265:20> 'const allocator_type':'const _Alloc' lvalue ParmVar 0x9fd5030 '__a' 'const allocator_type &')
) (CompoundStmt 0x9fd9fd0 </usr/include/c++/4.6/bits/stl_vector.h:266:7, col:43>
  (CallExpr 0x9fd9fa8 <col:9, col:40> '<dependent type>'
    (MemberExpr 0x9fd9f58 <col:9> '<bound member function type>' ->_M_fill_initialize 0x9fd8400
      (CXXThisExpr 0x9fd9f48 <col:9> 'vector<_Tp, _Alloc> *' this))
    (DeclRefExpr 0x9fd9f78 <col:28> 'size_type':'unsigned int' lvalue ParmVar 0x9fd4f60 '__n' 'size_type':'unsigned int')
    (DeclRefExpr 0x9fd9f90 <col:33> 'const value_type':'const _Tp' lvalue ParmVar 0x9fd4fe0 '__value' 'const value_type &')))


        vector<_Tp, _Alloc>(const vector<_Tp, _Alloc> &__x) : _Base((CallExpr 0x9fda038 </usr/include/c++/4.6/bits/stl_vector.h:279:15, col:24> '<dependent type>'
  (CXXDependentScopeMemberExpr 0x9fda000 <col:15, col:19> '<dependent type>' lvalue
    (DeclRefExpr 0x9fd9fe4 <col:15> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x9fd51a0 '__x' 'const vector<_Tp, _Alloc> &')))
, (CallExpr 0x9fda0a8 </usr/include/c++/4.6/bits/stl_vector.h:279:27, col:51> '<dependent type>'
  (CXXDependentScopeMemberExpr 0x9fda070 <col:27, col:31> '<dependent type>' lvalue
    (DeclRefExpr 0x9fda054 <col:27> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x9fd51a0 '__x' 'const vector<_Tp, _Alloc> &')))
) (CompoundStmt 0x9fda3e0 </usr/include/c++/4.6/bits/stl_vector.h:280:7, line:284:7>
  (BinaryOperator 0x9fda3c8 <line:280:9, line:283:32> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x9fda158 <line:280:9, col:23> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9fda120 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x9fda110 <col:9> 'vector<_Tp, _Alloc> *' this)))
    (CallExpr 0x9fda398 <line:281:4, line:283:32> '<dependent type>'
      (UnresolvedLookupExpr 0x9fda1a8 <line:281:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fc8600 0x9fc8f00)
      (CallExpr 0x9fda230 <col:32, col:42> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fda1f8 <col:32, col:36> '<dependent type>' lvalue
          (DeclRefExpr 0x9fda1e0 <col:32> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x9fd51a0 '__x' 'const vector<_Tp, _Alloc> &')))
      (CallExpr 0x9fda2a0 <col:45, col:53> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fda268 <col:45, col:49> '<dependent type>' lvalue
          (DeclRefExpr 0x9fda24c <col:45> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x9fd51a0 '__x' 'const vector<_Tp, _Alloc> &')))
      (CXXDependentScopeMemberExpr 0x9fda308 <line:282:11, col:25> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0x9fda2d0 <col:11, col:17> '<dependent type>' lvalue
          (CXXThisExpr 0x9fda2c0 <col:11> 'vector<_Tp, _Alloc> *' this)))
      (CallExpr 0x9fda378 <line:283:11, col:31> '<dependent type>'
        (UnresolvedMemberExpr 0x9fda33c <col:11> '<dependent type>' lvalue)))))


        template <typename _InputIterator> vector<_Tp, _Alloc>(_InputIterator __first, _InputIterator __last, const allocator_type &__a = (CXXUnresolvedConstructExpr 0x9fd9db0 </usr/include/c++/4.6/bits/stl_vector.h:335:37, col:52> 'allocator_type':'_Alloc')
) : _Base((DeclRefExpr 0x9fda3f4 </usr/include/c++/4.6/bits/stl_vector.h:336:10> 'const allocator_type':'const _Alloc' lvalue ParmVar 0x9fd5380 '__a' 'const allocator_type &')
) (CompoundStmt 0x9fda678 </usr/include/c++/4.6/bits/stl_vector.h:337:9, line:341:2>
  (DeclStmt 0x9fda590 <line:339:4, col:72>
    0x9fda560 "typedef typename std::__is_integer<_InputIterator>::__type _Integral")
  (CallExpr 0x9fda650 <line:340:4, col:55> '<dependent type>'
    (UnresolvedMemberExpr 0x9fda5b0 <col:4> '<bound member function type>' lvalue)
    (DeclRefExpr 0x9fda5f0 <col:27> '_InputIterator' lvalue ParmVar 0x9fd52f0 '__first' '_InputIterator')
    (DeclRefExpr 0x9fda608 <col:36> '_InputIterator' lvalue ParmVar 0x9fd5330 '__last' '_InputIterator')
    (CXXUnresolvedConstructExpr 0x9fda638 <col:44, col:54> '_Integral':'typename std::__is_integer<_InputIterator>::__type')))

;
        void ~vector<_Tp, _Alloc>() (CompoundStmt 0x9fda878 </usr/include/c++/4.6/bits/stl_vector.h:350:7, line:351:33>
  (CallExpr 0x9fda850 <line:350:9, line:351:30> '<dependent type>'
    (UnresolvedLookupExpr 0x9fda6b8 <line:350:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fbc330 0x9fbcff0 0x9fbd690 0x9fbdc40)
    (CXXDependentScopeMemberExpr 0x9fda740 <col:23, col:37> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9fda708 <col:23, col:29> '<dependent type>' lvalue
        (CXXThisExpr 0x9fda6f8 <col:23> 'vector<_Tp, _Alloc> *' this)))
    (CXXDependentScopeMemberExpr 0x9fda7c0 <col:47, col:61> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9fda788 <col:47, col:53> '<dependent type>' lvalue
        (CXXThisExpr 0x9fda778 <col:47> 'vector<_Tp, _Alloc> *' this)))
    (CallExpr 0x9fda830 <line:351:9, col:29> '<dependent type>'
      (UnresolvedMemberExpr 0x9fda7f4 <col:9> '<dependent type>' lvalue))))


        vector<_Tp, _Alloc> &operator=(const vector<_Tp, _Alloc> &__x);
        void assign(size_type __n, const value_type &__val) (CompoundStmt 0x9fda918 </usr/include/c++/4.6/bits/stl_vector.h:413:7, col:37>
  (CallExpr 0x9fda8f0 <col:9, col:34> '<dependent type>'
    (MemberExpr 0x9fda8a0 <col:9> '<bound member function type>' ->_M_fill_assign 0x9fd8da0
      (CXXThisExpr 0x9fda890 <col:9> 'vector<_Tp, _Alloc> *' this))
    (DeclRefExpr 0x9fda8c0 <col:24> 'size_type':'unsigned int' lvalue ParmVar 0x9fd56b0 '__n' 'size_type':'unsigned int')
    (DeclRefExpr 0x9fda8d8 <col:29> 'const value_type':'const _Tp' lvalue ParmVar 0x9fd5700 '__val' 'const value_type &')))


        template <typename _InputIterator> void assign(_InputIterator __first, _InputIterator __last) (CompoundStmt 0x9fdab48 </usr/include/c++/4.6/bits/stl_vector.h:430:9, line:434:2>
  (DeclStmt 0x9fdaa60 <line:432:4, col:72>
    0x9fdaa30 "typedef typename std::__is_integer<_InputIterator>::__type _Integral")
  (CallExpr 0x9fdab20 <line:433:4, col:51> '<dependent type>'
    (UnresolvedMemberExpr 0x9fdaa80 <col:4> '<bound member function type>' lvalue)
    (DeclRefExpr 0x9fdaac0 <col:23> '_InputIterator' lvalue ParmVar 0x9fd5870 '__first' '_InputIterator')
    (DeclRefExpr 0x9fdaad8 <col:32> '_InputIterator' lvalue ParmVar 0x9fd58b0 '__last' '_InputIterator')
    (CXXUnresolvedConstructExpr 0x9fdab08 <col:40, col:50> '_Integral':'typename std::__is_integer<_InputIterator>::__type')))

;
        using _Base::1;
        iterator begin() (CompoundStmt 0x9fdac18 </usr/include/c++/4.6/bits/stl_vector.h:464:7, col:50>
  (ReturnStmt 0x9fdac08 <col:9, col:47>
    (CXXUnresolvedConstructExpr 0x9fdabe8 <col:16, col:47> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
      (CXXDependentScopeMemberExpr 0x9fdabb0 <col:25, col:39> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0x9fdab78 <col:25, col:31> '<dependent type>' lvalue
          (CXXThisExpr 0x9fdab68 <col:25> 'vector<_Tp, _Alloc> *' this))))))


        const_iterator begin() const (CompoundStmt 0x9fdad08 </usr/include/c++/4.6/bits/stl_vector.h:473:7, col:56>
  (ReturnStmt 0x9fdacf8 <col:9, col:53>
    (CXXUnresolvedConstructExpr 0x9fdacd8 <col:16, col:53> 'const_iterator':'__normal_iterator<const_pointer, vector<_Tp, _Alloc> >'
      (CXXDependentScopeMemberExpr 0x9fdaca0 <col:31, col:45> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0x9fdac68 <col:31, col:37> '<dependent type>' lvalue
          (CXXThisExpr 0x9fdac58 <col:31> 'const vector<_Tp, _Alloc> *' this))))))


        iterator end() (CompoundStmt 0x9fdadd8 </usr/include/c++/4.6/bits/stl_vector.h:482:7, col:51>
  (ReturnStmt 0x9fdadc8 <col:9, col:48>
    (CXXUnresolvedConstructExpr 0x9fdada8 <col:16, col:48> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
      (CXXDependentScopeMemberExpr 0x9fdad70 <col:25, col:39> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0x9fdad38 <col:25, col:31> '<dependent type>' lvalue
          (CXXThisExpr 0x9fdad28 <col:25> 'vector<_Tp, _Alloc> *' this))))))


        const_iterator end() const (CompoundStmt 0x9fdaea8 </usr/include/c++/4.6/bits/stl_vector.h:491:7, col:57>
  (ReturnStmt 0x9fdae98 <col:9, col:54>
    (CXXUnresolvedConstructExpr 0x9fdae78 <col:16, col:54> 'const_iterator':'__normal_iterator<const_pointer, vector<_Tp, _Alloc> >'
      (CXXDependentScopeMemberExpr 0x9fdae40 <col:31, col:45> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0x9fdae08 <col:31, col:37> '<dependent type>' lvalue
          (CXXThisExpr 0x9fdadf8 <col:31> 'const vector<_Tp, _Alloc> *' this))))))


        reverse_iterator rbegin() (CompoundStmt 0x9fdaf68 </usr/include/c++/4.6/bits/stl_vector.h:500:7, col:41>
  (ReturnStmt 0x9fdaf58 <col:9, col:38>
    (CXXUnresolvedConstructExpr 0x9fdaf38 <col:16, col:38> 'reverse_iterator':'reverse_iterator<iterator>'
      (CallExpr 0x9fdaf18 <col:33, col:37> '<dependent type>'
        (UnresolvedMemberExpr 0x9fdaed8 <col:33> '<bound member function type>' lvalue)))))


        const_reverse_iterator rbegin() const (CompoundStmt 0x9fdb028 </usr/include/c++/4.6/bits/stl_vector.h:509:7, col:47>
  (ReturnStmt 0x9fdb018 <col:9, col:44>
    (CXXUnresolvedConstructExpr 0x9fdaff8 <col:16, col:44> 'const_reverse_iterator':'reverse_iterator<const_iterator>'
      (CallExpr 0x9fdafd8 <col:39, col:43> '<dependent type>'
        (UnresolvedMemberExpr 0x9fdaf98 <col:39> '<bound member function type>' lvalue)))))


        reverse_iterator rend() (CompoundStmt 0x9fdb0e8 </usr/include/c++/4.6/bits/stl_vector.h:518:7, col:43>
  (ReturnStmt 0x9fdb0d8 <col:9, col:40>
    (CXXUnresolvedConstructExpr 0x9fdb0b8 <col:16, col:40> 'reverse_iterator':'reverse_iterator<iterator>'
      (CallExpr 0x9fdb098 <col:33, col:39> '<dependent type>'
        (UnresolvedMemberExpr 0x9fdb058 <col:33> '<bound member function type>' lvalue)))))


        const_reverse_iterator rend() const (CompoundStmt 0x9fdb1a8 </usr/include/c++/4.6/bits/stl_vector.h:527:7, col:49>
  (ReturnStmt 0x9fdb198 <col:9, col:46>
    (CXXUnresolvedConstructExpr 0x9fdb178 <col:16, col:46> 'const_reverse_iterator':'reverse_iterator<const_iterator>'
      (CallExpr 0x9fdb158 <col:39, col:45> '<dependent type>'
        (UnresolvedMemberExpr 0x9fdb118 <col:39> '<bound member function type>' lvalue)))))


        size_type size() const (CompoundStmt 0x9fdb358 </usr/include/c++/4.6/bits/stl_vector.h:571:7, col:77>
  (ReturnStmt 0x9fdb348 <col:9, col:74>
    (CXXUnresolvedConstructExpr 0x9fdb328 <col:16, col:74> 'size_type':'unsigned int'
      (CXXOperatorCallExpr 0x9fdb300 <col:26, col:66> '<dependent type>'
        (UnresolvedLookupExpr 0x9fdb2c8 <col:50, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
        (CXXDependentScopeMemberExpr 0x9fdb210 <col:26, col:40> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9fdb1d8 <col:26, col:32> '<dependent type>' lvalue
            (CXXThisExpr 0x9fdb1c8 <col:26> 'const vector<_Tp, _Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0x9fdb290 <col:52, col:66> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9fdb258 <col:52, col:58> '<dependent type>' lvalue
            (CXXThisExpr 0x9fdb248 <col:52> 'const vector<_Tp, _Alloc> *' this)))))))


        size_type max_size() const (CompoundStmt 0x9fdb430 </usr/include/c++/4.6/bits/stl_vector.h:576:7, col:50>
  (ReturnStmt 0x9fdb420 <col:9, col:47>
    (CallExpr 0x9fdb400 <col:16, col:47> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9fdb3c8 <col:16, col:38> '<dependent type>' lvalue
        (CallExpr 0x9fdb3a8 <col:16, col:36> '<dependent type>'
          (UnresolvedMemberExpr 0x9fdb36c <col:16> '<dependent type>' lvalue))))))


        void resize(size_type __new_size, value_type __x = (CXXUnresolvedConstructExpr 0x9fd9dd0 </usr/include/c++/4.6/bits/stl_vector.h:629:53, col:64> 'value_type':'_Tp')
) (CompoundStmt 0x9fdb960 </usr/include/c++/4.6/bits/stl_vector.h:630:7, line:635:7>
  (IfStmt 0x9fdb940 <line:631:2, line:634:55>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9fdb4f8 <line:631:6, col:24> '<dependent type>'
      (UnresolvedLookupExpr 0x9fdb4b0 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bad330 0x9bc37b0 0x9bc6740 0x9d622b0 0x9d627e0 0x9d62d10)
      (DeclRefExpr 0x9fdb444 <col:6> 'size_type':'unsigned int' lvalue ParmVar 0x9fd6010 '__new_size' 'size_type':'unsigned int')
      (CallExpr 0x9fdb490 <col:19, col:24> '<dependent type>'
        (MemberExpr 0x9fdb470 <col:19> '<bound member function type>' ->size 0x9fd5f20
          (CXXThisExpr 0x9fdb460 <col:19> 'vector<_Tp, _Alloc> *' this))))
    (CallExpr 0x9fdb6c8 <line:632:4, col:42> '<dependent type>'
      (UnresolvedMemberExpr 0x9fdb530 <col:4> '<bound member function type>' lvalue)
      (CallExpr 0x9fdb5c8 <col:11, col:15> '<dependent type>'
        (UnresolvedMemberExpr 0x9fdb588 <col:11> '<bound member function type>' lvalue))
      (CXXOperatorCallExpr 0x9fdb688 <col:18, col:36> '<dependent type>'
        (UnresolvedLookupExpr 0x9fdb650 <col:29, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
        (DeclRefExpr 0x9fdb5e4 <col:18> 'size_type':'unsigned int' lvalue ParmVar 0x9fd6010 '__new_size' 'size_type':'unsigned int')
        (CallExpr 0x9fdb630 <col:31, col:36> '<dependent type>'
          (MemberExpr 0x9fdb610 <col:31> '<bound member function type>' ->size 0x9fd5f20
            (CXXThisExpr 0x9fdb600 <col:31> 'vector<_Tp, _Alloc> *' this))))
      (DeclRefExpr 0x9fdb6ac <col:39> 'value_type':'_Tp' lvalue ParmVar 0x9fd6050 '__x' 'value_type':'_Tp'))
    (IfStmt 0x9fdb920 <line:633:7, line:634:55>
      <<<NULL>>>
      (CXXOperatorCallExpr 0x9fdb7a0 <line:633:11, col:29> '<dependent type>'
        (UnresolvedLookupExpr 0x9fdb758 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bac3c0 0x9bc2c90 0x9bc5590 0x9d61190 0x9d616c0 0x9d61bf0)
        (DeclRefExpr 0x9fdb6f0 <col:11> 'size_type':'unsigned int' lvalue ParmVar 0x9fd6010 '__new_size' 'size_type':'unsigned int')
        (CallExpr 0x9fdb738 <col:24, col:29> '<dependent type>'
          (MemberExpr 0x9fdb718 <col:24> '<bound member function type>' ->size 0x9fd5f20
            (CXXThisExpr 0x9fdb708 <col:24> 'vector<_Tp, _Alloc> *' this))))
      (CallExpr 0x9fdb900 <line:634:4, col:55> '<dependent type>'
        (MemberExpr 0x9fdb7d8 <col:4> '<bound member function type>' ->_M_erase_at_end 0x9fd9d00
          (CXXThisExpr 0x9fdb7c8 <col:4> 'vector<_Tp, _Alloc> *' this))
        (CXXOperatorCallExpr 0x9fdb8d8 <col:20, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0x9fdb890 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d86680 0x9d87280 0x9d5d090 0x9d5d890)
          (CXXDependentScopeMemberExpr 0x9fdb840 <col:20, col:34> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x9fdb808 <col:20, col:26> '<dependent type>' lvalue
              (CXXThisExpr 0x9fdb7f8 <col:20> 'vector<_Tp, _Alloc> *' this)))
          (DeclRefExpr 0x9fdb874 <col:45> 'size_type':'unsigned int' lvalue ParmVar 0x9fd6010 '__new_size' 'size_type':'unsigned int')))
      <<<NULL>>>)))


        size_type capacity() const (CompoundStmt 0x9fdbb10 </usr/include/c++/4.6/bits/stl_vector.h:651:7, line:652:32>
  (ReturnStmt 0x9fdbb00 <line:651:9, line:652:29>
    (CXXUnresolvedConstructExpr 0x9fdbae0 <line:651:16, line:652:29> 'size_type':'unsigned int'
      (CXXOperatorCallExpr 0x9fdbab8 <line:651:26, line:652:21> '<dependent type>'
        (UnresolvedLookupExpr 0x9fdba80 <col:5, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
        (CXXDependentScopeMemberExpr 0x9fdb9c8 <line:651:26, col:40> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9fdb990 <col:26, col:32> '<dependent type>' lvalue
            (CXXThisExpr 0x9fdb980 <col:26> 'const vector<_Tp, _Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0x9fdba48 <line:652:7, col:21> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9fdba10 <col:7, col:13> '<dependent type>' lvalue
            (CXXThisExpr 0x9fdba00 <col:7> 'const vector<_Tp, _Alloc> *' this)))))))


        bool empty() const (CompoundStmt 0x9fdbca0 </usr/include/c++/4.6/bits/stl_vector.h:660:7, col:34>
  (ReturnStmt 0x9fdbc90 <col:9, col:31>
    (CXXOperatorCallExpr 0x9fdbc68 <col:16, col:31> '<dependent type>'
      (UnresolvedLookupExpr 0x9fdbc08 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30 0x9d5e270 0x9d5ece0 0x9d5f520 0x9d5fa90 0x9e73300)
      (CallExpr 0x9fdbb78 <col:16, col:22> '<dependent type>'
        (UnresolvedMemberExpr 0x9fdbb38 <col:16> '<bound member function type>' lvalue))
      (CallExpr 0x9fdbbe8 <col:27, col:31> '<dependent type>'
        (UnresolvedMemberExpr 0x9fdbba8 <col:27> '<bound member function type>' lvalue)))))


        void reserve(size_type __n);
        reference operator[](size_type __n) (CompoundStmt 0x9fdbe00 </usr/include/c++/4.6/bits/stl_vector.h:696:7, col:49>
  (ReturnStmt 0x9fdbdf0 <col:9, col:46>
    (UnaryOperator 0x9fdbdd8 <col:16, col:46> '<dependent type>' prefix '*'
      (ParenExpr 0x9fdbdc0 <col:17, col:46> '<dependent type>'
        (CXXOperatorCallExpr 0x9fdbd98 <col:18, col:43> '<dependent type>'
          (UnresolvedLookupExpr 0x9fdbd50 <col:41, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d86680 0x9d87280 0x9d5d090 0x9d5d890)
          (CXXDependentScopeMemberExpr 0x9fdbd00 <col:18, col:32> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x9fdbcc8 <col:18, col:24> '<dependent type>' lvalue
              (CXXThisExpr 0x9fdbcb8 <col:18> 'vector<_Tp, _Alloc> *' this)))
          (DeclRefExpr 0x9fdbd34 <col:43> 'size_type':'unsigned int' lvalue ParmVar 0x9fd6370 '__n' 'size_type':'unsigned int'))))))


        const_reference operator[](size_type __n) const (CompoundStmt 0x9fdbf60 </usr/include/c++/4.6/bits/stl_vector.h:711:7, col:49>
  (ReturnStmt 0x9fdbf50 <col:9, col:46>
    (UnaryOperator 0x9fdbf38 <col:16, col:46> '<dependent type>' prefix '*'
      (ParenExpr 0x9fdbf20 <col:17, col:46> '<dependent type>'
        (CXXOperatorCallExpr 0x9fdbef8 <col:18, col:43> '<dependent type>'
          (UnresolvedLookupExpr 0x9fdbeb0 <col:41, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d86680 0x9d87280 0x9d5d090 0x9d5d890)
          (CXXDependentScopeMemberExpr 0x9fdbe60 <col:18, col:32> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x9fdbe28 <col:18, col:24> '<dependent type>' lvalue
              (CXXThisExpr 0x9fdbe18 <col:18> 'const vector<_Tp, _Alloc> *' this)))
          (DeclRefExpr 0x9fdbe94 <col:43> 'size_type':'unsigned int' lvalue ParmVar 0x9fd64a0 '__n' 'size_type':'unsigned int'))))))


    protected:
    protected:
        void _M_range_check(size_type __n) const (CompoundStmt 0x9fdc160 </usr/include/c++/4.6/bits/stl_vector.h:717:7, line:720:7>
  (IfStmt 0x9fdc140 <line:718:2, line:719:54>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9fdc040 <line:718:6, col:24> '<dependent type>'
      (UnresolvedLookupExpr 0x9fdbff8 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bae1e0 0x9bc3fc0 0x9bc7850 0x9d64480 0x9d649b0 0x9d64ee0)
      (DeclRefExpr 0x9fdbf74 <col:6> 'size_type':'unsigned int' lvalue ParmVar 0x9fd6600 '__n' 'size_type':'unsigned int')
      (CallExpr 0x9fdbfd8 <col:13, col:24> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fdbfa0 <col:13, col:19> '<dependent type>' lvalue
          (CXXThisExpr 0x9fdbf90 <col:13> 'const vector<_Tp, _Alloc> *' this))))
    (CallExpr 0x9fdc110 <line:719:4, col:54> 'void'
      (ImplicitCastExpr 0x9fdc100 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x9fdc0e4 <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9b766b0 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0x9fdc130 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0x9fdc0d0 <col:24, col:30> 'const char [23]' lvalue
          (StringLiteral 0x9fdc09c </usr/include/c++/4.6/bits/stl_vector.h:719:29> 'const char [23]' lvalue "vector::_M_range_check"))))
    <<<NULL>>>))


    public:
    public:
        reference at(size_type __n) (CompoundStmt 0x9fdc260 </usr/include/c++/4.6/bits/stl_vector.h:736:7, line:739:7>
  (CallExpr 0x9fdc1c0 <line:737:2, col:20> '<dependent type>'
    (MemberExpr 0x9fdc188 <col:2> '<bound member function type>' ->_M_range_check 0x9fd66a0
      (CXXThisExpr 0x9fdc178 <col:2> 'vector<_Tp, _Alloc> *' this))
    (DeclRefExpr 0x9fdc1a8 <col:17> 'size_type':'unsigned int' lvalue ParmVar 0x9fd6760 '__n' 'size_type':'unsigned int'))
  (ReturnStmt 0x9fdc250 <line:738:2, col:20>
    (ArraySubscriptExpr 0x9fdc238 <col:9, col:20> '<dependent type>' lvalue
      (ParenExpr 0x9fdc208 <col:9, col:15> '<dependent type>'
        (UnaryOperator 0x9fdc1f0 <col:10, col:11> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9fdc1e0 <col:11> 'vector<_Tp, _Alloc> *' this)))
      (DeclRefExpr 0x9fdc21c <col:17> 'size_type':'unsigned int' lvalue ParmVar 0x9fd6760 '__n' 'size_type':'unsigned int'))))


        const_reference at(size_type __n) const (CompoundStmt 0x9fdc360 </usr/include/c++/4.6/bits/stl_vector.h:754:7, line:757:7>
  (CallExpr 0x9fdc2c0 <line:755:2, col:20> '<dependent type>'
    (MemberExpr 0x9fdc288 <col:2> '<bound member function type>' ->_M_range_check 0x9fd66a0
      (CXXThisExpr 0x9fdc278 <col:2> 'const vector<_Tp, _Alloc> *' this))
    (DeclRefExpr 0x9fdc2a8 <col:17> 'size_type':'unsigned int' lvalue ParmVar 0x9fd6820 '__n' 'size_type':'unsigned int'))
  (ReturnStmt 0x9fdc350 <line:756:2, col:20>
    (ArraySubscriptExpr 0x9fdc338 <col:9, col:20> '<dependent type>' lvalue
      (ParenExpr 0x9fdc308 <col:9, col:15> '<dependent type>'
        (UnaryOperator 0x9fdc2f0 <col:10, col:11> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9fdc2e0 <col:11> 'const vector<_Tp, _Alloc> *' this)))
      (DeclRefExpr 0x9fdc31c <col:17> 'size_type':'unsigned int' lvalue ParmVar 0x9fd6820 '__n' 'size_type':'unsigned int'))))


        reference front() (CompoundStmt 0x9fdc410 </usr/include/c++/4.6/bits/stl_vector.h:765:7, col:26>
  (ReturnStmt 0x9fdc400 <col:9, col:23>
    (UnaryOperator 0x9fdc3e8 <col:16, col:23> '<dependent type>' prefix '*'
      (CallExpr 0x9fdc3c8 <col:17, col:23> '<dependent type>'
        (UnresolvedMemberExpr 0x9fdc388 <col:17> '<bound member function type>' lvalue)))))


        const_reference front() const (CompoundStmt 0x9fdc4c0 </usr/include/c++/4.6/bits/stl_vector.h:773:7, col:26>
  (ReturnStmt 0x9fdc4b0 <col:9, col:23>
    (UnaryOperator 0x9fdc498 <col:16, col:23> '<dependent type>' prefix '*'
      (CallExpr 0x9fdc478 <col:17, col:23> '<dependent type>'
        (UnresolvedMemberExpr 0x9fdc438 <col:17> '<bound member function type>' lvalue)))))


        reference back() (CompoundStmt 0x9fe4b60 </usr/include/c++/4.6/bits/stl_vector.h:781:7, col:30>
  (ReturnStmt 0x9fe4b50 <col:9, col:27>
    (UnaryOperator 0x9fe4b38 <col:16, col:27> '<dependent type>' prefix '*'
      (ParenExpr 0x9fe4b20 <col:17, col:27> '<dependent type>'
        (CXXOperatorCallExpr 0x9fe4af8 <col:18, col:26> '<dependent type>'
          (UnresolvedLookupExpr 0x9fe4ac0 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
          (CallExpr 0x9fe4a88 <col:18, col:22> '<dependent type>'
            (UnresolvedMemberExpr 0x9fdc4e8 <col:18> '<bound member function type>' lvalue))
          (IntegerLiteral 0x9fe4aa8 <col:26> 'int' 1))))))


        const_reference back() const (CompoundStmt 0x9fe4ca0 </usr/include/c++/4.6/bits/stl_vector.h:789:7, col:30>
  (ReturnStmt 0x9fe4c90 <col:9, col:27>
    (UnaryOperator 0x9fe4c78 <col:16, col:27> '<dependent type>' prefix '*'
      (ParenExpr 0x9fe4c60 <col:17, col:27> '<dependent type>'
        (CXXOperatorCallExpr 0x9fe4c38 <col:18, col:26> '<dependent type>'
          (UnresolvedLookupExpr 0x9fe4c00 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
          (CallExpr 0x9fe4bc8 <col:18, col:22> '<dependent type>'
            (UnresolvedMemberExpr 0x9fe4b88 <col:18> '<bound member function type>' lvalue))
          (IntegerLiteral 0x9fe4be8 <col:26> 'int' 1))))))


        pointer data() (CompoundStmt 0x9fe4da8 </usr/include/c++/4.6/bits/stl_vector.h:804:7, col:43>
  (ReturnStmt 0x9fe4d98 <col:9, col:40>
    (CallExpr 0x9fe4d78 <col:16, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0x9fe4cd0 <col:16, col:21> '<overloaded function type>' lvalue (no ADL) = '1' 0x9ba4270)
      (CallExpr 0x9fe4d58 <col:33, col:39> '<dependent type>'
        (UnresolvedMemberExpr 0x9fe4d18 <col:33> '<bound member function type>' lvalue)))))


        const_pointer data() const (CompoundStmt 0x9fe4eb0 </usr/include/c++/4.6/bits/stl_vector.h:812:7, col:43>
  (ReturnStmt 0x9fe4ea0 <col:9, col:40>
    (CallExpr 0x9fe4e80 <col:16, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0x9fe4dd8 <col:16, col:21> '<overloaded function type>' lvalue (no ADL) = '1' 0x9ba4270)
      (CallExpr 0x9fe4e60 <col:33, col:39> '<dependent type>'
        (UnresolvedMemberExpr 0x9fe4e20 <col:33> '<bound member function type>' lvalue)))))


        void push_back(const value_type &__x) (CompoundStmt 0x9fe5338 </usr/include/c++/4.6/bits/stl_vector.h:827:7, line:835:7>
  (IfStmt 0x9fe5318 <line:828:2, line:834:28>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9fe5020 <line:828:6, col:47> '<dependent type>'
      (UnresolvedLookupExpr 0x9fe4fc8 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bacde0 0x9bc3130 0x9bc62c0 0x9c11360 0x9c32300 0x9c32670 0x9d60120 0x9d60630 0x9d60b40 0x9e73820)
      (CXXDependentScopeMemberExpr 0x9fe4f10 <col:6, col:20> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0x9fe4ed8 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0x9fe4ec8 <col:6> 'vector<_Tp, _Alloc> *' this)))
      (CXXDependentScopeMemberExpr 0x9fe4f90 <col:33, col:47> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0x9fe4f58 <col:33, col:39> '<dependent type>' lvalue
          (CXXThisExpr 0x9fe4f48 <col:33> 'vector<_Tp, _Alloc> *' this))))
    (CompoundStmt 0x9fe5220 <line:829:4, line:832:4>
      (CallExpr 0x9fe5160 <line:830:6, col:58> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fe5090 <col:6, col:20> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9fe5058 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x9fe5048 <col:6> 'vector<_Tp, _Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0x9fe5110 <col:30, col:44> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9fe50d8 <col:30, col:36> '<dependent type>' lvalue
            (CXXThisExpr 0x9fe50c8 <col:30> 'vector<_Tp, _Alloc> *' this)))
        (DeclRefExpr 0x9fe5144 <col:55> 'const value_type':'const _Tp' lvalue ParmVar 0x9fd6cb0 '__x' 'const value_type &'))
      (UnaryOperator 0x9fe5208 <line:831:6, col:22> '<dependent type>' prefix '++'
        (CXXDependentScopeMemberExpr 0x9fe51d0 <col:8, col:22> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9fe5198 <col:8, col:14> '<dependent type>' lvalue
            (CXXThisExpr 0x9fe5188 <col:8> 'vector<_Tp, _Alloc> *' this)))))
    (CallExpr 0x9fe52f0 <line:834:4, col:28> '<dependent type>'
      (MemberExpr 0x9fe5248 <col:4> '<bound member function type>' ->_M_insert_aux 0x9fd9ab0
        (CXXThisExpr 0x9fe5238 <col:4> 'vector<_Tp, _Alloc> *' this))
      (CallExpr 0x9fe52b8 <col:18, col:22> '<dependent type>'
        (UnresolvedMemberExpr 0x9fe5278 <col:18> '<bound member function type>' lvalue))
      (DeclRefExpr 0x9fe52d4 <col:25> 'const value_type':'const _Tp' lvalue ParmVar 0x9fd6cb0 '__x' 'const value_type &'))))


        void pop_back() (CompoundStmt 0x9fe5508 </usr/include/c++/4.6/bits/stl_vector.h:858:7, line:861:7>
  (UnaryOperator 0x9fe53d0 <line:859:2, col:18> '<dependent type>' prefix '--'
    (CXXDependentScopeMemberExpr 0x9fe5398 <col:4, col:18> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9fe5360 <col:4, col:10> '<dependent type>' lvalue
        (CXXThisExpr 0x9fe5350 <col:4> 'vector<_Tp, _Alloc> *' this))))
  (CallExpr 0x9fe54e8 <line:860:2, col:47> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9fe5430 <col:2, col:16> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9fe53f8 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0x9fe53e8 <col:2> 'vector<_Tp, _Alloc> *' this)))
    (CXXDependentScopeMemberExpr 0x9fe54b0 <col:24, col:38> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9fe5478 <col:24, col:30> '<dependent type>' lvalue
        (CXXThisExpr 0x9fe5468 <col:24> 'vector<_Tp, _Alloc> *' this)))))


        iterator insert(iterator __position, const value_type &__x);
        void insert(iterator __position, size_type __n, const value_type &__x) (CompoundStmt 0x9fe55c0 </usr/include/c++/4.6/bits/stl_vector.h:944:7, col:47>
  (CallExpr 0x9fe5598 <col:9, col:44> '<dependent type>'
    (MemberExpr 0x9fe5530 <col:9> '<bound member function type>' ->_M_fill_insert 0x9fd9940
      (CXXThisExpr 0x9fe5520 <col:9> 'vector<_Tp, _Alloc> *' this))
    (DeclRefExpr 0x9fe5550 <col:24> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x9fd6f80 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
    (DeclRefExpr 0x9fe5568 <col:36> 'size_type':'unsigned int' lvalue ParmVar 0x9fd6fc0 '__n' 'size_type':'unsigned int')
    (DeclRefExpr 0x9fe5580 <col:41> 'const value_type':'const _Tp' lvalue ParmVar 0x9fd7010 '__x' 'const value_type &')))


        template <typename _InputIterator> void insert(iterator __position, _InputIterator __first, _InputIterator __last) (CompoundStmt 0x9fe5810 </usr/include/c++/4.6/bits/stl_vector.h:964:9, line:968:2>
  (DeclStmt 0x9fe5700 <line:966:4, col:72>
    0x9fe56d0 "typedef typename std::__is_integer<_InputIterator>::__type _Integral")
  (CallExpr 0x9fe57e0 <line:967:4, col:63> '<dependent type>'
    (UnresolvedMemberExpr 0x9fe5720 <col:4> '<bound member function type>' lvalue)
    (DeclRefExpr 0x9fe5760 <col:23> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x9fd71a0 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
    (DeclRefExpr 0x9fe5778 <col:35> '_InputIterator' lvalue ParmVar 0x9fd71e0 '__first' '_InputIterator')
    (DeclRefExpr 0x9fe5790 <col:44> '_InputIterator' lvalue ParmVar 0x9fd7220 '__last' '_InputIterator')
    (CXXUnresolvedConstructExpr 0x9fe57c8 <col:52, col:62> '_Integral':'typename std::__is_integer<_InputIterator>::__type')))

;
        iterator erase(iterator __position);
        iterator erase(iterator __first, iterator __last);
        void swap(vector<_Tp, _Alloc> &__x) (CompoundStmt 0x9fe5f90 </usr/include/c++/4.6/bits/stl_vector.h:1020:7, line:1030:7>
  (CallExpr 0x9fe5998 <line:1021:2, col:56> '<dependent type>'
    (UnresolvedLookupExpr 0x9fe5850 <col:2, col:7> '<overloaded function type>' lvalue (no ADL) = '1' 0x9ba4660 0x9baa350 0x9d655a0)
    (CXXDependentScopeMemberExpr 0x9fe58d8 <col:12, col:26> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9fe58a0 <col:12, col:18> '<dependent type>' lvalue
        (CXXThisExpr 0x9fe5890 <col:12> 'vector<_Tp, _Alloc> *' this)))
    (CXXDependentScopeMemberExpr 0x9fe5960 <col:36, col:48> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9fe5928 <col:36, col:40> '<dependent type>' lvalue
        (DeclRefExpr 0x9fe590c <col:36> 'vector<_Tp, _Alloc>' lvalue ParmVar 0x9fd75f0 '__x' 'vector<_Tp, _Alloc> &'))))
  (CallExpr 0x9fe5b28 <line:1022:2, col:58> '<dependent type>'
    (UnresolvedLookupExpr 0x9fe59e0 <col:2, col:7> '<overloaded function type>' lvalue (no ADL) = '1' 0x9ba4660 0x9baa350 0x9d655a0)
    (CXXDependentScopeMemberExpr 0x9fe5a68 <col:12, col:26> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9fe5a30 <col:12, col:18> '<dependent type>' lvalue
        (CXXThisExpr 0x9fe5a20 <col:12> 'vector<_Tp, _Alloc> *' this)))
    (CXXDependentScopeMemberExpr 0x9fe5af0 <col:37, col:49> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9fe5ab8 <col:37, col:41> '<dependent type>' lvalue
        (DeclRefExpr 0x9fe5a9c <col:37> 'vector<_Tp, _Alloc>' lvalue ParmVar 0x9fd75f0 '__x' 'vector<_Tp, _Alloc> &'))))
  (CallExpr 0x9fe5cb8 <line:1023:2, line:1024:34> '<dependent type>'
    (UnresolvedLookupExpr 0x9fe5b70 <line:1023:2, col:7> '<overloaded function type>' lvalue (no ADL) = '1' 0x9ba4660 0x9baa350 0x9d655a0)
    (CXXDependentScopeMemberExpr 0x9fe5bf8 <col:12, col:26> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9fe5bc0 <col:12, col:18> '<dependent type>' lvalue
        (CXXThisExpr 0x9fe5bb0 <col:12> 'vector<_Tp, _Alloc> *' this)))
    (CXXDependentScopeMemberExpr 0x9fe5c80 <line:1024:5, col:17> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9fe5c48 <col:5, col:9> '<dependent type>' lvalue
        (DeclRefExpr 0x9fe5c2c <col:5> 'vector<_Tp, _Alloc>' lvalue ParmVar 0x9fd75f0 '__x' 'vector<_Tp, _Alloc> &'))))
  (CallExpr 0x9fe5f68 <line:1028:2, line:1029:36> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9fe5e68 <line:1028:2, col:37> '<dependent type>' lvalue)
    (CallExpr 0x9fe5ed8 <col:46, col:66> '<dependent type>'
      (UnresolvedMemberExpr 0x9fe5e9c <col:46> '<dependent type>' lvalue))
    (CallExpr 0x9fe5f48 <line:1029:11, col:35> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9fe5f10 <col:11, col:15> '<dependent type>' lvalue
        (DeclRefExpr 0x9fe5ef4 <col:11> 'vector<_Tp, _Alloc>' lvalue ParmVar 0x9fd75f0 '__x' 'vector<_Tp, _Alloc> &')))))


        void clear() (CompoundStmt 0x9fe6080 </usr/include/c++/4.6/bits/stl_vector.h:1040:7, col:50>
  (CallExpr 0x9fe6060 <col:9, col:47> '<dependent type>'
    (MemberExpr 0x9fe5fc0 <col:9> '<bound member function type>' ->_M_erase_at_end 0x9fd9d00
      (CXXThisExpr 0x9fe5fb0 <col:9> 'vector<_Tp, _Alloc> *' this))
    (CXXDependentScopeMemberExpr 0x9fe6028 <col:25, col:39> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9fe5ff0 <col:25, col:31> '<dependent type>' lvalue
        (CXXThisExpr 0x9fe5fe0 <col:25> 'vector<_Tp, _Alloc> *' this)))))


    protected:
    protected:
        template <typename _ForwardIterator> pointer _M_allocate_and_copy(size_type __n, _ForwardIterator __first, _ForwardIterator __last) (CompoundStmt 0x9fe6400 </usr/include/c++/4.6/bits/stl_vector.h:1051:9, line:1064:2>
  (DeclStmt 0x9fe6158 <line:1052:4, col:45>
    0x9fe60a0 "pointer __result =
      (CallExpr 0x9fe6138 <col:23, col:44> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fe60e8 <col:23, col:29> '<dependent type>' lvalue
          (CXXThisExpr 0x9fe60d8 <col:23> 'vector<_Tp, _Alloc> *' this))
        (DeclRefExpr 0x9fe611c <col:41> 'size_type':'unsigned int' lvalue ParmVar 0x9fd77f0 '__n' 'size_type':'unsigned int'))")
  (IfStmt 0x9fe62f0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_vector.h:1058:6>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9fe6168 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x9fe62d8 </usr/include/c++/4.6/bits/stl_vector.h:1054:6, line:1058:6>
      (CallExpr 0x9fe6280 <line:1055:8, line:1056:29> '<dependent type>'
        (UnresolvedLookupExpr 0x9fe61a0 <line:1055:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fc8600 0x9fc8f00)
        (DeclRefExpr 0x9fe61d8 <col:36> '_ForwardIterator' lvalue ParmVar 0x9fd7830 '__first' '_ForwardIterator')
        (DeclRefExpr 0x9fe61f0 <col:45> '_ForwardIterator' lvalue ParmVar 0x9fd7870 '__last' '_ForwardIterator')
        (DeclRefExpr 0x9fe6208 <col:53> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x9fe60a0 '__result' 'pointer':'typename _Tp_alloc_type::pointer')
        (CallExpr 0x9fe6260 <line:1056:8, col:28> '<dependent type>'
          (UnresolvedMemberExpr 0x9fe6220 <col:8> '<dependent type>' lvalue)))
      (ReturnStmt 0x9fe62c8 <line:1057:8, col:15>
        (DeclRefExpr 0x9fe62ac <col:15> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x9fe60a0 '__result' 'pointer':'typename _Tp_alloc_type::pointer')))
    <<<NULL>>>)
  (IfStmt 0x9fe63e0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_vector.h:1063:6>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9fe6310 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9fe63c8 </usr/include/c++/4.6/bits/stl_vector.h:1060:6, line:1063:6>
      (CallExpr 0x9fe6390 <line:1061:8, col:35> '<dependent type>'
        (UnresolvedMemberExpr 0x9fe6320 <col:8> '<dependent type>' lvalue)
        (DeclRefExpr 0x9fe635c <col:22> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x9fe60a0 '__result' 'pointer':'typename _Tp_alloc_type::pointer')
        (DeclRefExpr 0x9fe6374 <col:32> 'size_type':'unsigned int' lvalue ParmVar 0x9fd77f0 '__n' 'size_type':'unsigned int'))
      (NullStmt 0x9fe63b8 <line:1062:31>))
    <<<NULL>>>))

;
        template <typename _Integer> void _M_initialize_dispatch(_Integer __n, _Integer __value, std::__true_type) (CompoundStmt 0x9fe67b0 </usr/include/c++/4.6/bits/stl_vector.h:1076:9, line:1081:2>
  (BinaryOperator 0x9fe6530 <line:1077:4, col:68> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x9fe6468 <col:4, col:18> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9fe6430 <col:4, col:10> '<dependent type>' lvalue
        (CXXThisExpr 0x9fe6420 <col:4> 'vector<_Tp, _Alloc> *' this)))
    (CallExpr 0x9fe6510 <col:29, col:68> '<dependent type>'
      (UnresolvedMemberExpr 0x9fe649c <col:29> '<dependent type>' lvalue)
      (CXXStaticCastExpr 0x9fe64f8 <col:41, col:67> 'size_type':'unsigned int' static_cast<size_type> <Dependent>
        (DeclRefExpr 0x9fe64d8 <col:64> '_Integer' lvalue ParmVar 0x9fd7a30 '__n' '_Integer'))))
  (BinaryOperator 0x9fe66f0 <line:1078:4, line:1079:57> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x9fe6590 <line:1078:4, col:18> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9fe6558 <col:4, col:10> '<dependent type>' lvalue
        (CXXThisExpr 0x9fe6548 <col:4> 'vector<_Tp, _Alloc> *' this)))
    (CXXOperatorCallExpr 0x9fe66c8 <line:1079:6, col:57> '<dependent type>'
      (UnresolvedLookupExpr 0x9fe6680 <col:29, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d86680 0x9d87280 0x9d5d090 0x9d5d890)
      (CXXDependentScopeMemberExpr 0x9fe6610 <col:6, col:20> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0x9fe65d8 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0x9fe65c8 <col:6> 'vector<_Tp, _Alloc> *' this)))
      (CXXStaticCastExpr 0x9fe6668 <col:31, col:57> 'size_type':'unsigned int' static_cast<size_type> <Dependent>
        (DeclRefExpr 0x9fe6644 <col:54> '_Integer' lvalue ParmVar 0x9fd7a30 '__n' '_Integer'))))
  (CallExpr 0x9fe6788 <line:1080:4, col:59> '<dependent type>'
    (MemberExpr 0x9fe6718 <col:4> '<bound member function type>' ->_M_fill_initialize 0x9fd8400
      (CXXThisExpr 0x9fe6708 <col:4> 'vector<_Tp, _Alloc> *' this))
    (CXXStaticCastExpr 0x9fe6758 <col:23, col:49> 'size_type':'unsigned int' static_cast<size_type> <Dependent>
      (DeclRefExpr 0x9fe6738 <col:46> '_Integer' lvalue ParmVar 0x9fd7a30 '__n' '_Integer'))
    (DeclRefExpr 0x9fe6770 <col:52> '_Integer' lvalue ParmVar 0x9fd7a70 '__value' '_Integer')))

;
        template <typename _InputIterator> void _M_initialize_dispatch(_InputIterator __first, _InputIterator __last, std::__false_type) (CompoundStmt 0x9fe69e8 </usr/include/c++/4.6/bits/stl_vector.h:1088:9, line:1092:2>
  (DeclStmt 0x9fe6900 <line:1089:4, line:1090:37>
    0x9fe68d0 "typedef typename std::iterator_traits<_InputIterator>::iterator_category _IterCategory")
  (CallExpr 0x9fe69c0 <line:1091:4, col:56> '<dependent type>'
    (UnresolvedMemberExpr 0x9fe6920 <col:4> '<bound member function type>' lvalue)
    (DeclRefExpr 0x9fe6960 <col:24> '_InputIterator' lvalue ParmVar 0x9fd7c70 '__first' '_InputIterator')
    (DeclRefExpr 0x9fe6978 <col:33> '_InputIterator' lvalue ParmVar 0x9fd7cb0 '__last' '_InputIterator')
    (CXXUnresolvedConstructExpr 0x9fe69a8 <col:41, col:55> '_IterCategory':'typename std::iterator_traits<_InputIterator>::iterator_category')))

;
        template <typename _InputIterator> void _M_range_initialize(_InputIterator __first, _InputIterator __last, std::input_iterator_tag) (CompoundStmt 0x9fe6b88 </usr/include/c++/4.6/bits/stl_vector.h:1099:9, line:1102:2>
  (ForStmt 0x9fe6b60 <line:1100:4, line:1101:24>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9fe6a88 <line:1100:11, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0x9fe6a30 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bacde0 0x9bc3130 0x9bc62c0 0x9c11360 0x9c32300 0x9c32670 0x9d60120 0x9d60630 0x9d60b40 0x9e73820)
      (DeclRefExpr 0x9fe6a00 <col:11> '_InputIterator' lvalue ParmVar 0x9fd7eb0 '__first' '_InputIterator')
      (DeclRefExpr 0x9fe6a18 <col:22> '_InputIterator' lvalue ParmVar 0x9fd7ef0 '__last' '_InputIterator'))
    (UnaryOperator 0x9fe6ac8 <col:30, col:32> '<dependent type>' prefix '++'
      (DeclRefExpr 0x9fe6aac <col:32> '_InputIterator' lvalue ParmVar 0x9fd7eb0 '__first' '_InputIterator'))
    (CallExpr 0x9fe6b40 <line:1101:6, col:24> '<dependent type>'
      (MemberExpr 0x9fe6af0 <col:6> '<bound member function type>' ->push_back 0x9fd6d30
        (CXXThisExpr 0x9fe6ae0 <col:6> 'vector<_Tp, _Alloc> *' this))
      (UnaryOperator 0x9fe6b28 <col:16, col:17> '<dependent type>' prefix '*'
        (DeclRefExpr 0x9fe6b10 <col:17> '_InputIterator' lvalue ParmVar 0x9fd7eb0 '__first' '_InputIterator')))))

;
        template <typename _ForwardIterator> void _M_range_initialize(_ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag) (CompoundStmt 0x9fe7178 </usr/include/c++/4.6/bits/stl_vector.h:1109:9, line:1117:2>
  (DeclStmt 0x9fe6c90 <line:1110:4, col:56>
    0x9fe6bb0 "const size_type __n =
      (CallExpr 0x9fe6c68 <col:26, col:55> '<dependent type>'
        (UnresolvedLookupExpr 0x9fe6c00 <col:26, col:31> '<overloaded function type>' lvalue (no ADL) = '1' 0x9bba500)
        (DeclRefExpr 0x9fe6c34 <col:40> '_ForwardIterator' lvalue ParmVar 0x9fd8130 '__first' '_ForwardIterator')
        (DeclRefExpr 0x9fe6c4c <col:49> '_ForwardIterator' lvalue ParmVar 0x9fd8170 '__last' '_ForwardIterator'))")
  (BinaryOperator 0x9fe6da0 <line:1111:4, col:50> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x9fe6ce8 <col:4, col:18> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9fe6cb0 <col:4, col:10> '<dependent type>' lvalue
        (CXXThisExpr 0x9fe6ca0 <col:4> 'vector<_Tp, _Alloc> *' this)))
    (CallExpr 0x9fe6d80 <col:29, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9fe6d30 <col:29, col:35> '<dependent type>' lvalue
        (CXXThisExpr 0x9fe6d20 <col:29> 'vector<_Tp, _Alloc> *' this))
      (DeclRefExpr 0x9fe6d64 <col:47> 'const size_type':'const unsigned int' lvalue Var 0x9fe6bb0 '__n' 'const size_type':'const unsigned int')))
  (BinaryOperator 0x9fe6f40 <line:1112:4, col:63> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x9fe6e00 <col:4, col:18> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9fe6dc8 <col:4, col:10> '<dependent type>' lvalue
        (CXXThisExpr 0x9fe6db8 <col:4> 'vector<_Tp, _Alloc> *' this)))
    (CXXOperatorCallExpr 0x9fe6f18 <col:38, col:63> '<dependent type>'
      (UnresolvedLookupExpr 0x9fe6ed0 <col:61, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d86680 0x9d87280 0x9d5d090 0x9d5d890)
      (CXXDependentScopeMemberExpr 0x9fe6e80 <col:38, col:52> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0x9fe6e48 <col:38, col:44> '<dependent type>' lvalue
          (CXXThisExpr 0x9fe6e38 <col:38> 'vector<_Tp, _Alloc> *' this)))
      (DeclRefExpr 0x9fe6eb4 <col:63> 'const size_type':'const unsigned int' lvalue Var 0x9fe6bb0 '__n' 'const size_type':'const unsigned int')))
  (BinaryOperator 0x9fe7160 <line:1113:4, line:1116:27> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x9fe6fa0 <line:1113:4, col:18> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9fe6f68 <col:4, col:10> '<dependent type>' lvalue
        (CXXThisExpr 0x9fe6f58 <col:4> 'vector<_Tp, _Alloc> *' this)))
    (CallExpr 0x9fe7130 <line:1114:6, line:1116:27> '<dependent type>'
      (UnresolvedLookupExpr 0x9fe6ff0 <line:1114:6, col:11> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fc8600 0x9fc8f00)
      (DeclRefExpr 0x9fe7028 <col:34> '_ForwardIterator' lvalue ParmVar 0x9fd8130 '__first' '_ForwardIterator')
      (DeclRefExpr 0x9fe7040 <col:43> '_ForwardIterator' lvalue ParmVar 0x9fd8170 '__last' '_ForwardIterator')
      (CXXDependentScopeMemberExpr 0x9fe70a0 <line:1115:6, col:20> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0x9fe7068 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0x9fe7058 <col:6> 'vector<_Tp, _Alloc> *' this)))
      (CallExpr 0x9fe7110 <line:1116:6, col:26> '<dependent type>'
        (UnresolvedMemberExpr 0x9fe70d4 <col:6> '<dependent type>' lvalue)))))

;
        void _M_fill_initialize(size_type __n, const value_type &__value) (CompoundStmt 0x9fe7448 </usr/include/c++/4.6/bits/stl_vector.h:1123:7, line:1127:7>
  (CallExpr 0x9fe7300 <line:1124:2, line:1125:32> '<dependent type>'
    (UnresolvedLookupExpr 0x9fe71c0 <line:1124:2, col:7> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fca500 0x9fcae30)
    (CXXDependentScopeMemberExpr 0x9fe7240 <col:32, col:46> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9fe7208 <col:32, col:38> '<dependent type>' lvalue
        (CXXThisExpr 0x9fe71f8 <col:32> 'vector<_Tp, _Alloc> *' this)))
    (DeclRefExpr 0x9fe7274 <col:56> 'size_type':'unsigned int' lvalue ParmVar 0x9fd8350 '__n' 'size_type':'unsigned int')
    (DeclRefExpr 0x9fe728c <col:61> 'const value_type':'const _Tp' lvalue ParmVar 0x9fd83a0 '__value' 'const value_type &')
    (CallExpr 0x9fe72e0 <line:1125:11, col:31> '<dependent type>'
      (UnresolvedMemberExpr 0x9fe72a4 <col:11> '<dependent type>' lvalue)))
  (BinaryOperator 0x9fe7430 <line:1126:2, col:42> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x9fe7378 <col:2, col:16> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9fe7340 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0x9fe7330 <col:2> 'vector<_Tp, _Alloc> *' this)))
    (CXXDependentScopeMemberExpr 0x9fe73f8 <col:28, col:42> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9fe73c0 <col:28, col:34> '<dependent type>' lvalue
        (CXXThisExpr 0x9fe73b0 <col:28> 'vector<_Tp, _Alloc> *' this)))))


        template <typename _Integer> void _M_assign_dispatch(_Integer __n, _Integer __val, std::__true_type) (CompoundStmt 0x9fe74e8 </usr/include/c++/4.6/bits/stl_vector.h:1150:9, col:39>
  (CallExpr 0x9fe74c0 <col:11, col:36> '<dependent type>'
    (MemberExpr 0x9fe7470 <col:11> '<bound member function type>' ->_M_fill_assign 0x9fd8da0
      (CXXThisExpr 0x9fe7460 <col:11> 'vector<_Tp, _Alloc> *' this))
    (DeclRefExpr 0x9fe7490 <col:26> '_Integer' lvalue ParmVar 0x9fd84d0 '__n' '_Integer')
    (DeclRefExpr 0x9fe74a8 <col:31> '_Integer' lvalue ParmVar 0x9fd8510 '__val' '_Integer')))

;
        template <typename _InputIterator> void _M_assign_dispatch(_InputIterator __first, _InputIterator __last, std::__false_type) (CompoundStmt 0x9fe7718 </usr/include/c++/4.6/bits/stl_vector.h:1157:9, line:1161:2>
  (DeclStmt 0x9fe7630 <line:1158:4, line:1159:37>
    0x9fe7600 "typedef typename std::iterator_traits<_InputIterator>::iterator_category _IterCategory")
  (CallExpr 0x9fe76f0 <line:1160:4, col:50> '<dependent type>'
    (UnresolvedMemberExpr 0x9fe7650 <col:4> '<bound member function type>' lvalue)
    (DeclRefExpr 0x9fe7690 <col:18> '_InputIterator' lvalue ParmVar 0x9fd86e0 '__first' '_InputIterator')
    (DeclRefExpr 0x9fe76a8 <col:27> '_InputIterator' lvalue ParmVar 0x9fd8720 '__last' '_InputIterator')
    (CXXUnresolvedConstructExpr 0x9fe76d8 <col:35, col:49> '_IterCategory':'typename std::iterator_traits<_InputIterator>::iterator_category')))

;
        template <typename _InputIterator> void _M_assign_aux(_InputIterator __first, _InputIterator __last, std::input_iterator_tag);
        template <typename _ForwardIterator> void _M_assign_aux(_ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag);
        void _M_fill_assign(size_type __n, const value_type &__val);
        template <typename _Integer> void _M_insert_dispatch(iterator __pos, _Integer __n, _Integer __val, std::__true_type) (CompoundStmt 0x9fe77d0 </usr/include/c++/4.6/bits/stl_vector.h:1191:9, col:46>
  (CallExpr 0x9fe77a8 <col:11, col:43> '<dependent type>'
    (MemberExpr 0x9fe7740 <col:11> '<bound member function type>' ->_M_fill_insert 0x9fd9940
      (CXXThisExpr 0x9fe7730 <col:11> 'vector<_Tp, _Alloc> *' this))
    (DeclRefExpr 0x9fe7760 <col:26> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x9fd8e70 '__pos' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
    (DeclRefExpr 0x9fe7778 <col:33> '_Integer' lvalue ParmVar 0x9fd8eb0 '__n' '_Integer')
    (DeclRefExpr 0x9fe7790 <col:38> '_Integer' lvalue ParmVar 0x9fd8ef0 '__val' '_Integer')))

;
        template <typename _InputIterator> void _M_insert_dispatch(iterator __pos, _InputIterator __first, _InputIterator __last, std::__false_type) (CompoundStmt 0x9fe7a20 </usr/include/c++/4.6/bits/stl_vector.h:1198:9, line:1202:2>
  (DeclStmt 0x9fe7910 <line:1199:4, line:1200:37>
    0x9fe78e0 "typedef typename std::iterator_traits<_InputIterator>::iterator_category _IterCategory")
  (CallExpr 0x9fe79f0 <line:1201:4, col:59> '<dependent type>'
    (UnresolvedMemberExpr 0x9fe7930 <col:4> '<bound member function type>' lvalue)
    (DeclRefExpr 0x9fe7970 <col:20> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x9fd90f0 '__pos' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
    (DeclRefExpr 0x9fe7988 <col:27> '_InputIterator' lvalue ParmVar 0x9fd9130 '__first' '_InputIterator')
    (DeclRefExpr 0x9fe79a0 <col:36> '_InputIterator' lvalue ParmVar 0x9fd9170 '__last' '_InputIterator')
    (CXXUnresolvedConstructExpr 0x9fe79d8 <col:44, col:58> '_IterCategory':'typename std::iterator_traits<_InputIterator>::iterator_category')))

;
        template <typename _InputIterator> void _M_range_insert(iterator __pos, _InputIterator __first, _InputIterator __last, std::input_iterator_tag);
        template <typename _ForwardIterator> void _M_range_insert(iterator __pos, _ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag);
        void _M_fill_insert(iterator __pos, size_type __n, const value_type &__x);
        void _M_insert_aux(iterator __position, const value_type &__x);
        size_type _M_check_len(size_type __n, const char *__s) const (CompoundStmt 0x9fe8110 </usr/include/c++/4.6/bits/stl_vector.h:1240:7, line:1246:7>
  (IfStmt 0x9fe7c80 <line:1241:2, line:1242:33>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9fe7b98 <line:1241:6, col:28> '<dependent type>'
      (UnresolvedLookupExpr 0x9fe7b50 <col:26, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bac3c0 0x9bc2c90 0x9bc5590 0x9d61190 0x9d616c0 0x9d61bf0)
      (CXXOperatorCallExpr 0x9fe7b10 <col:6, col:24> '<dependent type>'
        (UnresolvedLookupExpr 0x9fe7ad8 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0)
        (CallExpr 0x9fe7a68 <col:6, col:15> '<dependent type>'
          (MemberExpr 0x9fe7a48 <col:6> '<bound member function type>' ->max_size 0x9fd5fa0
            (CXXThisExpr 0x9fe7a38 <col:6> 'const vector<_Tp, _Alloc> *' this)))
        (CallExpr 0x9fe7ab8 <col:19, col:24> '<dependent type>'
          (MemberExpr 0x9fe7a98 <col:19> '<bound member function type>' ->size 0x9fd5f20
            (CXXThisExpr 0x9fe7a88 <col:19> 'const vector<_Tp, _Alloc> *' this))))
      (DeclRefExpr 0x9fe7b34 <col:28> 'size_type':'unsigned int' lvalue ParmVar 0x9fd9b20 '__n' 'size_type':'unsigned int'))
    (CallExpr 0x9fe7c50 <line:1242:4, col:33> 'void'
      (ImplicitCastExpr 0x9fe7c40 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x9fe7c24 <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9b765e0 '__throw_length_error' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0x9fe7c70 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <LValueToRValue>
        (ParenExpr 0x9fe7c10 <col:24, col:30> 'const char *' lvalue
          (DeclRefExpr 0x9fe7bf4 </usr/include/c++/4.6/bits/stl_vector.h:1242:29> 'const char *' lvalue ParmVar 0x9fd9b70 '__s' 'const char *'))))
    <<<NULL>>>)
  (DeclStmt 0x9fe7e88 <line:1244:2, col:56>
    0x9fe7cb0 "const size_type __len =
      (CXXOperatorCallExpr 0x9fe7e60 <col:26, col:55> '<dependent type>'
        (UnresolvedLookupExpr 0x9fe7e18 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d86680 0x9d87280 0x9d5d090 0x9d5d890)
        (CallExpr 0x9fe7d18 <col:26, col:31> '<dependent type>'
          (MemberExpr 0x9fe7cf8 <col:26> '<bound member function type>' ->size 0x9fd5f20
            (CXXThisExpr 0x9fe7ce8 <col:26> 'const vector<_Tp, _Alloc> *' this)))
        (CallExpr 0x9fe7df0 <col:35, col:55> '<dependent type>'
          (UnresolvedLookupExpr 0x9fe7d50 <col:35, col:40> '<overloaded function type>' lvalue (no ADL) = '1' 0x9be02b0 0x9b949b0)
          (CallExpr 0x9fe7db8 <col:44, col:49> '<dependent type>'
            (MemberExpr 0x9fe7d98 <col:44> '<bound member function type>' ->size 0x9fd5f20
              (CXXThisExpr 0x9fe7d88 <col:44> 'const vector<_Tp, _Alloc> *' this)))
          (DeclRefExpr 0x9fe7dd4 <col:52> 'size_type':'unsigned int' lvalue ParmVar 0x9fd9b20 '__n' 'size_type':'unsigned int')))")
  (ReturnStmt 0x9fe8100 <line:1245:2, col:63>
    (ConditionalOperator 0x9fe80e0 <col:9, col:63> '<dependent type>'
      (ParenExpr 0x9fe8060 <col:9, col:46> '<dependent type>'
        (BinaryOperator 0x9fe8048 <col:10, col:45> '<dependent type>' '||'
          (CXXOperatorCallExpr 0x9fe7f48 <col:10, col:23> '<dependent type>'
            (UnresolvedLookupExpr 0x9fe7f00 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bac3c0 0x9bc2c90 0x9bc5590 0x9d61190 0x9d616c0 0x9d61bf0)
            (DeclRefExpr 0x9fe7e98 <col:10> 'const size_type':'const unsigned int' lvalue Var 0x9fe7cb0 '__len' 'const size_type':'const unsigned int')
            (CallExpr 0x9fe7ee0 <col:18, col:23> '<dependent type>'
              (MemberExpr 0x9fe7ec0 <col:18> '<bound member function type>' ->size 0x9fd5f20
                (CXXThisExpr 0x9fe7eb0 <col:18> 'const vector<_Tp, _Alloc> *' this))))
          (CXXOperatorCallExpr 0x9fe8020 <col:28, col:45> '<dependent type>'
            (UnresolvedLookupExpr 0x9fe7fd8 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bad330 0x9bc37b0 0x9bc6740 0x9d622b0 0x9d627e0 0x9d62d10)
            (DeclRefExpr 0x9fe7f6c <col:28> 'const size_type':'const unsigned int' lvalue Var 0x9fe7cb0 '__len' 'const size_type':'const unsigned int')
            (CallExpr 0x9fe7fb8 <col:36, col:45> '<dependent type>'
              (MemberExpr 0x9fe7f98 <col:36> '<bound member function type>' ->max_size 0x9fd5fa0
                (CXXThisExpr 0x9fe7f88 <col:36> 'const vector<_Tp, _Alloc> *' this))))))
      (CallExpr 0x9fe80a8 <col:50, col:59> '<dependent type>'
        (MemberExpr 0x9fe8088 <col:50> '<bound member function type>' ->max_size 0x9fd5fa0
          (CXXThisExpr 0x9fe8078 <col:50> 'const vector<_Tp, _Alloc> *' this)))
      (DeclRefExpr 0x9fe80c4 <col:63> 'const size_type':'const unsigned int' lvalue Var 0x9fe7cb0 '__len' 'const size_type':'const unsigned int'))))


        void _M_erase_at_end(pointer __pos) (CompoundStmt 0x9fe8358 </usr/include/c++/4.6/bits/stl_vector.h:1254:7, line:1257:7>
  (CallExpr 0x9fe8280 <line:1255:2, col:69> '<dependent type>'
    (UnresolvedLookupExpr 0x9fe8150 <col:2, col:7> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fbc330 0x9fbcff0 0x9fbd690 0x9fbdc40)
    (DeclRefExpr 0x9fe8190 <col:16> 'pointer':'typename _Tp_alloc_type::pointer' lvalue ParmVar 0x9fd9c60 '__pos' 'pointer':'typename _Tp_alloc_type::pointer')
    (CXXDependentScopeMemberExpr 0x9fe81f0 <col:23, col:37> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9fe81b8 <col:23, col:29> '<dependent type>' lvalue
        (CXXThisExpr 0x9fe81a8 <col:23> 'vector<_Tp, _Alloc> *' this)))
    (CallExpr 0x9fe8260 <col:48, col:68> '<dependent type>'
      (UnresolvedMemberExpr 0x9fe8224 <col:48> '<dependent type>' lvalue)))
  (BinaryOperator 0x9fe8340 <line:1256:2, col:28> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x9fe82f0 <col:2, col:16> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9fe82b8 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0x9fe82a8 <col:2> 'vector<_Tp, _Alloc> *' this)))
    (DeclRefExpr 0x9fe8324 <col:28> 'pointer':'typename _Tp_alloc_type::pointer' lvalue ParmVar 0x9fd9c60 '__pos' 'pointer':'typename _Tp_alloc_type::pointer')))


    };
    template <typename _Tp, typename _Alloc> inline bool operator==(const vector<_Tp, _Alloc> &__x, const vector<_Tp, _Alloc> &__y) (CompoundStmt 0x9fe8b80 </usr/include/c++/4.6/bits/stl_vector.h:1274:5, line:1275:61>
  (ReturnStmt 0x9fe8b70 <line:1274:7, line:1275:58>
    (ParenExpr 0x9fe8b58 <line:1274:14, line:1275:58> '<dependent type>'
      (BinaryOperator 0x9fe8b40 <line:1274:15, line:1275:57> '<dependent type>' '&&'
        (CXXOperatorCallExpr 0x9fe8950 <line:1274:15, col:38> '<dependent type>'
          (UnresolvedLookupExpr 0x9fe88f0 <col:26, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fe87e0 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30 0x9d5e270 0x9d5ece0 0x9d5f520 0x9d5fa90 0x9e73300)
          (CallExpr 0x9fe8860 <col:15, col:24> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9fe8828 <col:15, col:19> '<dependent type>' lvalue
              (DeclRefExpr 0x9fe8810 <col:15> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x9fe8570 '__x' 'const vector<_Tp, _Alloc> &')))
          (CallExpr 0x9fe88d0 <col:29, col:38> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9fe8898 <col:29, col:33> '<dependent type>' lvalue
              (DeclRefExpr 0x9fe887c <col:29> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x9fe86e0 '__y' 'const vector<_Tp, _Alloc> &'))))
        (CallExpr 0x9fe8b18 <line:1275:11, col:57> '<dependent type>'
          (UnresolvedLookupExpr 0x9fe8990 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0x9c01360 0x9c02310)
          (CallExpr 0x9fe8a18 <col:22, col:32> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9fe89e0 <col:22, col:26> '<dependent type>' lvalue
              (DeclRefExpr 0x9fe89c8 <col:22> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x9fe8570 '__x' 'const vector<_Tp, _Alloc> &')))
          (CallExpr 0x9fe8a88 <col:35, col:43> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9fe8a50 <col:35, col:39> '<dependent type>' lvalue
              (DeclRefExpr 0x9fe8a34 <col:35> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x9fe8570 '__x' 'const vector<_Tp, _Alloc> &')))
          (CallExpr 0x9fe8af8 <col:46, col:56> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9fe8ac0 <col:46, col:50> '<dependent type>' lvalue
              (DeclRefExpr 0x9fe8aa4 <col:46> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x9fe86e0 '__y' 'const vector<_Tp, _Alloc> &'))))))))

;
    template <typename _Tp, typename _Alloc> inline bool operator<(const vector<_Tp, _Alloc> &__x, const vector<_Tp, _Alloc> &__y) (CompoundStmt 0x9fe9250 </usr/include/c++/4.6/bits/stl_vector.h:1291:5, line:1292:33>
  (ReturnStmt 0x9fe9240 <line:1291:7, line:1292:30>
    (CallExpr 0x9fe9210 <line:1291:14, line:1292:30> '<dependent type>'
      (UnresolvedLookupExpr 0x9fe9018 <line:1291:14, col:19> '<overloaded function type>' lvalue (no ADL) = '1' 0x9c02860 0x9c03570)
      (CallExpr 0x9fe90a0 <col:43, col:53> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fe9068 <col:43, col:47> '<dependent type>' lvalue
          (DeclRefExpr 0x9fe9050 <col:43> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x9fe8d80 '__x' 'const vector<_Tp, _Alloc> &')))
      (CallExpr 0x9fe9110 <col:56, col:64> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fe90d8 <col:56, col:60> '<dependent type>' lvalue
          (DeclRefExpr 0x9fe90bc <col:56> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x9fe8d80 '__x' 'const vector<_Tp, _Alloc> &')))
      (CallExpr 0x9fe9180 <line:1292:8, col:18> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fe9148 <col:8, col:12> '<dependent type>' lvalue
          (DeclRefExpr 0x9fe912c <col:8> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x9fe8ef0 '__y' 'const vector<_Tp, _Alloc> &')))
      (CallExpr 0x9fe91f0 <col:21, col:29> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fe91b8 <col:21, col:25> '<dependent type>' lvalue
          (DeclRefExpr 0x9fe919c <col:21> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x9fe8ef0 '__y' 'const vector<_Tp, _Alloc> &'))))))

;
    template <typename _Tp, typename _Alloc> inline bool operator!=(const vector<_Tp, _Alloc> &__x, const vector<_Tp, _Alloc> &__y) (CompoundStmt 0x9fe97c8 </usr/include/c++/4.6/bits/stl_vector.h:1298:5, col:29>
  (ReturnStmt 0x9fe97b8 <col:7, col:26>
    (UnaryOperator 0x9fe97a0 <col:14, col:26> '<dependent type>' prefix '!'
      (ParenExpr 0x9fe9788 <col:15, col:26> '<dependent type>'
        (CXXOperatorCallExpr 0x9fe9760 <col:16, col:23> '<dependent type>'
          (UnresolvedLookupExpr 0x9fe9700 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fe87e0 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30 0x9d5e270 0x9d5ece0 0x9d5f520 0x9d5fa90 0x9e73300)
          (DeclRefExpr 0x9fe96d0 <col:16> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x9fe9450 '__x' 'const vector<_Tp, _Alloc> &')
          (DeclRefExpr 0x9fe96e8 <col:23> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x9fe95c0 '__y' 'const vector<_Tp, _Alloc> &'))))))

;
    template <typename _Tp, typename _Alloc> inline bool operator>(const vector<_Tp, _Alloc> &__x, const vector<_Tp, _Alloc> &__y) (CompoundStmt 0x9fe9cf8 </usr/include/c++/4.6/bits/stl_vector.h:1304:5, col:25>
  (ReturnStmt 0x9fe9ce8 <col:7, col:20>
    (CXXOperatorCallExpr 0x9fe9cc0 <col:14, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0x9fe9c70 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fe8fd0 0x9bac3c0 0x9bc2c90 0x9bc5590 0x9d61190 0x9d616c0 0x9d61bf0)
      (DeclRefExpr 0x9fe9c40 <col:14> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x9fe9b30 '__y' 'const vector<_Tp, _Alloc> &')
      (DeclRefExpr 0x9fe9c58 <col:20> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x9fe99c0 '__x' 'const vector<_Tp, _Alloc> &'))))

;
    template <typename _Tp, typename _Alloc> inline bool operator<=(const vector<_Tp, _Alloc> &__x, const vector<_Tp, _Alloc> &__y) (CompoundStmt 0x9fea258 </usr/include/c++/4.6/bits/stl_vector.h:1310:5, col:28>
  (ReturnStmt 0x9fea248 <col:7, col:25>
    (UnaryOperator 0x9fea230 <col:14, col:25> '<dependent type>' prefix '!'
      (ParenExpr 0x9fea218 <col:15, col:25> '<dependent type>'
        (CXXOperatorCallExpr 0x9fea1f0 <col:16, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0x9fea1a0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fe8fd0 0x9bac3c0 0x9bc2c90 0x9bc5590 0x9d61190 0x9d616c0 0x9d61bf0)
          (DeclRefExpr 0x9fea170 <col:16> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x9fea060 '__y' 'const vector<_Tp, _Alloc> &')
          (DeclRefExpr 0x9fea188 <col:22> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x9fe9ef0 '__x' 'const vector<_Tp, _Alloc> &'))))))

;
    template <typename _Tp, typename _Alloc> inline bool operator>=(const vector<_Tp, _Alloc> &__x, const vector<_Tp, _Alloc> &__y) (CompoundStmt 0x9fea7b8 </usr/include/c++/4.6/bits/stl_vector.h:1316:5, col:28>
  (ReturnStmt 0x9fea7a8 <col:7, col:25>
    (UnaryOperator 0x9fea790 <col:14, col:25> '<dependent type>' prefix '!'
      (ParenExpr 0x9fea778 <col:15, col:25> '<dependent type>'
        (CXXOperatorCallExpr 0x9fea750 <col:16, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0x9fea700 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fe8fd0 0x9bac3c0 0x9bc2c90 0x9bc5590 0x9d61190 0x9d616c0 0x9d61bf0)
          (DeclRefExpr 0x9fea6d0 <col:16> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x9fea450 '__x' 'const vector<_Tp, _Alloc> &')
          (DeclRefExpr 0x9fea6e8 <col:22> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x9fea5c0 '__y' 'const vector<_Tp, _Alloc> &'))))))

;
    template <typename _Tp, typename _Alloc> inline void swap(vector<_Tp, _Alloc> &__x, vector<_Tp, _Alloc> &__y) (CompoundStmt 0x9feacf8 </usr/include/c++/4.6/bits/stl_vector.h:1322:5, col:22>
  (CallExpr 0x9feacd8 <col:7, col:19> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9feac88 <col:7, col:11> '<dependent type>' lvalue
      (DeclRefExpr 0x9feac70 <col:7> 'vector<_Tp, _Alloc>' lvalue ParmVar 0x9fea9d0 '__x' 'vector<_Tp, _Alloc> &'))
    (DeclRefExpr 0x9feacbc <col:16> 'vector<_Tp, _Alloc>' lvalue ParmVar 0x9feab40 '__y' 'vector<_Tp, _Alloc> &')))

;
}
namespace std {
    typedef unsigned long _Bit_type;
    enum  {
        _S_word_bit = (ImplicitCastExpr 0x9feaf48 </usr/include/c++/4.6/bits/stl_bvector.h:67:24, col:60> 'unsigned int' <IntegralCast>
  (CXXFunctionalCastExpr 0x9feaef8 <col:24, col:60> 'int' functional cast to int <NoOp>
    (ImplicitCastExpr 0x9feaee8 <<built-in>:17:22, /usr/include/c++/4.6/bits/stl_bvector.h:67:59> 'int' <IntegralCast>
      (BinaryOperator 0x9feaed0 <<built-in>:17:22, /usr/include/c++/4.6/bits/stl_bvector.h:67:59> 'unsigned int' '*'
        (ImplicitCastExpr 0x9feaec0 <<built-in>:17:22> 'unsigned int' <IntegralCast>
          (IntegerLiteral 0x9feae70 <col:22> 'int' 8))
        (UnaryExprOrTypeTraitExpr 0x9feaea8 </usr/include/c++/4.6/bits/stl_bvector.h:67:43, col:59> 'unsigned int' sizeof '_Bit_type':'unsigned long')))))

    };
    struct _Bit_reference {
        struct _Bit_reference;
        _Bit_type *_M_p;
        _Bit_type _M_mask;
        _Bit_reference(_Bit_type *__x, _Bit_type __y) : _M_p((ImplicitCastExpr 0x9feb838 </usr/include/c++/4.6/bits/stl_bvector.h:75:12> '_Bit_type *' <LValueToRValue>
  (DeclRefExpr 0x9feb81c <col:12> '_Bit_type *' lvalue ParmVar 0x9feb130 '__x' '_Bit_type *'))
), _M_mask((ImplicitCastExpr 0x9feb880 </usr/include/c++/4.6/bits/stl_bvector.h:75:26> '_Bit_type':'unsigned long' <LValueToRValue>
  (DeclRefExpr 0x9feb868 <col:26> '_Bit_type':'unsigned long' lvalue ParmVar 0x9feb170 '__y' '_Bit_type':'unsigned long'))
) (CompoundStmt 0x9feb8b0 </usr/include/c++/4.6/bits/stl_bvector.h:75:31, col:33>)


        _Bit_reference() : _M_p((ImplicitCastExpr 0x9feb8d8 </usr/include/c++/4.6/bits/stl_bvector.h:77:29> '_Bit_type *' <NullToPointer>
  (IntegerLiteral 0x9feb8c0 <col:29> 'int' 0))
), _M_mask((ImplicitCastExpr 0x9feb920 </usr/include/c++/4.6/bits/stl_bvector.h:77:41> '_Bit_type':'unsigned long' <IntegralCast>
  (IntegerLiteral 0x9feb908 <col:41> 'int' 0))
) (CompoundStmt 0x9feb950 </usr/include/c++/4.6/bits/stl_bvector.h:77:44, col:46>)


        bool operator _Bool() const (CompoundStmt 0x9febac0 </usr/include/c++/4.6/bits/stl_bvector.h:80:5, col:35>
  (ReturnStmt 0x9febab0 <col:7, col:32>
    (UnaryOperator 0x9feba98 <col:14, col:32> '_Bool' prefix '!'
      (UnaryOperator 0x9feba80 <col:15, col:32> '_Bool' prefix '!'
        (ImplicitCastExpr 0x9feba70 <col:16, col:32> '_Bool' <IntegralToBoolean>
          (ParenExpr 0x9feba58 <col:16, col:32> 'unsigned long'
            (BinaryOperator 0x9feba40 <col:17, col:25> 'unsigned long' '&'
              (ImplicitCastExpr 0x9feba20 <col:17, col:18> '_Bit_type':'unsigned long' <LValueToRValue>
                (UnaryOperator 0x9feb9d8 <col:17, col:18> '_Bit_type':'unsigned long' lvalue prefix '*'
                  (ImplicitCastExpr 0x9feb9c8 <col:18> '_Bit_type *' <LValueToRValue>
                    (MemberExpr 0x9feb9a4 <col:18> '_Bit_type *const' lvalue ->_M_p 0x9feb0b0
                      (CXXThisExpr 0x9feb978 <col:18> 'const struct std::_Bit_reference *' this)))))
              (ImplicitCastExpr 0x9feba30 <col:25> '_Bit_type':'unsigned long' <LValueToRValue>
                (MemberExpr 0x9feba00 <col:25> 'const _Bit_type':'const unsigned long' lvalue ->_M_mask 0x9feb0f0
                  (CXXThisExpr 0x9feb9f0 <col:25> 'const struct std::_Bit_reference *' this))))))))))


        std::_Bit_reference &operator=(bool __x) (CompoundStmt 0x9febce0 </usr/include/c++/4.6/bits/stl_bvector.h:84:5, line:90:5>
  (IfStmt 0x9febc88 <line:85:7, line:88:12>
    <<<NULL>>>
    (ImplicitCastExpr 0x9febaf0 <line:85:11> '_Bool' <LValueToRValue>
      (DeclRefExpr 0x9febad4 <col:11> '_Bool' lvalue ParmVar 0x9feb3b0 '__x' '_Bool'))
    (CompoundAssignOperator 0x9febb98 <line:86:2, col:11> '_Bit_type':'unsigned long' lvalue '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
      (UnaryOperator 0x9febb40 <col:2, col:3> '_Bit_type':'unsigned long' lvalue prefix '*'
        (ImplicitCastExpr 0x9febb30 <col:3> '_Bit_type *' <LValueToRValue>
          (MemberExpr 0x9febb10 <col:3> '_Bit_type *' lvalue ->_M_p 0x9feb0b0
            (CXXThisExpr 0x9febb00 <col:3> 'struct std::_Bit_reference *' this))))
      (ImplicitCastExpr 0x9febb88 <col:11> '_Bit_type':'unsigned long' <LValueToRValue>
        (MemberExpr 0x9febb68 <col:11> '_Bit_type':'unsigned long' lvalue ->_M_mask 0x9feb0f0
          (CXXThisExpr 0x9febb58 <col:11> 'struct std::_Bit_reference *' this))))
    (CompoundAssignOperator 0x9febc68 <line:88:2, col:12> '_Bit_type':'unsigned long' lvalue '&=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
      (UnaryOperator 0x9febbf8 <col:2, col:3> '_Bit_type':'unsigned long' lvalue prefix '*'
        (ImplicitCastExpr 0x9febbe8 <col:3> '_Bit_type *' <LValueToRValue>
          (MemberExpr 0x9febbc8 <col:3> '_Bit_type *' lvalue ->_M_p 0x9feb0b0
            (CXXThisExpr 0x9febbb8 <col:3> 'struct std::_Bit_reference *' this))))
      (UnaryOperator 0x9febc50 <col:11, col:12> '_Bit_type':'unsigned long' prefix '~'
        (ImplicitCastExpr 0x9febc40 <col:12> '_Bit_type':'unsigned long' <LValueToRValue>
          (MemberExpr 0x9febc20 <col:12> '_Bit_type':'unsigned long' lvalue ->_M_mask 0x9feb0f0
            (CXXThisExpr 0x9febc10 <col:12> 'struct std::_Bit_reference *' this))))))
  (ReturnStmt 0x9febcd0 <line:89:7, col:15>
    (UnaryOperator 0x9febcb8 <col:14, col:15> 'struct std::_Bit_reference' lvalue prefix '*'
      (CXXThisExpr 0x9febca8 <col:15> 'struct std::_Bit_reference *' this))))


        std::_Bit_reference &operator=(const std::_Bit_reference &__x) (CompoundStmt 0x9febf40 </usr/include/c++/4.6/bits/stl_bvector.h:94:5, col:33>
  (ReturnStmt 0x9febf30 <col:7, col:30>
    (CXXOperatorCallExpr 0x9febf08 <col:14, col:30> 'struct std::_Bit_reference' lvalue
      (ImplicitCastExpr 0x9febef8 <col:20, <invalid sloc>> 'struct std::_Bit_reference &(*)(_Bool)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9febec0 <col:20, <invalid sloc>> 'struct std::_Bit_reference &(_Bool)' lvalue CXXMethod 0x9feb450 'operator=' 'struct std::_Bit_reference &(_Bool)'))
      (UnaryOperator 0x9febd08 <col:14, col:15> 'struct std::_Bit_reference' lvalue prefix '*'
        (CXXThisExpr 0x9febcf8 <col:15> 'struct std::_Bit_reference *' this))
      (CXXFunctionalCastExpr 0x9febdb0 <col:22, col:30> '_Bool' functional cast to _Bool <NoOp>
        (ImplicitCastExpr 0x9febda0 <col:27> '_Bool' <UserDefinedConversion>
          (CXXMemberCallExpr 0x9febd80 <col:27> '_Bool'
            (MemberExpr 0x9febd60 <col:27, <invalid sloc>> '_Bool (void) const' .operator _Bool 0x9feb340
              (DeclRefExpr 0x9febd28 <col:27> 'const struct std::_Bit_reference' lvalue ParmVar 0x9feb4f0 '__x' 'const struct std::_Bit_reference &'))))))))


        bool operator==(const std::_Bit_reference &__x) const (CompoundStmt 0x9fec0d0 </usr/include/c++/4.6/bits/stl_bvector.h:98:5, col:40>
  (ReturnStmt 0x9fec0c0 <col:7, col:37>
    (BinaryOperator 0x9fec0a8 <col:14, col:37> '_Bool' '=='
      (ImplicitCastExpr 0x9fec088 <col:14, col:24> 'int' <IntegralCast>
        (CXXFunctionalCastExpr 0x9febfe0 <col:14, col:24> '_Bool' functional cast to _Bool <NoOp>
          (ImplicitCastExpr 0x9febfd0 <col:19, col:20> '_Bool' <UserDefinedConversion>
            (CXXMemberCallExpr 0x9febfb0 <col:19, col:20> '_Bool'
              (MemberExpr 0x9febf90 <col:19, <invalid sloc>> '_Bool (void) const' .operator _Bool 0x9feb340
                (UnaryOperator 0x9febf70 <col:19, col:20> 'const struct std::_Bit_reference' lvalue prefix '*'
                  (CXXThisExpr 0x9febf60 <col:20> 'const struct std::_Bit_reference *' this)))))))
      (ImplicitCastExpr 0x9fec098 <col:29, col:37> 'int' <IntegralCast>
        (CXXFunctionalCastExpr 0x9fec070 <col:29, col:37> '_Bool' functional cast to _Bool <NoOp>
          (ImplicitCastExpr 0x9fec060 <col:34> '_Bool' <UserDefinedConversion>
            (CXXMemberCallExpr 0x9fec040 <col:34> '_Bool'
              (MemberExpr 0x9fec020 <col:34, <invalid sloc>> '_Bool (void) const' .operator _Bool 0x9feb340
                (DeclRefExpr 0x9fec000 <col:34> 'const struct std::_Bit_reference' lvalue ParmVar 0x9feb5f0 '__x' 'const struct std::_Bit_reference &')))))))))


        bool operator<(const std::_Bit_reference &__x) const (CompoundStmt 0x9fec258 </usr/include/c++/4.6/bits/stl_bvector.h:102:5, col:41>
  (ReturnStmt 0x9fec248 <col:7, col:38>
    (BinaryOperator 0x9fec230 <col:14, col:38> '_Bool' '&&'
      (UnaryOperator 0x9fec188 <col:14, col:25> '_Bool' prefix '!'
        (CXXFunctionalCastExpr 0x9fec170 <col:15, col:25> '_Bool' functional cast to _Bool <NoOp>
          (ImplicitCastExpr 0x9fec160 <col:20, col:21> '_Bool' <UserDefinedConversion>
            (CXXMemberCallExpr 0x9fec140 <col:20, col:21> '_Bool'
              (MemberExpr 0x9fec120 <col:20, <invalid sloc>> '_Bool (void) const' .operator _Bool 0x9feb340
                (UnaryOperator 0x9fec100 <col:20, col:21> 'const struct std::_Bit_reference' lvalue prefix '*'
                  (CXXThisExpr 0x9fec0f0 <col:21> 'const struct std::_Bit_reference *' this)))))))
      (CXXFunctionalCastExpr 0x9fec218 <col:30, col:38> '_Bool' functional cast to _Bool <NoOp>
        (ImplicitCastExpr 0x9fec208 <col:35> '_Bool' <UserDefinedConversion>
          (CXXMemberCallExpr 0x9fec1e8 <col:35> '_Bool'
            (MemberExpr 0x9fec1c8 <col:35, <invalid sloc>> '_Bool (void) const' .operator _Bool 0x9feb340
              (DeclRefExpr 0x9fec1a8 <col:35> 'const struct std::_Bit_reference' lvalue ParmVar 0x9feb6f0 '__x' 'const struct std::_Bit_reference &'))))))))


        void flip() (CompoundStmt 0x9fec328 </usr/include/c++/4.6/bits/stl_bvector.h:106:5, col:25>
  (CompoundAssignOperator 0x9fec308 <col:7, col:16> '_Bit_type':'unsigned long' lvalue '^=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
    (UnaryOperator 0x9fec2b0 <col:7, col:8> '_Bit_type':'unsigned long' lvalue prefix '*'
      (ImplicitCastExpr 0x9fec2a0 <col:8> '_Bit_type *' <LValueToRValue>
        (MemberExpr 0x9fec280 <col:8> '_Bit_type *' lvalue ->_M_p 0x9feb0b0
          (CXXThisExpr 0x9fec270 <col:8> 'struct std::_Bit_reference *' this))))
    (ImplicitCastExpr 0x9fec2f8 <col:16> '_Bit_type':'unsigned long' <LValueToRValue>
      (MemberExpr 0x9fec2d8 <col:16> '_Bit_type':'unsigned long' lvalue ->_M_mask 0x9feb0f0
        (CXXThisExpr 0x9fec2c8 <col:16> 'struct std::_Bit_reference *' this)))))


        inline _Bit_reference(const std::_Bit_reference &) throw() : _M_p((ImplicitCastExpr 0x9ff1dc0 </usr/include/c++/4.6/bits/stl_bvector.h:69:10> '_Bit_type *' <LValueToRValue>
  (MemberExpr 0x9ff1d9c <col:10> '_Bit_type *const' lvalue ._M_p 0x9feb0b0
    (DeclRefExpr 0x9ff1d84 <col:10> 'const struct std::_Bit_reference' lvalue ParmVar 0x9febe80 '' 'const struct std::_Bit_reference &')))
), _M_mask((ImplicitCastExpr 0x9ff1e20 </usr/include/c++/4.6/bits/stl_bvector.h:69:10> '_Bit_type':'unsigned long' <LValueToRValue>
  (MemberExpr 0x9ff1dfc <col:10> 'const _Bit_type':'const unsigned long' lvalue ._M_mask 0x9feb0f0
    (DeclRefExpr 0x9ff1de4 <col:10> 'const struct std::_Bit_reference' lvalue ParmVar 0x9febe80 '' 'const struct std::_Bit_reference &')))
) (CompoundStmt 0x9ff1e50 </usr/include/c++/4.6/bits/stl_bvector.h:69:10>)


    };
    struct _Bit_iterator_base : public std::iterator<std::random_access_iterator_tag, bool> {
        struct _Bit_iterator_base;
        _Bit_type *_M_p;
        unsigned int _M_offset;
        _Bit_iterator_base(_Bit_type *__x, unsigned int __y) : std::iterator<std::random_access_iterator_tag, bool>(), _M_p((ImplicitCastExpr 0x9fef620 </usr/include/c++/4.6/bits/stl_bvector.h:116:12> '_Bit_type *' <LValueToRValue>
  (DeclRefExpr 0x9fef604 <col:12> '_Bit_type *' lvalue ParmVar 0x9feca30 '__x' '_Bit_type *'))
), _M_offset((ImplicitCastExpr 0x9fef660 </usr/include/c++/4.6/bits/stl_bvector.h:116:28> 'unsigned int' <LValueToRValue>
  (DeclRefExpr 0x9fef648 <col:28> 'unsigned int' lvalue ParmVar 0x9feedc0 '__y' 'unsigned int'))
) (CompoundStmt 0x9fef8d8 </usr/include/c++/4.6/bits/stl_bvector.h:116:33, col:35>)


        void _M_bump_up() (CompoundStmt 0x9fefae8 </usr/include/c++/4.6/bits/stl_bvector.h:120:5, line:126:5>
  (IfStmt 0x9fefac8 <line:121:7, line:125:2>
    <<<NULL>>>
    (BinaryOperator 0x9fef9e0 <line:121:11, col:45> '_Bool' '=='
      (UnaryOperator 0x9fef938 <col:11, col:20> 'unsigned int' postfix '++'
        (MemberExpr 0x9fef918 <col:11> 'unsigned int' lvalue ->_M_offset 0x9fec9f0
          (CXXThisExpr 0x9fef908 <col:11> 'struct std::_Bit_iterator_base *' this)))
      (ImplicitCastExpr 0x9fef9d0 <col:26, col:45> 'unsigned int' <IntegralCast>
        (BinaryOperator 0x9fef9b8 <col:26, col:45> 'int' '-'
          (CXXFunctionalCastExpr 0x9fef988 <col:26, col:41> 'int' functional cast to int <NoOp>
            (ImplicitCastExpr 0x9fef978 <col:30> 'int' <IntegralCast>
              (DeclRefExpr 0x9fef95c <col:30> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x9feaf10 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))
          (IntegerLiteral 0x9fef9a0 <col:45> 'int' 1))))
    (CompoundStmt 0x9fefab0 <line:122:2, line:125:2>
      (BinaryOperator 0x9fefa50 <line:123:4, col:16> 'unsigned int' lvalue '='
        (MemberExpr 0x9fefa08 <col:4> 'unsigned int' lvalue ->_M_offset 0x9fec9f0
          (CXXThisExpr 0x9fef9f8 <col:4> 'struct std::_Bit_iterator_base *' this))
        (ImplicitCastExpr 0x9fefa40 <col:16> 'unsigned int' <IntegralCast>
          (IntegerLiteral 0x9fefa28 <col:16> 'int' 0)))
      (UnaryOperator 0x9fefa98 <line:124:4, col:6> '_Bit_type *' lvalue prefix '++'
        (MemberExpr 0x9fefa78 <col:6> '_Bit_type *' lvalue ->_M_p 0x9fec9b0
          (CXXThisExpr 0x9fefa68 <col:6> 'struct std::_Bit_iterator_base *' this))))
    <<<NULL>>>))


        void _M_bump_down() (CompoundStmt 0x9fefce0 </usr/include/c++/4.6/bits/stl_bvector.h:130:5, line:136:5>
  (IfStmt 0x9fefcc0 <line:131:7, line:135:2>
    <<<NULL>>>
    (BinaryOperator 0x9fefb70 <line:131:11, col:26> '_Bool' '=='
      (UnaryOperator 0x9fefb30 <col:11, col:20> 'unsigned int' postfix '--'
        (MemberExpr 0x9fefb10 <col:11> 'unsigned int' lvalue ->_M_offset 0x9fec9f0
          (CXXThisExpr 0x9fefb00 <col:11> 'struct std::_Bit_iterator_base *' this)))
      (ImplicitCastExpr 0x9fefb60 <col:26> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0x9fefb48 <col:26> 'int' 0)))
    (CompoundStmt 0x9fefca8 <line:132:2, line:135:2>
      (BinaryOperator 0x9fefc48 <line:133:4, col:35> 'unsigned int' lvalue '='
        (MemberExpr 0x9fefb98 <col:4> 'unsigned int' lvalue ->_M_offset 0x9fec9f0
          (CXXThisExpr 0x9fefb88 <col:4> 'struct std::_Bit_iterator_base *' this))
        (ImplicitCastExpr 0x9fefc38 <col:16, col:35> 'unsigned int' <IntegralCast>
          (BinaryOperator 0x9fefc20 <col:16, col:35> 'int' '-'
            (CXXFunctionalCastExpr 0x9fefbf0 <col:16, col:31> 'int' functional cast to int <NoOp>
              (ImplicitCastExpr 0x9fefbe0 <col:20> 'int' <IntegralCast>
                (DeclRefExpr 0x9fefbc4 <col:20> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x9feaf10 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))
            (IntegerLiteral 0x9fefc08 <col:35> 'int' 1))))
      (UnaryOperator 0x9fefc90 <line:134:4, col:6> '_Bit_type *' lvalue prefix '--'
        (MemberExpr 0x9fefc70 <col:6> '_Bit_type *' lvalue ->_M_p 0x9fec9b0
          (CXXThisExpr 0x9fefc60 <col:6> 'struct std::_Bit_iterator_base *' this))))
    <<<NULL>>>))


        void _M_incr(ptrdiff_t __i) (CompoundStmt 0x9ff01b0 </usr/include/c++/4.6/bits/stl_bvector.h:140:5, line:150:5>
  (DeclStmt 0x9fefdf8 <line:141:7, col:44>
    0x9fefd20 "difference_type __n =
      (ImplicitCastExpr 0x9fefde8 <col:29, col:35> 'difference_type':'int' <IntegralCast>
        (BinaryOperator 0x9fefdd0 <col:29, col:35> 'unsigned int' '+'
          (ImplicitCastExpr 0x9fefdc0 <col:29> 'unsigned int' <IntegralCast>
            (ImplicitCastExpr 0x9fefda0 <col:29> 'ptrdiff_t':'int' <LValueToRValue>
              (DeclRefExpr 0x9fefd54 <col:29> 'ptrdiff_t':'int' lvalue ParmVar 0x9feeff0 '__i' 'ptrdiff_t':'int')))
          (ImplicitCastExpr 0x9fefdb0 <col:35> 'unsigned int' <LValueToRValue>
            (MemberExpr 0x9fefd80 <col:35> 'unsigned int' lvalue ->_M_offset 0x9fec9f0
              (CXXThisExpr 0x9fefd70 <col:35> 'struct std::_Bit_iterator_base *' this)))))")
  (CompoundAssignOperator 0x9fefec8 <line:142:7, col:36> '_Bit_type *' lvalue '+=' ComputeLHSTy='_Bit_type *' ComputeResultTy='_Bit_type *'
    (MemberExpr 0x9fefe18 <col:7> '_Bit_type *' lvalue ->_M_p 0x9fec9b0
      (CXXThisExpr 0x9fefe08 <col:7> 'struct std::_Bit_iterator_base *' this))
    (BinaryOperator 0x9fefeb0 <col:15, col:36> 'int' '/'
      (ImplicitCastExpr 0x9fefea0 <col:15> 'difference_type':'int' <LValueToRValue>
        (DeclRefExpr 0x9fefe38 <col:15> 'difference_type':'int' lvalue Var 0x9fefd20 '__n' 'difference_type':'int'))
      (CXXFunctionalCastExpr 0x9fefe88 <col:21, col:36> 'int' functional cast to int <NoOp>
        (ImplicitCastExpr 0x9fefe78 <col:25> 'int' <IntegralCast>
          (DeclRefExpr 0x9fefe5c <col:25> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x9feaf10 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))
  (BinaryOperator 0x9feff90 <line:143:7, col:34> 'difference_type':'int' lvalue '='
    (DeclRefExpr 0x9fefee8 <col:7> 'difference_type':'int' lvalue Var 0x9fefd20 '__n' 'difference_type':'int')
    (BinaryOperator 0x9feff78 <col:13, col:34> 'int' '%'
      (ImplicitCastExpr 0x9feff68 <col:13> 'difference_type':'int' <LValueToRValue>
        (DeclRefExpr 0x9feff00 <col:13> 'difference_type':'int' lvalue Var 0x9fefd20 '__n' 'difference_type':'int'))
      (CXXFunctionalCastExpr 0x9feff50 <col:19, col:34> 'int' functional cast to int <NoOp>
        (ImplicitCastExpr 0x9feff40 <col:23> 'int' <IntegralCast>
          (DeclRefExpr 0x9feff24 <col:23> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x9feaf10 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))
  (IfStmt 0x9ff00e8 <line:144:7, line:148:2>
    <<<NULL>>>
    (BinaryOperator 0x9feffe8 <line:144:11, col:17> '_Bool' '<'
      (ImplicitCastExpr 0x9feffd8 <col:11> 'difference_type':'int' <LValueToRValue>
        (DeclRefExpr 0x9feffa8 <col:11> 'difference_type':'int' lvalue Var 0x9fefd20 '__n' 'difference_type':'int'))
      (IntegerLiteral 0x9feffc0 <col:17> 'int' 0))
    (CompoundStmt 0x9ff00d0 <line:145:2, line:148:2>
      (CompoundAssignOperator 0x9ff0068 <line:146:4, col:26> 'difference_type':'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
        (DeclRefExpr 0x9ff0000 <col:4> 'difference_type':'int' lvalue Var 0x9fefd20 '__n' 'difference_type':'int')
        (CXXFunctionalCastExpr 0x9ff0050 <col:11, col:26> 'int' functional cast to int <NoOp>
          (ImplicitCastExpr 0x9ff0040 <col:15> 'int' <IntegralCast>
            (DeclRefExpr 0x9ff0024 <col:15> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x9feaf10 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>'))))
      (UnaryOperator 0x9ff00b8 <line:147:4, col:6> '_Bit_type *' lvalue prefix '--'
        (MemberExpr 0x9ff0098 <col:6> '_Bit_type *' lvalue ->_M_p 0x9fec9b0
          (CXXThisExpr 0x9ff0088 <col:6> 'struct std::_Bit_iterator_base *' this))))
    <<<NULL>>>)
  (BinaryOperator 0x9ff0198 <line:149:7, col:48> 'unsigned int' lvalue '='
    (MemberExpr 0x9ff0118 <col:7> 'unsigned int' lvalue ->_M_offset 0x9fec9f0
      (CXXThisExpr 0x9ff0108 <col:7> 'struct std::_Bit_iterator_base *' this))
    (CXXStaticCastExpr 0x9ff0180 <col:19, col:48> 'unsigned int' static_cast<unsigned int> <NoOp>
      (ImplicitCastExpr 0x9ff0170 <col:45> 'unsigned int' <IntegralCast>
        (ImplicitCastExpr 0x9ff0160 <col:45> 'difference_type':'int' <LValueToRValue>
          (DeclRefExpr 0x9ff0138 <col:45> 'difference_type':'int' lvalue Var 0x9fefd20 '__n' 'difference_type':'int'))))))


        bool operator==(const std::_Bit_iterator_base &__i) const (CompoundStmt 0x9ff0360 </usr/include/c++/4.6/bits/stl_bvector.h:154:5, col:62>
  (ReturnStmt 0x9ff0350 <col:7, col:51>
    (BinaryOperator 0x9ff0338 <col:14, col:51> '_Bool' '&&'
      (BinaryOperator 0x9ff0280 <col:14, col:26> '_Bool' '=='
        (ImplicitCastExpr 0x9ff0260 <col:14> '_Bit_type *' <LValueToRValue>
          (MemberExpr 0x9ff0208 <col:14> '_Bit_type *const' lvalue ->_M_p 0x9fec9b0
            (CXXThisExpr 0x9ff01f8 <col:14> 'const struct std::_Bit_iterator_base *' this)))
        (ImplicitCastExpr 0x9ff0270 <col:22, col:26> '_Bit_type *' <LValueToRValue>
          (MemberExpr 0x9ff0240 <col:22, col:26> '_Bit_type *const' lvalue ._M_p 0x9fec9b0
            (DeclRefExpr 0x9ff0228 <col:22> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0x9fef110 '__i' 'const struct std::_Bit_iterator_base &'))))
      (BinaryOperator 0x9ff0320 <col:34, col:51> '_Bool' '=='
        (ImplicitCastExpr 0x9ff0300 <col:34> 'unsigned int' <LValueToRValue>
          (MemberExpr 0x9ff02a8 <col:34> 'const unsigned int' lvalue ->_M_offset 0x9fec9f0
            (CXXThisExpr 0x9ff0298 <col:34> 'const struct std::_Bit_iterator_base *' this)))
        (ImplicitCastExpr 0x9ff0310 <col:47, col:51> 'unsigned int' <LValueToRValue>
          (MemberExpr 0x9ff02e0 <col:47, col:51> 'const unsigned int' lvalue ._M_offset 0x9fec9f0
            (DeclRefExpr 0x9ff02c8 <col:47> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0x9fef110 '__i' 'const struct std::_Bit_iterator_base &')))))))


        bool operator<(const std::_Bit_iterator_base &__i) const (CompoundStmt 0x9ff05b0 </usr/include/c++/4.6/bits/stl_bvector.h:158:5, line:161:5>
  (ReturnStmt 0x9ff05a0 <line:159:7, line:160:56>
    (BinaryOperator 0x9ff0588 <line:159:14, line:160:56> '_Bool' '||'
      (BinaryOperator 0x9ff0400 <line:159:14, col:25> '_Bool' '<'
        (ImplicitCastExpr 0x9ff03e0 <col:14> '_Bit_type *' <LValueToRValue>
          (MemberExpr 0x9ff0388 <col:14> '_Bit_type *const' lvalue ->_M_p 0x9fec9b0
            (CXXThisExpr 0x9ff0378 <col:14> 'const struct std::_Bit_iterator_base *' this)))
        (ImplicitCastExpr 0x9ff03f0 <col:21, col:25> '_Bit_type *' <LValueToRValue>
          (MemberExpr 0x9ff03c0 <col:21, col:25> '_Bit_type *const' lvalue ._M_p 0x9fec9b0
            (DeclRefExpr 0x9ff03a8 <col:21> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0x9fef210 '__i' 'const struct std::_Bit_iterator_base &'))))
      (ParenExpr 0x9ff0570 <line:160:10, col:56> '_Bool'
        (BinaryOperator 0x9ff0558 <col:11, col:47> '_Bool' '&&'
          (BinaryOperator 0x9ff04a0 <col:11, col:23> '_Bool' '=='
            (ImplicitCastExpr 0x9ff0480 <col:11> '_Bit_type *' <LValueToRValue>
              (MemberExpr 0x9ff0428 <col:11> '_Bit_type *const' lvalue ->_M_p 0x9fec9b0
                (CXXThisExpr 0x9ff0418 <col:11> 'const struct std::_Bit_iterator_base *' this)))
            (ImplicitCastExpr 0x9ff0490 <col:19, col:23> '_Bit_type *' <LValueToRValue>
              (MemberExpr 0x9ff0460 <col:19, col:23> '_Bit_type *const' lvalue ._M_p 0x9fec9b0
                (DeclRefExpr 0x9ff0448 <col:19> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0x9fef210 '__i' 'const struct std::_Bit_iterator_base &'))))
          (BinaryOperator 0x9ff0540 <col:31, col:47> '_Bool' '<'
            (ImplicitCastExpr 0x9ff0520 <col:31> 'unsigned int' <LValueToRValue>
              (MemberExpr 0x9ff04c8 <col:31> 'const unsigned int' lvalue ->_M_offset 0x9fec9f0
                (CXXThisExpr 0x9ff04b8 <col:31> 'const struct std::_Bit_iterator_base *' this)))
            (ImplicitCastExpr 0x9ff0530 <col:43, col:47> 'unsigned int' <LValueToRValue>
              (MemberExpr 0x9ff0500 <col:43, col:47> 'const unsigned int' lvalue ._M_offset 0x9fec9f0
                (DeclRefExpr 0x9ff04e8 <col:43> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0x9fef210 '__i' 'const struct std::_Bit_iterator_base &')))))))))


        bool operator!=(const std::_Bit_iterator_base &__i) const (CompoundStmt 0x9ff06b0 </usr/include/c++/4.6/bits/stl_bvector.h:165:5, col:31>
  (ReturnStmt 0x9ff06a0 <col:7, col:28>
    (UnaryOperator 0x9ff0688 <col:14, col:28> '_Bool' prefix '!'
      (ParenExpr 0x9ff0670 <col:15, col:28> '_Bool'
        (CXXOperatorCallExpr 0x9ff0648 <col:16, col:25> '_Bool'
          (ImplicitCastExpr 0x9ff0638 <col:22, <invalid sloc>> '_Bool (*)(const struct std::_Bit_iterator_base &) const' <FunctionToPointerDecay>
            (DeclRefExpr 0x9ff0608 <col:22, <invalid sloc>> '_Bool (const struct std::_Bit_iterator_base &) const' lvalue CXXMethod 0x9fef190 'operator==' '_Bool (const struct std::_Bit_iterator_base &) const'))
          (UnaryOperator 0x9ff05d8 <col:16, col:17> 'const struct std::_Bit_iterator_base' lvalue prefix '*'
            (CXXThisExpr 0x9ff05c8 <col:17> 'const struct std::_Bit_iterator_base *' this))
          (DeclRefExpr 0x9ff05ec <col:25> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0x9fef2e0 '__i' 'const struct std::_Bit_iterator_base &'))))))


        bool operator>(const std::_Bit_iterator_base &__i) const (CompoundStmt 0x9ff0768 </usr/include/c++/4.6/bits/stl_bvector.h:169:5, col:27>
  (ReturnStmt 0x9ff0758 <col:7, col:21>
    (CXXOperatorCallExpr 0x9ff0730 <col:14, col:21> '_Bool'
      (ImplicitCastExpr 0x9ff0720 <col:18, <invalid sloc>> '_Bool (*)(const struct std::_Bit_iterator_base &) const' <FunctionToPointerDecay>
        (DeclRefExpr 0x9ff0708 <col:18, <invalid sloc>> '_Bool (const struct std::_Bit_iterator_base &) const' lvalue CXXMethod 0x9fef260 'operator<' '_Bool (const struct std::_Bit_iterator_base &) const'))
      (DeclRefExpr 0x9ff06c4 <col:14> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0x9fef3b0 '__i' 'const struct std::_Bit_iterator_base &')
      (UnaryOperator 0x9ff06f0 <col:20, col:21> 'const struct std::_Bit_iterator_base' lvalue prefix '*'
        (CXXThisExpr 0x9ff06e0 <col:21> 'const struct std::_Bit_iterator_base *' this)))))


        bool operator<=(const std::_Bit_iterator_base &__i) const (CompoundStmt 0x9ff0850 </usr/include/c++/4.6/bits/stl_bvector.h:173:5, col:30>
  (ReturnStmt 0x9ff0840 <col:7, col:27>
    (UnaryOperator 0x9ff0828 <col:14, col:27> '_Bool' prefix '!'
      (ParenExpr 0x9ff0810 <col:15, col:27> '_Bool'
        (CXXOperatorCallExpr 0x9ff07e8 <col:16, col:23> '_Bool'
          (ImplicitCastExpr 0x9ff07d8 <col:20, <invalid sloc>> '_Bool (*)(const struct std::_Bit_iterator_base &) const' <FunctionToPointerDecay>
            (DeclRefExpr 0x9ff07c0 <col:20, <invalid sloc>> '_Bool (const struct std::_Bit_iterator_base &) const' lvalue CXXMethod 0x9fef260 'operator<' '_Bool (const struct std::_Bit_iterator_base &) const'))
          (DeclRefExpr 0x9ff077c <col:16> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0x9fef480 '__i' 'const struct std::_Bit_iterator_base &')
          (UnaryOperator 0x9ff07a8 <col:22, col:23> 'const struct std::_Bit_iterator_base' lvalue prefix '*'
            (CXXThisExpr 0x9ff0798 <col:23> 'const struct std::_Bit_iterator_base *' this)))))))


        bool operator>=(const std::_Bit_iterator_base &__i) const (CompoundStmt 0x9ff0938 </usr/include/c++/4.6/bits/stl_bvector.h:177:5, col:30>
  (ReturnStmt 0x9ff0928 <col:7, col:27>
    (UnaryOperator 0x9ff0910 <col:14, col:27> '_Bool' prefix '!'
      (ParenExpr 0x9ff08f8 <col:15, col:27> '_Bool'
        (CXXOperatorCallExpr 0x9ff08d0 <col:16, col:24> '_Bool'
          (ImplicitCastExpr 0x9ff08c0 <col:22, <invalid sloc>> '_Bool (*)(const struct std::_Bit_iterator_base &) const' <FunctionToPointerDecay>
            (DeclRefExpr 0x9ff08a8 <col:22, <invalid sloc>> '_Bool (const struct std::_Bit_iterator_base &) const' lvalue CXXMethod 0x9fef260 'operator<' '_Bool (const struct std::_Bit_iterator_base &) const'))
          (UnaryOperator 0x9ff0878 <col:16, col:17> 'const struct std::_Bit_iterator_base' lvalue prefix '*'
            (CXXThisExpr 0x9ff0868 <col:17> 'const struct std::_Bit_iterator_base *' this))
          (DeclRefExpr 0x9ff088c <col:24> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0x9fef550 '__i' 'const struct std::_Bit_iterator_base &'))))))


        inline _Bit_iterator_base(const std::_Bit_iterator_base &) throw() : std::iterator<std::random_access_iterator_tag, bool>((ImplicitCastExpr 0x9ff2160 </usr/include/c++/4.6/bits/stl_bvector.h:109:10> 'const std::iterator<std::random_access_iterator_tag, _Bool>':'const struct std::iterator<struct std::random_access_iterator_tag, _Bool, int, _Bool *, _Bool &>' lvalue <UncheckedDerivedToBase (iterator)>
  (DeclRefExpr 0x9ff2148 <col:10> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0x9ff1ad0 '' 'const struct std::_Bit_iterator_base &'))
), _M_p((ImplicitCastExpr 0x9ff2260 </usr/include/c++/4.6/bits/stl_bvector.h:109:10> '_Bit_type *' <LValueToRValue>
  (MemberExpr 0x9ff2240 <col:10> '_Bit_type *const' lvalue ._M_p 0x9fec9b0
    (DeclRefExpr 0x9ff2228 <col:10> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0x9ff1ad0 '' 'const struct std::_Bit_iterator_base &')))
), _M_offset((ImplicitCastExpr 0x9ff22c0 </usr/include/c++/4.6/bits/stl_bvector.h:109:10> 'unsigned int' <LValueToRValue>
  (MemberExpr 0x9ff229c <col:10> 'const unsigned int' lvalue ._M_offset 0x9fec9f0
    (DeclRefExpr 0x9ff2284 <col:10> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0x9ff1ad0 '' 'const struct std::_Bit_iterator_base &')))
) (CompoundStmt 0x9ff22f8 </usr/include/c++/4.6/bits/stl_bvector.h:109:10>)


    };
    inline ptrdiff_t operator-(const std::_Bit_iterator_base &__x, const std::_Bit_iterator_base &__y) (CompoundStmt 0x9ff0ce8 </usr/include/c++/4.6/bits/stl_bvector.h:182:3, line:185:3>
  (ReturnStmt 0x9ff0cd8 <line:183:5, line:184:37>
    (ImplicitCastExpr 0x9ff0cc8 <line:183:12, line:184:37> 'ptrdiff_t':'int' <IntegralCast>
      (ParenExpr 0x9ff0cb0 <line:183:12, line:184:37> 'unsigned int'
        (BinaryOperator 0x9ff0c98 <line:183:13, line:184:28> 'unsigned int' '-'
          (BinaryOperator 0x9ff0c38 <line:183:13, line:184:12> 'unsigned int' '+'
            (ImplicitCastExpr 0x9ff0c28 <line:183:13, col:52> 'unsigned int' <IntegralCast>
              (BinaryOperator 0x9ff0bc8 <col:13, col:52> 'int' '*'
                (CXXFunctionalCastExpr 0x9ff0af0 <col:13, col:28> 'int' functional cast to int <NoOp>
                  (ImplicitCastExpr 0x9ff0ae0 <col:17> 'int' <IntegralCast>
                    (DeclRefExpr 0x9ff0ac4 <col:17> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x9feaf10 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))
                (ParenExpr 0x9ff0bb0 <col:32, col:52> 'int'
                  (BinaryOperator 0x9ff0b98 <col:33, col:48> 'int' '-'
                    (ImplicitCastExpr 0x9ff0b78 <col:33, col:37> '_Bit_type *' <LValueToRValue>
                      (MemberExpr 0x9ff0b20 <col:33, col:37> '_Bit_type *const' lvalue ._M_p 0x9fec9b0
                        (DeclRefExpr 0x9ff0b08 <col:33> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0x9ff0960 '__x' 'const struct std::_Bit_iterator_base &')))
                    (ImplicitCastExpr 0x9ff0b88 <col:44, col:48> '_Bit_type *' <LValueToRValue>
                      (MemberExpr 0x9ff0b58 <col:44, col:48> '_Bit_type *const' lvalue ._M_p 0x9fec9b0
                        (DeclRefExpr 0x9ff0b40 <col:44> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0x9ff09b0 '__y' 'const struct std::_Bit_iterator_base &')))))))
            (ImplicitCastExpr 0x9ff0c18 <line:184:8, col:12> 'unsigned int' <LValueToRValue>
              (MemberExpr 0x9ff0bf8 <col:8, col:12> 'const unsigned int' lvalue ._M_offset 0x9fec9f0
                (DeclRefExpr 0x9ff0be0 <col:8> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0x9ff0960 '__x' 'const struct std::_Bit_iterator_base &'))))
          (ImplicitCastExpr 0x9ff0c88 <col:24, col:28> 'unsigned int' <LValueToRValue>
            (MemberExpr 0x9ff0c68 <col:24, col:28> 'const unsigned int' lvalue ._M_offset 0x9fec9f0
              (DeclRefExpr 0x9ff0c50 <col:24> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0x9ff09b0 '__y' 'const struct std::_Bit_iterator_base &'))))))))


    struct _Bit_iterator : public std::_Bit_iterator_base {
        struct _Bit_iterator;
        typedef std::_Bit_reference reference;
        typedef std::_Bit_reference *pointer;
        typedef std::_Bit_iterator iterator;
        _Bit_iterator() : std::_Bit_iterator_base((ImplicitCastExpr 0x9ff1b10 </usr/include/c++/4.6/bits/stl_bvector.h:193:42> '_Bit_type *' <NullToPointer>
  (IntegerLiteral 0x9ff19c8 <col:42> 'int' 0))
, (ImplicitCastExpr 0x9ff1b20 </usr/include/c++/4.6/bits/stl_bvector.h:193:45> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9ff19e0 <col:45> 'int' 0))
) (CompoundStmt 0x9ff1b80 </usr/include/c++/4.6/bits/stl_bvector.h:193:48, col:50>)


        _Bit_iterator(_Bit_type *__x, unsigned int __y) : std::_Bit_iterator_base((ImplicitCastExpr 0x9ff1bc8 </usr/include/c++/4.6/bits/stl_bvector.h:196:26> '_Bit_type *' <LValueToRValue>
  (DeclRefExpr 0x9ff1b90 <col:26> '_Bit_type *' lvalue ParmVar 0x9ff0fd0 '__x' '_Bit_type *'))
, (ImplicitCastExpr 0x9ff1bd8 </usr/include/c++/4.6/bits/stl_bvector.h:196:31> 'unsigned int' <LValueToRValue>
  (DeclRefExpr 0x9ff1ba8 <col:31> 'unsigned int' lvalue ParmVar 0x9ff1020 '__y' 'unsigned int'))
) (CompoundStmt 0x9ff1c30 </usr/include/c++/4.6/bits/stl_bvector.h:196:36, col:38>)


        reference operator*() const (CompoundStmt 0x9ff1e98 </usr/include/c++/4.6/bits/stl_bvector.h:200:5, col:49>
  (ReturnStmt 0x9ff1e88 <col:7, col:46>
    (CXXConstructExpr 0x9ff1e60 <col:14, col:46> 'reference':'struct std::_Bit_reference''void (const struct std::_Bit_reference &) throw()' elidable
      (MaterializeTemporaryExpr 0x9ff1d78 <col:14, col:46> 'const struct std::_Bit_reference' lvalue
        (ImplicitCastExpr 0x9ff1d68 <col:14, col:46> 'const struct std::_Bit_reference' <NoOp>
          (CXXTemporaryObjectExpr 0x9ff1d38 <col:14, col:46> 'reference':'struct std::_Bit_reference''void (_Bit_type *, _Bit_type)'
            (ImplicitCastExpr 0x9ff1d28 <col:24> '_Bit_type *' <LValueToRValue>
              (MemberExpr 0x9ff1c88 <col:24> '_Bit_type *const' lvalue ->_M_p 0x9fec9b0
                (ImplicitCastExpr 0x9ff1c78 <col:24> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
                  (CXXThisExpr 0x9ff1c68 <col:24> 'const struct std::_Bit_iterator *' this))))
            (BinaryOperator 0x9ff1d10 <col:30, col:37> 'unsigned long' '<<'
              (IntegerLiteral 0x9ff1ca8 <col:30> 'unsigned long' 1)
              (ImplicitCastExpr 0x9ff1d00 <col:37> 'unsigned int' <LValueToRValue>
                (MemberExpr 0x9ff1ce0 <col:37> 'const unsigned int' lvalue ->_M_offset 0x9fec9f0
                  (ImplicitCastExpr 0x9ff1cd0 <col:37> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
                    (CXXThisExpr 0x9ff1cc0 <col:37> 'const struct std::_Bit_iterator *' this)))))))))))


        iterator &operator++() (CompoundStmt 0x9ff1f60 </usr/include/c++/4.6/bits/stl_bvector.h:204:5, line:207:5>
  (CXXMemberCallExpr 0x9ff1ef8 <line:205:7, col:18> 'void'
    (MemberExpr 0x9ff1ed8 <col:7> '<bound member function type>' ->_M_bump_up 0x9feef00
      (ImplicitCastExpr 0x9ff1f18 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
        (CXXThisExpr 0x9ff1ec8 <col:7> 'struct std::_Bit_iterator *' this))))
  (ReturnStmt 0x9ff1f50 <line:206:7, col:15>
    (UnaryOperator 0x9ff1f38 <col:14, col:15> 'struct std::_Bit_iterator' lvalue prefix '*'
      (CXXThisExpr 0x9ff1f28 <col:15> 'struct std::_Bit_iterator *' this))))


        iterator operator++(int) (CompoundStmt 0x9ff2468 </usr/include/c++/4.6/bits/stl_bvector.h:211:5, line:215:5>
  (DeclStmt 0x9ff2398 <line:212:7, col:29>
    0x9ff1f80 "iterator __tmp =
      (CXXConstructExpr 0x9ff2370 <col:24, col:25> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
        (ImplicitCastExpr 0x9ff2110 <col:24, col:25> 'const struct std::_Bit_iterator' lvalue <NoOp>
          (UnaryOperator 0x9ff1fc8 <col:24, col:25> 'struct std::_Bit_iterator' lvalue prefix '*'
            (CXXThisExpr 0x9ff1fb8 <col:25> 'struct std::_Bit_iterator *' this))))")
  (CXXMemberCallExpr 0x9ff23d8 <line:213:7, col:18> 'void'
    (MemberExpr 0x9ff23b8 <col:7> '<bound member function type>' ->_M_bump_up 0x9feef00
      (ImplicitCastExpr 0x9ff23f8 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
        (CXXThisExpr 0x9ff23a8 <col:7> 'struct std::_Bit_iterator *' this))))
  (ReturnStmt 0x9ff2458 <line:214:7, col:14>
    (CXXConstructExpr 0x9ff2430 <col:14> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()' elidable
      (ImplicitCastExpr 0x9ff2420 <col:14> 'const struct std::_Bit_iterator' lvalue <NoOp>
        (DeclRefExpr 0x9ff2408 <col:14> 'iterator':'struct std::_Bit_iterator' lvalue Var 0x9ff1f80 '__tmp' 'iterator':'struct std::_Bit_iterator')))))


        iterator &operator--() (CompoundStmt 0x9ff2520 </usr/include/c++/4.6/bits/stl_bvector.h:219:5, line:222:5>
  (CXXMemberCallExpr 0x9ff24b8 <line:220:7, col:20> 'void'
    (MemberExpr 0x9ff2498 <col:7> '<bound member function type>' ->_M_bump_down 0x9feef80
      (ImplicitCastExpr 0x9ff24d8 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
        (CXXThisExpr 0x9ff2488 <col:7> 'struct std::_Bit_iterator *' this))))
  (ReturnStmt 0x9ff2510 <line:221:7, col:15>
    (UnaryOperator 0x9ff24f8 <col:14, col:15> 'struct std::_Bit_iterator' lvalue prefix '*'
      (CXXThisExpr 0x9ff24e8 <col:15> 'struct std::_Bit_iterator *' this))))


        iterator operator--(int) (CompoundStmt 0x9ff26a8 </usr/include/c++/4.6/bits/stl_bvector.h:226:5, line:230:5>
  (DeclStmt 0x9ff25d8 <line:227:7, col:29>
    0x9ff2540 "iterator __tmp =
      (CXXConstructExpr 0x9ff25b0 <col:24, col:25> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
        (ImplicitCastExpr 0x9ff25a0 <col:24, col:25> 'const struct std::_Bit_iterator' lvalue <NoOp>
          (UnaryOperator 0x9ff2588 <col:24, col:25> 'struct std::_Bit_iterator' lvalue prefix '*'
            (CXXThisExpr 0x9ff2578 <col:25> 'struct std::_Bit_iterator *' this))))")
  (CXXMemberCallExpr 0x9ff2618 <line:228:7, col:20> 'void'
    (MemberExpr 0x9ff25f8 <col:7> '<bound member function type>' ->_M_bump_down 0x9feef80
      (ImplicitCastExpr 0x9ff2638 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
        (CXXThisExpr 0x9ff25e8 <col:7> 'struct std::_Bit_iterator *' this))))
  (ReturnStmt 0x9ff2698 <line:229:7, col:14>
    (CXXConstructExpr 0x9ff2670 <col:14> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()' elidable
      (ImplicitCastExpr 0x9ff2660 <col:14> 'const struct std::_Bit_iterator' lvalue <NoOp>
        (DeclRefExpr 0x9ff2648 <col:14> 'iterator':'struct std::_Bit_iterator' lvalue Var 0x9ff2540 '__tmp' 'iterator':'struct std::_Bit_iterator')))))


        iterator &operator+=(difference_type __i) (CompoundStmt 0x9ff2788 </usr/include/c++/4.6/bits/stl_bvector.h:234:5, line:237:5>
  (CXXMemberCallExpr 0x9ff2710 <line:235:7, col:18> 'void'
    (MemberExpr 0x9ff26d8 <col:7> '<bound member function type>' ->_M_incr 0x9fef070
      (ImplicitCastExpr 0x9ff2730 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
        (CXXThisExpr 0x9ff26c8 <col:7> 'struct std::_Bit_iterator *' this)))
    (ImplicitCastExpr 0x9ff2740 <col:15> 'difference_type':'int' <LValueToRValue>
      (DeclRefExpr 0x9ff26f8 <col:15> 'difference_type':'int' lvalue ParmVar 0x9ff1510 '__i' 'difference_type':'int')))
  (ReturnStmt 0x9ff2778 <line:236:7, col:15>
    (UnaryOperator 0x9ff2760 <col:14, col:15> 'struct std::_Bit_iterator' lvalue prefix '*'
      (CXXThisExpr 0x9ff2750 <col:15> 'struct std::_Bit_iterator *' this))))


        iterator &operator-=(difference_type __i) (CompoundStmt 0x9ff28c8 </usr/include/c++/4.6/bits/stl_bvector.h:241:5, line:244:5>
  (CXXOperatorCallExpr 0x9ff2868 <line:242:7, col:17> 'iterator':'struct std::_Bit_iterator' lvalue
    (ImplicitCastExpr 0x9ff2858 <col:13, <invalid sloc>> 'iterator &(*)(difference_type)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9ff2808 <col:13, <invalid sloc>> 'iterator &(difference_type)' lvalue CXXMethod 0x9ff15b0 'operator+=' 'iterator &(difference_type)'))
    (UnaryOperator 0x9ff27b0 <col:7, col:8> 'struct std::_Bit_iterator' lvalue prefix '*'
      (CXXThisExpr 0x9ff27a0 <col:8> 'struct std::_Bit_iterator *' this))
    (UnaryOperator 0x9ff27f0 <col:16, col:17> 'difference_type':'int' prefix '-'
      (ImplicitCastExpr 0x9ff27e0 <col:17> 'difference_type':'int' <LValueToRValue>
        (DeclRefExpr 0x9ff27c4 <col:17> 'difference_type':'int' lvalue ParmVar 0x9ff1620 '__i' 'difference_type':'int'))))
  (ReturnStmt 0x9ff28b8 <line:243:7, col:15>
    (UnaryOperator 0x9ff28a0 <col:14, col:15> 'struct std::_Bit_iterator' lvalue prefix '*'
      (CXXThisExpr 0x9ff2890 <col:15> 'struct std::_Bit_iterator *' this))))


        iterator operator+(difference_type __i) const (CompoundStmt 0x9ff2a60 </usr/include/c++/4.6/bits/stl_bvector.h:248:5, line:251:5>
  (DeclStmt 0x9ff2978 <line:249:7, col:29>
    0x9ff28f0 "iterator __tmp =
      (CXXConstructExpr 0x9ff2950 <col:24, col:25> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
        (UnaryOperator 0x9ff2938 <col:24, col:25> 'const struct std::_Bit_iterator' lvalue prefix '*'
          (CXXThisExpr 0x9ff2928 <col:25> 'const struct std::_Bit_iterator *' this)))")
  (ReturnStmt 0x9ff2a50 <line:250:7, col:23>
    (CXXConstructExpr 0x9ff2a28 <col:14, col:23> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
      (ImplicitCastExpr 0x9ff2a18 <col:14, col:23> 'const struct std::_Bit_iterator' lvalue <NoOp>
        (CXXOperatorCallExpr 0x9ff29f0 <col:14, col:23> 'iterator':'struct std::_Bit_iterator' lvalue
          (ImplicitCastExpr 0x9ff29e0 <col:20, <invalid sloc>> 'iterator &(*)(difference_type)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9ff29c8 <col:20, <invalid sloc>> 'iterator &(difference_type)' lvalue CXXMethod 0x9ff15b0 'operator+=' 'iterator &(difference_type)'))
          (DeclRefExpr 0x9ff2988 <col:14> 'iterator':'struct std::_Bit_iterator' lvalue Var 0x9ff28f0 '__tmp' 'iterator':'struct std::_Bit_iterator')
          (ImplicitCastExpr 0x9ff29b8 <col:23> 'difference_type':'int' <LValueToRValue>
            (DeclRefExpr 0x9ff29a0 <col:23> 'difference_type':'int' lvalue ParmVar 0x9ff16f0 '__i' 'difference_type':'int')))))))


        iterator operator-(difference_type __i) const (CompoundStmt 0x9ff2bf0 </usr/include/c++/4.6/bits/stl_bvector.h:255:5, line:258:5>
  (DeclStmt 0x9ff2b08 <line:256:7, col:29>
    0x9ff2a80 "iterator __tmp =
      (CXXConstructExpr 0x9ff2ae0 <col:24, col:25> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
        (UnaryOperator 0x9ff2ac8 <col:24, col:25> 'const struct std::_Bit_iterator' lvalue prefix '*'
          (CXXThisExpr 0x9ff2ab8 <col:25> 'const struct std::_Bit_iterator *' this)))")
  (ReturnStmt 0x9ff2be0 <line:257:7, col:23>
    (CXXConstructExpr 0x9ff2bb8 <col:14, col:23> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
      (ImplicitCastExpr 0x9ff2ba8 <col:14, col:23> 'const struct std::_Bit_iterator' lvalue <NoOp>
        (CXXOperatorCallExpr 0x9ff2b80 <col:14, col:23> 'iterator':'struct std::_Bit_iterator' lvalue
          (ImplicitCastExpr 0x9ff2b70 <col:20, <invalid sloc>> 'iterator &(*)(difference_type)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9ff2b58 <col:20, <invalid sloc>> 'iterator &(difference_type)' lvalue CXXMethod 0x9ff1680 'operator-=' 'iterator &(difference_type)'))
          (DeclRefExpr 0x9ff2b18 <col:14> 'iterator':'struct std::_Bit_iterator' lvalue Var 0x9ff2a80 '__tmp' 'iterator':'struct std::_Bit_iterator')
          (ImplicitCastExpr 0x9ff2b48 <col:23> 'difference_type':'int' <LValueToRValue>
            (DeclRefExpr 0x9ff2b30 <col:23> 'difference_type':'int' lvalue ParmVar 0x9ff1800 '__i' 'difference_type':'int')))))))


        reference operator[](difference_type __i) const (CompoundStmt 0x9ff2de0 </usr/include/c++/4.6/bits/stl_bvector.h:262:5, col:30>
  (ReturnStmt 0x9ff2dd0 <col:7, col:27>
    (CXXConstructExpr 0x9ff2da8 <col:14, col:27> 'reference':'struct std::_Bit_reference''void (const struct std::_Bit_reference &) throw()' elidable
      (MaterializeTemporaryExpr 0x9ff2d98 <col:14, col:27> 'const struct std::_Bit_reference' lvalue
        (ImplicitCastExpr 0x9ff2d88 <col:14, col:27> 'const struct std::_Bit_reference' <NoOp>
          (CXXOperatorCallExpr 0x9ff2d68 <col:14, col:27> 'reference':'struct std::_Bit_reference'
            (ImplicitCastExpr 0x9ff2d58 <<invalid sloc>> 'reference (*)(void) const' <FunctionToPointerDecay>
              (DeclRefExpr 0x9ff2d08 <<invalid sloc>> 'reference (void) const' lvalue CXXMethod 0x9ff1150 'operator*' 'reference (void) const'))
            (ImplicitCastExpr 0x9ff2cf8 <col:15, col:27> 'const struct std::_Bit_iterator' lvalue <NoOp>
              (ParenExpr 0x9ff2ce0 <col:15, col:27> 'iterator':'struct std::_Bit_iterator'
                (CXXOperatorCallExpr 0x9ff2cb8 <col:16, col:24> 'iterator':'struct std::_Bit_iterator'
                  (ImplicitCastExpr 0x9ff2ca8 <col:22, <invalid sloc>> 'iterator (*)(difference_type) const' <FunctionToPointerDecay>
                    (DeclRefExpr 0x9ff2c58 <col:22, <invalid sloc>> 'iterator (difference_type) const' lvalue CXXMethod 0x9ff1790 'operator+' 'iterator (difference_type) const'))
                  (UnaryOperator 0x9ff2c18 <col:16, col:17> 'const struct std::_Bit_iterator' lvalue prefix '*'
                    (CXXThisExpr 0x9ff2c08 <col:17> 'const struct std::_Bit_iterator *' this))
                  (ImplicitCastExpr 0x9ff2c48 <col:24> 'difference_type':'int' <LValueToRValue>
                    (DeclRefExpr 0x9ff2c2c <col:24> 'difference_type':'int' lvalue ParmVar 0x9ff18c0 '__i' 'difference_type':'int')))))))))))


        inline _Bit_iterator(const std::_Bit_iterator &) throw() : std::_Bit_iterator_base((ImplicitCastExpr 0x9ff2138 </usr/include/c++/4.6/bits/stl_bvector.h:187:10> 'const struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
  (DeclRefExpr 0x9ff211c <col:10> 'const struct std::_Bit_iterator' lvalue ParmVar 0x9ff20d0 '' 'const struct std::_Bit_iterator &'))
) (CompoundStmt 0x9ff2360 </usr/include/c++/4.6/bits/stl_bvector.h:187:10>)


    };
    inline std::_Bit_iterator operator+(ptrdiff_t __n, const std::_Bit_iterator &__x) (CompoundStmt 0x9ff3040 </usr/include/c++/4.6/bits/stl_bvector.h:267:3, col:23>
  (ReturnStmt 0x9ff3030 <col:5, col:18>
    (CXXConstructExpr 0x9ff3008 <col:12, col:18> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()' elidable
      (MaterializeTemporaryExpr 0x9ff2ff8 <col:12, col:18> 'const struct std::_Bit_iterator' lvalue
        (ImplicitCastExpr 0x9ff2fe8 <col:12, col:18> 'const struct std::_Bit_iterator' <NoOp>
          (CXXOperatorCallExpr 0x9ff2fc0 <col:12, col:18> 'iterator':'struct std::_Bit_iterator'
            (ImplicitCastExpr 0x9ff2fb0 <col:16, <invalid sloc>> 'iterator (*)(difference_type) const' <FunctionToPointerDecay>
              (DeclRefExpr 0x9ff2f98 <col:16, <invalid sloc>> 'iterator (difference_type) const' lvalue CXXMethod 0x9ff1790 'operator+' 'iterator (difference_type) const'))
            (DeclRefExpr 0x9ff2f58 <col:12> 'const struct std::_Bit_iterator' lvalue ParmVar 0x9ff2e50 '__x' 'const struct std::_Bit_iterator &')
            (ImplicitCastExpr 0x9ff2f88 <col:18> 'ptrdiff_t':'int' <LValueToRValue>
              (DeclRefExpr 0x9ff2f70 <col:18> 'ptrdiff_t':'int' lvalue ParmVar 0x9ff2e00 '__n' 'ptrdiff_t':'int'))))))))


    struct _Bit_const_iterator : public std::_Bit_iterator_base {
        struct _Bit_const_iterator;
        typedef bool reference;
        typedef bool const_reference;
        typedef const bool *pointer;
        typedef std::_Bit_const_iterator const_iterator;
        _Bit_const_iterator() : std::_Bit_iterator_base((ImplicitCastExpr 0x9ff3e70 </usr/include/c++/4.6/bits/stl_bvector.h:276:48> '_Bit_type *' <NullToPointer>
  (IntegerLiteral 0x9ff3e38 <col:48> 'int' 0))
, (ImplicitCastExpr 0x9ff3e80 </usr/include/c++/4.6/bits/stl_bvector.h:276:51> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9ff3e50 <col:51> 'int' 0))
) (CompoundStmt 0x9ff3ee0 </usr/include/c++/4.6/bits/stl_bvector.h:276:54, col:56>)


        _Bit_const_iterator(_Bit_type *__x, unsigned int __y) : std::_Bit_iterator_base((ImplicitCastExpr 0x9ff3f28 </usr/include/c++/4.6/bits/stl_bvector.h:279:26> '_Bit_type *' <LValueToRValue>
  (DeclRefExpr 0x9ff3ef0 <col:26> '_Bit_type *' lvalue ParmVar 0x9ff3390 '__x' '_Bit_type *'))
, (ImplicitCastExpr 0x9ff3f38 </usr/include/c++/4.6/bits/stl_bvector.h:279:31> 'unsigned int' <LValueToRValue>
  (DeclRefExpr 0x9ff3f08 <col:31> 'unsigned int' lvalue ParmVar 0x9ff33e0 '__y' 'unsigned int'))
) (CompoundStmt 0x9ff3f90 </usr/include/c++/4.6/bits/stl_bvector.h:279:36, col:38>)


        _Bit_const_iterator(const std::_Bit_iterator &__x) : std::_Bit_iterator_base((ImplicitCastExpr 0x9ff4038 </usr/include/c++/4.6/bits/stl_bvector.h:282:26, col:30> '_Bit_type *' <LValueToRValue>
  (MemberExpr 0x9ff3fc8 <col:26, col:30> '_Bit_type *const' lvalue ._M_p 0x9fec9b0
    (ImplicitCastExpr 0x9ff3fb8 <col:26> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
      (DeclRefExpr 0x9ff3fa0 <col:26> 'const struct std::_Bit_iterator' lvalue ParmVar 0x9ff34c0 '__x' 'const struct std::_Bit_iterator &'))))
, (ImplicitCastExpr 0x9ff4048 </usr/include/c++/4.6/bits/stl_bvector.h:282:36, col:40> 'unsigned int' <LValueToRValue>
  (MemberExpr 0x9ff4010 <col:36, col:40> 'const unsigned int' lvalue ._M_offset 0x9fec9f0
    (ImplicitCastExpr 0x9ff4000 <col:36> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
      (DeclRefExpr 0x9ff3fe8 <col:36> 'const struct std::_Bit_iterator' lvalue ParmVar 0x9ff34c0 '__x' 'const struct std::_Bit_iterator &'))))
) (CompoundStmt 0x9ff40a0 </usr/include/c++/4.6/bits/stl_bvector.h:282:51, col:53>)


        const_reference operator*() const (CompoundStmt 0x9ff4250 </usr/include/c++/4.6/bits/stl_bvector.h:286:5, col:54>
  (ReturnStmt 0x9ff4240 <col:7, col:51>
    (ImplicitCastExpr 0x9ff4230 <col:14, col:51> '_Bool' <UserDefinedConversion>
      (CXXMemberCallExpr 0x9ff4210 <col:14, col:51> '_Bool'
        (MemberExpr 0x9ff41f0 <col:14, <invalid sloc>> '_Bool (void) const' .operator _Bool 0x9feb340
          (ImplicitCastExpr 0x9ff41e0 <col:14, col:51> 'const struct std::_Bit_reference' lvalue <NoOp>
            (CXXTemporaryObjectExpr 0x9ff41a8 <col:14, col:51> 'struct std::_Bit_reference''void (_Bit_type *, _Bit_type)'
              (ImplicitCastExpr 0x9ff4198 <col:29> '_Bit_type *' <LValueToRValue>
                (MemberExpr 0x9ff40f8 <col:29> '_Bit_type *const' lvalue ->_M_p 0x9fec9b0
                  (ImplicitCastExpr 0x9ff40e8 <col:29> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
                    (CXXThisExpr 0x9ff40d8 <col:29> 'const struct std::_Bit_const_iterator *' this))))
              (BinaryOperator 0x9ff4180 <col:35, col:42> 'unsigned long' '<<'
                (IntegerLiteral 0x9ff4118 <col:35> 'unsigned long' 1)
                (ImplicitCastExpr 0x9ff4170 <col:42> 'unsigned int' <LValueToRValue>
                  (MemberExpr 0x9ff4150 <col:42> 'const unsigned int' lvalue ->_M_offset 0x9fec9f0
                    (ImplicitCastExpr 0x9ff4140 <col:42> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
                      (CXXThisExpr 0x9ff4130 <col:42> 'const struct std::_Bit_const_iterator *' this))))))))))))


        const_iterator &operator++() (CompoundStmt 0x9ff4320 </usr/include/c++/4.6/bits/stl_bvector.h:290:5, line:293:5>
  (CXXMemberCallExpr 0x9ff42b8 <line:291:7, col:18> 'void'
    (MemberExpr 0x9ff4298 <col:7> '<bound member function type>' ->_M_bump_up 0x9feef00
      (ImplicitCastExpr 0x9ff42d8 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
        (CXXThisExpr 0x9ff4288 <col:7> 'struct std::_Bit_const_iterator *' this))))
  (ReturnStmt 0x9ff4310 <line:292:7, col:15>
    (UnaryOperator 0x9ff42f8 <col:14, col:15> 'struct std::_Bit_const_iterator' lvalue prefix '*'
      (CXXThisExpr 0x9ff42e8 <col:15> 'struct std::_Bit_const_iterator *' this))))


        const_iterator operator++(int) (CompoundStmt 0x9ff4648 </usr/include/c++/4.6/bits/stl_bvector.h:297:5, line:301:5>
  (DeclStmt 0x9ff4578 <line:298:7, col:35>
    0x9ff4340 "const_iterator __tmp =
      (CXXConstructExpr 0x9ff4550 <col:30, col:31> 'const_iterator':'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()'
        (ImplicitCastExpr 0x9ff44b0 <col:30, col:31> 'const struct std::_Bit_const_iterator' lvalue <NoOp>
          (UnaryOperator 0x9ff4388 <col:30, col:31> 'struct std::_Bit_const_iterator' lvalue prefix '*'
            (CXXThisExpr 0x9ff4378 <col:31> 'struct std::_Bit_const_iterator *' this))))")
  (CXXMemberCallExpr 0x9ff45b8 <line:299:7, col:18> 'void'
    (MemberExpr 0x9ff4598 <col:7> '<bound member function type>' ->_M_bump_up 0x9feef00
      (ImplicitCastExpr 0x9ff45d8 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
        (CXXThisExpr 0x9ff4588 <col:7> 'struct std::_Bit_const_iterator *' this))))
  (ReturnStmt 0x9ff4638 <line:300:7, col:14>
    (CXXConstructExpr 0x9ff4610 <col:14> 'const_iterator':'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()' elidable
      (ImplicitCastExpr 0x9ff4600 <col:14> 'const struct std::_Bit_const_iterator' lvalue <NoOp>
        (DeclRefExpr 0x9ff45e8 <col:14> 'const_iterator':'struct std::_Bit_const_iterator' lvalue Var 0x9ff4340 '__tmp' 'const_iterator':'struct std::_Bit_const_iterator')))))


        const_iterator &operator--() (CompoundStmt 0x9ff4700 </usr/include/c++/4.6/bits/stl_bvector.h:305:5, line:308:5>
  (CXXMemberCallExpr 0x9ff4698 <line:306:7, col:20> 'void'
    (MemberExpr 0x9ff4678 <col:7> '<bound member function type>' ->_M_bump_down 0x9feef80
      (ImplicitCastExpr 0x9ff46b8 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
        (CXXThisExpr 0x9ff4668 <col:7> 'struct std::_Bit_const_iterator *' this))))
  (ReturnStmt 0x9ff46f0 <line:307:7, col:15>
    (UnaryOperator 0x9ff46d8 <col:14, col:15> 'struct std::_Bit_const_iterator' lvalue prefix '*'
      (CXXThisExpr 0x9ff46c8 <col:15> 'struct std::_Bit_const_iterator *' this))))


        const_iterator operator--(int) (CompoundStmt 0x9ff4888 </usr/include/c++/4.6/bits/stl_bvector.h:312:5, line:316:5>
  (DeclStmt 0x9ff47b8 <line:313:7, col:35>
    0x9ff4720 "const_iterator __tmp =
      (CXXConstructExpr 0x9ff4790 <col:30, col:31> 'const_iterator':'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()'
        (ImplicitCastExpr 0x9ff4780 <col:30, col:31> 'const struct std::_Bit_const_iterator' lvalue <NoOp>
          (UnaryOperator 0x9ff4768 <col:30, col:31> 'struct std::_Bit_const_iterator' lvalue prefix '*'
            (CXXThisExpr 0x9ff4758 <col:31> 'struct std::_Bit_const_iterator *' this))))")
  (CXXMemberCallExpr 0x9ff47f8 <line:314:7, col:20> 'void'
    (MemberExpr 0x9ff47d8 <col:7> '<bound member function type>' ->_M_bump_down 0x9feef80
      (ImplicitCastExpr 0x9ff4818 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
        (CXXThisExpr 0x9ff47c8 <col:7> 'struct std::_Bit_const_iterator *' this))))
  (ReturnStmt 0x9ff4878 <line:315:7, col:14>
    (CXXConstructExpr 0x9ff4850 <col:14> 'const_iterator':'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()' elidable
      (ImplicitCastExpr 0x9ff4840 <col:14> 'const struct std::_Bit_const_iterator' lvalue <NoOp>
        (DeclRefExpr 0x9ff4828 <col:14> 'const_iterator':'struct std::_Bit_const_iterator' lvalue Var 0x9ff4720 '__tmp' 'const_iterator':'struct std::_Bit_const_iterator')))))


        const_iterator &operator+=(difference_type __i) (CompoundStmt 0x9ff4968 </usr/include/c++/4.6/bits/stl_bvector.h:320:5, line:323:5>
  (CXXMemberCallExpr 0x9ff48f0 <line:321:7, col:18> 'void'
    (MemberExpr 0x9ff48b8 <col:7> '<bound member function type>' ->_M_incr 0x9fef070
      (ImplicitCastExpr 0x9ff4910 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
        (CXXThisExpr 0x9ff48a8 <col:7> 'struct std::_Bit_const_iterator *' this)))
    (ImplicitCastExpr 0x9ff4920 <col:15> 'difference_type':'int' <LValueToRValue>
      (DeclRefExpr 0x9ff48d8 <col:15> 'difference_type':'int' lvalue ParmVar 0x9ff3980 '__i' 'difference_type':'int')))
  (ReturnStmt 0x9ff4958 <line:322:7, col:15>
    (UnaryOperator 0x9ff4940 <col:14, col:15> 'struct std::_Bit_const_iterator' lvalue prefix '*'
      (CXXThisExpr 0x9ff4930 <col:15> 'struct std::_Bit_const_iterator *' this))))


        const_iterator &operator-=(difference_type __i) (CompoundStmt 0x9ff4aa8 </usr/include/c++/4.6/bits/stl_bvector.h:327:5, line:330:5>
  (CXXOperatorCallExpr 0x9ff4a48 <line:328:7, col:17> 'const_iterator':'struct std::_Bit_const_iterator' lvalue
    (ImplicitCastExpr 0x9ff4a38 <col:13, <invalid sloc>> 'const_iterator &(*)(difference_type)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9ff49e8 <col:13, <invalid sloc>> 'const_iterator &(difference_type)' lvalue CXXMethod 0x9ff3a20 'operator+=' 'const_iterator &(difference_type)'))
    (UnaryOperator 0x9ff4990 <col:7, col:8> 'struct std::_Bit_const_iterator' lvalue prefix '*'
      (CXXThisExpr 0x9ff4980 <col:8> 'struct std::_Bit_const_iterator *' this))
    (UnaryOperator 0x9ff49d0 <col:16, col:17> 'difference_type':'int' prefix '-'
      (ImplicitCastExpr 0x9ff49c0 <col:17> 'difference_type':'int' <LValueToRValue>
        (DeclRefExpr 0x9ff49a4 <col:17> 'difference_type':'int' lvalue ParmVar 0x9ff3a90 '__i' 'difference_type':'int'))))
  (ReturnStmt 0x9ff4a98 <line:329:7, col:15>
    (UnaryOperator 0x9ff4a80 <col:14, col:15> 'struct std::_Bit_const_iterator' lvalue prefix '*'
      (CXXThisExpr 0x9ff4a70 <col:15> 'struct std::_Bit_const_iterator *' this))))


        const_iterator operator+(difference_type __i) const (CompoundStmt 0x9ff4c40 </usr/include/c++/4.6/bits/stl_bvector.h:334:5, line:337:5>
  (DeclStmt 0x9ff4b58 <line:335:7, col:35>
    0x9ff4ad0 "const_iterator __tmp =
      (CXXConstructExpr 0x9ff4b30 <col:30, col:31> 'const_iterator':'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()'
        (UnaryOperator 0x9ff4b18 <col:30, col:31> 'const struct std::_Bit_const_iterator' lvalue prefix '*'
          (CXXThisExpr 0x9ff4b08 <col:31> 'const struct std::_Bit_const_iterator *' this)))")
  (ReturnStmt 0x9ff4c30 <line:336:7, col:23>
    (CXXConstructExpr 0x9ff4c08 <col:14, col:23> 'const_iterator':'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()'
      (ImplicitCastExpr 0x9ff4bf8 <col:14, col:23> 'const struct std::_Bit_const_iterator' lvalue <NoOp>
        (CXXOperatorCallExpr 0x9ff4bd0 <col:14, col:23> 'const_iterator':'struct std::_Bit_const_iterator' lvalue
          (ImplicitCastExpr 0x9ff4bc0 <col:20, <invalid sloc>> 'const_iterator &(*)(difference_type)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9ff4ba8 <col:20, <invalid sloc>> 'const_iterator &(difference_type)' lvalue CXXMethod 0x9ff3a20 'operator+=' 'const_iterator &(difference_type)'))
          (DeclRefExpr 0x9ff4b68 <col:14> 'const_iterator':'struct std::_Bit_const_iterator' lvalue Var 0x9ff4ad0 '__tmp' 'const_iterator':'struct std::_Bit_const_iterator')
          (ImplicitCastExpr 0x9ff4b98 <col:23> 'difference_type':'int' <LValueToRValue>
            (DeclRefExpr 0x9ff4b80 <col:23> 'difference_type':'int' lvalue ParmVar 0x9ff3b60 '__i' 'difference_type':'int')))))))


        const_iterator operator-(difference_type __i) const (CompoundStmt 0x9ff4dd0 </usr/include/c++/4.6/bits/stl_bvector.h:341:5, line:344:5>
  (DeclStmt 0x9ff4ce8 <line:342:7, col:35>
    0x9ff4c60 "const_iterator __tmp =
      (CXXConstructExpr 0x9ff4cc0 <col:30, col:31> 'const_iterator':'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()'
        (UnaryOperator 0x9ff4ca8 <col:30, col:31> 'const struct std::_Bit_const_iterator' lvalue prefix '*'
          (CXXThisExpr 0x9ff4c98 <col:31> 'const struct std::_Bit_const_iterator *' this)))")
  (ReturnStmt 0x9ff4dc0 <line:343:7, col:23>
    (CXXConstructExpr 0x9ff4d98 <col:14, col:23> 'const_iterator':'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()'
      (ImplicitCastExpr 0x9ff4d88 <col:14, col:23> 'const struct std::_Bit_const_iterator' lvalue <NoOp>
        (CXXOperatorCallExpr 0x9ff4d60 <col:14, col:23> 'const_iterator':'struct std::_Bit_const_iterator' lvalue
          (ImplicitCastExpr 0x9ff4d50 <col:20, <invalid sloc>> 'const_iterator &(*)(difference_type)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9ff4d38 <col:20, <invalid sloc>> 'const_iterator &(difference_type)' lvalue CXXMethod 0x9ff3af0 'operator-=' 'const_iterator &(difference_type)'))
          (DeclRefExpr 0x9ff4cf8 <col:14> 'const_iterator':'struct std::_Bit_const_iterator' lvalue Var 0x9ff4c60 '__tmp' 'const_iterator':'struct std::_Bit_const_iterator')
          (ImplicitCastExpr 0x9ff4d28 <col:23> 'difference_type':'int' <LValueToRValue>
            (DeclRefExpr 0x9ff4d10 <col:23> 'difference_type':'int' lvalue ParmVar 0x9ff3c70 '__i' 'difference_type':'int')))))))


        const_reference operator[](difference_type __i) const (CompoundStmt 0x9ff4f58 </usr/include/c++/4.6/bits/stl_bvector.h:348:5, col:30>
  (ReturnStmt 0x9ff4f48 <col:7, col:27>
    (CXXOperatorCallExpr 0x9ff4f28 <col:14, col:27> 'const_reference':'_Bool'
      (ImplicitCastExpr 0x9ff4f18 <<invalid sloc>> 'const_reference (*)(void) const' <FunctionToPointerDecay>
        (DeclRefExpr 0x9ff4ee8 <<invalid sloc>> 'const_reference (void) const' lvalue CXXMethod 0x9ff35c0 'operator*' 'const_reference (void) const'))
      (ImplicitCastExpr 0x9ff4ed8 <col:15, col:27> 'const struct std::_Bit_const_iterator' lvalue <NoOp>
        (ParenExpr 0x9ff4ec0 <col:15, col:27> 'const_iterator':'struct std::_Bit_const_iterator'
          (CXXOperatorCallExpr 0x9ff4e98 <col:16, col:24> 'const_iterator':'struct std::_Bit_const_iterator'
            (ImplicitCastExpr 0x9ff4e88 <col:22, <invalid sloc>> 'const_iterator (*)(difference_type) const' <FunctionToPointerDecay>
              (DeclRefExpr 0x9ff4e38 <col:22, <invalid sloc>> 'const_iterator (difference_type) const' lvalue CXXMethod 0x9ff3c00 'operator+' 'const_iterator (difference_type) const'))
            (UnaryOperator 0x9ff4df8 <col:16, col:17> 'const struct std::_Bit_const_iterator' lvalue prefix '*'
              (CXXThisExpr 0x9ff4de8 <col:17> 'const struct std::_Bit_const_iterator *' this))
            (ImplicitCastExpr 0x9ff4e28 <col:24> 'difference_type':'int' <LValueToRValue>
              (DeclRefExpr 0x9ff4e0c <col:24> 'difference_type':'int' lvalue ParmVar 0x9ff3d30 '__i' 'difference_type':'int'))))))))


        inline _Bit_const_iterator(const std::_Bit_const_iterator &) throw() : std::_Bit_iterator_base((ImplicitCastExpr 0x9ff44d8 </usr/include/c++/4.6/bits/stl_bvector.h:269:10> 'const struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
  (DeclRefExpr 0x9ff44bc <col:10> 'const struct std::_Bit_const_iterator' lvalue ParmVar 0x9ff4470 '' 'const struct std::_Bit_const_iterator &'))
) (CompoundStmt 0x9ff4540 </usr/include/c++/4.6/bits/stl_bvector.h:269:10>)


    };
    inline std::_Bit_const_iterator operator+(ptrdiff_t __n, const std::_Bit_const_iterator &__x) (CompoundStmt 0x9ff51c0 </usr/include/c++/4.6/bits/stl_bvector.h:353:3, col:23>
  (ReturnStmt 0x9ff51b0 <col:5, col:18>
    (CXXConstructExpr 0x9ff5188 <col:12, col:18> 'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()' elidable
      (MaterializeTemporaryExpr 0x9ff5178 <col:12, col:18> 'const struct std::_Bit_const_iterator' lvalue
        (ImplicitCastExpr 0x9ff5168 <col:12, col:18> 'const struct std::_Bit_const_iterator' <NoOp>
          (CXXOperatorCallExpr 0x9ff5140 <col:12, col:18> 'const_iterator':'struct std::_Bit_const_iterator'
            (ImplicitCastExpr 0x9ff5130 <col:16, <invalid sloc>> 'const_iterator (*)(difference_type) const' <FunctionToPointerDecay>
              (DeclRefExpr 0x9ff5118 <col:16, <invalid sloc>> 'const_iterator (difference_type) const' lvalue CXXMethod 0x9ff3c00 'operator+' 'const_iterator (difference_type) const'))
            (DeclRefExpr 0x9ff50d8 <col:12> 'const struct std::_Bit_const_iterator' lvalue ParmVar 0x9ff4fd0 '__x' 'const struct std::_Bit_const_iterator &')
            (ImplicitCastExpr 0x9ff5108 <col:18> 'ptrdiff_t':'int' <LValueToRValue>
              (DeclRefExpr 0x9ff50f0 <col:18> 'ptrdiff_t':'int' lvalue ParmVar 0x9ff4f80 '__n' 'ptrdiff_t':'int'))))))))


    inline void __fill_bvector(std::_Bit_iterator __first, std::_Bit_iterator __last, bool __x) (CompoundStmt 0x9ff55b8 </usr/include/c++/4.6/bits/stl_bvector.h:357:3, line:360:3>
  (ForStmt 0x9ff5590 <line:358:5, line:359:18>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9ff53e8 <line:358:12, col:23> '_Bool'
      (ImplicitCastExpr 0x9ff53d8 <col:20, <invalid sloc>> '_Bool (*)(const struct std::_Bit_iterator_base &) const' <FunctionToPointerDecay>
        (DeclRefExpr 0x9ff53c0 <col:20, <invalid sloc>> '_Bool (const struct std::_Bit_iterator_base &) const' lvalue CXXMethod 0x9fef330 'operator!=' '_Bool (const struct std::_Bit_iterator_base &) const'))
      (ImplicitCastExpr 0x9ff53b0 <col:12> 'const struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
        (DeclRefExpr 0x9ff535c <col:12> 'struct std::_Bit_iterator' lvalue ParmVar 0x9ff51e0 '__first' 'struct std::_Bit_iterator'))
      (ImplicitCastExpr 0x9ff53a0 <col:23> 'const struct std::_Bit_iterator_base' lvalue <NoOp>
        (ImplicitCastExpr 0x9ff5390 <col:23> 'struct std::_Bit_iterator_base' lvalue <DerivedToBase (_Bit_iterator_base)>
          (DeclRefExpr 0x9ff5374 <col:23> 'struct std::_Bit_iterator' lvalue ParmVar 0x9ff5220 '__last' 'struct std::_Bit_iterator'))))
    (CXXOperatorCallExpr 0x9ff5488 <col:31, col:33> 'iterator':'struct std::_Bit_iterator' lvalue
      (ImplicitCastExpr 0x9ff5478 <<invalid sloc>> 'iterator &(*)(void)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9ff5428 <<invalid sloc>> 'iterator &(void)' lvalue CXXMethod 0x9ff1250 'operator++' 'iterator &(void)'))
      (DeclRefExpr 0x9ff540c <col:33> 'struct std::_Bit_iterator' lvalue ParmVar 0x9ff51e0 '__first' 'struct std::_Bit_iterator'))
    (CXXOperatorCallExpr 0x9ff5568 <line:359:7, col:18> 'struct std::_Bit_reference' lvalue
      (ImplicitCastExpr 0x9ff5558 <col:16, <invalid sloc>> 'struct std::_Bit_reference &(*)(_Bool)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9ff5540 <col:16, <invalid sloc>> 'struct std::_Bit_reference &(_Bool)' lvalue CXXMethod 0x9feb450 'operator=' 'struct std::_Bit_reference &(_Bool)'))
      (CXXOperatorCallExpr 0x9ff54f8 <col:7, col:8> 'reference':'struct std::_Bit_reference'
        (ImplicitCastExpr 0x9ff54e8 <<invalid sloc>> 'reference (*)(void) const' <FunctionToPointerDecay>
          (DeclRefExpr 0x9ff54d0 <<invalid sloc>> 'reference (void) const' lvalue CXXMethod 0x9ff1150 'operator*' 'reference (void) const'))
        (ImplicitCastExpr 0x9ff54c0 <col:8> 'const struct std::_Bit_iterator' lvalue <NoOp>
          (DeclRefExpr 0x9ff54a8 <col:8> 'struct std::_Bit_iterator' lvalue ParmVar 0x9ff51e0 '__first' 'struct std::_Bit_iterator')))
      (ImplicitCastExpr 0x9ff5530 <col:18> '_Bool' <LValueToRValue>
        (DeclRefExpr 0x9ff5518 <col:18> '_Bool' lvalue ParmVar 0x9ff5260 '__x' '_Bool')))))


    inline void fill(std::_Bit_iterator __first, std::_Bit_iterator __last, const bool &__x) (CompoundStmt 0x9ff63a0 </usr/include/c++/4.6/bits/stl_bvector.h:364:3, line:373:3>
  (IfStmt 0x9ff6380 <line:365:5, line:372:42>
    <<<NULL>>>
    (BinaryOperator 0x9ff5840 <line:365:9, col:32> '_Bool' '!='
      (ImplicitCastExpr 0x9ff5820 <col:9, col:17> '_Bit_type *' <LValueToRValue>
        (MemberExpr 0x9ff57b8 <col:9, col:17> '_Bit_type *' lvalue ._M_p 0x9fec9b0
          (ImplicitCastExpr 0x9ff57a8 <col:9> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
            (DeclRefExpr 0x9ff578c <col:9> 'struct std::_Bit_iterator' lvalue ParmVar 0x9ff55e0 '__first' 'struct std::_Bit_iterator'))))
      (ImplicitCastExpr 0x9ff5830 <col:25, col:32> '_Bit_type *' <LValueToRValue>
        (MemberExpr 0x9ff5800 <col:25, col:32> '_Bit_type *' lvalue ._M_p 0x9fec9b0
          (ImplicitCastExpr 0x9ff57f0 <col:25> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
            (DeclRefExpr 0x9ff57d8 <col:25> 'struct std::_Bit_iterator' lvalue ParmVar 0x9ff5620 '__last' 'struct std::_Bit_iterator')))))
    (CompoundStmt 0x9ff6210 <line:366:7, line:370:7>
      (CallExpr 0x9ff5d78 <line:367:2, col:55> 'void'
        (ImplicitCastExpr 0x9ff5d68 <col:2, col:7> 'void (*)(unsigned long *, unsigned long *, const int &)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9ff5d08 <col:2, col:7> 'void (unsigned long *, unsigned long *, const int &)' lvalue Function 0x9ff5c40 'fill' 'void (unsigned long *, unsigned long *, const int &)' (FunctionTemplate 0x9bf30e0 'fill')))
        (BinaryOperator 0x9ff5928 <col:12, col:27> '_Bit_type *' '+'
          (ImplicitCastExpr 0x9ff5918 <col:12, col:20> '_Bit_type *' <LValueToRValue>
            (MemberExpr 0x9ff58e0 <col:12, col:20> '_Bit_type *' lvalue ._M_p 0x9fec9b0
              (ImplicitCastExpr 0x9ff58d0 <col:12> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
                (DeclRefExpr 0x9ff58b8 <col:12> 'struct std::_Bit_iterator' lvalue ParmVar 0x9ff55e0 '__first' 'struct std::_Bit_iterator'))))
          (IntegerLiteral 0x9ff5900 <col:27> 'int' 1))
        (ImplicitCastExpr 0x9ff5da0 <col:30, col:37> '_Bit_type *' <LValueToRValue>
          (MemberExpr 0x9ff5968 <col:30, col:37> '_Bit_type *' lvalue ._M_p 0x9fec9b0
            (ImplicitCastExpr 0x9ff5958 <col:30> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
              (DeclRefExpr 0x9ff5940 <col:30> 'struct std::_Bit_iterator' lvalue ParmVar 0x9ff5620 '__last' 'struct std::_Bit_iterator'))))
        (MaterializeTemporaryExpr 0x9ff5db0 <col:43, col:54> 'const int':'const int' lvalue
          (ConditionalOperator 0x9ff59f8 <col:43, col:54> 'int'
            (ImplicitCastExpr 0x9ff59e8 <col:43> '_Bool' <LValueToRValue>
              (DeclRefExpr 0x9ff5988 <col:43> 'const _Bool' lvalue ParmVar 0x9ff5690 '__x' 'const _Bool &'))
            (UnaryOperator 0x9ff59b8 <col:49, col:50> 'int' prefix '~'
              (IntegerLiteral 0x9ff59a0 <col:50> 'int' 0))
            (IntegerLiteral 0x9ff59d0 <col:54> 'int' 0))))
      (CallExpr 0x9ff5f58 <line:368:2, col:65> 'void'
        (ImplicitCastExpr 0x9ff5f48 <col:2> 'void (*)(struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9ff5f10 <col:2> 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool)' lvalue Function 0x9ff52f0 '__fill_bvector' 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool)'))
        (CXXConstructExpr 0x9ff5f90 <col:17> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
          (ImplicitCastExpr 0x9ff5f80 <col:17> 'const struct std::_Bit_iterator' lvalue <NoOp>
            (DeclRefExpr 0x9ff5df4 <col:17> 'struct std::_Bit_iterator' lvalue ParmVar 0x9ff55e0 '__first' 'struct std::_Bit_iterator')))
        (CXXConstructExpr 0x9ff5fd8 <col:26, col:59> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()' elidable
          (MaterializeTemporaryExpr 0x9ff5fc8 <col:26, col:59> 'const struct std::_Bit_iterator' lvalue
            (ImplicitCastExpr 0x9ff5fb8 <col:26, col:59> 'const struct std::_Bit_iterator' <NoOp>
              (CXXTemporaryObjectExpr 0x9ff5ec8 <col:26, col:59> 'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
                (BinaryOperator 0x9ff5e88 <col:40, col:55> '_Bit_type *' '+'
                  (ImplicitCastExpr 0x9ff5e78 <col:40, col:48> '_Bit_type *' <LValueToRValue>
                    (MemberExpr 0x9ff5e40 <col:40, col:48> '_Bit_type *' lvalue ._M_p 0x9fec9b0
                      (ImplicitCastExpr 0x9ff5e30 <col:40> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
                        (DeclRefExpr 0x9ff5e18 <col:40> 'struct std::_Bit_iterator' lvalue ParmVar 0x9ff55e0 '__first' 'struct std::_Bit_iterator'))))
                  (IntegerLiteral 0x9ff5e60 <col:55> 'int' 1))
                (ImplicitCastExpr 0x9ff5eb8 <col:58> 'unsigned int' <IntegralCast>
                  (IntegerLiteral 0x9ff5ea0 <col:58> 'int' 0))))))
        (ImplicitCastExpr 0x9ff6000 <col:62> '_Bool' <LValueToRValue>
          (DeclRefExpr 0x9ff5ef8 <col:62> 'const _Bool' lvalue ParmVar 0x9ff5690 '__x' 'const _Bool &')))
      (CallExpr 0x9ff6158 <line:369:2, col:59> 'void'
        (ImplicitCastExpr 0x9ff6148 <col:2> 'void (*)(struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9ff6130 <col:2> 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool)' lvalue Function 0x9ff52f0 '__fill_bvector' 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool)'))
        (CXXConstructExpr 0x9ff61a0 <col:17, col:45> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()' elidable
          (MaterializeTemporaryExpr 0x9ff6190 <col:17, col:45> 'const struct std::_Bit_iterator' lvalue
            (ImplicitCastExpr 0x9ff6180 <col:17, col:45> 'const struct std::_Bit_iterator' <NoOp>
              (CXXTemporaryObjectExpr 0x9ff60d0 <col:17, col:45> 'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
                (ImplicitCastExpr 0x9ff60b0 <col:31, col:38> '_Bit_type *' <LValueToRValue>
                  (MemberExpr 0x9ff6078 <col:31, col:38> '_Bit_type *' lvalue ._M_p 0x9fec9b0
                    (ImplicitCastExpr 0x9ff6068 <col:31> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
                      (DeclRefExpr 0x9ff6050 <col:31> 'struct std::_Bit_iterator' lvalue ParmVar 0x9ff5620 '__last' 'struct std::_Bit_iterator'))))
                (ImplicitCastExpr 0x9ff60c0 <col:44> 'unsigned int' <IntegralCast>
                  (IntegerLiteral 0x9ff6098 <col:44> 'int' 0))))))
        (CXXConstructExpr 0x9ff61d8 <col:48> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
          (ImplicitCastExpr 0x9ff61c8 <col:48> 'const struct std::_Bit_iterator' lvalue <NoOp>
            (DeclRefExpr 0x9ff6100 <col:48> 'struct std::_Bit_iterator' lvalue ParmVar 0x9ff5620 '__last' 'struct std::_Bit_iterator')))
        (ImplicitCastExpr 0x9ff6200 <col:56> '_Bool' <LValueToRValue>
          (DeclRefExpr 0x9ff6118 <col:56> 'const _Bool' lvalue ParmVar 0x9ff5690 '__x' 'const _Bool &'))))
    (CallExpr 0x9ff62d8 <line:372:7, col:42> 'void'
      (ImplicitCastExpr 0x9ff62c8 <col:7> 'void (*)(struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9ff62ac <col:7> 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool)' lvalue Function 0x9ff52f0 '__fill_bvector' 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool)'))
      (CXXConstructExpr 0x9ff6310 <col:22> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
        (ImplicitCastExpr 0x9ff6300 <col:22> 'const struct std::_Bit_iterator' lvalue <NoOp>
          (DeclRefExpr 0x9ff6264 <col:22> 'struct std::_Bit_iterator' lvalue ParmVar 0x9ff55e0 '__first' 'struct std::_Bit_iterator')))
      (CXXConstructExpr 0x9ff6348 <col:31> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
        (ImplicitCastExpr 0x9ff6338 <col:31> 'const struct std::_Bit_iterator' lvalue <NoOp>
          (DeclRefExpr 0x9ff627c <col:31> 'struct std::_Bit_iterator' lvalue ParmVar 0x9ff5620 '__last' 'struct std::_Bit_iterator')))
      (ImplicitCastExpr 0x9ff6370 <col:39> '_Bool' <LValueToRValue>
        (DeclRefExpr 0x9ff6294 <col:39> 'const _Bool' lvalue ParmVar 0x9ff5690 '__x' 'const _Bool &')))))


    template <typename _Alloc> struct _Bvector_base {
        struct _Bvector_base;
        typedef typename _Alloc::_Alloc::rebind<_Bit_type>::other _Bit_alloc_type;
        struct _Bvector_impl : public _Bit_alloc_type {
            struct _Bvector_impl;
            std::_Bit_iterator _M_start;
            std::_Bit_iterator _M_finish;
            _Bit_type *_M_end_of_storage;
            _Bvector_impl() : _Bit_alloc_type(), _M_start(), _M_finish(), _M_end_of_storage((IntegerLiteral 0x9ff7428 </usr/include/c++/4.6/bits/stl_bvector.h:389:66> 'int' 0)
) (CompoundStmt 0x9ff7498 </usr/include/c++/4.6/bits/stl_bvector.h:390:2, col:4>)


            _Bvector_impl(const _Bit_alloc_type &__a) : _Bit_alloc_type((DeclRefExpr 0x9ff74a8 </usr/include/c++/4.6/bits/stl_bvector.h:393:20> 'const _Bit_alloc_type':'const typename _Alloc::_Alloc::rebind<_Bit_type>::other' lvalue ParmVar 0x9ff6af0 '__a' 'const _Bit_alloc_type &')
), _M_start(), _M_finish(), _M_end_of_storage((IntegerLiteral 0x9ff75a8 </usr/include/c++/4.6/bits/stl_bvector.h:393:69> 'int' 0)
) (CompoundStmt 0x9ff7618 </usr/include/c++/4.6/bits/stl_bvector.h:394:2, col:4>)


        };
    public:
    public:
        typedef _Alloc allocator_type;
        _Bit_alloc_type &_M_get_Bit_allocator() (CompoundStmt 0x9ff7778 </usr/include/c++/4.6/bits/stl_bvector.h:402:7, col:64>
  (ReturnStmt 0x9ff7768 <col:9, col:61>
    (UnaryOperator 0x9ff7750 <col:16, col:61> '<dependent type>' prefix '*'
      (CXXStaticCastExpr 0x9ff7738 <col:17, col:61> '_Bit_alloc_type *' static_cast<_Bit_alloc_type *> <Dependent>
        (CXXOperatorCallExpr 0x9ff76d0 <col:47, col:54> '<dependent type>'
          (UnresolvedLookupExpr 0x9ff7690 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e0a5b0 0x9e0bdb0 0x9e0d020)
          (CXXDependentScopeMemberExpr 0x9ff7658 <col:48, col:54> '<dependent type>' lvalue
            (CXXThisExpr 0x9ff7648 <col:48> '_Bvector_base<_Alloc> *' this)))))))


        const _Bit_alloc_type &_M_get_Bit_allocator() const (CompoundStmt 0x9ff78d8 </usr/include/c++/4.6/bits/stl_bvector.h:406:7, col:70>
  (ReturnStmt 0x9ff78c8 <col:9, col:67>
    (UnaryOperator 0x9ff78b0 <col:16, col:67> '<dependent type>' prefix '*'
      (CXXStaticCastExpr 0x9ff7898 <col:17, col:67> 'const _Bit_alloc_type *' static_cast<const _Bit_alloc_type *> <Dependent>
        (CXXOperatorCallExpr 0x9ff7830 <col:53, col:60> '<dependent type>'
          (UnresolvedLookupExpr 0x9ff77f0 <col:53, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e0a5b0 0x9e0bdb0 0x9e0d020)
          (CXXDependentScopeMemberExpr 0x9ff77b8 <col:54, col:60> '<dependent type>' lvalue
            (CXXThisExpr 0x9ff77a8 <col:54> 'const _Bvector_base<_Alloc> *' this)))))))


        allocator_type get_allocator() const (CompoundStmt 0x9ff7998 </usr/include/c++/4.6/bits/stl_bvector.h:410:7, col:56>
  (ReturnStmt 0x9ff7988 <col:9, col:53>
    (CXXUnresolvedConstructExpr 0x9ff7968 <col:16, col:53> 'allocator_type':'_Alloc'
      (CallExpr 0x9ff7948 <col:31, col:52> '<dependent type>'
        (UnresolvedMemberExpr 0x9ff7908 <col:31> '<bound member function type>' lvalue)))))


        _Bvector_base<_Alloc>() : _M_impl() (CompoundStmt 0x9ff79f0 </usr/include/c++/4.6/bits/stl_bvector.h:413:19, col:21>)


        _Bvector_base<_Alloc>(const allocator_type &__a) : _M_impl((DeclRefExpr 0x9ff7a00 </usr/include/c++/4.6/bits/stl_bvector.h:416:17> 'const allocator_type':'const _Alloc' lvalue ParmVar 0x9ff6fb0 '__a' 'const allocator_type &')
) (CompoundStmt 0x9ff7a60 </usr/include/c++/4.6/bits/stl_bvector.h:416:22, col:24>)


        void ~_Bvector_base<_Alloc>() (CompoundStmt 0x9ff7ad8 </usr/include/c++/4.6/bits/stl_bvector.h:432:7, col:32>
  (CallExpr 0x9ff7ab8 <col:9, col:29> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9ff7a80 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0x9ff7a70 <col:9> '_Bvector_base<_Alloc> *' this))))


    protected:
    protected:
        std::_Bvector_base::_Bvector_impl _M_impl;
        _Bit_type *_M_allocate(size_t __n) (CompoundStmt 0x9ff7cf8 </usr/include/c++/4.6/bits/stl_bvector.h:439:7, line:440:26>
  (ReturnStmt 0x9ff7ce8 <line:439:9, line:440:23>
    (CallExpr 0x9ff7cc8 <line:439:16, line:440:23> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9ff7b20 <line:439:16, col:24> '<dependent type>' lvalue
        (MemberExpr 0x9ff7b00 <col:16> 'struct std::_Bvector_base::_Bvector_impl' lvalue ->_M_impl 0x9ff7190
          (CXXThisExpr 0x9ff7af0 <col:16> '_Bvector_base<_Alloc> *' this)))
      (BinaryOperator 0x9ff7cb0 <col:33, line:440:22> 'unsigned int' '/'
        (ParenExpr 0x9ff7c38 <line:439:33, col:60> 'unsigned int'
          (BinaryOperator 0x9ff7c20 <col:34, col:59> 'unsigned int' '-'
            (BinaryOperator 0x9ff7be0 <col:34, col:55> 'unsigned int' '+'
              (ImplicitCastExpr 0x9ff7bc0 <col:34> 'size_t':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0x9ff7b54 <col:34> 'size_t':'unsigned int' lvalue ParmVar 0x9ff71d0 '__n' 'size_t':'unsigned int'))
              (ImplicitCastExpr 0x9ff7bd0 <col:40, col:55> 'unsigned int' <IntegralCast>
                (CXXFunctionalCastExpr 0x9ff7ba8 <col:40, col:55> 'int' functional cast to int <NoOp>
                  (ImplicitCastExpr 0x9ff7b98 <col:44> 'int' <IntegralCast>
                    (DeclRefExpr 0x9ff7b7c <col:44> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x9feaf10 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))
            (ImplicitCastExpr 0x9ff7c10 <col:59> 'unsigned int' <IntegralCast>
              (IntegerLiteral 0x9ff7bf8 <col:59> 'int' 1))))
        (ImplicitCastExpr 0x9ff7ca0 <line:440:7, col:22> 'unsigned int' <IntegralCast>
          (CXXFunctionalCastExpr 0x9ff7c88 <col:7, col:22> 'int' functional cast to int <NoOp>
            (ImplicitCastExpr 0x9ff7c78 <col:11> 'int' <IntegralCast>
              (DeclRefExpr 0x9ff7c5c <col:11> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x9feaf10 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>'))))))))


        void _M_deallocate() (CompoundStmt 0x9ff8070 </usr/include/c++/4.6/bits/stl_bvector.h:444:7, line:448:7>
  (IfStmt 0x9ff8050 <line:445:2, line:447:58>
    <<<NULL>>>
    (CXXDependentScopeMemberExpr 0x9ff7d78 <line:445:6, col:23> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9ff7d40 <col:6, col:14> '<dependent type>' lvalue
        (MemberExpr 0x9ff7d20 <col:6> 'struct std::_Bvector_base::_Bvector_impl' lvalue ->_M_impl 0x9ff7190
          (CXXThisExpr 0x9ff7d10 <col:6> '_Bvector_base<_Alloc> *' this))))
    (CallExpr 0x9ff8028 <line:446:4, line:447:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9ff7de0 <line:446:4, col:12> '<dependent type>' lvalue
        (MemberExpr 0x9ff7dc0 <col:4> 'struct std::_Bvector_base::_Bvector_impl' lvalue ->_M_impl 0x9ff7190
          (CXXThisExpr 0x9ff7db0 <col:4> '_Bvector_base<_Alloc> *' this)))
      (CXXDependentScopeMemberExpr 0x9ff7e80 <col:23, col:40> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0x9ff7e48 <col:23, col:31> '<dependent type>' lvalue
          (MemberExpr 0x9ff7e28 <col:23> 'struct std::_Bvector_base::_Bvector_impl' lvalue ->_M_impl 0x9ff7190
            (CXXThisExpr 0x9ff7e18 <col:23> '_Bvector_base<_Alloc> *' this))))
      (CXXOperatorCallExpr 0x9ff8000 <line:447:9, col:54> '<dependent type>'
        (UnresolvedLookupExpr 0x9ff7fc0 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9ff0a50 0x9bc4510 0x9bc7dd0)
        (CXXDependentScopeMemberExpr 0x9ff7ee8 <col:9, col:17> '<dependent type>' lvalue
          (MemberExpr 0x9ff7ec8 <col:9> 'struct std::_Bvector_base::_Bvector_impl' lvalue ->_M_impl 0x9ff7190
            (CXXThisExpr 0x9ff7eb8 <col:9> '_Bvector_base<_Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0x9ff7f88 <col:37, col:54> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9ff7f50 <col:37, col:45> '<dependent type>' lvalue
            (MemberExpr 0x9ff7f30 <col:37> 'struct std::_Bvector_base::_Bvector_impl' lvalue ->_M_impl 0x9ff7190
              (CXXThisExpr 0x9ff7f20 <col:37> '_Bvector_base<_Alloc> *' this))))))
    <<<NULL>>>))


    };
}
namespace std {
    class vector : protected _Bvector_base<_Alloc> {
        class vector;
        typedef _Bvector_base<_Alloc> _Base;
    public:
    public:
        typedef bool value_type;
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef std::_Bit_reference reference;
        typedef bool const_reference;
        typedef std::_Bit_reference *pointer;
        typedef const bool *const_pointer;
        typedef std::_Bit_iterator iterator;
        typedef std::_Bit_const_iterator const_iterator;
        typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
        typedef std::reverse_iterator<iterator> reverse_iterator;
        typedef _Alloc allocator_type;
        allocator_type get_allocator() const (CompoundStmt 0x9ffdf00 </usr/include/c++/4.6/bits/stl_bvector.h:502:5, col:38>
  (ReturnStmt 0x9ffdef0 <col:7, col:35>
    (CallExpr 0x9ffded0 <col:14, col:35> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9ffde98 <col:14, col:21> '<dependent type>' lvalue))))


    protected:
    protected:
        using _Base::1;
        using _Base::1;
        using _Base::1;
    public:
    public:
        vector<_Bool, type-parameter-0-0>() : _Base() (CompoundStmt 0x9ffdf60 </usr/include/c++/4.6/bits/stl_bvector.h:511:15, col:17>)


        vector<_Bool, type-parameter-0-0>(const allocator_type &__a) : _Base((DeclRefExpr 0x9ffdf70 </usr/include/c++/4.6/bits/stl_bvector.h:515:13> 'const allocator_type':'const _Alloc' lvalue ParmVar 0x9ff8fc0 '__a' 'const allocator_type &')
) (CompoundStmt 0x9ffdfd0 </usr/include/c++/4.6/bits/stl_bvector.h:515:18, col:20>)


        vector<_Bool, type-parameter-0-0>(size_type __n, const bool &__value = (MaterializeTemporaryExpr 0x9ffddd0 </usr/include/c++/4.6/bits/stl_bvector.h:518:49, col:54> 'const _Bool' lvalue
  (CXXScalarValueInitExpr 0x9ffddc0 <col:49, col:54> '_Bool'))
, const allocator_type &__a = (CXXUnresolvedConstructExpr 0x9ffdde8 </usr/include/c++/4.6/bits/stl_bvector.h:519:33, col:48> 'allocator_type':'_Alloc')
) : _Base((DeclRefExpr 0x9ffdfe0 </usr/include/c++/4.6/bits/stl_bvector.h:520:13> 'const allocator_type':'const _Alloc' lvalue ParmVar 0x9ff9170 '__a' 'const allocator_type &')
) (CompoundStmt 0x9ffe310 </usr/include/c++/4.6/bits/stl_bvector.h:521:5, line:525:5>
  (CallExpr 0x9ffe0a0 <line:522:7, col:24> '<dependent type>'
    (MemberExpr 0x9ffe068 <col:7> '<bound member function type>' ->_M_initialize 0x9ffbb50
      (CXXThisExpr 0x9ffe058 <col:7> 'vector<_Bool, type-parameter-0-0> *' this))
    (DeclRefExpr 0x9ffe088 <col:21> 'size_type':'unsigned int' lvalue ParmVar 0x9ff90d0 '__n' 'size_type':'unsigned int'))
  (CallExpr 0x9ffe2e8 <line:523:7, line:524:19> '<dependent type>'
    (UnresolvedLookupExpr 0x9ffe0e8 <line:523:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9bf30e0 0x9ff5720)
    (CXXDependentScopeMemberExpr 0x9ffe1a0 <col:17, col:40> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9ffe168 <col:17, col:31> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0x9ffe130 <col:17, col:23> '<dependent type>' lvalue
          (CXXThisExpr 0x9ffe120 <col:17> 'vector<_Bool, type-parameter-0-0> *' this))))
    (CXXDependentScopeMemberExpr 0x9ffe220 <col:46, col:60> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9ffe1e8 <col:46, col:52> '<dependent type>' lvalue
        (CXXThisExpr 0x9ffe1d8 <col:46> 'vector<_Bool, type-parameter-0-0> *' this)))
    (ConditionalOperator 0x9ffe2c8 <line:524:3, col:18> 'int'
      (ImplicitCastExpr 0x9ffe2b8 <col:3> '_Bool' <LValueToRValue>
        (DeclRefExpr 0x9ffe254 <col:3> 'const _Bool' lvalue ParmVar 0x9ff9120 '__value' 'const _Bool &'))
      (UnaryOperator 0x9ffe288 <col:13, col:14> 'int' prefix '~'
        (IntegerLiteral 0x9ffe270 <col:14> 'int' 0))
      (IntegerLiteral 0x9ffe2a0 <col:18> 'int' 0))))


        vector<_Bool, type-parameter-0-0>(const vector<bool, type-parameter-0-0> &__x) : _Base((CallExpr 0x9ffe378 </usr/include/c++/4.6/bits/stl_bvector.h:528:13, col:38> '<dependent type>'
  (CXXDependentScopeMemberExpr 0x9ffe340 <col:13, col:17> '<dependent type>' lvalue
    (DeclRefExpr 0x9ffe328 <col:13> 'const vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0x9ff92e0 '__x' 'const vector<_Bool, type-parameter-0-0> &')))
) (CompoundStmt 0x9ffe658 </usr/include/c++/4.6/bits/stl_bvector.h:529:5, line:532:5>
  (CallExpr 0x9ffe480 <line:530:7, col:31> '<dependent type>'
    (MemberExpr 0x9ffe3f0 <col:7> '<bound member function type>' ->_M_initialize 0x9ffbb50
      (CXXThisExpr 0x9ffe3e0 <col:7> 'vector<_Bool, type-parameter-0-0> *' this))
    (CallExpr 0x9ffe460 <col:21, col:30> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9ffe428 <col:21, col:25> '<dependent type>' lvalue
        (DeclRefExpr 0x9ffe410 <col:21> 'const vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0x9ff92e0 '__x' 'const vector<_Bool, type-parameter-0-0> &'))))
  (CallExpr 0x9ffe630 <line:531:7, col:69> '<dependent type>'
    (MemberExpr 0x9ffe4b0 <col:7> '<bound member function type>' ->_M_copy_aligned 0x9ffba80
      (CXXThisExpr 0x9ffe4a0 <col:7> 'vector<_Bool, type-parameter-0-0> *' this))
    (CallExpr 0x9ffe520 <col:23, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9ffe4e8 <col:23, col:27> '<dependent type>' lvalue
        (DeclRefExpr 0x9ffe4d0 <col:23> 'const vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0x9ff92e0 '__x' 'const vector<_Bool, type-parameter-0-0> &')))
    (CallExpr 0x9ffe590 <col:36, col:44> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9ffe558 <col:36, col:40> '<dependent type>' lvalue
        (DeclRefExpr 0x9ffe53c <col:36> 'const vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0x9ff92e0 '__x' 'const vector<_Bool, type-parameter-0-0> &')))
    (CXXDependentScopeMemberExpr 0x9ffe5f8 <col:47, col:61> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9ffe5c0 <col:47, col:53> '<dependent type>' lvalue
        (CXXThisExpr 0x9ffe5b0 <col:47> 'vector<_Bool, type-parameter-0-0> *' this)))))


        template <typename _InputIterator> vector<_Bool, type-parameter-0-0>(_InputIterator __first, _InputIterator __last, const allocator_type &__a = (CXXUnresolvedConstructExpr 0x9ffde08 </usr/include/c++/4.6/bits/stl_bvector.h:549:35, col:50> 'allocator_type':'_Alloc')
) : _Base((DeclRefExpr 0x9ffe670 </usr/include/c++/4.6/bits/stl_bvector.h:550:15> 'const allocator_type':'const _Alloc' lvalue ParmVar 0x9ff94c0 '__a' 'const allocator_type &')
) (CompoundStmt 0x9ffe8e8 </usr/include/c++/4.6/bits/stl_bvector.h:551:7, line:554:7>
  (DeclStmt 0x9ffe800 <line:552:2, col:70>
    0x9ffe7d0 "typedef typename std::__is_integer<_InputIterator>::__type _Integral")
  (CallExpr 0x9ffe8c0 <line:553:2, col:53> '<dependent type>'
    (UnresolvedMemberExpr 0x9ffe820 <col:2> '<bound member function type>' lvalue)
    (DeclRefExpr 0x9ffe860 <col:25> '_InputIterator' lvalue ParmVar 0x9ff9430 '__first' '_InputIterator')
    (DeclRefExpr 0x9ffe878 <col:34> '_InputIterator' lvalue ParmVar 0x9ff9470 '__last' '_InputIterator')
    (CXXUnresolvedConstructExpr 0x9ffe8a8 <col:42, col:52> '_Integral':'typename std::__is_integer<_InputIterator>::__type')))

;
        void ~vector<_Bool, type-parameter-0-0>() (CompoundStmt 0x9ffe900 </usr/include/c++/4.6/bits/stl_bvector.h:556:15, col:17>)


        vector<bool, type-parameter-0-0> &operator=(const vector<bool, type-parameter-0-0> &__x) (CompoundStmt 0xa008768 </usr/include/c++/4.6/bits/stl_bvector.h:560:5, line:571:5>
  (IfStmt 0x9ffea58 <line:561:7, line:562:10>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9ffe9f8 <line:561:11, col:19> '<dependent type>'
      (UnresolvedLookupExpr 0x9ffe998 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30 0x9d5e270 0x9d5ece0 0x9d5f520 0x9d5fa90 0x9e73300 0x9fe87e0)
      (CXXOperatorCallExpr 0x9ffe968 <col:11, col:12> '<dependent type>'
        (UnresolvedLookupExpr 0x9ffe928 <col:11, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e0a5b0 0x9e0bdb0 0x9e0d020)
        (DeclRefExpr 0x9ffe910 <col:12> 'const vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0x9ff96e0 '__x' 'const vector<_Bool, type-parameter-0-0> &'))
      (CXXThisExpr 0x9ffe988 <col:19> 'vector<_Bool, type-parameter-0-0> *' this))
    (ReturnStmt 0x9ffea48 <line:562:2, col:10>
      (UnaryOperator 0x9ffea30 <col:9, col:10> '<dependent type>' prefix '*'
        (CXXThisExpr 0x9ffea20 <col:10> 'vector<_Bool, type-parameter-0-0> *' this)))
    <<<NULL>>>)
  (IfStmt 0x9ffecf0 <line:563:7, line:567:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9ffeb88 <line:563:11, col:33> '<dependent type>'
      (UnresolvedLookupExpr 0x9ffeb38 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bad330 0x9bc37b0 0x9bc6740 0x9d622b0 0x9d627e0 0x9d62d10 0x9fe9c10)
      (CallExpr 0x9ffeac8 <col:11, col:20> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ffea90 <col:11, col:15> '<dependent type>' lvalue
          (DeclRefExpr 0x9ffea74 <col:11> 'const vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0x9ff96e0 '__x' 'const vector<_Bool, type-parameter-0-0> &')))
      (CallExpr 0x9ffeb18 <col:24, col:33> '<dependent type>'
        (MemberExpr 0x9ffeaf8 <col:24> '<bound member function type>' ->capacity 0x9ffa110
          (CXXThisExpr 0x9ffeae8 <col:24> 'vector<_Bool, type-parameter-0-0> *' this))))
    (CompoundStmt 0x9ffecd8 <line:564:2, line:567:2>
      (CallExpr 0x9ffebf8 <line:565:4, col:24> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ffebc0 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x9ffebb0 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
      (CallExpr 0x9ffecb8 <line:566:4, col:28> '<dependent type>'
        (MemberExpr 0x9ffec28 <col:4> '<bound member function type>' ->_M_initialize 0x9ffbb50
          (CXXThisExpr 0x9ffec18 <col:4> 'vector<_Bool, type-parameter-0-0> *' this))
        (CallExpr 0x9ffec98 <col:18, col:27> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9ffec60 <col:18, col:22> '<dependent type>' lvalue
            (DeclRefExpr 0x9ffec48 <col:18> 'const vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0x9ff96e0 '__x' 'const vector<_Bool, type-parameter-0-0> &')))))
    <<<NULL>>>)
  (BinaryOperator 0xa008718 <line:568:7, line:569:14> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x9ffed58 <line:568:7, col:21> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9ffed20 <col:7, col:13> '<dependent type>' lvalue
        (CXXThisExpr 0x9ffed10 <col:7> 'vector<_Bool, type-parameter-0-0> *' this)))
    (CallExpr 0xa0086f0 <col:33, line:569:14> '<dependent type>'
      (MemberExpr 0xa008580 <line:568:33> '<bound member function type>' ->_M_copy_aligned 0x9ffba80
        (CXXThisExpr 0x9ffed90 <col:33> 'vector<_Bool, type-parameter-0-0> *' this))
      (CallExpr 0xa0085f0 <col:49, col:59> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa0085b8 <col:49, col:53> '<dependent type>' lvalue
          (DeclRefExpr 0xa0085a0 <col:49> 'const vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0x9ff96e0 '__x' 'const vector<_Bool, type-parameter-0-0> &')))
      (CallExpr 0xa008660 <col:62, col:70> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa008628 <col:62, col:66> '<dependent type>' lvalue
          (DeclRefExpr 0xa00860c <col:62> 'const vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0x9ff96e0 '__x' 'const vector<_Bool, type-parameter-0-0> &')))
      (CallExpr 0xa0086d0 <line:569:7, col:13> '<dependent type>'
        (UnresolvedMemberExpr 0xa008690 <col:7> '<bound member function type>' lvalue))))
  (ReturnStmt 0xa008758 <line:570:7, col:15>
    (UnaryOperator 0xa008740 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa008730 <col:15> 'vector<_Bool, type-parameter-0-0> *' this))))


        void assign(size_type __n, const bool &__x) (CompoundStmt 0xa008810 </usr/include/c++/4.6/bits/stl_bvector.h:598:5, col:33>
  (CallExpr 0xa0087e8 <col:7, col:30> '<dependent type>'
    (MemberExpr 0xa008798 <col:7> '<bound member function type>' ->_M_fill_assign 0x9ffc960
      (CXXThisExpr 0xa008788 <col:7> 'vector<_Bool, type-parameter-0-0> *' this))
    (DeclRefExpr 0xa0087b8 <col:22> 'size_type':'unsigned int' lvalue ParmVar 0x9ff97f0 '__n' 'size_type':'unsigned int')
    (DeclRefExpr 0xa0087d0 <col:27> 'const _Bool' lvalue ParmVar 0x9ff9840 '__x' 'const _Bool &')))


        template <typename _InputIterator> void assign(_InputIterator __first, _InputIterator __last) (CompoundStmt 0xa008a38 </usr/include/c++/4.6/bits/stl_bvector.h:603:7, line:606:7>
  (DeclStmt 0xa008950 <line:604:2, col:70>
    0xa008920 "typedef typename std::__is_integer<_InputIterator>::__type _Integral")
  (CallExpr 0xa008a10 <line:605:2, col:49> '<dependent type>'
    (UnresolvedMemberExpr 0xa008970 <col:2> '<bound member function type>' lvalue)
    (DeclRefExpr 0xa0089b0 <col:21> '_InputIterator' lvalue ParmVar 0x9ff99b0 '__first' '_InputIterator')
    (DeclRefExpr 0xa0089c8 <col:30> '_InputIterator' lvalue ParmVar 0x9ff99f0 '__last' '_InputIterator')
    (CXXUnresolvedConstructExpr 0xa0089f8 <col:38, col:48> '_Integral':'typename std::__is_integer<_InputIterator>::__type')))

;
        iterator begin() (CompoundStmt 0xa008ae0 </usr/include/c++/4.6/bits/stl_bvector.h:616:5, col:38>
  (ReturnStmt 0xa008ad0 <col:7, col:28>
    (CXXDependentScopeMemberExpr 0xa008a98 <col:14, col:28> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa008a60 <col:14, col:20> '<dependent type>' lvalue
        (CXXThisExpr 0xa008a50 <col:14> 'vector<_Bool, type-parameter-0-0> *' this)))))


        const_iterator begin() const (CompoundStmt 0xa008b88 </usr/include/c++/4.6/bits/stl_bvector.h:620:5, col:38>
  (ReturnStmt 0xa008b78 <col:7, col:28>
    (CXXDependentScopeMemberExpr 0xa008b40 <col:14, col:28> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa008b08 <col:14, col:20> '<dependent type>' lvalue
        (CXXThisExpr 0xa008af8 <col:14> 'const vector<_Bool, type-parameter-0-0> *' this)))))


        iterator end() (CompoundStmt 0xa008c30 </usr/include/c++/4.6/bits/stl_bvector.h:624:5, col:39>
  (ReturnStmt 0xa008c20 <col:7, col:28>
    (CXXDependentScopeMemberExpr 0xa008be8 <col:14, col:28> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa008bb0 <col:14, col:20> '<dependent type>' lvalue
        (CXXThisExpr 0xa008ba0 <col:14> 'vector<_Bool, type-parameter-0-0> *' this)))))


        const_iterator end() const (CompoundStmt 0xa008cd8 </usr/include/c++/4.6/bits/stl_bvector.h:628:5, col:39>
  (ReturnStmt 0xa008cc8 <col:7, col:28>
    (CXXDependentScopeMemberExpr 0xa008c90 <col:14, col:28> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa008c58 <col:14, col:20> '<dependent type>' lvalue
        (CXXThisExpr 0xa008c48 <col:14> 'const vector<_Bool, type-parameter-0-0> *' this)))))


        reverse_iterator rbegin() (CompoundStmt 0xa00bc60 </usr/include/c++/4.6/bits/stl_bvector.h:632:5, col:39>
  (ReturnStmt 0xa00bc50 <col:7, col:36>
    (CXXConstructExpr 0xa00bc28 <col:14, col:36> 'reverse_iterator':'class std::reverse_iterator<struct std::_Bit_iterator>''void (const class std::reverse_iterator<struct std::_Bit_iterator> &)' elidable
      (MaterializeTemporaryExpr 0xa00bc18 <col:14, col:36> 'const class std::reverse_iterator<struct std::_Bit_iterator>' lvalue
        (ImplicitCastExpr 0xa00bc08 <col:14, col:36> 'const class std::reverse_iterator<struct std::_Bit_iterator>' <NoOp>
          (CXXUnresolvedConstructExpr 0xa00b9d8 <col:14, col:36> 'reverse_iterator':'class std::reverse_iterator<struct std::_Bit_iterator>'
            (CallExpr 0xa00b9b8 <col:31, col:35> '<dependent type>'
              (UnresolvedMemberExpr 0xa00b978 <col:31> '<bound member function type>' lvalue))))))))


        const_reverse_iterator rbegin() const (CompoundStmt 0xa00ebc0 </usr/include/c++/4.6/bits/stl_bvector.h:636:5, col:45>
  (ReturnStmt 0xa00ebb0 <col:7, col:42>
    (CXXConstructExpr 0xa00eb88 <col:14, col:42> 'const_reverse_iterator':'class std::reverse_iterator<struct std::_Bit_const_iterator>''void (const class std::reverse_iterator<struct std::_Bit_const_iterator> &)' elidable
      (MaterializeTemporaryExpr 0xa00eb78 <col:14, col:42> 'const class std::reverse_iterator<struct std::_Bit_const_iterator>' lvalue
        (ImplicitCastExpr 0xa00eb68 <col:14, col:42> 'const class std::reverse_iterator<struct std::_Bit_const_iterator>' <NoOp>
          (CXXUnresolvedConstructExpr 0xa00e938 <col:14, col:42> 'const_reverse_iterator':'class std::reverse_iterator<struct std::_Bit_const_iterator>'
            (CallExpr 0xa00e918 <col:37, col:41> '<dependent type>'
              (UnresolvedMemberExpr 0xa00e8d8 <col:37> '<bound member function type>' lvalue))))))))


        reverse_iterator rend() (CompoundStmt 0xa00ed18 </usr/include/c++/4.6/bits/stl_bvector.h:640:5, col:41>
  (ReturnStmt 0xa00ed08 <col:7, col:38>
    (CXXConstructExpr 0xa00ece0 <col:14, col:38> 'reverse_iterator':'class std::reverse_iterator<struct std::_Bit_iterator>''void (const class std::reverse_iterator<struct std::_Bit_iterator> &)' elidable
      (MaterializeTemporaryExpr 0xa00ecd0 <col:14, col:38> 'const class std::reverse_iterator<struct std::_Bit_iterator>' lvalue
        (ImplicitCastExpr 0xa00ecc0 <col:14, col:38> 'const class std::reverse_iterator<struct std::_Bit_iterator>' <NoOp>
          (CXXUnresolvedConstructExpr 0xa00ec50 <col:14, col:38> 'reverse_iterator':'class std::reverse_iterator<struct std::_Bit_iterator>'
            (CallExpr 0xa00ec30 <col:31, col:37> '<dependent type>'
              (UnresolvedMemberExpr 0xa00ebf0 <col:31> '<bound member function type>' lvalue))))))))


        const_reverse_iterator rend() const (CompoundStmt 0xa00ee70 </usr/include/c++/4.6/bits/stl_bvector.h:644:5, col:47>
  (ReturnStmt 0xa00ee60 <col:7, col:44>
    (CXXConstructExpr 0xa00ee38 <col:14, col:44> 'const_reverse_iterator':'class std::reverse_iterator<struct std::_Bit_const_iterator>''void (const class std::reverse_iterator<struct std::_Bit_const_iterator> &)' elidable
      (MaterializeTemporaryExpr 0xa00ee28 <col:14, col:44> 'const class std::reverse_iterator<struct std::_Bit_const_iterator>' lvalue
        (ImplicitCastExpr 0xa00ee18 <col:14, col:44> 'const class std::reverse_iterator<struct std::_Bit_const_iterator>' <NoOp>
          (CXXUnresolvedConstructExpr 0xa00eda8 <col:14, col:44> 'const_reverse_iterator':'class std::reverse_iterator<struct std::_Bit_const_iterator>'
            (CallExpr 0xa00ed88 <col:37, col:43> '<dependent type>'
              (UnresolvedMemberExpr 0xa00ed48 <col:37> '<bound member function type>' lvalue))))))))


        size_type size() const (CompoundStmt 0xa00f008 </usr/include/c++/4.6/bits/stl_bvector.h:666:5, col:42>
  (ReturnStmt 0xa00eff8 <col:7, col:39>
    (CXXUnresolvedConstructExpr 0xa00efd8 <col:14, col:39> 'size_type':'unsigned int'
      (CXXOperatorCallExpr 0xa00efb0 <col:24, col:38> '<dependent type>'
        (UnresolvedLookupExpr 0xa00ef70 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0 0x9ff0a50)
        (CallExpr 0xa00eee0 <col:24, col:28> '<dependent type>'
          (UnresolvedMemberExpr 0xa00eea0 <col:24> '<bound member function type>' lvalue))
        (CallExpr 0xa00ef50 <col:32, col:38> '<dependent type>'
          (UnresolvedMemberExpr 0xa00ef10 <col:32> '<bound member function type>' lvalue))))))


        size_type max_size() const (CompoundStmt 0xa00f4e8 </usr/include/c++/4.6/bits/stl_bvector.h:670:5, line:677:5>
  (DeclStmt 0xa00f1e8 <line:671:7, line:673:24>
    0xa00f030 "const size_type __isize =
      (ImplicitCastExpr 0xa00f1d8 <line:672:2, line:673:23> 'const size_type':'const unsigned int' <IntegralCast>
        (BinaryOperator 0xa00f1c0 <line:672:2, line:673:23> 'int' '+'
          (BinaryOperator 0xa00f190 <line:672:2, line:673:19> 'int' '-'
            (ImplicitCastExpr 0xa00f180 <line:672:2, col:48> 'int':'int' <LValueToRValue>
              (DeclRefExpr 0xa00f110 <col:2, col:48> 'const int':'const int' lvalue Var 0x9d4cfe0 '__max' 'const int':'const int'))
            (CXXFunctionalCastExpr 0xa00f168 <line:673:4, col:19> 'int' functional cast to int <NoOp>
              (ImplicitCastExpr 0xa00f158 <col:8> 'int' <IntegralCast>
                (DeclRefExpr 0xa00f13c <col:8> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x9feaf10 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>'))))
          (IntegerLiteral 0xa00f1a8 <col:23> 'int' 1)))")
  (DeclStmt 0xa00f2e8 <line:674:7, col:66>
    0xa00f200 "const size_type __asize =
      (CallExpr 0xa00f2c8 <col:33, col:65> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa00f290 <col:33, col:56> '<dependent type>' lvalue
          (CallExpr 0xa00f270 <col:33, col:54> '<dependent type>'
            (UnresolvedMemberExpr 0xa00f234 <col:33> '<dependent type>' lvalue))))")
  (ReturnStmt 0xa00f4d8 <line:675:7, line:676:46>
    (ParenExpr 0xa00f4c0 <line:675:14, line:676:46> 'unsigned int'
      (ConditionalOperator 0xa00f4a0 <line:675:15, line:676:39> 'unsigned int'
        (BinaryOperator 0xa00f3c0 <line:675:15, col:51> '_Bool' '<='
          (ImplicitCastExpr 0xa00f3b0 <col:15> 'size_type':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0xa00f2f8 <col:15> 'const size_type':'const unsigned int' lvalue Var 0xa00f200 '__asize' 'const size_type':'const unsigned int'))
          (BinaryOperator 0xa00f398 <col:26, col:51> 'unsigned int' '/'
            (ImplicitCastExpr 0xa00f378 <col:26> 'size_type':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0xa00f310 <col:26> 'const size_type':'const unsigned int' lvalue Var 0xa00f030 '__isize' 'const size_type':'const unsigned int'))
            (ImplicitCastExpr 0xa00f388 <col:36, col:51> 'unsigned int' <IntegralCast>
              (CXXFunctionalCastExpr 0xa00f360 <col:36, col:51> 'int' functional cast to int <NoOp>
                (ImplicitCastExpr 0xa00f350 <col:40> 'int' <IntegralCast>
                  (DeclRefExpr 0xa00f334 <col:40> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x9feaf10 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>'))))))
        (BinaryOperator 0xa00f460 <line:676:10, col:35> 'unsigned int' '*'
          (ImplicitCastExpr 0xa00f440 <col:10> 'size_type':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0xa00f3d8 <col:10> 'const size_type':'const unsigned int' lvalue Var 0xa00f200 '__asize' 'const size_type':'const unsigned int'))
          (ImplicitCastExpr 0xa00f450 <col:20, col:35> 'unsigned int' <IntegralCast>
            (CXXFunctionalCastExpr 0xa00f428 <col:20, col:35> 'int' functional cast to int <NoOp>
              (ImplicitCastExpr 0xa00f418 <col:24> 'int' <IntegralCast>
                (DeclRefExpr 0xa00f3fc <col:24> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x9feaf10 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))
        (ImplicitCastExpr 0xa00f490 <col:39> 'size_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa00f478 <col:39> 'const size_type':'const unsigned int' lvalue Var 0xa00f030 '__isize' 'const size_type':'const unsigned int'))))))


        size_type capacity() const (CompoundStmt 0xa00f6d8 </usr/include/c++/4.6/bits/stl_bvector.h:681:5, line:682:22>
  (ReturnStmt 0xa00f6c8 <line:681:7, line:682:19>
    (CXXUnresolvedConstructExpr 0xa00f6a8 <line:681:14, line:682:19> 'size_type':'unsigned int'
      (CXXOperatorCallExpr 0xa00f680 <line:681:24, line:682:18> '<dependent type>'
        (UnresolvedLookupExpr 0xa00f640 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0 0x9ff0a50)
        (CXXUnresolvedConstructExpr 0xa00f5b0 <line:681:24, col:73> 'const_iterator':'struct std::_Bit_const_iterator'
          (CXXDependentScopeMemberExpr 0xa00f560 <col:39, col:53> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa00f528 <col:39, col:45> '<dependent type>' lvalue
              (CXXThisExpr 0xa00f518 <col:39> 'const vector<_Bool, type-parameter-0-0> *' this)))
          (IntegerLiteral 0xa00f598 <col:72> 'int' 0))
        (CallExpr 0xa00f620 <line:682:12, col:18> '<dependent type>'
          (UnresolvedMemberExpr 0xa00f5e0 <col:12> '<bound member function type>' lvalue))))))


        bool empty() const (CompoundStmt 0xa00f868 </usr/include/c++/4.6/bits/stl_bvector.h:686:5, col:32>
  (ReturnStmt 0xa00f858 <col:7, col:29>
    (CXXOperatorCallExpr 0xa00f830 <col:14, col:29> '<dependent type>'
      (UnresolvedLookupExpr 0xa00f7d0 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30 0x9d5e270 0x9d5ece0 0x9d5f520 0x9d5fa90 0x9e73300 0x9fe87e0)
      (CallExpr 0xa00f740 <col:14, col:20> '<dependent type>'
        (UnresolvedMemberExpr 0xa00f700 <col:14> '<bound member function type>' lvalue))
      (CallExpr 0xa00f7b0 <col:25, col:29> '<dependent type>'
        (UnresolvedMemberExpr 0xa00f770 <col:25> '<bound member function type>' lvalue)))))


        reference operator[](size_type __n) (CompoundStmt 0xa00fbc8 </usr/include/c++/4.6/bits/stl_bvector.h:690:5, line:693:5>
  (ReturnStmt 0xa00fbb8 <line:691:7, line:692:58>
    (CXXConstructExpr 0xa00fb90 <line:691:14, line:692:58> 'reference':'struct std::_Bit_reference''void (const struct std::_Bit_reference &) throw()' elidable
      (MaterializeTemporaryExpr 0xa00fb80 <line:691:14, line:692:58> 'const struct std::_Bit_reference' lvalue
        (ImplicitCastExpr 0xa00fb70 <line:691:14, line:692:58> 'const struct std::_Bit_reference' <NoOp>
          (CXXOperatorCallExpr 0xa00fb50 <line:691:14, line:692:58> 'reference':'struct std::_Bit_reference'
            (ImplicitCastExpr 0xa00fb40 <<invalid sloc>> 'reference (*)(void) const' <FunctionToPointerDecay>
              (DeclRefExpr 0xa00fb28 <<invalid sloc>> 'reference (void) const' lvalue CXXMethod 0x9ff1150 'operator*' 'reference (void) const'))
            (ImplicitCastExpr 0xa00fb18 <line:691:15, line:692:58> 'const struct std::_Bit_iterator' lvalue <NoOp>
              (CXXUnresolvedConstructExpr 0xa00faf8 <line:691:15, line:692:58> 'iterator':'struct std::_Bit_iterator'
                (CXXOperatorCallExpr 0xa00fa30 <line:691:24, line:692:33> '<dependent type>'
                  (UnresolvedLookupExpr 0xa00f9e0 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d86680 0x9d87280 0x9d5d090 0x9d5d890 0x9ff2ef0 0x9ff5070)
                  (CXXDependentScopeMemberExpr 0xa00f908 <line:691:24, col:47> '<dependent type>' lvalue
                    (CXXDependentScopeMemberExpr 0xa00f8d0 <col:24, col:38> '<dependent type>' lvalue
                      (CXXDependentScopeMemberExpr 0xa00f898 <col:24, col:30> '<dependent type>' lvalue
                        (CXXThisExpr 0xa00f888 <col:24> 'vector<_Bool, type-parameter-0-0> *' this))))
                  (BinaryOperator 0xa00f9c8 <line:692:12, col:33> 'unsigned int' '/'
                    (ImplicitCastExpr 0xa00f9a8 <col:12> 'size_type':'unsigned int' <LValueToRValue>
                      (DeclRefExpr 0xa00f93c <col:12> 'size_type':'unsigned int' lvalue ParmVar 0x9ffa210 '__n' 'size_type':'unsigned int'))
                    (ImplicitCastExpr 0xa00f9b8 <col:18, col:33> 'unsigned int' <IntegralCast>
                      (CXXFunctionalCastExpr 0xa00f990 <col:18, col:33> 'int' functional cast to int <NoOp>
                        (ImplicitCastExpr 0xa00f980 <col:22> 'int' <IntegralCast>
                          (DeclRefExpr 0xa00f964 <col:22> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x9feaf10 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>'))))))
                (BinaryOperator 0xa00fae0 <col:36, col:57> 'unsigned int' '%'
                  (ImplicitCastExpr 0xa00fac0 <col:36> 'size_type':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0xa00fa54 <col:36> 'size_type':'unsigned int' lvalue ParmVar 0x9ffa210 '__n' 'size_type':'unsigned int'))
                  (ImplicitCastExpr 0xa00fad0 <col:42, col:57> 'unsigned int' <IntegralCast>
                    (CXXFunctionalCastExpr 0xa00faa8 <col:42, col:57> 'int' functional cast to int <NoOp>
                      (ImplicitCastExpr 0xa00fa98 <col:46> 'int' <IntegralCast>
                        (DeclRefExpr 0xa00fa7c <col:46> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x9feaf10 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))))))))))


        const_reference operator[](size_type __n) const (CompoundStmt 0xa00fee0 </usr/include/c++/4.6/bits/stl_bvector.h:697:5, line:700:5>
  (ReturnStmt 0xa00fed0 <line:698:7, line:699:57>
    (CXXOperatorCallExpr 0xa00feb0 <line:698:14, line:699:57> 'const_reference':'_Bool'
      (ImplicitCastExpr 0xa00fea0 <<invalid sloc>> 'const_reference (*)(void) const' <FunctionToPointerDecay>
        (DeclRefExpr 0xa00fe88 <<invalid sloc>> 'const_reference (void) const' lvalue CXXMethod 0x9ff35c0 'operator*' 'const_reference (void) const'))
      (ImplicitCastExpr 0xa00fe78 <line:698:15, line:699:57> 'const struct std::_Bit_const_iterator' lvalue <NoOp>
        (CXXUnresolvedConstructExpr 0xa00fe58 <line:698:15, line:699:57> 'const_iterator':'struct std::_Bit_const_iterator'
          (CXXOperatorCallExpr 0xa00fd90 <line:698:30, line:699:32> '<dependent type>'
            (UnresolvedLookupExpr 0xa00fd40 <col:9, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d86680 0x9d87280 0x9d5d090 0x9d5d890 0x9ff2ef0 0x9ff5070)
            (CXXDependentScopeMemberExpr 0xa00fc68 <line:698:30, col:53> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa00fc30 <col:30, col:44> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa00fbf8 <col:30, col:36> '<dependent type>' lvalue
                  (CXXThisExpr 0xa00fbe8 <col:30> 'const vector<_Bool, type-parameter-0-0> *' this))))
            (BinaryOperator 0xa00fd28 <line:699:11, col:32> 'unsigned int' '/'
              (ImplicitCastExpr 0xa00fd08 <col:11> 'size_type':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0xa00fc9c <col:11> 'size_type':'unsigned int' lvalue ParmVar 0x9ffa340 '__n' 'size_type':'unsigned int'))
              (ImplicitCastExpr 0xa00fd18 <col:17, col:32> 'unsigned int' <IntegralCast>
                (CXXFunctionalCastExpr 0xa00fcf0 <col:17, col:32> 'int' functional cast to int <NoOp>
                  (ImplicitCastExpr 0xa00fce0 <col:21> 'int' <IntegralCast>
                    (DeclRefExpr 0xa00fcc4 <col:21> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x9feaf10 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>'))))))
          (BinaryOperator 0xa00fe40 <col:35, col:56> 'unsigned int' '%'
            (ImplicitCastExpr 0xa00fe20 <col:35> 'size_type':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0xa00fdb4 <col:35> 'size_type':'unsigned int' lvalue ParmVar 0x9ffa340 '__n' 'size_type':'unsigned int'))
            (ImplicitCastExpr 0xa00fe30 <col:41, col:56> 'unsigned int' <IntegralCast>
              (CXXFunctionalCastExpr 0xa00fe08 <col:41, col:56> 'int' functional cast to int <NoOp>
                (ImplicitCastExpr 0xa00fdf8 <col:45> 'int' <IntegralCast>
                  (DeclRefExpr 0xa00fddc <col:45> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x9feaf10 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>'))))))))))


    protected:
    protected:
        void _M_range_check(size_type __n) const (CompoundStmt 0xa0100f0 </usr/include/c++/4.6/bits/stl_bvector.h:705:5, line:708:5>
  (IfStmt 0xa0100d0 <line:706:7, line:707:65>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa00ffc8 <line:706:11, col:29> '<dependent type>'
      (UnresolvedLookupExpr 0xa00ff78 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bae1e0 0x9bc3fc0 0x9bc7850 0x9d64480 0x9d649b0 0x9d64ee0 0x9fea6a0)
      (DeclRefExpr 0xa00fef4 <col:11> 'size_type':'unsigned int' lvalue ParmVar 0x9ffa4a0 '__n' 'size_type':'unsigned int')
      (CallExpr 0xa00ff58 <col:18, col:29> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa00ff20 <col:18, col:24> '<dependent type>' lvalue
          (CXXThisExpr 0xa00ff10 <col:18> 'const vector<_Bool, type-parameter-0-0> *' this))))
    (CallExpr 0xa0100a0 <line:707:9, col:65> 'void'
      (ImplicitCastExpr 0xa010090 <col:9> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0xa010074 <col:9> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9b766b0 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa0100c0 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0xa010060 <col:24, col:30> 'const char [29]' lvalue
          (StringLiteral 0xa010024 </usr/include/c++/4.6/bits/stl_bvector.h:707:34> 'const char [29]' lvalue "vector<bool>::_M_range_check"))))
    <<<NULL>>>))


    public:
    public:
        reference at(size_type __n) (CompoundStmt 0xa0101f0 </usr/include/c++/4.6/bits/stl_bvector.h:713:5, col:49>
  (CallExpr 0xa010150 <col:7, col:25> '<dependent type>'
    (MemberExpr 0xa010118 <col:7> '<bound member function type>' ->_M_range_check 0x9ffa520
      (CXXThisExpr 0xa010108 <col:7> 'vector<_Bool, type-parameter-0-0> *' this))
    (DeclRefExpr 0xa010138 <col:22> 'size_type':'unsigned int' lvalue ParmVar 0x9ffa5e0 '__n' 'size_type':'unsigned int'))
  (ReturnStmt 0xa0101e0 <col:28, col:46>
    (ArraySubscriptExpr 0xa0101c8 <col:35, col:46> '<dependent type>' lvalue
      (ParenExpr 0xa010198 <col:35, col:41> '<dependent type>'
        (UnaryOperator 0xa010180 <col:36, col:37> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa010170 <col:37> 'vector<_Bool, type-parameter-0-0> *' this)))
      (DeclRefExpr 0xa0101ac <col:43> 'size_type':'unsigned int' lvalue ParmVar 0x9ffa5e0 '__n' 'size_type':'unsigned int'))))


        const_reference at(size_type __n) const (CompoundStmt 0xa0102f0 </usr/include/c++/4.6/bits/stl_bvector.h:717:5, col:49>
  (CallExpr 0xa010250 <col:7, col:25> '<dependent type>'
    (MemberExpr 0xa010218 <col:7> '<bound member function type>' ->_M_range_check 0x9ffa520
      (CXXThisExpr 0xa010208 <col:7> 'const vector<_Bool, type-parameter-0-0> *' this))
    (DeclRefExpr 0xa010238 <col:22> 'size_type':'unsigned int' lvalue ParmVar 0x9ffa6a0 '__n' 'size_type':'unsigned int'))
  (ReturnStmt 0xa0102e0 <col:28, col:46>
    (ArraySubscriptExpr 0xa0102c8 <col:35, col:46> '<dependent type>' lvalue
      (ParenExpr 0xa010298 <col:35, col:41> '<dependent type>'
        (UnaryOperator 0xa010280 <col:36, col:37> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa010270 <col:37> 'const vector<_Bool, type-parameter-0-0> *' this)))
      (DeclRefExpr 0xa0102ac <col:43> 'size_type':'unsigned int' lvalue ParmVar 0x9ffa6a0 '__n' 'size_type':'unsigned int'))))


        void reserve(size_type __n);
        reference front() (CompoundStmt 0xa0103a0 </usr/include/c++/4.6/bits/stl_bvector.h:724:5, col:24>
  (ReturnStmt 0xa010390 <col:7, col:21>
    (UnaryOperator 0xa010378 <col:14, col:21> '<dependent type>' prefix '*'
      (CallExpr 0xa010358 <col:15, col:21> '<dependent type>'
        (UnresolvedMemberExpr 0xa010318 <col:15> '<bound member function type>' lvalue)))))


        const_reference front() const (CompoundStmt 0xa010450 </usr/include/c++/4.6/bits/stl_bvector.h:728:5, col:24>
  (ReturnStmt 0xa010440 <col:7, col:21>
    (UnaryOperator 0xa010428 <col:14, col:21> '<dependent type>' prefix '*'
      (CallExpr 0xa010408 <col:15, col:21> '<dependent type>'
        (UnresolvedMemberExpr 0xa0103c8 <col:15> '<bound member function type>' lvalue)))))


        reference back() (CompoundStmt 0xa012cb8 </usr/include/c++/4.6/bits/stl_bvector.h:732:5, col:28>
  (ReturnStmt 0xa012ca8 <col:7, col:25>
    (UnaryOperator 0xa012c90 <col:14, col:25> '<dependent type>' prefix '*'
      (ParenExpr 0xa010558 <col:15, col:25> '<dependent type>'
        (CXXOperatorCallExpr 0xa010530 <col:16, col:24> '<dependent type>'
          (UnresolvedLookupExpr 0xa0104f0 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0 0x9ff0a50)
          (CallExpr 0xa0104b8 <col:16, col:20> '<dependent type>'
            (UnresolvedMemberExpr 0xa010478 <col:16> '<bound member function type>' lvalue))
          (IntegerLiteral 0xa0104d8 <col:24> 'int' 1))))))


        const_reference back() const (CompoundStmt 0xa012e00 </usr/include/c++/4.6/bits/stl_bvector.h:736:5, col:28>
  (ReturnStmt 0xa012df0 <col:7, col:25>
    (UnaryOperator 0xa012dd8 <col:14, col:25> '<dependent type>' prefix '*'
      (ParenExpr 0xa012dc0 <col:15, col:25> '<dependent type>'
        (CXXOperatorCallExpr 0xa012d98 <col:16, col:24> '<dependent type>'
          (UnresolvedLookupExpr 0xa012d58 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0 0x9ff0a50)
          (CallExpr 0xa012d20 <col:16, col:20> '<dependent type>'
            (UnresolvedMemberExpr 0xa012ce0 <col:16> '<bound member function type>' lvalue))
          (IntegerLiteral 0xa012d40 <col:24> 'int' 1))))))


        void data() (CompoundStmt 0xa012e18 </usr/include/c++/4.6/bits/stl_bvector.h:744:12, col:14>)


        void push_back(bool __x) (CompoundStmt 0xa0131e0 </usr/include/c++/4.6/bits/stl_bvector.h:748:5, line:753:5>
  (IfStmt 0xa0131c0 <line:749:7, line:752:33>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa012fc0 <line:749:11, col:57> '<dependent type>'
      (UnresolvedLookupExpr 0xa012f60 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bacde0 0x9bc3130 0x9bc62c0 0x9c11360 0x9c32300 0x9c32670 0x9d60120 0x9d60630 0x9d60b40 0x9e73820 0x9fe96a0)
      (CXXDependentScopeMemberExpr 0xa012ea8 <col:11, col:35> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa012e70 <col:11, col:25> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa012e38 <col:11, col:17> '<dependent type>' lvalue
            (CXXThisExpr 0xa012e28 <col:11> 'vector<_Bool, type-parameter-0-0> *' this))))
      (CXXDependentScopeMemberExpr 0xa012f28 <col:43, col:57> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa012ef0 <col:43, col:49> '<dependent type>' lvalue
          (CXXThisExpr 0xa012ee0 <col:43> 'vector<_Bool, type-parameter-0-0> *' this))))
    (BinaryOperator 0xa0130c8 <line:750:9, col:38> '<dependent type>' '='
      (UnaryOperator 0xa013098 <col:9, col:33> '<dependent type>' prefix '*'
        (UnaryOperator 0xa013080 <col:10, col:33> '<dependent type>' postfix '++'
          (CXXDependentScopeMemberExpr 0xa013030 <col:10, col:24> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa012ff8 <col:10, col:16> '<dependent type>' lvalue
              (CXXThisExpr 0xa012fe8 <col:10> 'vector<_Bool, type-parameter-0-0> *' this)))))
      (DeclRefExpr 0xa0130ac <col:38> '_Bool' lvalue ParmVar 0x9ffab20 '__x' '_Bool'))
    (CallExpr 0xa013198 <line:752:9, col:33> '<dependent type>'
      (MemberExpr 0xa0130f0 <col:9> '<bound member function type>' ->_M_insert_aux 0x9ffdb00
        (CXXThisExpr 0xa0130e0 <col:9> 'vector<_Bool, type-parameter-0-0> *' this))
      (CallExpr 0xa013160 <col:23, col:27> '<dependent type>'
        (UnresolvedMemberExpr 0xa013120 <col:23> '<bound member function type>' lvalue))
      (DeclRefExpr 0xa01317c <col:30> '_Bool' lvalue ParmVar 0x9ffab20 '__x' '_Bool'))))


        void swap(vector<bool, type-parameter-0-0> &__x) (CompoundStmt 0xa0139e0 </usr/include/c++/4.6/bits/stl_bvector.h:757:5, line:767:5>
  (CallExpr 0xa013360 <line:758:7, col:61> '<dependent type>'
    (UnresolvedLookupExpr 0xa013218 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9ba4660 0x9baa350 0x9d655a0 0x9feac40)
    (CXXDependentScopeMemberExpr 0xa0132a0 <col:17, col:31> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa013268 <col:17, col:23> '<dependent type>' lvalue
        (CXXThisExpr 0xa013258 <col:17> 'vector<_Bool, type-parameter-0-0> *' this)))
    (CXXDependentScopeMemberExpr 0xa013328 <col:41, col:53> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa0132f0 <col:41, col:45> '<dependent type>' lvalue
        (DeclRefExpr 0xa0132d4 <col:41> 'vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0x9ffac20 '__x' 'vector<_Bool, type-parameter-0-0> &'))))
  (CallExpr 0xa0134f0 <line:759:7, col:63> '<dependent type>'
    (UnresolvedLookupExpr 0xa0133a8 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9ba4660 0x9baa350 0x9d655a0 0x9feac40)
    (CXXDependentScopeMemberExpr 0xa013430 <col:17, col:31> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa0133f8 <col:17, col:23> '<dependent type>' lvalue
        (CXXThisExpr 0xa0133e8 <col:17> 'vector<_Bool, type-parameter-0-0> *' this)))
    (CXXDependentScopeMemberExpr 0xa0134b8 <col:42, col:54> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa013480 <col:42, col:46> '<dependent type>' lvalue
        (DeclRefExpr 0xa013464 <col:42> 'vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0x9ffac20 '__x' 'vector<_Bool, type-parameter-0-0> &'))))
  (CallExpr 0xa013680 <line:760:7, line:761:32> '<dependent type>'
    (UnresolvedLookupExpr 0xa013538 <line:760:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9ba4660 0x9baa350 0x9d655a0 0x9feac40)
    (CXXDependentScopeMemberExpr 0xa0135c0 <col:17, col:31> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa013588 <col:17, col:23> '<dependent type>' lvalue
        (CXXThisExpr 0xa013578 <col:17> 'vector<_Bool, type-parameter-0-0> *' this)))
    (CXXDependentScopeMemberExpr 0xa013648 <line:761:3, col:15> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa013610 <col:3, col:7> '<dependent type>' lvalue
        (DeclRefExpr 0xa0135f4 <col:3> 'vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0x9ffac20 '__x' 'vector<_Bool, type-parameter-0-0> &'))))
  (CallExpr 0xa0139b8 <line:765:7, line:766:61> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa0138b8 <line:765:7, line:766:2> '<dependent type>' lvalue)
    (CallExpr 0xa013928 <col:11, col:32> '<dependent type>'
      (UnresolvedMemberExpr 0xa0138ec <col:11> '<dependent type>' lvalue))
    (CallExpr 0xa013998 <col:35, col:60> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa013960 <col:35, col:39> '<dependent type>' lvalue
        (DeclRefExpr 0xa013944 <col:35> 'vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0x9ffac20 '__x' 'vector<_Bool, type-parameter-0-0> &')))))


        static void swap(reference __x, reference __y) (CompoundStmt 0xa013c20 </usr/include/c++/4.6/bits/stl_bvector.h:772:5, line:776:5>
  (DeclStmt 0xa013ac8 <line:773:7, col:23>
    0xa013a10 "bool __tmp =
      (ImplicitCastExpr 0xa013ab8 <col:20> '_Bool' <UserDefinedConversion>
        (CXXMemberCallExpr 0xa013a98 <col:20> '_Bool'
          (MemberExpr 0xa013a78 <col:20, <invalid sloc>> '_Bool (void) const' .operator _Bool 0x9feb340
            (ImplicitCastExpr 0xa013a68 <col:20> 'const struct std::_Bit_reference' lvalue <NoOp>
              (DeclRefExpr 0xa013a44 <col:20> 'reference':'struct std::_Bit_reference' lvalue ParmVar 0x9ffad10 '__x' 'reference':'struct std::_Bit_reference')))))")
  (CXXOperatorCallExpr 0xa013b68 <line:774:7, col:13> 'struct std::_Bit_reference' lvalue
    (ImplicitCastExpr 0xa013b58 <col:11, <invalid sloc>> 'struct std::_Bit_reference &(*)(const struct std::_Bit_reference &)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa013b20 <col:11, <invalid sloc>> 'struct std::_Bit_reference &(const struct std::_Bit_reference &)' lvalue CXXMethod 0x9feb570 'operator=' 'struct std::_Bit_reference &(const struct std::_Bit_reference &)'))
    (DeclRefExpr 0xa013ad8 <col:7> 'reference':'struct std::_Bit_reference' lvalue ParmVar 0x9ffad10 '__x' 'reference':'struct std::_Bit_reference')
    (ImplicitCastExpr 0xa013b10 <col:13> 'const struct std::_Bit_reference' lvalue <NoOp>
      (DeclRefExpr 0xa013af0 <col:13> 'reference':'struct std::_Bit_reference' lvalue ParmVar 0x9ffad50 '__y' 'reference':'struct std::_Bit_reference')))
  (CXXOperatorCallExpr 0xa013bf8 <line:775:7, col:13> 'struct std::_Bit_reference' lvalue
    (ImplicitCastExpr 0xa013be8 <col:11, <invalid sloc>> 'struct std::_Bit_reference &(*)(_Bool)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa013bd0 <col:11, <invalid sloc>> 'struct std::_Bit_reference &(_Bool)' lvalue CXXMethod 0x9feb450 'operator=' 'struct std::_Bit_reference &(_Bool)'))
    (DeclRefExpr 0xa013b8c <col:7> 'reference':'struct std::_Bit_reference' lvalue ParmVar 0x9ffad50 '__y' 'reference':'struct std::_Bit_reference')
    (ImplicitCastExpr 0xa013bc0 <col:13> '_Bool' <LValueToRValue>
      (DeclRefExpr 0xa013ba4 <col:13> '_Bool' lvalue Var 0xa013a10 '__tmp' '_Bool'))))


        iterator insert(iterator __position, const bool &__x = (MaterializeTemporaryExpr 0x9ffde38 </usr/include/c++/4.6/bits/stl_bvector.h:779:51, col:56> 'const _Bool' lvalue
  (CXXScalarValueInitExpr 0x9ffde28 <col:51, col:56> '_Bool'))
) (CompoundStmt 0xa014320 </usr/include/c++/4.6/bits/stl_bvector.h:780:5, line:788:5>
  (DeclStmt 0xa013d78 <line:781:7, col:55>
    0xa013c50 "const difference_type __n =
      (CXXOperatorCallExpr 0xa013d50 <col:35, col:54> '<dependent type>'
        (UnresolvedLookupExpr 0xa013d10 <col:46, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0 0x9ff0a50)
        (DeclRefExpr 0xa013c84 <col:35> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9ffae60 '__position' 'iterator':'struct std::_Bit_iterator')
        (CallExpr 0xa013cf0 <col:48, col:54> '<dependent type>'
          (UnresolvedMemberExpr 0xa013cb0 <col:48> '<bound member function type>' lvalue)))")
  (IfStmt 0xa0141f0 <line:782:7, line:786:38>
    <<<NULL>>>
    (BinaryOperator 0xa014058 <line:782:11, line:783:25> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0xa013f20 <line:782:11, col:57> '<dependent type>'
        (UnresolvedLookupExpr 0xa013ec0 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bacde0 0x9bc3130 0x9bc62c0 0x9c11360 0x9c32300 0x9c32670 0x9d60120 0x9d60630 0x9d60b40 0x9e73820 0x9fe96a0)
        (CXXDependentScopeMemberExpr 0xa013e08 <col:11, col:35> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa013dd0 <col:11, col:25> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa013d98 <col:11, col:17> '<dependent type>' lvalue
              (CXXThisExpr 0xa013d88 <col:11> 'vector<_Bool, type-parameter-0-0> *' this))))
        (CXXDependentScopeMemberExpr 0xa013e88 <col:43, col:57> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa013e50 <col:43, col:49> '<dependent type>' lvalue
            (CXXThisExpr 0xa013e40 <col:43> 'vector<_Bool, type-parameter-0-0> *' this))))
      (CXXOperatorCallExpr 0xa014030 <line:783:7, col:25> '<dependent type>'
        (UnresolvedLookupExpr 0xa013fd0 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30 0x9d5e270 0x9d5ece0 0x9d5f520 0x9d5fa90 0x9e73300 0x9fe87e0)
        (DeclRefExpr 0xa013f44 <col:7> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9ffae60 '__position' 'iterator':'struct std::_Bit_iterator')
        (CallExpr 0xa013fb0 <col:21, col:25> '<dependent type>'
          (UnresolvedMemberExpr 0xa013f70 <col:21> '<bound member function type>' lvalue))))
    (BinaryOperator 0xa014150 <line:784:9, col:38> '<dependent type>' '='
      (UnaryOperator 0xa014120 <col:9, col:33> '<dependent type>' prefix '*'
        (UnaryOperator 0xa014108 <col:10, col:33> '<dependent type>' postfix '++'
          (CXXDependentScopeMemberExpr 0xa0140b8 <col:10, col:24> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa014080 <col:10, col:16> '<dependent type>' lvalue
              (CXXThisExpr 0xa014070 <col:10> 'vector<_Bool, type-parameter-0-0> *' this)))))
      (DeclRefExpr 0xa014134 <col:38> 'const _Bool' lvalue ParmVar 0x9ffaeb0 '__x' 'const _Bool &'))
    (CallExpr 0xa0141c8 <line:786:9, col:38> '<dependent type>'
      (MemberExpr 0xa014178 <col:9> '<bound member function type>' ->_M_insert_aux 0x9ffdb00
        (CXXThisExpr 0xa014168 <col:9> 'vector<_Bool, type-parameter-0-0> *' this))
      (DeclRefExpr 0xa014198 <col:23> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9ffae60 '__position' 'iterator':'struct std::_Bit_iterator')
      (DeclRefExpr 0xa0141b0 <col:35> 'const _Bool' lvalue ParmVar 0x9ffaeb0 '__x' 'const _Bool &')))
  (ReturnStmt 0xa014310 <line:787:7, col:24>
    (CXXOperatorCallExpr 0xa0142e8 <col:14, col:24> '<dependent type>'
      (UnresolvedLookupExpr 0xa014298 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d86680 0x9d87280 0x9d5d090 0x9d5d890 0x9ff2ef0 0x9ff5070)
      (CallExpr 0xa014260 <col:14, col:20> '<dependent type>'
        (UnresolvedMemberExpr 0xa014220 <col:14> '<bound member function type>' lvalue))
      (DeclRefExpr 0xa01427c <col:24> 'const difference_type':'const int' lvalue Var 0xa013c50 '__n' 'const difference_type':'const int'))))


        template <typename _InputIterator> void insert(iterator __position, _InputIterator __first, _InputIterator __last) (CompoundStmt 0xa014580 </usr/include/c++/4.6/bits/stl_bvector.h:794:7, line:797:7>
  (DeclStmt 0xa014470 <line:795:2, col:70>
    0xa014440 "typedef typename std::__is_integer<_InputIterator>::__type _Integral")
  (CallExpr 0xa014550 <line:796:2, col:61> '<dependent type>'
    (UnresolvedMemberExpr 0xa014490 <col:2> '<bound member function type>' lvalue)
    (DeclRefExpr 0xa0144d0 <col:21> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9ffb020 '__position' 'iterator':'struct std::_Bit_iterator')
    (DeclRefExpr 0xa0144e8 <col:33> '_InputIterator' lvalue ParmVar 0x9ffb060 '__first' '_InputIterator')
    (DeclRefExpr 0xa014500 <col:42> '_InputIterator' lvalue ParmVar 0x9ffb0a0 '__last' '_InputIterator')
    (CXXUnresolvedConstructExpr 0xa014538 <col:50, col:60> '_Integral':'typename std::__is_integer<_InputIterator>::__type')))

;
        void insert(iterator __position, size_type __n, const bool &__x) (CompoundStmt 0xa014638 </usr/include/c++/4.6/bits/stl_bvector.h:801:5, col:45>
  (CallExpr 0xa014610 <col:7, col:42> '<dependent type>'
    (MemberExpr 0xa0145a8 <col:7> '<bound member function type>' ->_M_fill_insert 0x9ffd470
      (CXXThisExpr 0xa014598 <col:7> 'vector<_Bool, type-parameter-0-0> *' this))
    (DeclRefExpr 0xa0145c8 <col:22> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9ffb200 '__position' 'iterator':'struct std::_Bit_iterator')
    (DeclRefExpr 0xa0145e0 <col:34> 'size_type':'unsigned int' lvalue ParmVar 0x9ffb240 '__n' 'size_type':'unsigned int')
    (DeclRefExpr 0xa0145f8 <col:39> 'const _Bool' lvalue ParmVar 0x9ffb290 '__x' 'const _Bool &')))


        void pop_back() (CompoundStmt 0xa0146e8 </usr/include/c++/4.6/bits/stl_bvector.h:810:5, col:34>
  (UnaryOperator 0xa0146d0 <col:7, col:23> '<dependent type>' prefix '--'
    (CXXDependentScopeMemberExpr 0xa014698 <col:9, col:23> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa014660 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0xa014650 <col:9> 'vector<_Bool, type-parameter-0-0> *' this)))))


        iterator erase(iterator __position) (CompoundStmt 0xa014b38 </usr/include/c++/4.6/bits/stl_bvector.h:814:5, line:819:5>
  (IfStmt 0xa014a20 <line:815:7, line:816:52>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa014860 <line:815:11, col:33> '<dependent type>'
      (UnresolvedLookupExpr 0xa014800 <col:26, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bacde0 0x9bc3130 0x9bc62c0 0x9c11360 0x9c32300 0x9c32670 0x9d60120 0x9d60630 0x9d60b40 0x9e73820 0x9fe96a0)
      (CXXOperatorCallExpr 0xa014768 <col:11, col:24> 'iterator':'struct std::_Bit_iterator'
        (ImplicitCastExpr 0xa014758 <col:22, <invalid sloc>> 'iterator (*)(difference_type) const' <FunctionToPointerDecay>
          (DeclRefExpr 0xa014740 <col:22, <invalid sloc>> 'iterator (difference_type) const' lvalue CXXMethod 0x9ff1790 'operator+' 'iterator (difference_type) const'))
        (ImplicitCastExpr 0xa014730 <col:11> 'const struct std::_Bit_iterator' lvalue <NoOp>
          (DeclRefExpr 0xa0146fc <col:11> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9ffb450 '__position' 'iterator':'struct std::_Bit_iterator'))
        (IntegerLiteral 0xa014718 <col:24> 'int' 1))
      (CallExpr 0xa0147e0 <col:29, col:33> '<dependent type>'
        (UnresolvedMemberExpr 0xa0147a0 <col:29> '<bound member function type>' lvalue)))
    (CallExpr 0xa0149f8 <line:816:9, col:52> '<dependent type>'
      (UnresolvedLookupExpr 0xa0148a8 <col:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0x9bebb70 0x9e76600)
      (CXXOperatorCallExpr 0xa014948 <col:19, col:32> 'iterator':'struct std::_Bit_iterator'
        (ImplicitCastExpr 0xa014938 <col:30, <invalid sloc>> 'iterator (*)(difference_type) const' <FunctionToPointerDecay>
          (DeclRefExpr 0xa014920 <col:30, <invalid sloc>> 'iterator (difference_type) const' lvalue CXXMethod 0x9ff1790 'operator+' 'iterator (difference_type) const'))
        (ImplicitCastExpr 0xa014910 <col:19> 'const struct std::_Bit_iterator' lvalue <NoOp>
          (DeclRefExpr 0xa0148e0 <col:19> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9ffb450 '__position' 'iterator':'struct std::_Bit_iterator'))
        (IntegerLiteral 0xa0148f8 <col:32> 'int' 1))
      (CallExpr 0xa0149c0 <col:35, col:39> '<dependent type>'
        (UnresolvedMemberExpr 0xa014980 <col:35> '<bound member function type>' lvalue))
      (DeclRefExpr 0xa0149dc <col:42> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9ffb450 '__position' 'iterator':'struct std::_Bit_iterator'))
    <<<NULL>>>)
  (UnaryOperator 0xa014ac0 <line:817:7, col:23> '<dependent type>' prefix '--'
    (CXXDependentScopeMemberExpr 0xa014a88 <col:9, col:23> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa014a50 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0xa014a40 <col:9> 'vector<_Bool, type-parameter-0-0> *' this))))
  (ReturnStmt 0xa014b28 <line:818:7, col:14>
    (CXXConstructExpr 0xa014b00 <col:14> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
      (ImplicitCastExpr 0xa014af0 <col:14> 'const struct std::_Bit_iterator' lvalue <NoOp>
        (DeclRefExpr 0xa014ad4 <col:14> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9ffb450 '__position' 'iterator':'struct std::_Bit_iterator')))))


        iterator erase(iterator __first, iterator __last) (CompoundStmt 0xa014df0 </usr/include/c++/4.6/bits/stl_bvector.h:823:5, line:827:5>
  (IfStmt 0xa014d70 <line:824:7, line:825:51>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa014be0 <line:824:11, col:22> '_Bool'
      (ImplicitCastExpr 0xa014bd0 <col:19, <invalid sloc>> '_Bool (*)(const struct std::_Bit_iterator_base &) const' <FunctionToPointerDecay>
        (DeclRefExpr 0xa014bb8 <col:19, <invalid sloc>> '_Bool (const struct std::_Bit_iterator_base &) const' lvalue CXXMethod 0x9fef330 'operator!=' '_Bool (const struct std::_Bit_iterator_base &) const'))
      (ImplicitCastExpr 0xa014ba8 <col:11> 'const struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
        (DeclRefExpr 0xa014b54 <col:11> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9ffb560 '__first' 'iterator':'struct std::_Bit_iterator'))
      (ImplicitCastExpr 0xa014b98 <col:22> 'const struct std::_Bit_iterator_base' lvalue <NoOp>
        (ImplicitCastExpr 0xa014b88 <col:22> 'struct std::_Bit_iterator_base' lvalue <DerivedToBase (_Bit_iterator_base)>
          (DeclRefExpr 0xa014b6c <col:22> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9ffb5a0 '__last' 'iterator':'struct std::_Bit_iterator'))))
    (CallExpr 0xa014d50 <line:825:2, col:51> '<dependent type>'
      (MemberExpr 0xa014c18 <col:2> '<bound member function type>' ->_M_erase_at_end 0x9ffdd50
        (CXXThisExpr 0xa014c08 <col:2> 'vector<_Bool, type-parameter-0-0> *' this))
      (CallExpr 0xa014d28 <col:18, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0xa014c50 <col:18, col:23> '<overloaded function type>' lvalue (no ADL) = '1' 0x9bebb70 0x9e76600)
        (DeclRefExpr 0xa014c88 <col:28> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9ffb5a0 '__last' 'iterator':'struct std::_Bit_iterator')
        (CallExpr 0xa014cf0 <col:36, col:40> '<dependent type>'
          (UnresolvedMemberExpr 0xa014cb0 <col:36> '<bound member function type>' lvalue))
        (DeclRefExpr 0xa014d0c <col:43> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9ffb560 '__first' 'iterator':'struct std::_Bit_iterator')))
    <<<NULL>>>)
  (ReturnStmt 0xa014de0 <line:826:7, col:14>
    (CXXConstructExpr 0xa014db8 <col:14> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
      (ImplicitCastExpr 0xa014da8 <col:14> 'const struct std::_Bit_iterator' lvalue <NoOp>
        (DeclRefExpr 0xa014d8c <col:14> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9ffb560 '__first' 'iterator':'struct std::_Bit_iterator')))))


        void resize(size_type __new_size, bool __x = (CXXScalarValueInitExpr 0x9ffde50 </usr/include/c++/4.6/bits/stl_bvector.h:830:45, col:50> '_Bool')
) (CompoundStmt 0xa015270 </usr/include/c++/4.6/bits/stl_bvector.h:831:5, line:836:5>
  (IfStmt 0xa015250 <line:832:7, line:835:47>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa014ec0 <line:832:11, col:29> '<dependent type>'
      (UnresolvedLookupExpr 0xa014e70 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bac3c0 0x9bc2c90 0x9bc5590 0x9d61190 0x9d616c0 0x9d61bf0 0x9fe8fd0)
      (DeclRefExpr 0xa014e08 <col:11> 'size_type':'unsigned int' lvalue ParmVar 0x9ffb6b0 '__new_size' 'size_type':'unsigned int')
      (CallExpr 0xa014e50 <col:24, col:29> '<dependent type>'
        (MemberExpr 0xa014e30 <col:24> '<bound member function type>' ->size 0x9ffa010
          (CXXThisExpr 0xa014e20 <col:24> 'vector<_Bool, type-parameter-0-0> *' this))))
    (CallExpr 0xa015058 <line:833:9, col:62> '<dependent type>'
      (MemberExpr 0xa014ef8 <col:9> '<bound member function type>' ->_M_erase_at_end 0x9ffdd50
        (CXXThisExpr 0xa014ee8 <col:9> 'vector<_Bool, type-parameter-0-0> *' this))
      (CXXOperatorCallExpr 0xa015030 <col:25, col:61> '<dependent type>'
        (UnresolvedLookupExpr 0xa014fe0 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d86680 0x9d87280 0x9d5d090 0x9d5d890 0x9ff2ef0 0x9ff5070)
        (CallExpr 0xa014f68 <col:25, col:31> '<dependent type>'
          (UnresolvedMemberExpr 0xa014f28 <col:25> '<bound member function type>' lvalue))
        (CXXFunctionalCastExpr 0xa014fc8 <col:35, col:61> 'difference_type':'int' functional cast to difference_type <NoOp>
          (ImplicitCastExpr 0xa014fb8 <col:51> 'difference_type':'int' <IntegralCast>
            (ImplicitCastExpr 0xa014fa8 <col:51> 'size_type':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0xa014f90 <col:51> 'size_type':'unsigned int' lvalue ParmVar 0x9ffb6b0 '__new_size' 'size_type':'unsigned int'))))))
    (CallExpr 0xa015228 <line:835:9, col:47> '<dependent type>'
      (UnresolvedMemberExpr 0xa015088 <col:9> '<bound member function type>' lvalue)
      (CallExpr 0xa015120 <col:16, col:20> '<dependent type>'
        (UnresolvedMemberExpr 0xa0150e0 <col:16> '<bound member function type>' lvalue))
      (CXXOperatorCallExpr 0xa0151e8 <col:23, col:41> '<dependent type>'
        (UnresolvedLookupExpr 0xa0151a8 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0 0x9ff0a50)
        (DeclRefExpr 0xa01513c <col:23> 'size_type':'unsigned int' lvalue ParmVar 0x9ffb6b0 '__new_size' 'size_type':'unsigned int')
        (CallExpr 0xa015188 <col:36, col:41> '<dependent type>'
          (MemberExpr 0xa015168 <col:36> '<bound member function type>' ->size 0x9ffa010
            (CXXThisExpr 0xa015158 <col:36> 'vector<_Bool, type-parameter-0-0> *' this))))
      (DeclRefExpr 0xa01520c <col:44> '_Bool' lvalue ParmVar 0x9ffb6f0 '__x' '_Bool'))))


        void flip() (CompoundStmt 0xa0155d8 </usr/include/c++/4.6/bits/stl_bvector.h:846:5, line:850:5>
  (ForStmt 0xa0155b0 <line:847:7, line:849:18>
    (DeclStmt 0xa015390 <line:847:12, col:57>
      0xa0152a0 "_Bit_type *__p =
        (CXXDependentScopeMemberExpr 0xa015358 <col:30, col:53> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa015320 <col:30, col:44> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa0152e8 <col:30, col:36> '<dependent type>' lvalue
              (CXXThisExpr 0xa0152d8 <col:30> 'vector<_Bool, type-parameter-0-0> *' this))))")
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa015498 <line:848:5, col:26> '<dependent type>'
      (UnresolvedLookupExpr 0xa015438 <col:9, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bacde0 0x9bc3130 0x9bc62c0 0x9c11360 0x9c32300 0x9c32670 0x9d60120 0x9d60630 0x9d60b40 0x9e73820 0x9fe96a0)
      (DeclRefExpr 0xa0153a0 <col:5> '_Bit_type *' lvalue Var 0xa0152a0 '__p' '_Bit_type *')
      (CXXDependentScopeMemberExpr 0xa015400 <col:12, col:26> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa0153c8 <col:12, col:18> '<dependent type>' lvalue
          (CXXThisExpr 0xa0153b8 <col:12> 'vector<_Bool, type-parameter-0-0> *' this))))
    (UnaryOperator 0xa0154d8 <col:45, col:47> '_Bit_type *' lvalue prefix '++'
      (DeclRefExpr 0xa0154bc <col:47> '_Bit_type *' lvalue Var 0xa0152a0 '__p' '_Bit_type *'))
    (BinaryOperator 0xa015598 <line:849:9, col:18> '_Bit_type':'unsigned long' lvalue '='
      (UnaryOperator 0xa015518 <col:9, col:10> '_Bit_type':'unsigned long' lvalue prefix '*'
        (ImplicitCastExpr 0xa015508 <col:10> '_Bit_type *' <LValueToRValue>
          (DeclRefExpr 0xa0154ec <col:10> '_Bit_type *' lvalue Var 0xa0152a0 '__p' '_Bit_type *')))
      (UnaryOperator 0xa015580 <col:16, col:18> '_Bit_type':'unsigned long' prefix '~'
        (ImplicitCastExpr 0xa015570 <col:17, col:18> '_Bit_type':'unsigned long' <LValueToRValue>
          (UnaryOperator 0xa015558 <col:17, col:18> '_Bit_type':'unsigned long' lvalue prefix '*'
            (ImplicitCastExpr 0xa015548 <col:18> '_Bit_type *' <LValueToRValue>
              (DeclRefExpr 0xa01552c <col:18> '_Bit_type *' lvalue Var 0xa0152a0 '__p' '_Bit_type *'))))))))


        void clear() (CompoundStmt 0xa0156b0 </usr/include/c++/4.6/bits/stl_bvector.h:854:5, col:33>
  (CallExpr 0xa015690 <col:7, col:30> '<dependent type>'
    (MemberExpr 0xa015600 <col:7> '<bound member function type>' ->_M_erase_at_end 0x9ffdd50
      (CXXThisExpr 0xa0155f0 <col:7> 'vector<_Bool, type-parameter-0-0> *' this))
    (CallExpr 0xa015670 <col:23, col:29> '<dependent type>'
      (UnresolvedMemberExpr 0xa015630 <col:23> '<bound member function type>' lvalue))))


    protected:
    protected:
        iterator _M_copy_aligned(const_iterator __first, const_iterator __last, iterator __result) (CompoundStmt 0xa0161a0 </usr/include/c++/4.6/bits/stl_bvector.h:862:5, line:866:5>
  (DeclStmt 0xa015bd0 <line:863:7, col:75>
    0xa0156e0 "_Bit_type *__q =
      (CallExpr 0xa015b78 <col:24, col:74> 'unsigned long *':'unsigned long *'
        (ImplicitCastExpr 0xa015b68 <col:24, col:29> 'unsigned long *(*)(unsigned long *, unsigned long *, unsigned long *)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa015b08 <col:24, col:29> 'unsigned long *(unsigned long *, unsigned long *, unsigned long *)' lvalue Function 0xa015a40 'copy' 'unsigned long *(unsigned long *, unsigned long *, unsigned long *)' (FunctionTemplate 0x9bebb70 'copy')))
        (ImplicitCastExpr 0xa015ba0 <col:34, col:42> '_Bit_type *' <LValueToRValue>
          (MemberExpr 0xa015790 <col:34, col:42> '_Bit_type *' lvalue ._M_p 0x9fec9b0
            (ImplicitCastExpr 0xa015780 <col:34> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
              (DeclRefExpr 0xa015768 <col:34> 'const_iterator':'struct std::_Bit_const_iterator' lvalue ParmVar 0x9ffb940 '__first' 'const_iterator':'struct std::_Bit_const_iterator'))))
        (ImplicitCastExpr 0xa015bb0 <col:48, col:55> '_Bit_type *' <LValueToRValue>
          (MemberExpr 0xa0157d8 <col:48, col:55> '_Bit_type *' lvalue ._M_p 0x9fec9b0
            (ImplicitCastExpr 0xa0157c8 <col:48> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
              (DeclRefExpr 0xa0157b0 <col:48> 'const_iterator':'struct std::_Bit_const_iterator' lvalue ParmVar 0x9ffb980 '__last' 'const_iterator':'struct std::_Bit_const_iterator'))))
        (ImplicitCastExpr 0xa015bc0 <col:61, col:70> '_Bit_type *' <LValueToRValue>
          (MemberExpr 0xa015820 <col:61, col:70> '_Bit_type *' lvalue ._M_p 0x9fec9b0
            (ImplicitCastExpr 0xa015810 <col:61> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
              (DeclRefExpr 0xa0157f8 <col:61> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9ffb9c0 '__result' 'iterator':'struct std::_Bit_iterator')))))")
  (ReturnStmt 0xa016190 <line:864:7, line:865:26>
    (CXXConstructExpr 0xa016168 <line:864:14, line:865:26> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()' elidable
      (MaterializeTemporaryExpr 0xa016158 <line:864:14, line:865:26> 'const struct std::_Bit_iterator' lvalue
        (ImplicitCastExpr 0xa016148 <line:864:14, line:865:26> 'const struct std::_Bit_iterator' <NoOp>
          (CallExpr 0xa016058 <line:864:14, line:865:26> 'struct std::_Bit_iterator':'struct std::_Bit_iterator'
            (ImplicitCastExpr 0xa016048 <line:864:14, col:19> 'struct std::_Bit_iterator (*)(struct std::_Bit_const_iterator, struct std::_Bit_const_iterator, struct std::_Bit_iterator)' <FunctionToPointerDecay>
              (DeclRefExpr 0xa015fe8 <col:14, col:19> 'struct std::_Bit_iterator (struct std::_Bit_const_iterator, struct std::_Bit_const_iterator, struct std::_Bit_iterator)' lvalue Function 0xa015f20 'copy' 'struct std::_Bit_iterator (struct std::_Bit_const_iterator, struct std::_Bit_const_iterator, struct std::_Bit_iterator)' (FunctionTemplate 0x9bebb70 'copy')))
            (CXXConstructExpr 0xa0160a0 <col:24, col:53> 'struct std::_Bit_const_iterator':'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()' elidable
              (MaterializeTemporaryExpr 0xa016090 <col:24, col:53> 'const struct std::_Bit_const_iterator' lvalue
                (ImplicitCastExpr 0xa016080 <col:24, col:53> 'const struct std::_Bit_const_iterator' <NoOp>
                  (CXXTemporaryObjectExpr 0xa015cb8 <col:24, col:53> 'const_iterator':'struct std::_Bit_const_iterator''void (_Bit_type *, unsigned int)'
                    (ImplicitCastExpr 0xa015c98 <col:39, col:46> '_Bit_type *' <LValueToRValue>
                      (MemberExpr 0xa015c60 <col:39, col:46> '_Bit_type *' lvalue ._M_p 0x9fec9b0
                        (ImplicitCastExpr 0xa015c50 <col:39> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
                          (DeclRefExpr 0xa015c38 <col:39> 'const_iterator':'struct std::_Bit_const_iterator' lvalue ParmVar 0x9ffb980 '__last' 'const_iterator':'struct std::_Bit_const_iterator'))))
                    (ImplicitCastExpr 0xa015ca8 <col:52> 'unsigned int' <IntegralCast>
                      (IntegerLiteral 0xa015c80 <col:52> 'int' 0))))))
            (CXXConstructExpr 0xa0160d8 <col:56> 'struct std::_Bit_const_iterator':'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()'
              (ImplicitCastExpr 0xa0160c8 <col:56> 'const struct std::_Bit_const_iterator' lvalue <NoOp>
                (DeclRefExpr 0xa015ce8 <col:56> 'const_iterator':'struct std::_Bit_const_iterator' lvalue ParmVar 0x9ffb980 '__last' 'const_iterator':'struct std::_Bit_const_iterator')))
            (CXXConstructExpr 0xa016120 <line:865:10, col:25> 'struct std::_Bit_iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()' elidable
              (MaterializeTemporaryExpr 0xa016110 <col:10, col:25> 'const struct std::_Bit_iterator' lvalue
                (ImplicitCastExpr 0xa016100 <col:10, col:25> 'const struct std::_Bit_iterator' <NoOp>
                  (CXXTemporaryObjectExpr 0xa015d58 <col:10, col:25> 'iterator':'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
                    (ImplicitCastExpr 0xa015d38 <col:19> '_Bit_type *' <LValueToRValue>
                      (DeclRefExpr 0xa015d08 <col:19> '_Bit_type *' lvalue Var 0xa0156e0 '__q' '_Bit_type *'))
                    (ImplicitCastExpr 0xa015d48 <col:24> 'unsigned int' <IntegralCast>
                      (IntegerLiteral 0xa015d20 <col:24> 'int' 0))))))))))))


        void _M_initialize(size_type __n) (CompoundStmt 0xa016818 </usr/include/c++/4.6/bits/stl_bvector.h:870:5, line:877:5>
  (DeclStmt 0xa016288 <line:871:7, col:46>
    0xa0161d0 "_Bit_type *__q =
      (CallExpr 0xa016268 <col:24, col:45> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa016218 <col:24, col:30> '<dependent type>' lvalue
          (CXXThisExpr 0xa016208 <col:24> 'vector<_Bool, type-parameter-0-0> *' this))
        (DeclRefExpr 0xa01624c <col:42> 'size_type':'unsigned int' lvalue ParmVar 0x9ffbb00 '__n' 'size_type':'unsigned int'))")
  (BinaryOperator 0xa0164f8 <line:872:7, line:874:29> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa0162e0 <line:872:7, col:21> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa0162a8 <col:7, col:13> '<dependent type>' lvalue
        (CXXThisExpr 0xa016298 <col:7> 'vector<_Bool, type-parameter-0-0> *' this)))
    (ParenExpr 0xa0164e0 <col:41, line:874:29> '_Bit_type *'
      (BinaryOperator 0xa0164c8 <line:872:42, line:874:28> '_Bit_type *' '+'
        (ImplicitCastExpr 0xa0164b8 <line:872:42> '_Bit_type *' <LValueToRValue>
          (DeclRefExpr 0xa016314 <col:42> '_Bit_type *' lvalue Var 0xa0161d0 '__q' '_Bit_type *'))
        (ParenExpr 0xa0164a0 <line:873:9, line:874:28> 'unsigned int'
          (BinaryOperator 0xa016488 <line:873:10, line:874:27> 'unsigned int' '/'
            (ParenExpr 0xa016410 <line:873:10, col:37> 'unsigned int'
              (BinaryOperator 0xa0163f8 <col:11, col:36> 'unsigned int' '-'
                (BinaryOperator 0xa0163b8 <col:11, col:32> 'unsigned int' '+'
                  (ImplicitCastExpr 0xa016398 <col:11> 'size_type':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0xa01632c <col:11> 'size_type':'unsigned int' lvalue ParmVar 0x9ffbb00 '__n' 'size_type':'unsigned int'))
                  (ImplicitCastExpr 0xa0163a8 <col:17, col:32> 'unsigned int' <IntegralCast>
                    (CXXFunctionalCastExpr 0xa016380 <col:17, col:32> 'int' functional cast to int <NoOp>
                      (ImplicitCastExpr 0xa016370 <col:21> 'int' <IntegralCast>
                        (DeclRefExpr 0xa016354 <col:21> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x9feaf10 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))
                (ImplicitCastExpr 0xa0163e8 <col:36> 'unsigned int' <IntegralCast>
                  (IntegerLiteral 0xa0163d0 <col:36> 'int' 1))))
            (ImplicitCastExpr 0xa016478 <line:874:12, col:27> 'unsigned int' <IntegralCast>
              (CXXFunctionalCastExpr 0xa016460 <col:12, col:27> 'int' functional cast to int <NoOp>
                (ImplicitCastExpr 0xa016450 <col:16> 'int' <IntegralCast>
                  (DeclRefExpr 0xa016434 <col:16> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x9feaf10 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))))))
  (BinaryOperator 0xa016618 <line:875:7, col:47> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa016558 <col:7, col:21> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa016520 <col:7, col:13> '<dependent type>' lvalue
        (CXXThisExpr 0xa016510 <col:7> 'vector<_Bool, type-parameter-0-0> *' this)))
    (CXXTemporaryObjectExpr 0xa0165e8 <col:32, col:47> 'iterator':'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
      (ImplicitCastExpr 0xa0165c8 <col:41> '_Bit_type *' <LValueToRValue>
        (DeclRefExpr 0xa016598 <col:41> '_Bit_type *' lvalue Var 0xa0161d0 '__q' '_Bit_type *'))
      (ImplicitCastExpr 0xa0165d8 <col:46> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa0165b0 <col:46> 'int' 0))))
  (BinaryOperator 0xa016800 <line:876:7, col:77> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa016678 <col:7, col:21> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa016640 <col:7, col:13> '<dependent type>' lvalue
        (CXXThisExpr 0xa016630 <col:7> 'vector<_Bool, type-parameter-0-0> *' this)))
    (CXXOperatorCallExpr 0xa0167d8 <col:33, col:77> '<dependent type>'
      (UnresolvedLookupExpr 0xa016788 <col:56, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d86680 0x9d87280 0x9d5d090 0x9d5d890 0x9ff2ef0 0x9ff5070)
      (CXXDependentScopeMemberExpr 0xa0166f8 <col:33, col:47> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa0166c0 <col:33, col:39> '<dependent type>' lvalue
          (CXXThisExpr 0xa0166b0 <col:33> 'vector<_Bool, type-parameter-0-0> *' this)))
      (CXXFunctionalCastExpr 0xa016770 <col:58, col:77> 'difference_type':'int' functional cast to difference_type <NoOp>
        (ImplicitCastExpr 0xa016760 <col:74> 'difference_type':'int' <IntegralCast>
          (ImplicitCastExpr 0xa016750 <col:74> 'size_type':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0xa016738 <col:74> 'size_type':'unsigned int' lvalue ParmVar 0x9ffbb00 '__n' 'size_type':'unsigned int')))))))


        template <typename _Integer> void _M_initialize_dispatch(_Integer __n, _Integer __x, std::__true_type) (CompoundStmt 0xa016b00 </usr/include/c++/4.6/bits/stl_bvector.h:886:7, line:890:7>
  (CallExpr 0xa0168a0 <line:887:2, col:43> '<dependent type>'
    (MemberExpr 0xa016848 <col:2> '<bound member function type>' ->_M_initialize 0x9ffbb50
      (CXXThisExpr 0xa016838 <col:2> 'vector<_Bool, type-parameter-0-0> *' this))
    (CXXStaticCastExpr 0xa016888 <col:16, col:42> 'size_type':'unsigned int' static_cast<size_type> <Dependent>
      (DeclRefExpr 0xa016868 <col:39> '_Integer' lvalue ParmVar 0x9ffbc20 '__n' '_Integer')))
  (CallExpr 0xa016ad8 <line:888:2, line:889:50> '<dependent type>'
    (UnresolvedLookupExpr 0xa0168e8 <line:888:2, col:7> '<overloaded function type>' lvalue (no ADL) = '1' 0x9bf30e0 0x9ff5720)
    (CXXDependentScopeMemberExpr 0xa0169a0 <col:12, col:35> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa016968 <col:12, col:26> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa016930 <col:12, col:18> '<dependent type>' lvalue
          (CXXThisExpr 0xa016920 <col:12> 'vector<_Bool, type-parameter-0-0> *' this))))
    (CXXDependentScopeMemberExpr 0xa016a20 <line:889:5, col:19> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa0169e8 <col:5, col:11> '<dependent type>' lvalue
        (CXXThisExpr 0xa0169d8 <col:5> 'vector<_Bool, type-parameter-0-0> *' this)))
    (ConditionalOperator 0xa016ab8 <col:38, col:49> 'int'
      (DeclRefExpr 0xa016a54 <col:38> '_Integer' lvalue ParmVar 0x9ffbc60 '__x' '_Integer')
      (UnaryOperator 0xa016a88 <col:44, col:45> 'int' prefix '~'
        (IntegerLiteral 0xa016a70 <col:45> 'int' 0))
      (IntegerLiteral 0xa016aa0 <col:49> 'int' 0))))

;
        template <typename _InputIterator> void _M_initialize_dispatch(_InputIterator __first, _InputIterator __last, std::__false_type) (CompoundStmt 0xa016c48 </usr/include/c++/4.6/bits/stl_bvector.h:896:7, line:897:44>
  (CallExpr 0xa016c20 <line:896:9, line:897:41> '<dependent type>'
    (UnresolvedMemberExpr 0xa016b28 <line:896:9> '<bound member function type>' lvalue)
    (DeclRefExpr 0xa016b68 <col:29> '_InputIterator' lvalue ParmVar 0x9ffbe30 '__first' '_InputIterator')
    (DeclRefExpr 0xa016b80 <col:38> '_InputIterator' lvalue ParmVar 0x9ffbe70 '__last' '_InputIterator')
    (CallExpr 0xa016c00 <line:897:8, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0xa016bb0 <col:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0x9bb5240)
      (DeclRefExpr 0xa016be4 <col:33> '_InputIterator' lvalue ParmVar 0x9ffbe30 '__first' '_InputIterator'))))

;
        template <typename _InputIterator> void _M_initialize_range(_InputIterator __first, _InputIterator __last, std::input_iterator_tag) (CompoundStmt 0xa016df0 </usr/include/c++/4.6/bits/stl_bvector.h:903:7, line:906:7>
  (ForStmt 0xa016dc8 <line:904:2, line:905:22>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa016cf0 <line:904:9, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0xa016c90 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bacde0 0x9bc3130 0x9bc62c0 0x9c11360 0x9c32300 0x9c32670 0x9d60120 0x9d60630 0x9d60b40 0x9e73820 0x9fe96a0)
      (DeclRefExpr 0xa016c5c <col:9> '_InputIterator' lvalue ParmVar 0x9ffc040 '__first' '_InputIterator')
      (DeclRefExpr 0xa016c74 <col:20> '_InputIterator' lvalue ParmVar 0x9ffc080 '__last' '_InputIterator'))
    (UnaryOperator 0xa016d30 <col:28, col:30> '<dependent type>' prefix '++'
      (DeclRefExpr 0xa016d14 <col:30> '_InputIterator' lvalue ParmVar 0x9ffc040 '__first' '_InputIterator'))
    (CallExpr 0xa016da8 <line:905:4, col:22> '<dependent type>'
      (MemberExpr 0xa016d58 <col:4> '<bound member function type>' ->push_back 0x9ffaba0
        (CXXThisExpr 0xa016d48 <col:4> 'vector<_Bool, type-parameter-0-0> *' this))
      (UnaryOperator 0xa016d90 <col:14, col:15> '<dependent type>' prefix '*'
        (DeclRefExpr 0xa016d78 <col:15> '_InputIterator' lvalue ParmVar 0x9ffc040 '__first' '_InputIterator')))))

;
        template <typename _ForwardIterator> void _M_initialize_range(_ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag) (CompoundStmt 0xa0170a0 </usr/include/c++/4.6/bits/stl_bvector.h:912:7, line:916:7>
  (DeclStmt 0xa016ef0 <line:913:2, col:54>
    0xa016e10 "const size_type __n =
      (CallExpr 0xa016ec8 <col:24, col:53> '<dependent type>'
        (UnresolvedLookupExpr 0xa016e60 <col:24, col:29> '<overloaded function type>' lvalue (no ADL) = '1' 0x9bba500)
        (DeclRefExpr 0xa016e94 <col:38> '_ForwardIterator' lvalue ParmVar 0x9ffc290 '__first' '_ForwardIterator')
        (DeclRefExpr 0xa016eac <col:47> '_ForwardIterator' lvalue ParmVar 0x9ffc2d0 '__last' '_ForwardIterator'))")
  (CallExpr 0xa016f48 <line:914:2, col:19> '<dependent type>'
    (MemberExpr 0xa016f10 <col:2> '<bound member function type>' ->_M_initialize 0x9ffbb50
      (CXXThisExpr 0xa016f00 <col:2> 'vector<_Bool, type-parameter-0-0> *' this))
    (DeclRefExpr 0xa016f30 <col:16> 'const size_type':'const unsigned int' lvalue Var 0xa016e10 '__n' 'const size_type':'const unsigned int'))
  (CallExpr 0xa017078 <line:915:2, col:51> '<dependent type>'
    (UnresolvedLookupExpr 0xa016f90 <col:2, col:7> '<overloaded function type>' lvalue (no ADL) = '1' 0x9bebb70 0x9e76600)
    (DeclRefExpr 0xa016fc8 <col:12> '_ForwardIterator' lvalue ParmVar 0x9ffc290 '__first' '_ForwardIterator')
    (DeclRefExpr 0xa016fe0 <col:21> '_ForwardIterator' lvalue ParmVar 0x9ffc2d0 '__last' '_ForwardIterator')
    (CXXDependentScopeMemberExpr 0xa017040 <col:29, col:43> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa017008 <col:29, col:35> '<dependent type>' lvalue
        (CXXThisExpr 0xa016ff8 <col:29> 'vector<_Bool, type-parameter-0-0> *' this)))))

;
        template <typename _Integer> void _M_assign_dispatch(_Integer __n, _Integer __val, std::__true_type) (CompoundStmt 0xa017148 </usr/include/c++/4.6/bits/stl_bvector.h:923:7, col:37>
  (CallExpr 0xa017120 <col:9, col:34> '<dependent type>'
    (MemberExpr 0xa0170d0 <col:9> '<bound member function type>' ->_M_fill_assign 0x9ffc960
      (CXXThisExpr 0xa0170c0 <col:9> 'vector<_Bool, type-parameter-0-0> *' this))
    (DeclRefExpr 0xa0170f0 <col:24> '_Integer' lvalue ParmVar 0x9ffc4e0 '__n' '_Integer')
    (DeclRefExpr 0xa017108 <col:29> '_Integer' lvalue ParmVar 0x9ffc520 '__val' '_Integer')))

;
        template <class _InputIterator> void _M_assign_dispatch(_InputIterator __first, _InputIterator __last, std::__false_type) (CompoundStmt 0xa017290 </usr/include/c++/4.6/bits/stl_bvector.h:929:7, col:76>
  (CallExpr 0xa017268 <col:9, col:73> '<dependent type>'
    (UnresolvedMemberExpr 0xa017170 <col:9> '<bound member function type>' lvalue)
    (DeclRefExpr 0xa0171b0 <col:23> '_InputIterator' lvalue ParmVar 0x9ffc6f0 '__first' '_InputIterator')
    (DeclRefExpr 0xa0171c8 <col:32> '_InputIterator' lvalue ParmVar 0x9ffc730 '__last' '_InputIterator')
    (CallExpr 0xa017248 <col:40, col:72> '<dependent type>'
      (UnresolvedLookupExpr 0xa0171f8 <col:40, col:45> '<overloaded function type>' lvalue (no ADL) = '1' 0x9bb5240)
      (DeclRefExpr 0xa01722c <col:65> '_InputIterator' lvalue ParmVar 0x9ffc6f0 '__first' '_InputIterator'))))

;
        void _M_fill_assign(size_t __n, bool __x) (CompoundStmt 0xa017b98 </usr/include/c++/4.6/bits/stl_bvector.h:933:5, line:946:5>
  (IfStmt 0xa017b78 <line:934:7, line:945:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa017360 <line:934:11, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0xa017310 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bad330 0x9bc37b0 0x9bc6740 0x9d622b0 0x9d627e0 0x9d62d10 0x9fe9c10)
      (DeclRefExpr 0xa0172a4 <col:11> 'size_t':'unsigned int' lvalue ParmVar 0x9ffc8a0 '__n' 'size_t':'unsigned int')
      (CallExpr 0xa0172f0 <col:17, col:22> '<dependent type>'
        (MemberExpr 0xa0172d0 <col:17> '<bound member function type>' ->size 0x9ffa010
          (CXXThisExpr 0xa0172c0 <col:17> 'vector<_Bool, type-parameter-0-0> *' this))))
    (CompoundStmt 0xa0177a8 <line:935:2, line:939:2>
      (CallExpr 0xa0175a8 <line:936:4, line:937:52> '<dependent type>'
        (UnresolvedLookupExpr 0xa0173a8 <line:936:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x9bf30e0 0x9ff5720)
        (CXXDependentScopeMemberExpr 0xa017460 <col:14, col:37> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa017428 <col:14, col:28> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa0173f0 <col:14, col:20> '<dependent type>' lvalue
              (CXXThisExpr 0xa0173e0 <col:14> 'vector<_Bool, type-parameter-0-0> *' this))))
        (CXXDependentScopeMemberExpr 0xa0174e0 <line:937:7, col:21> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa0174a8 <col:7, col:13> '<dependent type>' lvalue
            (CXXThisExpr 0xa017498 <col:7> 'vector<_Bool, type-parameter-0-0> *' this)))
        (ConditionalOperator 0xa017588 <col:40, col:51> 'int'
          (ImplicitCastExpr 0xa017578 <col:40> '_Bool' <LValueToRValue>
            (DeclRefExpr 0xa017514 <col:40> '_Bool' lvalue ParmVar 0x9ffc8e0 '__x' '_Bool'))
          (UnaryOperator 0xa017548 <col:46, col:47> 'int' prefix '~'
            (IntegerLiteral 0xa017530 <col:47> 'int' 0))
          (IntegerLiteral 0xa017560 <col:51> 'int' 0)))
      (CallExpr 0xa017780 <line:938:4, col:35> '<dependent type>'
        (UnresolvedMemberExpr 0xa0175e0 <col:4> '<bound member function type>' lvalue)
        (CallExpr 0xa017678 <col:11, col:15> '<dependent type>'
          (UnresolvedMemberExpr 0xa017638 <col:11> '<bound member function type>' lvalue))
        (CXXOperatorCallExpr 0xa017740 <col:18, col:29> '<dependent type>'
          (UnresolvedLookupExpr 0xa017700 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0 0x9ff0a50)
          (DeclRefExpr 0xa017694 <col:18> 'size_t':'unsigned int' lvalue ParmVar 0x9ffc8a0 '__n' 'size_t':'unsigned int')
          (CallExpr 0xa0176e0 <col:24, col:29> '<dependent type>'
            (MemberExpr 0xa0176c0 <col:24> '<bound member function type>' ->size 0x9ffa010
              (CXXThisExpr 0xa0176b0 <col:24> 'vector<_Bool, type-parameter-0-0> *' this))))
        (DeclRefExpr 0xa017764 <col:32> '_Bool' lvalue ParmVar 0x9ffc8e0 '__x' '_Bool')))
    (CompoundStmt 0xa017b60 <line:941:2, line:945:2>
      (CallExpr 0xa0178f0 <line:942:4, col:33> '<dependent type>'
        (MemberExpr 0xa0177d0 <col:4> '<bound member function type>' ->_M_erase_at_end 0x9ffdd50
          (CXXThisExpr 0xa0177c0 <col:4> 'vector<_Bool, type-parameter-0-0> *' this))
        (CXXOperatorCallExpr 0xa0178c8 <col:20, col:30> '<dependent type>'
          (UnresolvedLookupExpr 0xa017878 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d86680 0x9d87280 0x9d5d090 0x9d5d890 0x9ff2ef0 0x9ff5070)
          (CallExpr 0xa017840 <col:20, col:26> '<dependent type>'
            (UnresolvedMemberExpr 0xa017800 <col:20> '<bound member function type>' lvalue))
          (DeclRefExpr 0xa01785c <col:30> 'size_t':'unsigned int' lvalue ParmVar 0x9ffc8a0 '__n' 'size_t':'unsigned int')))
      (CallExpr 0xa017b38 <line:943:4, line:944:52> '<dependent type>'
        (UnresolvedLookupExpr 0xa017938 <line:943:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x9bf30e0 0x9ff5720)
        (CXXDependentScopeMemberExpr 0xa0179f0 <col:14, col:37> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa0179b8 <col:14, col:28> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa017980 <col:14, col:20> '<dependent type>' lvalue
              (CXXThisExpr 0xa017970 <col:14> 'vector<_Bool, type-parameter-0-0> *' this))))
        (CXXDependentScopeMemberExpr 0xa017a70 <line:944:7, col:21> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa017a38 <col:7, col:13> '<dependent type>' lvalue
            (CXXThisExpr 0xa017a28 <col:7> 'vector<_Bool, type-parameter-0-0> *' this)))
        (ConditionalOperator 0xa017b18 <col:40, col:51> 'int'
          (ImplicitCastExpr 0xa017b08 <col:40> '_Bool' <LValueToRValue>
            (DeclRefExpr 0xa017aa4 <col:40> '_Bool' lvalue ParmVar 0x9ffc8e0 '__x' '_Bool'))
          (UnaryOperator 0xa017ad8 <col:46, col:47> 'int' prefix '~'
            (IntegerLiteral 0xa017ac0 <col:47> 'int' 0))
          (IntegerLiteral 0xa017af0 <col:51> 'int' 0))))))


        template <typename _InputIterator> void _M_assign_aux(_InputIterator __first, _InputIterator __last, std::input_iterator_tag) (CompoundStmt 0xa018240 </usr/include/c++/4.6/bits/stl_bvector.h:952:7, line:960:7>
  (DeclStmt 0xa017c68 <line:953:2, col:26>
    0xa017bc0 "iterator __cur =
      (CallExpr 0xa017c48 <col:19, col:25> '<dependent type>'
        (UnresolvedMemberExpr 0xa017c08 <col:19> '<bound member function type>' lvalue))")
  (ForStmt 0xa017fb8 <line:954:2, line:955:14>
    <<<NULL>>>
    <<<NULL>>>
    (BinaryOperator 0xa017e40 <line:954:9, col:43> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0xa017d08 <col:9, col:20> '<dependent type>'
        (UnresolvedLookupExpr 0xa017ca8 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bacde0 0x9bc3130 0x9bc62c0 0x9c11360 0x9c32300 0x9c32670 0x9d60120 0x9d60630 0x9d60b40 0x9e73820 0x9fe96a0)
        (DeclRefExpr 0xa017c78 <col:9> '_InputIterator' lvalue ParmVar 0x9ffca30 '__first' '_InputIterator')
        (DeclRefExpr 0xa017c90 <col:20> '_InputIterator' lvalue ParmVar 0x9ffca70 '__last' '_InputIterator'))
      (CXXOperatorCallExpr 0xa017e18 <col:30, col:43> '<dependent type>'
        (UnresolvedLookupExpr 0xa017db8 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bacde0 0x9bc3130 0x9bc62c0 0x9c11360 0x9c32300 0x9c32670 0x9d60120 0x9d60630 0x9d60b40 0x9e73820 0x9fe96a0)
        (DeclRefExpr 0xa017d2c <col:30> 'iterator':'struct std::_Bit_iterator' lvalue Var 0xa017bc0 '__cur' 'iterator':'struct std::_Bit_iterator')
        (CallExpr 0xa017d98 <col:39, col:43> '<dependent type>'
          (UnresolvedMemberExpr 0xa017d58 <col:39> '<bound member function type>' lvalue))))
    (BinaryOperator 0xa017ee8 <col:46, col:57> '<dependent type>' ','
      (CXXOperatorCallExpr 0xa017e98 <col:46, col:48> 'iterator':'struct std::_Bit_iterator' lvalue
        (ImplicitCastExpr 0xa017e88 <<invalid sloc>> 'iterator &(*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa017e70 <<invalid sloc>> 'iterator &(void)' lvalue CXXMethod 0x9ff1250 'operator++' 'iterator &(void)'))
        (DeclRefExpr 0xa017e58 <col:48> 'iterator':'struct std::_Bit_iterator' lvalue Var 0xa017bc0 '__cur' 'iterator':'struct std::_Bit_iterator'))
      (UnaryOperator 0xa017ed0 <col:55, col:57> '<dependent type>' prefix '++'
        (DeclRefExpr 0xa017eb8 <col:57> '_InputIterator' lvalue ParmVar 0x9ffca30 '__first' '_InputIterator')))
    (BinaryOperator 0xa017fa0 <line:955:4, col:14> '<dependent type>' '='
      (CXXOperatorCallExpr 0xa017f50 <col:4, col:5> 'reference':'struct std::_Bit_reference'
        (ImplicitCastExpr 0xa017f40 <<invalid sloc>> 'reference (*)(void) const' <FunctionToPointerDecay>
          (DeclRefExpr 0xa017f28 <<invalid sloc>> 'reference (void) const' lvalue CXXMethod 0x9ff1150 'operator*' 'reference (void) const'))
        (ImplicitCastExpr 0xa017f18 <col:5> 'const struct std::_Bit_iterator' lvalue <NoOp>
          (DeclRefExpr 0xa017f00 <col:5> 'iterator':'struct std::_Bit_iterator' lvalue Var 0xa017bc0 '__cur' 'iterator':'struct std::_Bit_iterator')))
      (UnaryOperator 0xa017f88 <col:13, col:14> '<dependent type>' prefix '*'
        (DeclRefExpr 0xa017f70 <col:14> '_InputIterator' lvalue ParmVar 0x9ffca30 '__first' '_InputIterator'))))
  (IfStmt 0xa018220 <line:956:2, line:959:33>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa018070 <line:956:6, col:17> '<dependent type>'
      (UnresolvedLookupExpr 0xa018010 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30 0x9d5e270 0x9d5ece0 0x9d5f520 0x9d5fa90 0x9e73300 0x9fe87e0)
      (DeclRefExpr 0xa017fdc <col:6> '_InputIterator' lvalue ParmVar 0x9ffca30 '__first' '_InputIterator')
      (DeclRefExpr 0xa017ff4 <col:17> '_InputIterator' lvalue ParmVar 0x9ffca70 '__last' '_InputIterator'))
    (CallExpr 0xa0180e0 <line:957:4, col:25> '<dependent type>'
      (MemberExpr 0xa0180a8 <col:4> '<bound member function type>' ->_M_erase_at_end 0x9ffdd50
        (CXXThisExpr 0xa018098 <col:4> 'vector<_Bool, type-parameter-0-0> *' this))
      (DeclRefExpr 0xa0180c8 <col:20> 'iterator':'struct std::_Bit_iterator' lvalue Var 0xa017bc0 '__cur' 'iterator':'struct std::_Bit_iterator'))
    (CallExpr 0xa0181f8 <line:959:4, col:33> '<dependent type>'
      (UnresolvedMemberExpr 0xa018110 <col:4> '<bound member function type>' lvalue)
      (CallExpr 0xa0181a8 <col:11, col:15> '<dependent type>'
        (UnresolvedMemberExpr 0xa018168 <col:11> '<bound member function type>' lvalue))
      (DeclRefExpr 0xa0181c4 <col:18> '_InputIterator' lvalue ParmVar 0x9ffca30 '__first' '_InputIterator')
      (DeclRefExpr 0xa0181dc <col:27> '_InputIterator' lvalue ParmVar 0x9ffca70 '__last' '_InputIterator'))))

;
        template <typename _ForwardIterator> void _M_assign_aux(_ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag) (CompoundStmt 0xa018980 </usr/include/c++/4.6/bits/stl_bvector.h:966:7, line:977:7>
  (DeclStmt 0xa018350 <line:967:2, col:56>
    0xa018270 "const size_type __len =
      (CallExpr 0xa018328 <col:26, col:55> '<dependent type>'
        (UnresolvedLookupExpr 0xa0182c0 <col:26, col:31> '<overloaded function type>' lvalue (no ADL) = '1' 0x9bba500)
        (DeclRefExpr 0xa0182f4 <col:40> '_ForwardIterator' lvalue ParmVar 0x9ffcc60 '__first' '_ForwardIterator')
        (DeclRefExpr 0xa01830c <col:49> '_ForwardIterator' lvalue ParmVar 0x9ffcca0 '__last' '_ForwardIterator'))")
  (IfStmt 0xa018960 <line:968:2, line:976:4>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa018418 <line:968:6, col:19> '<dependent type>'
      (UnresolvedLookupExpr 0xa0183c8 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bac3c0 0x9bc2c90 0x9bc5590 0x9d61190 0x9d616c0 0x9d61bf0 0x9fe8fd0)
      (DeclRefExpr 0xa018360 <col:6> 'const size_type':'const unsigned int' lvalue Var 0xa018270 '__len' 'const size_type':'const unsigned int')
      (CallExpr 0xa0183a8 <col:14, col:19> '<dependent type>'
        (MemberExpr 0xa018388 <col:14> '<bound member function type>' ->size 0x9ffa010
          (CXXThisExpr 0xa018378 <col:14> 'vector<_Bool, type-parameter-0-0> *' this))))
    (CallExpr 0xa018588 <line:969:4, col:55> '<dependent type>'
      (MemberExpr 0xa018450 <col:4> '<bound member function type>' ->_M_erase_at_end 0x9ffdd50
        (CXXThisExpr 0xa018440 <col:4> 'vector<_Bool, type-parameter-0-0> *' this))
      (CallExpr 0xa018560 <col:20, col:54> '<dependent type>'
        (UnresolvedLookupExpr 0xa018488 <col:20, col:25> '<overloaded function type>' lvalue (no ADL) = '1' 0x9bebb70 0x9e76600)
        (DeclRefExpr 0xa0184c0 <col:30> '_ForwardIterator' lvalue ParmVar 0x9ffcc60 '__first' '_ForwardIterator')
        (DeclRefExpr 0xa0184d8 <col:39> '_ForwardIterator' lvalue ParmVar 0x9ffcca0 '__last' '_ForwardIterator')
        (CallExpr 0xa018540 <col:47, col:53> '<dependent type>'
          (UnresolvedMemberExpr 0xa018500 <col:47> '<bound member function type>' lvalue))))
    (CompoundStmt 0xa018940 <line:971:4, line:976:4>
      (DeclStmt 0xa018600 <line:972:6, col:38>
        0xa0185b0 "_ForwardIterator __mid =
          (DeclRefExpr 0xa0185e4 <col:31> '_ForwardIterator' lvalue ParmVar 0x9ffcc60 '__first' '_ForwardIterator')")
      (CallExpr 0xa0186d8 <line:973:6, col:32> '<dependent type>'
        (UnresolvedLookupExpr 0xa018638 <col:6, col:11> '<overloaded function type>' lvalue (no ADL) = '1' 0x9bbbe10)
        (DeclRefExpr 0xa01866c <col:19> '_ForwardIterator' lvalue Var 0xa0185b0 '__mid' '_ForwardIterator')
        (CallExpr 0xa0186b8 <col:26, col:31> '<dependent type>'
          (MemberExpr 0xa018698 <col:26> '<bound member function type>' ->size 0x9ffa010
            (CXXThisExpr 0xa018688 <col:26> 'vector<_Bool, type-parameter-0-0> *' this))))
      (CallExpr 0xa0187f8 <line:974:6, col:39> '<dependent type>'
        (UnresolvedLookupExpr 0xa018720 <col:6, col:11> '<overloaded function type>' lvalue (no ADL) = '1' 0x9bebb70 0x9e76600)
        (DeclRefExpr 0xa018758 <col:16> '_ForwardIterator' lvalue ParmVar 0x9ffcc60 '__first' '_ForwardIterator')
        (DeclRefExpr 0xa018770 <col:25> '_ForwardIterator' lvalue Var 0xa0185b0 '__mid' '_ForwardIterator')
        (CallExpr 0xa0187d8 <col:32, col:38> '<dependent type>'
          (UnresolvedMemberExpr 0xa018798 <col:32> '<bound member function type>' lvalue)))
      (CallExpr 0xa018918 <line:975:6, col:33> '<dependent type>'
        (UnresolvedMemberExpr 0xa018830 <col:6> '<bound member function type>' lvalue)
        (CallExpr 0xa0188c8 <col:13, col:17> '<dependent type>'
          (UnresolvedMemberExpr 0xa018888 <col:13> '<bound member function type>' lvalue))
        (DeclRefExpr 0xa0188e4 <col:20> '_ForwardIterator' lvalue Var 0xa0185b0 '__mid' '_ForwardIterator')
        (DeclRefExpr 0xa0188fc <col:27> '_ForwardIterator' lvalue ParmVar 0x9ffcca0 '__last' '_ForwardIterator')))))

;
        template <typename _Integer> void _M_insert_dispatch(iterator __pos, _Integer __n, _Integer __x, std::__true_type) (CompoundStmt 0xa018a38 </usr/include/c++/4.6/bits/stl_bvector.h:987:7, col:42>
  (CallExpr 0xa018a10 <col:9, col:39> '<dependent type>'
    (MemberExpr 0xa0189a8 <col:9> '<bound member function type>' ->_M_fill_insert 0x9ffd470
      (CXXThisExpr 0xa018998 <col:9> 'vector<_Bool, type-parameter-0-0> *' this))
    (DeclRefExpr 0xa0189c8 <col:24> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9ffce90 '__pos' 'iterator':'struct std::_Bit_iterator')
    (DeclRefExpr 0xa0189e0 <col:31> '_Integer' lvalue ParmVar 0x9ffced0 '__n' '_Integer')
    (DeclRefExpr 0xa0189f8 <col:36> '_Integer' lvalue ParmVar 0x9ffcf10 '__x' '_Integer')))

;
        template <typename _InputIterator> void _M_insert_dispatch(iterator __pos, _InputIterator __first, _InputIterator __last, std::__false_type) (CompoundStmt 0xa018ba0 </usr/include/c++/4.6/bits/stl_bvector.h:994:7, line:995:40>
  (CallExpr 0xa018b70 <line:994:9, line:995:37> '<dependent type>'
    (UnresolvedMemberExpr 0xa018a60 <line:994:9> '<bound member function type>' lvalue)
    (DeclRefExpr 0xa018aa0 <col:25> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9ffd110 '__pos' 'iterator':'struct std::_Bit_iterator')
    (DeclRefExpr 0xa018ab8 <col:32> '_InputIterator' lvalue ParmVar 0x9ffd150 '__first' '_InputIterator')
    (DeclRefExpr 0xa018ad0 <col:41> '_InputIterator' lvalue ParmVar 0x9ffd190 '__last' '_InputIterator')
    (CallExpr 0xa018b50 <line:995:4, col:36> '<dependent type>'
      (UnresolvedLookupExpr 0xa018b00 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x9bb5240)
      (DeclRefExpr 0xa018b34 <col:29> '_InputIterator' lvalue ParmVar 0x9ffd150 '__first' '_InputIterator'))))

;
        void _M_fill_insert(iterator __position, size_type __n, bool __x);
        template <typename _InputIterator> void _M_insert_range(iterator __pos, _InputIterator __first, _InputIterator __last, std::input_iterator_tag) (CompoundStmt 0xa018e38 </usr/include/c++/4.6/bits/stl_bvector.h:1004:7, line:1010:7>
  (ForStmt 0xa018e10 <line:1005:2, line:1009:4>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa018c48 <line:1005:9, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0xa018be8 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bacde0 0x9bc3130 0x9bc62c0 0x9c11360 0x9c32300 0x9c32670 0x9d60120 0x9d60630 0x9d60b40 0x9e73820 0x9fe96a0)
      (DeclRefExpr 0xa018bb4 <col:9> '_InputIterator' lvalue ParmVar 0x9ffd580 '__first' '_InputIterator')
      (DeclRefExpr 0xa018bcc <col:20> '_InputIterator' lvalue ParmVar 0x9ffd5c0 '__last' '_InputIterator'))
    (UnaryOperator 0xa018c88 <col:28, col:30> '<dependent type>' prefix '++'
      (DeclRefExpr 0xa018c6c <col:30> '_InputIterator' lvalue ParmVar 0x9ffd580 '__first' '_InputIterator'))
    (CompoundStmt 0xa018df8 <line:1006:4, line:1009:4>
      (BinaryOperator 0xa018d80 <line:1007:6, col:36> '<dependent type>' '='
        (DeclRefExpr 0xa018c9c <col:6> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9ffd540 '__pos' 'iterator':'struct std::_Bit_iterator')
        (CallExpr 0xa018d58 <col:14, col:36> '<dependent type>'
          (UnresolvedMemberExpr 0xa018cc8 <col:14> '<bound member function type>' lvalue)
          (DeclRefExpr 0xa018d0c <col:21> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9ffd540 '__pos' 'iterator':'struct std::_Bit_iterator')
          (UnaryOperator 0xa018d40 <col:28, col:29> '<dependent type>' prefix '*'
            (DeclRefExpr 0xa018d24 <col:29> '_InputIterator' lvalue ParmVar 0x9ffd580 '__first' '_InputIterator'))))
      (CXXOperatorCallExpr 0xa018dd8 <line:1008:6, col:8> 'iterator':'struct std::_Bit_iterator' lvalue
        (ImplicitCastExpr 0xa018dc8 <<invalid sloc>> 'iterator &(*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa018db0 <<invalid sloc>> 'iterator &(void)' lvalue CXXMethod 0x9ff1250 'operator++' 'iterator &(void)'))
        (DeclRefExpr 0xa018d98 <col:8> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9ffd540 '__pos' 'iterator':'struct std::_Bit_iterator')))))

;
        template <typename _ForwardIterator> void _M_insert_range(iterator __position, _ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag);
        void _M_insert_aux(iterator __position, bool __x);
        size_type _M_check_len(size_type __n, const char *__s) const (CompoundStmt 0xa019548 </usr/include/c++/4.6/bits/stl_bvector.h:1022:5, line:1028:5>
  (IfStmt 0xa0190a8 <line:1023:7, line:1024:31>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa018fc0 <line:1023:11, col:33> '<dependent type>'
      (UnresolvedLookupExpr 0xa018f70 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bac3c0 0x9bc2c90 0x9bc5590 0x9d61190 0x9d616c0 0x9d61bf0 0x9fe8fd0)
      (CXXOperatorCallExpr 0xa018f30 <col:11, col:29> '<dependent type>'
        (UnresolvedLookupExpr 0xa018ef0 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0 0x9ff0a50)
        (CallExpr 0xa018e80 <col:11, col:20> '<dependent type>'
          (MemberExpr 0xa018e60 <col:11> '<bound member function type>' ->max_size 0x9ffa090
            (CXXThisExpr 0xa018e50 <col:11> 'const vector<_Bool, type-parameter-0-0> *' this)))
        (CallExpr 0xa018ed0 <col:24, col:29> '<dependent type>'
          (MemberExpr 0xa018eb0 <col:24> '<bound member function type>' ->size 0x9ffa010
            (CXXThisExpr 0xa018ea0 <col:24> 'const vector<_Bool, type-parameter-0-0> *' this))))
      (DeclRefExpr 0xa018f54 <col:33> 'size_type':'unsigned int' lvalue ParmVar 0x9ffdb70 '__n' 'size_type':'unsigned int'))
    (CallExpr 0xa019078 <line:1024:2, col:31> 'void'
      (ImplicitCastExpr 0xa019068 <col:2> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0xa01904c <col:2> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9b765e0 '__throw_length_error' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa019098 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <LValueToRValue>
        (ParenExpr 0xa019038 <col:24, col:30> 'const char *' lvalue
          (DeclRefExpr 0xa01901c </usr/include/c++/4.6/bits/stl_bvector.h:1024:27> 'const char *' lvalue ParmVar 0x9ffdbc0 '__s' 'const char *'))))
    <<<NULL>>>)
  (DeclStmt 0xa0192b0 <line:1026:7, col:61>
    0xa0190d0 "const size_type __len =
      (CXXOperatorCallExpr 0xa019288 <col:31, col:60> '<dependent type>'
        (UnresolvedLookupExpr 0xa019238 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d86680 0x9d87280 0x9d5d090 0x9d5d890 0x9ff2ef0 0x9ff5070)
        (CallExpr 0xa019138 <col:31, col:36> '<dependent type>'
          (MemberExpr 0xa019118 <col:31> '<bound member function type>' ->size 0x9ffa010
            (CXXThisExpr 0xa019108 <col:31> 'const vector<_Bool, type-parameter-0-0> *' this)))
        (CallExpr 0xa019210 <col:40, col:60> '<dependent type>'
          (UnresolvedLookupExpr 0xa019170 <col:40, col:45> '<overloaded function type>' lvalue (no ADL) = '1' 0x9be02b0 0x9b949b0)
          (CallExpr 0xa0191d8 <col:49, col:54> '<dependent type>'
            (MemberExpr 0xa0191b8 <col:49> '<bound member function type>' ->size 0x9ffa010
              (CXXThisExpr 0xa0191a8 <col:49> 'const vector<_Bool, type-parameter-0-0> *' this)))
          (DeclRefExpr 0xa0191f4 <col:57> 'size_type':'unsigned int' lvalue ParmVar 0x9ffdb70 '__n' 'size_type':'unsigned int')))")
  (ReturnStmt 0xa019538 <line:1027:7, col:68>
    (ConditionalOperator 0xa019518 <col:14, col:68> '<dependent type>'
      (ParenExpr 0xa019498 <col:14, col:51> '<dependent type>'
        (BinaryOperator 0xa019480 <col:15, col:50> '<dependent type>' '||'
          (CXXOperatorCallExpr 0xa019378 <col:15, col:28> '<dependent type>'
            (UnresolvedLookupExpr 0xa019328 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bac3c0 0x9bc2c90 0x9bc5590 0x9d61190 0x9d616c0 0x9d61bf0 0x9fe8fd0)
            (DeclRefExpr 0xa0192c0 <col:15> 'const size_type':'const unsigned int' lvalue Var 0xa0190d0 '__len' 'const size_type':'const unsigned int')
            (CallExpr 0xa019308 <col:23, col:28> '<dependent type>'
              (MemberExpr 0xa0192e8 <col:23> '<bound member function type>' ->size 0x9ffa010
                (CXXThisExpr 0xa0192d8 <col:23> 'const vector<_Bool, type-parameter-0-0> *' this))))
          (CXXOperatorCallExpr 0xa019458 <col:33, col:50> '<dependent type>'
            (UnresolvedLookupExpr 0xa019408 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bad330 0x9bc37b0 0x9bc6740 0x9d622b0 0x9d627e0 0x9d62d10 0x9fe9c10)
            (DeclRefExpr 0xa01939c <col:33> 'const size_type':'const unsigned int' lvalue Var 0xa0190d0 '__len' 'const size_type':'const unsigned int')
            (CallExpr 0xa0193e8 <col:41, col:50> '<dependent type>'
              (MemberExpr 0xa0193c8 <col:41> '<bound member function type>' ->max_size 0x9ffa090
                (CXXThisExpr 0xa0193b8 <col:41> 'const vector<_Bool, type-parameter-0-0> *' this))))))
      (CallExpr 0xa0194e0 <col:55, col:64> '<dependent type>'
        (MemberExpr 0xa0194c0 <col:55> '<bound member function type>' ->max_size 0x9ffa090
          (CXXThisExpr 0xa0194b0 <col:55> 'const vector<_Bool, type-parameter-0-0> *' this)))
      (DeclRefExpr 0xa0194fc <col:68> 'const size_type':'const unsigned int' lvalue Var 0xa0190d0 '__len' 'const size_type':'const unsigned int'))))


        void _M_erase_at_end(iterator __pos) (CompoundStmt 0xa019618 </usr/include/c++/4.6/bits/stl_bvector.h:1032:5, col:40>
  (BinaryOperator 0xa019600 <col:7, col:33> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa0195b0 <col:7, col:21> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa019578 <col:7, col:13> '<dependent type>' lvalue
        (CXXThisExpr 0xa019568 <col:7> 'vector<_Bool, type-parameter-0-0> *' this)))
    (DeclRefExpr 0xa0195e4 <col:33> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9ffdcb0 '__pos' 'iterator':'struct std::_Bit_iterator')))


    };
}
namespace std {
    void reserve(size_type __n) (CompoundStmt 0xa01a850 </usr/include/c++/4.6/bits/vector.tcc:68:5, line:86:5>
  (IfStmt 0xa019c60 <line:69:7, line:70:45>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa019b38 <line:69:11, col:32> '<dependent type>'
      (UnresolvedLookupExpr 0xa019ae8 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bad330 0x9bc37b0 0x9bc6740 0x9d622b0 0x9d627e0 0x9d62d10 0x9fe9c10)
      (DeclRefExpr 0xa019a64 <col:11> 'size_type':'unsigned int' lvalue ParmVar 0xa019980 '__n' 'size_type':'unsigned int')
      (CallExpr 0xa019ac8 <col:17, col:32> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa019a90 <col:17, col:23> '<dependent type>' lvalue
          (CXXThisExpr 0xa019a80 <col:17> 'vector<_Tp, _Alloc> *' this))))
    (CallExpr 0xa019c30 <line:70:2, col:45> 'void'
      (ImplicitCastExpr 0xa019c20 <col:2> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0xa019c04 <col:2> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9b765e0 '__throw_length_error' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa019c50 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0xa019bf0 <col:24, col:30> 'const char [16]' lvalue
          (StringLiteral 0xa019bc0 </usr/include/c++/4.6/bits/vector.tcc:70:27> 'const char [16]' lvalue "vector::reserve"))))
    <<<NULL>>>)
  (IfStmt 0xa01a830 <line:71:7, line:85:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa019d50 <line:71:11, col:30> '<dependent type>'
      (UnresolvedLookupExpr 0xa019d00 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bac3c0 0x9bc2c90 0x9bc5590 0x9d61190 0x9d616c0 0x9d61bf0 0x9fe8fd0)
      (CallExpr 0xa019cc8 <col:11, col:26> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa019c90 <col:11, col:17> '<dependent type>' lvalue
          (CXXThisExpr 0xa019c80 <col:11> 'vector<_Tp, _Alloc> *' this)))
      (DeclRefExpr 0xa019ce4 <col:30> 'size_type':'unsigned int' lvalue ParmVar 0xa019980 '__n' 'size_type':'unsigned int'))
    (CompoundStmt 0xa01a800 <line:72:2, line:85:2>
      (DeclStmt 0xa019e08 <line:73:4, col:39>
        0xa019d80 "const size_type __old_size =
          (CallExpr 0xa019de8 <col:33, col:38> '<dependent type>'
            (MemberExpr 0xa019dc8 <col:33> '<bound member function type>' ->size 0x9fd5f20
              (CXXThisExpr 0xa019db8 <col:33> 'vector<_Tp, _Alloc> *' this)))")
      (DeclStmt 0xa01a018 <line:74:4, line:76:57>
        0xa019e20 "pointer __tmp =
          (CallExpr 0xa019ff0 <line:74:20, line:76:56> '<dependent type>'
            (UnresolvedMemberExpr 0xa019e68 <line:74:20> '<bound member function type>' lvalue)
            (DeclRefExpr 0xa019ea4 <col:41> 'size_type':'unsigned int' lvalue ParmVar 0xa019980 '__n' 'size_type':'unsigned int')
            (ParenExpr 0xa019f40 </usr/include/c++/4.6/bits/stl_iterator.h:1128:44, col:50> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa019f08 </usr/include/c++/4.6/bits/vector.tcc:75:32, col:46> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa019ed0 <col:32, col:38> '<dependent type>' lvalue
                  (CXXThisExpr 0xa019ec0 <col:32> 'vector<_Tp, _Alloc> *' this))))
            (ParenExpr 0xa019fd8 </usr/include/c++/4.6/bits/stl_iterator.h:1128:44, col:50> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa019fa0 </usr/include/c++/4.6/bits/vector.tcc:76:32, col:46> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa019f68 <col:32, col:38> '<dependent type>' lvalue
                  (CXXThisExpr 0xa019f58 <col:32> 'vector<_Tp, _Alloc> *' this)))))")
      (CallExpr 0xa01a1f0 <line:77:4, line:78:25> '<dependent type>'
        (UnresolvedLookupExpr 0xa01a058 <line:77:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fbc330 0x9fbcff0 0x9fbd690 0x9fbdc40)
        (CXXDependentScopeMemberExpr 0xa01a0e0 <col:18, col:32> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa01a0a8 <col:18, col:24> '<dependent type>' lvalue
            (CXXThisExpr 0xa01a098 <col:18> 'vector<_Tp, _Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0xa01a160 <col:42, col:56> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa01a128 <col:42, col:48> '<dependent type>' lvalue
            (CXXThisExpr 0xa01a118 <col:42> 'vector<_Tp, _Alloc> *' this)))
        (CallExpr 0xa01a1d0 <line:78:4, col:24> '<dependent type>'
          (UnresolvedMemberExpr 0xa01a194 <col:4> '<dependent type>' lvalue)))
      (CallExpr 0xa01a440 <line:79:4, line:81:28> '<dependent type>'
        (UnresolvedMemberExpr 0xa01a218 <line:79:4> '<dependent type>' lvalue)
        (CXXDependentScopeMemberExpr 0xa01a2a0 <col:18, col:32> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa01a268 <col:18, col:24> '<dependent type>' lvalue
            (CXXThisExpr 0xa01a258 <col:18> 'vector<_Tp, _Alloc> *' this)))
        (CXXOperatorCallExpr 0xa01a418 <line:80:4, line:81:20> '<dependent type>'
          (UnresolvedLookupExpr 0xa01a3d8 <col:4, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0 0x9ff0a50)
          (CXXDependentScopeMemberExpr 0xa01a320 <line:80:4, col:18> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa01a2e8 <col:4, col:10> '<dependent type>' lvalue
              (CXXThisExpr 0xa01a2d8 <col:4> 'vector<_Tp, _Alloc> *' this)))
          (CXXDependentScopeMemberExpr 0xa01a3a0 <line:81:6, col:20> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa01a368 <col:6, col:12> '<dependent type>' lvalue
              (CXXThisExpr 0xa01a358 <col:6> 'vector<_Tp, _Alloc> *' this)))))
      (BinaryOperator 0xa01a500 <line:82:4, col:29> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa01a4b0 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa01a478 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa01a468 <col:4> 'vector<_Tp, _Alloc> *' this)))
        (DeclRefExpr 0xa01a4e4 <col:29> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa019e20 '__tmp' 'pointer':'typename _Tp_alloc_type::pointer'))
      (BinaryOperator 0xa01a640 <line:83:4, col:38> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa01a560 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa01a528 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa01a518 <col:4> 'vector<_Tp, _Alloc> *' this)))
        (CXXOperatorCallExpr 0xa01a618 <col:30, col:38> '<dependent type>'
          (UnresolvedLookupExpr 0xa01a5c8 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d86680 0x9d87280 0x9d5d090 0x9d5d890 0x9ff2ef0 0x9ff5070)
          (DeclRefExpr 0xa01a594 <col:30> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa019e20 '__tmp' 'pointer':'typename _Tp_alloc_type::pointer')
          (DeclRefExpr 0xa01a5ac <col:38> 'const size_type':'const unsigned int' lvalue Var 0xa019d80 '__old_size' 'const size_type':'const unsigned int')))
      (BinaryOperator 0xa01a7e8 <line:84:4, col:63> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa01a6a0 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa01a668 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa01a658 <col:4> 'vector<_Tp, _Alloc> *' this)))
        (CXXOperatorCallExpr 0xa01a7c0 <col:38, col:63> '<dependent type>'
          (UnresolvedLookupExpr 0xa01a770 <col:61, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d86680 0x9d87280 0x9d5d090 0x9d5d890 0x9ff2ef0 0x9ff5070)
          (CXXDependentScopeMemberExpr 0xa01a720 <col:38, col:52> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa01a6e8 <col:38, col:44> '<dependent type>' lvalue
              (CXXThisExpr 0xa01a6d8 <col:38> 'vector<_Tp, _Alloc> *' this)))
          (DeclRefExpr 0xa01a754 <col:63> 'size_type':'unsigned int' lvalue ParmVar 0xa019980 '__n' 'size_type':'unsigned int'))))
    <<<NULL>>>))


    typename vector<_Tp, _Alloc>::iterator insert(iterator __position, const value_type &__x) (CompoundStmt 0xa01f530 </usr/include/c++/4.6/bits/vector.tcc:110:5, line:131:5>
  (DeclStmt 0xa01ee78 <line:111:7, col:49>
    0xa01ed50 "const size_type __n =
      (CXXOperatorCallExpr 0xa01ee50 <col:29, col:48> '<dependent type>'
        (UnresolvedLookupExpr 0xa01ee10 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0 0x9ff0a50)
        (DeclRefExpr 0xa01ed84 <col:29> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa01eab0 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
        (CallExpr 0xa01edf0 <col:42, col:48> '<dependent type>'
          (UnresolvedMemberExpr 0xa01edb0 <col:42> '<bound member function type>' lvalue)))")
  (IfStmt 0xa01f3c8 <line:112:7, line:129:2>
    <<<NULL>>>
    (BinaryOperator 0xa01f120 <line:112:11, line:113:25> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0xa01efe8 <line:112:11, col:52> '<dependent type>'
        (UnresolvedLookupExpr 0xa01ef88 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bacde0 0x9bc3130 0x9bc62c0 0x9c11360 0x9c32300 0x9c32670 0x9d60120 0x9d60630 0x9d60b40 0x9e73820 0x9fe96a0)
        (CXXDependentScopeMemberExpr 0xa01eed0 <col:11, col:25> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa01ee98 <col:11, col:17> '<dependent type>' lvalue
            (CXXThisExpr 0xa01ee88 <col:11> 'vector<_Tp, _Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0xa01ef50 <col:38, col:52> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa01ef18 <col:38, col:44> '<dependent type>' lvalue
            (CXXThisExpr 0xa01ef08 <col:38> 'vector<_Tp, _Alloc> *' this))))
      (CXXOperatorCallExpr 0xa01f0f8 <line:113:7, col:25> '<dependent type>'
        (UnresolvedLookupExpr 0xa01f098 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30 0x9d5e270 0x9d5ece0 0x9d5f520 0x9d5fa90 0x9e73300 0x9fe87e0)
        (DeclRefExpr 0xa01f00c <col:7> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa01eab0 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
        (CallExpr 0xa01f078 <col:21, col:25> '<dependent type>'
          (UnresolvedMemberExpr 0xa01f038 <col:21> '<bound member function type>' lvalue))))
    (CompoundStmt 0xa01f310 <line:114:2, line:117:2>
      (CallExpr 0xa01f250 <line:115:4, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa01f180 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa01f148 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa01f138 <col:4> 'vector<_Tp, _Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0xa01f200 <col:28, col:42> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa01f1c8 <col:28, col:34> '<dependent type>' lvalue
            (CXXThisExpr 0xa01f1b8 <col:28> 'vector<_Tp, _Alloc> *' this)))
        (DeclRefExpr 0xa01f234 <col:53> 'const value_type':'const _Tp' lvalue ParmVar 0xa01eb00 '__x' 'const value_type &'))
      (UnaryOperator 0xa01f2f8 <line:116:4, col:20> '<dependent type>' prefix '++'
        (CXXDependentScopeMemberExpr 0xa01f2c0 <col:6, col:20> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa01f288 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa01f278 <col:6> 'vector<_Tp, _Alloc> *' this)))))
    (CompoundStmt 0xa01f3b0 <line:119:2, line:129:2>
      (CallExpr 0xa01f388 <line:128:6, col:35> '<dependent type>'
        (MemberExpr 0xa01f338 <col:6> '<bound member function type>' ->_M_insert_aux 0x9fd9ab0
          (CXXThisExpr 0xa01f328 <col:6> 'vector<_Tp, _Alloc> *' this))
        (DeclRefExpr 0xa01f358 <col:20> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa01eab0 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
        (DeclRefExpr 0xa01f370 <col:32> 'const value_type':'const _Tp' lvalue ParmVar 0xa01eb00 '__x' 'const value_type &'))))
  (ReturnStmt 0xa01f520 <line:130:7, col:51>
    (CXXUnresolvedConstructExpr 0xa01f500 <col:14, col:51> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
      (CXXOperatorCallExpr 0xa01f4d8 <col:23, col:48> '<dependent type>'
        (UnresolvedLookupExpr 0xa01f488 <col:46, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d86680 0x9d87280 0x9d5d090 0x9d5d890 0x9ff2ef0 0x9ff5070)
        (CXXDependentScopeMemberExpr 0xa01f438 <col:23, col:37> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa01f400 <col:23, col:29> '<dependent type>' lvalue
            (CXXThisExpr 0xa01f3f0 <col:23> 'vector<_Tp, _Alloc> *' this)))
        (DeclRefExpr 0xa01f46c <col:48> 'const size_type':'const unsigned int' lvalue Var 0xa01ed50 '__n' 'const size_type':'const unsigned int')))))


    typename vector<_Tp, _Alloc>::iterator erase(iterator __position) (CompoundStmt 0xa020098 </usr/include/c++/4.6/bits/vector.tcc:137:5, line:143:5>
  (IfStmt 0xa01fe98 <line:138:7, /usr/include/c++/4.6/bits/stl_algobase.h:491:62>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa01fcc0 </usr/include/c++/4.6/bits/vector.tcc:138:11, col:33> '<dependent type>'
      (UnresolvedLookupExpr 0xa01fc60 <col:26, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bacde0 0x9bc3130 0x9bc62c0 0x9c11360 0x9c32300 0x9c32670 0x9d60120 0x9d60630 0x9d60b40 0x9e73820 0x9fe96a0)
      (CXXOperatorCallExpr 0xa01fbc8 <col:11, col:24> '<dependent type>'
        (UnresolvedLookupExpr 0xa01fb78 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d86680 0x9d87280 0x9d5d090 0x9d5d890 0x9ff2ef0 0x9ff5070)
        (DeclRefExpr 0xa01fb44 <col:11> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa01f910 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
        (IntegerLiteral 0xa01fb60 <col:24> 'int' 1))
      (CallExpr 0xa01fc40 <col:29, col:33> '<dependent type>'
        (UnresolvedMemberExpr 0xa01fc00 <col:29> '<bound member function type>' lvalue)))
    (CallExpr 0xa01fe70 </usr/include/c++/4.6/bits/stl_algobase.h:491:39, col:62> '<dependent type>'
      (UnresolvedLookupExpr 0xa01fd08 <col:39, col:44> '<overloaded function type>' lvalue (no ADL) = '1' 0x9bebb70 0x9e76600)
      (CXXOperatorCallExpr 0xa01fdc0 </usr/include/c++/4.6/bits/vector.tcc:139:17, col:30> '<dependent type>'
        (UnresolvedLookupExpr 0xa01fd70 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d86680 0x9d87280 0x9d5d090 0x9d5d890 0x9ff2ef0 0x9ff5070)
        (DeclRefExpr 0xa01fd40 <col:17> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa01f910 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
        (IntegerLiteral 0xa01fd58 <col:30> 'int' 1))
      (CallExpr 0xa01fe38 <col:33, col:37> '<dependent type>'
        (UnresolvedMemberExpr 0xa01fdf8 <col:33> '<bound member function type>' lvalue))
      (DeclRefExpr 0xa01fe54 <col:40> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa01f910 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'))
    <<<NULL>>>)
  (UnaryOperator 0xa01ff38 <line:140:7, col:23> '<dependent type>' prefix '--'
    (CXXDependentScopeMemberExpr 0xa01ff00 <col:9, col:23> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa01fec8 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0xa01feb8 <col:9> 'vector<_Tp, _Alloc> *' this))))
  (CallExpr 0xa020050 <line:141:7, col:52> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa01ff98 <col:7, col:21> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa01ff60 <col:7, col:13> '<dependent type>' lvalue
        (CXXThisExpr 0xa01ff50 <col:7> 'vector<_Tp, _Alloc> *' this)))
    (CXXDependentScopeMemberExpr 0xa020018 <col:29, col:43> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa01ffe0 <col:29, col:35> '<dependent type>' lvalue
        (CXXThisExpr 0xa01ffd0 <col:29> 'vector<_Tp, _Alloc> *' this))))
  (ReturnStmt 0xa020088 <line:142:7, col:14>
    (DeclRefExpr 0xa020070 <col:14> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa01f910 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))


    typename vector<_Tp, _Alloc>::iterator erase(iterator __first, iterator __last) (CompoundStmt 0xa020cb0 </usr/include/c++/4.6/bits/vector.tcc:149:5, line:157:5>
  (IfStmt 0xa020c68 <line:150:7, line:155:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa020798 <line:150:11, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0xa020738 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bacde0 0x9bc3130 0x9bc62c0 0x9c11360 0x9c32300 0x9c32670 0x9d60120 0x9d60630 0x9d60b40 0x9e73820 0x9fe96a0)
      (DeclRefExpr 0xa020708 <col:11> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa020480 '__first' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
      (DeclRefExpr 0xa020720 <col:22> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa0204c0 '__last' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'))
    (CompoundStmt 0xa020c50 <line:151:2, line:155:2>
      (IfStmt 0xa0209f0 <line:152:4, /usr/include/c++/4.6/bits/stl_algobase.h:491:62>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa0208a8 </usr/include/c++/4.6/bits/vector.tcc:152:8, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0xa020848 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bacde0 0x9bc3130 0x9bc62c0 0x9c11360 0x9c32300 0x9c32670 0x9d60120 0x9d60630 0x9d60b40 0x9e73820 0x9fe96a0)
          (DeclRefExpr 0xa0207bc <col:8> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa0204c0 '__last' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
          (CallExpr 0xa020828 <col:18, col:22> '<dependent type>'
            (UnresolvedMemberExpr 0xa0207e8 <col:18> '<bound member function type>' lvalue)))
        (CallExpr 0xa0209c8 </usr/include/c++/4.6/bits/stl_algobase.h:491:39, col:62> '<dependent type>'
          (UnresolvedLookupExpr 0xa0208f0 <col:39, col:44> '<overloaded function type>' lvalue (no ADL) = '1' 0x9bebb70 0x9e76600)
          (DeclRefExpr 0xa020928 </usr/include/c++/4.6/bits/vector.tcc:153:21> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa0204c0 '__last' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
          (CallExpr 0xa020990 <col:29, col:33> '<dependent type>'
            (UnresolvedMemberExpr 0xa020950 <col:29> '<bound member function type>' lvalue))
          (DeclRefExpr 0xa0209ac <col:36> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa020480 '__first' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'))
        <<<NULL>>>)
      (CallExpr 0xa020c30 <line:154:4, col:53> '<dependent type>'
        (MemberExpr 0xa020a20 <col:4> '<bound member function type>' ->_M_erase_at_end 0x9fd9d00
          (CXXThisExpr 0xa020a10 <col:4> 'vector<_Tp, _Alloc> *' this))
        (CXXOperatorCallExpr 0xa020c08 <col:20, col:52> '<dependent type>'
          (UnresolvedLookupExpr 0xa020bb8 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d86680 0x9d87280 0x9d5d090 0x9d5d890 0x9ff2ef0 0x9ff5070)
          (CallExpr 0xa020a90 <col:20, col:33> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa020a58 <col:20, col:28> '<dependent type>' lvalue
              (DeclRefExpr 0xa020a40 <col:20> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa020480 '__first' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
          (ParenExpr 0xa020ba0 <col:37, col:52> '<dependent type>'
            (CXXOperatorCallExpr 0xa020b78 <col:38, col:46> '<dependent type>'
              (UnresolvedLookupExpr 0xa020b38 <col:44, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0 0x9ff0a50)
              (CallExpr 0xa020b00 <col:38, col:42> '<dependent type>'
                (UnresolvedMemberExpr 0xa020ac0 <col:38> '<bound member function type>' lvalue))
              (DeclRefExpr 0xa020b1c <col:46> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa0204c0 '__last' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'))))))
    <<<NULL>>>)
  (ReturnStmt 0xa020ca0 <line:156:7, col:14>
    (DeclRefExpr 0xa020c84 <col:14> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa020480 '__first' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))


    vector<_Tp, _Alloc> &operator=(const vector<_Tp, _Alloc> &__x) (CompoundStmt 0xa022b80 </usr/include/c++/4.6/bits/vector.tcc:163:5, line:196:5>
  (IfStmt 0xa022b28 <line:164:7, line:194:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa0214a0 <line:164:11, col:19> '<dependent type>'
      (UnresolvedLookupExpr 0xa021440 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bacde0 0x9bc3130 0x9bc62c0 0x9c11360 0x9c32300 0x9c32670 0x9d60120 0x9d60630 0x9d60b40 0x9e73820 0x9fe96a0)
      (CXXOperatorCallExpr 0xa021410 <col:11, col:12> '<dependent type>'
        (UnresolvedLookupExpr 0xa0213d0 <col:11, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e0a5b0 0x9e0bdb0 0x9e0d020)
        (DeclRefExpr 0xa0213b4 <col:12> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa021170 '__x' 'const vector<_Tp, _Alloc> &'))
      (CXXThisExpr 0xa021430 <col:19> 'vector<_Tp, _Alloc> *' this))
    (CompoundStmt 0xa022b08 <line:165:2, line:194:2>
      (DeclStmt 0xa021578 <line:166:4, col:39>
        0xa0214d0 "const size_type __xlen =
          (CallExpr 0xa021558 <col:29, col:38> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa021520 <col:29, col:33> '<dependent type>' lvalue
              (DeclRefExpr 0xa021504 <col:29> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa021170 '__x' 'const vector<_Tp, _Alloc> &')))")
      (IfStmt 0xa022940 <line:167:4, line:192:6>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa021640 <line:167:8, col:26> '<dependent type>'
          (UnresolvedLookupExpr 0xa0215f0 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bad330 0x9bc37b0 0x9bc6740 0x9d622b0 0x9d627e0 0x9d62d10 0x9fe9c10)
          (DeclRefExpr 0xa021588 <col:8> 'const size_type':'const unsigned int' lvalue Var 0xa0214d0 '__xlen' 'const size_type':'const unsigned int')
          (CallExpr 0xa0215d0 <col:17, col:26> '<dependent type>'
            (MemberExpr 0xa0215b0 <col:17> '<bound member function type>' ->capacity 0x9fd6170
              (CXXThisExpr 0xa0215a0 <col:17> 'vector<_Tp, _Alloc> *' this))))
        (CompoundStmt 0xa021eb8 <line:168:6, line:178:6>
          (DeclStmt 0xa021818 <line:169:8, line:170:20>
            0xa021670 "pointer __tmp =
              (CallExpr 0xa0217f0 <line:169:24, line:170:19> '<dependent type>'
                (UnresolvedMemberExpr 0xa0216b8 <line:169:24> '<bound member function type>' lvalue)
                (DeclRefExpr 0xa0216f4 <col:45> 'const size_type':'const unsigned int' lvalue Var 0xa0214d0 '__xlen' 'const size_type':'const unsigned int')
                (CallExpr 0xa021760 <col:53, col:63> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa021728 <col:53, col:57> '<dependent type>' lvalue
                    (DeclRefExpr 0xa02170c <col:53> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa021170 '__x' 'const vector<_Tp, _Alloc> &')))
                (CallExpr 0xa0217d0 <line:170:10, col:18> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa021798 <col:10, col:14> '<dependent type>' lvalue
                    (DeclRefExpr 0xa02177c <col:10> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa021170 '__x' 'const vector<_Tp, _Alloc> &'))))")
          (CallExpr 0xa0219e8 <line:171:8, line:172:29> '<dependent type>'
            (UnresolvedLookupExpr 0xa021850 <line:171:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fbc330 0x9fbcff0 0x9fbd690 0x9fbdc40)
            (CXXDependentScopeMemberExpr 0xa0218d8 <col:22, col:36> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa0218a0 <col:22, col:28> '<dependent type>' lvalue
                (CXXThisExpr 0xa021890 <col:22> 'vector<_Tp, _Alloc> *' this)))
            (CXXDependentScopeMemberExpr 0xa021958 <col:46, col:60> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa021920 <col:46, col:52> '<dependent type>' lvalue
                (CXXThisExpr 0xa021910 <col:46> 'vector<_Tp, _Alloc> *' this)))
            (CallExpr 0xa0219c8 <line:172:8, col:28> '<dependent type>'
              (UnresolvedMemberExpr 0xa02198c <col:8> '<dependent type>' lvalue)))
          (CallExpr 0xa021c38 <line:173:8, line:175:32> '<dependent type>'
            (UnresolvedMemberExpr 0xa021a10 <line:173:8> '<dependent type>' lvalue)
            (CXXDependentScopeMemberExpr 0xa021a98 <col:22, col:36> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa021a60 <col:22, col:28> '<dependent type>' lvalue
                (CXXThisExpr 0xa021a50 <col:22> 'vector<_Tp, _Alloc> *' this)))
            (CXXOperatorCallExpr 0xa021c10 <line:174:8, line:175:24> '<dependent type>'
              (UnresolvedLookupExpr 0xa021bd0 <col:8, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0 0x9ff0a50)
              (CXXDependentScopeMemberExpr 0xa021b18 <line:174:8, col:22> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa021ae0 <col:8, col:14> '<dependent type>' lvalue
                  (CXXThisExpr 0xa021ad0 <col:8> 'vector<_Tp, _Alloc> *' this)))
              (CXXDependentScopeMemberExpr 0xa021b98 <line:175:10, col:24> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa021b60 <col:10, col:16> '<dependent type>' lvalue
                  (CXXThisExpr 0xa021b50 <col:10> 'vector<_Tp, _Alloc> *' this)))))
          (BinaryOperator 0xa021cf8 <line:176:8, col:33> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0xa021ca8 <col:8, col:22> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa021c70 <col:8, col:14> '<dependent type>' lvalue
                (CXXThisExpr 0xa021c60 <col:8> 'vector<_Tp, _Alloc> *' this)))
            (DeclRefExpr 0xa021cdc <col:33> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa021670 '__tmp' 'pointer':'typename _Tp_alloc_type::pointer'))
          (BinaryOperator 0xa021ea0 <line:177:8, col:67> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0xa021d58 <col:8, col:22> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa021d20 <col:8, col:14> '<dependent type>' lvalue
                (CXXThisExpr 0xa021d10 <col:8> 'vector<_Tp, _Alloc> *' this)))
            (CXXOperatorCallExpr 0xa021e78 <col:42, col:67> '<dependent type>'
              (UnresolvedLookupExpr 0xa021e28 <col:65, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d86680 0x9d87280 0x9d5d090 0x9d5d890 0x9ff2ef0 0x9ff5070)
              (CXXDependentScopeMemberExpr 0xa021dd8 <col:42, col:56> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa021da0 <col:42, col:48> '<dependent type>' lvalue
                  (CXXThisExpr 0xa021d90 <col:42> 'vector<_Tp, _Alloc> *' this)))
              (DeclRefExpr 0xa021e0c <col:67> 'const size_type':'const unsigned int' lvalue Var 0xa0214d0 '__xlen' 'const size_type':'const unsigned int'))))
        (IfStmt 0xa022920 <line:179:9, line:192:6>
          <<<NULL>>>
          (CXXOperatorCallExpr 0xa021f98 <line:179:13, col:23> '<dependent type>'
            (UnresolvedLookupExpr 0xa021f48 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bae1e0 0x9bc3fc0 0x9bc7850 0x9d64480 0x9d649b0 0x9d64ee0 0x9fea6a0)
            (CallExpr 0xa021f10 <col:13, col:18> '<dependent type>'
              (MemberExpr 0xa021ef0 <col:13> '<bound member function type>' ->size 0x9fd5f20
                (CXXThisExpr 0xa021ee0 <col:13> 'vector<_Tp, _Alloc> *' this)))
            (DeclRefExpr 0xa021f2c <col:23> 'const size_type':'const unsigned int' lvalue Var 0xa0214d0 '__xlen' 'const size_type':'const unsigned int'))
          (CompoundStmt 0xa0222d8 <line:180:6, line:183:6>
            (CallExpr 0xa0222b0 <line:181:8, line:182:36> '<dependent type>'
              (UnresolvedLookupExpr 0xa021fe0 <line:181:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fbc330 0x9fbcff0 0x9fbd690 0x9fbdc40)
              (CallExpr 0xa0221c0 <col:22, col:63> '<dependent type>'
                (UnresolvedLookupExpr 0xa022038 <col:22, col:27> '<overloaded function type>' lvalue (no ADL) = '1' 0x9bebb70 0x9e76600)
                (CallExpr 0xa0220c0 <col:32, col:42> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa022088 <col:32, col:36> '<dependent type>' lvalue
                    (DeclRefExpr 0xa022070 <col:32> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa021170 '__x' 'const vector<_Tp, _Alloc> &')))
                (CallExpr 0xa022130 <col:45, col:53> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa0220f8 <col:45, col:49> '<dependent type>' lvalue
                    (DeclRefExpr 0xa0220dc <col:45> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa021170 '__x' 'const vector<_Tp, _Alloc> &')))
                (CallExpr 0xa0221a0 <col:56, col:62> '<dependent type>'
                  (UnresolvedMemberExpr 0xa022160 <col:56> '<bound member function type>' lvalue)))
              (CallExpr 0xa022238 <line:182:8, col:12> '<dependent type>'
                (UnresolvedMemberExpr 0xa0221f8 <col:8> '<bound member function type>' lvalue))
              (CallExpr 0xa022290 <col:15, col:35> '<dependent type>'
                (UnresolvedMemberExpr 0xa022254 <col:15> '<dependent type>' lvalue))))
          (CompoundStmt 0xa022908 <line:185:6, line:192:6>
            (CallExpr 0xa0225a0 <line:186:8, line:187:26> '<dependent type>'
              (UnresolvedLookupExpr 0xa022310 <line:186:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0x9bebb70 0x9e76600)
              (CXXDependentScopeMemberExpr 0xa022398 <col:18, col:30> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa022360 <col:18, col:22> '<dependent type>' lvalue
                  (DeclRefExpr 0xa022348 <col:18> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa021170 '__x' 'const vector<_Tp, _Alloc> &')))
              (CXXOperatorCallExpr 0xa0224f8 <col:40, col:68> '<dependent type>'
                (UnresolvedLookupExpr 0xa0224a8 <col:61, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d86680 0x9d87280 0x9d5d090 0x9d5d890 0x9ff2ef0 0x9ff5070)
                (CXXDependentScopeMemberExpr 0xa022420 <col:40, col:52> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa0223e8 <col:40, col:44> '<dependent type>' lvalue
                    (DeclRefExpr 0xa0223cc <col:40> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa021170 '__x' 'const vector<_Tp, _Alloc> &')))
                (CallExpr 0xa022488 <col:63, col:68> '<dependent type>'
                  (MemberExpr 0xa022468 <col:63> '<bound member function type>' ->size 0x9fd5f20
                    (CXXThisExpr 0xa022458 <col:63> 'vector<_Tp, _Alloc> *' this))))
              (CXXDependentScopeMemberExpr 0xa022568 <line:187:4, col:18> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa022530 <col:4, col:10> '<dependent type>' lvalue
                  (CXXThisExpr 0xa022520 <col:4> 'vector<_Tp, _Alloc> *' this))))
            (CallExpr 0xa0228d8 <line:188:8, line:191:29> '<dependent type>'
              (UnresolvedLookupExpr 0xa0225f0 <line:188:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fc8600 0x9fc8f00)
              (CXXOperatorCallExpr 0xa022750 <col:36, col:64> '<dependent type>'
                (UnresolvedLookupExpr 0xa022700 <col:57, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d86680 0x9d87280 0x9d5d090 0x9d5d890 0x9ff2ef0 0x9ff5070)
                (CXXDependentScopeMemberExpr 0xa022678 <col:36, col:48> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa022640 <col:36, col:40> '<dependent type>' lvalue
                    (DeclRefExpr 0xa022628 <col:36> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa021170 '__x' 'const vector<_Tp, _Alloc> &')))
                (CallExpr 0xa0226e0 <col:59, col:64> '<dependent type>'
                  (MemberExpr 0xa0226c0 <col:59> '<bound member function type>' ->size 0x9fd5f20
                    (CXXThisExpr 0xa0226b0 <col:59> 'vector<_Tp, _Alloc> *' this))))
              (CXXDependentScopeMemberExpr 0xa0227c8 <line:189:8, col:20> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa022790 <col:8, col:12> '<dependent type>' lvalue
                  (DeclRefExpr 0xa022774 <col:8> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa021170 '__x' 'const vector<_Tp, _Alloc> &')))
              (CXXDependentScopeMemberExpr 0xa022848 <line:190:8, col:22> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa022810 <col:8, col:14> '<dependent type>' lvalue
                  (CXXThisExpr 0xa022800 <col:8> 'vector<_Tp, _Alloc> *' this)))
              (CallExpr 0xa0228b8 <line:191:8, col:28> '<dependent type>'
                (UnresolvedMemberExpr 0xa02287c <col:8> '<dependent type>' lvalue))))))
      (BinaryOperator 0xa022af0 <line:193:4, col:55> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa0229a8 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa022970 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa022960 <col:4> 'vector<_Tp, _Alloc> *' this)))
        (CXXOperatorCallExpr 0xa022ac8 <col:30, col:55> '<dependent type>'
          (UnresolvedLookupExpr 0xa022a78 <col:53, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d86680 0x9d87280 0x9d5d090 0x9d5d890 0x9ff2ef0 0x9ff5070)
          (CXXDependentScopeMemberExpr 0xa022a28 <col:30, col:44> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa0229f0 <col:30, col:36> '<dependent type>' lvalue
              (CXXThisExpr 0xa0229e0 <col:30> 'vector<_Tp, _Alloc> *' this)))
          (DeclRefExpr 0xa022a5c <col:55> 'const size_type':'const unsigned int' lvalue Var 0xa0214d0 '__xlen' 'const size_type':'const unsigned int'))))
    <<<NULL>>>)
  (ReturnStmt 0xa022b70 <line:195:7, col:15>
    (UnaryOperator 0xa022b58 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa022b48 <col:15> 'vector<_Tp, _Alloc> *' this))))


    void _M_fill_assign(size_t __n, const value_type &__val) (CompoundStmt 0xa023a28 </usr/include/c++/4.6/bits/vector.tcc:202:5, line:218:5>
  (IfStmt 0xa023a08 <line:203:7, line:217:72>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa023060 <line:203:11, col:26> '<dependent type>'
      (UnresolvedLookupExpr 0xa023010 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bad330 0x9bc37b0 0x9bc6740 0x9d622b0 0x9d627e0 0x9d62d10 0x9fe9c10)
      (DeclRefExpr 0xa022fa8 <col:11> 'size_t':'unsigned int' lvalue ParmVar 0xa022e40 '__n' 'size_t':'unsigned int')
      (CallExpr 0xa022ff0 <col:17, col:26> '<dependent type>'
        (MemberExpr 0xa022fd0 <col:17> '<bound member function type>' ->capacity 0x9fd6170
          (CXXThisExpr 0xa022fc0 <col:17> 'vector<_Tp, _Alloc> *' this))))
    (CompoundStmt 0xa023220 <line:204:2, line:207:2>
      (DeclStmt 0xa023178 <line:205:4, col:51>
        0xa023090 "vector<_Tp, _Alloc> __tmp =
          (ParenListExpr 0xa023150 <col:16, col:50> 'vector<_Tp, _Alloc>'
            (DeclRefExpr 0xa0230c4 <col:17> 'size_t':'unsigned int' lvalue ParmVar 0xa022e40 '__n' 'size_t':'unsigned int')
            (DeclRefExpr 0xa0230dc <col:22> 'const value_type':'const _Tp' lvalue ParmVar 0xa022e90 '__val' 'const value_type &')
            (CallExpr 0xa023130 <col:29, col:49> '<dependent type>'
              (UnresolvedMemberExpr 0xa0230f4 <col:29> '<dependent type>' lvalue)))")
      (CallExpr 0xa023200 <line:206:4, col:20> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa0231a0 <col:4, col:10> '<dependent type>' lvalue
          (DeclRefExpr 0xa023188 <col:4> 'vector<_Tp, _Alloc>' lvalue Var 0xa023090 '__tmp' 'vector<_Tp, _Alloc>'))
        (UnaryOperator 0xa0231e8 <col:15, col:16> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa0231d8 <col:16> 'vector<_Tp, _Alloc> *' this))))
    (IfStmt 0xa0239e8 <line:208:12, line:217:72>
      <<<NULL>>>
      (CXXOperatorCallExpr 0xa0232f0 <line:208:16, col:27> '<dependent type>'
        (UnresolvedLookupExpr 0xa0232a0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bad330 0x9bc37b0 0x9bc6740 0x9d622b0 0x9d627e0 0x9d62d10 0x9fe9c10)
        (DeclRefExpr 0xa023238 <col:16> 'size_t':'unsigned int' lvalue ParmVar 0xa022e40 '__n' 'size_t':'unsigned int')
        (CallExpr 0xa023280 <col:22, col:27> '<dependent type>'
          (MemberExpr 0xa023260 <col:22> '<bound member function type>' ->size 0x9fd5f20
            (CXXThisExpr 0xa023250 <col:22> 'vector<_Tp, _Alloc> *' this))))
      (CompoundStmt 0xa023850 <line:209:2, line:215:2>
        (CallExpr 0xa023468 <line:210:4, col:35> '<dependent type>'
          (UnresolvedLookupExpr 0xa023338 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x9bf30e0 0x9ff5720)
          (CallExpr 0xa0233c0 <col:14, col:20> '<dependent type>'
            (UnresolvedMemberExpr 0xa023380 <col:14> '<bound member function type>' lvalue))
          (CallExpr 0xa023430 <col:23, col:27> '<dependent type>'
            (UnresolvedMemberExpr 0xa0233f0 <col:23> '<bound member function type>' lvalue))
          (DeclRefExpr 0xa02344c <col:30> 'const value_type':'const _Tp' lvalue ParmVar 0xa022e90 '__val' 'const value_type &'))
        (CallExpr 0xa0236b0 <line:211:4, line:213:27> '<dependent type>'
          (UnresolvedLookupExpr 0xa0234b8 <line:211:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fca500 0x9fcae30)
          (CXXDependentScopeMemberExpr 0xa023538 <col:34, col:48> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa023500 <col:34, col:40> '<dependent type>' lvalue
              (CXXThisExpr 0xa0234f0 <col:34> 'vector<_Tp, _Alloc> *' this)))
          (CXXOperatorCallExpr 0xa023618 <line:212:6, col:17> '<dependent type>'
            (UnresolvedLookupExpr 0xa0235d8 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0 0x9ff0a50)
            (DeclRefExpr 0xa02356c <col:6> 'size_t':'unsigned int' lvalue ParmVar 0xa022e40 '__n' 'size_t':'unsigned int')
            (CallExpr 0xa0235b8 <col:12, col:17> '<dependent type>'
              (MemberExpr 0xa023598 <col:12> '<bound member function type>' ->size 0x9fd5f20
                (CXXThisExpr 0xa023588 <col:12> 'vector<_Tp, _Alloc> *' this))))
          (DeclRefExpr 0xa02363c <col:20> 'const value_type':'const _Tp' lvalue ParmVar 0xa022e90 '__val' 'const value_type &')
          (CallExpr 0xa023690 <line:213:6, col:26> '<dependent type>'
            (UnresolvedMemberExpr 0xa023654 <col:6> '<dependent type>' lvalue)))
        (CompoundAssignOperator 0xa023830 <line:214:4, col:42> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
          (CXXDependentScopeMemberExpr 0xa023728 <col:4, col:18> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa0236f0 <col:4, col:10> '<dependent type>' lvalue
              (CXXThisExpr 0xa0236e0 <col:4> 'vector<_Tp, _Alloc> *' this)))
          (CXXOperatorCallExpr 0xa023808 <col:31, col:42> '<dependent type>'
            (UnresolvedLookupExpr 0xa0237c8 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0 0x9ff0a50)
            (DeclRefExpr 0xa02375c <col:31> 'size_t':'unsigned int' lvalue ParmVar 0xa022e40 '__n' 'size_t':'unsigned int')
            (CallExpr 0xa0237a8 <col:37, col:42> '<dependent type>'
              (MemberExpr 0xa023788 <col:37> '<bound member function type>' ->size 0x9fd5f20
                (CXXThisExpr 0xa023778 <col:37> 'vector<_Tp, _Alloc> *' this))))))
      (CallExpr 0xa0239c8 <line:217:9, col:72> '<dependent type>'
        (MemberExpr 0xa023880 <col:9> '<bound member function type>' ->_M_erase_at_end 0x9fd9d00
          (CXXThisExpr 0xa023870 <col:9> 'vector<_Tp, _Alloc> *' this))
        (CallExpr 0xa0239a0 <col:25, col:71> '<dependent type>'
          (UnresolvedLookupExpr 0xa0238b8 <col:25, col:30> '<overloaded function type>' lvalue (no ADL) = '1' 0x9bf5800)
          (CXXDependentScopeMemberExpr 0xa023938 <col:37, col:51> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa023900 <col:37, col:43> '<dependent type>' lvalue
              (CXXThisExpr 0xa0238f0 <col:37> 'vector<_Tp, _Alloc> *' this)))
          (DeclRefExpr 0xa02396c <col:61> 'size_t':'unsigned int' lvalue ParmVar 0xa022e40 '__n' 'size_t':'unsigned int')
          (DeclRefExpr 0xa023984 <col:66> 'const value_type':'const _Tp' lvalue ParmVar 0xa022e90 '__val' 'const value_type &'))))))


    template <typename _InputIterator> void _M_assign_aux(_InputIterator __first, _InputIterator __last, std::input_iterator_tag) (CompoundStmt 0xa0245f0 </usr/include/c++/4.6/bits/vector.tcc:226:7, line:235:7>
  (DeclStmt 0xa024078 <line:227:2, col:39>
    0xa023fa0 "pointer __cur =
      (ParenListExpr 0xa024058 <col:15, col:38> 'pointer':'typename _Tp_alloc_type::pointer'
        (CXXDependentScopeMemberExpr 0xa024020 <col:16, col:30> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa023fe8 <col:16, col:22> '<dependent type>' lvalue
            (CXXThisExpr 0xa023fd8 <col:16> 'vector<_Tp, _Alloc> *' this))))")
  (ForStmt 0xa024368 <line:228:2, line:230:14>
    <<<NULL>>>
    <<<NULL>>>
    (BinaryOperator 0xa024260 <line:228:9, col:53> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0xa024118 <col:9, col:20> '<dependent type>'
        (UnresolvedLookupExpr 0xa0240b8 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bacde0 0x9bc3130 0x9bc62c0 0x9c11360 0x9c32300 0x9c32670 0x9d60120 0x9d60630 0x9d60b40 0x9e73820 0x9fe96a0)
        (DeclRefExpr 0xa024088 <col:9> '_InputIterator' lvalue ParmVar 0xa023d40 '__first' '_InputIterator')
        (DeclRefExpr 0xa0240a0 <col:20> '_InputIterator' lvalue ParmVar 0xa023d80 '__last' '_InputIterator'))
      (CXXOperatorCallExpr 0xa024238 <col:30, col:53> '<dependent type>'
        (UnresolvedLookupExpr 0xa0241d8 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bacde0 0x9bc3130 0x9bc62c0 0x9c11360 0x9c32300 0x9c32670 0x9d60120 0x9d60630 0x9d60b40 0x9e73820 0x9fe96a0)
        (DeclRefExpr 0xa02413c <col:30> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa023fa0 '__cur' 'pointer':'typename _Tp_alloc_type::pointer')
        (CXXDependentScopeMemberExpr 0xa0241a0 <col:39, col:53> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa024168 <col:39, col:45> '<dependent type>' lvalue
            (CXXThisExpr 0xa024158 <col:39> 'vector<_Tp, _Alloc> *' this)))))
    (BinaryOperator 0xa0242d8 <line:229:7, col:18> '<dependent type>' ','
      (UnaryOperator 0xa024290 <col:7, col:9> '<dependent type>' prefix '++'
        (DeclRefExpr 0xa024278 <col:9> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa023fa0 '__cur' 'pointer':'typename _Tp_alloc_type::pointer'))
      (UnaryOperator 0xa0242c0 <col:16, col:18> '<dependent type>' prefix '++'
        (DeclRefExpr 0xa0242a4 <col:18> '_InputIterator' lvalue ParmVar 0xa023d40 '__first' '_InputIterator')))
    (BinaryOperator 0xa024350 <line:230:4, col:14> '<dependent type>' '='
      (UnaryOperator 0xa024308 <col:4, col:5> '<dependent type>' prefix '*'
        (DeclRefExpr 0xa0242f0 <col:5> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa023fa0 '__cur' 'pointer':'typename _Tp_alloc_type::pointer'))
      (UnaryOperator 0xa024338 <col:13, col:14> '<dependent type>' prefix '*'
        (DeclRefExpr 0xa02431c <col:14> '_InputIterator' lvalue ParmVar 0xa023d40 '__first' '_InputIterator'))))
  (IfStmt 0xa0245d0 <line:231:2, line:234:33>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa024420 <line:231:6, col:17> '<dependent type>'
      (UnresolvedLookupExpr 0xa0243c0 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9babd20 0x9bc27f0 0x9bc5090 0x9c0f960 0x9c31ba0 0x9c31f30 0x9d5e270 0x9d5ece0 0x9d5f520 0x9d5fa90 0x9e73300 0x9fe87e0)
      (DeclRefExpr 0xa02438c <col:6> '_InputIterator' lvalue ParmVar 0xa023d40 '__first' '_InputIterator')
      (DeclRefExpr 0xa0243a4 <col:17> '_InputIterator' lvalue ParmVar 0xa023d80 '__last' '_InputIterator'))
    (CallExpr 0xa024490 <line:232:4, col:25> '<dependent type>'
      (MemberExpr 0xa024458 <col:4> '<bound member function type>' ->_M_erase_at_end 0x9fd9d00
        (CXXThisExpr 0xa024448 <col:4> 'vector<_Tp, _Alloc> *' this))
      (DeclRefExpr 0xa024478 <col:20> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa023fa0 '__cur' 'pointer':'typename _Tp_alloc_type::pointer'))
    (CallExpr 0xa0245a8 <line:234:4, col:33> '<dependent type>'
      (UnresolvedMemberExpr 0xa0244c0 <col:4> '<bound member function type>' lvalue)
      (CallExpr 0xa024558 <col:11, col:15> '<dependent type>'
        (UnresolvedMemberExpr 0xa024518 <col:11> '<bound member function type>' lvalue))
      (DeclRefExpr 0xa024574 <col:18> '_InputIterator' lvalue ParmVar 0xa023d40 '__first' '_InputIterator')
      (DeclRefExpr 0xa02458c <col:27> '_InputIterator' lvalue ParmVar 0xa023d80 '__last' '_InputIterator'))))

;
    template <typename _ForwardIterator> void _M_assign_aux(_ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag) (CompoundStmt 0xa025db0 </usr/include/c++/4.6/bits/vector.tcc:243:7, line:270:7>
  (DeclStmt 0xa024c50 <line:244:2, col:56>
    0xa024b70 "const size_type __len =
      (CallExpr 0xa024c28 <col:26, col:55> '<dependent type>'
        (UnresolvedLookupExpr 0xa024bc0 <col:26, col:31> '<overloaded function type>' lvalue (no ADL) = '1' 0x9bba500)
        (DeclRefExpr 0xa024bf4 <col:40> '_ForwardIterator' lvalue ParmVar 0xa024910 '__first' '_ForwardIterator')
        (DeclRefExpr 0xa024c0c <col:49> '_ForwardIterator' lvalue ParmVar 0xa024950 '__last' '_ForwardIterator'))")
  (IfStmt 0xa025d90 <line:246:2, line:269:4>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa024d18 <line:246:6, col:23> '<dependent type>'
      (UnresolvedLookupExpr 0xa024cc8 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bad330 0x9bc37b0 0x9bc6740 0x9d622b0 0x9d627e0 0x9d62d10 0x9fe9c10)
      (DeclRefExpr 0xa024c60 <col:6> 'const size_type':'const unsigned int' lvalue Var 0xa024b70 '__len' 'const size_type':'const unsigned int')
      (CallExpr 0xa024ca8 <col:14, col:23> '<dependent type>'
        (MemberExpr 0xa024c88 <col:14> '<bound member function type>' ->capacity 0x9fd6170
          (CXXThisExpr 0xa024c78 <col:14> 'vector<_Tp, _Alloc> *' this))))
    (CompoundStmt 0xa025620 <line:247:4, line:257:4>
      (DeclStmt 0xa024e68 <line:248:6, col:65>
        0xa024d50 "pointer __tmp =
          (ParenListExpr 0xa024e48 <col:19, col:64> 'pointer':'typename _Tp_alloc_type::pointer'
            (CallExpr 0xa024e20 <col:20, col:63> '<dependent type>'
              (UnresolvedMemberExpr 0xa024d98 <col:20> '<bound member function type>' lvalue)
              (DeclRefExpr 0xa024dd4 <col:41> 'const size_type':'const unsigned int' lvalue Var 0xa024b70 '__len' 'const size_type':'const unsigned int')
              (DeclRefExpr 0xa024dec <col:48> '_ForwardIterator' lvalue ParmVar 0xa024910 '__first' '_ForwardIterator')
              (DeclRefExpr 0xa024e04 <col:57> '_ForwardIterator' lvalue ParmVar 0xa024950 '__last' '_ForwardIterator')))")
      (CallExpr 0xa025038 <line:249:6, line:250:27> '<dependent type>'
        (UnresolvedLookupExpr 0xa024ea0 <line:249:6, col:11> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fbc330 0x9fbcff0 0x9fbd690 0x9fbdc40)
        (CXXDependentScopeMemberExpr 0xa024f28 <col:20, col:34> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa024ef0 <col:20, col:26> '<dependent type>' lvalue
            (CXXThisExpr 0xa024ee0 <col:20> 'vector<_Tp, _Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0xa024fa8 <col:44, col:58> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa024f70 <col:44, col:50> '<dependent type>' lvalue
            (CXXThisExpr 0xa024f60 <col:44> 'vector<_Tp, _Alloc> *' this)))
        (CallExpr 0xa025018 <line:250:6, col:26> '<dependent type>'
          (UnresolvedMemberExpr 0xa024fdc <col:6> '<dependent type>' lvalue)))
      (CallExpr 0xa025288 <line:251:6, line:253:30> '<dependent type>'
        (UnresolvedMemberExpr 0xa025060 <line:251:6> '<dependent type>' lvalue)
        (CXXDependentScopeMemberExpr 0xa0250e8 <col:20, col:34> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa0250b0 <col:20, col:26> '<dependent type>' lvalue
            (CXXThisExpr 0xa0250a0 <col:20> 'vector<_Tp, _Alloc> *' this)))
        (CXXOperatorCallExpr 0xa025260 <line:252:6, line:253:22> '<dependent type>'
          (UnresolvedLookupExpr 0xa025220 <col:6, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0 0x9ff0a50)
          (CXXDependentScopeMemberExpr 0xa025168 <line:252:6, col:20> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa025130 <col:6, col:12> '<dependent type>' lvalue
              (CXXThisExpr 0xa025120 <col:6> 'vector<_Tp, _Alloc> *' this)))
          (CXXDependentScopeMemberExpr 0xa0251e8 <line:253:8, col:22> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa0251b0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa0251a0 <col:8> 'vector<_Tp, _Alloc> *' this)))))
      (BinaryOperator 0xa025348 <line:254:6, col:31> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa0252f8 <col:6, col:20> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa0252c0 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa0252b0 <col:6> 'vector<_Tp, _Alloc> *' this)))
        (DeclRefExpr 0xa02532c <col:31> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa024d50 '__tmp' 'pointer':'typename _Tp_alloc_type::pointer'))
      (BinaryOperator 0xa0254f0 <line:255:6, col:57> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa0253a8 <col:6, col:20> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa025370 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa025360 <col:6> 'vector<_Tp, _Alloc> *' this)))
        (CXXOperatorCallExpr 0xa0254c8 <col:32, col:57> '<dependent type>'
          (UnresolvedLookupExpr 0xa025478 <col:55, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d86680 0x9d87280 0x9d5d090 0x9d5d890 0x9ff2ef0 0x9ff5070)
          (CXXDependentScopeMemberExpr 0xa025428 <col:32, col:46> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa0253f0 <col:32, col:38> '<dependent type>' lvalue
              (CXXThisExpr 0xa0253e0 <col:32> 'vector<_Tp, _Alloc> *' this)))
          (DeclRefExpr 0xa02545c <col:57> 'const size_type':'const unsigned int' lvalue Var 0xa024b70 '__len' 'const size_type':'const unsigned int')))
      (BinaryOperator 0xa025608 <line:256:6, col:54> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa025550 <col:6, col:20> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa025518 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa025508 <col:6> 'vector<_Tp, _Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0xa0255d0 <col:40, col:54> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa025598 <col:40, col:46> '<dependent type>' lvalue
            (CXXThisExpr 0xa025588 <col:40> 'vector<_Tp, _Alloc> *' this)))))
    (IfStmt 0xa025d70 <line:258:7, line:269:4>
      <<<NULL>>>
      (CXXOperatorCallExpr 0xa025700 <line:258:11, col:21> '<dependent type>'
        (UnresolvedLookupExpr 0xa0256b0 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bae1e0 0x9bc3fc0 0x9bc7850 0x9d64480 0x9d649b0 0x9d64ee0 0x9fea6a0)
        (CallExpr 0xa025678 <col:11, col:16> '<dependent type>'
          (MemberExpr 0xa025658 <col:11> '<bound member function type>' ->size 0x9fd5f20
            (CXXThisExpr 0xa025648 <col:11> 'vector<_Tp, _Alloc> *' this)))
        (DeclRefExpr 0xa025694 <col:21> 'const size_type':'const unsigned int' lvalue Var 0xa024b70 '__len' 'const size_type':'const unsigned int'))
      (CallExpr 0xa025880 <line:259:4, col:70> '<dependent type>'
        (MemberExpr 0xa025738 <col:4> '<bound member function type>' ->_M_erase_at_end 0x9fd9d00
          (CXXThisExpr 0xa025728 <col:4> 'vector<_Tp, _Alloc> *' this))
        (CallExpr 0xa025858 <col:20, col:69> '<dependent type>'
          (UnresolvedLookupExpr 0xa025770 <col:20, col:25> '<overloaded function type>' lvalue (no ADL) = '1' 0x9bebb70 0x9e76600)
          (DeclRefExpr 0xa0257a8 <col:30> '_ForwardIterator' lvalue ParmVar 0xa024910 '__first' '_ForwardIterator')
          (DeclRefExpr 0xa0257c0 <col:39> '_ForwardIterator' lvalue ParmVar 0xa024950 '__last' '_ForwardIterator')
          (CXXDependentScopeMemberExpr 0xa025820 <col:47, col:61> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa0257e8 <col:47, col:53> '<dependent type>' lvalue
              (CXXThisExpr 0xa0257d8 <col:47> 'vector<_Tp, _Alloc> *' this)))))
      (CompoundStmt 0xa025d50 <line:261:4, line:269:4>
        (DeclStmt 0xa025900 <line:262:6, col:38>
          0xa0258b0 "_ForwardIterator __mid =
            (DeclRefExpr 0xa0258e4 <col:31> '_ForwardIterator' lvalue ParmVar 0xa024910 '__first' '_ForwardIterator')")
        (CallExpr 0xa0259d8 <line:263:6, col:32> '<dependent type>'
          (UnresolvedLookupExpr 0xa025938 <col:6, col:11> '<overloaded function type>' lvalue (no ADL) = '1' 0x9bbbe10)
          (DeclRefExpr 0xa02596c <col:19> '_ForwardIterator' lvalue Var 0xa0258b0 '__mid' '_ForwardIterator')
          (CallExpr 0xa0259b8 <col:26, col:31> '<dependent type>'
            (MemberExpr 0xa025998 <col:26> '<bound member function type>' ->size 0x9fd5f20
              (CXXThisExpr 0xa025988 <col:26> 'vector<_Tp, _Alloc> *' this))))
        (CallExpr 0xa025b08 <line:264:6, col:54> '<dependent type>'
          (UnresolvedLookupExpr 0xa025a20 <col:6, col:11> '<overloaded function type>' lvalue (no ADL) = '1' 0x9bebb70 0x9e76600)
          (DeclRefExpr 0xa025a58 <col:16> '_ForwardIterator' lvalue ParmVar 0xa024910 '__first' '_ForwardIterator')
          (DeclRefExpr 0xa025a70 <col:25> '_ForwardIterator' lvalue Var 0xa0258b0 '__mid' '_ForwardIterator')
          (CXXDependentScopeMemberExpr 0xa025ad0 <col:32, col:46> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa025a98 <col:32, col:38> '<dependent type>' lvalue
              (CXXThisExpr 0xa025a88 <col:32> 'vector<_Tp, _Alloc> *' this))))
        (BinaryOperator 0xa025d38 <line:265:6, line:268:29> '<dependent type>' '='
          (CXXDependentScopeMemberExpr 0xa025b78 <line:265:6, col:20> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa025b40 <col:6, col:12> '<dependent type>' lvalue
              (CXXThisExpr 0xa025b30 <col:6> 'vector<_Tp, _Alloc> *' this)))
          (CallExpr 0xa025d08 <line:266:8, line:268:29> '<dependent type>'
            (UnresolvedLookupExpr 0xa025bc8 <line:266:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fc8600 0x9fc8f00)
            (DeclRefExpr 0xa025c00 <col:36> '_ForwardIterator' lvalue Var 0xa0258b0 '__mid' '_ForwardIterator')
            (DeclRefExpr 0xa025c18 <col:43> '_ForwardIterator' lvalue ParmVar 0xa024950 '__last' '_ForwardIterator')
            (CXXDependentScopeMemberExpr 0xa025c78 <line:267:8, col:22> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa025c40 <col:8, col:14> '<dependent type>' lvalue
                (CXXThisExpr 0xa025c30 <col:8> 'vector<_Tp, _Alloc> *' this)))
            (CallExpr 0xa025ce8 <line:268:8, col:28> '<dependent type>'
              (UnresolvedMemberExpr 0xa025cac <col:8> '<dependent type>' lvalue))))))))

;
    void _M_insert_aux(iterator __position, const _Tp &__x) (CompoundStmt 0xa027fd0 </usr/include/c++/4.6/bits/vector.tcc:303:5, line:373:5>
  (IfStmt 0xa027fb0 <line:304:7, line:372:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa026358 <line:304:11, col:52> '<dependent type>'
      (UnresolvedLookupExpr 0xa0262f8 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bacde0 0x9bc3130 0x9bc62c0 0x9c11360 0x9c32300 0x9c32670 0x9d60120 0x9d60630 0x9d60b40 0x9e73820 0x9fe96a0)
      (CXXDependentScopeMemberExpr 0xa026240 <col:11, col:25> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa026208 <col:11, col:17> '<dependent type>' lvalue
          (CXXThisExpr 0xa0261f8 <col:11> 'vector<_Tp, _Alloc> *' this)))
      (CXXDependentScopeMemberExpr 0xa0262c0 <col:38, col:52> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa026288 <col:38, col:44> '<dependent type>' lvalue
          (CXXThisExpr 0xa026278 <col:38> 'vector<_Tp, _Alloc> *' this))))
    (CompoundStmt 0xa026a48 <line:305:2, line:321:2>
      (CallExpr 0xa0265c8 <line:306:4, line:308:14> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa0263c8 <line:306:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa026390 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa026380 <col:4> 'vector<_Tp, _Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0xa026448 <col:28, col:42> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa026410 <col:28, col:34> '<dependent type>' lvalue
            (CXXThisExpr 0xa026400 <col:28> 'vector<_Tp, _Alloc> *' this)))
        (ParenExpr 0xa0265b0 </usr/include/c++/4.6/bits/move.h:105:30, col:36> '<dependent type>'
          (UnaryOperator 0xa026598 </usr/include/c++/4.6/bits/vector.tcc:307:21, line:308:12> '<dependent type>' prefix '*'
            (ParenExpr 0xa026580 <line:307:22, line:308:12> '<dependent type>'
              (CXXOperatorCallExpr 0xa026558 <line:307:23, line:308:11> '<dependent type>'
                (UnresolvedLookupExpr 0xa026518 <col:9, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0 0x9ff0a50)
                (CXXDependentScopeMemberExpr 0xa0264c8 <line:307:23, col:37> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa026490 <col:23, col:29> '<dependent type>' lvalue
                    (CXXThisExpr 0xa026480 <col:23> 'vector<_Tp, _Alloc> *' this)))
                (IntegerLiteral 0xa026500 <line:308:11> 'int' 1))))))
      (UnaryOperator 0xa026670 <line:309:4, col:20> '<dependent type>' prefix '++'
        (CXXDependentScopeMemberExpr 0xa026638 <col:6, col:20> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa026600 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa0265f0 <col:6> 'vector<_Tp, _Alloc> *' this))))
      (DeclStmt 0xa0266e0 <line:311:4, col:22>
        0xa026690 "_Tp __x_copy =
          (DeclRefExpr 0xa0266c4 <col:19> 'const _Tp' lvalue ParmVar 0xa0260e0 '__x' 'const _Tp &')")
      (CallExpr 0xa0269c0 </usr/include/c++/4.6/bits/stl_algobase.h:666:48, col:80> '<dependent type>'
        (UnresolvedLookupExpr 0xa026718 <col:48, col:53> '<overloaded function type>' lvalue (no ADL) = '1' 0x9bf0b70)
        (CallExpr 0xa0267a0 </usr/include/c++/4.6/bits/vector.tcc:313:28, col:44> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa026768 <col:28, col:39> '<dependent type>' lvalue
            (DeclRefExpr 0xa02674c <col:28> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa026070 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
        (CXXOperatorCallExpr 0xa026898 <line:314:7, col:33> '<dependent type>'
          (UnresolvedLookupExpr 0xa026858 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0 0x9ff0a50)
          (CXXDependentScopeMemberExpr 0xa026808 <col:7, col:21> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa0267d0 <col:7, col:13> '<dependent type>' lvalue
              (CXXThisExpr 0xa0267c0 <col:7> 'vector<_Tp, _Alloc> *' this)))
          (IntegerLiteral 0xa026840 <col:33> 'int' 2))
        (CXXOperatorCallExpr 0xa026998 <line:315:7, col:33> '<dependent type>'
          (UnresolvedLookupExpr 0xa026958 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0 0x9ff0a50)
          (CXXDependentScopeMemberExpr 0xa026908 <col:7, col:21> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa0268d0 <col:7, col:13> '<dependent type>' lvalue
              (CXXThisExpr 0xa0268c0 <col:7> 'vector<_Tp, _Alloc> *' this)))
          (IntegerLiteral 0xa026940 <col:33> 'int' 1)))
      (BinaryOperator 0xa026a30 <line:317:4, col:18> '<dependent type>' '='
        (UnaryOperator 0xa026a00 <col:4, col:5> '<dependent type>' prefix '*'
          (DeclRefExpr 0xa0269e8 <col:5> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa026070 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'))
        (DeclRefExpr 0xa026a14 <col:18> '_Tp' lvalue Var 0xa026690 '__x_copy' '_Tp')))
    (CompoundStmt 0xa027f70 <line:323:2, line:372:2>
      (DeclStmt 0xa026bd0 <line:324:4, line:325:57>
        0xa026ac0 "const size_type __len =
          (CallExpr 0xa026ba8 <col:6, col:56> '<dependent type>'
            (MemberExpr 0xa026b08 <col:6> '<bound member function type>' ->_M_check_len 0x9fd9bf0
              (CXXThisExpr 0xa026af8 <col:6> 'vector<_Tp, _Alloc> *' this))
            (CXXFunctionalCastExpr 0xa026b58 <col:19, col:30> 'size_type':'unsigned int' functional cast to size_type <NoOp>
              (ImplicitCastExpr 0xa026b48 <col:29> 'size_type':'unsigned int' <IntegralCast>
                (IntegerLiteral 0xa026b30 <col:29> 'int' 1)))
            (StringLiteral 0xa026b70 <col:33> 'const char [22]' lvalue "vector::_M_insert_aux"))")
      (DeclStmt 0xa026d18 <line:326:4, col:57>
        0xa026bf0 "const size_type __elems_before =
          (CXXOperatorCallExpr 0xa026cf0 <col:37, col:56> '<dependent type>'
            (UnresolvedLookupExpr 0xa026cb0 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0 0x9ff0a50)
            (DeclRefExpr 0xa026c24 <col:37> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa026070 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
            (CallExpr 0xa026c90 <col:50, col:56> '<dependent type>'
              (UnresolvedMemberExpr 0xa026c50 <col:50> '<bound member function type>' lvalue)))")
      (DeclStmt 0xa026e08 <line:327:4, col:49>
        0xa026d30 "pointer __new_start =
          (ParenListExpr 0xa026de8 <col:23, col:48> 'pointer':'typename _Tp_alloc_type::pointer'
            (CallExpr 0xa026dc8 <col:24, col:47> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa026d78 <col:24, col:30> '<dependent type>' lvalue
                (CXXThisExpr 0xa026d68 <col:24> 'vector<_Tp, _Alloc> *' this))
              (DeclRefExpr 0xa026dac <col:42> 'const size_type':'const unsigned int' lvalue Var 0xa026ac0 '__len' 'const size_type':'const unsigned int')))")
      (DeclStmt 0xa026e90 <line:328:4, col:37>
        0xa026e20 "pointer __new_finish =
          (ParenListExpr 0xa026e70 <col:24, col:36> 'pointer':'typename _Tp_alloc_type::pointer'
            (DeclRefExpr 0xa026e54 <col:25> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa026d30 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer'))")
      (IfStmt 0xa0274d8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/vector.tcc:354:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa026ea0 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa0274b0 </usr/include/c++/4.6/bits/vector.tcc:330:6, line:354:6>
          (CallExpr 0xa026ff0 <line:335:8, line:339:35> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa026ef8 <line:335:8, col:22> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa026ec0 <col:8, col:14> '<dependent type>' lvalue
                (CXXThisExpr 0xa026eb0 <col:8> 'vector<_Tp, _Alloc> *' this)))
            (CXXOperatorCallExpr 0xa026fb0 <col:32, col:46> '<dependent type>'
              (UnresolvedLookupExpr 0xa026f60 <col:44, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d86680 0x9d87280 0x9d5d090 0x9d5d890 0x9ff2ef0 0x9ff5070)
              (DeclRefExpr 0xa026f2c <col:32> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa026d30 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
              (DeclRefExpr 0xa026f44 <col:46> 'const size_type':'const unsigned int' lvalue Var 0xa026bf0 '__elems_before' 'const size_type':'const unsigned int'))
            (DeclRefExpr 0xa026fd4 <line:339:32> 'const _Tp' lvalue ParmVar 0xa0260e0 '__x' 'const _Tp &'))
          (BinaryOperator 0xa027048 <line:341:8, col:23> '<dependent type>' '='
            (DeclRefExpr 0xa027014 <col:8> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa026e20 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
            (IntegerLiteral 0xa027030 <col:23> 'int' 0))
          (BinaryOperator 0xa027258 <line:343:8, line:346:31> '<dependent type>' '='
            (DeclRefExpr 0xa027060 <line:343:8> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa026e20 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
            (CallExpr 0xa027228 <line:344:3, line:346:31> '<dependent type>'
              (UnresolvedLookupExpr 0xa027090 <line:344:3, col:8> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fc9310)
              (CXXDependentScopeMemberExpr 0xa027110 <col:31, col:45> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa0270d8 <col:31, col:37> '<dependent type>' lvalue
                  (CXXThisExpr 0xa0270c8 <col:31> 'vector<_Tp, _Alloc> *' this)))
              (CallExpr 0xa027198 <line:345:10, col:26> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa027160 <col:10, col:21> '<dependent type>' lvalue
                  (DeclRefExpr 0xa027144 <col:10> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa026070 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
              (DeclRefExpr 0xa0271b4 <col:29> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa026d30 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
              (CallExpr 0xa027208 <line:346:10, col:30> '<dependent type>'
                (UnresolvedMemberExpr 0xa0271cc <col:10> '<dependent type>' lvalue))))
          (UnaryOperator 0xa027288 <line:347:8, col:10> '<dependent type>' prefix '++'
            (DeclRefExpr 0xa027270 <col:10> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa026e20 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer'))
          (BinaryOperator 0xa027498 <line:349:8, line:353:31> '<dependent type>' '='
            (DeclRefExpr 0xa02729c <line:349:8> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa026e20 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
            (CallExpr 0xa027468 <line:350:3, line:353:31> '<dependent type>'
              (UnresolvedLookupExpr 0xa0272d0 <line:350:3, col:8> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fc9310)
              (CallExpr 0xa027358 <col:31, col:47> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa027320 <col:31, col:42> '<dependent type>' lvalue
                  (DeclRefExpr 0xa027304 <col:31> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa026070 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
              (CXXDependentScopeMemberExpr 0xa0273c0 <line:351:10, col:24> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa027388 <col:10, col:16> '<dependent type>' lvalue
                  (CXXThisExpr 0xa027378 <col:10> 'vector<_Tp, _Alloc> *' this)))
              (DeclRefExpr 0xa0273f4 <line:352:10> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa026e20 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
              (CallExpr 0xa027448 <line:353:10, col:30> '<dependent type>'
                (UnresolvedMemberExpr 0xa02740c <col:10> '<dependent type>' lvalue)))))
        <<<NULL>>>)
      (IfStmt 0xa027880 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/vector.tcc:363:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa0274f8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa027860 </usr/include/c++/4.6/bits/vector.tcc:356:6, line:363:6>
          (IfStmt 0xa0277a0 <line:357:8, line:360:65>
            <<<NULL>>>
            (UnaryOperator 0xa027520 <line:357:12, col:13> '<dependent type>' prefix '!'
              (DeclRefExpr 0xa027508 <col:13> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa026e20 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer'))
            (CallExpr 0xa027660 <line:358:3, col:53> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa027580 <col:3, col:17> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa027548 <col:3, col:9> '<dependent type>' lvalue
                  (CXXThisExpr 0xa027538 <col:3> 'vector<_Tp, _Alloc> *' this)))
              (CXXOperatorCallExpr 0xa027638 <col:25, col:39> '<dependent type>'
                (UnresolvedLookupExpr 0xa0275e8 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d86680 0x9d87280 0x9d5d090 0x9d5d890 0x9ff2ef0 0x9ff5070)
                (DeclRefExpr 0xa0275b4 <col:25> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa026d30 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
                (DeclRefExpr 0xa0275cc <col:39> 'const size_type':'const unsigned int' lvalue Var 0xa026bf0 '__elems_before' 'const size_type':'const unsigned int')))
            (CallExpr 0xa027778 <line:360:3, col:65> '<dependent type>'
              (UnresolvedLookupExpr 0xa0276a8 <col:3, col:8> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fbc330 0x9fbcff0 0x9fbd690 0x9fbdc40)
              (DeclRefExpr 0xa0276e8 <col:17> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa026d30 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
              (DeclRefExpr 0xa027700 <col:30> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa026e20 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
              (CallExpr 0xa027758 <col:44, col:64> '<dependent type>'
                (UnresolvedMemberExpr 0xa027718 <col:44> '<dependent type>' lvalue))))
          (CallExpr 0xa027828 <line:361:8, col:40> '<dependent type>'
            (UnresolvedMemberExpr 0xa0277bc <col:8> '<dependent type>' lvalue)
            (DeclRefExpr 0xa0277f8 <col:22> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa026d30 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
            (DeclRefExpr 0xa027810 <col:35> 'const size_type':'const unsigned int' lvalue Var 0xa026ac0 '__len' 'const size_type':'const unsigned int'))
          (NullStmt 0xa027850 <line:362:31>))
        <<<NULL>>>)
      (CallExpr 0xa027a58 <line:364:4, line:365:25> '<dependent type>'
        (UnresolvedLookupExpr 0xa0278c0 <line:364:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fbc330 0x9fbcff0 0x9fbd690 0x9fbdc40)
        (CXXDependentScopeMemberExpr 0xa027948 <col:18, col:32> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa027910 <col:18, col:24> '<dependent type>' lvalue
            (CXXThisExpr 0xa027900 <col:18> 'vector<_Tp, _Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0xa0279c8 <col:42, col:56> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa027990 <col:42, col:48> '<dependent type>' lvalue
            (CXXThisExpr 0xa027980 <col:42> 'vector<_Tp, _Alloc> *' this)))
        (CallExpr 0xa027a38 <line:365:4, col:24> '<dependent type>'
          (UnresolvedMemberExpr 0xa0279fc <col:4> '<dependent type>' lvalue)))
      (CallExpr 0xa027ca8 <line:366:4, line:368:28> '<dependent type>'
        (UnresolvedMemberExpr 0xa027a80 <line:366:4> '<dependent type>' lvalue)
        (CXXDependentScopeMemberExpr 0xa027b08 <col:18, col:32> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa027ad0 <col:18, col:24> '<dependent type>' lvalue
            (CXXThisExpr 0xa027ac0 <col:18> 'vector<_Tp, _Alloc> *' this)))
        (CXXOperatorCallExpr 0xa027c80 <line:367:4, line:368:20> '<dependent type>'
          (UnresolvedLookupExpr 0xa027c40 <col:4, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0 0x9ff0a50)
          (CXXDependentScopeMemberExpr 0xa027b88 <line:367:4, col:18> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa027b50 <col:4, col:10> '<dependent type>' lvalue
              (CXXThisExpr 0xa027b40 <col:4> 'vector<_Tp, _Alloc> *' this)))
          (CXXDependentScopeMemberExpr 0xa027c08 <line:368:6, col:20> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa027bd0 <col:6, col:12> '<dependent type>' lvalue
              (CXXThisExpr 0xa027bc0 <col:6> 'vector<_Tp, _Alloc> *' this)))))
      (BinaryOperator 0xa027d68 <line:369:4, col:29> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa027d18 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa027ce0 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa027cd0 <col:4> 'vector<_Tp, _Alloc> *' this)))
        (DeclRefExpr 0xa027d4c <col:29> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa026d30 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer'))
      (BinaryOperator 0xa027e18 <line:370:4, col:30> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa027dc8 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa027d90 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa027d80 <col:4> 'vector<_Tp, _Alloc> *' this)))
        (DeclRefExpr 0xa027dfc <col:30> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa026e20 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer'))
      (BinaryOperator 0xa027f58 <line:371:4, col:52> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa027e78 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa027e40 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa027e30 <col:4> 'vector<_Tp, _Alloc> *' this)))
        (CXXOperatorCallExpr 0xa027f30 <col:38, col:52> '<dependent type>'
          (UnresolvedLookupExpr 0xa027ee0 <col:50, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d86680 0x9d87280 0x9d5d090 0x9d5d890 0x9ff2ef0 0x9ff5070)
          (DeclRefExpr 0xa027eac <col:38> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa026d30 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
          (DeclRefExpr 0xa027ec4 <col:52> 'const size_type':'const unsigned int' lvalue Var 0xa026ac0 '__len' 'const size_type':'const unsigned int'))))))


    void _M_fill_insert(iterator __position, size_type __n, const value_type &__x) (CompoundStmt 0xa02af18 </usr/include/c++/4.6/bits/vector.tcc:379:5, line:464:5>
  (IfStmt 0xa02aef8 <line:380:7, line:463:2>
    <<<NULL>>>
    (BinaryOperator 0xa028470 <line:380:11, col:18> '_Bool' '!='
      (ImplicitCastExpr 0xa028450 <col:11> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa02841c <col:11> 'size_type':'unsigned int' lvalue ParmVar 0xa0282d0 '__n' 'size_type':'unsigned int'))
      (ImplicitCastExpr 0xa028460 <col:18> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa028438 <col:18> 'int' 0)))
    (CompoundStmt 0xa02aee0 <line:381:2, line:463:2>
      (IfStmt 0xa02aec0 <line:382:4, line:462:6>
        <<<NULL>>>
        (BinaryOperator 0xa028640 <line:382:8, line:383:34> '_Bool' '>='
          (CXXUnresolvedConstructExpr 0xa0285f8 <line:382:8, line:383:29> 'size_type':'unsigned int'
            (CXXOperatorCallExpr 0xa0285d0 <line:382:18, line:383:20> '<dependent type>'
              (UnresolvedLookupExpr 0xa028590 <col:4, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0 0x9ff0a50)
              (CXXDependentScopeMemberExpr 0xa0284d8 <line:382:18, col:32> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa0284a0 <col:18, col:24> '<dependent type>' lvalue
                  (CXXThisExpr 0xa028490 <col:18> 'vector<_Tp, _Alloc> *' this)))
              (CXXDependentScopeMemberExpr 0xa028558 <line:383:6, col:20> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa028520 <col:6, col:12> '<dependent type>' lvalue
                  (CXXThisExpr 0xa028510 <col:6> 'vector<_Tp, _Alloc> *' this)))))
          (ImplicitCastExpr 0xa028630 <col:34> 'size_type':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0xa028614 <col:34> 'size_type':'unsigned int' lvalue ParmVar 0xa0282d0 '__n' 'size_type':'unsigned int')))
        (CompoundStmt 0xa0297e8 <line:384:6, line:413:6>
          (DeclStmt 0xa0286b0 <line:385:8, col:33>
            0xa028660 "value_type __x_copy =
              (DeclRefExpr 0xa028694 <col:30> 'const value_type':'const _Tp' lvalue ParmVar 0xa028320 '__x' 'const value_type &')")
          (DeclStmt 0xa0287f8 <line:386:8, col:58>
            0xa0286d0 "const size_type __elems_after =
              (CXXOperatorCallExpr 0xa0287d0 <col:40, col:48> '<dependent type>'
                (UnresolvedLookupExpr 0xa028790 <col:46, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0 0x9ff0a50)
                (CallExpr 0xa028758 <col:40, col:44> '<dependent type>'
                  (UnresolvedMemberExpr 0xa028718 <col:40> '<bound member function type>' lvalue))
                (DeclRefExpr 0xa028774 <col:48> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa028290 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'))")
          (DeclStmt 0xa0288e8 <line:387:8, col:53>
            0xa028810 "pointer __old_finish =
              (ParenListExpr 0xa0288c8 <col:28, col:52> 'pointer':'typename _Tp_alloc_type::pointer'
                (CXXDependentScopeMemberExpr 0xa028890 <col:29, col:43> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa028858 <col:29, col:35> '<dependent type>' lvalue
                    (CXXThisExpr 0xa028848 <col:29> 'vector<_Tp, _Alloc> *' this))))")
          (IfStmt 0xa0297c8 <line:388:8, line:412:3>
            <<<NULL>>>
            (BinaryOperator 0xa028948 <line:388:12, col:28> '_Bool' '>'
              (ImplicitCastExpr 0xa028928 <col:12> 'size_type':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0xa0288f8 <col:12> 'const size_type':'const unsigned int' lvalue Var 0xa0286d0 '__elems_after' 'const size_type':'const unsigned int'))
              (ImplicitCastExpr 0xa028938 <col:28> 'size_type':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0xa028910 <col:28> 'size_type':'unsigned int' lvalue ParmVar 0xa0282d0 '__n' 'size_type':'unsigned int')))
            (CompoundStmt 0xa0290b8 <line:389:3, line:399:3>
              (CallExpr 0xa028c18 <line:390:5, line:393:33> '<dependent type>'
                (UnresolvedLookupExpr 0xa028988 <line:390:5, col:10> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fc9310)
                (CXXOperatorCallExpr 0xa028a98 <col:33, col:59> '<dependent type>'
                  (UnresolvedLookupExpr 0xa028a58 <col:57, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0 0x9ff0a50)
                  (CXXDependentScopeMemberExpr 0xa028a08 <col:33, col:47> '<dependent type>' lvalue
                    (CXXDependentScopeMemberExpr 0xa0289d0 <col:33, col:39> '<dependent type>' lvalue
                      (CXXThisExpr 0xa0289c0 <col:33> 'vector<_Tp, _Alloc> *' this)))
                  (DeclRefExpr 0xa028a3c <col:59> 'size_type':'unsigned int' lvalue ParmVar 0xa0282d0 '__n' 'size_type':'unsigned int'))
                (CXXDependentScopeMemberExpr 0xa028b08 <line:391:12, col:26> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa028ad0 <col:12, col:18> '<dependent type>' lvalue
                    (CXXThisExpr 0xa028ac0 <col:12> 'vector<_Tp, _Alloc> *' this)))
                (CXXDependentScopeMemberExpr 0xa028b88 <line:392:12, col:26> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa028b50 <col:12, col:18> '<dependent type>' lvalue
                    (CXXThisExpr 0xa028b40 <col:12> 'vector<_Tp, _Alloc> *' this)))
                (CallExpr 0xa028bf8 <line:393:12, col:32> '<dependent type>'
                  (UnresolvedMemberExpr 0xa028bbc <col:12> '<dependent type>' lvalue)))
              (CompoundAssignOperator 0xa028ce0 <line:394:5, col:32> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                (CXXDependentScopeMemberExpr 0xa028c90 <col:5, col:19> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa028c58 <col:5, col:11> '<dependent type>' lvalue
                    (CXXThisExpr 0xa028c48 <col:5> 'vector<_Tp, _Alloc> *' this)))
                (DeclRefExpr 0xa028cc4 <col:32> 'size_type':'unsigned int' lvalue ParmVar 0xa0282d0 '__n' 'size_type':'unsigned int'))
              (CallExpr 0xa028e80 </usr/include/c++/4.6/bits/stl_algobase.h:666:48, col:80> '<dependent type>'
                (UnresolvedLookupExpr 0xa028d28 <col:48, col:53> '<overloaded function type>' lvalue (no ADL) = '1' 0x9bf0b70)
                (CallExpr 0xa028db0 </usr/include/c++/4.6/bits/vector.tcc:395:29, col:45> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa028d78 <col:29, col:40> '<dependent type>' lvalue
                    (DeclRefExpr 0xa028d5c <col:29> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa028290 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                (CXXOperatorCallExpr 0xa028e40 <line:396:8, col:23> '<dependent type>'
                  (UnresolvedLookupExpr 0xa028e00 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0 0x9ff0a50)
                  (DeclRefExpr 0xa028dcc <col:8> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa028810 '__old_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                  (DeclRefExpr 0xa028de4 <col:23> 'size_type':'unsigned int' lvalue ParmVar 0xa0282d0 '__n' 'size_type':'unsigned int'))
                (DeclRefExpr 0xa028e64 <col:28> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa028810 '__old_finish' 'pointer':'typename _Tp_alloc_type::pointer'))
              (CallExpr 0xa029090 <line:397:5, line:398:16> '<dependent type>'
                (UnresolvedLookupExpr 0xa028ed0 <line:397:5, col:10> '<overloaded function type>' lvalue (no ADL) = '1' 0x9bf30e0 0x9ff5720)
                (CallExpr 0xa028f58 <col:15, col:31> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa028f20 <col:15, col:26> '<dependent type>' lvalue
                    (DeclRefExpr 0xa028f08 <col:15> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa028290 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                (CXXOperatorCallExpr 0xa029050 <col:34, col:54> '<dependent type>'
                  (UnresolvedLookupExpr 0xa029000 <col:52, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d86680 0x9d87280 0x9d5d090 0x9d5d890 0x9ff2ef0 0x9ff5070)
                  (CallExpr 0xa028fc8 <col:34, col:50> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa028f90 <col:34, col:45> '<dependent type>' lvalue
                      (DeclRefExpr 0xa028f74 <col:34> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa028290 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                  (DeclRefExpr 0xa028fe4 <col:54> 'size_type':'unsigned int' lvalue ParmVar 0xa0282d0 '__n' 'size_type':'unsigned int'))
                (DeclRefExpr 0xa029074 <line:398:8> 'value_type':'_Tp' lvalue Var 0xa028660 '__x_copy' 'value_type':'_Tp')))
            (CompoundStmt 0xa0297a0 <line:401:3, line:412:3>
              (CallExpr 0xa029298 <line:402:5, line:405:28> '<dependent type>'
                (UnresolvedLookupExpr 0xa029100 <line:402:5, col:10> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fca500 0x9fcae30)
                (CXXDependentScopeMemberExpr 0xa029180 <col:35, col:49> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa029148 <col:35, col:41> '<dependent type>' lvalue
                    (CXXThisExpr 0xa029138 <col:35> 'vector<_Tp, _Alloc> *' this)))
                (BinaryOperator 0xa029208 <line:403:7, col:13> 'unsigned int' '-'
                  (ImplicitCastExpr 0xa0291e8 <col:7> 'size_type':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0xa0291b4 <col:7> 'size_type':'unsigned int' lvalue ParmVar 0xa0282d0 '__n' 'size_type':'unsigned int'))
                  (ImplicitCastExpr 0xa0291f8 <col:13> 'size_type':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0xa0291cc <col:13> 'const size_type':'const unsigned int' lvalue Var 0xa0286d0 '__elems_after' 'const size_type':'const unsigned int')))
                (DeclRefExpr 0xa029220 <line:404:7> 'value_type':'_Tp' lvalue Var 0xa028660 '__x_copy' 'value_type':'_Tp')
                (CallExpr 0xa029278 <line:405:7, col:27> '<dependent type>'
                  (UnresolvedMemberExpr 0xa029238 <col:7> '<dependent type>' lvalue)))
              (CompoundAssignOperator 0xa0293b0 <line:406:5, col:38> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                (CXXDependentScopeMemberExpr 0xa029310 <col:5, col:19> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa0292d8 <col:5, col:11> '<dependent type>' lvalue
                    (CXXThisExpr 0xa0292c8 <col:5> 'vector<_Tp, _Alloc> *' this)))
                (BinaryOperator 0xa029398 <col:32, col:38> 'unsigned int' '-'
                  (ImplicitCastExpr 0xa029378 <col:32> 'size_type':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0xa029344 <col:32> 'size_type':'unsigned int' lvalue ParmVar 0xa0282d0 '__n' 'size_type':'unsigned int'))
                  (ImplicitCastExpr 0xa029388 <col:38> 'size_type':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0xa02935c <col:38> 'const size_type':'const unsigned int' lvalue Var 0xa0286d0 '__elems_after' 'const size_type':'const unsigned int'))))
              (CallExpr 0xa029590 <line:407:5, line:409:33> '<dependent type>'
                (UnresolvedLookupExpr 0xa0293f8 <line:407:5, col:10> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fc9310)
                (CallExpr 0xa029480 <col:33, col:49> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa029448 <col:33, col:44> '<dependent type>' lvalue
                    (DeclRefExpr 0xa02942c <col:33> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa028290 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                (DeclRefExpr 0xa02949c <col:52> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa028810 '__old_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (CXXDependentScopeMemberExpr 0xa029500 <line:408:12, col:26> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa0294c8 <col:12, col:18> '<dependent type>' lvalue
                    (CXXThisExpr 0xa0294b8 <col:12> 'vector<_Tp, _Alloc> *' this)))
                (CallExpr 0xa029570 <line:409:12, col:32> '<dependent type>'
                  (UnresolvedMemberExpr 0xa029534 <col:12> '<dependent type>' lvalue)))
              (CompoundAssignOperator 0xa029658 <line:410:5, col:32> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                (CXXDependentScopeMemberExpr 0xa029608 <col:5, col:19> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa0295d0 <col:5, col:11> '<dependent type>' lvalue
                    (CXXThisExpr 0xa0295c0 <col:5> 'vector<_Tp, _Alloc> *' this)))
                (DeclRefExpr 0xa02963c <col:32> 'const size_type':'const unsigned int' lvalue Var 0xa0286d0 '__elems_after' 'const size_type':'const unsigned int'))
              (CallExpr 0xa029778 <line:411:5, col:56> '<dependent type>'
                (UnresolvedLookupExpr 0xa0296a0 <col:5, col:10> '<overloaded function type>' lvalue (no ADL) = '1' 0x9bf30e0 0x9ff5720)
                (CallExpr 0xa029728 <col:15, col:31> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa0296f0 <col:15, col:26> '<dependent type>' lvalue
                    (DeclRefExpr 0xa0296d8 <col:15> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa028290 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                (DeclRefExpr 0xa029744 <col:34> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa028810 '__old_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (DeclRefExpr 0xa02975c <col:48> 'value_type':'_Tp' lvalue Var 0xa028660 '__x_copy' 'value_type':'_Tp')))))
        (CompoundStmt 0xa02ae80 <line:415:6, line:462:6>
          (DeclStmt 0xa0298f0 <line:416:8, line:417:46>
            0xa029810 "const size_type __len =
              (CallExpr 0xa0298c8 <col:3, col:45> '<dependent type>'
                (MemberExpr 0xa029858 <col:3> '<bound member function type>' ->_M_check_len 0x9fd9bf0
                  (CXXThisExpr 0xa029848 <col:3> 'vector<_Tp, _Alloc> *' this))
                (DeclRefExpr 0xa029878 <col:16> 'size_type':'unsigned int' lvalue ParmVar 0xa0282d0 '__n' 'size_type':'unsigned int')
                (StringLiteral 0xa029890 <col:21> 'const char [23]' lvalue "vector::_M_fill_insert"))")
          (DeclStmt 0xa029a38 <line:418:8, col:61>
            0xa029910 "const size_type __elems_before =
              (CXXOperatorCallExpr 0xa029a10 <col:41, col:60> '<dependent type>'
                (UnresolvedLookupExpr 0xa0299d0 <col:52, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0 0x9ff0a50)
                (DeclRefExpr 0xa029944 <col:41> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa028290 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
                (CallExpr 0xa0299b0 <col:54, col:60> '<dependent type>'
                  (UnresolvedMemberExpr 0xa029970 <col:54> '<bound member function type>' lvalue)))")
          (DeclStmt 0xa029b28 <line:419:8, col:53>
            0xa029a50 "pointer __new_start =
              (ParenListExpr 0xa029b08 <col:27, col:52> 'pointer':'typename _Tp_alloc_type::pointer'
                (CallExpr 0xa029ae8 <col:28, col:51> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa029a98 <col:28, col:34> '<dependent type>' lvalue
                    (CXXThisExpr 0xa029a88 <col:28> 'vector<_Tp, _Alloc> *' this))
                  (DeclRefExpr 0xa029acc <col:46> 'const size_type':'const unsigned int' lvalue Var 0xa029810 '__len' 'const size_type':'const unsigned int')))")
          (DeclStmt 0xa029bb0 <line:420:8, col:41>
            0xa029b40 "pointer __new_finish =
              (ParenListExpr 0xa029b90 <col:28, col:40> 'pointer':'typename _Tp_alloc_type::pointer'
                (DeclRefExpr 0xa029b74 <col:29> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa029a50 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer'))")
          (IfStmt 0xa02a270 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/vector.tcc:441:3>
            <<<NULL>>>
            (CXXBoolLiteralExpr 0xa029bc0 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
            (CompoundStmt 0xa02a248 </usr/include/c++/4.6/bits/vector.tcc:422:3, line:441:3>
              (CallExpr 0xa029d60 <line:424:5, line:426:28> '<dependent type>'
                (UnresolvedLookupExpr 0xa029bf8 <line:424:5, col:10> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fca500 0x9fcae30)
                (CXXOperatorCallExpr 0xa029cb0 <col:35, col:49> '<dependent type>'
                  (UnresolvedLookupExpr 0xa029c60 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d86680 0x9d87280 0x9d5d090 0x9d5d890 0x9ff2ef0 0x9ff5070)
                  (DeclRefExpr 0xa029c30 <col:35> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa029a50 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
                  (DeclRefExpr 0xa029c48 <col:49> 'const size_type':'const unsigned int' lvalue Var 0xa029910 '__elems_before' 'const size_type':'const unsigned int'))
                (DeclRefExpr 0xa029cd4 <line:425:7> 'size_type':'unsigned int' lvalue ParmVar 0xa0282d0 '__n' 'size_type':'unsigned int')
                (DeclRefExpr 0xa029cec <col:12> 'const value_type':'const _Tp' lvalue ParmVar 0xa028320 '__x' 'const value_type &')
                (CallExpr 0xa029d40 <line:426:7, col:27> '<dependent type>'
                  (UnresolvedMemberExpr 0xa029d04 <col:7> '<dependent type>' lvalue)))
              (BinaryOperator 0xa029dc0 <line:427:5, col:20> '<dependent type>' '='
                (DeclRefExpr 0xa029d8c <col:5> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa029b40 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (IntegerLiteral 0xa029da8 <col:20> 'int' 0))
              (BinaryOperator 0xa029fd0 <line:429:5, line:433:28> '<dependent type>' '='
                (DeclRefExpr 0xa029dd8 <line:429:5> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa029b40 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (CallExpr 0xa029fa0 <line:430:7, line:433:28> '<dependent type>'
                  (UnresolvedLookupExpr 0xa029e08 <line:430:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fc9310)
                  (CXXDependentScopeMemberExpr 0xa029e88 <col:35, col:49> '<dependent type>' lvalue
                    (CXXDependentScopeMemberExpr 0xa029e50 <col:35, col:41> '<dependent type>' lvalue
                      (CXXThisExpr 0xa029e40 <col:35> 'vector<_Tp, _Alloc> *' this)))
                  (CallExpr 0xa029f10 <line:431:7, col:23> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa029ed8 <col:7, col:18> '<dependent type>' lvalue
                      (DeclRefExpr 0xa029ebc <col:7> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa028290 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                  (DeclRefExpr 0xa029f2c <line:432:7> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa029a50 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
                  (CallExpr 0xa029f80 <line:433:7, col:27> '<dependent type>'
                    (UnresolvedMemberExpr 0xa029f44 <col:7> '<dependent type>' lvalue))))
              (CompoundAssignOperator 0xa02a018 <line:434:5, col:21> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                (DeclRefExpr 0xa029fe8 <col:5> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa029b40 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (DeclRefExpr 0xa02a000 <col:21> 'size_type':'unsigned int' lvalue ParmVar 0xa0282d0 '__n' 'size_type':'unsigned int'))
              (BinaryOperator 0xa02a230 <line:436:5, line:440:28> '<dependent type>' '='
                (DeclRefExpr 0xa02a038 <line:436:5> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa029b40 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (CallExpr 0xa02a200 <line:437:7, line:440:28> '<dependent type>'
                  (UnresolvedLookupExpr 0xa02a068 <line:437:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fc9310)
                  (CallExpr 0xa02a0f0 <col:35, col:51> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa02a0b8 <col:35, col:46> '<dependent type>' lvalue
                      (DeclRefExpr 0xa02a09c <col:35> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa028290 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                  (CXXDependentScopeMemberExpr 0xa02a158 <line:438:7, col:21> '<dependent type>' lvalue
                    (CXXDependentScopeMemberExpr 0xa02a120 <col:7, col:13> '<dependent type>' lvalue
                      (CXXThisExpr 0xa02a110 <col:7> 'vector<_Tp, _Alloc> *' this)))
                  (DeclRefExpr 0xa02a18c <line:439:7> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa029b40 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                  (CallExpr 0xa02a1e0 <line:440:7, col:27> '<dependent type>'
                    (UnresolvedMemberExpr 0xa02a1a4 <col:7> '<dependent type>' lvalue)))))
            <<<NULL>>>)
          (IfStmt 0xa02a790 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/vector.tcc:453:3>
            <<<NULL>>>
            (CXXBoolLiteralExpr 0xa02a290 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
            (CompoundStmt 0xa02a770 </usr/include/c++/4.6/bits/vector.tcc:443:3, line:453:3>
              (IfStmt 0xa02a6b0 <line:444:5, line:450:28>
                <<<NULL>>>
                (UnaryOperator 0xa02a2b8 <line:444:9, col:10> '<dependent type>' prefix '!'
                  (DeclRefExpr 0xa02a2a0 <col:10> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa029b40 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer'))
                (CallExpr 0xa02a568 <line:445:7, line:447:28> '<dependent type>'
                  (UnresolvedLookupExpr 0xa02a2f0 <line:445:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fbc330 0x9fbcff0 0x9fbd690 0x9fbdc40)
                  (CXXOperatorCallExpr 0xa02a3b0 <col:21, col:35> '<dependent type>'
                    (UnresolvedLookupExpr 0xa02a360 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d86680 0x9d87280 0x9d5d090 0x9d5d890 0x9ff2ef0 0x9ff5070)
                    (DeclRefExpr 0xa02a330 <col:21> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa029a50 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
                    (DeclRefExpr 0xa02a348 <col:35> 'const size_type':'const unsigned int' lvalue Var 0xa029910 '__elems_before' 'const size_type':'const unsigned int'))
                  (CXXOperatorCallExpr 0xa02a4e8 <line:446:7, col:38> '<dependent type>'
                    (UnresolvedLookupExpr 0xa02a498 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d86680 0x9d87280 0x9d5d090 0x9d5d890 0x9ff2ef0 0x9ff5070)
                    (CXXOperatorCallExpr 0xa02a458 <col:7, col:21> '<dependent type>'
                      (UnresolvedLookupExpr 0xa02a408 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d86680 0x9d87280 0x9d5d090 0x9d5d890 0x9ff2ef0 0x9ff5070)
                      (DeclRefExpr 0xa02a3d4 <col:7> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa029a50 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
                      (DeclRefExpr 0xa02a3ec <col:21> 'const size_type':'const unsigned int' lvalue Var 0xa029910 '__elems_before' 'const size_type':'const unsigned int'))
                    (DeclRefExpr 0xa02a47c <col:38> 'size_type':'unsigned int' lvalue ParmVar 0xa0282d0 '__n' 'size_type':'unsigned int'))
                  (CallExpr 0xa02a548 <line:447:7, col:27> '<dependent type>'
                    (UnresolvedMemberExpr 0xa02a50c <col:7> '<dependent type>' lvalue)))
                (CallExpr 0xa02a688 <line:449:7, line:450:28> '<dependent type>'
                  (UnresolvedLookupExpr 0xa02a5b8 <line:449:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fbc330 0x9fbcff0 0x9fbd690 0x9fbdc40)
                  (DeclRefExpr 0xa02a5f8 <col:21> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa029a50 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
                  (DeclRefExpr 0xa02a610 <col:34> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa029b40 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                  (CallExpr 0xa02a668 <line:450:7, col:27> '<dependent type>'
                    (UnresolvedMemberExpr 0xa02a628 <col:7> '<dependent type>' lvalue))))
              (CallExpr 0xa02a738 <line:451:5, col:37> '<dependent type>'
                (UnresolvedMemberExpr 0xa02a6cc <col:5> '<dependent type>' lvalue)
                (DeclRefExpr 0xa02a708 <col:19> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa029a50 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
                (DeclRefExpr 0xa02a720 <col:32> 'const size_type':'const unsigned int' lvalue Var 0xa029810 '__len' 'const size_type':'const unsigned int'))
              (NullStmt 0xa02a760 <line:452:28>))
            <<<NULL>>>)
          (CallExpr 0xa02a968 <line:454:8, line:455:29> '<dependent type>'
            (UnresolvedLookupExpr 0xa02a7d0 <line:454:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fbc330 0x9fbcff0 0x9fbd690 0x9fbdc40)
            (CXXDependentScopeMemberExpr 0xa02a858 <col:22, col:36> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa02a820 <col:22, col:28> '<dependent type>' lvalue
                (CXXThisExpr 0xa02a810 <col:22> 'vector<_Tp, _Alloc> *' this)))
            (CXXDependentScopeMemberExpr 0xa02a8d8 <col:46, col:60> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa02a8a0 <col:46, col:52> '<dependent type>' lvalue
                (CXXThisExpr 0xa02a890 <col:46> 'vector<_Tp, _Alloc> *' this)))
            (CallExpr 0xa02a948 <line:455:8, col:28> '<dependent type>'
              (UnresolvedMemberExpr 0xa02a90c <col:8> '<dependent type>' lvalue)))
          (CallExpr 0xa02abb8 <line:456:8, line:458:32> '<dependent type>'
            (UnresolvedMemberExpr 0xa02a990 <line:456:8> '<dependent type>' lvalue)
            (CXXDependentScopeMemberExpr 0xa02aa18 <col:22, col:36> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa02a9e0 <col:22, col:28> '<dependent type>' lvalue
                (CXXThisExpr 0xa02a9d0 <col:22> 'vector<_Tp, _Alloc> *' this)))
            (CXXOperatorCallExpr 0xa02ab90 <line:457:8, line:458:24> '<dependent type>'
              (UnresolvedLookupExpr 0xa02ab50 <col:8, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0 0x9ff0a50)
              (CXXDependentScopeMemberExpr 0xa02aa98 <line:457:8, col:22> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa02aa60 <col:8, col:14> '<dependent type>' lvalue
                  (CXXThisExpr 0xa02aa50 <col:8> 'vector<_Tp, _Alloc> *' this)))
              (CXXDependentScopeMemberExpr 0xa02ab18 <line:458:10, col:24> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa02aae0 <col:10, col:16> '<dependent type>' lvalue
                  (CXXThisExpr 0xa02aad0 <col:10> 'vector<_Tp, _Alloc> *' this)))))
          (BinaryOperator 0xa02ac78 <line:459:8, col:33> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0xa02ac28 <col:8, col:22> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa02abf0 <col:8, col:14> '<dependent type>' lvalue
                (CXXThisExpr 0xa02abe0 <col:8> 'vector<_Tp, _Alloc> *' this)))
            (DeclRefExpr 0xa02ac5c <col:33> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa029a50 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer'))
          (BinaryOperator 0xa02ad28 <line:460:8, col:34> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0xa02acd8 <col:8, col:22> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa02aca0 <col:8, col:14> '<dependent type>' lvalue
                (CXXThisExpr 0xa02ac90 <col:8> 'vector<_Tp, _Alloc> *' this)))
            (DeclRefExpr 0xa02ad0c <col:34> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa029b40 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer'))
          (BinaryOperator 0xa02ae68 <line:461:8, col:56> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0xa02ad88 <col:8, col:22> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa02ad50 <col:8, col:14> '<dependent type>' lvalue
                (CXXThisExpr 0xa02ad40 <col:8> 'vector<_Tp, _Alloc> *' this)))
            (CXXOperatorCallExpr 0xa02ae40 <col:42, col:56> '<dependent type>'
              (UnresolvedLookupExpr 0xa02adf0 <col:54, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d86680 0x9d87280 0x9d5d090 0x9d5d890 0x9ff2ef0 0x9ff5070)
              (DeclRefExpr 0xa02adbc <col:42> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa029a50 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
              (DeclRefExpr 0xa02add4 <col:56> 'const size_type':'const unsigned int' lvalue Var 0xa029810 '__len' 'const size_type':'const unsigned int'))))))
    <<<NULL>>>))


    template <typename _InputIterator> void _M_range_insert(iterator __pos, _InputIterator __first, _InputIterator __last, std::input_iterator_tag) (CompoundStmt 0xa02b6f0 </usr/include/c++/4.6/bits/vector.tcc:525:7, line:531:7>
  (ForStmt 0xa02b6c8 <line:526:2, line:530:4>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa02b530 <line:526:9, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0xa02b4d0 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bacde0 0x9bc3130 0x9bc62c0 0x9c11360 0x9c32300 0x9c32670 0x9d60120 0x9d60630 0x9d60b40 0x9e73820 0x9fe96a0)
      (DeclRefExpr 0xa02b49c <col:9> '_InputIterator' lvalue ParmVar 0xa02b270 '__first' '_InputIterator')
      (DeclRefExpr 0xa02b4b4 <col:20> '_InputIterator' lvalue ParmVar 0xa02b2b0 '__last' '_InputIterator'))
    (UnaryOperator 0xa02b570 <col:28, col:30> '<dependent type>' prefix '++'
      (DeclRefExpr 0xa02b554 <col:30> '_InputIterator' lvalue ParmVar 0xa02b270 '__first' '_InputIterator'))
    (CompoundStmt 0xa02b6b0 <line:527:4, line:530:4>
      (BinaryOperator 0xa02b668 <line:528:6, col:36> '<dependent type>' '='
        (DeclRefExpr 0xa02b584 <col:6> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa02b230 '__pos' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
        (CallExpr 0xa02b640 <col:14, col:36> '<dependent type>'
          (UnresolvedMemberExpr 0xa02b5b0 <col:14> '<bound member function type>' lvalue)
          (DeclRefExpr 0xa02b5f4 <col:21> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa02b230 '__pos' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
          (UnaryOperator 0xa02b628 <col:28, col:29> '<dependent type>' prefix '*'
            (DeclRefExpr 0xa02b60c <col:29> '_InputIterator' lvalue ParmVar 0xa02b270 '__first' '_InputIterator'))))
      (UnaryOperator 0xa02b698 <line:529:6, col:8> '<dependent type>' prefix '++'
        (DeclRefExpr 0xa02b680 <col:8> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa02b230 '__pos' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))))

;
    template <typename _ForwardIterator> void _M_range_insert(iterator __position, _ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag) (CompoundStmt 0xa02e230 </usr/include/c++/4.6/bits/vector.tcc:539:7, line:615:7>
  (IfStmt 0xa02e210 <line:540:2, line:614:4>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa02bd10 <line:540:6, col:17> '<dependent type>'
      (UnresolvedLookupExpr 0xa02bcb0 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bacde0 0x9bc3130 0x9bc62c0 0x9c11360 0x9c32300 0x9c32670 0x9d60120 0x9d60630 0x9d60b40 0x9e73820 0x9fe96a0)
      (DeclRefExpr 0xa02bc7c <col:6> '_ForwardIterator' lvalue ParmVar 0xa02ba50 '__first' '_ForwardIterator')
      (DeclRefExpr 0xa02bc94 <col:17> '_ForwardIterator' lvalue ParmVar 0xa02ba90 '__last' '_ForwardIterator'))
    (CompoundStmt 0xa02e1f8 <line:541:4, line:614:4>
      (DeclStmt 0xa02be20 <line:542:6, col:58>
        0xa02bd40 "const size_type __n =
          (CallExpr 0xa02bdf8 <col:28, col:57> '<dependent type>'
            (UnresolvedLookupExpr 0xa02bd90 <col:28, col:33> '<overloaded function type>' lvalue (no ADL) = '1' 0x9bba500)
            (DeclRefExpr 0xa02bdc4 <col:42> '_ForwardIterator' lvalue ParmVar 0xa02ba50 '__first' '_ForwardIterator')
            (DeclRefExpr 0xa02bddc <col:51> '_ForwardIterator' lvalue ParmVar 0xa02ba90 '__last' '_ForwardIterator'))")
      (IfStmt 0xa02e1d8 <line:543:6, line:613:8>
        <<<NULL>>>
        (BinaryOperator 0xa02bfe8 <line:543:10, line:544:36> '_Bool' '>='
          (CXXUnresolvedConstructExpr 0xa02bfa0 <line:543:10, line:544:31> 'size_type':'unsigned int'
            (CXXOperatorCallExpr 0xa02bf78 <line:543:20, line:544:22> '<dependent type>'
              (UnresolvedLookupExpr 0xa02bf38 <col:6, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0 0x9ff0a50)
              (CXXDependentScopeMemberExpr 0xa02be80 <line:543:20, col:34> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa02be48 <col:20, col:26> '<dependent type>' lvalue
                  (CXXThisExpr 0xa02be38 <col:20> 'vector<_Tp, _Alloc> *' this)))
              (CXXDependentScopeMemberExpr 0xa02bf00 <line:544:8, col:22> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa02bec8 <col:8, col:14> '<dependent type>' lvalue
                  (CXXThisExpr 0xa02beb8 <col:8> 'vector<_Tp, _Alloc> *' this)))))
          (ImplicitCastExpr 0xa02bfd8 <col:36> 'size_type':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0xa02bfbc <col:36> 'const size_type':'const unsigned int' lvalue Var 0xa02bd40 '__n' 'const size_type':'const unsigned int')))
        (CompoundStmt 0xa02d058 <line:545:8, line:574:8>
          (DeclStmt 0xa02c138 <line:546:3, col:53>
            0xa02c010 "const size_type __elems_after =
              (CXXOperatorCallExpr 0xa02c110 <col:35, col:43> '<dependent type>'
                (UnresolvedLookupExpr 0xa02c0d0 <col:41, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0 0x9ff0a50)
                (CallExpr 0xa02c098 <col:35, col:39> '<dependent type>'
                  (UnresolvedMemberExpr 0xa02c058 <col:35> '<bound member function type>' lvalue))
                (DeclRefExpr 0xa02c0b4 <col:43> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa02ba10 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'))")
          (DeclStmt 0xa02c228 <line:547:3, col:48>
            0xa02c150 "pointer __old_finish =
              (ParenListExpr 0xa02c208 <col:23, col:47> 'pointer':'typename _Tp_alloc_type::pointer'
                (CXXDependentScopeMemberExpr 0xa02c1d0 <col:24, col:38> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa02c198 <col:24, col:30> '<dependent type>' lvalue
                    (CXXThisExpr 0xa02c188 <col:24> 'vector<_Tp, _Alloc> *' this))))")
          (IfStmt 0xa02d038 <line:548:3, line:573:5>
            <<<NULL>>>
            (BinaryOperator 0xa02c288 <line:548:7, col:23> '_Bool' '>'
              (ImplicitCastExpr 0xa02c268 <col:7> 'size_type':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0xa02c238 <col:7> 'const size_type':'const unsigned int' lvalue Var 0xa02c010 '__elems_after' 'const size_type':'const unsigned int'))
              (ImplicitCastExpr 0xa02c278 <col:23> 'size_type':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0xa02c250 <col:23> 'const size_type':'const unsigned int' lvalue Var 0xa02bd40 '__n' 'const size_type':'const unsigned int')))
            (CompoundStmt 0xa02c8b8 <line:549:5, line:558:5>
              (CallExpr 0xa02c558 <line:550:7, line:553:28> '<dependent type>'
                (UnresolvedLookupExpr 0xa02c2c8 <line:550:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fc9310)
                (CXXOperatorCallExpr 0xa02c3d8 <col:35, col:61> '<dependent type>'
                  (UnresolvedLookupExpr 0xa02c398 <col:59, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0 0x9ff0a50)
                  (CXXDependentScopeMemberExpr 0xa02c348 <col:35, col:49> '<dependent type>' lvalue
                    (CXXDependentScopeMemberExpr 0xa02c310 <col:35, col:41> '<dependent type>' lvalue
                      (CXXThisExpr 0xa02c300 <col:35> 'vector<_Tp, _Alloc> *' this)))
                  (DeclRefExpr 0xa02c37c <col:61> 'const size_type':'const unsigned int' lvalue Var 0xa02bd40 '__n' 'const size_type':'const unsigned int'))
                (CXXDependentScopeMemberExpr 0xa02c448 <line:551:7, col:21> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa02c410 <col:7, col:13> '<dependent type>' lvalue
                    (CXXThisExpr 0xa02c400 <col:7> 'vector<_Tp, _Alloc> *' this)))
                (CXXDependentScopeMemberExpr 0xa02c4c8 <line:552:7, col:21> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa02c490 <col:7, col:13> '<dependent type>' lvalue
                    (CXXThisExpr 0xa02c480 <col:7> 'vector<_Tp, _Alloc> *' this)))
                (CallExpr 0xa02c538 <line:553:7, col:27> '<dependent type>'
                  (UnresolvedMemberExpr 0xa02c4fc <col:7> '<dependent type>' lvalue)))
              (CompoundAssignOperator 0xa02c620 <line:554:7, col:34> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                (CXXDependentScopeMemberExpr 0xa02c5d0 <col:7, col:21> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa02c598 <col:7, col:13> '<dependent type>' lvalue
                    (CXXThisExpr 0xa02c588 <col:7> 'vector<_Tp, _Alloc> *' this)))
                (DeclRefExpr 0xa02c604 <col:34> 'const size_type':'const unsigned int' lvalue Var 0xa02bd40 '__n' 'const size_type':'const unsigned int'))
              (CallExpr 0xa02c7c0 </usr/include/c++/4.6/bits/stl_algobase.h:666:48, col:80> '<dependent type>'
                (UnresolvedLookupExpr 0xa02c668 <col:48, col:53> '<overloaded function type>' lvalue (no ADL) = '1' 0x9bf0b70)
                (CallExpr 0xa02c6f0 </usr/include/c++/4.6/bits/vector.tcc:555:31, col:47> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa02c6b8 <col:31, col:42> '<dependent type>' lvalue
                    (DeclRefExpr 0xa02c69c <col:31> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa02ba10 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                (CXXOperatorCallExpr 0xa02c780 <line:556:10, col:25> '<dependent type>'
                  (UnresolvedLookupExpr 0xa02c740 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0 0x9ff0a50)
                  (DeclRefExpr 0xa02c70c <col:10> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa02c150 '__old_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                  (DeclRefExpr 0xa02c724 <col:25> 'const size_type':'const unsigned int' lvalue Var 0xa02bd40 '__n' 'const size_type':'const unsigned int'))
                (DeclRefExpr 0xa02c7a4 <col:30> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa02c150 '__old_finish' 'pointer':'typename _Tp_alloc_type::pointer'))
              (CallExpr 0xa02c890 <line:557:7, col:44> '<dependent type>'
                (UnresolvedLookupExpr 0xa02c810 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9bebb70 0x9e76600)
                (DeclRefExpr 0xa02c848 <col:17> '_ForwardIterator' lvalue ParmVar 0xa02ba50 '__first' '_ForwardIterator')
                (DeclRefExpr 0xa02c860 <col:26> '_ForwardIterator' lvalue ParmVar 0xa02ba90 '__last' '_ForwardIterator')
                (DeclRefExpr 0xa02c878 <col:34> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa02ba10 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
            (CompoundStmt 0xa02d008 <line:560:5, line:573:5>
              (DeclStmt 0xa02c930 <line:561:7, col:39>
                0xa02c8e0 "_ForwardIterator __mid =
                  (DeclRefExpr 0xa02c914 <col:32> '_ForwardIterator' lvalue ParmVar 0xa02ba50 '__first' '_ForwardIterator')")
              (CallExpr 0xa02c9d0 <line:562:7, col:40> '<dependent type>'
                (UnresolvedLookupExpr 0xa02c968 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9bbbe10)
                (DeclRefExpr 0xa02c99c <col:20> '_ForwardIterator' lvalue Var 0xa02c8e0 '__mid' '_ForwardIterator')
                (DeclRefExpr 0xa02c9b4 <col:27> 'const size_type':'const unsigned int' lvalue Var 0xa02c010 '__elems_after' 'const size_type':'const unsigned int'))
              (CallExpr 0xa02cb58 <line:563:7, line:565:28> '<dependent type>'
                (UnresolvedLookupExpr 0xa02ca18 <line:563:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fc8600 0x9fc8f00)
                (DeclRefExpr 0xa02ca50 <col:35> '_ForwardIterator' lvalue Var 0xa02c8e0 '__mid' '_ForwardIterator')
                (DeclRefExpr 0xa02ca68 <col:42> '_ForwardIterator' lvalue ParmVar 0xa02ba90 '__last' '_ForwardIterator')
                (CXXDependentScopeMemberExpr 0xa02cac8 <line:564:7, col:21> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa02ca90 <col:7, col:13> '<dependent type>' lvalue
                    (CXXThisExpr 0xa02ca80 <col:7> 'vector<_Tp, _Alloc> *' this)))
                (CallExpr 0xa02cb38 <line:565:7, col:27> '<dependent type>'
                  (UnresolvedMemberExpr 0xa02cafc <col:7> '<dependent type>' lvalue)))
              (CompoundAssignOperator 0xa02cc70 <line:566:7, col:40> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                (CXXDependentScopeMemberExpr 0xa02cbd0 <col:7, col:21> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa02cb98 <col:7, col:13> '<dependent type>' lvalue
                    (CXXThisExpr 0xa02cb88 <col:7> 'vector<_Tp, _Alloc> *' this)))
                (BinaryOperator 0xa02cc58 <col:34, col:40> 'unsigned int' '-'
                  (ImplicitCastExpr 0xa02cc38 <col:34> 'size_type':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0xa02cc04 <col:34> 'const size_type':'const unsigned int' lvalue Var 0xa02bd40 '__n' 'const size_type':'const unsigned int'))
                  (ImplicitCastExpr 0xa02cc48 <col:40> 'size_type':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0xa02cc1c <col:40> 'const size_type':'const unsigned int' lvalue Var 0xa02c010 '__elems_after' 'const size_type':'const unsigned int'))))
              (CallExpr 0xa02ce50 <line:567:7, line:570:28> '<dependent type>'
                (UnresolvedLookupExpr 0xa02ccb8 <line:567:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fc9310)
                (CallExpr 0xa02cd40 <col:35, col:51> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa02cd08 <col:35, col:46> '<dependent type>' lvalue
                    (DeclRefExpr 0xa02ccec <col:35> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa02ba10 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                (DeclRefExpr 0xa02cd5c <line:568:7> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa02c150 '__old_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (CXXDependentScopeMemberExpr 0xa02cdc0 <line:569:7, col:21> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa02cd88 <col:7, col:13> '<dependent type>' lvalue
                    (CXXThisExpr 0xa02cd78 <col:7> 'vector<_Tp, _Alloc> *' this)))
                (CallExpr 0xa02ce30 <line:570:7, col:27> '<dependent type>'
                  (UnresolvedMemberExpr 0xa02cdf4 <col:7> '<dependent type>' lvalue)))
              (CompoundAssignOperator 0xa02cf18 <line:571:7, col:34> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                (CXXDependentScopeMemberExpr 0xa02cec8 <col:7, col:21> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa02ce90 <col:7, col:13> '<dependent type>' lvalue
                    (CXXThisExpr 0xa02ce80 <col:7> 'vector<_Tp, _Alloc> *' this)))
                (DeclRefExpr 0xa02cefc <col:34> 'const size_type':'const unsigned int' lvalue Var 0xa02c010 '__elems_after' 'const size_type':'const unsigned int'))
              (CallExpr 0xa02cfe0 <line:572:7, col:43> '<dependent type>'
                (UnresolvedLookupExpr 0xa02cf60 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9bebb70 0x9e76600)
                (DeclRefExpr 0xa02cf98 <col:17> '_ForwardIterator' lvalue ParmVar 0xa02ba50 '__first' '_ForwardIterator')
                (DeclRefExpr 0xa02cfb0 <col:26> '_ForwardIterator' lvalue Var 0xa02c8e0 '__mid' '_ForwardIterator')
                (DeclRefExpr 0xa02cfc8 <col:33> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa02ba10 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))))
        (CompoundStmt 0xa02e1a0 <line:576:8, line:613:8>
          (DeclStmt 0xa02d160 <line:577:3, line:578:49>
            0xa02d080 "const size_type __len =
              (CallExpr 0xa02d138 <col:5, col:48> '<dependent type>'
                (MemberExpr 0xa02d0c8 <col:5> '<bound member function type>' ->_M_check_len 0x9fd9bf0
                  (CXXThisExpr 0xa02d0b8 <col:5> 'vector<_Tp, _Alloc> *' this))
                (DeclRefExpr 0xa02d0e8 <col:18> 'const size_type':'const unsigned int' lvalue Var 0xa02bd40 '__n' 'const size_type':'const unsigned int')
                (StringLiteral 0xa02d100 <col:23> 'const char [24]' lvalue "vector::_M_range_insert"))")
          (DeclStmt 0xa02d258 <line:579:3, col:48>
            0xa02d180 "pointer __new_start =
              (ParenListExpr 0xa02d238 <col:22, col:47> 'pointer':'typename _Tp_alloc_type::pointer'
                (CallExpr 0xa02d218 <col:23, col:46> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa02d1c8 <col:23, col:29> '<dependent type>' lvalue
                    (CXXThisExpr 0xa02d1b8 <col:23> 'vector<_Tp, _Alloc> *' this))
                  (DeclRefExpr 0xa02d1fc <col:41> 'const size_type':'const unsigned int' lvalue Var 0xa02d080 '__len' 'const size_type':'const unsigned int')))")
          (DeclStmt 0xa02d2e0 <line:580:3, col:36>
            0xa02d270 "pointer __new_finish =
              (ParenListExpr 0xa02d2c0 <col:23, col:35> 'pointer':'typename _Tp_alloc_type::pointer'
                (DeclRefExpr 0xa02d2a4 <col:24> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa02d180 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer'))")
          (IfStmt 0xa02d898 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/vector.tcc:597:5>
            <<<NULL>>>
            (CXXBoolLiteralExpr 0xa02d2f0 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
            (CompoundStmt 0xa02d878 </usr/include/c++/4.6/bits/vector.tcc:582:5, line:597:5>
              (BinaryOperator 0xa02d4f8 <line:583:7, line:587:30> '<dependent type>' '='
                (DeclRefExpr 0xa02d300 <line:583:7> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa02d270 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (CallExpr 0xa02d4c8 <line:584:9, line:587:30> '<dependent type>'
                  (UnresolvedLookupExpr 0xa02d330 <line:584:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fc9310)
                  (CXXDependentScopeMemberExpr 0xa02d3b0 <col:37, col:51> '<dependent type>' lvalue
                    (CXXDependentScopeMemberExpr 0xa02d378 <col:37, col:43> '<dependent type>' lvalue
                      (CXXThisExpr 0xa02d368 <col:37> 'vector<_Tp, _Alloc> *' this)))
                  (CallExpr 0xa02d438 <line:585:9, col:25> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa02d400 <col:9, col:20> '<dependent type>' lvalue
                      (DeclRefExpr 0xa02d3e4 <col:9> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa02ba10 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                  (DeclRefExpr 0xa02d454 <line:586:9> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa02d180 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
                  (CallExpr 0xa02d4a8 <line:587:9, col:29> '<dependent type>'
                    (UnresolvedMemberExpr 0xa02d46c <col:9> '<dependent type>' lvalue))))
              (BinaryOperator 0xa02d650 <line:588:7, line:591:30> '<dependent type>' '='
                (DeclRefExpr 0xa02d510 <line:588:7> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa02d270 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (CallExpr 0xa02d620 <line:589:9, line:591:30> '<dependent type>'
                  (UnresolvedLookupExpr 0xa02d540 <line:589:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fc8600 0x9fc8f00)
                  (DeclRefExpr 0xa02d578 <col:37> '_ForwardIterator' lvalue ParmVar 0xa02ba50 '__first' '_ForwardIterator')
                  (DeclRefExpr 0xa02d590 <col:46> '_ForwardIterator' lvalue ParmVar 0xa02ba90 '__last' '_ForwardIterator')
                  (DeclRefExpr 0xa02d5a8 <line:590:9> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa02d270 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                  (CallExpr 0xa02d600 <line:591:9, col:29> '<dependent type>'
                    (UnresolvedMemberExpr 0xa02d5c0 <col:9> '<dependent type>' lvalue))))
              (BinaryOperator 0xa02d860 <line:592:7, line:596:30> '<dependent type>' '='
                (DeclRefExpr 0xa02d668 <line:592:7> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa02d270 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (CallExpr 0xa02d830 <line:593:9, line:596:30> '<dependent type>'
                  (UnresolvedLookupExpr 0xa02d698 <line:593:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fc9310)
                  (CallExpr 0xa02d720 <col:37, col:53> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa02d6e8 <col:37, col:48> '<dependent type>' lvalue
                      (DeclRefExpr 0xa02d6cc <col:37> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa02ba10 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                  (CXXDependentScopeMemberExpr 0xa02d788 <line:594:9, col:23> '<dependent type>' lvalue
                    (CXXDependentScopeMemberExpr 0xa02d750 <col:9, col:15> '<dependent type>' lvalue
                      (CXXThisExpr 0xa02d740 <col:9> 'vector<_Tp, _Alloc> *' this)))
                  (DeclRefExpr 0xa02d7bc <line:595:9> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa02d270 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                  (CallExpr 0xa02d810 <line:596:9, col:29> '<dependent type>'
                    (UnresolvedMemberExpr 0xa02d7d4 <col:9> '<dependent type>' lvalue)))))
            <<<NULL>>>)
          (IfStmt 0xa02dab0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/vector.tcc:604:5>
            <<<NULL>>>
            (CXXBoolLiteralExpr 0xa02d8b8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
            (CompoundStmt 0xa02da90 </usr/include/c++/4.6/bits/vector.tcc:599:5, line:604:5>
              (CallExpr 0xa02d9c0 <line:600:7, line:601:28> '<dependent type>'
                (UnresolvedLookupExpr 0xa02d8f0 <line:600:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fbc330 0x9fbcff0 0x9fbd690 0x9fbdc40)
                (DeclRefExpr 0xa02d930 <col:21> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa02d180 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
                (DeclRefExpr 0xa02d948 <col:34> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa02d270 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (CallExpr 0xa02d9a0 <line:601:7, col:27> '<dependent type>'
                  (UnresolvedMemberExpr 0xa02d960 <col:7> '<dependent type>' lvalue)))
              (CallExpr 0xa02da58 <line:602:7, col:39> '<dependent type>'
                (UnresolvedMemberExpr 0xa02d9e8 <col:7> '<dependent type>' lvalue)
                (DeclRefExpr 0xa02da24 <col:21> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa02d180 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
                (DeclRefExpr 0xa02da3c <col:34> 'const size_type':'const unsigned int' lvalue Var 0xa02d080 '__len' 'const size_type':'const unsigned int'))
              (NullStmt 0xa02da80 <line:603:30>))
            <<<NULL>>>)
          (CallExpr 0xa02dc88 <line:605:3, line:606:31> '<dependent type>'
            (UnresolvedLookupExpr 0xa02daf0 <line:605:3, col:8> '<overloaded function type>' lvalue (no ADL) = '1' 0x9fbc330 0x9fbcff0 0x9fbd690 0x9fbdc40)
            (CXXDependentScopeMemberExpr 0xa02db78 <col:17, col:31> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa02db40 <col:17, col:23> '<dependent type>' lvalue
                (CXXThisExpr 0xa02db30 <col:17> 'vector<_Tp, _Alloc> *' this)))
            (CXXDependentScopeMemberExpr 0xa02dbf8 <col:41, col:55> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa02dbc0 <col:41, col:47> '<dependent type>' lvalue
                (CXXThisExpr 0xa02dbb0 <col:41> 'vector<_Tp, _Alloc> *' this)))
            (CallExpr 0xa02dc68 <line:606:10, col:30> '<dependent type>'
              (UnresolvedMemberExpr 0xa02dc2c <col:10> '<dependent type>' lvalue)))
          (CallExpr 0xa02ded8 <line:607:3, line:609:34> '<dependent type>'
            (UnresolvedMemberExpr 0xa02dcb0 <line:607:3> '<dependent type>' lvalue)
            (CXXDependentScopeMemberExpr 0xa02dd38 <col:17, col:31> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa02dd00 <col:17, col:23> '<dependent type>' lvalue
                (CXXThisExpr 0xa02dcf0 <col:17> 'vector<_Tp, _Alloc> *' this)))
            (CXXOperatorCallExpr 0xa02deb0 <line:608:10, line:609:26> '<dependent type>'
              (UnresolvedLookupExpr 0xa02de70 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0 0x9ff0a50)
              (CXXDependentScopeMemberExpr 0xa02ddb8 <line:608:10, col:24> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa02dd80 <col:10, col:16> '<dependent type>' lvalue
                  (CXXThisExpr 0xa02dd70 <col:10> 'vector<_Tp, _Alloc> *' this)))
              (CXXDependentScopeMemberExpr 0xa02de38 <line:609:12, col:26> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa02de00 <col:12, col:18> '<dependent type>' lvalue
                  (CXXThisExpr 0xa02ddf0 <col:12> 'vector<_Tp, _Alloc> *' this)))))
          (BinaryOperator 0xa02df98 <line:610:3, col:28> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0xa02df48 <col:3, col:17> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa02df10 <col:3, col:9> '<dependent type>' lvalue
                (CXXThisExpr 0xa02df00 <col:3> 'vector<_Tp, _Alloc> *' this)))
            (DeclRefExpr 0xa02df7c <col:28> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa02d180 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer'))
          (BinaryOperator 0xa02e048 <line:611:3, col:29> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0xa02dff8 <col:3, col:17> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa02dfc0 <col:3, col:9> '<dependent type>' lvalue
                (CXXThisExpr 0xa02dfb0 <col:3> 'vector<_Tp, _Alloc> *' this)))
            (DeclRefExpr 0xa02e02c <col:29> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa02d270 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer'))
          (BinaryOperator 0xa02e188 <line:612:3, col:51> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0xa02e0a8 <col:3, col:17> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa02e070 <col:3, col:9> '<dependent type>' lvalue
                (CXXThisExpr 0xa02e060 <col:3> 'vector<_Tp, _Alloc> *' this)))
            (CXXOperatorCallExpr 0xa02e160 <col:37, col:51> '<dependent type>'
              (UnresolvedLookupExpr 0xa02e110 <col:49, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d86680 0x9d87280 0x9d5d090 0x9d5d890 0x9ff2ef0 0x9ff5070)
              (DeclRefExpr 0xa02e0dc <col:37> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa02d180 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
              (DeclRefExpr 0xa02e0f4 <col:51> 'const size_type':'const unsigned int' lvalue Var 0xa02d080 '__len' 'const size_type':'const unsigned int'))))))
    <<<NULL>>>))

;
    void reserve(size_type __n) (CompoundStmt 0xa02efe0 </usr/include/c++/4.6/bits/vector.tcc:624:5, line:637:5>
  (IfStmt 0xa02e750 <line:625:7, line:626:45>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa02e658 <line:625:11, col:32> '<dependent type>'
      (UnresolvedLookupExpr 0xa02e608 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bad330 0x9bc37b0 0x9bc6740 0x9d622b0 0x9d627e0 0x9d62d10 0x9fe9c10)
      (DeclRefExpr 0xa02e584 <col:11> 'size_type':'unsigned int' lvalue ParmVar 0xa02e4a0 '__n' 'size_type':'unsigned int')
      (CallExpr 0xa02e5e8 <col:17, col:32> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa02e5b0 <col:17, col:23> '<dependent type>' lvalue
          (CXXThisExpr 0xa02e5a0 <col:17> 'vector<_Bool, type-parameter-0-0> *' this))))
    (CallExpr 0xa02e720 <line:626:2, col:45> 'void'
      (ImplicitCastExpr 0xa02e710 <col:2> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0xa02e6f4 <col:2> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9b765e0 '__throw_length_error' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa02e740 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0xa02e6e0 <col:24, col:30> 'const char [16]' lvalue
          (StringLiteral 0xa02e6b4 </usr/include/c++/4.6/bits/vector.tcc:626:27> 'const char [16]' lvalue "vector::reserve"))))
    <<<NULL>>>)
  (IfStmt 0xa02efc0 <line:627:7, line:636:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa02e840 <line:627:11, col:30> '<dependent type>'
      (UnresolvedLookupExpr 0xa02e7f0 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bac3c0 0x9bc2c90 0x9bc5590 0x9d61190 0x9d616c0 0x9d61bf0 0x9fe8fd0)
      (CallExpr 0xa02e7b8 <col:11, col:26> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa02e780 <col:11, col:17> '<dependent type>' lvalue
          (CXXThisExpr 0xa02e770 <col:11> 'vector<_Bool, type-parameter-0-0> *' this)))
      (DeclRefExpr 0xa02e7d4 <col:30> 'size_type':'unsigned int' lvalue ParmVar 0xa02e4a0 '__n' 'size_type':'unsigned int'))
    (CompoundStmt 0xa02ef98 <line:628:2, line:636:2>
      (DeclStmt 0xa02e938 <line:629:4, col:43>
        0xa02e880 "_Bit_type *__q =
          (CallExpr 0xa02e918 <col:21, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa02e8c8 <col:21, col:27> '<dependent type>' lvalue
              (CXXThisExpr 0xa02e8b8 <col:21> 'vector<_Bool, type-parameter-0-0> *' this))
            (DeclRefExpr 0xa02e8fc <col:39> 'size_type':'unsigned int' lvalue ParmVar 0xa02e4a0 '__n' 'size_type':'unsigned int'))")
      (BinaryOperator 0xa02eb98 <line:630:4, line:631:27> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa02e990 <line:630:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa02e958 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa02e948 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
        (CallExpr 0xa02eb70 <col:30, line:631:27> '<dependent type>'
          (MemberExpr 0xa02e9d8 <line:630:30> '<bound member function type>' ->_M_copy_aligned 0x9ffba80
            (CXXThisExpr 0xa02e9c8 <col:30> 'vector<_Bool, type-parameter-0-0> *' this))
          (CallExpr 0xa02ea48 <col:46, col:52> '<dependent type>'
            (UnresolvedMemberExpr 0xa02ea08 <col:46> '<bound member function type>' lvalue))
          (CallExpr 0xa02eac8 <col:55, col:59> '<dependent type>'
            (UnresolvedMemberExpr 0xa02ea78 <col:55> '<bound member function type>' lvalue))
          (CXXTemporaryObjectExpr 0xa02eb40 <line:631:11, col:26> 'iterator':'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
            (ImplicitCastExpr 0xa02eb20 <col:20> '_Bit_type *' <LValueToRValue>
              (DeclRefExpr 0xa02eaf0 <col:20> '_Bit_type *' lvalue Var 0xa02e880 '__q' '_Bit_type *'))
            (ImplicitCastExpr 0xa02eb30 <col:25> 'unsigned int' <IntegralCast>
              (IntegerLiteral 0xa02eb08 <col:25> 'int' 0)))))
      (CallExpr 0xa02ebf8 <line:632:4, col:24> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa02ebc0 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0xa02ebb0 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
      (BinaryOperator 0xa02ed20 <line:633:4, col:44> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa02ec60 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa02ec28 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa02ec18 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
        (CXXTemporaryObjectExpr 0xa02ecf0 <col:29, col:44> 'iterator':'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
          (ImplicitCastExpr 0xa02ecd0 <col:38> '_Bit_type *' <LValueToRValue>
            (DeclRefExpr 0xa02eca0 <col:38> '_Bit_type *' lvalue Var 0xa02e880 '__q' '_Bit_type *'))
          (ImplicitCastExpr 0xa02ece0 <col:43> 'unsigned int' <IntegralCast>
            (IntegerLiteral 0xa02ecb8 <col:43> 'int' 0))))
      (BinaryOperator 0xa02ef80 <line:634:4, line:635:29> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa02ed80 <line:634:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa02ed48 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa02ed38 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
        (ParenExpr 0xa02ef68 <col:38, line:635:29> '_Bit_type *'
          (BinaryOperator 0xa02ef50 <line:634:39, line:635:28> '_Bit_type *' '+'
            (ImplicitCastExpr 0xa02ef40 <line:634:39> '_Bit_type *' <LValueToRValue>
              (DeclRefExpr 0xa02edb4 <col:39> '_Bit_type *' lvalue Var 0xa02e880 '__q' '_Bit_type *'))
            (BinaryOperator 0xa02ef28 <col:45, line:635:28> 'unsigned int' '/'
              (ParenExpr 0xa02eeb0 <line:634:45, col:72> 'unsigned int'
                (BinaryOperator 0xa02ee98 <col:46, col:71> 'unsigned int' '-'
                  (BinaryOperator 0xa02ee58 <col:46, col:67> 'unsigned int' '+'
                    (ImplicitCastExpr 0xa02ee38 <col:46> 'size_type':'unsigned int' <LValueToRValue>
                      (DeclRefExpr 0xa02edcc <col:46> 'size_type':'unsigned int' lvalue ParmVar 0xa02e4a0 '__n' 'size_type':'unsigned int'))
                    (ImplicitCastExpr 0xa02ee48 <col:52, col:67> 'unsigned int' <IntegralCast>
                      (CXXFunctionalCastExpr 0xa02ee20 <col:52, col:67> 'int' functional cast to int <NoOp>
                        (ImplicitCastExpr 0xa02ee10 <col:56> 'int' <IntegralCast>
                          (DeclRefExpr 0xa02edf4 <col:56> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x9feaf10 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))
                  (ImplicitCastExpr 0xa02ee88 <col:71> 'unsigned int' <IntegralCast>
                    (IntegerLiteral 0xa02ee70 <col:71> 'int' 1))))
              (ImplicitCastExpr 0xa02ef18 <line:635:13, col:28> 'unsigned int' <IntegralCast>
                (CXXFunctionalCastExpr 0xa02ef00 <col:13, col:28> 'int' functional cast to int <NoOp>
                  (ImplicitCastExpr 0xa02eef0 <col:17> 'int' <IntegralCast>
                    (DeclRefExpr 0xa02eed4 <col:17> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x9feaf10 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))))))
    <<<NULL>>>))


    void _M_fill_insert(iterator __position, size_type __n, bool __x) (CompoundStmt 0xa030b38 </usr/include/c++/4.6/bits/vector.tcc:643:5, line:669:5>
  (IfStmt 0xa02f448 <line:644:7, line:645:2>
    <<<NULL>>>
    (BinaryOperator 0xa02f420 <line:644:11, col:18> '_Bool' '=='
      (ImplicitCastExpr 0xa02f400 <col:11> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa02f3cc <col:11> 'size_type':'unsigned int' lvalue ParmVar 0xa02f290 '__n' 'size_type':'unsigned int'))
      (ImplicitCastExpr 0xa02f410 <col:18> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa02f3e8 <col:18> 'int' 0)))
    (ReturnStmt 0xa02f438 <line:645:2>)
    <<<NULL>>>)
  (IfStmt 0xa030b18 <line:646:7, line:668:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa02f5d8 <line:646:11, col:34> '<dependent type>'
      (UnresolvedLookupExpr 0xa02f588 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bae1e0 0x9bc3fc0 0x9bc7850 0x9d64480 0x9d649b0 0x9d64ee0 0x9fea6a0)
      (CXXOperatorCallExpr 0xa02f548 <col:11, col:29> '<dependent type>'
        (UnresolvedLookupExpr 0xa02f508 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0 0x9ff0a50)
        (CallExpr 0xa02f498 <col:11, col:20> '<dependent type>'
          (MemberExpr 0xa02f478 <col:11> '<bound member function type>' ->capacity 0x9ffa110
            (CXXThisExpr 0xa02f468 <col:11> 'vector<_Bool, type-parameter-0-0> *' this)))
        (CallExpr 0xa02f4e8 <col:24, col:29> '<dependent type>'
          (MemberExpr 0xa02f4c8 <col:24> '<bound member function type>' ->size 0x9ffa010
            (CXXThisExpr 0xa02f4b8 <col:24> 'vector<_Bool, type-parameter-0-0> *' this))))
      (DeclRefExpr 0xa02f56c <col:34> 'size_type':'unsigned int' lvalue ParmVar 0xa02f290 '__n' 'size_type':'unsigned int'))
    (CompoundStmt 0xa02fe48 <line:647:2, line:652:2>
      (CallExpr 0xa02f830 <line:648:4, line:649:55> '<dependent type>'
        (UnresolvedLookupExpr 0xa02f620 <line:648:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x9bf0b70)
        (DeclRefExpr 0xa02f654 <col:23> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa02f250 '__position' 'iterator':'struct std::_Bit_iterator')
        (CallExpr 0xa02f6c0 <col:35, col:39> '<dependent type>'
          (UnresolvedMemberExpr 0xa02f680 <col:35> '<bound member function type>' lvalue))
        (CXXOperatorCallExpr 0xa02f808 <line:649:9, col:54> '<dependent type>'
          (UnresolvedLookupExpr 0xa02f7b8 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d86680 0x9d87280 0x9d5d090 0x9d5d890 0x9ff2ef0 0x9ff5070)
          (CXXDependentScopeMemberExpr 0xa02f728 <col:9, col:23> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa02f6f0 <col:9, col:15> '<dependent type>' lvalue
              (CXXThisExpr 0xa02f6e0 <col:9> 'vector<_Bool, type-parameter-0-0> *' this)))
          (CXXFunctionalCastExpr 0xa02f7a0 <col:35, col:54> 'difference_type':'int' functional cast to difference_type <NoOp>
            (ImplicitCastExpr 0xa02f790 <col:51> 'difference_type':'int' <IntegralCast>
              (ImplicitCastExpr 0xa02f780 <col:51> 'size_type':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0xa02f768 <col:51> 'size_type':'unsigned int' lvalue ParmVar 0xa02f290 '__n' 'size_type':'unsigned int'))))))
      (CallExpr 0xa02fc98 <line:650:4, col:64> 'void'
        (ImplicitCastExpr 0xa02fc88 <col:4, col:9> 'void (*)(struct std::_Bit_iterator, struct std::_Bit_iterator, const _Bool &)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa02fc48 <col:4, col:9> 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, const _Bool &)' lvalue Function 0x9ff5720 'fill' 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, const _Bool &)'))
        (CXXConstructExpr 0xa02fcd0 <col:14> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
          (ImplicitCastExpr 0xa02fcc0 <col:14> 'const struct std::_Bit_iterator' lvalue <NoOp>
            (DeclRefExpr 0xa02f8b8 <col:14> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa02f250 '__position' 'iterator':'struct std::_Bit_iterator')))
        (CXXConstructExpr 0xa02fd18 <col:26, col:58> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()' elidable
          (MaterializeTemporaryExpr 0xa02fd08 <col:26, col:58> 'const struct std::_Bit_iterator' lvalue
            (ImplicitCastExpr 0xa02fcf8 <col:26, col:58> 'const struct std::_Bit_iterator' <NoOp>
              (CXXOperatorCallExpr 0xa02f978 <col:26, col:58> 'iterator':'struct std::_Bit_iterator'
                (ImplicitCastExpr 0xa02f968 <col:37, <invalid sloc>> 'iterator (*)(difference_type) const' <FunctionToPointerDecay>
                  (DeclRefExpr 0xa02f950 <col:37, <invalid sloc>> 'iterator (difference_type) const' lvalue CXXMethod 0x9ff1790 'operator+' 'iterator (difference_type) const'))
                (ImplicitCastExpr 0xa02f940 <col:26> 'const struct std::_Bit_iterator' lvalue <NoOp>
                  (DeclRefExpr 0xa02f8d0 <col:26> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa02f250 '__position' 'iterator':'struct std::_Bit_iterator'))
                (CXXFunctionalCastExpr 0xa02f928 <col:39, col:58> 'difference_type':'int' functional cast to difference_type <NoOp>
                  (ImplicitCastExpr 0xa02f918 <col:55> 'difference_type':'int' <IntegralCast>
                    (ImplicitCastExpr 0xa02f908 <col:55> 'size_type':'unsigned int' <LValueToRValue>
                      (DeclRefExpr 0xa02f8f0 <col:55> 'size_type':'unsigned int' lvalue ParmVar 0xa02f290 '__n' 'size_type':'unsigned int'))))))))
        (ImplicitCastExpr 0xa02fd40 <col:61> 'const _Bool' lvalue <NoOp>
          (DeclRefExpr 0xa02f99c <col:61> '_Bool' lvalue ParmVar 0xa02f2d0 '__x' '_Bool')))
      (CompoundAssignOperator 0xa02fe28 <line:651:4, col:50> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
        (CXXDependentScopeMemberExpr 0xa02fd98 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa02fd60 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa02fd50 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
        (CXXFunctionalCastExpr 0xa02fe10 <col:31, col:50> 'difference_type':'int' functional cast to difference_type <NoOp>
          (ImplicitCastExpr 0xa02fe00 <col:47> 'difference_type':'int' <IntegralCast>
            (ImplicitCastExpr 0xa02fdf0 <col:47> 'size_type':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0xa02fdd8 <col:47> 'size_type':'unsigned int' lvalue ParmVar 0xa02f290 '__n' 'size_type':'unsigned int'))))))
    (CompoundStmt 0xa030ae8 <line:654:2, line:668:2>
      (DeclStmt 0xa02ff50 <line:655:4, line:656:55>
        0xa02fe70 "const size_type __len =
          (CallExpr 0xa02ff28 <col:6, col:54> '<dependent type>'
            (MemberExpr 0xa02feb8 <col:6> '<bound member function type>' ->_M_check_len 0x9ffdc40
              (CXXThisExpr 0xa02fea8 <col:6> 'vector<_Bool, type-parameter-0-0> *' this))
            (DeclRefExpr 0xa02fed8 <col:19> 'size_type':'unsigned int' lvalue ParmVar 0xa02f290 '__n' 'size_type':'unsigned int')
            (StringLiteral 0xa02fef0 <col:24> 'const char [29]' lvalue "vector<bool>::_M_fill_insert"))")
      (DeclStmt 0xa030028 <line:657:4, col:46>
        0xa02ff70 "_Bit_type *__q =
          (CallExpr 0xa030008 <col:22, col:45> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa02ffb8 <col:22, col:28> '<dependent type>' lvalue
              (CXXThisExpr 0xa02ffa8 <col:22> 'vector<_Bool, type-parameter-0-0> *' this))
            (DeclRefExpr 0xa02ffec <col:40> 'const size_type':'const unsigned int' lvalue Var 0xa02fe70 '__len' 'const size_type':'const unsigned int'))")
      (DeclStmt 0xa0301e0 <line:658:4, line:659:24>
        0xa030040 "iterator __i =
          (CallExpr 0xa0301b8 <line:658:19, line:659:23> '<dependent type>'
            (MemberExpr 0xa030088 <line:658:19> '<bound member function type>' ->_M_copy_aligned 0x9ffba80
              (CXXThisExpr 0xa030078 <col:19> 'vector<_Bool, type-parameter-0-0> *' this))
            (CallExpr 0xa0300f8 <col:35, col:41> '<dependent type>'
              (UnresolvedMemberExpr 0xa0300b8 <col:35> '<bound member function type>' lvalue))
            (DeclRefExpr 0xa030114 <col:44> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa02f250 '__position' 'iterator':'struct std::_Bit_iterator')
            (CXXTemporaryObjectExpr 0xa030188 <line:659:7, col:22> 'iterator':'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
              (ImplicitCastExpr 0xa030168 <col:16> '_Bit_type *' <LValueToRValue>
                (DeclRefExpr 0xa030138 <col:16> '_Bit_type *' lvalue Var 0xa02ff70 '__q' '_Bit_type *'))
              (ImplicitCastExpr 0xa030178 <col:21> 'unsigned int' <IntegralCast>
                (IntegerLiteral 0xa030150 <col:21> 'int' 0))))")
      (CallExpr 0xa0303c8 <line:660:4, col:50> 'void'
        (ImplicitCastExpr 0xa0303b8 <col:4, col:9> 'void (*)(struct std::_Bit_iterator, struct std::_Bit_iterator, const _Bool &)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa030398 <col:4, col:9> 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, const _Bool &)' lvalue Function 0x9ff5720 'fill' 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, const _Bool &)'))
        (CXXConstructExpr 0xa030400 <col:14> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
          (ImplicitCastExpr 0xa0303f0 <col:14> 'const struct std::_Bit_iterator' lvalue <NoOp>
            (DeclRefExpr 0xa030250 <col:14> 'iterator':'struct std::_Bit_iterator' lvalue Var 0xa030040 '__i' 'iterator':'struct std::_Bit_iterator')))
        (CXXConstructExpr 0xa030448 <col:19, col:44> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()' elidable
          (MaterializeTemporaryExpr 0xa030438 <col:19, col:44> 'const struct std::_Bit_iterator' lvalue
            (ImplicitCastExpr 0xa030428 <col:19, col:44> 'const struct std::_Bit_iterator' <NoOp>
              (CXXOperatorCallExpr 0xa030310 <col:19, col:44> 'iterator':'struct std::_Bit_iterator'
                (ImplicitCastExpr 0xa030300 <col:23, <invalid sloc>> 'iterator (*)(difference_type) const' <FunctionToPointerDecay>
                  (DeclRefExpr 0xa0302e8 <col:23, <invalid sloc>> 'iterator (difference_type) const' lvalue CXXMethod 0x9ff1790 'operator+' 'iterator (difference_type) const'))
                (ImplicitCastExpr 0xa0302d8 <col:19> 'const struct std::_Bit_iterator' lvalue <NoOp>
                  (DeclRefExpr 0xa030268 <col:19> 'iterator':'struct std::_Bit_iterator' lvalue Var 0xa030040 '__i' 'iterator':'struct std::_Bit_iterator'))
                (CXXFunctionalCastExpr 0xa0302c0 <col:25, col:44> 'difference_type':'int' functional cast to difference_type <NoOp>
                  (ImplicitCastExpr 0xa0302b0 <col:41> 'difference_type':'int' <IntegralCast>
                    (ImplicitCastExpr 0xa0302a0 <col:41> 'size_type':'unsigned int' <LValueToRValue>
                      (DeclRefExpr 0xa030288 <col:41> 'size_type':'unsigned int' lvalue ParmVar 0xa02f290 '__n' 'size_type':'unsigned int'))))))))
        (ImplicitCastExpr 0xa030470 <col:47> 'const _Bool' lvalue <NoOp>
          (DeclRefExpr 0xa030334 <col:47> '_Bool' lvalue ParmVar 0xa02f2d0 '__x' '_Bool')))
      (BinaryOperator 0xa0306d0 <line:661:4, line:662:38> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa0304c8 <line:661:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa030490 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa030480 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
        (CallExpr 0xa0306a8 <col:30, line:662:38> '<dependent type>'
          (UnresolvedLookupExpr 0xa030518 <line:661:30, col:35> '<overloaded function type>' lvalue (no ADL) = '1' 0x9bebb70 0x9e76600)
          (DeclRefExpr 0xa030550 <col:40> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa02f250 '__position' 'iterator':'struct std::_Bit_iterator')
          (CallExpr 0xa0305b8 <col:52, col:56> '<dependent type>'
            (UnresolvedMemberExpr 0xa030578 <col:52> '<bound member function type>' lvalue))
          (CXXOperatorCallExpr 0xa030680 <line:662:12, col:37> 'iterator':'struct std::_Bit_iterator'
            (ImplicitCastExpr 0xa030670 <col:16, <invalid sloc>> 'iterator (*)(difference_type) const' <FunctionToPointerDecay>
              (DeclRefExpr 0xa030658 <col:16, <invalid sloc>> 'iterator (difference_type) const' lvalue CXXMethod 0x9ff1790 'operator+' 'iterator (difference_type) const'))
            (ImplicitCastExpr 0xa030648 <col:12> 'const struct std::_Bit_iterator' lvalue <NoOp>
              (DeclRefExpr 0xa0305d4 <col:12> 'iterator':'struct std::_Bit_iterator' lvalue Var 0xa030040 '__i' 'iterator':'struct std::_Bit_iterator'))
            (CXXFunctionalCastExpr 0xa030630 <col:18, col:37> 'difference_type':'int' functional cast to difference_type <NoOp>
              (ImplicitCastExpr 0xa030620 <col:34> 'difference_type':'int' <IntegralCast>
                (ImplicitCastExpr 0xa030610 <col:34> 'size_type':'unsigned int' <LValueToRValue>
                  (DeclRefExpr 0xa0305f8 <col:34> 'size_type':'unsigned int' lvalue ParmVar 0xa02f290 '__n' 'size_type':'unsigned int')))))))
      (CallExpr 0xa030730 <line:663:4, col:24> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa0306f8 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0xa0306e8 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
      (BinaryOperator 0xa0309b0 <line:664:4, line:666:30> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa030798 <line:664:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa030760 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa030750 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
        (ParenExpr 0xa030998 <col:38, line:666:30> '_Bit_type *'
          (BinaryOperator 0xa030980 <line:664:39, line:666:29> '_Bit_type *' '+'
            (ImplicitCastExpr 0xa030970 <line:664:39> '_Bit_type *' <LValueToRValue>
              (DeclRefExpr 0xa0307cc <col:39> '_Bit_type *' lvalue Var 0xa02ff70 '__q' '_Bit_type *'))
            (ParenExpr 0xa030958 <col:45, line:666:29> 'unsigned int'
              (BinaryOperator 0xa030940 <line:664:46, line:666:28> 'unsigned int' '/'
                (ParenExpr 0xa0308c8 <line:664:46, line:665:34> 'unsigned int'
                  (BinaryOperator 0xa0308b0 <line:664:47, line:665:33> 'unsigned int' '-'
                    (BinaryOperator 0xa030870 <line:664:47, line:665:29> 'unsigned int' '+'
                      (ImplicitCastExpr 0xa030850 <line:664:47> 'size_type':'unsigned int' <LValueToRValue>
                        (DeclRefExpr 0xa0307e4 <col:47> 'const size_type':'const unsigned int' lvalue Var 0xa02fe70 '__len' 'const size_type':'const unsigned int'))
                      (ImplicitCastExpr 0xa030860 <line:665:14, col:29> 'unsigned int' <IntegralCast>
                        (CXXFunctionalCastExpr 0xa030838 <col:14, col:29> 'int' functional cast to int <NoOp>
                          (ImplicitCastExpr 0xa030828 <col:18> 'int' <IntegralCast>
                            (DeclRefExpr 0xa03080c <col:18> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x9feaf10 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))
                    (ImplicitCastExpr 0xa0308a0 <col:33> 'unsigned int' <IntegralCast>
                      (IntegerLiteral 0xa030888 <col:33> 'int' 1))))
                (ImplicitCastExpr 0xa030930 <line:666:13, col:28> 'unsigned int' <IntegralCast>
                  (CXXFunctionalCastExpr 0xa030918 <col:13, col:28> 'int' functional cast to int <NoOp>
                    (ImplicitCastExpr 0xa030908 <col:17> 'int' <IntegralCast>
                      (DeclRefExpr 0xa0308ec <col:17> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x9feaf10 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))))))
      (BinaryOperator 0xa030ad0 <line:667:4, col:44> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa030a10 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa0309d8 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa0309c8 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
        (CXXTemporaryObjectExpr 0xa030aa0 <col:29, col:44> 'iterator':'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
          (ImplicitCastExpr 0xa030a80 <col:38> '_Bit_type *' <LValueToRValue>
            (DeclRefExpr 0xa030a50 <col:38> '_Bit_type *' lvalue Var 0xa02ff70 '__q' '_Bit_type *'))
          (ImplicitCastExpr 0xa030a90 <col:43> 'unsigned int' <IntegralCast>
            (IntegerLiteral 0xa030a68 <col:43> 'int' 0)))))))


    template <typename _ForwardIterator> void _M_insert_range(iterator __position, _ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag) (CompoundStmt 0xa0322f8 </usr/include/c++/4.6/bits/vector.tcc:677:7, line:706:7>
  (IfStmt 0xa0322d8 <line:678:2, line:705:4>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa031100 <line:678:6, col:17> '<dependent type>'
      (UnresolvedLookupExpr 0xa0310a0 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bacde0 0x9bc3130 0x9bc62c0 0x9c11360 0x9c32300 0x9c32670 0x9d60120 0x9d60630 0x9d60b40 0x9e73820 0x9fe96a0)
      (DeclRefExpr 0xa03106c <col:6> '_ForwardIterator' lvalue ParmVar 0xa030e40 '__first' '_ForwardIterator')
      (DeclRefExpr 0xa031084 <col:17> '_ForwardIterator' lvalue ParmVar 0xa030e80 '__last' '_ForwardIterator'))
    (CompoundStmt 0xa0322c0 <line:679:4, line:705:4>
      (DeclStmt 0xa031210 <line:680:6, col:52>
        0xa031130 "size_type __n =
          (CallExpr 0xa0311e8 <col:22, col:51> '<dependent type>'
            (UnresolvedLookupExpr 0xa031180 <col:22, col:27> '<overloaded function type>' lvalue (no ADL) = '1' 0x9bba500)
            (DeclRefExpr 0xa0311b4 <col:36> '_ForwardIterator' lvalue ParmVar 0xa030e40 '__first' '_ForwardIterator')
            (DeclRefExpr 0xa0311cc <col:45> '_ForwardIterator' lvalue ParmVar 0xa030e80 '__last' '_ForwardIterator'))")
      (IfStmt 0xa0322a0 <line:681:6, line:704:8>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa031390 <line:681:10, col:33> '<dependent type>'
          (UnresolvedLookupExpr 0xa031340 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bae1e0 0x9bc3fc0 0x9bc7850 0x9d64480 0x9d649b0 0x9d64ee0 0x9fea6a0)
          (CXXOperatorCallExpr 0xa031300 <col:10, col:28> '<dependent type>'
            (UnresolvedLookupExpr 0xa0312c0 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4510 0x9bc7dd0 0x9ff0a50)
            (CallExpr 0xa031250 <col:10, col:19> '<dependent type>'
              (MemberExpr 0xa031230 <col:10> '<bound member function type>' ->capacity 0x9ffa110
                (CXXThisExpr 0xa031220 <col:10> 'vector<_Bool, type-parameter-0-0> *' this)))
            (CallExpr 0xa0312a0 <col:23, col:28> '<dependent type>'
              (MemberExpr 0xa031280 <col:23> '<bound member function type>' ->size 0x9ffa010
                (CXXThisExpr 0xa031270 <col:23> 'vector<_Bool, type-parameter-0-0> *' this))))
          (DeclRefExpr 0xa031324 <col:33> 'size_type':'unsigned int' lvalue Var 0xa031130 '__n' 'size_type':'unsigned int'))
        (CompoundStmt 0xa0317d8 <line:682:8, line:688:8>
          (CallExpr 0xa0315e8 <line:683:3, line:685:30> '<dependent type>'
            (UnresolvedLookupExpr 0xa0313d8 <line:683:3, col:8> '<overloaded function type>' lvalue (no ADL) = '1' 0x9bf0b70)
            (DeclRefExpr 0xa03140c <col:22> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa030e00 '__position' 'iterator':'struct std::_Bit_iterator')
            (CallExpr 0xa031478 <col:34, col:38> '<dependent type>'
              (UnresolvedMemberExpr 0xa031438 <col:34> '<bound member function type>' lvalue))
            (CXXOperatorCallExpr 0xa0315c0 <line:684:8, line:685:29> '<dependent type>'
              (UnresolvedLookupExpr 0xa031570 <col:8, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d86680 0x9d87280 0x9d5d090 0x9d5d890 0x9ff2ef0 0x9ff5070)
              (CXXDependentScopeMemberExpr 0xa0314e0 <line:684:8, col:22> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa0314a8 <col:8, col:14> '<dependent type>' lvalue
                  (CXXThisExpr 0xa031498 <col:8> 'vector<_Bool, type-parameter-0-0> *' this)))
              (CXXFunctionalCastExpr 0xa031558 <line:685:10, col:29> 'difference_type':'int' functional cast to difference_type <NoOp>
                (ImplicitCastExpr 0xa031548 <col:26> 'difference_type':'int' <IntegralCast>
                  (ImplicitCastExpr 0xa031538 <col:26> 'size_type':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0xa031520 <col:26> 'size_type':'unsigned int' lvalue Var 0xa031130 '__n' 'size_type':'unsigned int'))))))
          (CallExpr 0xa0316b8 <line:686:3, col:40> '<dependent type>'
            (UnresolvedLookupExpr 0xa031638 <col:3, col:8> '<overloaded function type>' lvalue (no ADL) = '1' 0x9bebb70 0x9e76600)
            (DeclRefExpr 0xa031670 <col:13> '_ForwardIterator' lvalue ParmVar 0xa030e40 '__first' '_ForwardIterator')
            (DeclRefExpr 0xa031688 <col:22> '_ForwardIterator' lvalue ParmVar 0xa030e80 '__last' '_ForwardIterator')
            (DeclRefExpr 0xa0316a0 <col:30> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa030e00 '__position' 'iterator':'struct std::_Bit_iterator'))
          (CompoundAssignOperator 0xa0317b8 <line:687:3, col:49> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
            (CXXDependentScopeMemberExpr 0xa031728 <col:3, col:17> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa0316f0 <col:3, col:9> '<dependent type>' lvalue
                (CXXThisExpr 0xa0316e0 <col:3> 'vector<_Bool, type-parameter-0-0> *' this)))
            (CXXFunctionalCastExpr 0xa0317a0 <col:30, col:49> 'difference_type':'int' functional cast to difference_type <NoOp>
              (ImplicitCastExpr 0xa031790 <col:46> 'difference_type':'int' <IntegralCast>
                (ImplicitCastExpr 0xa031780 <col:46> 'size_type':'unsigned int' <LValueToRValue>
                  (DeclRefExpr 0xa031768 <col:46> 'size_type':'unsigned int' lvalue Var 0xa031130 '__n' 'size_type':'unsigned int'))))))
        (CompoundStmt 0xa032270 <line:690:8, line:704:8>
          (DeclStmt 0xa031928 <line:691:3, line:692:55>
            0xa031800 "const size_type __len =
              (CallExpr 0xa031900 <col:5, col:54> '<dependent type>'
                (MemberExpr 0xa031848 <col:5> '<bound member function type>' ->_M_check_len 0x9ffdc40
                  (CXXThisExpr 0xa031838 <col:5> 'vector<_Bool, type-parameter-0-0> *' this))
                (DeclRefExpr 0xa031868 <col:18> 'size_type':'unsigned int' lvalue Var 0xa031130 '__n' 'size_type':'unsigned int')
                (StringLiteral 0xa0318c0 <col:23> 'const char [30]' lvalue "vector<bool>::_M_insert_range"))")
          (DeclStmt 0xa031a08 <line:693:3, col:45>
            0xa031950 "_Bit_type *__q =
              (CallExpr 0xa0319e8 <col:21, col:44> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa031998 <col:21, col:27> '<dependent type>' lvalue
                  (CXXThisExpr 0xa031988 <col:21> 'vector<_Bool, type-parameter-0-0> *' this))
                (DeclRefExpr 0xa0319cc <col:39> 'const size_type':'const unsigned int' lvalue Var 0xa031800 '__len' 'const size_type':'const unsigned int'))")
          (DeclStmt 0xa031bc0 <line:694:3, line:695:30>
            0xa031a20 "iterator __i =
              (CallExpr 0xa031b98 <line:694:18, line:695:29> '<dependent type>'
                (MemberExpr 0xa031a68 <line:694:18> '<bound member function type>' ->_M_copy_aligned 0x9ffba80
                  (CXXThisExpr 0xa031a58 <col:18> 'vector<_Bool, type-parameter-0-0> *' this))
                (CallExpr 0xa031ad8 <col:34, col:40> '<dependent type>'
                  (UnresolvedMemberExpr 0xa031a98 <col:34> '<bound member function type>' lvalue))
                (DeclRefExpr 0xa031af4 <col:43> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa030e00 '__position' 'iterator':'struct std::_Bit_iterator')
                (CXXTemporaryObjectExpr 0xa031b68 <line:695:13, col:28> 'iterator':'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
                  (ImplicitCastExpr 0xa031b48 <col:22> '_Bit_type *' <LValueToRValue>
                    (DeclRefExpr 0xa031b18 <col:22> '_Bit_type *' lvalue Var 0xa031950 '__q' '_Bit_type *'))
                  (ImplicitCastExpr 0xa031b58 <col:27> 'unsigned int' <IntegralCast>
                    (IntegerLiteral 0xa031b30 <col:27> 'int' 0))))")
          (BinaryOperator 0xa031ca8 <line:696:3, col:39> '<dependent type>' '='
            (DeclRefExpr 0xa031bd0 <col:3> 'iterator':'struct std::_Bit_iterator' lvalue Var 0xa031a20 '__i' 'iterator':'struct std::_Bit_iterator')
            (CallExpr 0xa031c80 <col:9, col:39> '<dependent type>'
              (UnresolvedLookupExpr 0xa031c00 <col:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0x9bebb70 0x9e76600)
              (DeclRefExpr 0xa031c38 <col:19> '_ForwardIterator' lvalue ParmVar 0xa030e40 '__first' '_ForwardIterator')
              (DeclRefExpr 0xa031c50 <col:28> '_ForwardIterator' lvalue ParmVar 0xa030e80 '__last' '_ForwardIterator')
              (DeclRefExpr 0xa031c68 <col:36> 'iterator':'struct std::_Bit_iterator' lvalue Var 0xa031a20 '__i' 'iterator':'struct std::_Bit_iterator')))
          (BinaryOperator 0xa031e58 <line:697:3, col:61> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0xa031d08 <col:3, col:17> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa031cd0 <col:3, col:9> '<dependent type>' lvalue
                (CXXThisExpr 0xa031cc0 <col:3> 'vector<_Bool, type-parameter-0-0> *' this)))
            (CallExpr 0xa031e30 <col:29, col:61> '<dependent type>'
              (UnresolvedLookupExpr 0xa031d58 <col:29, col:34> '<overloaded function type>' lvalue (no ADL) = '1' 0x9bebb70 0x9e76600)
              (DeclRefExpr 0xa031d90 <col:39> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa030e00 '__position' 'iterator':'struct std::_Bit_iterator')
              (CallExpr 0xa031df8 <col:51, col:55> '<dependent type>'
                (UnresolvedMemberExpr 0xa031db8 <col:51> '<bound member function type>' lvalue))
              (DeclRefExpr 0xa031e14 <col:58> 'iterator':'struct std::_Bit_iterator' lvalue Var 0xa031a20 '__i' 'iterator':'struct std::_Bit_iterator')))
          (CallExpr 0xa031eb8 <line:698:3, col:23> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa031e80 <col:3, col:9> '<dependent type>' lvalue
              (CXXThisExpr 0xa031e70 <col:3> 'vector<_Bool, type-parameter-0-0> *' this)))
          (BinaryOperator 0xa032138 <line:699:3, line:702:32> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0xa031f20 <line:699:3, col:17> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa031ee8 <col:3, col:9> '<dependent type>' lvalue
                (CXXThisExpr 0xa031ed8 <col:3> 'vector<_Bool, type-parameter-0-0> *' this)))
            (ParenExpr 0xa032120 <col:37, line:702:32> '_Bit_type *'
              (BinaryOperator 0xa032108 <line:699:38, line:702:31> '_Bit_type *' '+'
                (ImplicitCastExpr 0xa0320f8 <line:699:38> '_Bit_type *' <LValueToRValue>
                  (DeclRefExpr 0xa031f54 <col:38> '_Bit_type *' lvalue Var 0xa031950 '__q' '_Bit_type *'))
                (ParenExpr 0xa0320e0 <line:700:12, line:702:31> 'unsigned int'
                  (BinaryOperator 0xa0320c8 <line:700:13, line:702:30> 'unsigned int' '/'
                    (ParenExpr 0xa032050 <line:700:13, line:701:36> 'unsigned int'
                      (BinaryOperator 0xa032038 <line:700:14, line:701:35> 'unsigned int' '-'
                        (BinaryOperator 0xa031ff8 <line:700:14, line:701:31> 'unsigned int' '+'
                          (ImplicitCastExpr 0xa031fd8 <line:700:14> 'size_type':'unsigned int' <LValueToRValue>
                            (DeclRefExpr 0xa031f6c <col:14> 'const size_type':'const unsigned int' lvalue Var 0xa031800 '__len' 'const size_type':'const unsigned int'))
                          (ImplicitCastExpr 0xa031fe8 <line:701:16, col:31> 'unsigned int' <IntegralCast>
                            (CXXFunctionalCastExpr 0xa031fc0 <col:16, col:31> 'int' functional cast to int <NoOp>
                              (ImplicitCastExpr 0xa031fb0 <col:20> 'int' <IntegralCast>
                                (DeclRefExpr 0xa031f94 <col:20> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x9feaf10 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))
                        (ImplicitCastExpr 0xa032028 <col:35> 'unsigned int' <IntegralCast>
                          (IntegerLiteral 0xa032010 <col:35> 'int' 1))))
                    (ImplicitCastExpr 0xa0320b8 <line:702:15, col:30> 'unsigned int' <IntegralCast>
                      (CXXFunctionalCastExpr 0xa0320a0 <col:15, col:30> 'int' functional cast to int <NoOp>
                        (ImplicitCastExpr 0xa032090 <col:19> 'int' <IntegralCast>
                          (DeclRefExpr 0xa032074 <col:19> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x9feaf10 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))))))
          (BinaryOperator 0xa032258 <line:703:3, col:43> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0xa032198 <col:3, col:17> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa032160 <col:3, col:9> '<dependent type>' lvalue
                (CXXThisExpr 0xa032150 <col:3> 'vector<_Bool, type-parameter-0-0> *' this)))
            (CXXTemporaryObjectExpr 0xa032228 <col:28, col:43> 'iterator':'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
              (ImplicitCastExpr 0xa032208 <col:37> '_Bit_type *' <LValueToRValue>
                (DeclRefExpr 0xa0321d8 <col:37> '_Bit_type *' lvalue Var 0xa031950 '__q' '_Bit_type *'))
              (ImplicitCastExpr 0xa032218 <col:42> 'unsigned int' <IntegralCast>
                (IntegerLiteral 0xa0321f0 <col:42> 'int' 0)))))))
    <<<NULL>>>))

;
    void _M_insert_aux(iterator __position, bool __x) (CompoundStmt 0xa0337b0 </usr/include/c++/4.6/bits/vector.tcc:712:5, line:735:5>
  (IfStmt 0xa033790 <line:713:7, line:734:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa032830 <line:713:11, col:57> '<dependent type>'
      (UnresolvedLookupExpr 0xa0327d0 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bacde0 0x9bc3130 0x9bc62c0 0x9c11360 0x9c32300 0x9c32670 0x9d60120 0x9d60630 0x9d60b40 0x9e73820 0x9fe96a0)
      (CXXDependentScopeMemberExpr 0xa032718 <col:11, col:35> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa0326e0 <col:11, col:25> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa0326a8 <col:11, col:17> '<dependent type>' lvalue
            (CXXThisExpr 0xa032698 <col:11> 'vector<_Bool, type-parameter-0-0> *' this))))
      (CXXDependentScopeMemberExpr 0xa032798 <col:43, col:57> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa032760 <col:43, col:49> '<dependent type>' lvalue
          (CXXThisExpr 0xa032750 <col:43> 'vector<_Bool, type-parameter-0-0> *' this))))
    (CompoundStmt 0xa032c00 <line:714:2, line:719:2>
      (CallExpr 0xa032a58 <line:715:4, line:716:36> '<dependent type>'
        (UnresolvedLookupExpr 0xa032878 <line:715:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x9bf0b70)
        (DeclRefExpr 0xa0328ac <col:23> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa032560 '__position' 'iterator':'struct std::_Bit_iterator')
        (CXXDependentScopeMemberExpr 0xa032910 <col:35, col:49> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa0328d8 <col:35, col:41> '<dependent type>' lvalue
            (CXXThisExpr 0xa0328c8 <col:35> 'vector<_Bool, type-parameter-0-0> *' this)))
        (CXXOperatorCallExpr 0xa032a30 <line:716:9, col:35> '<dependent type>'
          (UnresolvedLookupExpr 0xa0329e0 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bc4ab0 0x9d5bd80 0x9d86680 0x9d87280 0x9d5d090 0x9d5d890 0x9ff2ef0 0x9ff5070)
          (CXXDependentScopeMemberExpr 0xa032990 <col:9, col:23> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa032958 <col:9, col:15> '<dependent type>' lvalue
              (CXXThisExpr 0xa032948 <col:9> 'vector<_Bool, type-parameter-0-0> *' this)))
          (IntegerLiteral 0xa0329c8 <col:35> 'int' 1)))
      (CXXOperatorCallExpr 0xa032b40 <line:717:4, col:18> 'struct std::_Bit_reference' lvalue
        (ImplicitCastExpr 0xa032b30 <col:16, <invalid sloc>> 'struct std::_Bit_reference &(*)(_Bool)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa032b18 <col:16, <invalid sloc>> 'struct std::_Bit_reference &(_Bool)' lvalue CXXMethod 0x9feb450 'operator=' 'struct std::_Bit_reference &(_Bool)'))
        (CXXOperatorCallExpr 0xa032ad0 <col:4, col:5> 'reference':'struct std::_Bit_reference'
          (ImplicitCastExpr 0xa032ac0 <<invalid sloc>> 'reference (*)(void) const' <FunctionToPointerDecay>
            (DeclRefExpr 0xa032aa8 <<invalid sloc>> 'reference (void) const' lvalue CXXMethod 0x9ff1150 'operator*' 'reference (void) const'))
          (ImplicitCastExpr 0xa032a98 <col:5> 'const struct std::_Bit_iterator' lvalue <NoOp>
            (DeclRefExpr 0xa032a80 <col:5> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa032560 '__position' 'iterator':'struct std::_Bit_iterator')))
        (ImplicitCastExpr 0xa032b08 <col:18> '_Bool' <LValueToRValue>
          (DeclRefExpr 0xa032af0 <col:18> '_Bool' lvalue ParmVar 0xa0325a0 '__x' '_Bool')))
      (UnaryOperator 0xa032be8 <line:718:4, col:20> '<dependent type>' prefix '++'
        (CXXDependentScopeMemberExpr 0xa032bb0 <col:6, col:20> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa032b78 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa032b68 <col:6> 'vector<_Bool, type-parameter-0-0> *' this)))))
    (CompoundStmt 0xa033760 <line:721:2, line:734:2>
      (DeclStmt 0xa032d80 <line:722:4, line:723:63>
        0xa032c30 "const size_type __len =
          (CallExpr 0xa032d58 <col:6, col:62> '<dependent type>'
            (MemberExpr 0xa032c78 <col:6> '<bound member function type>' ->_M_check_len 0x9ffdc40
              (CXXThisExpr 0xa032c68 <col:6> 'vector<_Bool, type-parameter-0-0> *' this))
            (CXXFunctionalCastExpr 0xa032cc8 <col:19, col:30> 'size_type':'unsigned int' functional cast to size_type <NoOp>
              (ImplicitCastExpr 0xa032cb8 <col:29> 'size_type':'unsigned int' <IntegralCast>
                (IntegerLiteral 0xa032ca0 <col:29> 'int' 1)))
            (StringLiteral 0xa032d20 <col:33> 'const char [28]' lvalue "vector<bool>::_M_insert_aux"))")
      (DeclStmt 0xa032e58 <line:724:4, col:46>
        0xa032da0 "_Bit_type *__q =
          (CallExpr 0xa032e38 <col:22, col:45> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa032de8 <col:22, col:28> '<dependent type>' lvalue
              (CXXThisExpr 0xa032dd8 <col:22> 'vector<_Bool, type-parameter-0-0> *' this))
            (DeclRefExpr 0xa032e1c <col:40> 'const size_type':'const unsigned int' lvalue Var 0xa032c30 '__len' 'const size_type':'const unsigned int'))")
      (DeclStmt 0xa033010 <line:725:4, line:726:24>
        0xa032e70 "iterator __i =
          (CallExpr 0xa032fe8 <line:725:19, line:726:23> '<dependent type>'
            (MemberExpr 0xa032eb8 <line:725:19> '<bound member function type>' ->_M_copy_aligned 0x9ffba80
              (CXXThisExpr 0xa032ea8 <col:19> 'vector<_Bool, type-parameter-0-0> *' this))
            (CallExpr 0xa032f28 <col:35, col:41> '<dependent type>'
              (UnresolvedMemberExpr 0xa032ee8 <col:35> '<bound member function type>' lvalue))
            (DeclRefExpr 0xa032f44 <col:44> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa032560 '__position' 'iterator':'struct std::_Bit_iterator')
            (CXXTemporaryObjectExpr 0xa032fb8 <line:726:7, col:22> 'iterator':'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
              (ImplicitCastExpr 0xa032f98 <col:16> '_Bit_type *' <LValueToRValue>
                (DeclRefExpr 0xa032f68 <col:16> '_Bit_type *' lvalue Var 0xa032da0 '__q' '_Bit_type *'))
              (ImplicitCastExpr 0xa032fa8 <col:21> 'unsigned int' <IntegralCast>
                (IntegerLiteral 0xa032f80 <col:21> 'int' 0))))")
      (CXXOperatorCallExpr 0xa033188 <line:727:4, col:13> 'struct std::_Bit_reference' lvalue
        (ImplicitCastExpr 0xa033178 <col:11, <invalid sloc>> 'struct std::_Bit_reference &(*)(_Bool)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa033160 <col:11, <invalid sloc>> 'struct std::_Bit_reference &(_Bool)' lvalue CXXMethod 0x9feb450 'operator=' 'struct std::_Bit_reference &(_Bool)'))
        (CXXOperatorCallExpr 0xa033118 <col:4, col:8> 'reference':'struct std::_Bit_reference'
          (ImplicitCastExpr 0xa033108 <<invalid sloc>> 'reference (*)(void) const' <FunctionToPointerDecay>
            (DeclRefExpr 0xa0330f0 <<invalid sloc>> 'reference (void) const' lvalue CXXMethod 0x9ff1150 'operator*' 'reference (void) const'))
          (ImplicitCastExpr 0xa0330e0 <col:5, col:8> 'const struct std::_Bit_iterator' lvalue <NoOp>
            (CXXOperatorCallExpr 0xa0330b8 <col:5, col:8> 'iterator':'struct std::_Bit_iterator'
              (ImplicitCastExpr 0xa0330a8 <<invalid sloc>> 'iterator (*)(int)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa033050 <<invalid sloc>> 'iterator (int)' lvalue CXXMethod 0x9ff1360 'operator++' 'iterator (int)'))
              (DeclRefExpr 0xa033020 <col:5> 'iterator':'struct std::_Bit_iterator' lvalue Var 0xa032e70 '__i' 'iterator':'struct std::_Bit_iterator')
              (IntegerLiteral 0xa033038 <<invalid sloc>> 'int' 0))))
        (ImplicitCastExpr 0xa033150 <col:13> '_Bool' <LValueToRValue>
          (DeclRefExpr 0xa033138 <col:13> '_Bool' lvalue ParmVar 0xa0325a0 '__x' '_Bool')))
      (BinaryOperator 0xa033348 <line:728:4, col:62> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa0331f8 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa0331c0 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa0331b0 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
        (CallExpr 0xa033320 <col:30, col:62> '<dependent type>'
          (UnresolvedLookupExpr 0xa033248 <col:30, col:35> '<overloaded function type>' lvalue (no ADL) = '1' 0x9bebb70 0x9e76600)
          (DeclRefExpr 0xa033280 <col:40> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa032560 '__position' 'iterator':'struct std::_Bit_iterator')
          (CallExpr 0xa0332e8 <col:52, col:56> '<dependent type>'
            (UnresolvedMemberExpr 0xa0332a8 <col:52> '<bound member function type>' lvalue))
          (DeclRefExpr 0xa033304 <col:59> 'iterator':'struct std::_Bit_iterator' lvalue Var 0xa032e70 '__i' 'iterator':'struct std::_Bit_iterator')))
      (CallExpr 0xa0333a8 <line:729:4, col:24> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa033370 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0xa033360 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
      (BinaryOperator 0xa033628 <line:730:4, line:732:30> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa033410 <line:730:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa0333d8 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa0333c8 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
        (ParenExpr 0xa033610 <col:38, line:732:30> '_Bit_type *'
          (BinaryOperator 0xa0335f8 <line:730:39, line:732:29> '_Bit_type *' '+'
            (ImplicitCastExpr 0xa0335e8 <line:730:39> '_Bit_type *' <LValueToRValue>
              (DeclRefExpr 0xa033444 <col:39> '_Bit_type *' lvalue Var 0xa032da0 '__q' '_Bit_type *'))
            (ParenExpr 0xa0335d0 <col:45, line:732:29> 'unsigned int'
              (BinaryOperator 0xa0335b8 <line:730:46, line:732:28> 'unsigned int' '/'
                (ParenExpr 0xa033540 <line:730:46, line:731:34> 'unsigned int'
                  (BinaryOperator 0xa033528 <line:730:47, line:731:33> 'unsigned int' '-'
                    (BinaryOperator 0xa0334e8 <line:730:47, line:731:29> 'unsigned int' '+'
                      (ImplicitCastExpr 0xa0334c8 <line:730:47> 'size_type':'unsigned int' <LValueToRValue>
                        (DeclRefExpr 0xa03345c <col:47> 'const size_type':'const unsigned int' lvalue Var 0xa032c30 '__len' 'const size_type':'const unsigned int'))
                      (ImplicitCastExpr 0xa0334d8 <line:731:14, col:29> 'unsigned int' <IntegralCast>
                        (CXXFunctionalCastExpr 0xa0334b0 <col:14, col:29> 'int' functional cast to int <NoOp>
                          (ImplicitCastExpr 0xa0334a0 <col:18> 'int' <IntegralCast>
                            (DeclRefExpr 0xa033484 <col:18> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x9feaf10 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))
                    (ImplicitCastExpr 0xa033518 <col:33> 'unsigned int' <IntegralCast>
                      (IntegerLiteral 0xa033500 <col:33> 'int' 1))))
                (ImplicitCastExpr 0xa0335a8 <line:732:13, col:28> 'unsigned int' <IntegralCast>
                  (CXXFunctionalCastExpr 0xa033590 <col:13, col:28> 'int' functional cast to int <NoOp>
                    (ImplicitCastExpr 0xa033580 <col:17> 'int' <IntegralCast>
                      (DeclRefExpr 0xa033564 <col:17> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x9feaf10 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))))))
      (BinaryOperator 0xa033748 <line:733:4, col:44> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa033688 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa033650 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa033640 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
        (CXXTemporaryObjectExpr 0xa033718 <col:29, col:44> 'iterator':'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
          (ImplicitCastExpr 0xa0336f8 <col:38> '_Bit_type *' <LValueToRValue>
            (DeclRefExpr 0xa0336c8 <col:38> '_Bit_type *' lvalue Var 0xa032da0 '__q' '_Bit_type *'))
          (ImplicitCastExpr 0xa033708 <col:43> 'unsigned int' <IntegralCast>
            (IntegerLiteral 0xa0336e0 <col:43> 'int' 0)))))))


}
extern "C" {
    extern void *memcpy(void *restrict __dest, const void *restrict __src, size_t __n) throw();
    extern void *memmove(void *__dest, const void *__src, size_t __n) throw();
    extern void *memccpy(void *restrict __dest, const void *restrict __src, int __c, size_t __n) throw();
    extern void *memset(void *__s, int __c, size_t __n) throw();
    extern int memcmp(const void *__s1, const void *__s2, size_t __n) throw();
    extern void *memchr(const void *__s, int __c, size_t __n) throw();
    extern void *rawmemchr(const void *__s, int __c) throw();
    extern void *memrchr(const void *__s, int __c, size_t __n) throw();
    extern char *strcpy(char *restrict __dest, const char *restrict __src) throw();
    extern char *strncpy(char *restrict __dest, const char *restrict __src, size_t __n) throw();
    extern char *strcat(char *restrict __dest, const char *restrict __src) throw();
    extern char *strncat(char *restrict __dest, const char *restrict __src, size_t __n) throw();
    extern int strcmp(const char *__s1, const char *__s2) throw();
    extern int strncmp(const char *__s1, const char *__s2, size_t __n) throw();
    extern int strcoll(const char *__s1, const char *__s2) throw();
    extern size_t strxfrm(char *restrict __dest, const char *restrict __src, size_t __n) throw();
    extern int strcoll_l(const char *__s1, const char *__s2, __locale_t __l) throw();
    extern size_t strxfrm_l(char *__dest, const char *__src, size_t __n, __locale_t __l) throw();
    extern char *strdup(const char *__s) throw();
    extern char *strndup(const char *__string, size_t __n) throw();
    extern char *strchr(const char *__s, int __c) throw();
    extern char *strrchr(const char *__s, int __c) throw();
    extern char *strchrnul(const char *__s, int __c) throw();
    extern size_t strcspn(const char *__s, const char *__reject) throw();
    extern size_t strspn(const char *__s, const char *__accept) throw();
    extern char *strpbrk(const char *__s, const char *__accept) throw();
    extern char *strstr(const char *__haystack, const char *__needle) throw();
    extern char *strtok(char *restrict __s, const char *restrict __delim) throw();
    extern char *__strtok_r(char *restrict __s, const char *restrict __delim, char **restrict __save_ptr) throw();
    extern char *strtok_r(char *restrict __s, const char *restrict __delim, char **restrict __save_ptr) throw();
    extern char *strcasestr(const char *__haystack, const char *__needle) throw();
    extern void *memmem(const void *__haystack, size_t __haystacklen, const void *__needle, size_t __needlelen) throw();
    extern void *__mempcpy(void *restrict __dest, const void *restrict __src, size_t __n) throw();
    extern void *mempcpy(void *restrict __dest, const void *restrict __src, size_t __n) throw();
    extern size_t strlen(const char *__s) throw();
    extern size_t strnlen(const char *__string, size_t __maxlen) throw();
    extern char *strerror(int __errnum) throw();
    extern char *strerror_r(int __errnum, char *__buf, size_t __buflen) throw();
    extern char *strerror_l(int __errnum, __locale_t __l) throw();
    extern void __bzero(void *__s, size_t __n) throw();
    extern void bcopy(const void *__src, void *__dest, size_t __n) throw();
    extern void bzero(void *__s, size_t __n) throw();
    extern int bcmp(const void *__s1, const void *__s2, size_t __n) throw();
    extern char *index(const char *__s, int __c) throw();
    extern char *rindex(const char *__s, int __c) throw();
    extern int ffs(int __i) throw();
    extern int ffsl(long __l) throw();
    extern int ffsll(long long __ll) throw();
    extern int strcasecmp(const char *__s1, const char *__s2) throw();
    extern int strncasecmp(const char *__s1, const char *__s2, size_t __n) throw();
    extern int strcasecmp_l(const char *__s1, const char *__s2, __locale_t __loc) throw();
    extern int strncasecmp_l(const char *__s1, const char *__s2, size_t __n, __locale_t __loc) throw();
    extern char *strsep(char **restrict __stringp, const char *restrict __delim) throw();
    extern char *strsignal(int __sig) throw();
    extern char *__stpcpy(char *restrict __dest, const char *restrict __src) throw();
    extern char *stpcpy(char *restrict __dest, const char *restrict __src) throw();
    extern char *__stpncpy(char *restrict __dest, const char *restrict __src, size_t __n) throw();
    extern char *stpncpy(char *restrict __dest, const char *restrict __src, size_t __n) throw();
    extern int strverscmp(const char *__s1, const char *__s2) throw();
    extern char *strfry(char *__string) throw();
    extern void *memfrob(void *__s, size_t __n) throw();
    extern char *basename(const char *__filename) throw();
}
extern "C" {
    extern int *__errno_location() throw();
    extern char *program_invocation_name;
    extern char *program_invocation_short_name;
}
typedef int error_t;
extern "C" {
    extern void __assert_fail(const char *__assertion, const char *__file, unsigned int __line, const char *__function) throw();
    extern void __assert_perror_fail(int __errnum, const char *__file, unsigned int __line, const char *__function) throw();
    extern void __assert(const char *__assertion, const char *__file, int __line) throw();
}
template <typename T> static inline T maxi(T a, T b) (CompoundStmt 0xa03b6a8 <../codeBase/fish-shell-master/util.h:17:1, line:19:1>
  (ReturnStmt 0xa03b698 <line:18:5, col:18>
    (ConditionalOperator 0xa03b678 <col:12, col:18> '<dependent type>'
      (BinaryOperator 0xa03b630 <col:12, col:14> '<dependent type>' '>'
        (DeclRefExpr 0xa03b600 <col:12> 'T' lvalue ParmVar 0xa03b490 'a' 'T')
        (DeclRefExpr 0xa03b618 <col:14> 'T' lvalue ParmVar 0xa03b4d0 'b' 'T'))
      (DeclRefExpr 0xa03b648 <col:16> 'T' lvalue ParmVar 0xa03b490 'a' 'T')
      (DeclRefExpr 0xa03b660 <col:18> 'T' lvalue ParmVar 0xa03b4d0 'b' 'T'))))

;
template <typename T> static inline T mini(T a, T b) (CompoundStmt 0xa03b918 <../codeBase/fish-shell-master/util.h:26:1, line:28:1>
  (ReturnStmt 0xa03b908 <line:27:5, col:18>
    (ConditionalOperator 0xa03b8e8 <col:12, col:18> '<dependent type>'
      (BinaryOperator 0xa03b8a0 <col:12, col:14> '<dependent type>' '<'
        (DeclRefExpr 0xa03b870 <col:12> 'T' lvalue ParmVar 0xa03b720 'a' 'T')
        (DeclRefExpr 0xa03b888 <col:14> 'T' lvalue ParmVar 0xa03b760 'b' 'T'))
      (DeclRefExpr 0xa03b8b8 <col:16> 'T' lvalue ParmVar 0xa03b720 'a' 'T')
      (DeclRefExpr 0xa03b8d0 <col:18> 'T' lvalue ParmVar 0xa03b760 'b' 'T'))))

;
int wcsfilecmp(const wchar_t *a, const wchar_t *b);
long long get_time();
class completion_t;
typedef std::wstring wcstring;
typedef std::vector<wcstring> wcstring_list_t;
enum  {
    ESCAPE_ALL = (ImplicitCastExpr 0xa03c0c8 <../codeBase/fish-shell-master/common.h:76:18, col:23> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa03bf70 <col:18, col:23> 'int' '<<'
    (IntegerLiteral 0xa03bf40 <col:18> 'int' 1)
    (IntegerLiteral 0xa03bf58 <col:23> 'int' 0)))
,
    ESCAPE_NO_QUOTED = (ImplicitCastExpr 0xa03c0d8 <../codeBase/fish-shell-master/common.h:79:24, col:29> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa03bff8 <col:24, col:29> 'int' '<<'
    (IntegerLiteral 0xa03bfc8 <col:24> 'int' 1)
    (IntegerLiteral 0xa03bfe0 <col:29> 'int' 1)))
,
    ESCAPE_NO_TILDE = (ImplicitCastExpr 0xa03c0e8 <../codeBase/fish-shell-master/common.h:82:23, col:28> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa03c078 <col:23, col:28> 'int' '<<'
    (IntegerLiteral 0xa03c048 <col:23> 'int' 1)
    (IntegerLiteral 0xa03c060 <col:28> 'int' 2)))

};
typedef unsigned int escape_flags_t;
void exit_without_destructors(int code);
extern struct termios shell_modes;
extern wchar_t ellipsis_char;
extern wchar_t omitted_newline_char;
extern int debug_level;
extern char *profile;
extern const wchar_t *program_name;
void show_stackframe();
int fgetws2(wcstring *s, FILE *f);
wcstring str2wcstring(const char *in);
wcstring str2wcstring(const char *in, size_t len);
wcstring str2wcstring(const std::string &in);
char *wcs2str(const wchar_t *in);
char *wcs2str(const wcstring &in);
std::string wcs2string(const wcstring &input);
bool string_prefixes_string(const wcstring &proposed_prefix, const wcstring &value);
bool string_prefixes_string(const wchar_t *proposed_prefix, const wcstring &value);
bool string_suffixes_string(const wcstring &proposed_suffix, const wcstring &value);
bool string_suffixes_string(const wchar_t *proposed_suffix, const wcstring &value);
bool string_prefixes_string_case_insensitive(const wcstring &proposed_prefix, const wcstring &value);
enum fuzzy_match_type_t {
    fuzzy_match_exact = (ImplicitCastExpr 0xa03d608 <../codeBase/fish-shell-master/common.h:252:25> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa03d430 <col:25> 'int' 0))
,
    fuzzy_match_prefix,
    fuzzy_match_case_insensitive,
    fuzzy_match_prefix_case_insensitive,
    fuzzy_match_substring,
    fuzzy_match_subsequence_insertions_only,
    fuzzy_match_none
};
static inline bool match_type_requires_full_replacement(fuzzy_match_type_t t) (CompoundStmt 0xa03d860 <../codeBase/fish-shell-master/common.h:275:1, line:284:1>
  (SwitchStmt 0xa03d740 <line:276:5, line:283:5>
    <<<NULL>>>
    (ImplicitCastExpr 0xa03d730 <line:276:13> 'int' <IntegralCast>
      (ImplicitCastExpr 0xa03d720 <col:13> 'enum fuzzy_match_type_t' <LValueToRValue>
        (DeclRefExpr 0xa03d704 <col:13> 'enum fuzzy_match_type_t' lvalue ParmVar 0xa03d620 't' 'enum fuzzy_match_type_t')))
    (CompoundStmt 0xa03d828 <line:277:5, line:283:5>
      (CaseStmt 0xa03d778 <line:278:9, line:280:20>
        (ImplicitCastExpr 0xa03d850 <line:278:14> 'int' <IntegralCast>
          (DeclRefExpr 0xa03d75c <col:14> 'enum fuzzy_match_type_t' EnumConstant 0xa03d450 'fuzzy_match_exact' 'enum fuzzy_match_type_t'))
        <<<NULL>>>
        (CaseStmt 0xa03d7b0 <line:279:9, line:280:20>
          (ImplicitCastExpr 0xa03d840 <line:279:14> 'int' <IntegralCast>
            (DeclRefExpr 0xa03d798 <col:14> 'enum fuzzy_match_type_t' EnumConstant 0xa03d490 'fuzzy_match_prefix' 'enum fuzzy_match_type_t'))
          <<<NULL>>>
          (ReturnStmt 0xa03d7e0 <line:280:13, col:20>
            (CXXBoolLiteralExpr 0xa03d7d0 <col:20> '_Bool' false))))
      (DefaultStmt 0xa03d810 <line:281:9, line:282:20>
        (ReturnStmt 0xa03d800 <col:13, col:20>
          (CXXBoolLiteralExpr 0xa03d7f0 <col:20> '_Bool' true))))))


static inline bool match_type_shares_prefix(fuzzy_match_type_t t) (CompoundStmt 0xa03db20 <../codeBase/fish-shell-master/common.h:288:1, line:299:1>
  (SwitchStmt 0xa03d970 <line:289:5, line:298:5>
    <<<NULL>>>
    (ImplicitCastExpr 0xa03d960 <line:289:13> 'int' <IntegralCast>
      (ImplicitCastExpr 0xa03d950 <col:13> 'enum fuzzy_match_type_t' <LValueToRValue>
        (DeclRefExpr 0xa03d934 <col:13> 'enum fuzzy_match_type_t' lvalue ParmVar 0xa03d880 't' 'enum fuzzy_match_type_t')))
    (CompoundStmt 0xa03dac8 <line:290:5, line:298:5>
      (CaseStmt 0xa03d9a8 <line:291:9, line:295:20>
        (ImplicitCastExpr 0xa03db10 <line:291:14> 'int' <IntegralCast>
          (DeclRefExpr 0xa03d98c <col:14> 'enum fuzzy_match_type_t' EnumConstant 0xa03d450 'fuzzy_match_exact' 'enum fuzzy_match_type_t'))
        <<<NULL>>>
        (CaseStmt 0xa03d9e0 <line:292:9, line:295:20>
          (ImplicitCastExpr 0xa03db00 <line:292:14> 'int' <IntegralCast>
            (DeclRefExpr 0xa03d9c8 <col:14> 'enum fuzzy_match_type_t' EnumConstant 0xa03d490 'fuzzy_match_prefix' 'enum fuzzy_match_type_t'))
          <<<NULL>>>
          (CaseStmt 0xa03da18 <line:293:9, line:295:20>
            (ImplicitCastExpr 0xa03daf0 <line:293:14> 'int' <IntegralCast>
              (DeclRefExpr 0xa03da00 <col:14> 'enum fuzzy_match_type_t' EnumConstant 0xa03d4d0 'fuzzy_match_case_insensitive' 'enum fuzzy_match_type_t'))
            <<<NULL>>>
            (CaseStmt 0xa03da50 <line:294:9, line:295:20>
              (ImplicitCastExpr 0xa03dae0 <line:294:14> 'int' <IntegralCast>
                (DeclRefExpr 0xa03da38 <col:14> 'enum fuzzy_match_type_t' EnumConstant 0xa03d510 'fuzzy_match_prefix_case_insensitive' 'enum fuzzy_match_type_t'))
              <<<NULL>>>
              (ReturnStmt 0xa03da80 <line:295:13, col:20>
                (CXXBoolLiteralExpr 0xa03da70 <col:20> '_Bool' true))))))
      (DefaultStmt 0xa03dab0 <line:296:9, line:297:20>
        (ReturnStmt 0xa03daa0 <col:13, col:20>
          (CXXBoolLiteralExpr 0xa03da90 <col:20> '_Bool' false))))))


struct string_fuzzy_match_t {
    struct string_fuzzy_match_t;
    enum fuzzy_match_type_t type;
    size_t match_distance_first;
    size_t match_distance_second;
    string_fuzzy_match_t(enum fuzzy_match_type_t t, size_t distance_first = (ImplicitCastExpr 0xa03e050 <../codeBase/fish-shell-master/common.h:311:77> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa03e038 <col:77> 'int' 0))
, size_t distance_second = (ImplicitCastExpr 0xa03e078 <../codeBase/fish-shell-master/common.h:311:105> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa03e060 <col:105> 'int' 0))
);
    int compare(const string_fuzzy_match_t &rhs) const;
};
string_fuzzy_match_t string_fuzzy_match_string(const wcstring &string, const wcstring &match_against, fuzzy_match_type_t limit_type = (DeclRefExpr 0xa03e164 <../codeBase/fish-shell-master/common.h:318:135> 'enum fuzzy_match_type_t' EnumConstant 0xa03d5d0 'fuzzy_match_none' 'enum fuzzy_match_type_t')
);
bool list_contains_string(const wcstring_list_t &list, const wcstring &str);
void assert_is_main_thread(const char *who);
void assert_is_background_thread(const char *who);
void assert_is_locked(void *mutex, const char *who, const char *caller);
wcstring format_size(long long sz);
void format_size_safe(char buff[128], unsigned long long sz);
void debug_safe(int level, const char *msg, const char *param1 = (ImplicitCastExpr 0xa067fe8 </usr/include/clang/3.0/include/stddef.h:47:14> 'const char *' <NullToPointer>
  (GNUNullExpr 0xa067fd8 <col:14> 'int'))
, const char *param2 = (ImplicitCastExpr 0xa068058 </usr/include/clang/3.0/include/stddef.h:47:14> 'const char *' <NullToPointer>
  (GNUNullExpr 0xa068048 <col:14> 'int'))
, const char *param3 = (ImplicitCastExpr 0xa0680c8 </usr/include/clang/3.0/include/stddef.h:47:14> 'const char *' <NullToPointer>
  (GNUNullExpr 0xa0680b8 <col:14> 'int'))
, const char *param4 = (ImplicitCastExpr 0xa068138 </usr/include/clang/3.0/include/stddef.h:47:14> 'const char *' <NullToPointer>
  (GNUNullExpr 0xa068128 <col:14> 'int'))
, const char *param5 = (ImplicitCastExpr 0xa0681a8 </usr/include/clang/3.0/include/stddef.h:47:14> 'const char *' <NullToPointer>
  (GNUNullExpr 0xa068198 <col:14> 'int'))
, const char *param6 = (ImplicitCastExpr 0xa068218 </usr/include/clang/3.0/include/stddef.h:47:14> 'const char *' <NullToPointer>
  (GNUNullExpr 0xa068208 <col:14> 'int'))
, const char *param7 = (ImplicitCastExpr 0xa068288 </usr/include/clang/3.0/include/stddef.h:47:14> 'const char *' <NullToPointer>
  (GNUNullExpr 0xa068278 <col:14> 'int'))
, const char *param8 = (ImplicitCastExpr 0xa0682f8 </usr/include/clang/3.0/include/stddef.h:47:14> 'const char *' <NullToPointer>
  (GNUNullExpr 0xa0682e8 <col:14> 'int'))
, const char *param9 = (ImplicitCastExpr 0xa068368 </usr/include/clang/3.0/include/stddef.h:47:14> 'const char *' <NullToPointer>
  (GNUNullExpr 0xa068358 <col:14> 'int'))
, const char *param10 = (ImplicitCastExpr 0xa0683d8 </usr/include/clang/3.0/include/stddef.h:47:14> 'const char *' <NullToPointer>
  (GNUNullExpr 0xa0683c8 <col:14> 'int'))
, const char *param11 = (ImplicitCastExpr 0xa068448 </usr/include/clang/3.0/include/stddef.h:47:14> 'const char *' <NullToPointer>
  (GNUNullExpr 0xa068438 <col:14> 'int'))
, const char *param12 = (ImplicitCastExpr 0xa0684b8 </usr/include/clang/3.0/include/stddef.h:47:14> 'const char *' <NullToPointer>
  (GNUNullExpr 0xa0684a8 <col:14> 'int'))
);
void format_long_safe(char buff[128], long val);
void format_long_safe(wchar_t buff[128], long val);
template <typename T = bool> inline bool from_string(const wcstring &x) (CompoundStmt 0xa06b588 <../codeBase/fish-shell-master/common.h:394:1, line:396:1>
  (ReturnStmt 0xa06b578 <line:395:5, col:51>
    (BinaryOperator 0xa06b560 <col:12, col:51> '_Bool' '&&'
      (UnaryOperator 0xa06b358 <col:12, col:22> '_Bool' prefix '!'
        (CXXMemberCallExpr 0xa06b320 <col:14, col:22> '_Bool'
          (MemberExpr 0xa06b300 <col:14, col:16> '<bound member function type>' .empty 0x9dc8800
            (DeclRefExpr 0xa06b2e8 <col:14> 'const wcstring':'const class std::basic_string<wchar_t>' lvalue ParmVar 0xa06b000 'x' 'const wcstring &'))))
      (ImplicitCastExpr 0xa06b550 <col:27, col:51> '_Bool' <PointerToBoolean>
        (CallExpr 0xa06b508 <col:27, col:51> 'wchar_t *'
          (ImplicitCastExpr 0xa06b4f8 <col:27> 'wchar_t *(*)(const wchar_t *, wchar_t) throw()' <FunctionToPointerDecay>
            (DeclRefExpr 0xa06b4dc <col:27> 'wchar_t *(const wchar_t *, wchar_t) throw()' lvalue Function 0x9b5a1d0 'wcschr' 'wchar_t *(const wchar_t *, wchar_t) throw()'))
          (ImplicitCastExpr 0xa06b530 <col:34> 'const wchar_t *' <ArrayToPointerDecay>
            (StringLiteral 0xa06b3f0 <col:34> 'const wchar_t [6]' lvalue L"Y\000\000\000T\000\000\000y\000\000\000t\000\000\0001\000\000\000"))
          (ImplicitCastExpr 0xa06b540 <col:44, col:50> 'wchar_t':'wchar_t' <LValueToRValue>
            (CXXMemberCallExpr 0xa06b4b0 <col:44, col:50> 'const wchar_t':'const wchar_t' lvalue
              (MemberExpr 0xa06b490 <col:44, col:46> '<bound member function type>' .at 0x9dc9190
                (DeclRefExpr 0xa06b420 <col:44> 'const wcstring':'const class std::basic_string<wchar_t>' lvalue ParmVar 0xa06b000 'x' 'const wcstring &'))
              (ImplicitCastExpr 0xa06b4d0 <col:49> 'size_type':'unsigned int' <IntegralCast>
                (IntegerLiteral 0xa06b478 <col:49> 'int' 0)))))))))

template <typename T> T from_string(const wcstring &x) (CompoundStmt 0xa0692c0 <../codeBase/fish-shell-master/common.h:353:1, line:358:1>
  (DeclStmt 0xa068af8 <line:354:5, col:13>
    0xa068ac0 "T result")
  (DeclStmt 0xa069240 <line:355:5, col:33>
    0xa068b60 "std::wstringstream stream =
      (CXXConstructExpr 0xa069218 <col:24, col:32> 'std::wstringstream':'class std::basic_stringstream<wchar_t>''void (const __string_type &, class ios_base::openmode)'
        (DeclRefExpr 0xa068b94 <col:31> 'const wcstring':'const class std::basic_string<wchar_t>' lvalue ParmVar 0xa068980 'x' 'const wcstring &')
        (CXXDefaultArgExpr 0xa069200 <<invalid sloc>> 'enum std::_Ios_Openmode'))")
  (BinaryOperator 0xa069280 <line:356:5, col:15> '<dependent type>' '>>'
    (DeclRefExpr 0xa069250 <col:5> 'std::wstringstream':'class std::basic_stringstream<wchar_t>' lvalue Var 0xa068b60 'stream' 'std::wstringstream':'class std::basic_stringstream<wchar_t>')
    (DeclRefExpr 0xa069268 <col:15> 'T' lvalue Var 0xa068ac0 'result' 'T'))
  (ReturnStmt 0xa0692b0 <line:357:5, col:12>
    (DeclRefExpr 0xa069298 <col:12> 'T' lvalue Var 0xa068ac0 'result' 'T')))

;
template <typename T = bool> inline bool from_string(const std::string &x) (CompoundStmt 0xa06afc8 <../codeBase/fish-shell-master/common.h:388:1, line:390:1>
  (ReturnStmt 0xa06afb8 <line:389:5, col:50>
    (BinaryOperator 0xa06afa0 <col:12, col:50> '_Bool' '&&'
      (UnaryOperator 0xa06ada0 <col:12, col:22> '_Bool' prefix '!'
        (CXXMemberCallExpr 0xa06ad80 <col:14, col:22> '_Bool'
          (MemberExpr 0xa06ad60 <col:14, col:16> '<bound member function type>' .empty 0x9da3370
            (DeclRefExpr 0xa06ad48 <col:14> 'const std::string':'const class std::basic_string<char>' lvalue ParmVar 0xa06aa60 'x' 'const std::string &'))))
      (ImplicitCastExpr 0xa06af90 <col:27, col:50> '_Bool' <PointerToBoolean>
        (CallExpr 0xa06af38 <col:27, col:50> 'char *'
          (ImplicitCastExpr 0xa06af28 <col:27> 'char *(*)(const char *, int) throw()' <FunctionToPointerDecay>
            (DeclRefExpr 0xa06aecc <col:27> 'char *(const char *, int) throw()' lvalue Function 0xa0361d0 'strchr' 'char *(const char *, int) throw()'))
          (ImplicitCastExpr 0xa06af60 <col:34> 'const char *' <ArrayToPointerDecay>
            (StringLiteral 0xa06adec <col:34> 'const char [6]' lvalue "YTyt1"))
          (ImplicitCastExpr 0xa06af80 <col:43, col:49> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa06af70 <col:43, col:49> 'char':'char' <LValueToRValue>
              (CXXMemberCallExpr 0xa06aea0 <col:43, col:49> 'const char':'const char' lvalue
                (MemberExpr 0xa06ae80 <col:43, col:45> '<bound member function type>' .at 0x9da3d00
                  (DeclRefExpr 0xa06ae10 <col:43> 'const std::string':'const class std::basic_string<char>' lvalue ParmVar 0xa06aa60 'x' 'const std::string &'))
                (ImplicitCastExpr 0xa06aec0 <col:48> 'size_type':'unsigned int' <IntegralCast>
                  (IntegerLiteral 0xa06ae68 <col:48> 'int' 0))))))))))

template <typename T> T from_string(const std::string &x) (CompoundStmt 0xa069cb0 <../codeBase/fish-shell-master/common.h:362:1, line:367:1>
  (DeclStmt 0xa069508 <line:363:5, col:19>
    0xa0694b0 "T result =
      (CXXUnresolvedConstructExpr 0xa0694f0 <col:16, col:18> 'T')")
  (DeclStmt 0xa069c30 <line:364:5, col:32>
    0xa069570 "std::stringstream stream =
      (CXXConstructExpr 0xa069c08 <col:23, col:31> 'std::stringstream':'class std::basic_stringstream<char>''void (const __string_type &, class ios_base::openmode)'
        (DeclRefExpr 0xa0695a4 <col:30> 'const std::string':'const class std::basic_string<char>' lvalue ParmVar 0xa069370 'x' 'const std::string &')
        (CXXDefaultArgExpr 0xa069bf0 <<invalid sloc>> 'enum std::_Ios_Openmode'))")
  (BinaryOperator 0xa069c70 <line:365:5, col:15> '<dependent type>' '>>'
    (DeclRefExpr 0xa069c40 <col:5> 'std::stringstream':'class std::basic_stringstream<char>' lvalue Var 0xa069570 'stream' 'std::stringstream':'class std::basic_stringstream<char>')
    (DeclRefExpr 0xa069c58 <col:15> 'T' lvalue Var 0xa0694b0 'result' 'T'))
  (ReturnStmt 0xa069ca0 <line:366:5, col:12>
    (DeclRefExpr 0xa069c88 <col:12> 'T' lvalue Var 0xa0694b0 'result' 'T')))

;
template <typename T = int> inline wcstring to_string(const int &x) (CompoundStmt 0xa06bac0 <../codeBase/fish-shell-master/common.h:400:1, line:402:1>
  (ReturnStmt 0xa06bab0 <line:401:5, col:42>
    (ExprWithCleanups 0xa06ba90 <col:12, col:42> 'wcstring':'class std::basic_string<wchar_t>'
      (CXXTemporary 0xa06ba30)
      (CXXConstructExpr 0xa06ba68 <col:12, col:42> 'wcstring':'class std::basic_string<wchar_t>''void (const class std::basic_string<wchar_t> &)' elidable
        (MaterializeTemporaryExpr 0xa06ba58 <col:12, col:42> 'const class std::basic_string<wchar_t>' lvalue
          (ImplicitCastExpr 0xa06ba48 <col:12, col:42> 'const class std::basic_string<wchar_t>' <NoOp>
            (CXXBindTemporaryExpr 0xa06ba38 <col:12, col:42> 'wcstring':'class std::basic_string<wchar_t>' (CXXTemporary 0xa06ba30)
              (CallExpr 0xa06b9f8 <col:12, col:42> 'wcstring':'class std::basic_string<wchar_t>'
                (ImplicitCastExpr 0xa06b9e8 <col:12> 'wcstring (*)(const long &)' <FunctionToPointerDecay>
                  (DeclRefExpr 0xa06b990 <col:12> 'wcstring (const long &)' lvalue Function 0xa06a260 'to_string' 'wcstring (const long &)' (FunctionTemplate 0xa069e60 'to_string')))
                (MaterializeTemporaryExpr 0xa06ba18 <col:22, col:41> 'const long' lvalue
                  (CXXStaticCastExpr 0xa06b948 <col:22, col:41> 'long' static_cast<long> <NoOp>
                    (ImplicitCastExpr 0xa06b938 <col:40> 'long' <IntegralCast>
                      (ImplicitCastExpr 0xa06b928 <col:40> 'int' <LValueToRValue>
                        (DeclRefExpr 0xa06b8fc <col:40> 'const int' lvalue ParmVar 0xa06b5c0 'x' 'const int &')))))))))))))

template <typename T = long> inline wcstring to_string(const long &x) (CompoundStmt 0xa06a9f8 <../codeBase/fish-shell-master/common.h:380:1, line:384:1>
  (DeclStmt 0xa06a558 <line:381:5, col:22>
    0xa06a520 "wchar_t buff[128]")
  (CallExpr 0xa06a618 <line:382:5, col:29> 'void'
    (ImplicitCastExpr 0xa06a608 <col:5> 'void (*)(wchar_t *, long)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa06a5d0 <col:5> 'void (wchar_t *, long)' lvalue Function 0xa0688a0 'format_long_safe' 'void (wchar_t *, long)'))
    (ImplicitCastExpr 0xa06a640 <col:22> 'wchar_t *' <ArrayToPointerDecay>
      (DeclRefExpr 0xa06a5a0 <col:22> 'wchar_t [128]' lvalue Var 0xa06a520 'buff' 'wchar_t [128]'))
    (ImplicitCastExpr 0xa06a650 <col:28> 'long' <LValueToRValue>
      (DeclRefExpr 0xa06a5b8 <col:28> 'const long' lvalue ParmVar 0xa06a1c0 'x' 'const long &')))
  (ReturnStmt 0xa06a9e8 <line:383:5, col:25>
    (ExprWithCleanups 0xa06a9c8 <col:12, col:25> 'wcstring':'class std::basic_string<wchar_t>'
      (CXXTemporary 0xa06a6d0)
      (CXXTemporary 0xa06a950)
      (CXXConstructExpr 0xa06a9a0 <col:12, col:25> 'wcstring':'class std::basic_string<wchar_t>''void (const class std::basic_string<wchar_t> &)' elidable
        (MaterializeTemporaryExpr 0xa06a990 <col:12, col:25> 'const class std::basic_string<wchar_t>' lvalue
          (ImplicitCastExpr 0xa06a980 <col:12, col:25> 'const class std::basic_string<wchar_t>' <NoOp>
            (CXXFunctionalCastExpr 0xa06a968 <col:12, col:25> 'wcstring':'class std::basic_string<wchar_t>' functional cast to wcstring <ConstructorConversion>
              (CXXBindTemporaryExpr 0xa06a958 <col:12, col:21> 'wcstring':'class std::basic_string<wchar_t>' (CXXTemporary 0xa06a950)
                (CXXConstructExpr 0xa06a928 <col:12, col:21> 'wcstring':'class std::basic_string<wchar_t>''void (const wchar_t *, const class std::allocator<wchar_t> &)'
                  (ImplicitCastExpr 0xa06a690 <col:21> 'const wchar_t *' <NoOp>
                    (ImplicitCastExpr 0xa06a680 <col:21> 'wchar_t *' <ArrayToPointerDecay>
                      (DeclRefExpr 0xa06a668 <col:21> 'wchar_t [128]' lvalue Var 0xa06a520 'buff' 'wchar_t [128]')))
                  (CXXDefaultArgExpr 0xa06a910 <<invalid sloc>> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue))))))))))

template <typename T> wcstring to_string(const T &x) (CompoundStmt 0xa06a160 <../codeBase/fish-shell-master/common.h:371:1, line:375:1>
  (DeclStmt 0xa069fa8 <line:372:5, col:30>
    0xa069ec0 "std::wstringstream stream =
      (CXXConstructExpr 0xa069f80 <col:24> 'std::wstringstream':'class std::basic_stringstream<wchar_t>''void (class ios_base::openmode)'
        (CXXDefaultArgExpr 0xa069f68 <<invalid sloc>> 'enum std::_Ios_Openmode'))")
  (BinaryOperator 0xa069fe8 <line:373:5, col:15> '<dependent type>' '<<'
    (DeclRefExpr 0xa069fb8 <col:5> 'std::wstringstream':'class std::basic_stringstream<wchar_t>' lvalue Var 0xa069ec0 'stream' 'std::wstringstream':'class std::basic_stringstream<wchar_t>')
    (DeclRefExpr 0xa069fd0 <col:15> 'const T' lvalue ParmVar 0xa069d60 'x' 'const T &'))
  (ReturnStmt 0xa06a150 <line:374:5, col:23>
    (ExprWithCleanups 0xa06a130 <col:12, col:23> 'wcstring':'class std::basic_string<wchar_t>'
      (CXXTemporary 0xa06a0d0)
      (CXXConstructExpr 0xa06a108 <col:12, col:23> 'wcstring':'class std::basic_string<wchar_t>''void (const class std::basic_string<wchar_t> &)' elidable
        (MaterializeTemporaryExpr 0xa06a0f8 <col:12, col:23> 'const class std::basic_string<wchar_t>' lvalue
          (ImplicitCastExpr 0xa06a0e8 <col:12, col:23> 'const class std::basic_string<wchar_t>' <NoOp>
            (CXXBindTemporaryExpr 0xa06a0d8 <col:12, col:23> '__string_type':'class std::basic_string<wchar_t>' (CXXTemporary 0xa06a0d0)
              (CXXMemberCallExpr 0xa06a078 <col:12, col:23> '__string_type':'class std::basic_string<wchar_t>'
                (MemberExpr 0xa06a058 <col:12, col:19> '<bound member function type>' .str 0x9fbba30
                  (ImplicitCastExpr 0xa06a0b8 <col:12> 'const class std::basic_stringstream<wchar_t>' lvalue <NoOp>
                    (DeclRefExpr 0xa06a000 <col:12> 'std::wstringstream':'class std::basic_stringstream<wchar_t>' lvalue Var 0xa069ec0 'stream' 'std::wstringstream':'class std::basic_stringstream<wchar_t>')))))))))))

;
inline wcstring to_string(const long &x) (CompoundStmt 0xa06a9f8 <../codeBase/fish-shell-master/common.h:380:1, line:384:1>
  (DeclStmt 0xa06a558 <line:381:5, col:22>
    0xa06a520 "wchar_t buff[128]")
  (CallExpr 0xa06a618 <line:382:5, col:29> 'void'
    (ImplicitCastExpr 0xa06a608 <col:5> 'void (*)(wchar_t *, long)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa06a5d0 <col:5> 'void (wchar_t *, long)' lvalue Function 0xa0688a0 'format_long_safe' 'void (wchar_t *, long)'))
    (ImplicitCastExpr 0xa06a640 <col:22> 'wchar_t *' <ArrayToPointerDecay>
      (DeclRefExpr 0xa06a5a0 <col:22> 'wchar_t [128]' lvalue Var 0xa06a520 'buff' 'wchar_t [128]'))
    (ImplicitCastExpr 0xa06a650 <col:28> 'long' <LValueToRValue>
      (DeclRefExpr 0xa06a5b8 <col:28> 'const long' lvalue ParmVar 0xa06a1c0 'x' 'const long &')))
  (ReturnStmt 0xa06a9e8 <line:383:5, col:25>
    (ExprWithCleanups 0xa06a9c8 <col:12, col:25> 'wcstring':'class std::basic_string<wchar_t>'
      (CXXTemporary 0xa06a6d0)
      (CXXTemporary 0xa06a950)
      (CXXConstructExpr 0xa06a9a0 <col:12, col:25> 'wcstring':'class std::basic_string<wchar_t>''void (const class std::basic_string<wchar_t> &)' elidable
        (MaterializeTemporaryExpr 0xa06a990 <col:12, col:25> 'const class std::basic_string<wchar_t>' lvalue
          (ImplicitCastExpr 0xa06a980 <col:12, col:25> 'const class std::basic_string<wchar_t>' <NoOp>
            (CXXFunctionalCastExpr 0xa06a968 <col:12, col:25> 'wcstring':'class std::basic_string<wchar_t>' functional cast to wcstring <ConstructorConversion>
              (CXXBindTemporaryExpr 0xa06a958 <col:12, col:21> 'wcstring':'class std::basic_string<wchar_t>' (CXXTemporary 0xa06a950)
                (CXXConstructExpr 0xa06a928 <col:12, col:21> 'wcstring':'class std::basic_string<wchar_t>''void (const wchar_t *, const class std::allocator<wchar_t> &)'
                  (ImplicitCastExpr 0xa06a690 <col:21> 'const wchar_t *' <NoOp>
                    (ImplicitCastExpr 0xa06a680 <col:21> 'wchar_t *' <ArrayToPointerDecay>
                      (DeclRefExpr 0xa06a668 <col:21> 'wchar_t [128]' lvalue Var 0xa06a520 'buff' 'wchar_t [128]')))
                  (CXXDefaultArgExpr 0xa06a910 <<invalid sloc>> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue))))))))))


inline bool from_string(const std::string &x) (CompoundStmt 0xa06afc8 <../codeBase/fish-shell-master/common.h:388:1, line:390:1>
  (ReturnStmt 0xa06afb8 <line:389:5, col:50>
    (BinaryOperator 0xa06afa0 <col:12, col:50> '_Bool' '&&'
      (UnaryOperator 0xa06ada0 <col:12, col:22> '_Bool' prefix '!'
        (CXXMemberCallExpr 0xa06ad80 <col:14, col:22> '_Bool'
          (MemberExpr 0xa06ad60 <col:14, col:16> '<bound member function type>' .empty 0x9da3370
            (DeclRefExpr 0xa06ad48 <col:14> 'const std::string':'const class std::basic_string<char>' lvalue ParmVar 0xa06aa60 'x' 'const std::string &'))))
      (ImplicitCastExpr 0xa06af90 <col:27, col:50> '_Bool' <PointerToBoolean>
        (CallExpr 0xa06af38 <col:27, col:50> 'char *'
          (ImplicitCastExpr 0xa06af28 <col:27> 'char *(*)(const char *, int) throw()' <FunctionToPointerDecay>
            (DeclRefExpr 0xa06aecc <col:27> 'char *(const char *, int) throw()' lvalue Function 0xa0361d0 'strchr' 'char *(const char *, int) throw()'))
          (ImplicitCastExpr 0xa06af60 <col:34> 'const char *' <ArrayToPointerDecay>
            (StringLiteral 0xa06adec <col:34> 'const char [6]' lvalue "YTyt1"))
          (ImplicitCastExpr 0xa06af80 <col:43, col:49> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa06af70 <col:43, col:49> 'char':'char' <LValueToRValue>
              (CXXMemberCallExpr 0xa06aea0 <col:43, col:49> 'const char':'const char' lvalue
                (MemberExpr 0xa06ae80 <col:43, col:45> '<bound member function type>' .at 0x9da3d00
                  (DeclRefExpr 0xa06ae10 <col:43> 'const std::string':'const class std::basic_string<char>' lvalue ParmVar 0xa06aa60 'x' 'const std::string &'))
                (ImplicitCastExpr 0xa06aec0 <col:48> 'size_type':'unsigned int' <IntegralCast>
                  (IntegerLiteral 0xa06ae68 <col:48> 'int' 0))))))))))


inline bool from_string(const wcstring &x) (CompoundStmt 0xa06b588 <../codeBase/fish-shell-master/common.h:394:1, line:396:1>
  (ReturnStmt 0xa06b578 <line:395:5, col:51>
    (BinaryOperator 0xa06b560 <col:12, col:51> '_Bool' '&&'
      (UnaryOperator 0xa06b358 <col:12, col:22> '_Bool' prefix '!'
        (CXXMemberCallExpr 0xa06b320 <col:14, col:22> '_Bool'
          (MemberExpr 0xa06b300 <col:14, col:16> '<bound member function type>' .empty 0x9dc8800
            (DeclRefExpr 0xa06b2e8 <col:14> 'const wcstring':'const class std::basic_string<wchar_t>' lvalue ParmVar 0xa06b000 'x' 'const wcstring &'))))
      (ImplicitCastExpr 0xa06b550 <col:27, col:51> '_Bool' <PointerToBoolean>
        (CallExpr 0xa06b508 <col:27, col:51> 'wchar_t *'
          (ImplicitCastExpr 0xa06b4f8 <col:27> 'wchar_t *(*)(const wchar_t *, wchar_t) throw()' <FunctionToPointerDecay>
            (DeclRefExpr 0xa06b4dc <col:27> 'wchar_t *(const wchar_t *, wchar_t) throw()' lvalue Function 0x9b5a1d0 'wcschr' 'wchar_t *(const wchar_t *, wchar_t) throw()'))
          (ImplicitCastExpr 0xa06b530 <col:34> 'const wchar_t *' <ArrayToPointerDecay>
            (StringLiteral 0xa06b3f0 <col:34> 'const wchar_t [6]' lvalue L"Y\000\000\000T\000\000\000y\000\000\000t\000\000\0001\000\000\000"))
          (ImplicitCastExpr 0xa06b540 <col:44, col:50> 'wchar_t':'wchar_t' <LValueToRValue>
            (CXXMemberCallExpr 0xa06b4b0 <col:44, col:50> 'const wchar_t':'const wchar_t' lvalue
              (MemberExpr 0xa06b490 <col:44, col:46> '<bound member function type>' .at 0x9dc9190
                (DeclRefExpr 0xa06b420 <col:44> 'const wcstring':'const class std::basic_string<wchar_t>' lvalue ParmVar 0xa06b000 'x' 'const wcstring &'))
              (ImplicitCastExpr 0xa06b4d0 <col:49> 'size_type':'unsigned int' <IntegralCast>
                (IntegerLiteral 0xa06b478 <col:49> 'int' 0)))))))))


inline wcstring to_string(const int &x) (CompoundStmt 0xa06bac0 <../codeBase/fish-shell-master/common.h:400:1, line:402:1>
  (ReturnStmt 0xa06bab0 <line:401:5, col:42>
    (ExprWithCleanups 0xa06ba90 <col:12, col:42> 'wcstring':'class std::basic_string<wchar_t>'
      (CXXTemporary 0xa06ba30)
      (CXXConstructExpr 0xa06ba68 <col:12, col:42> 'wcstring':'class std::basic_string<wchar_t>''void (const class std::basic_string<wchar_t> &)' elidable
        (MaterializeTemporaryExpr 0xa06ba58 <col:12, col:42> 'const class std::basic_string<wchar_t>' lvalue
          (ImplicitCastExpr 0xa06ba48 <col:12, col:42> 'const class std::basic_string<wchar_t>' <NoOp>
            (CXXBindTemporaryExpr 0xa06ba38 <col:12, col:42> 'wcstring':'class std::basic_string<wchar_t>' (CXXTemporary 0xa06ba30)
              (CallExpr 0xa06b9f8 <col:12, col:42> 'wcstring':'class std::basic_string<wchar_t>'
                (ImplicitCastExpr 0xa06b9e8 <col:12> 'wcstring (*)(const long &)' <FunctionToPointerDecay>
                  (DeclRefExpr 0xa06b990 <col:12> 'wcstring (const long &)' lvalue Function 0xa06a260 'to_string' 'wcstring (const long &)' (FunctionTemplate 0xa069e60 'to_string')))
                (MaterializeTemporaryExpr 0xa06ba18 <col:22, col:41> 'const long' lvalue
                  (CXXStaticCastExpr 0xa06b948 <col:22, col:41> 'long' static_cast<long> <NoOp>
                    (ImplicitCastExpr 0xa06b938 <col:40> 'long' <IntegralCast>
                      (ImplicitCastExpr 0xa06b928 <col:40> 'int' <LValueToRValue>
                        (DeclRefExpr 0xa06b8fc <col:40> 'const int' lvalue ParmVar 0xa06b5c0 'x' 'const int &')))))))))))))


wchar_t **make_null_terminated_array(const wcstring_list_t &lst);
char **make_null_terminated_array(const std::vector<std::string> &lst);
template <typename CharType_t = char> class null_terminated_array_t
template <typename CharType_t = wchar_t> class null_terminated_array_t
template <typename CharType_t> class null_terminated_array_t {
    class null_terminated_array_t;
    CharType_t **array;
    void operator=(null_terminated_array_t<CharType_t> rhs);
    null_terminated_array_t<CharType_t>(const null_terminated_array_t<CharType_t> &);
    typedef std::vector<std::basic_string<CharType_t> > string_list_t;
    size_t size() const (CompoundStmt 0xa06d2f8 <../codeBase/fish-shell-master/common.h:420:5, line:430:5>
  (DeclStmt 0xa06d100 <line:421:9, col:23>
    0xa06d0a0 "size_t len =
      (ImplicitCastExpr 0xa06d0f0 <col:22> 'size_t':'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa06d0d8 <col:22> 'int' 0))")
  (IfStmt 0xa06d2a0 <line:422:9, line:428:9>
    <<<NULL>>>
    (BinaryOperator 0xa06d188 <line:422:13, /usr/include/clang/3.0/include/stddef.h:47:14> '<dependent type>' '!='
      (MemberExpr 0xa06d154 <../codeBase/fish-shell-master/common.h:422:13> 'CharType_t **const' lvalue ->array 0xa06c2f0
        (CXXThisExpr 0xa06d128 <col:13> 'const null_terminated_array_t<CharType_t> *' this))
      (GNUNullExpr 0xa06d178 </usr/include/clang/3.0/include/stddef.h:47:14> 'int'))
    (CompoundStmt 0xa06d288 <../codeBase/fish-shell-master/common.h:423:9, line:428:9>
      (WhileStmt 0xa06d270 <line:424:13, line:427:13>
        <<<NULL>>>
        (BinaryOperator 0xa06d210 <line:424:20, /usr/include/clang/3.0/include/stddef.h:47:14> '<dependent type>' '!='
          (ArraySubscriptExpr 0xa06d1e8 <../codeBase/fish-shell-master/common.h:424:20, col:29> '<dependent type>' lvalue
            (MemberExpr 0xa06d1b0 <col:20> 'CharType_t **const' lvalue ->array 0xa06c2f0
              (CXXThisExpr 0xa06d1a0 <col:20> 'const null_terminated_array_t<CharType_t> *' this))
            (DeclRefExpr 0xa06d1d0 <col:26> 'size_t':'unsigned int' lvalue Var 0xa06d0a0 'len' 'size_t':'unsigned int'))
          (GNUNullExpr 0xa06d200 </usr/include/clang/3.0/include/stddef.h:47:14> 'int'))
        (CompoundStmt 0xa06d258 <../codeBase/fish-shell-master/common.h:425:13, line:427:13>
          (UnaryOperator 0xa06d240 <line:426:17, col:20> 'size_t':'unsigned int' postfix '++'
            (DeclRefExpr 0xa06d228 <col:17> 'size_t':'unsigned int' lvalue Var 0xa06d0a0 'len' 'size_t':'unsigned int')))))
    <<<NULL>>>)
  (ReturnStmt 0xa06d2e8 <line:429:9, col:16>
    (ImplicitCastExpr 0xa06d2d8 <col:16> 'size_t':'unsigned int' <LValueToRValue>
      (DeclRefExpr 0xa06d2bc <col:16> 'size_t':'unsigned int' lvalue Var 0xa06d0a0 'len' 'size_t':'unsigned int'))))


    void free() (CompoundStmt 0xa06d450 <../codeBase/fish-shell-master/common.h:433:5, line:436:5>
  (CallExpr 0xa06d3d8 <line:434:9, col:29> 'void'
    (ImplicitCastExpr 0xa06d3c8 <col:9, col:11> 'void (*)(void *) throw()' <FunctionToPointerDecay>
      (DeclRefExpr 0xa06d32c <col:9, col:11> 'void (void *) throw()' lvalue Function 0x9b2aae0 'free' 'void (void *) throw()'))
    (CStyleCastExpr 0xa06d390 <col:16, col:24> 'void *' <Dependent>
      (MemberExpr 0xa06d360 <col:24> 'CharType_t **' lvalue ->array 0xa06c2f0
        (CXXThisExpr 0xa06d350 <col:24> 'null_terminated_array_t<CharType_t> *' this))))
  (BinaryOperator 0xa06d438 <line:435:9, /usr/include/clang/3.0/include/stddef.h:47:14> '<dependent type>' '='
    (MemberExpr 0xa06d408 <../codeBase/fish-shell-master/common.h:435:9> 'CharType_t **' lvalue ->array 0xa06c2f0
      (CXXThisExpr 0xa06d3f8 <col:9> 'null_terminated_array_t<CharType_t> *' this))
    (GNUNullExpr 0xa06d428 </usr/include/clang/3.0/include/stddef.h:47:14> 'int')))


public:
public:
    null_terminated_array_t<CharType_t>() : array((GNUNullExpr 0xa06d468 </usr/include/clang/3.0/include/stddef.h:47:14> 'int')
) (CompoundStmt 0xa06d4c0 <../codeBase/fish-shell-master/common.h:439:45, col:47>)


    null_terminated_array_t<CharType_t>(const string_list_t &argv) : array((CallExpr 0xa06d520 <../codeBase/fish-shell-master/common.h:440:64, col:95> '<dependent type>'
  (UnresolvedLookupExpr 0xa06d4d0 <col:64> '<overloaded function type>' lvalue (ADL) = '1' 0xa06bfc0 0xa06bb90)
  (DeclRefExpr 0xa06d508 <col:91> 'const string_list_t':'const vector<std::basic_string<CharType_t> >' lvalue ParmVar 0xa06cc70 'argv' 'const string_list_t &'))
) (CompoundStmt 0xa06d580 <../codeBase/fish-shell-master/common.h:441:5, line:442:5>)


    void ~null_terminated_array_t<CharType_t>() (CompoundStmt 0xa06d5f8 <../codeBase/fish-shell-master/common.h:445:5, line:447:5>
  (CallExpr 0xa06d5d8 <line:446:9, col:20> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa06d5a0 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa06d590 <col:9> 'null_terminated_array_t<CharType_t> *' this))))


    void set(const string_list_t &argv) (CompoundStmt 0xa06d748 <../codeBase/fish-shell-master/common.h:450:5, line:453:5>
  (CallExpr 0xa06d658 <line:451:9, col:20> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa06d620 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa06d610 <col:9> 'null_terminated_array_t<CharType_t> *' this)))
  (BinaryOperator 0xa06d730 <line:452:9, col:54> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa06d688 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa06d678 <col:9> 'null_terminated_array_t<CharType_t> *' this))
    (CallExpr 0xa06d710 <col:23, col:54> '<dependent type>'
      (UnresolvedLookupExpr 0xa06d6c0 <col:23> '<overloaded function type>' lvalue (ADL) = '1' 0xa06bfc0 0xa06bb90)
      (DeclRefExpr 0xa06d6f8 <col:50> 'const string_list_t':'const vector<std::basic_string<CharType_t> >' lvalue ParmVar 0xa06ce30 'argv' 'const string_list_t &'))))


    const CharType_t *const *get() const (CompoundStmt 0xa06d7a0 <../codeBase/fish-shell-master/common.h:456:5, line:458:5>
  (ReturnStmt 0xa06d790 <line:457:9, col:16>
    (MemberExpr 0xa06d770 <col:16> 'CharType_t **const' lvalue ->array 0xa06c2f0
      (CXXThisExpr 0xa06d760 <col:16> 'const null_terminated_array_t<CharType_t> *' this))))


    void clear() (CompoundStmt 0xa06d820 <../codeBase/fish-shell-master/common.h:461:5, line:463:5>
  (CallExpr 0xa06d800 <line:462:9, col:20> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa06d7c8 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa06d7b8 <col:9> 'null_terminated_array_t<CharType_t> *' this))))


};
void convert_wide_array_to_narrow(const null_terminated_array_t<wchar_t> &arr, null_terminated_array_t<char> *output);
class narrow_string_rep_t {
    class narrow_string_rep_t;
private:
private:
    const char *str;
    narrow_string_rep_t &operator=(const narrow_string_rep_t &);
    narrow_string_rep_t(const narrow_string_rep_t &x);
public:
public:
    void ~narrow_string_rep_t() (CompoundStmt 0xa06e408 <../codeBase/fish-shell-master/common.h:481:5, line:483:5>
  (CallExpr 0xa06e3e8 <line:482:9, col:25> 'void'
    (ImplicitCastExpr 0xa06e3d8 <col:9> 'void (*)(void *) throw()' <FunctionToPointerDecay>
      (DeclRefExpr 0xa06e3c0 <col:9> 'void (void *) throw()' lvalue Function 0x9b2aae0 'free' 'void (void *) throw()'))
    (CStyleCastExpr 0xa06e3a8 <col:14, col:22> 'void *' <NoOp>
      (ImplicitCastExpr 0xa06e398 <col:22> 'void *' <BitCast>
        (ImplicitCastExpr 0xa06e388 <col:22> 'const char *' <LValueToRValue>
          (MemberExpr 0xa06e358 <col:22> 'const char *' lvalue ->str 0xa06dda0
            (CXXThisExpr 0xa06e348 <col:22> 'class narrow_string_rep_t *' this)))))))


    narrow_string_rep_t() : str((ImplicitCastExpr 0xa06e430 </usr/include/clang/3.0/include/stddef.h:47:14> 'const char *' <NullToPointer>
  (GNUNullExpr 0xa06e420 <col:14> 'int'))
) (CompoundStmt 0xa06e460 <../codeBase/fish-shell-master/common.h:485:39, col:40>)


    void set(const wcstring &s) (CompoundStmt 0xa06e6b0 <../codeBase/fish-shell-master/common.h:488:5, line:491:5>
  (CallExpr 0xa06e548 <line:489:9, col:25> 'void'
    (ImplicitCastExpr 0xa06e538 <col:9> 'void (*)(void *) throw()' <FunctionToPointerDecay>
      (DeclRefExpr 0xa06e520 <col:9> 'void (void *) throw()' lvalue Function 0x9b2aae0 'free' 'void (void *) throw()'))
    (CStyleCastExpr 0xa06e508 <col:14, col:22> 'void *' <NoOp>
      (ImplicitCastExpr 0xa06e4f8 <col:22> 'void *' <BitCast>
        (ImplicitCastExpr 0xa06e4e8 <col:22> 'const char *' <LValueToRValue>
          (MemberExpr 0xa06e4b8 <col:22> 'const char *' lvalue ->str 0xa06dda0
            (CXXThisExpr 0xa06e4a8 <col:22> 'class narrow_string_rep_t *' this))))))
  (BinaryOperator 0xa06e698 <line:490:9, col:32> 'const char *' lvalue '='
    (MemberExpr 0xa06e578 <col:9> 'const char *' lvalue ->str 0xa06dda0
      (CXXThisExpr 0xa06e568 <col:9> 'class narrow_string_rep_t *' this))
    (ImplicitCastExpr 0xa06e688 <col:15, col:32> 'const char *' <NoOp>
      (CallExpr 0xa06e668 <col:15, col:32> 'char *'
        (ImplicitCastExpr 0xa06e658 <col:15> 'char *(*)(const wchar_t *)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa06e624 <col:15> 'char *(const wchar_t *)' lvalue Function 0xa03ca80 'wcs2str' 'char *(const wchar_t *)'))
        (CXXMemberCallExpr 0xa06e608 <col:23, col:31> 'const wchar_t *'
          (MemberExpr 0xa06e5e8 <col:23, col:25> '<bound member function type>' .c_str 0x9dd8510
            (DeclRefExpr 0xa06e5d0 <col:23> 'const wcstring':'const class std::basic_string<wchar_t>' lvalue ParmVar 0xa06e190 's' 'const wcstring &')))))))


    const char *get() const (CompoundStmt 0xa06e738 <../codeBase/fish-shell-master/common.h:494:5, line:496:5>
  (ReturnStmt 0xa06e728 <line:495:9, col:16>
    (ImplicitCastExpr 0xa06e718 <col:16> 'const char *' <LValueToRValue>
      (MemberExpr 0xa06e6f8 <col:16> 'const char *const' lvalue ->str 0xa06dda0
        (CXXThisExpr 0xa06e6e8 <col:16> 'const class narrow_string_rep_t *' this)))))


};
bool is_forked_child();
class scoped_lock {
    class scoped_lock;
    pthread_mutex_t *lock_obj;
    bool locked;
    scoped_lock &operator=(const scoped_lock &);
    scoped_lock(const scoped_lock &);
public:
public:
    void lock();
    void unlock();
    scoped_lock(pthread_mutex_t &mutex);
    void ~scoped_lock();
};
template <typename T> class scoped_push {
    class scoped_push;
    T *const ref;
    T saved_value;
    bool restored;
public:
public:
    scoped_push<T>(T *r) : ref((DeclRefExpr 0xa06f67c <../codeBase/fish-shell-master/common.h:534:28> 'T *' lvalue ParmVar 0xa06f300 'r' 'T *')
), saved_value((UnaryOperator 0xa06f6f0 <../codeBase/fish-shell-master/common.h:534:44, col:45> '<dependent type>' prefix '*'
  (DeclRefExpr 0xa06f6d8 <col:45> 'T *' lvalue ParmVar 0xa06f300 'r' 'T *'))
), restored((CXXBoolLiteralExpr 0xa06f748 <../codeBase/fish-shell-master/common.h:534:58> '_Bool' false)
) (CompoundStmt 0xa06f7a8 <../codeBase/fish-shell-master/common.h:535:5, line:536:5>)


    scoped_push<T>(T *r, const T &new_value) : ref((DeclRefExpr 0xa06f7b8 <../codeBase/fish-shell-master/common.h:538:49> 'T *' lvalue ParmVar 0xa06f410 'r' 'T *')
), saved_value((UnaryOperator 0xa06f820 <../codeBase/fish-shell-master/common.h:538:65, col:66> '<dependent type>' prefix '*'
  (DeclRefExpr 0xa06f808 <col:66> 'T *' lvalue ParmVar 0xa06f410 'r' 'T *'))
), restored((CXXBoolLiteralExpr 0xa06f878 <../codeBase/fish-shell-master/common.h:538:79> '_Bool' false)
) (CompoundStmt 0xa06f938 <../codeBase/fish-shell-master/common.h:539:5, line:541:5>
  (BinaryOperator 0xa06f920 <line:540:9, col:14> '<dependent type>' '='
    (UnaryOperator 0xa06f8f0 <col:9, col:10> '<dependent type>' prefix '*'
      (DeclRefExpr 0xa06f8d4 <col:10> 'T *' lvalue ParmVar 0xa06f410 'r' 'T *'))
    (DeclRefExpr 0xa06f904 <col:14> 'const T' lvalue ParmVar 0xa06f480 'new_value' 'const T &')))


    void ~scoped_push<T>() (CompoundStmt 0xa06f9b8 <../codeBase/fish-shell-master/common.h:544:5, line:546:5>
  (CallExpr 0xa06f998 <line:545:9, col:17> '<dependent type>'
    (MemberExpr 0xa06f978 <col:9> '<bound member function type>' ->restore 0xa06f620
      (CXXThisExpr 0xa06f968 <col:9> 'scoped_push<T> *' this))))


    void restore() (CompoundStmt 0xa06fbb8 <../codeBase/fish-shell-master/common.h:549:5, line:555:5>
  (IfStmt 0xa06fb98 <line:550:9, line:554:9>
    <<<NULL>>>
    (UnaryOperator 0xa06fa10 <line:550:13, col:14> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa06fa00 <col:14> '_Bool' <LValueToRValue>
        (MemberExpr 0xa06f9e0 <col:14> '_Bool' lvalue ->restored 0xa06f280
          (CXXThisExpr 0xa06f9d0 <col:14> 'scoped_push<T> *' this))))
    (CompoundStmt 0xa06fb80 <line:551:9, line:554:9>
      (CallExpr 0xa06fb00 <line:552:13, col:40> '<dependent type>'
        (UnresolvedLookupExpr 0xa06fa48 <col:13, col:18> '<overloaded function type>' lvalue (no ADL) = '1' 0x9ba4660 0x9baa350 0x9d655a0 0x9feac40)
        (UnaryOperator 0xa06fab8 <col:23, col:24> '<dependent type>' prefix '*'
          (MemberExpr 0xa06fa98 <col:24> 'T *const' lvalue ->ref 0xa06f200
            (CXXThisExpr 0xa06fa88 <col:24> 'scoped_push<T> *' this)))
        (MemberExpr 0xa06fae0 <col:29> 'T' lvalue ->saved_value 0xa06f240
          (CXXThisExpr 0xa06fad0 <col:29> 'scoped_push<T> *' this)))
      (BinaryOperator 0xa06fb68 <line:553:13, col:24> '<dependent type>' '='
        (MemberExpr 0xa06fb38 <col:13> '_Bool' lvalue ->restored 0xa06f280
          (CXXThisExpr 0xa06fb28 <col:13> 'scoped_push<T> *' this))
        (CXXBoolLiteralExpr 0xa06fb58 <col:24> '_Bool' true)))
    <<<NULL>>>))


};
class wcstokenizer {
    class wcstokenizer;
    wchar_t *buffer;
    wchar_t *str;
    wchar_t *state;
    const wcstring sep;
    wcstokenizer &operator=(const wcstokenizer &);
    wcstokenizer(const wcstokenizer &);
public:
public:
    wcstokenizer(const wcstring &s, const wcstring &separator);
    bool next(wcstring &result);
    void ~wcstokenizer();
};
void append_path_component(wcstring &path, const wcstring &component);
wcstring format_string(const wchar_t *format, ...);
wcstring vformat_string(const wchar_t *format, va_list va_orig);
void append_format(wcstring &str, const wchar_t *format, ...);
void append_formatv(wcstring &str, const wchar_t *format, va_list ap);
char **wcsv2strv(const wchar_t *const *in);
wchar_t *wcsvarname(const wchar_t *str);
const wchar_t *wcsfuncname(const wchar_t *str);
int wcsvarchr(wchar_t chr);
int my_wcswidth(const wchar_t *c);
wchar_t *quote_end(const wchar_t *in);
void error_reset();
wcstring wsetlocale(int category, const wchar_t *locale);
bool contains_internal(const wchar_t *needle, ...);
bool contains_internal(const wcstring &needle, ...);
long read_blocked(int fd, void *buf, size_t count);
ssize_t write_loop(int fd, const char *buff, size_t count);
ssize_t read_loop(int fd, void *buff, size_t count);
void debug(int level, const char *msg, ...);
void debug(int level, const wchar_t *msg, ...);
wchar_t *escape(const wchar_t *in, escape_flags_t flags);
wcstring escape_string(const wcstring &in, escape_flags_t flags);
wchar_t *unescape(const wchar_t *in, int escape_special);
bool unescape_string(wcstring &str, int escape_special);
int common_get_width();
int common_get_height();
void common_handle_winch(int signal);
void write_screen(const wcstring &msg, wcstring &buff);
void tokenize_variable_array(const wcstring &val, wcstring_list_t &out);
int create_directory(const wcstring &d);
void bugreport();
double timef();
void set_main_thread();
bool is_main_thread();
void configure_thread_assertions_for_testing();
void setup_fork_guards();
void save_term_foreground_process_group();
void restore_term_foreground_process_group();
bool is_forked_child();
void assert_is_not_forked_child(const char *who);
extern "C" {
    void debug_thread_error();
}
class rgb_color_t {
    class rgb_color_t;
    enum  {
        type_none,
        type_named,
        type_rgb,
        type_normal,
        type_reset,
        type_ignore
    };
    unsigned char type : (IntegerLiteral 0xa073338 <../codeBase/fish-shell-master/color.h:26:24> 'int' 4)
;
    enum  {
        flag_bold = (ImplicitCastExpr 0xa0734f8 <../codeBase/fish-shell-master/color.h:31:21, col:26> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa073420 <col:21, col:26> 'int' '<<'
    (IntegerLiteral 0xa0733f0 <col:21> 'int' 1)
    (IntegerLiteral 0xa073408 <col:26> 'int' 0)))
,
        flag_underline = (ImplicitCastExpr 0xa073508 <../codeBase/fish-shell-master/color.h:32:26, col:31> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa0734a8 <col:26, col:31> 'int' '<<'
    (IntegerLiteral 0xa073478 <col:26> 'int' 1)
    (IntegerLiteral 0xa073490 <col:31> 'int' 1)))

    };
    unsigned char flags : (IntegerLiteral 0xa073518 <../codeBase/fish-shell-master/color.h:34:25> 'int' 4)
;
    union {
        unsigned char name_idx;
        unsigned char rgb[3];
        inline rgb_color_t::<anonymous union at ../codeBase/fish-shell-master/color.h:36:5> &operator=(const rgb_color_t::<anonymous union at ../codeBase/fish-shell-master/color.h:36:5> &) throw();
        inline (const rgb_color_t::<anonymous union at ../codeBase/fish-shell-master/color.h:36:5> &) throw() (CompoundStmt 0xa0cabc8 <../codeBase/fish-shell-master/color.h:36:5>)


        inline () throw() (CompoundStmt 0xa0d0070 <../codeBase/fish-shell-master/color.h:36:5>)


    };
    union <anonymous union at ../codeBase/fish-shell-master/color.h:36:5> data;
    bool try_parse_special(const wcstring &str);
    bool try_parse_rgb(const wcstring &str);
    bool try_parse_named(const wcstring &str);
    void parse(const wcstring &str);
    rgb_color_t(unsigned char t, unsigned char i = (ImplicitCastExpr 0xa074e58 <../codeBase/fish-shell-master/color.h:55:59> 'unsigned char' <IntegralCast>
  (IntegerLiteral 0xa074e40 <col:59> 'int' 0))
);
public:
public:
    rgb_color_t() : type((ImplicitCastExpr 0xa074e80 <../codeBase/fish-shell-master/color.h:60:35> 'unsigned char' <IntegralCast>
  (DeclRefExpr 0xa074e64 <col:35> 'enum rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:17:5>' EnumConstant 0xa0731c0 'type_none' 'enum rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:17:5>'))
), flags((ImplicitValueInitExpr 0xa074ea8 <<invalid sloc>> 'unsigned char')
), data((ImplicitValueInitExpr 0xa074ec8 <<invalid sloc>> 'union <anonymous union at ../codeBase/fish-shell-master/color.h:36:5>':'union rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:36:5>')
) (CompoundStmt 0xa074ef8 <../codeBase/fish-shell-master/color.h:60:63, col:64>)


    rgb_color_t(const wcstring &str);
    rgb_color_t(const std::string &str);
    static rgb_color_t white();
    static rgb_color_t black();
    static rgb_color_t reset();
    static rgb_color_t normal();
    static rgb_color_t ignore();
    static rgb_color_t none();
    bool is_ignore() const (CompoundStmt 0xa074fe8 <../codeBase/fish-shell-master/color.h:86:5, line:88:5>
  (ReturnStmt 0xa074fd8 <line:87:9, col:24>
    (BinaryOperator 0xa074fc0 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0xa074fa0 <col:16> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa074f90 <col:16> 'unsigned char' <LValueToRValue>
          (MemberExpr 0xa074f54 <col:16> 'const unsigned char' lvalue bitfield ->type 0xa073360
            (CXXThisExpr 0xa074f28 <col:16> 'const class rgb_color_t *' this))))
      (ImplicitCastExpr 0xa074fb0 <col:24> 'int' <IntegralCast>
        (DeclRefExpr 0xa074f74 <col:24> 'enum rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:17:5>' EnumConstant 0xa073300 'type_ignore' 'enum rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:17:5>')))))


    bool is_normal() const (CompoundStmt 0xa0750a0 <../codeBase/fish-shell-master/color.h:92:5, line:94:5>
  (ReturnStmt 0xa075090 <line:93:9, col:24>
    (BinaryOperator 0xa075078 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0xa075058 <col:16> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa075048 <col:16> 'unsigned char' <LValueToRValue>
          (MemberExpr 0xa075010 <col:16> 'const unsigned char' lvalue bitfield ->type 0xa073360
            (CXXThisExpr 0xa075000 <col:16> 'const class rgb_color_t *' this))))
      (ImplicitCastExpr 0xa075068 <col:24> 'int' <IntegralCast>
        (DeclRefExpr 0xa075030 <col:24> 'enum rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:17:5>' EnumConstant 0xa073280 'type_normal' 'enum rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:17:5>')))))


    bool is_reset() const (CompoundStmt 0xa075158 <../codeBase/fish-shell-master/color.h:98:5, line:100:5>
  (ReturnStmt 0xa075148 <line:99:9, col:24>
    (BinaryOperator 0xa075130 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0xa075110 <col:16> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa075100 <col:16> 'unsigned char' <LValueToRValue>
          (MemberExpr 0xa0750c8 <col:16> 'const unsigned char' lvalue bitfield ->type 0xa073360
            (CXXThisExpr 0xa0750b8 <col:16> 'const class rgb_color_t *' this))))
      (ImplicitCastExpr 0xa075120 <col:24> 'int' <IntegralCast>
        (DeclRefExpr 0xa0750e8 <col:24> 'enum rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:17:5>' EnumConstant 0xa0732c0 'type_reset' 'enum rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:17:5>')))))


    bool is_none() const (CompoundStmt 0xa075210 <../codeBase/fish-shell-master/color.h:104:5, line:106:5>
  (ReturnStmt 0xa075200 <line:105:9, col:24>
    (BinaryOperator 0xa0751e8 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0xa0751c8 <col:16> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa0751b8 <col:16> 'unsigned char' <LValueToRValue>
          (MemberExpr 0xa075180 <col:16> 'const unsigned char' lvalue bitfield ->type 0xa073360
            (CXXThisExpr 0xa075170 <col:16> 'const class rgb_color_t *' this))))
      (ImplicitCastExpr 0xa0751d8 <col:24> 'int' <IntegralCast>
        (DeclRefExpr 0xa0751a0 <col:24> 'enum rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:17:5>' EnumConstant 0xa0731c0 'type_none' 'enum rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:17:5>')))))


    bool is_named() const (CompoundStmt 0xa0752c8 <../codeBase/fish-shell-master/color.h:110:5, line:112:5>
  (ReturnStmt 0xa0752b8 <line:111:9, col:24>
    (BinaryOperator 0xa0752a0 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0xa075280 <col:16> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa075270 <col:16> 'unsigned char' <LValueToRValue>
          (MemberExpr 0xa075238 <col:16> 'const unsigned char' lvalue bitfield ->type 0xa073360
            (CXXThisExpr 0xa075228 <col:16> 'const class rgb_color_t *' this))))
      (ImplicitCastExpr 0xa075290 <col:24> 'int' <IntegralCast>
        (DeclRefExpr 0xa075258 <col:24> 'enum rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:17:5>' EnumConstant 0xa073200 'type_named' 'enum rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:17:5>')))))


    bool is_rgb() const (CompoundStmt 0xa075380 <../codeBase/fish-shell-master/color.h:116:5, line:118:5>
  (ReturnStmt 0xa075370 <line:117:9, col:24>
    (BinaryOperator 0xa075358 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0xa075338 <col:16> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa075328 <col:16> 'unsigned char' <LValueToRValue>
          (MemberExpr 0xa0752f0 <col:16> 'const unsigned char' lvalue bitfield ->type 0xa073360
            (CXXThisExpr 0xa0752e0 <col:16> 'const class rgb_color_t *' this))))
      (ImplicitCastExpr 0xa075348 <col:24> 'int' <IntegralCast>
        (DeclRefExpr 0xa075310 <col:24> 'enum rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:17:5>' EnumConstant 0xa073240 'type_rgb' 'enum rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:17:5>')))))


    bool is_special() const (CompoundStmt 0xa0754e0 <../codeBase/fish-shell-master/color.h:122:5, line:124:5>
  (ReturnStmt 0xa0754d0 <line:123:9, col:46>
    (BinaryOperator 0xa0754b8 <col:16, col:46> '_Bool' '&&'
      (BinaryOperator 0xa075410 <col:16, col:24> '_Bool' '!='
        (ImplicitCastExpr 0xa0753f0 <col:16> 'int' <IntegralCast>
          (ImplicitCastExpr 0xa0753e0 <col:16> 'unsigned char' <LValueToRValue>
            (MemberExpr 0xa0753a8 <col:16> 'const unsigned char' lvalue bitfield ->type 0xa073360
              (CXXThisExpr 0xa075398 <col:16> 'const class rgb_color_t *' this))))
        (ImplicitCastExpr 0xa075400 <col:24> 'int' <IntegralCast>
          (DeclRefExpr 0xa0753c8 <col:24> 'enum rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:17:5>' EnumConstant 0xa073200 'type_named' 'enum rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:17:5>')))
      (BinaryOperator 0xa0754a0 <col:38, col:46> '_Bool' '!='
        (ImplicitCastExpr 0xa075480 <col:38> 'int' <IntegralCast>
          (ImplicitCastExpr 0xa075470 <col:38> 'unsigned char' <LValueToRValue>
            (MemberExpr 0xa075438 <col:38> 'const unsigned char' lvalue bitfield ->type 0xa073360
              (CXXThisExpr 0xa075428 <col:38> 'const class rgb_color_t *' this))))
        (ImplicitCastExpr 0xa075490 <col:46> 'int' <IntegralCast>
          (DeclRefExpr 0xa075458 <col:46> 'enum rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:17:5>' EnumConstant 0xa073240 'type_rgb' 'enum rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:17:5>'))))))


    wcstring description() const;
    unsigned char to_name_index() const;
    unsigned char to_term256_index() const;
    bool is_bold() const (CompoundStmt 0xa0755f0 <../codeBase/fish-shell-master/color.h:137:5, line:139:5>
  (ReturnStmt 0xa0755e0 <line:138:9, col:36>
    (UnaryOperator 0xa0755c8 <col:16, col:36> '_Bool' prefix '!'
      (UnaryOperator 0xa0755b0 <col:17, col:36> '_Bool' prefix '!'
        (ImplicitCastExpr 0xa0755a0 <col:18, col:36> '_Bool' <IntegralToBoolean>
          (ParenExpr 0xa075588 <col:18, col:36> 'int'
            (BinaryOperator 0xa075570 <col:19, col:27> 'int' '&'
              (ImplicitCastExpr 0xa075550 <col:19> 'int' <IntegralCast>
                (ImplicitCastExpr 0xa075540 <col:19> 'unsigned char' <LValueToRValue>
                  (MemberExpr 0xa075508 <col:19> 'const unsigned char' lvalue bitfield ->flags 0xa073540
                    (CXXThisExpr 0xa0754f8 <col:19> 'const class rgb_color_t *' this))))
              (ImplicitCastExpr 0xa075560 <col:27> 'int' <IntegralCast>
                (DeclRefExpr 0xa075528 <col:27> 'enum rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:29:5>' EnumConstant 0xa073440 'flag_bold' 'enum rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:29:5>')))))))))


    void set_bold(bool x) (CompoundStmt 0xa075758 <../codeBase/fish-shell-master/color.h:143:5, line:146:5>
  (IfStmt 0xa075738 <line:144:9, line:145:24>
    <<<NULL>>>
    (ImplicitCastExpr 0xa075620 <line:144:13> '_Bool' <LValueToRValue>
      (DeclRefExpr 0xa075604 <col:13> '_Bool' lvalue ParmVar 0xa074960 'x' '_Bool'))
    (CompoundAssignOperator 0xa075688 <col:16, col:25> 'unsigned char' lvalue bitfield '|=' ComputeLHSTy='int' ComputeResultTy='int'
      (MemberExpr 0xa075640 <col:16> 'unsigned char' lvalue bitfield ->flags 0xa073540
        (CXXThisExpr 0xa075630 <col:16> 'class rgb_color_t *' this))
      (ImplicitCastExpr 0xa075678 <col:25> 'int' <IntegralCast>
        (DeclRefExpr 0xa075660 <col:25> 'enum rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:29:5>' EnumConstant 0xa073440 'flag_bold' 'enum rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:29:5>')))
    (CompoundAssignOperator 0xa075718 <line:145:14, col:24> 'unsigned char' lvalue bitfield '&=' ComputeLHSTy='int' ComputeResultTy='int'
      (MemberExpr 0xa0756b8 <col:14> 'unsigned char' lvalue bitfield ->flags 0xa073540
        (CXXThisExpr 0xa0756a8 <col:14> 'class rgb_color_t *' this))
      (UnaryOperator 0xa075700 <col:23, col:24> 'int' prefix '~'
        (ImplicitCastExpr 0xa0756f0 <col:24> 'int' <IntegralCast>
          (DeclRefExpr 0xa0756d8 <col:24> 'enum rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:29:5>' EnumConstant 0xa073440 'flag_bold' 'enum rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:29:5>'))))))


    bool is_underline() const (CompoundStmt 0xa075868 <../codeBase/fish-shell-master/color.h:150:5, line:152:5>
  (ReturnStmt 0xa075858 <line:151:9, col:41>
    (UnaryOperator 0xa075840 <col:16, col:41> '_Bool' prefix '!'
      (UnaryOperator 0xa075828 <col:17, col:41> '_Bool' prefix '!'
        (ImplicitCastExpr 0xa075818 <col:18, col:41> '_Bool' <IntegralToBoolean>
          (ParenExpr 0xa075800 <col:18, col:41> 'int'
            (BinaryOperator 0xa0757e8 <col:19, col:27> 'int' '&'
              (ImplicitCastExpr 0xa0757c8 <col:19> 'int' <IntegralCast>
                (ImplicitCastExpr 0xa0757b8 <col:19> 'unsigned char' <LValueToRValue>
                  (MemberExpr 0xa075780 <col:19> 'const unsigned char' lvalue bitfield ->flags 0xa073540
                    (CXXThisExpr 0xa075770 <col:19> 'const class rgb_color_t *' this))))
              (ImplicitCastExpr 0xa0757d8 <col:27> 'int' <IntegralCast>
                (DeclRefExpr 0xa0757a0 <col:27> 'enum rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:29:5>' EnumConstant 0xa0734c0 'flag_underline' 'enum rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:29:5>')))))))))


    void set_underline(bool x) (CompoundStmt 0xa0759d0 <../codeBase/fish-shell-master/color.h:156:5, line:159:5>
  (IfStmt 0xa0759b0 <line:157:9, line:158:24>
    <<<NULL>>>
    (ImplicitCastExpr 0xa075898 <line:157:13> '_Bool' <LValueToRValue>
      (DeclRefExpr 0xa07587c <col:13> '_Bool' lvalue ParmVar 0xa074aa0 'x' '_Bool'))
    (CompoundAssignOperator 0xa075900 <col:16, col:25> 'unsigned char' lvalue bitfield '|=' ComputeLHSTy='int' ComputeResultTy='int'
      (MemberExpr 0xa0758b8 <col:16> 'unsigned char' lvalue bitfield ->flags 0xa073540
        (CXXThisExpr 0xa0758a8 <col:16> 'class rgb_color_t *' this))
      (ImplicitCastExpr 0xa0758f0 <col:25> 'int' <IntegralCast>
        (DeclRefExpr 0xa0758d8 <col:25> 'enum rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:29:5>' EnumConstant 0xa0734c0 'flag_underline' 'enum rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:29:5>')))
    (CompoundAssignOperator 0xa075990 <line:158:14, col:24> 'unsigned char' lvalue bitfield '&=' ComputeLHSTy='int' ComputeResultTy='int'
      (MemberExpr 0xa075930 <col:14> 'unsigned char' lvalue bitfield ->flags 0xa073540
        (CXXThisExpr 0xa075920 <col:14> 'class rgb_color_t *' this))
      (UnaryOperator 0xa075978 <col:23, col:24> 'int' prefix '~'
        (ImplicitCastExpr 0xa075968 <col:24> 'int' <IntegralCast>
          (DeclRefExpr 0xa075950 <col:24> 'enum rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:29:5>' EnumConstant 0xa0734c0 'flag_underline' 'enum rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:29:5>'))))))


    bool operator==(const rgb_color_t &other) const (CompoundStmt 0xa075cd0 <../codeBase/fish-shell-master/color.h:163:5, line:165:5>
  (ReturnStmt 0xa075cc0 <line:164:9, col:78>
    (BinaryOperator 0xa075ca8 <col:16, col:78> '_Bool' '&&'
      (BinaryOperator 0xa075a90 <col:16, col:30> '_Bool' '=='
        (ImplicitCastExpr 0xa075a60 <col:16> 'int' <IntegralCast>
          (ImplicitCastExpr 0xa075a50 <col:16> 'unsigned char' <LValueToRValue>
            (MemberExpr 0xa0759f8 <col:16> 'const unsigned char' lvalue bitfield ->type 0xa073360
              (CXXThisExpr 0xa0759e8 <col:16> 'const class rgb_color_t *' this))))
        (ImplicitCastExpr 0xa075a80 <col:24, col:30> 'int' <IntegralCast>
          (ImplicitCastExpr 0xa075a70 <col:24, col:30> 'unsigned char' <LValueToRValue>
            (MemberExpr 0xa075a30 <col:24, col:30> 'const unsigned char' lvalue bitfield .type 0xa073360
              (DeclRefExpr 0xa075a18 <col:24> 'const class rgb_color_t' lvalue ParmVar 0xa074b90 'other' 'const class rgb_color_t &')))))
      (UnaryOperator 0xa075c90 <col:38, col:78> '_Bool' prefix '!'
        (ImplicitCastExpr 0xa075c80 <col:40, col:78> '_Bool' <IntegralToBoolean>
          (CallExpr 0xa075c38 <col:40, col:78> 'int'
            (ImplicitCastExpr 0xa075c28 <col:40> 'int (*)(const void *, const void *, size_t) throw()' <FunctionToPointerDecay>
              (DeclRefExpr 0xa075bf8 <col:40> 'int (const void *, const void *, size_t) throw()' lvalue Function 0xa034250 'memcmp' 'int (const void *, const void *, size_t) throw()'))
            (ImplicitCastExpr 0xa075c60 <col:47, col:48> 'const void *' <BitCast>
              (UnaryOperator 0xa075b48 <col:47, col:48> 'const union <anonymous union at ../codeBase/fish-shell-master/color.h:36:5> *' prefix '&'
                (MemberExpr 0xa075af0 <col:48> 'const union <anonymous union at ../codeBase/fish-shell-master/color.h:36:5>':'const union rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:36:5>' lvalue ->data 0xa073740
                  (CXXThisExpr 0xa075ae0 <col:48> 'const class rgb_color_t *' this))))
            (ImplicitCastExpr 0xa075c70 <col:54, col:61> 'const void *' <BitCast>
              (UnaryOperator 0xa075b98 <col:54, col:61> 'const union <anonymous union at ../codeBase/fish-shell-master/color.h:36:5> *' prefix '&'
                (MemberExpr 0xa075b74 <col:55, col:61> 'const union <anonymous union at ../codeBase/fish-shell-master/color.h:36:5>':'const union rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:36:5>' lvalue .data 0xa073740
                  (DeclRefExpr 0xa075b5c <col:55> 'const class rgb_color_t' lvalue ParmVar 0xa074b90 'other' 'const class rgb_color_t &'))))
            (UnaryExprOrTypeTraitExpr 0xa075be0 <col:67, col:74> 'unsigned int' sizeof 
              (MemberExpr 0xa075bc0 <col:74> 'const union <anonymous union at ../codeBase/fish-shell-master/color.h:36:5>':'const union rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:36:5>' lvalue ->data 0xa073740
                (CXXThisExpr 0xa075bb0 <col:74> 'const class rgb_color_t *' this)))))))))


    bool operator!=(const rgb_color_t &other) const (CompoundStmt 0xa075dd0 <../codeBase/fish-shell-master/color.h:169:5, line:171:5>
  (ReturnStmt 0xa075dc0 <line:170:9, col:32>
    (UnaryOperator 0xa075da8 <col:16, col:32> '_Bool' prefix '!'
      (ParenExpr 0xa075d90 <col:17, col:32> '_Bool'
        (CXXOperatorCallExpr 0xa075d68 <col:18, col:27> '_Bool'
          (ImplicitCastExpr 0xa075d58 <col:24, <invalid sloc>> '_Bool (*)(const class rgb_color_t &) const' <FunctionToPointerDecay>
            (DeclRefExpr 0xa075d28 <col:24, <invalid sloc>> '_Bool (const class rgb_color_t &) const' lvalue CXXMethod 0xa074c10 'operator==' '_Bool (const class rgb_color_t &) const'))
          (UnaryOperator 0xa075cf8 <col:18, col:19> 'const class rgb_color_t' lvalue prefix '*'
            (CXXThisExpr 0xa075ce8 <col:19> 'const class rgb_color_t *' this))
          (DeclRefExpr 0xa075d0c <col:27> 'const class rgb_color_t' lvalue ParmVar 0xa074c90 'other' 'const class rgb_color_t &'))))))


    static wcstring_list_t named_color_names();
    inline rgb_color_t &operator=(const rgb_color_t &) throw();
    inline rgb_color_t(const rgb_color_t &) throw() : type((ImplicitCastExpr 0xa0caa88 <../codeBase/fish-shell-master/color.h:13:7> 'unsigned char' <LValueToRValue>
  (MemberExpr 0xa0caa5c <col:7> 'const unsigned char' lvalue bitfield .type 0xa073360
    (DeclRefExpr 0xa0caa44 <col:7> 'const class rgb_color_t' lvalue ParmVar 0xa0ca6d0 '' 'const class rgb_color_t &')))
), flags((ImplicitCastExpr 0xa0caaf0 <../codeBase/fish-shell-master/color.h:13:7> 'unsigned char' <LValueToRValue>
  (MemberExpr 0xa0caac4 <col:7> 'const unsigned char' lvalue bitfield .flags 0xa073540
    (DeclRefExpr 0xa0caaac <col:7> 'const class rgb_color_t' lvalue ParmVar 0xa0ca6d0 '' 'const class rgb_color_t &')))
), data((MemberExpr 0xa0cab2c <../codeBase/fish-shell-master/color.h:13:7> 'const union <anonymous union at ../codeBase/fish-shell-master/color.h:36:5>':'const union rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:36:5>' lvalue .data 0xa073740
  (DeclRefExpr 0xa0cab14 <col:7> 'const class rgb_color_t' lvalue ParmVar 0xa0ca6d0 '' 'const class rgb_color_t &'))
) (CompoundStmt 0xa0cac28 <../codeBase/fish-shell-master/color.h:13:7>)


};
extern "C" {
    struct timezone {
        struct timezone;
        int tz_minuteswest;
        int tz_dsttime;
    };
    typedef struct timezone *restrict __timezone_ptr_t;
    extern int gettimeofday(struct timeval *restrict __tv, __timezone_ptr_t __tz) throw();
    extern int settimeofday(const struct timeval *__tv, const struct timezone *__tz) throw();
    extern int adjtime(const struct timeval *__delta, struct timeval *__olddelta) throw();
    enum __itimer_which {
        ITIMER_REAL = (ImplicitCastExpr 0xa076798 </usr/include/i386-linux-gnu/sys/time.h:96:19> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa0766a0 <col:19> 'int' 0))
,
        ITIMER_VIRTUAL = (ImplicitCastExpr 0xa0767a8 </usr/include/i386-linux-gnu/sys/time.h:99:22> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa0766f8 <col:22> 'int' 1))
,
        ITIMER_PROF = (ImplicitCastExpr 0xa0767b8 </usr/include/i386-linux-gnu/sys/time.h:103:19> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa076748 <col:19> 'int' 2))

    };
    struct itimerval {
        struct itimerval;
        struct timeval it_interval;
        struct timeval it_value;
    };
    typedef int __itimer_which_t;
    extern int getitimer(__itimer_which_t __which, struct itimerval *__value) throw();
    extern int setitimer(__itimer_which_t __which, const struct itimerval *restrict __new, struct itimerval *restrict __old) throw();
    extern int utimes(const char *__file, const struct timeval __tvp[2]) throw();
    extern int lutimes(const char *__file, const struct timeval __tvp[2]) throw();
    extern int futimes(int __fd, const struct timeval __tvp[2]) throw();
    extern int futimesat(int __fd, const char *__file, const struct timeval __tvp[2]) throw();
}
extern "C" {
    extern int __sigismember(const __sigset_t *, int);
    extern int __sigaddset(__sigset_t *, int);
    extern int __sigdelset(__sigset_t *, int);
    typedef __sig_atomic_t sig_atomic_t;
    union sigval {
        union sigval;
        int sival_int;
        void *sival_ptr;
    };
    typedef union sigval sigval_t;
    struct siginfo {
        struct siginfo;
        int si_signo;
        int si_errno;
        int si_code;
        union {
            int _pad[29];
            struct {
                __pid_t si_pid;
                __uid_t si_uid;
            };
            struct <anonymous struct at /usr/include/i386-linux-gnu/bits/siginfo.h:63:2> _kill;
            struct {
                int si_tid;
                int si_overrun;
                sigval_t si_sigval;
            };
            struct <anonymous struct at /usr/include/i386-linux-gnu/bits/siginfo.h:70:2> _timer;
            struct {
                __pid_t si_pid;
                __uid_t si_uid;
                sigval_t si_sigval;
            };
            struct <anonymous struct at /usr/include/i386-linux-gnu/bits/siginfo.h:78:2> _rt;
            struct {
                __pid_t si_pid;
                __uid_t si_uid;
                int si_status;
                __clock_t si_utime;
                __clock_t si_stime;
            };
            struct <anonymous struct at /usr/include/i386-linux-gnu/bits/siginfo.h:86:2> _sigchld;
            struct {
                void *si_addr;
            };
            struct <anonymous struct at /usr/include/i386-linux-gnu/bits/siginfo.h:96:2> _sigfault;
            struct {
                long si_band;
                int si_fd;
            };
            struct <anonymous struct at /usr/include/i386-linux-gnu/bits/siginfo.h:102:2> _sigpoll;
        };
        union <anonymous union at /usr/include/i386-linux-gnu/bits/siginfo.h:58:5> _sifields;
    };
    typedef struct siginfo siginfo_t;
    enum  {
        SI_ASYNCNL = (UnaryOperator 0xa08cb98 </usr/include/i386-linux-gnu/bits/siginfo.h:131:16, col:17> 'int' prefix '-'
  (IntegerLiteral 0xa08cb80 <col:17> 'int' 60))
,
        SI_TKILL = (UnaryOperator 0xa08cc00 </usr/include/i386-linux-gnu/bits/siginfo.h:133:14, col:15> 'int' prefix '-'
  (IntegerLiteral 0xa08cbe8 <col:15> 'int' 6))
,
        SI_SIGIO,
        SI_ASYNCIO,
        SI_MESGQ,
        SI_TIMER,
        SI_QUEUE,
        SI_USER,
        SI_KERNEL = (IntegerLiteral 0xa08cdd8 </usr/include/i386-linux-gnu/bits/siginfo.h:147:15> 'int' 128)

    };
    enum  {
        ILL_ILLOPC = (ImplicitCastExpr 0xa08d0a8 </usr/include/i386-linux-gnu/bits/siginfo.h:155:16> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa08ce90 <col:16> 'int' 1))
,
        ILL_ILLOPN,
        ILL_ILLADR,
        ILL_ILLTRP,
        ILL_PRVOPC,
        ILL_PRVREG,
        ILL_COPROC,
        ILL_BADSTK
    };
    enum  {
        FPE_INTDIV = (ImplicitCastExpr 0xa08d338 </usr/include/i386-linux-gnu/bits/siginfo.h:176:16> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa08d120 <col:16> 'int' 1))
,
        FPE_INTOVF,
        FPE_FLTDIV,
        FPE_FLTOVF,
        FPE_FLTUND,
        FPE_FLTRES,
        FPE_FLTINV,
        FPE_FLTSUB
    };
    enum  {
        SEGV_MAPERR = (ImplicitCastExpr 0xa08d448 </usr/include/i386-linux-gnu/bits/siginfo.h:197:17> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa08d3b0 <col:17> 'int' 1))
,
        SEGV_ACCERR
    };
    enum  {
        BUS_ADRALN = (ImplicitCastExpr 0xa08d598 </usr/include/i386-linux-gnu/bits/siginfo.h:206:16> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa08d4c0 <col:16> 'int' 1))
,
        BUS_ADRERR,
        BUS_OBJERR
    };
    enum  {
        TRAP_BRKPT = (ImplicitCastExpr 0xa08d6a8 </usr/include/i386-linux-gnu/bits/siginfo.h:217:16> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa08d610 <col:16> 'int' 1))
,
        TRAP_TRACE
    };
    enum  {
        CLD_EXITED = (ImplicitCastExpr 0xa08d8b8 </usr/include/i386-linux-gnu/bits/siginfo.h:226:16> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa08d720 <col:16> 'int' 1))
,
        CLD_KILLED,
        CLD_DUMPED,
        CLD_TRAPPED,
        CLD_STOPPED,
        CLD_CONTINUED
    };
    enum  {
        POLL_IN = (ImplicitCastExpr 0xa08dac8 </usr/include/i386-linux-gnu/bits/siginfo.h:243:13> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa08d930 <col:13> 'int' 1))
,
        POLL_OUT,
        POLL_MSG,
        POLL_ERR,
        POLL_PRI,
        POLL_HUP
    };
    struct sigevent {
        struct sigevent;
        sigval_t sigev_value;
        int sigev_signo;
        int sigev_notify;
        union {
            int _pad[13];
            __pid_t _tid;
            struct {
                void (*_function)(sigval_t);
                void *_attribute;
            };
            struct <anonymous struct at /usr/include/i386-linux-gnu/bits/siginfo.h:287:2> _sigev_thread;
        };
        union <anonymous union at /usr/include/i386-linux-gnu/bits/siginfo.h:279:5> _sigev_un;
    };
    typedef struct sigevent sigevent_t;
    enum  {
        SIGEV_SIGNAL = (ImplicitCastExpr 0xa08e428 </usr/include/i386-linux-gnu/bits/siginfo.h:302:18> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa08e300 <col:18> 'int' 0))
,
        SIGEV_NONE,
        SIGEV_THREAD,
        SIGEV_THREAD_ID = (ImplicitCastExpr 0xa08e438 </usr/include/i386-linux-gnu/bits/siginfo.h:309:21> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa08e3d8 <col:21> 'int' 4))

    };
    typedef void (*__sighandler_t)(int);
    extern __sighandler_t __sysv_signal(int __sig, __sighandler_t __handler) throw();
    extern __sighandler_t sysv_signal(int __sig, __sighandler_t __handler) throw();
    extern __sighandler_t signal(int __sig, __sighandler_t __handler) throw();
    extern __sighandler_t bsd_signal(int __sig, __sighandler_t __handler) throw();
    extern int kill(__pid_t __pid, int __sig) throw();
    extern int killpg(__pid_t __pgrp, int __sig) throw();
    extern int raise(int __sig) throw();
    extern __sighandler_t ssignal(int __sig, __sighandler_t __handler) throw();
    extern int gsignal(int __sig) throw();
    extern void psignal(int __sig, const char *__s);
    extern void psiginfo(const siginfo_t *__pinfo, const char *__s);
    extern int __sigpause(int __sig_or_mask, int __is_sig);
    extern int sigpause(int __sig);
    extern int sigblock(int __mask) throw();
    extern int sigsetmask(int __mask) throw();
    extern int siggetmask() throw();
    typedef __sighandler_t sighandler_t;
    typedef __sighandler_t sig_t;
    extern int sigemptyset(sigset_t *__set) throw();
    extern int sigfillset(sigset_t *__set) throw();
    extern int sigaddset(sigset_t *__set, int __signo) throw();
    extern int sigdelset(sigset_t *__set, int __signo) throw();
    extern int sigismember(const sigset_t *__set, int __signo) throw();
    extern int sigisemptyset(const sigset_t *__set) throw();
    extern int sigandset(sigset_t *__set, const sigset_t *__left, const sigset_t *__right) throw();
    extern int sigorset(sigset_t *__set, const sigset_t *__left, const sigset_t *__right) throw();
    struct sigaction {
        struct sigaction;
        union {
            __sighandler_t sa_handler;
            void (*sa_sigaction)(int, siginfo_t *, void *);
        };
        union <anonymous union at /usr/include/i386-linux-gnu/bits/sigaction.h:29:5> __sigaction_handler;
        __sigset_t sa_mask;
        int sa_flags;
        void (*sa_restorer)();
    };
    extern int sigprocmask(int __how, const sigset_t *restrict __set, sigset_t *restrict __oset) throw();
    extern int sigsuspend(const sigset_t *__set);
    extern int sigaction(int __sig, const struct sigaction *restrict __act, struct sigaction *restrict __oact) throw();
    extern int sigpending(sigset_t *__set) throw();
    extern int sigwait(const sigset_t *restrict __set, int *restrict __sig);
    extern int sigwaitinfo(const sigset_t *restrict __set, siginfo_t *restrict __info);
    extern int sigtimedwait(const sigset_t *restrict __set, siginfo_t *restrict __info, const struct timespec *restrict __timeout);
    extern int sigqueue(__pid_t __pid, int __sig, const union sigval __val) throw();
    extern const char *const _sys_siglist[65];
    extern const char *const sys_siglist[65];
    struct sigvec {
        struct sigvec;
        __sighandler_t sv_handler;
        int sv_mask;
        int sv_flags;
    };
    extern int sigvec(int __sig, const struct sigvec *__vec, struct sigvec *__ovec) throw();
    typedef signed char __s8;
    typedef unsigned char __u8;
    typedef short __s16;
    typedef unsigned short __u16;
    typedef int __s32;
    typedef unsigned int __u32;
    typedef long long __s64;
    typedef unsigned long long __u64;
    typedef unsigned short umode_t;
    struct {
        unsigned long fds_bits[32];
    };
    typedef struct __kernel_fd_set __kernel_fd_set;
    typedef void (*__kernel_sighandler_t)(int);
    typedef int __kernel_key_t;
    typedef int __kernel_mqd_t;
    typedef unsigned long __kernel_ino_t;
    typedef unsigned short __kernel_mode_t;
    typedef unsigned short __kernel_nlink_t;
    typedef long __kernel_off_t;
    typedef int __kernel_pid_t;
    typedef unsigned short __kernel_ipc_pid_t;
    typedef unsigned short __kernel_uid_t;
    typedef unsigned short __kernel_gid_t;
    typedef unsigned int __kernel_size_t;
    typedef int __kernel_ssize_t;
    typedef int __kernel_ptrdiff_t;
    typedef long __kernel_time_t;
    typedef long __kernel_suseconds_t;
    typedef long __kernel_clock_t;
    typedef int __kernel_timer_t;
    typedef int __kernel_clockid_t;
    typedef int __kernel_daddr_t;
    typedef char *__kernel_caddr_t;
    typedef unsigned short __kernel_uid16_t;
    typedef unsigned short __kernel_gid16_t;
    typedef unsigned int __kernel_uid32_t;
    typedef unsigned int __kernel_gid32_t;
    typedef unsigned short __kernel_old_uid_t;
    typedef unsigned short __kernel_old_gid_t;
    typedef unsigned short __kernel_old_dev_t;
    typedef long long __kernel_loff_t;
    struct {
        int val[2];
    };
    typedef struct __kernel_fsid_t __kernel_fsid_t;
    typedef __u16 __le16;
    typedef __u16 __be16;
    typedef __u32 __le32;
    typedef __u32 __be32;
    typedef __u64 __le64;
    typedef __u64 __be64;
    typedef __u16 __sum16;
    typedef __u32 __wsum;
    struct _fpx_sw_bytes {
        struct _fpx_sw_bytes;
        __u32 magic1;
        __u32 extended_size;
        __u64 xstate_bv;
        __u32 xstate_size;
        __u32 padding[7];
    };
    struct _fpreg {
        struct _fpreg;
        unsigned short significand[4];
        unsigned short exponent;
    };
    struct _fpxreg {
        struct _fpxreg;
        unsigned short significand[4];
        unsigned short exponent;
        unsigned short padding[3];
    };
    struct _xmmreg {
        struct _xmmreg;
        unsigned long element[4];
    };
    struct _fpstate {
        struct _fpstate;
        unsigned long cw;
        unsigned long sw;
        unsigned long tag;
        unsigned long ipoff;
        unsigned long cssel;
        unsigned long dataoff;
        unsigned long datasel;
        struct _fpreg _st[8];
        unsigned short status;
        unsigned short magic;
        unsigned long _fxsr_env[6];
        unsigned long mxcsr;
        unsigned long reserved;
        struct _fpxreg _fxsr_st[8];
        struct _xmmreg _xmm[8];
        unsigned long padding1[44];
        union {
            unsigned long padding2[12];
            struct _fpx_sw_bytes sw_reserved;
        } ;
        ;
        ;
    };
    struct sigcontext {
        struct sigcontext;
        unsigned short gs;
        unsigned short __gsh;
        unsigned short fs;
        unsigned short __fsh;
        unsigned short es;
        unsigned short __esh;
        unsigned short ds;
        unsigned short __dsh;
        unsigned long edi;
        unsigned long esi;
        unsigned long ebp;
        unsigned long esp;
        unsigned long ebx;
        unsigned long edx;
        unsigned long ecx;
        unsigned long eax;
        unsigned long trapno;
        unsigned long err;
        unsigned long eip;
        unsigned short cs;
        unsigned short __csh;
        unsigned long eflags;
        unsigned long esp_at_signal;
        unsigned short ss;
        unsigned short __ssh;
        struct _fpstate *fpstate;
        unsigned long oldmask;
        unsigned long cr2;
    };
    struct _xsave_hdr {
        struct _xsave_hdr;
        __u64 xstate_bv;
        __u64 reserved1[2];
        __u64 reserved2[5];
    };
    struct _ymmh_state {
        struct _ymmh_state;
        __u32 ymmh_space[64];
    };
    struct _xstate {
        struct _xstate;
        struct _fpstate fpstate;
        struct _xsave_hdr xstate_hdr;
        struct _ymmh_state ymmh;
    };
    extern int sigreturn(struct sigcontext *__scp) throw();
    extern int siginterrupt(int __sig, int __interrupt) throw();
    struct sigstack {
        struct sigstack;
        void *ss_sp;
        int ss_onstack;
    };
    enum  {
        SS_ONSTACK = (ImplicitCastExpr 0xa0a7e98 </usr/include/i386-linux-gnu/bits/sigstack.h:36:16> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa0a7e00 <col:16> 'int' 1))
,
        SS_DISABLE
    };
    struct sigaltstack {
        struct sigaltstack;
        void *ss_sp;
        int ss_flags;
        size_t ss_size;
    };
    typedef struct sigaltstack stack_t;
    typedef int greg_t;
    typedef greg_t gregset_t[19];
    enum  {
        REG_GS = (ImplicitCastExpr 0xa0a8748 </usr/include/i386-linux-gnu/sys/ucontext.h:43:12> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa0a8270 <col:12> 'int' 0))
,
        REG_FS,
        REG_ES,
        REG_DS,
        REG_EDI,
        REG_ESI,
        REG_EBP,
        REG_ESP,
        REG_EBX,
        REG_EDX,
        REG_ECX,
        REG_EAX,
        REG_TRAPNO,
        REG_ERR,
        REG_EIP,
        REG_CS,
        REG_EFL,
        REG_UESP,
        REG_SS
    };
    struct _libc_fpreg {
        struct _libc_fpreg;
        unsigned short significand[4];
        unsigned short exponent;
    };
    struct _libc_fpstate {
        struct _libc_fpstate;
        unsigned long cw;
        unsigned long sw;
        unsigned long tag;
        unsigned long ipoff;
        unsigned long cssel;
        unsigned long dataoff;
        unsigned long datasel;
        struct _libc_fpreg _st[8];
        unsigned long status;
    };
    typedef struct _libc_fpstate *fpregset_t;
    struct {
        gregset_t gregs;
        fpregset_t fpregs;
        unsigned long oldmask;
        unsigned long cr2;
    };
    typedef struct mcontext_t mcontext_t;
    struct ucontext {
        struct ucontext;
        unsigned long uc_flags;
        struct ucontext *uc_link;
        stack_t uc_stack;
        mcontext_t uc_mcontext;
        __sigset_t uc_sigmask;
        struct _libc_fpstate __fpregs_mem;
    };
    typedef struct ucontext ucontext_t;
    extern int sigstack(struct sigstack *__ss, struct sigstack *__oss) throw();
    extern int sigaltstack(const struct sigaltstack *restrict __ss, struct sigaltstack *restrict __oss) throw();
    extern int sighold(int __sig) throw();
    extern int sigrelse(int __sig) throw();
    extern int sigignore(int __sig) throw();
    extern __sighandler_t sigset(int __sig, __sighandler_t __disp) throw();
    extern int pthread_sigmask(int __how, const __sigset_t *restrict __newmask, __sigset_t *restrict __oldmask) throw();
    extern int pthread_kill(pthread_t __threadid, int __signo) throw();
    extern int pthread_sigqueue(pthread_t __threadid, int __signo, const union sigval __value) throw();
    extern int __libc_current_sigrtmin() throw();
    extern int __libc_current_sigrtmax() throw();
}
int fish_wcwidth(wchar_t wc);
int fish_wcswidth(const wchar_t *str, size_t n);
typedef char tputs_arg_t;
wchar_t *wcsndup(const wchar_t *in, size_t c);
long convert_digit(wchar_t d, int base);
size_t wcslcat(wchar_t *dst, const wchar_t *src, size_t siz);
size_t wcslcpy(wchar_t *dst, const wchar_t *src, size_t siz);
char *fish_gettext(const char *msgid);
char *fish_bindtextdomain(const char *domainname, const char *dirname);
char *fish_textdomain(const char *domainname);
char *fish_dcgettext(const char *domainname, const char *msgid, int category);
extern int _nl_msg_cat_cntr;
bool try_parse_special(const wcstring &special) (CompoundStmt 0xa0abb98 <../codeBase/fish-shell-master/color.cpp:8:1, line:28:1>
  (CallExpr 0xa0ab188 <line:9:5, col:29> 'void'
    (ImplicitCastExpr 0xa0ab178 <col:5> 'void (*)(void *, size_t) throw()' <FunctionToPointerDecay>
      (DeclRefExpr 0xa0ab128 <col:5> 'void (void *, size_t) throw()' lvalue Function 0xa038810 'bzero' 'void (void *, size_t) throw()'))
    (ImplicitCastExpr 0xa0ab1b0 <col:11, col:12> 'void *' <BitCast>
      (UnaryOperator 0xa0ab0c8 <col:11, col:12> 'union <anonymous union at ../codeBase/fish-shell-master/color.h:36:5> *' prefix '&'
        (MemberExpr 0xa0ab068 <col:12> 'union <anonymous union at ../codeBase/fish-shell-master/color.h:36:5>':'union rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:36:5>' lvalue ->data 0xa073740
          (CXXThisExpr 0xa0ab058 <col:12> 'class rgb_color_t *' this))))
    (UnaryExprOrTypeTraitExpr 0xa0ab110 <col:18, col:25> 'unsigned int' sizeof 
      (MemberExpr 0xa0ab0f0 <col:25> 'union <anonymous union at ../codeBase/fish-shell-master/color.h:36:5>':'union rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:36:5>' lvalue ->data 0xa073740
        (CXXThisExpr 0xa0ab0e0 <col:25> 'class rgb_color_t *' this))))
  (DeclStmt 0xa0ab260 <line:10:5, col:42>
    0xa0ab1d0 "const wchar_t *name =
      (CXXMemberCallExpr 0xa0ab240 <col:27, col:41> 'const wchar_t *'
        (MemberExpr 0xa0ab21c <col:27, col:35> '<bound member function type>' .c_str 0x9dd8510
          (DeclRefExpr 0xa0ab204 <col:27> 'const wcstring':'const class std::basic_string<wchar_t>' lvalue ParmVar 0xa0aaf40 'special' 'const wcstring &')))")
  (IfStmt 0xa0abad8 <line:11:5, line:26:5>
    <<<NULL>>>
    (UnaryOperator 0xa0ab3f0 <line:11:9, col:37> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa0ab3e0 <col:11, col:37> '_Bool' <IntegralToBoolean>
        (CallExpr 0xa0ab398 <col:11, col:37> 'int'
          (ImplicitCastExpr 0xa0ab388 <col:11> 'int (*)(const wchar_t *, const wchar_t *) throw()' <FunctionToPointerDecay>
            (DeclRefExpr 0xa0ab334 <col:11> 'int (const wchar_t *, const wchar_t *) throw()' lvalue Function 0x9b59320 'wcscasecmp' 'int (const wchar_t *, const wchar_t *) throw()'))
          (ImplicitCastExpr 0xa0ab3c0 <col:22> 'const wchar_t *' <LValueToRValue>
            (DeclRefExpr 0xa0ab2a4 <col:22> 'const wchar_t *' lvalue Var 0xa0ab1d0 'name' 'const wchar_t *'))
          (ImplicitCastExpr 0xa0ab3d0 <col:28> 'const wchar_t *' <ArrayToPointerDecay>
            (StringLiteral 0xa0ab300 <col:28> 'const wchar_t [7]' lvalue L"n\000\000\000o\000\000\000r\000\000\000m\000\000\000a\000\000\000l\000\000\000")))))
    (CompoundStmt 0xa0ab6b8 <line:12:5, line:14:5>
      (BinaryOperator 0xa0ab6a0 <line:13:9, col:22> 'unsigned char' lvalue bitfield '='
        (MemberExpr 0xa0ab418 <col:9, col:15> 'unsigned char' lvalue bitfield ->type 0xa073360
          (CXXThisExpr 0xa0ab408 <col:9> 'class rgb_color_t *' this))
        (ImplicitCastExpr 0xa0ab690 <col:22> 'unsigned char' <IntegralCast>
          (DeclRefExpr 0xa0ab438 <col:22> 'enum rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:17:5>' EnumConstant 0xa073280 'type_normal' 'enum rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:17:5>'))))
    (IfStmt 0xa0abab8 <line:15:10, line:26:5>
      <<<NULL>>>
      (UnaryOperator 0xa0ab7d0 <line:15:14, col:41> '_Bool' prefix '!'
        (ImplicitCastExpr 0xa0ab7c0 <col:16, col:41> '_Bool' <IntegralToBoolean>
          (CallExpr 0xa0ab778 <col:16, col:41> 'int'
            (ImplicitCastExpr 0xa0ab768 <col:16> 'int (*)(const wchar_t *, const wchar_t *) throw()' <FunctionToPointerDecay>
              (DeclRefExpr 0xa0ab74c <col:16> 'int (const wchar_t *, const wchar_t *) throw()' lvalue Function 0x9b59320 'wcscasecmp' 'int (const wchar_t *, const wchar_t *) throw()'))
            (ImplicitCastExpr 0xa0ab7a0 <col:27> 'const wchar_t *' <LValueToRValue>
              (DeclRefExpr 0xa0ab704 <col:27> 'const wchar_t *' lvalue Var 0xa0ab1d0 'name' 'const wchar_t *'))
            (ImplicitCastExpr 0xa0ab7b0 <col:33> 'const wchar_t *' <ArrayToPointerDecay>
              (StringLiteral 0xa0ab71c <col:33> 'const wchar_t [6]' lvalue L"r\000\000\000e\000\000\000s\000\000\000e\000\000\000t\000\000\000")))))
      (CompoundStmt 0xa0ab858 <line:16:5, line:18:5>
        (BinaryOperator 0xa0ab840 <line:17:9, col:22> 'unsigned char' lvalue bitfield '='
          (MemberExpr 0xa0ab7f8 <col:9, col:15> 'unsigned char' lvalue bitfield ->type 0xa073360
            (CXXThisExpr 0xa0ab7e8 <col:9> 'class rgb_color_t *' this))
          (ImplicitCastExpr 0xa0ab830 <col:22> 'unsigned char' <IntegralCast>
            (DeclRefExpr 0xa0ab818 <col:22> 'enum rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:17:5>' EnumConstant 0xa0732c0 'type_reset' 'enum rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:17:5>'))))
      (IfStmt 0xa0aba98 <line:19:10, line:26:5>
        <<<NULL>>>
        (UnaryOperator 0xa0ab970 <line:19:14, col:42> '_Bool' prefix '!'
          (ImplicitCastExpr 0xa0ab960 <col:16, col:42> '_Bool' <IntegralToBoolean>
            (CallExpr 0xa0ab918 <col:16, col:42> 'int'
              (ImplicitCastExpr 0xa0ab908 <col:16> 'int (*)(const wchar_t *, const wchar_t *) throw()' <FunctionToPointerDecay>
                (DeclRefExpr 0xa0ab8f0 <col:16> 'int (const wchar_t *, const wchar_t *) throw()' lvalue Function 0x9b59320 'wcscasecmp' 'int (const wchar_t *, const wchar_t *) throw()'))
              (ImplicitCastExpr 0xa0ab940 <col:27> 'const wchar_t *' <LValueToRValue>
                (DeclRefExpr 0xa0ab8a4 <col:27> 'const wchar_t *' lvalue Var 0xa0ab1d0 'name' 'const wchar_t *'))
              (ImplicitCastExpr 0xa0ab950 <col:33> 'const wchar_t *' <ArrayToPointerDecay>
                (StringLiteral 0xa0ab8bc <col:33> 'const wchar_t [7]' lvalue L"i\000\000\000g\000\000\000n\000\000\000o\000\000\000r\000\000\000e\000\000\000")))))
        (CompoundStmt 0xa0ab9f8 <line:20:5, line:22:5>
          (BinaryOperator 0xa0ab9e0 <line:21:9, col:22> 'unsigned char' lvalue bitfield '='
            (MemberExpr 0xa0ab998 <col:9, col:15> 'unsigned char' lvalue bitfield ->type 0xa073360
              (CXXThisExpr 0xa0ab988 <col:9> 'class rgb_color_t *' this))
            (ImplicitCastExpr 0xa0ab9d0 <col:22> 'unsigned char' <IntegralCast>
              (DeclRefExpr 0xa0ab9b8 <col:22> 'enum rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:17:5>' EnumConstant 0xa073300 'type_ignore' 'enum rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:17:5>'))))
        (CompoundStmt 0xa0aba80 <line:24:5, line:26:5>
          (BinaryOperator 0xa0aba68 <line:25:9, col:22> 'unsigned char' lvalue bitfield '='
            (MemberExpr 0xa0aba20 <col:9, col:15> 'unsigned char' lvalue bitfield ->type 0xa073360
              (CXXThisExpr 0xa0aba10 <col:9> 'class rgb_color_t *' this))
            (ImplicitCastExpr 0xa0aba58 <col:22> 'unsigned char' <IntegralCast>
              (DeclRefExpr 0xa0aba40 <col:22> 'enum rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:17:5>' EnumConstant 0xa0731c0 'type_none' 'enum rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:17:5>')))))))
  (ReturnStmt 0xa0abb88 <line:27:5, col:26>
    (BinaryOperator 0xa0abb70 <col:12, col:26> '_Bool' '!='
      (ImplicitCastExpr 0xa0abb50 <col:12, col:18> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa0abb40 <col:12, col:18> 'unsigned char' <LValueToRValue>
          (MemberExpr 0xa0abb08 <col:12, col:18> 'unsigned char' lvalue bitfield ->type 0xa073360
            (CXXThisExpr 0xa0abaf8 <col:12> 'class rgb_color_t *' this))))
      (ImplicitCastExpr 0xa0abb60 <col:26> 'int' <IntegralCast>
        (DeclRefExpr 0xa0abb28 <col:26> 'enum rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:17:5>' EnumConstant 0xa0731c0 'type_none' 'enum rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:17:5>')))))


static int parse_hex_digit(wchar_t x) (CompoundStmt 0xa0ac4d0 <../codeBase/fish-shell-master/color.cpp:31:1, line:75:1>
  (SwitchStmt 0xa0abcb0 <line:32:5, line:74:5>
    <<<NULL>>>
    (ImplicitCastExpr 0xa0abca0 <line:32:13> 'wchar_t' <LValueToRValue>
      (DeclRefExpr 0xa0abc84 <col:13> 'wchar_t' lvalue ParmVar 0xa0abbc0 'x' 'wchar_t'))
    (CompoundStmt 0xa0ac478 <line:33:5, line:74:5>
      (CaseStmt 0xa0abce8 <line:34:9, line:35:20>
        (CharacterLiteral 0xa0abcd0 <line:34:14> 'wchar_t'48)
        <<<NULL>>>
        (ReturnStmt 0xa0abd20 <line:35:13, col:20>
          (IntegerLiteral 0xa0abd08 <col:20> 'int' 0)))
      (CaseStmt 0xa0abd48 <line:36:9, line:37:20>
        (CharacterLiteral 0xa0abd30 <line:36:14> 'wchar_t'49)
        <<<NULL>>>
        (ReturnStmt 0xa0abd80 <line:37:13, col:20>
          (IntegerLiteral 0xa0abd68 <col:20> 'int' 1)))
      (CaseStmt 0xa0abda8 <line:38:9, line:39:20>
        (CharacterLiteral 0xa0abd90 <line:38:14> 'wchar_t'50)
        <<<NULL>>>
        (ReturnStmt 0xa0abde0 <line:39:13, col:20>
          (IntegerLiteral 0xa0abdc8 <col:20> 'int' 2)))
      (CaseStmt 0xa0abe08 <line:40:9, line:41:20>
        (CharacterLiteral 0xa0abdf0 <line:40:14> 'wchar_t'51)
        <<<NULL>>>
        (ReturnStmt 0xa0abe40 <line:41:13, col:20>
          (IntegerLiteral 0xa0abe28 <col:20> 'int' 3)))
      (CaseStmt 0xa0abe68 <line:42:9, line:43:20>
        (CharacterLiteral 0xa0abe50 <line:42:14> 'wchar_t'52)
        <<<NULL>>>
        (ReturnStmt 0xa0abea0 <line:43:13, col:20>
          (IntegerLiteral 0xa0abe88 <col:20> 'int' 4)))
      (CaseStmt 0xa0abec8 <line:44:9, line:45:20>
        (CharacterLiteral 0xa0abeb0 <line:44:14> 'wchar_t'53)
        <<<NULL>>>
        (ReturnStmt 0xa0abf00 <line:45:13, col:20>
          (IntegerLiteral 0xa0abee8 <col:20> 'int' 5)))
      (CaseStmt 0xa0abf28 <line:46:9, line:47:20>
        (CharacterLiteral 0xa0abf10 <line:46:14> 'wchar_t'54)
        <<<NULL>>>
        (ReturnStmt 0xa0abf60 <line:47:13, col:20>
          (IntegerLiteral 0xa0abf48 <col:20> 'int' 6)))
      (CaseStmt 0xa0abf88 <line:48:9, line:49:20>
        (CharacterLiteral 0xa0abf70 <line:48:14> 'wchar_t'55)
        <<<NULL>>>
        (ReturnStmt 0xa0abfc0 <line:49:13, col:20>
          (IntegerLiteral 0xa0abfa8 <col:20> 'int' 7)))
      (CaseStmt 0xa0abfe8 <line:50:9, line:51:20>
        (CharacterLiteral 0xa0abfd0 <line:50:14> 'wchar_t'56)
        <<<NULL>>>
        (ReturnStmt 0xa0ac020 <line:51:13, col:20>
          (IntegerLiteral 0xa0ac008 <col:20> 'int' 8)))
      (CaseStmt 0xa0ac048 <line:52:9, line:53:20>
        (CharacterLiteral 0xa0ac030 <line:52:14> 'wchar_t'57)
        <<<NULL>>>
        (ReturnStmt 0xa0ac080 <line:53:13, col:20>
          (IntegerLiteral 0xa0ac068 <col:20> 'int' 9)))
      (CaseStmt 0xa0ac0a8 <line:54:9, line:56:20>
        (CharacterLiteral 0xa0ac090 <line:54:14> 'wchar_t'97)
        <<<NULL>>>
        (CaseStmt 0xa0ac0e0 <line:55:9, line:56:20>
          (CharacterLiteral 0xa0ac0c8 <line:55:14> 'wchar_t'65)
          <<<NULL>>>
          (ReturnStmt 0xa0ac118 <line:56:13, col:20>
            (IntegerLiteral 0xa0ac100 <col:20> 'int' 10))))
      (CaseStmt 0xa0ac140 <line:57:9, line:59:20>
        (CharacterLiteral 0xa0ac128 <line:57:14> 'wchar_t'98)
        <<<NULL>>>
        (CaseStmt 0xa0ac178 <line:58:9, line:59:20>
          (CharacterLiteral 0xa0ac160 <line:58:14> 'wchar_t'66)
          <<<NULL>>>
          (ReturnStmt 0xa0ac1b0 <line:59:13, col:20>
            (IntegerLiteral 0xa0ac198 <col:20> 'int' 11))))
      (CaseStmt 0xa0ac1d8 <line:60:9, line:62:20>
        (CharacterLiteral 0xa0ac1c0 <line:60:14> 'wchar_t'99)
        <<<NULL>>>
        (CaseStmt 0xa0ac210 <line:61:9, line:62:20>
          (CharacterLiteral 0xa0ac1f8 <line:61:14> 'wchar_t'67)
          <<<NULL>>>
          (ReturnStmt 0xa0ac248 <line:62:13, col:20>
            (IntegerLiteral 0xa0ac230 <col:20> 'int' 12))))
      (CaseStmt 0xa0ac270 <line:63:9, line:65:20>
        (CharacterLiteral 0xa0ac258 <line:63:14> 'wchar_t'100)
        <<<NULL>>>
        (CaseStmt 0xa0ac2a8 <line:64:9, line:65:20>
          (CharacterLiteral 0xa0ac290 <line:64:14> 'wchar_t'68)
          <<<NULL>>>
          (ReturnStmt 0xa0ac2e0 <line:65:13, col:20>
            (IntegerLiteral 0xa0ac2c8 <col:20> 'int' 13))))
      (CaseStmt 0xa0ac308 <line:66:9, line:68:20>
        (CharacterLiteral 0xa0ac2f0 <line:66:14> 'wchar_t'101)
        <<<NULL>>>
        (CaseStmt 0xa0ac340 <line:67:9, line:68:20>
          (CharacterLiteral 0xa0ac328 <line:67:14> 'wchar_t'69)
          <<<NULL>>>
          (ReturnStmt 0xa0ac378 <line:68:13, col:20>
            (IntegerLiteral 0xa0ac360 <col:20> 'int' 14))))
      (CaseStmt 0xa0ac3a0 <line:69:9, line:71:20>
        (CharacterLiteral 0xa0ac388 <line:69:14> 'wchar_t'102)
        <<<NULL>>>
        (CaseStmt 0xa0ac3d8 <line:70:9, line:71:20>
          (CharacterLiteral 0xa0ac3c0 <line:70:14> 'wchar_t'70)
          <<<NULL>>>
          (ReturnStmt 0xa0ac410 <line:71:13, col:20>
            (IntegerLiteral 0xa0ac3f8 <col:20> 'int' 15))))
      (DefaultStmt 0xa0ac460 <line:72:9, line:73:21>
        (ReturnStmt 0xa0ac450 <col:13, col:21>
          (UnaryOperator 0xa0ac438 <col:20, col:21> 'int' prefix '-'
            (IntegerLiteral 0xa0ac420 <col:21> 'int' 1)))))))


static unsigned long squared_difference(long p1, long p2) (CompoundStmt 0xa0ac868 <../codeBase/fish-shell-master/color.cpp:78:1, line:81:1>
  (DeclStmt 0xa0ac7e0 <line:79:5, col:54>
    0xa0ac650 "unsigned long diff =
      (CStyleCastExpr 0xa0ac7c8 <col:26, col:53> 'unsigned long' <NoOp>
        (ImplicitCastExpr 0xa0ac7b8 <col:41, col:53> 'unsigned long' <IntegralCast>
          (CallExpr 0xa0ac788 <col:41, col:53> 'long'
            (ImplicitCastExpr 0xa0ac778 <col:41> 'long (*)(long) throw()' <FunctionToPointerDecay>
              (DeclRefExpr 0xa0ac728 <col:41> 'long (long) throw()' lvalue Function 0x9b33c20 'labs' 'long (long) throw()'))
            (BinaryOperator 0xa0ac710 <col:46, col:51> 'long' '-'
              (ImplicitCastExpr 0xa0ac6f0 <col:46> 'long' <LValueToRValue>
                (DeclRefExpr 0xa0ac6bc <col:46> 'long' lvalue ParmVar 0xa0ac500 'p1' 'long'))
              (ImplicitCastExpr 0xa0ac700 <col:51> 'long' <LValueToRValue>
                (DeclRefExpr 0xa0ac6d4 <col:51> 'long' lvalue ParmVar 0xa0ac550 'p2' 'long'))))))")
  (ReturnStmt 0xa0ac858 <line:80:5, col:19>
    (BinaryOperator 0xa0ac840 <col:12, col:19> 'unsigned long' '*'
      (ImplicitCastExpr 0xa0ac820 <col:12> 'unsigned long' <LValueToRValue>
        (DeclRefExpr 0xa0ac7f0 <col:12> 'unsigned long' lvalue Var 0xa0ac650 'diff' 'unsigned long'))
      (ImplicitCastExpr 0xa0ac830 <col:19> 'unsigned long' <LValueToRValue>
        (DeclRefExpr 0xa0ac808 <col:19> 'unsigned long' lvalue Var 0xa0ac650 'diff' 'unsigned long')))))


static unsigned char convert_color(const unsigned char rgb[3], const uint32_t *colors, size_t color_count) (CompoundStmt 0xa0ad950 <../codeBase/fish-shell-master/color.cpp:84:1, line:101:1>
  (DeclStmt 0xa0acd40 <line:85:5, col:44>
    0xa0acb00 "long r =
      (ImplicitCastExpr 0xa0acba0 <col:14, col:19> 'long' <IntegralCast>
        (ImplicitCastExpr 0xa0acb90 <col:14, col:19> 'unsigned char' <LValueToRValue>
          (ArraySubscriptExpr 0xa0acb78 <col:14, col:19> 'const unsigned char' lvalue
            (ImplicitCastExpr 0xa0acb68 <col:14> 'const unsigned char *' <LValueToRValue>
              (DeclRefExpr 0xa0acb34 <col:14> 'const unsigned char *' lvalue ParmVar 0xa0ac8e0 'rgb' 'const unsigned char *'))
            (IntegerLiteral 0xa0acb50 <col:18> 'int' 0))))"
    0xa0acbc0 "long g =
      (ImplicitCastExpr 0xa0acc60 <col:26, col:31> 'long' <IntegralCast>
        (ImplicitCastExpr 0xa0acc50 <col:26, col:31> 'unsigned char' <LValueToRValue>
          (ArraySubscriptExpr 0xa0acc38 <col:26, col:31> 'const unsigned char' lvalue
            (ImplicitCastExpr 0xa0acc28 <col:26> 'const unsigned char *' <LValueToRValue>
              (DeclRefExpr 0xa0acbf4 <col:26> 'const unsigned char *' lvalue ParmVar 0xa0ac8e0 'rgb' 'const unsigned char *'))
            (IntegerLiteral 0xa0acc10 <col:30> 'int' 1))))"
    0xa0acc80 "long b =
      (ImplicitCastExpr 0xa0acd20 <col:38, col:43> 'long' <IntegralCast>
        (ImplicitCastExpr 0xa0acd10 <col:38, col:43> 'unsigned char' <LValueToRValue>
          (ArraySubscriptExpr 0xa0accf8 <col:38, col:43> 'const unsigned char' lvalue
            (ImplicitCastExpr 0xa0acce8 <col:38> 'const unsigned char *' <LValueToRValue>
              (DeclRefExpr 0xa0accb4 <col:38> 'const unsigned char *' lvalue ParmVar 0xa0ac8e0 'rgb' 'const unsigned char *'))
            (IntegerLiteral 0xa0accd0 <col:42> 'int' 2))))")
  (DeclStmt 0xa0ace18 <line:86:5, col:54>
    0xa0acd60 "unsigned long best_distance =
      (CStyleCastExpr 0xa0ace00 <col:35, col:53> 'unsigned long' <NoOp>
        (ImplicitCastExpr 0xa0acdf0 <col:50, col:53> 'unsigned long' <IntegralCast>
          (ParenExpr 0xa0acdc8 <col:50, col:53> 'int'
            (UnaryOperator 0xa0acdb0 <col:51, col:52> 'int' prefix '-'
              (IntegerLiteral 0xa0acd98 <col:52> 'int' 1)))))")
  (DeclStmt 0xa0acef8 <line:87:5, col:51>
    0xa0ace40 "unsigned char best_index =
      (CStyleCastExpr 0xa0acee0 <col:32, col:50> 'unsigned char' <NoOp>
        (ImplicitCastExpr 0xa0aced0 <col:47, col:50> 'unsigned char' <IntegralCast>
          (ParenExpr 0xa0acea8 <col:47, col:50> 'int'
            (UnaryOperator 0xa0ace90 <col:48, col:49> 'int' prefix '-'
              (IntegerLiteral 0xa0ace78 <col:49> 'int' 1)))))")
  (ForStmt 0xa0ad8f0 <line:88:5, line:98:5>
    (DeclStmt 0xa0acf80 <line:88:10, col:31>
      0xa0acf20 "unsigned char idx =
        (ImplicitCastExpr 0xa0acf70 <col:30> 'unsigned char' <IntegralCast>
          (IntegerLiteral 0xa0acf58 <col:30> 'int' 0))")
    <<<NULL>>>
    (BinaryOperator 0xa0acff0 <col:33, col:39> '_Bool' '<'
      (ImplicitCastExpr 0xa0acfd0 <col:33> 'unsigned int' <IntegralCast>
        (ImplicitCastExpr 0xa0acfc0 <col:33> 'unsigned char' <LValueToRValue>
          (DeclRefExpr 0xa0acf90 <col:33> 'unsigned char' lvalue Var 0xa0acf20 'idx' 'unsigned char')))
      (ImplicitCastExpr 0xa0acfe0 <col:39> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa0acfa8 <col:39> 'size_t':'unsigned int' lvalue ParmVar 0xa0ac9c0 'color_count' 'size_t':'unsigned int')))
    (UnaryOperator 0xa0ad020 <col:52, col:55> 'unsigned char' postfix '++'
      (DeclRefExpr 0xa0ad008 <col:52> 'unsigned char' lvalue Var 0xa0acf20 'idx' 'unsigned char'))
    (CompoundStmt 0xa0ad8d0 <line:89:5, line:98:5>
      (DeclStmt 0xa0ad0f0 <line:90:9, col:37>
        0xa0ad040 "uint32_t color =
          (ImplicitCastExpr 0xa0ad0e0 <col:26, col:36> 'uint32_t':'unsigned int' <LValueToRValue>
            (ArraySubscriptExpr 0xa0ad0c8 <col:26, col:36> 'const uint32_t':'const unsigned int' lvalue
              (ImplicitCastExpr 0xa0ad0a8 <col:26> 'const uint32_t *' <LValueToRValue>
                (DeclRefExpr 0xa0ad074 <col:26> 'const uint32_t *' lvalue ParmVar 0xa0ac980 'colors' 'const uint32_t *'))
              (ImplicitCastExpr 0xa0ad0b8 <col:33> 'unsigned char' <LValueToRValue>
                (DeclRefExpr 0xa0ad08c <col:33> 'unsigned char' lvalue Var 0xa0acf20 'idx' 'unsigned char'))))")
      (DeclStmt 0xa0ad438 <line:91:9, col:103>
        0xa0ad110 "long test_r =
          (ImplicitCastExpr 0xa0ad1f8 <col:23, col:39> 'long' <IntegralCast>
            (BinaryOperator 0xa0ad1e0 <col:23, col:39> 'unsigned int' '&'
              (ParenExpr 0xa0ad1a0 <col:23, col:35> 'uint32_t':'unsigned int'
                (BinaryOperator 0xa0ad188 <col:24, col:33> 'uint32_t':'unsigned int' '>>'
                  (ImplicitCastExpr 0xa0ad178 <col:24> 'uint32_t':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0xa0ad144 <col:24> 'uint32_t':'unsigned int' lvalue Var 0xa0ad040 'color' 'uint32_t':'unsigned int'))
                  (IntegerLiteral 0xa0ad160 <col:33> 'int' 16)))
              (ImplicitCastExpr 0xa0ad1d0 <col:39> 'unsigned int' <IntegralCast>
                (IntegerLiteral 0xa0ad1b8 <col:39> 'int' 255))))"
        0xa0ad220 "long test_g =
          (ImplicitCastExpr 0xa0ad308 <col:54, col:69> 'long' <IntegralCast>
            (BinaryOperator 0xa0ad2f0 <col:54, col:69> 'unsigned int' '&'
              (ParenExpr 0xa0ad2b0 <col:54, col:65> 'uint32_t':'unsigned int'
                (BinaryOperator 0xa0ad298 <col:55, col:64> 'uint32_t':'unsigned int' '>>'
                  (ImplicitCastExpr 0xa0ad288 <col:55> 'uint32_t':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0xa0ad254 <col:55> 'uint32_t':'unsigned int' lvalue Var 0xa0ad040 'color' 'uint32_t':'unsigned int'))
                  (IntegerLiteral 0xa0ad270 <col:64> 'int' 8)))
              (ImplicitCastExpr 0xa0ad2e0 <col:69> 'unsigned int' <IntegralCast>
                (IntegerLiteral 0xa0ad2c8 <col:69> 'int' 255))))"
        0xa0ad330 "long test_b =
          (ImplicitCastExpr 0xa0ad418 <col:84, col:99> 'long' <IntegralCast>
            (BinaryOperator 0xa0ad400 <col:84, col:99> 'unsigned int' '&'
              (ParenExpr 0xa0ad3c0 <col:84, col:95> 'uint32_t':'unsigned int'
                (BinaryOperator 0xa0ad3a8 <col:85, col:94> 'uint32_t':'unsigned int' '>>'
                  (ImplicitCastExpr 0xa0ad398 <col:85> 'uint32_t':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0xa0ad364 <col:85> 'uint32_t':'unsigned int' lvalue Var 0xa0ad040 'color' 'uint32_t':'unsigned int'))
                  (IntegerLiteral 0xa0ad380 <col:94> 'int' 0)))
              (ImplicitCastExpr 0xa0ad3f0 <col:99> 'unsigned int' <IntegralCast>
                (IntegerLiteral 0xa0ad3d8 <col:99> 'int' 255))))")
      (DeclStmt 0xa0ad770 <line:92:9, col:127>
        0xa0ad460 "unsigned long distance =
          (BinaryOperator 0xa0ad758 <col:34, col:126> 'unsigned long' '+'
            (BinaryOperator 0xa0ad668 <col:34, col:94> 'unsigned long' '+'
              (CallExpr 0xa0ad548 <col:34, col:62> 'unsigned long'
                (ImplicitCastExpr 0xa0ad538 <col:34> 'unsigned long (*)(long, long)' <FunctionToPointerDecay>
                  (DeclRefExpr 0xa0ad4fc <col:34> 'unsigned long (long, long)' lvalue Function 0xa0ac5d0 'squared_difference' 'unsigned long (long, long)'))
                (ImplicitCastExpr 0xa0ad570 <col:53> 'long' <LValueToRValue>
                  (DeclRefExpr 0xa0ad4cc <col:53> 'long' lvalue Var 0xa0acb00 'r' 'long'))
                (ImplicitCastExpr 0xa0ad580 <col:56> 'long' <LValueToRValue>
                  (DeclRefExpr 0xa0ad4e4 <col:56> 'long' lvalue Var 0xa0ad110 'test_r' 'long')))
              (CallExpr 0xa0ad620 <col:66, col:94> 'unsigned long'
                (ImplicitCastExpr 0xa0ad610 <col:66> 'unsigned long (*)(long, long)' <FunctionToPointerDecay>
                  (DeclRefExpr 0xa0ad5f4 <col:66> 'unsigned long (long, long)' lvalue Function 0xa0ac5d0 'squared_difference' 'unsigned long (long, long)'))
                (ImplicitCastExpr 0xa0ad648 <col:85> 'long' <LValueToRValue>
                  (DeclRefExpr 0xa0ad5c4 <col:85> 'long' lvalue Var 0xa0acbc0 'g' 'long'))
                (ImplicitCastExpr 0xa0ad658 <col:88> 'long' <LValueToRValue>
                  (DeclRefExpr 0xa0ad5dc <col:88> 'long' lvalue Var 0xa0ad220 'test_g' 'long'))))
            (CallExpr 0xa0ad710 <col:98, col:126> 'unsigned long'
              (ImplicitCastExpr 0xa0ad700 <col:98> 'unsigned long (*)(long, long)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa0ad6e4 <col:98> 'unsigned long (long, long)' lvalue Function 0xa0ac5d0 'squared_difference' 'unsigned long (long, long)'))
              (ImplicitCastExpr 0xa0ad738 <col:117> 'long' <LValueToRValue>
                (DeclRefExpr 0xa0ad6b4 <col:117> 'long' lvalue Var 0xa0acc80 'b' 'long'))
              (ImplicitCastExpr 0xa0ad748 <col:120> 'long' <LValueToRValue>
                (DeclRefExpr 0xa0ad6cc <col:120> 'long' lvalue Var 0xa0ad330 'test_b' 'long'))))")
      (IfStmt 0xa0ad8b0 <line:93:9, line:97:9>
        <<<NULL>>>
        (BinaryOperator 0xa0ad7d0 <line:93:13, col:25> '_Bool' '<='
          (ImplicitCastExpr 0xa0ad7b0 <col:13> 'unsigned long' <LValueToRValue>
            (DeclRefExpr 0xa0ad780 <col:13> 'unsigned long' lvalue Var 0xa0ad460 'distance' 'unsigned long'))
          (ImplicitCastExpr 0xa0ad7c0 <col:25> 'unsigned long' <LValueToRValue>
            (DeclRefExpr 0xa0ad798 <col:25> 'unsigned long' lvalue Var 0xa0acd60 'best_distance' 'unsigned long')))
        (CompoundStmt 0xa0ad898 <line:94:9, line:97:9>
          (BinaryOperator 0xa0ad828 <line:95:13, col:26> 'unsigned char' lvalue '='
            (DeclRefExpr 0xa0ad7e8 <col:13> 'unsigned char' lvalue Var 0xa0ace40 'best_index' 'unsigned char')
            (ImplicitCastExpr 0xa0ad818 <col:26> 'unsigned char' <LValueToRValue>
              (DeclRefExpr 0xa0ad800 <col:26> 'unsigned char' lvalue Var 0xa0acf20 'idx' 'unsigned char')))
          (BinaryOperator 0xa0ad880 <line:96:13, col:29> 'unsigned long' lvalue '='
            (DeclRefExpr 0xa0ad840 <col:13> 'unsigned long' lvalue Var 0xa0acd60 'best_distance' 'unsigned long')
            (ImplicitCastExpr 0xa0ad870 <col:29> 'unsigned long' <LValueToRValue>
              (DeclRefExpr 0xa0ad858 <col:29> 'unsigned long' lvalue Var 0xa0ad460 'distance' 'unsigned long'))))
        <<<NULL>>>)))
  (ReturnStmt 0xa0ad940 <line:99:5, col:12>
    (ImplicitCastExpr 0xa0ad930 <col:12> 'unsigned char' <LValueToRValue>
      (DeclRefExpr 0xa0ad914 <col:12> 'unsigned char' lvalue Var 0xa0ace40 'best_index' 'unsigned char'))))


bool try_parse_rgb(const wcstring &name) (CompoundStmt 0xa0b5fe8 <../codeBase/fish-shell-master/color.cpp:104:1, line:149:1>
  (CallExpr 0xa0adb70 <line:105:5, col:29> 'void'
    (ImplicitCastExpr 0xa0adb60 <col:5> 'void (*)(void *, size_t) throw()' <FunctionToPointerDecay>
      (DeclRefExpr 0xa0adb48 <col:5> 'void (void *, size_t) throw()' lvalue Function 0xa038810 'bzero' 'void (void *, size_t) throw()'))
    (ImplicitCastExpr 0xa0adb98 <col:11, col:12> 'void *' <BitCast>
      (UnaryOperator 0xa0adae8 <col:11, col:12> 'union <anonymous union at ../codeBase/fish-shell-master/color.h:36:5> *' prefix '&'
        (MemberExpr 0xa0adac8 <col:12> 'union <anonymous union at ../codeBase/fish-shell-master/color.h:36:5>':'union rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:36:5>' lvalue ->data 0xa073740
          (CXXThisExpr 0xa0adab8 <col:12> 'class rgb_color_t *' this))))
    (UnaryExprOrTypeTraitExpr 0xa0adb30 <col:18, col:25> 'unsigned int' sizeof 
      (MemberExpr 0xa0adb10 <col:25> 'union <anonymous union at ../codeBase/fish-shell-master/color.h:36:5>':'union rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:36:5>' lvalue ->data 0xa073740
        (CXXThisExpr 0xa0adb00 <col:25> 'class rgb_color_t *' this))))
  (DeclStmt 0xa0adcb8 <line:113:5, col:44>
    0xa0adbb0 "size_t digit_idx =
      (ImplicitCastExpr 0xa0adc00 <col:24> 'size_t':'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa0adbe8 <col:24> 'int' 0))"
    0xa0adc20 "size_t len =
      (CXXMemberCallExpr 0xa0adc90 <col:33, col:43> 'size_type':'unsigned int'
        (MemberExpr 0xa0adc6c <col:33, col:38> '<bound member function type>' .size 0x9dc7be0
          (DeclRefExpr 0xa0adc54 <col:33> 'const wcstring':'const class std::basic_string<wchar_t>' lvalue ParmVar 0xa0ad9a0 'name' 'const wcstring &')))")
  (IfStmt 0xa0ade78 <line:116:5, line:117:18>
    <<<NULL>>>
    (BinaryOperator 0xa0ade30 <line:116:9, col:34> '_Bool' '&&'
      (BinaryOperator 0xa0add18 <col:9, col:15> '_Bool' '>'
        (ImplicitCastExpr 0xa0adcf8 <col:9> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa0adcc8 <col:9> 'size_t':'unsigned int' lvalue Var 0xa0adc20 'len' 'size_t':'unsigned int'))
        (ImplicitCastExpr 0xa0add08 <col:15> 'unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0adce0 <col:15> 'int' 0)))
      (BinaryOperator 0xa0ade18 <col:20, col:34> '_Bool' '=='
        (ImplicitCastExpr 0xa0ade08 <col:20, col:29> 'wchar_t':'wchar_t' <LValueToRValue>
          (CXXMemberCallExpr 0xa0addc0 <col:20, col:29> 'const wchar_t':'const wchar_t' lvalue
            (MemberExpr 0xa0adda0 <col:20, col:25> '<bound member function type>' .at 0x9dc9190
              (DeclRefExpr 0xa0add30 <col:20> 'const wcstring':'const class std::basic_string<wchar_t>' lvalue ParmVar 0xa0ad9a0 'name' 'const wcstring &'))
            (ImplicitCastExpr 0xa0adde0 <col:28> 'size_type':'unsigned int' <IntegralCast>
              (IntegerLiteral 0xa0add88 <col:28> 'int' 0))))
        (CharacterLiteral 0xa0addf0 <col:34> 'wchar_t'35)))
    (UnaryOperator 0xa0ade60 <line:117:9, col:18> 'size_t':'unsigned int' postfix '++'
      (DeclRefExpr 0xa0ade48 <col:9> 'size_t':'unsigned int' lvalue Var 0xa0adbb0 'digit_idx' 'size_t':'unsigned int'))
    <<<NULL>>>)
  (DeclStmt 0xa0adee8 <line:119:5, col:25>
    0xa0adea0 "bool success =
      (CXXBoolLiteralExpr 0xa0aded8 <col:20> '_Bool' false)")
  (DeclStmt 0xa0adf38 <line:120:5, col:13>
    0xa0adf00 "size_t i")
  (IfStmt 0xa0b5ec0 <line:121:5, line:143:5>
    <<<NULL>>>
    (BinaryOperator 0xa0adfd8 <line:121:9, col:28> '_Bool' '=='
      (BinaryOperator 0xa0adf98 <col:9, col:15> 'unsigned int' '-'
        (ImplicitCastExpr 0xa0adf78 <col:9> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa0adf48 <col:9> 'size_t':'unsigned int' lvalue Var 0xa0adc20 'len' 'size_t':'unsigned int'))
        (ImplicitCastExpr 0xa0adf88 <col:15> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa0adf60 <col:15> 'size_t':'unsigned int' lvalue Var 0xa0adbb0 'digit_idx' 'size_t':'unsigned int')))
      (ImplicitCastExpr 0xa0adfc8 <col:28> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa0adfb0 <col:28> 'int' 3)))
    (CompoundStmt 0xa0b5630 <line:122:5, line:131:5>
      (ForStmt 0xa0b5558 <line:124:9, line:129:9>
        (BinaryOperator 0xa0ae030 <line:124:14, col:16> 'size_t':'unsigned int' lvalue '='
          (DeclRefExpr 0xa0adff0 <col:14> 'size_t':'unsigned int' lvalue Var 0xa0adf00 'i' 'size_t':'unsigned int')
          (ImplicitCastExpr 0xa0ae020 <col:16> 'size_t':'unsigned int' <IntegralCast>
            (IntegerLiteral 0xa0ae008 <col:16> 'int' 0)))
        <<<NULL>>>
        (BinaryOperator 0xa0ae098 <col:19, col:23> '_Bool' '<'
          (ImplicitCastExpr 0xa0ae078 <col:19> 'size_t':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0xa0ae048 <col:19> 'size_t':'unsigned int' lvalue Var 0xa0adf00 'i' 'size_t':'unsigned int'))
          (ImplicitCastExpr 0xa0ae088 <col:23> 'unsigned int' <IntegralCast>
            (IntegerLiteral 0xa0ae060 <col:23> 'int' 3)))
        (UnaryOperator 0xa0b5178 <col:26, col:27> 'size_t':'unsigned int' postfix '++'
          (DeclRefExpr 0xa0b5160 <col:26> 'size_t':'unsigned int' lvalue Var 0xa0adf00 'i' 'size_t':'unsigned int'))
        (CompoundStmt 0xa0b5538 <line:125:9, line:129:9>
          (DeclStmt 0xa0b5348 <line:126:13, col:60>
            0xa0b51a0 "int val =
              (CallExpr 0xa0b5318 <col:23, col:59> 'int'
                (ImplicitCastExpr 0xa0b5308 <col:23> 'int (*)(wchar_t)' <FunctionToPointerDecay>
                  (DeclRefExpr 0xa0b52d8 <col:23> 'int (wchar_t)' lvalue Function 0xa0abc20 'parse_hex_digit' 'int (wchar_t)'))
                (ImplicitCastExpr 0xa0b5338 <col:39, col:58> 'wchar_t':'wchar_t' <LValueToRValue>
                  (CXXMemberCallExpr 0xa0b52b8 <col:39, col:58> 'const wchar_t':'const wchar_t' lvalue
                    (MemberExpr 0xa0b5294 <col:39, col:44> '<bound member function type>' .at 0x9dc9190
                      (DeclRefExpr 0xa0b520c <col:39> 'const wcstring':'const class std::basic_string<wchar_t>' lvalue ParmVar 0xa0ad9a0 'name' 'const wcstring &'))
                    (UnaryOperator 0xa0b5280 <col:47, col:56> 'size_t':'unsigned int' postfix '++'
                      (DeclRefExpr 0xa0b5264 <col:47> 'size_t':'unsigned int' lvalue Var 0xa0adbb0 'digit_idx' 'size_t':'unsigned int')))))")
          (IfStmt 0xa0b53b8 <line:127:13, col:26>
            <<<NULL>>>
            (BinaryOperator 0xa0b5398 <col:17, col:23> '_Bool' '<'
              (ImplicitCastExpr 0xa0b5388 <col:17> 'int' <LValueToRValue>
                (DeclRefExpr 0xa0b5358 <col:17> 'int' lvalue Var 0xa0b51a0 'val' 'int'))
              (IntegerLiteral 0xa0b5370 <col:23> 'int' 0))
            (BreakStmt 0xa0b53b0 <col:26>)
            <<<NULL>>>)
          (BinaryOperator 0xa0b5520 <line:128:13, col:34> 'unsigned char' lvalue '='
            (ArraySubscriptExpr 0xa0b5460 <col:13, col:23> 'unsigned char' lvalue
              (ImplicitCastExpr 0xa0b5440 <col:13, col:18> 'unsigned char *' <ArrayToPointerDecay>
                (MemberExpr 0xa0b5408 <col:13, col:18> 'unsigned char [3]' lvalue .rgb 0xa0736e0
                  (MemberExpr 0xa0b53e8 <col:13> 'union <anonymous union at ../codeBase/fish-shell-master/color.h:36:5>':'union rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:36:5>' lvalue ->data 0xa073740
                    (CXXThisExpr 0xa0b53d8 <col:13> 'class rgb_color_t *' this))))
              (ImplicitCastExpr 0xa0b5450 <col:22> 'size_t':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0xa0b5428 <col:22> 'size_t':'unsigned int' lvalue Var 0xa0adf00 'i' 'size_t':'unsigned int')))
            (ImplicitCastExpr 0xa0b5510 <col:27, col:34> 'unsigned char' <IntegralCast>
              (BinaryOperator 0xa0b54f8 <col:27, col:34> 'int' '+'
                (BinaryOperator 0xa0b54b8 <col:27, col:31> 'int' '*'
                  (ImplicitCastExpr 0xa0b54a8 <col:27> 'int' <LValueToRValue>
                    (DeclRefExpr 0xa0b5474 <col:27> 'int' lvalue Var 0xa0b51a0 'val' 'int'))
                  (IntegerLiteral 0xa0b5490 <col:31> 'int' 16))
                (ImplicitCastExpr 0xa0b54e8 <col:34> 'int' <LValueToRValue>
                  (DeclRefExpr 0xa0b54d0 <col:34> 'int' lvalue Var 0xa0b51a0 'val' 'int')))))))
      (BinaryOperator 0xa0b5618 <line:130:9, col:26> '_Bool' lvalue '='
        (DeclRefExpr 0xa0b557c <col:9> '_Bool' lvalue Var 0xa0adea0 'success' '_Bool')
        (ParenExpr 0xa0b5600 <col:19, col:26> '_Bool'
          (BinaryOperator 0xa0b55e8 <col:20, col:25> '_Bool' '=='
            (ImplicitCastExpr 0xa0b55c8 <col:20> 'size_t':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0xa0b5594 <col:20> 'size_t':'unsigned int' lvalue Var 0xa0adf00 'i' 'size_t':'unsigned int'))
            (ImplicitCastExpr 0xa0b55d8 <col:25> 'unsigned int' <IntegralCast>
              (IntegerLiteral 0xa0b55b0 <col:25> 'int' 3))))))
    (IfStmt 0xa0b5ea0 <line:132:10, line:143:5>
      <<<NULL>>>
      (BinaryOperator 0xa0b56d8 <line:132:14, col:33> '_Bool' '=='
        (BinaryOperator 0xa0b5698 <col:14, col:20> 'unsigned int' '-'
          (ImplicitCastExpr 0xa0b5678 <col:14> 'size_t':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0xa0b5648 <col:14> 'size_t':'unsigned int' lvalue Var 0xa0adc20 'len' 'size_t':'unsigned int'))
          (ImplicitCastExpr 0xa0b5688 <col:20> 'size_t':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0xa0b5660 <col:20> 'size_t':'unsigned int' lvalue Var 0xa0adbb0 'digit_idx' 'size_t':'unsigned int')))
        (ImplicitCastExpr 0xa0b56c8 <col:33> 'unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0b56b0 <col:33> 'int' 6)))
      (CompoundStmt 0xa0b5e88 <line:133:5, line:143:5>
        (ForStmt 0xa0b5db0 <line:135:9, line:141:9>
          (BinaryOperator 0xa0b5730 <line:135:14, col:16> 'size_t':'unsigned int' lvalue '='
            (DeclRefExpr 0xa0b56f0 <col:14> 'size_t':'unsigned int' lvalue Var 0xa0adf00 'i' 'size_t':'unsigned int')
            (ImplicitCastExpr 0xa0b5720 <col:16> 'size_t':'unsigned int' <IntegralCast>
              (IntegerLiteral 0xa0b5708 <col:16> 'int' 0)))
          <<<NULL>>>
          (BinaryOperator 0xa0b5798 <col:19, col:23> '_Bool' '<'
            (ImplicitCastExpr 0xa0b5778 <col:19> 'size_t':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0xa0b5748 <col:19> 'size_t':'unsigned int' lvalue Var 0xa0adf00 'i' 'size_t':'unsigned int'))
            (ImplicitCastExpr 0xa0b5788 <col:23> 'unsigned int' <IntegralCast>
              (IntegerLiteral 0xa0b5760 <col:23> 'int' 3)))
          (UnaryOperator 0xa0b57c8 <col:26, col:27> 'size_t':'unsigned int' postfix '++'
            (DeclRefExpr 0xa0b57b0 <col:26> 'size_t':'unsigned int' lvalue Var 0xa0adf00 'i' 'size_t':'unsigned int'))
          (CompoundStmt 0xa0b5d90 <line:136:9, line:141:9>
            (DeclStmt 0xa0b5980 <line:137:13, col:59>
              0xa0b57f0 "int hi =
                (CallExpr 0xa0b5950 <col:22, col:58> 'int'
                  (ImplicitCastExpr 0xa0b5940 <col:22> 'int (*)(wchar_t)' <FunctionToPointerDecay>
                    (DeclRefExpr 0xa0b5928 <col:22> 'int (wchar_t)' lvalue Function 0xa0abc20 'parse_hex_digit' 'int (wchar_t)'))
                  (ImplicitCastExpr 0xa0b5970 <col:38, col:57> 'wchar_t':'wchar_t' <LValueToRValue>
                    (CXXMemberCallExpr 0xa0b5908 <col:38, col:57> 'const wchar_t':'const wchar_t' lvalue
                      (MemberExpr 0xa0b58e4 <col:38, col:43> '<bound member function type>' .at 0x9dc9190
                        (DeclRefExpr 0xa0b585c <col:38> 'const wcstring':'const class std::basic_string<wchar_t>' lvalue ParmVar 0xa0ad9a0 'name' 'const wcstring &'))
                      (UnaryOperator 0xa0b58d0 <col:46, col:55> 'size_t':'unsigned int' postfix '++'
                        (DeclRefExpr 0xa0b58b4 <col:46> 'size_t':'unsigned int' lvalue Var 0xa0adbb0 'digit_idx' 'size_t':'unsigned int')))))")
            (DeclStmt 0xa0b5b30 <line:138:13, col:59>
              0xa0b59a0 "int lo =
                (CallExpr 0xa0b5b00 <col:22, col:58> 'int'
                  (ImplicitCastExpr 0xa0b5af0 <col:22> 'int (*)(wchar_t)' <FunctionToPointerDecay>
                    (DeclRefExpr 0xa0b5ad8 <col:22> 'int (wchar_t)' lvalue Function 0xa0abc20 'parse_hex_digit' 'int (wchar_t)'))
                  (ImplicitCastExpr 0xa0b5b20 <col:38, col:57> 'wchar_t':'wchar_t' <LValueToRValue>
                    (CXXMemberCallExpr 0xa0b5ab8 <col:38, col:57> 'const wchar_t':'const wchar_t' lvalue
                      (MemberExpr 0xa0b5a94 <col:38, col:43> '<bound member function type>' .at 0x9dc9190
                        (DeclRefExpr 0xa0b5a0c <col:38> 'const wcstring':'const class std::basic_string<wchar_t>' lvalue ParmVar 0xa0ad9a0 'name' 'const wcstring &'))
                      (UnaryOperator 0xa0b5a80 <col:46, col:55> 'size_t':'unsigned int' postfix '++'
                        (DeclRefExpr 0xa0b5a64 <col:46> 'size_t':'unsigned int' lvalue Var 0xa0adbb0 'digit_idx' 'size_t':'unsigned int')))))")
            (IfStmt 0xa0b5c10 <line:139:13, col:35>
              <<<NULL>>>
              (BinaryOperator 0xa0b5bf0 <col:17, col:32> '_Bool' '||'
                (BinaryOperator 0xa0b5b80 <col:17, col:22> '_Bool' '<'
                  (ImplicitCastExpr 0xa0b5b70 <col:17> 'int' <LValueToRValue>
                    (DeclRefExpr 0xa0b5b40 <col:17> 'int' lvalue Var 0xa0b59a0 'lo' 'int'))
                  (IntegerLiteral 0xa0b5b58 <col:22> 'int' 0))
                (BinaryOperator 0xa0b5bd8 <col:27, col:32> '_Bool' '<'
                  (ImplicitCastExpr 0xa0b5bc8 <col:27> 'int' <LValueToRValue>
                    (DeclRefExpr 0xa0b5b98 <col:27> 'int' lvalue Var 0xa0b57f0 'hi' 'int'))
                  (IntegerLiteral 0xa0b5bb0 <col:32> 'int' 0)))
              (BreakStmt 0xa0b5c08 <col:35>)
              <<<NULL>>>)
            (BinaryOperator 0xa0b5d78 <line:140:13, col:33> 'unsigned char' lvalue '='
              (ArraySubscriptExpr 0xa0b5cb8 <col:13, col:23> 'unsigned char' lvalue
                (ImplicitCastExpr 0xa0b5c98 <col:13, col:18> 'unsigned char *' <ArrayToPointerDecay>
                  (MemberExpr 0xa0b5c60 <col:13, col:18> 'unsigned char [3]' lvalue .rgb 0xa0736e0
                    (MemberExpr 0xa0b5c40 <col:13> 'union <anonymous union at ../codeBase/fish-shell-master/color.h:36:5>':'union rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:36:5>' lvalue ->data 0xa073740
                      (CXXThisExpr 0xa0b5c30 <col:13> 'class rgb_color_t *' this))))
                (ImplicitCastExpr 0xa0b5ca8 <col:22> 'size_t':'unsigned int' <LValueToRValue>
                  (DeclRefExpr 0xa0b5c80 <col:22> 'size_t':'unsigned int' lvalue Var 0xa0adf00 'i' 'size_t':'unsigned int')))
              (ImplicitCastExpr 0xa0b5d68 <col:27, col:33> 'unsigned char' <IntegralCast>
                (BinaryOperator 0xa0b5d50 <col:27, col:33> 'int' '+'
                  (BinaryOperator 0xa0b5d10 <col:27, col:30> 'int' '*'
                    (ImplicitCastExpr 0xa0b5d00 <col:27> 'int' <LValueToRValue>
                      (DeclRefExpr 0xa0b5ccc <col:27> 'int' lvalue Var 0xa0b57f0 'hi' 'int'))
                    (IntegerLiteral 0xa0b5ce8 <col:30> 'int' 16))
                  (ImplicitCastExpr 0xa0b5d40 <col:33> 'int' <LValueToRValue>
                    (DeclRefExpr 0xa0b5d28 <col:33> 'int' lvalue Var 0xa0b59a0 'lo' 'int')))))))
        (BinaryOperator 0xa0b5e70 <line:142:9, col:26> '_Bool' lvalue '='
          (DeclRefExpr 0xa0b5dd4 <col:9> '_Bool' lvalue Var 0xa0adea0 'success' '_Bool')
          (ParenExpr 0xa0b5e58 <col:19, col:26> '_Bool'
            (BinaryOperator 0xa0b5e40 <col:20, col:25> '_Bool' '=='
              (ImplicitCastExpr 0xa0b5e20 <col:20> 'size_t':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0xa0b5dec <col:20> 'size_t':'unsigned int' lvalue Var 0xa0adf00 'i' 'size_t':'unsigned int'))
              (ImplicitCastExpr 0xa0b5e30 <col:25> 'unsigned int' <IntegralCast>
                (IntegerLiteral 0xa0b5e08 <col:25> 'int' 3))))))
      <<<NULL>>>))
  (IfStmt 0xa0b5f90 <line:144:5, line:147:5>
    <<<NULL>>>
    (ImplicitCastExpr 0xa0b5ef8 <line:144:9> '_Bool' <LValueToRValue>
      (DeclRefExpr 0xa0b5edc <col:9> '_Bool' lvalue Var 0xa0adea0 'success' '_Bool'))
    (CompoundStmt 0xa0b5f78 <line:145:5, line:147:5>
      (BinaryOperator 0xa0b5f60 <line:146:9, col:22> 'unsigned char' lvalue bitfield '='
        (MemberExpr 0xa0b5f18 <col:9, col:15> 'unsigned char' lvalue bitfield ->type 0xa073360
          (CXXThisExpr 0xa0b5f08 <col:9> 'class rgb_color_t *' this))
        (ImplicitCastExpr 0xa0b5f50 <col:22> 'unsigned char' <IntegralCast>
          (DeclRefExpr 0xa0b5f38 <col:22> 'enum rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:17:5>' EnumConstant 0xa073240 'type_rgb' 'enum rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:17:5>'))))
    <<<NULL>>>)
  (ReturnStmt 0xa0b5fd8 <line:148:5, col:12>
    (ImplicitCastExpr 0xa0b5fc8 <col:12> '_Bool' <LValueToRValue>
      (DeclRefExpr 0xa0b5fac <col:12> '_Bool' lvalue Var 0xa0adea0 'success' '_Bool'))))


struct named_color_t {
    struct named_color_t;
    const wchar_t *name;
    unsigned char idx;
    unsigned char rgb[3];
};
static const named_color_t named_colors[11] = (InitListExpr 0xa0b6f98 <../codeBase/fish-shell-master/color.cpp:159:1, line:171:1> 'const struct named_color_t [11]'
  (InitListExpr 0xa0b6ff0 <line:160:5, col:28> 'const struct named_color_t'
    (ImplicitCastExpr 0xa0b7028 <col:6> 'const wchar_t *' <ArrayToPointerDecay>
      (StringLiteral 0xa0b6374 <col:6> 'const wchar_t [6]' lvalue L"b\000\000\000l\000\000\000a\000\000\000c\000\000\000k\000\000\000"))
    (ImplicitCastExpr 0xa0b7038 <col:16> 'unsigned char' <IntegralCast>
      (IntegerLiteral 0xa0b63a8 <col:16> 'int' 0))
    (InitListExpr 0xa0b7048 <col:19, col:27> 'unsigned char [3]'
      (ImplicitCastExpr 0xa0b7080 <col:20> 'unsigned char' <IntegralCast>
        (IntegerLiteral 0xa0b63c0 <col:20> 'int' 0))
      (ImplicitCastExpr 0xa0b7090 <col:23> 'unsigned char' <IntegralCast>
        (IntegerLiteral 0xa0b63d8 <col:23> 'int' 0))
      (ImplicitCastExpr 0xa0b70a0 <col:26> 'unsigned char' <IntegralCast>
        (IntegerLiteral 0xa0b63f0 <col:26> 'int' 0))))
  (InitListExpr 0xa0b70b0 <line:161:5, col:29> 'const struct named_color_t'
    (ImplicitCastExpr 0xa0b70e8 <col:6> 'const wchar_t *' <ArrayToPointerDecay>
      (StringLiteral 0xa0b64c0 <col:6> 'const wchar_t [4]' lvalue L"r\000\000\000e\000\000\000d\000\000\000"))
    (ImplicitCastExpr 0xa0b70f8 <col:14> 'unsigned char' <IntegralCast>
      (IntegerLiteral 0xa0b64e8 <col:14> 'int' 1))
    (InitListExpr 0xa0b7108 <col:17, col:28> 'unsigned char [3]'
      (ImplicitCastExpr 0xa0b7140 <col:18> 'unsigned char' <IntegralCast>
        (IntegerLiteral 0xa0b6500 <col:18> 'int' 255))
      (ImplicitCastExpr 0xa0b7150 <col:24> 'unsigned char' <IntegralCast>
        (IntegerLiteral 0xa0b6518 <col:24> 'int' 0))
      (ImplicitCastExpr 0xa0b7160 <col:27> 'unsigned char' <IntegralCast>
        (IntegerLiteral 0xa0b6530 <col:27> 'int' 0))))
  (InitListExpr 0xa0b7170 <line:162:5, col:31> 'const struct named_color_t'
    (ImplicitCastExpr 0xa0b71a8 <col:6> 'const wchar_t *' <ArrayToPointerDecay>
      (StringLiteral 0xa0b65b4 <col:6> 'const wchar_t [6]' lvalue L"g\000\000\000r\000\000\000e\000\000\000e\000\000\000n\000\000\000"))
    (ImplicitCastExpr 0xa0b71b8 <col:16> 'unsigned char' <IntegralCast>
      (IntegerLiteral 0xa0b65e8 <col:16> 'int' 2))
    (InitListExpr 0xa0b71c8 <col:19, col:30> 'unsigned char [3]'
      (ImplicitCastExpr 0xa0b7200 <col:20> 'unsigned char' <IntegralCast>
        (IntegerLiteral 0xa0b6600 <col:20> 'int' 0))
      (ImplicitCastExpr 0xa0b7210 <col:23> 'unsigned char' <IntegralCast>
        (IntegerLiteral 0xa0b6618 <col:23> 'int' 255))
      (ImplicitCastExpr 0xa0b7220 <col:29> 'unsigned char' <IntegralCast>
        (IntegerLiteral 0xa0b6630 <col:29> 'int' 0))))
  (InitListExpr 0xa0b7230 <line:163:5, col:34> 'const struct named_color_t'
    (ImplicitCastExpr 0xa0b7268 <col:6> 'const wchar_t *' <ArrayToPointerDecay>
      (StringLiteral 0xa0b66b4 <col:6> 'const wchar_t [6]' lvalue L"b\000\000\000r\000\000\000o\000\000\000w\000\000\000n\000\000\000"))
    (ImplicitCastExpr 0xa0b7278 <col:16> 'unsigned char' <IntegralCast>
      (IntegerLiteral 0xa0b66e8 <col:16> 'int' 3))
    (InitListExpr 0xa0b7288 <col:19, col:33> 'unsigned char [3]'
      (ImplicitCastExpr 0xa0b72c0 <col:20> 'unsigned char' <IntegralCast>
        (IntegerLiteral 0xa0b6700 <col:20> 'int' 114))
      (ImplicitCastExpr 0xa0b72d0 <col:26> 'unsigned char' <IntegralCast>
        (IntegerLiteral 0xa0b6718 <col:26> 'int' 80))
      (ImplicitCastExpr 0xa0b72e0 <col:32> 'unsigned char' <IntegralCast>
        (IntegerLiteral 0xa0b6730 <col:32> 'int' 0))))
  (InitListExpr 0xa0b72f0 <line:164:5, col:35> 'const struct named_color_t'
    (ImplicitCastExpr 0xa0b7328 <col:6> 'const wchar_t *' <ArrayToPointerDecay>
      (StringLiteral 0xa0b67b4 <col:6> 'const wchar_t [7]' lvalue L"y\000\000\000e\000\000\000l\000\000\000l\000\000\000o\000\000\000w\000\000\000"))
    (ImplicitCastExpr 0xa0b7338 <col:17> 'unsigned char' <IntegralCast>
      (IntegerLiteral 0xa0b67e8 <col:17> 'int' 3))
    (InitListExpr 0xa0b7348 <col:20, col:34> 'unsigned char [3]'
      (ImplicitCastExpr 0xa0b7380 <col:21> 'unsigned char' <IntegralCast>
        (IntegerLiteral 0xa0b6800 <col:21> 'int' 255))
      (ImplicitCastExpr 0xa0b7390 <col:27> 'unsigned char' <IntegralCast>
        (IntegerLiteral 0xa0b6818 <col:27> 'int' 255))
      (ImplicitCastExpr 0xa0b73a0 <col:33> 'unsigned char' <IntegralCast>
        (IntegerLiteral 0xa0b6830 <col:33> 'int' 0))))
  (InitListExpr 0xa0b73b0 <line:165:5, col:30> 'const struct named_color_t'
    (ImplicitCastExpr 0xa0b73e8 <col:6> 'const wchar_t *' <ArrayToPointerDecay>
      (StringLiteral 0xa0b6900 <col:6> 'const wchar_t [5]' lvalue L"b\000\000\000l\000\000\000u\000\000\000e\000\000\000"))
    (ImplicitCastExpr 0xa0b73f8 <col:15> 'unsigned char' <IntegralCast>
      (IntegerLiteral 0xa0b6930 <col:15> 'int' 4))
    (InitListExpr 0xa0b7408 <col:18, col:29> 'unsigned char [3]'
      (ImplicitCastExpr 0xa0b7440 <col:19> 'unsigned char' <IntegralCast>
        (IntegerLiteral 0xa0b6948 <col:19> 'int' 0))
      (ImplicitCastExpr 0xa0b7450 <col:22> 'unsigned char' <IntegralCast>
        (IntegerLiteral 0xa0b6960 <col:22> 'int' 0))
      (ImplicitCastExpr 0xa0b7460 <col:25> 'unsigned char' <IntegralCast>
        (IntegerLiteral 0xa0b6978 <col:25> 'int' 255))))
  (InitListExpr 0xa0b7470 <line:166:5, col:36> 'const struct named_color_t'
    (ImplicitCastExpr 0xa0b74a8 <col:6> 'const wchar_t *' <ArrayToPointerDecay>
      (StringLiteral 0xa0b6a40 <col:6> 'const wchar_t [8]' lvalue L"m\000\000\000a\000\000\000g\000\000\000e\000\000\000n\000\000\000t\000\000\000a\000\000\000"))
    (ImplicitCastExpr 0xa0b74b8 <col:18> 'unsigned char' <IntegralCast>
      (IntegerLiteral 0xa0b6a78 <col:18> 'int' 5))
    (InitListExpr 0xa0b74c8 <col:21, col:35> 'unsigned char [3]'
      (ImplicitCastExpr 0xa0b7500 <col:22> 'unsigned char' <IntegralCast>
        (IntegerLiteral 0xa0b6a90 <col:22> 'int' 255))
      (ImplicitCastExpr 0xa0b7510 <col:28> 'unsigned char' <IntegralCast>
        (IntegerLiteral 0xa0b6aa8 <col:28> 'int' 0))
      (ImplicitCastExpr 0xa0b7520 <col:31> 'unsigned char' <IntegralCast>
        (IntegerLiteral 0xa0b6ac0 <col:31> 'int' 255))))
  (InitListExpr 0xa0b7530 <line:167:5, col:35> 'const struct named_color_t'
    (ImplicitCastExpr 0xa0b7568 <col:6> 'const wchar_t *' <ArrayToPointerDecay>
      (StringLiteral 0xa0b6b44 <col:6> 'const wchar_t [7]' lvalue L"p\000\000\000u\000\000\000r\000\000\000p\000\000\000l\000\000\000e\000\000\000"))
    (ImplicitCastExpr 0xa0b7578 <col:17> 'unsigned char' <IntegralCast>
      (IntegerLiteral 0xa0b6b78 <col:17> 'int' 5))
    (InitListExpr 0xa0b7588 <col:20, col:34> 'unsigned char [3]'
      (ImplicitCastExpr 0xa0b75c0 <col:21> 'unsigned char' <IntegralCast>
        (IntegerLiteral 0xa0b6b90 <col:21> 'int' 255))
      (ImplicitCastExpr 0xa0b75d0 <col:27> 'unsigned char' <IntegralCast>
        (IntegerLiteral 0xa0b6ba8 <col:27> 'int' 0))
      (ImplicitCastExpr 0xa0b75e0 <col:30> 'unsigned char' <IntegralCast>
        (IntegerLiteral 0xa0b6bc0 <col:30> 'int' 255))))
  (InitListExpr 0xa0b75f0 <line:168:5, col:33> 'const struct named_color_t'
    (ImplicitCastExpr 0xa0b7628 <col:6> 'const wchar_t *' <ArrayToPointerDecay>
      (StringLiteral 0xa0b6c44 <col:6> 'const wchar_t [5]' lvalue L"c\000\000\000y\000\000\000a\000\000\000n\000\000\000"))
    (ImplicitCastExpr 0xa0b7638 <col:15> 'unsigned char' <IntegralCast>
      (IntegerLiteral 0xa0b6c70 <col:15> 'int' 6))
    (InitListExpr 0xa0b7648 <col:18, col:32> 'unsigned char [3]'
      (ImplicitCastExpr 0xa0b7680 <col:19> 'unsigned char' <IntegralCast>
        (IntegerLiteral 0xa0b6c88 <col:19> 'int' 0))
      (ImplicitCastExpr 0xa0b7690 <col:22> 'unsigned char' <IntegralCast>
        (IntegerLiteral 0xa0b6ca0 <col:22> 'int' 255))
      (ImplicitCastExpr 0xa0b76a0 <col:28> 'unsigned char' <IntegralCast>
        (IntegerLiteral 0xa0b6cb8 <col:28> 'int' 255))))
  (InitListExpr 0xa0b76b0 <line:169:5, col:37> 'const struct named_color_t'
    (ImplicitCastExpr 0xa0b76e8 <col:6> 'const wchar_t *' <ArrayToPointerDecay>
      (StringLiteral 0xa0b6d3c <col:6> 'const wchar_t [6]' lvalue L"w\000\000\000h\000\000\000i\000\000\000t\000\000\000e\000\000\000"))
    (ImplicitCastExpr 0xa0b76f8 <col:16> 'unsigned char' <IntegralCast>
      (IntegerLiteral 0xa0b6d70 <col:16> 'int' 7))
    (InitListExpr 0xa0b7708 <col:19, col:36> 'unsigned char [3]'
      (ImplicitCastExpr 0xa0b7740 <col:20> 'unsigned char' <IntegralCast>
        (IntegerLiteral 0xa0b6d88 <col:20> 'int' 255))
      (ImplicitCastExpr 0xa0b7750 <col:26> 'unsigned char' <IntegralCast>
        (IntegerLiteral 0xa0b6da0 <col:26> 'int' 255))
      (ImplicitCastExpr 0xa0b7760 <col:32> 'unsigned char' <IntegralCast>
        (IntegerLiteral 0xa0b6db8 <col:32> 'int' 255))))
  (InitListExpr 0xa0b7770 <line:170:5, col:38> 'const struct named_color_t'
    (ImplicitCastExpr 0xa0b77a8 <col:6> 'const wchar_t *' <ArrayToPointerDecay>
      (StringLiteral 0xa0b6e3c <col:6> 'const wchar_t [7]' lvalue L"n\000\000\000o\000\000\000r\000\000\000m\000\000\000a\000\000\000l\000\000\000"))
    (ImplicitCastExpr 0xa0b77b8 <col:17> 'unsigned char' <IntegralCast>
      (IntegerLiteral 0xa0b6e70 <col:17> 'int' 8))
    (InitListExpr 0xa0b77c8 <col:20, col:37> 'unsigned char [3]'
      (ImplicitCastExpr 0xa0b7800 <col:21> 'unsigned char' <IntegralCast>
        (IntegerLiteral 0xa0b6e88 <col:21> 'int' 255))
      (ImplicitCastExpr 0xa0b7810 <col:27> 'unsigned char' <IntegralCast>
        (IntegerLiteral 0xa0b6ea0 <col:27> 'int' 255))
      (ImplicitCastExpr 0xa0b7820 <col:33> 'unsigned char' <IntegralCast>
        (IntegerLiteral 0xa0b6eb8 <col:33> 'int' 255)))))
;
static wcstring_list_t named_color_names() (CompoundStmt 0xa0c9628 <../codeBase/fish-shell-master/color.cpp:174:1, line:183:1>
  (DeclStmt 0xa0c9140 <line:175:5, col:62>
    0xa0c9050 "size_t count =
      (BinaryOperator 0xa0c9128 <col:20, col:50> 'unsigned int' '/'
        (UnaryExprOrTypeTraitExpr 0xa0c90a0 <col:20, col:27> 'unsigned int' sizeof 
          (DeclRefExpr 0xa0c9084 <col:27> 'const struct named_color_t [11]' lvalue Var 0xa0b6340 'named_colors' 'const struct named_color_t [11]'))
        (UnaryExprOrTypeTraitExpr 0xa0c9110 <col:42, col:50> 'unsigned int' sizeof 
          (UnaryOperator 0xa0c90f8 <col:49, col:50> 'const struct named_color_t' lvalue prefix '*'
            (ImplicitCastExpr 0xa0c90e8 <col:50> 'const struct named_color_t *' <ArrayToPointerDecay>
              (DeclRefExpr 0xa0c90b8 <col:50> 'const struct named_color_t [11]' lvalue Var 0xa0b6340 'named_colors' 'const struct named_color_t [11]')))))")
  (DeclStmt 0xa0c91b8 <line:176:5, col:27>
    0xa0c9160 "wcstring_list_t result =
      (CXXConstructExpr 0xa0c9198 <col:21> 'wcstring_list_t':'class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > >''void (void)')")
  (CXXMemberCallExpr 0xa0c9218 <line:177:5, col:25> 'void'
    (MemberExpr 0xa0c91e0 <col:5, col:12> '<bound member function type>' .reserve 0xa0c17e0
      (DeclRefExpr 0xa0c91c8 <col:5> 'wcstring_list_t':'class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > >' lvalue Var 0xa0c9160 'result' 'wcstring_list_t':'class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > >'))
    (ImplicitCastExpr 0xa0c9258 <col:20> 'size_t':'unsigned int' <LValueToRValue>
      (DeclRefExpr 0xa0c9200 <col:20> 'size_t':'unsigned int' lvalue Var 0xa0c9050 'count' 'size_t':'unsigned int')))
  (ForStmt 0xa0c95a0 <line:178:5, line:181:5>
    (DeclStmt 0xa0c92d0 <line:178:10, col:20>
      0xa0c9270 "size_t i =
        (ImplicitCastExpr 0xa0c92c0 <col:19> 'size_t':'unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0c92a8 <col:19> 'int' 0))")
    <<<NULL>>>
    (BinaryOperator 0xa0c9330 <col:22, col:26> '_Bool' '<'
      (ImplicitCastExpr 0xa0c9310 <col:22> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa0c92e0 <col:22> 'size_t':'unsigned int' lvalue Var 0xa0c9270 'i' 'size_t':'unsigned int'))
      (ImplicitCastExpr 0xa0c9320 <col:26> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa0c92f8 <col:26> 'size_t':'unsigned int' lvalue Var 0xa0c9050 'count' 'size_t':'unsigned int')))
    (UnaryOperator 0xa0c9360 <col:33, col:34> 'size_t':'unsigned int' postfix '++'
      (DeclRefExpr 0xa0c9348 <col:33> 'size_t':'unsigned int' lvalue Var 0xa0c9270 'i' 'size_t':'unsigned int'))
    (CompoundStmt 0xa0c9588 <line:179:5, line:181:5>
      (ExprWithCleanups 0xa0c9568 <line:180:9, col:46> 'void'
        (CXXTemporary 0xa0c94a0)
        (CXXTemporary 0xa0c9540)
        (CXXMemberCallExpr 0xa0c9438 <col:9, col:46> 'void'
          (MemberExpr 0xa0c938c <col:9, col:16> '<bound member function type>' .push_back 0xa0c2ac0
            (DeclRefExpr 0xa0c9374 <col:9> 'wcstring_list_t':'class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > >' lvalue Var 0xa0c9160 'result' 'wcstring_list_t':'class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > >'))
          (MaterializeTemporaryExpr 0xa0c9558 <col:26, col:42> 'const value_type':'const class std::basic_string<wchar_t>' lvalue
            (CXXBindTemporaryExpr 0xa0c9548 <col:26, col:42> 'const value_type':'const class std::basic_string<wchar_t>' (CXXTemporary 0xa0c9540)
              (CXXConstructExpr 0xa0c9518 <col:26, col:42> 'const value_type':'const class std::basic_string<wchar_t>''void (const wchar_t *, const class std::allocator<wchar_t> &)'
                (ImplicitCastExpr 0xa0c9458 <col:26, col:42> 'const wchar_t *' <LValueToRValue>
                  (MemberExpr 0xa0c9414 <col:26, col:42> 'const wchar_t *const' lvalue .name 0xa0b6150
                    (ArraySubscriptExpr 0xa0c9400 <col:26, col:40> 'const struct named_color_t' lvalue
                      (ImplicitCastExpr 0xa0c93e0 <col:26> 'const struct named_color_t *' <ArrayToPointerDecay>
                        (DeclRefExpr 0xa0c93ac <col:26> 'const struct named_color_t [11]' lvalue Var 0xa0b6340 'named_colors' 'const struct named_color_t [11]'))
                      (ImplicitCastExpr 0xa0c93f0 <col:39> 'size_t':'unsigned int' <LValueToRValue>
                        (DeclRefExpr 0xa0c93c4 <col:39> 'size_t':'unsigned int' lvalue Var 0xa0c9270 'i' 'size_t':'unsigned int')))))
                (CXXDefaultArgExpr 0xa0c9500 <<invalid sloc>> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue))))))))
  (ReturnStmt 0xa0c9618 <line:182:5, col:12>
    (CXXConstructExpr 0xa0c95f0 <col:12> 'wcstring_list_t':'class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > >''void (const class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > > &)' elidable
      (ImplicitCastExpr 0xa0c95e0 <col:12> 'const class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > >' lvalue <NoOp>
        (DeclRefExpr 0xa0c95c4 <col:12> 'wcstring_list_t':'class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > >' lvalue Var 0xa0c9160 'result' 'wcstring_list_t':'class std::vector<class std::basic_string<wchar_t>, class std::allocator<class std::basic_string<wchar_t> > >')))))


bool try_parse_named(const wcstring &str) (CompoundStmt 0xa0c9e50 <../codeBase/fish-shell-master/color.cpp:186:1, line:199:1>
  (CallExpr 0xa0c9840 <line:187:5, col:29> 'void'
    (ImplicitCastExpr 0xa0c9830 <col:5> 'void (*)(void *, size_t) throw()' <FunctionToPointerDecay>
      (DeclRefExpr 0xa0c9818 <col:5> 'void (void *, size_t) throw()' lvalue Function 0xa038810 'bzero' 'void (void *, size_t) throw()'))
    (ImplicitCastExpr 0xa0c9868 <col:11, col:12> 'void *' <BitCast>
      (UnaryOperator 0xa0c97b8 <col:11, col:12> 'union <anonymous union at ../codeBase/fish-shell-master/color.h:36:5> *' prefix '&'
        (MemberExpr 0xa0c9798 <col:12> 'union <anonymous union at ../codeBase/fish-shell-master/color.h:36:5>':'union rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:36:5>' lvalue ->data 0xa073740
          (CXXThisExpr 0xa0c9788 <col:12> 'class rgb_color_t *' this))))
    (UnaryExprOrTypeTraitExpr 0xa0c9800 <col:18, col:25> 'unsigned int' sizeof 
      (MemberExpr 0xa0c97e0 <col:25> 'union <anonymous union at ../codeBase/fish-shell-master/color.h:36:5>':'union rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:36:5>' lvalue ->data 0xa073740
        (CXXThisExpr 0xa0c97d0 <col:25> 'class rgb_color_t *' this))))
  (DeclStmt 0xa0c9958 <line:188:5, col:60>
    0xa0c9880 "size_t max =
      (BinaryOperator 0xa0c9940 <col:18, col:48> 'unsigned int' '/'
        (UnaryExprOrTypeTraitExpr 0xa0c98d0 <col:18, col:25> 'unsigned int' sizeof 
          (DeclRefExpr 0xa0c98b4 <col:25> 'const struct named_color_t [11]' lvalue Var 0xa0b6340 'named_colors' 'const struct named_color_t [11]'))
        (UnaryExprOrTypeTraitExpr 0xa0c9928 <col:40, col:48> 'unsigned int' sizeof 
          (UnaryOperator 0xa0c9910 <col:47, col:48> 'const struct named_color_t' lvalue prefix '*'
            (ImplicitCastExpr 0xa0c9900 <col:48> 'const struct named_color_t *' <ArrayToPointerDecay>
              (DeclRefExpr 0xa0c98e8 <col:48> 'const struct named_color_t [11]' lvalue Var 0xa0b6340 'named_colors' 'const struct named_color_t [11]')))))")
  (ForStmt 0xa0c9e08 <line:189:5, line:197:5>
    (DeclStmt 0xa0c99d0 <line:189:10, col:22>
      0xa0c9970 "size_t idx =
        (ImplicitCastExpr 0xa0c99c0 <col:21> 'size_t':'unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0c99a8 <col:21> 'int' 0))")
    <<<NULL>>>
    (BinaryOperator 0xa0c9a30 <col:24, col:30> '_Bool' '<'
      (ImplicitCastExpr 0xa0c9a10 <col:24> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa0c99e0 <col:24> 'size_t':'unsigned int' lvalue Var 0xa0c9970 'idx' 'size_t':'unsigned int'))
      (ImplicitCastExpr 0xa0c9a20 <col:30> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa0c99f8 <col:30> 'size_t':'unsigned int' lvalue Var 0xa0c9880 'max' 'size_t':'unsigned int')))
    (UnaryOperator 0xa0c9a60 <col:35, col:38> 'size_t':'unsigned int' postfix '++'
      (DeclRefExpr 0xa0c9a48 <col:35> 'size_t':'unsigned int' lvalue Var 0xa0c9970 'idx' 'size_t':'unsigned int'))
    (CompoundStmt 0xa0c9df0 <line:190:5, line:197:5>
      (IfStmt 0xa0c9dd0 <line:191:9, line:196:9>
        <<<NULL>>>
        (BinaryOperator 0xa0c9c08 <line:191:13, col:64> '_Bool' '=='
          (IntegerLiteral 0xa0c9a78 <col:13> 'int' 0)
          (CallExpr 0xa0c9bd0 <col:18, col:64> 'int'
            (ImplicitCastExpr 0xa0c9bc0 <col:18> 'int (*)(const wchar_t *, const wchar_t *) throw()' <FunctionToPointerDecay>
              (DeclRefExpr 0xa0c9ba4 <col:18> 'int (const wchar_t *, const wchar_t *) throw()' lvalue Function 0x9b59320 'wcscasecmp' 'int (const wchar_t *, const wchar_t *) throw()'))
            (CXXMemberCallExpr 0xa0c9b00 <col:29, col:39> 'const wchar_t *'
              (MemberExpr 0xa0c9adc <col:29, col:33> '<bound member function type>' .c_str 0x9dd8510
                (DeclRefExpr 0xa0c9ac4 <col:29> 'const wcstring':'const class std::basic_string<wchar_t>' lvalue ParmVar 0xa0c9670 'str' 'const wcstring &')))
            (ImplicitCastExpr 0xa0c9bf8 <col:42, col:60> 'const wchar_t *' <LValueToRValue>
              (MemberExpr 0xa0c9b84 <col:42, col:60> 'const wchar_t *const' lvalue .name 0xa0b6150
                (ArraySubscriptExpr 0xa0c9b70 <col:42, col:58> 'const struct named_color_t' lvalue
                  (ImplicitCastExpr 0xa0c9b50 <col:42> 'const struct named_color_t *' <ArrayToPointerDecay>
                    (DeclRefExpr 0xa0c9b1c <col:42> 'const struct named_color_t [11]' lvalue Var 0xa0b6340 'named_colors' 'const struct named_color_t [11]'))
                  (ImplicitCastExpr 0xa0c9b60 <col:55> 'size_t':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0xa0c9b34 <col:55> 'size_t':'unsigned int' lvalue Var 0xa0c9970 'idx' 'size_t':'unsigned int')))))))
        (CompoundStmt 0xa0c9db0 <line:192:9, line:196:9>
          (BinaryOperator 0xa0c9d08 <line:193:13, col:47> 'unsigned char' lvalue '='
            (MemberExpr 0xa0c9c50 <col:13, col:18> 'unsigned char' lvalue .name_idx 0xa073650
              (MemberExpr 0xa0c9c30 <col:13> 'union <anonymous union at ../codeBase/fish-shell-master/color.h:36:5>':'union rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:36:5>' lvalue ->data 0xa073740
                (CXXThisExpr 0xa0c9c20 <col:13> 'class rgb_color_t *' this)))
            (ImplicitCastExpr 0xa0c9cf8 <col:29, col:47> 'unsigned char' <LValueToRValue>
              (MemberExpr 0xa0c9cd4 <col:29, col:47> 'const unsigned char' lvalue .idx 0xa0b6190
                (ArraySubscriptExpr 0xa0c9cc0 <col:29, col:45> 'const struct named_color_t' lvalue
                  (ImplicitCastExpr 0xa0c9ca0 <col:29> 'const struct named_color_t *' <ArrayToPointerDecay>
                    (DeclRefExpr 0xa0c9c70 <col:29> 'const struct named_color_t [11]' lvalue Var 0xa0b6340 'named_colors' 'const struct named_color_t [11]'))
                  (ImplicitCastExpr 0xa0c9cb0 <col:42> 'size_t':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0xa0c9c88 <col:42> 'size_t':'unsigned int' lvalue Var 0xa0c9970 'idx' 'size_t':'unsigned int'))))))
          (BinaryOperator 0xa0c9d78 <line:194:13, col:26> 'unsigned char' lvalue bitfield '='
            (MemberExpr 0xa0c9d30 <col:13, col:19> 'unsigned char' lvalue bitfield ->type 0xa073360
              (CXXThisExpr 0xa0c9d20 <col:13> 'class rgb_color_t *' this))
            (ImplicitCastExpr 0xa0c9d68 <col:26> 'unsigned char' <IntegralCast>
              (DeclRefExpr 0xa0c9d50 <col:26> 'enum rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:17:5>' EnumConstant 0xa073200 'type_named' 'enum rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:17:5>')))
          (ReturnStmt 0xa0c9da0 <line:195:13, col:20>
            (CXXBoolLiteralExpr 0xa0c9d90 <col:20> '_Bool' true)))
        <<<NULL>>>)))
  (ReturnStmt 0xa0c9e40 <line:198:5, col:12>
    (CXXBoolLiteralExpr 0xa0c9e30 <col:12> '_Bool' false)))


static const wchar_t *name_for_color_idx(unsigned char idx) (CompoundStmt 0xa0ca3d8 <../codeBase/fish-shell-master/color.cpp:202:1, line:212:1>
  (DeclStmt 0xa0ca048 <line:203:5, col:60>
    0xa0c9f70 "size_t max =
      (BinaryOperator 0xa0ca030 <col:18, col:48> 'unsigned int' '/'
        (UnaryExprOrTypeTraitExpr 0xa0c9fc0 <col:18, col:25> 'unsigned int' sizeof 
          (DeclRefExpr 0xa0c9fa4 <col:25> 'const struct named_color_t [11]' lvalue Var 0xa0b6340 'named_colors' 'const struct named_color_t [11]'))
        (UnaryExprOrTypeTraitExpr 0xa0ca018 <col:40, col:48> 'unsigned int' sizeof 
          (UnaryOperator 0xa0ca000 <col:47, col:48> 'const struct named_color_t' lvalue prefix '*'
            (ImplicitCastExpr 0xa0c9ff0 <col:48> 'const struct named_color_t *' <ArrayToPointerDecay>
              (DeclRefExpr 0xa0c9fd8 <col:48> 'const struct named_color_t [11]' lvalue Var 0xa0b6340 'named_colors' 'const struct named_color_t [11]')))))")
  (ForStmt 0xa0ca358 <line:204:5, line:210:5>
    (DeclStmt 0xa0ca0c0 <line:204:10, col:20>
      0xa0ca060 "size_t i =
        (ImplicitCastExpr 0xa0ca0b0 <col:19> 'size_t':'unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0ca098 <col:19> 'int' 0))")
    <<<NULL>>>
    (BinaryOperator 0xa0ca120 <col:22, col:26> '_Bool' '<'
      (ImplicitCastExpr 0xa0ca100 <col:22> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa0ca0d0 <col:22> 'size_t':'unsigned int' lvalue Var 0xa0ca060 'i' 'size_t':'unsigned int'))
      (ImplicitCastExpr 0xa0ca110 <col:26> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa0ca0e8 <col:26> 'size_t':'unsigned int' lvalue Var 0xa0c9f70 'max' 'size_t':'unsigned int')))
    (UnaryOperator 0xa0ca150 <col:31, col:32> 'size_t':'unsigned int' postfix '++'
      (DeclRefExpr 0xa0ca138 <col:31> 'size_t':'unsigned int' lvalue Var 0xa0ca060 'i' 'size_t':'unsigned int'))
    (CompoundStmt 0xa0ca340 <line:205:5, line:210:5>
      (IfStmt 0xa0ca320 <line:206:9, line:209:9>
        <<<NULL>>>
        (BinaryOperator 0xa0ca248 <line:206:13, col:36> '_Bool' '=='
          (ImplicitCastExpr 0xa0ca218 <col:13, col:29> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa0ca208 <col:13, col:29> 'unsigned char' <LValueToRValue>
              (MemberExpr 0xa0ca1cc <col:13, col:29> 'const unsigned char' lvalue .idx 0xa0b6190
                (ArraySubscriptExpr 0xa0ca1b8 <col:13, col:27> 'const struct named_color_t' lvalue
                  (ImplicitCastExpr 0xa0ca198 <col:13> 'const struct named_color_t *' <ArrayToPointerDecay>
                    (DeclRefExpr 0xa0ca164 <col:13> 'const struct named_color_t [11]' lvalue Var 0xa0b6340 'named_colors' 'const struct named_color_t [11]'))
                  (ImplicitCastExpr 0xa0ca1a8 <col:26> 'size_t':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0xa0ca17c <col:26> 'size_t':'unsigned int' lvalue Var 0xa0ca060 'i' 'size_t':'unsigned int'))))))
          (ImplicitCastExpr 0xa0ca238 <col:36> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa0ca228 <col:36> 'unsigned char' <LValueToRValue>
              (DeclRefExpr 0xa0ca1ec <col:36> 'unsigned char' lvalue ParmVar 0xa0c9e80 'idx' 'unsigned char'))))
        (CompoundStmt 0xa0ca308 <line:207:9, line:209:9>
          (ReturnStmt 0xa0ca2f8 <line:208:13, col:36>
            (ImplicitCastExpr 0xa0ca2e8 <col:20, col:36> 'const wchar_t *' <LValueToRValue>
              (MemberExpr 0xa0ca2c4 <col:20, col:36> 'const wchar_t *const' lvalue .name 0xa0b6150
                (ArraySubscriptExpr 0xa0ca2b0 <col:20, col:34> 'const struct named_color_t' lvalue
                  (ImplicitCastExpr 0xa0ca290 <col:20> 'const struct named_color_t *' <ArrayToPointerDecay>
                    (DeclRefExpr 0xa0ca260 <col:20> 'const struct named_color_t [11]' lvalue Var 0xa0b6340 'named_colors' 'const struct named_color_t [11]'))
                  (ImplicitCastExpr 0xa0ca2a0 <col:33> 'size_t':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0xa0ca278 <col:33> 'size_t':'unsigned int' lvalue Var 0xa0ca060 'i' 'size_t':'unsigned int')))))))
        <<<NULL>>>)))
  (ReturnStmt 0xa0ca3c8 <line:211:5, col:12>
    (ImplicitCastExpr 0xa0ca3b8 <col:12> 'const wchar_t *' <ArrayToPointerDecay>
      (StringLiteral 0xa0ca37c <col:12> 'const wchar_t [8]' lvalue L"u\000\000\000n\000\000\000k\000\000\000n\000\000\000o\000\000\000w\000\000\000n\000\000\000"))))


class rgb_color_t::rgb_color_t(unsigned char t, unsigned char i = (ImplicitCastExpr 0xa074e58 <../codeBase/fish-shell-master/color.h:55:59> 'unsigned char' <IntegralCast>
  (IntegerLiteral 0xa074e40 <col:59> 'int' 0))
) : type((ImplicitCastExpr 0xa0ca7c8 <../codeBase/fish-shell-master/color.cpp:214:67> 'unsigned char' <LValueToRValue>
  (DeclRefExpr 0xa0ca7b0 <col:67> 'unsigned char' lvalue ParmVar 0xa0ca450 't' 'unsigned char'))
), flags((ImplicitValueInitExpr 0xa0ca7f8 <<invalid sloc>> 'unsigned char')
), data((ImplicitValueInitExpr 0xa0ca818 <<invalid sloc>> 'union <anonymous union at ../codeBase/fish-shell-master/color.h:36:5>':'union rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:36:5>')
) (CompoundStmt 0xa0ca8d8 <../codeBase/fish-shell-master/color.cpp:215:1, line:217:1>
  (BinaryOperator 0xa0ca8c0 <line:216:5, col:21> 'unsigned char' lvalue '='
    (MemberExpr 0xa0ca878 <col:5, col:10> 'unsigned char' lvalue .name_idx 0xa073650
      (MemberExpr 0xa0ca858 <col:5> 'union <anonymous union at ../codeBase/fish-shell-master/color.h:36:5>':'union rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:36:5>' lvalue ->data 0xa073740
        (CXXThisExpr 0xa0ca848 <col:5> 'class rgb_color_t *' this)))
    (ImplicitCastExpr 0xa0ca8b0 <col:21> 'unsigned char' <LValueToRValue>
      (DeclRefExpr 0xa0ca898 <col:21> 'unsigned char' lvalue ParmVar 0xa0ca4a0 'i' 'unsigned char'))))


static rgb_color_t normal() (CompoundStmt 0xa0cac70 <../codeBase/fish-shell-master/color.cpp:220:1, line:222:1>
  (ReturnStmt 0xa0cac60 <line:221:5, col:35>
    (CXXConstructExpr 0xa0cac38 <col:12, col:35> 'class rgb_color_t''void (const class rgb_color_t &) throw()' elidable
      (MaterializeTemporaryExpr 0xa0caa38 <col:12, col:35> 'const class rgb_color_t' lvalue
        (ImplicitCastExpr 0xa0caa28 <col:12, col:35> 'const class rgb_color_t' <NoOp>
          (CXXFunctionalCastExpr 0xa0caa10 <col:12, col:35> 'class rgb_color_t' functional cast to class rgb_color_t <ConstructorConversion>
            (CXXConstructExpr 0xa0ca9e8 <col:12, col:24> 'class rgb_color_t''void (unsigned char, unsigned char)'
              (ImplicitCastExpr 0xa0ca9c8 <col:24> 'unsigned char' <IntegralCast>
                (DeclRefExpr 0xa0ca9b0 <col:24> 'enum rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:17:5>' EnumConstant 0xa073280 'type_normal' 'enum rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:17:5>'))
              (CXXDefaultArgExpr 0xa0ca9d8 <<invalid sloc>> 'unsigned char'))))))))


static rgb_color_t reset() (CompoundStmt 0xa0cae10 <../codeBase/fish-shell-master/color.cpp:224:1, line:226:1>
  (ReturnStmt 0xa0cae00 <line:225:5, col:34>
    (CXXConstructExpr 0xa0cadd8 <col:12, col:34> 'class rgb_color_t''void (const class rgb_color_t &) throw()' elidable
      (MaterializeTemporaryExpr 0xa0cadc8 <col:12, col:34> 'const class rgb_color_t' lvalue
        (ImplicitCastExpr 0xa0cadb8 <col:12, col:34> 'const class rgb_color_t' <NoOp>
          (CXXFunctionalCastExpr 0xa0cada0 <col:12, col:34> 'class rgb_color_t' functional cast to class rgb_color_t <ConstructorConversion>
            (CXXConstructExpr 0xa0cad78 <col:12, col:24> 'class rgb_color_t''void (unsigned char, unsigned char)'
              (ImplicitCastExpr 0xa0cad58 <col:24> 'unsigned char' <IntegralCast>
                (DeclRefExpr 0xa0cad40 <col:24> 'enum rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:17:5>' EnumConstant 0xa0732c0 'type_reset' 'enum rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:17:5>'))
              (CXXDefaultArgExpr 0xa0cad68 <<invalid sloc>> 'unsigned char'))))))))


static rgb_color_t ignore() (CompoundStmt 0xa0cafb0 <../codeBase/fish-shell-master/color.cpp:228:1, line:230:1>
  (ReturnStmt 0xa0cafa0 <line:229:5, col:35>
    (CXXConstructExpr 0xa0caf78 <col:12, col:35> 'class rgb_color_t''void (const class rgb_color_t &) throw()' elidable
      (MaterializeTemporaryExpr 0xa0caf68 <col:12, col:35> 'const class rgb_color_t' lvalue
        (ImplicitCastExpr 0xa0caf58 <col:12, col:35> 'const class rgb_color_t' <NoOp>
          (CXXFunctionalCastExpr 0xa0caf40 <col:12, col:35> 'class rgb_color_t' functional cast to class rgb_color_t <ConstructorConversion>
            (CXXConstructExpr 0xa0caf18 <col:12, col:24> 'class rgb_color_t''void (unsigned char, unsigned char)'
              (ImplicitCastExpr 0xa0caef8 <col:24> 'unsigned char' <IntegralCast>
                (DeclRefExpr 0xa0caee0 <col:24> 'enum rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:17:5>' EnumConstant 0xa073300 'type_ignore' 'enum rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:17:5>'))
              (CXXDefaultArgExpr 0xa0caf08 <<invalid sloc>> 'unsigned char'))))))))


static rgb_color_t none() (CompoundStmt 0xa0cb150 <../codeBase/fish-shell-master/color.cpp:232:1, line:234:1>
  (ReturnStmt 0xa0cb140 <line:233:5, col:33>
    (CXXConstructExpr 0xa0cb118 <col:12, col:33> 'class rgb_color_t''void (const class rgb_color_t &) throw()' elidable
      (MaterializeTemporaryExpr 0xa0cb108 <col:12, col:33> 'const class rgb_color_t' lvalue
        (ImplicitCastExpr 0xa0cb0f8 <col:12, col:33> 'const class rgb_color_t' <NoOp>
          (CXXFunctionalCastExpr 0xa0cb0e0 <col:12, col:33> 'class rgb_color_t' functional cast to class rgb_color_t <ConstructorConversion>
            (CXXConstructExpr 0xa0cb0b8 <col:12, col:24> 'class rgb_color_t''void (unsigned char, unsigned char)'
              (ImplicitCastExpr 0xa0cb098 <col:24> 'unsigned char' <IntegralCast>
                (DeclRefExpr 0xa0cb080 <col:24> 'enum rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:17:5>' EnumConstant 0xa0731c0 'type_none' 'enum rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:17:5>'))
              (CXXDefaultArgExpr 0xa0cb0a8 <<invalid sloc>> 'unsigned char'))))))))


static rgb_color_t white() (CompoundStmt 0xa0cb2f8 <../codeBase/fish-shell-master/color.cpp:236:1, line:238:1>
  (ReturnStmt 0xa0cb2e8 <line:237:5, col:37>
    (CXXConstructExpr 0xa0cb2c0 <col:12, col:37> 'class rgb_color_t''void (const class rgb_color_t &) throw()' elidable
      (MaterializeTemporaryExpr 0xa0cb2b0 <col:12, col:37> 'const class rgb_color_t' lvalue
        (ImplicitCastExpr 0xa0cb2a0 <col:12, col:37> 'const class rgb_color_t' <NoOp>
          (CXXTemporaryObjectExpr 0xa0cb270 <col:12, col:37> 'class rgb_color_t''void (unsigned char, unsigned char)'
            (ImplicitCastExpr 0xa0cb250 <col:24> 'unsigned char' <IntegralCast>
              (DeclRefExpr 0xa0cb220 <col:24> 'enum rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:17:5>' EnumConstant 0xa073200 'type_named' 'enum rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:17:5>'))
            (ImplicitCastExpr 0xa0cb260 <col:36> 'unsigned char' <IntegralCast>
              (IntegerLiteral 0xa0cb238 <col:36> 'int' 7))))))))


static rgb_color_t black() (CompoundStmt 0xa0cb4a8 <../codeBase/fish-shell-master/color.cpp:240:1, line:242:1>
  (ReturnStmt 0xa0cb498 <line:241:5, col:37>
    (CXXConstructExpr 0xa0cb470 <col:12, col:37> 'class rgb_color_t''void (const class rgb_color_t &) throw()' elidable
      (MaterializeTemporaryExpr 0xa0cb460 <col:12, col:37> 'const class rgb_color_t' lvalue
        (ImplicitCastExpr 0xa0cb450 <col:12, col:37> 'const class rgb_color_t' <NoOp>
          (CXXTemporaryObjectExpr 0xa0cb420 <col:12, col:37> 'class rgb_color_t''void (unsigned char, unsigned char)'
            (ImplicitCastExpr 0xa0cb400 <col:24> 'unsigned char' <IntegralCast>
              (DeclRefExpr 0xa0cb3d0 <col:24> 'enum rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:17:5>' EnumConstant 0xa073200 'type_named' 'enum rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:17:5>'))
            (ImplicitCastExpr 0xa0cb410 <col:36> 'unsigned char' <IntegralCast>
              (IntegerLiteral 0xa0cb3e8 <col:36> 'int' 0))))))))


static unsigned char term8_color_for_rgb(const unsigned char rgb[3]) (CompoundStmt 0xa0cba50 <../codeBase/fish-shell-master/color.cpp:245:1, line:258:1>
  (DeclStmt 0xa0cb880 <line:246:5, line:256:6>
    0xa0cb610 "const uint32_t kColors[8] =
      (InitListExpr 0xa0cb750 <line:247:5, line:256:5> 'const uint32_t [8]'
        (ImplicitCastExpr 0xa0cb778 <line:248:9> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cb648 <col:9> 'int' 0))
        (ImplicitCastExpr 0xa0cb790 <line:249:9> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cb660 <col:9> 'int' 16711680))
        (ImplicitCastExpr 0xa0cb7a8 <line:250:9> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cb678 <col:9> 'int' 65280))
        (ImplicitCastExpr 0xa0cb7c8 <line:251:9> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cb690 <col:9> 'int' 16776960))
        (ImplicitCastExpr 0xa0cb7d8 <line:252:9> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cb6a8 <col:9> 'int' 255))
        (ImplicitCastExpr 0xa0cb808 <line:253:9> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cb6c0 <col:9> 'int' 16711935))
        (ImplicitCastExpr 0xa0cb818 <line:254:9> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cb6d8 <col:9> 'int' 65535))
        (ImplicitCastExpr 0xa0cb828 <line:255:9> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cb6f0 <col:9> 'int' 16777215)))")
  (ReturnStmt 0xa0cba40 <line:257:5, col:72>
    (CallExpr 0xa0cb9f8 <col:12, col:72> 'unsigned char'
      (ImplicitCastExpr 0xa0cb9e8 <col:12> 'unsigned char (*)(const unsigned char *, const uint32_t *, size_t)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0cb998 <col:12> 'unsigned char (const unsigned char *, const uint32_t *, size_t)' lvalue Function 0xa0aca80 'convert_color' 'unsigned char (const unsigned char *, const uint32_t *, size_t)'))
      (ImplicitCastExpr 0xa0cba20 <col:26> 'const unsigned char *' <LValueToRValue>
        (DeclRefExpr 0xa0cb8c4 <col:26> 'const unsigned char *' lvalue ParmVar 0xa0cb4f0 'rgb' 'const unsigned char *'))
      (ImplicitCastExpr 0xa0cba30 <col:31> 'const uint32_t *' <ArrayToPointerDecay>
        (DeclRefExpr 0xa0cb8dc <col:31> 'const uint32_t [8]' lvalue Var 0xa0cb610 'kColors' 'const uint32_t [8]'))
      (BinaryOperator 0xa0cb980 <col:40, col:65> 'unsigned int' '/'
        (UnaryExprOrTypeTraitExpr 0xa0cb910 <col:40, col:47> 'unsigned int' sizeof 
          (DeclRefExpr 0xa0cb8f4 <col:47> 'const uint32_t [8]' lvalue Var 0xa0cb610 'kColors' 'const uint32_t [8]'))
        (UnaryExprOrTypeTraitExpr 0xa0cb968 <col:57, col:65> 'unsigned int' sizeof 
          (UnaryOperator 0xa0cb950 <col:64, col:65> 'const uint32_t':'const unsigned int' lvalue prefix '*'
            (ImplicitCastExpr 0xa0cb940 <col:65> 'const uint32_t *' <ArrayToPointerDecay>
              (DeclRefExpr 0xa0cb928 <col:65> 'const uint32_t [8]' lvalue Var 0xa0cb610 'kColors' 'const uint32_t [8]'))))))))


static unsigned char term256_color_for_rgb(const unsigned char rgb[3]) (CompoundStmt 0xa0ceb50 <../codeBase/fish-shell-master/color.cpp:261:1, line:296:1>
  (DeclStmt 0xa0ce968 <line:262:5, line:294:6>
    0xa0cbbe0 "const uint32_t kColors[240] =
      (InitListExpr 0xa0cd680 <line:263:5, line:294:5> 'const uint32_t [240]'
        (ImplicitCastExpr 0xa0cda68 <line:264:9> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cbc18 <col:9> 'int' 0))
        (ImplicitCastExpr 0xa0cda78 <col:19> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cbc30 <col:19> 'int' 95))
        (ImplicitCastExpr 0xa0cda88 <col:29> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cbc48 <col:29> 'int' 135))
        (ImplicitCastExpr 0xa0cda98 <col:39> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cbc60 <col:39> 'int' 175))
        (ImplicitCastExpr 0xa0cdaa8 <col:49> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cbc78 <col:49> 'int' 215))
        (ImplicitCastExpr 0xa0cdab8 <col:59> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cbc90 <col:59> 'int' 255))
        (ImplicitCastExpr 0xa0cdac8 <col:69> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cbca8 <col:69> 'int' 24320))
        (ImplicitCastExpr 0xa0cdad8 <col:79> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cbcc0 <col:79> 'int' 24415))
        (ImplicitCastExpr 0xa0cdae8 <line:265:9> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cbcd8 <col:9> 'int' 24455))
        (ImplicitCastExpr 0xa0cdaf8 <col:19> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cbcf0 <col:19> 'int' 24495))
        (ImplicitCastExpr 0xa0cdb08 <col:29> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cbd08 <col:29> 'int' 24535))
        (ImplicitCastExpr 0xa0cdb18 <col:39> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cbd20 <col:39> 'int' 24575))
        (ImplicitCastExpr 0xa0cdb28 <col:49> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cbd38 <col:49> 'int' 34560))
        (ImplicitCastExpr 0xa0cdb38 <col:59> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cbd50 <col:59> 'int' 34655))
        (ImplicitCastExpr 0xa0cdb48 <col:69> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cbd68 <col:69> 'int' 34695))
        (ImplicitCastExpr 0xa0cdb58 <col:79> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cbd80 <col:79> 'int' 34735))
        (ImplicitCastExpr 0xa0cdb68 <line:266:9> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cbd98 <col:9> 'int' 34775))
        (ImplicitCastExpr 0xa0cdb78 <col:19> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cbdb0 <col:19> 'int' 34815))
        (ImplicitCastExpr 0xa0cdb88 <col:29> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cbdc8 <col:29> 'int' 44800))
        (ImplicitCastExpr 0xa0cdb98 <col:39> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cbde0 <col:39> 'int' 44895))
        (ImplicitCastExpr 0xa0cdba8 <col:49> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cbdf8 <col:49> 'int' 44935))
        (ImplicitCastExpr 0xa0cdbb8 <col:59> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cbe10 <col:59> 'int' 44975))
        (ImplicitCastExpr 0xa0cdbc8 <col:69> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cbe28 <col:69> 'int' 45015))
        (ImplicitCastExpr 0xa0cdbd8 <col:79> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cbe40 <col:79> 'int' 45055))
        (ImplicitCastExpr 0xa0cdbe8 <line:267:9> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cbe58 <col:9> 'int' 55040))
        (ImplicitCastExpr 0xa0cdbf8 <col:19> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cbe70 <col:19> 'int' 55135))
        (ImplicitCastExpr 0xa0cdc08 <col:29> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cbe88 <col:29> 'int' 55175))
        (ImplicitCastExpr 0xa0cdc18 <col:39> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cbea0 <col:39> 'int' 55215))
        (ImplicitCastExpr 0xa0cdc28 <col:49> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cbeb8 <col:49> 'int' 55255))
        (ImplicitCastExpr 0xa0cdc38 <col:59> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cbed0 <col:59> 'int' 55295))
        (ImplicitCastExpr 0xa0cdc48 <col:69> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cbee8 <col:69> 'int' 65280))
        (ImplicitCastExpr 0xa0cdc58 <col:79> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cbf00 <col:79> 'int' 65375))
        (ImplicitCastExpr 0xa0cdc68 <line:268:9> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cbf18 <col:9> 'int' 65415))
        (ImplicitCastExpr 0xa0cdc78 <col:19> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cbf30 <col:19> 'int' 65455))
        (ImplicitCastExpr 0xa0cdc88 <col:29> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cbf48 <col:29> 'int' 65495))
        (ImplicitCastExpr 0xa0cdc98 <col:39> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cbf60 <col:39> 'int' 65535))
        (ImplicitCastExpr 0xa0cdca8 <col:49> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cbf78 <col:49> 'int' 6225920))
        (ImplicitCastExpr 0xa0cdcb8 <col:59> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cbf90 <col:59> 'int' 6226015))
        (ImplicitCastExpr 0xa0cdcc8 <col:69> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cbfa8 <col:69> 'int' 6226055))
        (ImplicitCastExpr 0xa0cdcd8 <col:79> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cbfc0 <col:79> 'int' 6226095))
        (ImplicitCastExpr 0xa0cdce8 <line:269:9> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cbfd8 <col:9> 'int' 6226135))
        (ImplicitCastExpr 0xa0cdcf8 <col:19> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cbff0 <col:19> 'int' 6226175))
        (ImplicitCastExpr 0xa0cdd08 <col:29> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc008 <col:29> 'int' 6250240))
        (ImplicitCastExpr 0xa0cdd18 <col:39> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc020 <col:39> 'int' 6250335))
        (ImplicitCastExpr 0xa0cdd28 <col:49> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc038 <col:49> 'int' 6250375))
        (ImplicitCastExpr 0xa0cdd38 <col:59> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc050 <col:59> 'int' 6250415))
        (ImplicitCastExpr 0xa0cdd48 <col:69> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc068 <col:69> 'int' 6250455))
        (ImplicitCastExpr 0xa0cdd58 <col:79> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc080 <col:79> 'int' 6250495))
        (ImplicitCastExpr 0xa0cdd68 <line:270:9> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc098 <col:9> 'int' 6260480))
        (ImplicitCastExpr 0xa0cdd78 <col:19> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc0b0 <col:19> 'int' 6260575))
        (ImplicitCastExpr 0xa0cdd88 <col:29> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc0c8 <col:29> 'int' 6260615))
        (ImplicitCastExpr 0xa0cdd98 <col:39> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc0e0 <col:39> 'int' 6260655))
        (ImplicitCastExpr 0xa0cdda8 <col:49> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc0f8 <col:49> 'int' 6260695))
        (ImplicitCastExpr 0xa0cddb8 <col:59> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc110 <col:59> 'int' 6260735))
        (ImplicitCastExpr 0xa0cddc8 <col:69> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc128 <col:69> 'int' 6270720))
        (ImplicitCastExpr 0xa0cddd8 <col:79> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc140 <col:79> 'int' 6270815))
        (ImplicitCastExpr 0xa0cdde8 <line:271:9> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc158 <col:9> 'int' 6270855))
        (ImplicitCastExpr 0xa0cddf8 <col:19> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc170 <col:19> 'int' 6270895))
        (ImplicitCastExpr 0xa0cde08 <col:29> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc188 <col:29> 'int' 6270935))
        (ImplicitCastExpr 0xa0cde18 <col:39> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc1a0 <col:39> 'int' 6270975))
        (ImplicitCastExpr 0xa0cde28 <col:49> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc1b8 <col:49> 'int' 6280960))
        (ImplicitCastExpr 0xa0cde38 <col:59> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc1d0 <col:59> 'int' 6281055))
        (ImplicitCastExpr 0xa0cde48 <col:69> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc1e8 <col:69> 'int' 6281095))
        (ImplicitCastExpr 0xa0cde58 <col:79> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc200 <col:79> 'int' 6281135))
        (ImplicitCastExpr 0xa0cde68 <line:272:9> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc218 <col:9> 'int' 6281175))
        (ImplicitCastExpr 0xa0cde78 <col:19> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc230 <col:19> 'int' 6281215))
        (ImplicitCastExpr 0xa0cde88 <col:29> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc248 <col:29> 'int' 6291200))
        (ImplicitCastExpr 0xa0cde98 <col:39> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc260 <col:39> 'int' 6291295))
        (ImplicitCastExpr 0xa0cdea8 <col:49> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc278 <col:49> 'int' 6291335))
        (ImplicitCastExpr 0xa0cdeb8 <col:59> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc290 <col:59> 'int' 6291375))
        (ImplicitCastExpr 0xa0cdec8 <col:69> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc2a8 <col:69> 'int' 6291415))
        (ImplicitCastExpr 0xa0cded8 <col:79> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc2c0 <col:79> 'int' 6291455))
        (ImplicitCastExpr 0xa0cdee8 <line:273:9> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc2d8 <col:9> 'int' 8847360))
        (ImplicitCastExpr 0xa0cdef8 <col:19> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc2f0 <col:19> 'int' 8847455))
        (ImplicitCastExpr 0xa0cdf08 <col:29> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc308 <col:29> 'int' 8847495))
        (ImplicitCastExpr 0xa0cdf18 <col:39> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc320 <col:39> 'int' 8847535))
        (ImplicitCastExpr 0xa0cdf28 <col:49> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc338 <col:49> 'int' 8847575))
        (ImplicitCastExpr 0xa0cdf38 <col:59> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc350 <col:59> 'int' 8847615))
        (ImplicitCastExpr 0xa0cdf48 <col:69> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc368 <col:69> 'int' 8871680))
        (ImplicitCastExpr 0xa0cdf58 <col:79> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc380 <col:79> 'int' 8871775))
        (ImplicitCastExpr 0xa0cdf68 <line:274:9> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc398 <col:9> 'int' 8871815))
        (ImplicitCastExpr 0xa0cdf78 <col:19> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc3b0 <col:19> 'int' 8871855))
        (ImplicitCastExpr 0xa0cdf88 <col:29> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc3c8 <col:29> 'int' 8871895))
        (ImplicitCastExpr 0xa0cdf98 <col:39> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc3e0 <col:39> 'int' 8871935))
        (ImplicitCastExpr 0xa0cdfa8 <col:49> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc3f8 <col:49> 'int' 8881920))
        (ImplicitCastExpr 0xa0cdfb8 <col:59> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc410 <col:59> 'int' 8882015))
        (ImplicitCastExpr 0xa0cdfc8 <col:69> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc428 <col:69> 'int' 8882055))
        (ImplicitCastExpr 0xa0cdfd8 <col:79> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc440 <col:79> 'int' 8882095))
        (ImplicitCastExpr 0xa0cdfe8 <line:275:9> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc458 <col:9> 'int' 8882135))
        (ImplicitCastExpr 0xa0cdff8 <col:19> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc470 <col:19> 'int' 8882175))
        (ImplicitCastExpr 0xa0ce008 <col:29> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc488 <col:29> 'int' 8892160))
        (ImplicitCastExpr 0xa0ce018 <col:39> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc4a0 <col:39> 'int' 8892255))
        (ImplicitCastExpr 0xa0ce028 <col:49> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc4b8 <col:49> 'int' 8892295))
        (ImplicitCastExpr 0xa0ce038 <col:59> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc4d0 <col:59> 'int' 8892335))
        (ImplicitCastExpr 0xa0ce048 <col:69> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc4e8 <col:69> 'int' 8892375))
        (ImplicitCastExpr 0xa0ce058 <col:79> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc500 <col:79> 'int' 8892415))
        (ImplicitCastExpr 0xa0ce068 <line:276:9> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc518 <col:9> 'int' 8902400))
        (ImplicitCastExpr 0xa0ce078 <col:19> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc530 <col:19> 'int' 8902495))
        (ImplicitCastExpr 0xa0ce088 <col:29> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc548 <col:29> 'int' 8902535))
        (ImplicitCastExpr 0xa0ce098 <col:39> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc560 <col:39> 'int' 8902575))
        (ImplicitCastExpr 0xa0ce0a8 <col:49> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc578 <col:49> 'int' 8902615))
        (ImplicitCastExpr 0xa0ce0b8 <col:59> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc590 <col:59> 'int' 8902655))
        (ImplicitCastExpr 0xa0ce0c8 <col:69> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc5a8 <col:69> 'int' 8912640))
        (ImplicitCastExpr 0xa0ce0d8 <col:79> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc5c0 <col:79> 'int' 8912735))
        (ImplicitCastExpr 0xa0ce0e8 <line:277:9> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc5d8 <col:9> 'int' 8912775))
        (ImplicitCastExpr 0xa0ce0f8 <col:19> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc5f0 <col:19> 'int' 8912815))
        (ImplicitCastExpr 0xa0ce108 <col:29> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc608 <col:29> 'int' 8912855))
        (ImplicitCastExpr 0xa0ce118 <col:39> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc620 <col:39> 'int' 8912895))
        (ImplicitCastExpr 0xa0ce128 <col:49> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc638 <col:49> 'int' 11468800))
        (ImplicitCastExpr 0xa0ce138 <col:59> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc650 <col:59> 'int' 11468895))
        (ImplicitCastExpr 0xa0ce148 <col:69> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc668 <col:69> 'int' 11468935))
        (ImplicitCastExpr 0xa0ce158 <col:79> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc680 <col:79> 'int' 11468975))
        (ImplicitCastExpr 0xa0ce168 <line:278:9> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc698 <col:9> 'int' 11469015))
        (ImplicitCastExpr 0xa0ce178 <col:19> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc6b0 <col:19> 'int' 11469055))
        (ImplicitCastExpr 0xa0ce188 <col:29> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc6c8 <col:29> 'int' 11493120))
        (ImplicitCastExpr 0xa0ce198 <col:39> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc6e0 <col:39> 'int' 11493215))
        (ImplicitCastExpr 0xa0ce1a8 <col:49> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc6f8 <col:49> 'int' 11493255))
        (ImplicitCastExpr 0xa0ce1b8 <col:59> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc710 <col:59> 'int' 11493295))
        (ImplicitCastExpr 0xa0ce1c8 <col:69> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc728 <col:69> 'int' 11493335))
        (ImplicitCastExpr 0xa0ce1d8 <col:79> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc740 <col:79> 'int' 11493375))
        (ImplicitCastExpr 0xa0ce1e8 <line:279:9> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc758 <col:9> 'int' 11503360))
        (ImplicitCastExpr 0xa0ce1f8 <col:19> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc770 <col:19> 'int' 11503455))
        (ImplicitCastExpr 0xa0ce208 <col:29> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc788 <col:29> 'int' 11503495))
        (ImplicitCastExpr 0xa0ce218 <col:39> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc7a0 <col:39> 'int' 11503535))
        (ImplicitCastExpr 0xa0ce228 <col:49> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc7b8 <col:49> 'int' 11503575))
        (ImplicitCastExpr 0xa0ce238 <col:59> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc7d0 <col:59> 'int' 11503615))
        (ImplicitCastExpr 0xa0ce248 <col:69> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc7e8 <col:69> 'int' 11513600))
        (ImplicitCastExpr 0xa0ce258 <col:79> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc800 <col:79> 'int' 11513695))
        (ImplicitCastExpr 0xa0ce268 <line:280:9> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc818 <col:9> 'int' 11513735))
        (ImplicitCastExpr 0xa0ce278 <col:19> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc830 <col:19> 'int' 11513775))
        (ImplicitCastExpr 0xa0ce288 <col:29> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc848 <col:29> 'int' 11513815))
        (ImplicitCastExpr 0xa0ce298 <col:39> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc860 <col:39> 'int' 11513855))
        (ImplicitCastExpr 0xa0ce2a8 <col:49> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc878 <col:49> 'int' 11523840))
        (ImplicitCastExpr 0xa0ce2b8 <col:59> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc890 <col:59> 'int' 11523935))
        (ImplicitCastExpr 0xa0ce2c8 <col:69> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc8a8 <col:69> 'int' 11523975))
        (ImplicitCastExpr 0xa0ce2d8 <col:79> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc8c0 <col:79> 'int' 11524015))
        (ImplicitCastExpr 0xa0ce2e8 <line:281:9> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc8d8 <col:9> 'int' 11524055))
        (ImplicitCastExpr 0xa0ce2f8 <col:19> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc8f0 <col:19> 'int' 11524095))
        (ImplicitCastExpr 0xa0ce308 <col:29> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc908 <col:29> 'int' 11534080))
        (ImplicitCastExpr 0xa0ce318 <col:39> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc920 <col:39> 'int' 11534175))
        (ImplicitCastExpr 0xa0ce328 <col:49> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc938 <col:49> 'int' 11534215))
        (ImplicitCastExpr 0xa0ce338 <col:59> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc950 <col:59> 'int' 11534255))
        (ImplicitCastExpr 0xa0ce348 <col:69> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc968 <col:69> 'int' 11534295))
        (ImplicitCastExpr 0xa0ce358 <col:79> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc980 <col:79> 'int' 11534335))
        (ImplicitCastExpr 0xa0ce368 <line:282:9> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc998 <col:9> 'int' 14090240))
        (ImplicitCastExpr 0xa0ce378 <col:19> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc9b0 <col:19> 'int' 14090335))
        (ImplicitCastExpr 0xa0ce388 <col:29> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc9c8 <col:29> 'int' 14090375))
        (ImplicitCastExpr 0xa0ce398 <col:39> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc9e0 <col:39> 'int' 14090415))
        (ImplicitCastExpr 0xa0ce3a8 <col:49> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cc9f8 <col:49> 'int' 14090455))
        (ImplicitCastExpr 0xa0ce3b8 <col:59> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cca10 <col:59> 'int' 14090495))
        (ImplicitCastExpr 0xa0ce3c8 <col:69> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cca28 <col:69> 'int' 14114560))
        (ImplicitCastExpr 0xa0ce3d8 <col:79> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cca40 <col:79> 'int' 14114655))
        (ImplicitCastExpr 0xa0ce3e8 <line:283:9> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cca58 <col:9> 'int' 14114695))
        (ImplicitCastExpr 0xa0ce3f8 <col:19> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cca70 <col:19> 'int' 14114735))
        (ImplicitCastExpr 0xa0ce408 <col:29> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cca88 <col:29> 'int' 14114775))
        (ImplicitCastExpr 0xa0ce418 <col:39> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0ccaa0 <col:39> 'int' 14114815))
        (ImplicitCastExpr 0xa0ce428 <col:49> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0ccab8 <col:49> 'int' 14124800))
        (ImplicitCastExpr 0xa0ce438 <col:59> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0ccad0 <col:59> 'int' 14124895))
        (ImplicitCastExpr 0xa0ce448 <col:69> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0ccae8 <col:69> 'int' 14124935))
        (ImplicitCastExpr 0xa0ce458 <col:79> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0ccb00 <col:79> 'int' 14124975))
        (ImplicitCastExpr 0xa0ce468 <line:284:9> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0ccb18 <col:9> 'int' 14125015))
        (ImplicitCastExpr 0xa0ce478 <col:19> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0ccb30 <col:19> 'int' 14125055))
        (ImplicitCastExpr 0xa0ce488 <col:29> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0ccb48 <col:29> 'int' 14135040))
        (ImplicitCastExpr 0xa0ce498 <col:39> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0ccb60 <col:39> 'int' 14135135))
        (ImplicitCastExpr 0xa0ce4a8 <col:49> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0ccb78 <col:49> 'int' 14135175))
        (ImplicitCastExpr 0xa0ce4b8 <col:59> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0ccb90 <col:59> 'int' 14135215))
        (ImplicitCastExpr 0xa0ce4c8 <col:69> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0ccba8 <col:69> 'int' 14135255))
        (ImplicitCastExpr 0xa0ce4d8 <col:79> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0ccbc0 <col:79> 'int' 14135295))
        (ImplicitCastExpr 0xa0ce4e8 <line:285:9> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0ccbd8 <col:9> 'int' 14145280))
        (ImplicitCastExpr 0xa0ce4f8 <col:19> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0ccbf0 <col:19> 'int' 14145375))
        (ImplicitCastExpr 0xa0ce508 <col:29> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0ccc08 <col:29> 'int' 14145415))
        (ImplicitCastExpr 0xa0ce518 <col:39> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0ccc20 <col:39> 'int' 14145455))
        (ImplicitCastExpr 0xa0ce528 <col:49> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0ccc38 <col:49> 'int' 14145495))
        (ImplicitCastExpr 0xa0ce538 <col:59> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0ccc50 <col:59> 'int' 14145535))
        (ImplicitCastExpr 0xa0ce548 <col:69> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0ccc68 <col:69> 'int' 14155520))
        (ImplicitCastExpr 0xa0ce558 <col:79> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0ccc80 <col:79> 'int' 14155615))
        (ImplicitCastExpr 0xa0ce568 <line:286:9> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0ccc98 <col:9> 'int' 14155655))
        (ImplicitCastExpr 0xa0ce578 <col:19> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cccb0 <col:19> 'int' 14155695))
        (ImplicitCastExpr 0xa0ce588 <col:29> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cccc8 <col:29> 'int' 14155735))
        (ImplicitCastExpr 0xa0ce598 <col:39> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0ccce0 <col:39> 'int' 14155775))
        (ImplicitCastExpr 0xa0ce5a8 <col:49> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cccf8 <col:49> 'int' 16711680))
        (ImplicitCastExpr 0xa0ce5b8 <col:59> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0ccd10 <col:59> 'int' 16711775))
        (ImplicitCastExpr 0xa0ce5c8 <col:69> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0ccd28 <col:69> 'int' 16711815))
        (ImplicitCastExpr 0xa0ce5d8 <col:79> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0ccd40 <col:79> 'int' 16711855))
        (ImplicitCastExpr 0xa0ce5e8 <line:287:9> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0ccd58 <col:9> 'int' 16711895))
        (ImplicitCastExpr 0xa0ce5f8 <col:19> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0ccd70 <col:19> 'int' 16711935))
        (ImplicitCastExpr 0xa0ce608 <col:29> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0ccd88 <col:29> 'int' 16736000))
        (ImplicitCastExpr 0xa0ce618 <col:39> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0ccda0 <col:39> 'int' 16736095))
        (ImplicitCastExpr 0xa0ce628 <col:49> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0ccdb8 <col:49> 'int' 16736135))
        (ImplicitCastExpr 0xa0ce638 <col:59> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0ccdd0 <col:59> 'int' 16736175))
        (ImplicitCastExpr 0xa0ce648 <col:69> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0ccde8 <col:69> 'int' 16736215))
        (ImplicitCastExpr 0xa0ce658 <col:79> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cce00 <col:79> 'int' 16736255))
        (ImplicitCastExpr 0xa0ce668 <line:288:9> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cce18 <col:9> 'int' 16746240))
        (ImplicitCastExpr 0xa0ce678 <col:19> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cce30 <col:19> 'int' 16746335))
        (ImplicitCastExpr 0xa0ce688 <col:29> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cce48 <col:29> 'int' 16746375))
        (ImplicitCastExpr 0xa0ce698 <col:39> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cce60 <col:39> 'int' 16746415))
        (ImplicitCastExpr 0xa0ce6a8 <col:49> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cce78 <col:49> 'int' 16746455))
        (ImplicitCastExpr 0xa0ce6b8 <col:59> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cce90 <col:59> 'int' 16746495))
        (ImplicitCastExpr 0xa0ce6c8 <col:69> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0ccea8 <col:69> 'int' 16756480))
        (ImplicitCastExpr 0xa0ce6d8 <col:79> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0ccec0 <col:79> 'int' 16756575))
        (ImplicitCastExpr 0xa0ce6e8 <line:289:9> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cced8 <col:9> 'int' 16756615))
        (ImplicitCastExpr 0xa0ce6f8 <col:19> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0ccef0 <col:19> 'int' 16756655))
        (ImplicitCastExpr 0xa0ce708 <col:29> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0ccf08 <col:29> 'int' 16756695))
        (ImplicitCastExpr 0xa0ce718 <col:39> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0ccf20 <col:39> 'int' 16756735))
        (ImplicitCastExpr 0xa0ce728 <col:49> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0ccf38 <col:49> 'int' 16766720))
        (ImplicitCastExpr 0xa0ce738 <col:59> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0ccf50 <col:59> 'int' 16766815))
        (ImplicitCastExpr 0xa0ce748 <col:69> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0ccf68 <col:69> 'int' 16766855))
        (ImplicitCastExpr 0xa0ce758 <col:79> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0ccf80 <col:79> 'int' 16766895))
        (ImplicitCastExpr 0xa0ce768 <line:290:9> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0ccf98 <col:9> 'int' 16766935))
        (ImplicitCastExpr 0xa0ce778 <col:19> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0ccfb0 <col:19> 'int' 16766975))
        (ImplicitCastExpr 0xa0ce788 <col:29> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0ccfc8 <col:29> 'int' 16776960))
        (ImplicitCastExpr 0xa0ce798 <col:39> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0ccfe0 <col:39> 'int' 16777055))
        (ImplicitCastExpr 0xa0ce7a8 <col:49> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0ccff8 <col:49> 'int' 16777095))
        (ImplicitCastExpr 0xa0ce7b8 <col:59> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cd010 <col:59> 'int' 16777135))
        (ImplicitCastExpr 0xa0ce7c8 <col:69> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cd028 <col:69> 'int' 16777175))
        (ImplicitCastExpr 0xa0ce7d8 <col:79> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cd040 <col:79> 'int' 16777215))
        (ImplicitCastExpr 0xa0ce7e8 <line:291:9> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cd058 <col:9> 'int' 526344))
        (ImplicitCastExpr 0xa0ce7f8 <col:19> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cd070 <col:19> 'int' 1184274))
        (ImplicitCastExpr 0xa0ce808 <col:29> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cd088 <col:29> 'int' 1842204))
        (ImplicitCastExpr 0xa0ce818 <col:39> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cd0a0 <col:39> 'int' 2500134))
        (ImplicitCastExpr 0xa0ce828 <col:49> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cd0b8 <col:49> 'int' 3158064))
        (ImplicitCastExpr 0xa0ce838 <col:59> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cd0d0 <col:59> 'int' 3815994))
        (ImplicitCastExpr 0xa0ce848 <col:69> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cd0e8 <col:69> 'int' 4473924))
        (ImplicitCastExpr 0xa0ce858 <col:79> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cd100 <col:79> 'int' 5131854))
        (ImplicitCastExpr 0xa0ce868 <line:292:9> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cd118 <col:9> 'int' 5789784))
        (ImplicitCastExpr 0xa0ce878 <col:19> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cd130 <col:19> 'int' 6447714))
        (ImplicitCastExpr 0xa0ce888 <col:29> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cd148 <col:29> 'int' 7105644))
        (ImplicitCastExpr 0xa0ce898 <col:39> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cd160 <col:39> 'int' 7763574))
        (ImplicitCastExpr 0xa0ce8a8 <col:49> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cd178 <col:49> 'int' 8421504))
        (ImplicitCastExpr 0xa0ce8b8 <col:59> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cd190 <col:59> 'int' 9079434))
        (ImplicitCastExpr 0xa0ce8c8 <col:69> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cd1a8 <col:69> 'int' 9737364))
        (ImplicitCastExpr 0xa0ce8d8 <col:79> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cd1c0 <col:79> 'int' 10395294))
        (ImplicitCastExpr 0xa0ce8e8 <line:293:9> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cd1d8 <col:9> 'int' 11053224))
        (ImplicitCastExpr 0xa0ce8f8 <col:19> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cd1f0 <col:19> 'int' 11711154))
        (ImplicitCastExpr 0xa0ce908 <col:29> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cd208 <col:29> 'int' 12369084))
        (ImplicitCastExpr 0xa0ce918 <col:39> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cd220 <col:39> 'int' 13027014))
        (ImplicitCastExpr 0xa0ce928 <col:49> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cd238 <col:49> 'int' 13684944))
        (ImplicitCastExpr 0xa0ce938 <col:59> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cd250 <col:59> 'int' 14342874))
        (ImplicitCastExpr 0xa0ce948 <col:69> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cd268 <col:69> 'int' 15000804))
        (ImplicitCastExpr 0xa0ce958 <col:79> 'const uint32_t':'const unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cd280 <col:79> 'int' 15658734)))")
  (ReturnStmt 0xa0ceb40 <line:295:5, col:77>
    (ImplicitCastExpr 0xa0ceb30 <col:12, col:77> 'unsigned char' <IntegralCast>
      (BinaryOperator 0xa0ceb18 <col:12, col:77> 'int' '+'
        (IntegerLiteral 0xa0ce978 <col:12> 'int' 16)
        (ImplicitCastExpr 0xa0ceb08 <col:17, col:77> 'int' <IntegralCast>
          (CallExpr 0xa0ceac0 <col:17, col:77> 'unsigned char'
            (ImplicitCastExpr 0xa0ceab0 <col:17> 'unsigned char (*)(const unsigned char *, const uint32_t *, size_t)' <FunctionToPointerDecay>
              (DeclRefExpr 0xa0cea98 <col:17> 'unsigned char (const unsigned char *, const uint32_t *, size_t)' lvalue Function 0xa0aca80 'convert_color' 'unsigned char (const unsigned char *, const uint32_t *, size_t)'))
            (ImplicitCastExpr 0xa0ceae8 <col:31> 'const unsigned char *' <LValueToRValue>
              (DeclRefExpr 0xa0ce9c4 <col:31> 'const unsigned char *' lvalue ParmVar 0xa0cbaa0 'rgb' 'const unsigned char *'))
            (ImplicitCastExpr 0xa0ceaf8 <col:36> 'const uint32_t *' <ArrayToPointerDecay>
              (DeclRefExpr 0xa0ce9dc <col:36> 'const uint32_t [240]' lvalue Var 0xa0cbbe0 'kColors' 'const uint32_t [240]'))
            (BinaryOperator 0xa0cea80 <col:45, col:70> 'unsigned int' '/'
              (UnaryExprOrTypeTraitExpr 0xa0cea10 <col:45, col:52> 'unsigned int' sizeof 
                (DeclRefExpr 0xa0ce9f4 <col:52> 'const uint32_t [240]' lvalue Var 0xa0cbbe0 'kColors' 'const uint32_t [240]'))
              (UnaryExprOrTypeTraitExpr 0xa0cea68 <col:62, col:70> 'unsigned int' sizeof 
                (UnaryOperator 0xa0cea50 <col:69, col:70> 'const uint32_t':'const unsigned int' lvalue prefix '*'
                  (ImplicitCastExpr 0xa0cea40 <col:70> 'const uint32_t *' <ArrayToPointerDecay>
                    (DeclRefExpr 0xa0cea28 <col:70> 'const uint32_t [240]' lvalue Var 0xa0cbbe0 'kColors' 'const uint32_t [240]')))))))))))


unsigned char to_term256_index() const (CompoundStmt 0xa0cf048 <../codeBase/fish-shell-master/color.cpp:299:1, line:302:1>
  (ParenExpr 0xa0cef28 </usr/include/assert.h:92:3, line:94:75> 'void'
    (ConditionalOperator 0xa0cef08 <line:92:4, line:94:74> 'void'
      (ParenExpr 0xa0ceca8 <line:92:4, col:9> '_Bool'
        (BinaryOperator 0xa0cec90 <../codeBase/fish-shell-master/color.cpp:300:12, col:20> '_Bool' '=='
          (ImplicitCastExpr 0xa0cec70 <col:12> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa0cec60 <col:12> 'unsigned char' <LValueToRValue>
              (MemberExpr 0xa0cec28 <col:12> 'const unsigned char' lvalue bitfield ->type 0xa073360
                (CXXThisExpr 0xa0cec18 <col:12> 'const class rgb_color_t *' this))))
          (ImplicitCastExpr 0xa0cec80 <col:20> 'int' <IntegralCast>
            (DeclRefExpr 0xa0cec48 <col:20> 'enum rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:17:5>' EnumConstant 0xa073240 'type_rgb' 'enum rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:17:5>'))))
      (CXXStaticCastExpr 0xa0cece0 </usr/include/assert.h:40:29, line:93:27> 'void' static_cast<void> <ToVoid>
        (IntegerLiteral 0xa0cecc0 <col:26> 'int' 0))
      (CallExpr 0xa0cee98 <line:94:6, col:74> 'void'
        (ImplicitCastExpr 0xa0cee88 <col:6> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
          (DeclRefExpr 0xa0cee30 <col:6> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0xa03aef0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'))
        (ImplicitCastExpr 0xa0ceec8 <<scratch space>:141:1> 'const char *' <ArrayToPointerDecay>
          (StringLiteral 0xa0ced2c <col:1> 'const char [17]' lvalue "type == type_rgb"))
        (ImplicitCastExpr 0xa0ceed8 <line:142:1> 'const char *' <ArrayToPointerDecay>
          (StringLiteral 0xa0ced80 <col:1> 'const char [40]' lvalue "../codeBase/fish-shell-master/color.cpp"))
        (ImplicitCastExpr 0xa0ceee8 <line:143:1> 'unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cedc8 <col:1> 'int' 300))
        (ImplicitCastExpr 0xa0ceef8 </usr/include/assert.h:109:30> 'const char *' <ArrayToPointerDecay>
          (PredefinedExpr 0xa0cee20 <col:30> 'const char [52]' lvalue __PRETTY_FUNCTION__)))))
  (ReturnStmt 0xa0cf038 <../codeBase/fish-shell-master/color.cpp:301:5, col:42>
    (CallExpr 0xa0cf008 <col:12, col:42> 'unsigned char'
      (ImplicitCastExpr 0xa0ceff8 <col:12> 'unsigned char (*)(const unsigned char *)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0cefc8 <col:12> 'unsigned char (const unsigned char *)' lvalue Function 0xa0cbb00 'term256_color_for_rgb' 'unsigned char (const unsigned char *)'))
      (ImplicitCastExpr 0xa0cf028 <col:34, col:39> 'const unsigned char *' <ArrayToPointerDecay>
        (MemberExpr 0xa0cefa8 <col:34, col:39> 'unsigned char const[3]' lvalue .rgb 0xa0736e0
          (MemberExpr 0xa0cef88 <col:34> 'const union <anonymous union at ../codeBase/fish-shell-master/color.h:36:5>':'const union rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:36:5>' lvalue ->data 0xa073740
            (CXXThisExpr 0xa0cef78 <col:34> 'const class rgb_color_t *' this)))))))


unsigned char to_name_index() const (CompoundStmt 0xa0cf878 <../codeBase/fish-shell-master/color.cpp:305:1, line:320:1>
  (ParenExpr 0xa0cf4c8 </usr/include/assert.h:92:3, line:94:75> 'void'
    (ConditionalOperator 0xa0cf4a8 <line:92:4, line:94:74> 'void'
      (ParenExpr 0xa0cf250 <line:92:4, col:9> '_Bool'
        (BinaryOperator 0xa0cf238 <../codeBase/fish-shell-master/color.cpp:306:12, col:42> '_Bool' '||'
          (BinaryOperator 0xa0cf190 <col:12, col:20> '_Bool' '=='
            (ImplicitCastExpr 0xa0cf170 <col:12> 'int' <IntegralCast>
              (ImplicitCastExpr 0xa0cf160 <col:12> 'unsigned char' <LValueToRValue>
                (MemberExpr 0xa0cf128 <col:12> 'const unsigned char' lvalue bitfield ->type 0xa073360
                  (CXXThisExpr 0xa0cf118 <col:12> 'const class rgb_color_t *' this))))
            (ImplicitCastExpr 0xa0cf180 <col:20> 'int' <IntegralCast>
              (DeclRefExpr 0xa0cf148 <col:20> 'enum rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:17:5>' EnumConstant 0xa073200 'type_named' 'enum rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:17:5>')))
          (BinaryOperator 0xa0cf220 <col:34, col:42> '_Bool' '=='
            (ImplicitCastExpr 0xa0cf200 <col:34> 'int' <IntegralCast>
              (ImplicitCastExpr 0xa0cf1f0 <col:34> 'unsigned char' <LValueToRValue>
                (MemberExpr 0xa0cf1b8 <col:34> 'const unsigned char' lvalue bitfield ->type 0xa073360
                  (CXXThisExpr 0xa0cf1a8 <col:34> 'const class rgb_color_t *' this))))
            (ImplicitCastExpr 0xa0cf210 <col:42> 'int' <IntegralCast>
              (DeclRefExpr 0xa0cf1d8 <col:42> 'enum rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:17:5>' EnumConstant 0xa073240 'type_rgb' 'enum rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:17:5>')))))
      (CXXStaticCastExpr 0xa0cf288 </usr/include/assert.h:40:29, line:93:27> 'void' static_cast<void> <ToVoid>
        (IntegerLiteral 0xa0cf268 <col:26> 'int' 0))
      (CallExpr 0xa0cf438 <line:94:6, col:74> 'void'
        (ImplicitCastExpr 0xa0cf428 <col:6> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
          (DeclRefExpr 0xa0cf410 <col:6> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0xa03aef0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'))
        (ImplicitCastExpr 0xa0cf468 <<scratch space>:144:1> 'const char *' <ArrayToPointerDecay>
          (StringLiteral 0xa0cf320 <col:1> 'const char [39]' lvalue "type == type_named || type == type_rgb"))
        (ImplicitCastExpr 0xa0cf478 <line:145:1> 'const char *' <ArrayToPointerDecay>
          (StringLiteral 0xa0cf364 <col:1> 'const char [40]' lvalue "../codeBase/fish-shell-master/color.cpp"))
        (ImplicitCastExpr 0xa0cf488 <line:146:1> 'unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0cf3a8 <col:1> 'int' 306))
        (ImplicitCastExpr 0xa0cf498 </usr/include/assert.h:109:30> 'const char *' <ArrayToPointerDecay>
          (PredefinedExpr 0xa0cf400 <col:30> 'const char [49]' lvalue __PRETTY_FUNCTION__)))))
  (IfStmt 0xa0cf858 <../codeBase/fish-shell-master/color.cpp:307:5, line:319:5>
    <<<NULL>>>
    (BinaryOperator 0xa0cf558 <line:307:9, col:17> '_Bool' '=='
      (ImplicitCastExpr 0xa0cf538 <col:9> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa0cf528 <col:9> 'unsigned char' <LValueToRValue>
          (MemberExpr 0xa0cf4f0 <col:9> 'const unsigned char' lvalue bitfield ->type 0xa073360
            (CXXThisExpr 0xa0cf4e0 <col:9> 'const class rgb_color_t *' this))))
      (ImplicitCastExpr 0xa0cf548 <col:17> 'int' <IntegralCast>
        (DeclRefExpr 0xa0cf510 <col:17> 'enum rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:17:5>' EnumConstant 0xa073200 'type_named' 'enum rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:17:5>')))
    (CompoundStmt 0xa0cf5e0 <line:308:5, line:310:5>
      (ReturnStmt 0xa0cf5d0 <line:309:9, col:21>
        (ImplicitCastExpr 0xa0cf5c0 <col:16, col:21> 'unsigned char' <LValueToRValue>
          (MemberExpr 0xa0cf5a0 <col:16, col:21> 'const unsigned char' lvalue .name_idx 0xa073650
            (MemberExpr 0xa0cf580 <col:16> 'const union <anonymous union at ../codeBase/fish-shell-master/color.h:36:5>':'const union rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:36:5>' lvalue ->data 0xa073740
              (CXXThisExpr 0xa0cf570 <col:16> 'const class rgb_color_t *' this))))))
    (IfStmt 0xa0cf838 <line:311:10, line:319:5>
      <<<NULL>>>
      (BinaryOperator 0xa0cf670 <line:311:14, col:22> '_Bool' '=='
        (ImplicitCastExpr 0xa0cf650 <col:14> 'int' <IntegralCast>
          (ImplicitCastExpr 0xa0cf640 <col:14> 'unsigned char' <LValueToRValue>
            (MemberExpr 0xa0cf608 <col:14> 'const unsigned char' lvalue bitfield ->type 0xa073360
              (CXXThisExpr 0xa0cf5f8 <col:14> 'const class rgb_color_t *' this))))
        (ImplicitCastExpr 0xa0cf660 <col:22> 'int' <IntegralCast>
          (DeclRefExpr 0xa0cf628 <col:22> 'enum rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:17:5>' EnumConstant 0xa073240 'type_rgb' 'enum rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:17:5>')))
      (CompoundStmt 0xa0cf778 <line:312:5, line:314:5>
        (ReturnStmt 0xa0cf768 <line:313:9, col:44>
          (CallExpr 0xa0cf738 <col:16, col:44> 'unsigned char'
            (ImplicitCastExpr 0xa0cf728 <col:16> 'unsigned char (*)(const unsigned char *)' <FunctionToPointerDecay>
              (DeclRefExpr 0xa0cf710 <col:16> 'unsigned char (const unsigned char *)' lvalue Function 0xa0cb570 'term8_color_for_rgb' 'unsigned char (const unsigned char *)'))
            (ImplicitCastExpr 0xa0cf758 <col:36, col:41> 'const unsigned char *' <ArrayToPointerDecay>
              (MemberExpr 0xa0cf6f0 <col:36, col:41> 'unsigned char const[3]' lvalue .rgb 0xa0736e0
                (MemberExpr 0xa0cf6d0 <col:36> 'const union <anonymous union at ../codeBase/fish-shell-master/color.h:36:5>':'const union rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:36:5>' lvalue ->data 0xa073740
                  (CXXThisExpr 0xa0cf6c0 <col:36> 'const class rgb_color_t *' this)))))))
      (CompoundStmt 0xa0cf820 <line:316:5, line:319:5>
        (ReturnStmt 0xa0cf810 <line:318:9, col:34>
          (CStyleCastExpr 0xa0cf7f8 <col:16, col:34> 'unsigned char' <NoOp>
            (ImplicitCastExpr 0xa0cf7e8 <col:31, col:34> 'unsigned char' <IntegralCast>
              (ParenExpr 0xa0cf7c0 <col:31, col:34> 'int'
                (UnaryOperator 0xa0cf7a8 <col:32, col:33> 'int' prefix '-'
                  (IntegerLiteral 0xa0cf790 <col:33> 'int' 1))))))))))


void parse(const wcstring &str) (CompoundStmt 0xa0cff28 <../codeBase/fish-shell-master/color.cpp:323:1, line:333:1>
  (DeclStmt 0xa0cf9e8 <line:324:5, col:25>
    0xa0cf9a0 "bool success =
      (CXXBoolLiteralExpr 0xa0cf9d8 <col:20> '_Bool' false)")
  (IfStmt 0xa0cfad0 <line:325:5, col:51>
    <<<NULL>>>
    (UnaryOperator 0xa0cfa20 <col:9, col:11> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa0cfa10 <col:11> '_Bool' <LValueToRValue>
        (DeclRefExpr 0xa0cf9f8 <col:11> '_Bool' lvalue Var 0xa0cf9a0 'success' '_Bool')))
    (BinaryOperator 0xa0cfab8 <col:20, col:51> '_Bool' lvalue '='
      (DeclRefExpr 0xa0cfa34 <col:20> '_Bool' lvalue Var 0xa0cf9a0 'success' '_Bool')
      (CXXMemberCallExpr 0xa0cfa98 <col:30, col:51> '_Bool'
        (MemberExpr 0xa0cfa60 <col:30> '<bound member function type>' ->try_parse_special 0xa0aaf90
          (CXXThisExpr 0xa0cfa50 <col:30> 'class rgb_color_t *' this))
        (DeclRefExpr 0xa0cfa80 <col:48> 'const wcstring':'const class std::basic_string<wchar_t>' lvalue ParmVar 0xa0cf8b0 'str' 'const wcstring &')))
    <<<NULL>>>)
  (IfStmt 0xa0cfbc8 <line:326:5, col:49>
    <<<NULL>>>
    (UnaryOperator 0xa0cfb18 <col:9, col:11> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa0cfb08 <col:11> '_Bool' <LValueToRValue>
        (DeclRefExpr 0xa0cfaec <col:11> '_Bool' lvalue Var 0xa0cf9a0 'success' '_Bool')))
    (BinaryOperator 0xa0cfbb0 <col:20, col:49> '_Bool' lvalue '='
      (DeclRefExpr 0xa0cfb2c <col:20> '_Bool' lvalue Var 0xa0cf9a0 'success' '_Bool')
      (CXXMemberCallExpr 0xa0cfb90 <col:30, col:49> '_Bool'
        (MemberExpr 0xa0cfb58 <col:30> '<bound member function type>' ->try_parse_named 0xa0c96c0
          (CXXThisExpr 0xa0cfb48 <col:30> 'class rgb_color_t *' this))
        (DeclRefExpr 0xa0cfb78 <col:46> 'const wcstring':'const class std::basic_string<wchar_t>' lvalue ParmVar 0xa0cf8b0 'str' 'const wcstring &')))
    <<<NULL>>>)
  (IfStmt 0xa0cfcc0 <line:327:5, col:47>
    <<<NULL>>>
    (UnaryOperator 0xa0cfc10 <col:9, col:11> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa0cfc00 <col:11> '_Bool' <LValueToRValue>
        (DeclRefExpr 0xa0cfbe4 <col:11> '_Bool' lvalue Var 0xa0cf9a0 'success' '_Bool')))
    (BinaryOperator 0xa0cfca8 <col:20, col:47> '_Bool' lvalue '='
      (DeclRefExpr 0xa0cfc24 <col:20> '_Bool' lvalue Var 0xa0cf9a0 'success' '_Bool')
      (CXXMemberCallExpr 0xa0cfc88 <col:30, col:47> '_Bool'
        (MemberExpr 0xa0cfc50 <col:30> '<bound member function type>' ->try_parse_rgb 0xa0ad9f0
          (CXXThisExpr 0xa0cfc40 <col:30> 'class rgb_color_t *' this))
        (DeclRefExpr 0xa0cfc70 <col:44> 'const wcstring':'const class std::basic_string<wchar_t>' lvalue ParmVar 0xa0cf8b0 'str' 'const wcstring &')))
    <<<NULL>>>)
  (IfStmt 0xa0cff08 <line:328:5, line:332:5>
    <<<NULL>>>
    (UnaryOperator 0xa0cfd08 <line:328:9, col:11> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa0cfcf8 <col:11> '_Bool' <LValueToRValue>
        (DeclRefExpr 0xa0cfcdc <col:11> '_Bool' lvalue Var 0xa0cf9a0 'success' '_Bool')))
    (CompoundStmt 0xa0cfef0 <line:329:5, line:332:5>
      (CallExpr 0xa0cfe38 <line:330:9, col:52> 'void'
        (ImplicitCastExpr 0xa0cfe28 <col:9> 'void (*)(void *, size_t) throw()' <FunctionToPointerDecay>
          (DeclRefExpr 0xa0cfe10 <col:9> 'void (void *, size_t) throw()' lvalue Function 0xa038810 'bzero' 'void (void *, size_t) throw()'))
        (ImplicitCastExpr 0xa0cfe70 <col:15, col:26> 'void *' <BitCast>
          (ImplicitCastExpr 0xa0cfe60 <col:15, col:26> 'unsigned char *' <ArrayToPointerDecay>
            (MemberExpr 0xa0cfd88 <col:15, col:26> 'unsigned char [3]' lvalue .rgb 0xa0736e0
              (MemberExpr 0xa0cfd68 <col:15, col:21> 'union <anonymous union at ../codeBase/fish-shell-master/color.h:36:5>':'union rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:36:5>' lvalue ->data 0xa073740
                (CXXThisExpr 0xa0cfd58 <col:15> 'class rgb_color_t *' this)))))
        (UnaryExprOrTypeTraitExpr 0xa0cfdf8 <col:31, col:49> 'unsigned int' sizeof 
          (MemberExpr 0xa0cfdd8 <col:38, col:49> 'unsigned char [3]' lvalue .rgb 0xa0736e0
            (MemberExpr 0xa0cfdb8 <col:38, col:44> 'union <anonymous union at ../codeBase/fish-shell-master/color.h:36:5>':'union rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:36:5>' lvalue ->data 0xa073740
              (CXXThisExpr 0xa0cfda8 <col:38> 'class rgb_color_t *' this)))))
      (BinaryOperator 0xa0cfed8 <line:331:9, col:22> 'unsigned char' lvalue bitfield '='
        (MemberExpr 0xa0cfe90 <col:9, col:15> 'unsigned char' lvalue bitfield ->type 0xa073360
          (CXXThisExpr 0xa0cfe80 <col:9> 'class rgb_color_t *' this))
        (ImplicitCastExpr 0xa0cfec8 <col:22> 'unsigned char' <IntegralCast>
          (DeclRefExpr 0xa0cfeb0 <col:22> 'enum rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:17:5>' EnumConstant 0xa0731c0 'type_none' 'enum rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:17:5>'))))
    <<<NULL>>>))


class rgb_color_t::rgb_color_t(const wcstring &str) : data() (CompoundStmt 0xa0d0128 <../codeBase/fish-shell-master/color.cpp:336:1, line:338:1>
  (CXXMemberCallExpr 0xa0d0108 <line:337:5, col:20> 'void'
    (MemberExpr 0xa0d00d0 <col:5, col:11> '<bound member function type>' ->parse 0xa0cf900
      (CXXThisExpr 0xa0d00c0 <col:5> 'class rgb_color_t *' this))
    (DeclRefExpr 0xa0d00f0 <col:17> 'const wcstring':'const class std::basic_string<wchar_t>' lvalue ParmVar 0xa0cff80 'str' 'const wcstring &')))


class rgb_color_t::rgb_color_t(const std::string &str) : data() (CompoundStmt 0xa0d0fa8 <../codeBase/fish-shell-master/color.cpp:341:1, line:343:1>
  (ExprWithCleanups 0xa0d0f88 <line:342:5, col:34> 'void'
    (CXXTemporary 0xa0d0f30)
    (CXXMemberCallExpr 0xa0d0f48 <col:5, col:34> 'void'
      (MemberExpr 0xa0d0e30 <col:5, col:11> '<bound member function type>' ->parse 0xa0cf900
        (CXXThisExpr 0xa0d0e20 <col:5> 'class rgb_color_t *' this))
      (MaterializeTemporaryExpr 0xa0d0f78 <col:17, col:33> 'const wcstring':'const class std::basic_string<wchar_t>' lvalue
        (ImplicitCastExpr 0xa0d0f68 <col:17, col:33> 'const wcstring':'const class std::basic_string<wchar_t>' <NoOp>
          (CXXBindTemporaryExpr 0xa0d0f38 <col:17, col:33> 'wcstring':'class std::basic_string<wchar_t>' (CXXTemporary 0xa0d0f30)
            (CallExpr 0xa0d0f08 <col:17, col:33> 'wcstring':'class std::basic_string<wchar_t>'
              (ImplicitCastExpr 0xa0d0ef8 <col:17> 'wcstring (*)(const std::string &)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa0d0ea4 <col:17> 'wcstring (const std::string &)' lvalue Function 0xa03c980 'str2wcstring' 'wcstring (const std::string &)'))
              (DeclRefExpr 0xa0d0e8c <col:30> 'const std::string':'const class std::basic_string<char>' lvalue ParmVar 0xa0d01a0 'str' 'const std::string &'))))))))


wcstring description() const (CompoundStmt 0xa0d23a0 <../codeBase/fish-shell-master/color.cpp:346:1, line:365:1>
  (SwitchStmt 0xa0d10c8 <line:347:5, line:364:5>
    <<<NULL>>>
    (ImplicitCastExpr 0xa0d10b8 <line:347:13> 'int' <IntegralCast>
      (ImplicitCastExpr 0xa0d10a8 <col:13> 'unsigned char' <LValueToRValue>
        (MemberExpr 0xa0d1088 <col:13> 'const unsigned char' lvalue bitfield ->type 0xa073360
          (CXXThisExpr 0xa0d1078 <col:13> 'const class rgb_color_t *' this))))
    (CompoundStmt 0xa0d2310 <line:348:5, line:364:5>
      (CaseStmt 0xa0d1100 <line:349:9, line:350:20>
        (ImplicitCastExpr 0xa0d2390 <line:349:14> 'int' <IntegralCast>
          (DeclRefExpr 0xa0d10e4 <col:14> 'enum rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:17:5>' EnumConstant 0xa0731c0 'type_none' 'enum rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:17:5>'))
        <<<NULL>>>
        (ReturnStmt 0xa0d12c0 <line:350:13, col:20>
          (ExprWithCleanups 0xa0d12a0 <col:13, col:20> 'wcstring':'class std::basic_string<wchar_t>'
            (CXXTemporary 0xa0d1190)
            (CXXTemporary 0xa0d1230)
            (CXXConstructExpr 0xa0d1278 <col:13, col:20> 'wcstring':'class std::basic_string<wchar_t>''void (const class std::basic_string<wchar_t> &)' elidable
              (MaterializeTemporaryExpr 0xa0d1268 <col:20> 'const class std::basic_string<wchar_t>' lvalue
                (ImplicitCastExpr 0xa0d1258 <col:20> 'const class std::basic_string<wchar_t>' <NoOp>
                  (ImplicitCastExpr 0xa0d1248 <col:20> 'wcstring':'class std::basic_string<wchar_t>' <ConstructorConversion>
                    (CXXBindTemporaryExpr 0xa0d1238 <col:20> 'wcstring':'class std::basic_string<wchar_t>' (CXXTemporary 0xa0d1230)
                      (CXXConstructExpr 0xa0d1208 <col:20> 'wcstring':'class std::basic_string<wchar_t>''void (const wchar_t *, const class std::allocator<wchar_t> &)'
                        (ImplicitCastExpr 0xa0d1150 <col:20> 'const wchar_t *' <ArrayToPointerDecay>
                          (StringLiteral 0xa0d1120 <col:20> 'const wchar_t [5]' lvalue L"n\000\000\000o\000\000\000n\000\000\000e\000\000\000"))
                        (CXXDefaultArgExpr 0xa0d11f0 <<invalid sloc>> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue))))))))))
      (CaseStmt 0xa0d12e8 <line:351:9, line:352:106>
        (ImplicitCastExpr 0xa0d2380 <line:351:14> 'int' <IntegralCast>
          (DeclRefExpr 0xa0d12d0 <col:14> 'enum rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:17:5>' EnumConstant 0xa073200 'type_named' 'enum rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:17:5>'))
        <<<NULL>>>
        (ReturnStmt 0xa0d1680 <line:352:13, col:106>
          (ExprWithCleanups 0xa0d1660 <col:20, col:106> 'wcstring':'class std::basic_string<wchar_t>'
            (CXXTemporary 0xa0d1600)
            (CXXConstructExpr 0xa0d1638 <col:20, col:106> 'wcstring':'class std::basic_string<wchar_t>''void (const class std::basic_string<wchar_t> &)' elidable
              (MaterializeTemporaryExpr 0xa0d1628 <col:20, col:106> 'const class std::basic_string<wchar_t>' lvalue
                (ImplicitCastExpr 0xa0d1618 <col:20, col:106> 'const class std::basic_string<wchar_t>' <NoOp>
                  (CXXBindTemporaryExpr 0xa0d1608 <col:20, col:106> 'wcstring':'class std::basic_string<wchar_t>' (CXXTemporary 0xa0d1600)
                    (CallExpr 0xa0d15c8 <col:20, col:106> 'wcstring':'class std::basic_string<wchar_t>'
                      (ImplicitCastExpr 0xa0d15b8 <col:20> 'wcstring (*)(const wchar_t *, ...)' <FunctionToPointerDecay>
                        (DeclRefExpr 0xa0d1564 <col:20> 'wcstring (const wchar_t *, ...)' lvalue Function 0xa070620 'format_string' 'wcstring (const wchar_t *, ...)'))
                      (ImplicitCastExpr 0xa0d15f0 <col:34> 'const wchar_t *' <ArrayToPointerDecay>
                        (StringLiteral 0xa0d1380 <col:34> 'const wchar_t [15]' lvalue L"n\000\000\000a\000\000\000m\000\000\000e\000\000\000d\000\000\000(\000\000\000%\000\000\000d\000\000\000:\000\000\000 \000\000\000%\000\000\000l\000\000\000s\000\000\000)\000\000\000"))
                      (CStyleCastExpr 0xa0d1458 <col:53, col:63> 'int' <NoOp>
                        (ImplicitCastExpr 0xa0d1448 <col:58, col:63> 'int' <IntegralCast>
                          (ImplicitCastExpr 0xa0d1438 <col:58, col:63> 'unsigned char' <LValueToRValue>
                            (MemberExpr 0xa0d1408 <col:58, col:63> 'const unsigned char' lvalue .name_idx 0xa073650
                              (MemberExpr 0xa0d13e8 <col:58> 'const union <anonymous union at ../codeBase/fish-shell-master/color.h:36:5>':'const union rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:36:5>' lvalue ->data 0xa073740
                                (CXXThisExpr 0xa0d13d8 <col:58> 'const class rgb_color_t *' this))))))
                      (CallExpr 0xa0d1538 <col:73, col:105> 'const wchar_t *'
                        (ImplicitCastExpr 0xa0d1528 <col:73> 'const wchar_t *(*)(unsigned char)' <FunctionToPointerDecay>
                          (DeclRefExpr 0xa0d14f8 <col:73> 'const wchar_t *(unsigned char)' lvalue Function 0xa0c9f00 'name_for_color_idx' 'const wchar_t *(unsigned char)'))
                        (ImplicitCastExpr 0xa0d1558 <col:92, col:97> 'unsigned char' <LValueToRValue>
                          (MemberExpr 0xa0d14d8 <col:92, col:97> 'const unsigned char' lvalue .name_idx 0xa073650
                            (MemberExpr 0xa0d14b8 <col:92> 'const union <anonymous union at ../codeBase/fish-shell-master/color.h:36:5>':'const union rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:36:5>' lvalue ->data 0xa073740
                              (CXXThisExpr 0xa0d14a8 <col:92> 'const class rgb_color_t *' this)))))))))))))
      (CaseStmt 0xa0d16a8 <line:353:9, line:354:95>
        (ImplicitCastExpr 0xa0d2370 <line:353:14> 'int' <IntegralCast>
          (DeclRefExpr 0xa0d1690 <col:14> 'enum rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:17:5>' EnumConstant 0xa073240 'type_rgb' 'enum rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:17:5>'))
        <<<NULL>>>
        (ReturnStmt 0xa0d1aa0 <line:354:13, col:95>
          (ExprWithCleanups 0xa0d1a80 <col:20, col:95> 'wcstring':'class std::basic_string<wchar_t>'
            (CXXTemporary 0xa0d1a20)
            (CXXConstructExpr 0xa0d1a58 <col:20, col:95> 'wcstring':'class std::basic_string<wchar_t>''void (const class std::basic_string<wchar_t> &)' elidable
              (MaterializeTemporaryExpr 0xa0d1a48 <col:20, col:95> 'const class std::basic_string<wchar_t>' lvalue
                (ImplicitCastExpr 0xa0d1a38 <col:20, col:95> 'const class std::basic_string<wchar_t>' <NoOp>
                  (CXXBindTemporaryExpr 0xa0d1a28 <col:20, col:95> 'wcstring':'class std::basic_string<wchar_t>' (CXXTemporary 0xa0d1a20)
                    (CallExpr 0xa0d1980 <col:20, col:95> 'wcstring':'class std::basic_string<wchar_t>'
                      (ImplicitCastExpr 0xa0d1970 <col:20> 'wcstring (*)(const wchar_t *, ...)' <FunctionToPointerDecay>
                        (DeclRefExpr 0xa0d1954 <col:20> 'wcstring (const wchar_t *, ...)' lvalue Function 0xa070620 'format_string' 'wcstring (const wchar_t *, ...)'))
                      (ImplicitCastExpr 0xa0d19b0 <col:34> 'const wchar_t *' <ArrayToPointerDecay>
                        (StringLiteral 0xa0d1740 <col:34> 'const wchar_t [20]' lvalue L"r\000\000\000g\000\000\000b\000\000\000(\000\000\0000\000\000\000x\000\000\000%\000\000\0000\000\000\0002\000\000\000x\000\000\000%\000\000\0000\000\000\0002\000\000\000x\000\000\000%\000\000\0000\000\000\0002\000\000\000x\000\000\000)\000\000\000"))
                      (ImplicitCastExpr 0xa0d19d0 <col:58, col:68> 'int' <IntegralCast>
                        (ImplicitCastExpr 0xa0d19c0 <col:58, col:68> 'unsigned char' <LValueToRValue>
                          (ArraySubscriptExpr 0xa0d1820 <col:58, col:68> 'const unsigned char' lvalue
                            (ImplicitCastExpr 0xa0d1810 <col:58, col:63> 'const unsigned char *' <ArrayToPointerDecay>
                              (MemberExpr 0xa0d17d8 <col:58, col:63> 'unsigned char const[3]' lvalue .rgb 0xa0736e0
                                (MemberExpr 0xa0d17b8 <col:58> 'const union <anonymous union at ../codeBase/fish-shell-master/color.h:36:5>':'const union rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:36:5>' lvalue ->data 0xa073740
                                  (CXXThisExpr 0xa0d17a8 <col:58> 'const class rgb_color_t *' this))))
                            (IntegerLiteral 0xa0d17f8 <col:67> 'int' 0))))
                      (ImplicitCastExpr 0xa0d19f0 <col:71, col:81> 'int' <IntegralCast>
                        (ImplicitCastExpr 0xa0d19e0 <col:71, col:81> 'unsigned char' <LValueToRValue>
                          (ArraySubscriptExpr 0xa0d18b0 <col:71, col:81> 'const unsigned char' lvalue
                            (ImplicitCastExpr 0xa0d18a0 <col:71, col:76> 'const unsigned char *' <ArrayToPointerDecay>
                              (MemberExpr 0xa0d1868 <col:71, col:76> 'unsigned char const[3]' lvalue .rgb 0xa0736e0
                                (MemberExpr 0xa0d1848 <col:71> 'const union <anonymous union at ../codeBase/fish-shell-master/color.h:36:5>':'const union rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:36:5>' lvalue ->data 0xa073740
                                  (CXXThisExpr 0xa0d1838 <col:71> 'const class rgb_color_t *' this))))
                            (IntegerLiteral 0xa0d1888 <col:80> 'int' 1))))
                      (ImplicitCastExpr 0xa0d1a10 <col:84, col:94> 'int' <IntegralCast>
                        (ImplicitCastExpr 0xa0d1a00 <col:84, col:94> 'unsigned char' <LValueToRValue>
                          (ArraySubscriptExpr 0xa0d1940 <col:84, col:94> 'const unsigned char' lvalue
                            (ImplicitCastExpr 0xa0d1930 <col:84, col:89> 'const unsigned char *' <ArrayToPointerDecay>
                              (MemberExpr 0xa0d18f8 <col:84, col:89> 'unsigned char const[3]' lvalue .rgb 0xa0736e0
                                (MemberExpr 0xa0d18d8 <col:84> 'const union <anonymous union at ../codeBase/fish-shell-master/color.h:36:5>':'const union rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:36:5>' lvalue ->data 0xa073740
                                  (CXXThisExpr 0xa0d18c8 <col:84> 'const class rgb_color_t *' this))))
                            (IntegerLiteral 0xa0d1918 <col:93> 'int' 2))))))))))))
      (CaseStmt 0xa0d1ac8 <line:355:9, line:356:20>
        (ImplicitCastExpr 0xa0d2360 <line:355:14> 'int' <IntegralCast>
          (DeclRefExpr 0xa0d1ab0 <col:14> 'enum rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:17:5>' EnumConstant 0xa0732c0 'type_reset' 'enum rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:17:5>'))
        <<<NULL>>>
        (ReturnStmt 0xa0d1c90 <line:356:13, col:20>
          (ExprWithCleanups 0xa0d1c70 <col:13, col:20> 'wcstring':'class std::basic_string<wchar_t>'
            (CXXTemporary 0xa0d1b60)
            (CXXTemporary 0xa0d1c00)
            (CXXConstructExpr 0xa0d1c48 <col:13, col:20> 'wcstring':'class std::basic_string<wchar_t>''void (const class std::basic_string<wchar_t> &)' elidable
              (MaterializeTemporaryExpr 0xa0d1c38 <col:20> 'const class std::basic_string<wchar_t>' lvalue
                (ImplicitCastExpr 0xa0d1c28 <col:20> 'const class std::basic_string<wchar_t>' <NoOp>
                  (ImplicitCastExpr 0xa0d1c18 <col:20> 'wcstring':'class std::basic_string<wchar_t>' <ConstructorConversion>
                    (CXXBindTemporaryExpr 0xa0d1c08 <col:20> 'wcstring':'class std::basic_string<wchar_t>' (CXXTemporary 0xa0d1c00)
                      (CXXConstructExpr 0xa0d1bd8 <col:20> 'wcstring':'class std::basic_string<wchar_t>''void (const wchar_t *, const class std::allocator<wchar_t> &)'
                        (ImplicitCastExpr 0xa0d1b18 <col:20> 'const wchar_t *' <ArrayToPointerDecay>
                          (StringLiteral 0xa0d1ae8 <col:20> 'const wchar_t [6]' lvalue L"r\000\000\000e\000\000\000s\000\000\000e\000\000\000t\000\000\000"))
                        (CXXDefaultArgExpr 0xa0d1bc0 <<invalid sloc>> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue))))))))))
      (CaseStmt 0xa0d1cb8 <line:357:9, line:358:20>
        (ImplicitCastExpr 0xa0d2350 <line:357:14> 'int' <IntegralCast>
          (DeclRefExpr 0xa0d1ca0 <col:14> 'enum rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:17:5>' EnumConstant 0xa073280 'type_normal' 'enum rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:17:5>'))
        <<<NULL>>>
        (ReturnStmt 0xa0d1e80 <line:358:13, col:20>
          (ExprWithCleanups 0xa0d1e60 <col:13, col:20> 'wcstring':'class std::basic_string<wchar_t>'
            (CXXTemporary 0xa0d1d50)
            (CXXTemporary 0xa0d1df0)
            (CXXConstructExpr 0xa0d1e38 <col:13, col:20> 'wcstring':'class std::basic_string<wchar_t>''void (const class std::basic_string<wchar_t> &)' elidable
              (MaterializeTemporaryExpr 0xa0d1e28 <col:20> 'const class std::basic_string<wchar_t>' lvalue
                (ImplicitCastExpr 0xa0d1e18 <col:20> 'const class std::basic_string<wchar_t>' <NoOp>
                  (ImplicitCastExpr 0xa0d1e08 <col:20> 'wcstring':'class std::basic_string<wchar_t>' <ConstructorConversion>
                    (CXXBindTemporaryExpr 0xa0d1df8 <col:20> 'wcstring':'class std::basic_string<wchar_t>' (CXXTemporary 0xa0d1df0)
                      (CXXConstructExpr 0xa0d1dc8 <col:20> 'wcstring':'class std::basic_string<wchar_t>''void (const wchar_t *, const class std::allocator<wchar_t> &)'
                        (ImplicitCastExpr 0xa0d1d10 <col:20> 'const wchar_t *' <ArrayToPointerDecay>
                          (StringLiteral 0xa0d1cd8 <col:20> 'const wchar_t [7]' lvalue L"n\000\000\000o\000\000\000r\000\000\000m\000\000\000a\000\000\000l\000\000\000"))
                        (CXXDefaultArgExpr 0xa0d1db0 <<invalid sloc>> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue))))))))))
      (CaseStmt 0xa0d1ea8 <line:359:9, line:360:20>
        (ImplicitCastExpr 0xa0d2340 <line:359:14> 'int' <IntegralCast>
          (DeclRefExpr 0xa0d1e90 <col:14> 'enum rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:17:5>' EnumConstant 0xa073300 'type_ignore' 'enum rgb_color_t::<anonymous at ../codeBase/fish-shell-master/color.h:17:5>'))
        <<<NULL>>>
        (ReturnStmt 0xa0d2070 <line:360:13, col:20>
          (ExprWithCleanups 0xa0d2050 <col:13, col:20> 'wcstring':'class std::basic_string<wchar_t>'
            (CXXTemporary 0xa0d1f40)
            (CXXTemporary 0xa0d1fe0)
            (CXXConstructExpr 0xa0d2028 <col:13, col:20> 'wcstring':'class std::basic_string<wchar_t>''void (const class std::basic_string<wchar_t> &)' elidable
              (MaterializeTemporaryExpr 0xa0d2018 <col:20> 'const class std::basic_string<wchar_t>' lvalue
                (ImplicitCastExpr 0xa0d2008 <col:20> 'const class std::basic_string<wchar_t>' <NoOp>
                  (ImplicitCastExpr 0xa0d1ff8 <col:20> 'wcstring':'class std::basic_string<wchar_t>' <ConstructorConversion>
                    (CXXBindTemporaryExpr 0xa0d1fe8 <col:20> 'wcstring':'class std::basic_string<wchar_t>' (CXXTemporary 0xa0d1fe0)
                      (CXXConstructExpr 0xa0d1fb8 <col:20> 'wcstring':'class std::basic_string<wchar_t>''void (const wchar_t *, const class std::allocator<wchar_t> &)'
                        (ImplicitCastExpr 0xa0d1f00 <col:20> 'const wchar_t *' <ArrayToPointerDecay>
                          (StringLiteral 0xa0d1ec8 <col:20> 'const wchar_t [7]' lvalue L"i\000\000\000g\000\000\000n\000\000\000o\000\000\000r\000\000\000e\000\000\000"))
                        (CXXDefaultArgExpr 0xa0d1fa0 <<invalid sloc>> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue))))))))))
      (DefaultStmt 0xa0d2118 <line:361:9, line:362:19>
        (CallExpr 0xa0d20f8 <col:13, col:19> 'void'
          (ImplicitCastExpr 0xa0d20e8 <col:13> 'void (*)(void) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
            (DeclRefExpr 0xa0d20b4 <col:13> 'void (void) __attribute__((noreturn)) throw()' lvalue Function 0x9b2b190 'abort' 'void (void) __attribute__((noreturn)) throw()'))))
      (ReturnStmt 0xa0d2300 <line:363:13, col:20>
        (ExprWithCleanups 0xa0d22e0 <col:13, col:20> 'wcstring':'class std::basic_string<wchar_t>'
          (CXXTemporary 0xa0d21d0)
          (CXXTemporary 0xa0d2270)
          (CXXConstructExpr 0xa0d22b8 <col:13, col:20> 'wcstring':'class std::basic_string<wchar_t>''void (const class std::basic_string<wchar_t> &)' elidable
            (MaterializeTemporaryExpr 0xa0d22a8 <col:20> 'const class std::basic_string<wchar_t>' lvalue
              (ImplicitCastExpr 0xa0d2298 <col:20> 'const class std::basic_string<wchar_t>' <NoOp>
                (ImplicitCastExpr 0xa0d2288 <col:20> 'wcstring':'class std::basic_string<wchar_t>' <ConstructorConversion>
                  (CXXBindTemporaryExpr 0xa0d2278 <col:20> 'wcstring':'class std::basic_string<wchar_t>' (CXXTemporary 0xa0d2270)
                    (CXXConstructExpr 0xa0d2248 <col:20> 'wcstring':'class std::basic_string<wchar_t>''void (const wchar_t *, const class std::allocator<wchar_t> &)'
                      (ImplicitCastExpr 0xa0d2190 <col:20> 'const wchar_t *' <ArrayToPointerDecay>
                        (StringLiteral 0xa0d2170 <col:20> 'const wchar_t [1]' lvalue L""))
                      (CXXDefaultArgExpr 0xa0d2230 <<invalid sloc>> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue))))))))))))


